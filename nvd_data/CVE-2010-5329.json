{
  "cve_id": "CVE-2010-5329",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
    "related_commits": [
      "fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "fc0a80798576f80ca10b3f6c9c7097f12fd1d64e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "commit_date": "2010-07-12T14:09:41Z",
      "author": {
        "login": "pinchartl",
        "type": "User",
        "stats": {
          "total_commits": 2357,
          "average_weekly_commits": 1.9790092359361882,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 383
        }
      },
      "commit_message": {
        "title": "[media] v4l: Share code between video_usercopy and video_ioctl2",
        "length": 523,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 109,
        "additions": 11,
        "deletions": 98
      },
      "files": [
        {
          "filename": "drivers/media/video/v4l2-ioctl.c",
          "status": "modified",
          "additions": 11,
          "deletions": 98,
          "patch": "@@ -294,101 +294,6 @@ void v4l_printk_ioctl(unsigned int cmd)\n }\n EXPORT_SYMBOL(v4l_printk_ioctl);\n \n-/*\n- * helper function -- handles userspace copying for ioctl arguments\n- * Obsolete usercopy function - Should be removed soon\n- */\n-long\n-video_usercopy(struct file *file, unsigned int cmd, unsigned long arg,\n-\t\tv4l2_kioctl func)\n-{\n-\tchar\tsbuf[128];\n-\tvoid    *mbuf = NULL;\n-\tvoid\t*parg = NULL;\n-\tlong\terr  = -EINVAL;\n-\tint     is_ext_ctrl;\n-\tsize_t  ctrls_size = 0;\n-\tvoid __user *user_ptr = NULL;\n-\n-\tis_ext_ctrl = (cmd == VIDIOC_S_EXT_CTRLS || cmd == VIDIOC_G_EXT_CTRLS ||\n-\t\t       cmd == VIDIOC_TRY_EXT_CTRLS);\n-\n-\t/*  Copy arguments into temp kernel buffer  */\n-\tswitch (_IOC_DIR(cmd)) {\n-\tcase _IOC_NONE:\n-\t\tparg = NULL;\n-\t\tbreak;\n-\tcase _IOC_READ:\n-\tcase _IOC_WRITE:\n-\tcase (_IOC_WRITE | _IOC_READ):\n-\t\tif (_IOC_SIZE(cmd) <= sizeof(sbuf)) {\n-\t\t\tparg = sbuf;\n-\t\t} else {\n-\t\t\t/* too big to allocate from stack */\n-\t\t\tmbuf = kmalloc(_IOC_SIZE(cmd), GFP_KERNEL);\n-\t\t\tif (NULL == mbuf)\n-\t\t\t\treturn -ENOMEM;\n-\t\t\tparg = mbuf;\n-\t\t}\n-\n-\t\terr = -EFAULT;\n-\t\tif (_IOC_DIR(cmd) & _IOC_WRITE)\n-\t\t\tif (copy_from_user(parg, (void __user *)arg, _IOC_SIZE(cmd)))\n-\t\t\t\tgoto out;\n-\t\tbreak;\n-\t}\n-\tif (is_ext_ctrl) {\n-\t\tstruct v4l2_ext_controls *p = parg;\n-\n-\t\t/* In case of an error, tell the caller that it wasn't\n-\t\t   a specific control that caused it. */\n-\t\tp->error_idx = p->count;\n-\t\tuser_ptr = (void __user *)p->controls;\n-\t\tif (p->count) {\n-\t\t\tctrls_size = sizeof(struct v4l2_ext_control) * p->count;\n-\t\t\t/* Note: v4l2_ext_controls fits in sbuf[] so mbuf is still NULL. */\n-\t\t\tmbuf = kmalloc(ctrls_size, GFP_KERNEL);\n-\t\t\terr = -ENOMEM;\n-\t\t\tif (NULL == mbuf)\n-\t\t\t\tgoto out_ext_ctrl;\n-\t\t\terr = -EFAULT;\n-\t\t\tif (copy_from_user(mbuf, user_ptr, ctrls_size))\n-\t\t\t\tgoto out_ext_ctrl;\n-\t\t\tp->controls = mbuf;\n-\t\t}\n-\t}\n-\n-\t/* call driver */\n-\terr = func(file, cmd, parg);\n-\tif (err == -ENOIOCTLCMD)\n-\t\terr = -EINVAL;\n-\tif (is_ext_ctrl) {\n-\t\tstruct v4l2_ext_controls *p = parg;\n-\n-\t\tp->controls = (void *)user_ptr;\n-\t\tif (p->count && err == 0 && copy_to_user(user_ptr, mbuf, ctrls_size))\n-\t\t\terr = -EFAULT;\n-\t\tgoto out_ext_ctrl;\n-\t}\n-\tif (err < 0)\n-\t\tgoto out;\n-\n-out_ext_ctrl:\n-\t/*  Copy results into user buffer  */\n-\tswitch (_IOC_DIR(cmd)) {\n-\tcase _IOC_READ:\n-\tcase (_IOC_WRITE | _IOC_READ):\n-\t\tif (copy_to_user((void __user *)arg, parg, _IOC_SIZE(cmd)))\n-\t\t\terr = -EFAULT;\n-\t\tbreak;\n-\t}\n-\n-out:\n-\tkfree(mbuf);\n-\treturn err;\n-}\n-EXPORT_SYMBOL(video_usercopy);\n-\n static void dbgbuf(unsigned int cmd, struct video_device *vfd,\n \t\t\t\t\tstruct v4l2_buffer *p)\n {\n@@ -2332,8 +2237,9 @@ static int check_array_args(unsigned int cmd, void *parg, size_t *array_size,\n \treturn ret;\n }\n \n-long video_ioctl2(struct file *file,\n-\t       unsigned int cmd, unsigned long arg)\n+long\n+video_usercopy(struct file *file, unsigned int cmd, unsigned long arg,\n+\t       v4l2_kioctl func)\n {\n \tchar\tsbuf[128];\n \tvoid    *mbuf = NULL;\n@@ -2395,7 +2301,7 @@ long video_ioctl2(struct file *file,\n \t}\n \n \t/* Handles IOCTL */\n-\terr = __video_do_ioctl(file, cmd, parg);\n+\terr = func(file, cmd, parg);\n \tif (err == -ENOIOCTLCMD)\n \t\terr = -EINVAL;\n \n@@ -2422,4 +2328,11 @@ long video_ioctl2(struct file *file,\n \tkfree(mbuf);\n \treturn err;\n }\n+EXPORT_SYMBOL(video_usercopy);\n+\n+long video_ioctl2(struct file *file,\n+\t       unsigned int cmd, unsigned long arg)\n+{\n+\treturn video_usercopy(file, cmd, arg, __video_do_ioctl);\n+}\n EXPORT_SYMBOL(video_ioctl2);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-399",
    "description": "The video_usercopy function in drivers/media/video/v4l2-ioctl.c in the Linux kernel before 2.6.39 relies on the count value of a v4l2_ext_controls data structure to determine a kmalloc size, which might allow local users to cause a denial of service (memory consumption) via a large value.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-04-24T06:59:00.257",
    "last_modified": "2024-11-21T01:23:03.587",
    "fix_date": "2010-07-12T14:09:41Z"
  },
  "references": [
    {
      "url": "http://linuxtv.org/irc/v4l/index.php?date=2010-07-29",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/02/08/4",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97986",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://linuxtv.org/irc/v4l/index.php?date=2010-07-29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/02/08/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97986",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.872993",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-26T06:54:23Z",
    "pushed_at": "2025-01-26T01:00:03Z",
    "size": 5386838,
    "stars": 186472,
    "forks": 54875,
    "open_issues": 441,
    "watchers": 186472,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1331921668,
      "Assembly": 9611819,
      "Shell": 5108035,
      "Python": 2992085,
      "Makefile": 2706967,
      "Perl": 1253833,
      "Rust": 816450,
      "Roff": 202277,
      "C++": 173994,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71397,
      "Awk": 69555,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10902,
      "M4": 3329,
      "MATLAB": 2482,
      "Clojure": 2442,
      "sed": 2433,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 48379,
      "avg_commits_per_week": 930.3653846153846,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:34:00.817711"
  }
}