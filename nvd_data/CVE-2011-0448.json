{
  "cve_id": "CVE-2011-0448",
  "github_data": {
    "repository": "rails/rails",
    "fix_commit": "354da43ab0a10b3b7b3f9cb0619aa562c3be8474",
    "related_commits": [
      "354da43ab0a10b3b7b3f9cb0619aa562c3be8474",
      "354da43ab0a10b3b7b3f9cb0619aa562c3be8474"
    ],
    "patch_url": "https://github.com/rails/rails/commit/354da43ab0a10b3b7b3f9cb0619aa562c3be8474.patch",
    "fix_commit_details": {
      "sha": "354da43ab0a10b3b7b3f9cb0619aa562c3be8474",
      "commit_date": "2010-12-07T17:49:37Z",
      "author": {
        "login": "tenderlove",
        "type": "User",
        "stats": {
          "total_commits": 3464,
          "average_weekly_commits": 3.2927756653992395,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 334
        }
      },
      "commit_message": {
        "title": "limit() should sanitize limit values",
        "length": 62,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 83,
        "additions": 55,
        "deletions": 28
      },
      "files": [
        {
          "filename": "activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb",
          "status": "modified",
          "additions": 15,
          "deletions": 15,
          "patch": "@@ -251,6 +251,21 @@ def limited_update_conditions(where_sql, quoted_table_name, quoted_primary_key)\n         \"WHERE #{quoted_primary_key} IN (SELECT #{quoted_primary_key} FROM #{quoted_table_name} #{where_sql})\"\n       end\n \n+      # Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n+      #\n+      # +limit+ may be anything that can evaluate to a string via #to_s. It\n+      # should look like an integer, or a comma-delimited list of integers.\n+      #\n+      # Returns the sanitized limit parameter, either as an integer, or as a\n+      # string which contains a comma-delimited list of integers.\n+      def sanitize_limit(limit)\n+        if limit.to_s =~ /,/\n+          Arel.sql limit.to_s.split(',').map{ |i| Integer(i) }.join(',')\n+        else\n+          Integer(limit)\n+        end\n+      end\n+\n       protected\n         # Returns an array of record hashes with the column names as keys and\n         # column values as values.\n@@ -274,21 +289,6 @@ def delete_sql(sql, name = nil)\n           update_sql(sql, name)\n         end\n \n-        # Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n-        #\n-        # +limit+ may be anything that can evaluate to a string via #to_s. It\n-        # should look like an integer, or a comma-delimited list of integers.\n-        #\n-        # Returns the sanitized limit parameter, either as an integer, or as a\n-        # string which contains a comma-delimited list of integers.\n-        def sanitize_limit(limit)\n-          if limit.to_s =~ /,/\n-            limit.to_s.split(',').map{ |i| i.to_i }.join(',')\n-          else\n-            limit.to_i\n-          end\n-        end\n-\n         # Send a rollback message to all records after they have been rolled back. If rollback\n         # is false, only rollback records since the last save point.\n         def rollback_transaction_records(rollback) #:nodoc"
        },
        {
          "filename": "activerecord/lib/active_record/relation/query_methods.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -180,7 +180,7 @@ def build_arel\n \n       arel = arel.having(*@having_values.uniq.reject{|h| h.blank?}) unless @having_values.empty?\n \n-      arel = arel.take(@limit_value) if @limit_value\n+      arel = arel.take(connection.sanitize_limit(@limit_value)) if @limit_value\n       arel = arel.skip(@offset_value) if @offset_value\n \n       arel = arel.group(*@group_values.uniq.reject{|g| g.blank?}) unless @group_values.empty?"
        },
        {
          "filename": "activerecord/test/cases/adapter_test.rb",
          "status": "modified",
          "additions": 0,
          "deletions": 12,
          "patch": "@@ -141,16 +141,4 @@ def test_foreign_key_violations_are_translated_to_specific_exception\n       end\n     end\n   end\n-\n-  def test_add_limit_offset_should_sanitize_sql_injection_for_limit_without_comas\n-    sql_inject = \"1 select * from schema\"\n-    assert_no_match(/schema/, @connection.add_limit_offset!(\"\", :limit=>sql_inject))\n-    assert_no_match(/schema/, @connection.add_limit_offset!(\"\", :limit=>sql_inject, :offset=>7))\n-  end\n-\n-  def test_add_limit_offset_should_sanitize_sql_injection_for_limit_with_comas\n-    sql_inject = \"1, 7 procedure help()\"\n-    assert_no_match(/procedure/, @connection.add_limit_offset!(\"\", :limit=>sql_inject))\n-    assert_no_match(/procedure/, @connection.add_limit_offset!(\"\", :limit=>sql_inject, :offset=>7))\n-  end\n end"
        },
        {
          "filename": "activerecord/test/cases/base_test.rb",
          "status": "modified",
          "additions": 39,
          "deletions": 0,
          "patch": "@@ -48,6 +48,45 @@ class Boolean < ActiveRecord::Base; end\n class BasicsTest < ActiveRecord::TestCase\n   fixtures :topics, :companies, :developers, :projects, :computers, :accounts, :minimalistics, 'warehouse-things', :authors, :categorizations, :categories, :posts\n \n+  def test_limit_with_comma\n+    assert_nothing_raised do\n+      Topic.limit(\"1,2\").all\n+    end\n+  end\n+\n+  def test_limit_without_comma\n+    assert_nothing_raised do\n+      assert_equal 1, Topic.limit(\"1\").all.length\n+    end\n+\n+    assert_nothing_raised do\n+      assert_equal 1, Topic.limit(1).all.length\n+    end\n+  end\n+\n+  def test_invalid_limit\n+    assert_raises(ArgumentError) do\n+      Topic.limit(\"asdfadf\").all\n+    end\n+  end\n+\n+  def test_limit_should_sanitize_sql_injection_for_limit_without_comas\n+    assert_raises(ArgumentError) do\n+      Topic.limit(\"1 select * from schema\").all\n+    end\n+  end\n+\n+  def test_limit_should_sanitize_sql_injection_for_limit_with_comas\n+    assert_raises(ArgumentError) do\n+      Topic.limit(\"1, 7 procedure help()\").all\n+    end\n+  end\n+\n+  def test_select_symbol\n+    topic_ids = Topic.select(:id).map(&:id).sort\n+    assert_equal Topic.find(:all).map(&:id).sort, topic_ids\n+  end\n+\n   def test_table_exists\n     assert !NonExistentTable.table_exists?\n     assert Topic.table_exists?"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20a0e51589536f26969ed799bdb866f31e7c746e",
            "date": "2025-01-14T19:10:01Z",
            "author_login": "gmcgibbon"
          },
          {
            "sha": "116a5e4309a189f9111c85334c418856b81cd91a",
            "date": "2025-01-14T17:51:07Z",
            "author_login": "rafaelfranca"
          },
          {
            "sha": "9b7bb7bdea55a6a30bc833e031101a672d4a2593",
            "date": "2025-01-14T17:45:10Z",
            "author_login": "fatkodima"
          },
          {
            "sha": "72d1704546e7d135950f24edb6c29bb2253aa6f8",
            "date": "2025-01-14T17:34:01Z",
            "author_login": "skipkayhil"
          },
          {
            "sha": "be42d45578d9f002cd3e6cd60ba0466392ae5d4a",
            "date": "2025-01-13T23:18:15Z",
            "author_login": "skipkayhil"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Ruby on Rails 3.0.x before 3.0.4 does not ensure that arguments to the limit function specify integer values, which makes it easier for remote attackers to conduct SQL injection attacks via a non-numeric argument.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2011-02-21T18:00:01.287",
    "last_modified": "2024-11-21T01:24:00.280",
    "fix_date": "2010-12-07T17:49:37Z"
  },
  "references": [
    {
      "url": "http://groups.google.com/group/rubyonrails-security/msg/4e19864cf6ad40ad?dmode=source&output=gplain",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/43278",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://securitytracker.com/id?1025063",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://www.vupen.com/english/advisories/2011/0877",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/rails/rails/commit/354da43ab0a10b3b7b3f9cb0619aa562c3be8474",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://groups.google.com/group/rubyonrails-security/msg/4e19864cf6ad40ad?dmode=source&output=gplain",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/43278",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://securitytracker.com/id?1025063",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://www.vupen.com/english/advisories/2011/0877",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rails/rails/commit/354da43ab0a10b3b7b3f9cb0619aa562c3be8474",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:57:57.484815",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rails",
    "owner": "rails",
    "created_at": "2008-04-11T02:19:47Z",
    "updated_at": "2025-01-14T12:51:57Z",
    "pushed_at": "2025-01-14T12:53:28Z",
    "size": 261740,
    "stars": 56313,
    "forks": 21746,
    "open_issues": 1251,
    "watchers": 56313,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0-5-stable",
      "0-6-stable",
      "0-7-stable",
      "0-8-stable",
      "1-2-stable",
      "2-0-stable",
      "2-1-stable",
      "2-2-stable",
      "2-3-stable",
      "3-0-stable",
      "3-1-stable",
      "3-2-stable",
      "4-0-stable",
      "4-1-stable",
      "4-2-stable",
      "5-0-stable",
      "5-1-stable",
      "5-2-stable",
      "6-0-stable",
      "6-1-stable",
      "7-0-stable",
      "7-1-stable",
      "7-2-stable"
    ],
    "languages": {
      "Ruby": 17127894,
      "JavaScript": 228210,
      "HTML": 196993,
      "SCSS": 50596,
      "CSS": 47127,
      "Dockerfile": 2019,
      "Shell": 668
    },
    "commit_activity": {
      "total_commits_last_year": 3989,
      "avg_commits_per_week": 76.71153846153847,
      "days_active_last_year": 351
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:56:52.447177"
  }
}