{
  "cve_id": "CVE-2011-0991",
  "github_data": {
    "repository": "mono/mono",
    "fix_commit": "3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
    "related_commits": [
      "3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
      "89d1455a80ef13cddee5d79ec00c06055da3085c",
      "8eb1189099e02372fd45ca1c67230eccf1edddc0",
      "3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
      "89d1455a80ef13cddee5d79ec00c06055da3085c",
      "8eb1189099e02372fd45ca1c67230eccf1edddc0"
    ],
    "patch_url": "https://github.com/mono/mono/commit/3f8ee42b8c867d9a4c18c22657840d072cca5c3a.patch",
    "fix_commit_details": {
      "sha": "3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
      "commit_date": "2011-02-01T18:10:08Z",
      "author": {
        "login": "kumpera",
        "type": "User",
        "stats": {
          "total_commits": 5064,
          "average_weekly_commits": 4.10705596107056,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 532
        }
      },
      "commit_message": {
        "title": "    Don't use finalization to cleanup dynamic methods.",
        "length": 870,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 70,
        "additions": 50,
        "deletions": 20
      },
      "files": [
        {
          "filename": "mcs/class/corlib/System.Reflection.Emit/DynamicMethod.cs",
          "status": "modified",
          "additions": 0,
          "deletions": 8,
          "patch": "@@ -130,9 +130,6 @@ public DynamicMethod (string name, Type returnType, Type[] parameterTypes, bool\n \t\t[MethodImplAttribute(MethodImplOptions.InternalCall)]\n \t\tprivate extern void create_dynamic_method (DynamicMethod m);\n \n-\t\t[MethodImplAttribute(MethodImplOptions.InternalCall)]\n-\t\tprivate extern void destroy_dynamic_method (DynamicMethod m);\n-\n \t\tprivate void CreateDynMethod () {\n \t\t\tif (mhandle.Value == IntPtr.Zero) {\n \t\t\t\tif (ilgen == null || (ILGenerator.Mono_GetCurrentOffset (ilgen) == 0))\n@@ -161,11 +158,6 @@ private void CreateDynMethod () {\n \t\t\t}\n \t\t}\n \n-\t\t~DynamicMethod ()\n-\t\t{\n-\t\t\tdestroy_dynamic_method (this);\n-\t\t}\n-\n \t\t[ComVisible (true)]\n \t\tpublic Delegate CreateDelegate (Type delegateType)\n \t\t{"
        },
        {
          "filename": "mono/metadata/icall-def.h",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -513,7 +513,6 @@ ICALL(DERIVEDTYPE_1, \"create_unmanaged_type\", mono_reflection_create_unmanaged_t\n \n ICALL_TYPE(DYNM, \"System.Reflection.Emit.DynamicMethod\", DYNM_1)\n ICALL(DYNM_1, \"create_dynamic_method\", mono_reflection_create_dynamic_method)\n-ICALL(DYNM_2, \"destroy_dynamic_method\", mono_reflection_destroy_dynamic_method)\n \n ICALL_TYPE(ENUMB, \"System.Reflection.Emit.EnumBuilder\", ENUMB_1)\n ICALL(ENUMB_1, \"setup_enum_type\", ves_icall_EnumBuilder_setup_enum_type)"
        },
        {
          "filename": "mono/metadata/object-internals.h",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1448,6 +1448,9 @@ mono_string_to_utf8_checked (MonoString *s, MonoError *error) MONO_INTERNAL;\n gboolean\n mono_class_is_reflection_method_or_constructor (MonoClass *class) MONO_INTERNAL;\n \n+void\n+mono_reflection_shutdown (void) MONO_INTERNAL;\n+\n #endif /* __MONO_OBJECT_INTERNALS_H__ */\n \n "
        },
        {
          "filename": "mono/metadata/reflection.c",
          "status": "modified",
          "additions": 47,
          "deletions": 11,
          "patch": "@@ -11064,15 +11064,56 @@ mono_reflection_sighelper_get_signature_field (MonoReflectionSigHelper *sig)\n \treturn result;\n }\n \n+typedef struct {\n+\tMonoMethod *handle;\n+\tMonoDomain *domain;\n+} DynamicMethodReleaseData;\n+\t\n+static MonoReferenceQueue *dynamic_method_queue;\n+\n+void\n+mono_reflection_shutdown (void)\n+{\n+\tMonoReferenceQueue *queue;\n+\tmono_loader_lock ();\n+\tqueue = dynamic_method_queue;\n+\tdynamic_method_queue = NULL;\n+\tif (queue)\n+\t\tmono_gc_reference_queue_free (queue);\n+\tmono_loader_unlock ();\n+}\n+\n+static void\n+free_dynamic_method (void *dynamic_method)\n+{\n+\tDynamicMethodReleaseData *data = dynamic_method;\n+\n+\tmono_runtime_free_method (data->domain, data->handle);\n+\tg_free (data);\n+}\n+\n void \n mono_reflection_create_dynamic_method (MonoReflectionDynamicMethod *mb)\n {\n+\tMonoReferenceQueue *queue;\n+\tMonoMethod *handle;\n+\tDynamicMethodReleaseData *release_data;\n \tReflectionMethodBuilder rmb;\n \tMonoMethodSignature *sig;\n \tMonoClass *klass;\n \tGSList *l;\n \tint i;\n \n+\tif (mono_runtime_is_shutting_down ())\n+\t\tmono_raise_exception (mono_get_exception_invalid_operation (\"\"));\n+\n+\tif (!(queue = dynamic_method_queue)) {\n+\t\tmono_loader_lock ();\n+\t\tif (!(queue = dynamic_method_queue))\n+\t\t\tqueue = dynamic_method_queue = mono_gc_reference_queue_new (free_dynamic_method);\n+\t\tmono_loader_unlock ();\n+\t}\n+\n \tsig = dynamic_method_to_signature (mb);\n \n \treflection_methodbuilder_from_dynamic_method (&rmb, mb);\n@@ -11130,7 +11171,12 @@ mono_reflection_create_dynamic_method (MonoReflectionDynamicMethod *mb)\n \n \tklass = mb->owner ? mono_class_from_mono_type (mono_reflection_type_get_handle ((MonoReflectionType*)mb->owner)) : mono_defaults.object_class;\n \n-\tmb->mhandle = reflection_methodbuilder_to_mono_method (klass, &rmb, sig);\n+\tmb->mhandle = handle = reflection_methodbuilder_to_mono_method (klass, &rmb, sig);\n+\trelease_data = g_new (DynamicMethodReleaseData, 1);\n+\trelease_data->handle = handle;\n+\trelease_data->domain = mono_object_get_domain ((MonoObject*)mb);\n+\tif (!mono_gc_reference_queue_add (queue, (MonoObject*)mb, release_data))\n+\t\tg_free (release_data);\n \n \t/* Fix up refs entries pointing at us */\n \tfor (l = mb->referenced_by; l; l = l->next) {\n@@ -11156,16 +11202,6 @@ mono_reflection_create_dynamic_method (MonoReflectionDynamicMethod *mb)\n \n #endif /* DISABLE_REFLECTION_EMIT */\n \n-void\n-mono_reflection_destroy_dynamic_method (MonoReflectionDynamicMethod *mb)\n-{\n-\tg_assert (mb);\n-\n-\tif (mb->mhandle)\n-\t\tmono_runtime_free_method (\n-\t\t\tmono_object_get_domain ((MonoObject*)mb), mb->mhandle);\n-}\n-\n /**\n  * \n  * mono_reflection_is_valid_dynamic_token:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f53e9e151d92944cacab3e24ac359410c606df6",
            "date": "2024-08-27T16:49:28Z",
            "author_login": "jeffschwMSFT"
          },
          {
            "sha": "c6cdaadb54a1173484f1ada524306ddbf8c2e7d5",
            "date": "2024-05-13T16:28:40Z",
            "author_login": "lawn123"
          },
          {
            "sha": "8013edfca08633610b4da4b651fc2ac92370633d",
            "date": "2024-05-13T16:28:26Z",
            "author_login": "lawn123"
          },
          {
            "sha": "9da2bc275417c5a138316a4f8a48fabf47276c53",
            "date": "2024-05-13T16:28:13Z",
            "author_login": "lawn123"
          },
          {
            "sha": "c23c6370dcd6dcd614fafea5393aa10c8e3e5ad2",
            "date": "2024-05-13T16:28:01Z",
            "author_login": "lawn123"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-399",
    "description": "Use-after-free vulnerability in Mono, when Moonlight 2.x before 2.4.1 or 3.x before 3.99.3 is used, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to finalizing and then resurrecting a DynamicMethod instance.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2011-04-13T21:55:00.830",
    "last_modified": "2024-11-21T01:25:15.713",
    "fix_date": "2011-02-01T18:10:08Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2011-04/msg00024.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://openwall.com/lists/oss-security/2011/04/06/14",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://secunia.com/advisories/44002",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/44076",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.mono-project.com/Vulnerabilities",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/47208",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.vupen.com/english/advisories/2011/0904",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=660422",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=667077",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/66626",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/mono/mono/commit/3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/89d1455a80ef13cddee5d79ec00c06055da3085c",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/8eb1189099e02372fd45ca1c67230eccf1edddc0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2011-04/msg00024.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://openwall.com/lists/oss-security/2011/04/06/14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://secunia.com/advisories/44002",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/44076",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.mono-project.com/Vulnerabilities",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/47208",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.vupen.com/english/advisories/2011/0904",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=660422",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=667077",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/66626",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/mono/mono/commit/3f8ee42b8c867d9a4c18c22657840d072cca5c3a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/89d1455a80ef13cddee5d79ec00c06055da3085c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/8eb1189099e02372fd45ca1c67230eccf1edddc0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:02.123201",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mono",
    "owner": "mono",
    "created_at": "2010-07-22T18:06:36Z",
    "updated_at": "2025-01-13T15:03:30Z",
    "pushed_at": "2024-08-27T16:49:28Z",
    "size": 579418,
    "stars": 11189,
    "forks": 3832,
    "open_issues": 2268,
    "watchers": 11189,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2017-02",
      "2017-04",
      "2017-06",
      "2017-08",
      "2017-10",
      "2017-12",
      "2018-02",
      "2018-04",
      "2018-06",
      "2018-08",
      "2018-10",
      "2018-12",
      "2019-02",
      "2019-04",
      "2019-06"
    ],
    "languages": {
      "C#": 277490592,
      "C": 20940123,
      "TSQL": 3587831,
      "PLpgSQL": 2626770,
      "ASP.NET": 2264375,
      "JavaScript": 1343261,
      "Makefile": 1258321,
      "Shell": 655414,
      "HTML": 617748,
      "M4": 318026,
      "Python": 277555,
      "C++": 252116,
      "Batchfile": 84271,
      "PLSQL": 70204,
      "Perl": 61255,
      "XSLT": 37762,
      "Ruby": 15052,
      "Groovy": 10705,
      "CSS": 10166,
      "Roff": 9064,
      "Assembly": 4183,
      "CMake": 3118,
      "DTrace": 2862,
      "Rich Text Format": 1720,
      "Visual Basic .NET": 1413,
      "Java": 738,
      "sed": 634,
      "Lua": 529,
      "RPC": 512,
      "PHP": 152,
      "Smalltalk": 14
    },
    "commit_activity": {
      "total_commits_last_year": 11,
      "avg_commits_per_week": 0.21153846153846154,
      "days_active_last_year": 5
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:55:49.486218"
  }
}