{
  "cve_id": "CVE-2011-4329",
  "github_data": {
    "repository": "Dolibarr/dolibarr",
    "fix_commit": "762f98ab4137749d0993612b4e3544a4207e78a1",
    "related_commits": [
      "762f98ab4137749d0993612b4e3544a4207e78a1",
      "762f98ab4137749d0993612b4e3544a4207e78a1"
    ],
    "patch_url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1.patch",
    "fix_commit_details": {
      "sha": "762f98ab4137749d0993612b4e3544a4207e78a1",
      "commit_date": "2011-11-08T16:17:21Z",
      "author": {
        "login": "hregis",
        "type": "User",
        "stats": {
          "total_commits": 8313,
          "average_weekly_commits": 7.009274873524452,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 649
        }
      },
      "commit_message": {
        "title": "Fix: [Bug #232] Multiple Cross-Site-Scripting vulnerabilities",
        "length": 61,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 15,
        "additions": 9,
        "deletions": 6
      },
      "files": [
        {
          "filename": "htdocs/lib/security.lib.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -181,7 +181,7 @@ function dol_loginfunction($langs,$conf,$mysoc)\n \t}\n \n \t// Login\n-\t$login = (!empty($lastuser)?$lastuser:(GETPOST(\"username\")?GETPOST(\"username\"):$demologin));\n+\t$login = (!empty($lastuser)?$lastuser:(GETPOST(\"username\",\"alpha\",2)?GETPOST(\"username\",\"alpha\",2):$demologin));\n \t$password = $demopassword;\n \n \t// Show logo (search in order: small company logo, large company logo, theme logo, common logo)"
        },
        {
          "filename": "htdocs/main.inc.php",
          "status": "modified",
          "additions": 8,
          "deletions": 5,
          "patch": "@@ -76,6 +76,9 @@ function test_sql_and_script_inject($val,$get)\n \t$sql_inj += preg_match('/(\\.\\.%2f)+/i', $val);\n \t// For XSS Injection done by adding javascript with script\n \t$sql_inj += preg_match('/<script/i', $val);\n+\t$sql_inj += preg_match('/img[\\s]+src/i', $val);\n+\t$sql_inj += preg_match('/base[\\s]+href/i', $val);\n+\t$sql_inj += preg_match('/style([\\s]+)?=/i', $val);\n \tif ($get) $sql_inj += preg_match('/javascript:/i', $val);\n \t// For XSS Injection done by adding javascript with onmousemove, etc... (closing a src or href tag with not cleaned param)\n \tif ($get) $sql_inj += preg_match('/\"/i', $val);\t// We refused \" in GET parameters value\n@@ -324,7 +327,7 @@ function analyse_sql_and_script(&$var,$get)\n         }\n \n \t\t// Verification security graphic code\n-\t\tif (isset($_POST[\"username\"]) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n+\t\tif (GETPOST(\"username\",\"alpha\",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))\n \t\t{\n \t\t\trequire_once DOL_DOCUMENT_ROOT.'/includes/artichow/Artichow.cfg.php';\n \t\t\trequire_once ARTICHOW.\"/AntiSpam.class.php\";\n@@ -339,7 +342,7 @@ function analyse_sql_and_script(&$var,$get)\n \t\t\t\t$langs->load('main');\n \t\t\t\t$langs->load('other');\n \n-\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.$_POST[\"username\"];\n+\t\t\t\t$user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST(\"username\",\"alpha\",2);\n \t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadValueForCode\");\n \t\t\t\t$test=false;\n \n@@ -365,7 +368,7 @@ function analyse_sql_and_script(&$var,$get)\n \t\t// If error, we will put error message in session under the name dol_loginmesg\n \t\t$goontestloop=false;\n \t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http',$authmode)) $goontestloop=true;\n-\t\tif (isset($_POST[\"username\"]) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n+\t\tif (GETPOST(\"username\",\"alpha\",2) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;\n \n \t\tif ($test && $goontestloop)\n \t\t{\n@@ -378,7 +381,7 @@ function analyse_sql_and_script(&$var,$get)\n \t\t\t\t\tif ($result)\n \t\t\t\t\t{\n \t\t\t\t\t\t// Call function to check user/password\n-\t\t\t\t\t\t$usertotest=$_POST[\"username\"];\n+\t\t\t\t\t\t$usertotest=GETPOST(\"username\",\"alpha\",2);\n \t\t\t\t\t\t$passwordtotest=$_POST[\"password\"];\n \t\t\t\t\t\t$entitytotest=$_POST[\"entity\"];\n \t\t\t\t\t\t$function='check_user_password_'.$mode;\n@@ -411,7 +414,7 @@ function analyse_sql_and_script(&$var,$get)\n \t\t\t\t$langs->load('other');\n \n \t\t\t\t// Bad password. No authmode has found a good password.\n-\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.$_POST[\"username\"];\n+\t\t\t\t$user->trigger_mesg=$langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\",\"alpha\",2);\n \t\t\t\t$_SESSION[\"dol_loginmesg\"]=$langs->trans(\"ErrorBadLoginPassword\");\n \n \t\t\t\t// Appel des triggers"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr 3.1.0 allow remote attackers to inject arbitrary web script or HTML via (1) the username parameter in a setup action to admin/company.php, or the PATH_INFO to (2) admin/security_other.php, (3) admin/events.php, or (4) admin/user.php.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2011-11-28T11:55:09.970",
    "last_modified": "2024-11-21T01:32:14.923",
    "fix_date": "2011-11-08T16:17:21Z"
  },
  "references": [
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0052.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0138.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/50617",
      "source": "secalert@redhat.com",
      "tags": [
        "Broken Link",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://doliforge.org/tracker/?func=detail&aid=232&group_id=144",
      "source": "secalert@redhat.com",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0052.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2011-11/0138.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/50617",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://doliforge.org/tracker/?func=detail&aid=232&group_id=144",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:04.586265",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "Dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T11:04:06Z",
    "size": 1507317,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1162,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:10:40.684709"
  }
}