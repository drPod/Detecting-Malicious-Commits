{
  "cve_id": "CVE-2011-4802",
  "github_data": {
    "repository": "Dolibarr/dolibarr",
    "fix_commit": "63820ab37537fdff842539425b2bf2881f0d8e91",
    "related_commits": [
      "63820ab37537fdff842539425b2bf2881f0d8e91",
      "762f98ab4137749d0993612b4e3544a4207e78a1",
      "c539155d6ac2f5b6ea75b87a16f298c0090e535a",
      "d08d28c0cda1f762a47cc205d4363de03df16675",
      "63820ab37537fdff842539425b2bf2881f0d8e91",
      "762f98ab4137749d0993612b4e3544a4207e78a1",
      "c539155d6ac2f5b6ea75b87a16f298c0090e535a",
      "d08d28c0cda1f762a47cc205d4363de03df16675"
    ],
    "patch_url": "https://github.com/Dolibarr/dolibarr/commit/63820ab37537fdff842539425b2bf2881f0d8e91.patch",
    "fix_commit_details": {
      "sha": "63820ab37537fdff842539425b2bf2881f0d8e91",
      "commit_date": "2011-11-02T19:17:23Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "Security: A lot of security fixes",
        "length": 33,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 144,
        "additions": 74,
        "deletions": 70
      },
      "files": [
        {
          "filename": "htdocs/lib/databases/mssql.lib.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -518,8 +518,8 @@ function order($sortfield=0,$sortorder=0)\n \t\t\t\tif (! $return) $return.=' ORDER BY ';\n \t\t\t\telse $return.=',';\n \n-\t\t\t\t$return.=$val;\n-\t\t\t\tif ($sortorder) $return.=' '.$sortorder;\n+\t\t\t\t$return.=preg_replace('/[^0-9a-z_\\.]/i','',$val);\n+\t\t\t\tif ($sortorder) $return.=' '.preg_replace('/[^0-9a-z]/i','',$sortorder);\n \t\t\t}\n \t\t\treturn $return;\n \t\t}"
        },
        {
          "filename": "htdocs/lib/databases/mysql.lib.php",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -494,6 +494,7 @@ function plimit($limit=0,$offset=0)\n \n \t/**\n \t * Define sort criteria of request\n+\t *\n \t * @param\t    sortfield   List of sort fields\n \t * @param\t    sortorder   Sort order\n \t * @return\t    string      String to provide syntax of a sort sql string\n@@ -510,8 +511,8 @@ function order($sortfield=0,$sortorder=0)\n \t\t\t\tif (! $return) $return.=' ORDER BY ';\n \t\t\t\telse $return.=',';\n \n-\t\t\t\t$return.=$val;\n-\t\t\t\tif ($sortorder) $return.=' '.$sortorder;\n+\t\t\t\t$return.=preg_replace('/[^0-9a-z_\\.]/i','',$val);\n+\t\t\t\tif ($sortorder) $return.=' '.preg_replace('/[^0-9a-z]/i','',$sortorder);\n \t\t\t}\n \t\t\treturn $return;\n \t\t}"
        },
        {
          "filename": "htdocs/lib/databases/mysqli.lib.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -524,8 +524,8 @@ function order($sortfield=0,$sortorder=0)\n                 if (! $return) $return.=' ORDER BY ';\n                 else $return.=',';\n \n-                $return.=$val;\n-                if ($sortorder) $return.=' '.$sortorder;\n+\t\t\t\t$return.=preg_replace('/[^0-9a-z_\\.]/i','',$val);\n+                if ($sortorder) $return.=' '.preg_replace('/[^0-9a-z]/i','',$sortorder);\n             }\n             return $return;\n         }"
        },
        {
          "filename": "htdocs/lib/databases/pgsql.lib.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -666,8 +666,8 @@ function order($sortfield=0,$sortorder=0)\n \t\t\t\tif (! $return) $return.=' ORDER BY ';\n \t\t\t\telse $return.=',';\n \n-\t\t\t\t$return.=$val;\n-\t\t\t\tif ($sortorder) $return.=' '.$sortorder;\n+\t\t\t\t$return.=preg_replace('/[^0-9a-z_\\.]/i','',$val);\n+\t\t\t\tif ($sortorder) $return.=' '.preg_replace('/[^0-9a-z]/i','',$sortorder);\n \t\t\t}\n \t\t\treturn $return;\n \t\t}"
        },
        {
          "filename": "htdocs/user/fiche.php",
          "status": "modified",
          "additions": 37,
          "deletions": 36,
          "patch": "@@ -35,6 +35,11 @@\n if ($conf->ldap->enabled) require_once(DOL_DOCUMENT_ROOT.\"/lib/ldap.class.php\");\n if ($conf->adherent->enabled) require_once(DOL_DOCUMENT_ROOT.\"/adherents/class/adherent.class.php\");\n \n+$id=GETPOST('id','int');\n+$action=GETPOST(\"action\");\n+$group=GETPOST(\"group\",\"int\",3);\n+$confirm=GETPOST(\"confirm\");\n+\n // Define value to know what current user can do on users\n $canadduser=($user->admin || $user->rights->user->user->creer);\n $canreaduser=($user->admin || $user->rights->user->user->lire);\n@@ -48,26 +53,22 @@\n     $caneditgroup=($user->admin || $user->rights->user->group_advance->write);\n }\n // Define value to know what current user can do on properties of edited user\n-if ($_GET[\"id\"])\n+if ($id)\n {\n-    // $user est le user qui edite, $_GET[\"id\"] est l'id de l'utilisateur edite\n-    $caneditfield=( (($user->id == $_GET[\"id\"]) && $user->rights->user->self->creer)\n-    || (($user->id != $_GET[\"id\"]) && $user->rights->user->user->creer) );\n-    $caneditpassword=( (($user->id == $_GET[\"id\"]) && $user->rights->user->self->password)\n-    || (($user->id != $_GET[\"id\"]) && $user->rights->user->user->password) );\n+    // $user est le user qui edite, $id est l'id de l'utilisateur edite\n+    $caneditfield=( (($user->id == $id) && $user->rights->user->self->creer)\n+    || (($user->id != $id) && $user->rights->user->user->creer) );\n+    $caneditpassword=( (($user->id == $id) && $user->rights->user->self->password)\n+    || (($user->id != $id) && $user->rights->user->user->password) );\n }\n \n-$action=GETPOST(\"action\");\n-$group=GETPOST(\"group\",\"int\",3);\n-$confirm=GETPOST(\"confirm\");\n-\n // Security check\n $socid=0;\n if ($user->societe_id > 0) $socid = $user->societe_id;\n $feature2='user';\n-if ($user->id == $_GET[\"id\"]) { $feature2=''; $canreaduser=1; } // A user can always read its own card\n-$result = restrictedArea($user, 'user', $_GET[\"id\"], '', $feature2);\n-if ($user->id <> $_GET[\"id\"] && ! $canreaduser) accessforbidden();\n+if ($user->id == $id) { $feature2=''; $canreaduser=1; } // A user can always read its own card\n+$result = restrictedArea($user, 'user', $id, '', $feature2);\n+if ($user->id <> $id && ! $canreaduser) accessforbidden();\n \n $langs->load(\"users\");\n $langs->load(\"companies\");\n@@ -82,36 +83,36 @@\n if ($_GET[\"subaction\"] == 'addrights' && $canedituser)\n {\n     $edituser = new User($db);\n-    $edituser->fetch($_GET[\"id\"]);\n+    $edituser->fetch($id);\n     $edituser->addrights($_GET[\"rights\"]);\n }\n \n if ($_GET[\"subaction\"] == 'delrights' && $canedituser)\n {\n     $edituser = new User($db);\n-    $edituser->fetch($_GET[\"id\"]);\n+    $edituser->fetch($id);\n     $edituser->delrights($_GET[\"rights\"]);\n }\n \n if ($action == 'confirm_disable' && $confirm == \"yes\" && $candisableuser)\n {\n-    if ($_GET[\"id\"] <> $user->id)\n+    if ($id <> $user->id)\n     {\n         $edituser = new User($db);\n-        $edituser->fetch($_GET[\"id\"]);\n+        $edituser->fetch($id);\n         $edituser->setstatus(0);\n-        Header(\"Location: \".DOL_URL_ROOT.'/user/fiche.php?id='.$_GET[\"id\"]);\n+        Header(\"Location: \".DOL_URL_ROOT.'/user/fiche.php?id='.$id);\n         exit;\n     }\n }\n if ($action == 'confirm_enable' && $confirm == \"yes\" && $candisableuser)\n {\n-    if ($_GET[\"id\"] <> $user->id)\n+    if ($id <> $user->id)\n     {\n         $message='';\n \n         $edituser = new User($db);\n-        $edituser->fetch($_GET[\"id\"]);\n+        $edituser->fetch($id);\n \n         if (!empty($conf->file->main_limit_users))\n         {\n@@ -125,18 +126,18 @@\n         if (! $message)\n         {\n             $edituser->setstatus(1);\n-            Header(\"Location: \".DOL_URL_ROOT.'/user/fiche.php?id='.$_GET[\"id\"]);\n+            Header(\"Location: \".DOL_URL_ROOT.'/user/fiche.php?id='.$id);\n             exit;\n         }\n     }\n }\n \n if ($action == 'confirm_delete' && $confirm == \"yes\" && $candisableuser)\n {\n-    if ($_GET[\"id\"] <> $user->id)\n+    if ($id <> $user->id)\n     {\n         $edituser = new User($db);\n-        $edituser->id=$_GET[\"id\"];\n+        $edituser->id=$id;\n         $result = $edituser->delete();\n         if ($result < 0)\n         {\n@@ -232,13 +233,13 @@\n         $editgroup->oldcopy=dol_clone($editgroup);\n \n         $edituser = new User($db);\n-        $edituser->fetch($_GET[\"id\"]);\n+        $edituser->fetch($id);\n         if ($action == 'addgroup')    $edituser->SetInGroup($group,GETPOST('entity'));\n         if ($action == 'removegroup') $edituser->RemoveFromGroup($group,GETPOST('entity'));\n \n         if ($result > 0)\n         {\n-            header(\"Location: fiche.php?id=\".$_GET[\"id\"]);\n+            header(\"Location: fiche.php?id=\".$id);\n             exit;\n         }\n         else\n@@ -271,7 +272,7 @@\n         {\n             $db->begin();\n             $edituser = new User($db);\n-            $edituser->fetch($_GET[\"id\"]);\n+            $edituser->fetch($id);\n \n             $edituser->oldcopy=dol_clone($edituser);\n \n@@ -360,7 +361,7 @@\n     else if ($caneditpassword)\t// Case we can edit only password\n     {\n         $edituser = new User($db);\n-        $edituser->fetch($_GET[\"id\"]);\n+        $edituser->fetch($id);\n \n         $edituser->oldcopy=dol_clone($edituser);\n \n@@ -377,7 +378,7 @@\n || ($action == 'confirm_passwordsend' && $confirm == 'yes')) && $caneditpassword)\n {\n     $edituser = new User($db);\n-    $edituser->fetch($_GET[\"id\"]);\n+    $edituser->fetch($id);\n \n     $newpassword=$edituser->setPassword($user,'');\n     if ($newpassword < 0)\n@@ -800,10 +801,10 @@\n     /*                                                                            */\n     /* ************************************************************************** */\n \n-    if ($_GET[\"id\"])\n+    if ($id)\n     {\n         $fuser = new User($db);\n-        $fuser->fetch($_GET[\"id\"]);\n+        $fuser->fetch($id);\n \n         // Connexion ldap\n         // pour recuperer passDoNotExpire et userChangePassNextLogon\n@@ -1169,13 +1170,13 @@\n             // Si on a un gestionnaire de generation de mot de passe actif\n             if ($conf->global->USER_PASSWORD_GENERATED != 'none')\n             {\n-                if (($user->id != $_GET[\"id\"] && $caneditpassword) && $fuser->login && !$fuser->ldap_sid &&\n+                if (($user->id != $id && $caneditpassword) && $fuser->login && !$fuser->ldap_sid &&\n                 (empty($conf->multicompany->enabled) || ($fuser->entity == $conf->entity)))\n                 {\n                     print '<a class=\"butAction\" href=\"fiche.php?id='.$fuser->id.'&amp;action=password\">'.$langs->trans(\"ReinitPassword\").'</a>';\n                 }\n \n-                if (($user->id != $_GET[\"id\"] && $caneditpassword) && $fuser->login && !$fuser->ldap_sid &&\n+                if (($user->id != $id && $caneditpassword) && $fuser->login && !$fuser->ldap_sid &&\n                 (empty($conf->multicompany->enabled) || ($fuser->entity == $conf->entity)) )\n                 {\n                     if ($fuser->email) print '<a class=\"butAction\" href=\"fiche.php?id='.$fuser->id.'&amp;action=passwordsend\">'.$langs->trans(\"SendNewPassword\").'</a>';\n@@ -1184,19 +1185,19 @@\n             }\n \n             // Activer\n-            if ($user->id <> $_GET[\"id\"] && $candisableuser && $fuser->statut == 0 &&\n+            if ($user->id <> $id && $candisableuser && $fuser->statut == 0 &&\n             (empty($conf->multicompany->enabled) || ($fuser->entity == $conf->entity)) )\n             {\n                 print '<a class=\"butAction\" href=\"fiche.php?id='.$fuser->id.'&amp;action=enable\">'.$langs->trans(\"Reactivate\").'</a>';\n             }\n             // Desactiver\n-            if ($user->id <> $_GET[\"id\"] && $candisableuser && $fuser->statut == 1 &&\n+            if ($user->id <> $id && $candisableuser && $fuser->statut == 1 &&\n             (empty($conf->multicompany->enabled) || ($fuser->entity == $conf->entity)) )\n             {\n                 print '<a class=\"butActionDelete\" href=\"fiche.php?action=disable&amp;id='.$fuser->id.'\">'.$langs->trans(\"DisableUser\").'</a>';\n             }\n             // Delete\n-            if ($user->id <> $_GET[\"id\"] && $candisableuser &&\n+            if ($user->id <> $id && $candisableuser &&\n             (empty($conf->multicompany->enabled) || ($fuser->entity == $conf->entity)) )\n             {\n                 print '<a class=\"butActionDelete\" href=\"fiche.php?action=delete&amp;id='.$fuser->id.'\">'.$langs->trans(\"DeleteUser\").'</a>';\n@@ -1232,7 +1233,7 @@\n                 if ($caneditgroup)\n                 {\n                     $form = new Form($db);\n-                    print '<form action=\"fiche.php?id='.$_GET[\"id\"].'\" method=\"post\">'.\"\\n\";\n+                    print '<form action=\"fiche.php?id='.$id.'\" method=\"post\">'.\"\\n\";\n                     print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n                     print '<input type=\"hidden\" name=\"action\" value=\"addgroup\">';\n                     print '<input type=\"hidden\" name=\"entity\" value=\"'.$conf->entity.'\">';"
        },
        {
          "filename": "htdocs/user/index.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -35,7 +35,7 @@\n $socid=0;\n if ($user->societe_id > 0) $socid = $user->societe_id;\n \n-$sall=isset($_GET[\"sall\"])?$_GET[\"sall\"]:$_POST[\"sall\"];\n+$sall=GETPOST(\"sall\");\n \n $sortfield = GETPOST(\"sortfield\",'alpha');\n $sortorder = GETPOST(\"sortorder\",'alpha');\n@@ -51,6 +51,7 @@\n $userstatic=new User($db);\n $companystatic = new Societe($db);\n \n+\n /*\n  * View\n  */\n@@ -73,9 +74,8 @@\n {\n     $sql.= \" AND (u.login like '%\".$_POST[\"search_user\"].\"%' OR u.name like '%\".$_POST[\"search_user\"].\"%' OR u.firstname like '%\".$_POST[\"search_user\"].\"%')\";\n }\n-if ($sall) $sql.= \" AND (u.login like '%\".$sall.\"%' OR u.name like '%\".$sall.\"%' OR u.firstname like '%\".$sall.\"%' OR u.email like '%\".$sall.\"%' OR u.note like '%\".$sall.\"%')\";\n-if ($sortfield) $sql.=\" ORDER BY $sortfield $sortorder\";\n-\n+if ($sall) $sql.= \" AND (u.login like '%\".$db->escape($sall).\"%' OR u.name like '%\".$db->escape($sall).\"%' OR u.firstname like '%\".$db->escape($sall).\"%' OR u.email like '%\".$db->escape($sall).\"%' OR u.note like '%\".$db->escape($sall).\"%')\";\n+$sql.=$db->order($sortfield,$sortorder);\n $result = $db->query($sql);\n if ($result)\n {"
        },
        {
          "filename": "htdocs/user/info.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -30,7 +30,7 @@\n $langs->load(\"users\");\n \n // Security check\n-$id = isset($_GET[\"id\"])?$_GET[\"id\"]:'';\n+$id = GETPOST('id','int');\n $fuser = new User($db);\n $fuser->fetch($id);\n "
        },
        {
          "filename": "htdocs/user/note.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -27,8 +27,8 @@\n require_once(DOL_DOCUMENT_ROOT.'/lib/usergroups.lib.php');\n require_once(DOL_DOCUMENT_ROOT.'/user/class/user.class.php');\n \n-$action=isset($_GET[\"action\"])?$_GET[\"action\"]:(isset($_POST[\"action\"])?$_POST[\"action\"]:\"\");\n-$id=isset($_GET[\"id\"])?$_GET[\"id\"]:(isset($_POST[\"id\"])?$_POST[\"id\"]:\"\");\n+$action=GETPOST('action');\n+$id=GETPOST('id','int');\n \n $langs->load(\"companies\");\n $langs->load(\"members\");"
        },
        {
          "filename": "htdocs/user/param_ihm.php",
          "status": "modified",
          "additions": 9,
          "deletions": 8,
          "patch": "@@ -33,30 +33,31 @@\n $langs->load(\"users\");\n $langs->load(\"languages\");\n \n+$id=GETPOST('id','int');\n+\n // Defini si peux lire/modifier permisssions\n $canreaduser=($user->admin || $user->rights->user->user->lire);\n \n-if ($_REQUEST[\"id\"])\n+if ($id)\n {\n-    // $user est le user qui edite, $_REQUEST[\"id\"] est l'id de l'utilisateur edite\n-    $caneditfield=( (($user->id == $_REQUEST[\"id\"]) && $user->rights->user->self->creer)\n-    || (($user->id != $_REQUEST[\"id\"]) && $user->rights->user->user->creer));\n+    // $user est le user qui edite, $id est l'id de l'utilisateur edite\n+    $caneditfield=( (($user->id == $id) && $user->rights->user->self->creer)\n+    || (($user->id != $id) && $user->rights->user->user->creer));\n }\n \n // Security check\n $socid=0;\n if ($user->societe_id > 0) $socid = $user->societe_id;\n $feature2 = (($socid && $user->rights->user->self->creer)?'':'user');\n-if ($user->id == $_REQUEST[\"id\"])\t// A user can always read its own card\n+if ($user->id == $id)\t// A user can always read its own card\n {\n     $feature2='';\n     $canreaduser=1;\n }\n-$result = restrictedArea($user, 'user', $_REQUEST[\"id\"], '', $feature2);\n-if ($user->id <> $_REQUEST[\"id\"] && ! $canreaduser) accessforbidden();\n+$result = restrictedArea($user, 'user', $id, '', $feature2);\n+if ($user->id <> $id && ! $canreaduser) accessforbidden();\n \n \n-$id=! empty($_GET[\"id\"])?$_GET[\"id\"]:$_POST[\"id\"];\n $dirtop = \"../includes/menus/standard\";\n $dirleft = \"../includes/menus/standard\";\n "
        },
        {
          "filename": "htdocs/user/perms.php",
          "status": "modified",
          "additions": 12,
          "deletions": 11,
          "patch": "@@ -32,8 +32,9 @@\n $langs->load(\"admin\");\n \n $module=isset($_GET[\"module\"])?$_GET[\"module\"]:$_POST[\"module\"];\n+$id = GETPOST('id','int');\n \n-if (! isset($_GET[\"id\"]) || empty($_GET[\"id\"])) accessforbidden();\n+if (! $id) accessforbidden();\n \n // Defini si peux lire les permissions\n $canreaduser=($user->admin || $user->rights->user->user->lire);\n@@ -43,20 +44,20 @@\n if (! empty($conf->global->MAIN_USE_ADVANCED_PERMS))\n {\n \t$canreaduser=($user->admin || ($user->rights->user->user->lire && $user->rights->user->user_advance->readperms));\n-\t$caneditselfperms=($user->id == $_GET[\"id\"] && $user->rights->user->self_advance->writeperms);\n+\t$caneditselfperms=($user->id == $id && $user->rights->user->self_advance->writeperms);\n \t$caneditperms = '('.$caneditperms.' || '.$caneditselfperms.')';\n }\n \n // Security check\n $socid=0;\n if ($user->societe_id > 0) $socid = $user->societe_id;\n $feature2 = (($socid && $user->rights->user->self->creer)?'':'user');\n-if ($user->id == $_GET[\"id\"])\t// A user can always read its own card\n+if ($user->id == $id)\t// A user can always read its own card\n {\n \t$feature2='';\n \t$canreaduser=1;\n }\n-$result = restrictedArea($user, 'user', $_GET[\"id\"], '', $feature2);\n+$result = restrictedArea($user, 'user', $id, '', $feature2);\n if ($user->id <> $_REQUEST[\"id\"] && ! $canreaduser) accessforbidden();\n \n \n@@ -66,11 +67,11 @@\n if ($_GET[\"action\"] == 'addrights' && $caneditperms)\n {\n     $edituser = new User($db);\n-\t$edituser->fetch($_GET[\"id\"]);\n+\t$edituser->fetch($id);\n     $edituser->addrights($_GET[\"rights\"],$module);\n \n \t// Si on a touche a ses propres droits, on recharge\n-\tif ($_GET[\"id\"] == $user->id)\n+\tif ($id == $user->id)\n \t{\n \t\t$user->clearrights();\n \t\t$user->getrights();\n@@ -80,11 +81,11 @@\n if ($_GET[\"action\"] == 'delrights' && $caneditperms)\n {\n     $edituser = new User($db);\n-\t$edituser->fetch($_GET[\"id\"]);\n+\t$edituser->fetch($id);\n     $edituser->delrights($_GET[\"rights\"],$module);\n \n \t// Si on a touche a ses propres droits, on recharge\n-\tif ($_GET[\"id\"] == $user->id)\n+\tif ($id == $user->id)\n \t{\n \t\t$user->clearrights();\n \t\t$user->getrights();\n@@ -104,7 +105,7 @@\n $form=new Form($db);\n \n $fuser = new User($db);\n-$fuser->fetch($_GET[\"id\"]);\n+$fuser->fetch($id);\n $fuser->getrights();\n \n /*\n@@ -125,9 +126,9 @@\n foreach ($conf->file->dol_document_root as $type => $dirroot)\n {\n \t$modulesdir[] = $dirroot . \"/includes/modules/\";\n-\t\n+\n \tif ($type == 'alt')\n-\t{\t\n+\t{\n \t\t$handle=@opendir($dirroot);\n \t\tif (is_resource($handle))\n \t\t{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Multiple SQL injection vulnerabilities in Dolibarr 3.1.0 RC and probably earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) sortfield, (2) sortorder, and (3) sall parameters to user/index.php and (b) user/group/index.php; the id parameter to (4) info.php, (5) perms.php, (6) param_ihm.php, (7) note.php, and (8) fiche.php in user/; and (9) rowid parameter to admin/boxes.php.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2011-12-14T00:55:04.543",
    "last_modified": "2024-11-21T01:33:01.097",
    "fix_date": "2011-11-02T19:17:23Z"
  },
  "references": [
    {
      "url": "http://osvdb.org/77340",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77341",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77342",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77343",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77344",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77345",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77346",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link",
        "Exploit"
      ]
    },
    {
      "url": "http://osvdb.org/77347",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link",
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/520619/100/0/threaded",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/50777",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/63820ab37537fdff842539425b2bf2881f0d8e91",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/c539155d6ac2f5b6ea75b87a16f298c0090e535a",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/d08d28c0cda1f762a47cc205d4363de03df16675",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://www.htbridge.ch/advisory/multiple_vulnerabilities_in_dolibarr.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://osvdb.org/77340",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77341",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77342",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77343",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77344",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77345",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://osvdb.org/77346",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link",
        "Exploit"
      ]
    },
    {
      "url": "http://osvdb.org/77347",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link",
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/520619/100/0/threaded",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/50777",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/63820ab37537fdff842539425b2bf2881f0d8e91",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/762f98ab4137749d0993612b4e3544a4207e78a1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/c539155d6ac2f5b6ea75b87a16f298c0090e535a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/d08d28c0cda1f762a47cc205d4363de03df16675",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://www.htbridge.ch/advisory/multiple_vulnerabilities_in_dolibarr.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:04.588248",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "Dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T11:04:06Z",
    "size": 1507317,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1162,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:10:40.684709"
  }
}