{
  "cve_id": "CVE-2011-4958",
  "github_data": {
    "repository": "silverstripe/sapphire",
    "fix_commit": "16c3235",
    "related_commits": [
      "16c3235",
      "52a895f",
      "bdd6391",
      "16c3235",
      "52a895f",
      "bdd6391"
    ],
    "patch_url": "https://github.com/silverstripe/sapphire/commit/16c3235.patch",
    "fix_commit_details": {
      "sha": "16c3235",
      "commit_date": "2011-10-17T16:04:24Z",
      "author": {
        "login": "chillu",
        "type": "User",
        "stats": {
          "total_commits": 6173,
          "average_weekly_commits": 6.753829321663019,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 485
        }
      },
      "commit_message": {
        "title": "BUGFIX Escaping base URLs for anchor links rewritten by SSViewer::process() with the 'rewriteHashlinks' option enabled (which is a framework default, and necessary because of the use of a <base> tag). Also added escaping for base URLs rendered through the 'php' variation of 'rewriteHashlinks'",
        "length": 293,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 75,
        "additions": 73,
        "deletions": 2
      },
      "files": [
        {
          "filename": "core/SSViewer.php",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -439,9 +439,10 @@ public function process($item, $cache = null) {\n \t\tif($this->rewriteHashlinks && self::$options['rewriteHashlinks']) {\n \t\t\tif(strpos($output, '<base') !== false) {\n \t\t\t\tif(SSViewer::$options['rewriteHashlinks'] === 'php') { \n-\t\t\t\t\t$thisURLRelativeToBase = \"<?php echo \\$_SERVER['REQUEST_URI']; ?>\"; \n+\t\t\t\t\t// Emulate Convert::raw2att() without adding this dependency\n+\t\t\t\t\t$thisURLRelativeToBase = \"<?php echo str_replace(array('&','\\\"',\\\"'\\\",'<','>'), array('&amp;','&quot;','&#39;','&lt;','&gt;'), \\$_SERVER['REQUEST_URI']); ?>\"; \n \t\t\t\t} else { \n-\t\t\t\t\t$thisURLRelativeToBase = Director::makeRelative(Director::absoluteURL($_SERVER['REQUEST_URI'])); \n+\t\t\t\t\t$thisURLRelativeToBase = Convert::raw2att($_SERVER['REQUEST_URI']); \n \t\t\t\t}\n \t\t\t\t$output = preg_replace('/(<a[^>]+href *= *)\"#/i', '\\\\1\"' . $thisURLRelativeToBase . '#', $output);\n \t\t\t}"
        },
        {
          "filename": "tests/SSViewerTest.php",
          "status": "modified",
          "additions": 70,
          "deletions": 0,
          "patch": "@@ -136,6 +136,76 @@ function testBaseTagGeneration() {\n \t\t$negotiator->xhtml($response);\n \t\t$this->assertRegExp('/<head><base href=\".*\" \\/><\\/head>/', $response->getBody());\n \t}\n+\t\n+\tfunction testRewriteHashlinks() {\n+\t\t$oldRewriteHashLinks = SSViewer::getOption('rewriteHashlinks');\n+\t\tSSViewer::setOption('rewriteHashlinks', true);\n+\t\t\n+\t\t// Emulate SSViewer::process()\n+\t\t$base = Convert::raw2att($_SERVER['REQUEST_URI']);\n+\t\t\n+\t\t$tmplFile = TEMP_FOLDER . '/SSViewerTest_testRewriteHashlinks_' . sha1(rand()) . '.ss';\n+\t\t\n+\t\t// Note: SSViewer_FromString doesn't rewrite hash links.\n+\t\tfile_put_contents($tmplFile, '<!DOCTYPE html>\n+\t\t\t<html>\n+\t\t\t\t<head><% base_tag %></head>\n+\t\t\t\t<body>\n+\t\t\t\t<a class=\"inline\" href=\"#anchor\">InlineLink</a>\n+\t\t\t\t$InsertedLink\n+\t\t\t\t<body>\n+\t\t\t</html>');\n+\t\t$tmpl = new SSViewer($tmplFile);\n+\t\t$obj = new ViewableData();\n+\t\t$obj->InsertedLink = '<a class=\"inserted\" href=\"#anchor\">InsertedLink</a>';\n+\t\t$result = $tmpl->process($obj);\n+\t\t$this->assertContains(\n+\t\t\t'<a class=\"inserted\" href=\"' . $base . '#anchor\">InsertedLink</a>',\n+\t\t\t$result\n+\t\t);\n+\t\t$this->assertContains(\n+\t\t\t'<a class=\"inline\" href=\"' . $base . '#anchor\">InlineLink</a>',\n+\t\t\t$result\n+\t\t);\n+\t\t\n+\t\tunlink($tmplFile);\n+\t\t\n+\t\tSSViewer::setOption('rewriteHashlinks', $oldRewriteHashLinks);\n+\t}\n+\t\n+\tfunction testRewriteHashlinksInPhpMode() {\n+\t\t$oldRewriteHashLinks = SSViewer::getOption('rewriteHashlinks');\n+\t\tSSViewer::setOption('rewriteHashlinks', 'php');\n+\t\t\n+\t\t$tmplFile = TEMP_FOLDER . '/SSViewerTest_testRewriteHashlinksInPhpMode_' . sha1(rand()) . '.ss';\n+\t\t\n+\t\t// Note: SSViewer_FromString doesn't rewrite hash links.\n+\t\tfile_put_contents($tmplFile, '<!DOCTYPE html>\n+\t\t\t<html>\n+\t\t\t\t<head><% base_tag %></head>\n+\t\t\t\t<body>\n+\t\t\t\t<a class=\"inline\" href=\"#anchor\">InlineLink</a>\n+\t\t\t\t$InsertedLink\n+\t\t\t\t<body>\n+\t\t\t</html>');\n+\t\t$tmpl = new SSViewer($tmplFile);\n+\t\t$obj = new ViewableData();\n+\t\t$obj->InsertedLink = '<a class=\"inserted\" href=\"#anchor\">InsertedLink</a>';\n+\t\t$result = $tmpl->process($obj);\n+\t\t$this->assertContains(\n+\t\t\t'<a class=\"inserted\" href=\"<?php echo str_replace(',\n+\t\t\t$result\n+\t\t);\n+\t\t// TODO Fix inline links in PHP mode\n+\t\t// $this->assertContains(\n+\t\t// \t'<a class=\"inline\" href=\"<?php echo str_replace(',\n+\t\t// \t$result\n+\t\t// );\n+\t\t\n+\t\tunlink($tmplFile);\n+\t\t\n+\t\tSSViewer::setOption('rewriteHashlinks', $oldRewriteHashLinks);\n+\t}\n }\n \n class SSViewerTest_ViewableData extends ViewableData implements TestOnly {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1fa66f3a67b9230cdbc35193d01c240f2cbfaa53",
            "date": "2025-01-14T04:27:57Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "cd1d5de426061264b602944040613f2121eb1dce",
            "date": "2025-01-13T03:19:46Z",
            "author_login": "GuySartorelli"
          },
          {
            "sha": "0aa00a63f093f9d33a00835dd43740f959f1d078",
            "date": "2025-01-13T02:58:41Z",
            "author_login": "emteknetnz"
          },
          {
            "sha": "94af2e58d29efa8a7fed94175c40a8efa09e584d",
            "date": "2025-01-10T01:03:05Z",
            "author_login": "GuySartorelli"
          },
          {
            "sha": "3f5b363688b027986a186227f983a0205a07fef3",
            "date": "2025-01-10T01:02:53Z",
            "author_login": "GuySartorelli"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "Cross-site scripting (XSS) vulnerability in the process function in SSViewer.php in SilverStripe before 2.3.13 and 2.4.x before 2.4.6 allows remote attackers to inject arbitrary web script or HTML via the QUERY_STRING to template placeholders, as demonstrated by a request to (1) admin/reports/, (2) admin/comments/, (3) admin/, (4) admin/show/, (5) admin/assets/, and (6) admin/security/.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-04-08T14:22:07.693",
    "last_modified": "2024-11-21T01:33:22.093",
    "fix_date": "2011-10-17T16:04:24Z"
  },
  "references": [
    {
      "url": "http://doc.silverstripe.org/sapphire/en/trunk/changelogs/2.3.12",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://doc.silverstripe.org/sapphire/en/trunk/changelogs/2.4.6",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://osvdb.org/76258",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/46390",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.rul3z.de/advisories/SSCHADV2011-024.txt",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/520050/100/0/threaded",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/16c3235",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/52a895f",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/bdd6391",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "http://doc.silverstripe.org/sapphire/en/trunk/changelogs/2.3.12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://doc.silverstripe.org/sapphire/en/trunk/changelogs/2.4.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://osvdb.org/76258",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/46390",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.rul3z.de/advisories/SSCHADV2011-024.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/520050/100/0/threaded",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/16c3235",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/52a895f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/bdd6391",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:22.582744",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "silverstripe-framework",
    "owner": "silverstripe",
    "created_at": "2011-02-02T02:04:13Z",
    "updated_at": "2025-01-14T04:28:01Z",
    "pushed_at": "2025-01-14T04:27:59Z",
    "size": 114606,
    "stars": 722,
    "forks": 823,
    "open_issues": 673,
    "watchers": 722,
    "has_security_policy": false,
    "default_branch": "5",
    "protected_branches": [
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "3",
      "3.0",
      "3.5",
      "3.6",
      "3.7",
      "4",
      "4.2",
      "4.3",
      "4.4",
      "4.5",
      "4.6",
      "4.7",
      "4.8",
      "4.9",
      "4.10",
      "4.11",
      "4.12",
      "4.13",
      "5",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "6",
      "6.0"
    ],
    "languages": {
      "PHP": 7175112,
      "Scheme": 33358,
      "CSS": 4378,
      "Shell": 3006,
      "JavaScript": 452,
      "HTML": 195
    },
    "commit_activity": {
      "total_commits_last_year": 293,
      "avg_commits_per_week": 5.634615384615385,
      "days_active_last_year": 145
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T15:46:23.169806"
  }
}