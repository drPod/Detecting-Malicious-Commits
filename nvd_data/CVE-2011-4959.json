{
  "cve_id": "CVE-2011-4959",
  "github_data": {
    "repository": "silverstripe/silverstripe-cms",
    "fix_commit": "73cca09",
    "related_commits": [
      "73cca09",
      "ca78784",
      "b5ea2f6",
      "73cca09",
      "ca78784",
      "b5ea2f6"
    ],
    "patch_url": "https://github.com/silverstripe/silverstripe-cms/commit/73cca09.patch",
    "fix_commit_details": {
      "sha": "73cca09",
      "commit_date": "2011-09-15T12:15:41Z",
      "author": {
        "login": "chillu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "BUGFIX Consistently using Convert::raw2sql() instead of DB::getConn()->addslashes() or PHP's deprecated addslashes() for database escaping",
        "length": 138,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 35,
        "additions": 18,
        "deletions": 17
      },
      "files": [
        {
          "filename": "core/model/ComponentSet.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -152,7 +152,7 @@ protected function loadChildIntoDatabase($item, $extraFields = null) {\n \t\t\t$extraKeys = $extraValues = '';\n \t\t\tif($extraFields) foreach($extraFields as $k => $v) {\n \t\t\t\t$extraKeys .= \", \\\"$k\\\"\";\n-\t\t\t\t$extraValues .= \", '\" . DB::getConn()->addslashes($v) . \"'\";\n+\t\t\t\t$extraValues .= \", '\" . Convert::raw2sql($v) . \"'\";\n \t\t\t}\n \n \t\t\tDB::query(\"INSERT INTO \\\"$this->tableName\\\" (\\\"$parentField\\\",\\\"$childField\\\" $extraKeys) VALUES ({$this->ownerObj->ID}, {$item->ID} $extraValues)\");"
        },
        {
          "filename": "core/model/MySQLDatabase.php",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -347,9 +347,9 @@ public function fieldList($table) {\n \t\t\t\n \t\t\tif($field['Default'] || $field['Default'] === \"0\") {\n \t\t\t\tif(is_numeric($field['Default']))\n-\t\t\t\t\t$fieldSpec .= \" default \" . addslashes($field['Default']);\n+\t\t\t\t\t$fieldSpec .= \" default \" . Convert::raw2sql($field['Default']);\n \t\t\t\telse\n-\t\t\t\t\t$fieldSpec .= \" default '\" . addslashes($field['Default']) . \"'\";\n+\t\t\t\t\t$fieldSpec .= \" default '\" . Convert::raw2sql($field['Default']) . \"'\";\n \t\t\t}\n \t\t\tif($field['Extra']) $fieldSpec .= \" $field[Extra]\";\n \t\t\t\n@@ -862,8 +862,7 @@ function dbDataType($type){\n \t}\n \t\n \t/*\n-\t * This will return text which has been escaped in a database-friendly manner\n-\t * Using PHP's addslashes method won't work in MSSQL\n+\t * This will return text which has been escaped in a database-friendly manner.\n \t */\n \tfunction addslashes($value){\n \t\treturn mysql_real_escape_string($value, $this->dbConn);"
        },
        {
          "filename": "core/model/Versioned.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -392,7 +392,7 @@ function augmentWrite(&$manipulation) {\n \t\t\t\t// Add any extra, unchanged fields to the version record.\n \t\t\t\t$data = DB::query(\"SELECT * FROM \\\"$table\\\" WHERE \\\"ID\\\" = $id\")->record();\n \t\t\t\tif($data) foreach($data as $k => $v) {\n-\t\t\t\t\tif (!isset($newManipulation['fields'][$k])) $newManipulation['fields'][$k] = \"'\" . DB::getConn()->addslashes($v) . \"'\";\n+\t\t\t\t\tif (!isset($newManipulation['fields'][$k])) $newManipulation['fields'][$k] = \"'\" . Convert::raw2sql($v) . \"'\";\n \t\t\t\t}\n \n \t\t\t\t// Set up a new entry in (table)_versions"
        },
        {
          "filename": "core/model/fieldtypes/Boolean.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -59,7 +59,7 @@ public function scaffoldSearchField($title = null) {\n \t */\n \tfunction prepValueForDB($value) {\n \t\tif(strpos($value, '[')!==false)\n-\t\t\treturn addslashes($value);\n+\t\t\treturn Convert::raw2sql($value);\n \t\telse {\t\t\n \t\t\tif($value && strtolower($value) != 'f') {\n \t\t\t\treturn \"'1'\";"
        },
        {
          "filename": "core/model/fieldtypes/Decimal.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -59,9 +59,9 @@ function prepValueForDB($value) {\n \t\t\tif(strpos($value, '[')===false)\n \t\t\t\treturn '0';\n \t\t\telse\n-\t\t\t\treturn addslashes($value);\n+\t\t\t\treturn Convert::raw2sql($value);\n \t\t} else {\n-\t\t\treturn addslashes($value);\n+\t\t\treturn Convert::raw2sql($value);\n \t\t}\n \t}\n \t"
        },
        {
          "filename": "core/model/fieldtypes/Int.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -57,9 +57,9 @@ function prepValueForDB($value) {\n \t\t\tif(strpos($value, '[')===false)\n \t\t\t\treturn '0';\n \t\t\telse\n-\t\t\t\treturn addslashes($value);\n+\t\t\t\treturn Convert::raw2sql($value);\n \t\t} else {\n-\t\t\treturn addslashes($value);\n+\t\t\treturn Convert::raw2sql($value);\n \t\t}\n \t}\n \t"
        },
        {
          "filename": "docs/en/topics/security.md",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -16,8 +16,10 @@ See [http://shiflett.org/articles/sql-injection](http://shiflett.org/articles/sq\n \n ### Automatic escaping\n \n-SilverStripe automatically runs [addslashes()](http://php.net/addslashes) in DataObject::write() wherever possible. Data\n-is escaped when saving back to the database, not when writing to object-properties.\n+SilverStripe automatically escapes data in `[api:DataObject::write()]` wherever possible,\n+through database-specific methods (see `[api:Database->addslashes()]`).\n+For `[api:MySQLDatabase]`, this will be `[mysql_real_escape_string()](http://de3.php.net/mysql_real_escape_string)`.\n+Data is escaped when saving back to the database, not when writing to object-properties.\n \n *  DataObject::get_by_id()\n *  DataObject::update()"
        },
        {
          "filename": "filesystem/Folder.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -77,7 +77,7 @@ function syncChildren() {\n \t\t// First, merge any children that are duplicates\n \t\t$duplicateChildrenNames = DB::query(\"SELECT \\\"Name\\\" FROM \\\"File\\\" WHERE \\\"ParentID\\\" = $parentID GROUP BY \\\"Name\\\" HAVING count(*) > 1\")->column();\n \t\tif($duplicateChildrenNames) foreach($duplicateChildrenNames as $childName) {\n-\t\t\t$childName = DB::getConn()->addslashes($childName);\n+\t\t\t$childName = Convert::raw2sql($childName);\n \t\t\t// Note, we do this in the database rather than object-model; otherwise we get all sorts of problems about deleting files\n \t\t\t$children = DB::query(\"SELECT \\\"ID\\\" FROM \\\"File\\\" WHERE \\\"Name\\\" = '$childName' AND \\\"ParentID\\\" = $parentID\")->column();\n \t\t\tif($children) {\n@@ -184,10 +184,10 @@ function constructChild($name) {\n \t\tif(Member::currentUser()) $ownerID = Member::currentUser()->ID;\n \t\telse $ownerID = 0;\n \t\t\n-\t\t$filename = DB::getConn()->addslashes($this->Filename . $name);\n+\t\t$filename = Convert::raw2sql($this->Filename . $name);\n \t\tif($className == 'Folder' ) $filename .= '/';\n \n-\t\t$name = DB::getConn()->addslashes($name);\n+\t\t$name = Convert::raw2sql($name);\n \t\t\n \t\tDB::query(\"INSERT INTO \\\"File\\\" \n \t\t\t(\\\"ClassName\\\", \\\"ParentID\\\", \\\"OwnerID\\\", \\\"Name\\\", \\\"Filename\\\", \\\"Created\\\", \\\"LastEdited\\\", \\\"Title\\\")"
        },
        {
          "filename": "search/AdvancedSearchForm.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -82,7 +82,7 @@ public function getResults($numPerPage = 10) {\n \t \t\tforeach($_REQUEST['OnlyShow'] as $section => $checked) {\n \t \t\t\t$items = explode(\",\", $section);\n \t \t\t\tforeach($items as $item) {\n-\t \t\t\t\t$page = DataObject::get_one('SiteTree', \"\\\"URLSegment\\\" = '\" . DB::getConn()->addslashes($item) . \"'\");\n+\t \t\t\t\t$page = DataObject::get_one('SiteTree', \"\\\"URLSegment\\\" = '\" . Convert::raw2sql($item) . \"'\");\n \t \t\t\t\t$pageList[] = $page->ID;\n \t \t\t\t\tif(!$page) user_error(\"Can't find a page called '$item'\", E_USER_WARNING);\n \t \t\t\t\t$page->loadDescendantIDListInto($pageList);"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5c1f28ac701eae3b59bc30b30b90418d0a01d840",
            "date": "2024-12-10T21:28:24Z",
            "author_login": "GuySartorelli"
          },
          {
            "sha": "57d06fc03849e6be59485b7b72003eb98e43525c",
            "date": "2024-12-02T08:33:13Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "f34f84286cc6b2076c10decaaf427f8d016747a7",
            "date": "2024-11-26T03:30:39Z",
            "author_login": "GuySartorelli"
          },
          {
            "sha": "ab27cc3bdd4e45015a7fb9d39627a2b1735de87f",
            "date": "2024-11-25T23:54:38Z",
            "author_login": "GuySartorelli"
          },
          {
            "sha": "6bd7f7e7fb9a460b2a01b7f6e0c05fb522223dff",
            "date": "2024-11-25T23:33:19Z",
            "author_login": "emteknetnz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "SQL injection vulnerability in the addslashes method in SilverStripe 2.3.x before 2.3.12 and 2.4.x before 2.4.6, when connected to a MySQL database using far east character encodings, allows remote attackers to execute arbitrary SQL commands via unspecified vectors.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2012-09-17T17:55:02.813",
    "last_modified": "2024-11-21T01:33:22.217",
    "fix_date": "2011-09-15T12:15:41Z"
  },
  "references": [
    {
      "url": "http://doc.silverstripe.org/framework/en/trunk/changelogs/2.3.12",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://doc.silverstripe.org/framework/en/trunk/changelogs/2.4.6",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/04/30/1",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/04/30/3",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/73cca09",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/ca78784",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/silverstripe-cms/commit/b5ea2f6",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "http://doc.silverstripe.org/framework/en/trunk/changelogs/2.3.12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://doc.silverstripe.org/framework/en/trunk/changelogs/2.4.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/04/30/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/04/30/3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/73cca09",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/sapphire/commit/ca78784",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/silverstripe/silverstripe-cms/commit/b5ea2f6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:10.699023",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "silverstripe-cms",
    "owner": "silverstripe",
    "created_at": "2011-02-02T04:01:36Z",
    "updated_at": "2025-01-12T18:05:59Z",
    "pushed_at": "2025-01-14T01:13:21Z",
    "size": 19797,
    "stars": 515,
    "forks": 334,
    "open_issues": 196,
    "watchers": 515,
    "has_security_policy": false,
    "default_branch": "5",
    "protected_branches": [
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "3",
      "3.0",
      "3.5",
      "3.6",
      "3.7",
      "4",
      "4.2",
      "4.3",
      "4.4",
      "4.5",
      "4.6",
      "4.7",
      "4.8",
      "4.9",
      "4.10",
      "4.11",
      "4.12",
      "4.13",
      "5",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "6",
      "6.0"
    ],
    "languages": {
      "PHP": 690405,
      "JavaScript": 122138,
      "Gherkin": 44457,
      "Scheme": 20452,
      "SCSS": 5799
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T17:54:42.203914"
  }
}