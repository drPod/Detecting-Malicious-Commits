{
  "cve_id": "CVE-2012-0036",
  "github_data": {
    "repository": "bagder/curl",
    "fix_commit": "75ca568fa1c19de4c5358fed246686de8467c238",
    "related_commits": [
      "75ca568fa1c19de4c5358fed246686de8467c238",
      "75ca568fa1c19de4c5358fed246686de8467c238"
    ],
    "patch_url": "https://github.com/bagder/curl/commit/75ca568fa1c19de4c5358fed246686de8467c238.patch",
    "fix_commit_details": {
      "sha": "75ca568fa1c19de4c5358fed246686de8467c238",
      "commit_date": "2011-12-23T12:24:16Z",
      "author": {
        "login": "bagder",
        "type": "User",
        "stats": {
          "total_commits": 18800,
          "average_weekly_commits": 14.37308868501529,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1251
        }
      },
      "commit_message": {
        "title": "URL sanitize: reject URLs containing bad data",
        "length": 740,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 93,
        "additions": 62,
        "deletions": 31
      },
      "files": [
        {
          "filename": "lib/escape.c",
          "status": "modified",
          "additions": 50,
          "deletions": 13,
          "patch": "@@ -31,6 +31,7 @@\n #include \"urldata.h\"\n #include \"warnless.h\"\n #include \"non-ascii.h\"\n+#include \"escape.h\"\n \n #define _MPRINTF_REPLACE /* use our functions only */\n #include <curl/mprintf.h>\n@@ -84,7 +85,7 @@ char *curl_easy_escape(CURL *handle, const char *string, int inlength)\n   char *testing_ptr = NULL;\n   unsigned char in; /* we need to treat the characters unsigned */\n   size_t newlen = alloc;\n-  int strindex=0;\n+  size_t strindex=0;\n   size_t length;\n   CURLcode res;\n \n@@ -132,23 +133,29 @@ char *curl_easy_escape(CURL *handle, const char *string, int inlength)\n }\n \n /*\n- * Unescapes the given URL escaped string of given length. Returns a\n- * pointer to a malloced string with length given in *olen.\n- * If length == 0, the length is assumed to be strlen(string).\n- * If olen == NULL, no output length is stored.\n+ * Curl_urldecode() URL decodes the given string.\n+ *\n+ * Optionally detects control characters (byte codes lower than 32) in the\n+ * data and rejects such data.\n+ *\n+ * Returns a pointer to a malloced string in *ostring with length given in\n+ * *olen. If length == 0, the length is assumed to be strlen(string).\n+ *\n  */\n-char *curl_easy_unescape(CURL *handle, const char *string, int length,\n-                         int *olen)\n+CURLcode Curl_urldecode(struct SessionHandle *data,\n+                        const char *string, size_t length,\n+                        char **ostring, size_t *olen,\n+                        bool reject_ctrl)\n {\n-  int alloc = (length?length:(int)strlen(string))+1;\n+  size_t alloc = (length?length:strlen(string))+1;\n   char *ns = malloc(alloc);\n   unsigned char in;\n-  int strindex=0;\n+  size_t strindex=0;\n   unsigned long hex;\n   CURLcode res;\n \n   if(!ns)\n-    return NULL;\n+    return CURLE_OUT_OF_MEMORY;\n \n   while(--alloc > 0) {\n     in = *string;\n@@ -164,16 +171,20 @@ char *curl_easy_unescape(CURL *handle, const char *string, int length,\n \n       in = curlx_ultouc(hex); /* this long is never bigger than 255 anyway */\n \n-      res = Curl_convert_from_network(handle, &in, 1);\n+      res = Curl_convert_from_network(data, &in, 1);\n       if(res) {\n         /* Curl_convert_from_network calls failf if unsuccessful */\n         free(ns);\n-        return NULL;\n+        return res;\n       }\n \n       string+=2;\n       alloc-=2;\n     }\n+    if(reject_ctrl && (in < 0x20)) {\n+      free(ns);\n+      return CURLE_URL_MALFORMAT;\n+    }\n \n     ns[strindex++] = in;\n     string++;\n@@ -183,7 +194,33 @@ char *curl_easy_unescape(CURL *handle, const char *string, int length,\n   if(olen)\n     /* store output size */\n     *olen = strindex;\n-  return ns;\n+\n+  if(ostring)\n+    /* store output string */\n+    *ostring = ns;\n+\n+  return CURLE_OK;\n+}\n+\n+/*\n+ * Unescapes the given URL escaped string of given length. Returns a\n+ * pointer to a malloced string with length given in *olen.\n+ * If length == 0, the length is assumed to be strlen(string).\n+ * If olen == NULL, no output length is stored.\n+ */\n+char *curl_easy_unescape(CURL *handle, const char *string, int length,\n+                         int *olen)\n+{\n+  char *str = NULL;\n+  size_t inputlen = length;\n+  size_t outputlen;\n+  CURLcode res = Curl_urldecode(handle, string, inputlen, &str, &outputlen,\n+                                FALSE);\n+  if(res)\n+    return NULL;\n+  if(olen)\n+    *olen = curlx_uztosi(outputlen);\n+  return str;\n }\n \n /* For operating systems/environments that use different malloc/free"
        },
        {
          "filename": "lib/escape.h",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -1,5 +1,5 @@\n-#ifndef __ESCAPE_H\n-#define __ESCAPE_H\n+#ifndef HEADER_CURL_ESCAPE_H\n+#define HEADER_CURL_ESCAPE_H\n \n /***************************************************************************\n  *                                  _   _ ____  _\n@@ -8,7 +8,7 @@\n  *                            | (__| |_| |  _ <| |___\n  *                             \\___|\\___/|_| \\_\\_____|\n  *\n- * Copyright (C) 1998 - 2006, Daniel Stenberg, <daniel@haxx.se>, et al.\n+ * Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.\n  *\n  * This software is licensed as described in the file COPYING, which\n  * you should have received as part of this distribution. The terms\n@@ -25,5 +25,9 @@\n /* Escape and unescape URL encoding in strings. The functions return a new\n  * allocated string or NULL if an error occurred.  */\n \n+CURLcode Curl_urldecode(struct SessionHandle *data,\n+                        const char *string, size_t length,\n+                        char **ostring, size_t *olen,\n+                        bool reject_crlf);\n \n #endif"
        },
        {
          "filename": "lib/imap.c",
          "status": "modified",
          "additions": 1,
          "deletions": 6,
          "patch": "@@ -953,17 +953,12 @@ static CURLcode imap_parse_url_path(struct connectdata *conn)\n   struct imap_conn *imapc = &conn->proto.imapc;\n   struct SessionHandle *data = conn->data;\n   const char *path = data->state.path;\n-  int len;\n \n   if(!*path)\n     path = \"INBOX\";\n \n   /* url decode the path and use this mailbox */\n-  imapc->mailbox = curl_easy_unescape(data, path, 0, &len);\n-  if(!imapc->mailbox)\n-    return CURLE_OUT_OF_MEMORY;\n-\n-  return CURLE_OK;\n+  return Curl_urldecode(data, path, 0, &imapc->mailbox, NULL, TRUE);\n }\n \n /* call this when the DO phase has completed */"
        },
        {
          "filename": "lib/pop3.c",
          "status": "modified",
          "additions": 1,
          "deletions": 5,
          "patch": "@@ -914,11 +914,7 @@ static CURLcode pop3_parse_url_path(struct connectdata *conn)\n   const char *path = data->state.path;\n \n   /* url decode the path and use this mailbox */\n-  pop3c->mailbox = curl_easy_unescape(data, path, 0, NULL);\n-  if(!pop3c->mailbox)\n-    return CURLE_OUT_OF_MEMORY;\n-\n-  return CURLE_OK;\n+  return Curl_urldecode(data, path, 0, &pop3c->mailbox, NULL, TRUE);\n }\n \n /* call this when the DO phase has completed */"
        },
        {
          "filename": "lib/smtp.c",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -1244,7 +1244,6 @@ static CURLcode smtp_connect(struct connectdata *conn,\n   struct SessionHandle *data = conn->data;\n   struct pingpong *pp = &smtpc->pp;\n   const char *path = conn->data->state.path;\n-  int len;\n   char localhost[HOSTNAME_MAX + 1];\n \n   *done = FALSE; /* default to not done yet */\n@@ -1316,9 +1315,9 @@ static CURLcode smtp_connect(struct connectdata *conn,\n   }\n \n   /* url decode the path and use it as domain with EHLO */\n-  smtpc->domain = curl_easy_unescape(conn->data, path, 0, &len);\n-  if(!smtpc->domain)\n-    return CURLE_OUT_OF_MEMORY;\n+  result = Curl_urldecode(conn->data, path, 0, &smtpc->domain, NULL, TRUE);\n+  if(result)\n+    return result;\n \n   /* When we connect, we start in the state where we await the server greeting\n    */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "55f3ba447fe85f94964f5bbe989b2fd6c3719b99",
            "date": "2025-01-12T19:07:09Z",
            "author_login": "vszakats"
          },
          {
            "sha": "be82a3605a4b539580b3de776ffcca25b8770e43",
            "date": "2025-01-14T14:47:21Z",
            "author_login": "bagder"
          },
          {
            "sha": "2f8ecd5dbd55b801b0ae13b9374c06ec19e8ea9e",
            "date": "2025-01-14T13:53:42Z",
            "author_login": "bagder"
          },
          {
            "sha": "308437ac53a142be2c3470330e7de3737915bb23",
            "date": "2025-01-13T18:52:50Z",
            "author_login": "vszakats"
          },
          {
            "sha": "b9c173ebad458398450d207b0c4e34b401fd0486",
            "date": "2025-01-13T22:49:09Z",
            "author_login": "bagder"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "curl and libcurl 7.2x before 7.24.0 do not properly consider special characters during extraction of a pathname from a URL, which allows remote attackers to conduct data-injection attacks via a crafted URL, as demonstrated by a CRLF injection attack on the (1) IMAP, (2) POP3, or (3) SMTP protocol.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2012-04-13T20:55:01.493",
    "last_modified": "2024-11-21T01:34:15.543",
    "fix_date": "2011-12-23T12:24:16Z"
  },
  "references": [
    {
      "url": "http://curl.haxx.se/curl-url-sanitize.patch",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://curl.haxx.se/docs/adv_20120124.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c03360041",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c03360041",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://lists.apple.com/archives/security-announce/2012/May/msg00001.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/48256",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://security.gentoo.org/glsa/glsa-201203-02.xml",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://support.apple.com/kb/HT5281",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2012/dsa-2398",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2012:058",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.oracle.com/technetwork/topics/security/cpujul2015-2367936.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/51665",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1032924",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=773457",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/bagder/curl/commit/75ca568fa1c19de4c5358fed246686de8467c238",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbhf03760en_us",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://curl.haxx.se/curl-url-sanitize.patch",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://curl.haxx.se/docs/adv_20120124.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c03360041",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://h20000.www2.hp.com/bizsupport/TechSupport/Document.jsp?objectID=c03360041",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.apple.com/archives/security-announce/2012/May/msg00001.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/48256",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://security.gentoo.org/glsa/glsa-201203-02.xml",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://support.apple.com/kb/HT5281",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2012/dsa-2398",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2012:058",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.oracle.com/technetwork/topics/security/cpujul2015-2367936.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/51665",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1032924",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=773457",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/bagder/curl/commit/75ca568fa1c19de4c5358fed246686de8467c238",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://h20566.www2.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbhf03760en_us",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:07.257346",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "curl",
    "owner": "bagder",
    "created_at": "2010-03-18T22:32:22Z",
    "updated_at": "2025-01-14T16:47:01Z",
    "pushed_at": "2025-01-14T16:46:56Z",
    "size": 97196,
    "stars": 36518,
    "forks": 6522,
    "open_issues": 26,
    "watchers": 36518,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 7867907,
      "Perl": 850648,
      "M4": 515820,
      "Python": 440097,
      "CMake": 267646,
      "DIGITAL Command Language": 237801,
      "Shell": 142303,
      "Makefile": 121830,
      "Batchfile": 50260,
      "Dockerfile": 1711,
      "Emacs Lisp": 1348
    },
    "commit_activity": {
      "total_commits_last_year": 2423,
      "avg_commits_per_week": 46.59615384615385,
      "days_active_last_year": 344
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:21:05.086355"
  }
}