{
  "cve_id": "CVE-2012-10004",
  "github_data": {
    "repository": "backdrop-contrib/basic_cart",
    "fix_commit": "a10424ccd4b3b4b433cf33b73c1ad608b11890b4",
    "related_commits": [
      "a10424ccd4b3b4b433cf33b73c1ad608b11890b4",
      "a10424ccd4b3b4b433cf33b73c1ad608b11890b4"
    ],
    "patch_url": "https://github.com/backdrop-contrib/basic_cart/commit/a10424ccd4b3b4b433cf33b73c1ad608b11890b4.patch",
    "fix_commit_details": {
      "sha": "a10424ccd4b3b4b433cf33b73c1ad608b11890b4",
      "commit_date": "2012-01-31T16:16:38Z",
      "author": {
        "login": "alexdicianu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "XSS issue, drupal mail instead of mail system",
        "length": 45,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 130,
        "additions": 51,
        "deletions": 79
      },
      "files": [
        {
          "filename": "basic_cart.admin.inc",
          "status": "modified",
          "additions": 9,
          "deletions": 47,
          "patch": "@@ -25,7 +25,7 @@ function basic_cart_admin_content_type() {\n     '#description' => t('Please select the content types for which you wish to have the \"Add to cart\" option.'),\n   );\n \n-  $form['content_type']['types'] = array(\n+  $form['content_type']['basic_cart_content_types'] = array(\n     '#title' => t('Content types'),\n     '#type' => 'checkboxes',\n     '#options' => $options,\n@@ -38,34 +38,34 @@ function basic_cart_admin_content_type() {\n     '#description' => t('Here you can customize the mails sent to the site administrator and customer, after an order is placed.'),\n   );\n \n-  $form['messages']['admin_subject'] = array(\n+  $form['messages']['basic_cart_admin_subject'] = array(\n     '#title' => t('Subject'),\n     '#type' => 'textfield',\n     '#description' => t(\"Subject field for the administrator's email.\"),\n     '#default_value' => variable_get('basic_cart_admin_subject'),\n   );\n \n-  $form['messages']['admin_message'] = array(\n+  $form['messages']['basic_cart_admin_message'] = array(\n     '#title' => t('Admin email'),\n     '#type' => 'textarea',\n     '#description' => t('This email will be sent to the site administrator just after an order is placed. Availabale tokes: %CUSTOMER_NAME, %CUSTOMER_EMAIL, %CUSTOMER_PHONE, %CUSTOMER_ADDRESS, %CUSTOMER_MESSAGE, %ORDER_DETAILS'),\n     '#default_value' => variable_get('basic_cart_admin_message'),\n   );\n \n-  $form['messages']['send_user_message'] = array(\n+  $form['messages']['basic_cart_send_user_message'] = array(\n     '#title' => t('Send an email to the customer after an order is placed'),\n     '#type' => 'checkbox',\n     '#default_value' => variable_get('basic_cart_send_user_message'),\n   );\n \n-  $form['messages']['user_subject'] = array(\n+  $form['messages']['basic_cart_user_subject'] = array(\n     '#title' => t('Subject'),\n     '#type' => 'textfield',\n     '#description' => t(\"Subject field for the user's email.\"),\n     '#default_value' => variable_get('basic_cart_user_subject'),\n   );\n \n-  $form['messages']['user_message'] = array(\n+  $form['messages']['basic_cart_user_message'] = array(\n     '#title' => t('User email'),\n     '#type' => 'textarea',\n     '#description' => t('This email will be sent to the user just after an order is placed. Availabale tokes: %CUSTOMER_NAME, %CUSTOMER_EMAIL, %CUSTOMER_PHONE, %CUSTOMER_ADDRESS, %CUSTOMER_MESSAGE, %ORDER_DETAILS'),\n@@ -78,57 +78,19 @@ function basic_cart_admin_content_type() {\n     '#description' => t('Here you can customize the thank you page.'),\n   );\n \n-  $form['thank_you']['thank_you_title'] = array(\n+  $form['thank_you']['basic_cart_thank_you_title'] = array(\n     '#title' => t('Title'),\n     '#type' => 'textfield',\n     '#description' => t('Thank you page title.'),\n     '#default_value' => variable_get('basic_cart_thank_you_title'),\n   );\n \n-  $form['thank_you']['thank_you_message'] = array(\n+  $form['thank_you']['basic_cart_thank_you_message'] = array(\n     '#title' => t('Text'),\n     '#type' => 'textarea',\n     '#description' => t('Thank you page text.'),\n     '#default_value' => variable_get('basic_cart_thank_you_message'),\n   );\n \n-  $form['save'] = array(\n-    '#type' => 'submit',\n-    '#value' => t('Save configuration'),\n-  );\n-\n-  return $form;\n-}\n-\n-\n-/**\n- * Callback for the admin configuration page submit function\n- */\n-function basic_cart_admin_content_type_submit($form_id, $form_state) {\n-  $types = $form_state['values']['types'];\n-  $selected_types = array();\n-  foreach ($types as $type) {\n-    if (!empty($type)) {\n-      $selected_types[] = $type;\n-    }\n-  }\n-\n-  // Content types.\n-  variable_set('basic_cart_content_types', $selected_types);\n-\n-  // Admin message.\n-  variable_set('basic_cart_admin_message', $form_state['values']['admin_message']);\n-  variable_set('basic_cart_admin_subject', $form_state['values']['admin_subject']);\n-\n-  // User message.\n-  variable_set('basic_cart_send_user_message', $form_state['values']['send_user_message']);\n-  variable_set('basic_cart_user_message', $form_state['values']['user_message']);\n-  variable_set('basic_cart_user_subject', $form_state['values']['user_subject']);\n-\n-  // Thank you message.\n-  variable_set('basic_cart_thank_you_title', $form_state['values']['thank_you_title']);\n-  variable_set('basic_cart_thank_you_message', $form_state['values']['thank_you_message']);\n-\n-  // Message.\n-  drupal_set_message(t('The configuration options have been saved.'));\n+  return system_settings_form($form);\n }"
        },
        {
          "filename": "basic_cart.cart.inc",
          "status": "modified",
          "additions": 31,
          "deletions": 31,
          "patch": "@@ -236,47 +236,29 @@ function basic_cart_checkout_form_submit($form, &$form_state) {\n   // Admin mail.\n   $message_html = variable_get('basic_cart_admin_message');\n   $message_html = str_replace($search, $replace, $message_html);\n+  $params['admin_message'] = filter_xss($message_html);\n+\n+  $site_mail = variable_get('site_mail');\n \n   // Sending mail.\n-  $my_module = 'basic_cart';\n-  $my_mail_token = 'checkout';\n-  $from = variable_get('site_mail');\n-\n-  $message = array(\n-    'id' => $my_module . '_' . $my_mail_token,\n-    'to' => $from,\n-    'subject' => variable_get('basic_cart_admin_subject'),\n-    'body' => $message_html,\n-    'headers' => array(\n-      'From' => $from,\n-      'Sender' => $from,\n-      'Return-Path' => $from,\n-    ),\n-  );\n-  $system = drupal_mail_system($my_module, $my_mail_token);\n+  $message = drupal_mail('basic_cart', 'admin_mail', $site_mail, language_default(), $params);\n+\n   $mails_sent = 0;\n-  if ($system->mail($message)) {\n+  if ($message['result']) {\n     $mails_sent++;\n   }\n+  \n   // User email.\n   $send_user_mail = variable_get('basic_cart_send_user_message');\n   if ($send_user_mail) {\n     $message_html = variable_get('basic_cart_user_message');\n     $message_html = str_replace($search, $replace, $message_html);\n+    $params['user_message'] = filter_xss($message_html);\n \n-    $message = array(\n-      'id' => $my_module . '_' . $my_mail_token,\n-      'to' => $form_state['values']['basic_cart_checkout_email'],\n-      'subject' => variable_get('basic_cart_user_subject'),\n-      'body' => $message_html,\n-      'headers' => array(\n-        'From' => $from,\n-        'Sender' => $from,\n-        'Return-Path' => $from,\n-      ),\n-    );\n-    $system = drupal_mail_system($my_module, $my_mail_token);\n-    if ($system->mail($message)) {\n+    // Sending mail.\n+    $message = drupal_mail('basic_cart', 'user_mail', $form_state['values']['basic_cart_checkout_email'], language_default(), $params);\n+\n+    if ($message['result']) {\n       $mails_sent++;\n     }\n   }\n@@ -290,12 +272,30 @@ function basic_cart_checkout_form_submit($form, &$form_state) {\n   }\n }\n \n+\n+/**\n+ * Implements hook_mail().\n+ */\n+function basic_cart_mail($key, &$message, $params) {\n+  switch($key) {\n+    case 'admin_mail':\n+      $message['subject'] = check_plain(variable_get('basic_cart_admin_subject'));\n+      $message['body'][] = $params['admin_message'];\n+      break;\n+\n+    case 'user_mail':\n+      $message['subject'] = check_plain(variable_get('basic_cart_user_subject'));\n+      $message['body'][] = $params['user_message'];\n+      break;\n+  }\n+}\n+\n /**\n  * Callback for thank you page.\n  */\n function basic_cart_checkout_thank_you() {\n   $title = variable_get('basic_cart_thank_you_title');\n   drupal_set_title($title);\n   $message = variable_get('basic_cart_thank_you_message');\n-  return nl2br($message);\n+  return nl2br(filter_xss($message));\n }"
        },
        {
          "filename": "basic_cart_cart_render.tpl.php",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -3,6 +3,7 @@\n  * @file\n  * Basic cart shopping cart html template\n  */\n+\n ?>\n \n <?php if( empty($cart) ): ?>\n@@ -36,7 +37,15 @@\n           \n             <?php if(!$is_checkout): ?>\n               <div class=\"basic-cart-delete-image cell\">\n-                <?php print l('<img src=\"' . $base_path . drupal_get_path('module', 'basic_cart') . '/images/delete.gif\" border=\"0\" />', 'cart/remove/' . $nid, array('html' => TRUE)); ?>\n+                <?php \n+                $variables = array(\n+                  'path' => $base_path . drupal_get_path('module', 'basic_cart') . '/images/delete.gif',\n+                  'alt' => t('Remove from cart'),\n+                  'title' => t('Remove from cart'),\n+                  'attributes' => array('class' => 'basic-cart-delete-image-image'),\n+                );\n+                print l(theme('image', $variables), 'cart/remove/' . $nid, array('html' => TRUE));\n+                ?>\n               </div>\n             <?php endif; ?>\n         </div>"
        },
        {
          "filename": "basic_cart_cart_render_block.tpl.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -3,6 +3,7 @@\n  * @file\n  * Basic cart shopping cart block\n  */\n+\n ?>\n \n <?php if( empty($cart) ): ?>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "81cafbe4113c59230734247a43d3ce59a5798e25",
            "date": "2024-10-09T15:53:26Z",
            "author_login": "robertgarrigos"
          },
          {
            "sha": "3aa91d6adfe85110250984f8809e88562ea3098c",
            "date": "2023-08-11T17:04:48Z",
            "author_login": "robertgarrigos"
          },
          {
            "sha": "415fe868ccdeb84f8099da3b8d957eb7bdb55a24",
            "date": "2023-08-11T17:04:20Z",
            "author_login": "robertgarrigos"
          },
          {
            "sha": "23e2a3a1f6605cc2a1a27dc17bc8991eac70d03b",
            "date": "2023-08-11T16:55:24Z",
            "author_login": "robertgarrigos"
          },
          {
            "sha": "55e8a9975d152fabf5975b9bb0ff5d120007b914",
            "date": "2023-08-11T16:54:24Z",
            "author_login": "robertgarrigos"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "A vulnerability was found in backdrop-contrib Basic Cart on Drupal. It has been classified as problematic. Affected is the function basic_cart_checkout_form_submit of the file basic_cart.cart.inc. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 1.x-1.1.1 is able to address this issue. The patch is identified as a10424ccd4b3b4b433cf33b73c1ad608b11890b4. It is recommended to upgrade the affected component. VDB-217950 is the identifier assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-11T07:15:09.917",
    "last_modified": "2024-11-21T01:36:07.937",
    "fix_date": "2012-01-31T16:16:38Z"
  },
  "references": [
    {
      "url": "https://github.com/backdrop-contrib/basic_cart/commit/a10424ccd4b3b4b433cf33b73c1ad608b11890b4",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backdrop-contrib/basic_cart/releases/tag/1.x-1.1.1",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217950",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217950",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backdrop-contrib/basic_cart/commit/a10424ccd4b3b4b433cf33b73c1ad608b11890b4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backdrop-contrib/basic_cart/releases/tag/1.x-1.1.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217950",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217950",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.539130",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "basic_cart",
    "owner": "backdrop-contrib",
    "created_at": "2015-03-05T02:19:00Z",
    "updated_at": "2024-10-26T09:12:27Z",
    "pushed_at": "2024-10-09T15:53:26Z",
    "size": 108,
    "stars": 0,
    "forks": 1,
    "open_issues": 0,
    "watchers": 0,
    "has_security_policy": false,
    "default_branch": "1.x-1.x",
    "protected_branches": [],
    "languages": {
      "PHP": 69230,
      "CSS": 2451
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T22:22:52.369767"
  }
}