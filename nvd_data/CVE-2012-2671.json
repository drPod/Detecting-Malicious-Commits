{
  "cve_id": "CVE-2012-2671",
  "github_data": {
    "repository": "rtomayko/rack-cache",
    "fix_commit": "2e3a64d07daac4c757cc57620f2288e865a09b90",
    "related_commits": [
      "2e3a64d07daac4c757cc57620f2288e865a09b90",
      "2e3a64d07daac4c757cc57620f2288e865a09b90"
    ],
    "patch_url": "https://github.com/rtomayko/rack-cache/commit/2e3a64d07daac4c757cc57620f2288e865a09b90.patch",
    "fix_commit_details": {
      "sha": "2e3a64d07daac4c757cc57620f2288e865a09b90",
      "commit_date": "2012-02-15T21:43:57Z",
      "author": {
        "login": "rtomayko",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #52 from rmm5t/strip_set_cookie",
        "length": 140,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 51,
        "additions": 51,
        "deletions": 0
      },
      "files": [
        {
          "filename": "lib/rack/cache/context.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -260,6 +260,7 @@ def fetch\n \n     # Write the response to the cache.\n     def store(response)\n+      strip_ignore_headers(response)\n       metastore.store(@request, response, entitystore)\n       response.headers['Age'] = response.age.to_s\n     rescue Exception => e\n@@ -269,6 +270,12 @@ def store(response)\n       record :store\n     end\n \n+    # Remove all ignored response headers before writing to the cache.\n+    def strip_ignore_headers(response)\n+      stripped_values = ignore_headers.map { |name| response.headers.delete(name) }\n+      record :ignore if stripped_values.any?\n+    end\n+\n     def log_error(exception)\n       @env['rack.errors'].write(\"cache error: #{exception.message}\\n#{exception.backtrace.join(\"\\n\")}\\n\")\n     end"
        },
        {
          "filename": "lib/rack/cache/options.rb",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -78,6 +78,14 @@ def option_name(key)\n     # Default: 0\n     option_accessor :default_ttl\n \n+    # Set of response headers that are removed before storing them in the\n+    # cache. These headers are only removed for cacheable responses.  For\n+    # example, in most cases, it makes sense to prevent cookies from being\n+    # stored in the cache.\n+    #\n+    # Default: ['Set-Cookie']\n+    option_accessor :ignore_headers\n+\n     # Set of request headers that trigger \"private\" cache-control behavior\n     # on responses that don't explicitly state whether the response is\n     # public or private via a Cache-Control directive. Applications that use\n@@ -138,6 +146,7 @@ def initialize_options(options={})\n         'rack-cache.metastore'        => 'heap:/',\n         'rack-cache.entitystore'      => 'heap:/',\n         'rack-cache.default_ttl'      => 0,\n+        'rack-cache.ignore_headers'   => ['Set-Cookie'],\n         'rack-cache.private_headers'  => ['Authorization', 'Cookie'],\n         'rack-cache.allow_reload'     => false,\n         'rack-cache.allow_revalidate' => false,"
        },
        {
          "filename": "test/context_test.rb",
          "status": "modified",
          "additions": 35,
          "deletions": 0,
          "patch": "@@ -57,6 +57,7 @@\n     response.should.be.ok\n     cache.trace.should.include :miss\n     cache.trace.should.include :store\n+    cache.trace.should.not.include :ignore\n     response.headers.should.include 'Age'\n     response.headers['Cache-Control'].should.equal 'public'\n   end\n@@ -85,6 +86,40 @@\n     response.headers['Cache-Control'].should.equal 'private'\n   end\n \n+  it 'does remove Set-Cookie response header from a cacheable response' do\n+    respond_with 200, 'Cache-Control' => 'public', 'ETag' => '\"FOO\"', 'Set-Cookie' => 'TestCookie=OK'\n+    get '/'\n+\n+    app.should.be.called\n+    response.should.be.ok\n+    cache.trace.should.include :store\n+    cache.trace.should.include :ignore\n+    response.headers['Set-Cookie'].should.be.nil\n+  end\n+\n+  it 'does remove all configured ignore_headers from a cacheable response' do\n+    respond_with 200, 'Cache-Control' => 'public', 'ETag' => '\"FOO\"', 'SET-COOKIE' => 'TestCookie=OK', 'X-Strip-Me' => 'Secret'\n+    get '/', 'rack-cache.ignore_headers' => ['set-cookie', 'x-strip-me']\n+\n+    app.should.be.called\n+    response.should.be.ok\n+    cache.trace.should.include :store\n+    cache.trace.should.include :ignore\n+    response.headers['Set-Cookie'].should.be.nil\n+    response.headers['x-strip-me'].should.be.nil\n+  end\n+\n+  it 'does not remove Set-Cookie response header from a private response' do\n+    respond_with 200, 'Cache-Control' => 'private', 'Set-Cookie' => 'TestCookie=OK'\n+    get '/'\n+\n+    app.should.be.called\n+    response.should.be.ok\n+    cache.trace.should.not.include :store\n+    cache.trace.should.not.include :ignore\n+    response.headers['Set-Cookie'].should.equal 'TestCookie=OK'\n+  end\n+\n   it 'responds with 304 when If-Modified-Since matches Last-Modified' do\n     timestamp = Time.now.httpdate\n     respond_with do |req,res|"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "07ff2f8d61379e0f54464928baf5f1cc3d94039c",
            "date": "2022-03-04T03:57:47Z",
            "author_login": "grosser"
          },
          {
            "sha": "1ab44995cfb57b9b49567cd0fafb7d88c41fbdc0",
            "date": "2021-09-26T23:16:54Z",
            "author_login": "grosser"
          },
          {
            "sha": "1205e71a1f1f9839481990316573d4e66cecbc74",
            "date": "2021-09-26T23:16:00Z",
            "author_login": "grosser"
          },
          {
            "sha": "b7c301f7ca850fcd8476ea96e15e02f94bee50c4",
            "date": "2021-09-26T23:13:03Z",
            "author_login": "grosser"
          },
          {
            "sha": "90cbc35ec7c1ed471d748344e0710cda13e955dc",
            "date": "2021-09-26T22:59:18Z",
            "author_login": "ykitamura-mdsol"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": null,
    "description": "The Rack::Cache rubygem 0.3.0 through 1.1 caches Set-Cookie and other sensitive headers, which allows attackers to obtain sensitive cookie information, hijack web sessions, or have other unspecified impact by accessing the cache.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2012-06-17T03:41:41.437",
    "last_modified": "2024-11-21T01:39:24.897",
    "fix_date": "2012-02-15T21:43:57Z"
  },
  "references": [
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081812.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/06/06/4",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/06/06/8",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=763650",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=824520",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/blob/master/CHANGES",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/commit/2e3a64d07daac4c757cc57620f2288e865a09b90",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/pull/52",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2012-June/081812.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/06/06/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/06/06/8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.novell.com/show_bug.cgi?id=763650",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=824520",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/blob/master/CHANGES",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/commit/2e3a64d07daac4c757cc57620f2288e865a09b90",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rtomayko/rack-cache/pull/52",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:07.275728",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rack-cache",
    "owner": "rtomayko",
    "created_at": "2008-10-25T02:02:09Z",
    "updated_at": "2025-01-05T01:10:31Z",
    "pushed_at": "2022-03-04T03:57:50Z",
    "size": 952,
    "stars": 822,
    "forks": 123,
    "open_issues": 35,
    "watchers": 822,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Ruby": 89308,
      "HTML": 941
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:58:54.364778"
  }
}