{
  "cve_id": "CVE-2012-4506",
  "github_data": {
    "repository": "sitaramc/gitolite",
    "fix_commit": "f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
    "related_commits": [
      "f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
      "f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
      "commit_date": "2012-10-05T01:49:59Z",
      "author": {
        "login": "sitaramc",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "(security) fix bug in pattern to detect path traversal",
        "length": 282,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 33,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/gitolite-shell",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -168,7 +168,7 @@ sub sanity {\n     my $repo = shift;\n     _die \"'$repo' contains bad characters\" if $repo !~ $REPONAME_PATT;\n     _die \"'$repo' ends with a '/'\"         if $repo =~ m(/$);\n-    _die \"'$repo' contains '..'\"           if $repo =~ m(\\.\\.$);\n+    _die \"'$repo' contains '..'\"           if $repo =~ m(\\.\\.);\n }\n \n # ----------------------------------------------------------------------"
        },
        {
          "filename": "src/lib/Gitolite/Conf/Load.pm",
          "status": "modified",
          "additions": 14,
          "deletions": 1,
          "patch": "@@ -67,8 +67,9 @@ my $last_repo = '';\n \n sub access {\n     my ( $repo, $user, $aa, $ref ) = @_;\n-    _die \"invalid repo '$repo'\" if not( $repo and $repo =~ $REPOPATT_PATT );\n     _die \"invalid user '$user'\" if not( $user and $user =~ $USERNAME_PATT );\n+    sanity($repo);\n+\n     my $deny_rules = option( $repo, 'deny-rules' );\n     load($repo);\n \n@@ -175,8 +176,18 @@ sub option {\n     return $ret->{$option};\n }\n \n+sub sanity {\n+    my $repo = shift;\n+\n+    _die \"invalid repo '$repo'\" if not( $repo and $repo =~ $REPOPATT_PATT );\n+    _die \"'$repo' ends with a '/'\" if $repo =~ m(/$);\n+    _die \"'$repo' contains '..'\" if $repo =~ $REPONAME_PATT and $repo =~ m(\\.\\.);\n+}\n+\n sub repo_missing {\n     my $repo = shift;\n+    sanity($repo);\n+\n     return not -d \"$rc{GL_REPO_BASE}/$repo.git\";\n }\n \n@@ -400,6 +411,8 @@ sub generic_name {\n \n sub creator {\n     my $repo = shift;\n+    sanity($repo);\n+\n     return ( $ENV{GL_USER} || '' ) if repo_missing($repo);\n     my $f       = \"$rc{GL_REPO_BASE}/$repo.git/gl-creator\";\n     my $creator = '';"
        },
        {
          "filename": "t/0-me-first.t",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -6,10 +6,12 @@ use warnings;\n use lib \"src/lib\";\n use Gitolite::Test;\n \n+my $rb = `gitolite query-rc -n GL_REPO_BASE`;\n+\n # initial smoke tests\n # ----------------------------------------------------------------------\n \n-try \"plan 65\";\n+try \"plan 73\";\n \n # basic push admin repo\n confreset;confadd '\n@@ -75,4 +77,19 @@ try \"\n     glt ls-remote u5 file:///cc/1;  ok;     perl s/TRACE.*//g; !/\\\\S/\n     glt ls-remote u5 file:///cc/2;  !ok;    /DENIED by fallthru/\n     glt ls-remote u6 file:///cc/2;  !ok;    /DENIED by fallthru/\n+\n+    # command\n+    glt perms u4 -c cc/bar/baz/frob + READERS u2;\n+                                    ok;     /Initialized empty .*cc/bar/baz/frob.git/\n+\n+    # path traversal\n+    glt ls-remote u4 file:///cc/dd/../ee\n+                                    !ok;    /FATAL: 'cc/dd/\\\\.\\\\./ee' contains '\\\\.\\\\.'/\n+    glt ls-remote u5 file:///cc/../../../../../..$rb/gitolite-admin\n+                                    !ok;    /FATAL: 'cc/../../../../../..$rb/gitolite-admin' contains '\\\\.\\\\.'/\n+\n+    glt perms u4 -c cc/bar/baz/../frob + READERS u2\n+                                    !ok;    /FATAL: 'cc/bar/baz/\\\\.\\\\./frob' contains '\\\\.\\\\.'/\n+\n+\n \";"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a546e5e8bdbb7069b995ca95fd20556157b0b439",
            "date": "2024-05-28T01:18:50Z",
            "author_login": "sitaramc"
          },
          {
            "sha": "6b05ce44c00b95adf22c3e794d38f7166b86b6d0",
            "date": "2024-05-12T20:15:09Z",
            "author_login": "robbat2"
          },
          {
            "sha": "badc0a6faeb44a91b3cc1bdb70ff001499369a6a",
            "date": "2024-03-18T13:46:18Z",
            "author_login": "sitaramc"
          },
          {
            "sha": "8f600d84e85421609d9db1c0311e8983542209f6",
            "date": "2023-11-03T01:19:59Z",
            "author_login": "sitaramc"
          },
          {
            "sha": "9d3d03d7b82e71e1bf4b9544876386b38f87f273",
            "date": "2023-07-14T03:02:24Z",
            "author_login": "sitaramc"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-22",
    "description": "Directory traversal vulnerability in gitolite 3.x before 3.1, when wild card repositories and a pattern matching \"../\" are enabled, allows remote authenticated users to create arbitrary repositories and possibly perform other actions via a .. (dot dot) in a repository name.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2012-10-22T23:55:07.243",
    "last_modified": "2024-11-21T01:43:01.630",
    "fix_date": "2012-10-05T01:49:59Z"
  },
  "references": [
    {
      "url": "http://secunia.com/advisories/50896",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/10/10/1",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/10/10/2",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/55853",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79130",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/sitaramc/gitolite/commit/f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://groups.google.com/forum/#%21topic/gitolite/K9SnQNhCQ-0/discussion",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/50896",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/10/10/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/10/10/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/55853",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79130",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/sitaramc/gitolite/commit/f636ce3ba3e340569b26d1e47b9d9b62dd8a3bf2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://groups.google.com/forum/#%21topic/gitolite/K9SnQNhCQ-0/discussion",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:10.709066",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "gitolite",
    "owner": "sitaramc",
    "created_at": "2009-08-24T00:53:39Z",
    "updated_at": "2025-01-24T23:28:49Z",
    "pushed_at": "2024-05-28T01:49:35Z",
    "size": 3154,
    "stars": 8435,
    "forks": 1004,
    "open_issues": 6,
    "watchers": 8435,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Perl": 550652,
      "Shell": 72122,
      "Vim Script": 5731
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T08:06:50.711908"
  }
}