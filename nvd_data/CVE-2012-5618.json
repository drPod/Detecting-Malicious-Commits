{
  "cve_id": "CVE-2012-5618",
  "github_data": {
    "repository": "ushahidi/Ushahidi_Web",
    "fix_commit": "e8c7ecd42818c331db8945d20f8b1865bc6d157e",
    "related_commits": [
      "e8c7ecd42818c331db8945d20f8b1865bc6d157e",
      "e8c7ecd42818c331db8945d20f8b1865bc6d157e"
    ],
    "patch_url": "https://github.com/ushahidi/Ushahidi_Web/commit/e8c7ecd42818c331db8945d20f8b1865bc6d157e.patch",
    "fix_commit_details": {
      "sha": "e8c7ecd42818c331db8945d20f8b1865bc6d157e",
      "commit_date": "2012-11-12T03:30:41Z",
      "author": {
        "login": "rjmackay",
        "type": "User",
        "stats": {
          "total_commits": 759,
          "average_weekly_commits": 0.8866822429906542,
          "total_additions": 77956,
          "total_deletions": 46744,
          "weeks_active": 76
        }
      },
      "commit_message": {
        "title": "Make forgot password tokens use better random token #646",
        "length": 355,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 57,
        "additions": 48,
        "deletions": 9
      },
      "files": [
        {
          "filename": "application/controllers/login.php",
          "status": "modified",
          "additions": 4,
          "deletions": 9,
          "patch": "@@ -320,13 +320,9 @@ public function index($user_id = 0)\n \t\t\t\t\telse\n \t\t\t\t\t{\n \t\t\t\t\t\t// Reset locally\n-\n-\t\t\t\t\t\t// Secret consists of email and the last_login field.\n-\t\t\t\t\t\t// So as soon as the user logs in again,\n-\t\t\t\t\t\t// the reset link expires automatically.\n-\t\t\t\t\t\t$secret = $auth->hash_password($user->email.$user->last_login);\n-\t\t\t\t\t\t$secret_link = url::site('login/index/'.$user->id.'/'.$secret.'?reset');\n-\t\t\t\t\t\t$email_sent = $this->_email_resetlink($post->resetemail,$user->name,$secret_link);\n+\t\t\t\t\t\t$secret = $user->forgot_password_token();\n+\t\t\t\t\t\t$secret_link = url::site('login/index/'.$user->id.'/'.urlencode($secret).'?reset');\n+\t\t\t\t\t\t$email_sent = $this->_email_resetlink($post->resetemail, $user->name, $secret_link);\n \t\t\t\t\t}\n \n \t\t\t\t\tif ($email_sent == TRUE)\n@@ -870,8 +866,7 @@ private function _new_password($user_id = 0, $password, $token)\n \t\t\telse\n \t\t\t{\n \t\t\t\t// Use Standard\n-\n-\t\t\t\tif($auth->hash_password($user->email.$user->last_login, $auth->find_salt($token)) == $token)\n+\t\t\t\tif($user->check_forgot_password_token($token))\n \t\t\t\t{\n \t\t\t\t\t$user->password = $password;\n \t\t\t\t\t$user->save();"
        },
        {
          "filename": "application/hooks/2_settings.php",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -60,3 +60,12 @@\n // Additional Mime Types (KMZ/KML)\n Kohana::config_set('mimes.kml', array('text/xml'));\n Kohana::config_set('mimes.kmz', array('text/xml'));\n+\n+// Set 'settings.forgot_password_key' if not set already\n+if ( ! Kohana::config('settings.forgot_password_secret'))\n+{\n+\t$pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+[]{};:,.?`~';\n+\t$key = text::random($pool, 64);\n+\tSettings_Model::save_setting('forgot_password_secret', $key);\n+\tKohana::config_set('settings.forgot_password_secret', $key);\n+}"
        },
        {
          "filename": "application/models/user.php",
          "status": "modified",
          "additions": 35,
          "deletions": 0,
          "patch": "@@ -360,5 +360,40 @@ public function dashboard()\n \t\t// Send anyone else to login\n \t\treturn 'login';\n \t}\n+\t\n+\t/**\n+\t * Get a new forgotten password challenge token for this user\n+\t * @param string $salt Optional salt for token generation (use this)\n+\t * @return string\n+\t */\n+\tpublic function forgot_password_token()\n+\t{\n+\t\treturn $this->_forgot_password_token();\n+\t}\n+\n+\t/**\n+\t * Check to see if forgotten password token is valid\n+\t * @param string $token token to check\n+\t * @return boolean is token valid\n+\t **/\n+\tpublic function check_forgot_password_token($token)\n+\t{\n+\t\t$salt = substr($token, 0, 32);\n+\t\treturn $this->_forgot_password_token($salt) == $token;\n+\t}\n+\n+\t/**\n+\t * Generate a forgotten password challenge token for this user\n+\t * @param string $salt Optional salt for token generation (only use this for checking a token in URL)\n+\t * @return string token\n+\t */\n+\tprivate function _forgot_password_token($salt = FALSE)\n+\t{\n+\t\t// Secret consists of email and the last_login field.\n+\t\t// So as soon as the user logs in again, the reset link expires automatically.\n+\t\t$salt = $salt ? $salt : text::random('alnum', 32); // Limited charset to keep it URL friendly\n+\t\t$key = Kohana::config('settings.forgot_password_secret');\n+\t\treturn $salt . hash_hmac('sha1', $this->last_login . $this->email, $salt . $key);\n+\t}\n \n } // End User_Model"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2b23c4a09e3c0adcfbb5c0f40f42d445a6deeb02",
            "date": "2020-04-22T11:05:38Z",
            "author_login": "rowasc"
          },
          {
            "sha": "bd1b446709810a7a435f84305d1c4bbcfe590e23",
            "date": "2020-03-21T20:20:16Z",
            "author_login": "rowasc"
          },
          {
            "sha": "513bbc0c9f9afcfc37ffd94406e87f2f662fd32d",
            "date": "2015-05-04T13:51:06Z",
            "author_login": "brianherbert"
          },
          {
            "sha": "f91effe221bb60eaf4af2e16fed593292800f5e8",
            "date": "2015-04-30T18:50:16Z",
            "author_login": "brianherbert"
          },
          {
            "sha": "162f19e19eb249f1af1ce768f561996b1087820a",
            "date": "2015-04-29T15:11:26Z",
            "author_login": "brianherbert"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-640",
    "description": "Ushahidi before 2.6.1 has insufficient entropy for forgot-password tokens.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-02-04T14:15:11.090",
    "last_modified": "2024-11-21T01:44:59.070",
    "fix_date": "2012-11-12T03:30:41Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/12/04/1",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ushahidi/Ushahidi_Web/commit/e8c7ecd42818c331db8945d20f8b1865bc6d157e",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2012/12/04/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ushahidi/Ushahidi_Web/commit/e8c7ecd42818c331db8945d20f8b1865bc6d157e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:37.510056",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Ushahidi_Web",
    "owner": "ushahidi",
    "created_at": "2009-05-12T12:39:07Z",
    "updated_at": "2024-12-08T18:02:39Z",
    "pushed_at": "2023-10-13T08:49:24Z",
    "size": 16123,
    "stars": 902,
    "forks": 623,
    "open_issues": 254,
    "watchers": 902,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "PHP": 4943824,
      "JavaScript": 1152670,
      "CSS": 306807,
      "HTML": 289211,
      "TSQL": 107204,
      "Hack": 1958
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:42:59.967962"
  }
}