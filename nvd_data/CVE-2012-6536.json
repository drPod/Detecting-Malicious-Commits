{
  "cve_id": "CVE-2012-6536",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "ecd7918745234e423dd87fcc0c077da557909720",
    "related_commits": [
      "ecd7918745234e423dd87fcc0c077da557909720",
      "ecd7918745234e423dd87fcc0c077da557909720"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/ecd7918745234e423dd87fcc0c077da557909720.patch",
    "fix_commit_details": {
      "sha": "ecd7918745234e423dd87fcc0c077da557909720",
      "commit_date": "2012-09-20T10:01:49Z",
      "author": {
        "login": "minipli",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "xfrm_user: ensure user supplied esn replay window is valid",
        "length": 1823,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 27,
        "deletions": 6
      },
      "files": [
        {
          "filename": "include/linux/xfrm.h",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -84,6 +84,8 @@ struct xfrm_replay_state {\n \t__u32\tbitmap;\n };\n \n+#define XFRMA_REPLAY_ESN_MAX\t4096\n+\n struct xfrm_replay_state_esn {\n \tunsigned int\tbmp_len;\n \t__u32\t\toseq;"
        },
        {
          "filename": "net/xfrm/xfrm_user.c",
          "status": "modified",
          "additions": 25,
          "deletions": 6,
          "patch": "@@ -123,9 +123,21 @@ static inline int verify_replay(struct xfrm_usersa_info *p,\n \t\t\t\tstruct nlattr **attrs)\n {\n \tstruct nlattr *rt = attrs[XFRMA_REPLAY_ESN_VAL];\n+\tstruct xfrm_replay_state_esn *rs;\n \n-\tif ((p->flags & XFRM_STATE_ESN) && !rt)\n-\t\treturn -EINVAL;\n+\tif (p->flags & XFRM_STATE_ESN) {\n+\t\tif (!rt)\n+\t\t\treturn -EINVAL;\n+\n+\t\trs = nla_data(rt);\n+\n+\t\tif (rs->bmp_len > XFRMA_REPLAY_ESN_MAX / sizeof(rs->bmp[0]) / 8)\n+\t\t\treturn -EINVAL;\n+\n+\t\tif (nla_len(rt) < xfrm_replay_state_esn_len(rs) &&\n+\t\t    nla_len(rt) != sizeof(*rs))\n+\t\t\treturn -EINVAL;\n+\t}\n \n \tif (!rt)\n \t\treturn 0;\n@@ -370,14 +382,15 @@ static inline int xfrm_replay_verify_len(struct xfrm_replay_state_esn *replay_es\n \t\t\t\t\t struct nlattr *rp)\n {\n \tstruct xfrm_replay_state_esn *up;\n+\tint ulen;\n \n \tif (!replay_esn || !rp)\n \t\treturn 0;\n \n \tup = nla_data(rp);\n+\tulen = xfrm_replay_state_esn_len(up);\n \n-\tif (xfrm_replay_state_esn_len(replay_esn) !=\n-\t\t\txfrm_replay_state_esn_len(up))\n+\tif (nla_len(rp) < ulen || xfrm_replay_state_esn_len(replay_esn) != ulen)\n \t\treturn -EINVAL;\n \n \treturn 0;\n@@ -388,22 +401,28 @@ static int xfrm_alloc_replay_state_esn(struct xfrm_replay_state_esn **replay_esn\n \t\t\t\t       struct nlattr *rta)\n {\n \tstruct xfrm_replay_state_esn *p, *pp, *up;\n+\tint klen, ulen;\n \n \tif (!rta)\n \t\treturn 0;\n \n \tup = nla_data(rta);\n+\tklen = xfrm_replay_state_esn_len(up);\n+\tulen = nla_len(rta) >= klen ? klen : sizeof(*up);\n \n-\tp = kmemdup(up, xfrm_replay_state_esn_len(up), GFP_KERNEL);\n+\tp = kzalloc(klen, GFP_KERNEL);\n \tif (!p)\n \t\treturn -ENOMEM;\n \n-\tpp = kmemdup(up, xfrm_replay_state_esn_len(up), GFP_KERNEL);\n+\tpp = kzalloc(klen, GFP_KERNEL);\n \tif (!pp) {\n \t\tkfree(p);\n \t\treturn -ENOMEM;\n \t}\n \n+\tmemcpy(p, up, ulen);\n+\tmemcpy(pp, up, ulen);\n+\n \t*replay_esn = p;\n \t*preplay_esn = pp;\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7f5b6a8ec18e3add4c74682f60b90c31bdf849f2",
            "date": "2025-01-14T19:32:14Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-200",
    "description": "net/xfrm/xfrm_user.c in the Linux kernel before 3.6 does not verify that the actual Netlink message length is consistent with a certain header field, which allows local users to obtain sensitive information from kernel heap memory by leveraging the CAP_NET_ADMIN capability and providing a (1) new or (2) updated state.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2013-03-15T20:55:05.383",
    "last_modified": "2024-11-21T01:46:18.663",
    "fix_date": "2012-09-20T10:01:49Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git%3Ba=commit%3Bh=ecd7918745234e423dd87fcc0c077da557909720",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2013/03/05/13",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/ecd7918745234e423dd87fcc0c077da557909720",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v3.x/patch-3.6.bz2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git%3Ba=commit%3Bh=ecd7918745234e423dd87fcc0c077da557909720",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2013/03/05/13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/ecd7918745234e423dd87fcc0c077da557909720",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v3.x/patch-3.6.bz2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:13.495693",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}