{
  "cve_id": "CVE-2013-10012",
  "github_data": {
    "repository": "antonbolling/clan7ups",
    "fix_commit": "25afad571c488291033958d845830ba0a1710764",
    "related_commits": [
      "25afad571c488291033958d845830ba0a1710764",
      "25afad571c488291033958d845830ba0a1710764"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "25afad571c488291033958d845830ba0a1710764",
      "commit_date": "2013-02-13T02:51:40Z",
      "author": {
        "login": "ryanberckmans",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "this codebase is riddled with sql injection vulnerabilities; fix some of the key vulnerabilities in login/session code",
        "length": 118,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 43,
        "additions": 21,
        "deletions": 22
      },
      "files": [
        {
          "filename": "www/cgi-bin/login.pl",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -53,17 +53,17 @@\n }\n \n #login is real, check the password\n-$sth = $dbh->prepare(\"select id from users where name='$login' and pass=PASSWORD('$pass')\");\n-$sth->execute;\n+my $login_sql = $dbh->prepare(\"select id from users where name=? and pass=PASSWORD(?)\");\n+$login_sql->execute($login,$pass);\n \n-my $valid_login = $sth->rows;\n-my ($uid) = $sth->fetchrow_array;\n+my $valid_login = $login_sql->rows;\n+my ($uid) = $login_sql->fetchrow_array;\n \n if ($valid_login) {\n   # Login was valid, get the current time.\n-  my $sth = $dbh->prepare(\"select unix_timestamp(now())\");\n-  $sth->execute;\n-  my ($time) = $sth->fetchrow_array;\n+  my $time_sql = $dbh->prepare(\"select unix_timestamp(now())\");\n+  $time_sql->execute;\n+  my ($time) = $time_sql->fetchrow_array;\n \n   my $magic = new_session($dbh, $uid);\n   my $CGI_params = $q->Vars;"
        },
        {
          "filename": "www/cgi-bin/session.pl",
          "status": "modified",
          "additions": 14,
          "deletions": 15,
          "patch": "@@ -17,8 +17,10 @@ sub new_session {\n   # Make sequence numbers random.\n   my $magic = int rand(2147483648);\n \n-  $dbh->do(\"update users set magic=$magic where id=$uid\");\n-  $dbh->do(\"update users set session_stamp=now() where id=$uid\");\n+  my $sql = $dbh->prepare(\"update users set magic=? where id=?\");\n+\t$sql->execute($magic,$uid);\n+  $sql = $dbh->prepare(\"update users set session_stamp=now() where id=?\");\n+\t$sql->execute($uid);\n \n   return $magic;\n }\n@@ -34,21 +36,18 @@ sub get_session {\n \n #  print \"<p>PASSED uid, magic: $uid, $cgi_magic</p>\";\n \n-  my $sth = $dbh->prepare(\"select magic, UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(session_stamp) as elapsed from users where id=$uid\");\n-  $sth->execute;\n+  my $sth = $dbh->prepare(\"select magic, UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(session_stamp) as elapsed from users where id=?\");\n+  $sth->execute($uid);\n   my ($db_magic, $elapsed) = $sth->fetchrow_array;\n \n #  print \"<p>FOUND magic, elapsed: $db_magic, $elapsed</p>\\n\";\n \n   if (($db_magic == $cgi_magic) and ($elapsed < $session_timeout)) {\n     # Set a new session timestamp, update magic.\n     my $new_magic = int rand(2147483648);\n-    $dbh->do(\"update users set session_stamp=now(), magic=$new_magic where id=$uid\");\n+    my $sql = $dbh->prepare(\"update users set session_stamp=now(), magic=? where id=?\");\n+\t\t$sql->execute($new_magic,$uid);\n \n-    # Put magic into cgi query.\n-#    my $vars = $q->Vars;\n-#    $vars->{'magic'} = $new_magic;\n-    # Successfully continued session...\n     return 1;\n   }\n   else {\n@@ -63,8 +62,8 @@ sub get_access {\n   my ($dbh, $q, $view_time) = @_;\n   my $uid = cook_int($q->param('uid'));\n \n-  my $sth = $dbh->prepare(\"select access from users where id=$uid\");\n-  $sth->execute;\n+  my $sth = $dbh->prepare(\"select access from users where id=?\");\n+  $sth->execute($uid);\n   my ($access) = $sth->fetchrow_array;\n \n   return $access;\n@@ -76,8 +75,8 @@ sub no_access {\n   my $action = cook_word($q->param('action'));\n \n   # Log it.\n-  my $sth = $dbh->prepare(\"insert into log (user,action,cdata1) values($uid,'accessdenied','$action')\");\n-  $sth->execute;\n+  my $sth = $dbh->prepare(\"insert into log (user,action,cdata1) values(?,'accessdenied','$action')\");\n+  $sth->execute($uid);\n \n   # Notify the user.\n   print <<EOT;\n@@ -96,8 +95,8 @@ sub get_session_info {\n   my $uid = cook_int($q->param('uid'));\n   my $magic = cook_int($q->param('magic'));\n \n-  my $sth = $dbh->prepare(\"select magic from users where id=$uid\");\n-  $sth->execute;\n+  my $sth = $dbh->prepare(\"select magic from users where id=?\");\n+  $sth->execute($uid);\n   my ($nextmagic) = $sth->fetchrow_array;\n \n   return \"<input type='hidden' name='uid' value='$uid'>\\n<input type='hidden' name='magic' value='$nextmagic'>\\n\";"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "69a7f5d428cdaab0bc8fef1dda4ab4a6ae26b0f9",
            "date": "2014-10-20T16:28:24Z",
            "author_login": "ryanberckmans"
          },
          {
            "sha": "f614c49e87f8e8a4a6f5b5c1ea8bcd986a282e10",
            "date": "2014-10-20T00:08:37Z",
            "author_login": "ryanberckmans"
          },
          {
            "sha": "cdf1fca79cf14cca11a118f99695d2856e85e26c",
            "date": "2014-10-19T23:47:21Z",
            "author_login": "ryanberckmans"
          },
          {
            "sha": "be4fb6002a4d1b8bbd7cec28b5e4e35fc8c72467",
            "date": "2014-10-19T23:12:35Z",
            "author_login": "ryanberckmans"
          },
          {
            "sha": "a4613bdba740ef2f161d0af7b9f89a28a71b036c",
            "date": "2014-06-23T19:59:25Z",
            "author_login": "ryanberckmans"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability, which was classified as critical, was found in antonbolling clan7ups. Affected is an unknown function of the component Login/Session. The manipulation leads to sql injection. The name of the patch is 25afad571c488291033958d845830ba0a1710764. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-218388.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-16T11:15:10.037",
    "last_modified": "2024-11-21T01:48:39.753",
    "fix_date": "2013-02-13T02:51:40Z"
  },
  "references": [
    {
      "url": "https://github.com/antonbolling/clan7ups/commit/25afad571c488291033958d845830ba0a1710764",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.218388",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.218388",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/antonbolling/clan7ups/commit/25afad571c488291033958d845830ba0a1710764",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.218388",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.218388",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.560976",
    "processing_status": "enhanced"
  }
}