{
  "cve_id": "CVE-2013-4478",
  "github_data": {
    "repository": "sup-heliotrope/sup",
    "fix_commit": "8b46cdbfc14e07ca07d403aa28b0e7bc1c544785",
    "related_commits": [
      "8b46cdbfc14e07ca07d403aa28b0e7bc1c544785",
      "8b46cdbfc14e07ca07d403aa28b0e7bc1c544785"
    ],
    "patch_url": "https://github.com/sup-heliotrope/sup/commit/8b46cdbfc14e07ca07d403aa28b0e7bc1c544785.patch",
    "fix_commit_details": {
      "sha": "8b46cdbfc14e07ca07d403aa28b0e7bc1c544785",
      "commit_date": "2013-10-28T11:11:58Z",
      "author": {
        "login": "gauteh",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "security: shellwords escape attachment file names to prevent remote code injection",
        "length": 234,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 20,
        "deletions": 4
      },
      "files": [
        {
          "filename": "doc/Hooks.txt",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -50,10 +50,11 @@ before-poll:\n mime-decode:\n   ## turn text/html attachments into plain text, unless they are part\n   ## of a multipart/alternative pair\n+  require 'shellwords'\n   unless sibling_types.member? \"text/plain\"\n     case content_type\n     when \"text/html\"\n-      `/usr/bin/w3m -dump -T #{content_type} '#{filename}'`\n+      `/usr/bin/w3m -dump -T #{content_type} #{Shellwords.escape filename}`\n     end\n   end\n "
        },
        {
          "filename": "lib/sup/message_chunks.rb",
          "status": "modified",
          "additions": 18,
          "deletions": 3,
          "patch": "@@ -60,6 +60,8 @@ def make_tmpname(prefix_suffix, n)\n module Redwood\n module Chunk\n   class Attachment\n+    ## please see note in write_to_disk on important usage\n+    ## of quotes to avoid remote command injection.\n     HookManager.register \"mime-decode\", <<EOS\n Decodes a MIME attachment into text form. The text will be displayed\n directly in Sup. For attachments that you wish to use a separate program\n@@ -76,6 +78,9 @@ class Attachment\n   The decoded text of the attachment, or nil if not decoded.\n EOS\n \n+\n+    ## please see note in write_to_disk on important usage\n+    ## of quotes to avoid remote command injection.\n     HookManager.register \"mime-view\", <<EOS\n Views a non-text MIME attachment. This hook allows you to run\n third-party programs for attachments that require such a thing (e.g.\n@@ -122,6 +127,8 @@ def initialize content_type, filename, encoded_content, sibling_types\n       when /^text\\/plain\\b/\n         @raw_content\n       else\n+        ## please see note in write_to_disk on important usage\n+        ## of quotes to avoid remote command injection.\n         HookManager.run \"mime-decode\", :content_type => content_type,\n                         :filename => lambda { write_to_disk },\n                         :charset => encoded_content.charset,\n@@ -153,18 +160,22 @@ def expandable?; !viewable? end\n     def initial_state; :open end\n     def viewable?; @lines.nil? end\n     def view_default! path\n+      ## please see note in write_to_disk on important usage\n+      ## of quotes to avoid remote command injection.\n       case RbConfig::CONFIG['arch']\n         when /darwin/\n-          cmd = \"open '#{path}'\"\n+          cmd = \"open #{path}\"\n         else\n-          cmd = \"/usr/bin/run-mailcap --action=view '#{@content_type}:#{path}'\"\n+          cmd = \"/usr/bin/run-mailcap --action=view #{@content_type}:#{path}\"\n       end\n       debug \"running: #{cmd.inspect}\"\n       BufferManager.shell_out(cmd)\n       $? == 0\n     end\n \n     def view!\n+      ## please see note in write_to_disk on important usage\n+      ## of quotes to avoid remote command injection.\n       write_to_disk do |file|\n \n         @@view_tempfiles.push file # make sure the tempfile is not garbage collected before sup stops\n@@ -175,6 +186,10 @@ def view!\n       end\n     end\n \n+    ## note that the path returned from write_to_disk is\n+    ## Shellwords.escaped and is intended to be used without single\n+    ## or double quotes. the use of either opens sup up for remote\n+    ## code injection in the file name.\n     def write_to_disk\n       begin\n         file = Tempfile.new([\"sup\", Shellwords.escape(@filename.gsub(\"/\", \"_\")) || \"sup-attachment\"])\n@@ -243,7 +258,7 @@ def color; :sig_color end\n   class EnclosedMessage\n     attr_reader :lines\n     def initialize from, to, cc, date, subj\n-      @from = from ? \"unknown sender\" : from.full_adress\n+      @from = from ? \"unknown sender\" : from.full_address\n       @to = to ? \"\" : to.map { |p| p.full_address }.join(\", \")\n       @cc = cc ? \"\" : cc.map { |p| p.full_address }.join(\", \")\n       if date"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ac12be507b1473e12004f552bf34e8b4d8209532",
            "date": "2024-07-07T12:21:57Z",
            "author_login": "danc86"
          },
          {
            "sha": "f3b63120aa7c7610cf691f31e5998988ff813586",
            "date": "2024-07-07T08:14:05Z",
            "author_login": "danc86"
          },
          {
            "sha": "f16d47380bf36abac12ae2994ba5b3a252dcf947",
            "date": "2024-07-07T07:09:53Z",
            "author_login": "danc86"
          },
          {
            "sha": "d02f27488918e848112e527499f83c66130c0782",
            "date": "2024-07-07T06:48:05Z",
            "author_login": "danc86"
          },
          {
            "sha": "e2bdf6ac790fc2926ee0d8da2685ba2cadca253b",
            "date": "2024-05-12T07:52:15Z",
            "author_login": "danc86"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-94",
    "description": "Sup before 0.13.2.1 and 0.14.x before 0.14.1.1 allows remote attackers to execute arbitrary commands via shell metacharacters in the filename of an email attachment.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2013-12-07T20:55:02.460",
    "last_modified": "2024-11-21T01:55:38.980",
    "fix_date": "2013-10-28T11:11:58Z"
  },
  "references": [
    {
      "url": "http://rubyforge.org/pipermail/sup-talk/2013-August/004993.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/55294",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/55400",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2012/dsa-2805",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2013/10/30/2",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/sup-heliotrope/sup/commit/8b46cdbfc14e07ca07d403aa28b0e7bc1c544785",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "http://rubyforge.org/pipermail/sup-talk/2013-August/004993.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rubyforge.org/pipermail/sup-talk/2013-October/004996.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/55294",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/55400",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2012/dsa-2805",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2013/10/30/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/sup-heliotrope/sup/commit/8b46cdbfc14e07ca07d403aa28b0e7bc1c544785",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:20.046230",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sup",
    "owner": "sup-heliotrope",
    "created_at": "2013-01-17T18:55:03Z",
    "updated_at": "2024-12-10T16:20:21Z",
    "pushed_at": "2024-07-07T12:24:35Z",
    "size": 6668,
    "stars": 907,
    "forks": 96,
    "open_issues": 81,
    "watchers": 907,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "Ruby": 502669,
      "Nix": 39059,
      "Shell": 11306
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T18:41:44.691143"
  }
}