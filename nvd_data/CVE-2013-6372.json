{
  "cve_id": "CVE-2013-6372",
  "github_data": {
    "repository": "jenkinsci/subversion-plugin",
    "fix_commit": "7d4562d6f7e40de04bbe29577b51c79f07d05ba6",
    "related_commits": [
      "7d4562d6f7e40de04bbe29577b51c79f07d05ba6",
      "7d4562d6f7e40de04bbe29577b51c79f07d05ba6"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "7d4562d6f7e40de04bbe29577b51c79f07d05ba6",
      "commit_date": "2013-11-19T02:07:09Z",
      "author": {
        "login": "kohsuke",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[FIXED SECURITY-58]",
        "length": 74,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 14,
        "deletions": 10
      },
      "files": [
        {
          "filename": "src/main/java/hudson/scm/SubversionSCM.java",
          "status": "modified",
          "additions": 14,
          "deletions": 10,
          "patch": "@@ -1508,19 +1508,23 @@ public static final class PasswordCredential extends Credential {\n              */\n             private static final long serialVersionUID = -1676145651108866745L;\n             private final String userName;\n-            private final String password; // scrambled by base64\n+            private final Secret password; // for historical reasons, scrambled by base64 in addition to using 'Secret'\n \n             public PasswordCredential(String userName, String password) {\n                 this.userName = userName;\n-                this.password = Scrambler.scramble(password);\n+                this.password = Secret.fromString(Scrambler.scramble(password));\n             }\n \n             @Override\n             public SVNAuthentication createSVNAuthentication(String kind) {\n                 if(kind.equals(ISVNAuthenticationManager.SSH))\n-                    return new SVNSSHAuthentication(userName,Scrambler.descramble(password),-1,false);\n+                    return new SVNSSHAuthentication(userName, getPassword(),-1,false);\n                 else\n-                    return new SVNPasswordAuthentication(userName,Scrambler.descramble(password),false);\n+                    return new SVNPasswordAuthentication(userName, getPassword(),false);\n+            }\n+\n+            private String getPassword() {\n+                return Scrambler.descramble(Secret.toString(password));\n             }\n         }\n \n@@ -1533,7 +1537,7 @@ public static final class SshPublicKeyCredential extends Credential {\n              */\n             private static final long serialVersionUID = -4649332611621900514L;\n             private final String userName;\n-            private final String passphrase; // scrambled by base64\n+            private final Secret passphrase; // for historical reasons, scrambled by base64 in addition to using 'Secret'\n             private final String id;\n \n             /**\n@@ -1542,7 +1546,7 @@ public static final class SshPublicKeyCredential extends Credential {\n              */\n             public SshPublicKeyCredential(String userName, String passphrase, File keyFile) throws SVNException {\n                 this.userName = userName;\n-                this.passphrase = Scrambler.scramble(passphrase);\n+                this.passphrase = Secret.fromString(Scrambler.scramble(passphrase));\n \n                 Random r = new Random();\n                 StringBuilder buf = new StringBuilder();\n@@ -1613,7 +1617,7 @@ public String call() throws IOException {\n                         } else {\n                             privateKey = FileUtils.readFileToString(getKeyFile(),\"iso-8859-1\");\n                         }\n-                        return new SVNSSHAuthentication(userName, privateKey.toCharArray(), Scrambler.descramble(passphrase),-1,false);\n+                        return new SVNSSHAuthentication(userName, privateKey.toCharArray(), Scrambler.descramble(Secret.toString(passphrase)),-1,false);\n                     } catch (IOException e) {\n                         throw new SVNException(\n                                 SVNErrorMessage.create(SVNErrorCode.AUTHN_CREDS_UNAVAILABLE,\"Unable to load private key\").initCause(e));\n@@ -1635,10 +1639,10 @@ public static final class SslClientCertificateCredential extends Credential {\n              */\n             private static final long serialVersionUID = 5455755079546887446L;\n             private final Secret certificate;\n-            private final String password; // scrambled by base64\n+            private final Secret password; // for historical reasons, scrambled by base64 in addition to using 'Secret'\n \n             public SslClientCertificateCredential(File certificate, String password) throws IOException {\n-                this.password = Scrambler.scramble(password);\n+                this.password = Secret.fromString(Scrambler.scramble(password));\n                 this.certificate = Secret.fromString(new String(Base64.encode(FileUtils.readFileToByteArray(certificate))));\n             }\n \n@@ -1648,7 +1652,7 @@ public SVNAuthentication createSVNAuthentication(String kind) {\n                     try {\n                         SVNSSLAuthentication authentication = new SVNSSLAuthentication(\n                                 Base64.decode(certificate.getPlainText().toCharArray()),\n-                                Scrambler.descramble(password), false);\n+                                Scrambler.descramble(Secret.toString(password)), false);\n                         authentication.setCertificatePath(\"dummy\"); // TODO: remove this JENKINS-19175 workaround\n                         return authentication;\n                     } catch (IOException e) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fc8b92d49a06d1ece739f34ba683b6485a774a05",
            "date": "2025-01-22T16:38:50Z",
            "author_login": "basil"
          },
          {
            "sha": "40f99f2cc9d7873a1602934de7569df44cf5bb24",
            "date": "2025-01-22T01:18:43Z",
            "author_login": "strangelookingnerd"
          },
          {
            "sha": "c8837f91a07a627b95ff2bbab08d74c57142de55",
            "date": "2024-11-05T20:59:51Z",
            "author_login": "shlomomdahan"
          },
          {
            "sha": "5465ce107f223d6778e203575f0811eee9c37ba9",
            "date": "2024-10-29T17:13:10Z",
            "author_login": "yaroslavafenkin"
          },
          {
            "sha": "53233cfc8eb305b0932f96c516f3c788c7585e24",
            "date": "2024-10-17T17:05:27Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-255",
    "description": "The Subversion plugin before 1.54 for Jenkins stores credentials using base64 encoding, which allows local users to obtain passwords and SSH private keys by reading a subversion.credentials file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-05-08T14:29:11.940",
    "last_modified": "2024-11-21T01:59:05.780",
    "fix_date": "2013-11-19T02:07:09Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1032391",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/jenkinsci/subversion-plugin/commit/7d4562d6f7e40de04bbe29577b51c79f07d05ba6",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://wiki.jenkins-ci.org/display/SECURITY/Jenkins+Security+Advisory+2013-11-20",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1032391",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/jenkinsci/subversion-plugin/commit/7d4562d6f7e40de04bbe29577b51c79f07d05ba6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://wiki.jenkins-ci.org/display/SECURITY/Jenkins+Security+Advisory+2013-11-20",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:25.488047",
    "processing_status": "enhanced"
  }
}