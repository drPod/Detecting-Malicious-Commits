{
  "cve_id": "CVE-2013-7225",
  "github_data": {
    "repository": "fatfreecrm/fat_free_crm",
    "fix_commit": "078035f1ef73ed85285ac9d128c3c5f670cef066",
    "related_commits": [
      "078035f1ef73ed85285ac9d128c3c5f670cef066",
      "d4b2de81a4d8c1b201482edcb2488ed9280a65fd",
      "078035f1ef73ed85285ac9d128c3c5f670cef066",
      "d4b2de81a4d8c1b201482edcb2488ed9280a65fd"
    ],
    "patch_url": "https://github.com/fatfreecrm/fat_free_crm/commit/078035f1ef73ed85285ac9d128c3c5f670cef066.patch",
    "fix_commit_details": {
      "sha": "078035f1ef73ed85285ac9d128c3c5f670cef066",
      "commit_date": "2013-12-27T07:06:58Z",
      "author": {
        "login": "steveyken",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed sql injection in timeline method.",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 96,
        "additions": 75,
        "deletions": 21
      },
      "files": [
        {
          "filename": "app/controllers/home_controller.rb",
          "status": "modified",
          "additions": 13,
          "deletions": 8,
          "patch": "@@ -57,14 +57,19 @@ def toggle\n   # GET /home/timeline                                                     AJAX\n   #----------------------------------------------------------------------------\n   def timeline\n-    unless params[:type].empty?\n-      model = params[:type].camelize.constantize\n-      item = model.find(params[:id])\n-      item.update_attribute(:state, params[:state])\n-    else\n-      comments, emails = params[:id].split(\"+\")\n-      Comment.update_all(\"state = '#{params[:state]}'\", \"id IN (#{comments})\") unless comments.blank?\n-      Email.update_all(\"state = '#{params[:state]}'\", \"id IN (#{emails})\") unless emails.blank?\n+    state = params[:state].to_s\n+    if %w(Collapsed Expanded).include?(state)\n+      if (model_type = params[:type].to_s).present?\n+        if %w(comment email).include?(model_type)\n+          model = model_type.camelize.constantize\n+          item = model.find(params[:id])\n+          item.update_attribute(:state, state)\n+        end\n+      else\n+        comments, emails = params[:id].split(\"+\")\n+        Comment.where(:id => comments.split(',')).update_all(:state => state) unless comments.blank?\n+        Email.where(:id => emails.split(',')).update_all(:state => state) unless emails.blank?\n+      end\n     end\n \n     render :nothing => true"
        },
        {
          "filename": "spec/controllers/home_controller_spec.rb",
          "status": "modified",
          "additions": 62,
          "deletions": 13,
          "patch": "@@ -42,13 +42,13 @@\n       assigns[:my_tasks].should == [task_1, task_2, task_3, task_4]\n     end\n \n-\t\tit \"should not display completed tasks\" do\n-\t\t\ttask_1 = FactoryGirl.create(:task, :user_id => current_user.id, :name => \"Your first task\", :bucket => \"due_asap\", :assigned_to => current_user.id)\n-\t\t\ttask_2 = FactoryGirl.create(:task, :user_id => current_user.id, :name => \"Completed task\", :bucket => \"due_asap\", :completed_at => 1.days.ago, :completed_by => current_user.id, :assigned_to => current_user.id)\n+    it \"should not display completed tasks\" do\n+      task_1 = FactoryGirl.create(:task, :user_id => current_user.id, :name => \"Your first task\", :bucket => \"due_asap\", :assigned_to => current_user.id)\n+      task_2 = FactoryGirl.create(:task, :user_id => current_user.id, :name => \"Completed task\", :bucket => \"due_asap\", :completed_at => 1.days.ago, :completed_by => current_user.id, :assigned_to => current_user.id)\n \n-\t\t\tget :index\n-\t\t\tassigns[:my_tasks].should == [task_1]\n-\t\tend\n+      get :index\n+      assigns[:my_tasks].should == [task_1]\n+    end\n \n     it \"should get a list of my opportunities ordered by closes_on\" do\n       opportunity_1 = FactoryGirl.create(:opportunity, :name => \"Your first opportunity\", :closes_on => 15.days.from_now, :assigned_to => current_user.id, :stage => 'proposal')\n@@ -153,42 +153,91 @@\n       session[:hello].should == true\n     end\n   end\n-  \n+\n   describe \"activity_user\" do\n-  \n+\n     before(:each) do\n       @user = double(User, :id => 1, :is_a? => true)\n       @cur_user = double(User)\n     end\n-  \n+\n     it \"should find a user by email\" do\n       @cur_user.stub(:pref).and_return(:activity_user => 'billy@example.com')\n       controller.instance_variable_set(:@current_user, @cur_user)\n       User.should_receive(:where).with(:email => 'billy@example.com').and_return([@user])\n       controller.send(:activity_user).should == 1\n     end\n-    \n+\n     it \"should find a user by first name or last name\" do\n       @cur_user.stub(:pref).and_return(:activity_user => 'Billy')\n       controller.instance_variable_set(:@current_user, @cur_user)\n       User.should_receive(:where).with(\"upper(first_name) LIKE upper('%Billy%') OR upper(last_name) LIKE upper('%Billy%')\").and_return([@user])\n       controller.send(:activity_user).should == 1\n     end\n-    \n+\n     it \"should find a user by first name and last name\" do\n       @cur_user.stub(:pref).and_return(:activity_user => 'Billy Elliot')\n       controller.instance_variable_set(:@current_user, @cur_user)\n       User.should_receive(:where).with(\"(upper(first_name) LIKE upper('%Billy%') AND upper(last_name) LIKE upper('%Elliot%')) OR (upper(first_name) LIKE upper('%Elliot%') AND upper(last_name) LIKE upper('%Billy%'))\").and_return([@user])\n       controller.send(:activity_user).should == 1\n     end\n-    \n+\n     it \"should return nil when 'all_users' is specified\" do\n       @cur_user.stub(:pref).and_return(:activity_user => 'all_users')\n       controller.instance_variable_set(:@current_user, @cur_user)\n       User.should_not_receive(:where)\n       controller.send(:activity_user).should == nil\n     end\n-    \n+\n+  end\n+\n+  describe \"timeline\" do\n+\n+    before(:each) do\n+      require_user\n+    end\n+\n+    it \"should collapse all comments and emails on a specific contact\" do\n+      comment = double(Comment)\n+      Comment.should_receive(:find).with(\"1\").and_return(comment)\n+      comment.should_receive(:update_attribute).with(:state, 'Collapsed')\n+      xhr :get, :timeline, :type => \"comment\", :id => \"1\", :state => \"Collapsed\"\n+    end\n+\n+    it \"should expand all comments and emails on a specific contact\" do\n+      comment = double(Comment)\n+      Comment.should_receive(:find).with(\"1\").and_return(comment)\n+      comment.should_receive(:update_attribute).with(:state, 'Expanded')\n+      xhr :get, :timeline, :type => \"comment\", :id => \"1\", :state => \"Expanded\"\n+    end\n+\n+    it \"should not do anything when state neither Expanded nor Collapsed\" do\n+      comment = double(Comment)\n+      Comment.should_not_receive(:find).with(\"1\")\n+      xhr :get, :timeline, :type => \"comment\", :id => \"1\", :state => \"Explode\"\n+    end\n+\n+    it \"should collapse all comments and emails on Contact\" do\n+      where_stub = double\n+      where_stub.should_receive(:update_all).with(:state => \"Collapsed\")\n+      Comment.should_receive(:where).and_return(where_stub)\n+      xhr :get, :timeline, :id => \"1,2,3,4+\", :state => \"Collapsed\"\n+    end\n+\n+    it \"should not allow an arbitary state (sanitizes input)\" do\n+      where_stub = double\n+      where_stub.should_receive(:update_all).with(:state => \"Expanded\")\n+      Comment.should_receive(:where).and_return(where_stub)\n+      xhr :get, :timeline, :id => \"1,2,3,4+\", :state => \"Expanded\"\n+    end\n+\n+    it \"should not update an arbitary model (sanitizes input)\" do\n+      where_stub = double\n+      where_stub.should_receive(:update_all).with(:state => \"Expanded\")\n+      Comment.should_receive(:where).and_return(where_stub)\n+      xhr :get, :timeline, :id => \"1,2,3,4+\", :state => \"Expanded\"\n+    end\n+\n   end\n \n end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a9b1ee03b27b233840cb230b5da31861828202fa",
            "date": "2025-01-06T08:01:36Z",
            "author_login": "CloCkWeRX"
          },
          {
            "sha": "99329c93d0c88a757f8de32e30319c37f02136b7",
            "date": "2025-01-06T07:55:02Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "fac777639215e204e2fdcd293a0ef10921a17289",
            "date": "2025-01-01T00:43:36Z",
            "author_login": "CloCkWeRX"
          },
          {
            "sha": "08c1f66eaa2e803ac3f66ffa572c6bb9b770f665",
            "date": "2025-01-01T00:43:19Z",
            "author_login": "CloCkWeRX"
          },
          {
            "sha": "ba36e35cd587abed28ec57e9119aa7e477dbe39f",
            "date": "2024-12-31T07:27:06Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Multiple SQL injection vulnerabilities in app/controllers/home_controller.rb in Fat Free CRM before 0.12.1 allow remote authenticated users to execute arbitrary SQL commands via (1) the homepage timeline feature or (2) the activity feature.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-01-02T14:59:04.157",
    "last_modified": "2024-11-21T02:00:31.467",
    "fix_date": "2013-12-27T07:06:58Z"
  },
  "references": [
    {
      "url": "http://openwall.com/lists/oss-security/2013/12/28/2",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://seclists.org/fulldisclosure/2013/Dec/199",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.phenoelit.org/stuff/ffcrm.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/commit/078035f1ef73ed85285ac9d128c3c5f670cef066",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/commit/d4b2de81a4d8c1b201482edcb2488ed9280a65fd",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/issues/300",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/wiki/Fixing-security-vulnerabilities-%2827th-Dec-2013%29",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://openwall.com/lists/oss-security/2013/12/28/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://seclists.org/fulldisclosure/2013/Dec/199",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.phenoelit.org/stuff/ffcrm.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/commit/078035f1ef73ed85285ac9d128c3c5f670cef066",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/commit/d4b2de81a4d8c1b201482edcb2488ed9280a65fd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/issues/300",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/fatfreecrm/fat_free_crm/wiki/Fixing-security-vulnerabilities-%2827th-Dec-2013%29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:20.057400",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "fat_free_crm",
    "owner": "fatfreecrm",
    "created_at": "2008-11-25T03:09:44Z",
    "updated_at": "2025-01-13T19:46:42Z",
    "pushed_at": "2025-01-13T07:49:15Z",
    "size": 20369,
    "stars": 3587,
    "forks": 1325,
    "open_issues": 75,
    "watchers": 3587,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Ruby": 1215633,
      "Haml": 204156,
      "CoffeeScript": 39239,
      "SCSS": 35806,
      "HTML": 3819,
      "JavaScript": 1563,
      "Dockerfile": 1373,
      "Procfile": 40
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:01:03.804897"
  }
}