{
  "cve_id": "CVE-2014-0063",
  "github_data": {
    "repository": "postgres/postgres",
    "fix_commit": "4318daecc959886d001a6e79c6ea853e8b1dfb4b",
    "related_commits": [
      "4318daecc959886d001a6e79c6ea853e8b1dfb4b",
      "4318daecc959886d001a6e79c6ea853e8b1dfb4b"
    ],
    "patch_url": "https://github.com/postgres/postgres/commit/4318daecc959886d001a6e79c6ea853e8b1dfb4b.patch",
    "fix_commit_details": {
      "sha": "4318daecc959886d001a6e79c6ea853e8b1dfb4b",
      "commit_date": "2014-02-17T14:33:31Z",
      "author": {
        "login": "nmisch",
        "type": "User",
        "stats": {
          "total_commits": 495,
          "average_weekly_commits": 0.33243787777031564,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 232
        }
      },
      "commit_message": {
        "title": "Fix handling of wide datetime input/output.",
        "length": 774,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 146,
        "additions": 111,
        "deletions": 35
      },
      "files": [
        {
          "filename": "src/include/utils/datetime.h",
          "status": "modified",
          "additions": 11,
          "deletions": 6,
          "patch": "@@ -188,12 +188,17 @@ struct tzEntry;\n #define DTK_DATE_M\t\t(DTK_M(YEAR) | DTK_M(MONTH) | DTK_M(DAY))\n #define DTK_TIME_M\t\t(DTK_M(HOUR) | DTK_M(MINUTE) | DTK_ALL_SECS_M)\n \n-#define MAXDATELEN\t\t63\t\t/* maximum possible length of an input date\n-\t\t\t\t\t\t\t\t * string (not counting tr. null) */\n-#define MAXDATEFIELDS\t25\t\t/* maximum possible number of fields in a date\n-\t\t\t\t\t\t\t\t * string */\n-#define TOKMAXLEN\t\t10\t\t/* only this many chars are stored in\n-\t\t\t\t\t\t\t\t * datetktbl */\n+/*\n+ * Working buffer size for input and output of interval, timestamp, etc.\n+ * Inputs that need more working space will be rejected early.  Longer outputs\n+ * will overrun buffers, so this must suffice for all possible output.  As of\n+ * this writing, interval_out() needs the most space at ~90 bytes.\n+ */\n+#define MAXDATELEN\t\t128\n+/* maximum possible number of fields in a date string */\n+#define MAXDATEFIELDS\t25\n+/* only this many chars are stored in datetktbl */\n+#define TOKMAXLEN\t\t10\n \n /* keep this struct small; it gets used a lot */\n typedef struct"
        },
        {
          "filename": "src/interfaces/ecpg/pgtypeslib/datetime.c",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -60,14 +60,14 @@ PGTYPESdate_from_asc(char *str, char **endptr)\n \tint\t\t\tnf;\n \tchar\t   *field[MAXDATEFIELDS];\n \tint\t\t\tftype[MAXDATEFIELDS];\n-\tchar\t\tlowstr[MAXDATELEN + 1];\n+\tchar\t\tlowstr[MAXDATELEN + MAXDATEFIELDS];\n \tchar\t   *realptr;\n \tchar\t  **ptr = (endptr != NULL) ? endptr : &realptr;\n \n \tbool\t\tEuroDates = FALSE;\n \n \terrno = 0;\n-\tif (strlen(str) >= sizeof(lowstr))\n+\tif (strlen(str) > MAXDATELEN)\n \t{\n \t\terrno = PGTYPES_DATE_BAD_DATE;\n \t\treturn INT_MIN;"
        },
        {
          "filename": "src/interfaces/ecpg/pgtypeslib/dt.h",
          "status": "modified",
          "additions": 11,
          "deletions": 6,
          "patch": "@@ -192,12 +192,17 @@ typedef double fsec_t;\n #define DTK_DATE_M\t\t(DTK_M(YEAR) | DTK_M(MONTH) | DTK_M(DAY))\n #define DTK_TIME_M\t\t(DTK_M(HOUR) | DTK_M(MINUTE) | DTK_M(SECOND))\n \n-#define MAXDATELEN\t\t63\t\t/* maximum possible length of an input date\n-\t\t\t\t\t\t\t\t * string (not counting tr. null) */\n-#define MAXDATEFIELDS\t25\t\t/* maximum possible number of fields in a date\n-\t\t\t\t\t\t\t\t * string */\n-#define TOKMAXLEN\t\t10\t\t/* only this many chars are stored in\n-\t\t\t\t\t\t\t\t * datetktbl */\n+/*\n+ * Working buffer size for input and output of interval, timestamp, etc.\n+ * Inputs that need more working space will be rejected early.  Longer outputs\n+ * will overrun buffers, so this must suffice for all possible output.  As of\n+ * this writing, PGTYPESinterval_to_asc() needs the most space at ~90 bytes.\n+ */\n+#define MAXDATELEN\t\t128\n+/* maximum possible number of fields in a date string */\n+#define MAXDATEFIELDS\t25\n+/* only this many chars are stored in datetktbl */\n+#define TOKMAXLEN\t\t10\n \n /* keep this struct small; it gets used a lot */\n typedef struct"
        },
        {
          "filename": "src/interfaces/ecpg/pgtypeslib/dt_common.c",
          "status": "modified",
          "additions": 31,
          "deletions": 13,
          "patch": "@@ -1171,15 +1171,22 @@ DecodeNumberField(int len, char *str, int fmask,\n \tif ((cp = strchr(str, '.')) != NULL)\n \t{\n #ifdef HAVE_INT64_TIMESTAMP\n-\t\tchar\t\tfstr[MAXDATELEN + 1];\n+\t\tchar\t\tfstr[7];\n+\t\tint\t\t\ti;\n+\n+\t\tcp++;\n \n \t\t/*\n \t\t * OK, we have at most six digits to care about. Let's construct a\n-\t\t * string and then do the conversion to an integer.\n+\t\t * string with those digits, zero-padded on the right, and then do\n+\t\t * the conversion to an integer.\n+\t\t *\n+\t\t * XXX This truncates the seventh digit, unlike rounding it as do\n+\t\t * the backend and the !HAVE_INT64_TIMESTAMP case.\n \t\t */\n-\t\tstrcpy(fstr, (cp + 1));\n-\t\tstrcpy(fstr + strlen(fstr), \"000000\");\n-\t\t*(fstr + 6) = '\\0';\n+\t\tfor (i = 0; i < 6; i++)\n+\t\t\tfstr[i] = *cp != '\\0' ? *cp++ : '0';\n+\t\tfstr[i] = '\\0';\n \t\t*fsec = strtol(fstr, NULL, 10);\n #else\n \t\t*fsec = strtod(cp, NULL);\n@@ -1531,15 +1538,22 @@ DecodeTime(char *str, int *tmask, struct tm * tm, fsec_t *fsec)\n \t\telse if (*cp == '.')\n \t\t{\n #ifdef HAVE_INT64_TIMESTAMP\n-\t\t\tchar\t\tfstr[MAXDATELEN + 1];\n+\t\t\tchar\t\tfstr[7];\n+\t\t\tint\t\t\ti;\n+\n+\t\t\tcp++;\n \n \t\t\t/*\n-\t\t\t * OK, we have at most six digits to work with. Let's construct a\n-\t\t\t * string and then do the conversion to an integer.\n+\t\t\t * OK, we have at most six digits to care about. Let's construct a\n+\t\t\t * string with those digits, zero-padded on the right, and then do\n+\t\t\t * the conversion to an integer.\n+\t\t\t *\n+\t\t\t * XXX This truncates the seventh digit, unlike rounding it as do\n+\t\t\t * the backend and the !HAVE_INT64_TIMESTAMP case.\n \t\t\t */\n-\t\t\tstrncpy(fstr, (cp + 1), 7);\n-\t\t\tstrcpy(fstr + strlen(fstr), \"000000\");\n-\t\t\t*(fstr + 6) = '\\0';\n+\t\t\tfor (i = 0; i < 6; i++)\n+\t\t\t\tfstr[i] = *cp != '\\0' ? *cp++ : '0';\n+\t\t\tfstr[i] = '\\0';\n \t\t\t*fsec = strtol(fstr, &cp, 10);\n #else\n \t\t\tstr = cp;\n@@ -1665,6 +1679,9 @@ DecodePosixTimezone(char *str, int *tzp)\n  *\tDTK_NUMBER can hold date fields (yy.ddd)\n  *\tDTK_STRING can hold months (January) and time zones (PST)\n  *\tDTK_DATE can hold Posix time zones (GMT-8)\n+ *\n+ * The \"lowstr\" work buffer must have at least strlen(timestr) + MAXDATEFIELDS\n+ * bytes of space.  On output, field[] entries will point into it.\n  */\n int\n ParseDateTime(char *timestr, char *lowstr,\n@@ -1677,7 +1694,10 @@ ParseDateTime(char *timestr, char *lowstr,\n \t/* outer loop through fields */\n \twhile (*(*endstr) != '\\0')\n \t{\n+\t\t/* Record start of current field */\n \t\tfield[nf] = lp;\n+\t\tif (nf >= MAXDATEFIELDS)\n+\t\t\treturn -1;\n \n \t\t/* leading digit? then date or time */\n \t\tif (isdigit((unsigned char) *(*endstr)))\n@@ -1818,8 +1838,6 @@ ParseDateTime(char *timestr, char *lowstr,\n \t\t/* force in a delimiter after each field */\n \t\t*lp++ = '\\0';\n \t\tnf++;\n-\t\tif (nf > MAXDATEFIELDS)\n-\t\t\treturn -1;\n \t}\n \n \t*numfields = nf;"
        },
        {
          "filename": "src/interfaces/ecpg/pgtypeslib/interval.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1094,7 +1094,7 @@ PGTYPESinterval_from_asc(char *str, char **endptr)\n \ttm->tm_sec = 0;\n \tfsec = 0;\n \n-\tif (strlen(str) >= sizeof(lowstr))\n+\tif (strlen(str) > MAXDATELEN)\n \t{\n \t\terrno = PGTYPES_INTVL_BAD_INTERVAL;\n \t\treturn NULL;"
        },
        {
          "filename": "src/interfaces/ecpg/pgtypeslib/timestamp.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -294,7 +294,7 @@ PGTYPEStimestamp_from_asc(char *str, char **endptr)\n \tchar\t   *realptr;\n \tchar\t  **ptr = (endptr != NULL) ? endptr : &realptr;\n \n-\tif (strlen(str) >= sizeof(lowstr))\n+\tif (strlen(str) > MAXDATELEN)\n \t{\n \t\terrno = PGTYPES_TS_BAD_TIMESTAMP;\n \t\treturn (noresult);"
        },
        {
          "filename": "src/interfaces/ecpg/test/expected/pgtypeslib-dt_test2.c",
          "status": "modified",
          "additions": 16,
          "deletions": 6,
          "patch": "@@ -45,13 +45,23 @@ char *dates[] = { \"19990108foobar\",\n \t\t\t\t  \"1999.008\",\n \t\t\t\t  \"J2451187\",\n \t\t\t\t  \"January 8, 99 BC\",\n+\t\t\t\t  /*\n+\t\t\t\t   * Maximize space usage in ParseDateTime() with 25\n+\t\t\t\t   * (MAXDATEFIELDS) fields and 128 (MAXDATELEN) total length.\n+\t\t\t\t   */\n+\t\t\t\t  \"........................Xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n+\t\t\t\t  \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n+\t\t\t\t  /* 26 fields */\n+\t\t\t\t  \".........................aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n+\t\t\t\t  \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n \t\t\t\t  NULL };\n \n /* do not conflict with libc \"times\" symbol */\n static char *times[] = { \"0:04\",\n \t\t\t\t  \"1:59 PDT\",\n \t\t\t\t  \"13:24:40 -8:00\",\n \t\t\t\t  \"13:24:40.495+3\",\n+\t\t\t\t  \"13:24:40.123456789+3\",\n \t\t\t\t  NULL };\n \n char *intervals[] = { \"1 minute\",\n@@ -73,22 +83,22 @@ main(void)\n \t\t \n \t\t \n \t\n-#line 52 \"dt_test2.pgc\"\n+#line 62 \"dt_test2.pgc\"\n  date date1 ;\n  \n-#line 53 \"dt_test2.pgc\"\n+#line 63 \"dt_test2.pgc\"\n  timestamp ts1 , ts2 ;\n  \n-#line 54 \"dt_test2.pgc\"\n+#line 64 \"dt_test2.pgc\"\n  char * text ;\n  \n-#line 55 \"dt_test2.pgc\"\n+#line 65 \"dt_test2.pgc\"\n  interval * i1 ;\n  \n-#line 56 \"dt_test2.pgc\"\n+#line 66 \"dt_test2.pgc\"\n  date * dc ;\n /* exec sql end declare section */\n-#line 57 \"dt_test2.pgc\"\n+#line 67 \"dt_test2.pgc\"\n \n \n \tint i, j;"
        },
        {
          "filename": "src/interfaces/ecpg/test/expected/pgtypeslib-dt_test2.stdout",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -8,85 +8,104 @@ TS[3,0]: 1999-01-08 00:04:00\n TS[3,1]: 1999-01-08 01:59:00\n TS[3,2]: 1999-01-08 13:24:40\n TS[3,3]: 1999-01-08 13:24:40.495\n+TS[3,4]: 1999-01-08 13:24:40.123456\n Date[4]: 1999-01-08 (N - F)\n TS[4,0]: 1999-01-08 00:04:00\n TS[4,1]: 1999-01-08 01:59:00\n TS[4,2]: 1999-01-08 13:24:40\n TS[4,3]: 1999-01-08 13:24:40.495\n+TS[4,4]: 1999-01-08 13:24:40.123456\n Date[5]: 1999-01-08 (N - F)\n TS[5,0]: 1999-01-08 00:04:00\n TS[5,1]: 1999-01-08 01:59:00\n TS[5,2]: 1999-01-08 13:24:40\n TS[5,3]: 1999-01-08 13:24:40.495\n+TS[5,4]: 1999-01-08 13:24:40.123456\n Date[6]: 1999-01-18 (N - F)\n TS[6,0]: 1999-01-18 00:04:00\n TS[6,1]: 1999-01-18 01:59:00\n TS[6,2]: 1999-01-18 13:24:40\n TS[6,3]: 1999-01-18 13:24:40.495\n+TS[6,4]: 1999-01-18 13:24:40.123456\n Date[7]: 2003-01-02 (N - F)\n TS[7,0]: 2003-01-02 00:04:00\n TS[7,1]: 2003-01-02 01:59:00\n TS[7,2]: 2003-01-02 13:24:40\n TS[7,3]: 2003-01-02 13:24:40.495\n+TS[7,4]: 2003-01-02 13:24:40.123456\n Date[8]: 1999-01-08 (N - F)\n TS[8,0]: 1999-01-08 00:04:00\n TS[8,1]: 1999-01-08 01:59:00\n TS[8,2]: 1999-01-08 13:24:40\n TS[8,3]: 1999-01-08 13:24:40.495\n+TS[8,4]: 1999-01-08 13:24:40.123456\n Date[9]: 1999-01-08 (N - F)\n TS[9,0]: 1999-01-08 00:04:00\n TS[9,1]: 1999-01-08 01:59:00\n TS[9,2]: 1999-01-08 13:24:40\n TS[9,3]: 1999-01-08 13:24:40.495\n+TS[9,4]: 1999-01-08 13:24:40.123456\n Date[10]: 1999-01-08 (N - F)\n TS[10,0]: 1999-01-08 00:04:00\n TS[10,1]: 1999-01-08 01:59:00\n TS[10,2]: 1999-01-08 13:24:40\n TS[10,3]: 1999-01-08 13:24:40.495\n+TS[10,4]: 1999-01-08 13:24:40.123456\n Date[11]: 1999-01-08 (N - F)\n TS[11,0]: 1999-01-08 00:04:00\n TS[11,1]: 1999-01-08 01:59:00\n TS[11,2]: 1999-01-08 13:24:40\n TS[11,3]: 1999-01-08 13:24:40.495\n+TS[11,4]: 1999-01-08 13:24:40.123456\n Date[12]: 1999-01-08 (N - F)\n TS[12,0]: 1999-01-08 00:04:00\n TS[12,1]: 1999-01-08 01:59:00\n TS[12,2]: 1999-01-08 13:24:40\n TS[12,3]: 1999-01-08 13:24:40.495\n+TS[12,4]: 1999-01-08 13:24:40.123456\n Date[13]: 2006-01-08 (N - F)\n TS[13,0]: 2006-01-08 00:04:00\n TS[13,1]: 2006-01-08 01:59:00\n TS[13,2]: 2006-01-08 13:24:40\n TS[13,3]: 2006-01-08 13:24:40.495\n+TS[13,4]: 2006-01-08 13:24:40.123456\n Date[14]: 1999-01-08 (N - F)\n TS[14,0]: 1999-01-08 00:04:00\n TS[14,1]: 1999-01-08 01:59:00\n TS[14,2]: 1999-01-08 13:24:40\n TS[14,3]: 1999-01-08 13:24:40.495\n+TS[14,4]: 1999-01-08 13:24:40.123456\n Date[15]: 1999-01-08 (N - F)\n TS[15,0]: 1999-01-08 00:04:00\n TS[15,1]: 1999-01-08 01:59:00\n TS[15,2]: 1999-01-08 13:24:40\n TS[15,3]: 1999-01-08 13:24:40.495\n+TS[15,4]: 1999-01-08 13:24:40.123456\n Date[16]: 1999-01-08 (N - F)\n TS[16,0]: 1999-01-08 00:04:00\n TS[16,1]: 1999-01-08 01:59:00\n TS[16,2]: 1999-01-08 13:24:40\n TS[16,3]: 1999-01-08 13:24:40.495\n+TS[16,4]: 1999-01-08 13:24:40.123456\n Date[17]: 1999-01-08 (N - F)\n TS[17,0]: 1999-01-08 00:04:00\n TS[17,1]: 1999-01-08 01:59:00\n TS[17,2]: 1999-01-08 13:24:40\n TS[17,3]: 1999-01-08 13:24:40.495\n+TS[17,4]: 1999-01-08 13:24:40.123456\n Date[18]: 1999-01-08 (N - F)\n TS[18,0]: 1999-01-08 00:04:00\n TS[18,1]: 1999-01-08 01:59:00\n TS[18,2]: 1999-01-08 13:24:40\n TS[18,3]: 1999-01-08 13:24:40.495\n+TS[18,4]: 1999-01-08 13:24:40.123456\n Date[19]: 0099-01-08 BC (N - F)\n TS[19,0]: 0099-01-08 00:04:00 BC\n TS[19,1]: 0099-01-08 01:59:00 BC\n TS[19,2]: 0099-01-08 13:24:40 BC\n+TS[19,4]: 0099-01-08 13:24:40.123456 BC\n+Date[20]: - (N - T)\n+Date[21]: - (N - T)\n interval[0]: @ 1 min\n interval_copy[0]: @ 1 min\n interval[1]: @ 1 day 12 hours 59 mins 10 secs"
        },
        {
          "filename": "src/interfaces/ecpg/test/pgtypeslib/dt_test2.pgc",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -27,13 +27,23 @@ char *dates[] = { \"19990108foobar\",\n \t\t\t\t  \"1999.008\",\n \t\t\t\t  \"J2451187\",\n \t\t\t\t  \"January 8, 99 BC\",\n+\t\t\t\t  /*\n+\t\t\t\t   * Maximize space usage in ParseDateTime() with 25\n+\t\t\t\t   * (MAXDATEFIELDS) fields and 128 (MAXDATELEN) total length.\n+\t\t\t\t   */\n+\t\t\t\t  \"........................Xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n+\t\t\t\t  \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n+\t\t\t\t  /* 26 fields */\n+\t\t\t\t  \".........................aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n+\t\t\t\t  \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n \t\t\t\t  NULL };\n \n /* do not conflict with libc \"times\" symbol */\n static char *times[] = { \"0:04\",\n \t\t\t\t  \"1:59 PDT\",\n \t\t\t\t  \"13:24:40 -8:00\",\n \t\t\t\t  \"13:24:40.495+3\",\n+\t\t\t\t  \"13:24:40.123456789+3\",\n \t\t\t\t  NULL };\n \n char *intervals[] = { \"1 minute\","
        },
        {
          "filename": "src/test/regress/expected/interval.out",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -306,6 +306,13 @@ select '4 millenniums 5 centuries 4 decades 1 year 4 months 4 days 17 minutes 31\n  @ 4541 years 4 mons 4 days 17 mins 31 secs\n (1 row)\n \n+-- test long interval output\n+select '100000000y 10mon -1000000000d -1000000000h -10min -10.000001s ago'::interval;\n+                                         interval                                          \n+-------------------------------------------------------------------------------------------\n+ @ 100000000 years 10 mons -1000000000 days -1000000000 hours -10 mins -10.000001 secs ago\n+(1 row)\n+\n -- test justify_hours() and justify_days()\n SELECT justify_hours(interval '6 months 3 days 52 hours 3 minutes 2 seconds') as \"6 mons 5 days 4 hours 3 mins 2 seconds\";\n  6 mons 5 days 4 hours 3 mins 2 seconds "
        },
        {
          "filename": "src/test/regress/sql/interval.sql",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -108,6 +108,8 @@ select avg(f1) from interval_tbl;\n -- test long interval input\n select '4 millenniums 5 centuries 4 decades 1 year 4 months 4 days 17 minutes 31 seconds'::interval;\n \n+-- test long interval output\n+select '100000000y 10mon -1000000000d -1000000000h -10min -10.000001s ago'::interval;\n \n -- test justify_hours() and justify_days()\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 5,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4cb560b53f8f9e9a94d593f9416c107ed8202110",
            "date": "2025-01-14T13:50:54Z",
            "author_login": "deanrasheed"
          },
          {
            "sha": "2355e51110e7c687c125a5958f12a462931de996",
            "date": "2025-01-14T13:23:24Z",
            "author_login": "deanrasheed"
          },
          {
            "sha": "af8cd1639ab298ba8fae62cd9583f1c10a5068e1",
            "date": "2025-01-14T12:28:49Z",
            "author_login": "hlinnaka"
          },
          {
            "sha": "ce9a74707d4cf7768cff06298d09c7f7e823341d",
            "date": "2025-01-14T06:17:22Z",
            "author_login": "michaelpq"
          },
          {
            "sha": "720e529840d5a1087a34db445f624c5ece46eb38",
            "date": "2025-01-14T06:12:56Z",
            "author_login": "michaelpq"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "Multiple stack-based buffer overflows in PostgreSQL before 8.4.20, 9.0.x before 9.0.16, 9.1.x before 9.1.12, 9.2.x before 9.2.7, and 9.3.x before 9.3.3 allow remote authenticated users to cause a denial of service (crash) or possibly execute arbitrary code via vectors related to an incorrect MAXDATELEN constant and datetime values involving (1) intervals, (2) timestamps, or (3) timezones, a different vulnerability than CVE-2014-0065.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-03-31T14:58:15.710",
    "last_modified": "2024-11-21T02:01:16.823",
    "fix_date": "2014-02-17T14:33:31Z"
  },
  "references": [
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2014-10/0103.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2014-03/msg00018.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2014-03/msg00038.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0211.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0221.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0249.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0469.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/61307",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://support.apple.com/kb/HT6448",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://wiki.postgresql.org/wiki/20140220securityrelease",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2014/dsa-2864",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2014/dsa-2865",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.postgresql.org/about/news/1506/",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.postgresql.org/support/security/",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/65719",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.ubuntu.com/usn/USN-2120-1",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1065226",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/postgres/postgres/commit/4318daecc959886d001a6e79c6ea853e8b1dfb4b",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT6536",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://archives.neohapsis.com/archives/bugtraq/2014-10/0103.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://kb.juniper.net/InfoCenter/index?page=content&id=JSA10705",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2014-03/msg00018.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2014-03/msg00038.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0211.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0221.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0249.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0469.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://secunia.com/advisories/61307",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://support.apple.com/kb/HT6448",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://wiki.postgresql.org/wiki/20140220securityrelease",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2014/dsa-2864",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2014/dsa-2865",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.postgresql.org/about/news/1506/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.postgresql.org/support/security/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/65719",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.ubuntu.com/usn/USN-2120-1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1065226",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/postgres/postgres/commit/4318daecc959886d001a6e79c6ea853e8b1dfb4b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT6536",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:22.577354",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "postgres",
    "owner": "postgres",
    "created_at": "2010-09-21T11:35:45Z",
    "updated_at": "2025-01-14T12:23:23Z",
    "pushed_at": "2025-01-14T06:28:38Z",
    "size": 608320,
    "stars": 16634,
    "forks": 4693,
    "open_issues": 1,
    "watchers": 16634,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 47031174,
      "PLpgSQL": 3927896,
      "Perl": 2290426,
      "Yacc": 697711,
      "Makefile": 362302,
      "Meson": 359391,
      "Python": 270469,
      "Lex": 229520,
      "M4": 185355,
      "Ruby": 164128,
      "Shell": 75722,
      "C++": 55705,
      "PLSQL": 55013,
      "Roff": 17748,
      "XS": 6998,
      "Emacs Lisp": 4164,
      "DTrace": 3452,
      "Assembly": 2468,
      "Starlark": 1640,
      "sed": 581
    },
    "commit_activity": {
      "total_commits_last_year": 2526,
      "avg_commits_per_week": 48.57692307692308,
      "days_active_last_year": 333
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:40.608433"
  }
}