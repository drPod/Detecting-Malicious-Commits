{
  "cve_id": "CVE-2014-0069",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "5d81de8e8667da7135d3a32a964087c0faf5483f",
    "related_commits": [
      "5d81de8e8667da7135d3a32a964087c0faf5483f",
      "5d81de8e8667da7135d3a32a964087c0faf5483f"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "5d81de8e8667da7135d3a32a964087c0faf5483f",
      "commit_date": "2014-02-14T12:20:35Z",
      "author": {
        "login": "jtlayton",
        "type": "User",
        "stats": {
          "total_commits": 1872,
          "average_weekly_commits": 1.5717884130982367,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 483
        }
      },
      "commit_message": {
        "title": "cifs: ensure that uncached writes handle unmapped areas correctly",
        "length": 1372,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 34,
        "deletions": 3
      },
      "files": [
        {
          "filename": "fs/cifs/file.c",
          "status": "modified",
          "additions": 34,
          "deletions": 3,
          "patch": "@@ -2389,7 +2389,7 @@ cifs_iovec_write(struct file *file, const struct iovec *iov,\n \t\t unsigned long nr_segs, loff_t *poffset)\n {\n \tunsigned long nr_pages, i;\n-\tsize_t copied, len, cur_len;\n+\tsize_t bytes, copied, len, cur_len;\n \tssize_t total_written = 0;\n \tloff_t offset;\n \tstruct iov_iter it;\n@@ -2444,14 +2444,45 @@ cifs_iovec_write(struct file *file, const struct iovec *iov,\n \n \t\tsave_len = cur_len;\n \t\tfor (i = 0; i < nr_pages; i++) {\n-\t\t\tcopied = min_t(const size_t, cur_len, PAGE_SIZE);\n+\t\t\tbytes = min_t(const size_t, cur_len, PAGE_SIZE);\n \t\t\tcopied = iov_iter_copy_from_user(wdata->pages[i], &it,\n-\t\t\t\t\t\t\t 0, copied);\n+\t\t\t\t\t\t\t 0, bytes);\n \t\t\tcur_len -= copied;\n \t\t\tiov_iter_advance(&it, copied);\n+\t\t\t/*\n+\t\t\t * If we didn't copy as much as we expected, then that\n+\t\t\t * may mean we trod into an unmapped area. Stop copying\n+\t\t\t * at that point. On the next pass through the big\n+\t\t\t * loop, we'll likely end up getting a zero-length\n+\t\t\t * write and bailing out of it.\n+\t\t\t */\n+\t\t\tif (copied < bytes)\n+\t\t\t\tbreak;\n \t\t}\n \t\tcur_len = save_len - cur_len;\n \n+\t\t/*\n+\t\t * If we have no data to send, then that probably means that\n+\t\t * the copy above failed altogether. That's most likely because\n+\t\t * the address in the iovec was bogus. Set the rc to -EFAULT,\n+\t\t * free anything we allocated and bail out.\n+\t\t */\n+\t\tif (!cur_len) {\n+\t\t\tfor (i = 0; i < nr_pages; i++)\n+\t\t\t\tput_page(wdata->pages[i]);\n+\t\t\tkfree(wdata);\n+\t\t\trc = -EFAULT;\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\t/*\n+\t\t * i + 1 now represents the number of pages we actually used in\n+\t\t * the copy phase above. Bring nr_pages down to that, and free\n+\t\t * any pages that we didn't use.\n+\t\t */\n+\t\tfor ( ; nr_pages > i + 1; nr_pages--)\n+\t\t\tput_page(wdata->pages[nr_pages - 1]);\n+\n \t\twdata->sync_mode = WB_SYNC_ALL;\n \t\twdata->nr_pages = nr_pages;\n \t\twdata->offset = (__u64)offset;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "The cifs_iovec_write function in fs/cifs/file.c in the Linux kernel through 3.13.5 does not properly handle uncached write operations that copy fewer than the requested number of bytes, which allows local users to obtain sensitive information from kernel memory, cause a denial of service (memory corruption and system crash), or possibly gain privileges via a writev system call with a crafted pointer.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-02-28T06:18:54.010",
    "last_modified": "2024-11-21T02:01:17.717",
    "fix_date": "2014-02-14T12:20:35Z"
  },
  "references": [
    {
      "url": "http://article.gmane.org/gmane.linux.kernel.cifs/9401",
      "source": "secalert@redhat.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git%3Ba=commit%3Bh=5d81de8e8667da7135d3a32a964087c0faf5483f",
      "source": "secalert@redhat.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2014-03/msg00026.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0328.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/02/17/4",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/65588",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1064253",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/5d81de8e8667da7135d3a32a964087c0faf5483f",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://article.gmane.org/gmane.linux.kernel.cifs/9401",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git%3Ba=commit%3Bh=5d81de8e8667da7135d3a32a964087c0faf5483f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2014-03/msg00026.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2014-0328.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/02/17/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/65588",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1064253",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/5d81de8e8667da7135d3a32a964087c0faf5483f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:22.565016",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}