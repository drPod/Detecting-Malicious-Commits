{
  "cve_id": "CVE-2014-0593",
  "github_data": {
    "repository": "openSUSE/obs-service-set_version",
    "fix_commit": "10d5bddcea29f74a175f7f550924bf6407e52e93",
    "related_commits": [
      "10d5bddcea29f74a175f7f550924bf6407e52e93",
      "10d5bddcea29f74a175f7f550924bf6407e52e93"
    ],
    "patch_url": "https://github.com/openSUSE/obs-service-set_version/commit/10d5bddcea29f74a175f7f550924bf6407e52e93.patch",
    "fix_commit_details": {
      "sha": "10d5bddcea29f74a175f7f550924bf6407e52e93",
      "commit_date": "2014-03-06T11:00:23Z",
      "author": {
        "login": "adrianschroeter",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "- replace bash script with a more secure perl version",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 360,
        "additions": 260,
        "deletions": 100
      },
      "files": [
        {
          "filename": "set_version",
          "status": "modified",
          "additions": 144,
          "deletions": 100,
          "patch": "@@ -1,7 +1,7 @@\n-#!/bin/bash\n+#!/usr/bin/perl\n \n-# A simple script to update spec or dsc file\n-# very, very simple. I am happy about patches which handles multiple files with different version numbers\n+\n+# A simple script to update version number in spec, dsc or arch linux files\n #\n # (C) 2010 by Adrian Schr\u00f6ter <adrian@suse.de>\n #  \n@@ -12,105 +12,149 @@\n # See http://www.gnu.org/licenses/gpl-2.0.html for full license text.  \n \n \n-# defaults\n-MYVERSION=\"\"\n-FILES=\"\"\n-\n-while test $# -gt 0; do\n-  case $1 in\n-    *-version)\n-      MYVERSION=\"$2\"\n-      shift\n-    ;;\n-    *-file)\n-      FILES=\"$FILES ${2##*/}\"\n-      shift\n-    ;;\n-    *-basename)\n-      BASENAME=\"$2\"\n-      shift\n-    ;;\n-    *-outdir)\n-      MYOUTDIR=\"$2\"\n-      shift\n-    ;;\n-    *)\n-      echo Unknown parameter $1.\n-      echo 'Usage: set_version --version $VERSION --file $FILE --basename $BASENAME --outdir $OUT'\n-      exit 1\n-    ;;\n-  esac\n-  shift\n-done\n-\n-get_version_from_file () {\n-  # Search for tarball filenames including a version\n-  for ending in \"tar.*\" \"tgz$\" \"tbz2$\" \"zip$\" ; do\n-    if [ -z \"$MYVERSION\" ]; then\n-      MYVERSION=`ls -1t | sed -n \"s,^$BASENAME.*[-_]\\([0123456789].*\\).${ending},\\1,p\" | head -n 1`\n-    else\n-      break;\n-    fi\n-  done\n-  # Search for a version in the root-directory name of the content's file list:\n-  for gz_ending in \"tar.gz\" \"tgz\" \"tar.bz2\" \"tbz2\" ; do\n-    if [ -z \"$MYVERSION\" ]; then\n-      MYVERSION=`tar tf $BASENAME*.${gz_ending} | sed -e 's,/.*,,' | uniq | sed -n \"s,$BASENAME.*[-_]\\(.*\\),\\1,p\"`\n-    else\n-      break;\n-    fi\n-  done\n-  # Take version number (and optional revision) from Debian changelog\n-  if [ -z \"$MYVERSION\" ]; then\n-    MYVERSION=`head -n 1 *debian.changelog 2>/dev/null | sed -ne 's/.*(\\(.*\\)).*/\\1/p'`\n-  fi\n-  if [ -z \"$MYVERSION\" ]; then\n-    echo \"ERROR: no version is given and can't get detected automatically\"\n-    exit 1\n-  fi\n-\n-  # remove trailing \".orig\", used by dpkg sources\n-  MYVERSION=`sed s/.orig$// <<<\"$MYVERSION\"`\n+\n+my $version;\n+my $basename=\"\";\n+my $outdir;\n+my @files;\n+\n+use strict;\n+use Data::Dumper;\n+use File::Basename;\n+\n+sub usage()\n+{\n+  print<<END\n+\n+  Open Build Service source service \"set_version\"\n+\n+  Used to update build description files with a detected or given version number.\n+\n+  Required:\n+\n+  --output:   mediaset, build only for the given mediaset, identify by name\n+\n+  Options:\n+\n+END\n+;\n+  exit;\n+}\n+\n+while (@ARGV) {\n+  usage() if $ARGV[0] eq '--help';\n+  if ($ARGV[0] eq '--outdir') {\n+    shift @ARGV;\n+    $outdir = shift @ARGV;\n+    next;\n+  } elsif ($ARGV[0] eq '--version') {\n+    shift @ARGV;\n+    $version = shift @ARGV;\n+    next;\n+  } elsif ($ARGV[0] eq '--basename') {\n+    # this is actually more a prefix\n+    shift @ARGV;\n+    $basename = shift @ARGV;\n+    next;\n+  } elsif ($ARGV[0] eq '--file') {\n+    shift @ARGV;\n+    push @files, shift @ARGV;\n+    next;\n+  } else {\n+    die(\"Unknown argument $ARGV[0]!\");\n+  }\n+  last;\n }\n \n-write_files () {\n-  if [ -z \"$FILES\" ]; then\n-    FILES=\"*.spec *.dsc\"\n-  fi\n-  if [ -z \"$MYOUTDIR\" ]; then\n-    echo \"ERROR: no output directory is given via --outdir parameter!\"\n-    exit 1\n-  fi\n-\n-  for i in $FILES; do\n-    FILE=`ls -1 $i 2>/dev/null`\n-    [ -e \"$FILE\" ] || continue\n-\n-    sed \"0,/^Version:\\(\\s*\\)[^%]*/s//Version:\\1$MYVERSION/\" \"$FILE\" > \"$MYOUTDIR/$FILE\" || exit 1\n-    if [ \"${FILE%.spec}\" != \"$FILE\" ]; then\n-      # set release back to zero after version upgrade, will be increased by OBS during build\n-      # also keep macros in release in case of fedora/mandriva\n-      sed -r -i \"s,^Release:(\\s*)[^%]*,Release:\\10,\" \"$MYOUTDIR/$FILE\" || exit 1\n-   fi\n-\n-    if [ \"${FILE#_service:}\" != \"$FILE\" ]; then\n-      # we can remove service files, no need to store them twice\n-      rm -f \"$FILE\"\n-    fi\n-  done\n-\n-  if [ -e PKGBUILD ]; then\n-    FILE=`ls -1 _service:*[-_]\"${MYVERSION}\"* | head -n 1`\n-    [ -z \"$FILE\" ] && FILE=`ls -1 *[-_]\"${MYVERSION}\"* | head -n 1`\n-    MD5=`md5sum \"$FILE\" | head -n 1 | cut -d\\  -f 1`\n-\n-    sed \"0,/^pkgver=\\(\\s*\\)[^%]*/s//pkgver=\\1$MYVERSION/\" PKGBUILD > \"$MYOUTDIR/PKGBUILD\" || exit 1\n-    sed -r -i \"s,^pkgrel=.*,pkgrel=0,\" \"$MYOUTDIR/PKGBUILD\" || exit 1\n-    sed -r -i \"s,^md5sums=.*,md5sums=('$MD5'),\" \"$MYOUTDIR/PKGBUILD\" || exit 1\n-  fi\n+usage() unless $outdir;\n+\n+# get local file list\n+local *D;\n+opendir(D, \".\") || return ();\n+my @srcfiles = grep {$_ ne '.' && $_ ne '..'} readdir(D);\n+closedir D;\n+\n+# Detect version based on file names\n+unless ($version) {\n+  my @binsufs = qw{tar tar.gz tgz tar.bz2 tbz2 tar.xz zip};\n+  my $binsufsre = join('|', map {\"\\Q$_\\E\"} @binsufs);\n+  for my $name (@srcfiles) {\n+    if ($name =~ /^$basename.*[-_]([\\d].*).(?:$binsufsre)$/) {\n+       $version=$1;\n+       last;\n+    }\n+  }\n }\n \n-get_version_from_file\n-write_files\n+# to replace tags in .spec and .dsc files\n+sub replace_tag {\n+  my ($filename, $tag, $string) = @_;\n+  local *R;\n+  local *W;\n+  # read, try first an modified version in outdir\n+  if (!open(R, '<', \"$outdir/$filename\")) {\n+    if (!open(R, '<', $filename)) {\n+      die(\"unable to read $filename: $!\\n\");\n+      return undef;\n+    }\n+  }\n+  if (!open(W, '>', \"$outdir/.$filename\")) {\n+    die(\"unable to write .$filename: $!\\n\");\n+    return undef;\n+  }\n+  my $line;\n+  while (defined($line = <R>)) {\n+    $line =~ s/\\n$//;\n+    if ( $filename =~ /PKGBUILD$/ ) {\n+      $line =~ s/^$tag=.*/$tag=$string/;\n+    } else {\n+      # keep inline macros for rpm\n+      $line =~ s/^$tag:(\\s*)[^%]*/$tag:$1$string/;\n+    }\n+    print W \"$line\\n\";\n+  }\n+  close R;\n+  close W;\n \n-exit 0\n+  rename(\"$outdir/.$filename\", \"$outdir/$filename\") || die(\"rename failed\");\n+}\n+\n+# handle rpm spec and debian dsc files\n+@files = grep {$_ =~ /.(spec|dsc)$/} @srcfiles if @files <= 0;\n+for my $file (@files) {\n+  replace_tag($file, 'Version', $version);\n+  replace_tag($file, 'Release', \"0\");\n+}\n+\n+use Digest::MD5;\n+\n+# handle arch linux PKGBUILD files\n+if ( -e \"PKGBUILD\" ) {\n+  # find md5sum of tar ball\n+  my $md5sum;\n+  my $tarfile;\n+  for my $file (@srcfiles) {\n+    if ( $file =~ /^_service:.*[-_]$version.*/ ) {\n+      $tarfile = $file;\n+      last;\n+    }\n+  }\n+  unless($tarfile) {\n+    for my $file (@srcfiles) {\n+      if ( $file =~ /.*[-_]$version.*/ ) {\n+        $tarfile = $file;\n+        last;\n+      }\n+    }\n+  }\n+\n+  open(FILE, $tarfile) || die \"Unable to find source file to calculate md5sum\\n\";\n+  my $ctx = Digest::MD5->new;\n+  $ctx->addfile(*FILE);\n+  $md5sum = $ctx->hexdigest;\n+  close(FILE);\n+\n+  die (\"Failed to calculate md5sum\") unless $md5sum;\n+  replace_tag(\"PKGBUILD\", \"pkgrel\", \"0\");\n+  replace_tag(\"PKGBUILD\", \"md5sums\", \"('\".$md5sum.\"')\");\n+}"
        },
        {
          "filename": "set_version.old.do_not_use",
          "status": "added",
          "additions": 116,
          "deletions": 0,
          "patch": "@@ -0,0 +1,116 @@\n+#!/bin/bash\n+\n+# A simple script to update spec or dsc file\n+# very, very simple. I am happy about patches which handles multiple files with different version numbers\n+#\n+# (C) 2010 by Adrian Schr\u00f6ter <adrian@suse.de>\n+#  \n+# This program is free software; you can redistribute it and/or  \n+# modify it under the terms of the GNU General Public License  \n+# as published by the Free Software Foundation; either version 2  \n+# of the License, or (at your option) any later version.  \n+# See http://www.gnu.org/licenses/gpl-2.0.html for full license text.  \n+\n+\n+# defaults\n+MYVERSION=\"\"\n+FILES=\"\"\n+\n+while test $# -gt 0; do\n+  case $1 in\n+    *-version)\n+      MYVERSION=\"$2\"\n+      shift\n+    ;;\n+    *-file)\n+      FILES=\"$FILES ${2##*/}\"\n+      shift\n+    ;;\n+    *-basename)\n+      BASENAME=\"$2\"\n+      shift\n+    ;;\n+    *-outdir)\n+      MYOUTDIR=\"$2\"\n+      shift\n+    ;;\n+    *)\n+      echo Unknown parameter $1.\n+      echo 'Usage: set_version --version $VERSION --file $FILE --basename $BASENAME --outdir $OUT'\n+      exit 1\n+    ;;\n+  esac\n+  shift\n+done\n+\n+get_version_from_file () {\n+  # Search for tarball filenames including a version\n+  for ending in \"tar.*\" \"tgz$\" \"tbz2$\" \"zip$\" ; do\n+    if [ -z \"$MYVERSION\" ]; then\n+      MYVERSION=`ls -1t | sed -n \"s,^$BASENAME.*[-_]\\([0123456789].*\\).${ending},\\1,p\" | head -n 1`\n+    else\n+      break;\n+    fi\n+  done\n+  # Search for a version in the root-directory name of the content's file list:\n+  for gz_ending in \"tar.gz\" \"tgz\" \"tar.bz2\" \"tbz2\" ; do\n+    if [ -z \"$MYVERSION\" ]; then\n+      MYVERSION=`tar tf $BASENAME*.${gz_ending} | sed -e 's,/.*,,' | uniq | sed -n \"s,$BASENAME.*[-_]\\(.*\\),\\1,p\"`\n+    else\n+      break;\n+    fi\n+  done\n+  # Take version number (and optional revision) from Debian changelog\n+  if [ -z \"$MYVERSION\" ]; then\n+    MYVERSION=`head -n 1 *debian.changelog 2>/dev/null | sed -ne 's/.*(\\(.*\\)).*/\\1/p'`\n+  fi\n+  if [ -z \"$MYVERSION\" ]; then\n+    echo \"ERROR: no version is given and can't get detected automatically\"\n+    exit 1\n+  fi\n+\n+  # remove trailing \".orig\", used by dpkg sources\n+  MYVERSION=`sed s/.orig$// <<<\"$MYVERSION\"`\n+}\n+\n+write_files () {\n+  if [ -z \"$FILES\" ]; then\n+    FILES=\"*.spec *.dsc\"\n+  fi\n+  if [ -z \"$MYOUTDIR\" ]; then\n+    echo \"ERROR: no output directory is given via --outdir parameter!\"\n+    exit 1\n+  fi\n+\n+  for i in $FILES; do\n+    FILE=`ls -1 $i 2>/dev/null`\n+    [ -e \"$FILE\" ] || continue\n+\n+    sed \"0,/^Version:\\(\\s*\\)[^%]*/s//Version:\\1$MYVERSION/\" \"$FILE\" > \"$MYOUTDIR/$FILE\" || exit 1\n+    if [ \"${FILE%.spec}\" != \"$FILE\" ]; then\n+      # set release back to zero after version upgrade, will be increased by OBS during build\n+      # also keep macros in release in case of fedora/mandriva\n+      sed -r -i \"s,^Release:(\\s*)[^%]*,Release:\\10,\" \"$MYOUTDIR/$FILE\" || exit 1\n+   fi\n+\n+    if [ \"${FILE#_service:}\" != \"$FILE\" ]; then\n+      # we can remove service files, no need to store them twice\n+      rm -f \"$FILE\"\n+    fi\n+  done\n+\n+  if [ -e PKGBUILD ]; then\n+    FILE=`ls -1 _service:*[-_]\"${MYVERSION}\"* | head -n 1`\n+    [ -z \"$FILE\" ] && FILE=`ls -1 *[-_]\"${MYVERSION}\"* | head -n 1`\n+    MD5=`md5sum \"$FILE\" | head -n 1 | cut -d\\  -f 1`\n+\n+    sed \"0,/^pkgver=\\(\\s*\\)[^%]*/s//pkgver=\\1$MYVERSION/\" PKGBUILD > \"$MYOUTDIR/PKGBUILD\" || exit 1\n+    sed -r -i \"s,^pkgrel=.*,pkgrel=0,\" \"$MYOUTDIR/PKGBUILD\" || exit 1\n+    sed -r -i \"s,^md5sums=.*,md5sums=('$MD5'),\" \"$MYOUTDIR/PKGBUILD\" || exit 1\n+  fi\n+}\n+\n+get_version_from_file\n+write_files\n+\n+exit 0"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f9cc89baea1d22a74816a1ae89040f670ce622f7",
            "date": "2024-07-16T11:49:00Z",
            "author_login": "adrianschroeter"
          },
          {
            "sha": "5a4de9958df115ddff484083f2a1cb0aaa9e776a",
            "date": "2024-07-16T11:40:40Z",
            "author_login": "adrianschroeter"
          },
          {
            "sha": "095866e87fb65adb398dde711961b8cf639035a9",
            "date": "2024-06-18T15:29:58Z",
            "author_login": "dirkmueller"
          },
          {
            "sha": "8c936961859439c89e922cc0aaa0715165ea9fa7",
            "date": "2024-06-18T15:22:37Z",
            "author_login": "dirkmueller"
          },
          {
            "sha": "287a015dd037a729e64c8e9d556354faf7256f0d",
            "date": "2024-06-18T08:55:02Z",
            "author_login": "dirkmueller"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-78",
    "description": "The set_version script as shipped with obs-service-set_version is a source validator for the Open Build Service (OBS). In versions prior to 0.5.3-1.1 this script did not properly sanitize the input provided by the user, allowing for code execution on the executing server.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-06-08T17:29:00.380",
    "last_modified": "2024-11-21T02:02:27.703",
    "fix_date": "2014-03-06T11:00:23Z"
  },
  "references": [
    {
      "url": "https://bugzilla.suse.com/show_bug.cgi?id=866966",
      "source": "security@opentext.com",
      "tags": []
    },
    {
      "url": "https://github.com/openSUSE/obs-service-set_version/commit/10d5bddcea29f74a175f7f550924bf6407e52e93",
      "source": "security@opentext.com",
      "tags": []
    },
    {
      "url": "https://lists.opensuse.org/opensuse-buildservice/2014-03/msg00014.html",
      "source": "security@opentext.com",
      "tags": []
    },
    {
      "url": "https://www.suse.com/de-de/security/cve/CVE-2014-0593/",
      "source": "security@opentext.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.suse.com/show_bug.cgi?id=866966",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/openSUSE/obs-service-set_version/commit/10d5bddcea29f74a175f7f550924bf6407e52e93",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.opensuse.org/opensuse-buildservice/2014-03/msg00014.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.suse.com/de-de/security/cve/CVE-2014-0593/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.921179",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "obs-service-set_version",
    "owner": "openSUSE",
    "created_at": "2013-10-29T13:33:14Z",
    "updated_at": "2024-07-16T11:49:56Z",
    "pushed_at": "2024-07-16T11:49:53Z",
    "size": 169,
    "stars": 5,
    "forks": 39,
    "open_issues": 17,
    "watchers": 5,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 58545,
      "Makefile": 488
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T22:18:56.686725"
  }
}