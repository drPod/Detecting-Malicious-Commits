{
  "cve_id": "CVE-2014-125037",
  "github_data": {
    "repository": "elizabrock/license-to-kill",
    "fix_commit": "cd11cf174f361c98e9b1b4c281aa7b77f46b5078",
    "related_commits": [
      "cd11cf174f361c98e9b1b4c281aa7b77f46b5078",
      "cd11cf174f361c98e9b1b4c281aa7b77f46b5078"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "cd11cf174f361c98e9b1b4c281aa7b77f46b5078",
      "commit_date": "2014-05-01T14:22:12Z",
      "author": {
        "login": "elizabrock",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix the SQL injection! STRING INTERPOLATION - NEVER AGAIN. NEVER!",
        "length": 65,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 19,
        "additions": 11,
        "deletions": 8
      },
      "files": [
        {
          "filename": "lib/database.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -13,8 +13,8 @@ def create_tables\n     self.execute(\"CREATE TABLE injuries (id INTEGER PRIMARY KEY AUTOINCREMENT, name varchar(50))\")\n   end\n \n-  def execute(statement)\n+  def execute(statement, bind_vars = [])\n     Environment.logger.info(\"Executing: \" + statement)\n-    super(statement)\n+    super(statement, bind_vars)\n   end\n end"
        },
        {
          "filename": "models/injury.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -19,8 +19,8 @@ def self.count\n   end\n \n   def self.find_by_name(name)\n-    statement = \"Select * from injuries where name = \\\"#{name}\\\";\"\n-    execute_and_instantiate(statement)[0]\n+    statement = \"Select * from injuries where name = ?;\"\n+    execute_and_instantiate(statement, name)[0]\n   end\n \n   def self.last\n@@ -33,16 +33,16 @@ def save\n       @errors << \"#{self.name} already exists.\"\n       false\n     else\n-      statement = \"Insert into injuries (name) values ('#{name}');\"\n-      Environment.database_connection.execute(statement)\n+      statement = \"Insert into injuries (name) values (?);\"\n+      Environment.database_connection.execute(statement, name)\n       true\n     end\n   end\n \n   private\n \n-  def self.execute_and_instantiate(statement)\n-    rows = Environment.database_connection.execute(statement)\n+  def self.execute_and_instantiate(statement, bind_vars = [])\n+    rows = Environment.database_connection.execute(statement, bind_vars)\n     results = []\n     rows.each do |row|\n       results << Injury.new(row[\"name\"])"
        },
        {
          "filename": "spec/injury_integration_spec.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -57,12 +57,15 @@\n     context \"without alphabet characters\" do\n       let(:output){ run_ltk_with_input(\"2\", \"4*25\") }\n       it \"should not save the injury\" do\n+        pending\n         Injury.count.should == 1\n       end\n       it \"should print an error message\" do\n+        pending\n         output.should include(\"'4*25' is not a valid injury name, as it does not include any letters'\")\n       end\n       it \"should let them try again\" do\n+        pending\n         menu_text = \"What is the injury you want to add?\"\n         output.should include_in_order(menu_text, \"not a valid\", menu_text)\n       end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a0d906a5bc95eac051eda7981ac01b1dc4801c5f",
            "date": "2022-07-22T20:08:57Z",
            "author_login": "elizabrock"
          },
          {
            "sha": "c8dd09ca93ca07cf37b8add5d2890cf00b1fce03",
            "date": "2014-06-10T16:56:52Z",
            "author_login": "RJFryman"
          },
          {
            "sha": "f59b5e886e3a13ffb2877f5341ce499b16aff5ff",
            "date": "2014-05-13T15:26:36Z",
            "author_login": "elizabrock"
          },
          {
            "sha": "7077367ce1fdf93ea23c5b60da88cce8cafed537",
            "date": "2014-05-13T15:13:41Z",
            "author_login": "elizabrock"
          },
          {
            "sha": "12c93be06b4208017541768223d884ff2a29e9ec",
            "date": "2014-05-12T17:00:43Z",
            "author_login": "elizabrock"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability, which was classified as critical, was found in License to Kill. This affects an unknown part of the file models/injury.rb. The manipulation of the argument name leads to sql injection. The patch is named cd11cf174f361c98e9b1b4c281aa7b77f46b5078. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217191.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-02T18:15:18.787",
    "last_modified": "2024-11-21T02:03:39.247",
    "fix_date": "2014-05-01T14:22:12Z"
  },
  "references": [
    {
      "url": "https://github.com/elizabrock/license-to-kill/commit/cd11cf174f361c98e9b1b4c281aa7b77f46b5078",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217191",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217191",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elizabrock/license-to-kill/commit/cd11cf174f361c98e9b1b4c281aa7b77f46b5078",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217191",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217191",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.246007",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "license-to-kill",
    "owner": "elizabrock",
    "created_at": "2014-04-29T14:39:52Z",
    "updated_at": "2023-01-27T22:52:24Z",
    "pushed_at": "2022-07-22T20:09:19Z",
    "size": 40,
    "stars": 1,
    "forks": 4,
    "open_issues": 0,
    "watchers": 1,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Ruby": 29561
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:26:46.816495"
  }
}