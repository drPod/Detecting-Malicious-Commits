{
  "cve_id": "CVE-2014-125048",
  "github_data": {
    "repository": "kassi/xingwall",
    "fix_commit": "e9f0d509e1408743048e29d9c099d36e0e1f6ae7",
    "related_commits": [
      "e9f0d509e1408743048e29d9c099d36e0e1f6ae7",
      "e9f0d509e1408743048e29d9c099d36e0e1f6ae7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e9f0d509e1408743048e29d9c099d36e0e1f6ae7",
      "commit_date": "2014-11-20T10:32:57Z",
      "author": {
        "login": "JanAhrens",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Regenerate session after XING login to fix \"session fixation\" vulnerability",
        "length": 75,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 96,
        "additions": 51,
        "deletions": 45
      },
      "files": [
        {
          "filename": "app/controllers/oauth.js",
          "status": "modified",
          "additions": 51,
          "deletions": 45,
          "patch": "@@ -35,52 +35,58 @@ module.exports = function (app, io) {\n \n     xingApi.getAccessToken(requestToken.token, requestToken.secret, req.query.oauth_verifier,\n       function (error, oauthToken, oauthTokenSecret) {\n-        res.cookie('requestToken', null); // delete cookie\n-\n-        var client = xingApi.client(oauthToken, oauthTokenSecret);\n-\n-        client.get('/v1/users/me', function (error, response) {\n-          var user = JSON.parse(response).users[0];\n-\n-          Wall.findOne({ _id: req.query.wall_id }).exec()\n-            .then(function (wall) {\n-\n-              var profile = new Profile({\n-                userId: user.id,\n-                displayName: user.display_name,\n-                photoUrls: {\n-                  size_128x128: user.photo_urls.size_128x128,\n-                  size_256x256: user.photo_urls.size_256x256\n-                }\n-              }).toObject();\n-\n-              delete profile._id; // make sure that we don't overwrite the internal _id on an update\n-\n-              Profile.findOneAndUpdate({ userId: user.id }, profile, { upsert: true }).exec()\n-                .then(function (profile) {\n-                  wall.profiles.pull(profile._id);\n-                  wall.profiles.push(profile._id);\n-\n-                  wall.save(function (err) {\n-                    if (err) {\n-                      console.error(err);\n-                      res.render('error');\n-                    } else {\n-                      req.session.user = {\n-                        id: profile._id,\n-                        oauthToken: oauthToken,\n-                        oauthTokenSecret: oauthTokenSecret\n-                      };\n-\n-                      io.emit('profiles:updated');\n-                      res.render('oauth/callback', { url: \"/walls/\" + req.query.wall_id });\n-                    }\n+        if (error) {\n+          console.log(error);\n+          res.render('error');\n+          return;\n+        }\n+        req.session.regenerate(function (err) {\n+          res.cookie('requestToken', null); // delete cookie\n+\n+          var client = xingApi.client(oauthToken, oauthTokenSecret);\n+\n+          client.get('/v1/users/me', function (error, response) {\n+            var user = JSON.parse(response).users[0];\n+\n+            Wall.findOne({ _id: req.query.wall_id }).exec()\n+              .then(function (wall) {\n+\n+                var profile = new Profile({\n+                  userId: user.id,\n+                  displayName: user.display_name,\n+                  photoUrls: {\n+                    size_128x128: user.photo_urls.size_128x128,\n+                    size_256x256: user.photo_urls.size_256x256\n+                  }\n+                }).toObject();\n+\n+                delete profile._id; // make sure that we don't overwrite the internal _id on an update\n+\n+                Profile.findOneAndUpdate({ userId: user.id }, profile, { upsert: true }).exec()\n+                  .then(function (profile) {\n+                    wall.profiles.pull(profile._id);\n+                    wall.profiles.push(profile._id);\n+\n+                    wall.save(function (err) {\n+                      if (err) {\n+                        console.error(err);\n+                        res.render('error');\n+                      } else {\n+                        req.session.user = {\n+                          id: profile._id,\n+                          oauthToken: oauthToken,\n+                          oauthTokenSecret: oauthTokenSecret\n+                        };\n+\n+                        io.emit('profiles:updated');\n+                        res.render('oauth/callback', { url: \"/walls/\" + req.query.wall_id });\n+                      }\n+                    });\n                   });\n-                });\n-\n-            }, function (err) {\n-              console.log(err);\n-            });\n+              }, function (err) {\n+                console.log(err);\n+              });\n+          });\n         });\n       });\n   });"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ccc36b45af7e3264ed22dbc9a0c142b6f96ca0b5",
            "date": "2014-11-25T07:55:58Z",
            "author_login": "JanAhrens"
          },
          {
            "sha": "155751b7c58517426dd28002ec206479eafd48ee",
            "date": "2014-11-25T07:53:17Z",
            "author_login": "JanAhrens"
          },
          {
            "sha": "e2cd24c4f78fe99386182188d4c2fe858efb074a",
            "date": "2014-11-25T07:49:33Z",
            "author_login": "JanAhrens"
          },
          {
            "sha": "7b5364818a49f0ea00d2f23ae660a6230fb9c563",
            "date": "2014-11-22T14:39:49Z",
            "author_login": "JanAhrens"
          },
          {
            "sha": "36e3bbb9387ad46f5de29ad755e7eb1b5c0bd778",
            "date": "2014-11-21T23:05:03Z",
            "author_login": "JanAhrens"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-384",
    "description": "A vulnerability, which was classified as critical, has been found in kassi xingwall. This issue affects some unknown processing of the file app/controllers/oauth.js. The manipulation leads to session fixiation. The patch is named e9f0d509e1408743048e29d9c099d36e0e1f6ae7. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217559.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-06T13:15:09.670",
    "last_modified": "2024-11-21T02:03:40.580",
    "fix_date": "2014-11-20T10:32:57Z"
  },
  "references": [
    {
      "url": "https://github.com/kassi/xingwall/commit/e9f0d509e1408743048e29d9c099d36e0e1f6ae7",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217559",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217559",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kassi/xingwall/commit/e9f0d509e1408743048e29d9c099d36e0e1f6ae7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217559",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217559",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.520431",
    "processing_status": "enhanced"
  }
}