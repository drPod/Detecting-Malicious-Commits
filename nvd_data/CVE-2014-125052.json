{
  "cve_id": "CVE-2014-125052",
  "github_data": {
    "repository": "JervenBolleman/sparql-identifiers",
    "fix_commit": "44bb0db91c064e305b192fc73521d1dfd25bde52",
    "related_commits": [
      "44bb0db91c064e305b192fc73521d1dfd25bde52",
      "44bb0db91c064e305b192fc73521d1dfd25bde52"
    ],
    "patch_url": "https://github.com/JervenBolleman/sparql-identifiers/commit/44bb0db91c064e305b192fc73521d1dfd25bde52.patch",
    "fix_commit_details": {
      "sha": "44bb0db91c064e305b192fc73521d1dfd25bde52",
      "commit_date": "2014-05-19T06:33:58Z",
      "author": {
        "login": "JervenBolleman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Clean up DB code, remove some SQL injection holes.",
        "length": 50,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 147,
        "additions": 59,
        "deletions": 88
      },
      "files": [
        {
          "filename": "src/main/java/org/identifiers/db/DbUtilities.java",
          "status": "modified",
          "additions": 1,
          "deletions": 6,
          "patch": "@@ -67,16 +67,11 @@ public static Connection initDbConnection()\n \t * @param connection\n \t * @param stmt\n \t */\n-\tpublic static void closeDbConnection(Connection connection, PreparedStatement stmt)\n+\tpublic static void closeDbConnection(Connection connection)\n \t{\n         // closes the connection\n         try\n         {\n-            if (null !=  stmt)\n-            {\n-            \t//System.out.println(\"- Closes the prepared statement\");\n-            \tstmt.close();\n-            }\n             if (null != connection)\n             {\n             \t//System.out.println(\"- Closes the connection\");"
        },
        {
          "filename": "src/main/java/org/identifiers/db/RegistryDao.java",
          "status": "modified",
          "additions": 58,
          "deletions": 82,
          "patch": "@@ -1,6 +1,5 @@\n package org.identifiers.db;\n \n-\n import org.identifiers.data.URIextended;\n import org.identifiers.db.DbUtilities;\n \n@@ -11,106 +10,83 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-\n /**\n  * Simple dao for SPARQL testing.\n  * \n  * @author Camille\n  * @version 20140519\n  */\n-public class RegistryDao\n-{\n-\tprivate Connection connection = null;\n-\t\n-\t\n-\t\n-\t\n+public class RegistryDao {\n+\n \t/**\n \t * Returns all URIs sameAs the provided one.\n+\t * \n \t * @param uri\n \t * @return\n \t */\n-\tpublic List<URIextended> getSameAsURIs(String uri)\n-\t{\n-        Boolean error = false;   // if an error happens\n-        PreparedStatement stmt = null;\n-        ResultSet rs;\n-        List<URIextended> urls = null;\n-        \n-        // initialisation of the database connection\n-\t    connection = DbUtilities.initDbConnection();\n-        \n-        try\n-        {\n+\tpublic List<URIextended> getSameAsURIs(String uri) {\n+\n+\t\tList<URIextended> urls = null;\n \n-            final String uriTobe = uri.substring(0,uri.indexOf(\"/\", 10));\n-\t\t\tString query = \"SELECT convertPrefix, ptr_datatype FROM mir_resource WHERE `convertPrefix` LIKE '\"+uriTobe+\"%'\";\n-            \n-            try\n-            {\n-                stmt = connection.prepareStatement(query);\n-            }\n-            catch (SQLException e)\n-            {\n-                System.err.println(\"Error while creating the prepared statement!\");\n-                System.err.println(\"SQL Exception raised: \" + e.getMessage());\n-            }\n-            \n-            //logger.debug(\"SQL prepared query: \" + stmt.toString());\n-            rs = stmt.executeQuery();\n+\t\t// initialisation of the database connection\n+\t\ttry (Connection connection = DbUtilities.initDbConnection()) {\n \n-            String dataTypeId = null;\n-            String identifier = null;\n+\t\t\tfinal String uriTobe = uri.substring(0, uri.indexOf(\"/\", 10))+'%';\n+\t\t\tString query = \"SELECT convertPrefix, ptr_datatype FROM mir_resource WHERE `convertPrefix` LIKE ?\";\n \n-            while (rs.next()) {\n-                String convertPrefix = rs.getString(\"convertPrefix\");\n-                if(uri.contains(convertPrefix)){\n-                    dataTypeId = rs.getString(\"ptr_datatype\");\n-                    identifier = uri.substring(convertPrefix.length());\n-                }\n+\t\t\tString dataTypeId = null;\n+\t\t\tString identifier = null;\n \n-            }\n+\t\t\ttry (PreparedStatement stmt = connection.prepareStatement(query)) {\n+\t\t\t\tstmt.setString(1, uriTobe);\n+\t\t\t\ttry (ResultSet rs = stmt.executeQuery()) {\n+\t\t\t\t\twhile (rs.next()) {\n+\t\t\t\t\t\tString convertPrefix = rs.getString(\"convertPrefix\");\n+\t\t\t\t\t\tif (uri.contains(convertPrefix)) {\n+\t\t\t\t\t\t\tdataTypeId = rs.getString(\"ptr_datatype\");\n+\t\t\t\t\t\t\tidentifier = uri.substring(convertPrefix.length());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (SQLException e) {\n+\t\t\t\tSystem.err\n+\t\t\t\t\t\t.println(\"Error while creating the prepared statement!\");\n+\t\t\t\tSystem.err.println(\"SQL Exception raised: \" + e.getMessage());\n+\t\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\t\"Sorry, an error occurred while dealing with your request.\",\n+\t\t\t\t\t\te);\n+\t\t\t}\n \n-            query = \"SELECT convertPrefix, obsolete FROM mir_resource WHERE ptr_datatype=\\\"\"+dataTypeId+\"\\\" and urischeme=1\";\n+\t\t\t// logger.debug(\"SQL prepared query: \" + stmt.toString());\n \n-            try\n-            {\n-                stmt = connection.prepareStatement(query);\n-            }\n-            catch (SQLException e)\n-            {\n-                System.err.println(\"Error while creating the prepared statement!\");\n-                System.err.println(\"SQL Exception raised: \" + e.getMessage());\n-            }\n-            //logger.debug(\"SQL prepared query: \" + stmt.toString());\n-            rs = stmt.executeQuery();\n+\t\t\tquery = \"SELECT convertPrefix, obsolete FROM mir_resource WHERE ptr_datatype=? and urischeme=1\";\n \n-            urls = new ArrayList<URIextended>();\n-            while (rs.next())\n-            {\n-                urls.add(new URIextended(rs.getString(\"convertPrefix\") + identifier, rs.getInt(\"obsolete\")));\n-            }\n-            rs.close();\n-        }\n-        catch (SQLException e)\n-        {\n-            //logger.error(\"Error during the processing of the result of a query.\");\n-            //logger.error(\"SQL Exception raised: \" + e.getMessage());\n-            error = true;\n-        }\n-        finally\n-        {\n-        \t// closes the database connection and statement\n-            DbUtilities.closeDbConnection(connection, stmt);\n-        }\n+\t\t\ttry (PreparedStatement stmt = connection.prepareStatement(query)) {\n+\t\t\t\tstmt.setString(1, dataTypeId);\n+\t\t\t\ttry (ResultSet rs = stmt.executeQuery()) {\n \n+\t\t\t\t\turls = new ArrayList<URIextended>();\n+\t\t\t\t\twhile (rs.next()) {\n+\t\t\t\t\t\turls.add(new URIextended(rs.getString(\"convertPrefix\")\n+\t\t\t\t\t\t\t\t+ identifier, rs.getInt(\"obsolete\")));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (SQLException e) {\n+\t\t\t\tSystem.err\n+\t\t\t\t\t\t.println(\"Error while creating the prepared statement!\");\n+\t\t\t\tSystem.err.println(\"SQL Exception raised: \" + e.getMessage());\n+\t\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\t\"Sorry, an error occurred while dealing with your request.\",\n+\t\t\t\t\t\te);\n+\t\t\t}\n+\t\t\t// logger.debug(\"SQL prepared query: \" + stmt.toString());\n \n-        // exception handling\n-        if (error)\n-        {\n-            throw new RuntimeException(\"Sorry, an error occurred while dealing with your request.\");\n-        }\n-        System.out.println(\"u\"+urls.size());\n-        return urls;\n+\t\t} catch (SQLException e1) {\n+\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\"Sorry, an error occurred while dealing with your request.\",\n+\t\t\t\t\te1);\n+\t\t}\n+\t\tSystem.out.println(\"u\" + urls.size());\n+\t\treturn urls;\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "25f8de730e034da3581213417d98fef13150e594",
            "date": "2024-07-17T15:20:09Z",
            "author_login": "renatocjn"
          },
          {
            "sha": "2456d074ad2687f768b988ed2964a53d50a83c9b",
            "date": "2024-07-17T14:20:21Z",
            "author_login": "renatocjn"
          },
          {
            "sha": "1d2766ef432b30af19be28030cb1a2960b8c148e",
            "date": "2022-09-02T14:51:47Z",
            "author_login": "JervenBolleman"
          },
          {
            "sha": "e777222947b9e6d94ad3ed8fcc3cdae16f1e2d79",
            "date": "2022-09-02T10:00:03Z",
            "author_login": "JervenBolleman"
          },
          {
            "sha": "3902d91feba8ea29dac402bdf50ff88b2646604b",
            "date": "2022-09-02T09:58:32Z",
            "author_login": "JervenBolleman"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability was found in JervenBolleman sparql-identifiers and classified as critical. This issue affects some unknown processing of the file src/main/java/org/identifiers/db/RegistryDao.java. The manipulation leads to sql injection. The patch is named 44bb0db91c064e305b192fc73521d1dfd25bde52. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217571.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-06T21:15:09.060",
    "last_modified": "2024-11-21T02:03:41.147",
    "fix_date": "2014-05-19T06:33:58Z"
  },
  "references": [
    {
      "url": "https://github.com/JervenBolleman/sparql-identifiers/commit/44bb0db91c064e305b192fc73521d1dfd25bde52",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217571",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217571",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/JervenBolleman/sparql-identifiers/commit/44bb0db91c064e305b192fc73521d1dfd25bde52",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217571",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217571",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.521640",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sparql-identifiers",
    "owner": "JervenBolleman",
    "created_at": "2014-05-19T03:53:28Z",
    "updated_at": "2024-11-07T13:34:38Z",
    "pushed_at": "2024-11-07T13:34:34Z",
    "size": 454,
    "stars": 6,
    "forks": 2,
    "open_issues": 2,
    "watchers": 6,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 52563,
      "HTML": 1595
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:18:01.248255"
  }
}