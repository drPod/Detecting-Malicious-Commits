{
  "cve_id": "CVE-2014-1858",
  "github_data": {
    "repository": "numpy/numpy",
    "fix_commit": "0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
    "related_commits": [
      "0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
      "0bb46c1448b0d3f5453d5182a17ea7ac5854ee15"
    ],
    "patch_url": "https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15.patch",
    "fix_commit_details": {
      "sha": "0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
      "commit_date": "2014-02-05T22:01:47Z",
      "author": {
        "login": "juliantaylor",
        "type": "User",
        "stats": {
          "total_commits": 740,
          "average_weekly_commits": 0.6141078838174274,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 160
        }
      },
      "commit_message": {
        "title": "ENH: remove insecure mktemp use",
        "length": 118,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 101,
        "additions": 50,
        "deletions": 51
      },
      "files": [
        {
          "filename": "numpy/core/tests/test_memmap.py",
          "status": "modified",
          "additions": 16,
          "deletions": 18,
          "patch": "@@ -1,7 +1,7 @@\n from __future__ import division, absolute_import, print_function\n \n import sys\n-from tempfile import NamedTemporaryFile, TemporaryFile, mktemp\n+from tempfile import NamedTemporaryFile, TemporaryFile\n import os\n \n from numpy import memmap\n@@ -33,12 +33,11 @@ def test_roundtrip(self):\n         assert_array_equal(self.data, newfp)\n \n     def test_open_with_filename(self):\n-        tmpname = mktemp('', 'mmap')\n-        fp = memmap(tmpname, dtype=self.dtype, mode='w+',\n-                       shape=self.shape)\n-        fp[:] = self.data[:]\n-        del fp\n-        os.unlink(tmpname)\n+        with NamedTemporaryFile() as tmp:\n+            fp = memmap(tmp.name, dtype=self.dtype, mode='w+',\n+                        shape=self.shape)\n+            fp[:] = self.data[:]\n+            del fp\n \n     def test_unnamed_file(self):\n         with TemporaryFile() as f:\n@@ -55,17 +54,16 @@ def test_attributes(self):\n         del fp\n \n     def test_filename(self):\n-        tmpname = mktemp('', 'mmap')\n-        fp = memmap(tmpname, dtype=self.dtype, mode='w+',\n-                       shape=self.shape)\n-        abspath = os.path.abspath(tmpname)\n-        fp[:] = self.data[:]\n-        self.assertEqual(abspath, fp.filename)\n-        b = fp[:1]\n-        self.assertEqual(abspath, b.filename)\n-        del b\n-        del fp\n-        os.unlink(tmpname)\n+        with NamedTemporaryFile() as tmp:\n+            fp = memmap(tmp.name, dtype=self.dtype, mode='w+',\n+                        shape=self.shape)\n+            abspath = os.path.abspath(tmp.name)\n+            fp[:] = self.data[:]\n+            self.assertEqual(abspath, fp.filename)\n+            b = fp[:1]\n+            self.assertEqual(abspath, b.filename)\n+            del b\n+            del fp\n \n     def test_filename_fileobj(self):\n         fp = memmap(self.tmpfp, dtype=self.dtype, mode=\"w+\","
        },
        {
          "filename": "numpy/core/tests/test_multiarray.py",
          "status": "modified",
          "additions": 3,
          "deletions": 10,
          "patch": "@@ -2316,12 +2316,11 @@ def setUp(self):\n         self.x = rand(shape) + rand(shape).astype(np.complex)*1j\n         self.x[0,:, 1] = [nan, inf, -inf, nan]\n         self.dtype = self.x.dtype\n-        self.filename = tempfile.mktemp()\n+        self.file = tempfile.NamedTemporaryFile()\n+        self.filename = self.file.name\n \n     def tearDown(self):\n-        if os.path.isfile(self.filename):\n-            os.unlink(self.filename)\n-            #tmp_file.close()\n+        self.file.close()\n \n     def test_bool_fromstring(self):\n         v = np.array([True, False, True, False], dtype=np.bool_)\n@@ -2349,7 +2348,6 @@ def test_roundtrip_file(self):\n         y = np.fromfile(f, dtype=self.dtype)\n         f.close()\n         assert_array_equal(y, self.x.flat)\n-        os.unlink(self.filename)\n \n     def test_roundtrip_filename(self):\n         self.x.tofile(self.filename)\n@@ -2402,8 +2400,6 @@ def test_file_position_after_fromfile(self):\n                 f.close()\n                 assert_equal(pos, 10, err_msg=err_msg)\n \n-        os.unlink(self.filename)\n-\n     def test_file_position_after_tofile(self):\n         # gh-4118\n         sizes = [io.DEFAULT_BUFFER_SIZE//8,\n@@ -2431,8 +2427,6 @@ def test_file_position_after_tofile(self):\n             f.close()\n             assert_equal(pos, 10, err_msg=err_msg)\n \n-        os.unlink(self.filename)\n-\n     def _check_from(self, s, value, **kw):\n         y = np.fromstring(asbytes(s), **kw)\n         assert_array_equal(y, value)\n@@ -2535,7 +2529,6 @@ def test_tofile_sep(self):\n         s = f.read()\n         f.close()\n         assert_equal(s, '1.51,2.0,3.51,4.0')\n-        os.unlink(self.filename)\n \n     def test_tofile_format(self):\n         x = np.array([1.51, 2, 3.51, 4], dtype=float)"
        },
        {
          "filename": "numpy/f2py/__init__.py",
          "status": "modified",
          "additions": 13,
          "deletions": 13,
          "patch": "@@ -28,20 +28,20 @@ def compile(source,\n     from numpy.distutils.exec_command import exec_command\n     import tempfile\n     if source_fn is None:\n-        fname = os.path.join(tempfile.mktemp()+'.f')\n+        f = tempfile.NamedTemporaryFile(suffix='.f')\n     else:\n-        fname = source_fn\n-\n-    f = open(fname, 'w')\n-    f.write(source)\n-    f.close()\n-\n-    args = ' -c -m %s %s %s'%(modulename, fname, extra_args)\n-    c = '%s -c \"import numpy.f2py as f2py2e;f2py2e.main()\" %s' %(sys.executable, args)\n-    s, o = exec_command(c)\n-    if source_fn is None:\n-        try: os.remove(fname)\n-        except OSError: pass\n+        f = open(source_fn, 'w')\n+\n+    try:\n+        f.write(source)\n+        f.flush()\n+\n+        args = ' -c -m %s %s %s'%(modulename, f.name, extra_args)\n+        c = '%s -c \"import numpy.f2py as f2py2e;f2py2e.main()\" %s' % \\\n+                (sys.executable, args)\n+        s, o = exec_command(c)\n+    finally:\n+        f.close()\n     return s\n \n from numpy.testing import Tester"
        },
        {
          "filename": "numpy/f2py/f2py2e.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -91,7 +91,7 @@\n                    --lower is assumed with -h key, and --no-lower without -h key.\n \n   --build-dir <dirname>  All f2py generated files are created in <dirname>.\n-                   Default is tempfile.mktemp().\n+                   Default is tempfile.mkdtemp().\n \n   --overwrite-signature  Overwrite existing signature file.\n \n@@ -424,7 +424,7 @@ def run_compile():\n         del sys.argv[i]\n     else:\n         remove_build_dir = 1\n-        build_dir = os.path.join(tempfile.mktemp())\n+        build_dir = tempfile.mkdtemp()\n \n     _reg1 = re.compile(r'[-][-]link[-]')\n     sysinfo_flags = [_m for _m in sys.argv[1:] if _reg1.match(_m)]"
        },
        {
          "filename": "numpy/lib/tests/test_io.py",
          "status": "modified",
          "additions": 16,
          "deletions": 8,
          "patch": "@@ -4,7 +4,9 @@\n import gzip\n import os\n import threading\n-from tempfile import mkstemp, mktemp, NamedTemporaryFile\n+import shutil\n+import contextlib\n+from tempfile import mkstemp, mkdtemp, NamedTemporaryFile\n import time\n import warnings\n import gc\n@@ -21,6 +23,12 @@\n                                 assert_raises, run_module_suite)\n from numpy.testing import assert_warns, assert_, build_err_msg\n \n+@contextlib.contextmanager\n+def tempdir(change_dir=False):\n+    tmpdir = mkdtemp()\n+    yield tmpdir\n+    shutil.rmtree(tmpdir)\n+\n \n class TextIO(BytesIO):\n     \"\"\"Helper IO class.\n@@ -177,14 +185,14 @@ def roundtrip(self, *args, **kwargs):\n     @np.testing.dec.slow\n     def test_big_arrays(self):\n         L = (1 << 31) + 100000\n-        tmp = mktemp(suffix='.npz')\n         a = np.empty(L, dtype=np.uint8)\n-        np.savez(tmp, a=a)\n-        del a\n-        npfile = np.load(tmp)\n-        a = npfile['a']\n-        npfile.close()\n-        os.remove(tmp)\n+        with tempdir() as tmpdir:\n+            tmp = open(os.path.join(tmpdir, \"file.npz\"), \"w\")\n+            np.savez(tmp, a=a)\n+            del a\n+            npfile = np.load(tmp)\n+            a = npfile['a']\n+            npfile.close()\n \n     def test_multiple_arrays(self):\n         a = np.array([[1, 2], [3, 4]], float)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bbf4836a82d255c2a2161d277abb4b6f5455ca6d",
            "date": "2025-01-10T21:37:57Z",
            "author_login": "charris"
          },
          {
            "sha": "bb75e6ebd53beba671510d815cd82b6dc7f786e8",
            "date": "2025-01-10T20:47:55Z",
            "author_login": "ngoldbaum"
          },
          {
            "sha": "e9585e0c129f3b5de797c000f791d736d8c7ba5d",
            "date": "2025-01-10T20:47:31Z",
            "author_login": "ngoldbaum"
          },
          {
            "sha": "a2936fc5ec2383d70c846c0552a9d3b1feda4df8",
            "date": "2025-01-10T20:12:28Z",
            "author_login": "ngoldbaum"
          },
          {
            "sha": "6bedb61af1aebdafee783eebb380f7762f3d8c0b",
            "date": "2025-01-10T18:58:24Z",
            "author_login": "charris"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "__init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-01-08T19:29:00.237",
    "last_modified": "2024-11-21T02:05:09.923",
    "fix_date": "2014-02-05T22:01:47Z"
  },
  "references": [
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2014-February/128358.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2014-February/128781.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/02/08/3",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/65441",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=737778",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1062009",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/91318",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/blob/maintenance/1.8.x/doc/release/1.8.1-notes.rst",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/pull/4262",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2014-February/128358.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.fedoraproject.org/pipermail/package-announce/2014-February/128781.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/02/08/3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/65441",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=737778",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1062009",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/91318",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/blob/maintenance/1.8.x/doc/release/1.8.1-notes.rst",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/commit/0bb46c1448b0d3f5453d5182a17ea7ac5854ee15",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/numpy/numpy/pull/4262",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.823407",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "numpy",
    "owner": "numpy",
    "created_at": "2010-09-13T23:02:39Z",
    "updated_at": "2025-01-14T12:59:20Z",
    "pushed_at": "2025-01-10T22:42:58Z",
    "size": 152753,
    "stars": 28553,
    "forks": 10317,
    "open_issues": 2175,
    "watchers": 28553,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "maintenance/1.0.3.x",
      "maintenance/1.1.x",
      "maintenance/1.2.x",
      "maintenance/1.3.x",
      "maintenance/1.4.x",
      "maintenance/1.5.x",
      "maintenance/1.6.x",
      "maintenance/1.7.x",
      "maintenance/1.8.x",
      "maintenance/1.9.x",
      "maintenance/1.10.x",
      "maintenance/1.11.x",
      "maintenance/1.12.x",
      "maintenance/1.13.x",
      "maintenance/1.14.x",
      "maintenance/1.15.x",
      "maintenance/1.16.x",
      "maintenance/1.17.x",
      "maintenance/1.18.x",
      "maintenance/1.19.x",
      "maintenance/1.20.x",
      "maintenance/1.21.x",
      "maintenance/1.22.x",
      "maintenance/1.23.x",
      "maintenance/1.24.x",
      "maintenance/1.25.x",
      "maintenance/1.26.x",
      "maintenance/2.0.x",
      "maintenance/2.1.x"
    ],
    "languages": {
      "Python": 11185969,
      "C": 6385528,
      "C++": 547030,
      "Cython": 193011,
      "Meson": 96070,
      "Fortran": 39272,
      "Shell": 18023,
      "sed": 5706,
      "Smarty": 4129,
      "Starlark": 1842,
      "Makefile": 1716
    },
    "commit_activity": {
      "total_commits_last_year": 3048,
      "avg_commits_per_week": 58.61538461538461,
      "days_active_last_year": 342
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:35:47.977102"
  }
}