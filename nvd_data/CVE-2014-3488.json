{
  "cve_id": "CVE-2014-3488",
  "github_data": {
    "repository": "netty/netty",
    "fix_commit": "2fa9400a59d0563a66908aba55c41e7285a04994",
    "related_commits": [
      "2fa9400a59d0563a66908aba55c41e7285a04994",
      "2fa9400a59d0563a66908aba55c41e7285a04994"
    ],
    "patch_url": "https://github.com/netty/netty/commit/2fa9400a59d0563a66908aba55c41e7285a04994.patch",
    "fix_commit_details": {
      "sha": "2fa9400a59d0563a66908aba55c41e7285a04994",
      "commit_date": "2014-06-10T08:55:19Z",
      "author": {
        "login": "trustin",
        "type": "User",
        "stats": {
          "total_commits": 4149,
          "average_weekly_commits": 4.830034924330617,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 314
        }
      },
      "commit_message": {
        "title": "Fix a bug where SslHandler does not handle SSLv2Hello correctly",
        "length": 557,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 15,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/main/java/org/jboss/netty/handler/ssl/SslHandler.java",
          "status": "modified",
          "additions": 15,
          "deletions": 5,
          "patch": "@@ -1268,8 +1268,18 @@ private ChannelBuffer unwrap(\n                     // always contain at least one record in decode().  Therefore, if SSLEngine.unwrap() returns\n                     // BUFFER_OVERFLOW, it is always resolved by retrying after emptying the application buffer.\n                     for (;;) {\n+                        final int outAppBufSize = engine.getSession().getApplicationBufferSize();\n+                        final ByteBuffer outAppBuf;\n+                        if (nioOutAppBuf.capacity() < outAppBufSize) {\n+                            // SSLEngine wants a buffer larger than what the pool can provide.\n+                            // Allocate a temporary heap buffer.\n+                            outAppBuf = ByteBuffer.allocate(outAppBufSize);\n+                        } else {\n+                            outAppBuf = nioOutAppBuf;\n+                        }\n+\n                         try {\n-                            result = engine.unwrap(nioInNetBuf, nioOutAppBuf);\n+                            result = engine.unwrap(nioInNetBuf, outAppBuf);\n                             switch (result.getStatus()) {\n                                 case CLOSED:\n                                     // notify about the CLOSED state of the SSLEngine. See #137\n@@ -1283,21 +1293,21 @@ private ChannelBuffer unwrap(\n \n                             break;\n                         } finally {\n-                            nioOutAppBuf.flip();\n+                            outAppBuf.flip();\n \n                             // Sync the offset of the inbound buffer.\n                             nettyInNetBuf.readerIndex(\n                                     nettyInNetBufStartOffset + nioInNetBuf.position() - nioInNetBufStartOffset);\n \n                             // Copy the unwrapped data into a smaller buffer.\n-                            if (nioOutAppBuf.hasRemaining()) {\n+                            if (outAppBuf.hasRemaining()) {\n                                 if (nettyOutAppBuf == null) {\n                                     ChannelBufferFactory factory = ctx.getChannel().getConfig().getBufferFactory();\n                                     nettyOutAppBuf = factory.getBuffer(initialNettyOutAppBufCapacity);\n                                 }\n-                                nettyOutAppBuf.writeBytes(nioOutAppBuf);\n+                                nettyOutAppBuf.writeBytes(outAppBuf);\n                             }\n-                            nioOutAppBuf.clear();\n+                            outAppBuf.clear();\n                         }\n                     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5194d1306ef9fef002878673bbb7b3463e32387f",
            "date": "2025-01-14T07:19:29Z",
            "author_login": "netty-project-bot"
          },
          {
            "sha": "3b036489e24eb2a1e3bb45022a02a09eceaa8293",
            "date": "2025-01-14T07:19:25Z",
            "author_login": "netty-project-bot"
          },
          {
            "sha": "28a81c687725f6d3403341656b26a8b70391402f",
            "date": "2025-01-13T20:42:26Z",
            "author_login": "normanmaurer"
          },
          {
            "sha": "1bd459ac11ff8486641e619abdd732c7bbd94c70",
            "date": "2025-01-13T20:24:00Z",
            "author_login": "normanmaurer"
          },
          {
            "sha": "ad00d19e5d1b488bb04c5da56571b1484ff547ef",
            "date": "2025-01-13T19:10:08Z",
            "author_login": "normanmaurer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "The SslHandler in Netty before 3.9.2 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted SSLv2Hello message.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-07-31T14:55:02.910",
    "last_modified": "2024-11-21T02:08:13.003",
    "fix_date": "2014-06-10T08:55:19Z"
  },
  "references": [
    {
      "url": "http://netty.io/news/2014/06/11/3-9-2-Final.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/59196",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/netty/netty/commit/2fa9400a59d0563a66908aba55c41e7285a04994",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/netty/netty/issues/2562",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/02/msg00018.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://netty.io/news/2014/06/11/3-9-2-Final.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/59196",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/netty/netty/commit/2fa9400a59d0563a66908aba55c41e7285a04994",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/netty/netty/issues/2562",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/02/msg00018.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:25.518287",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "netty",
    "owner": "netty",
    "created_at": "2010-11-09T09:22:21Z",
    "updated_at": "2025-01-14T09:10:40Z",
    "pushed_at": "2025-01-14T12:48:52Z",
    "size": 92623,
    "stars": 33671,
    "forks": 15993,
    "open_issues": 609,
    "watchers": 33671,
    "has_security_policy": false,
    "default_branch": "4.1",
    "protected_branches": [
      "3.2",
      "3.5",
      "3.6",
      "3.7",
      "3.8",
      "3.9",
      "3.10",
      "main"
    ],
    "languages": {
      "Java": 19621935,
      "C": 228044,
      "HTML": 21029,
      "Shell": 18570,
      "JavaScript": 16232,
      "Makefile": 1814,
      "Groovy": 1755,
      "Dockerfile": 1116,
      "CSS": 49
    },
    "commit_activity": {
      "total_commits_last_year": 406,
      "avg_commits_per_week": 7.8076923076923075,
      "days_active_last_year": 156
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:57:47.084896"
  }
}