{
  "cve_id": "CVE-2014-3498",
  "github_data": {
    "repository": "ansible/ansible",
    "fix_commit": "8ed6350e65c82292a631f08845dfaacffe7f07f5",
    "related_commits": [
      "8ed6350e65c82292a631f08845dfaacffe7f07f5",
      "8ed6350e65c82292a631f08845dfaacffe7f07f5"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "8ed6350e65c82292a631f08845dfaacffe7f07f5",
      "commit_date": "2014-06-30T20:59:32Z",
      "author": {
        "login": "jimi-c",
        "type": "User",
        "stats": {
          "total_commits": 2825,
          "average_weekly_commits": 4.166666666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 212
        }
      },
      "commit_message": {
        "title": "When parsing json from untrusted sources, remove templating tags",
        "length": 64,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 60,
        "additions": 41,
        "deletions": 19
      },
      "files": [
        {
          "filename": "lib/ansible/inventory/script.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -49,7 +49,7 @@ def __init__(self, filename=C.DEFAULT_HOST_LIST):\n     def _parse(self, err):\n \n         all_hosts = {}\n-        self.raw  = utils.parse_json(self.data)\n+        self.raw  = utils.parse_json(self.data, from_remote=True)\n         all       = Group('all')\n         groups    = dict(all=all)\n         group     = None"
        },
        {
          "filename": "lib/ansible/runner/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -497,7 +497,7 @@ def _execute_module(self, conn, tmp, module_name, args,\n                 cmd2 = conn.shell.remove(tmp, recurse=True)\n                 self._low_level_exec_command(conn, cmd2, tmp, sudoable=False)\n \n-        data = utils.parse_json(res['stdout'])\n+        data = utils.parse_json(res['stdout'], from_remote=True)\n         if 'parsed' in data and data['parsed'] == False:\n             data['msg'] += res['stderr']\n         return ReturnData(conn=conn, result=data)"
        },
        {
          "filename": "lib/ansible/runner/return_data.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -43,8 +43,7 @@ def __init__(self, conn=None, host=None, result=None,\n         self.diff = diff\n \n         if type(self.result) in [ str, unicode ]:\n-            self.result = utils.parse_json(self.result)\n-\n+            self.result = utils.parse_json(self.result, from_remote=True)\n \n         if self.host is None:\n             raise Exception(\"host not set\")"
        },
        {
          "filename": "lib/ansible/utils/__init__.py",
          "status": "modified",
          "additions": 38,
          "deletions": 4,
          "patch": "@@ -313,7 +313,38 @@ def json_loads(data):\n \n     return json.loads(data)\n \n-def parse_json(raw_data):\n+def _clean_data(orig_data):\n+    ''' remove template tags from a string '''\n+    data = orig_data\n+    if isinstance(orig_data, basestring):\n+        for pattern,replacement in (('{{','{#'), ('}}','#}'), ('{%','{#'), ('%}','#}')):\n+            data = data.replace(pattern, replacement)\n+    return data\n+\n+def _clean_data_struct(orig_data):\n+    '''\n+    walk a complex data structure, and use _clean_data() to\n+    remove any template tags that may exist\n+    '''\n+    if isinstance(orig_data, dict):\n+        data = orig_data.copy()\n+        for key in data:\n+            new_key = _clean_data_struct(key)\n+            new_val = _clean_data_struct(data[key])\n+            if key != new_key:\n+                del data[key]\n+            data[new_key] = new_val\n+    elif isinstance(orig_data, list):\n+        data = orig_data[:]\n+        for i in range(0, len(data)):\n+            data[i] = _clean_data_struct(data[i])\n+    elif isinstance(orig_data, basestring):\n+        data = _clean_data(orig_data)\n+    else:\n+        data = orig_data\n+    return data\n+\n+def parse_json(raw_data, from_remote=False):\n     ''' this version for module return data only '''\n \n     orig_data = raw_data\n@@ -322,7 +353,7 @@ def parse_json(raw_data):\n     data = filter_leading_non_json_lines(raw_data)\n \n     try:\n-        return json.loads(data)\n+        results = json.loads(data)\n     except:\n         # not JSON, but try \"Baby JSON\" which allows many of our modules to not\n         # require JSON and makes writing modules in bash much simpler\n@@ -332,7 +363,6 @@ def parse_json(raw_data):\n         except:\n             print \"failed to parse json: \"+ data\n             raise\n-\n         for t in tokens:\n             if \"=\" not in t:\n                 raise errors.AnsibleError(\"failed to parse: %s\" % orig_data)\n@@ -347,7 +377,11 @@ def parse_json(raw_data):\n             results[key] = value\n         if len(results.keys()) == 0:\n             return { \"failed\" : True, \"parsed\" : False, \"msg\" : orig_data }\n-        return results\n+\n+    if from_remote:\n+        results = _clean_data_struct(results)\n+\n+    return results\n \n def smush_braces(data):\n     ''' smush Jinaj2 braces so unresolved templates like {{ foo }} don't get parsed weird by key=value code '''"
        },
        {
          "filename": "lib/ansible/utils/template.py",
          "status": "modified",
          "additions": 0,
          "deletions": 11,
          "patch": "@@ -80,7 +80,6 @@ class Flags:\n \n FILTER_PLUGINS = None\n _LISTRE = re.compile(r\"(\\w+)\\[(\\d+)\\]\")\n-JINJA2_OVERRIDE='#jinja2:'\n \n def lookup(name, *args, **kwargs):\n     from ansible import utils\n@@ -231,16 +230,6 @@ def my_finalize(thing):\n     except:\n         raise errors.AnsibleError(\"unable to read %s\" % realpath)\n \n-\n-    # Get jinja env overrides from template\n-    if data.startswith(JINJA2_OVERRIDE):\n-        eol = data.find('\\n')\n-        line = data[len(JINJA2_OVERRIDE):eol]\n-        data = data[eol+1:]\n-        for pair in line.split(','):\n-            (key,val) = pair.split(':')\n-            setattr(environment,key.strip(),ast.literal_eval(val.strip()))\n-\n     environment.template_class = J2Template\n     try:\n         t = environment.from_string(data)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e6adddcaf8d4cf46185a90be89a574ba01cc6b84",
            "date": "2025-01-23T23:00:32Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "03d6209862730daaf131226443cdb98189b911aa",
            "date": "2025-01-22T14:46:04Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "c9097f73a2d551357386ee6debf9452a4d929498",
            "date": "2025-01-21T21:39:28Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "186c716af1d0a0a4745d5d85c66e91b926327879",
            "date": "2025-01-21T20:20:51Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "4953fc7b267e3eb7dff5ed79cab54c9623ccf22e",
            "date": "2025-01-21T19:45:38Z",
            "author_login": "bcoca"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "The user module in ansible before 1.6.6 allows remote authenticated users to execute arbitrary commands.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-06-08T18:29:00.187",
    "last_modified": "2024-11-21T02:08:14.220",
    "fix_date": "2014-06-30T20:59:32Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1335551",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ansible/ansible/commit/8ed6350e65c82292a631f08845dfaacffe7f07f5",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1335551",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ansible/ansible/commit/8ed6350e65c82292a631f08845dfaacffe7f07f5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:01.653131",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "ansible",
    "owner": "ansible",
    "created_at": "2012-03-06T14:58:02Z",
    "updated_at": "2025-01-26T07:25:59Z",
    "pushed_at": "2025-01-23T23:00:32Z",
    "size": 256840,
    "stars": 63760,
    "forks": 23951,
    "open_issues": 871,
    "watchers": 63760,
    "has_security_policy": false,
    "default_branch": "devel",
    "protected_branches": [
      "devel",
      "mazer_role_loader",
      "milestone",
      "release1.5.0",
      "release1.5.1",
      "release1.5.2",
      "release1.5.3",
      "release1.5.4",
      "release1.5.5",
      "release1.6.0",
      "release1.6.1",
      "release1.6.2",
      "release1.6.3",
      "release1.6.4",
      "release1.6.5",
      "release1.6.6",
      "release1.6.7",
      "release1.6.8",
      "release1.6.9",
      "release1.6.10",
      "release1.7.0",
      "release1.7.1",
      "release1.7.2",
      "release1.8.0",
      "release1.8.1",
      "release1.8.2",
      "release1.8.3",
      "release1.8.4",
      "stable-1.9",
      "stable-2.0-network"
    ],
    "languages": {
      "Python": 8969710,
      "PowerShell": 729049,
      "Shell": 294373,
      "C#": 221766,
      "Jinja": 45945,
      "Go": 2010,
      "Roff": 555,
      "Batchfile": 144
    },
    "commit_activity": {
      "total_commits_last_year": 626,
      "avg_commits_per_week": 12.038461538461538,
      "days_active_last_year": 201
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:40:32.025525"
  }
}