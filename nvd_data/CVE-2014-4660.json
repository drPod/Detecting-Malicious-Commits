{
  "cve_id": "CVE-2014-4660",
  "github_data": {
    "repository": "ansible/ansible",
    "fix_commit": "c4b5e46054c74176b2446c82d4df1a2610eddc08",
    "related_commits": [
      "c4b5e46054c74176b2446c82d4df1a2610eddc08",
      "c4b5e46054c74176b2446c82d4df1a2610eddc08"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c4b5e46054c74176b2446c82d4df1a2610eddc08",
      "commit_date": "2014-04-18T17:53:02Z",
      "author": {
        "login": "jimi-c",
        "type": "User",
        "stats": {
          "total_commits": 2825,
          "average_weekly_commits": 4.166666666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 212
        }
      },
      "commit_message": {
        "title": "Backporting apt_repository module from devel",
        "length": 44,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 91,
        "additions": 48,
        "deletions": 43
      },
      "files": [
        {
          "filename": "library/packaging/apt_repository",
          "status": "modified",
          "additions": 48,
          "deletions": 43,
          "patch": "@@ -28,7 +28,7 @@ short_description: Add and remove APT repositores\n description:\n     - Add or remove an APT repositories in Ubuntu and Debian.\n notes:\n-    - This module works on Debian and Ubuntu and requires C(python-apt) and C(python-pycurl) packages.\n+    - This module works on Debian and Ubuntu and requires C(python-apt).\n     - This module supports Debian Squeeze (version 6) as well as its successors.\n     - This module treats Debian and Ubuntu distributions separately. So PPA could be installed only on Ubuntu machines.\n options:\n@@ -43,15 +43,21 @@ options:\n         default: \"present\"\n         description:\n             - A source string state.\n+    mode:\n+        required: false\n+        default: 0644\n+        description:\n+            - The octal mode for newly created files in sources.list.d\n+        version_added: \"1.6\"\n     update_cache:\n         description:\n-            - Run the equivalent of C(apt-get update) if has changed.\n+            - Run the equivalent of C(apt-get update) when a change occurs.  Cache updates are run after making changes.\n         required: false\n         default: \"yes\"\n         choices: [ \"yes\", \"no\" ]\n author: Alexander Saltanov\n version_added: \"0.7\"\n-requirements: [ python-apt, python-pycurl ]\n+requirements: [ python-apt ]\n '''\n \n EXAMPLES = '''\n@@ -70,10 +76,6 @@ apt_repository: repo='ppa:nginx/stable'\n '''\n \n import glob\n-try:\n-  import json\n-except ImportError:\n-  import simplejson as json\n import os\n import re\n import tempfile\n@@ -87,22 +89,19 @@ try:\n except ImportError:\n     HAVE_PYTHON_APT = False\n \n-try:\n-    import pycurl\n-    HAVE_PYCURL = True\n-except ImportError:\n-    HAVE_PYCURL = False\n \n VALID_SOURCE_TYPES = ('deb', 'deb-src')\n \n+def install_python_apt(module):\n \n-class CurlCallback:\n-    def __init__(self):\n-        self.contents = ''\n-\n-    def body_callback(self, buf):\n-        self.contents = self.contents + buf\n-\n+    if not module.check_mode:\n+        apt_get_path = module.get_bin_path('apt-get')\n+        if apt_get_path:\n+            rc, so, se = module.run_command('%s update && %s install python-apt -y -q' % (apt_get_path, apt_get_path))\n+            if rc == 0:\n+                global apt, apt_pkg\n+                import apt\n+                import apt_pkg\n \n class InvalidSource(Exception):\n     pass\n@@ -140,12 +139,22 @@ class SourcesList(object):\n     def _suggest_filename(self, line):\n         def _cleanup_filename(s):\n             return '_'.join(re.sub('[^a-zA-Z0-9]', ' ', s).split())\n+        def _strip_username_password(s):\n+            if '@' in s:\n+                s = s.split('@', 1)\n+                s = s[-1]\n+            return s\n \n         # Drop options and protocols.\n         line = re.sub('\\[[^\\]]+\\]', '', line)\n         line = re.sub('\\w+://', '', line)\n \n+        # split line into valid keywords\n         parts = [part for part in line.split() if part not in VALID_SOURCE_TYPES]\n+\n+        # Drop usernames and passwords\n+        parts[0] = _strip_username_password(parts[0])\n+\n         return '%s.list' % _cleanup_filename(' '.join(parts[:1]))\n \n     def _parse(self, line, raise_if_invalid_or_disabled=False):\n@@ -214,7 +223,10 @@ class SourcesList(object):\n             if sources:\n                 d, fn = os.path.split(filename)\n                 fd, tmp_path = tempfile.mkstemp(prefix=\".%s-\" % fn, dir=d)\n-                os.chmod(os.path.join(fd, tmp_path), 0644)\n+\n+                # allow the user to override the default mode\n+                this_mode = module.params['mode']\n+                module.set_mode_if_different(tmp_path, this_mode, False)\n \n                 f = os.fdopen(fd, 'w')\n                 for n, valid, enabled, source, comment in sources:\n@@ -290,29 +302,19 @@ class SourcesList(object):\n \n class UbuntuSourcesList(SourcesList):\n \n-    LP_API = 'https://launchpad.net/api/1.0/~%s/+archive/%s' \n+    LP_API = 'https://launchpad.net/api/1.0/~%s/+archive/%s'\n \n-    def __init__(self, add_ppa_signing_keys_callback=None):\n+    def __init__(self, module, add_ppa_signing_keys_callback=None):\n+        self.module = module\n         self.add_ppa_signing_keys_callback = add_ppa_signing_keys_callback\n         super(UbuntuSourcesList, self).__init__()\n \n     def _get_ppa_info(self, owner_name, ppa_name):\n-        # we can not use urllib2 here as it does not do cert verification\n         lp_api = self.LP_API % (owner_name, ppa_name)\n-        return self._get_ppa_info_curl(lp_api)\n-\n-    def _get_ppa_info_curl(self, lp_api):\n-        callback = CurlCallback()\n-        curl = pycurl.Curl()\n-        curl.setopt(pycurl.SSL_VERIFYPEER, 1)\n-        curl.setopt(pycurl.SSL_VERIFYHOST, 2)\n-        curl.setopt(pycurl.WRITEFUNCTION, callback.body_callback)\n-        curl.setopt(pycurl.URL, str(lp_api))\n-        curl.setopt(pycurl.HTTPHEADER, [\"Accept: application/json\"])\n-        curl.perform()\n-        curl.close()\n-        lp_page = callback.contents\n-        return json.loads(lp_page)\n+\n+        headers = dict(Accept='application/json')\n+        response, info = fetch_url(self.module, lp_api, headers=headers)\n+        return json.load(response)\n \n     def _expand_ppa(self, path):\n         ppa = path.split(':')[1]\n@@ -363,24 +365,26 @@ def main():\n         argument_spec=dict(\n             repo=dict(required=True),\n             state=dict(choices=['present', 'absent'], default='present'),\n+            mode=dict(required=False, default=0644),\n             update_cache = dict(aliases=['update-cache'], type='bool', default='yes'),\n+            # this should not be needed, but exists as a failsafe\n+            install_python_apt=dict(required=False, default=\"yes\", type='bool'),\n         ),\n         supports_check_mode=True,\n     )\n \n-    if not HAVE_PYTHON_APT:\n-        module.fail_json(msg='Could not import python modules: apt_pkg. Please install python-apt package.')\n-\n-    if not HAVE_PYCURL:\n-        module.fail_json(msg='Could not import python modules: pycurl. Please install python-pycurl package.')\n+    params = module.params\n+    if params['install_python_apt'] and not HAVE_PYTHON_APT and not module.check_mode:\n+        install_python_apt(module)\n \n     repo = module.params['repo']\n     state = module.params['state']\n     update_cache = module.params['update_cache']\n     sourceslist = None\n \n     if isinstance(distro, aptsources.distro.UbuntuDistribution):\n-        sourceslist = UbuntuSourcesList(add_ppa_signing_keys_callback=get_add_ppa_signing_key_callback(module))\n+        sourceslist = UbuntuSourcesList(module,\n+                                        add_ppa_signing_keys_callback=get_add_ppa_signing_key_callback(module))\n     elif isinstance(distro, aptsources.distro.DebianDistribution) or \\\n             isinstance(distro, aptsources.distro.Distribution):\n         sourceslist = SourcesList()\n@@ -413,5 +417,6 @@ def main():\n \n # import module snippets\n from ansible.module_utils.basic import *\n+from ansible.module_utils.urls import *\n \n main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e6adddcaf8d4cf46185a90be89a574ba01cc6b84",
            "date": "2025-01-23T23:00:32Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "03d6209862730daaf131226443cdb98189b911aa",
            "date": "2025-01-22T14:46:04Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "c9097f73a2d551357386ee6debf9452a4d929498",
            "date": "2025-01-21T21:39:28Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "186c716af1d0a0a4745d5d85c66e91b926327879",
            "date": "2025-01-21T20:20:51Z",
            "author_login": "Akasurde"
          },
          {
            "sha": "4953fc7b267e3eb7dff5ed79cab54c9623ccf22e",
            "date": "2025-01-21T19:45:38Z",
            "author_login": "bcoca"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-522",
    "description": "Ansible before 1.5.5 constructs filenames containing user and password fields on the basis of deb lines in sources.list, which might allow local users to obtain sensitive credential information in opportunistic circumstances by leveraging existence of a file that uses the \"deb http://user:pass@server:port/\" format.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-02-20T03:15:10.653",
    "last_modified": "2024-11-21T02:10:39.940",
    "fix_date": "2014-04-18T17:53:02Z"
  },
  "references": [
    {
      "url": "https://github.com/ansible/ansible/blob/release1.5.5/CHANGELOG.md",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/ansible/ansible/commit/c4b5e46054c74176b2446c82d4df1a2610eddc08",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security-tracker.debian.org/tracker/CVE-2014-4660",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2014/06/26/19",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.securityfocus.com/bid/68231",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/ansible/ansible/blob/release1.5.5/CHANGELOG.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/ansible/ansible/commit/c4b5e46054c74176b2446c82d4df1a2610eddc08",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security-tracker.debian.org/tracker/CVE-2014-4660",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2014/06/26/19",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.securityfocus.com/bid/68231",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:39.857510",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "ansible",
    "owner": "ansible",
    "created_at": "2012-03-06T14:58:02Z",
    "updated_at": "2025-01-26T07:25:59Z",
    "pushed_at": "2025-01-23T23:00:32Z",
    "size": 256840,
    "stars": 63760,
    "forks": 23951,
    "open_issues": 871,
    "watchers": 63760,
    "has_security_policy": false,
    "default_branch": "devel",
    "protected_branches": [
      "devel",
      "mazer_role_loader",
      "milestone",
      "release1.5.0",
      "release1.5.1",
      "release1.5.2",
      "release1.5.3",
      "release1.5.4",
      "release1.5.5",
      "release1.6.0",
      "release1.6.1",
      "release1.6.2",
      "release1.6.3",
      "release1.6.4",
      "release1.6.5",
      "release1.6.6",
      "release1.6.7",
      "release1.6.8",
      "release1.6.9",
      "release1.6.10",
      "release1.7.0",
      "release1.7.1",
      "release1.7.2",
      "release1.8.0",
      "release1.8.1",
      "release1.8.2",
      "release1.8.3",
      "release1.8.4",
      "stable-1.9",
      "stable-2.0-network"
    ],
    "languages": {
      "Python": 8969710,
      "PowerShell": 729049,
      "Shell": 294373,
      "C#": 221766,
      "Jinja": 45945,
      "Go": 2010,
      "Roff": 555,
      "Batchfile": 144
    },
    "commit_activity": {
      "total_commits_last_year": 626,
      "avg_commits_per_week": 12.038461538461538,
      "days_active_last_year": 201
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:40:32.025525"
  }
}