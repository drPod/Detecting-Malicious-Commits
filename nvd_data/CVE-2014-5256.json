{
  "cve_id": "CVE-2014-5256",
  "github_data": {
    "repository": "joyent/node",
    "fix_commit": "530af9cb8e700e7596b3ec812bad123c9fa06356",
    "related_commits": [
      "530af9cb8e700e7596b3ec812bad123c9fa06356",
      "530af9cb8e700e7596b3ec812bad123c9fa06356"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "530af9cb8e700e7596b3ec812bad123c9fa06356",
      "commit_date": "2014-07-30T22:33:52Z",
      "author": {
        "login": "indutny",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "v8: Interrupts must not mask stack overflow.",
        "length": 99,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 9,
        "additions": 2,
        "deletions": 7
      },
      "files": [
        {
          "filename": "deps/v8/src/isolate.h",
          "status": "modified",
          "additions": 2,
          "deletions": 7,
          "patch": "@@ -1392,14 +1392,9 @@ class StackLimitCheck BASE_EMBEDDED {\n  public:\n   explicit StackLimitCheck(Isolate* isolate) : isolate_(isolate) { }\n \n-  bool HasOverflowed() const {\n+  inline bool HasOverflowed() const {\n     StackGuard* stack_guard = isolate_->stack_guard();\n-    // Stack has overflowed in C++ code only if stack pointer exceeds the C++\n-    // stack guard and the limits are not set to interrupt values.\n-    // TODO(214): Stack overflows are ignored if a interrupt is pending. This\n-    // code should probably always use the initial C++ limit.\n-    return (reinterpret_cast<uintptr_t>(this) < stack_guard->climit()) &&\n-           stack_guard->IsStackOverflow();\n+    return reinterpret_cast<uintptr_t>(this) < stack_guard->real_climit();\n   }\n  private:\n   Isolate* isolate_;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2a73a6ac7f4bcf70f57a1936ec63981a9104ea00",
            "date": "2017-08-12T23:42:43Z",
            "author_login": "refack"
          },
          {
            "sha": "c06faa649d93f8a80d3501cf070f1565978ac9fd",
            "date": "2015-09-09T10:13:40Z",
            "author_login": "orangemocha"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "Node.js 0.8 before 0.8.28 and 0.10 before 0.10.30 does not consider the possibility of recursive processing that triggers V8 garbage collection in conjunction with a V8 interrupt, which allows remote attackers to cause a denial of service (memory corruption and application crash) via deep JSON objects whose parsing lets this interrupt mask an overflow of the program stack.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-09-05T17:55:07.283",
    "last_modified": "2024-11-21T02:11:42.607",
    "fix_date": "2014-07-30T22:33:52Z"
  },
  "references": [
    {
      "url": "http://advisories.mageia.org/MGASA-2014-0516.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://blog.nodejs.org/2014/07/31/v8-memory-corruption-stack-overflow/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/61260",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21684769",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2015:142",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/joyent/node/commit/530af9cb8e700e7596b3ec812bad123c9fa06356",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://advisories.mageia.org/MGASA-2014-0516.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://blog.nodejs.org/2014/07/31/v8-memory-corruption-stack-overflow/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://secunia.com/advisories/61260",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21684769",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.mandriva.com/security/advisories?name=MDVSA-2015:142",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/joyent/node/commit/530af9cb8e700e7596b3ec812bad123c9fa06356",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:27.918906",
    "processing_status": "enhanced"
  }
}