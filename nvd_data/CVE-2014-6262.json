{
  "cve_id": "CVE-2014-6262",
  "github_data": {
    "repository": "oetiker/rrdtool-1.x",
    "fix_commit": "64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
    "related_commits": [
      "64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
      "85261a013112e278c90224033f5b0592ee387786",
      "64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
      "85261a013112e278c90224033f5b0592ee387786"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
      "commit_date": "2014-09-16T07:48:26Z",
      "author": {
        "login": "oetiker",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "a proper fix to the bad_format checking misery",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 139,
        "additions": 37,
        "deletions": 102
      },
      "files": [
        {
          "filename": "src/rrd_graph.c",
          "status": "modified",
          "additions": 32,
          "deletions": 101,
          "patch": "@@ -6,6 +6,7 @@\n \n \n #include <sys/stat.h>\n+#include <glib.h>   // will use regex\n \n #ifdef WIN32\n #include \"strftime.h\"\n@@ -1674,9 +1675,7 @@ int print_calc(\n                         strftime(prline.u_str,\n                                  FMT_LEG_LEN, im->gdes[i].format, &tmvdef);\n                     }\n-                } else if (bad_format(im->gdes[i].format)) {\n-                    rrd_set_error\n-                        (\"bad format for PRINT in '%s'\", im->gdes[i].format);\n+                } else if (bad_format_print(im->gdes[i].format)) {\n                     return -1;\n                 } else {\n                     prline.u_str =\n@@ -1697,11 +1696,8 @@ int print_calc(\n                                  FMT_LEG_LEN, im->gdes[i].format, &tmvdef);\n                     }\n                 } else {\n-                    if (bad_format(im->gdes[i].format)) {\n-                        rrd_set_error\n-                            (\"bad format for GPRINT in '%s'\",\n-                             im->gdes[i].format);\n-                        return -1;\n+                    if (bad_format_print(im->gdes[i].format)) {\n+                       return -1;\n                     }\n                     snprintf(im->gdes[i].legend,\n                              FMT_LEG_LEN - 2,\n@@ -4172,7 +4168,6 @@ int rrd_graph(\n     return 0;\n }\n \n-\n /* Some surgery done on this function, it became ridiculously big.\n ** Things moved:\n ** - initializing     now in rrd_graph_init()\n@@ -4243,7 +4238,6 @@ rrd_info_t *rrd_graph_v(\n         if (bad_format_imginfo(im.imginfo)) {\n             rrd_info_free(im.grinfo);\n             im_free(&im);\n-            rrd_set_error(\"bad format for imginfo\");\n             return NULL;\n         }\n         path = strdup(im.graphfile);\n@@ -4717,8 +4711,7 @@ void rrd_graph_options(\n             }\n             break;\n         case 1004:\n-            if (bad_format(optarg)){\n-                rrd_set_error(\"use either %le or %lf formats\");\n+            if (bad_format_axis(optarg)){\n                 return;\n             }\n             im->second_axis_format=strdup(optarg);\n@@ -4728,8 +4721,7 @@ void rrd_graph_options(\n             }\n             break;\n         case 1012:\n-            if (bad_format(optarg)){\n-                rrd_set_error(\"use either %le or %lf formats\");\n+            if (bad_format_axis(optarg)){\n                 return;\n             }\n             im->primary_axis_format=strdup(optarg);\n@@ -5067,99 +5059,38 @@ int rrd_graph_color(\n }\n \n \n-int bad_format(\n-    char *fmt)\n-{\n-    char     *ptr;\n-    int       n = 0;\n-\n-    ptr = fmt;\n-    while (*ptr != '\\0')\n-        if (*ptr++ == '%') {\n-\n-            /* line cannot end with percent char */\n-            if (*ptr == '\\0')\n-                return 1;\n-            /* '%s', '%S' and '%%' are allowed */\n-            if (*ptr == 's' || *ptr == 'S' || *ptr == '%')\n-                ptr++;\n-            /* %c is allowed (but use only with vdef!) */\n-            else if (*ptr == 'c') {\n-                ptr++;\n-                n = 1;\n-            }\n-\n-            /* or else '% 6.2lf' and such are allowed */\n-            else {\n-                /* optional padding character */\n-                if (*ptr == ' ' || *ptr == '+' || *ptr == '-')\n-                    ptr++;\n-                /* This should take care of 'm.n' with all three optional */\n-                while (*ptr >= '0' && *ptr <= '9')\n-                    ptr++;\n-                if (*ptr == '.')\n-                    ptr++;\n-                while (*ptr >= '0' && *ptr <= '9')\n-                    ptr++;\n-                /* Either 'le', 'lf' or 'lg' must follow here */\n-                if (*ptr++ != 'l')\n-                    return 1;\n-                if (*ptr == 'e' || *ptr == 'f' || *ptr == 'g')\n-                    ptr++;\n-                else\n-                    return 1;\n-                n++;\n-            }\n-        }\n-\n-    return (n != 1);\n+static int bad_format_check(const char *pattern, char *fmt) {\n+    GError *gerr = NULL;\n+    GRegex *re = g_regex_new(pattern, G_REGEX_EXTENDED, 0, &gerr);\n+    GMatchInfo *mi;\n+    if (gerr != NULL) {\n+        rrd_set_error(\"cannot compile regular expression: %s (%s)\", gerr->message,pattern);\n+        return 1;\n+    }\n+    int m = g_regex_match(re, fmt, 0, &mi);\n+    g_match_info_free (mi);\n+    g_regex_unref(re);\n+    if (!m) {\n+        rrd_set_error(\"invalid format string '%s' (should match '%s')\",fmt,pattern);\n+        return 1;\n+    }\n+    return 0;\n }\n \n+#define SAFE_STRING \"(?:[^%]+|%%)*\"\n \n-int bad_format_imginfo(\n-    char *fmt)\n-{\n-    char     *ptr;\n-    int       n = 0;\n-\n-    ptr = fmt;\n-    while (*ptr != '\\0')\n-        if (*ptr++ == '%') {\n-\n-            /* line cannot end with percent char */\n-            if (*ptr == '\\0')\n-                return 1;\n-            /* '%%' is allowed */\n-            if (*ptr == '%')\n-                ptr++;\n-            /* '%s', '%S' are allowed */\n-            else if (*ptr == 's' || *ptr == 'S') {\n-                n = 1;\n-                ptr++;\n-            }\n-\n-            /* or else '% 4lu' and such are allowed */\n-            else {\n-                /* optional padding character */\n-                if (*ptr == ' ')\n-                    ptr++;\n-                /* This should take care of 'm' */\n-                while (*ptr >= '0' && *ptr <= '9')\n-                    ptr++;\n-                /* 'lu' must follow here */\n-                if (*ptr++ != 'l')\n-                    return 1;\n-                if (*ptr == 'u')\n-                    ptr++;\n-                else\n-                    return 1;\n-                n++;\n-            }\n-        }\n+int bad_format_imginfo(char *fmt){\n+    return bad_format_check(\"^\" SAFE_STRING \"%s\" SAFE_STRING \"%lu\" SAFE_STRING \"%lu\" SAFE_STRING \"$\",fmt);\n+}\n+#define FLOAT_STRING \"%[+- 0#]?[0-9]*([.][0-9]+)?l[eEfF]\"\n \n-    return (n != 3);\n+int bad_format_axis(char *fmt){\n+    return bad_format_check(\"^\" SAFE_STRING FLOAT_STRING SAFE_STRING \"$\",fmt);\n }\n \n+int bad_format_print(char *fmt){\n+    return bad_format_check(\"^\" SAFE_STRING FLOAT_STRING SAFE_STRING \"%s\" SAFE_STRING \"$\",fmt);\n+}\n \n int vdef_parse(\n     struct graph_desc_t"
        },
        {
          "filename": "src/rrd_graph.h",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -453,7 +453,11 @@ int       rrd_graph_color(\n     char *,\n     char *,\n     int);\n-int       bad_format(\n+int       bad_format_axis(\n+    char *);\n+int       bad_format_print(\n+    char *);\n+int       bad_format_imginfo(\n     char *);\n int       bad_format_imginfo(\n     char *);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be1ec50bd8e4914153ba1afc60cad7db3a300617",
            "date": "2025-01-16T09:39:50Z",
            "author_login": "oetiker"
          },
          {
            "sha": "e0b4e74fa8e888d55b6512fceb12ee1e4333f533",
            "date": "2025-01-16T05:00:45Z",
            "author_login": "seven1240"
          },
          {
            "sha": "dc226d46a5dee2f9f5e9982ff7c894bd865b8019",
            "date": "2024-12-06T08:25:14Z",
            "author_login": "oetiker"
          },
          {
            "sha": "a3306001ddde97859ae5a2eff2bbd53bdf364a9f",
            "date": "2024-11-28T11:00:53Z",
            "author_login": "pticon"
          },
          {
            "sha": "637ad23d353f53319e9d8b357235b07312fbe5cc",
            "date": "2024-11-17T08:14:35Z",
            "author_login": "oetiker"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-134",
    "description": "Multiple format string vulnerabilities in the python module in RRDtool, as used in Zenoss Core before 4.2.5 and other products, allow remote attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted third argument to the rrdtool.graph function, aka ZEN-15415, a related issue to CVE-2013-2131.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-02-12T02:15:10.603",
    "last_modified": "2024-11-21T02:14:03.230",
    "fix_date": "2014-09-16T07:48:26Z"
  },
  "references": [
    {
      "url": "http://www.kb.cert.org/vuls/id/449452",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "US Government Resource"
      ]
    },
    {
      "url": "https://docs.google.com/spreadsheets/d/1dHAc4PxUbs-4Dxzm1wSCE0sMz5UCMY6SW3PlMHSyuuQ/edit?usp=sharing",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/commit/64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/commit/85261a013112e278c90224033f5b0592ee387786",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/pull/532",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/03/msg00000.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/03/msg00003.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.securityfocus.com/bid/71540",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.kb.cert.org/vuls/id/449452",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "US Government Resource"
      ]
    },
    {
      "url": "https://docs.google.com/spreadsheets/d/1dHAc4PxUbs-4Dxzm1wSCE0sMz5UCMY6SW3PlMHSyuuQ/edit?usp=sharing",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/commit/64ed5314af1255ab6dded45f70b39cdeab5ae2ec",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/commit/85261a013112e278c90224033f5b0592ee387786",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oetiker/rrdtool-1.x/pull/532",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/03/msg00000.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/03/msg00003.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.securityfocus.com/bid/71540",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:39.846845",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rrdtool-1.x",
    "owner": "oetiker",
    "created_at": "2012-09-11T07:41:14Z",
    "updated_at": "2025-01-23T23:36:48Z",
    "pushed_at": "2025-01-16T09:39:51Z",
    "size": 15283,
    "stars": 1028,
    "forks": 267,
    "open_issues": 170,
    "watchers": 1028,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 1569506,
      "Shell": 114976,
      "M4": 73168,
      "C#": 39030,
      "Perl": 24084,
      "XS": 18412,
      "Makefile": 17435,
      "Lua": 7525,
      "Python": 4013,
      "Batchfile": 3803,
      "Ruby": 2503,
      "Awk": 1410,
      "Tcl": 1257
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T08:00:23.401131"
  }
}