{
  "cve_id": "CVE-2014-8335",
  "github_data": {
    "repository": "lesterchan/wp-dbmanager",
    "fix_commit": "7037fa8f61644098044379190d1d4bf1883b8e4a",
    "related_commits": [
      "7037fa8f61644098044379190d1d4bf1883b8e4a",
      "7037fa8f61644098044379190d1d4bf1883b8e4a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "7037fa8f61644098044379190d1d4bf1883b8e4a",
      "commit_date": "2014-10-16T04:07:37Z",
      "author": {
        "login": "lesterchan",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Uses escapeshellcmd() and do not allow LOAD_FILE inside queries",
        "length": 63,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 52,
        "additions": 28,
        "deletions": 24
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -34,8 +34,10 @@ Allows you to optimize database, repair database, backup database, restore datab\n \n ## Changelog\n ### Version 2.72\n-* FIXED: Use dbmanager_is_valid_path() to check for mysql and mysqldump path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n-* FIXED: Use realpath() to check for backup path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n+* FIXED: Uses escapeshellcmd() to escape shell commands\n+* FIXED: Do not allow LOAD_FILE to be run\n+* FIXED: Uses dbmanager_is_valid_path() to check for mysql and mysqldump path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n+* FIXED: Uses realpath() to check for backup path. Fixes arbitrary command injection using backup path. Props Larry W. Cashdollari.\n \n ### Version 2.71\n * NEW: Bump to 4.0"
        },
        {
          "filename": "database-backup.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -42,11 +42,11 @@\n \t\t\tif($gzip == 1) {\n \t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n \t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n-\t\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME.' | gzip > '.$brace.$backup['filepath'].$brace;\n+\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME ).' | gzip > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n \t\t\t} else {\n \t\t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n \t\t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n-\t\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME.' > '.$brace.$backup['filepath'].$brace;\n+\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' --add-drop-table --skip-lock-tables '.DB_NAME ).' > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n \t\t\t}\n \t\t\t$error = execute_backup($backup['command']);\n \t\t\tif(!is_writable($backup['path'])) {"
        },
        {
          "filename": "database-manage.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -44,9 +44,9 @@\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif(stristr($database_file, '.gz')) {\n-\t\t\t\t\t$backup['command'] = 'gunzip < '.$brace.$backup['path'].'/'.$database_file.$brace.' | '.$brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME;\n+\t\t\t\t\t$backup['command'] = 'gunzip < '.escapeshellcmd( $brace.$backup['path'].'/'.$database_file.$brace ).' | '.escapeshellcmd( $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME );\n \t\t\t\t} else {\n-\t\t\t\t\t$backup['command'] = $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME.' < '.$brace.$backup['path'].'/'.$database_file.$brace;\n+\t\t\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqlpath'].$brace.' --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].$backup['charset'].' '.DB_NAME ).' < '.escapeshellcmd( $brace.$backup['path'].'/'.$database_file.$brace );\n \t\t\t\t}\n \t\t\t\tif( realpath( $backup['path'] ) === false ) {\n \t\t\t\t\t$text = '<p style=\"color: red;\">' . sprintf(__('%s is not a valid backup path', 'wp-dbmanager'), stripslashes( $backup['path'] ) ) . '</p>';"
        },
        {
          "filename": "database-run.php",
          "status": "modified",
          "additions": 10,
          "deletions": 7,
          "patch": "@@ -37,19 +37,22 @@\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif($sql_queries) {\n-\t\t\t\t\tforeach($sql_queries as $sql_query) {\n-\t\t\t\t\t\tif (preg_match(\"/^\\\\s*(insert|update|replace|delete|create|alter) /i\",$sql_query)) {\n-\t\t\t\t\t\t\t$run_query = $wpdb->query($sql_query);\n-\t\t\t\t\t\t\tif(!$run_query) {\n+\t\t\t\t\tforeach( $sql_queries as $sql_query ) {\n+\t\t\t\t\t\tif ( preg_match( \"/LOAD_FILE/i\", $sql_query ) ) {\n+\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n+\t\t\t\t\t\t\t$totalquerycount++;\n+\t\t\t\t\t\t} elseif( preg_match( \"/^\\\\s*(select|drop|show|grant) /i\", $sql_query ) ) {\n+\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n+\t\t\t\t\t\t\t$totalquerycount++;\n+\t\t\t\t\t\t} else if ( preg_match( \"/^\\\\s*(insert|update|replace|delete|create|alter) /i\", $sql_query ) ) {\n+\t\t\t\t\t\t\t$run_query = $wpdb->query( $sql_query );\n+\t\t\t\t\t\t\tif( ! $run_query ) {\n \t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\t$successquery++;\n \t\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: green;\\\">$sql_query</p>\";\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t$totalquerycount++;\n-\t\t\t\t\t\t} elseif (preg_match(\"/^\\\\s*(select|drop|show|grant) /i\",$sql_query)) {\n-\t\t\t\t\t\t\t$text .= \"<p style=\\\"color: red;\\\">$sql_query</p>\";\n-\t\t\t\t\t\t\t$totalquerycount++;\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\t$text .= '<p style=\"color: blue;\">'.number_format_i18n($successquery).'/'.number_format_i18n($totalquerycount).' '.__('Query(s) Executed Successfully', 'wp-dbmanager').'</p>';"
        },
        {
          "filename": "wp-dbmanager.php",
          "status": "modified",
          "additions": 10,
          "deletions": 11,
          "patch": "@@ -60,7 +60,6 @@ function dbmanager_menu() {\n add_action('dbmanager_cron_optimize', 'cron_dbmanager_optimize');\n add_action('dbmanager_cron_repair', 'cron_dbmanager_repair');\n function cron_dbmanager_backup() {\n-\tglobal $wpdb;\n \t$backup_options = get_option('dbmanager_options');\n \t$backup_email = stripslashes($backup_options['backup_email']);\n \tif(intval($backup_options['backup_period']) > 0) {\n@@ -87,14 +86,14 @@ function cron_dbmanager_backup() {\n \t\tif(intval($backup_options['backup_gzip']) == 1) {\n \t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql.gz';\n \t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n-\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME.' | gzip > '.$brace.$backup['filepath'].$brace;\n+\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME ). ' | gzip > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n \t\t} else {\n \t\t\t$backup['filename'] = $backup['date'].'_-_'.DB_NAME.'.sql';\n \t\t\t$backup['filepath'] = $backup['path'].'/'.$backup['filename'];\n-\t\t\t$backup['command'] = $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME.' > '.$brace.$backup['filepath'].$brace;\n+\t\t\t$backup['command'] = escapeshellcmd( $brace.$backup['mysqldumppath'].$brace.' --force --host=\"'.$backup['host'].'\" --user=\"'.DB_USER.'\" --password=\"'.$backup['password'].'\"'.$backup['port'].$backup['sock'].' --add-drop-table --skip-lock-tables '.DB_NAME ). ' > '.escapeshellcmd( $brace.$backup['filepath'].$brace );\n \t\t}\n \t\texecute_backup($backup['command']);\n-\t\tif( !empty( $backup_email ) )\n+\t\tif( ! empty( $backup_email ) )\n \t\t{\n \t\t\tdbmanager_email_backup( $backup_email, $backup['filepath'] );\n \t\t}\n@@ -217,16 +216,16 @@ function execute_backup($command) {\n \t\treturn sprintf( __( '%s is not a valid mysql path', 'wp-dbmanager' ), stripslashes( $backup_options['mysqlpath'] ) );\n \t}\n \n-\tif(substr(PHP_OS, 0, 3) == 'WIN') {\n+\tif( substr( PHP_OS, 0, 3 ) === 'WIN' ) {\n \t\t$writable_dir = $backup_options['path'];\n \t\t$tmpnam = $writable_dir.'/wp-dbmanager.bat';\n-\t\t$fp = fopen($tmpnam, 'w');\n-\t\tfwrite($fp, $command);\n-\t\tfclose($fp);\n-\t\tsystem($tmpnam.' > NUL', $error);\n-\t\tunlink($tmpnam);\n+\t\t$fp = fopen( $tmpnam, 'w' );\n+\t\tfwrite ($fp, $command );\n+\t\tfclose( $fp );\n+\t\tsystem( $tmpnam.' > NUL', $error );\n+\t\tunlink( $tmpnam );\n \t} else {\n-\t\tpassthru($command, $error);\n+\t\tpassthru( $command, $error );\n \t}\n \treturn $error;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b7ad9070db5015da01ddf4312c783ded4b0cef44",
            "date": "2024-11-24T13:36:19Z",
            "author_login": "lesterchan"
          },
          {
            "sha": "fa9f4ae88ed45784b74b94d43ef876739f4cceb3",
            "date": "2023-08-09T03:01:27Z",
            "author_login": "lesterchan"
          },
          {
            "sha": "559c3313b655f3e48c65e98579be4412087bb29f",
            "date": "2023-04-27T01:39:02Z",
            "author_login": "lesterchan"
          },
          {
            "sha": "eddbfd46fc28d5fc061f1f4909b267783d968695",
            "date": "2022-12-09T02:09:38Z",
            "author_login": "lesterchan"
          },
          {
            "sha": "0de2e1004c57e2c15c6355fd84dfa584e879543e",
            "date": "2022-11-29T07:18:42Z",
            "author_login": "arunbasillal"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-255",
    "description": "(1) wp-dbmanager.php and (2) database-manage.php in the WP-DBManager (aka Database Manager) plugin before 2.7.2 for WordPress place credentials on the mysqldump command line, which allows local users to obtain sensitive information by listing the process.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-01-05T16:29:00.197",
    "last_modified": "2024-11-21T02:18:53.780",
    "fix_date": "2014-10-16T04:07:37Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/128785/WordPress-Database-Manager-2.7.1-Command-Injection-Credential-Leak.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/10/20/7",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/index.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/97691",
      "source": "cve@mitre.org",
      "tags": [
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/lesterchan/wp-dbmanager/commit/7037fa8f61644098044379190d1d4bf1883b8e4a",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/plugins/wp-dbmanager/#developers",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/128785/WordPress-Database-Manager-2.7.1-Command-Injection-Credential-Leak.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2014/10/20/7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/97691",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/lesterchan/wp-dbmanager/commit/7037fa8f61644098044379190d1d4bf1883b8e4a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/plugins/wp-dbmanager/#developers",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.818013",
    "processing_status": "enhanced"
  }
}