{
  "cve_id": "CVE-2014-8682",
  "github_data": {
    "repository": "gogits/gogs",
    "fix_commit": "0c5ba4573aecc9eaed669e9431a70a5d9f184b8d",
    "related_commits": [
      "0c5ba4573aecc9eaed669e9431a70a5d9f184b8d",
      "0c5ba4573aecc9eaed669e9431a70a5d9f184b8d"
    ],
    "patch_url": "https://github.com/gogits/gogs/commit/0c5ba4573aecc9eaed669e9431a70a5d9f184b8d.patch",
    "fix_commit_details": {
      "sha": "0c5ba4573aecc9eaed669e9431a70a5d9f184b8d",
      "commit_date": "2014-11-04T16:37:15Z",
      "author": {
        "login": "unknwon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix session API broken and SQL pretection",
        "length": 41,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 17,
        "additions": 5,
        "deletions": 12
      },
      "files": [
        {
          "filename": "cmd/web.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -72,7 +72,7 @@ func checkVersion() {\n \t\tlog.Fatal(4, \"Package i18n version is too old, did you forget to update?(github.com/macaron-contrib/i18n)\")\n \t}\n \tsessionVer := git.MustParseVersion(session.Version())\n-\tif sessionVer.LessThan(git.MustParseVersion(\"0.0.3\")) {\n+\tif sessionVer.LessThan(git.MustParseVersion(\"0.0.5\")) {\n \t\tlog.Fatal(4, \"Package session version is too old, did you forget to update?(github.com/macaron-contrib/session)\")\n \t}\n }"
        },
        {
          "filename": "conf/app.ini",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -163,10 +163,6 @@ ENABLE_SET_COOKIE = true\n GC_INTERVAL_TIME = 86400\n ; Session life time, default is 86400\n SESSION_LIFE_TIME = 86400\n-; session id hash func, Either \"sha1\", \"sha256\" or \"md5\" default is sha1\n-SESSION_ID_HASHFUNC = sha1\n-; Session hash key, default is use random string\n-SESSION_ID_HASHKEY =\n \n [picture]\n ; The place to picture data, either \"server\" or \"qiniu\", default is \"server\""
        },
        {
          "filename": "gogs.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -17,7 +17,7 @@ import (\n \t\"github.com/gogits/gogs/modules/setting\"\n )\n \n-const APP_VER = \"0.5.6.1102 Beta\"\n+const APP_VER = \"0.5.6.1104 Beta\"\n \n func init() {\n \truntime.GOMAXPROCS(runtime.NumCPU())"
        },
        {
          "filename": "models/repo.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1161,7 +1161,7 @@ func SearchRepositoryByName(opt SearchOption) (repos []*Repository, err error) {\n \tif !opt.Private {\n \t\tsess.And(\"is_private=false\")\n \t}\n-\tsess.And(\"lower_name like '%\" + opt.Keyword + \"%'\").Find(&repos)\n+\tsess.And(\"lower_name like ?\", \"%\"+opt.Keyword+\"%\").Find(&repos)\n \treturn repos, err\n }\n "
        },
        {
          "filename": "models/user.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -581,7 +581,7 @@ func SearchUserByName(opt SearchOption) (us []*User, err error) {\n \topt.Keyword = strings.ToLower(opt.Keyword)\n \n \tus = make([]*User, 0, opt.Limit)\n-\terr = x.Limit(opt.Limit).Where(\"type=0\").And(\"lower_name like '%\" + opt.Keyword + \"%'\").Find(&us)\n+\terr = x.Limit(opt.Limit).Where(\"type=0\").And(\"lower_name like ?\", \"%\"+opt.Keyword+\"%\").Find(&us)\n \treturn us, err\n }\n "
        },
        {
          "filename": "modules/setting/setting.go",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -394,9 +394,6 @@ func newSessionService() {\n \tSessionConfig.EnableSetCookie = Cfg.MustBool(\"session\", \"ENABLE_SET_COOKIE\", true)\n \tSessionConfig.Gclifetime = Cfg.MustInt64(\"session\", \"GC_INTERVAL_TIME\", 86400)\n \tSessionConfig.Maxlifetime = Cfg.MustInt64(\"session\", \"SESSION_LIFE_TIME\", 86400)\n-\tSessionConfig.SessionIDHashFunc = Cfg.MustValueRange(\"session\", \"SESSION_ID_HASHFUNC\",\n-\t\t\"sha1\", []string{\"sha1\", \"sha256\", \"md5\"})\n-\tSessionConfig.SessionIDHashKey = Cfg.MustValue(\"session\", \"SESSION_ID_HASHKEY\", string(com.RandomCreateBytes(16)))\n \n \tif SessionProvider == \"file\" {\n \t\tos.MkdirAll(path.Dir(SessionConfig.ProviderConfig), os.ModePerm)"
        },
        {
          "filename": "templates/.VERSION",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-0.5.6.1102 Beta\n\\ No newline at end of file\n+0.5.6.1104 Beta\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "96d5d622b8d55c426861df74de8b88dc9870d36f",
            "date": "2025-01-02T00:46:13Z",
            "author_login": "unknwon"
          },
          {
            "sha": "b59e943aa65316a74a6c0a51941ffd7263744f5c",
            "date": "2025-01-02T00:41:24Z",
            "author_login": "MarcUs7i"
          },
          {
            "sha": "371a6092ded5250757fd9d62adc0eb220faea360",
            "date": "2025-01-01T16:18:34Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e6896eb3935e49242424b58ea082b3cfc4502caa",
            "date": "2025-01-01T16:11:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6c04a1ce7c754e295b0cd2f6963a79fe1bfb6688",
            "date": "2025-01-01T15:37:55Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Multiple SQL injection vulnerabilities in Gogs (aka Go Git Service) 0.3.1-9 through 0.5.x before 0.5.6.1105 Beta allow remote attackers to execute arbitrary SQL commands via the q parameter to (1) api/v1/repos/search, which is not properly handled in models/repo.go, or (2) api/v1/users/search, which is not properly handled in models/user.go.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2014-11-21T15:59:09.773",
    "last_modified": "2024-11-21T02:19:35.277",
    "fix_date": "2014-11-04T16:37:15Z"
  },
  "references": [
    {
      "url": "http://gogs.io/docs/intro/change_log.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/129117/Gogs-Repository-Search-SQL-Injection.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2014/Nov/33",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.exploit-db.com/exploits/35238",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/533995/100/0/threaded",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/71187",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/98694",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/gogits/gogs/commit/0c5ba4573aecc9eaed669e9431a70a5d9f184b8d",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://gogs.io/docs/intro/change_log.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/129117/Gogs-Repository-Search-SQL-Injection.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2014/Nov/33",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.exploit-db.com/exploits/35238",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/533995/100/0/threaded",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/71187",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/98694",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/gogits/gogs/commit/0c5ba4573aecc9eaed669e9431a70a5d9f184b8d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:30.040480",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gogs",
    "owner": "gogits",
    "created_at": "2014-02-12T01:57:08Z",
    "updated_at": "2025-01-14T18:23:13Z",
    "pushed_at": "2025-01-02T00:46:14Z",
    "size": 207255,
    "stars": 45329,
    "forks": 4884,
    "open_issues": 940,
    "watchers": 45329,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 1511466,
      "Less": 60542,
      "JavaScript": 47845,
      "Shell": 26321,
      "Batchfile": 932,
      "Dockerfile": 890,
      "Procfile": 33
    },
    "commit_activity": {
      "total_commits_last_year": 105,
      "avg_commits_per_week": 2.019230769230769,
      "days_active_last_year": 55
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:30:33.086434"
  }
}