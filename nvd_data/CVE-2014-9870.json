{
  "cve_id": "CVE-2014-9870",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "a4780adeefd042482f624f5e0d577bf9cdcbb760",
    "related_commits": [
      "a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "a4780adeefd042482f624f5e0d577bf9cdcbb760"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "commit_date": "2013-06-18T22:23:26Z",
      "author": {
        "login": "AndreRH",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "ARM: 7735/2: Preserve the user r/w register TPIDRURW on context switch and fork",
        "length": 898,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 57,
        "additions": 37,
        "deletions": 20
      },
      "files": [
        {
          "filename": "arch/arm/include/asm/thread_info.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -58,7 +58,7 @@ struct thread_info {\n \tstruct cpu_context_save\tcpu_context;\t/* cpu context */\n \t__u32\t\t\tsyscall;\t/* syscall number */\n \t__u8\t\t\tused_cp[16];\t/* thread used copro */\n-\tunsigned long\t\ttp_value;\n+\tunsigned long\t\ttp_value[2];\t/* TLS registers */\n #ifdef CONFIG_CRUNCH\n \tstruct crunch_state\tcrunchstate;\n #endif"
        },
        {
          "filename": "arch/arm/include/asm/tls.h",
          "status": "modified",
          "additions": 27,
          "deletions": 13,
          "patch": "@@ -2,27 +2,30 @@\n #define __ASMARM_TLS_H\n \n #ifdef __ASSEMBLY__\n-\t.macro set_tls_none, tp, tmp1, tmp2\n+#include <asm/asm-offsets.h>\n+\t.macro switch_tls_none, base, tp, tpuser, tmp1, tmp2\n \t.endm\n \n-\t.macro set_tls_v6k, tp, tmp1, tmp2\n+\t.macro switch_tls_v6k, base, tp, tpuser, tmp1, tmp2\n+\tmrc\tp15, 0, \\tmp2, c13, c0, 2\t@ get the user r/w register\n \tmcr\tp15, 0, \\tp, c13, c0, 3\t\t@ set TLS register\n-\tmov\t\\tmp1, #0\n-\tmcr\tp15, 0, \\tmp1, c13, c0, 2\t@ clear user r/w TLS register\n+\tmcr\tp15, 0, \\tpuser, c13, c0, 2\t@ and the user r/w register\n+\tstr\t\\tmp2, [\\base, #TI_TP_VALUE + 4] @ save it\n \t.endm\n \n-\t.macro set_tls_v6, tp, tmp1, tmp2\n+\t.macro switch_tls_v6, base, tp, tpuser, tmp1, tmp2\n \tldr\t\\tmp1, =elf_hwcap\n \tldr\t\\tmp1, [\\tmp1, #0]\n \tmov\t\\tmp2, #0xffff0fff\n \ttst\t\\tmp1, #HWCAP_TLS\t\t@ hardware TLS available?\n-\tmcrne\tp15, 0, \\tp, c13, c0, 3\t\t@ yes, set TLS register\n-\tmovne\t\\tmp1, #0\n-\tmcrne\tp15, 0, \\tmp1, c13, c0, 2\t@ clear user r/w TLS register\n \tstreq\t\\tp, [\\tmp2, #-15]\t\t@ set TLS value at 0xffff0ff0\n+\tmrcne\tp15, 0, \\tmp2, c13, c0, 2\t@ get the user r/w register\n+\tmcrne\tp15, 0, \\tp, c13, c0, 3\t\t@ yes, set TLS register\n+\tmcrne\tp15, 0, \\tpuser, c13, c0, 2\t@ set user r/w register\n+\tstrne\t\\tmp2, [\\base, #TI_TP_VALUE + 4] @ save it\n \t.endm\n \n-\t.macro set_tls_software, tp, tmp1, tmp2\n+\t.macro switch_tls_software, base, tp, tpuser, tmp1, tmp2\n \tmov\t\\tmp1, #0xffff0fff\n \tstr\t\\tp, [\\tmp1, #-15]\t\t@ set TLS value at 0xffff0ff0\n \t.endm\n@@ -31,19 +34,30 @@\n #ifdef CONFIG_TLS_REG_EMUL\n #define tls_emu\t\t1\n #define has_tls_reg\t\t1\n-#define set_tls\t\tset_tls_none\n+#define switch_tls\tswitch_tls_none\n #elif defined(CONFIG_CPU_V6)\n #define tls_emu\t\t0\n #define has_tls_reg\t\t(elf_hwcap & HWCAP_TLS)\n-#define set_tls\t\tset_tls_v6\n+#define switch_tls\tswitch_tls_v6\n #elif defined(CONFIG_CPU_32v6K)\n #define tls_emu\t\t0\n #define has_tls_reg\t\t1\n-#define set_tls\t\tset_tls_v6k\n+#define switch_tls\tswitch_tls_v6k\n #else\n #define tls_emu\t\t0\n #define has_tls_reg\t\t0\n-#define set_tls\t\tset_tls_software\n+#define switch_tls\tswitch_tls_software\n #endif\n \n+#ifndef __ASSEMBLY__\n+static inline unsigned long get_tpuser(void)\n+{\n+\tunsigned long reg = 0;\n+\n+\tif (has_tls_reg && !tls_emu)\n+\t\t__asm__(\"mrc p15, 0, %0, c13, c0, 2\" : \"=r\" (reg));\n+\n+\treturn reg;\n+}\n+#endif\n #endif\t/* __ASMARM_TLS_H */"
        },
        {
          "filename": "arch/arm/kernel/entry-armv.S",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -685,15 +685,16 @@ ENTRY(__switch_to)\n  UNWIND(.fnstart\t)\n  UNWIND(.cantunwind\t)\n \tadd\tip, r1, #TI_CPU_SAVE\n-\tldr\tr3, [r2, #TI_TP_VALUE]\n  ARM(\tstmia\tip!, {r4 - sl, fp, sp, lr} )\t@ Store most regs on stack\n  THUMB(\tstmia\tip!, {r4 - sl, fp}\t   )\t@ Store most regs on stack\n  THUMB(\tstr\tsp, [ip], #4\t\t   )\n  THUMB(\tstr\tlr, [ip], #4\t\t   )\n+\tldr\tr4, [r2, #TI_TP_VALUE]\n+\tldr\tr5, [r2, #TI_TP_VALUE + 4]\n #ifdef CONFIG_CPU_USE_DOMAINS\n \tldr\tr6, [r2, #TI_CPU_DOMAIN]\n #endif\n-\tset_tls\tr3, r4, r5\n+\tswitch_tls r1, r4, r5, r3, r7\n #if defined(CONFIG_CC_STACKPROTECTOR) && !defined(CONFIG_SMP)\n \tldr\tr7, [r2, #TI_TASK]\n \tldr\tr8, =__stack_chk_guard"
        },
        {
          "filename": "arch/arm/kernel/process.c",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -39,6 +39,7 @@\n #include <asm/thread_notify.h>\n #include <asm/stacktrace.h>\n #include <asm/mach/time.h>\n+#include <asm/tls.h>\n \n #ifdef CONFIG_CC_STACKPROTECTOR\n #include <linux/stackprotector.h>\n@@ -343,7 +344,8 @@ copy_thread(unsigned long clone_flags, unsigned long stack_start,\n \tclear_ptrace_hw_breakpoint(p);\n \n \tif (clone_flags & CLONE_SETTLS)\n-\t\tthread->tp_value = childregs->ARM_r3;\n+\t\tthread->tp_value[0] = childregs->ARM_r3;\n+\tthread->tp_value[1] = get_tpuser();\n \n \tthread_notify(THREAD_NOTIFY_COPY, thread);\n "
        },
        {
          "filename": "arch/arm/kernel/ptrace.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -849,7 +849,7 @@ long arch_ptrace(struct task_struct *child, long request,\n #endif\n \n \t\tcase PTRACE_GET_THREAD_AREA:\n-\t\t\tret = put_user(task_thread_info(child)->tp_value,\n+\t\t\tret = put_user(task_thread_info(child)->tp_value[0],\n \t\t\t\t       datap);\n \t\t\tbreak;\n "
        },
        {
          "filename": "arch/arm/kernel/traps.c",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -581,7 +581,7 @@ asmlinkage int arm_syscall(int no, struct pt_regs *regs)\n \t\treturn regs->ARM_r0;\n \n \tcase NR(set_tls):\n-\t\tthread->tp_value = regs->ARM_r0;\n+\t\tthread->tp_value[0] = regs->ARM_r0;\n \t\tif (tls_emu)\n \t\t\treturn 0;\n \t\tif (has_tls_reg) {\n@@ -699,7 +699,7 @@ static int get_tp_trap(struct pt_regs *regs, unsigned int instr)\n \tint reg = (instr >> 12) & 15;\n \tif (reg == 15)\n \t\treturn 1;\n-\tregs->uregs[reg] = current_thread_info()->tp_value;\n+\tregs->uregs[reg] = current_thread_info()->tp_value[0];\n \tregs->ARM_pc += 4;\n \treturn 0;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-264",
    "description": "The Linux kernel before 3.11 on ARM platforms, as used in Android before 2016-08-05 on Nexus 5 and 7 (2013) devices, does not properly consider user-space access to the TPIDRURW register, which allows local users to gain privileges via a crafted application, aka Android internal bug 28749743 and Qualcomm internal bug CR561044.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-08-06T10:59:10.417",
    "last_modified": "2024-11-21T02:21:51.570",
    "fix_date": "2013-06-18T22:23:26Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "source": "security@android.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://source.android.com/security/bulletin/2016-08-01.html",
      "source": "security@android.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/92219",
      "source": "security@android.com",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "source": "security@android.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://source.codeaurora.org/quic/la/kernel/msm/commit/?id=4f57652fcd2dce7741f1ac6dc0417e2f265cd1de",
      "source": "security@android.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://source.android.com/security/bulletin/2016-08-01.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/92219",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/a4780adeefd042482f624f5e0d577bf9cdcbb760",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://source.codeaurora.org/quic/la/kernel/msm/commit/?id=4f57652fcd2dce7741f1ac6dc0417e2f265cd1de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:46.765085",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-26T06:54:23Z",
    "pushed_at": "2025-01-26T01:00:03Z",
    "size": 5386838,
    "stars": 186472,
    "forks": 54875,
    "open_issues": 441,
    "watchers": 186472,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1331921668,
      "Assembly": 9611819,
      "Shell": 5108035,
      "Python": 2992085,
      "Makefile": 2706967,
      "Perl": 1253833,
      "Rust": 816450,
      "Roff": 202277,
      "C++": 173994,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71397,
      "Awk": 69555,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10902,
      "M4": 3329,
      "MATLAB": 2482,
      "Clojure": 2442,
      "sed": 2433,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 48379,
      "avg_commits_per_week": 930.3653846153846,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:34:00.817711"
  }
}