{
  "cve_id": "CVE-2015-10036",
  "github_data": {
    "repository": "kylebebak/dronfelipe",
    "fix_commit": "87405b74fe651892d79d0dff62ed17a7eaef6a60",
    "related_commits": [
      "87405b74fe651892d79d0dff62ed17a7eaef6a60",
      "87405b74fe651892d79d0dff62ed17a7eaef6a60"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "87405b74fe651892d79d0dff62ed17a7eaef6a60",
      "commit_date": "2015-12-15T21:11:20Z",
      "author": {
        "login": "kylebebak",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "this commit is important, it has prevented all sql injection attacks in location_history by either using prepared statements or using mysqli::real_escape_string",
        "length": 160,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 53,
        "additions": 24,
        "deletions": 29
      },
      "files": [
        {
          "filename": "location_history/controllers/__build_query.php",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -3,20 +3,19 @@\n include_once '../models/Location_History.php';\n \n \n-\n // range of dates\n if ($dateFilter[0]) {\n-\t$query .= \" AND start_date >= STR_TO_DATE('\" . htmlspecialchars($dateFilter[0]) . \"', '%m/%d/%Y')\";\n+\t$query .= \" AND start_date >= STR_TO_DATE('\" . $db->mysqli()->real_escape_string($dateFilter[0]) . \"', '%m/%d/%Y')\";\n }\n \n if ($dateFilter[1]) {\n-\t$query .= \" AND start_date <= STR_TO_DATE('\" . htmlspecialchars($dateFilter[1]) . \"', '%m/%d/%Y')\";\n+\t$query .= \" AND start_date <= STR_TO_DATE('\" . $db->mysqli()->real_escape_string($dateFilter[1]) . \"', '%m/%d/%Y')\";\n }\n \n \n // filtered-out days\n if (isset($dayFilter)) {\n-\t$query .= \" AND DAYOFWEEK(start_date) NOT IN (\" . htmlspecialchars($dayFilter) . \")\";\n+\t$query .= \" AND DAYOFWEEK(start_date) NOT IN (\" . $dayFilter . \")\";\n }\n \n "
        },
        {
          "filename": "location_history/controllers/__parse_query.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -6,18 +6,18 @@\n // limit number of results\n $limit = null;\n if ($_POST['limit']) {\n-\t$limit = $_POST['limit'];\n+\t$limit = $db->mysqli()->real_escape_string($_POST['limit']);\n }\n \n \n // select only a certain range of dates\n $dayFilter = null;\n if (isset($_POST['dayFilter'])) {\n-\t$dayFilter = implode(',', $_POST['dayFilter']);\n+\t$dayFilter = $db->mysqli()->real_escape_string(implode(',', $_POST['dayFilter']));\n }\n \n \n-// filter out certain days of the week\n+// filter out certain days of the week. the elements of this array are escaped in __build_query.php\n $dateFilter = array('', '');\n if (isset($_POST['dateFilter'])) {\n \t$dateFilter = $_POST['dateFilter'];"
        },
        {
          "filename": "location_history/controllers/global.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -15,7 +15,7 @@\n // CONSTRUCT WHERE CLAUSE\n include '__build_query.php';\n \n-$visits = $db->rawQuery($query, null, false);\n+$visits = $db->rawQuery($query, null);\n \n \n \n@@ -29,7 +29,7 @@\n // CONSTRUCT WHERE CLAUSE\n include '__build_query.php';\n \n-$trips = $db->rawQuery($query, null, false);\n+$trips = $db->rawQuery($query, null);\n \n \n echo json_encode(array(\"visits\" => $visits, \"trips\" =>  $trips));"
        },
        {
          "filename": "location_history/controllers/graph.php",
          "status": "modified",
          "additions": 2,
          "deletions": 5,
          "patch": "@@ -9,15 +9,12 @@\n \treturn;\n }\n \n-$location_id = $_POST['location_id'];\n-\n-\n \n // visits for location\n $query = \"SELECT\n \tDATE(start_date) AS date, SUM(duration) AS duration\n \tFROM grouped_point gp\n-\tWHERE location_id = \" . htmlspecialchars($location_id);\n+\tWHERE location_id = ?\";\n \n \n // CONSTRUCT WHERE CLAUSE\n@@ -26,7 +23,7 @@\n // group by comes after where clause\n $query .= \" GROUP BY DATE(start_date)\";\n \n-$results = $db->rawQuery($query, null, false);\n+$results = $db->rawQuery($query, Array($_POST['location_id']));\n \n \n // convert seconds to hours, and make sure that no day is longer than 24 hours, by rolling extra hours over to the next record"
        },
        {
          "filename": "location_history/controllers/main.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -24,12 +24,12 @@\n \n // limit clause comes last\n if (isset($limit)) {\n-\t$query .= \" LIMIT \" . htmlspecialchars($limit);\n+\t$query .= \" LIMIT \" . $limit;\n }\n \n \n \n-echo json_encode($db->rawQuery($query, null, false));\n+echo json_encode($db->rawQuery($query, null));\n \n \n "
        },
        {
          "filename": "location_history/controllers/trips.php",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -9,7 +9,7 @@\n \treturn;\n }\n \n-$location_id = htmlspecialchars($_POST['location_id']);\n+$location_id = $db->mysqli()->real_escape_string($_POST['location_id']);\n \n \n \n@@ -28,7 +28,7 @@\n \n include '__build_query.php';\n $query .= \" GROUP BY t.end_location_id HAVING count_lid > 1 ORDER BY count_lid DESC\";\n-$start_aggregate = $db->rawQuery($query, null, false);\n+$start_aggregate = $db->rawQuery($query, null);\n \n \n \n@@ -50,7 +50,7 @@\n \n include '__build_query.php';\n $query .= \" ORDER BY c.count_lid DESC, t.end_location_id, t.start_date ASC\";\n-$start_all = $db->rawQuery($query, null, false);\n+$start_all = $db->rawQuery($query, null);\n \n \n \n@@ -67,7 +67,7 @@\n \n include '__build_query.php';\n $query .= \" GROUP BY t.start_location_id HAVING count_lid > 1 ORDER BY count_lid DESC\";\n-$end_aggregate = $db->rawQuery($query, null, false);\n+$end_aggregate = $db->rawQuery($query, null);\n \n \n \n@@ -89,7 +89,7 @@\n \n include '__build_query.php';\n $query .= \" ORDER BY c.count_lid DESC, t.start_location_id, t.end_date ASC\";\n-$end_all = $db->rawQuery($query, null, false);\n+$end_all = $db->rawQuery($query, null);\n \n \n \n@@ -109,7 +109,7 @@\n $query .= \" ORDER BY t.start_date ASC) SQ, location ls, location le\n WHERE ls.id = SQ.start_location_id AND le.id = SQ.end_location_id\";\n \n-$start_end_all = $db->rawQuery($query, null, false);\n+$start_end_all = $db->rawQuery($query, null);\n \n \n "
        },
        {
          "filename": "location_history/controllers/visits.php",
          "status": "modified",
          "additions": 2,
          "deletions": 7,
          "patch": "@@ -9,22 +9,19 @@\n \treturn;\n }\n \n-$location_id = $_POST['location_id'];\n-\n-\n // visits for location\n $query = \"SELECT\n \tDATE(gp.start_date) as start_date, TIME(gp.start_date) as start_time, TIME_TO_SEC(gp.start_date) as start_time_sec, TIME_TO_SEC(gp.end_date) as end_time_sec, duration\n \tFROM grouped_point gp\n-\tWHERE location_id = \" . htmlspecialchars($location_id);\n+\tWHERE location_id = ?\";\n \n \n \n // CONSTRUCT WHERE CLAUSE\n include '__build_query.php';\n include_once '../models/Circular.php';\n \n-$results = $db->rawQuery($query, null, false);\n+$results = $db->rawQuery($query, Array($_POST['location_id']));\n \n \n $start_times = array();\n@@ -43,6 +40,4 @@\n \t\"results\" => $results));\n \n \n-\n-\n ?>"
        },
        {
          "filename": "location_history/css/style.css",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -208,6 +208,10 @@ li#weekdays-container {\n \tmargin-top: 8px;\n }\n \n+label.checkbox {\n+\tcolor: black !important;\n+}\n+\n li#search-container {\n \tmargin-top: 11px;\n \tmargin-right: 10px;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bb97bd98db9f2ce1f80bd34549badac3fd56e8d2",
            "date": "2019-01-25T07:41:36Z",
            "author_login": "kylebebak"
          },
          {
            "sha": "45575e5196a4a24895ae3b189baaaeb7e9caf14f",
            "date": "2019-01-25T02:49:36Z",
            "author_login": "kylebebak"
          },
          {
            "sha": "8745a4b381fbd2d3786f8a5c3abda3c1e668d8e1",
            "date": "2019-01-25T02:21:20Z",
            "author_login": "kylebebak"
          },
          {
            "sha": "65c5fc0d1a4fd42328b7d85acf71e771f3e94714",
            "date": "2018-08-07T15:11:13Z",
            "author_login": "kylebebak"
          },
          {
            "sha": "e7c6ffcee642be80406834bd502cdaadf14dce74",
            "date": "2018-08-07T13:57:10Z",
            "author_login": "kylebebak"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability was found in kylebebak dronfelipe. It has been declared as critical. Affected by this vulnerability is an unknown functionality. The manipulation leads to sql injection. The patch is named 87405b74fe651892d79d0dff62ed17a7eaef6a60. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217951.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-11T07:15:10.743",
    "last_modified": "2024-11-21T02:24:13.657",
    "fix_date": "2015-12-15T21:11:20Z"
  },
  "references": [
    {
      "url": "https://github.com/kylebebak/dronfelipe/commit/87405b74fe651892d79d0dff62ed17a7eaef6a60",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217951",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217951",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kylebebak/dronfelipe/commit/87405b74fe651892d79d0dff62ed17a7eaef6a60",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217951",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217951",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.539269",
    "processing_status": "enhanced"
  }
}