{
  "cve_id": "CVE-2015-10066",
  "github_data": {
    "repository": "tynx/wuersch",
    "fix_commit": "66d4718750a741d1053d327a79e285fd50372519",
    "related_commits": [
      "66d4718750a741d1053d327a79e285fd50372519",
      "66d4718750a741d1053d327a79e285fd50372519"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "66d4718750a741d1053d327a79e285fd50372519",
      "commit_date": "2015-03-27T13:42:22Z",
      "author": {
        "login": "tynx",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "sotre is sql-injection-safe as we work now with pdo->prepare",
        "length": 60,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 60,
        "additions": 34,
        "deletions": 26
      },
      "files": [
        {
          "filename": "backend/base/Store.class.php",
          "status": "modified",
          "additions": 34,
          "deletions": 26,
          "patch": "@@ -34,13 +34,14 @@ private function packValue($value){\n \tpublic function getById($table, $id){\n \t\t$query = 'SELECT * FROM `wuersch`.`' . $table . '` WHERE ';\n \t\tif(!is_numeric($id) && strlen($id)==32){\n-\t\t\t$query .= '`id_md5`=\"' . $id . '\"';\n+\t\t\t$query .= '`id_md5`=?';\n \t\t}else{\n-\t\t\t$query .= '`id`=' . $id;\n+\t\t\t$query .= '`id`=?';\n \t\t}\n-\t\t$sth = Store::$pdo->prepare($query . ';');\n-\t\t$sth->execute();\n-\t\t$result = $sth->fetchAll(PDO::FETCH_CLASS, ucfirst($table));\n+\t\t$stmt = Store::$pdo->prepare($query . ';');\n+\t\t$stmt->bindParam(1, $id);\n+\t\t$stmt->execute();\n+\t\t$result = $stmt->fetchAll(PDO::FETCH_CLASS, ucfirst($table));\n \t\tif(count($result) === 1){\n \t\t\treturn $result[0];\n \t\t}\n@@ -56,48 +57,55 @@ public function getByCustomQuery($query){\n \n \tpublic function getByColumns($table, $columns, $combination = 'AND'){\n \t\t$query = 'SELECT * FROM `wuersch`.`' . $table . '` WHERE ';\n+\t\t\n \t\tforeach($columns as $key=>$value){\n-\t\t\t$query .= '`' . $key . '`=';\n-\t\t\tif(is_numeric($value))\n-\t\t\t\t$query .= $value;\n-\t\t\telse\n-\t\t\t\t$query .= '\"' . $value . '\"';\n-\t\t\t$query .= ' ' . $combination . ' ';\n+\t\t\t$query .= '`' . $key . '`=? ' . $combination . ' ';\n \t\t}\n \t\t$query = substr($query, 0, (-2-strlen($combination)));\n-\t\t$sth = Store::$pdo->prepare($query . ' LIMIT 100;');\n-\t\t$sth->execute();\n-\t\treturn $sth->fetchAll(PDO::FETCH_CLASS, ucfirst($table));\n+\t\t$stmt = Store::$pdo->prepare($query . ';');\n+\t\tforeach(array_values($columns) as $i=>$value)\n+\t\t\t$stmt->bindParam($i+1, $value);\n+\t\t$stmt->execute();\n+\t\treturn $stmt->fetchAll(PDO::FETCH_CLASS, ucfirst($table));\n \t}\n \n \tpublic function insert($table, $data){\n \t\tif(!is_array($data))\n \t\t\treturn -1;\n-\t\t$columns = '`' . implode('`, `', array_keys($data)) . '`';\n-\t\t$values = '';\n-\t\tforeach($data as $value){\n-\t\t\t$values .= $this->packValue($value) . ', ';\n+\t\t$query = 'INSERT INTO `wuersch`.`' . $table . '` (';\n+\t\t$query .= '`' . implode('`, `', array_keys($data)) . '`) VALUES (';\n+\t\tfor($i=0; $i<count($data); $i++){\n+\t\t\t$query .= '?, ';\n+\t\t}\n+\t\t$query = substr($query, 0, -2) . ');';\n+\t\t$stmt = Store::$pdo->prepare($query);\n+\t\tforeach(array_values($data) as $i=>$value){\n+\t\t\t$stmt->bindParam($i+1, $value);\n \t\t}\n-\t\t$values = substr($values, 0, -2);\n-\t\t$result = Store::$pdo->exec('INSERT INTO `wuersch`.`' . $table . '`(' . $columns . ') VALUES(' . $values . ');');\n+\t\t\n+\t\t$result = $stmt->execute();\n \t\treturn Store::$pdo->lastInsertId();\n \t}\n \n \tpublic function update($table, $id, $data){\n \t\tif(!is_array($data))\n \t\t\treturn false;\n \t\t$columns = '';\n+\t\t$query = 'UPDATE `wuersch`.`' . $table . '` SET ';\n \t\tforeach($data as $name=>$value){\n-\t\t\t$columns .= '`' . $name . '`=' . $this->packValue($value) . ', ';\n+\t\t\t$query .= '`' . $name . '`=?, ';\n \t\t}\n-\t\t$columns = substr($columns, 0, -2);\n-\t\t$query = 'UPDATE `wuersch`.`' . $table . '` SET ' . $columns . ' ';\n+\t\t$query = substr($query, 0, -2);\n \t\tif(!is_numeric($id) && strlen($id)==32){\n-\t\t\t$query .= 'WHERE `id_md5`=\"' . $id . '\"';\n+\t\t\t$query .= ' WHERE `id_md5`=?;';\n \t\t}else{\n-\t\t\t$query .= 'WHERE `id`=' . $id;\n+\t\t\t$query .= ' WHERE `id`=?;';\n \t\t}\n-\t\treturn Store::$pdo->exec($query . ';');\n+\t\t$stmt = Store::$pdo->prepare($query);\n+\t\tforeach(array_values($data) as $i=>$value)\n+\t\t\t$stmt->bindParam($i+1, $value);\n+\t\t$stmt->bindParam(count($data)+1, $id);\n+\t\treturn $stmt->execute();\n \t}\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c9499df755bc7e2802642ba34d1bd1c77095fea8",
            "date": "2015-05-27T19:38:44Z",
            "author_login": "schum30"
          },
          {
            "sha": "83e7569c14da5e4d8eec40309147a482da69fdd3",
            "date": "2015-05-27T19:12:25Z",
            "author_login": "schum30"
          },
          {
            "sha": "938396e455bbd3cba35151354b683f2b3b1241f7",
            "date": "2015-05-27T18:50:23Z",
            "author_login": "schum30"
          },
          {
            "sha": "0fda53e1aac15e7b9f842f7933f4efd2d76bea27",
            "date": "2015-05-27T18:07:15Z",
            "author_login": "schum30"
          },
          {
            "sha": "78483c823070d42341e2498ef459859d0a95d9a1",
            "date": "2015-05-26T19:23:23Z",
            "author_login": "schum30"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability was found in tynx wuersch and classified as critical. Affected by this issue is the function packValue/getByCustomQuery of the file backend/base/Store.class.php. The manipulation leads to sql injection. The patch is identified as 66d4718750a741d1053d327a79e285fd50372519. It is recommended to apply a patch to fix this issue. VDB-218462 is the identifier assigned to this vulnerability.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-18T00:15:11.697",
    "last_modified": "2024-11-21T02:24:17.823",
    "fix_date": "2015-03-27T13:42:22Z"
  },
  "references": [
    {
      "url": "https://github.com/tynx/wuersch/commit/66d4718750a741d1053d327a79e285fd50372519",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.218462",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.218462",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tynx/wuersch/commit/66d4718750a741d1053d327a79e285fd50372519",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.218462",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.218462",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.570476",
    "processing_status": "enhanced"
  }
}