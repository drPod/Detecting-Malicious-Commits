{
  "cve_id": "CVE-2015-10072",
  "github_data": {
    "repository": "NREL/api-umbrella-web",
    "fix_commit": "bcc0e922c61d30367678c8f17a435950969315cd",
    "related_commits": [
      "bcc0e922c61d30367678c8f17a435950969315cd",
      "bcc0e922c61d30367678c8f17a435950969315cd"
    ],
    "patch_url": "https://github.com/NREL/api-umbrella-web/commit/bcc0e922c61d30367678c8f17a435950969315cd.patch",
    "fix_commit_details": {
      "sha": "bcc0e922c61d30367678c8f17a435950969315cd",
      "commit_date": "2015-04-10T17:26:16Z",
      "author": {
        "login": "GUI",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix additional XSS issues in the flash messages in the admin.",
        "length": 599,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 374,
        "additions": 351,
        "deletions": 23
      },
      "files": [
        {
          "filename": "Gemfile",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -245,6 +245,10 @@ group :development, :test do\n \n   # For parsing URLs in tests.\n   gem \"addressable\", \"~> 2.3.6\"\n+\n+  # For caching external web requests\n+  gem \"vcr\", \"~> 2.9.3\", :require => false\n+  gem \"webmock\", \"~> 1.21.0\", :require => false\n end\n \n group :development do"
        },
        {
          "filename": "Gemfile.lock",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -122,6 +122,8 @@ GEM\n       simplecov (>= 0.7)\n       term-ansicolor (= 1.2.2)\n       thor (= 0.18.1)\n+    crack (0.4.2)\n+      safe_yaml (~> 1.0.0)\n     css_parser (1.3.5)\n       addressable\n     csv_builder (2.1.1)\n@@ -475,13 +477,17 @@ GEM\n       execjs (>= 0.3.0)\n       json (>= 1.8.0)\n     uuidtools (2.1.5)\n+    vcr (2.9.3)\n     virtus (1.0.4)\n       axiom-types (~> 0.1)\n       coercible (~> 1.0)\n       descendants_tracker (~> 0.0, >= 0.0.3)\n       equalizer (~> 0.0, >= 0.0.9)\n     warden (1.2.3)\n       rack (>= 1.0)\n+    webmock (1.21.0)\n+      addressable (>= 2.3.6)\n+      crack (>= 0.3.2)\n     websocket-driver (0.4.0)\n     websocket-driver (0.4.0-java)\n     xpath (2.0.0)\n@@ -588,3 +594,5 @@ DEPENDENCIES\n   turbo-sprockets-rails3 (= 0.3.13)\n   uglifier (~> 2.5.0)\n   uuidtools (~> 2.1.4)\n+  vcr (~> 2.9.3)\n+  webmock (~> 1.21.0)"
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/admin_groups/form_controller.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@ Admin.AdminGroupsFormController = Ember.ObjectController.extend(Admin.Save, {\n     submit: function() {\n       this.save({\n         transitionToRoute: 'admin_groups',\n-        message: 'Successfully saved the admin group \"' + this.get('model.name') + '\"',\n+        message: 'Successfully saved the admin group \"' + _.escape(this.get('model.name')) + '\"',\n       });\n     },\n   },"
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/admins/form_controller.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@ Admin.AdminsFormController = Ember.ObjectController.extend(Admin.Save, {\n     submit: function() {\n       this.save({\n         transitionToRoute: 'admins',\n-        message: 'Successfully saved the admin \"' + this.get('model.username') + '\"',\n+        message: 'Successfully saved the admin \"' + _.escape(this.get('model.username')) + '\"',\n       });\n     },\n   },"
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/api_scopes/form_controller.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -3,7 +3,7 @@ Admin.ApiScopesFormController = Ember.ObjectController.extend(Admin.Save, {\n     submit: function() {\n       this.save({\n         transitionToRoute: 'api_scopes',\n-        message: 'Successfully saved the API scope \"' + this.get('model.name') + '\"',\n+        message: 'Successfully saved the API scope \"' + _.escape(this.get('model.name')) + '\"',\n       });\n     },\n   },"
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/api_users/form_controller.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -20,9 +20,9 @@ Admin.ApiUsersFormController = Ember.ObjectController.extend(Admin.Save, {\n       this.save({\n         transitionToRoute: 'api_users',\n         message: function(model) {\n-          var message = 'Successfully saved the user \"' + model.get('email') + '\"';\n+          var message = 'Successfully saved the user \"' + _.escape(model.get('email')) + '\"';\n           if(model.get('apiKey')) {\n-            message += '<br>API Key: <code>' + model.get('apiKey') + '</code>';\n+            message += '<br>API Key: <code>' + _.escape(model.get('apiKey')) + '</code>';\n           }\n \n           return message;"
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/apis_form_controller.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -21,7 +21,7 @@ Admin.ApisFormController = Ember.ObjectController.extend(Admin.Save, {\n     submit: function() {\n       this.save({\n         transitionToRoute: 'apis',\n-        message: 'Successfully saved the \"' + this.get('model.name') + '\" API backend<br><strong>Note:</strong> Your changes are not yet live. <a href=\"/admin/#/config/publish\">Publish Changes</a> to send your updates live.',\n+        message: 'Successfully saved the \"' + _.escape(this.get('model.name')) + '\" API backend<br><strong>Note:</strong> Your changes are not yet live. <a href=\"/admin/#/config/publish\">Publish Changes</a> to send your updates live.',\n       });\n     },\n "
        },
        {
          "filename": "app/assets/javascripts/admin/controllers/website_backends/form_controller.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -22,7 +22,7 @@ Admin.WebsiteBackendsFormController = Ember.ObjectController.extend(Admin.Save,\n     submit: function() {\n       this.save({\n         transitionToRoute: 'website_backends',\n-        message: 'Successfully saved the \"' + this.get('model.frontendHost') + '\" website backend<br><strong>Note:</strong> Your changes are not yet live. <a href=\"/admin/#/config/publish\">Publish Changes</a> to send your updates live.',\n+        message: 'Successfully saved the \"' + _.escape(this.get('model.frontendHost')) + '\" website backend<br><strong>Note:</strong> Your changes are not yet live. <a href=\"/admin/#/config/publish\">Publish Changes</a> to send your updates live.',\n       });\n     },\n "
        },
        {
          "filename": "spec/cassettes/elasticsearch_templates.yml",
          "status": "added",
          "additions": 221,
          "deletions": 0,
          "patch": "@@ -0,0 +1,221 @@\n+---\n+http_interactions:\n+- request:\n+    method: get\n+    uri: https://raw.githubusercontent.com/NREL/api-umbrella-router/master/config/elasticsearch_templates.json\n+    body:\n+      encoding: US-ASCII\n+      string: ''\n+    headers:\n+      Accept:\n+      - \"*/*; q=0.5, application/xml\"\n+      Accept-Encoding:\n+      - gzip, deflate\n+      User-Agent:\n+      - Ruby\n+  response:\n+    status:\n+      code: 200\n+      message: OK\n+    headers:\n+      Date:\n+      - Fri, 10 Apr 2015 17:17:38 GMT\n+      Server:\n+      - Apache\n+      Access-Control-Allow-Origin:\n+      - https://render.githubusercontent.com\n+      Content-Security-Policy:\n+      - default-src 'none'\n+      X-Xss-Protection:\n+      - 1; mode=block\n+      X-Frame-Options:\n+      - deny\n+      X-Content-Type-Options:\n+      - nosniff\n+      Strict-Transport-Security:\n+      - max-age=31536000\n+      Etag:\n+      - '\"d426630bd78408d97d4ae86d0d7a7c224849d203\"'\n+      Content-Type:\n+      - text/plain; charset=utf-8\n+      Cache-Control:\n+      - max-age=300\n+      Content-Length:\n+      - '3937'\n+      Accept-Ranges:\n+      - bytes\n+      Via:\n+      - 1.1 varnish\n+      X-Served-By:\n+      - cache-mia1323-MIA\n+      X-Cache:\n+      - MISS\n+      X-Cache-Hits:\n+      - '0'\n+      Vary:\n+      - Authorization,Accept-Encoding\n+      Expires:\n+      - Fri, 10 Apr 2015 17:22:38 GMT\n+      Source-Age:\n+      - '0'\n+    body:\n+      encoding: ASCII-8BIT\n+      string: |\n+        [\n+          {\n+            \"id\": \"api-umbrella-template\",\n+            \"template\": {\n+              \"template\": \"api-umbrella\",\n+              \"mappings\": {\n+                \"city\": {\n+                  \"_all\": {\n+                    \"enabled\": false\n+                  },\n+                  \"_timestamp\": {\n+                    \"enabled\": true,\n+                    \"path\": \"updated_at\"\n+                  },\n+                  \"properties\": {\n+                    \"country\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"region\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"city\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"location\": {\n+                      \"type\": \"geo_point\",\n+                      \"lat_lon\": true\n+                    }\n+                  }\n+                }\n+              }\n+            }\n+          },\n+          {\n+            \"id\": \"api-umbrella-log-v1-template\",\n+            \"template\": {\n+              \"template\": \"api-umbrella-logs-v1-*\",\n+              \"settings\": {\n+                \"index\": {\n+                  \"number_of_shards\": 3\n+                },\n+                \"analysis\": {\n+                  \"analyzer\": {\n+                    \"keyword_lowercase\": {\n+                      \"type\": \"custom\",\n+                      \"tokenizer\": \"keyword\",\n+                      \"filter\": [\"lowercase\"]\n+                    },\n+                    \"path_hierarchy_lowercase\": {\n+                      \"type\": \"custom\",\n+                      \"tokenizer\": \"path_hierarchy\",\n+                      \"filter\": [\"lowercase\"]\n+                    }\n+                  }\n+                }\n+              },\n+              \"mappings\": {\n+                \"log\": {\n+                  \"_all\": {\n+                    \"enabled\": false\n+                  },\n+                  \"_timestamp\": {\n+                    \"enabled\": true,\n+                    \"path\": \"request_at\"\n+                  },\n+                  \"date_detection\": false,\n+                  \"numeric_detection\": false,\n+                  \"dynamic_templates\": [\n+                    {\n+                      \"string_template\": {\n+                        \"match\": \"*\",\n+                        \"match_mapping_type\": \"string\",\n+                        \"mapping\": {\n+                          \"type\": \"string\",\n+                          \"index\": \"analyzed\",\n+                          \"analyzer\": \"keyword_lowercase\"\n+                        }\n+                      }\n+                    }\n+                  ],\n+                  \"properties\": {\n+                    \"api_key\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"user_id\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"request_at\": {\n+                      \"type\": \"date\"\n+                    },\n+                    \"request_ip\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"request_ip_country\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"request_ip_region\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"request_ip_city\": {\n+                      \"type\": \"string\",\n+                      \"index\": \"not_analyzed\"\n+                    },\n+                    \"request_path_hierarchy\": {\n+                      \"type\": \"string\",\n+                      \"analyzer\": \"path_hierarchy_lowercase\"\n+                    },\n+                    \"request_size\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"response_status\": {\n+                      \"type\": \"short\"\n+                    },\n+                    \"response_age\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"response_content_length\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"response_size\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"response_time\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"backend_response_time\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"proxy_overhead\": {\n+                      \"type\": \"integer\"\n+                    },\n+                    \"internal_response_time\": {\n+                      \"type\": \"float\"\n+                    },\n+                    \"internal_gatekeeper_time\": {\n+                      \"type\": \"float\"\n+                    },\n+                    \"request_ip_location\": {\n+                      \"type\": \"geo_point\",\n+                      \"lat_lon\": true\n+                    }\n+                  }\n+                }\n+              }\n+            }\n+          }\n+        ]\n+    http_version: \n+  recorded_at: Fri, 10 Apr 2015 07:01:09 GMT\n+recorded_with: VCR 2.9.3"
        },
        {
          "filename": "spec/controllers/admin/stats_controller_spec.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -4,10 +4,11 @@\n   login_admin\n \n   before(:each) do\n-    begin\n-      LogItem.gateway.client.indices.delete :index => LogItem.index_name\n-    rescue Elasticsearch::Transport::Transport::Errors::NotFound # rubocop:disable Lint/HandleExceptions\n-    end\n+    LogItem.gateway.client.delete_by_query :index => LogItem.index_name, :body => {\n+      :query => {\n+        :match_all => {},\n+      },\n+    }\n   end\n \n   describe \"GET logs\" do"
        },
        {
          "filename": "spec/factories/api_users.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -13,6 +13,7 @@\n     end\n \n     factory :xss_api_user do\n+      email 'a@\"><script class=\"xss-test\">alert(\"Hello first_name\");</script>.com'\n       first_name '\"><script class=\"xss-test\">alert(\"Hello first_name\");</script>'\n       last_name '\"><script class=\"xss-test\">alert(\"Hello last_name\");</script>'\n       use_description '\"><script class=\"xss-test\">alert(\"Hello use_description\");</script>'"
        },
        {
          "filename": "spec/factories/log_items.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -3,13 +3,14 @@\n class LogItem\n   include Elasticsearch::Persistence::Model\n \n-  index_name \"api-umbrella-logs-2015-01\"\n+  index_name \"api-umbrella-logs-write-2015-01\"\n+  document_type \"log\"\n \n   attribute :api_key, String\n-  attribute :backend_response_time, Float\n+  attribute :backend_response_time, Integer\n   attribute :internal_gatekeeper_time, Float\n   attribute :internal_response_time, Float\n-  attribute :proxy_overhead, Float\n+  attribute :proxy_overhead, Integer\n   attribute :request_accept_encoding, String\n   attribute :request_at, Time\n   attribute :request_hierarchy, Array\n@@ -33,7 +34,7 @@ class LogItem\n   attribute :response_server, String\n   attribute :response_size, Integer\n   attribute :response_status, Integer\n-  attribute :response_time, Float\n+  attribute :response_time, Integer\n   attribute :user_email, String\n   attribute :user_id, String\n   attribute :user_registration_source, String"
        },
        {
          "filename": "spec/features/admin/api_users_spec.rb",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -13,22 +13,32 @@\n       visit \"/admin/#/api_users\"\n \n       page.should have_content(@user.email)\n-      page.should_not have_selector(\".xss-test\", :visible => :all)\n       page.should have_content(@user.first_name)\n       page.should have_content(@user.last_name)\n       page.should have_content(@user.use_description)\n       page.should have_content(@user.registration_source)\n+      page.should_not have_selector(\".xss-test\", :visible => :all)\n     end\n \n     it \"escapes html entities in the form\" do\n       visit \"/admin/#/api_users/#{@user.id}/edit\"\n \n       find_field(\"E-mail\").value.should eql(@user.email)\n-      page.should_not have_selector(\".xss-test\", :visible => :all)\n       find_field(\"First Name\").value.should eql(@user.first_name)\n       find_field(\"Last Name\").value.should eql(@user.last_name)\n       find_field(\"Purpose\").value.should eql(@user.use_description)\n       page.should have_content(@user.registration_source)\n+      page.should_not have_selector(\".xss-test\", :visible => :all)\n+    end\n+\n+    it \"escapes html entities in flash confirmation message\" do\n+      visit \"/admin/#/api_users/#{@user.id}/edit\"\n+\n+      fill_in \"Last Name\", :with => \"Doe\"\n+      click_button(\"Save\")\n+\n+      page.should have_content(\"Successfully saved the user \\\"#{@user.email}\\\"\")\n+      page.should_not have_selector(\".xss-test\", :visible => :all)\n     end\n   end\n "
        },
        {
          "filename": "spec/features/admin/stats_logs_spec.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 6,
          "patch": "@@ -1,14 +1,15 @@\n require \"spec_helper\"\n require \"addressable/uri\"\n \n-describe \"apis\", :js => true do\n+describe \"analytics filter logs\", :js => true do\n   login_admin\n \n   before(:each) do\n-    begin\n-      LogItem.gateway.client.indices.delete :index => LogItem.index_name\n-    rescue Elasticsearch::Transport::Transport::Errors::NotFound # rubocop:disable Lint/HandleExceptions\n-    end\n+    LogItem.gateway.client.delete_by_query :index => LogItem.index_name, :body => {\n+      :query => {\n+        :match_all => {},\n+      },\n+    }\n   end\n \n   describe \"xss\" do\n@@ -19,14 +20,14 @@\n       visit \"/admin/#/stats/logs/tz=America%2FDenver&search=&start_at=2015-01-12&end_at=2015-01-18&interval=day\"\n \n       page.should have_content(log.request_method)\n-      page.should_not have_selector(\".xss-test\", :visible => :all)\n       page.should have_content(log.request_accept_encoding)\n       page.should have_content(log.request_ip_city)\n       page.should have_content(log.request_ip_country)\n       page.should have_content(log.request_ip_region)\n       page.should have_content(log.request_user_agent)\n       page.should have_content(log.response_content_type)\n       page.should have_content(log.user_email)\n+      page.should_not have_selector(\".xss-test\", :visible => :all)\n     end\n   end\n "
        },
        {
          "filename": "spec/features/admin/stats_users_spec.rb",
          "status": "added",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -0,0 +1,29 @@\n+require \"spec_helper\"\n+\n+describe \"analytics by users\", :js => true do\n+  login_admin\n+\n+  before(:each) do\n+    LogItem.gateway.client.delete_by_query :index => LogItem.index_name, :body => {\n+      :query => {\n+        :match_all => {},\n+      },\n+    }\n+  end\n+\n+  describe \"xss\" do\n+    it \"escapes html entities in the table\" do\n+      user = FactoryGirl.create(:xss_api_user)\n+      FactoryGirl.create(:xss_log_item, :request_at => Time.parse(\"2015-01-16T06:06:28.816Z\"), :api_key => user.api_key, :user_id => user.id, :user_email => user.email, :user_registration_source => user.registration_source)\n+      LogItem.gateway.refresh_index!\n+\n+      visit \"/admin/#/stats/users/tz=America%2FDenver&search=&start_at=2015-01-12&end_at=2015-01-18&interval=day\"\n+\n+      page.should have_content(user.email)\n+      page.should have_content(user.first_name)\n+      page.should have_content(user.last_name)\n+      page.should have_content(user.use_description)\n+      page.should_not have_selector(\".xss-test\", :visible => :all)\n+    end\n+  end\n+end"
        },
        {
          "filename": "spec/support/elasticsearch.rb",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -0,0 +1,32 @@\n+require \"support/vcr\"\n+\n+client = Elasticsearch::Client.new\n+\n+# Fetch the elasticsearch template file from the router project. Cache it with\n+# VCR, but periodically re-record it to make sure we stay up-to-date.\n+VCR.use_cassette(\"elasticsearch_templates\", :re_record_interval => 1.day) do\n+  templates = MultiJson.load(RestClient.get(\"https://raw.githubusercontent.com/NREL/api-umbrella-router/master/config/elasticsearch_templates.json\"))\n+  templates.each do |template|\n+    client.indices.put_template({\n+      :name => template[\"id\"],\n+      :body => template[\"template\"],\n+    })\n+  end\n+end\n+\n+# For simplicity sake, we're assuming our tests only deal with the 2015-01\n+# index currently. First delete any existing indexes.\n+%w(api-umbrella-logs-v1-2015-01 api-umbrella-logs-2015-01 api-umbrella-logs-write-2015-01).each do |index_name|\n+  begin\n+    client.indices.delete :index => index_name\n+  rescue Elasticsearch::Transport::Transport::Errors::NotFound # rubocop:disable Lint/HandleExceptions\n+  end\n+end\n+\n+# Create the index with proper aliases setup.\n+client.indices.create(:index => \"api-umbrella-logs-v1-2015-01\", :body => {\n+  :aliases => {\n+    \"api-umbrella-logs-2015-01\" => {},\n+    \"api-umbrella-logs-write-2015-01\" => {},\n+  },\n+})"
        },
        {
          "filename": "spec/support/vcr.rb",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+require \"vcr\"\n+\n+VCR.configure do |c|\n+  c.cassette_library_dir = \"#{::Rails.root}/spec/cassettes\"\n+  c.hook_into :webmock\n+  c.default_cassette_options = {\n+    :record => :new_episodes,\n+\n+    # Store gzip responses as plaintext in the YAML.\n+    :decode_compressed_response => true,\n+\n+    # Allow the same response to be used multiple times in a single test.\n+    :allow_playback_repeats => true,\n+  }\n+\n+  # Allow localhost connections for ElasticSearch.\n+  c.ignore_localhost = true\n+\n+  c.configure_rspec_metadata!\n+end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 2,
        "test_files": 0,
        "unique_directories": 12,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4fcee0de8b1e73d7b451719b80e2ebe03fea38e4",
            "date": "2016-04-14T03:12:20Z",
            "author_login": "GUI"
          },
          {
            "sha": "49959cd8f6980a5ae2ce68ad43b070a9b258b290",
            "date": "2016-04-14T03:06:22Z",
            "author_login": "GUI"
          },
          {
            "sha": "e182a59921605c2d951c9f87c6435f4bd175cd3f",
            "date": "2015-11-17T06:06:20Z",
            "author_login": "GUI"
          },
          {
            "sha": "92b65ff230fb5e55c953460ba9195a1b24ffd083",
            "date": "2015-10-09T02:09:07Z",
            "author_login": "GUI"
          },
          {
            "sha": "291974f698dee57f6177c2f7bc79410d884f70d5",
            "date": "2015-09-18T23:52:00Z",
            "author_login": "GUI"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "A vulnerability classified as problematic was found in NREL api-umbrella-web 0.7.1. This vulnerability affects unknown code of the component Flash Message Handler. The manipulation leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 0.8.0 is able to address this issue. The name of the patch is bcc0e922c61d30367678c8f17a435950969315cd. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-220060.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-04T04:15:08.727",
    "last_modified": "2024-11-21T02:24:18.697",
    "fix_date": "2015-04-10T17:26:16Z"
  },
  "references": [
    {
      "url": "https://github.com/NREL/api-umbrella-web/commit/bcc0e922c61d30367678c8f17a435950969315cd",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NREL/api-umbrella-web/releases/tag/v0.8.0",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.220060",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.220060",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NREL/api-umbrella-web/commit/bcc0e922c61d30367678c8f17a435950969315cd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NREL/api-umbrella-web/releases/tag/v0.8.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.220060",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.220060",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.984761",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "api-umbrella-web",
    "owner": "NREL",
    "created_at": "2012-07-27T23:37:09Z",
    "updated_at": "2023-01-28T21:17:20Z",
    "pushed_at": "2016-04-14T03:12:20Z",
    "size": 6875,
    "stars": 22,
    "forks": 10,
    "open_issues": 0,
    "watchers": 22,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Ruby": 477651,
      "JavaScript": 125942,
      "HTML": 71234,
      "CSS": 11343,
      "Shell": 472
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:33:33.248745"
  }
}