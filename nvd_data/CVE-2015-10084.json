{
  "cve_id": "CVE-2015-10084",
  "github_data": {
    "repository": "irontec/klear-library",
    "fix_commit": "b25262de52fdaffde2a4434fc2a84408b304fbc5",
    "related_commits": [
      "b25262de52fdaffde2a4434fc2a84408b304fbc5",
      "b25262de52fdaffde2a4434fc2a84408b304fbc5"
    ],
    "patch_url": "https://github.com/irontec/klear-library/commit/b25262de52fdaffde2a4434fc2a84408b304fbc5.patch",
    "fix_commit_details": {
      "sha": "b25262de52fdaffde2a4434fc2a84408b304fbc5",
      "commit_date": "2015-10-15T10:01:25Z",
      "author": {
        "login": "mmadariaga",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix sql injection && Permitir la ejecuci\u00f3n de sentencias sql complejas predefinidas en controladores REST v\u00eda Zend_Db_Expr",
        "length": 122,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 74,
        "additions": 56,
        "deletions": 18
      },
      "files": [
        {
          "filename": "Controller/Rest/BaseController.php",
          "status": "modified",
          "additions": 56,
          "deletions": 18,
          "patch": "@@ -379,22 +379,24 @@ protected function _prepareWhere($search)\n         }\n \n         $search = json_decode($search);\n+        return implode(\" AND \", $this->_parseWhere($search));\n+    }\n \n+    protected function _parseWhere($search) \n+    {\n         $itemsSearch = array();\n         foreach ($search as $key => $val) {\n \n-            if (is_scalar($val)) {\n+            if ($val instanceof \\Zend_Db_Expr) {\n+                $itemsSearch[] = $val->__toString();\n+            } else if (is_scalar($val)) {\n                 $itemsSearch[] = $this->_prepareScalarCondition($key, $val);\n             } else if (is_object($val)){\n                 $itemsSearch[] = $this->_prepareAdvancedCondition($key, $val);\n             }\n         }\n-\n-        if (empty($itemsSearch)) {\n-            return '';\n-        }\n-        return implode(\" AND \", $itemsSearch);\n-    }\n+        return $itemsSearch;\n+    }   \n \n     protected function _prepareScalarCondition($key, $val) {\n \n@@ -412,32 +414,68 @@ protected function _prepareAdvancedCondition($key, $val) {\n         $dbAdapter = Zend_Db_Table::getDefaultAdapter();\n         switch (strtolower(key($val))) {\n \n+            case 'notEqual':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" != ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n+\n+            case 'isnull':\n+                return $dbAdapter->quoteIdentifier($key) . \" is null\";\n+                break;\n+\n+            case 'isnotnull':\n+                return $dbAdapter->quoteIdentifier($key) . \" is null\";\n+                break;\n+\n+            case 'gt':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" > ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n+\n+            case 'gte':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" >= ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n+                \n+            case 'lt':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" < ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n+\n+            case 'lte':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" <= ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n+                \n             case 'between':\n-                $values = $this->_cleanArray($val);\n+                $values = $this->_cleanArray(current($val));\n                 return $dbAdapter->quoteIdentifier($key) . ' between '. $values[0] . ' AND ' . $values[1];\n \n             case 'notin':\n-\n-                $values = $this->_cleanArray($val);\n+                $values = $this->_cleanArray(current($val));\n                 return $dbAdapter->quoteIdentifier($key) . ' not in ('. implode(\",\", $values) . ') ';\n \n             case 'in':\n-\n-                $values = $this->_cleanArray($val);\n+                $values = $this->_cleanArray(current($val));\n                 return $dbAdapter->quoteIdentifier($key) . ' in ('. implode(\",\", $values) . ') ';\n \n             case 'like':\n-\n-                $key = $dbAdapter->quoteIdentifier($key) . \" like '%?%'\";\n-                return $dbAdapter->quoteInto($key, $val);\n+                $key = $dbAdapter->quoteIdentifier($key) . \" like ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n \n             case 'notlike':\n+                $key = $dbAdapter->quoteIdentifier($key) . \" not like ?\";\n+                return $dbAdapter->quoteInto($key, current($val));\n+                break;\n \n-                $key = $dbAdapter->quoteIdentifier($key) . \" not like '%?%'\";\n-                return $dbAdapter->quoteInto($key, $val);\n+            case 'or':\n+                $conditions = array();\n+                foreach ($val as $subKey => $subVal) {\n+                    $conditions += $this->_parseWhere($subVal);\n+                }\n+                return '('. implode(' OR ', $conditions) .')';\n                 break;\n         }\n-\n         return '';\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f2d1182af144d533b327951329de8e9b32b76b02",
            "date": "2023-03-31T10:20:02Z",
            "author_login": "ddniel16"
          },
          {
            "sha": "a88835ffa4f774e55861d210f235bfc3f08932db",
            "date": "2017-05-18T08:31:45Z",
            "author_login": "mmadariaga"
          },
          {
            "sha": "ff2a05a3cc96604ad6f35ecdae3bc97e8572c387",
            "date": "2017-01-18T15:30:50Z",
            "author_login": "nataliaAznar"
          },
          {
            "sha": "bab07f71cf4b5bd4198cffe18c0e3374f7ab6358",
            "date": "2017-01-17T15:12:07Z",
            "author_login": "nataliaAznar"
          },
          {
            "sha": "4a5793909e275c398970c207701bbbdf36d41923",
            "date": "2017-01-17T12:46:44Z",
            "author_login": "nataliaAznar"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability was found in irontec klear-library chloe and classified as critical. Affected by this issue is the function _prepareWhere of the file Controller/Rest/BaseController.php. The manipulation leads to sql injection. Upgrading to version marla is able to address this issue. The name of the patch is b25262de52fdaffde2a4434fc2a84408b304fbc5. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-221504.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-21T15:15:10.783",
    "last_modified": "2024-11-21T02:24:20.510",
    "fix_date": "2015-10-15T10:01:25Z"
  },
  "references": [
    {
      "url": "https://github.com/irontec/klear-library/commit/b25262de52fdaffde2a4434fc2a84408b304fbc5",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/irontec/klear-library/tree/marla",
      "source": "cna@vuldb.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.221504",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://vuldb.com/?id.221504",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/irontec/klear-library/commit/b25262de52fdaffde2a4434fc2a84408b304fbc5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/irontec/klear-library/tree/marla",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.221504",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://vuldb.com/?id.221504",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:04.086980",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "klear-library",
    "owner": "irontec",
    "created_at": "2014-10-31T14:47:02Z",
    "updated_at": "2024-10-01T15:43:09Z",
    "pushed_at": "2023-04-24T15:53:21Z",
    "size": 486,
    "stars": 5,
    "forks": 0,
    "open_issues": 0,
    "watchers": 5,
    "has_security_policy": false,
    "default_branch": "chloe",
    "protected_branches": [],
    "languages": {
      "PHP": 358565
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "eupl-1.1"
    },
    "collected_at": "2025-01-14T14:08:35.726874"
  }
}