{
  "cve_id": "CVE-2015-1561",
  "github_data": {
    "repository": "centreon/centreon",
    "fix_commit": "a78c60aad6fd5af9b51a6d5de5d65560ea37a98a",
    "related_commits": [
      "a78c60aad6fd5af9b51a6d5de5d65560ea37a98a",
      "a78c60aad6fd5af9b51a6d5de5d65560ea37a98a"
    ],
    "patch_url": "https://github.com/centreon/centreon/commit/a78c60aad6fd5af9b51a6d5de5d65560ea37a98a.patch",
    "fix_commit_details": {
      "sha": "a78c60aad6fd5af9b51a6d5de5d65560ea37a98a",
      "commit_date": "2019-03-12T15:16:50Z",
      "author": {
        "login": "sc979",
        "type": "User",
        "stats": {
          "total_commits": 230,
          "average_weekly_commits": 0.2378490175801448,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 91
        }
      },
      "commit_message": {
        "title": "enh(secu): removing unused file",
        "length": 31,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 305,
        "additions": 0,
        "deletions": 305
      },
      "files": [
        {
          "filename": "www/include/Administration/corePerformance/getStats.php",
          "status": "modified",
          "additions": 0,
          "deletions": 305,
          "patch": "@@ -1,305 +0,0 @@\n-<?php\n-/*\n- * Copyright 2005-2015 Centreon\n- * Centreon is developped by : Julien Mathis and Romain Le Merlus under\n- * GPL Licence 2.0.\n- *\n- * This program is free software; you can redistribute it and/or modify it under\n- * the terms of the GNU General Public License as published by the Free Software\n- * Foundation ; either version 2 of the License.\n- *\n- * This program is distributed in the hope that it will be useful, but WITHOUT ANY\n- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n- * PARTICULAR PURPOSE. See the GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License along with\n- * this program; if not, see <http://www.gnu.org/licenses>.\n- *\n- * Linking this program statically or dynamically with other modules is making a\n- * combined work based on this program. Thus, the terms and conditions of the GNU\n- * General Public License cover the whole combination.\n- *\n- * As a special exception, the copyright holders of this program give Centreon\n- * permission to link this program with independent modules to produce an executable,\n- * regardless of the license terms of these independent modules, and to copy and\n- * distribute the resulting executable under terms of Centreon choice, provided that\n- * Centreon also meet, for each linked independent module, the terms  and conditions\n- * of the license of that module. An independent module is a module which is not\n- * derived from this program. If you modify this program, you may extend this\n- * exception to your version of the program, but you are not obliged to do so. If you\n- * do not wish to do so, delete this exception statement from your version.\n- *\n- * For more information : contact@centreon.com\n- *\n- * SVN : $URL$\n- * SVN : $Id$\n- *\n- */\n-\n-\n-    /*\n-\t * Filter get parameters\n-\t *\n-\t * <code>\n-\t * $_GET[\"o\"] = filter_get($_GET[\"o\"]);\n-\t * </code>\n-\t *\n-\t * @param{TAB}string{TAB}$str{TAB}a get string\n-\t * @return{TAB}string{TAB}return get string\n-\t */\n-\n-function filter_get($str)\n-{\n-    if (preg_match(\"/([a-zA-Z0-9\\_\\-\\%\\ ]*)/\", $str, $matches)) {\n-        return $matches[1];\n-    }\n-    return null;\n-}\n-\n-foreach ($_GET as $key => $get) {\n-    $tab = preg_split('/\\;/', $_GET[$key]);\n-    $_GET[$key] = $tab[0];\n-    if (function_exists(\"filter_var\")) {\n-        $_GET[$key] = filter_var($_GET[$key], FILTER_SANITIZE_SPECIAL_CHARS);\n-    } else {\n-        $_GET[$key] = filter_get($_GET[$key]);\n-    }\n-}\n-\n-    /*\n-\t * escape special char for commands\n-\t *\n-\t * <code>\n-\t * $string = escape_command($string);\n-\t * </code>\n-\t *\n-\t * @param{TAB}string{TAB}$command{TAB}command line\n-\t * @return{TAB}string{TAB}command line\n-\t */\n-\n-function escape_command($command)\n-{\n-    return preg_replace(\"/[\\\\\\$|`]/\", \"\", $command);\n-}\n-\n-    require_once realpath(dirname(__FILE__) . \"/../../../../config/centreon.config.php\");\n-    require_once _CENTREON_PATH_.\"/www/class/centreonGMT.class.php\";\n-    require_once _CENTREON_PATH_.\"/www/class/centreonDB.class.php\";\n-\n-    /*\n-\t * Connect DB\n-\t */\n-    $pearDB = new CentreonDB();\n-    $pearDBO = new CentreonDB(\"centstorage\");\n-\n-    /*\n-\t * Init GMT Class\n-\t */\n-    $CentreonGMT = new CentreonGMT($pearDB);\n-\n-    /*\n-\t * Check Session activity\n-\t */\n-    session_start();\n-    session_write_close();\n-\n-    $sid = session_id();\n-    $session = $pearDB->query(\"SELECT * FROM `session` WHERE session_id = '\".$pearDB->escape($sid).\"'\");\n-if (!$session->rowCount()) {\n-    ;\n-} else {\n-    /*\n- * Get GMT for current user\n- */\n-    $gmt = $CentreonGMT->getMyGMTFromSession($sid, $pearDB);\n-\n-    /*\n- * Get RRDTool binary Path\n- */\n-    $DBRESULT = $pearDB->query(\"SELECT * FROM `options`\");\n-    while ($option = $DBRESULT->fetchRow()) {\n-        $optGen[$option[\"key\"]] = $option[\"value\"];\n-        if ($option[\"key\"] == 'rrdtool_path_bin') {\n-            $rrdtoolPath = $option[\"value\"];\n-        }\n-    }\n-    $DBRESULT->closeCursor();\n-\n-    $title   = array(\n-            \"active_host_check\" => _(\"Host Check Execution Time\"),\n-            \"active_host_last\" => _(\"Hosts Actively Checked\"),\n-            \"host_latency\" => _(\"Host check latency\"),\n-            \"active_service_check\" => _(\"Service Check Execution Time\"),\n-            \"active_service_last\" => _(\"Services Actively Checked\"),\n-            \"service_latency\" => _(\"Service check latency\"),\n-            \"cmd_buffer\" => _(\"Commands in buffer\"),\n-            \"host_states\" => _(\"Host status\"),\n-            \"service_states\" => _(\"Service status\"));\n-\n-    $options = array(\n-            \"active_host_check\" => \"nagios_active_host_execution.rrd\",\n-            \"active_host_last\" => \"nagios_active_host_last.rrd\",\n-            \"host_latency\" => \"nagios_active_host_latency.rrd\",\n-            \"active_service_check\" => \"nagios_active_service_execution.rrd\",\n-            \"active_service_last\" => \"nagios_active_service_last.rrd\",\n-            \"service_latency\" => \"nagios_active_service_latency.rrd\",\n-            \"cmd_buffer\" => \"nagios_cmd_buffer.rrd\",\n-            \"host_states\" => \"nagios_hosts_states.rrd\",\n-            \"service_states\" => \"nagios_services_states.rrd\");\n-\n-    $differentStats = array(\n-            \"nagios_active_host_execution.rrd\" => array(\"Min\", \"Max\", \"Average\"),\n-            \"nagios_active_host_last.rrd\" => array(\"Last_Min\", \"Last_5_Min\", \"Last_15_Min\", \"Last_Hour\"),\n-            \"nagios_active_host_latency.rrd\" => array(\"Min\", \"Max\", \"Average\"),\n-            \"nagios_active_service_execution.rrd\" => array(\"Min\", \"Max\", \"Average\"),\n-            \"nagios_active_service_last.rrd\" => array(\"Last_Min\", \"Last_5_Min\", \"Last_15_Min\", \"Last_Hour\"),\n-            \"nagios_active_service_latency.rrd\" => array(\"Min\", \"Max\", \"Average\"),\n-            \"nagios_cmd_buffer.rrd\" => array(\"In_Use\", \"Max_Used\", \"Total_Available\"),\n-            \"nagios_hosts_states.rrd\" => array(\"Up\", \"Down\", \"Unreach\"),\n-            \"nagios_services_states.rrd\" => array(\"Ok\", \"Warn\", \"Crit\", \"Unk\"));\n-\n-    /*\n- * Verify if start and end date\n- */\n-\n-    if (!isset($_GET[\"start\"])) {\n-        $start = time() - (60*60*24);\n-    } else {\n-        switch ($_GET[\"start\"]) {\n-            case \"last3hours\":\n-                $start = time() - (60*60*3);\n-                break;\n-            case \"today\":\n-                $start = time() - (60*60*24);\n-                break;\n-            case \"yesterday\":\n-                $start = time() - (60*60*48);\n-                break;\n-            case \"last4days\":\n-                $start = time() - (60*60*96);\n-                break;\n-            case \"lastweek\":\n-                $start = time() - (60*60*168);\n-                break;\n-            case \"lastmonth\":\n-                $start = time() - (60*60*24*30);\n-                break;\n-            case \"last6month\":\n-                $start = time() - (60*60*24*30*6);\n-                break;\n-            case \"lastyear\":\n-                $start = time() - (60*60*24*30*12);\n-                break;\n-        }\n-    }\n-\n-    /*\n- * Get end values\n- */\n-    if (!isset($_GET[\"end\"])) {\n-        $end = time();\n-    } else {\n-        $end = $_GET[\"end\"];\n-    }\n-\n-    /*\n- * Begin Command Line\n- */\n-    $command_line = \" graph - --start=\".$start.\" --end=\".$end;\n-\n-    if ($optGen[\"rrdtool_version\"] == \"1.3\") {\n-        if (isset($optGen[\"rrdtool_title_font\"]) && isset($optGen[\"rrdtool_title_fontsize\"])) {\n-            $command_line .= \" --font TITLE:\".$optGen[\"rrdtool_title_fontsize\"].\":\".$optGen[\"rrdtool_title_font\"].\" \";\n-        }\n-        if (isset($optGen[\"rrdtool_unit_font\"]) && isset($optGen[\"rrdtool_unit_fontsize\"])) {\n-            $command_line .= \" --font UNIT:\".$optGen[\"rrdtool_unit_fontsize\"].\":\".$optGen[\"rrdtool_unit_font\"].\" \";\n-        }\n-        if (isset($optGen[\"rrdtool_axis_font\"]) && isset($optGen[\"rrdtool_axis_fontsize\"])) {\n-            $command_line .= \" --font AXIS:\".$optGen[\"rrdtool_axis_fontsize\"].\":\".$optGen[\"rrdtool_axis_font\"].\" \";\n-        }\n-        if (isset($optGen[\"rrdtool_title_font\"]) && isset($optGen[\"rrdtool_title_fontsize\"])) {\n-            $command_line .= \" --font WATERMARK:\".$optGen[\"rrdtool_title_fontsize\"].\":\".$optGen[\"rrdtool_title_font\"].\" \";\n-        }\n-        if (isset($optGen[\"rrdtool_legend_title\"]) && isset($optGen[\"rrdtool_legend_fontsize\"])) {\n-            $command_line .= \" --font LEGEND:\".$optGen[\"rrdtool_legend_fontsize\"].\":\".$optGen[\"rrdtool_legend_title\"].\" \";\n-        }\n-    }\n-\n-      $command_line .= \" --color BACK#FFFFFF --color FRAME#FFFFFF --color SHADEA#e7e7e8 --color SHADEB#e7e7e8 \";\n-\n-    /*\n- * get all template infos\n- */\n-    $command_line .= \" --interlaced --imgformat PNG --width=400 --height=150 --title='\".$title[$_GET[\"key\"]].\"' --vertical-label='\".$_GET[\"key\"].\"' --slope-mode  --rigid --alt-autoscale-max \";\n-\n-    /*\n- * Init DS template For each curv\n- */\n-\n-    $colors = array(\"Min\"=>\"#88b917\", \"Max\"=>\"#e00b3d\", \"Average\"=>\"#00bfb3\",\n-                \"Last_Min\"=>\"#00bfb3\", \"Last_5_Min\"=>\"#88b917\", \"Last_15_Min\"=>\"#ff9a13\",\n-                \"Last_Hour\"=>\"#F91D05\", \"Up\"=>\"#88b917\", \"Down\"=>\"#e00b3d\",\n-                \"Unreach\"=>\"#818285\", \"Ok\"=>\"#88b917\", \"Warn\"=>\"#ff9a13\",\n-                \"Crit\"=>\"#F91D05\", \"Unk\"=>\"#bcbdc0\", \"In_Use\"=>\"#88b917\",\n-                \"Max_Used\"=>\"#F91D05\", \"Total_Available\"=>\"#00bfb3\");\n-    $metrics = $differentStats[$options[$_GET[\"key\"]]];\n-    $DBRESULT = $pearDBO->query(\"SELECT RRDdatabase_nagios_stats_path FROM config\");\n-    $nagios_stats = $DBRESULT->fetchRow();\n-    $nagios_stats_path = $nagios_stats['RRDdatabase_nagios_stats_path'];\n-\n-    $cpt = 1;\n-    foreach ($metrics as $key => $value) {\n-        $command_line .= \" DEF:v\".$cpt.\"=\".$nagios_stats_path.\"perfmon-\".$_GET[\"ns_id\"].\"/\".$options[$_GET[\"key\"]].\":\".$value.\":AVERAGE \";\n-        $cpt++;\n-    }\n-\n-    /*\n- * Add comment start and end time inf graph footer.\n- */\n-\n-    $rrd_time  = addslashes($CentreonGMT->getDate(\"Y\\/m\\/d G:i\", $start, $gmt));\n-    $rrd_time = str_replace(\":\", \"\\:\", $rrd_time);\n-    $rrd_time2 = addslashes($CentreonGMT->getDate(\"Y\\/m\\/d G:i\", $end, $gmt)) ;\n-    $rrd_time2 = str_replace(\":\", \"\\:\", $rrd_time2);\n-    $command_line .= \" COMMENT:\\\" From $rrd_time to $rrd_time2 \\\\c\\\" \";\n-\n-    /*\n- * Create Legende\n- */\n-    $cpt = 1;\n-    foreach ($metrics as $key => $tm) {\n-        $command_line .= \" LINE1:v\".$cpt.$colors[$tm].\":\\\"\".$tm.\"\\\"\";\n-        $command_line .= \" GPRINT:v\". ($cpt) .\":LAST:\\\"\\:%7.2lf%s\\l\\\"\";\n-        $cpt++;\n-    }\n-\n-    $command_line = \"$rrdtoolPath \".$command_line.\" 2>&1\";\n-\n-    /*\n- * Add Timezone for current user.\n- */\n-\n-    $timezone = $CentreonGMT->getMyTimezone();\n-    $timezone = trim($timezone);\n-    if (empty($timezone)) {\n-        $timezone = date_default_timezone_get();\n-    }\n-      \n-    $command_line = \"export TZ='\".$timezone.\"' ; \".$command_line;\n-\n-    $command_line = escape_command(\"$command_line\");\n-\n-    /*\n- * Debug\n- */\n-    //print $command_line;\n-    $fp = popen($command_line, 'r');\n-    if (isset($fp) && $fp) {\n-        $str ='';\n-        while (!feof($fp)) {\n-            $buffer = fgets($fp, 4096);\n-            $str = $str . $buffer ;\n-        }\n-        print $str;\n-    }\n-}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6041851eb8b8f9bf586618f9de9e3f23cfee7e4c",
            "date": "2025-01-14T14:16:27Z",
            "author_login": "kduret"
          },
          {
            "sha": "518e31f1f2749e61b72d1f26aed82f37d675a57a",
            "date": "2025-01-14T14:02:24Z",
            "author_login": "adr-mo"
          },
          {
            "sha": "02a93a796db7263ef554f1dee1f55f1e6e1d5a9a",
            "date": "2025-01-13T17:18:37Z",
            "author_login": "selfakiri"
          },
          {
            "sha": "2224f6423ee522a4e81719e12c70f7cb8563f480",
            "date": "2025-01-13T13:44:35Z",
            "author_login": "Noha-ElAbrouki"
          },
          {
            "sha": "70ab68fc8be574a61ba02778a807a7942b47cbf9",
            "date": "2025-01-13T10:22:16Z",
            "author_login": "kduret"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-77",
    "description": "The escape_command function in include/Administration/corePerformance/getStats.php in Centreon (formerly Merethis Centreon) 2.5.4 and earlier (fixed in Centreon 19.10.0) uses an incorrect regular expression, which allows remote authenticated users to execute arbitrary commands via shell metacharacters in the ns_id parameter.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2015-07-14T16:59:01.267",
    "last_modified": "2024-11-21T02:25:39.407",
    "fix_date": "2019-03-12T15:16:50Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/132607/Merethis-Centreon-2.5.4-SQL-Injection-Remote-Command-Execution.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/535961/100/0/threaded",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://forge.centreon.com/projects/centreon/repository/revisions/387dffdd051dbc7a234e1138a9d06f3089bb55bb",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/centreon/centreon/commit/a78c60aad6fd5af9b51a6d5de5d65560ea37a98a#diff-27550b563fa8d660b64bca871a219cb1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/132607/Merethis-Centreon-2.5.4-SQL-Injection-Remote-Command-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/535961/100/0/threaded",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://forge.centreon.com/projects/centreon/repository/revisions/387dffdd051dbc7a234e1138a9d06f3089bb55bb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/centreon/centreon/commit/a78c60aad6fd5af9b51a6d5de5d65560ea37a98a#diff-27550b563fa8d660b64bca871a219cb1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:35.791171",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "centreon",
    "owner": "centreon",
    "created_at": "2022-05-25T08:21:12Z",
    "updated_at": "2025-01-13T17:18:42Z",
    "pushed_at": "2025-01-14T13:20:00Z",
    "size": 635046,
    "stars": 108,
    "forks": 41,
    "open_issues": 209,
    "watchers": 108,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "22.04.x",
      "22.10.x",
      "23.04.x",
      "23.10.x",
      "24.04.x",
      "24.10.x"
    ],
    "languages": {
      "PHP": 22266098,
      "TypeScript": 5869839,
      "JavaScript": 889717,
      "Shell": 423983,
      "CSS": 212783,
      "Gherkin": 211415,
      "Perl": 174900,
      "XSLT": 124723,
      "HTML": 122838,
      "Smarty": 46951,
      "Python": 32748,
      "Makefile": 22579,
      "Lua": 21249,
      "MDX": 3220,
      "NewLisp": 621
    },
    "commit_activity": {
      "total_commits_last_year": 1688,
      "avg_commits_per_week": 32.46153846153846,
      "days_active_last_year": 231
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:22:24.210755"
  }
}