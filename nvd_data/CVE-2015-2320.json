{
  "cve_id": "CVE-2015-2320",
  "github_data": {
    "repository": "mono/mono",
    "fix_commit": "b371da6b2d68b4cdd0f21d6342af6c42794f998b",
    "related_commits": [
      "b371da6b2d68b4cdd0f21d6342af6c42794f998b",
      "b371da6b2d68b4cdd0f21d6342af6c42794f998b"
    ],
    "patch_url": "https://github.com/mono/mono/commit/b371da6b2d68b4cdd0f21d6342af6c42794f998b.patch",
    "fix_commit_details": {
      "sha": "b371da6b2d68b4cdd0f21d6342af6c42794f998b",
      "commit_date": "2015-03-06T15:34:59Z",
      "author": {
        "login": "spouliot",
        "type": "User",
        "stats": {
          "total_commits": 393,
          "average_weekly_commits": 0.31873479318734793,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 143
        }
      },
      "commit_message": {
        "title": "    Remove the client-side SSLv2 fallback.",
        "length": 158,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 169,
        "additions": 1,
        "deletions": 168
      },
      "files": [
        {
          "filename": "mcs/class/Mono.Security/Mono.Security.Protocol.Tls/RecordProtocol.cs",
          "status": "modified",
          "additions": 1,
          "deletions": 168,
          "patch": "@@ -519,87 +519,11 @@ public byte[] ReceiveRecord(Stream record)\n \n \t\tprivate byte[] ReadRecordBuffer (int contentType, Stream record)\n \t\t{\n-\t\t\tswitch (contentType)\n-\t\t\t{\n-\t\t\t\tcase 0x80:\n-\t\t\t\t\treturn this.ReadClientHelloV2(record);\n-\n-\t\t\t\tdefault:\n-\t\t\t\t\tif (!Enum.IsDefined(typeof(ContentType), (ContentType)contentType))\n-\t\t\t\t\t{\n-\t\t\t\t\t\tthrow new TlsException(AlertDescription.DecodeError);\n-\t\t\t\t\t}\n-\t\t\t\t\treturn this.ReadStandardRecordBuffer(record);\n-\t\t\t}\n-\t\t}\n-\n-\t\tprivate byte[] ReadClientHelloV2 (Stream record)\n-\t\t{\n-\t\t\tint msgLength = record.ReadByte ();\n-\t\t\t// process further only if the whole record is available\n-\t\t\tif (record.CanSeek && (msgLength + 1 > record.Length)) \n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\tbyte[] message = new byte[msgLength];\n-\t\t\trecord.Read (message, 0, msgLength);\n-\n-\t\t\tint msgType\t\t= message [0];\n-\t\t\tif (msgType != 1)\n-\t\t\t{\n-\t\t\t\tthrow new TlsException(AlertDescription.DecodeError);\n-\t\t\t}\n-\t\t\tint protocol = (message [1] << 8 | message [2]);\n-\t\t\tint cipherSpecLength = (message [3] << 8 | message [4]);\n-\t\t\tint sessionIdLength = (message [5] << 8 | message [6]);\n-\t\t\tint challengeLength = (message [7] << 8 | message [8]);\n-\t\t\tint length = (challengeLength > 32) ? 32 : challengeLength;\n-\n-\t\t\t// Read CipherSpecs\n-\t\t\tbyte[] cipherSpecV2 = new byte[cipherSpecLength];\n-\t\t\tBuffer.BlockCopy (message, 9, cipherSpecV2, 0, cipherSpecLength);\n-\n-\t\t\t// Read session ID\n-\t\t\tbyte[] sessionId = new byte[sessionIdLength];\n-\t\t\tBuffer.BlockCopy (message, 9 + cipherSpecLength, sessionId, 0, sessionIdLength);\n-\n-\t\t\t// Read challenge ID\n-\t\t\tbyte[] challenge = new byte[challengeLength];\n-\t\t\tBuffer.BlockCopy (message, 9 + cipherSpecLength + sessionIdLength, challenge, 0, challengeLength);\n-\t\t\n-\t\t\tif (challengeLength < 16 || cipherSpecLength == 0 || (cipherSpecLength % 3) != 0)\n+\t\t\tif (!Enum.IsDefined(typeof(ContentType), (ContentType)contentType))\n \t\t\t{\n \t\t\t\tthrow new TlsException(AlertDescription.DecodeError);\n \t\t\t}\n \n-\t\t\t// Updated the Session ID\n-\t\t\tif (sessionId.Length > 0)\n-\t\t\t{\n-\t\t\t\tthis.context.SessionId = sessionId;\n-\t\t\t}\n-\n-\t\t\t// Update the protocol version\n-\t\t\tthis.Context.ChangeProtocol((short)protocol);\n-\n-\t\t\t// Select the Cipher suite\n-\t\t\tthis.ProcessCipherSpecV2Buffer(this.Context.SecurityProtocol, cipherSpecV2);\n-\n-\t\t\t// Updated the Client Random\n-\t\t\tthis.context.ClientRandom = new byte [32]; // Always 32\n-\t\t\t// 1. if challenge is bigger than 32 bytes only use the last 32 bytes\n-\t\t\t// 2. right justify (0) challenge in ClientRandom if less than 32\n-\t\t\tBuffer.BlockCopy (challenge, challenge.Length - length, this.context.ClientRandom, 32 - length, length);\n-\n-\t\t\t// Set \n-\t\t\tthis.context.LastHandshakeMsg = HandshakeType.ClientHello;\n-\t\t\tthis.context.ProtocolNegotiated = true;\n-\n-\t\t\treturn message;\n-\t\t}\n-\n-\t\tprivate byte[] ReadStandardRecordBuffer (Stream record)\n-\t\t{\n \t\t\tbyte[] header = new byte[4];\n \t\t\tif (record.Read (header, 0, 4) != 4)\n \t\t\t\tthrow new TlsException (\"buffer underrun\");\n@@ -1037,96 +961,5 @@ private bool Compare (byte[] array1, byte[] array2)\n \t\t}\n \n \t\t#endregion\n-\n-\t\t#region CipherSpecV2 processing\n-\n-\t\tprivate void ProcessCipherSpecV2Buffer (SecurityProtocolType protocol, byte[] buffer)\n-\t\t{\n-\t\t\tTlsStream codes = new TlsStream(buffer);\n-\n-\t\t\tstring prefix = (protocol == SecurityProtocolType.Ssl3) ? \"SSL_\" : \"TLS_\";\n-\n-\t\t\twhile (codes.Position < codes.Length)\n-\t\t\t{\n-\t\t\t\tbyte check = codes.ReadByte();\n-\n-\t\t\t\tif (check == 0)\n-\t\t\t\t{\n-\t\t\t\t\t// SSL/TLS cipher spec\n-\t\t\t\t\tshort code = codes.ReadInt16();\t\n-\t\t\t\t\tint index = this.Context.SupportedCiphers.IndexOf(code);\n-\t\t\t\t\tif (index != -1)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tthis.Context.Negotiating.Cipher = this.Context.SupportedCiphers[index];\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\telse\n-\t\t\t\t{\n-\t\t\t\t\tbyte[] tmp = new byte[2];\n-\t\t\t\t\tcodes.Read(tmp, 0, tmp.Length);\n-\n-\t\t\t\t\tint tmpCode = ((check & 0xff) << 16) | ((tmp[0] & 0xff) << 8) | (tmp[1] & 0xff);\n-\t\t\t\t\tCipherSuite cipher = this.MapV2CipherCode(prefix, tmpCode);\n-\n-\t\t\t\t\tif (cipher != null)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tthis.Context.Negotiating.Cipher = cipher;\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif (this.Context.Negotiating == null)\n-\t\t\t{\n-\t\t\t\tthrow new TlsException(AlertDescription.InsuficientSecurity, \"Insuficient Security\");\n-\t\t\t}\n-\t\t}\n-\n-\t\tprivate CipherSuite MapV2CipherCode(string prefix, int code)\n-\t\t{\n-\t\t\ttry\n-\t\t\t{\n-\t\t\t\tswitch (code)\n-\t\t\t\t{\n-\t\t\t\t\tcase 65664:\n-\t\t\t\t\t\t// TLS_RC4_128_WITH_MD5\n-\t\t\t\t\t\treturn this.Context.SupportedCiphers[prefix + \"RSA_WITH_RC4_128_MD5\"];\n-\t\t\t\t\t\n-\t\t\t\t\tcase 131200:\n-\t\t\t\t\t\t// TLS_RC4_128_EXPORT40_WITH_MD5\n-\t\t\t\t\t\treturn this.Context.SupportedCiphers[prefix + \"RSA_EXPORT_WITH_RC4_40_MD5\"];\n-\t\t\t\t\t\n-\t\t\t\t\tcase 196736:\n-\t\t\t\t\t\t// TLS_RC2_CBC_128_CBC_WITH_MD5\n-\t\t\t\t\t\treturn this.Context.SupportedCiphers[prefix + \"RSA_EXPORT_WITH_RC2_CBC_40_MD5\"];\n-\t\t\t\t\t\n-\t\t\t\t\tcase 262272:\n-\t\t\t\t\t\t// TLS_RC2_CBC_128_CBC_EXPORT40_WITH_MD5\n-\t\t\t\t\t\treturn this.Context.SupportedCiphers[prefix + \"RSA_EXPORT_WITH_RC2_CBC_40_MD5\"];\n-\t\t\t\t\t\n-\t\t\t\t\tcase 327808:\n-\t\t\t\t\t\t// TLS_IDEA_128_CBC_WITH_MD5\n-\t\t\t\t\t\treturn null;\n-\t\t\t\t\t\n-\t\t\t\t\tcase 393280:\n-\t\t\t\t\t\t// TLS_DES_64_CBC_WITH_MD5\n-\t\t\t\t\t\treturn null;\n-\n-\t\t\t\t\tcase 458944:\n-\t\t\t\t\t\t// TLS_DES_192_EDE3_CBC_WITH_MD5\n-\t\t\t\t\t\treturn null;\n-\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch\n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n-\n-\t\t#endregion\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f53e9e151d92944cacab3e24ac359410c606df6",
            "date": "2024-08-27T16:49:28Z",
            "author_login": "jeffschwMSFT"
          },
          {
            "sha": "c6cdaadb54a1173484f1ada524306ddbf8c2e7d5",
            "date": "2024-05-13T16:28:40Z",
            "author_login": "lawn123"
          },
          {
            "sha": "8013edfca08633610b4da4b651fc2ac92370633d",
            "date": "2024-05-13T16:28:26Z",
            "author_login": "lawn123"
          },
          {
            "sha": "9da2bc275417c5a138316a4f8a48fabf47276c53",
            "date": "2024-05-13T16:28:13Z",
            "author_login": "lawn123"
          },
          {
            "sha": "c23c6370dcd6dcd614fafea5393aa10c8e3e5ad2",
            "date": "2024-05-13T16:28:01Z",
            "author_login": "lawn123"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-295",
    "description": "The TLS stack in Mono before 3.12.1 allows remote attackers to have unspecified impact via vectors related to client-side SSLv2 fallback.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-01-08T19:29:00.907",
    "last_modified": "2024-11-21T02:27:12.590",
    "fix_date": "2015-03-06T15:34:59Z"
  },
  "references": [
    {
      "url": "http://www.mono-project.com/news/2015/03/07/mono-tls-vulnerability/",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/03/17/9",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/73256",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.ubuntu.com/usn/USN-2547-1",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1202869",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/b371da6b2d68b4cdd0f21d6342af6c42794f998b",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2015/dsa-3202",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.mono-project.com/news/2015/03/07/mono-tls-vulnerability/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/03/17/9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/73256",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.ubuntu.com/usn/USN-2547-1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1202869",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mono/mono/commit/b371da6b2d68b4cdd0f21d6342af6c42794f998b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2015/dsa-3202",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.824262",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mono",
    "owner": "mono",
    "created_at": "2010-07-22T18:06:36Z",
    "updated_at": "2025-01-13T15:03:30Z",
    "pushed_at": "2024-08-27T16:49:28Z",
    "size": 579418,
    "stars": 11189,
    "forks": 3832,
    "open_issues": 2268,
    "watchers": 11189,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2017-02",
      "2017-04",
      "2017-06",
      "2017-08",
      "2017-10",
      "2017-12",
      "2018-02",
      "2018-04",
      "2018-06",
      "2018-08",
      "2018-10",
      "2018-12",
      "2019-02",
      "2019-04",
      "2019-06"
    ],
    "languages": {
      "C#": 277490592,
      "C": 20940123,
      "TSQL": 3587831,
      "PLpgSQL": 2626770,
      "ASP.NET": 2264375,
      "JavaScript": 1343261,
      "Makefile": 1258321,
      "Shell": 655414,
      "HTML": 617748,
      "M4": 318026,
      "Python": 277555,
      "C++": 252116,
      "Batchfile": 84271,
      "PLSQL": 70204,
      "Perl": 61255,
      "XSLT": 37762,
      "Ruby": 15052,
      "Groovy": 10705,
      "CSS": 10166,
      "Roff": 9064,
      "Assembly": 4183,
      "CMake": 3118,
      "DTrace": 2862,
      "Rich Text Format": 1720,
      "Visual Basic .NET": 1413,
      "Java": 738,
      "sed": 634,
      "Lua": 529,
      "RPC": 512,
      "PHP": 152,
      "Smalltalk": 14
    },
    "commit_activity": {
      "total_commits_last_year": 11,
      "avg_commits_per_week": 0.21153846153846154,
      "days_active_last_year": 5
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:55:49.486218"
  }
}