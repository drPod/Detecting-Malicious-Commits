{
  "cve_id": "CVE-2015-2951",
  "github_data": {
    "repository": "F21/jwt",
    "fix_commit": "a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
    "related_commits": [
      "a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
      "a327cf9052df8f9f97728ca0b5fa78a8231b79b6"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
      "commit_date": "2015-05-01T12:04:57Z",
      "author": {
        "login": "F21",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed security issue: JVN#06120222",
        "length": 34,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 17,
        "deletions": 6
      },
      "files": [
        {
          "filename": "JWT/JWT.php",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -25,7 +25,7 @@ public static function encode($payload, $key, $algo = 'HS256')\n         return implode('.', $segments);\n     }\n \n-    public static function decode($jwt, $key = null, $verify = true)\n+    public static function decode($jwt, $key = null, $algo = null)\n     {\n         $tks = explode('.', $jwt);\n \n@@ -45,20 +45,21 @@ public static function decode($jwt, $key = null, $verify = true)\n \n         $sig = JWT::urlsafeB64Decode($cryptob64);\n \n-        if ($verify) {\n+        if (isset($key)) {\n+\n             if (empty($header->alg)) {\n                 throw new DomainException('Empty algorithm');\n             }\n \n-            if (!JWT::verifySignature($sig, \"$headb64.$payloadb64\", $key, $header->alg)) {\n+            if (!JWT::verifySignature($sig, \"$headb64.$payloadb64\", $key, $algo)) {\n                 throw new UnexpectedValueException('Signature verification failed');\n             }\n         }\n \n         return $payload;\n     }\n \n-    private static function verifySignature($signature, $input, $key, $algo = 'HS256')\n+    private static function verifySignature($signature, $input, $key, $algo)\n     {\n         switch ($algo) {\n             case'HS256':\n@@ -80,7 +81,7 @@ private static function verifySignature($signature, $input, $key, $algo = 'HS256\n         }\n     }\n \n-    private static function sign($input, $key, $algo = 'HS256')\n+    private static function sign($input, $key, $algo)\n     {\n         switch ($algo) {\n "
        },
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -1,8 +1,18 @@\n JWT\n ===\n-\n A PHP library for encoding and decoding JSON Web Tokens.\n \n+**Important security notice**\n+\n+Thanks to Toshiharu Sugiyama!\n+\n+Please upgrade to 2.0 as soon as possible as previous versions are susceptible to verification bypass attacks if the same public key is used for signing when using asymmetric and symmetric algorithms.\n+\n+This is a release breaks backwards compatibility because you now need to pass in the decoding algorithm when decoding in order to verify the JWT.\n+\n+For more information see: JVN#06120222 at jpcert.or.jp\n+\n+\n Supported Algorithms\n --------------------\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d549135ed992e257d22a78828114d3335b7d498f",
            "date": "2017-03-10T05:42:00Z",
            "author_login": "F21"
          },
          {
            "sha": "19a38c374d42e0c0175b5a95d893b3841dc1cd46",
            "date": "2017-03-10T05:40:52Z",
            "author_login": "F21"
          },
          {
            "sha": "a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
            "date": "2015-05-01T12:04:57Z",
            "author_login": "F21"
          },
          {
            "sha": "632f5fcc2222067fae9e367de2be6989c1b9f14d",
            "date": "2014-03-13T11:31:53Z",
            "author_login": "F21"
          },
          {
            "sha": "c31f839ac9c612d00aa9570f44da57b96b759195",
            "date": "2013-05-22T10:56:40Z",
            "author_login": "F21"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "JWT.php in F21 JWT before 2.0 allows remote attackers to bypass signature verification via crafted tokens.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2015-06-05T10:59:05.380",
    "last_modified": "2024-11-21T02:28:22.980",
    "fix_date": "2015-05-01T12:04:57Z"
  },
  "references": [
    {
      "url": "http://jvn.jp/en/jp/JVN06120222/index.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://jvndb.jvn.jp/jvndb/JVNDB-2015-000073",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/75021",
      "source": "vultures@jpcert.or.jp",
      "tags": []
    },
    {
      "url": "https://github.com/F21/jwt/commit/a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
      "source": "vultures@jpcert.or.jp",
      "tags": []
    },
    {
      "url": "http://jvn.jp/en/jp/JVN06120222/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://jvndb.jvn.jp/jvndb/JVNDB-2015-000073",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/75021",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/F21/jwt/commit/a327cf9052df8f9f97728ca0b5fa78a8231b79b6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:35.779322",
    "processing_status": "enhanced"
  }
}