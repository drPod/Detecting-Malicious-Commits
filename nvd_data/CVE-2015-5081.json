{
  "cve_id": "CVE-2015-5081",
  "github_data": {
    "repository": "divio/django-cms",
    "fix_commit": "f77cbc607d6e2a62e63287d37ad320109a2cc78a",
    "related_commits": [
      "f77cbc607d6e2a62e63287d37ad320109a2cc78a",
      "f77cbc607d6e2a62e63287d37ad320109a2cc78a"
    ],
    "patch_url": "https://github.com/divio/django-cms/commit/f77cbc607d6e2a62e63287d37ad320109a2cc78a.patch",
    "fix_commit_details": {
      "sha": "f77cbc607d6e2a62e63287d37ad320109a2cc78a",
      "commit_date": "2015-06-27T19:58:41Z",
      "author": {
        "login": "yakky",
        "type": "User",
        "stats": {
          "total_commits": 1863,
          "average_weekly_commits": 2.2581818181818183,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 176
        }
      },
      "commit_message": {
        "title": "Merge pull request #4218 from divio/issues/merge_csrf_fix",
        "length": 80,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 63,
        "additions": 51,
        "deletions": 12
      },
      "files": [
        {
          "filename": "cms/admin/pageadmin.py",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -928,6 +928,7 @@ def change_template(self, request, object_id):\n             helpers.make_revision_with_plugins(page, request.user, message)\n         return HttpResponse(force_unicode(_(\"The template was successfully changed\")))\n \n+    @require_POST\n     @wrap_transaction\n     def move_page(self, request, page_id, extra_context=None):\n         \"\"\"\n@@ -1013,6 +1014,7 @@ def copy_language(self, request, page_id):\n                 helpers.make_revision_with_plugins(page, request.user, message)\n             return HttpResponse(\"ok\")\n \n+    @require_POST\n     @wrap_transaction\n     def copy_page(self, request, page_id, extra_context=None):\n         \"\"\"\n@@ -1046,6 +1048,7 @@ def copy_page(self, request, page_id, extra_context=None):\n         context.update(extra_context or {})\n         return HttpResponseRedirect('../../')\n \n+    @require_POST\n     @wrap_transaction\n     @create_revision()\n     def publish_page(self, request, page_id, language):\n@@ -1146,6 +1149,7 @@ def cleanup_history(self, page, publish=False):\n                         revision.delete()\n                         deleted.append(revision.pk)\n \n+    @require_POST\n     @wrap_transaction\n     def unpublish(self, request, page_id, language):\n         \"\"\"\n@@ -1181,6 +1185,7 @@ def unpublish(self, request, page_id, language):\n             path = \"%s?language=%s&page_id=%s\" % (path, request.GET.get('redirect_language'), request.GET.get('redirect_page_id'))\n         return HttpResponseRedirect(path)\n \n+    @require_POST\n     @wrap_transaction\n     def revert_page(self, request, page_id, language):\n         page = get_object_or_404(Page, id=page_id)\n@@ -1316,6 +1321,7 @@ def preview_page(self, request, object_id, language):\n             page.site.domain, url)\n         return HttpResponseRedirect(url)\n \n+    @require_POST\n     def change_innavigation(self, request, page_id):\n         \"\"\"\n         Switch the in_navigation of a page"
        },
        {
          "filename": "cms/static/cms/js/modules/cms.changelist.js",
          "status": "modified",
          "additions": 11,
          "deletions": 2,
          "patch": "@@ -180,8 +180,17 @@ $(document).ready(function () {\n \t\t\t\t// cancel if not confirmed\n \t\t\t\tif(!confirm(that.options.lang.publish.replace('\u00a7', $(this).text().toLowerCase()))) return false;\n \n-\t\t\t\t// publish page and update\n-\t\t\t\twindow.location.href = $(this).attr('href');\n+\t\t\t\t// send post request to prevent xss attacks\n+\t\t\t\t$.ajax({\n+\t\t\t\t\t'type': 'post',\n+\t\t\t\t\t'url': $(this).prop('href'),\n+\t\t\t\t\t'success': function () {\n+\t\t\t\t\t\tCMS.API.Helpers.reloadBrowser();\n+\t\t\t\t\t},\n+\t\t\t\t\t'error': function (request) {\n+\t\t\t\t\t\tthrow new Error(request);\n+\t\t\t\t\t}\n+\t\t\t\t});\n \t\t\t});\n \t\t},\n "
        },
        {
          "filename": "cms/static/cms/js/modules/cms.toolbar.js",
          "status": "modified",
          "additions": 21,
          "deletions": 1,
          "patch": "@@ -213,7 +213,27 @@ $(document).ready(function () {\n \n \t\t\t\t// in case of the publish button\n \t\t\t\tbtn.find('.cms_publish-page').bind(that.click, function (e) {\n-\t\t\t\t\tif(!confirm(that.config.lang.publish)) e.preventDefault();\n+\t\t\t\t\tif(!confirm(that.config.lang.publish)) {\n+\t\t\t\t\t\te.preventDefault();\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\n+\t\t\t\tbtn.find('.cms_btn-publish').bind(that.click, function (e) {\n+\t\t\t\t\te.preventDefault();\n+\t\t\t\t\t// send post request to prevent xss attacks\n+\t\t\t\t\t$.ajax({\n+\t\t\t\t\t\t'type': 'post',\n+\t\t\t\t\t\t'url': $(this).prop('href'),\n+\t\t\t\t\t\t'data': {\n+\t\t\t\t\t\t\t'csrfmiddlewaretoken': CMS.config.csrf\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t'success': function () {\n+\t\t\t\t\t\t\tCMS.API.Helpers.reloadBrowser();\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t'error': function (request) {\n+\t\t\t\t\t\t\tthrow new Error(request);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t});\n \t\t\t\t});\n \t\t\t});\n \t\t},"
        },
        {
          "filename": "cms/templates/admin/cms/page/tree/menu_item.html",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -30,8 +30,8 @@\n \t\t\t\t{% if lang in page.languages %}\n \t\t\t\t<div class=\"language-tooltip\" hidden=\"hidden\">\n \t\t\t\t\t{% trans \"Pick an action:\" %}\n-\t\t\t\t\t<a href=\"./{{ page.id }}/{{ lang }}/unpublish/?redirect_language={{ preview_language }}&redirect_page_id={{ request.GET.page_id }}\">{% trans \"Unpublish\" %}</a>\n-\t\t\t\t\t<a href=\"./{{ page.id }}/{{ lang }}/publish/?redirect_language={{ preview_language }}&redirect_page_id={{ request.GET.page_id }}\">{% trans \"Publish\" %}</a>\n+\t\t\t\t\t<a href=\"./{{ page.id }}/{{ lang }}/unpublish/?redirect_language={{ preview_language }}&redirect_page_id={{ request.GET.page_id }}\" class=\"js-ajax-submit\">{% trans \"Unpublish\" %}</a>\n+\t\t\t\t\t<a href=\"./{{ page.id }}/{{ lang }}/publish/?redirect_language={{ preview_language }}&redirect_page_id={{ request.GET.page_id }}\" class=\"js-ajax-submit\">{% trans \"Publish\" %}</a>\n \t\t\t\t</div>\n \t\t\t\t{% endif %}\n \t\t\t{% else %}"
        },
        {
          "filename": "cms/tests/admin.py",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -704,14 +704,14 @@ def test_change_publish_unpublish(self):\n         with self.login_user_context(permless):\n             request = self.get_request()\n             response = self.admin_class.publish_page(request, page.pk, \"en\")\n-            self.assertEqual(response.status_code, 403)\n+            self.assertEqual(response.status_code, 405)\n             page = self.reload(page)\n             self.assertFalse(page.is_published('en'))\n \n             request = self.get_request(post_data={'no': 'data'})\n             response = self.admin_class.publish_page(request, page.pk, \"en\")\n-            # Forbidden\n             self.assertEqual(response.status_code, 403)\n+            page = self.reload(page)\n             self.assertFalse(page.is_published('en'))\n \n         admin_user = self.get_admin()\n@@ -747,6 +747,10 @@ def test_change_innavigation(self):\n         with self.login_user_context(permless):\n             request = self.get_request()\n             response = self.admin_class.change_innavigation(request, page.pk)\n+            self.assertEqual(response.status_code, 405)\n+        with self.login_user_context(permless):\n+            request = self.get_request(post_data={'no': 'data'})\n+            response = self.admin_class.change_innavigation(request, page.pk)\n             self.assertEqual(response.status_code, 403)\n         with self.login_user_context(permless):\n             request = self.get_request(post_data={'no': 'data'})\n@@ -806,7 +810,7 @@ def test_revert_page_redirects(self):\n         admin_user = self.get_admin()\n         self.page.publish(\"en\")  # Ensure public copy exists before reverting\n         with self.login_user_context(admin_user):\n-            response = self.client.get(admin_reverse('cms_page_revert_page', args=(self.page.pk, 'en')))\n+            response = self.client.post(admin_reverse('cms_page_revert_page', args=(self.page.pk, 'en')))\n             self.assertEqual(response.status_code, 302)\n             url = response['Location']\n             self.assertTrue(url.endswith('?%s' % get_cms_setting('CMS_TOOLBAR_URL__EDIT_OFF')))"
        },
        {
          "filename": "cms/tests/publisher.py",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -342,7 +342,7 @@ def test_publish_home(self):\n         self.assertEqual(Page.objects.all().count(), 1)\n         superuser = self.get_superuser()\n         with self.login_user_context(superuser):\n-            response = self.client.get(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n+            response = self.client.post(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n             self.assertEqual(response.status_code, 302)\n             self.assertEqual(response['Location'], \"http://testserver/en/?%s\" % get_cms_setting('CMS_TOOLBAR_URL__EDIT_OFF'))\n \n@@ -381,7 +381,7 @@ def test_publish_admin(self):\n         page = self.create_page(\"test_admin\", published=False)\n         superuser = self.get_superuser()\n         with self.login_user_context(superuser):\n-            response = self.client.get(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n+            response = self.client.post(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n             self.assertEqual(response.status_code, 302)\n         page = Page.objects.get(pk=page.pk)\n \n@@ -396,7 +396,7 @@ def test_publish_wrong_lang(self):\n             ):\n             with self.login_user_context(superuser):\n                 with force_language('de'):\n-                    response = self.client.get(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n+                    response = self.client.post(admin_reverse(\"cms_page_publish_page\", args=[page.pk, 'en']))\n         self.assertEqual(response.status_code, 302)\n         page = Page.objects.get(pk=page.pk)\n "
        },
        {
          "filename": "cms/tests/reversion_tests.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -246,7 +246,7 @@ def test_publish_limits(self):\n                 self.assertEqual(Revision.objects.all().count(), 5)\n                 for x in range(10):\n                     publish_url = URL_CMS_PAGE + \"%s/en/publish/\" % page_pk\n-                    response = self.client.get(publish_url)\n+                    response = self.client.post(publish_url)\n                     self.assertEqual(response.status_code, 302)\n                 self.assertEqual(Revision.objects.all().count(), 4)\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec268c7b2d265b4a8d06a2a9027f41bbe54c27be",
            "date": "2025-01-07T06:49:24Z",
            "author_login": "fsbraun"
          },
          {
            "sha": "4361f0a7553dbd0c3d0aefc72def00fa0531dbb5",
            "date": "2024-12-13T13:13:22Z",
            "author_login": "fsbraun"
          },
          {
            "sha": "840a909991d5cd94eb8353cf7305612d1dec99c1",
            "date": "2024-12-13T07:32:56Z",
            "author_login": "fsbraun"
          },
          {
            "sha": "f2c367ddc7b1f5a761084be062aa353b35b65a78",
            "date": "2024-12-13T06:33:40Z",
            "author_login": "fsbraun"
          },
          {
            "sha": "3f8fcb5fb63b154ed38377c84908e00ec9535f4e",
            "date": "2024-12-09T16:43:55Z",
            "author_login": "fsbraun"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-352",
    "description": "Cross-site request forgery (CSRF) vulnerability in django CMS before 3.0.14, 3.1.x before 3.1.1 allows remote attackers to manipulate privileged users into performing unknown actions via unspecified vectors.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-08-18T18:29:01.063",
    "last_modified": "2024-11-21T02:32:17.993",
    "fix_date": "2015-06-27T19:58:41Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/06/28/1",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/divio/django-cms/commit/f77cbc607d6e2a62e63287d37ad320109a2cc78a",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.django-cms.org/en/blog/2015/06/27/311-3014-release/",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2015/06/28/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/divio/django-cms/commit/f77cbc607d6e2a62e63287d37ad320109a2cc78a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.django-cms.org/en/blog/2015/06/27/311-3014-release/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:05.107395",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "django-cms",
    "owner": "divio",
    "created_at": "2009-03-05T10:14:18Z",
    "updated_at": "2025-01-14T14:35:00Z",
    "pushed_at": "2025-01-10T10:06:33Z",
    "size": 108391,
    "stars": 10298,
    "forks": 3127,
    "open_issues": 132,
    "watchers": 10298,
    "has_security_policy": false,
    "default_branch": "develop-4",
    "protected_branches": [
      "develop",
      "develop-4",
      "release/build",
      "release/0.10.x",
      "release/2.1.x",
      "release/2.2.x",
      "release/2.3.x",
      "release/2.4.x",
      "release/3.0.x",
      "release/3.1.x",
      "release/3.2.x",
      "release/3.3.x",
      "release/3.4.x",
      "release/3.5.x",
      "release/3.6.x",
      "release/3.7.x",
      "release/3.8.x",
      "release/3.9.x",
      "release/3.10.x",
      "release/3.11.x",
      "release/4.0.x",
      "release/4.0.0.x",
      "release/4.0.1.x",
      "release/4.1.x"
    ],
    "languages": {
      "Python": 2478484,
      "JavaScript": 1235198,
      "HTML": 209703,
      "SCSS": 154613,
      "Shell": 21712
    },
    "commit_activity": {
      "total_commits_last_year": 227,
      "avg_commits_per_week": 4.365384615384615,
      "days_active_last_year": 108
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T21:35:55.167036"
  }
}