{
  "cve_id": "CVE-2015-6781",
  "github_data": {
    "repository": "googlei18n/sfntly",
    "fix_commit": "de776d4ef06ca29c240de3444348894f032b03ff",
    "related_commits": [
      "de776d4ef06ca29c240de3444348894f032b03ff",
      "de776d4ef06ca29c240de3444348894f032b03ff"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "de776d4ef06ca29c240de3444348894f032b03ff",
      "commit_date": "2015-09-23T23:06:28Z",
      "author": {
        "login": "leizleiz",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Check for integer overflow in sfntly::FontData::Bound().",
        "length": 124,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 90,
        "additions": 60,
        "deletions": 30
      },
      "files": [
        {
          "filename": "cpp/src/sfntly/data/font_data.cc",
          "status": "modified",
          "additions": 27,
          "deletions": 17,
          "patch": "@@ -14,33 +14,43 @@\n  * limitations under the License.\n  */\n \n-#include <limits.h>\n+#include \"sfntly/data/font_data.h\"\n+\n #include <algorithm>\n #include <functional>\n+#include <limits>\n \n-#include \"sfntly/data/font_data.h\"\n+#include \"sfntly/port/logging.h\"\n \n namespace sfntly {\n \n int32_t FontData::Size() const {\n   return std::min<int32_t>(array_->Size() - bound_offset_, bound_length_);\n }\n \n-bool FontData::Bound(int32_t offset, int32_t length) {\n-  if (offset + length > Size() || offset < 0 || length < 0)\n-    return false;\n-\n-  bound_offset_ += offset;\n+void FontData::Bound(int32_t offset, int32_t length) {\n+  // Inputs should not be negative.\n+  CHECK(offset >= 0);\n+  CHECK(length >= 0);\n+\n+  // Check to make sure |bound_offset_| will not overflow.\n+  CHECK(bound_offset_ <= std::numeric_limits<int32_t>::max() - offset);\n+  const int32_t new_offset = bound_offset_ + offset;\n+\n+  if (length == GROWABLE_SIZE) {\n+    // When |length| has the special value of GROWABLE_SIZE, it means the size\n+    // should not have any artificial limits, thus it is just the underlying\n+    // |array_|'s size. Just make sure |new_offset| is still within bounds.\n+    CHECK(new_offset <= array_->Size());\n+  } else {\n+    // When |length| has any other value, |new_offset| + |length| points to the\n+    // end of the array. Make sure that is within bounds, but use subtraction to\n+    // avoid an integer overflow.\n+    CHECK(new_offset <= array_->Size() - length);\n+  }\n+\n+  bound_offset_ = new_offset;\n   bound_length_ = length;\n-  return true;\n-}\n-\n-bool FontData::Bound(int32_t offset) {\n-if (offset > Size() || offset < 0)\n-    return false;\n-\n-  bound_offset_ += offset;\n-  return true;\n }\n \n int32_t FontData::Length() const {\n@@ -60,7 +70,7 @@ FontData::FontData(FontData* data, int32_t offset) {\n   Init(data->array_);\n   Bound(data->bound_offset_ + offset,\n         (data->bound_length_ == GROWABLE_SIZE)\n-            ? GROWABLE_SIZE : data->bound_length_ - offset);\n+        ? GROWABLE_SIZE : data->bound_length_ - offset);\n }\n \n FontData::~FontData() {}"
        },
        {
          "filename": "cpp/src/sfntly/data/font_data.h",
          "status": "modified",
          "additions": 2,
          "deletions": 13,
          "patch": "@@ -19,11 +19,9 @@\n \n #include <limits.h>\n \n-#include <vector>\n-\n-#include \"sfntly/port/type.h\"\n #include \"sfntly/data/byte_array.h\"\n #include \"sfntly/port/refcount.h\"\n+#include \"sfntly/port/type.h\"\n \n namespace sfntly {\n \n@@ -60,16 +58,7 @@ class FontData : virtual public RefCount {\n   // visible within the bounds set.\n   // @param offset the start of the new bounds\n   // @param length the number of bytes in the bounded array\n-  // @return true if the bounding range was successful; false otherwise\n-  virtual bool Bound(int32_t offset, int32_t length);\n-\n-  // Sets limits on the size of the FontData. This is a offset bound only so if\n-  // the FontData is writable and growable then there is no limit to that growth\n-  // from the bounding operation.\n-  // @param offset the start of the new bounds which must be within the current\n-  //        size of the FontData\n-  // @return true if the bounding range was successful; false otherwise\n-  virtual bool Bound(int32_t offset);\n+  virtual void Bound(int32_t offset, int32_t length);\n \n   // Makes a slice of this FontData. The returned slice will share the data with\n   // the original <code>FontData</code>."
        },
        {
          "filename": "cpp/src/sfntly/port/logging.h",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2015 Google Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef SFNTLY_CPP_SRC_SFNTLY_PORT_LOGGING_H_\n+#define SFNTLY_CPP_SRC_SFNTLY_PORT_LOGGING_H_\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+// Cheap base/logging.h knock off.\n+\n+#define CHECK(expr) \\\n+    if (!(expr)) { \\\n+      printf(\"CHECK failed\\n\"); \\\n+      abort(); \\\n+    }\n+\n+#endif  // SFNTLY_CPP_SRC_SFNTLY_PORT_LOGGING_H_"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a56f5782f209771aa226063757d57e6b5c948478",
            "date": "2022-01-27T20:02:21Z",
            "author_login": "behdad"
          },
          {
            "sha": "1e7adf313bd9c488a70015f8df8782f7c65e9ce7",
            "date": "2019-09-16T16:35:31Z",
            "author_login": "anthrotype"
          },
          {
            "sha": "018113eea46bb63865d7311371b5eb72433992f3",
            "date": "2019-09-16T15:52:48Z",
            "author_login": "jfkthame"
          },
          {
            "sha": "48312c98332a4608572459dc71584c2a9dbb1792",
            "date": "2019-07-18T17:52:57Z",
            "author_login": "leizleiz"
          },
          {
            "sha": "7ea31f13c3ad1c830cca5cac34b0fa36d03c7705",
            "date": "2019-07-04T04:25:59Z",
            "author_login": "hhb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-189",
    "description": "Integer overflow in the FontData::Bound function in data/font_data.cc in Google sfntly, as used in Google Chrome before 47.0.2526.73, allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted offset or length value within font data in an SFNT container.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2015-12-06T01:59:18.633",
    "last_modified": "2024-11-21T02:35:39.237",
    "fix_date": "2015-09-23T23:06:28Z"
  },
  "references": [
    {
      "url": "http://googlechromereleases.blogspot.com/2015/12/stable-channel-update.html",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2015-12/msg00016.html",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2015-12/msg00017.html",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2015/dsa-3415",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/78416",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1034298",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "https://code.google.com/p/chromium/issues/detail?id=497302",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "https://codereview.chromium.org/1367323002/",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "https://github.com/googlei18n/sfntly/commit/de776d4ef06ca29c240de3444348894f032b03ff",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/201603-09",
      "source": "chrome-cve-admin@google.com",
      "tags": []
    },
    {
      "url": "http://googlechromereleases.blogspot.com/2015/12/stable-channel-update.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2015-12/msg00016.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2015-12/msg00017.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2015/dsa-3415",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/78416",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1034298",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://code.google.com/p/chromium/issues/detail?id=497302",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://codereview.chromium.org/1367323002/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/googlei18n/sfntly/commit/de776d4ef06ca29c240de3444348894f032b03ff",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/201603-09",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:37.917406",
    "processing_status": "enhanced"
  }
}