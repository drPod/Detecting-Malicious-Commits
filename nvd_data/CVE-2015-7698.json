{
  "cve_id": "CVE-2015-7698",
  "github_data": {
    "repository": "icewind1991/SMB",
    "fix_commit": "33ab10cc4d5c3e48cba3a074b5f9fc67590cd032",
    "related_commits": [
      "33ab10cc4d5c3e48cba3a074b5f9fc67590cd032",
      "33ab10cc4d5c3e48cba3a074b5f9fc67590cd032"
    ],
    "patch_url": "https://github.com/icewind1991/SMB/commit/33ab10cc4d5c3e48cba3a074b5f9fc67590cd032.patch",
    "fix_commit_details": {
      "sha": "33ab10cc4d5c3e48cba3a074b5f9fc67590cd032",
      "commit_date": "2015-08-13T14:17:46Z",
      "author": {
        "login": "icewind1991",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "improve support for workgroups/domains",
        "length": 38,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 62,
        "additions": 43,
        "deletions": 19
      },
      "files": [
        {
          "filename": "src/NativeServer.php",
          "status": "modified",
          "additions": 1,
          "deletions": 6,
          "patch": "@@ -24,12 +24,7 @@ public function __construct($host, $user, $password) {\n \t}\n \n \tprotected function connect() {\n-\t\t$user = $this->getUser();\n-\t\t$workgroup = null;\n-\t\tif (strpos($user, '/')) {\n-\t\t\tlist($workgroup, $user) = explode('/', $user);\n-\t\t}\n-\t\t$this->state->init($workgroup, $user, $this->getPassword());\n+\t\t$this->state->init($this->getWorkgroup(), $this->getUser(), $this->getPassword());\n \t}\n \n \t/**"
        },
        {
          "filename": "src/NativeShare.php",
          "status": "modified",
          "additions": 1,
          "deletions": 9,
          "patch": "@@ -43,15 +43,7 @@ protected function connect() {\n \t\t\treturn;\n \t\t}\n \n-\t\t$user = $this->server->getUser();\n-\t\tif (strpos($user, '/')) {\n-\t\t\tlist($workgroup, $user) = explode('/', $user);\n-\t\t} elseif (strpos($user, '\\\\')) {\n-\t\t\tlist($workgroup, $user) = explode('\\\\', $user);\n-\t\t} else {\n-\t\t\t$workgroup = null;\n-\t\t}\n-\t\t$this->state->init($workgroup, $user, $this->server->getPassword());\n+\t\t$this->state->init($this->server->getWorkgroup(), $this->server->getUser(), $this->server->getPassword());\n \t}\n \n \t/**"
        },
        {
          "filename": "src/Server.php",
          "status": "modified",
          "additions": 32,
          "deletions": 1,
          "patch": "@@ -29,6 +29,11 @@ class Server {\n \t */\n \tprotected $password;\n \n+\t/**\n+\t * @var string $workgroup\n+\t */\n+\tprotected $workgroup;\n+\n \t/**\n \t * Check if the smbclient php extension is available\n \t *\n@@ -45,10 +50,28 @@ public static function NativeAvailable() {\n \t */\n \tpublic function __construct($host, $user, $password) {\n \t\t$this->host = $host;\n+\t\tlist($workgroup, $user) = $this->splitUser($user);\n \t\t$this->user = $user;\n+\t\t$this->workgroup = $workgroup;\n \t\t$this->password = $password;\n \t}\n \n+\t/**\n+\t * Split workgroup from username\n+\t *\n+\t * @param $user\n+\t * @return string[] [$workgroup, $user]\n+\t */\n+\tpublic function splitUser($user) {\n+\t\tif (strpos($user, '/')) {\n+\t\t\treturn explode('/', $user, 2);\n+\t\t} elseif (strpos($user, '\\\\')) {\n+\t\t\treturn explode('\\\\', $user);\n+\t\t} else {\n+\t\t\treturn [null, $user];\n+\t\t}\n+\t}\n+\n \t/**\n \t * @return string\n \t */\n@@ -77,14 +100,22 @@ public function getHost() {\n \t\treturn $this->host;\n \t}\n \n+\t/**\n+\t * @return string\n+\t */\n+\tpublic function getWorkgroup() {\n+\t\treturn $this->workgroup;\n+\t}\n+\n \t/**\n \t * @return \\Icewind\\SMB\\IShare[]\n \t *\n \t * @throws \\Icewind\\SMB\\Exception\\AuthenticationException\n \t * @throws \\Icewind\\SMB\\Exception\\InvalidHostException\n \t */\n \tpublic function listShares() {\n-\t\t$command = Server::CLIENT . ' --authentication-file=/proc/self/fd/3' .\n+\t\t$workgroupArgument = ($this->workgroup) ? ' -W ' . escapeshellarg($this->workgroup) : '';\n+\t\t$command = Server::CLIENT . $workgroupArgument . ' --authentication-file=/proc/self/fd/3' .\n \t\t\t' -gL ' . escapeshellarg($this->getHost());\n \t\t$connection = new RawConnection($command);\n \t\t$connection->writeAuthentication($this->getUser(), $this->getPassword());"
        },
        {
          "filename": "src/Share.php",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -57,8 +57,10 @@ protected function connect() {\n \t\tif ($this->connection and $this->connection->isValid()) {\n \t\t\treturn;\n \t\t}\n-\t\t$command = sprintf('%s --authentication-file=/proc/self/fd/3 //%s/%s',\n+\t\t$workgroupArgument = ($this->server->getWorkgroup()) ? ' -W ' . escapeshellarg($this->server->getWorkgroup()) : '';\n+\t\t$command = sprintf('%s %s --authentication-file=/proc/self/fd/3 //%s/%s',\n \t\t\tServer::CLIENT,\n+\t\t\t$workgroupArgument,\n \t\t\t$this->server->getHost(),\n \t\t\t$this->name\n \t\t);\n@@ -260,8 +262,10 @@ public function read($source) {\n \t\t$source = str_replace('\\'', '\\'\"\\'\"\\'', $source);\n \t\t// since returned stream is closed by the caller we need to create a new instance\n \t\t// since we can't re-use the same file descriptor over multiple calls\n-\t\t$command = sprintf('%s --authentication-file=/proc/self/fd/3 //%s/%s -c \\'get %s /proc/self/fd/5\\'',\n+\t\t$workgroupArgument = ($this->server->getWorkgroup()) ? ' -W ' . escapeshellarg($this->server->getWorkgroup()) : '';\n+\t\t$command = sprintf('%s %s --authentication-file=/proc/self/fd/3 //%s/%s -c \\'get %s /proc/self/fd/5\\'',\n \t\t\tServer::CLIENT,\n+\t\t\t$workgroupArgument,\n \t\t\t$this->server->getHost(),\n \t\t\t$this->name,\n \t\t\t$source\n@@ -288,8 +292,10 @@ public function write($target) {\n \t\t$target = str_replace('\\'', '\\'\"\\'\"\\'', $target);\n \t\t// since returned stream is closed by the caller we need to create a new instance\n \t\t// since we can't re-use the same file descriptor over multiple calls\n-\t\t$command = sprintf('%s --authentication-file=/proc/self/fd/3 //%s/%s -c \\'put /proc/self/fd/4 %s\\'',\n+\t\t$workgroupArgument = ($this->server->getWorkgroup()) ? ' -W ' . escapeshellarg($this->server->getWorkgroup()) : '';\n+\t\t$command = sprintf('%s %s --authentication-file=/proc/self/fd/3 //%s/%s -c \\'put /proc/self/fd/4 %s\\'',\n \t\t\tServer::CLIENT,\n+\t\t\t$workgroupArgument,\n \t\t\t$this->server->getHost(),\n \t\t\t$this->name,\n \t\t\t$target"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e6904cbe75f678335092f4861c60c656b1a99e84",
            "date": "2024-11-11T14:08:34Z",
            "author_login": "icewind1991"
          },
          {
            "sha": "81610a3bbf6b508c353ea57e3863b57f5ff3182e",
            "date": "2024-11-11T14:00:42Z",
            "author_login": "icewind1991"
          },
          {
            "sha": "5f5e92445384427c2657d1ed3b4fa03273449803",
            "date": "2024-11-08T18:26:51Z",
            "author_login": "icewind1991"
          },
          {
            "sha": "5362b670f81523e4ac665b167108356e32019bc7",
            "date": "2024-11-08T17:47:10Z",
            "author_login": "icewind1991"
          },
          {
            "sha": "8a6c8cd17c07c6fc68219a5ce8f002683b478a2d",
            "date": "2024-11-08T11:06:31Z",
            "author_login": "nickvergessen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-78",
    "description": "icewind1991 SMB before 1.0.3 allows remote authenticated users to execute arbitrary SMB commands via shell metacharacters in the user argument in the (1) listShares function in Server.php or the (2) connect or (3) read function in Share.php.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2015-10-21T18:59:06.410",
    "last_modified": "2024-11-21T02:37:14.417",
    "fix_date": "2015-08-13T14:17:46Z"
  },
  "references": [
    {
      "url": "https://github.com/icewind1991/SMB/commit/33ab10cc4d5c3e48cba3a074b5f9fc67590cd032",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://owncloud.org/security/advisory/?id=oc-sa-2015-017",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/icewind1991/SMB/commit/33ab10cc4d5c3e48cba3a074b5f9fc67590cd032",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://owncloud.org/security/advisory/?id=oc-sa-2015-017",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:37.907092",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "SMB",
    "owner": "icewind1991",
    "created_at": "2012-12-09T23:25:28Z",
    "updated_at": "2025-01-08T21:31:56Z",
    "pushed_at": "2024-11-11T14:12:49Z",
    "size": 547,
    "stars": 137,
    "forks": 53,
    "open_issues": 35,
    "watchers": 137,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 160895,
      "Shell": 1512,
      "Makefile": 226
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:51:13.329745"
  }
}