{
  "cve_id": "CVE-2015-8844",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
    "related_commits": [
      "d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "d2b9d2a5ad5ef04ff978c9923d19730cb05efd55"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "commit_date": "2015-11-19T04:44:44Z",
      "author": {
        "login": "mikey",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "powerpc/tm: Block signal return setting invalid MSR state",
        "length": 651,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 19,
        "additions": 14,
        "deletions": 5
      },
      "files": [
        {
          "filename": "arch/powerpc/include/asm/reg.h",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -108,6 +108,7 @@\n #define MSR_TS_T\t__MASK(MSR_TS_T_LG)\t/*  Transaction Transactional */\n #define MSR_TS_MASK\t(MSR_TS_T | MSR_TS_S)   /* Transaction State bits */\n #define MSR_TM_ACTIVE(x) (((x) & MSR_TS_MASK) != 0) /* Transaction active? */\n+#define MSR_TM_RESV(x) (((x) & MSR_TS_MASK) == MSR_TS_MASK) /* Reserved */\n #define MSR_TM_TRANSACTIONAL(x)\t(((x) & MSR_TS_MASK) == MSR_TS_T)\n #define MSR_TM_SUSPENDED(x)\t(((x) & MSR_TS_MASK) == MSR_TS_S)\n "
        },
        {
          "filename": "arch/powerpc/kernel/signal_32.c",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -875,6 +875,15 @@ static long restore_tm_user_regs(struct pt_regs *regs,\n \t\treturn 1;\n #endif /* CONFIG_SPE */\n \n+\t/* Get the top half of the MSR from the user context */\n+\tif (__get_user(msr_hi, &tm_sr->mc_gregs[PT_MSR]))\n+\t\treturn 1;\n+\tmsr_hi <<= 32;\n+\t/* If TM bits are set to the reserved value, it's an invalid context */\n+\tif (MSR_TM_RESV(msr_hi))\n+\t\treturn 1;\n+\t/* Pull in the MSR TM bits from the user context */\n+\tregs->msr = (regs->msr & ~MSR_TS_MASK) | (msr_hi & MSR_TS_MASK);\n \t/* Now, recheckpoint.  This loads up all of the checkpointed (older)\n \t * registers, including FP and V[S]Rs.  After recheckpointing, the\n \t * transactional versions should be loaded.\n@@ -884,11 +893,6 @@ static long restore_tm_user_regs(struct pt_regs *regs,\n \tcurrent->thread.tm_texasr |= TEXASR_FS;\n \t/* This loads the checkpointed FP/VEC state, if used */\n \ttm_recheckpoint(&current->thread, msr);\n-\t/* Get the top half of the MSR */\n-\tif (__get_user(msr_hi, &tm_sr->mc_gregs[PT_MSR]))\n-\t\treturn 1;\n-\t/* Pull in MSR TM from user context */\n-\tregs->msr = (regs->msr & ~MSR_TS_MASK) | ((msr_hi<<32) & MSR_TS_MASK);\n \n \t/* This loads the speculative FP/VEC state, if used */\n \tif (msr & MSR_FP) {"
        },
        {
          "filename": "arch/powerpc/kernel/signal_64.c",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -438,6 +438,10 @@ static long restore_tm_sigcontexts(struct pt_regs *regs,\n \n \t/* get MSR separately, transfer the LE bit if doing signal return */\n \terr |= __get_user(msr, &sc->gp_regs[PT_MSR]);\n+\t/* Don't allow reserved mode. */\n+\tif (MSR_TM_RESV(msr))\n+\t\treturn -EINVAL;\n+\n \t/* pull in MSR TM from user context */\n \tregs->msr = (regs->msr & ~MSR_TS_MASK) | (msr & MSR_TS_MASK);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "The signal implementation in the Linux kernel before 4.3.5 on powerpc platforms does not check for an MSR with both the S and T bits set, which allows local users to cause a denial of service (TM Bad Thing exception and panic) via a crafted application.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-04-27T17:59:04.147",
    "last_modified": "2024-11-21T02:39:18.480",
    "fix_date": "2015-11-19T04:44:44Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2574.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2584.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.3.5",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/04/13/1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1035594",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1326540",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2574.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2584.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.3.5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/04/13/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1035594",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1326540",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:42.530760",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}