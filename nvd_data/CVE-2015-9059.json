{
  "cve_id": "CVE-2015-9059",
  "github_data": {
    "repository": "npat-efault/picocom",
    "fix_commit": "1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
    "related_commits": [
      "1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
      "1ebc60b20fbe9a02436d5cbbf8951714e749ddb1"
    ],
    "patch_url": "https://github.com/npat-efault/picocom/commit/1ebc60b20fbe9a02436d5cbbf8951714e749ddb1.patch",
    "fix_commit_details": {
      "sha": "1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
      "commit_date": "2015-08-18T11:40:48Z",
      "author": {
        "login": "npat-efault",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Do not use \"/bin/sh\" to run external commands.",
        "length": 435,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 67,
        "additions": 35,
        "deletions": 32
      },
      "files": [
        {
          "filename": "Makefile",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -33,12 +33,12 @@ CPPFLAGS += -DSEND_RECEIVE_HISTFILE=\\\"$(SEND_RECEIVE_HISTFILE)\\\" \\\n picocom : linenoise-1.0/linenoise.o\n linenoise-1.0/linenoise.o : linenoise-1.0/linenoise.c linenoise-1.0/linenoise.h\n \n-\n-picocom : picocom.o term.o\n+picocom : picocom.o term.o split.o\n #\t$(LD) $(LDFLAGS) -o $@ $+ $(LDLIBS)\n \n picocom.o : picocom.c term.h\n term.o : term.c term.h\n+split.o : split.c split.h\n \n \n doc : picocom.8 picocom.8.html picocom.8.ps"
        },
        {
          "filename": "picocom.c",
          "status": "modified",
          "additions": 33,
          "deletions": 30,
          "patch": "@@ -48,6 +48,7 @@\n #define _GNU_SOURCE\n #include <getopt.h>\n \n+#include \"split.h\"\n #include \"term.h\"\n #ifdef LINENOISE\n #include \"linenoise-1.0/linenoise.h\"\n@@ -721,6 +722,9 @@ show_status (int dtr_up)\n \n /**********************************************************************/\n \n+#define RUNCMD_ARGS_MAX 32\n+#define RUNCMD_EXEC_FAIL 126\n+\n void\n establish_child_signal_handlers (void)\n {\n@@ -735,10 +739,8 @@ establish_child_signal_handlers (void)\n \tsigaction (SIGTERM, &dfl_action, NULL);\n }\n \n-#define EXEC \"exec \"\n-\n int\n-run_cmd(int fd, ...)\n+run_cmd(int fd, const char *cmd, const char *args_extra)\n {\n \tpid_t pid;\n \tsigset_t sigm, sigm_old;\n@@ -781,8 +783,10 @@ run_cmd(int fd, ...)\n \t} else {\n \t\t/* child: external program */\n \t\tlong fl;\n-\t\tchar cmd[512];\n-\n+\t\tint argc;\n+\t\tchar *argv[RUNCMD_ARGS_MAX + 1];\n+\t\tint r;\n+\t\t\t\n \t\t/* unmanage terminal, and reset it to canonical mode */\n \t\tterm_remove(STI);\n \t\t/* unmanage serial port fd, without reset */\n@@ -796,37 +800,36 @@ run_cmd(int fd, ...)\n \t\tclose(STO);\n \t\tdup2(fd, STI);\n \t\tdup2(fd, STO);\n-\t\t{\n-\t\t\t/* build command-line */\n-\t\t\tchar *c, *ce;\n-\t\t\tconst char *s;\n-\t\t\tint n;\n-\t\t\tva_list vls;\n-\t\t\t\n-\t\t\tstrcpy(cmd, EXEC);\n-\t\t\tc = &cmd[sizeof(EXEC)- 1];\n-\t\t\tce = cmd + sizeof(cmd) - 1;\n-\t\t\tva_start(vls, fd);\n-\t\t\twhile ( (s = va_arg(vls, const char *)) ) {\n-\t\t\t\tn = strlen(s);\n-\t\t\t\tif ( c + n + 1 >= ce ) break;\n-\t\t\t\tmemcpy(c, s, n); c += n;\n-\t\t\t\t*c++ = ' ';\n-\t\t\t}\n-\t\t\tva_end(vls);\n-\t\t\t*c = '\\0';\n+\t\t\n+\t\t/* build command arguments vector */\n+\t\targc = 0;\n+\t\tr = split_quoted(cmd, &argc, argv, RUNCMD_ARGS_MAX);\n+\t\tif ( r < 0 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"Cannot parse command\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n+\t\t}\n+\t\tr = split_quoted(args_extra, &argc, argv, RUNCMD_ARGS_MAX);\n+\t\tif ( r < 0 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"Cannot parse extra args\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n \t\t}\n+\t\tif ( argc < 1 ) {\n+\t\t\tfd_printf(STDERR_FILENO, \"No command given\\n\");\n+\t\t\texit(RUNCMD_EXEC_FAIL);\n+\t\t}\t\n+\t\targv[argc] = NULL;\n+\t\t\t\n \t\t/* run extenral command */\n-\t\tfd_printf(STDERR_FILENO, \"%s\\n\", &cmd[sizeof(EXEC) - 1]);\n+\t\tfd_printf(STDERR_FILENO, \"$ %s %s\\n\", cmd, args_extra);\n \t\testablish_child_signal_handlers();\n \t\tsigprocmask(SIG_SETMASK, &sigm_old, NULL);\n-\t\texecl(\"/bin/sh\", \"sh\", \"-c\", cmd, NULL);\n-\t\texit(42);\n+\t\texecvp(argv[0], argv);\n+\n+\t\tfd_printf(STDERR_FILENO, \"exec: %s\\n\", strerror(errno));\n+\t\texit(RUNCMD_EXEC_FAIL);\n \t}\n }\n \n-#undef EXEC\n-\n /**********************************************************************/\n \n /* Process command key. Returns non-zero if command results in picocom\n@@ -944,7 +947,7 @@ do_command (unsigned char c)\n \t\t\tfd_printf(STO, \"*** cannot read filename ***\\r\\n\");\n \t\t\tbreak;\n \t\t}\n-\t\trun_cmd(tty_fd, xfr_cmd, fname, NULL);\n+\t\trun_cmd(tty_fd, xfr_cmd, fname);\n \t\tfree(fname);\n \t\tbreak;\n \tcase KEY_BREAK:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1acf1ddabaf3576b4023c4f6f09c5a3e4b086fb8",
            "date": "2018-04-12T12:16:04Z",
            "author_login": "npat-efault"
          },
          {
            "sha": "eb0f53a0c05df1ea81abb68b0fdefc4194737b1e",
            "date": "2018-04-03T12:07:07Z",
            "author_login": "npat-efault"
          },
          {
            "sha": "b86e131c57abaf23dfac4c04d3c5ffad089a7e0a",
            "date": "2018-03-03T15:11:49Z",
            "author_login": "npat-efault"
          },
          {
            "sha": "831066d754c3afe3f4606dd4e9a1a37967016a51",
            "date": "2018-03-03T15:09:04Z",
            "author_login": "npat-efault"
          },
          {
            "sha": "07e26cc849ceac59301bd9e71b6810cf472f8995",
            "date": "2018-03-03T14:45:56Z",
            "author_login": "npat-efault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-77",
    "description": "picocom before 2.0 has a command injection vulnerability in the 'send and receive file' command because the command line is executed by /bin/sh unsafely.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-05-28T00:29:00.187",
    "last_modified": "2024-11-21T02:39:45.490",
    "fix_date": "2015-08-18T11:40:48Z"
  },
  "references": [
    {
      "url": "https://github.com/npat-efault/picocom/commit/1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/06/msg00030.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/npat-efault/picocom/commit/1ebc60b20fbe9a02436d5cbbf8951714e749ddb1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/06/msg00030.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:01.642795",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "picocom",
    "owner": "npat-efault",
    "created_at": "2015-08-06T23:57:27Z",
    "updated_at": "2025-01-13T13:47:16Z",
    "pushed_at": "2023-10-27T17:30:20Z",
    "size": 1325,
    "stars": 665,
    "forks": 127,
    "open_issues": 38,
    "watchers": 665,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 209478,
      "HTML": 38626,
      "Roff": 30287,
      "Makefile": 4070,
      "Shell": 377
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:26:27.724312"
  }
}