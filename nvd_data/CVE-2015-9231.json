{
  "cve_id": "CVE-2015-9231",
  "github_data": {
    "repository": "gnachman/iTerm2",
    "fix_commit": "33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
    "related_commits": [
      "33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
      "e4eb1063529deb575b75b396138d41554428d522",
      "33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
      "e4eb1063529deb575b75b396138d41554428d522"
    ],
    "patch_url": "https://github.com/gnachman/iTerm2/commit/33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51.patch",
    "fix_commit_details": {
      "sha": "33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
      "commit_date": "2017-09-20T17:05:38Z",
      "author": {
        "login": "gnachman",
        "type": "User",
        "stats": {
          "total_commits": 13404,
          "average_weekly_commits": 17.70673712021136,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 726
        }
      },
      "commit_message": {
        "title": "Fist swipe at removing DNS code",
        "length": 31,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 229,
        "additions": 3,
        "deletions": 226
      },
      "files": [
        {
          "filename": "iTerm2.xcodeproj/project.pbxproj",
          "status": "modified",
          "additions": 0,
          "deletions": 10,
          "patch": "@@ -630,7 +630,6 @@\n \t\t1D6C4D5A122329F000E0AA3E /* ColorPresets.plist in Resources */ = {isa = PBXBuildFile; fileRef = 1D6C4D59122329F000E0AA3E /* ColorPresets.plist */; };\n \t\t1D6C50A71226EEFB00E0AA3E /* ProfileListView.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D6C50A51226EEFB00E0AA3E /* ProfileListView.h */; };\n \t\t1D6ED85619AEA20D005A7799 /* URLAction.h in Headers */ = {isa = PBXBuildFile; fileRef = A6CFDAD0185D2587005DC94B /* URLAction.h */; };\n-\t\t1D6ED85719AEA20D005A7799 /* AsyncHostLookupController.h in Headers */ = {isa = PBXBuildFile; fileRef = A6CFDAD5185D53C2005DC94B /* AsyncHostLookupController.h */; };\n \t\t1D6ED85819AEA20D005A7799 /* LineBufferPosition.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D78B55C183EE1C000014D49 /* LineBufferPosition.h */; };\n \t\t1D6ED85919AEA20D005A7799 /* FindContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D53FD13181C4B4B00524D4F /* FindContext.h */; };\n \t\t1D6ED85A19AEA20D005A7799 /* ProfilesTerminalPreferencesViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = A6A2698D1900F95D00437DA9 /* ProfilesTerminalPreferencesViewController.h */; };\n@@ -2017,7 +2016,6 @@\n \t\tA6C763011B45C52B00E3C992 /* TransferrableFileMenuItemViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = A68A30D9186D1429007F550F /* TransferrableFileMenuItemViewController.m */; };\n \t\tA6C763021B45C52B00E3C992 /* VT100RemoteHost.m in Sources */ = {isa = PBXBuildFile; fileRef = A68A30DA186D1429007F550F /* VT100RemoteHost.m */; };\n \t\tA6C763031B45C52B00E3C992 /* VT100WorkingDirectory.m in Sources */ = {isa = PBXBuildFile; fileRef = A68A30DB186D1429007F550F /* VT100WorkingDirectory.m */; };\n-\t\tA6C763051B45C52B00E3C992 /* AsyncHostLookupController.m in Sources */ = {isa = PBXBuildFile; fileRef = A6CFDAD6185D53C2005DC94B /* AsyncHostLookupController.m */; };\n \t\tA6C763061B45C52B00E3C992 /* BackgroundThread.m in Sources */ = {isa = PBXBuildFile; fileRef = 1DA26ABF15007507004B5792 /* BackgroundThread.m */; };\n \t\tA6C763071B45C52B00E3C992 /* CapturedOutput.m in Sources */ = {isa = PBXBuildFile; fileRef = A67F57D31B11882900B4F135 /* CapturedOutput.m */; };\n \t\tA6C763091B45C52B00E3C992 /* iTermCommandHistoryCommandUseMO+Addtions.m in Sources */ = {isa = PBXBuildFile; fileRef = A6E7474C188C6394005355CF /* iTermCommandHistoryCommandUseMO+Addtions.m */; };\n@@ -2317,7 +2315,6 @@\n \t\tA6CEDA6119988A7300BB57EC /* LogoShadow.png in Resources */ = {isa = PBXBuildFile; fileRef = A6CEDA5E19988A7300BB57EC /* LogoShadow.png */; };\n \t\tA6CEDA6219988A7300BB57EC /* LogoShadow.png in Resources */ = {isa = PBXBuildFile; fileRef = A6CEDA5E19988A7300BB57EC /* LogoShadow.png */; };\n \t\tA6CFDAD2185D2587005DC94B /* URLAction.h in Headers */ = {isa = PBXBuildFile; fileRef = A6CFDAD0185D2587005DC94B /* URLAction.h */; };\n-\t\tA6CFDAD7185D53C2005DC94B /* AsyncHostLookupController.h in Headers */ = {isa = PBXBuildFile; fileRef = A6CFDAD5185D53C2005DC94B /* AsyncHostLookupController.h */; };\n \t\tA6D22A431BC8BE6B004084E0 /* Model.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = A6D22A411BC8BE6B004084E0 /* Model.xcdatamodeld */; };\n \t\tA6D22A441BC8BE6B004084E0 /* Model.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = A6D22A411BC8BE6B004084E0 /* Model.xcdatamodeld */; };\n \t\tA6D22A451BC8BE6B004084E0 /* Model.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = A6D22A411BC8BE6B004084E0 /* Model.xcdatamodeld */; };\n@@ -3837,8 +3834,6 @@\n \t\tA6CEDA5E19988A7300BB57EC /* LogoShadow.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; name = LogoShadow.png; path = images/LogoParts/LogoShadow.png; sourceTree = \"<group>\"; };\n \t\tA6CFDAD0185D2587005DC94B /* URLAction.h */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.h; path = URLAction.h; sourceTree = \"<group>\"; tabWidth = 4; };\n \t\tA6CFDAD1185D2587005DC94B /* URLAction.m */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.objc; path = URLAction.m; sourceTree = \"<group>\"; tabWidth = 4; };\n-\t\tA6CFDAD5185D53C2005DC94B /* AsyncHostLookupController.h */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.h; path = AsyncHostLookupController.h; sourceTree = \"<group>\"; tabWidth = 4; };\n-\t\tA6CFDAD6185D53C2005DC94B /* AsyncHostLookupController.m */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.objc; path = AsyncHostLookupController.m; sourceTree = \"<group>\"; tabWidth = 4; };\n \t\tA6D22A421BC8BE6B004084E0 /* Model.xcdatamodel */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcdatamodel; path = Model.xcdatamodel; sourceTree = \"<group>\"; };\n \t\tA6D22B431BC9D368004084E0 /* iTermShellHistoryTest.m */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.objc; path = iTermShellHistoryTest.m; sourceTree = \"<group>\"; };\n \t\tA6DF401A1897607E00F05947 /* NSTextField+iTerm.h */ = {isa = PBXFileReference; fileEncoding = 4; indentWidth = 4; lastKnownFileType = sourcecode.c.h; path = \"NSTextField+iTerm.h\"; sourceTree = \"<group>\"; tabWidth = 4; };\n@@ -4202,7 +4197,6 @@\n \t\t\t\tA66DB8341C8E4CBB00233E88 /* iTermOpenQuicklyCommands.h */,\n \t\t\t\tA6E7138C18F26A91008D94DD /* AppearancePreferencesViewController.h */,\n \t\t\t\t1D2560A813EE60E4006B35CD /* ArrangementPreviewView.h */,\n-\t\t\t\tA6CFDAD5185D53C2005DC94B /* AsyncHostLookupController.h */,\n \t\t\t\t1DE214DF128212EE004E3ADF /* Autocomplete.h */,\n \t\t\t\t1DA26ABE15007507004B5792 /* BackgroundThread.h */,\n \t\t\t\t1D9DCC0C142D7F5F0016228A /* BellTrigger.h */,\n@@ -5630,7 +5624,6 @@\n \t\t\t\tA6E761631D39D216005C0E5C /* iTermMutableAttributedStringBuilder.m */,\n \t\t\t\t539325EE1DD66EF100CABCEF /* iTermPreciseTimer.h */,\n \t\t\t\t539325EF1DD66EF100CABCEF /* iTermPreciseTimer.m */,\n-\t\t\t\tA6CFDAD6185D53C2005DC94B /* AsyncHostLookupController.m */,\n \t\t\t\t1DA26ABF15007507004B5792 /* BackgroundThread.m */,\n \t\t\t\tA67F57D31B11882900B4F135 /* CapturedOutput.m */,\n \t\t\t\t1D53FD14181C4B4B00524D4F /* FindContext.m */,\n@@ -6134,7 +6127,6 @@\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t\t1D6ED85619AEA20D005A7799 /* URLAction.h in Headers */,\n-\t\t\t\t1D6ED85719AEA20D005A7799 /* AsyncHostLookupController.h in Headers */,\n \t\t\t\t1D6ED85819AEA20D005A7799 /* LineBufferPosition.h in Headers */,\n \t\t\t\t1D6ED85919AEA20D005A7799 /* FindContext.h in Headers */,\n \t\t\t\t1D6ED85A19AEA20D005A7799 /* ProfilesTerminalPreferencesViewController.h in Headers */,\n@@ -6478,7 +6470,6 @@\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t\tA6CFDAD2185D2587005DC94B /* URLAction.h in Headers */,\n-\t\t\t\tA6CFDAD7185D53C2005DC94B /* AsyncHostLookupController.h in Headers */,\n \t\t\t\t1D78B55E183EE1C000014D49 /* LineBufferPosition.h in Headers */,\n \t\t\t\tA65B72781B2BF2D200F947A7 /* iTermProfilesPanel.h in Headers */,\n \t\t\t\t1D53FD15181C4B4B00524D4F /* FindContext.h in Headers */,\n@@ -8485,7 +8476,6 @@\n \t\t\t\tA6C7637C1B45C52B00E3C992 /* ProfilesColorsPreferencesViewController.m in Sources */,\n \t\t\t\tA6C763E21B45C6DD00E3C992 /* PSMTabDragWindow.m in Sources */,\n \t\t\t\tA6936B5A1D2F5D1A00521B04 /* iTermHotkeyPreferencesModel.m in Sources */,\n-\t\t\t\tA6C763051B45C52B00E3C992 /* AsyncHostLookupController.m in Sources */,\n \t\t\t\tA6C763DA1B45C6DD00E3C992 /* NSWindow+PSM.m in Sources */,\n \t\t\t\tA6C763121B45C52B00E3C992 /* iTermImageInfo.m in Sources */,\n \t\t\t\tA6C7636E1B45C52B00E3C992 /* iTermPreferences.m in Sources */,"
        },
        {
          "filename": "sources/AsyncHostLookupController.h",
          "status": "removed",
          "additions": 0,
          "deletions": 25,
          "patch": "@@ -1,25 +0,0 @@\n-//\n-//  AsyncHostLookupController.h\n-//  iTerm\n-//\n-//  Created by George Nachman on 12/14/13.\n-//\n-//\n-\n-#import <Foundation/Foundation.h>\n-\n-// Verify whether host names are valid. Runs in a separate thread and provides asynchronous results.\n-// Caches very aggressively.\n-@interface AsyncHostLookupController : NSObject\n-\n-+ (instancetype)sharedInstance;\n-\n-// Calls back to completion indicating whether |host| is an extant hostname. The BOOL is YES if the\n-// hostname resolves. |host| is passed as the second argument to completion. Does not block.\n-- (void)getAddressForHost:(NSString *)host\n-               completion:(void (^)(BOOL, NSString*))completion;\n-\n-// Cancels the lookup for |hostname|.\n-- (void)cancelRequestForHostname:(NSString *)hostname;\n-\n-@end"
        },
        {
          "filename": "sources/AsyncHostLookupController.m",
          "status": "removed",
          "additions": 0,
          "deletions": 119,
          "patch": "@@ -1,119 +0,0 @@\n-//\n-//  AsyncHostLookupController.m\n-//  iTerm\n-//\n-//  Created by George Nachman on 12/14/13.\n-//\n-//\n-\n-#import \"AsyncHostLookupController.h\"\n-#import \"DebugLogging.h\"\n-#import \"iTermAdvancedSettingsModel.h\"\n-#include <netdb.h>\n-\n-@implementation AsyncHostLookupController {\n-    // Created at initialization and used to perform blocking gethostbyname calls.\n-    dispatch_queue_t _queue;\n-\n-    // Set of hostnames waiting to be looked up. If a hostname is removed from\n-    // this set then it won't be looked up when its turn comes around.\n-    NSMutableSet *_pending;\n-\n-    // Maps hostname -> @YES or @NO, indicating if it resolved.\n-    NSMutableDictionary *_cache;\n-}\n-\n-+ (instancetype)sharedInstance {\n-    static AsyncHostLookupController *instance;\n-    static dispatch_once_t once;\n-    dispatch_once(&once, ^{\n-        instance = [[self alloc] init];\n-    });\n-    return instance;\n-}\n-\n-- (instancetype)init {\n-    self = [super init];\n-    if (self) {\n-        _queue = dispatch_queue_create(\"AsyncHostLookupControllerQueue\", NULL);\n-        _pending = [[NSMutableSet alloc] init];\n-        _cache = [[NSMutableDictionary alloc] init];\n-    }\n-    return self;\n-}\n-\n-- (void)dealloc {\n-    // The logic for cleaning up the dispatch queue isn't written, so just make sure the singleton\n-    // never gets dealloced.\n-    assert(false);\n-    [super dealloc];\n-}\n-\n-- (void)getAddressForHost:(NSString *)hostname\n-               completion:(void (^)(BOOL, NSString *))completion {\n-    if (![iTermAdvancedSettingsModel performDNSLookups]) {\n-        completion(YES, hostname);\n-        return;\n-    }\n-\n-    NSTimeInterval start = [NSDate timeIntervalSinceReferenceDate];\n-    @synchronized(self) {\n-        if ([_pending containsObject:hostname]) {\n-            DLog(@\"Already pending %@\", hostname);\n-            return;\n-        }\n-        NSNumber *okNumber = _cache[hostname];\n-        if (okNumber) {\n-            completion([okNumber boolValue], hostname);\n-            return;\n-        }\n-        [_pending addObject:hostname];\n-    }\n-    dispatch_async(_queue, ^() {\n-        @synchronized(self) {\n-            if (![_pending containsObject:hostname]) {\n-                DLog(@\"Abort nslookup for %@\", hostname);\n-                return;\n-            }\n-        }\n-\n-        BOOL shouldCache;\n-        BOOL ok = [self hostnameHasAddress:[hostname UTF8String] shouldCache:&shouldCache];\n-        if (shouldCache) {\n-            @synchronized(self) {\n-                _cache[hostname] = @(ok);\n-            }\n-        }\n-        dispatch_async(dispatch_get_main_queue(), ^() {\n-            @synchronized(self) {\n-                if (![_pending containsObject:hostname]) {\n-                    DLog(@\"Finished nslookup but don't call block for %@\", hostname);\n-                    return;\n-                }\n-                [_pending removeObject:hostname];\n-            }\n-            DLog(@\"Host %@: %@\", hostname, ok ? @\"OK\" : @\"Unknown\");\n-            completion(ok, hostname);\n-        });\n-    });\n-    DLog(@\"Blocked main thread for %f sec\", [NSDate timeIntervalSinceReferenceDate] - start);\n-}\n-\n-- (void)cancelRequestForHostname:(NSString *)hostname {\n-    @synchronized(self) {\n-        [_pending removeObject:hostname];\n-    }\n-}\n-\n-- (BOOL)hostnameHasAddress:(const char *)hostname shouldCache:(BOOL *)shouldCache {\n-    struct addrinfo *servinfo;\n-    int status = getaddrinfo(hostname, NULL, NULL, &servinfo);\n-    if (status == 0) {\n-        freeaddrinfo(servinfo);\n-    }\n-    // Don't cache temporary failures\n-    *shouldCache = (status != EAI_AGAIN);\n-    return status == 0;\n-}\n-\n-@end"
        },
        {
          "filename": "sources/PTYTextView.m",
          "status": "modified",
          "additions": 2,
          "deletions": 64,
          "patch": "@@ -1,6 +1,5 @@\n #import \"PTYTextView.h\"\n \n-#import \"AsyncHostLookupController.h\"\n #import \"charmaps.h\"\n #import \"FileTransferManager.h\"\n #import \"FontSizeEstimator.h\"\n@@ -96,10 +95,6 @@\n static const NSUInteger kRectangularSelectionModifiers = (NSCommandKeyMask | NSAlternateKeyMask);\n static const NSUInteger kRectangularSelectionModifierMask = (kRectangularSelectionModifiers | NSControlKeyMask);\n \n-// Notifications posted when hostname lookups finish. Notifications are used to\n-// avoid dangling references.\n-static NSString *const kHostnameLookupFailed = @\"kHostnameLookupFailed\";\n-static NSString *const kHostnameLookupSucceeded = @\"kHostnameLookupSucceeded\";\n static PTYTextView *gCurrentKeyEventTextView;  // See comment in -keyDown:\n \n // Minimum distance that the mouse must move before a cmd+drag will be\n@@ -119,9 +114,6 @@ @interface PTYTextView () <\n     NSMenuDelegate,\n     NSPopoverDelegate>\n \n-// Set the hostname this view is currently waiting for AsyncHostLookupController to finish looking\n-// up.\n-@property(nonatomic, copy) NSString *currentUnderlineHostname;\n @property(nonatomic, retain) iTermSelection *selection;\n @property(nonatomic, retain) iTermSemanticHistoryController *semanticHistoryController;\n @property(nonatomic, retain) iTermFindCursorView *findCursorView;\n@@ -309,14 +301,6 @@ - (instancetype)initWithFrame:(NSRect)aRect colorMap:(iTermColorMap *)colorMap {\n                                                  selector:@selector(_pointerSettingsChanged:)\n                                                      name:kPointerPrefsChangedNotification\n                                                    object:nil];\n-        [[NSNotificationCenter defaultCenter] addObserver:self\n-                                                 selector:@selector(hostnameLookupFailed:)\n-                                                     name:kHostnameLookupFailed\n-                                                   object:nil];\n-        [[NSNotificationCenter defaultCenter] addObserver:self\n-                                                 selector:@selector(hostnameLookupSucceeded:)\n-                                                     name:kHostnameLookupSucceeded\n-                                                   object:nil];\n         [[NSNotificationCenter defaultCenter] addObserver:self\n                                                  selector:@selector(imageDidLoad:)\n                                                      name:iTermImageDidLoad\n@@ -400,10 +384,6 @@ - (void)dealloc {\n     [threeFingerTapGestureRecognizer_ disconnectTarget];\n     [threeFingerTapGestureRecognizer_ release];\n \n-    if (self.currentUnderlineHostname) {\n-        [[AsyncHostLookupController sharedInstance] cancelRequestForHostname:self.currentUnderlineHostname];\n-    }\n-    [_currentUnderlineHostname release];\n     _indicatorsHelper.delegate = nil;\n     [_indicatorsHelper release];\n     _selectionScrollHelper.delegate = nil;\n@@ -1115,7 +1095,6 @@ - (void)drawRect:(NSRect)rect {\n     // Draw the cursor filled in when we're inactive if there's a popup open or key focus was stolen.\n     _drawingHelper.shouldDrawFilledInCursor = ([self.delegate textViewShouldDrawFilledInCursor] || _keyFocusStolenCount);\n     _drawingHelper.isFrontTextView = (self == [[iTermController sharedInstance] frontTextView]);\n-    _drawingHelper.haveUnderlinedHostname = (self.currentUnderlineHostname != nil);\n     _drawingHelper.transparencyAlpha = [self transparencyAlpha];\n     _drawingHelper.now = [NSDate timeIntervalSinceReferenceDate];\n     _drawingHelper.drawMarkIndicators = [_delegate textViewShouldShowMarkIndicators];\n@@ -1772,10 +1751,6 @@ - (void)removeUnderline {\n     }\n     _drawingHelper.underlinedRange =\n         VT100GridAbsWindowedRangeMake(VT100GridAbsCoordRangeMake(-1, -1, -1, -1), 0, 0);\n-    if (self.currentUnderlineHostname) {\n-        [[AsyncHostLookupController sharedInstance] cancelRequestForHostname:self.currentUnderlineHostname];\n-    }\n-    self.currentUnderlineHostname = nil;\n     [self setNeedsDisplay:YES];  // It would be better to just display the underlined/formerly underlined area.\n }\n \n@@ -1809,29 +1784,9 @@ - (URLAction *)updateUnderlinedURLs:(NSEvent *)event {\n \n                 if (action.actionType == kURLActionOpenURL) {\n                     NSURL *url = [NSURL URLWithUserSuppliedString:action.string];\n-                    if (![url.host isEqualToString:self.currentUnderlineHostname]) {\n-                        if (self.currentUnderlineHostname) {\n-                            [[AsyncHostLookupController sharedInstance] cancelRequestForHostname:self.currentUnderlineHostname];\n-                        }\n-                        if (url && url.host) {\n-                            self.currentUnderlineHostname = url.host;\n-                            [[AsyncHostLookupController sharedInstance] getAddressForHost:url.host\n-                                                                               completion:^(BOOL ok, NSString *hostname) {\n-                                                                                   if (!ok) {\n-                                                                                       [[NSNotificationCenter defaultCenter] postNotificationName:kHostnameLookupFailed\n-                                                                                                                                           object:hostname];\n-                                                                                   } else {\n-                                                                                       [[NSNotificationCenter defaultCenter] postNotificationName:kHostnameLookupSucceeded\n-                                                                                                                                           object:hostname];\n-                                                                                   }\n-                                                                               }];\n-                        }\n+                    if (url && url.host) {\n+                        [self setNeedsDisplay:YES];\n                     }\n-                } else {\n-                    if (self.currentUnderlineHostname) {\n-                        [[AsyncHostLookupController sharedInstance] cancelRequestForHostname:self.currentUnderlineHostname];\n-                    }\n-                    self.currentUnderlineHostname = nil;\n                 }\n             } else {\n                 [self removeUnderline];\n@@ -6188,23 +6143,6 @@ - (URLAction *)urlActionForClickAtX:(int)x\n                                        }];\n }\n \n-- (void)hostnameLookupFailed:(NSNotification *)notification {\n-    if ([[notification object] isEqualToString:self.currentUnderlineHostname]) {\n-        self.currentUnderlineHostname = nil;\n-        [self removeUnderline];\n-        _drawingHelper.underlinedRange =\n-            VT100GridAbsWindowedRangeMake(VT100GridAbsCoordRangeMake(-1, -1, -1, -1), 0, 0);\n-        [self setNeedsDisplay:YES];\n-    }\n-}\n-\n-- (void)hostnameLookupSucceeded:(NSNotification *)notification {\n-    if ([[notification object] isEqualToString:self.currentUnderlineHostname]) {\n-        self.currentUnderlineHostname = nil;\n-        [self setNeedsDisplay:YES];\n-    }\n-}\n-\n - (void)imageDidLoad:(NSNotification *)notification {\n     if ([self imageIsVisible:notification.object]) {\n         [self setNeedsDisplay:YES];"
        },
        {
          "filename": "sources/iTermAdvancedSettingsModel.h",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -161,7 +161,6 @@\n + (BOOL)useColorfgbgFallback;\n + (BOOL)promptForPasteWhenNotAtPrompt;\n + (void)setPromptForPasteWhenNotAtPrompt:(BOOL)value;\n-+ (BOOL)performDNSLookups;\n + (BOOL)zeroWidthSpaceAdvancesCursor;\n + (BOOL)darkThemeHasBlackTitlebar;\n + (BOOL)fontChangeAffectsBroadcastingSessions;"
        },
        {
          "filename": "sources/iTermAdvancedSettingsModel.m",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -182,7 +182,6 @@ + (NSString *)name { \\\n DEFINE_STRING(URLCharacterSet, @\".?\\\\/:;%=&_-,+~#@!*'(\uff08)\uff09|[]\", @\"Semantic History: Non-alphanumeric characters considered part of a URL for Semantic History.\\nLetters and numbers are always considered part of the URL. These non-alphanumeric characters are used in addition for the purposes of figuring out where a URL begins and ends.\");\n DEFINE_INT(maxSemanticHistoryPrefixOrSuffix, 2000, @\"Semantic History: Maximum number of bytes of text before and after click location to take into account.\\nThis also limits the size of the \\\\3 and \\\\4 substitutions.\");\n DEFINE_STRING(pathsToIgnore, @\"\", @\"Semantic History: Paths to ignore for Semantic History.\\nSeparate paths with a comma. Any file under one of these paths will not be openable with Semantic History.\");\n-DEFINE_BOOL(performDNSLookups, NO, @\"Semantic History: Perform DNS lookups to check if URLs are valid?\\nWhen enabled, the name under the mouse will be resolved with DNS to determine if it is a clickable link.\");\n DEFINE_BOOL(showYellowMarkForJobStoppedBySignal, YES, @\"Semantic History: Use a yellow for a Shell Integration prompt mark when the job is stopped by a signal.\");\n \n #pragma mark - Debugging"
        },
        {
          "filename": "sources/iTermTextDrawingHelper.h",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -159,9 +159,6 @@\n // TODO: This might be the same as textViewIsActiveSession.\n @property(nonatomic, assign) BOOL isFrontTextView;\n \n-// Is there an underlined hostname?\n-@property(nonatomic, assign) BOOL haveUnderlinedHostname;\n-\n // Background transparency level. Should be 1 if transparency is off for this view.\n @property(nonatomic, assign) double transparencyAlpha;\n "
        },
        {
          "filename": "sources/iTermTextDrawingHelper.m",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -110,7 +110,6 @@ @interface iTermTextDrawingHelper() <iTermCursorDelegate>\n     NSColor *backgroundColor;\n     NSColor *previousBackgroundColor;\n     CGFloat minimumContrast;\n-    BOOL haveUnderlinedHostname;\n     NSColor *previousForegroundColor;\n } iTermTextColorContext;\n \n@@ -1555,7 +1554,7 @@ - (CGContextRef)newGrayscaleContextOfSize:(NSSize)size {\n         // Black-on-yellow search result.\n         rawColor = [NSColor colorWithCalibratedRed:0 green:0 blue:0 alpha:1];\n         context->havePreviousCharacterAttributes = NO;\n-    } else if (inUnderlinedRange && !context->haveUnderlinedHostname) {\n+    } else if (inUnderlinedRange) {\n         // Blue link text.\n         rawColor = [context->colorMap colorForKey:kColorMapLink];\n         context->havePreviousCharacterAttributes = NO;\n@@ -1865,7 +1864,6 @@ - (BOOL)zippy {\n         .havePreviousCharacterAttributes = NO,\n         .backgroundColor = backgroundColor,\n         .minimumContrast = _minimumContrast,\n-        .haveUnderlinedHostname = _haveUnderlinedHostname,\n         .previousForegroundColor = nil,\n     };\n     NSDictionary *previousImageAttributes = nil;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "056eefbfd8e092a1636978adbcd4cdcc2ebc51b6",
            "date": "2025-01-14T00:06:29Z",
            "author_login": "gnachman"
          },
          {
            "sha": "70b50d7255c84d17f7fad13a24f635a7a183a734",
            "date": "2025-01-11T20:42:40Z",
            "author_login": "gnachman"
          },
          {
            "sha": "b6a2d16152e89246642266758aa11b912d3e6b23",
            "date": "2025-01-11T19:05:02Z",
            "author_login": "gnachman"
          },
          {
            "sha": "86c78a3458e745c6e8ad9cf1ed188a604e72a385",
            "date": "2025-01-11T18:08:09Z",
            "author_login": "gnachman"
          },
          {
            "sha": "b83267fb5d2e53d95e061de15ccdb512204d90d2",
            "date": "2025-01-11T01:50:00Z",
            "author_login": "gnachman"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-200",
    "description": "iTerm2 3.x before 3.1.1 allows remote attackers to discover passwords by reading DNS queries. A new (default) feature was added to iTerm2 version 3.0.0 (and unreleased 2.9.x versions such as 2.9.20150717) that resulted in a potential information disclosure. In an attempt to see whether the text under the cursor (or selected text) was a URL, the text would be sent as an unencrypted DNS query. This has the potential to result in passwords and other sensitive information being sent in cleartext without the user being aware.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-20T20:29:00.183",
    "last_modified": "2024-11-21T02:40:06.487",
    "fix_date": "2017-09-20T17:05:38Z"
  },
  "references": [
    {
      "url": "https://github.com/gnachman/iTerm2/commit/33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gnachman/iTerm2/commit/e4eb1063529deb575b75b396138d41554428d522",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/3688",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/5303",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/6050",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/6068",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/wikis/dnslookupissue",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://news.ycombinator.com/item?id=15286956",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gnachman/iTerm2/commit/33ccaf61e34ef32ffc9d6b2be5dd218f6bb55f51",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gnachman/iTerm2/commit/e4eb1063529deb575b75b396138d41554428d522",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/3688",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/5303",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/6050",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/issues/6068",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gitlab.com/gnachman/iterm2/wikis/dnslookupissue",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://news.ycombinator.com/item?id=15286956",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.389149",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "iTerm2",
    "owner": "gnachman",
    "created_at": "2011-04-07T00:46:28Z",
    "updated_at": "2025-01-14T14:23:53Z",
    "pushed_at": "2025-01-14T08:07:08Z",
    "size": 285962,
    "stars": 15598,
    "forks": 1211,
    "open_issues": 37,
    "watchers": 15598,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Objective-C": 15587359,
      "Swift": 1978763,
      "Python": 1683214,
      "Shell": 253880,
      "Objective-C++": 236982,
      "C": 176426,
      "HTML": 140759,
      "Metal": 80954,
      "Perl": 28505,
      "Makefile": 11588,
      "JavaScript": 4568,
      "C++": 3796,
      "BASIC": 2884,
      "AppleScript": 1859,
      "CSS": 1524,
      "Rich Text Format": 436,
      "Roff": 244,
      "Standard ML": 89
    },
    "commit_activity": {
      "total_commits_last_year": 735,
      "avg_commits_per_week": 14.134615384615385,
      "days_active_last_year": 193
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T17:16:41.403855"
  }
}