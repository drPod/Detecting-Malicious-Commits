{
  "cve_id": "CVE-2016-1000232",
  "github_data": {
    "repository": "salesforce/tough-cookie",
    "fix_commit": "615627206357d997d5e6ff9da158997de05235ae",
    "related_commits": [
      "615627206357d997d5e6ff9da158997de05235ae",
      "e4fc2e0f9ee1b7a818d68f0ac7ea696f377b1534",
      "615627206357d997d5e6ff9da158997de05235ae",
      "e4fc2e0f9ee1b7a818d68f0ac7ea696f377b1534"
    ],
    "patch_url": "https://github.com/salesforce/tough-cookie/commit/615627206357d997d5e6ff9da158997de05235ae.patch",
    "fix_commit_details": {
      "sha": "615627206357d997d5e6ff9da158997de05235ae",
      "commit_date": "2016-07-21T18:43:19Z",
      "author": {
        "login": "stash-sfdc",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #68 from SalesforceEng/fix-too-many-semicolons",
        "length": 105,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 19,
        "deletions": 12
      },
      "files": [
        {
          "filename": "lib/cookie.js",
          "status": "modified",
          "additions": 6,
          "deletions": 12,
          "patch": "@@ -68,9 +68,6 @@ var LOOSE_COOKIE_PAIR = /^((?:=)?([^=;]*)\\s*=\\s*)?([^\\n\\r\\0]*)/;\n // Note ';' is \\x3B\n var PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n \n-// Used for checking whether or not there is a trailing semi-colon\n-var TRAILING_SEMICOLON = /;+$/;\n-\n var DAY_OF_MONTH = /^(\\d{1,2})[^\\d]*$/;\n var TIME = /^(\\d{1,2})[^\\d]*:(\\d{1,2})[^\\d]*:(\\d{1,2})[^\\d]*$/;\n var MONTH = /^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)/i;\n@@ -327,12 +324,6 @@ function parse(str, options) {\n   }\n   str = str.trim();\n \n-  // S4.1.1 Trailing semi-colons are not part of the specification.\n-  var semiColonCheck = TRAILING_SEMICOLON.exec(str);\n-  if (semiColonCheck) {\n-    str = str.slice(0, semiColonCheck.index);\n-  }\n-\n   // We use a regex to parse the \"name-value-pair\" part of S5.2\n   var firstSemi = str.indexOf(';'); // S5.2 step 1\n   var pairRe = options.loose ? LOOSE_COOKIE_PAIR : COOKIE_PAIR;\n@@ -362,7 +353,7 @@ function parse(str, options) {\n   // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n   // (including the %x3B (\";\") in question).\" plus later on in the same section\n   // \"discard the first \";\" and trim\".\n-  var unparsed = str.slice(firstSemi).replace(/^\\s*;\\s*/,'').trim();\n+  var unparsed = str.slice(firstSemi + 1).trim();\n \n   // \"If the unparsed-attributes string is empty, skip the rest of these\n   // steps.\"\n@@ -378,9 +369,12 @@ function parse(str, options) {\n    * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n    * the previous value.\n    */\n-  var cookie_avs = unparsed.split(/\\s*;\\s*/);\n+  var cookie_avs = unparsed.split(';');\n   while (cookie_avs.length) {\n-    var av = cookie_avs.shift();\n+    var av = cookie_avs.shift().trim();\n+    if (av.length === 0) { // happens if \";;\" appears\n+      continue;\n+    }\n     var av_sep = av.indexOf('=');\n     var av_key, av_value;\n "
        },
        {
          "filename": "test/parsing_test.js",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -322,6 +322,19 @@ vows\n       \"no path\": function(c) { assert.equal(c.path, null) },\n       \"no domain\": function(c) { assert.equal(c.domain, null) },\n       \"no extensions\": function(c) { assert.ok(!c.extensions) }\n+    },\n+    \"way too many semicolons followed by non-semicolon\": {\n+      topic: function() {\n+        // takes abnormally long due to semi-catastrophic regexp backtracking\n+        var str = 'foo=bar' + (';'.repeat(65535)) + ' domain=example.com';\n+        return Cookie.parse(str) || null;\n+      },\n+      \"parsed\": function(c) { assert.ok(c) },\n+      \"key\": function(c) { assert.equal(c.key, 'foo') },\n+      \"value\": function(c) { assert.equal(c.value, 'bar') },\n+      \"no path\": function(c) { assert.equal(c.path, null) },\n+      \"no domain\": function(c) { assert.equal(c.domain, 'example.com') },\n+      \"no extensions\": function(c) { assert.ok(!c.extensions) }\n     }\n   })\n   .export(module);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f27648d488efb746046a8631c41c70eb7c84c0df",
            "date": "2025-01-09T15:31:27Z",
            "author_login": "colincasey"
          },
          {
            "sha": "7020bb086687ced9ef43df15830aaa92f9fe9f8f",
            "date": "2025-01-09T15:12:43Z",
            "author_login": "colincasey"
          },
          {
            "sha": "80cf3c9611a294e6fdf5669827338f576992ff7c",
            "date": "2025-01-09T15:05:49Z",
            "author_login": "colincasey"
          },
          {
            "sha": "58a5e7efdbffb408726d51c8f79e3bbbb114fbec",
            "date": "2025-01-08T19:22:34Z",
            "author_login": "wjhsf"
          },
          {
            "sha": "b407f60a44f5d05e64e6ff9b7adf2529230035b3",
            "date": "2025-01-08T18:53:25Z",
            "author_login": "colincasey"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-09-05T17:29:00.373",
    "last_modified": "2024-11-21T02:43:01.457",
    "fix_date": "2016-07-21T18:43:19Z"
  },
  "references": [
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:2101",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2017:2912",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/cve-2016-1000232",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/salesforce/tough-cookie/commit/615627206357d997d5e6ff9da158997de05235ae",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/salesforce/tough-cookie/commit/e4fc2e0f9ee1b7a818d68f0ac7ea696f377b1534",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.ibm.com/blogs/psirt/ibm-security-bulletin-ibm-api-connect-is-affected-by-node-js-tough-cookie-module-vulnerability-to-a-denial-of-service-cve-2016-1000232/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/advisories/130",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:2101",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2017:2912",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/cve-2016-1000232",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/salesforce/tough-cookie/commit/615627206357d997d5e6ff9da158997de05235ae",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/salesforce/tough-cookie/commit/e4fc2e0f9ee1b7a818d68f0ac7ea696f377b1534",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.ibm.com/blogs/psirt/ibm-security-bulletin-ibm-api-connect-is-affected-by-node-js-tough-cookie-module-vulnerability-to-a-denial-of-service-cve-2016-1000232/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/advisories/130",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:35.795086",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tough-cookie",
    "owner": "salesforce",
    "created_at": "2011-10-19T15:22:36Z",
    "updated_at": "2025-01-09T15:31:32Z",
    "pushed_at": "2025-01-09T15:55:17Z",
    "size": 2148,
    "stars": 979,
    "forks": 228,
    "open_issues": 17,
    "watchers": 979,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 344902,
      "JavaScript": 168011,
      "Shell": 423,
      "EJS": 96
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T14:39:25.727075"
  }
}