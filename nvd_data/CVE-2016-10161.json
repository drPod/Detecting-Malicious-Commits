{
  "cve_id": "CVE-2016-10161",
  "github_data": {
    "repository": "php/php-src",
    "fix_commit": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
    "related_commits": [
      "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
      "16b3003ffc6393e250f069aa28a78dc5a2c064b2"
    ],
    "patch_url": "https://github.com/php/php-src/commit/16b3003ffc6393e250f069aa28a78dc5a2c064b2.patch",
    "fix_commit_details": {
      "sha": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
      "commit_date": "2016-12-31T00:59:46Z",
      "author": {
        "login": "smalyshev",
        "type": "User",
        "stats": {
          "total_commits": 4051,
          "average_weekly_commits": 3.0096582466567607,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 527
        }
      },
      "commit_message": {
        "title": "Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()",
        "length": 79,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 112,
        "additions": 76,
        "deletions": 36
      },
      "files": [
        {
          "filename": "ext/standard/tests/serialize/bug73825.phpt",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+--TEST--\n+Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()\n+--FILE--\n+<?php\n+$obj = unserialize('O:8:\"00000000\":');\n+var_dump($obj);\n+?>\n+--EXPECTF--\n+Warning: Bad unserialize data in %sbug73825.php on line %d\n+\n+Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d\n+bool(false)"
        },
        {
          "filename": "ext/standard/var_unserializer.c",
          "status": "modified",
          "additions": 47,
          "deletions": 33,
          "patch": "@@ -405,6 +405,11 @@ static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n {\n \tlong elements;\n \n+\tif( *p >= max - 2) {\n+\t\tzend_error(E_WARNING, \"Bad unserialize data\");\n+\t\treturn -1;\n+\t}\n+\n \telements = parse_iv2((*p) + 2, p);\n \n \t(*p) += 2;\n@@ -415,7 +420,7 @@ static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n \t\t/* If this class implements Serializable, it should not land here but in object_custom(). The passed string\n \t\tobviously doesn't descend from the regular serializer. */\n \t\tzend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);\n-\t\treturn 0;\n+\t\treturn -1;\n \t}\n \n \treturn elements;\n@@ -492,7 +497,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \n \n-#line 496 \"ext/standard/var_unserializer.c\"\n+#line 501 \"ext/standard/var_unserializer.c\"\n {\n \tYYCTYPE yych;\n \tstatic const unsigned char yybm[] = {\n@@ -552,9 +557,9 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *(YYMARKER = ++YYCURSOR);\n \tif (yych == ':') goto yy95;\n yy3:\n-#line 861 \"ext/standard/var_unserializer.re\"\n+#line 875 \"ext/standard/var_unserializer.re\"\n \t{ return 0; }\n-#line 558 \"ext/standard/var_unserializer.c\"\n+#line 563 \"ext/standard/var_unserializer.c\"\n yy4:\n \tyych = *(YYMARKER = ++YYCURSOR);\n \tif (yych == ':') goto yy89;\n@@ -597,13 +602,13 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tgoto yy3;\n yy14:\n \t++YYCURSOR;\n-#line 855 \"ext/standard/var_unserializer.re\"\n+#line 869 \"ext/standard/var_unserializer.re\"\n \t{\n \t/* this is the case where we have less data than planned */\n \tphp_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");\n \treturn 0; /* not sure if it should be 0 or 1 here? */\n }\n-#line 607 \"ext/standard/var_unserializer.c\"\n+#line 612 \"ext/standard/var_unserializer.c\"\n yy16:\n \tyych = *++YYCURSOR;\n \tgoto yy3;\n@@ -634,7 +639,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != '\"') goto yy18;\n \t++YYCURSOR;\n-#line 708 \"ext/standard/var_unserializer.re\"\n+#line 717 \"ext/standard/var_unserializer.re\"\n \t{\n \tsize_t len, len2, len3, maxlen;\n \tlong elements;\n@@ -774,14 +779,19 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \telements = object_common1(UNSERIALIZE_PASSTHRU, ce);\n \n+\tif (elements < 0) {\n+\t   efree(class_name);\n+\t   return 0;\n+\t}\n+\n \tif (incomplete_class) {\n \t\tphp_store_class_name(*rval, class_name, len2);\n \t}\n \tefree(class_name);\n \n \treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n }\n-#line 785 \"ext/standard/var_unserializer.c\"\n+#line 795 \"ext/standard/var_unserializer.c\"\n yy25:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n@@ -806,16 +816,20 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != '\"') goto yy18;\n \t++YYCURSOR;\n-#line 699 \"ext/standard/var_unserializer.re\"\n+#line 704 \"ext/standard/var_unserializer.re\"\n \t{\n+\tlong elements;\n     if (!var_hash) return 0;\n \n \tINIT_PZVAL(*rval);\n \n-\treturn object_common2(UNSERIALIZE_PASSTHRU,\n-\t\t\tobject_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));\n+\telements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);\n+\tif (elements < 0) {\n+\t\treturn 0;\n+\t}\n+\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n }\n-#line 819 \"ext/standard/var_unserializer.c\"\n+#line 833 \"ext/standard/var_unserializer.c\"\n yy32:\n \tyych = *++YYCURSOR;\n \tif (yych == '+') goto yy33;\n@@ -836,7 +850,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != '{') goto yy18;\n \t++YYCURSOR;\n-#line 678 \"ext/standard/var_unserializer.re\"\n+#line 683 \"ext/standard/var_unserializer.re\"\n \t{\n \tlong elements = parse_iv(start + 2);\n \t/* use iv() not uiv() in order to check data range */\n@@ -857,7 +871,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \treturn finish_nested_data(UNSERIALIZE_PASSTHRU);\n }\n-#line 861 \"ext/standard/var_unserializer.c\"\n+#line 875 \"ext/standard/var_unserializer.c\"\n yy39:\n \tyych = *++YYCURSOR;\n \tif (yych == '+') goto yy40;\n@@ -878,7 +892,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != '\"') goto yy18;\n \t++YYCURSOR;\n-#line 643 \"ext/standard/var_unserializer.re\"\n+#line 648 \"ext/standard/var_unserializer.re\"\n \t{\n \tsize_t len, maxlen;\n \tchar *str;\n@@ -913,7 +927,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tZVAL_STRINGL(*rval, str, len, 0);\n \treturn 1;\n }\n-#line 917 \"ext/standard/var_unserializer.c\"\n+#line 931 \"ext/standard/var_unserializer.c\"\n yy46:\n \tyych = *++YYCURSOR;\n \tif (yych == '+') goto yy47;\n@@ -934,7 +948,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != '\"') goto yy18;\n \t++YYCURSOR;\n-#line 610 \"ext/standard/var_unserializer.re\"\n+#line 615 \"ext/standard/var_unserializer.re\"\n \t{\n \tsize_t len, maxlen;\n \tchar *str;\n@@ -967,7 +981,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tZVAL_STRINGL(*rval, str, len, 1);\n \treturn 1;\n }\n-#line 971 \"ext/standard/var_unserializer.c\"\n+#line 985 \"ext/standard/var_unserializer.c\"\n yy53:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') {\n@@ -1055,7 +1069,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \t}\n yy63:\n \t++YYCURSOR;\n-#line 600 \"ext/standard/var_unserializer.re\"\n+#line 605 \"ext/standard/var_unserializer.re\"\n \t{\n #if SIZEOF_LONG == 4\n use_double:\n@@ -1065,7 +1079,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));\n \treturn 1;\n }\n-#line 1069 \"ext/standard/var_unserializer.c\"\n+#line 1083 \"ext/standard/var_unserializer.c\"\n yy65:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n@@ -1124,7 +1138,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tyych = *++YYCURSOR;\n \tif (yych != ';') goto yy18;\n \t++YYCURSOR;\n-#line 585 \"ext/standard/var_unserializer.re\"\n+#line 590 \"ext/standard/var_unserializer.re\"\n \t{\n \t*p = YYCURSOR;\n \tINIT_PZVAL(*rval);\n@@ -1139,7 +1153,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \treturn 1;\n }\n-#line 1143 \"ext/standard/var_unserializer.c\"\n+#line 1157 \"ext/standard/var_unserializer.c\"\n yy76:\n \tyych = *++YYCURSOR;\n \tif (yych == 'N') goto yy73;\n@@ -1166,7 +1180,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tif (yych <= '9') goto yy79;\n \tif (yych != ';') goto yy18;\n \t++YYCURSOR;\n-#line 558 \"ext/standard/var_unserializer.re\"\n+#line 563 \"ext/standard/var_unserializer.re\"\n \t{\n #if SIZEOF_LONG == 4\n \tint digits = YYCURSOR - start - 3;\n@@ -1193,32 +1207,32 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tZVAL_LONG(*rval, parse_iv(start + 2));\n \treturn 1;\n }\n-#line 1197 \"ext/standard/var_unserializer.c\"\n+#line 1211 \"ext/standard/var_unserializer.c\"\n yy83:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') goto yy18;\n \tif (yych >= '2') goto yy18;\n \tyych = *++YYCURSOR;\n \tif (yych != ';') goto yy18;\n \t++YYCURSOR;\n-#line 551 \"ext/standard/var_unserializer.re\"\n+#line 556 \"ext/standard/var_unserializer.re\"\n \t{\n \t*p = YYCURSOR;\n \tINIT_PZVAL(*rval);\n \tZVAL_BOOL(*rval, parse_iv(start + 2));\n \treturn 1;\n }\n-#line 1212 \"ext/standard/var_unserializer.c\"\n+#line 1226 \"ext/standard/var_unserializer.c\"\n yy87:\n \t++YYCURSOR;\n-#line 544 \"ext/standard/var_unserializer.re\"\n+#line 549 \"ext/standard/var_unserializer.re\"\n \t{\n \t*p = YYCURSOR;\n \tINIT_PZVAL(*rval);\n \tZVAL_NULL(*rval);\n \treturn 1;\n }\n-#line 1222 \"ext/standard/var_unserializer.c\"\n+#line 1236 \"ext/standard/var_unserializer.c\"\n yy89:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n@@ -1241,7 +1255,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tif (yych <= '9') goto yy91;\n \tif (yych != ';') goto yy18;\n \t++YYCURSOR;\n-#line 521 \"ext/standard/var_unserializer.re\"\n+#line 526 \"ext/standard/var_unserializer.re\"\n \t{\n \tlong id;\n \n@@ -1264,7 +1278,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \treturn 1;\n }\n-#line 1268 \"ext/standard/var_unserializer.c\"\n+#line 1282 \"ext/standard/var_unserializer.c\"\n yy95:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n@@ -1287,7 +1301,7 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \tif (yych <= '9') goto yy97;\n \tif (yych != ';') goto yy18;\n \t++YYCURSOR;\n-#line 500 \"ext/standard/var_unserializer.re\"\n+#line 505 \"ext/standard/var_unserializer.re\"\n \t{\n \tlong id;\n \n@@ -1308,9 +1322,9 @@ PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)\n \n \treturn 1;\n }\n-#line 1312 \"ext/standard/var_unserializer.c\"\n+#line 1326 \"ext/standard/var_unserializer.c\"\n }\n-#line 863 \"ext/standard/var_unserializer.re\"\n+#line 877 \"ext/standard/var_unserializer.re\"\n \n \n \treturn 0;"
        },
        {
          "filename": "ext/standard/var_unserializer.re",
          "status": "modified",
          "additions": 17,
          "deletions": 3,
          "patch": "@@ -409,6 +409,11 @@ static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n {\n \tlong elements;\n \n+\tif( *p >= max - 2) {\n+\t\tzend_error(E_WARNING, \"Bad unserialize data\");\n+\t\treturn -1;\n+\t}\n+\n \telements = parse_iv2((*p) + 2, p);\n \n \t(*p) += 2;\n@@ -419,7 +424,7 @@ static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)\n \t\t/* If this class implements Serializable, it should not land here but in object_custom(). The passed string\n \t\tobviously doesn't descend from the regular serializer. */\n \t\tzend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);\n-\t\treturn 0;\n+\t\treturn -1;\n \t}\n \n \treturn elements;\n@@ -697,12 +702,16 @@ use_double:\n }\n \n \"o:\" iv \":\" [\"] {\n+\tlong elements;\n     if (!var_hash) return 0;\n \n \tINIT_PZVAL(*rval);\n \n-\treturn object_common2(UNSERIALIZE_PASSTHRU,\n-\t\t\tobject_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));\n+\telements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);\n+\tif (elements < 0) {\n+\t\treturn 0;\n+\t}\n+\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n }\n \n object \":\" uiv \":\" [\"]\t{\n@@ -844,6 +853,11 @@ object \":\" uiv \":\" [\"]\t{\n \n \telements = object_common1(UNSERIALIZE_PASSTHRU, ce);\n \n+\tif (elements < 0) {\n+\t   efree(class_name);\n+\t   return 0;\n+\t}\n+\n \tif (incomplete_class) {\n \t\tphp_store_class_name(*rval, class_name, len2);\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "634edc8ab3850052942eba6432ba7a4f776ebae8",
            "date": "2025-01-14T11:36:58Z",
            "author_login": "cmb69"
          },
          {
            "sha": "58628e0cc629338fa43fb175f733778432346a86",
            "date": "2025-01-12T15:40:59Z",
            "author_login": "cmb69"
          },
          {
            "sha": "0e1fbf97f4ce4da519a2cf2654233a0d007800fd",
            "date": "2025-01-13T15:46:54Z",
            "author_login": "iluuu1994"
          },
          {
            "sha": "3c138641e12fad5e8a94174988801c0529ca1c38",
            "date": "2025-01-13T15:46:43Z",
            "author_login": "iluuu1994"
          },
          {
            "sha": "a6a290d541ae2de2e9248acd48ffa6129b6577b3",
            "date": "2025-01-06T14:18:00Z",
            "author_login": "iluuu1994"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The object_common1 function in ext/standard/var_unserializer.c in PHP before 5.6.30, 7.0.x before 7.0.15, and 7.1.x before 7.1.1 allows remote attackers to cause a denial of service (buffer over-read and application crash) via crafted serialized data that is mishandled in a finish_nested_data call.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-01-24T21:59:00.260",
    "last_modified": "2024-11-21T02:43:26.857",
    "fix_date": "2016-12-31T00:59:46Z"
  },
  "references": [
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3783",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/95768",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1037659",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1296",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=73825",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/php/php-src/commit/16b3003ffc6393e250f069aa28a78dc5a2c064b2",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201702-29",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20180112-0001/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.tenable.com/security/tns-2017-04",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3783",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/95768",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1037659",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1296",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=73825",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/php/php-src/commit/16b3003ffc6393e250f069aa28a78dc5a2c064b2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201702-29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20180112-0001/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.tenable.com/security/tns-2017-04",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:49.843165",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "php-src",
    "owner": "php",
    "created_at": "2011-06-16T01:52:25Z",
    "updated_at": "2025-01-14T11:37:56Z",
    "pushed_at": "2025-01-14T11:37:44Z",
    "size": 579039,
    "stars": 38520,
    "forks": 7798,
    "open_issues": 1300,
    "watchers": 38520,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "PEAR_1_4DEV",
      "PECL_OPENSSL",
      "PECL",
      "PECL_4_3",
      "PHAR_1_2",
      "PHP-4.0",
      "PHP-4.0.5",
      "PHP-4.0.6",
      "PHP-4.0.7",
      "PHP-4.2.0",
      "PHP-4.2.2",
      "PHP-4.3",
      "PHP-4.3.0",
      "PHP-4.3.1",
      "PHP-4.3.2",
      "PHP-4.3.7",
      "PHP-4.4",
      "PHP-5",
      "PHP-5.0",
      "PHP-5.1",
      "PHP-5.2",
      "PHP-5.2.1RC1",
      "PHP-5.3",
      "PHP-5.3.11",
      "PHP-5.3.12",
      "PHP-5.3.13",
      "PHP-5.3.14",
      "PHP-5.3.15",
      "PHP-5.3.16",
      "PHP-5.3.17"
    ],
    "languages": {
      "C": 65322886,
      "PHP": 30041198,
      "C++": 580205,
      "M4": 408378,
      "Shell": 299560,
      "Lua": 272563,
      "Assembly": 236754,
      "JavaScript": 198632,
      "Lex": 99367,
      "Yacc": 92094,
      "Makefile": 33437,
      "Roff": 32243,
      "GAP": 23811,
      "Python": 14072,
      "GDB": 13663,
      "XSLT": 7963,
      "Awk": 2920,
      "Batchfile": 2219,
      "DTrace": 2180,
      "HTML": 1894
    },
    "commit_activity": {
      "total_commits_last_year": 5383,
      "avg_commits_per_week": 103.51923076923077,
      "days_active_last_year": 358
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:39.017037"
  }
}