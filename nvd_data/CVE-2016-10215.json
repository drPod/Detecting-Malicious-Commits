{
  "cve_id": "CVE-2016-10215",
  "github_data": {
    "repository": "Fastspot/bigtree-form-builder",
    "fix_commit": "06fde0cc67ff121b212715031e12574f50970fcd",
    "related_commits": [
      "06fde0cc67ff121b212715031e12574f50970fcd",
      "06fde0cc67ff121b212715031e12574f50970fcd"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "06fde0cc67ff121b212715031e12574f50970fcd",
      "commit_date": "2016-12-05T20:17:52Z",
      "author": {
        "login": "timbuckingham",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "1.2 release, forgot to add release notes in 1.1",
        "length": 47,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 34,
        "deletions": 10
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -24,6 +24,15 @@ Form Elements\n Changelog\n ---------\n \n+### 1.2 Release\n+- Fixed potential XSS attack via redraw-field (thanks to Haojun Hou in ADLab of Venustech)\n+- Fixed drawing back to back column sets breaking the display\n+\n+### 1.1 Release\n+- Auto responder email support\n+- Fixed limiting entries not showing properly after being checked while editing\n+- Fixed invalid dates coming through date fields (thanks to Jordan Mason)\n+\n ### 1.0.1 Release\n - Added a check to make sure users don't have duplicate values in select / radio / checkboxes when saving\n "
        },
        {
          "filename": "ajax/redraw-field.php",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -1,8 +1,10 @@\n <?php\n \t$required = false;\n \t$label = \"\";\n-\t$type = trim($_POST[\"type\"]);\n-\t$key = str_replace(\"form_builder_element_\", \"\", $_POST[\"name\"]);\n+\t$key = htmlspecialchars(str_replace(\"form_builder_element_\", \"\", $_POST[\"name\"]));\n+\n+\t// We URLify to prevent any kind of weird include jacking via ../\n+\t$type = BigTreeCMS::urlify(trim($_POST[\"type\"]));\n \t\n \t// Clean up prices\n \tif ($_POST[\"list\"][\"list\"]) {\n@@ -19,8 +21,8 @@\n \t\n \t$data = $_POST;\n ?>\n-<input type=\"hidden\" name=\"id[<?=$key?>]\" value=\"<?=$_POST[\"id\"]?>\" />\n-<input type=\"hidden\" name=\"type[<?=$key?>]\" value=\"<?=$type?>\" />\n+<input type=\"hidden\" name=\"id[<?=$key?>]\" value=\"<?=htmlspecialchars($_POST[\"id\"])?>\" />\n+<input type=\"hidden\" name=\"type[<?=$key?>]\" value=\"<?=htmlspecialchars($type)?>\" />\n <input type=\"hidden\" name=\"data[<?=$key?>]\" value=\"<?=htmlspecialchars(json_encode($data))?>\" />\n <div class=\"form_builder_wrapper\">\n \t<span class=\"icon\"></span>"
        },
        {
          "filename": "classes/btx-form-builder.php",
          "status": "modified",
          "additions": 12,
          "deletions": 3,
          "patch": "@@ -5,8 +5,9 @@\n \t*/\n \n \tclass BTXFormBuilder extends BigTreeModule {\n-\t\tvar $Table = \"btx_form_builder_forms\";\n-\t\tstatic $SearchPageCount = false;\n+\t\tpublic $Table = \"btx_form_builder_forms\";\n+\n+\t\tpublic static $SearchPageCount = false;\n \t\t\n \t\t/*\n \t\t\tFunction: getForm\n@@ -29,27 +30,32 @@ static function getForm($id) {\n \t\t\t$fields = array();\n \t\t\t$object_count = 0;\n \t\t\t$field_query = sqlquery(\"SELECT * FROM btx_form_builder_fields WHERE form = '$id' AND `column` = '0' ORDER BY position DESC, id ASC\");\n+\t\t\t\n \t\t\twhile ($field = sqlfetch($field_query)) {\n \t\t\t\t$object_count++;\n \n \t\t\t\tif ($field[\"type\"] == \"column\") {\n \t\t\t\t\t// Get left column\n \t\t\t\t\t$column_fields = array();\n \t\t\t\t\t$column_query = sqlquery(\"SELECT * FROM btx_form_builder_fields WHERE `column` = '\".$field[\"id\"].\"' AND `alignment` = 'left' ORDER BY position DESC, id ASC\");\n+\t\t\t\t\t\n \t\t\t\t\twhile ($sub_field = sqlfetch($column_query)) {\n \t\t\t\t\t\t$column_fields[] = $sub_field;\n \t\t\t\t\t\t$object_count++;\n \t\t\t\t\t}\n+\n \t\t\t\t\t$field[\"fields\"] = $column_fields;\n \t\t\t\t\t$fields[] = $field;\n \n \t\t\t\t\t// Get right column\n \t\t\t\t\t$column_fields = array();\n \t\t\t\t\t$column_query = sqlquery(\"SELECT * FROM btx_form_builder_fields WHERE `column` = '\".$field[\"id\"].\"' AND `alignment` = 'right' ORDER BY position DESC, id ASC\");\n+\t\t\t\t\t\n \t\t\t\t\twhile ($sub_field = sqlfetch($column_query)) {\n \t\t\t\t\t\t$column_fields[] = $sub_field;\n \t\t\t\t\t\t$object_count++;\n \t\t\t\t\t}\n+\t\t\t\t\t\n \t\t\t\t\t$field[\"fields\"] = $column_fields;\n \t\t\t\t\t$fields[] = $field;\n \n@@ -62,6 +68,7 @@ static function getForm($id) {\n \n \t\t\t$form[\"fields\"] = $fields;\n \t\t\t$form[\"object_count\"] = $object_count - 1; // We start at 0\n+\n \t\t\treturn $form;\n \t\t}\n \n@@ -78,6 +85,7 @@ static function getForm($id) {\n \t\t\n \t\tstatic function getAllForms($sort = \"id ASC\") {\n \t\t\t$mod = new BigTreeModule(\"btx_form_builder_forms\");\n+\n \t\t\treturn $mod->getAll($sort);\n \t\t}\n \n@@ -94,6 +102,7 @@ static function getAllForms($sort = \"id ASC\") {\n \t\t\n \t\tstatic function getEntries($id) {\n \t\t\t$mod = new BigTreeModule(\"btx_form_builder_entries\");\n+\n \t\t\treturn $mod->getMatching(\"form\",$id,\"id DESC\");\n \t\t}\n \n@@ -184,4 +193,4 @@ static function searchEntries($id,$query,$page = 1) {\n \n \t\t\treturn array_slice($form_results,($page - 1) * 15,15);\n \t\t}\n-\t}\n\\ No newline at end of file\n+\t}"
        },
        {
          "filename": "manifest.json",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -1,8 +1,8 @@\n {\n     \"type\": \"extension\",\n     \"id\": \"com.fastspot.form-builder\",\n-    \"version\": \"1.1\",\n-    \"revision\": 21,\n+    \"version\": \"1.2\",\n+    \"revision\": 22,\n     \"compatibility\": \"4.2+\",\n     \"title\": \"Form Builder\",\n     \"description\": \"An easy to use form builder allowing the administrative users to easily add fields to a form that stores entries in the database and sends out emails. Also supports paid forms.\",\n@@ -74,7 +74,7 @@\n                         \"view\": null,\n                         \"report\": null,\n                         \"class\": \"server\",\n-                        \"level\": \"0\",\n+                        \"level\": \"2\",\n                         \"position\": \"1\"\n                     }\n                 ],"
        },
        {
          "filename": "templates/routed/btx-form-builder/default.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -89,6 +89,9 @@\n \t\t\t} else {\n \t\t\t\tif ($last_field == \"column\") {\n \t\t\t\t\techo '<div class=\"form_builder_column form_builder_last\">';\n+\n+\t\t\t\t\t// Reset so that if someone did back to back columns it draws properly\n+\t\t\t\t\t$field_type = \"second_column\";\n \t\t\t\t} else {\n \t\t\t\t\techo '<div class=\"form_builder_column\">';\n \t\t\t\t}\n@@ -124,6 +127,7 @@\n \t\t\t\t\n \t\t\t\techo '</div>';\n \t\t\t}\n+\n \t\t\t$last_field = $field_type;\n \t\t}\n \t?>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cc3bd183bee5922b85ba153ab6a917cdc31c2c8d",
            "date": "2024-12-12T23:07:05Z",
            "author_login": "timbuckingham"
          },
          {
            "sha": "781342be0369c1ffcb7fdcbccab2bd616f526e08",
            "date": "2024-10-11T00:20:08Z",
            "author_login": "timbuckingham"
          },
          {
            "sha": "eb7e03cc29a586681fdea5357cf22e4dc42c01dd",
            "date": "2024-06-19T16:00:05Z",
            "author_login": "timbuckingham"
          },
          {
            "sha": "75d307e66ecde6d5e54bd7295e132f6ff6e43a6e",
            "date": "2023-10-16T17:43:41Z",
            "author_login": "timbuckingham"
          },
          {
            "sha": "218977cbea2fe2acc3a8fea420e9493b46b51aff",
            "date": "2023-10-16T17:38:25Z",
            "author_login": "jemaleddin"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "An issue was discovered in Fastspot BigTree bigtree-form-builder before 1.2. The vulnerability exists due to insufficient filtration of user-supplied data in multiple HTTP POST parameters passed to a \"site/index.php/../../extensions/com.fastspot.form-builder/ajax/redraw-field.php\" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-02-10T07:59:00.137",
    "last_modified": "2024-11-21T02:43:35.060",
    "fix_date": "2016-12-05T20:17:52Z"
  },
  "references": [
    {
      "url": "https://github.com/Fastspot/bigtree-form-builder/commit/06fde0cc67ff121b212715031e12574f50970fcd",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Fastspot/bigtree-form-builder/commit/06fde0cc67ff121b212715031e12574f50970fcd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.219368",
    "processing_status": "enhanced"
  }
}