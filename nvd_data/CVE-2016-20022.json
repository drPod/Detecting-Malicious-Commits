{
  "cve_id": "CVE-2016-20022",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "aed9d65ac3278d4febd8665bd7db59ef53e825fe",
    "related_commits": [
      "aed9d65ac3278d4febd8665bd7db59ef53e825fe",
      "aed9d65ac3278d4febd8665bd7db59ef53e825fe"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/aed9d65ac3278d4febd8665bd7db59ef53e825fe.patch",
    "fix_commit_details": {
      "sha": "aed9d65ac3278d4febd8665bd7db59ef53e825fe",
      "commit_date": "2016-08-01T19:25:56Z",
      "author": {
        "login": "AlanStern",
        "type": "User",
        "stats": {
          "total_commits": 1400,
          "average_weekly_commits": 1.1774600504625736,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 469
        }
      },
      "commit_message": {
        "title": "USB: validate wMaxPacketValue entries in endpoint descriptors",
        "length": 715,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 66,
        "additions": 63,
        "deletions": 3
      },
      "files": [
        {
          "filename": "drivers/usb/core/config.c",
          "status": "modified",
          "additions": 63,
          "deletions": 3,
          "patch": "@@ -171,6 +171,31 @@ static void usb_parse_ss_endpoint_companion(struct device *ddev, int cfgno,\n \t\t\t\t\t\t\tep, buffer, size);\n }\n \n+static const unsigned short low_speed_maxpacket_maxes[4] = {\n+\t[USB_ENDPOINT_XFER_CONTROL] = 8,\n+\t[USB_ENDPOINT_XFER_ISOC] = 0,\n+\t[USB_ENDPOINT_XFER_BULK] = 0,\n+\t[USB_ENDPOINT_XFER_INT] = 8,\n+};\n+static const unsigned short full_speed_maxpacket_maxes[4] = {\n+\t[USB_ENDPOINT_XFER_CONTROL] = 64,\n+\t[USB_ENDPOINT_XFER_ISOC] = 1023,\n+\t[USB_ENDPOINT_XFER_BULK] = 64,\n+\t[USB_ENDPOINT_XFER_INT] = 64,\n+};\n+static const unsigned short high_speed_maxpacket_maxes[4] = {\n+\t[USB_ENDPOINT_XFER_CONTROL] = 64,\n+\t[USB_ENDPOINT_XFER_ISOC] = 1024,\n+\t[USB_ENDPOINT_XFER_BULK] = 512,\n+\t[USB_ENDPOINT_XFER_INT] = 1023,\n+};\n+static const unsigned short super_speed_maxpacket_maxes[4] = {\n+\t[USB_ENDPOINT_XFER_CONTROL] = 512,\n+\t[USB_ENDPOINT_XFER_ISOC] = 1024,\n+\t[USB_ENDPOINT_XFER_BULK] = 1024,\n+\t[USB_ENDPOINT_XFER_INT] = 1024,\n+};\n+\n static int usb_parse_endpoint(struct device *ddev, int cfgno, int inum,\n     int asnum, struct usb_host_interface *ifp, int num_ep,\n     unsigned char *buffer, int size)\n@@ -179,6 +204,8 @@ static int usb_parse_endpoint(struct device *ddev, int cfgno, int inum,\n \tstruct usb_endpoint_descriptor *d;\n \tstruct usb_host_endpoint *endpoint;\n \tint n, i, j, retval;\n+\tunsigned int maxp;\n+\tconst unsigned short *maxpacket_maxes;\n \n \td = (struct usb_endpoint_descriptor *) buffer;\n \tbuffer += d->bLength;\n@@ -286,16 +313,49 @@ static int usb_parse_endpoint(struct device *ddev, int cfgno, int inum,\n \t\t\tendpoint->desc.wMaxPacketSize = cpu_to_le16(8);\n \t}\n \n+\t/* Validate the wMaxPacketSize field */\n+\tmaxp = usb_endpoint_maxp(&endpoint->desc);\n+\n+\t/* Find the highest legal maxpacket size for this endpoint */\n+\ti = 0;\t\t/* additional transactions per microframe */\n+\tswitch (to_usb_device(ddev)->speed) {\n+\tcase USB_SPEED_LOW:\n+\t\tmaxpacket_maxes = low_speed_maxpacket_maxes;\n+\t\tbreak;\n+\tcase USB_SPEED_FULL:\n+\t\tmaxpacket_maxes = full_speed_maxpacket_maxes;\n+\t\tbreak;\n+\tcase USB_SPEED_HIGH:\n+\t\t/* Bits 12..11 are allowed only for HS periodic endpoints */\n+\t\tif (usb_endpoint_xfer_int(d) || usb_endpoint_xfer_isoc(d)) {\n+\t\t\ti = maxp & (BIT(12) | BIT(11));\n+\t\t\tmaxp &= ~i;\n+\t\t}\n+\t\t/* fallthrough */\n+\tdefault:\n+\t\tmaxpacket_maxes = high_speed_maxpacket_maxes;\n+\t\tbreak;\n+\tcase USB_SPEED_SUPER:\n+\tcase USB_SPEED_SUPER_PLUS:\n+\t\tmaxpacket_maxes = super_speed_maxpacket_maxes;\n+\t\tbreak;\n+\t}\n+\tj = maxpacket_maxes[usb_endpoint_type(&endpoint->desc)];\n+\n+\tif (maxp > j) {\n+\t\tdev_warn(ddev, \"config %d interface %d altsetting %d endpoint 0x%X has invalid maxpacket %d, setting to %d\\n\",\n+\t\t    cfgno, inum, asnum, d->bEndpointAddress, maxp, j);\n+\t\tmaxp = j;\n+\t\tendpoint->desc.wMaxPacketSize = cpu_to_le16(i | maxp);\n+\t}\n+\n \t/*\n \t * Some buggy high speed devices have bulk endpoints using\n \t * maxpacket sizes other than 512.  High speed HCDs may not\n \t * be able to handle that particular bug, so let's warn...\n \t */\n \tif (to_usb_device(ddev)->speed == USB_SPEED_HIGH\n \t\t\t&& usb_endpoint_xfer_bulk(d)) {\n-\t\tunsigned maxp;\n-\n-\t\tmaxp = usb_endpoint_maxp(&endpoint->desc) & 0x07ff;\n \t\tif (maxp != 512)\n \t\t\tdev_warn(ddev, \"config %d interface %d altsetting %d \"\n \t\t\t\t\"bulk endpoint 0x%X has invalid maxpacket %d\\n\","
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7f5b6a8ec18e3add4c74682f60b90c31bdf849f2",
            "date": "2025-01-14T19:32:14Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": null,
    "description": "In the Linux kernel before 4.8, usb_parse_endpoint in drivers/usb/core/config.c does not validate the wMaxPacketSize field of an endpoint descriptor. NOTE: This vulnerability only affects products that are no longer supported by the supplier.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-06-27T23:15:50.127",
    "last_modified": "2024-11-21T02:47:34.523",
    "fix_date": "2016-08-01T19:25:56Z"
  },
  "references": [
    {
      "url": "https://github.com/torvalds/linux/commit/aed9d65ac3278d4febd8665bd7db59ef53e825fe",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lore.kernel.org/lkml/1486322541-8206-8-git-send-email-w%401wt.eu/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.spinics.net/lists/linux-usb/msg144177.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/aed9d65ac3278d4febd8665bd7db59ef53e825fe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lore.kernel.org/lkml/1486322541-8206-8-git-send-email-w%401wt.eu/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.spinics.net/lists/linux-usb/msg144177.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.869686",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}