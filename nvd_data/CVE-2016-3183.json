{
  "cve_id": "CVE-2016-3183",
  "github_data": {
    "repository": "uclouvain/openjpeg",
    "fix_commit": "15f081c89650dccee4aa4ae66f614c3fdb268767",
    "related_commits": [
      "15f081c89650dccee4aa4ae66f614c3fdb268767",
      "15f081c89650dccee4aa4ae66f614c3fdb268767"
    ],
    "patch_url": "https://github.com/uclouvain/openjpeg/commit/15f081c89650dccee4aa4ae66f614c3fdb268767.patch",
    "fix_commit_details": {
      "sha": "15f081c89650dccee4aa4ae66f614c3fdb268767",
      "commit_date": "2016-04-29T22:33:27Z",
      "author": {
        "login": "mayeut",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix Out-Of-Bounds Read in sycc42x_to_rgb function (#745)",
        "length": 215,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 150,
        "additions": 87,
        "deletions": 63
      },
      "files": [
        {
          "filename": "src/bin/common/color.c",
          "status": "modified",
          "additions": 86,
          "deletions": 62,
          "patch": "@@ -91,22 +91,22 @@ static void sycc444_to_rgb(opj_image_t *img)\n {\n \tint *d0, *d1, *d2, *r, *g, *b;\n \tconst int *y, *cb, *cr;\n-\tunsigned int maxw, maxh, max, i;\n+\tsize_t maxw, maxh, max, i;\n \tint offset, upb;\n \n \tupb = (int)img->comps[0].prec;\n \toffset = 1<<(upb - 1); upb = (1<<upb)-1;\n \n-\tmaxw = (unsigned int)img->comps[0].w; maxh = (unsigned int)img->comps[0].h;\n+\tmaxw = (size_t)img->comps[0].w; maxh = (size_t)img->comps[0].h;\n \tmax = maxw * maxh;\n \n \ty = img->comps[0].data;\n \tcb = img->comps[1].data;\n \tcr = img->comps[2].data;\n \n-\td0 = r = (int*)malloc(sizeof(int) * (size_t)max);\n-\td1 = g = (int*)malloc(sizeof(int) * (size_t)max);\n-\td2 = b = (int*)malloc(sizeof(int) * (size_t)max);\n+\td0 = r = (int*)malloc(sizeof(int) * max);\n+\td1 = g = (int*)malloc(sizeof(int) * max);\n+\td2 = b = (int*)malloc(sizeof(int) * max);\n \n \tif(r == NULL || g == NULL || b == NULL) goto fails;\n \n@@ -118,107 +118,138 @@ static void sycc444_to_rgb(opj_image_t *img)\n \tfree(img->comps[0].data); img->comps[0].data = d0;\n \tfree(img->comps[1].data); img->comps[1].data = d1;\n \tfree(img->comps[2].data); img->comps[2].data = d2;\n+\timg->color_space = OPJ_CLRSPC_SRGB;\n \treturn;\n \n fails:\n-\tif(r) free(r);\n-\tif(g) free(g);\n-\tif(b) free(b);\n-\n+\tfree(r);\n+\tfree(g);\n+\tfree(b);\n }/* sycc444_to_rgb() */\n \n static void sycc422_to_rgb(opj_image_t *img)\n {\t\n \tint *d0, *d1, *d2, *r, *g, *b;\n \tconst int *y, *cb, *cr;\n-\tunsigned int maxw, maxh, max;\n+\tsize_t maxw, maxh, max, offx, loopmaxw;\n \tint offset, upb;\n-\tunsigned int i, j;\n+\tsize_t i;\n \n \tupb = (int)img->comps[0].prec;\n \toffset = 1<<(upb - 1); upb = (1<<upb)-1;\n \n-\tmaxw = (unsigned int)img->comps[0].w; maxh = (unsigned int)img->comps[0].h;\n+\tmaxw = (size_t)img->comps[0].w; maxh = (size_t)img->comps[0].h;\n \tmax = maxw * maxh;\n \n \ty = img->comps[0].data;\n \tcb = img->comps[1].data;\n \tcr = img->comps[2].data;\n \n-\td0 = r = (int*)malloc(sizeof(int) * (size_t)max);\n-\td1 = g = (int*)malloc(sizeof(int) * (size_t)max);\n-\td2 = b = (int*)malloc(sizeof(int) * (size_t)max);\n+\td0 = r = (int*)malloc(sizeof(int) * max);\n+\td1 = g = (int*)malloc(sizeof(int) * max);\n+\td2 = b = (int*)malloc(sizeof(int) * max);\n \n \tif(r == NULL || g == NULL || b == NULL) goto fails;\n \n+\t/* if img->x0 is odd, then first column shall use Cb/Cr = 0 */\n+\toffx = img->x0 & 1U;\n+\tloopmaxw = maxw - offx;\n+\t\n \tfor(i=0U; i < maxh; ++i)\n \t{\n-\t\tfor(j=0U; j < (maxw & ~(unsigned int)1U); j += 2U)\n+\t\tsize_t j;\n+\t\t\n+\t\tif (offx > 0U) {\n+\t\t\tsycc_to_rgb(offset, upb, *y, 0, 0, r, g, b);\n+\t\t\t++y; ++r; ++g; ++b;\n+\t\t}\n+\t\t\n+\t\tfor(j=0U; j < (loopmaxw & ~(size_t)1U); j += 2U)\n \t\t{\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \t\t\t++y; ++r; ++g; ++b;\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \t\t\t++y; ++r; ++g; ++b; ++cb; ++cr;\n \t\t}\n-\t\tif (j < maxw) {\n+\t\tif (j < loopmaxw) {\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \t\t\t++y; ++r; ++g; ++b; ++cb; ++cr;\n \t\t}\n \t}\n+\t\n \tfree(img->comps[0].data); img->comps[0].data = d0;\n \tfree(img->comps[1].data); img->comps[1].data = d1;\n \tfree(img->comps[2].data); img->comps[2].data = d2;\n \n-#if defined(USE_JPWL) || defined(USE_MJ2)\n-\timg->comps[1].w = maxw; img->comps[1].h = maxh;\n-\timg->comps[2].w = maxw; img->comps[2].h = maxh;\n-#else\n-\timg->comps[1].w = (OPJ_UINT32)maxw; img->comps[1].h = (OPJ_UINT32)maxh;\n-\timg->comps[2].w = (OPJ_UINT32)maxw; img->comps[2].h = (OPJ_UINT32)maxh;\n-#endif\n-\timg->comps[1].dx = img->comps[0].dx;\n-\timg->comps[2].dx = img->comps[0].dx;\n-\timg->comps[1].dy = img->comps[0].dy;\n-\timg->comps[2].dy = img->comps[0].dy;\n+\timg->comps[1].w = img->comps[2].w = img->comps[0].w;\n+\timg->comps[1].h = img->comps[2].h = img->comps[0].h;\n+\timg->comps[1].dx = img->comps[2].dx = img->comps[0].dx;\n+\timg->comps[1].dy = img->comps[2].dy = img->comps[0].dy;\n+\timg->color_space = OPJ_CLRSPC_SRGB;\n \treturn;\n \n fails:\n-\tif(r) free(r);\n-\tif(g) free(g);\n-\tif(b) free(b);\n-\n+\tfree(r);\n+\tfree(g);\n+\tfree(b);\n }/* sycc422_to_rgb() */\n \n static void sycc420_to_rgb(opj_image_t *img)\n {\n \tint *d0, *d1, *d2, *r, *g, *b, *nr, *ng, *nb;\n \tconst int *y, *cb, *cr, *ny;\n-\tunsigned int maxw, maxh, max;\n+\tsize_t maxw, maxh, max, offx, loopmaxw, offy, loopmaxh;\n \tint offset, upb;\n-\tunsigned int i, j;\n+\tsize_t i;\n \n \tupb = (int)img->comps[0].prec;\n \toffset = 1<<(upb - 1); upb = (1<<upb)-1;\n \n-\tmaxw = (unsigned int)img->comps[0].w; maxh = (unsigned int)img->comps[0].h;\n+\tmaxw = (size_t)img->comps[0].w; maxh = (size_t)img->comps[0].h;\n \tmax = maxw * maxh;\n \n \ty = img->comps[0].data;\n \tcb = img->comps[1].data;\n \tcr = img->comps[2].data;\n \n-\td0 = r = (int*)malloc(sizeof(int) * (size_t)max);\n-\td1 = g = (int*)malloc(sizeof(int) * (size_t)max);\n-\td2 = b = (int*)malloc(sizeof(int) * (size_t)max);\n-\n-\tif(r == NULL || g == NULL || b == NULL) goto fails;\n+\td0 = r = (int*)malloc(sizeof(int) * max);\n+\td1 = g = (int*)malloc(sizeof(int) * max);\n+\td2 = b = (int*)malloc(sizeof(int) * max);\n+\t\n+\tif (r == NULL || g == NULL || b == NULL) goto fails;\n+\t\n+\t/* if img->x0 is odd, then first column shall use Cb/Cr = 0 */\n+\toffx = img->x0 & 1U;\n+\tloopmaxw = maxw - offx;\n+\t/* if img->y0 is odd, then first line shall use Cb/Cr = 0 */\n+\toffy = img->y0 & 1U;\n+\tloopmaxh = maxh - offy;\n+\t\n+\tif (offy > 0U) {\n+\t\tsize_t j;\n+\t\t\n+\t\tfor(j=0; j < maxw; ++j)\n+\t\t{\n+\t\t\tsycc_to_rgb(offset, upb, *y, 0, 0, r, g, b);\n+\t\t\t++y; ++r; ++g; ++b;\n+\t\t}\n+\t}\n \n-\tfor(i=0U; i < (maxh & ~(unsigned int)1U); i += 2U)\n+\tfor(i=0U; i < (loopmaxh & ~(size_t)1U); i += 2U)\n \t{\n+\t\tsize_t j;\n+\t\t\n \t\tny = y + maxw;\n \t\tnr = r + maxw; ng = g + maxw; nb = b + maxw;\n+\t\t\n+\t\tif (offx > 0U) {\n+\t\t\tsycc_to_rgb(offset, upb, *y, 0, 0, r, g, b);\n+\t\t\t++y; ++r; ++g; ++b;\n+\t\t\tsycc_to_rgb(offset, upb, *ny, *cb, *cr, nr, ng, nb);\n+\t\t\t++ny; ++nr; ++ng; ++nb;\n+\t\t}\n \n-\t\tfor(j=0; j < (maxw & ~(unsigned int)1U); j += 2U)\n+\t\tfor(j=0; j < (loopmaxw & ~(size_t)1U); j += 2U)\n \t\t{\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \t\t\t++y; ++r; ++g; ++b;\n@@ -230,7 +261,7 @@ static void sycc420_to_rgb(opj_image_t *img)\n \t\t\tsycc_to_rgb(offset, upb, *ny, *cb, *cr, nr, ng, nb);\n \t\t\t++ny; ++nr; ++ng; ++nb; ++cb; ++cr;\n \t\t}\n-\t\tif(j < maxw)\n+\t\tif(j < loopmaxw)\n \t\t{\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \t\t\t++y; ++r; ++g; ++b;\n@@ -240,9 +271,11 @@ static void sycc420_to_rgb(opj_image_t *img)\n \t\t}\n \t\ty += maxw; r += maxw; g += maxw; b += maxw;\n \t}\n-\tif(i < maxh)\n+\tif(i < loopmaxh)\n \t{\n-\t\tfor(j=0U; j < (maxw & ~(unsigned int)1U); j += 2U)\n+\t\tsize_t j;\n+\t\t\n+\t\tfor(j=0U; j < (maxw & ~(size_t)1U); j += 2U)\n \t\t{\n \t\t\tsycc_to_rgb(offset, upb, *y, *cb, *cr, r, g, b);\n \n@@ -262,24 +295,17 @@ static void sycc420_to_rgb(opj_image_t *img)\n \tfree(img->comps[1].data); img->comps[1].data = d1;\n \tfree(img->comps[2].data); img->comps[2].data = d2;\n \n-#if defined(USE_JPWL) || defined(USE_MJ2)\n-\timg->comps[1].w = maxw; img->comps[1].h = maxh;\n-\timg->comps[2].w = maxw; img->comps[2].h = maxh;\n-#else\n-\timg->comps[1].w = (OPJ_UINT32)maxw; img->comps[1].h = (OPJ_UINT32)maxh;\n-\timg->comps[2].w = (OPJ_UINT32)maxw; img->comps[2].h = (OPJ_UINT32)maxh;\n-#endif\n-\timg->comps[1].dx = img->comps[0].dx;\n-\timg->comps[2].dx = img->comps[0].dx;\n-\timg->comps[1].dy = img->comps[0].dy;\n-\timg->comps[2].dy = img->comps[0].dy;\n+\timg->comps[1].w = img->comps[2].w = img->comps[0].w;\n+\timg->comps[1].h = img->comps[2].h = img->comps[0].h;\n+\timg->comps[1].dx = img->comps[2].dx = img->comps[0].dx;\n+\timg->comps[1].dy = img->comps[2].dy = img->comps[0].dy;\n+\timg->color_space = OPJ_CLRSPC_SRGB;\n \treturn;\n \n fails:\n-\tif(r) free(r);\n-\tif(g) free(g);\n-\tif(b) free(b);\n-\n+\tfree(r);\n+\tfree(g);\n+\tfree(b);\n }/* sycc420_to_rgb() */\n \n void color_sycc_to_rgb(opj_image_t *img)\n@@ -324,8 +350,6 @@ void color_sycc_to_rgb(opj_image_t *img)\n \t\tfprintf(stderr,\"%s:%d:color_sycc_to_rgb\\n\\tCAN NOT CONVERT\\n\", __FILE__,__LINE__);\n \t\treturn;\n   }\n-\timg->color_space = OPJ_CLRSPC_SRGB;\n-\n }/* color_sycc_to_rgb() */\n \n #if defined(OPJ_HAVE_LIBLCMS2) || defined(OPJ_HAVE_LIBLCMS1)"
        },
        {
          "filename": "src/bin/jp2/convertbmp.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -967,7 +967,7 @@ int imagetobmp(opj_image_t * image, const char *outfile) {\n             fprintf(fdest, \"%c\", (OPJ_UINT8)r);\n \n             if ((i + 1) % w == 0) {\n-                for ((pad = w % 4) ? (4 - w % 4) : 0; pad > 0; pad--)\t/* ADD */\n+                for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--)\t/* ADD */\n                     fprintf(fdest, \"%c\", 0);\n             }\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eb25a5ec777ff6699f4bb1187740467dcfa64dd6",
            "date": "2024-12-09T16:48:54Z",
            "author_login": "rouault"
          },
          {
            "sha": "672ecbb10a8b74f6723e2e9bf062ac0f10625f98",
            "date": "2024-12-09T16:37:23Z",
            "author_login": "rouault"
          },
          {
            "sha": "210a8a5690d0da66f02d49420d7176a21ef409dc",
            "date": "2024-12-09T16:31:23Z",
            "author_login": "rouault"
          },
          {
            "sha": "e2cf50f68a51f4bbe09c400d8bcfb522e9f2bef2",
            "date": "2024-12-09T16:31:02Z",
            "author_login": "rouault"
          },
          {
            "sha": "4e3412d0a0777a12fddf0b469fd09771a2678bad",
            "date": "2024-12-09T16:27:18Z",
            "author_login": "rouault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The sycc422_t_rgb function in common/color.c in OpenJPEG before 2.1.1 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted jpeg2000 file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-02-03T16:59:00.137",
    "last_modified": "2024-11-21T02:49:33.260",
    "fix_date": "2016-04-29T22:33:27Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/03/16/17",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Patch"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1317821",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/commit/15f081c89650dccee4aa4ae66f614c3fdb268767",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/issues/726",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/5FFMOZOF2EI6N2CR23EQ5EATWLQKBMHW/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BJM23YERMEC6LCTWBUH7LZURGSLZDFDH/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DFRD35RIPRCGZA5DKAKHZ62LMP2A5UT7/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HPMDEUIMHTLKMHELDL4F4HZ7X4Y34JEB/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/201612-26",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/03/16/17",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1317821",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/commit/15f081c89650dccee4aa4ae66f614c3fdb268767",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/issues/726",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/5FFMOZOF2EI6N2CR23EQ5EATWLQKBMHW/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BJM23YERMEC6LCTWBUH7LZURGSLZDFDH/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DFRD35RIPRCGZA5DKAKHZ62LMP2A5UT7/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HPMDEUIMHTLKMHELDL4F4HZ7X4Y34JEB/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/201612-26",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.206807",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openjpeg",
    "owner": "uclouvain",
    "created_at": "2015-02-15T15:04:29Z",
    "updated_at": "2025-01-14T10:29:19Z",
    "pushed_at": "2024-12-09T16:48:56Z",
    "size": 135125,
    "stars": 995,
    "forks": 463,
    "open_issues": 333,
    "watchers": 995,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 3036412,
      "C++": 338909,
      "CMake": 114732,
      "Java": 94066,
      "Shell": 36099,
      "Python": 11488,
      "Inno Setup": 1876,
      "HTML": 1412,
      "Makefile": 352
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:56.605469"
  }
}