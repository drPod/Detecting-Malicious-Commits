{
  "cve_id": "CVE-2016-4817",
  "github_data": {
    "repository": "h2o/h2o",
    "fix_commit": "1c0808d580da09fdec5a9a74ff09e103ea058dd4",
    "related_commits": [
      "1c0808d580da09fdec5a9a74ff09e103ea058dd4",
      "1c0808d580da09fdec5a9a74ff09e103ea058dd4"
    ],
    "patch_url": "https://github.com/h2o/h2o/commit/1c0808d580da09fdec5a9a74ff09e103ea058dd4.patch",
    "fix_commit_details": {
      "sha": "1c0808d580da09fdec5a9a74ff09e103ea058dd4",
      "commit_date": "2016-05-23T16:29:07Z",
      "author": {
        "login": "deweerdt",
        "type": "User",
        "stats": {
          "total_commits": 814,
          "average_weekly_commits": 1.4746376811594204,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 180
        }
      },
      "commit_message": {
        "title": "h2: use after free on premature connection close #920",
        "length": 509,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 17,
        "additions": 10,
        "deletions": 7
      },
      "files": [
        {
          "filename": "lib/http2/connection.c",
          "status": "modified",
          "additions": 10,
          "deletions": 7,
          "patch": "@@ -55,7 +55,7 @@ static const h2o_iovec_t SETTINGS_HOST_BIN = {H2O_STRLIT(\"\\x00\\x00\\x0c\"     /* f\n static __thread h2o_buffer_prototype_t wbuf_buffer_prototype = {{16}, {H2O_HTTP2_DEFAULT_OUTBUF_SIZE}};\n \n static void initiate_graceful_shutdown(h2o_context_t *ctx);\n-static void close_connection(h2o_http2_conn_t *conn);\n+static int close_connection(h2o_http2_conn_t *conn);\n static void send_stream_error(h2o_http2_conn_t *conn, uint32_t stream_id, int errnum);\n static ssize_t expect_default(h2o_http2_conn_t *conn, const uint8_t *src, size_t len, const char **err_desc);\n static int do_emit_writereq(h2o_http2_conn_t *conn);\n@@ -261,15 +261,17 @@ static void close_connection_now(h2o_http2_conn_t *conn)\n     free(conn);\n }\n \n-void close_connection(h2o_http2_conn_t *conn)\n+int close_connection(h2o_http2_conn_t *conn)\n {\n     conn->state = H2O_HTTP2_CONN_STATE_IS_CLOSING;\n \n     if (conn->_write.buf_in_flight != NULL || h2o_timeout_is_linked(&conn->_write.timeout_entry)) {\n         /* there is a pending write, let on_write_complete actually close the connection */\n     } else {\n         close_connection_now(conn);\n+        return -1;\n     }\n+    return 0;\n }\n \n void send_stream_error(h2o_http2_conn_t *conn, uint32_t stream_id, int errnum)\n@@ -808,7 +810,7 @@ static ssize_t expect_preface(h2o_http2_conn_t *conn, const uint8_t *src, size_t\n     return CONNECTION_PREFACE.len;\n }\n \n-static void parse_input(h2o_http2_conn_t *conn)\n+static int parse_input(h2o_http2_conn_t *conn)\n {\n     size_t http2_max_concurrent_requests_per_connection = conn->super.ctx->globalconf->http2.max_concurrent_requests_per_connection;\n     int perform_early_exit = 0;\n@@ -831,20 +833,20 @@ static void parse_input(h2o_http2_conn_t *conn)\n                 enqueue_goaway(conn, (int)ret,\n                                err_desc != NULL ? (h2o_iovec_t){(char *)err_desc, strlen(err_desc)} : (h2o_iovec_t){});\n             }\n-            close_connection(conn);\n-            return;\n+            return close_connection(conn);\n         }\n         /* advance to the next frame */\n         h2o_buffer_consume(&conn->sock->input, ret);\n     }\n \n     if (!h2o_socket_is_reading(conn->sock))\n         h2o_socket_read_start(conn->sock, on_read);\n-    return;\n+    return 0;\n \n EarlyExit:\n     if (h2o_socket_is_reading(conn->sock))\n         h2o_socket_read_stop(conn->sock);\n+    return 0;\n }\n \n static void on_read(h2o_socket_t *sock, int status)\n@@ -858,7 +860,8 @@ static void on_read(h2o_socket_t *sock, int status)\n     }\n \n     update_idle_timeout(conn);\n-    parse_input(conn);\n+    if (parse_input(conn) != 0)\n+        return;\n \n     /* write immediately, if there is no write in flight and if pending write exists */\n     if (h2o_timeout_is_linked(&conn->_write.timeout_entry)) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "af505adb8f80a849a977ff083d95a528bda7600a",
            "date": "2025-01-12T08:09:42Z",
            "author_login": "kazuho"
          },
          {
            "sha": "a439e8b428f5fe4df77cec3c50b0e7bb497baf8e",
            "date": "2025-01-12T07:22:34Z",
            "author_login": "kazuho"
          },
          {
            "sha": "fe14ac460954434da8342b57c0c6d124860c75ef",
            "date": "2025-01-12T06:22:56Z",
            "author_login": "kazuho"
          },
          {
            "sha": "acab0beacebc7559c0da0f3925d8f4105c29ed13",
            "date": "2025-01-12T05:15:47Z",
            "author_login": "kazuho"
          },
          {
            "sha": "f59d8509da2fc9b5cdbcec5118317a847e6d29db",
            "date": "2025-01-12T05:16:22Z",
            "author_login": "kazuho"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": null,
    "description": "lib/http2/connection.c in H2O before 1.7.3 and 2.x before 2.0.0-beta5 mishandles HTTP/2 disconnection, which allows remote attackers to cause a denial of service (use-after-free and application crash) or possibly execute arbitrary code via a crafted packet.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-06-19T01:59:11.903",
    "last_modified": "2024-11-21T02:53:02.537",
    "fix_date": "2016-05-23T16:29:07Z"
  },
  "references": [
    {
      "url": "http://jvn.jp/en/jp/JVN87859762/index.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://jvndb.jvn.jp/jvndb/JVNDB-2016-000091",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/h2o/h2o/commit/1c0808d580da09fdec5a9a74ff09e103ea058dd4",
      "source": "vultures@jpcert.or.jp",
      "tags": []
    },
    {
      "url": "https://github.com/h2o/h2o/pull/920",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://jvn.jp/en/jp/JVN87859762/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://jvndb.jvn.jp/jvndb/JVNDB-2016-000091",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/h2o/h2o/commit/1c0808d580da09fdec5a9a74ff09e103ea058dd4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/h2o/h2o/pull/920",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:42.562022",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "h2o",
    "owner": "h2o",
    "created_at": "2014-08-16T23:59:03Z",
    "updated_at": "2025-01-14T02:47:54Z",
    "pushed_at": "2025-01-12T08:09:42Z",
    "size": 121723,
    "stars": 10968,
    "forks": 849,
    "open_issues": 691,
    "watchers": 10968,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 3167175,
      "Perl": 852069,
      "Mathematica": 212238,
      "Ruby": 66838,
      "Shell": 61760,
      "CMake": 43218,
      "Python": 27144,
      "C++": 24060,
      "PHP": 10137,
      "Makefile": 9686,
      "DTrace": 7182,
      "HTML": 6430,
      "Vim Script": 73,
      "JavaScript": 16
    },
    "commit_activity": {
      "total_commits_last_year": 421,
      "avg_commits_per_week": 8.096153846153847,
      "days_active_last_year": 102
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:02:53.733286"
  }
}