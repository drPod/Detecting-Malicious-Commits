{
  "cve_id": "CVE-2016-4999",
  "github_data": {
    "repository": "dashbuilder/dashbuilder",
    "fix_commit": "8574899e3b6455547b534f570b2330ff772e524b",
    "related_commits": [
      "8574899e3b6455547b534f570b2330ff772e524b",
      "8574899e3b6455547b534f570b2330ff772e524b"
    ],
    "patch_url": "https://github.com/dashbuilder/dashbuilder/commit/8574899e3b6455547b534f570b2330ff772e524b.patch",
    "fix_commit_details": {
      "sha": "8574899e3b6455547b534f570b2330ff772e524b",
      "commit_date": "2016-06-23T09:24:58Z",
      "author": {
        "login": "dgutierr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "DASHBUILDE-113: SQL Injection on data set lookup filters",
        "length": 56,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 104,
        "additions": 103,
        "deletions": 1
      },
      "files": [
        {
          "filename": "dashbuilder-backend/dashbuilder-dataset-sql/src/main/java/org/dashbuilder/dataprovider/sql/dialect/DefaultDialect.java",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -545,7 +545,9 @@ public String getDateParameterSQL(Date param) {\n \n     @Override\n     public String getStringParameterSQL(String param) {\n-        return \"'\" + param + \"'\";\n+        // DASHBUILDE-113: SQL Injection on data set lookup filters\n+        String escapedParam = param.replaceAll(\"'\", \"''\");\n+        return \"'\" + escapedParam + \"'\";\n     }\n \n     @Override"
        },
        {
          "filename": "dashbuilder-backend/dashbuilder-dataset-sql/src/test/java/org/dashbuilder/dataprovider/sql/SQLInjectionAttacksTest.java",
          "status": "added",
          "additions": 99,
          "deletions": 0,
          "patch": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.dashbuilder.dataprovider.sql;\n+\n+import org.dashbuilder.dataset.DataSet;\n+import org.dashbuilder.dataset.DataSetGroupTest;\n+import org.dashbuilder.dataset.DataSetLookupFactory;\n+import org.dashbuilder.dataset.filter.FilterFactory;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import org.slf4j.Logger;\n+\n+import static org.dashbuilder.dataset.ExpenseReportsData.*;\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.*;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class SQLInjectionAttacksTest extends SQLDataSetTestBase {\n+\n+    @Mock\n+    Logger logger;\n+\n+    @Before\n+    public void setUp() throws Exception{\n+        super.setUp();\n+\n+        sqlDataSetProvider.log = logger;\n+\n+        doAnswer(invocationOnMock -> {\n+                String sql = (String) invocationOnMock.getArguments()[0];\n+                System.out.println(sql);\n+                return null;\n+        }).when(logger).debug(anyString());\n+    }\n+\n+    @Override\n+    public void testAll() throws Exception {\n+        testStringFilterInjection();\n+    }\n+\n+    public void testStringFilterInjection() throws Exception {\n+        DataSet result = dataSetManager.lookupDataSet(\n+                DataSetLookupFactory.newDataSetLookupBuilder()\n+                        .dataset(DataSetGroupTest.EXPENSE_REPORTS)\n+                        .filter(COLUMN_EMPLOYEE, FilterFactory.equalsTo(\"David' OR EMPLOYEE != 'Toni\"))\n+                        .buildLookup());\n+\n+        assertEquals(result.getRowCount(), 0);\n+\n+        result = dataSetManager.lookupDataSet(\n+                DataSetLookupFactory.newDataSetLookupBuilder()\n+                        .dataset(DataSetGroupTest.EXPENSE_REPORTS)\n+                        .filter(COLUMN_EMPLOYEE, FilterFactory.equalsTo(\"David\\\" OR EMPLOYEE != \\\"Toni\"))\n+                        .buildLookup());\n+\n+        assertEquals(result.getRowCount(), 0);\n+\n+        result = dataSetManager.lookupDataSet(\n+                DataSetLookupFactory.newDataSetLookupBuilder()\n+                        .dataset(DataSetGroupTest.EXPENSE_REPORTS)\n+                        .filter(COLUMN_EMPLOYEE, FilterFactory.equalsTo(\"David` OR EMPLOYEE != `Toni\"))\n+                        .buildLookup());\n+\n+        assertEquals(result.getRowCount(), 0);\n+\n+    }\n+\n+    @Test\n+    public void testDropTable() throws Exception {\n+        DataSet result = dataSetManager.lookupDataSet(\n+                DataSetLookupFactory.newDataSetLookupBuilder()\n+                        .dataset(DataSetGroupTest.EXPENSE_REPORTS)\n+                        .filter(COLUMN_EMPLOYEE, FilterFactory.equalsTo(\"David'; DROP TABLE 'EXPENSE_REPORTS; SELECT 'a' = 'a\"))\n+                        .buildLookup());\n+\n+        result = dataSetManager.lookupDataSet(\n+                DataSetLookupFactory.newDataSetLookupBuilder()\n+                        .dataset(DataSetGroupTest.EXPENSE_REPORTS)\n+                        .buildLookup());\n+\n+        assertEquals(result.getRowCount(), 50);\n+    }\n+}"
        },
        {
          "filename": "dashbuilder-backend/dashbuilder-dataset-sql/src/test/java/org/dashbuilder/dataprovider/sql/SQLTestSuite.java",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -37,6 +37,7 @@ public void setUp() throws Exception {\n         sqlTestList.add(setUp(new SQLDataSetTrimTest()));\n         sqlTestList.add(setUp(new SQLTableDataSetLookupTest()));\n         sqlTestList.add(setUp(new SQLQueryDataSetLookupTest()));\n+        sqlTestList.add(setUp(new SQLInjectionAttacksTest()));\n     }\n \n     public void testAll() throws Exception {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1db9f2ffd12a2ce814b89b6ecc99f06635ddee85",
            "date": "2021-05-26T14:02:09Z",
            "author_login": "ederign"
          },
          {
            "sha": "3e4980caa5efbbb7e7095556556c1f0fbb3253aa",
            "date": "2021-05-26T13:57:11Z",
            "author_login": "ederign"
          },
          {
            "sha": "2197b531cedc1c7b295362b450b1f09454687ea2",
            "date": "2021-05-26T13:56:45Z",
            "author_login": "ederign"
          },
          {
            "sha": "50ef88210726b4f2f33f1a82eaf0f542e38dedd9",
            "date": "2017-11-28T17:22:19Z",
            "author_login": "mbarkley"
          },
          {
            "sha": "50c8b7e9f0bfc7e302c376a83ea67d7c64b8a667",
            "date": "2017-11-22T23:09:52Z",
            "author_login": "psiroky"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "SQL injection vulnerability in the getStringParameterSQL method in main/java/org/dashbuilder/dataprovider/sql/dialect/DefaultDialect.java in Dashbuilder before 0.6.0.Beta1 allows remote attackers to execute arbitrary SQL commands via a data set lookup filter in the (1) Data Set Authoring or (2) Displayer editor UI.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2016-08-05T15:59:06.987",
    "last_modified": "2024-11-21T02:53:24.133",
    "fix_date": "2016-06-23T09:24:58Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/91795",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:1428",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:1429",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1349990",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/dashbuilder/dashbuilder/commit/8574899e3b6455547b534f570b2330ff772e524b",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.jboss.org/browse/DASHBUILDE-113",
      "source": "secalert@redhat.com",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/91795",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:1428",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2016:1429",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1349990",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/dashbuilder/dashbuilder/commit/8574899e3b6455547b534f570b2330ff772e524b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.jboss.org/browse/DASHBUILDE-113",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:46.764435",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dashbuilder",
    "owner": "dashbuilder",
    "created_at": "2014-03-19T09:46:24Z",
    "updated_at": "2024-11-06T10:23:49Z",
    "pushed_at": "2023-04-15T18:21:42Z",
    "size": 10452,
    "stars": 191,
    "forks": 121,
    "open_issues": 2,
    "watchers": 191,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "0.2.x",
      "0.3.x",
      "0.4.x",
      "master"
    ],
    "languages": {
      "Java": 3012333,
      "HTML": 26022,
      "CSS": 7443,
      "Shell": 6149
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:40:17.325140"
  }
}