{
  "cve_id": "CVE-2016-5094",
  "github_data": {
    "repository": "php/php-src",
    "fix_commit": "0da8b8b801f9276359262f1ef8274c7812d3dfda",
    "related_commits": [
      "0da8b8b801f9276359262f1ef8274c7812d3dfda",
      "0da8b8b801f9276359262f1ef8274c7812d3dfda"
    ],
    "patch_url": "https://github.com/php/php-src/commit/0da8b8b801f9276359262f1ef8274c7812d3dfda.patch",
    "fix_commit_details": {
      "sha": "0da8b8b801f9276359262f1ef8274c7812d3dfda",
      "commit_date": "2016-05-16T06:26:51Z",
      "author": {
        "login": "smalyshev",
        "type": "User",
        "stats": {
          "total_commits": 4051,
          "average_weekly_commits": 3.0096582466567607,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 527
        }
      },
      "commit_message": {
        "title": "Fix bug #72135 - don't create strings with lengths outside int range",
        "length": 68,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 27,
        "deletions": 23
      },
      "files": [
        {
          "filename": "ext/standard/html.c",
          "status": "modified",
          "additions": 27,
          "deletions": 23,
          "patch": "@@ -163,7 +163,7 @@ static inline unsigned int get_next_char(\n \t\t\t\t\telse\n \t\t\t\t\t\tMB_FAILURE(pos, 4);\n \t\t\t\t}\n-\t\t\t\t\n+\n \t\t\t\tthis_char = ((c & 0x07) << 18) | ((str[pos + 1] & 0x3f) << 12) | ((str[pos + 2] & 0x3f) << 6) | (str[pos + 3] & 0x3f);\n \t\t\t\tif (this_char < 0x10000 || this_char > 0x10FFFF) { /* non-shortest form or outside range */\n \t\t\t\t\tMB_FAILURE(pos, 4);\n@@ -437,7 +437,7 @@ static enum entity_charset determine_charset(char *charset_hint TSRMLS_DC)\n \n \tif (charset_hint) {\n \t\tint found = 0;\n-\t\t\n+\n \t\t/* now walk the charset map and look for the codeset */\n \t\tfor (i = 0; charset_map[i].codeset; i++) {\n \t\t\tif (len == strlen(charset_map[i].codeset) && strncasecmp(charset_hint, charset_map[i].codeset, len) == 0) {\n@@ -545,7 +545,7 @@ static inline unsigned char unimap_bsearch(const uni_to_enc *table, unsigned cod\n \t\treturn 0;\n \n \tcode_key = (unsigned short) code_key_a;\n-\t\n+\n \twhile (l <= h) {\n \t\tm = l + (h - l) / 2;\n \t\tif (code_key < m->un_code_point)\n@@ -571,7 +571,7 @@ static inline int map_from_unicode(unsigned code, enum entity_charset charset, u\n \t\t/* identity mapping of code points to unicode */\n \t\tif (code > 0xFF) {\n \t\t\treturn FAILURE;\n-\t\t} \n+\t\t}\n \t\t*res = code;\n \t\tbreak;\n \n@@ -590,7 +590,7 @@ static inline int map_from_unicode(unsigned code, enum entity_charset charset, u\n \t\t\treturn FAILURE;\n \t\t}\n \t\tbreak;\n-\t\t\n+\n \tcase cs_8859_15:\n \t\tif (code < 0xA4 || (code > 0xBE && code <= 0xFF)) {\n \t\t\t*res = code;\n@@ -634,7 +634,7 @@ static inline int map_from_unicode(unsigned code, enum entity_charset charset, u\n \tcase cs_cp866:\n \t\ttable = unimap_cp866;\n \t\ttable_size = sizeof(unimap_cp866) / sizeof(*unimap_cp866);\n-\t\t\n+\n table_over_7F:\n \t\tif (code <= 0x7F) {\n \t\t\t*res = code;\n@@ -710,7 +710,7 @@ static inline int unicode_cp_is_allowed(unsigned uni_cp, int document_type)\n \t * Not sure this is the relevant part for HTML 5, though. I opted to\n \t * disallow the characters that would result in a parse error when\n \t * preprocessing of the input stream. See also section 8.1.3.\n-\t * \n+\t *\n \t * It's unclear if XHTML 1.0 allows C1 characters. I'll opt to apply to\n \t * XHTML 1.0 the same rules as for XML 1.0.\n \t * See <http://cmsmcq.com/2007/C1.xml>.\n@@ -774,7 +774,7 @@ static inline int numeric_entity_is_allowed(unsigned uni_cp, int document_type)\n /* {{{ process_numeric_entity\n  * Auxiliary function to traverse_for_entities.\n  * On input, *buf should point to the first character after # and on output, it's the last\n- * byte read, no matter if there was success or insuccess. \n+ * byte read, no matter if there was success or insuccess.\n  */\n static inline int process_numeric_entity(const char **buf, unsigned *code_point)\n {\n@@ -784,7 +784,7 @@ static inline int process_numeric_entity(const char **buf, unsigned *code_point)\n \n \tif (hexadecimal && (**buf != '\\0'))\n \t\t(*buf)++;\n-\t\t\t\n+\n \t/* strtol allows whitespace and other stuff in the beginning\n \t\t* we're not interested */\n \tif ((hexadecimal && !isxdigit(**buf)) ||\n@@ -969,7 +969,7 @@ static void traverse_for_entities(\n \t\t\t\tgoto invalid_code;\n \n \t\t\t/* are we allowed to decode this entity in this document type?\n-\t\t\t * HTML 5 is the only that has a character that cannot be used in \n+\t\t\t * HTML 5 is the only that has a character that cannot be used in\n \t\t\t * a numeric entity but is allowed literally (U+000D). The\n \t\t\t * unoptimized version would be ... || !numeric_entity_is_allowed(code) */\n \t\t\tif (!unicode_cp_is_allowed(code, doctype) ||\n@@ -996,9 +996,9 @@ static void traverse_for_entities(\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\t\n+\n \t\tassert(*next == ';');\n-\t\t\n+\n \t\tif (((code == '\\'' && !(flags & ENT_HTML_QUOTE_SINGLE)) ||\n \t\t\t\t(code == '\"' && !(flags & ENT_HTML_QUOTE_DOUBLE)))\n \t\t\t\t/* && code2 == '\\0' always true for current maps */)\n@@ -1026,7 +1026,7 @@ static void traverse_for_entities(\n \t\t\t*(q++) = *p;\n \t\t}\n \t}\n-\t\n+\n \t*q = '\\0';\n \t*retlen = (size_t)(q - ret);\n }\n@@ -1066,7 +1066,7 @@ static entity_table_opt determine_entity_table(int all, int doctype)\n \tentity_table_opt retval = {NULL};\n \n \tassert(!(doctype == ENT_HTML_DOC_XML1 && all));\n-\t\n+\n \tif (all) {\n \t\tretval.ms_table = (doctype == ENT_HTML_DOC_HTML5) ?\n \t\t\tentity_ms_table_html5 : entity_ms_table_html4;\n@@ -1111,13 +1111,13 @@ PHPAPI char *php_unescape_html_entities(unsigned char *old, size_t oldlen, size_\n \tif (retlen == 0) {\n \t\tgoto empty_source;\n \t}\n-\t\n+\n \tinverse_map = unescape_inverse_map(all, flags);\n-\t\n+\n \t/* replace numeric entities */\n \ttraverse_for_entities(old, oldlen, ret, &retlen, all, flags, inverse_map, charset);\n \n-empty_source:\t\n+empty_source:\n \t*newlen = retlen;\n \treturn ret;\n }\n@@ -1141,7 +1141,7 @@ static inline void find_entity_for_char(\n {\n \tunsigned stage1_idx = ENT_STAGE1_INDEX(k);\n \tconst entity_stage3_row *c;\n-\t\n+\n \tif (stage1_idx > 0x1D) {\n \t\t*entity     = NULL;\n \t\t*entity_len = 0;\n@@ -1162,7 +1162,7 @@ static inline void find_entity_for_char(\n \t\tif (!(*cursor < oldlen))\n \t\t\tgoto no_suitable_2nd;\n \n-\t\tnext_char = get_next_char(charset, old, oldlen, cursor, &status); \n+\t\tnext_char = get_next_char(charset, old, oldlen, cursor, &status);\n \n \t\tif (status == FAILURE)\n \t\t\tgoto no_suitable_2nd;\n@@ -1187,7 +1187,7 @@ static inline void find_entity_for_char(\n \t\t*entity = (const unsigned char *)\n \t\t\tc->data.multicodepoint_table[0].leading_entry.default_entity;\n \t\t*entity_len = c->data.multicodepoint_table[0].leading_entry.default_entity_len;\n-\t}\t\n+\t}\n }\n /* }}} */\n \n@@ -1255,7 +1255,7 @@ PHPAPI char *php_escape_html_entities_ex(unsigned char *old, size_t oldlen, size\n \n \t/* initial estimate */\n \tif (oldlen < 64) {\n-\t\tmaxlen = 128;\t\n+\t\tmaxlen = 128;\n \t} else {\n \t\tmaxlen = 2 * oldlen;\n \t\tif (maxlen < oldlen) {\n@@ -1444,6 +1444,10 @@ static void php_html_entities(INTERNAL_FUNCTION_PARAMETERS, int all)\n \t}\n \n \treplaced = php_escape_html_entities_ex(str, str_len, &new_len, all, (int) flags, hint_charset, double_encode TSRMLS_CC);\n+\tif (new_len > INT_MAX) {\n+\t\tefree(replaced);\n+\t\tRETURN_FALSE;\n+\t}\n \tRETVAL_STRINGL(replaced, (int)new_len, 0);\n }\n /* }}} */\n@@ -1577,7 +1581,7 @@ static inline void write_s3row_data(\n \t\t\t} else {\n \t\t\t\tspe_cp = uni_cp;\n \t\t\t}\n-\t\t\t\n+\n \t\t\twritten_k2 = write_octet_sequence(&key[written_k1], charset, spe_cp);\n \t\t\tmemcpy(&entity[1], mcpr[i].normal_entry.entity, l);\n \t\t\tentity[l + 1] = ';';\n@@ -1615,7 +1619,7 @@ PHP_FUNCTION(get_html_translation_table)\n \tLIMIT_ALL(all, doctype, charset);\n \n \tarray_init(return_value);\n-\t\n+\n \tentity_table = determine_entity_table(all, doctype);\n \tif (all && !CHARSET_UNICODE_COMPAT(charset)) {\n \t\tto_uni_table = enc_to_uni_index[charset];"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "650e59a1c23cd1440c83306b99c78b41970d824f",
            "date": "2025-01-14T21:38:18Z",
            "author_login": "nielsdos"
          },
          {
            "sha": "3524702fe10a1bb3d7b583f9d0e2a0770f5ad5f9",
            "date": "2025-01-10T18:07:41Z",
            "author_login": "nielsdos"
          },
          {
            "sha": "a4e25839d34407b47050e02cb3749c44c545d601",
            "date": "2025-01-14T18:33:00Z",
            "author_login": "devnexen"
          },
          {
            "sha": "b1e0176455db6580b293a2f18a30e58cc5479ba4",
            "date": "2025-01-14T18:32:51Z",
            "author_login": "devnexen"
          },
          {
            "sha": "e4473abefc4fd711a2343a0954d60a2422a9e4fb",
            "date": "2025-01-13T18:09:08Z",
            "author_login": "devnexen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-190",
    "description": "Integer overflow in the php_html_entities function in ext/standard/html.c in PHP before 5.5.36 and 5.6.x before 5.6.22 allows remote attackers to cause a denial of service or possibly have unspecified other impact by triggering a large output string from the htmlspecialchars function.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-08-07T10:59:07.397",
    "last_modified": "2024-11-21T02:53:36.860",
    "fix_date": "2016-05-16T06:26:51Z"
  },
  "references": [
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2750.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2016/dsa-3602",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/05/26/3",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/90857",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=72135",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/php/php-src/commit/0da8b8b801f9276359262f1ef8274c7812d3dfda?w=1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05240731",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://rhn.redhat.com/errata/RHSA-2016-2750.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2016/dsa-3602",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/05/26/3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/90857",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=72135",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/php/php-src/commit/0da8b8b801f9276359262f1ef8274c7812d3dfda?w=1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05240731",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:46.769384",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "php-src",
    "owner": "php",
    "created_at": "2011-06-16T01:52:25Z",
    "updated_at": "2025-01-14T11:37:56Z",
    "pushed_at": "2025-01-14T11:37:44Z",
    "size": 579039,
    "stars": 38520,
    "forks": 7798,
    "open_issues": 1300,
    "watchers": 38520,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "PEAR_1_4DEV",
      "PECL_OPENSSL",
      "PECL",
      "PECL_4_3",
      "PHAR_1_2",
      "PHP-4.0",
      "PHP-4.0.5",
      "PHP-4.0.6",
      "PHP-4.0.7",
      "PHP-4.2.0",
      "PHP-4.2.2",
      "PHP-4.3",
      "PHP-4.3.0",
      "PHP-4.3.1",
      "PHP-4.3.2",
      "PHP-4.3.7",
      "PHP-4.4",
      "PHP-5",
      "PHP-5.0",
      "PHP-5.1",
      "PHP-5.2",
      "PHP-5.2.1RC1",
      "PHP-5.3",
      "PHP-5.3.11",
      "PHP-5.3.12",
      "PHP-5.3.13",
      "PHP-5.3.14",
      "PHP-5.3.15",
      "PHP-5.3.16",
      "PHP-5.3.17"
    ],
    "languages": {
      "C": 65322886,
      "PHP": 30041198,
      "C++": 580205,
      "M4": 408378,
      "Shell": 299560,
      "Lua": 272563,
      "Assembly": 236754,
      "JavaScript": 198632,
      "Lex": 99367,
      "Yacc": 92094,
      "Makefile": 33437,
      "Roff": 32243,
      "GAP": 23811,
      "Python": 14072,
      "GDB": 13663,
      "XSLT": 7963,
      "Awk": 2920,
      "Batchfile": 2219,
      "DTrace": 2180,
      "HTML": 1894
    },
    "commit_activity": {
      "total_commits_last_year": 5383,
      "avg_commits_per_week": 103.51923076923077,
      "days_active_last_year": 358
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:39.017037"
  }
}