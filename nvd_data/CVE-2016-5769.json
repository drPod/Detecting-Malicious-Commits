{
  "cve_id": "CVE-2016-5769",
  "github_data": {
    "repository": "php/php-src",
    "fix_commit": "6c5211a0cef0cc2854eaa387e0eb036e012904d0",
    "related_commits": [
      "6c5211a0cef0cc2854eaa387e0eb036e012904d0",
      "6c5211a0cef0cc2854eaa387e0eb036e012904d0"
    ],
    "patch_url": "https://github.com/php/php-src/commit/6c5211a0cef0cc2854eaa387e0eb036e012904d0.patch",
    "fix_commit_details": {
      "sha": "6c5211a0cef0cc2854eaa387e0eb036e012904d0",
      "commit_date": "2016-06-21T04:51:42Z",
      "author": {
        "login": "smalyshev",
        "type": "User",
        "stats": {
          "total_commits": 4051,
          "average_weekly_commits": 3.0096582466567607,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 527
        }
      },
      "commit_message": {
        "title": "Fix bug #72455:  Heap Overflow due to integer overflows",
        "length": 55,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 92,
        "additions": 50,
        "deletions": 42
      },
      "files": [
        {
          "filename": "ext/mcrypt/mcrypt.c",
          "status": "modified",
          "additions": 50,
          "deletions": 42,
          "patch": "@@ -44,7 +44,7 @@\n \n static int le_mcrypt;\n \n-typedef struct _php_mcrypt { \n+typedef struct _php_mcrypt {\n \tMCRYPT td;\n \tzend_bool init;\n } php_mcrypt;\n@@ -292,7 +292,7 @@ ZEND_DECLARE_MODULE_GLOBALS(mcrypt)\n \n zend_module_entry mcrypt_module_entry = {\n \tSTANDARD_MODULE_HEADER,\n-\t\"mcrypt\", \n+\t\"mcrypt\",\n \tmcrypt_functions,\n \tPHP_MINIT(mcrypt), PHP_MSHUTDOWN(mcrypt),\n \tNULL, NULL,\n@@ -376,7 +376,7 @@ ZEND_GET_MODULE(mcrypt)\n \tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &mcryptind) == FAILURE) {\t\t\t\\\n \t\treturn;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n-\tZEND_FETCH_RESOURCE (pm, php_mcrypt *, &mcryptind, -1, \"MCrypt\", le_mcrypt);\t\t\t\t\n+\tZEND_FETCH_RESOURCE (pm, php_mcrypt *, &mcryptind, -1, \"MCrypt\", le_mcrypt);\n \n #define MCRYPT_GET_MODE_DIR_ARGS(DIRECTORY)\t\t\t\t\t\t\t\t\\\n \tchar *dir = NULL;                                                   \\\n@@ -407,7 +407,7 @@ PHP_INI_END()\n static void php_mcrypt_module_dtor(zend_rsrc_list_entry *rsrc TSRMLS_DC) /* {{{ */\n {\n \tphp_mcrypt *pm = (php_mcrypt *) rsrc->ptr;\n-\tif (pm) {\t\n+\tif (pm) {\n \t\tmcrypt_generic_deinit(pm->td);\n \t\tmcrypt_module_close(pm->td);\n \t\tefree(pm);\n@@ -548,7 +548,7 @@ PHP_MINFO_FUNCTION(mcrypt) /* {{{ */\n \tsmart_str_free(&tmp1);\n \tsmart_str_free(&tmp2);\n \tphp_info_print_table_end();\n-\t\n+\n \tDISPLAY_INI_ENTRIES();\n }\n /* }}} */\n@@ -563,17 +563,17 @@ PHP_FUNCTION(mcrypt_module_open)\n \tint   mode_len,   mode_dir_len;\n \tMCRYPT td;\n \tphp_mcrypt *pm;\n-   \n+\n \tif (zend_parse_parameters (ZEND_NUM_ARGS() TSRMLS_CC, \"ssss\",\n \t\t&cipher, &cipher_len, &cipher_dir, &cipher_dir_len,\n \t\t&mode,   &mode_len,   &mode_dir,   &mode_dir_len)) {\n \t\treturn;\n \t}\n-\t\n+\n \ttd = mcrypt_module_open (\n \t\tcipher,\n \t\tcipher_dir_len > 0 ? cipher_dir : MCG(algorithms_dir),\n-\t\tmode, \n+\t\tmode,\n \t\tmode_dir_len > 0 ? mode_dir : MCG(modes_dir)\n \t);\n \n@@ -600,7 +600,7 @@ PHP_FUNCTION(mcrypt_generic_init)\n \tint max_key_size, key_size, iv_size;\n \tphp_mcrypt *pm;\n \tint result = 0;\n-\t\n+\n \tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rss\", &mcryptind, &key, &key_len, &iv, &iv_len) == FAILURE) {\n \t\treturn;\n \t}\n@@ -679,7 +679,7 @@ PHP_FUNCTION(mcrypt_generic)\n \tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &mcryptind, &data, &data_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \tZEND_FETCH_RESOURCE(pm, php_mcrypt *, &mcryptind, -1, \"MCrypt\", le_mcrypt);\n \tPHP_MCRYPT_INIT_CHECK\n \n@@ -692,6 +692,10 @@ PHP_FUNCTION(mcrypt_generic)\n \tif (mcrypt_enc_is_block_mode(pm->td) == 1) { /* It's a block algorithm */\n \t\tblock_size = mcrypt_enc_get_block_size(pm->td);\n \t\tdata_size = (((data_len - 1) / block_size) + 1) * block_size;\n+\t\tif (data_size <= 0) {\n+\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Integer overflow in data size\");\n+\t\t\tRETURN_FALSE;\n+\t\t}\n \t\tdata_s = emalloc(data_size + 1);\n \t\tmemset(data_s, 0, data_size);\n \t\tmemcpy(data_s, data, data_len);\n@@ -701,7 +705,7 @@ PHP_FUNCTION(mcrypt_generic)\n \t\tmemset(data_s, 0, data_size);\n \t\tmemcpy(data_s, data, data_len);\n \t}\n-\t\n+\n \tmcrypt_generic(pm->td, data_s, data_size);\n \tdata_s[data_size] = '\\0';\n \n@@ -720,11 +724,11 @@ PHP_FUNCTION(mdecrypt_generic)\n \tphp_mcrypt *pm;\n \tchar* data_s;\n \tint block_size, data_size;\n-\t\n+\n \tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &mcryptind, &data, &data_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \tZEND_FETCH_RESOURCE(pm, php_mcrypt * , &mcryptind, -1, \"MCrypt\", le_mcrypt);\n \tPHP_MCRYPT_INIT_CHECK\n \n@@ -737,6 +741,10 @@ PHP_FUNCTION(mdecrypt_generic)\n \tif (mcrypt_enc_is_block_mode(pm->td) == 1) { /* It's a block algorithm */\n \t\tblock_size = mcrypt_enc_get_block_size(pm->td);\n \t\tdata_size = (((data_len - 1) / block_size) + 1) * block_size;\n+\t\tif (data_size <= 0) {\n+\t\t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Integer overflow in data size\");\n+\t\t\tRETURN_FALSE;\n+\t\t}\n \t\tdata_s = emalloc(data_size + 1);\n \t\tmemset(data_s, 0, data_size);\n \t\tmemcpy(data_s, data, data_len);\n@@ -746,7 +754,7 @@ PHP_FUNCTION(mdecrypt_generic)\n \t\tmemset(data_s, 0, data_size);\n \t\tmemcpy(data_s, data, data_len);\n \t}\n-\t\n+\n \tmdecrypt_generic(pm->td, data_s, data_size);\n \n \tRETVAL_STRINGL(data_s, data_size, 1);\n@@ -760,7 +768,7 @@ PHP_FUNCTION(mcrypt_enc_get_supported_key_sizes)\n {\n \tint i, count = 0;\n \tint *key_sizes;\n-\t\n+\n \tMCRYPT_GET_TD_ARG\n \tarray_init(return_value);\n \n@@ -829,7 +837,7 @@ PHP_FUNCTION(mcrypt_enc_is_block_algorithm)\n \tMCRYPT_GET_TD_ARG\n \n \tif (mcrypt_enc_is_block_algorithm(pm->td) == 1) {\n-\t\tRETURN_TRUE \n+\t\tRETURN_TRUE\n \t} else {\n \t\tRETURN_FALSE\n \t}\n@@ -908,7 +916,7 @@ PHP_FUNCTION(mcrypt_enc_get_modes_name)\n PHP_FUNCTION(mcrypt_module_self_test)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(algorithms_dir);\n-\t\n+\n \tif (mcrypt_module_self_test(module, dir) == 0) {\n \t\tRETURN_TRUE;\n \t} else {\n@@ -922,7 +930,7 @@ PHP_FUNCTION(mcrypt_module_self_test)\n PHP_FUNCTION(mcrypt_module_is_block_algorithm_mode)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(modes_dir)\n-\t\n+\n \tif (mcrypt_module_is_block_algorithm_mode(module, dir) == 1) {\n \t\tRETURN_TRUE;\n \t} else {\n@@ -936,7 +944,7 @@ PHP_FUNCTION(mcrypt_module_is_block_algorithm_mode)\n PHP_FUNCTION(mcrypt_module_is_block_algorithm)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(algorithms_dir)\n-\t\n+\n \tif (mcrypt_module_is_block_algorithm(module, dir) == 1) {\n \t\tRETURN_TRUE;\n \t} else {\n@@ -950,7 +958,7 @@ PHP_FUNCTION(mcrypt_module_is_block_algorithm)\n PHP_FUNCTION(mcrypt_module_is_block_mode)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(modes_dir)\n-\t\n+\n \tif (mcrypt_module_is_block_mode(module, dir) == 1) {\n \t\tRETURN_TRUE;\n \t} else {\n@@ -964,7 +972,7 @@ PHP_FUNCTION(mcrypt_module_is_block_mode)\n PHP_FUNCTION(mcrypt_module_get_algo_block_size)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(algorithms_dir)\n-\t\n+\n \tRETURN_LONG(mcrypt_module_get_algo_block_size(module, dir));\n }\n /* }}} */\n@@ -974,7 +982,7 @@ PHP_FUNCTION(mcrypt_module_get_algo_block_size)\n PHP_FUNCTION(mcrypt_module_get_algo_key_size)\n {\n \tMCRYPT_GET_MODE_DIR_ARGS(algorithms_dir);\n-\t\n+\n \tRETURN_LONG(mcrypt_module_get_algo_key_size(module, dir));\n }\n /* }}} */\n@@ -985,7 +993,7 @@ PHP_FUNCTION(mcrypt_module_get_supported_key_sizes)\n {\n \tint i, count = 0;\n \tint *key_sizes;\n-\t\n+\n \tMCRYPT_GET_MODE_DIR_ARGS(algorithms_dir)\n \tarray_init(return_value);\n \n@@ -1011,7 +1019,7 @@ PHP_FUNCTION(mcrypt_list_algorithms)\n \t\t&lib_dir, &lib_dir_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \tarray_init(return_value);\n \tmodules = mcrypt_list_algorithms(lib_dir, &count);\n \n@@ -1058,7 +1066,7 @@ PHP_FUNCTION(mcrypt_get_key_size)\n {\n \tchar *cipher;\n \tchar *module;\n-\tint   cipher_len, module_len; \n+\tint   cipher_len, module_len;\n \tchar *cipher_dir_string;\n \tchar *module_dir_string;\n \tMCRYPT td;\n@@ -1069,7 +1077,7 @@ PHP_FUNCTION(mcrypt_get_key_size)\n \t\t&cipher, &cipher_len, &module, &module_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \ttd = mcrypt_module_open(cipher, cipher_dir_string, module, module_dir_string);\n \tif (td != MCRYPT_FAILED) {\n \t\tRETVAL_LONG(mcrypt_enc_get_key_size(td));\n@@ -1087,7 +1095,7 @@ PHP_FUNCTION(mcrypt_get_block_size)\n {\n \tchar *cipher;\n \tchar *module;\n-\tint   cipher_len, module_len; \n+\tint   cipher_len, module_len;\n \tchar *cipher_dir_string;\n \tchar *module_dir_string;\n \tMCRYPT td;\n@@ -1098,7 +1106,7 @@ PHP_FUNCTION(mcrypt_get_block_size)\n \t\t&cipher, &cipher_len, &module, &module_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \ttd = mcrypt_module_open(cipher, cipher_dir_string, module, module_dir_string);\n \tif (td != MCRYPT_FAILED) {\n \t\tRETVAL_LONG(mcrypt_enc_get_block_size(td));\n@@ -1116,7 +1124,7 @@ PHP_FUNCTION(mcrypt_get_iv_size)\n {\n \tchar *cipher;\n \tchar *module;\n-\tint   cipher_len, module_len; \n+\tint   cipher_len, module_len;\n \tchar *cipher_dir_string;\n \tchar *module_dir_string;\n \tMCRYPT td;\n@@ -1127,7 +1135,7 @@ PHP_FUNCTION(mcrypt_get_iv_size)\n \t\t&cipher, &cipher_len, &module, &module_len) == FAILURE) {\n \t\treturn;\n \t}\n-\t\n+\n \ttd = mcrypt_module_open(cipher, cipher_dir_string, module, module_dir_string);\n \tif (td != MCRYPT_FAILED) {\n \t\tRETVAL_LONG(mcrypt_enc_get_iv_size(td));\n@@ -1217,7 +1225,7 @@ static void php_mcrypt_do_crypt(char* cipher, const char *key, int key_len, cons\n \t} else { /* dertermine smallest supported key > length of requested key */\n \t\tuse_key_length = max_key_length; /* start with max key length */\n \t\tfor (i = 0; i < count; i++) {\n-\t\t\tif (key_length_sizes[i] >= key_len && \n+\t\t\tif (key_length_sizes[i] >= key_len &&\n \t\t\t\tkey_length_sizes[i] < use_key_length)\n \t\t\t{\n \t\t\t\tuse_key_length = key_length_sizes[i];\n@@ -1228,11 +1236,11 @@ static void php_mcrypt_do_crypt(char* cipher, const char *key, int key_len, cons\n \t\tmemcpy(key_s, key, MIN(key_len, use_key_length));\n \t}\n \tmcrypt_free (key_length_sizes);\n-\t\n+\n \t/* Check IV */\n \tiv_s = NULL;\n \tiv_size = mcrypt_enc_get_iv_size (td);\n-\t\n+\n \t/* IV is required */\n \tif (mcrypt_enc_mode_has_iv(td) == 1) {\n \t\tif (argc == 5) {\n@@ -1272,7 +1280,7 @@ static void php_mcrypt_do_crypt(char* cipher, const char *key, int key_len, cons\n \t} else {\n \t\tmdecrypt_generic(td, data_s, data_size);\n \t}\n-\t\n+\n \tRETVAL_STRINGL(data_s, data_size, 1);\n \n \t/* freeing vars */\n@@ -1294,9 +1302,9 @@ PHP_FUNCTION(mcrypt_encrypt)\n \tzval **mode;\n \tchar *cipher, *key, *data, *iv = NULL;\n \tint cipher_len, key_len, data_len, iv_len = 0;\n-\t\n+\n \tMCRYPT_GET_CRYPT_ARGS\n-\t\n+\n \tconvert_to_string_ex(mode);\n \n \tphp_mcrypt_do_crypt(cipher, key, key_len, data, data_len, Z_STRVAL_PP(mode), iv, iv_len, ZEND_NUM_ARGS(), MCRYPT_ENCRYPT, return_value TSRMLS_CC);\n@@ -1312,7 +1320,7 @@ PHP_FUNCTION(mcrypt_decrypt)\n \tint cipher_len, key_len, data_len, iv_len = 0;\n \n \tMCRYPT_GET_CRYPT_ARGS\n-\t\n+\n \tconvert_to_string_ex(mode);\n \n \tphp_mcrypt_do_crypt(cipher, key, key_len, data, data_len, Z_STRVAL_PP(mode), iv, iv_len, ZEND_NUM_ARGS(), MCRYPT_DECRYPT, return_value TSRMLS_CC);\n@@ -1326,7 +1334,7 @@ PHP_FUNCTION(mcrypt_ecb)\n \tzval **mode;\n \tchar *cipher, *key, *data, *iv = NULL;\n \tint cipher_len, key_len, data_len, iv_len = 0;\n-\t\n+\n \tMCRYPT_GET_CRYPT_ARGS\n \n \tconvert_to_long_ex(mode);\n@@ -1358,7 +1366,7 @@ PHP_FUNCTION(mcrypt_cfb)\n \tzval **mode;\n \tchar *cipher, *key, *data, *iv = NULL;\n \tint cipher_len, key_len, data_len, iv_len = 0;\n-\t\n+\n \tMCRYPT_GET_CRYPT_ARGS\n \n \tconvert_to_long_ex(mode);\n@@ -1374,7 +1382,7 @@ PHP_FUNCTION(mcrypt_ofb)\n \tzval **mode;\n \tchar *cipher, *key, *data, *iv = NULL;\n \tint cipher_len, key_len, data_len, iv_len = 0;\n-\t\n+\n \tMCRYPT_GET_CRYPT_ARGS\n \n \tconvert_to_long_ex(mode);\n@@ -1400,9 +1408,9 @@ PHP_FUNCTION(mcrypt_create_iv)\n \t\tphp_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot create an IV with a size of less than 1 or greater than %d\", INT_MAX);\n \t\tRETURN_FALSE;\n \t}\n-\t\n+\n \tiv = ecalloc(size + 1, 1);\n-\t\n+\n \tif (source == RANDOM || source == URANDOM) {\n #if PHP_WIN32\n \t\t/* random/urandom equivalent on Windows */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e95b298262871462315d52dab0fc7fc157783999",
            "date": "2025-01-13T15:58:32Z",
            "author_login": "iluuu1994"
          },
          {
            "sha": "634edc8ab3850052942eba6432ba7a4f776ebae8",
            "date": "2025-01-14T11:36:58Z",
            "author_login": "cmb69"
          },
          {
            "sha": "58628e0cc629338fa43fb175f733778432346a86",
            "date": "2025-01-12T15:40:59Z",
            "author_login": "cmb69"
          },
          {
            "sha": "0e1fbf97f4ce4da519a2cf2654233a0d007800fd",
            "date": "2025-01-13T15:46:54Z",
            "author_login": "iluuu1994"
          },
          {
            "sha": "3c138641e12fad5e8a94174988801c0529ca1c38",
            "date": "2025-01-13T15:46:43Z",
            "author_login": "iluuu1994"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-190",
    "description": "Multiple integer overflows in mcrypt.c in the mcrypt extension in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8 allow remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted length value, related to the (1) mcrypt_generic and (2) mdecrypt_generic functions.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-08-07T10:59:17.070",
    "last_modified": "2024-11-21T02:54:59.310",
    "fix_date": "2016-06-21T04:51:42Z"
  },
  "references": [
    {
      "url": "http://github.com/php/php-src/commit/6c5211a0cef0cc2854eaa387e0eb036e012904d0?w=1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.apple.com/archives/security-announce/2016/Sep/msg00006.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2016-07/msg00004.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2016-08/msg00025.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2016-08/msg00003.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Release Notes"
      ]
    },
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "cve@mitre.org",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://www.debian.org/security/2016/dsa-3618",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/06/23/4",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/91399",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=72455",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05240731",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT207170",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://github.com/php/php-src/commit/6c5211a0cef0cc2854eaa387e0eb036e012904d0?w=1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.apple.com/archives/security-announce/2016/Sep/msg00006.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2016-07/msg00004.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2016-08/msg00025.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-updates/2016-08/msg00003.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://php.net/ChangeLog-5.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Release Notes"
      ]
    },
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://www.debian.org/security/2016/dsa-3618",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/06/23/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/91399",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=72455",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05240731",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT207170",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:46.770888",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "php-src",
    "owner": "php",
    "created_at": "2011-06-16T01:52:25Z",
    "updated_at": "2025-01-14T11:37:56Z",
    "pushed_at": "2025-01-14T11:37:44Z",
    "size": 579039,
    "stars": 38520,
    "forks": 7798,
    "open_issues": 1300,
    "watchers": 38520,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "PEAR_1_4DEV",
      "PECL_OPENSSL",
      "PECL",
      "PECL_4_3",
      "PHAR_1_2",
      "PHP-4.0",
      "PHP-4.0.5",
      "PHP-4.0.6",
      "PHP-4.0.7",
      "PHP-4.2.0",
      "PHP-4.2.2",
      "PHP-4.3",
      "PHP-4.3.0",
      "PHP-4.3.1",
      "PHP-4.3.2",
      "PHP-4.3.7",
      "PHP-4.4",
      "PHP-5",
      "PHP-5.0",
      "PHP-5.1",
      "PHP-5.2",
      "PHP-5.2.1RC1",
      "PHP-5.3",
      "PHP-5.3.11",
      "PHP-5.3.12",
      "PHP-5.3.13",
      "PHP-5.3.14",
      "PHP-5.3.15",
      "PHP-5.3.16",
      "PHP-5.3.17"
    ],
    "languages": {
      "C": 65322886,
      "PHP": 30041198,
      "C++": 580205,
      "M4": 408378,
      "Shell": 299560,
      "Lua": 272563,
      "Assembly": 236754,
      "JavaScript": 198632,
      "Lex": 99367,
      "Yacc": 92094,
      "Makefile": 33437,
      "Roff": 32243,
      "GAP": 23811,
      "Python": 14072,
      "GDB": 13663,
      "XSLT": 7963,
      "Awk": 2920,
      "Batchfile": 2219,
      "DTrace": 2180,
      "HTML": 1894
    },
    "commit_activity": {
      "total_commits_last_year": 5383,
      "avg_commits_per_week": 103.51923076923077,
      "days_active_last_year": 358
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:39.017037"
  }
}