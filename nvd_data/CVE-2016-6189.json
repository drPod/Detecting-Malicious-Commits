{
  "cve_id": "CVE-2016-6189",
  "github_data": {
    "repository": "inverse-inc/sogo",
    "fix_commit": "717f45f640a2866b76a8984139391fae64339225",
    "related_commits": [
      "717f45f640a2866b76a8984139391fae64339225",
      "875a4aca3218340fd4d3141950c82c2ff45b343d",
      "717f45f640a2866b76a8984139391fae64339225",
      "875a4aca3218340fd4d3141950c82c2ff45b343d"
    ],
    "patch_url": "https://github.com/inverse-inc/sogo/commit/717f45f640a2866b76a8984139391fae64339225.patch",
    "fix_commit_details": {
      "sha": "717f45f640a2866b76a8984139391fae64339225",
      "commit_date": "2016-05-27T14:53:16Z",
      "author": {
        "login": "extrafu",
        "type": "User",
        "stats": {
          "total_commits": 2664,
          "average_weekly_commits": 2.74356333676622,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 448
        }
      },
      "commit_message": {
        "title": "(fix) improved previous commit for attributes stripping and UID generation (fixes #3695 and #3696)",
        "length": 159,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 78,
        "additions": 56,
        "deletions": 22
      },
      "files": [
        {
          "filename": "SoObjects/Appointments/SOGoCalendarComponent.m",
          "status": "modified",
          "additions": 27,
          "deletions": 20,
          "patch": "@@ -47,6 +47,7 @@\n #import <SOGo/NSDictionary+Utilities.h>\n #import <SOGo/NSObject+DAV.h>\n #import <SOGo/NSObject+Utilities.h>\n+#import <SOGo/NSString+Crypto.h>\n #import <SOGo/NSString+Utilities.h>\n #import <SOGo/SOGoBuild.h>\n #import <SOGo/SOGoDomainDefaults.h>\n@@ -55,6 +56,7 @@\n #import <SOGo/SOGoPermissions.h>\n #import <SOGo/SOGoUser.h>\n #import <SOGo/SOGoUserDefaults.h>\n+#import <SOGo/SOGoUserSettings.h>\n #import <SOGo/SOGoSystemDefaults.h>\n #import <SOGo/SOGoUserManager.h>\n #import <SOGo/SOGoWebDAVAclManager.h>\n@@ -202,14 +204,21 @@ - (void) setComponentTag: (NSString *) theTag\n \n - (void) _filterComponent: (iCalEntityObject *) component\n {\n-  NSString *type, *summary, *tag;\n-  NSArray *children;\n+  NSString *type, *summary, *tag, *uid;\n+  SOGoUserSettings *settings;\n+  SOGoUser *calendarOwner;\n+  NSEnumerator *children;\n+  CardElement *element;\n+  NSArray *tags;\n \n-  int classification, i;\n+  int classification;\n \n   type = @\"vtodo\";\n   classification = 0;\n \n+  calendarOwner = [SOGoUser userWithLogin: [self ownerInContext: context]];\n+  settings = [calendarOwner userSettings];\n+\n   if ([component isKindOfClass: [iCalEvent class]])\n     type = @\"vevent\";\n   \n@@ -221,25 +230,23 @@ - (void) _filterComponent: (iCalEntityObject *) component\n   summary = [self labelForKey: [NSString stringWithFormat: @\"%@_class%d\",\n                                          type, classification]\n                     inContext: context];\n-  [component setSummary: summary];\n-  [component setComment: @\"\"];\n-  [component setUserComment: @\"\"];\n-  [component setLocation: @\"\"];\n-  [component setCategories: [NSArray array]];\n-  [component setUrl: @\"\"];\n-  [component setOrganizer: nil];\n-  [component removeAllAttendees];\n-  [component removeAllAlarms];\n-\n-  // We strip all X- tags\n-  children = [component children];\n-\n-  for (i = 0; i < [children count]; i++)\n+\n+  tags = [NSArray arrayWithObjects: @\"DTSTAMP\", @\"DTSTART\", @\"DTEND\", @\"DUE\", @\"EXDATE\", @\"EXRULE\", @\"RRULE\", nil];\n+  uid = [[component uid] asCryptedPassUsingScheme: @\"ssha256\"\n+                                         withSalt: [[settings userSalt] dataUsingEncoding: NSASCIIStringEncoding]\n+                                      andEncoding: encHex];\n+\n+  children = [[[[component children] copy] autorelease] objectEnumerator];\n+\n+  while ((element = [children nextObject]))\n     {\n-      tag = [[children objectAtIndex: i] tag];\n-      if ([[tag uppercaseString] hasPrefix: @\"X-\"])\n-        [component removeChild: [children objectAtIndex: i]];\n+      tag = [element tag];\n+      if (![tags containsObject: [tag uppercaseString]])\n+        [component removeChild: element];\n     }\n+\n+  [component setSummary: summary];\n+  [component setUid: uid];\n }\n \n - (NSString *) secureContentAsString"
        },
        {
          "filename": "SoObjects/SOGo/SOGoUserSettings.h",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n /* SOGoUserSettings.h - this file is part of SOGo\n  *\n- * Copyright (C) 2009-2014 Inverse inc.\n+ * Copyright (C) 2009-2016 Inverse inc.\n  *\n  * This file is free software; you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n@@ -33,6 +33,7 @@\n \n - (NSArray *) subscribedCalendars;\n - (NSArray *) subscribedAddressBooks;\n+- (NSString *) userSalt;\n \n @end\n "
        },
        {
          "filename": "SoObjects/SOGo/SOGoUserSettings.m",
          "status": "modified",
          "additions": 27,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n /* SOGoUserSettings.m - this file is part of SOGo\n  *\n- * Copyright (C) 2009-2014 Inverse inc.\n+ * Copyright (C) 2009-2016 Inverse inc.\n  *\n  * This file is free software; you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n@@ -20,9 +20,11 @@\n \n #import <Foundation/NSArray.h>\n #import <Foundation/NSDictionary.h>\n+#import <Foundation/NSProcessInfo.h>\n #import <Foundation/NSString.h>\n \n #import \"SOGoUserProfile.h\"\n+#import \"NSString+Crypto.h\"\n \n #import \"SOGoUserSettings.h\"\n \n@@ -69,4 +71,28 @@ - (NSArray *) subscribedAddressBooks\n   return [self _subscribedFoldersForModule: @\"Contacts\"];\n }\n \n+- (NSString *) userSalt\n+{\n+  NSMutableDictionary *values;\n+  NSString *salt;\n+\n+  salt = [[self dictionaryForKey: @\"General\"] objectForKey: @\"Salt\"];\n+\n+  if (!salt)\n+    {\n+      salt = [[[NSProcessInfo processInfo] globallyUniqueString] asSHA1String];\n+      values = [self objectForKey: @\"General\"];\n+\n+      if (!values)\n+        values = [NSMutableDictionary dictionary];\n+\n+      [values setObject: salt  forKey: @\"Salt\"];\n+      [self setObject:  values forKey: @\"General\"];\n+      [self synchronize];\n+    }\n+\n+  return salt;\n+}\n+\n+\n @end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9941e2a04b9807dbc0a7f3dc0b4e07210a8e55f4",
            "date": "2025-01-07T17:39:02Z",
            "author_login": "WoodySlum"
          },
          {
            "sha": "b40d777a86104d08dbd8168b8e12c198a3d4321a",
            "date": "2024-12-23T14:35:14Z",
            "author_login": "WoodySlum"
          },
          {
            "sha": "70f72eb92f0f14501758a5660391aa43862e98e7",
            "date": "2024-12-23T10:18:28Z",
            "author_login": "WoodySlum"
          },
          {
            "sha": "0a828a739e10299605eaff72ffaf90a1908b54e8",
            "date": "2024-12-18T09:39:27Z",
            "author_login": "WoodySlum"
          },
          {
            "sha": "395a01ed5204c6c138e7d855370dd8acf902e6b4",
            "date": "2024-12-17T17:27:53Z",
            "author_login": "WoodySlum"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-184",
    "description": "Incomplete blacklist in SOGo before 2.3.12 and 3.x before 3.1.1 allows remote authenticated users to obtain sensitive information by reading the fields in the (1) ics or (2) XML calendar feeds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2017-02-17T17:59:00.797",
    "last_modified": "2024-11-21T02:55:38.320",
    "fix_date": "2016-05-27T14:53:16Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/07/09/3",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/inverse-inc/sogo/commit/717f45f640a2866b76a8984139391fae64339225",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/inverse-inc/sogo/commit/875a4aca3218340fd4d3141950c82c2ff45b343d",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://sogo.nu/bugs/view.php?id=3695",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/07/09/3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/inverse-inc/sogo/commit/717f45f640a2866b76a8984139391fae64339225",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/inverse-inc/sogo/commit/875a4aca3218340fd4d3141950c82c2ff45b343d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://sogo.nu/bugs/view.php?id=3695",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.227633",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sogo",
    "owner": "inverse-inc",
    "created_at": "2012-09-18T12:19:38Z",
    "updated_at": "2025-01-13T14:50:06Z",
    "pushed_at": "2025-01-14T10:12:13Z",
    "size": 179571,
    "stars": 1851,
    "forks": 278,
    "open_issues": 26,
    "watchers": 1851,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Objective-C": 5166699,
      "JavaScript": 1139785,
      "SCSS": 172305,
      "C": 115950,
      "Rich Text Format": 76362,
      "HTML": 75145,
      "Shell": 72483,
      "Java": 50238,
      "Makefile": 47449,
      "Perl": 32089,
      "Python": 31012,
      "CSS": 11864,
      "PHP": 3047,
      "PLSQL": 1055,
      "Mathematica": 986
    },
    "commit_activity": {
      "total_commits_last_year": 311,
      "avg_commits_per_week": 5.980769230769231,
      "days_active_last_year": 124
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:46:14.847524"
  }
}