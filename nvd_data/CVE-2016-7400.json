{
  "cve_id": "CVE-2016-7400",
  "github_data": {
    "repository": "exponentcms/exponent-cms",
    "fix_commit": "e916702a91a6342bbab483a2be2ba2f11dca3aa3",
    "related_commits": [
      "e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "e916702a91a6342bbab483a2be2ba2f11dca3aa3"
    ],
    "patch_url": "https://github.com/exponentcms/exponent-cms/commit/e916702a91a6342bbab483a2be2ba2f11dca3aa3.patch",
    "fix_commit_details": {
      "sha": "e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "commit_date": "2016-09-13T19:38:24Z",
      "author": {
        "login": "dleffler",
        "type": "User",
        "stats": {
          "total_commits": 9296,
          "average_weekly_commits": 12.68212824010914,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 615
        }
      },
      "commit_message": {
        "title": "security fix several sql injection vulnerabilities reported by Manuel Garcia Cardenas and PKAV TEAM",
        "length": 99,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 108,
        "additions": 75,
        "deletions": 33
      },
      "files": [
        {
          "filename": "framework/core/subsystems/database/mysqli.php",
          "status": "modified",
          "additions": 18,
          "deletions": 7,
          "patch": "@@ -379,6 +379,8 @@ function columnUpdate($table, $col, $val, $where=1) {\n     function selectObjects($table, $where = null, $orderby = null) {\n         if ($where == null)\n             $where = \"1\";\n+        else\n+            $where = $this->injectProof($where);\n         if ($orderby == null)\n             $orderby = '';\n         else\n@@ -484,7 +486,7 @@ function selectObjectBySql($sql) {\n         //$lfh = fopen($logFile, 'a');\n         //fwrite($lfh, $sql . \"\\n\");    \n         //fclose($lfh);                 \n-        $res = @mysqli_query($this->connection, $sql);\n+        $res = @mysqli_query($this->connection, $this->injectProof($sql));\n         if ($res == null)\n             return null;\n         return mysqli_fetch_object($res);\n@@ -497,7 +499,7 @@ function selectObjectBySql($sql) {\n \t * @return array\n \t */\n     function selectObjectsBySql($sql) {\n-        $res = @mysqli_query($this->connection, $sql);\n+        $res = @mysqli_query($this->connection, $this->injectProof($sql));\n         if ($res == null)\n             return array();\n         $objects = array();\n@@ -638,6 +640,8 @@ function selectValueBySql($sql) {\n     function selectObjectsIndexedArray($table, $where = null, $orderby = null) {\n         if ($where == null)\n             $where = \"1\";\n+        else\n+            $where = $this->injectProof($where);\n         if ($orderby == null)\n             $orderby = '';\n         else\n@@ -722,6 +726,7 @@ function queryRows($sql) {\n      * @return object/null|void\n      */\n     function selectObject($table, $where) {\n+        $where = $this->injectProof($where);\n         $res = mysqli_query($this->connection, \"SELECT * FROM `\" . $this->prefix . \"$table` WHERE $where LIMIT 0,1\");\n         if ($res == null)\n             return null;\n@@ -773,7 +778,7 @@ function insertObject($object, $table) {\n                 if ($values != \") VALUES (\") {\n                     $values .= \",\";\n                 }\n-                $values .= \"'\" . mysqli_real_escape_string($this->connection, $val) . \"'\";\n+                $values .= \"'\" . $this->escapeString($val) . \"'\";\n             }\n         }\n         $sql = substr($sql, 0, -1) . substr($values, 0) . \")\";\n@@ -836,13 +841,13 @@ function updateObject($object, $table, $where=null, $identifier='id', $is_revisi\n                     $val = serialize($val);   \n                     $sql .= \"`$var`='\".$val.\"',\";\n                 } else {\n-                    $sql .= \"`$var`='\".mysqli_real_escape_string($this->connection,$val).\"',\";\n+                    $sql .= \"`$var`='\" . $this->escapeString($val) . \"',\";\n                 }\n             }\n         }\n         $sql = substr($sql, 0, -1) . \" WHERE \";\n         if ($where != null)\n-            $sql .= $where;\n+            $sql .= $this->injectProof($where);\n         else\n             $sql .= \"`\" . $identifier . \"`=\" . $object->$identifier;\n         //if ($table == 'text') eDebug($sql,true);        \n@@ -1130,6 +1135,8 @@ function escapeString($string) {\n     function selectArrays($table, $where = null, $orderby = null) {\n         if ($where == null)\n             $where = \"1\";\n+        else\n+            $where = $this->injectProof($where);\n         if ($orderby == null)\n             $orderby = '';\n         else\n@@ -1156,7 +1163,7 @@ function selectArrays($table, $where = null, $orderby = null) {\n      * @return array\n      */\n     function selectArraysBySql($sql) {        \n-        $res = @mysqli_query($this->connection, $sql);\n+        $res = @mysqli_query($this->connection, $this->injectProof($sql));\n         if ($res == null)\n             return array();\n         $arrays = array();\n@@ -1185,6 +1192,8 @@ function selectArraysBySql($sql) {\n     function selectArray($table, $where = null, $orderby = null, $is_revisioned=false, $needs_approval=false) {\n         if ($where == null)\n             $where = \"1\";\n+        else\n+            $where = $this->injectProof($where);\n         $as = '';\n         if ($is_revisioned) {\n    //            $where.= \" AND revision_id=(SELECT MAX(revision_id) FROM `\" . $this->prefix . \"$table` WHERE $where)\";\n@@ -1223,6 +1232,8 @@ function selectArray($table, $where = null, $orderby = null, $is_revisioned=fals\n     function selectExpObjects($table, $where=null, $classname, $get_assoc=true, $get_attached=true, $except=array(), $cascade_except=false, $order=null, $limitsql=null, $is_revisioned=false, $needs_approval=false) {\n         if ($where == null)\n             $where = \"1\";\n+        else\n+            $where = $this->injectProof($where);\n         $as = '';\n         if ($is_revisioned) {\n    //            $where.= \" AND revision_id=(SELECT MAX(revision_id) FROM `\" . $this->prefix . \"$table` WHERE $where)\";\n@@ -1259,7 +1270,7 @@ function selectExpObjects($table, $where=null, $classname, $get_assoc=true, $get\n      * @return array\n      */\n     function selectExpObjectsBySql($sql, $classname, $get_assoc=true, $get_attached=true) {\n-        $res = @mysqli_query($this->connection, $sql);\n+        $res = @mysqli_query($this->connection, $this->injectProof($sql));\n         if ($res == null)\n             return array();\n         $arrays = array();"
        },
        {
          "filename": "framework/core/subsystems/expDatabase.php",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -1105,6 +1105,21 @@ abstract function inError();\n \t */\n \tabstract function escapeString($string);\n \n+    /**\n+   \t * Unescape a string based on the database connection\n+   \t * @param $string\n+   \t * @return string\n+   \t */\n+   \tfunction injectProof($string) {\n+   \t    $quotes = substr_count(\"'\", $string);\n+        if ($quotes % 2 != 0)\n+            $string = $this->escapeString($string);\n+        $dquotes = substr_count('\"', $string);\n+        if ($dquotes % 2 != 0)\n+            $string = $this->escapeString($string);\n+        return $string;\n+    }\n+\n \t/**\n \t * Create a SQL \"limit\" phrase\n \t *"
        },
        {
          "filename": "framework/core/subsystems/expRouter.php",
          "status": "modified",
          "additions": 22,
          "deletions": 7,
          "patch": "@@ -198,11 +198,26 @@ public function routeRequest() {\n                 );\n             }\n         }\n-        // conventional method to ensure the 'id' is an id\n-        if (isset($_GET['id'])) {\n-            $_GET['id'] = intval($_GET['id']);\n+        // conventional method to ensure the 'id' is only an id\n+        if (isset($_REQUEST['id'])) {\n+            if (isset($_GET['id']))\n+                $_GET['id'] = intval($_GET['id']);\n+            if (isset($_POST['id']))\n+                $_POST['id'] = intval($_POST['id']);\n+\n             $_REQUEST['id'] = intval($_REQUEST['id']);\n         }\n+        // do the same for the other id's\n+        foreach ($_REQUEST as $key=>$var) {\n+            if (is_string($var) && strrpos($key,'_id',-3) !== false) {\n+                if (isset($_GET[$key]))\n+                    $_GET[$key] = intval($_GET[$key]);\n+                if (isset($_POST[$key]))\n+                    $_POST[$key] = intval($_POST[$key]);\n+\n+                $_REQUEST[$key] = intval($_REQUEST[$key]);\n+            }\n+        }\n         if (empty($user->id) || (!empty($user->id) && !$user->isAdmin())) {  //FIXME why would $user be empty here unless $db is down?\n //            $_REQUEST['route_sanitized'] = true;//FIXME debug test\n             expString::sanitize($_REQUEST);  // strip other exploits like sql injections\n@@ -307,14 +322,14 @@ public function splitURL() {\n             \n             if (count($this->url_parts) < 1 || (empty($this->url_parts[0]) && count($this->url_parts) == 1) ) {\n                 $this->url_type = 'base';  // no params\n-            } elseif (count($this->url_parts) == 1 || $db->selectObject('section', \"sef_name='\" . substr($db->escapeString($this->sefPath),1) . \"'\") != null) {\n+            } elseif (count($this->url_parts) == 1 || $db->selectObject('section', \"sef_name='\" . substr($this->sefPath,1) . \"'\") != null) {\n                 $this->url_type = 'page';  // single param is page name\n             } elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n                 $this->url_type = 'post';  // params via form/post\n             } else {\n                 // take a peek and see if a page exists with the same name as the first value...if so we probably have a page with\n                 // extra perms...like printerfriendly=1 or ajax_action=1;\n-                if (($db->selectObject('section', \"sef_name='\" . $db->escapeString($this->url_parts[0]) . \"'\") != null) && (in_array(array('printerfriendly','exportaspdf','ajax_action'), $this->url_parts))) {\n+                if (($db->selectObject('section', \"sef_name='\" . $this->url_parts[0] . \"'\") != null) && (in_array(array('printerfriendly','exportaspdf','ajax_action'), $this->url_parts))) {\n                     $this->url_type = 'page';\n                 } else {\n                     $this->url_type = 'action';\n@@ -547,7 +562,7 @@ public function buildCurrentUrl() {\n         } else {\n             $url .= urldecode((empty($_SERVER['REQUEST_URI'])) ? $_ENV['REQUEST_URI'] : $_SERVER['REQUEST_URI']);\n         }\n-        return expString::sanitize($url);\n+        return expString::escape(expString::sanitize($url));\n     }\n \n     public static function encode($url) {\n@@ -760,7 +775,7 @@ private function buildSEFPath () {\n         if (substr($this->sefPath,-1) == \"/\") $this->sefPath = substr($this->sefPath,0,-1);\n         // sanitize it\n         $sefPath = explode('\">',$this->sefPath);  // remove any attempts to close the command\n-        $this->sefPath = expString::sanitize($sefPath[0]);\n+        $this->sefPath = expString::escape(expString::sanitize($sefPath[0]));\n     }\n \n     public function getSection() {"
        },
        {
          "filename": "framework/core/subsystems/expString.php",
          "status": "modified",
          "additions": 17,
          "deletions": 17,
          "patch": "@@ -522,23 +522,23 @@ public static function sanitize(&$data) {\n             $data = self::xss_clean($data);\n \n             //fixme orig exp method\n-            if(0) {\n-                // remove whitespaces and tags\n-//            $data = strip_tags(trim($data));\n-                // remove whitespaces and script tags\n-                $data = self::strip_tags_content(trim($data), '<script>', true);\n-//            $data = self::strip_tags_content(trim($data), '<iframe>', true);\n-\n-                // apply stripslashes if magic_quotes_gpc is enabled\n-                if (get_magic_quotes_gpc()) {\n-                    $data = stripslashes($data);\n-                }\n-\n-                $data = self::escape($data);\n-\n-                // re-escape newlines\n-                $data = str_replace(array('\\r', '\\n'), array(\"\\r\", \"\\n\"), $data);\n-            }\n+//            if(0) {\n+//                // remove whitespaces and tags\n+////            $data = strip_tags(trim($data));\n+//                // remove whitespaces and script tags\n+//                $data = self::strip_tags_content(trim($data), '<script>', true);\n+////            $data = self::strip_tags_content(trim($data), '<iframe>', true);\n+//\n+//                // apply stripslashes if magic_quotes_gpc is enabled\n+//                if (get_magic_quotes_gpc()) {\n+//                    $data = stripslashes($data);\n+//                }\n+//\n+//                $data = self::escape($data);\n+//\n+//                // re-escape newlines\n+//                $data = str_replace(array('\\r', '\\n'), array(\"\\r\", \"\\n\"), $data);\n+//            }\n         }\n         return $data;\n     }"
        },
        {
          "filename": "framework/core/subsystems/expTheme.php",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -762,7 +762,7 @@ public static function runAction()\n             if (!$user->isAdmin())\n                 expString::sanitize($_REQUEST);\n //            } elseif (empty($_REQUEST['array_sanitized'])) {\n-                $tmp =1;  //FIXME we've already sanitized at this point\n+//                $tmp =1;  //FIXME we've already sanitized at this point\n //            } else {\n //                $tmp =1;  //FIXME we've already sanitized at this point\n //            }\n@@ -843,7 +843,8 @@ public static function showAction($module, $action, $src = \"\", $params = array()\n ////                $_GET[$key] = $value;\n //                $_GET[$key] = expString::sanitize($value);\n //            }\n-            if (!$user->isAdmin()) expString::sanitize($_GET);\n+            if (!$user->isAdmin())\n+                expString::sanitize($_GET);\n         }\n         //if (isset($['_common'])) $actfile = \"/common/actions/\" . $_REQUEST['action'] . \".php\";\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "accea125b51d63319e69715a30f762be0e07845d",
            "date": "2024-12-26T16:54:42Z",
            "author_login": "dleffler"
          },
          {
            "sha": "7ca4bea4baabe3ffacff195a0ce1b1dab2ab11eb",
            "date": "2024-12-26T14:53:00Z",
            "author_login": "dleffler"
          },
          {
            "sha": "94b89d4cd98076976ef3c77f7bdc91fb874c70cd",
            "date": "2024-12-26T14:47:17Z",
            "author_login": "dleffler"
          },
          {
            "sha": "72ac0af81fdd733084a5164093ca33dcd41f8df0",
            "date": "2024-12-26T12:33:23Z",
            "author_login": "dleffler"
          },
          {
            "sha": "ababe76855ae7f303eedd9a581964ab8cae56097",
            "date": "2024-12-26T09:35:40Z",
            "author_login": "dleffler"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Multiple SQL injection vulnerabilities in Exponent CMS before 2.4.0 allow remote attackers to execute arbitrary SQL commands via the (1) id parameter in an activate_address address controller action, (2) title parameter in a show blog controller action, or (3) content_id parameter in a showComments expComment controller action.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-02-07T15:59:00.507",
    "last_modified": "2024-11-21T02:57:55.413",
    "fix_date": "2016-09-13T19:38:24Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/09/18/10",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/09/18/2",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/93041",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://exponentcms.lighthouseapp.com/projects/61783/changesets/e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/commit/e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/releases/tag/v2.4.0",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.exploit-db.com/exploits/40412/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/09/18/10",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/09/18/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/93041",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://exponentcms.lighthouseapp.com/projects/61783/changesets/e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/commit/e916702a91a6342bbab483a2be2ba2f11dca3aa3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/releases/tag/v2.4.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.exploit-db.com/exploits/40412/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.213958",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "exponent-cms",
    "owner": "exponentcms",
    "created_at": "2011-01-07T01:29:32Z",
    "updated_at": "2024-12-26T16:56:12Z",
    "pushed_at": "2024-12-30T15:54:53Z",
    "size": 227121,
    "stars": 60,
    "forks": 24,
    "open_issues": 152,
    "watchers": 60,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 11116843,
      "Smarty": 6027231,
      "JavaScript": 734249,
      "CSS": 260721,
      "Less": 171892,
      "SCSS": 22697
    },
    "commit_activity": {
      "total_commits_last_year": 79,
      "avg_commits_per_week": 1.5192307692307692,
      "days_active_last_year": 28
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:01:28.289854"
  }
}