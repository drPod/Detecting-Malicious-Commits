{
  "cve_id": "CVE-2016-7838",
  "github_data": {
    "repository": "vslavik/winsparkle",
    "fix_commit": "bb454857348245a7397f9e4fbb3a902f4ac25913",
    "related_commits": [
      "bb454857348245a7397f9e4fbb3a902f4ac25913",
      "bb454857348245a7397f9e4fbb3a902f4ac25913"
    ],
    "patch_url": "https://github.com/vslavik/winsparkle/commit/bb454857348245a7397f9e4fbb3a902f4ac25913.patch",
    "fix_commit_details": {
      "sha": "bb454857348245a7397f9e4fbb3a902f4ac25913",
      "commit_date": "2016-12-12T17:32:14Z",
      "author": {
        "login": "vslavik",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Verify UpdateTempDir isn't maliciously modified",
        "length": 535,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 27,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/updatedownloader.cpp",
          "status": "modified",
          "additions": 27,
          "deletions": 5,
          "patch": "@@ -45,6 +45,17 @@ namespace winsparkle\n namespace\n {\n \n+std::wstring GetUniqueTempDirectoryPrefix()\n+{\n+    wchar_t tmpdir[MAX_PATH + 1];\n+    if (GetTempPath(MAX_PATH + 1, tmpdir) == 0)\n+        throw Win32Exception(\"Cannot create temporary directory\");\n+\n+    std::wstring dir(tmpdir);\n+    dir += L\"Update-\";\n+    return dir;\n+}\n+\n std::wstring CreateUniqueTempDirectory()\n {\n     // We need to put downloaded updates into a directory of their own, because\n@@ -53,15 +64,11 @@ std::wstring CreateUniqueTempDirectory()\n     //\n     // This code creates a new randomized directory name and tries to create it;\n     // this process is repeated if the directory already exists.\n-    wchar_t tmpdir[MAX_PATH+1];\n-    if ( GetTempPath(MAX_PATH+1, tmpdir) == 0 )\n-        throw Win32Exception(\"Cannot create temporary directory\");\n+    const std::wstring tmpdir = GetUniqueTempDirectoryPrefix();\n \n     for ( ;; )\n     {\n         std::wstring dir(tmpdir);\n-        dir += L\"Update-\";\n-\n         UUID uuid;\n         UuidCreate(&uuid);\n         RPC_WSTR uuidStr;\n@@ -192,6 +199,21 @@ void UpdateDownloader::CleanLeftovers()\n     if ( !Settings::ReadConfigValue(\"UpdateTempDir\", tmpdir) )\n         return;\n \n+    // Check that the directory actually is a valid update temp dir, to prevent\n+    // malicious users from forcing us into deleting arbitrary directories:\n+    try\n+    {\n+        if (tmpdir.find(GetUniqueTempDirectoryPrefix()) != 0)\n+        {\n+            Settings::DeleteConfigValue(\"UpdateTempDir\");\n+            return;\n+        }\n+    }\n+    catch (Win32Exception&) // cannot determine temp directory\n+    {\n+        return;\n+    }\n+\n     tmpdir.append(1, '\\0'); // double NULL-terminate for SHFileOperation\n \n     SHFILEOPSTRUCT fos = {0};"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4e6b30b9750b938b184b125d05a664413c72e671",
            "date": "2024-12-06T17:17:14Z",
            "author_login": "vslavik"
          },
          {
            "sha": "642814f20e5020a71715959f4d4b33ec6ecd7591",
            "date": "2024-12-06T17:15:33Z",
            "author_login": "vslavik"
          },
          {
            "sha": "00c189bdb158b63389c012fb317127f1cbf2a6b4",
            "date": "2024-12-06T17:05:36Z",
            "author_login": "vslavik"
          },
          {
            "sha": "134ab6d647f3a1c5a36dd2c73fdd25a6a735baf5",
            "date": "2024-12-04T16:04:28Z",
            "author_login": "vslavik"
          },
          {
            "sha": "da4e7e2b5d9f6ca4209ee51fd3190bc06d46f6b1",
            "date": "2024-12-03T15:16:04Z",
            "author_login": "vslavik"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-426",
    "description": "Untrusted search path vulnerability in WinSparkle versions prior to 0.5.3 allows remote attackers to execute arbitrary code via a specially crafted executable file in an unspecified directory.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-06-09T16:29:01.330",
    "last_modified": "2024-11-21T02:58:34.317",
    "fix_date": "2016-12-12T17:32:14Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/95099",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/vslavik/winsparkle/commit/bb454857348245a7397f9e4fbb3a902f4ac25913",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jvn.jp/en/jp/JVN90813656/index.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://jvn.jp/en/jp/JVN96681653/index.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.wireshark.org/news/20161214.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95099",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/vslavik/winsparkle/commit/bb454857348245a7397f9e4fbb3a902f4ac25913",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jvn.jp/en/jp/JVN90813656/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://jvn.jp/en/jp/JVN96681653/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.wireshark.org/news/20161214.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:01.654997",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "winsparkle",
    "owner": "vslavik",
    "created_at": "2010-01-11T16:13:10Z",
    "updated_at": "2025-01-13T08:06:40Z",
    "pushed_at": "2024-12-06T17:38:23Z",
    "size": 27753,
    "stars": 1315,
    "forks": 269,
    "open_issues": 23,
    "watchers": 1315,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 177257,
      "CMake": 45011,
      "C": 24015,
      "Pascal": 9582,
      "Makefile": 1470,
      "Batchfile": 969
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T19:36:18.365696"
  }
}