{
  "cve_id": "CVE-2016-9182",
  "github_data": {
    "repository": "exponentcms/exponent-cms",
    "fix_commit": "684d79424f768db8bb345d5c68aa2a886239492b",
    "related_commits": [
      "684d79424f768db8bb345d5c68aa2a886239492b",
      "684d79424f768db8bb345d5c68aa2a886239492b"
    ],
    "patch_url": "https://github.com/exponentcms/exponent-cms/commit/684d79424f768db8bb345d5c68aa2a886239492b.patch",
    "fix_commit_details": {
      "sha": "684d79424f768db8bb345d5c68aa2a886239492b",
      "commit_date": "2016-11-03T13:23:12Z",
      "author": {
        "login": "dleffler",
        "type": "User",
        "stats": {
          "total_commits": 9296,
          "average_weekly_commits": 12.68212824010914,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 615
        }
      },
      "commit_message": {
        "title": "fix security vulnerability to bypass permissions using method name in wrong case, reported by fyth",
        "length": 98,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 25,
        "deletions": 19
      },
      "files": [
        {
          "filename": "framework/core/controllers/expController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -53,7 +53,7 @@ abstract class expController {\n     protected $remove_permissions = array();  // $permissions not applicable for this module from above list\n     protected $add_permissions = array();  // additional $permissions processed and visible  for this module\n     protected $manage_permissions = array();  // additional actions requiring manage permission in addition to $m_permissions\n-    public $requires_login = array();  // actions/methods which ONLY require user be logged in to access...$permissions take priority\n+    public $requires_login = array();  // actions/methods (lower case ONLY) which ONLY require user be logged in to access...$permissions take priority\n \n     public $filepath = ''; // location of this controller's files\n     public $viewpath = ''; // location of this controllers views; defaults to controller file location"
        },
        {
          "filename": "framework/core/expFramework.php",
          "status": "modified",
          "additions": 14,
          "deletions": 9,
          "patch": "@@ -277,6 +277,7 @@ function renderAction(array $parms=array()) {\n \t\t$meth = $controllerClass->getMethod($action);\n         if ($meth->isPrivate()) expQueue::flashAndFlow('error', gt('The requested action could not be performed: Action not found'));*/\n     } elseif ($controllerClass->hasMethod('showall')) {\n+        //note every invalid command gets converted to 'showall'\n         $parms['action'] = 'showall';\n         $action = 'showall';\n     } else {\n@@ -402,39 +403,43 @@ function renderAction(array $parms=array()) {\n         }\n     }\n \n+    // deal with lower case only to prevent hacking reflection function names\n+    $lc_perms = array_change_key_case($perms);\n+    $lc_perm_action = strtolower($perm_action);\n+    $lc_common_action = strtolower($common_action);\n     //FIXME? if the assoc $perm doesn't exist, the 'action' will ALWAYS be allowed, e.g., default is to allow action\n-    if (array_key_exists($perm_action, $perms)) {\n+    if (array_key_exists($lc_perm_action, $lc_perms)) {\n         if (!expPermissions::check($perm_action, $controller->loc)) {\n             if (expTheme::inAction()) {\n-                flash('error', gt(\"You don't have permission to\").\" \".$perms[$perm_action]);\n+                flash('error', gt(\"You don't have permission to\").\" \".$lc_perms[$lc_perm_action]);\n                 notfoundController::handle_not_authorized();\n                 expHistory::returnTo('viewable');\n             } else {\n                 return false;\n             }\n         }\n-    } elseif (array_key_exists($common_action, $perms)) {\n+    } elseif (array_key_exists($lc_common_action, $lc_perms)) {\n         if (!expPermissions::check($common_action, $controller->loc)) {\n             if (expTheme::inAction()) {\n-                flash('error', gt(\"You don't have permission to\").\" \".$perms[$common_action]);\n+                flash('error', gt(\"You don't have permission to\").\" \".$lc_perms[$lc_common_action]);\n                 notfoundController::handle_not_authorized();\n                 expHistory::returnTo('viewable');\n             } else {\n                 return false;\n             }\n         }\n-    } elseif (array_key_exists($perm_action, $controller->requires_login)) {\n+    } elseif (array_key_exists($lc_perm_action, $controller->requires_login)) {\n         // check if the action requires the user to at least be logged in\n         if (!$user->isLoggedIn()) {\n-            $msg = empty($controller->requires_login[$perm_action]) ? gt(\"You must be logged in to perform this action\") : gt($controller->requires_login[$perm_action]);\n+            $msg = empty($controller->requires_login[$lc_perm_action]) ? gt(\"You must be logged in to perform this action\") : gt($controller->requires_login[$lc_perm_action]);\n             flash('error', $msg);\n             notfoundController::handle_not_authorized();\n             expHistory::redirecto_login();\n         }\n-    } elseif (array_key_exists($common_action, $controller->requires_login)) {\n-        // check if the action requires the user to at least be logged in\n+    } elseif (array_key_exists($lc_common_action, $controller->requires_login)) {\n+        // check if the common action requires the user to at least be logged in\n         if (!$user->isLoggedIn()) {\n-            $msg = empty($controller->requires_login[$common_action]) ? gt(\"You must be logged in to perform this action\") : gt($controller->requires_login[$common_action]);\n+            $msg = empty($controller->requires_login[$lc_common_action]) ? gt(\"You must be logged in to perform this action\") : gt($controller->requires_login[$lc_common_action]);\n             flash('error', $msg);\n             notfoundController::handle_not_authorized();\n             expHistory::redirecto_login();"
        },
        {
          "filename": "framework/core/subsystems/expString.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -509,8 +509,8 @@ public static function html2text($val) {\n      * Scrub input string for possible security issues.\n      *\n      * @static\n-     * @param $data string\n-     * @return string\n+     * @param $data string|array\n+     * @return string|array\n      */\n     public static function sanitize(&$data) {\n //        return $data;"
        },
        {
          "filename": "framework/modules/file/controllers/fileController.php",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -35,12 +35,13 @@ class fileController extends expController {\n         'picker'=>'You must be logged in to perform this action',\n         'adder'=>'You must be logged in to perform this action',\n         'addit'=>'You must be logged in to perform this action',\n-        'batchDelete'=>'You must be logged in to perform this action',\n-        'createFolder'=>'You must be logged in to perform this action',\n+        'batchdelete'=>'You must be logged in to perform this action',\n+        'createfolder'=>'You must be logged in to perform this action',\n+        'delete'=>'You must be logged in to perform this action',\n         'deleter'=>'You must be logged in to perform this action',\n         'deleteit'=>'You must be logged in to perform this action',\n         'edit'=>'You must be logged in to perform this action',\n-        'quickUpload'=>'You must be logged in to perform this action',\n+        'quickupload'=>'You must be logged in to perform this action',\n         'upload'=>'You must be logged in to perform this action',\n         'uploader'=>'You must be logged in to perform this action',\n     );"
        },
        {
          "filename": "framework/modules/forms/controllers/formsController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1500,7 +1500,7 @@ public function export_csv() {\n      *\n      * @param      $items\n      *\n-     * @param null $rptcols\n+     * @param array|null $rptcols\n      *\n      * @return string\n      */"
        },
        {
          "filename": "framework/modules/navigation/controllers/navigationController.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -25,12 +25,12 @@ class navigationController extends expController {\n         'showall' => 'Show Navigation',\n         'breadcrumb' => 'Breadcrumb',\n     );\n-    protected $remove_permissions = array(\n+//    protected $remove_permissions = array(\n //        'configure',\n //        'create',\n //        'delete',\n //        'edit'\n-    );\n+//    );\n     protected $add_permissions = array(\n         'manage'    => 'Manage',\n         'view'      => \"View Page\""
        },
        {
          "filename": "framework/modules/pixidou/controllers/pixidouController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -25,7 +25,7 @@ class pixidouController extends expController {\n \tpublic $cacheDir = \"tmp/pixidou/\";\n     public $requires_login = array(\n         'editor'=>'You must be logged in to perform this action',\n-        'exitEditor'=>'You must be logged in to perform this action',\n+        'exiteditor'=>'You must be logged in to perform this action',\n     );\n \n     static function displayname() { return gt(\"Pixidou Image Editor\"); }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 7,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "accea125b51d63319e69715a30f762be0e07845d",
            "date": "2024-12-26T16:54:42Z",
            "author_login": "dleffler"
          },
          {
            "sha": "7ca4bea4baabe3ffacff195a0ce1b1dab2ab11eb",
            "date": "2024-12-26T14:53:00Z",
            "author_login": "dleffler"
          },
          {
            "sha": "94b89d4cd98076976ef3c77f7bdc91fb874c70cd",
            "date": "2024-12-26T14:47:17Z",
            "author_login": "dleffler"
          },
          {
            "sha": "72ac0af81fdd733084a5164093ca33dcd41f8df0",
            "date": "2024-12-26T12:33:23Z",
            "author_login": "dleffler"
          },
          {
            "sha": "ababe76855ae7f303eedd9a581964ab8cae56097",
            "date": "2024-12-26T09:35:40Z",
            "author_login": "dleffler"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-284",
    "description": "Exponent CMS 2.4 uses PHP reflection to call a method of a controller class, and then uses the method name to check user permission. But, the method name in PHP reflection is case insensitive, and Exponent CMS permits undefined actions to execute by default, so an attacker can use a capitalized method name to bypass the permission check, e.g., controller=expHTMLEditor&action=preview&editor=ckeditor and controller=expHTMLEditor&action=Preview&editor=ckeditor. An anonymous user will be rejected for the former but can access the latter.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2016-11-04T10:59:01.333",
    "last_modified": "2024-11-21T03:00:45.100",
    "fix_date": "2016-11-03T13:23:12Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/94227",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/commit/684d79424f768db8bb345d5c68aa2a886239492b",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/94227",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/exponentcms/exponent-cms/commit/684d79424f768db8bb345d5c68aa2a886239492b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:46.810384",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "exponent-cms",
    "owner": "exponentcms",
    "created_at": "2011-01-07T01:29:32Z",
    "updated_at": "2024-12-26T16:56:12Z",
    "pushed_at": "2024-12-30T15:54:53Z",
    "size": 227121,
    "stars": 60,
    "forks": 24,
    "open_issues": 152,
    "watchers": 60,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 11116843,
      "Smarty": 6027231,
      "JavaScript": 734249,
      "CSS": 260721,
      "Less": 171892,
      "SCSS": 22697
    },
    "commit_activity": {
      "total_commits_last_year": 79,
      "avg_commits_per_week": 1.5192307692307692,
      "days_active_last_year": 28
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:01:28.289854"
  }
}