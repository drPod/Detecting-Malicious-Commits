{
  "cve_id": "CVE-2016-9909",
  "github_data": {
    "repository": "html5lib/html5lib-python",
    "fix_commit": "9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7",
    "related_commits": [
      "9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7",
      "9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7"
    ],
    "patch_url": "https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7.patch",
    "fix_commit_details": {
      "sha": "9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7",
      "commit_date": "2013-07-19T22:15:47Z",
      "author": {
        "login": "gsnedders",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix #11, #12: quote attributes that need escaping in legacy browsers",
        "length": 371,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 143,
        "additions": 132,
        "deletions": 11
      },
      "files": [
        {
          "filename": "CHANGES.rst",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -33,6 +33,13 @@ Released on XXX\n * **Use scripting disabled by default (as we don't implement\n   scripting).**\n \n+* **Fix #11, avoiding the XSS bug potentially caused by serializer\n+  allowing attribute values to be escaped out of in old browser versions,\n+  changing the quote_attr_values option on serializer to take one of\n+  three values, \"always\" (the old True value), \"legacy\" (the new option,\n+  and the new default), and \"spec\" (the old False value, and the old\n+  default).**\n+\n \n 0.9999999/1.0b8\n ~~~~~~~~~~~~~~~"
        },
        {
          "filename": "html5lib/serializer/htmlserializer.py",
          "status": "modified",
          "additions": 20,
          "deletions": 6,
          "patch": "@@ -10,7 +10,16 @@\n \n spaceCharacters = \"\".join(spaceCharacters)\n \n-quoteAttributeSpec = re.compile(\"[\" + spaceCharacters + \"\\\"'=<>`]\")\n+quoteAttributeSpecChars = spaceCharacters + \"\\\"'=<>`\"\n+quoteAttributeSpec = re.compile(\"[\" + quoteAttributeSpecChars + \"]\")\n+quoteAttributeLegacy = re.compile(\"[\" + quoteAttributeSpecChars +\n+                                  \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\"\n+                                  \"\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\"\n+                                  \"\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\"\n+                                  \"\\x20\\x2f\\x60\\xa0\\u1680\\u180e\\u180f\\u2000\"\n+                                  \"\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\"\n+                                  \"\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\"\n+                                  \"\\u3000]\")\n \n try:\n     from codecs import register_error, xmlcharrefreplace_errors\n@@ -72,7 +81,7 @@ def htmlentityreplace_errors(exc):\n class HTMLSerializer(object):\n \n     # attribute quoting options\n-    quote_attr_values = False\n+    quote_attr_values = \"legacy\"  # be secure by default\n     quote_char = '\"'\n     use_best_quote_char = True\n \n@@ -108,9 +117,9 @@ def __init__(self, **kwargs):\n         inject_meta_charset=True|False\n           Whether it insert a meta element to define the character set of the\n           document.\n-        quote_attr_values=True|False\n+        quote_attr_values=\"legacy\"|\"spec\"|\"always\"\n           Whether to quote attribute values that don't require quoting\n-          per HTML5 parsing rules.\n+          per legacy browser behaviour, when required by the standard, or always.\n         quote_char=u'\"'|u\"'\"\n           Use given quote character for attribute quoting. Default is to\n           use double quote unless attribute value contains a double quote,\n@@ -239,10 +248,15 @@ def serialize(self, treewalker, encoding=None):\n                         (k not in booleanAttributes.get(name, tuple()) and\n                          k not in booleanAttributes.get(\"\", tuple())):\n                         yield self.encodeStrict(\"=\")\n-                        if self.quote_attr_values:\n+                        if self.quote_attr_values == \"always\" or len(v) == 0:\n                             quote_attr = True\n+                        elif self.quote_attr_values == \"spec\":\n+                            quote_attr = quoteAttributeSpec.search(v) is not None\n+                        elif self.quote_attr_values == \"legacy\":\n+                            quote_attr = quoteAttributeLegacy.search(v) is not None\n                         else:\n-                            quote_attr = len(v) == 0 or quoteAttributeSpec.search(v)\n+                            raise ValueError(\"quote_attr_values must be one of: \"\n+                                             \"'always', 'spec', or 'legacy'\")\n                         v = v.replace(\"&\", \"&amp;\")\n                         if self.escape_lt_in_attrs:\n                             v = v.replace(\"<\", \"&lt;\")"
        },
        {
          "filename": "html5lib/tests/serializer-testdata/core.test",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -242,7 +242,7 @@\n         },\n         {\n             \"expected\": [\n-                \"<span title=foo\\u000bbar>\"\n+                \"<span title=\\\"foo\\u000bbar\\\">\"\n             ],\n             \"input\": [\n                 ["
        },
        {
          "filename": "html5lib/tests/serializer-testdata/options.test",
          "status": "modified",
          "additions": 73,
          "deletions": 4,
          "patch": "@@ -41,9 +41,9 @@\n                     ]\n                 ]\n             ],\n-            \"description\": \"quote_attr_values=true\",\n+            \"description\": \"quote_attr_values='always'\",\n             \"options\": {\n-                \"quote_attr_values\": true\n+                \"quote_attr_values\": \"always\"\n             }\n         },\n         {\n@@ -64,9 +64,78 @@\n                     ]\n                 ]\n             ],\n-            \"description\": \"quote_attr_values=true with irrelevant\",\n+            \"description\": \"quote_attr_values='always' with irrelevant\",\n             \"options\": {\n-                \"quote_attr_values\": true\n+                \"quote_attr_values\": \"always\"\n+            }\n+        },\n+        {\n+            \"expected\": [\n+                \"<div class=\\\"foo\\\">\"\n+            ],\n+            \"input\": [\n+                [\n+                    \"StartTag\",\n+                    \"http://www.w3.org/1999/xhtml\",\n+                    \"div\",\n+                    [\n+                        {\n+                            \"namespace\": null,\n+                            \"name\": \"class\",\n+                            \"value\": \"foo\"\n+                        }\n+                    ]\n+                ]\n+            ],\n+            \"description\": \"non-minimized quote_attr_values='always'\",\n+            \"options\": {\n+                \"quote_attr_values\": \"always\"\n+            }\n+        },\n+        {\n+            \"expected\": [\n+                \"<div class=foo>\"\n+            ],\n+            \"input\": [\n+                [\n+                    \"StartTag\",\n+                    \"http://www.w3.org/1999/xhtml\",\n+                    \"div\",\n+                    [\n+                        {\n+                            \"namespace\": null,\n+                            \"name\": \"class\",\n+                            \"value\": \"foo\"\n+                        }\n+                    ]\n+                ]\n+            ],\n+            \"description\": \"non-minimized quote_attr_values='legacy'\",\n+            \"options\": {\n+                \"quote_attr_values\": \"legacy\"\n+            }\n+        },\n+        {\n+            \"expected\": [\n+                \"<div class=foo>\"\n+            ],\n+            \"input\": [\n+                [\n+                    \"StartTag\",\n+                    \"http://www.w3.org/1999/xhtml\",\n+                    \"div\",\n+                    [\n+                        {\n+                            \"namespace\": null,\n+                            \"name\": \"class\",\n+                            \"value\": \"foo\"\n+                        }\n+                    ]\n+                ]\n+            ],\n+            \"description\": \"non-minimized quote_attr_values='spec'\",\n+            \"options\": {\n+                \"quote_attr_values\": \"spec\"\n             }\n         },\n         {"
        },
        {
          "filename": "html5lib/tests/test_serializer.py",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -146,6 +146,37 @@ def testComment():\n     throwsWithLatin1([[\"Comment\", \"\\u0101\"]])\n \n \n+@pytest.mark.parametrize(\"c\", list(\"\\t\\n\\u000C\\x20\\r\\\"'=<>`\"))\n+def testSpecQuoteAttribute(c):\n+    input_ = [[\"StartTag\", \"http://www.w3.org/1999/xhtml\", \"span\",\n+               [{\"namespace\": None, \"name\": \"foo\", \"value\": c}]]]\n+    if c == '\"':\n+        output_ = [\"<span foo='%s'>\" % c]\n+    else:\n+        output_ = ['<span foo=\"%s\">' % c]\n+    options_ = {\"quote_attr_values\": \"spec\"}\n+    runSerializerTest(input_, output_, options_)\n+\n+\n+@pytest.mark.parametrize(\"c\", list(\"\\t\\n\\u000C\\x20\\r\\\"'=<>`\"\n+                                   \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\"\n+                                   \"\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\"\n+                                   \"\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\"\n+                                   \"\\x20\\x2f\\x60\\xa0\\u1680\\u180e\\u180f\\u2000\"\n+                                   \"\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\"\n+                                   \"\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\"\n+                                   \"\\u3000\"))\n+def testLegacyQuoteAttribute(c):\n+    input_ = [[\"StartTag\", \"http://www.w3.org/1999/xhtml\", \"span\",\n+               [{\"namespace\": None, \"name\": \"foo\", \"value\": c}]]]\n+    if c == '\"':\n+        output_ = [\"<span foo='%s'>\" % c]\n+    else:\n+        output_ = ['<span foo=\"%s\">' % c]\n+    options_ = {\"quote_attr_values\": \"legacy\"}\n+    runSerializerTest(input_, output_, options_)\n+\n+\n @pytest.fixture\n def lxml_parser():\n     return etree.XMLParser(resolve_entities=False)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fd4f032bc090d44fb11a84b352dad7cbee0a4745",
            "date": "2024-02-21T15:31:38Z",
            "author_login": "ambv"
          },
          {
            "sha": "82c2599585a6119e5afd26e58e754972c79f6734",
            "date": "2024-01-10T18:31:09Z",
            "author_login": "eli-schwartz"
          },
          {
            "sha": "4a87368b71090f1432df6302f178c4babfcec93f",
            "date": "2024-01-10T14:13:40Z",
            "author_login": "cclauss"
          },
          {
            "sha": "3e500bb6e4188ea087f5b743a720ed9f4d9216f9",
            "date": "2023-03-03T15:43:58Z",
            "author_login": "ambv"
          },
          {
            "sha": "f0bb2a639d768c5bd6640c020aef86621a63b02b",
            "date": "2023-03-03T14:50:22Z",
            "author_login": "ambv"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "The serializer in html5lib before 0.99999999 might allow remote attackers to conduct cross-site scripting (XSS) attacks by leveraging mishandling of the < (less than) character in attribute values.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-02-22T16:59:00.380",
    "last_modified": "2024-11-21T03:01:59.533",
    "fix_date": "2013-07-19T22:15:47Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/12/06/5",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/12/08/8",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95132",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/issues/11",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/issues/12",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://html5lib.readthedocs.io/en/latest/changes.html#b9",
      "source": "secalert@redhat.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/12/06/5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2016/12/08/8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95132",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/commit/9b8d8eb5afbc066b7fac9390f5ec75e5e8a7cab7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/issues/11",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/html5lib/html5lib-python/issues/12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://html5lib.readthedocs.io/en/latest/changes.html#b9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.232755",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "html5lib-python",
    "owner": "html5lib",
    "created_at": "2013-04-09T14:07:42Z",
    "updated_at": "2025-01-03T02:38:16Z",
    "pushed_at": "2024-02-27T19:49:36Z",
    "size": 6859,
    "stars": 1146,
    "forks": 286,
    "open_issues": 88,
    "watchers": 1146,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 583317,
      "HTML": 266469,
      "Shell": 145
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:51:16.929238"
  }
}