{
  "cve_id": "CVE-2017-0375",
  "github_data": {
    "repository": "torproject/tor",
    "fix_commit": "79b59a2dfcb68897ee89d98587d09e55f07e68d7",
    "related_commits": [
      "79b59a2dfcb68897ee89d98587d09e55f07e68d7",
      "79b59a2dfcb68897ee89d98587d09e55f07e68d7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "79b59a2dfcb68897ee89d98587d09e55f07e68d7",
      "commit_date": "2017-06-05T13:35:03Z",
      "author": {
        "login": "dgoulet-tor",
        "type": "User",
        "stats": {
          "total_commits": 2031,
          "average_weekly_commits": 1.721186440677966,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 255
        }
      },
      "commit_message": {
        "title": "TROVE-2017-004: Fix assertion failure in relay_send_end_cell_from_edge_",
        "length": 554,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 26,
        "additions": 19,
        "deletions": 7
      },
      "files": [
        {
          "filename": "changes/trove-2017-004",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+  o Major bugfixes (hidden service, relay):\n+    - Fix an assertion failure when an hidden service handles a malformed\n+      BEGIN cell. This bug resulted in the service crashing triggered by a\n+      tor_assert(). Part of TROVE-2017-004. Fixes bug 22493; bugfix on\n+      tor-0.3.0.1-alpha. Found by armadev."
        },
        {
          "filename": "src/or/connection_edge.c",
          "status": "modified",
          "additions": 14,
          "deletions": 7,
          "patch": "@@ -3091,14 +3091,21 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n   char *address = NULL;\n   uint16_t port = 0;\n   or_circuit_t *or_circ = NULL;\n+  origin_circuit_t *origin_circ = NULL;\n+  crypt_path_t *layer_hint = NULL;\n   const or_options_t *options = get_options();\n   begin_cell_t bcell;\n   int rv;\n   uint8_t end_reason=0;\n \n   assert_circuit_ok(circ);\n-  if (!CIRCUIT_IS_ORIGIN(circ))\n+  if (!CIRCUIT_IS_ORIGIN(circ)) {\n     or_circ = TO_OR_CIRCUIT(circ);\n+  } else {\n+    tor_assert(circ->purpose == CIRCUIT_PURPOSE_S_REND_JOINED);\n+    origin_circ = TO_ORIGIN_CIRCUIT(circ);\n+    layer_hint = origin_circ->cpath->prev;\n+  }\n \n   relay_header_unpack(&rh, cell->payload);\n   if (rh.length > RELAY_PAYLOAD_SIZE)\n@@ -3123,7 +3130,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n     return -END_CIRC_REASON_TORPROTOCOL;\n   } else if (rv == -1) {\n     tor_free(bcell.address);\n-    relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, NULL);\n+    relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, layer_hint);\n     return 0;\n   }\n \n@@ -3160,7 +3167,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n     if (!directory_permits_begindir_requests(options) ||\n         circ->purpose != CIRCUIT_PURPOSE_OR) {\n       relay_send_end_cell_from_edge(rh.stream_id, circ,\n-                                    END_STREAM_REASON_NOTDIRECTORY, NULL);\n+                                  END_STREAM_REASON_NOTDIRECTORY, layer_hint);\n       return 0;\n     }\n     /* Make sure to get the 'real' address of the previous hop: the\n@@ -3177,7 +3184,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n   } else {\n     log_warn(LD_BUG, \"Got an unexpected command %d\", (int)rh.command);\n     relay_send_end_cell_from_edge(rh.stream_id, circ,\n-                                  END_STREAM_REASON_INTERNAL, NULL);\n+                                  END_STREAM_REASON_INTERNAL, layer_hint);\n     return 0;\n   }\n \n@@ -3188,7 +3195,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n     if (bcell.flags & BEGIN_FLAG_IPV4_NOT_OK) {\n       tor_free(address);\n       relay_send_end_cell_from_edge(rh.stream_id, circ,\n-                                    END_STREAM_REASON_EXITPOLICY, NULL);\n+                                    END_STREAM_REASON_EXITPOLICY, layer_hint);\n       return 0;\n     }\n   }\n@@ -3211,7 +3218,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n   n_stream->deliver_window = STREAMWINDOW_START;\n \n   if (circ->purpose == CIRCUIT_PURPOSE_S_REND_JOINED) {\n-    origin_circuit_t *origin_circ = TO_ORIGIN_CIRCUIT(circ);\n+    tor_assert(origin_circ);\n     log_info(LD_REND,\"begin is for rendezvous. configuring stream.\");\n     n_stream->base_.address = tor_strdup(\"(rendezvous)\");\n     n_stream->base_.state = EXIT_CONN_STATE_CONNECTING;\n@@ -3231,7 +3238,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)\n        * the hidden service. */\n       relay_send_end_cell_from_edge(rh.stream_id, circ,\n                                     END_STREAM_REASON_DONE,\n-                                    origin_circ->cpath->prev);\n+                                    layer_hint);\n       connection_free(TO_CONN(n_stream));\n       tor_free(address);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "27d4ba90f6dbf0c80d518a358b9600ae789509e4",
            "date": "2024-03-05T22:23:20Z",
            "author_login": "micah"
          },
          {
            "sha": "3cb6a690be60fcdab60130402ff88dcfc0657596",
            "date": "2023-06-19T12:09:45Z",
            "author_login": "dgoulet-tor"
          },
          {
            "sha": "94f4d0968b57db8b3346a5b51b9e0c2ed3e8d98f",
            "date": "2023-06-15T17:00:11Z",
            "author_login": "dgoulet-tor"
          },
          {
            "sha": "623a55764b8c72e6271f822c1fe68b9613c551b9",
            "date": "2023-06-19T12:09:24Z",
            "author_login": "dgoulet-tor"
          },
          {
            "sha": "7a83aa4f5042905844cb9ab48a4876becd8f2175",
            "date": "2023-06-15T17:23:36Z",
            "author_login": "dgoulet-tor"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-617",
    "description": "The hidden-service feature in Tor before 0.3.0.8 allows a denial of service (assertion failure and daemon exit) in the relay_send_end_cell_from_edge_ function via a malformed BEGIN cell.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-06-09T17:29:00.217",
    "last_modified": "2024-11-21T03:02:51.673",
    "fix_date": "2017-06-05T13:35:03Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/99017",
      "source": "security@debian.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/torproject/tor/commit/79b59a2dfcb68897ee89d98587d09e55f07e68d7",
      "source": "security@debian.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.torproject.org/pipermail/tor-announce/2017-June/000131.html",
      "source": "security@debian.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://trac.torproject.org/projects/tor/ticket/22493",
      "source": "security@debian.org",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/99017",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/torproject/tor/commit/79b59a2dfcb68897ee89d98587d09e55f07e68d7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.torproject.org/pipermail/tor-announce/2017-June/000131.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://trac.torproject.org/projects/tor/ticket/22493",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:01.655240",
    "processing_status": "enhanced"
  }
}