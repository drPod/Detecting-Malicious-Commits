{
  "cve_id": "CVE-2017-0910",
  "github_data": {
    "repository": "zulip/zulip",
    "fix_commit": "960d736e55cbb9386a68e4ee45f80581fd2a4e32",
    "related_commits": [
      "960d736e55cbb9386a68e4ee45f80581fd2a4e32",
      "960d736e55cbb9386a68e4ee45f80581fd2a4e32"
    ],
    "patch_url": "https://github.com/zulip/zulip/commit/960d736e55cbb9386a68e4ee45f80581fd2a4e32.patch",
    "fix_commit_details": {
      "sha": "960d736e55cbb9386a68e4ee45f80581fd2a4e32",
      "commit_date": "2017-11-08T22:02:50Z",
      "author": {
        "login": "hackerkid",
        "type": "User",
        "stats": {
          "total_commits": 1712,
          "average_weekly_commits": 2.6460587326120555,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 235
        }
      },
      "commit_message": {
        "title": "registration: Require an explicit realm on PreregistrationUser.",
        "length": 371,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 28,
        "deletions": 8
      },
      "files": [
        {
          "filename": "templates/confirmation/link_expired.html",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -4,12 +4,10 @@\n \n <div class=\"pitch\">\n     <hr/>\n-    <p class=\"lead\">Whoops. The confirmation link has expired.</p>\n+    <p class=\"lead\">Whoops. The confirmation link has expired or been deactivated.</p>\n \n     <p>\n-        If you're not sure how to generate a new one, shoot us a line at\n-        <a href=\"mailto:{{ support_email }}\">{{ support_email }}</a>\n-        and we'll get this resolved shortly.\n+        Please contact your organization administrator for a new one.\n     </p>\n \n </div>"
        },
        {
          "filename": "zerver/tests/test_auth_backends.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -520,7 +520,7 @@ def do_auth(*args, **kwargs):\n     def test_github_backend_new_user(self):\n         # type: () -> None\n         rf = RequestFactory()\n-        request = rf.get('/complete')\n+        request = rf.get('/complete', HTTP_HOST=self.user_profile.realm.host)\n         request.session = {}\n         request.user = self.user_profile\n         self.backend.strategy.request = request"
        },
        {
          "filename": "zerver/tests/test_email_change.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -62,7 +62,7 @@ def test_confirm_email_change_when_time_exceeded(self):\n                                     type=Confirmation.EMAIL_CHANGE)\n         url = confirmation_url(key, user_profile.realm.host, Confirmation.EMAIL_CHANGE)\n         response = self.client_get(url)\n-        self.assert_in_success_response([\"Whoops. The confirmation link has expired.\"], response)\n+        self.assert_in_success_response([\"The confirmation link has expired or been deactivated.\"], response)\n \n     def test_confirm_email_change(self):\n         # type: () -> None"
        },
        {
          "filename": "zerver/tests/test_signup.py",
          "status": "modified",
          "additions": 21,
          "deletions": 1,
          "patch": "@@ -925,7 +925,7 @@ def test_expired_multiuse_link(self):\n         result = self.client_post(invite_link, {'email': email})\n \n         self.assertEqual(result.status_code, 200)\n-        self.assert_in_response(\"Whoops. The confirmation link has expired.\", result)\n+        self.assert_in_response(\"The confirmation link has expired or been deactivated.\", result)\n \n     def test_invalid_multiuse_link(self):\n         # type: () -> None\n@@ -1555,6 +1555,26 @@ def test_replace_subdomain_in_confirmation_link(self) -> None:\n              'from_confirmation': '1'},  subdomain=\"zephyr\")\n         self.assert_in_success_response([\"We couldn't find your confirmation link\"], result)\n \n+    def test_failed_signup_due_to_empty_realm_in_prereg_user(self) -> None:\n+        \"\"\"\n+        Largely to test a transitional state, where we started requiring the\n+        realm in PreregistrationUser (if realm_creation is False), and wanted\n+        to make sure we had properly disabled any existing confirmation links that\n+        didn't have the realm set.\n+        \"\"\"\n+        email = \"newuser@zulip.com\"\n+        password = \"password\"\n+        self.client_post('/accounts/home/', {'email': email})\n+        PreregistrationUser.objects.update(realm=None)\n+        result = self.client_post(\n+            '/accounts/register/',\n+            {'password': password,\n+             'key': find_key_by_email(email),\n+             'terms': True,\n+             'full_name': \"New User\",\n+             'from_confirmation': '1'})\n+        self.assert_in_success_response([\"The confirmation link has expired or been deactivated.\"], result)\n+\n     def test_failed_signup_due_to_restricted_domain(self):\n         # type: () -> None\n         realm = get_realm('zulip')"
        },
        {
          "filename": "zerver/views/registration.py",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -82,7 +82,9 @@ def accounts_register(request):\n         realm = None\n     else:\n         realm = get_realm(get_subdomain(request))\n-        if prereg_user.realm is not None and prereg_user.realm != realm:\n+        if prereg_user.realm is None:\n+            return render(request, 'confirmation/link_expired.html')\n+        if prereg_user.realm != realm:\n             return render(request, 'confirmation/link_does_not_exist.html')\n \n     if realm and not email_allowed_for_realm(email, realm):"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "99ea0255da6d835e98f12adb7100af0f6d9ccb85",
            "date": "2025-01-09T06:57:21Z",
            "author_login": "mateuszmandera"
          },
          {
            "sha": "4196859cd65d373537a0a6092ffe8dc2a6b09ada",
            "date": "2025-01-09T05:56:09Z",
            "author_login": "mateuszmandera"
          },
          {
            "sha": "67887324ed74f9196aff2c26c40f5937ff811819",
            "date": "2024-11-19T21:51:08Z",
            "author_login": "mateuszmandera"
          },
          {
            "sha": "8b09190bcd129ea5e46509343049e595b92f06d9",
            "date": "2025-01-13T13:33:06Z",
            "author_login": "amanagr"
          },
          {
            "sha": "a05cbfa0c9e41e2fa2930b28653076279ae7bda0",
            "date": "2025-01-13T13:24:09Z",
            "author_login": "amanagr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-863",
    "description": "In Zulip Server before 1.7.1, on a server with multiple realms, a vulnerability in the invitation system lets an authorized user of one realm on the server create a user account on any other realm.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-11-27T16:29:00.217",
    "last_modified": "2024-11-21T03:03:52.737",
    "fix_date": "2017-11-08T22:02:50Z"
  },
  "references": [
    {
      "url": "http://blog.zulip.org/2017/11/23/zulip-1-7-1-released/",
      "source": "support@hackerone.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zulip/zulip/commit/960d736e55cbb9386a68e4ee45f80581fd2a4e32",
      "source": "support@hackerone.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://blog.zulip.org/2017/11/23/zulip-1-7-1-released/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zulip/zulip/commit/960d736e55cbb9386a68e4ee45f80581fd2a4e32",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:09.751907",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "zulip",
    "owner": "zulip",
    "created_at": "2015-09-25T16:37:25Z",
    "updated_at": "2025-01-14T13:31:30Z",
    "pushed_at": "2025-01-14T02:34:21Z",
    "size": 495185,
    "stars": 21946,
    "forks": 8107,
    "open_issues": 2487,
    "watchers": 21946,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.4.x",
      "1.5.x",
      "1.8.x",
      "1.9.x",
      "2.0.x",
      "2.1.x",
      "3.x",
      "3.1-with-bmemcached",
      "4.x",
      "4.0-rc1-branch",
      "5.x",
      "5.x-user-sharding",
      "5.0-rc1-branch",
      "5.0-rc2-branch",
      "6.x",
      "6.0-beta1-branch",
      "6.0-rc1-branch",
      "7.x",
      "7.0-beta1-branch",
      "7.0-beta2-branch",
      "8.x",
      "9.x",
      "buddy-list-prep",
      "chat.zulip.org",
      "dockertest",
      "main",
      "s3-compatible-uploads",
      "zulip-cloud-current"
    ],
    "languages": {
      "Python": 14193798,
      "TypeScript": 4055572,
      "JavaScript": 2278673,
      "HTML": 957053,
      "CSS": 942085,
      "Handlebars": 597145,
      "Shell": 161466,
      "Puppet": 137563,
      "Perl": 10353,
      "Dockerfile": 4219,
      "Ruby": 3794,
      "Emacs Lisp": 157
    },
    "commit_activity": {
      "total_commits_last_year": 6397,
      "avg_commits_per_week": 123.01923076923077,
      "days_active_last_year": 356
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:44:17.890508"
  }
}