{
  "cve_id": "CVE-2017-1000188",
  "github_data": {
    "repository": "mde/ejs",
    "fix_commit": "49264e0037e313a0a3e033450b5c184112516d8f",
    "related_commits": [
      "49264e0037e313a0a3e033450b5c184112516d8f",
      "49264e0037e313a0a3e033450b5c184112516d8f"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "49264e0037e313a0a3e033450b5c184112516d8f",
      "commit_date": "2016-12-02T00:21:47Z",
      "author": {
        "login": "mde",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Blacklist a few other unsafe opts from passing in data obj",
        "length": 58,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 32,
        "additions": 25,
        "deletions": 7
      },
      "files": [
        {
          "filename": "lib/ejs.js",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -56,6 +56,12 @@ var _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\n var _OPTS = [ 'cache', 'filename', 'delimiter', 'scope', 'context',\n         'debug', 'compileDebug', 'client', '_with', 'root', 'rmWhitespace',\n         'strict', 'localsName'];\n+var _OPTS_IN_DATA_BLACKLIST = {\n+      cache: true,\n+      filename: true,\n+      root: true,\n+      localsName: true\n+    };\n var _BOM = /^\\uFEFF/;\n \n /**\n@@ -268,11 +274,9 @@ function rethrow(err, str, filename, lineno){\n function cpOptsInData(data, opts) {\n   _OPTS.forEach(function (p) {\n     if (typeof data[p] != 'undefined') {\n-      // Disallow setting the root opt for includes via a passed data obj\n-      // Unsanitized, parameterized use of `render` could allow the\n-      // include directory to be reset, opening up the possibility of\n-      // remote code execution\n-      if (p == 'root') {\n+      // Disallow passing potentially dangerous opts in the data\n+      // These opts should not be settable via a `render` call\n+      if (_OPTS_IN_DATA_BLACKLIST[p]) {\n         return;\n       }\n       opts[p] = data[p];"
        },
        {
          "filename": "test/ejs.js",
          "status": "modified",
          "additions": 16,
          "deletions": 2,
          "patch": "@@ -168,6 +168,21 @@ suite('ejs.compile(str, options)', function () {\n \n });\n \n+/* Old API -- remove when this shim goes away */\n+suite('ejs.render(str, dataAndOpts)', function () {\n+  test('render the template with data/opts passed together', function () {\n+    assert.equal(ejs.render('<p><?= foo ?></p>', {foo: 'yay', delimiter: '?'}),\n+        '<p>yay</p>');\n+  });\n+\n+  test('disallow unsafe opts passed along in data', function () {\n+    assert.equal(ejs.render('<p><?= locals.foo ?></p>',\n+        // localsName should not get reset because it's blacklisted\n+        {_with: false, foo: 'yay', delimiter: '?', localsName: '_'}),\n+        '<p>yay</p>');\n+  });\n+});\n+\n suite('ejs.render(str, data, opts)', function () {\n   test('render the template', function () {\n     assert.equal(ejs.render('<p>yay</p>'), '<p>yay</p>');\n@@ -753,7 +768,6 @@ suite('include()', function () {\n     var viewsPath = path.join(__dirname, 'fixtures');\n     assert.equal(ejs.render(fixture('include-root.ejs'), {pets: users}, {filename: file, delimiter: '@',root:viewsPath}),\n       fixture('include.html'));\n-\n   });\n \n   test('work when nested', function () {\n@@ -918,7 +932,7 @@ suite('preprocessor include', function () {\n     var template = fixture('include_preprocessor_line_slurp.ejs');\n     var expected = fixture('include_preprocessor_line_slurp.html');\n     var options = {rmWhitespace: true, filename: file};\n-    assert.equal(ejs.render(template, options),\n+    assert.equal(ejs.render(template, {}, options),\n         expected);\n   });\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4770b8ff49b93387c7f2760d957446cd332531a",
            "date": "2024-07-23T18:39:51Z",
            "author_login": "adnantabda"
          },
          {
            "sha": "5b13088c6de0bff1ce5c6ff2eef7ee7eff0d6f3e",
            "date": "2024-04-12T15:32:10Z",
            "author_login": "mde"
          },
          {
            "sha": "d3f807dea9ce904e20a47a661f2310ce9134dc2a",
            "date": "2024-04-12T15:23:01Z",
            "author_login": "mde"
          },
          {
            "sha": "9ee26dde5d7015d9c0e2ff87314cabeac5247c02",
            "date": "2024-04-12T15:07:01Z",
            "author_login": "mde"
          },
          {
            "sha": "e469741dca7df2eb400199e1cdb74621e3f89aa5",
            "date": "2024-04-12T15:06:40Z",
            "author_login": "mde"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-11-17T03:29:00.267",
    "last_modified": "2024-11-21T03:04:20.990",
    "fix_date": "2016-12-02T00:21:47Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/101889",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/101889",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:09.741159",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "ejs",
    "owner": "mde",
    "created_at": "2014-12-31T17:49:35Z",
    "updated_at": "2025-01-25T14:55:20Z",
    "pushed_at": "2024-08-06T21:14:22Z",
    "size": 7041,
    "stars": 7831,
    "forks": 843,
    "open_issues": 112,
    "watchers": 7831,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 96896
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:45:43.979742"
  }
}