{
  "cve_id": "CVE-2017-1001003",
  "github_data": {
    "repository": "josdejong/mathjs",
    "fix_commit": "a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
    "related_commits": [
      "a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
      "a60f3c8d9dd714244aed7a5569c3dccaa3a4e761"
    ],
    "patch_url": "https://github.com/josdejong/mathjs/commit/a60f3c8d9dd714244aed7a5569c3dccaa3a4e761.patch",
    "fix_commit_details": {
      "sha": "a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
      "commit_date": "2017-11-18T19:11:48Z",
      "author": {
        "login": "josdejong",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed a security issue where forbidden properties like constructor could be replaced by using unicode characters when creating an object",
        "length": 136,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 35,
        "additions": 32,
        "deletions": 3
      },
      "files": [
        {
          "filename": "HISTORY.md",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -7,6 +7,9 @@\n - Fixed a security issue in `typed-function` allowing arbitrary code execution\n   in the JavaScript engine by creating a typed function with JavaScript code\n   in the name. Thanks Masato Kinugawa.\n+- Fixed a security issue where forbidden properties like constructor could be\n+  replaced by using unicode characters when creating an object. No known exploit,\n+  but could possibly allow arbitrary code execution. Thanks Masato Kinugawa.\n \n \n ## 2017-10-18, version 3.16.5"
        },
        {
          "filename": "lib/expression/node/ObjectNode.js",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -60,11 +60,15 @@ function factory (type, config, load, typed) {\n     var entries = [];\n     for (var key in node.properties) {\n       if (hasOwnProperty(node.properties, key)) {\n-        if (!isSafeProperty(node.properties, key)) {\n-          throw new Error('No access to property \"' + key + '\"');\n+        // we stringify/parse the key here to resolve unicode characters,\n+        // so you cannot create a key like {\"co\\\\u006Estructor\": null} \n+        var stringifiedKey = stringify(key)\n+        var parsedKey = JSON.parse(stringifiedKey)\n+        if (!isSafeProperty(node.properties, parsedKey)) {\n+          throw new Error('No access to property \"' + parsedKey + '\"');\n         }\n \n-        entries.push(stringify(key) + ': ' + compile(node.properties[key], defs, args));\n+        entries.push(stringifiedKey + ': ' + compile(node.properties[key], defs, args));\n       }\n     }\n     return '{' + entries.join(', ') + '}';"
        },
        {
          "filename": "test/expression/security.test.js",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -83,6 +83,23 @@ describe('security', function () {\n     }, /Error: No access to property \"bind/);\n   })\n \n+  it ('should not allow disguising forbidden properties with unicode characters', function () {\n+    var scope = {\n+      a: {}\n+    };\n+\n+    assert.throws(function () { math.eval('a.co\\u006Estructor', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a[\"co\\\\u006Estructor\"]', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a.constructor', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a.constructor = 2', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a[\"constructor\"] = 2', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a[\"co\\\\u006Estructor\"] = 2', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a = {\"constructor\": 2}', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a = {constructor: 2}', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a = {\"co\\\\u006Estructor\": 2}', scope); }, /Error: No access to property \"constructor\"/);\n+    assert.throws(function () { math.eval('a = {co\\u006Estructor: 2}', scope); }, /Error: No access to property \"constructor\"/);\n+  })\n+\n   it ('should not allow calling Function via imported, overridden function', function () {\n     assert.throws(function () {\n       var math2 = math.create();"
        },
        {
          "filename": "test/utils/customs.test.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -85,6 +85,9 @@ describe ('customs', function () {\n \n       // non existing method\n       assert.equal(customs.isSafeMethod(matrix, 'nonExistingMethod'), false);\n+\n+      // method with unicode chars\n+      assert.equal(customs.isSafeMethod(matrix, 'co\\u006Estructor'), false);\n     });\n \n   });\n@@ -113,6 +116,8 @@ describe ('customs', function () {\n       // non existing property\n       assert.equal(customs.isSafeProperty(object, 'bar'), true);\n \n+      // property with unicode chars\n+      assert.equal(customs.isSafeProperty(object, 'co\\u006Estructor'), false);\n     });\n \n     it ('should test inherited properties on plain objects ', function () {"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "29abd1701b354e215cdeb8ef9dda57dfa16c78ee",
            "date": "2025-01-06T08:31:00Z",
            "author_login": "josdejong"
          },
          {
            "sha": "164c6b0403be2b39bd31733fe03ce42dc0423b24",
            "date": "2024-12-18T16:59:43Z",
            "author_login": "josdejong"
          },
          {
            "sha": "0443af52acf43abaa0a42e828337ab576914713e",
            "date": "2024-12-18T16:58:30Z",
            "author_login": "witer33"
          },
          {
            "sha": "a9b3823d66772e5dacac2bb4349ab859540a4a59",
            "date": "2024-12-18T11:28:07Z",
            "author_login": "josdejong"
          },
          {
            "sha": "76735c9e6345e2a12ced7f846a786baf5423a376",
            "date": "2024-12-18T10:50:46Z",
            "author_login": "josdejong"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-88",
    "description": "math.js before 3.17.0 had an issue where private properties such as a constructor could be replaced by using unicode characters when creating an object.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-11-27T14:29:00.310",
    "last_modified": "2024-11-21T03:04:54.800",
    "fix_date": "2017-11-18T19:11:48Z"
  },
  "references": [
    {
      "url": "https://github.com/josdejong/mathjs/blob/master/HISTORY.md#2017-11-18-version-3170",
      "source": "46fe6300-5254-4a98-9594-a9567bec8179",
      "tags": []
    },
    {
      "url": "https://github.com/josdejong/mathjs/commit/a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
      "source": "46fe6300-5254-4a98-9594-a9567bec8179",
      "tags": []
    },
    {
      "url": "https://github.com/josdejong/mathjs/blob/master/HISTORY.md#2017-11-18-version-3170",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/josdejong/mathjs/commit/a60f3c8d9dd714244aed7a5569c3dccaa3a4e761",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:09.751376",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mathjs",
    "owner": "josdejong",
    "created_at": "2013-02-15T19:46:01Z",
    "updated_at": "2025-01-14T13:41:47Z",
    "pushed_at": "2025-01-08T10:43:38Z",
    "size": 98556,
    "stars": 14549,
    "forks": 1246,
    "open_issues": 134,
    "watchers": 14549,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 4100551,
      "TypeScript": 72017,
      "Python": 4102,
      "HTML": 1533,
      "MATLAB": 1451
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T20:51:33.249225"
  }
}