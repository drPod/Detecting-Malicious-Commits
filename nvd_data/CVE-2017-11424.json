{
  "cve_id": "CVE-2017-11424",
  "github_data": {
    "repository": "jpadilla/pyjwt",
    "fix_commit": null,
    "related_commits": [],
    "patch_url": null
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": null,
    "description": "In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-08-24T16:29:00.197",
    "last_modified": "2024-11-21T03:07:46.073",
    "fix_date": null
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3979",
      "source": "security@duo.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpadilla/pyjwt/pull/277",
      "source": "security@duo.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3979",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpadilla/pyjwt/pull/277",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:05.115414",
    "processing_status": "raw"
  }
}