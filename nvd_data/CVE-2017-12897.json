{
  "cve_id": "CVE-2017-12897",
  "github_data": {
    "repository": "the-tcpdump-group/tcpdump",
    "fix_commit": "1dcd10aceabbc03bf571ea32b892c522cbe923de",
    "related_commits": [
      "1dcd10aceabbc03bf571ea32b892c522cbe923de",
      "1dcd10aceabbc03bf571ea32b892c522cbe923de"
    ],
    "patch_url": "https://github.com/the-tcpdump-group/tcpdump/commit/1dcd10aceabbc03bf571ea32b892c522cbe923de.patch",
    "fix_commit_details": {
      "sha": "1dcd10aceabbc03bf571ea32b892c522cbe923de",
      "commit_date": "2017-02-03T20:24:14Z",
      "author": {
        "login": "guyharris",
        "type": "User",
        "stats": {
          "total_commits": 1754,
          "average_weekly_commits": 1.3287878787878789,
          "total_additions": 334479,
          "total_deletions": 321814,
          "weeks_active": 331
        }
      },
      "commit_message": {
        "title": "CVE-2017-12897/ISO CLNS: Use ND_TTEST() for the bounds checks in isoclns_print().",
        "length": 345,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 53,
        "additions": 27,
        "deletions": 26
      },
      "files": [
        {
          "filename": "netdissect.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -512,7 +512,7 @@ extern void ipx_netbios_print(netdissect_options *, const u_char *, u_int);\n extern void ipx_print(netdissect_options *, const u_char *, u_int);\n extern void isakmp_print(netdissect_options *, const u_char *, u_int, const u_char *);\n extern void isakmp_rfc3948_print(netdissect_options *, const u_char *, u_int, const u_char *);\n-extern void isoclns_print(netdissect_options *, const u_char *, u_int, u_int);\n+extern void isoclns_print(netdissect_options *, const u_char *, u_int);\n extern void krb_print(netdissect_options *, const u_char *);\n extern void l2tp_print(netdissect_options *, const u_char *, u_int);\n extern void lane_print(netdissect_options *, const u_char *, u_int, u_int);"
        },
        {
          "filename": "print-atm.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -262,7 +262,7 @@ atm_if_print(netdissect_options *ndo,\n         if (*p == LLC_UI) {\n             if (ndo->ndo_eflag)\n                 ND_PRINT((ndo, \"CNLPID \"));\n-            isoclns_print(ndo, p + 1, length - 1, caplen - 1);\n+            isoclns_print(ndo, p + 1, length - 1);\n             return hdrlen;\n         }\n "
        },
        {
          "filename": "print-chdlc.c",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -97,9 +97,9 @@ chdlc_print(netdissect_options *ndo, register const u_char *p, u_int length)\n                 if (*(p+1) == 0x81 ||\n                     *(p+1) == 0x82 ||\n                     *(p+1) == 0x83)\n-                    isoclns_print(ndo, p + 1, length - 1, ndo->ndo_snapend - p - 1);\n+                    isoclns_print(ndo, p + 1, length - 1);\n                 else\n-                    isoclns_print(ndo, p, length, ndo->ndo_snapend - p);\n+                    isoclns_print(ndo, p, length);\n                 break;\n \tdefault:\n                 if (!ndo->ndo_eflag)"
        },
        {
          "filename": "print-ether.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -367,7 +367,7 @@ ethertype_print(netdissect_options *ndo,\n \t\t\tND_PRINT((ndo, \" [|osi]\"));\n \t\t\treturn (1);\n \t\t}\n-\t\tisoclns_print(ndo, p + 1, length - 1, caplen - 1);\n+\t\tisoclns_print(ndo, p + 1, length - 1);\n \t\treturn(1);\n \n \tcase ETHERTYPE_PPPOED:"
        },
        {
          "filename": "print-fr.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -329,7 +329,7 @@ fr_print(netdissect_options *ndo,\n \tcase NLPID_CLNP:\n \tcase NLPID_ESIS:\n \tcase NLPID_ISIS:\n-\t\tisoclns_print(ndo, p - 1, length + 1, ndo->ndo_snapend - p + 1); /* OSI printers need the NLPID field */\n+\t\tisoclns_print(ndo, p - 1, length + 1); /* OSI printers need the NLPID field */\n \t\tbreak;\n \n \tcase NLPID_SNAP:"
        },
        {
          "filename": "print-gre.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -227,7 +227,7 @@ gre_print_0(netdissect_options *ndo, const u_char *bp, u_int length)\n \t\tatalk_print(ndo, bp, len);\n \t\tbreak;\n \tcase ETHERTYPE_GRE_ISO:\n-\t\tisoclns_print(ndo, bp, len, ndo->ndo_snapend - bp);\n+\t\tisoclns_print(ndo, bp, len);\n \t\tbreak;\n \tcase ETHERTYPE_TEB:\n \t\tether_print(ndo, bp, len, ndo->ndo_snapend - bp, NULL, NULL);"
        },
        {
          "filename": "print-isoclns.c",
          "status": "modified",
          "additions": 6,
          "deletions": 7,
          "patch": "@@ -670,10 +670,9 @@ struct isis_tlv_lsp {\n #define ISIS_PSNP_HEADER_SIZE (sizeof(struct isis_psnp_header))\n \n void\n-isoclns_print(netdissect_options *ndo,\n-              const uint8_t *p, u_int length, u_int caplen)\n+isoclns_print(netdissect_options *ndo, const uint8_t *p, u_int length)\n {\n-\tif (caplen <= 1) { /* enough bytes on the wire ? */\n+\tif (!ND_TTEST(*p)) { /* enough bytes on the wire ? */\n \t\tND_PRINT((ndo, \"|OSI\"));\n \t\treturn;\n \t}\n@@ -685,7 +684,7 @@ isoclns_print(netdissect_options *ndo,\n \n \tcase NLPID_CLNP:\n \t\tif (!clnp_print(ndo, p, length))\n-\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", caplen);\n+\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", length);\n \t\tbreak;\n \n \tcase NLPID_ESIS:\n@@ -694,7 +693,7 @@ isoclns_print(netdissect_options *ndo,\n \n \tcase NLPID_ISIS:\n \t\tif (!isis_print(ndo, p, length))\n-\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", caplen);\n+\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", length);\n \t\tbreak;\n \n \tcase NLPID_NULLNS:\n@@ -721,8 +720,8 @@ isoclns_print(netdissect_options *ndo,\n \t\tif (!ndo->ndo_eflag)\n \t\t\tND_PRINT((ndo, \"OSI NLPID 0x%02x unknown\", *p));\n \t\tND_PRINT((ndo, \"%slength: %u\", ndo->ndo_eflag ? \"\" : \", \", length));\n-\t\tif (caplen > 1)\n-\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", caplen);\n+\t\tif (length > 1)\n+\t\t\tprint_unknown_data(ndo, p, \"\\n\\t\", length);\n \t\tbreak;\n \t}\n }"
        },
        {
          "filename": "print-juniper.c",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -793,7 +793,7 @@ juniper_mlppp_print(netdissect_options *ndo,\n             mpls_print(ndo, p, l2info.length);\n             return l2info.header_len;\n         case JUNIPER_LSQ_L3_PROTO_ISO:\n-            isoclns_print(ndo, p, l2info.length, l2info.caplen);\n+            isoclns_print(ndo, p, l2info.length);\n             return l2info.header_len;\n         default:\n             break;\n@@ -848,7 +848,7 @@ juniper_mfr_print(netdissect_options *ndo,\n                 mpls_print(ndo, p, l2info.length);\n                 return l2info.header_len;\n             case JUNIPER_LSQ_L3_PROTO_ISO:\n-                isoclns_print(ndo, p, l2info.length, l2info.caplen);\n+                isoclns_print(ndo, p, l2info.length);\n                 return l2info.header_len;\n             default:\n                 break;\n@@ -861,13 +861,13 @@ juniper_mfr_print(netdissect_options *ndo,\n             ND_PRINT((ndo, \"Bundle-ID %u, \", l2info.bundle));\n         switch (l2info.proto) {\n         case (LLCSAP_ISONS<<8 | LLCSAP_ISONS):\n-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);\n+            isoclns_print(ndo, p + 1, l2info.length - 1);\n             break;\n         case (LLC_UI<<8 | NLPID_Q933):\n         case (LLC_UI<<8 | NLPID_IP):\n         case (LLC_UI<<8 | NLPID_IP6):\n             /* pass IP{4,6} to the OSI layer for proper link-layer printing */\n-            isoclns_print(ndo, p - 1, l2info.length + 1, l2info.caplen + 1);\n+            isoclns_print(ndo, p - 1, l2info.length + 1);\n             break;\n         default:\n             ND_PRINT((ndo, \"unknown protocol 0x%04x, length %u\", l2info.proto, l2info.length));\n@@ -896,13 +896,13 @@ juniper_mlfr_print(netdissect_options *ndo,\n         switch (l2info.proto) {\n         case (LLC_UI):\n         case (LLC_UI<<8):\n-            isoclns_print(ndo, p, l2info.length, l2info.caplen);\n+            isoclns_print(ndo, p, l2info.length);\n             break;\n         case (LLC_UI<<8 | NLPID_Q933):\n         case (LLC_UI<<8 | NLPID_IP):\n         case (LLC_UI<<8 | NLPID_IP6):\n             /* pass IP{4,6} to the OSI layer for proper link-layer printing */\n-            isoclns_print(ndo, p - 1, l2info.length + 1, l2info.caplen + 1);\n+            isoclns_print(ndo, p - 1, l2info.length + 1);\n             break;\n         default:\n             ND_PRINT((ndo, \"unknown protocol 0x%04x, length %u\", l2info.proto, l2info.length));\n@@ -949,7 +949,7 @@ juniper_atm1_print(netdissect_options *ndo,\n         }\n \n         if (p[0] == 0x03) { /* Cisco style NLPID encaps ? */\n-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);\n+            isoclns_print(ndo, p + 1, l2info.length - 1);\n             /* FIXME check if frame was recognized */\n             return l2info.header_len;\n         }\n@@ -1004,7 +1004,7 @@ juniper_atm2_print(netdissect_options *ndo,\n         }\n \n         if (p[0] == 0x03) { /* Cisco style NLPID encaps ? */\n-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);\n+            isoclns_print(ndo, p + 1, l2info.length - 1);\n             /* FIXME check if frame was recognized */\n             return l2info.header_len;\n         }"
        },
        {
          "filename": "print-llc.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -324,7 +324,7 @@ llc_print(netdissect_options *ndo, const u_char *p, u_int length, u_int caplen,\n #endif\n \tif (ssap == LLCSAP_ISONS && dsap == LLCSAP_ISONS\n \t    && control == LLC_UI) {\n-\t\tisoclns_print(ndo, p, length, caplen);\n+\t\tisoclns_print(ndo, p, length);\n \t\treturn (hdrlen);\n \t}\n "
        },
        {
          "filename": "print-mpls.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -201,7 +201,7 @@ mpls_print(netdissect_options *ndo, const u_char *bp, u_int length)\n \t\tbreak;\n \n \tcase PT_OSI:\n-\t\tisoclns_print(ndo, p, length, length);\n+\t\tisoclns_print(ndo, p, length);\n \t\tbreak;\n \n \tdefault:"
        },
        {
          "filename": "print-null.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -117,7 +117,7 @@ null_if_print(netdissect_options *ndo, const struct pcap_pkthdr *h, const u_char\n \t\tbreak;\n \n \tcase BSD_AFNUM_ISO:\n-\t\tisoclns_print(ndo, p, length, caplen);\n+\t\tisoclns_print(ndo, p, length);\n \t\tbreak;\n \n \tcase BSD_AFNUM_APPLETALK:"
        },
        {
          "filename": "print-ppp.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1484,7 +1484,7 @@ handle_ppp(netdissect_options *ndo,\n \t\tipx_print(ndo, p, length);\n \t\tbreak;\n \tcase PPP_OSI:\n-\t\tisoclns_print(ndo, p, length, length);\n+\t\tisoclns_print(ndo, p, length);\n \t\tbreak;\n \tcase PPP_MPLS_UCAST:\n \tcase PPP_MPLS_MCAST:"
        },
        {
          "filename": "tests/TESTLIST",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -442,6 +442,7 @@ stp-v4-length-sigsegv\tstp-v4-length-sigsegv.pcap\tstp-v4-length-sigsegv.out\n hoobr_pimv1\t\thoobr_pimv1.pcap\t\thoobr_pimv1.out\n hoobr_safeputs\t\thoobr_safeputs.pcap\t\thoobr_safeputs.out\n isakmp-rfc3948-oobr\tisakmp-rfc3948-oobr.pcap\tisakmp-rfc3948-oobr.out\n+isoclns-oobr\t\tisoclns-oobr.pcap\t\tisoclns-oobr.out\n \n # bad packets from Wilfried Kirsch\n slip-bad-direction\tslip-bad-direction.pcap\t\tslip-bad-direction.out\t-ve"
        },
        {
          "filename": "tests/isoclns-oobr.out",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+|OSI"
        },
        {
          "filename": "tests/isoclns-oobr.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05a263a5418a9e5b971509c486246eb0913c8aea",
            "date": "2025-01-12T21:05:02Z",
            "author_login": "fxlb"
          },
          {
            "sha": "9aee9964aaee40750acde45f838f48eb8f95fbe3",
            "date": "2025-01-09T15:35:53Z",
            "author_login": "fxlb"
          },
          {
            "sha": "6cd500c8dafe5a9bbf3e56312493709e8b118726",
            "date": "2025-01-08T20:12:09Z",
            "author_login": "fxlb"
          },
          {
            "sha": "c5b54bfbd68b03f7997feaa277db30d399975a4d",
            "date": "2022-10-11T20:10:46Z",
            "author_login": "fenner"
          },
          {
            "sha": "431bdb5c365360d61968e7fa02322825b1da4208",
            "date": "2025-01-07T19:21:12Z",
            "author_login": "fxlb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The ISO CLNS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isoclns_print().",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-14T06:29:00.357",
    "last_modified": "2024-11-21T03:10:23.570",
    "fix_date": "2017-02-03T20:24:14Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/1dcd10aceabbc03bf571ea32b892c522cbe923de",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/1dcd10aceabbc03bf571ea32b892c522cbe923de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.361557",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tcpdump",
    "owner": "the-tcpdump-group",
    "created_at": "2013-04-14T21:46:15Z",
    "updated_at": "2025-01-14T07:48:01Z",
    "pushed_at": "2025-01-13T06:19:33Z",
    "size": 27691,
    "stars": 2789,
    "forks": 860,
    "open_issues": 115,
    "watchers": 2789,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "tcpdump-3.5",
      "tcpdump-3.6",
      "tcpdump-3.7",
      "tcpdump-3.8",
      "tcpdump-3.9",
      "tcpdump-4.0",
      "tcpdump-4.1",
      "tcpdump-4.2",
      "tcpdump-4.3",
      "tcpdump-4.4",
      "tcpdump-4.5",
      "tcpdump-4.6",
      "tcpdump-4.7",
      "tcpdump-4.8",
      "tcpdump-4.9",
      "tcpdump-4.99"
    ],
    "languages": {
      "C": 3548298,
      "CMake": 76892,
      "Roff": 66849,
      "Shell": 50525,
      "M4": 31504,
      "Perl": 29240,
      "Makefile": 14259,
      "Awk": 4120,
      "GDB": 660
    },
    "commit_activity": {
      "total_commits_last_year": 314,
      "avg_commits_per_week": 6.038461538461538,
      "days_active_last_year": 158
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:48.453717"
  }
}