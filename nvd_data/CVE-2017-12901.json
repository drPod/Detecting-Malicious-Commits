{
  "cve_id": "CVE-2017-12901",
  "github_data": {
    "repository": "the-tcpdump-group/tcpdump",
    "fix_commit": "de981e6070d168b58ec1bb0713ded77ed4ad87f4",
    "related_commits": [
      "de981e6070d168b58ec1bb0713ded77ed4ad87f4",
      "de981e6070d168b58ec1bb0713ded77ed4ad87f4"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "de981e6070d168b58ec1bb0713ded77ed4ad87f4",
      "commit_date": "2017-02-04T23:33:12Z",
      "author": {
        "login": "guyharris",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "CVE-2017-12901/EIGRP: Do more length checks.",
        "length": 217,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 4184,
        "additions": 4184,
        "deletions": 0
      },
      "files": [
        {
          "filename": "print-eigrp.c",
          "status": "modified",
          "additions": 47,
          "deletions": 0,
          "patch": "@@ -31,6 +31,7 @@\n /*\n  * packet format documented at\n  * http://www.rhyshaden.com/eigrp.htm\n+ * RFC 7868\n  */\n \n struct eigrp_common_header {\n@@ -246,6 +247,12 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n     /* ok they seem to want to know everything - lets fully decode it */\n \n+    if (len < sizeof(struct eigrp_common_header)) {\n+        ND_PRINT((ndo, \"EIGRP %s, length: %u (too short, < %u)\",\n+               tok2str(eigrp_opcode_values, \"unknown (%u)\",eigrp_com_header->opcode),\n+               len, (u_int) sizeof(struct eigrp_common_header)));\n+        return;\n+    }\n     tlen=len-sizeof(struct eigrp_common_header);\n \n     /* FIXME print other header info */\n@@ -286,6 +293,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n                eigrp_tlv_type,\n                eigrp_tlv_len));\n \n+        if (eigrp_tlv_len < sizeof(struct eigrp_tlv_header)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                        (u_int) sizeof(struct eigrp_tlv_header)));\n+                break;\n+        }\n         tlv_tptr=tptr+sizeof(struct eigrp_tlv_header);\n         tlv_tlen=eigrp_tlv_len-sizeof(struct eigrp_tlv_header);\n \n@@ -296,6 +308,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_GENERAL_PARM:\n             tlv_ptr.eigrp_tlv_general_parm = (const struct eigrp_tlv_general_parm_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_general_parm)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_general_parm))));\n+                break;\n+            }\n \n             ND_PRINT((ndo, \"\\n\\t    holdtime: %us, k1 %u, k2 %u, k3 %u, k4 %u, k5 %u\",\n                    EXTRACT_16BITS(tlv_ptr.eigrp_tlv_general_parm->holdtime),\n@@ -308,6 +325,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_SW_VERSION:\n             tlv_ptr.eigrp_tlv_sw_version = (const struct eigrp_tlv_sw_version_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_sw_version)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_sw_version))));\n+                break;\n+            }\n \n             ND_PRINT((ndo, \"\\n\\t    IOS version: %u.%u, EIGRP version %u.%u\",\n                    tlv_ptr.eigrp_tlv_sw_version->ios_major,\n@@ -318,6 +340,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_IP_INT:\n             tlv_ptr.eigrp_tlv_ip_int = (const struct eigrp_tlv_ip_int_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_ip_int)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_ip_int))));\n+                break;\n+            }\n \n             bit_length = tlv_ptr.eigrp_tlv_ip_int->plen;\n             if (bit_length > 32) {\n@@ -347,6 +374,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_IP_EXT:\n             tlv_ptr.eigrp_tlv_ip_ext = (const struct eigrp_tlv_ip_ext_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_ip_ext)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_ip_ext))));\n+                break;\n+            }\n \n             bit_length = tlv_ptr.eigrp_tlv_ip_ext->plen;\n             if (bit_length > 32) {\n@@ -384,6 +416,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_AT_CABLE_SETUP:\n             tlv_ptr.eigrp_tlv_at_cable_setup = (const struct eigrp_tlv_at_cable_setup_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_at_cable_setup)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_at_cable_setup))));\n+                break;\n+            }\n \n             ND_PRINT((ndo, \"\\n\\t    Cable-range: %u-%u, Router-ID %u\",\n                    EXTRACT_16BITS(&tlv_ptr.eigrp_tlv_at_cable_setup->cable_start),\n@@ -393,6 +430,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_AT_INT:\n             tlv_ptr.eigrp_tlv_at_int = (const struct eigrp_tlv_at_int_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_at_int)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_at_int))));\n+                break;\n+            }\n \n             ND_PRINT((ndo, \"\\n\\t     Cable-Range: %u-%u, nexthop: \",\n                    EXTRACT_16BITS(&tlv_ptr.eigrp_tlv_at_int->cable_start),\n@@ -416,6 +458,11 @@ eigrp_print(netdissect_options *ndo, register const u_char *pptr, register u_int\n \n         case EIGRP_TLV_AT_EXT:\n             tlv_ptr.eigrp_tlv_at_ext = (const struct eigrp_tlv_at_ext_t *)tlv_tptr;\n+            if (tlv_tlen < sizeof(*tlv_ptr.eigrp_tlv_at_ext)) {\n+                ND_PRINT((ndo, \" (too short, < %u)\",\n+                    (u_int) (sizeof(struct eigrp_tlv_header) + sizeof(*tlv_ptr.eigrp_tlv_at_ext))));\n+                break;\n+            }\n \n             ND_PRINT((ndo, \"\\n\\t     Cable-Range: %u-%u, nexthop: \",\n                    EXTRACT_16BITS(&tlv_ptr.eigrp_tlv_at_ext->cable_start),"
        },
        {
          "filename": "tests/TESTLIST",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -461,6 +461,7 @@ icmp-cksum-oobr-3\ticmp-cksum-oobr-3.pcap\t\ticmp-cksum-oobr-3.out\t-vvv -e\n icmp-cksum-oobr-4\ticmp-cksum-oobr-4.pcap\t\ticmp-cksum-oobr-4.out\t-vvv -e\n tok2str-oobr-1\t\ttok2str-oobr-1.pcap\t\ttok2str-oobr-1.out\t-vvv -e\n tok2str-oobr-2\t\ttok2str-oobr-2.pcap\t\ttok2str-oobr-2.out\t-vvv -e\n+eigrp-tlv-oobr\t\teigrp-tlv-oobr.pcap\t\teigrp-tlv-oobr.out\t-vvv -e\n \n # RTP tests\n # fuzzed pcap"
        },
        {
          "filename": "tests/eigrp-tlv-oobr.out",
          "status": "added",
          "additions": 4136,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/eigrp-tlv-oobr.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "94675fce171e2a3b4e0197c5ec2deeaa51a58af9",
            "date": "2025-01-20T14:01:45Z",
            "author_login": "infrastation"
          },
          {
            "sha": "09512cfc01958a37f67951bf7b6e00d52ed1e12e",
            "date": "2025-01-20T13:59:44Z",
            "author_login": "infrastation"
          },
          {
            "sha": "584c7c4c7feb614da42c9de867e03cc7fcdb2723",
            "date": "2025-01-17T11:11:13Z",
            "author_login": "fxlb"
          },
          {
            "sha": "05a263a5418a9e5b971509c486246eb0913c8aea",
            "date": "2025-01-12T21:05:02Z",
            "author_login": "fxlb"
          },
          {
            "sha": "9aee9964aaee40750acde45f838f48eb8f95fbe3",
            "date": "2025-01-09T15:35:53Z",
            "author_login": "fxlb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The EIGRP parser in tcpdump before 4.9.2 has a buffer over-read in print-eigrp.c:eigrp_print().",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-14T06:29:00.513",
    "last_modified": "2024-11-21T03:10:24.280",
    "fix_date": "2017-02-04T23:33:12Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/de981e6070d168b58ec1bb0713ded77ed4ad87f4",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/de981e6070d168b58ec1bb0713ded77ed4ad87f4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.362470",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "tcpdump",
    "owner": "the-tcpdump-group",
    "created_at": "2013-04-14T21:46:15Z",
    "updated_at": "2025-01-25T16:42:48Z",
    "pushed_at": "2025-01-21T11:51:24Z",
    "size": 27747,
    "stars": 2799,
    "forks": 861,
    "open_issues": 113,
    "watchers": 2799,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "tcpdump-3.5",
      "tcpdump-3.6",
      "tcpdump-3.7",
      "tcpdump-3.8",
      "tcpdump-3.9",
      "tcpdump-4.0",
      "tcpdump-4.1",
      "tcpdump-4.2",
      "tcpdump-4.3",
      "tcpdump-4.4",
      "tcpdump-4.5",
      "tcpdump-4.6",
      "tcpdump-4.7",
      "tcpdump-4.8",
      "tcpdump-4.9",
      "tcpdump-4.99"
    ],
    "languages": {
      "C": 3548123,
      "CMake": 76892,
      "Roff": 66849,
      "Shell": 50525,
      "M4": 31504,
      "Perl": 29240,
      "Makefile": 14259,
      "Awk": 4120,
      "GDB": 660
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:34:03.331448"
  }
}