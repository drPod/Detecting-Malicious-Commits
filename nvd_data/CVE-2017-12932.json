{
  "cve_id": "CVE-2017-12932",
  "github_data": {
    "repository": "php/php-src",
    "fix_commit": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "related_commits": [
      "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
      "1a23ebc1fff59bf480ca92963b36eba5c1b904c4"
    ],
    "patch_url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4.patch",
    "fix_commit_details": {
      "sha": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
      "commit_date": "2017-08-12T11:00:39Z",
      "author": {
        "login": "nikic",
        "type": "User",
        "stats": {
          "total_commits": 9242,
          "average_weekly_commits": 6.866270430906389,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 428
        }
      },
      "commit_message": {
        "title": "Fixed bug #74103 and bug #75054",
        "length": 686,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 1199,
        "additions": 614,
        "deletions": 585
      },
      "files": [
        {
          "filename": "NEWS",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -52,6 +52,12 @@ PHP                                                                        NEWS\n   . Fixed bug #74669 (Unserialize ArrayIterator broken). (Andrew Nester)\n   . Fixed bug #75015 (Crash in recursive iterator destructors). (Julien)\n \n+- Standard:\n+  . Fixed bug #74103 (heap-use-after-free when unserializing invalid array\n+    size). (Nikita)\n+  . Fixed bug #75054 (A Denial of Service Vulnerability was found when\n+    performing deserialization). (Nikita)\n+\n - XMLRPC:\n   . Fixed bug #74975 (Incorrect xmlrpc serialization for classes with declared\n     properties). (blar)"
        },
        {
          "filename": "ext/standard/tests/serialize/bug74103.phpt",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+--TEST--\n+Bug #74103: heap-use-after-free when unserializing invalid array size\n+--FILE--\n+<?php\n+var_dump(unserialize('a:7:{i:0;i:04;s:1:\"a\";i:2;i:00009617006;i:4;s:1:\"a\";i:4;s:1:\"a\";R:5;s:1:\"7\";R:3;s:1:\"a\";R:5;;s:18;}}'));\n+?>\n+--EXPECTF--\n+Notice: unserialize(): Error at offset 68 of 100 bytes in %s on line %d\n+bool(false)"
        },
        {
          "filename": "ext/standard/tests/serialize/bug75054.phpt",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+--TEST--\n+Bug #75054: A Denial of Service Vulnerability was found when performing deserialization\n+--FILE--\n+<?php\n+$poc = 'a:9:{i:0;s:4:\"0000\";i:0;s:4:\"0000\";i:0;R:2;s:4:\"5003\";R:2;s:4:\"0000\";R:2;s:4:\"0000\";R:2;s:4:\"';\n+$poc .= \"\\x06\";\n+$poc .= '000\";R:2;s:4:\"0000\";d:0;s:4:\"0000\";a:9:{s:4:\"0000\";';\n+var_dump(unserialize($poc));\n+?>\n+--EXPECTF--\n+Notice: unserialize(): Error at offset 43 of 145 bytes in %s on line %d\n+bool(false)"
        },
        {
          "filename": "ext/standard/var_unserializer.c",
          "status": "modified",
          "additions": 583,
          "deletions": 570,
          "patch": "@@ -1,4 +1,4 @@\n-/* Generated by re2c 0.15.3 */\n+/* Generated by re2c 0.16 */\n #line 1 \"ext/standard/var_unserializer.re\"\n /*\n   +----------------------------------------------------------------------+\n@@ -405,16 +405,7 @@ static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTab\n \t\t\treturn 0;\n \t\t}\n \n-\t\tif (UNEXPECTED(Z_ISUNDEF_P(data))) {\n-\t\t\tif (Z_TYPE(key) == IS_LONG) {\n-\t\t\t\tzend_hash_index_del(ht, Z_LVAL(key));\n-\t\t\t} else {\n-\t\t\t\tzend_hash_del_ind(ht, Z_STR(key));\n-\t\t\t}\n-\t\t} else {\n-\t\t\tvar_push_dtor(var_hash, data);\n-\t\t}\n-\n+\t\tvar_push_dtor(var_hash, data);\n \t\tzval_dtor(&key);\n \n \t\tif (elements && *(*p-1) != ';' && *(*p-1) != '}') {\n@@ -581,7 +572,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)\n \tstart = cursor;\n \n \n-#line 585 \"ext/standard/var_unserializer.c\"\n+#line 576 \"ext/standard/var_unserializer.c\"\n {\n \tYYCTYPE yych;\n \tstatic const unsigned char yybm[] = {\n@@ -622,536 +613,409 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)\n \tyych = *YYCURSOR;\n \tswitch (yych) {\n \tcase 'C':\n-\tcase 'O':\tgoto yy13;\n+\tcase 'O':\tgoto yy4;\n \tcase 'N':\tgoto yy5;\n-\tcase 'R':\tgoto yy2;\n-\tcase 'S':\tgoto yy10;\n-\tcase 'a':\tgoto yy11;\n-\tcase 'b':\tgoto yy6;\n-\tcase 'd':\tgoto yy8;\n-\tcase 'i':\tgoto yy7;\n+\tcase 'R':\tgoto yy6;\n+\tcase 'S':\tgoto yy7;\n+\tcase 'a':\tgoto yy8;\n+\tcase 'b':\tgoto yy9;\n+\tcase 'd':\tgoto yy10;\n+\tcase 'i':\tgoto yy11;\n \tcase 'o':\tgoto yy12;\n-\tcase 'r':\tgoto yy4;\n-\tcase 's':\tgoto yy9;\n-\tcase '}':\tgoto yy14;\n-\tdefault:\tgoto yy16;\n+\tcase 'r':\tgoto yy13;\n+\tcase 's':\tgoto yy14;\n+\tcase '}':\tgoto yy15;\n+\tdefault:\tgoto yy2;\n \t}\n yy2:\n-\tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy95;\n+\t++YYCURSOR;\n yy3:\n-#line 962 \"ext/standard/var_unserializer.re\"\n+#line 951 \"ext/standard/var_unserializer.re\"\n \t{ return 0; }\n-#line 646 \"ext/standard/var_unserializer.c\"\n+#line 636 \"ext/standard/var_unserializer.c\"\n yy4:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy89;\n+\tif (yych == ':') goto yy17;\n \tgoto yy3;\n yy5:\n \tyych = *++YYCURSOR;\n-\tif (yych == ';') goto yy87;\n+\tif (yych == ';') goto yy19;\n \tgoto yy3;\n yy6:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy83;\n+\tif (yych == ':') goto yy21;\n \tgoto yy3;\n yy7:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy77;\n+\tif (yych == ':') goto yy22;\n \tgoto yy3;\n yy8:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy53;\n+\tif (yych == ':') goto yy23;\n \tgoto yy3;\n yy9:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy46;\n+\tif (yych == ':') goto yy24;\n \tgoto yy3;\n yy10:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy39;\n+\tif (yych == ':') goto yy25;\n \tgoto yy3;\n yy11:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy32;\n+\tif (yych == ':') goto yy26;\n \tgoto yy3;\n yy12:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy25;\n+\tif (yych == ':') goto yy27;\n \tgoto yy3;\n yy13:\n \tyych = *(YYMARKER = ++YYCURSOR);\n-\tif (yych == ':') goto yy17;\n+\tif (yych == ':') goto yy28;\n \tgoto yy3;\n yy14:\n+\tyych = *(YYMARKER = ++YYCURSOR);\n+\tif (yych == ':') goto yy29;\n+\tgoto yy3;\n+yy15:\n \t++YYCURSOR;\n-#line 956 \"ext/standard/var_unserializer.re\"\n+#line 945 \"ext/standard/var_unserializer.re\"\n \t{\n \t/* this is the case where we have less data than planned */\n \tphp_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");\n \treturn 0; /* not sure if it should be 0 or 1 here? */\n }\n-#line 695 \"ext/standard/var_unserializer.c\"\n-yy16:\n-\tyych = *++YYCURSOR;\n-\tgoto yy3;\n+#line 689 \"ext/standard/var_unserializer.c\"\n yy17:\n \tyych = *++YYCURSOR;\n \tif (yybm[0+yych] & 128) {\n-\t\tgoto yy20;\n+\t\tgoto yy31;\n \t}\n-\tif (yych == '+') goto yy19;\n+\tif (yych == '+') goto yy30;\n yy18:\n \tYYCURSOR = YYMARKER;\n \tgoto yy3;\n yy19:\n+\t++YYCURSOR;\n+#line 629 \"ext/standard/var_unserializer.re\"\n+\t{\n+\t*p = YYCURSOR;\n+\tZVAL_NULL(rval);\n+\treturn 1;\n+}\n+#line 707 \"ext/standard/var_unserializer.c\"\n+yy21:\n \tyych = *++YYCURSOR;\n-\tif (yybm[0+yych] & 128) {\n-\t\tgoto yy20;\n+\tif (yych <= ',') {\n+\t\tif (yych == '+') goto yy33;\n+\t\tgoto yy18;\n+\t} else {\n+\t\tif (yych <= '-') goto yy33;\n+\t\tif (yych <= '/') goto yy18;\n+\t\tif (yych <= '9') goto yy34;\n+\t\tgoto yy18;\n \t}\n+yy22:\n+\tyych = *++YYCURSOR;\n+\tif (yych == '+') goto yy36;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '9') goto yy37;\n \tgoto yy18;\n-yy20:\n-\t++YYCURSOR;\n-\tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n-\tyych = *YYCURSOR;\n-\tif (yybm[0+yych] & 128) {\n-\t\tgoto yy20;\n-\t}\n+yy23:\n+\tyych = *++YYCURSOR;\n+\tif (yych == '+') goto yy39;\n \tif (yych <= '/') goto yy18;\n-\tif (yych >= ';') goto yy18;\n+\tif (yych <= '9') goto yy40;\n+\tgoto yy18;\n+yy24:\n \tyych = *++YYCURSOR;\n-\tif (yych != '\"') goto yy18;\n-\t++YYCURSOR;\n-#line 804 \"ext/standard/var_unserializer.re\"\n-\t{\n-\tsize_t len, len2, len3, maxlen;\n-\tzend_long elements;\n-\tchar *str;\n-\tzend_string *class_name;\n-\tzend_class_entry *ce;\n-\tint incomplete_class = 0;\n-\n-\tint custom_object = 0;\n-\n-\tzval user_func;\n-\tzval retval;\n-\tzval args[1];\n-\n-    if (!var_hash) return 0;\n-\tif (*start == 'C') {\n-\t\tcustom_object = 1;\n-\t}\n-\n-\tlen2 = len = parse_uiv(start + 2);\n-\tmaxlen = max - YYCURSOR;\n-\tif (maxlen < len || len == 0) {\n-\t\t*p = start + 2;\n-\t\treturn 0;\n-\t}\n-\n-\tstr = (char*)YYCURSOR;\n-\n-\tYYCURSOR += len;\n-\n-\tif (*(YYCURSOR) != '\"') {\n-\t\t*p = YYCURSOR;\n-\t\treturn 0;\n-\t}\n-\tif (*(YYCURSOR+1) != ':') {\n-\t\t*p = YYCURSOR+1;\n-\t\treturn 0;\n-\t}\n-\n-\tlen3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");\n-\tif (len3 != len)\n-\t{\n-\t\t*p = YYCURSOR + len3 - len;\n-\t\treturn 0;\n-\t}\n-\n-\tclass_name = zend_string_init(str, len, 0);\n-\n-\tdo {\n-\t\tif(!unserialize_allowed_class(class_name, classes)) {\n-\t\t\tincomplete_class = 1;\n-\t\t\tce = PHP_IC_ENTRY;\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\t/* Try to find class directly */\n-\t\tBG(serialize_lock)++;\n-\t\tce = zend_lookup_class(class_name);\n-\t\tif (ce) {\n-\t\t\tBG(serialize_lock)--;\n-\t\t\tif (EG(exception)) {\n-\t\t\t\tzend_string_release(class_name);\n-\t\t\t\treturn 0;\n-\t\t\t}\n-\t\t\tbreak;\n-\t\t}\n-\t\tBG(serialize_lock)--;\n-\n-\t\tif (EG(exception)) {\n-\t\t\tzend_string_release(class_name);\n-\t\t\treturn 0;\n-\t\t}\n-\n-\t\t/* Check for unserialize callback */\n-\t\tif ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {\n-\t\t\tincomplete_class = 1;\n-\t\t\tce = PHP_IC_ENTRY;\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\t/* Call unserialize callback */\n-\t\tZVAL_STRING(&user_func, PG(unserialize_callback_func));\n-\n-\t\tZVAL_STR_COPY(&args[0], class_name);\n-\t\tBG(serialize_lock)++;\n-\t\tif (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {\n-\t\t\tBG(serialize_lock)--;\n-\t\t\tif (EG(exception)) {\n-\t\t\t\tzend_string_release(class_name);\n-\t\t\t\tzval_ptr_dtor(&user_func);\n-\t\t\t\tzval_ptr_dtor(&args[0]);\n-\t\t\t\treturn 0;\n-\t\t\t}\n-\t\t\tphp_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));\n-\t\t\tincomplete_class = 1;\n-\t\t\tce = PHP_IC_ENTRY;\n-\t\t\tzval_ptr_dtor(&user_func);\n-\t\t\tzval_ptr_dtor(&args[0]);\n-\t\t\tbreak;\n-\t\t}\n-\t\tBG(serialize_lock)--;\n-\t\tzval_ptr_dtor(&retval);\n-\t\tif (EG(exception)) {\n-\t\t\tzend_string_release(class_name);\n-\t\t\tzval_ptr_dtor(&user_func);\n-\t\t\tzval_ptr_dtor(&args[0]);\n-\t\t\treturn 0;\n-\t\t}\n-\n-\t\t/* The callback function may have defined the class */\n-\t\tBG(serialize_lock)++;\n-\t\tif ((ce = zend_lookup_class(class_name)) == NULL) {\n-\t\t\tphp_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));\n-\t\t\tincomplete_class = 1;\n-\t\t\tce = PHP_IC_ENTRY;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '1') goto yy42;\n+\tgoto yy18;\n+yy25:\n+\tyych = *++YYCURSOR;\n+\tif (yych <= '/') {\n+\t\tif (yych <= ',') {\n+\t\t\tif (yych == '+') goto yy43;\n+\t\t\tgoto yy18;\n+\t\t} else {\n+\t\t\tif (yych <= '-') goto yy44;\n+\t\t\tif (yych <= '.') goto yy45;\n+\t\t\tgoto yy18;\n \t\t}\n-\t\tBG(serialize_lock)--;\n-\n-\t\tzval_ptr_dtor(&user_func);\n-\t\tzval_ptr_dtor(&args[0]);\n-\t\tbreak;\n-\t} while (1);\n-\n-\t*p = YYCURSOR;\n-\n-\tif (custom_object) {\n-\t\tint ret;\n-\n-\t\tret = object_custom(UNSERIALIZE_PASSTHRU, ce);\n-\n-\t\tif (ret && incomplete_class) {\n-\t\t\tphp_store_class_name(rval, ZSTR_VAL(class_name), len2);\n+\t} else {\n+\t\tif (yych <= 'I') {\n+\t\t\tif (yych <= '9') goto yy46;\n+\t\t\tif (yych <= 'H') goto yy18;\n+\t\t\tgoto yy48;\n+\t\t} else {\n+\t\t\tif (yych == 'N') goto yy49;\n+\t\t\tgoto yy18;\n \t\t}\n-\t\tzend_string_release(class_name);\n-\t\treturn ret;\n \t}\n-\n-\telements = object_common1(UNSERIALIZE_PASSTHRU, ce);\n-\n-\tif (elements < 0) {\n-\t   zend_string_release(class_name);\n-\t   return 0;\n+yy26:\n+\tyych = *++YYCURSOR;\n+\tif (yych <= ',') {\n+\t\tif (yych == '+') goto yy50;\n+\t\tgoto yy18;\n+\t} else {\n+\t\tif (yych <= '-') goto yy50;\n+\t\tif (yych <= '/') goto yy18;\n+\t\tif (yych <= '9') goto yy51;\n+\t\tgoto yy18;\n \t}\n-\n-\tif (incomplete_class) {\n-\t\tphp_store_class_name(rval, ZSTR_VAL(class_name), len2);\n+yy27:\n+\tyych = *++YYCURSOR;\n+\tif (yych <= ',') {\n+\t\tif (yych == '+') goto yy53;\n+\t\tgoto yy18;\n+\t} else {\n+\t\tif (yych <= '-') goto yy53;\n+\t\tif (yych <= '/') goto yy18;\n+\t\tif (yych <= '9') goto yy54;\n+\t\tgoto yy18;\n \t}\n-\tzend_string_release(class_name);\n-\n-\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n-}\n-#line 878 \"ext/standard/var_unserializer.c\"\n-yy25:\n+yy28:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n-\t\tif (yych != '+') goto yy18;\n+\t\tif (yych == '+') goto yy56;\n+\t\tgoto yy18;\n \t} else {\n-\t\tif (yych <= '-') goto yy26;\n+\t\tif (yych <= '-') goto yy56;\n \t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy27;\n+\t\tif (yych <= '9') goto yy57;\n \t\tgoto yy18;\n \t}\n-yy26:\n+yy29:\n \tyych = *++YYCURSOR;\n+\tif (yych == '+') goto yy59;\n \tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n-yy27:\n+\tif (yych <= '9') goto yy60;\n+\tgoto yy18;\n+yy30:\n+\tyych = *++YYCURSOR;\n+\tif (yybm[0+yych] & 128) {\n+\t\tgoto yy31;\n+\t}\n+\tgoto yy18;\n+yy31:\n \t++YYCURSOR;\n \tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n \tyych = *YYCURSOR;\n+\tif (yybm[0+yych] & 128) {\n+\t\tgoto yy31;\n+\t}\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy27;\n-\tif (yych >= ';') goto yy18;\n+\tif (yych <= ':') goto yy62;\n+\tgoto yy18;\n+yy33:\n \tyych = *++YYCURSOR;\n-\tif (yych != '\"') goto yy18;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych >= ':') goto yy18;\n+yy34:\n \t++YYCURSOR;\n-#line 793 \"ext/standard/var_unserializer.re\"\n-\t{\n-\tzend_long elements;\n-    if (!var_hash) return 0;\n-\n-\telements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);\n-\tif (elements < 0 || elements >= HT_MAX_SIZE) {\n-\t\treturn 0;\n-\t}\n-\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n-}\n-#line 914 \"ext/standard/var_unserializer.c\"\n-yy32:\n-\tyych = *++YYCURSOR;\n-\tif (yych == '+') goto yy33;\n+\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n+\tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n \tif (yych <= '9') goto yy34;\n+\tif (yych == ';') goto yy63;\n \tgoto yy18;\n-yy33:\n+yy36:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') goto yy18;\n \tif (yych >= ':') goto yy18;\n-yy34:\n+yy37:\n \t++YYCURSOR;\n \tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n \tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy34;\n-\tif (yych >= ';') goto yy18;\n+\tif (yych <= '9') goto yy37;\n+\tif (yych <= ':') goto yy65;\n+\tgoto yy18;\n+yy39:\n \tyych = *++YYCURSOR;\n-\tif (yych != '{') goto yy18;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych >= ':') goto yy18;\n+yy40:\n \t++YYCURSOR;\n-#line 769 \"ext/standard/var_unserializer.re\"\n-\t{\n-\tzend_long elements = parse_iv(start + 2);\n-\t/* use iv() not uiv() in order to check data range */\n-\t*p = YYCURSOR;\n-    if (!var_hash) return 0;\n-\n-\tif (elements < 0 || elements >= HT_MAX_SIZE) {\n-\t\treturn 0;\n-\t}\n-\n-\tarray_init_size(rval, elements);\n-\tif (elements) {\n-\t\t/* we can't convert from packed to hash during unserialization, because\n-\t\t   reference to some zvals might be keept in var_hash (to support references) */\n-\t\tzend_hash_real_init(Z_ARRVAL_P(rval), 0);\n+\tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n+\tyych = *YYCURSOR;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '9') goto yy40;\n+\tif (yych <= ':') goto yy66;\n+\tgoto yy18;\n+yy42:\n+\tyych = *++YYCURSOR;\n+\tif (yych == ';') goto yy67;\n+\tgoto yy18;\n+yy43:\n+\tyych = *++YYCURSOR;\n+\tif (yych == '.') goto yy45;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '9') goto yy46;\n+\tgoto yy18;\n+yy44:\n+\tyych = *++YYCURSOR;\n+\tif (yych <= '/') {\n+\t\tif (yych != '.') goto yy18;\n+\t} else {\n+\t\tif (yych <= '9') goto yy46;\n+\t\tif (yych == 'I') goto yy48;\n+\t\tgoto yy18;\n \t}\n-\n-\tif (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {\n-\t\treturn 0;\n+yy45:\n+\tyych = *++YYCURSOR;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '9') goto yy69;\n+\tgoto yy18;\n+yy46:\n+\t++YYCURSOR;\n+\tif ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);\n+\tyych = *YYCURSOR;\n+\tif (yych <= ':') {\n+\t\tif (yych <= '.') {\n+\t\t\tif (yych <= '-') goto yy18;\n+\t\t\tgoto yy69;\n+\t\t} else {\n+\t\t\tif (yych <= '/') goto yy18;\n+\t\t\tif (yych <= '9') goto yy46;\n+\t\t\tgoto yy18;\n+\t\t}\n+\t} else {\n+\t\tif (yych <= 'E') {\n+\t\t\tif (yych <= ';') goto yy71;\n+\t\t\tif (yych <= 'D') goto yy18;\n+\t\t\tgoto yy73;\n+\t\t} else {\n+\t\t\tif (yych == 'e') goto yy73;\n+\t\t\tgoto yy18;\n+\t\t}\n \t}\n-\n-\treturn finish_nested_data(UNSERIALIZE_PASSTHRU);\n-}\n-#line 959 \"ext/standard/var_unserializer.c\"\n-yy39:\n+yy48:\n+\tyych = *++YYCURSOR;\n+\tif (yych == 'N') goto yy74;\n+\tgoto yy18;\n+yy49:\n+\tyych = *++YYCURSOR;\n+\tif (yych == 'A') goto yy75;\n+\tgoto yy18;\n+yy50:\n \tyych = *++YYCURSOR;\n-\tif (yych == '+') goto yy40;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy41;\n+\tif (yych >= ':') goto yy18;\n+yy51:\n+\t++YYCURSOR;\n+\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n+\tyych = *YYCURSOR;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych <= '9') goto yy51;\n+\tif (yych == ';') goto yy76;\n \tgoto yy18;\n-yy40:\n+yy53:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') goto yy18;\n \tif (yych >= ':') goto yy18;\n-yy41:\n+yy54:\n \t++YYCURSOR;\n \tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n \tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy41;\n-\tif (yych >= ';') goto yy18;\n+\tif (yych <= '9') goto yy54;\n+\tif (yych <= ':') goto yy78;\n+\tgoto yy18;\n+yy56:\n \tyych = *++YYCURSOR;\n-\tif (yych != '\"') goto yy18;\n+\tif (yych <= '/') goto yy18;\n+\tif (yych >= ':') goto yy18;\n+yy57:\n \t++YYCURSOR;\n-#line 735 \"ext/standard/var_unserializer.re\"\n-\t{\n-\tsize_t len, maxlen;\n-\tzend_string *str;\n-\n-\tlen = parse_uiv(start + 2);\n-\tmaxlen = max - YYCURSOR;\n-\tif (maxlen < len) {\n-\t\t*p = start + 2;\n-\t\treturn 0;\n-\t}\n-\n-\tif ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {\n-\t\treturn 0;\n-\t}\n-\n-\tif (*(YYCURSOR) != '\"') {\n-\t\tzend_string_free(str);\n-\t\t*p = YYCURSOR;\n-\t\treturn 0;\n-\t}\n-\n-\tif (*(YYCURSOR + 1) != ';') {\n-\t\tefree(str);\n-\t\t*p = YYCURSOR + 1;\n-\t\treturn 0;\n-\t}\n-\n-\tYYCURSOR += 2;\n-\t*p = YYCURSOR;\n-\n-\tZVAL_STR(rval, str);\n-\treturn 1;\n-}\n-#line 1014 \"ext/standard/var_unserializer.c\"\n-yy46:\n-\tyych = *++YYCURSOR;\n-\tif (yych == '+') goto yy47;\n+\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n+\tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy48;\n+\tif (yych <= '9') goto yy57;\n+\tif (yych == ';') goto yy79;\n \tgoto yy18;\n-yy47:\n+yy59:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') goto yy18;\n \tif (yych >= ':') goto yy18;\n-yy48:\n+yy60:\n \t++YYCURSOR;\n \tif ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);\n \tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy48;\n-\tif (yych >= ';') goto yy18;\n+\tif (yych <= '9') goto yy60;\n+\tif (yych <= ':') goto yy81;\n+\tgoto yy18;\n+yy62:\n \tyych = *++YYCURSOR;\n-\tif (yych != '\"') goto yy18;\n+\tif (yych == '\"') goto yy82;\n+\tgoto yy18;\n+yy63:\n \t++YYCURSOR;\n-#line 703 \"ext/standard/var_unserializer.re\"\n+#line 580 \"ext/standard/var_unserializer.re\"\n \t{\n-\tsize_t len, maxlen;\n-\tchar *str;\n-\n-\tlen = parse_uiv(start + 2);\n-\tmaxlen = max - YYCURSOR;\n-\tif (maxlen < len) {\n-\t\t*p = start + 2;\n-\t\treturn 0;\n-\t}\n-\n-\tstr = (char*)YYCURSOR;\n+\tzend_long id;\n \n-\tYYCURSOR += len;\n+ \t*p = YYCURSOR;\n+\tif (!var_hash) return 0;\n \n-\tif (*(YYCURSOR) != '\"') {\n-\t\t*p = YYCURSOR;\n+\tid = parse_iv(start + 2) - 1;\n+\tif (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {\n \t\treturn 0;\n \t}\n \n-\tif (*(YYCURSOR + 1) != ';') {\n-\t\t*p = YYCURSOR + 1;\n+\tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n \t\treturn 0;\n \t}\n \n-\tYYCURSOR += 2;\n-\t*p = YYCURSOR;\n+\tif (Z_ISREF_P(rval_ref)) {\n+\t\tZVAL_COPY(rval, rval_ref);\n+\t} else {\n+\t\tZVAL_NEW_REF(rval_ref, rval_ref);\n+\t\tZVAL_COPY(rval, rval_ref);\n+\t}\n \n-\tZVAL_STRINGL(rval, str, len);\n \treturn 1;\n }\n-#line 1067 \"ext/standard/var_unserializer.c\"\n-yy53:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') {\n-\t\tif (yych <= ',') {\n-\t\t\tif (yych == '+') goto yy57;\n-\t\t\tgoto yy18;\n-\t\t} else {\n-\t\t\tif (yych <= '-') goto yy55;\n-\t\t\tif (yych <= '.') goto yy60;\n-\t\t\tgoto yy18;\n-\t\t}\n-\t} else {\n-\t\tif (yych <= 'I') {\n-\t\t\tif (yych <= '9') goto yy58;\n-\t\t\tif (yych <= 'H') goto yy18;\n-\t\t\tgoto yy56;\n-\t\t} else {\n-\t\t\tif (yych != 'N') goto yy18;\n-\t\t}\n-\t}\n+#line 982 \"ext/standard/var_unserializer.c\"\n+yy65:\n \tyych = *++YYCURSOR;\n-\tif (yych == 'A') goto yy76;\n+\tif (yych == '\"') goto yy84;\n \tgoto yy18;\n-yy55:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') {\n-\t\tif (yych == '.') goto yy60;\n-\t\tgoto yy18;\n-\t} else {\n-\t\tif (yych <= '9') goto yy58;\n-\t\tif (yych != 'I') goto yy18;\n-\t}\n-yy56:\n+yy66:\n \tyych = *++YYCURSOR;\n-\tif (yych == 'N') goto yy72;\n+\tif (yych == '{') goto yy86;\n \tgoto yy18;\n-yy57:\n-\tyych = *++YYCURSOR;\n-\tif (yych == '.') goto yy60;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n-yy58:\n+yy67:\n \t++YYCURSOR;\n-\tif ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);\n-\tyych = *YYCURSOR;\n-\tif (yych <= ':') {\n-\t\tif (yych <= '.') {\n-\t\t\tif (yych <= '-') goto yy18;\n-\t\t\tgoto yy70;\n-\t\t} else {\n-\t\t\tif (yych <= '/') goto yy18;\n-\t\t\tif (yych <= '9') goto yy58;\n-\t\t\tgoto yy18;\n-\t\t}\n-\t} else {\n-\t\tif (yych <= 'E') {\n-\t\t\tif (yych <= ';') goto yy63;\n-\t\t\tif (yych <= 'D') goto yy18;\n-\t\t\tgoto yy65;\n-\t\t} else {\n-\t\t\tif (yych == 'e') goto yy65;\n-\t\t\tgoto yy18;\n-\t\t}\n-\t}\n-yy60:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n-yy61:\n+#line 635 \"ext/standard/var_unserializer.re\"\n+\t{\n+\t*p = YYCURSOR;\n+\tZVAL_BOOL(rval, parse_iv(start + 2));\n+\treturn 1;\n+}\n+#line 999 \"ext/standard/var_unserializer.c\"\n+yy69:\n \t++YYCURSOR;\n \tif ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);\n \tyych = *YYCURSOR;\n \tif (yych <= ';') {\n \t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy61;\n+\t\tif (yych <= '9') goto yy69;\n \t\tif (yych <= ':') goto yy18;\n \t} else {\n \t\tif (yych <= 'E') {\n \t\t\tif (yych <= 'D') goto yy18;\n-\t\t\tgoto yy65;\n+\t\t\tgoto yy73;\n \t\t} else {\n-\t\t\tif (yych == 'e') goto yy65;\n+\t\t\tif (yych == 'e') goto yy73;\n \t\t\tgoto yy18;\n \t\t}\n \t}\n-yy63:\n+yy71:\n \t++YYCURSOR;\n-#line 694 \"ext/standard/var_unserializer.re\"\n+#line 683 \"ext/standard/var_unserializer.re\"\n \t{\n #if SIZEOF_ZEND_LONG == 4\n use_double:\n@@ -1160,257 +1024,406 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)\n \tZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));\n \treturn 1;\n }\n-#line 1164 \"ext/standard/var_unserializer.c\"\n-yy65:\n+#line 1028 \"ext/standard/var_unserializer.c\"\n+yy73:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n-\t\tif (yych != '+') goto yy18;\n+\t\tif (yych == '+') goto yy88;\n+\t\tgoto yy18;\n \t} else {\n-\t\tif (yych <= '-') goto yy66;\n+\t\tif (yych <= '-') goto yy88;\n \t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy67;\n+\t\tif (yych <= '9') goto yy89;\n \t\tgoto yy18;\n \t}\n-yy66:\n+yy74:\n \tyych = *++YYCURSOR;\n-\tif (yych <= ',') {\n-\t\tif (yych == '+') goto yy69;\n-\t\tgoto yy18;\n-\t} else {\n-\t\tif (yych <= '-') goto yy69;\n-\t\tif (yych <= '/') goto yy18;\n-\t\tif (yych >= ':') goto yy18;\n-\t}\n-yy67:\n-\t++YYCURSOR;\n-\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n-\tyych = *YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy67;\n-\tif (yych == ';') goto yy63;\n+\tif (yych == 'F') goto yy91;\n \tgoto yy18;\n-yy69:\n+yy75:\n \tyych = *++YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy67;\n+\tif (yych == 'N') goto yy91;\n \tgoto yy18;\n-yy70:\n+yy76:\n \t++YYCURSOR;\n-\tif ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);\n-\tyych = *YYCURSOR;\n-\tif (yych <= ';') {\n-\t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy70;\n-\t\tif (yych <= ':') goto yy18;\n-\t\tgoto yy63;\n-\t} else {\n-\t\tif (yych <= 'E') {\n-\t\t\tif (yych <= 'D') goto yy18;\n-\t\t\tgoto yy65;\n+#line 641 \"ext/standard/var_unserializer.re\"\n+\t{\n+#if SIZEOF_ZEND_LONG == 4\n+\tint digits = YYCURSOR - start - 3;\n+\n+\tif (start[2] == '-' || start[2] == '+') {\n+\t\tdigits--;\n+\t}\n+\n+\t/* Use double for large zend_long values that were serialized on a 64-bit system */\n+\tif (digits >= MAX_LENGTH_OF_LONG - 1) {\n+\t\tif (digits == MAX_LENGTH_OF_LONG - 1) {\n+\t\t\tint cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);\n+\n+\t\t\tif (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {\n+\t\t\t\tgoto use_double;\n+\t\t\t}\n \t\t} else {\n-\t\t\tif (yych == 'e') goto yy65;\n-\t\t\tgoto yy18;\n+\t\t\tgoto use_double;\n \t\t}\n \t}\n-yy72:\n-\tyych = *++YYCURSOR;\n-\tif (yych != 'F') goto yy18;\n-yy73:\n+#endif\n+\t*p = YYCURSOR;\n+\tZVAL_LONG(rval, parse_iv(start + 2));\n+\treturn 1;\n+}\n+#line 1076 \"ext/standard/var_unserializer.c\"\n+yy78:\n \tyych = *++YYCURSOR;\n-\tif (yych != ';') goto yy18;\n+\tif (yych == '\"') goto yy92;\n+\tgoto yy18;\n+yy79:\n \t++YYCURSOR;\n-#line 678 \"ext/standard/var_unserializer.re\"\n+#line 605 \"ext/standard/var_unserializer.re\"\n \t{\n-\t*p = YYCURSOR;\n+\tzend_long id;\n \n-\tif (!strncmp((char*)start + 2, \"NAN\", 3)) {\n-\t\tZVAL_DOUBLE(rval, php_get_nan());\n-\t} else if (!strncmp((char*)start + 2, \"INF\", 3)) {\n-\t\tZVAL_DOUBLE(rval, php_get_inf());\n-\t} else if (!strncmp((char*)start + 2, \"-INF\", 4)) {\n-\t\tZVAL_DOUBLE(rval, -php_get_inf());\n-\t} else {\n-\t\tZVAL_NULL(rval);\n+ \t*p = YYCURSOR;\n+\tif (!var_hash) return 0;\n+\n+\tid = parse_iv(start + 2) - 1;\n+\tif (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {\n+\t\treturn 0;\n+\t}\n+\n+\tif (rval_ref == rval) {\n+\t\treturn 0;\n \t}\n \n+\tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n+\t\treturn 0;\n+\t}\n+\n+\tZVAL_COPY(rval, rval_ref);\n+\n \treturn 1;\n }\n-#line 1239 \"ext/standard/var_unserializer.c\"\n-yy76:\n+#line 1107 \"ext/standard/var_unserializer.c\"\n+yy81:\n \tyych = *++YYCURSOR;\n-\tif (yych == 'N') goto yy73;\n+\tif (yych == '\"') goto yy94;\n \tgoto yy18;\n-yy77:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= ',') {\n-\t\tif (yych != '+') goto yy18;\n-\t} else {\n-\t\tif (yych <= '-') goto yy78;\n-\t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy79;\n-\t\tgoto yy18;\n-\t}\n-yy78:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n-yy79:\n+yy82:\n \t++YYCURSOR;\n-\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n-\tyych = *YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy79;\n-\tif (yych != ';') goto yy18;\n-\t++YYCURSOR;\n-#line 652 \"ext/standard/var_unserializer.re\"\n+#line 793 \"ext/standard/var_unserializer.re\"\n \t{\n-#if SIZEOF_ZEND_LONG == 4\n-\tint digits = YYCURSOR - start - 3;\n+\tsize_t len, len2, len3, maxlen;\n+\tzend_long elements;\n+\tchar *str;\n+\tzend_string *class_name;\n+\tzend_class_entry *ce;\n+\tint incomplete_class = 0;\n \n-\tif (start[2] == '-' || start[2] == '+') {\n-\t\tdigits--;\n+\tint custom_object = 0;\n+\n+\tzval user_func;\n+\tzval retval;\n+\tzval args[1];\n+\n+    if (!var_hash) return 0;\n+\tif (*start == 'C') {\n+\t\tcustom_object = 1;\n \t}\n \n-\t/* Use double for large zend_long values that were serialized on a 64-bit system */\n-\tif (digits >= MAX_LENGTH_OF_LONG - 1) {\n-\t\tif (digits == MAX_LENGTH_OF_LONG - 1) {\n-\t\t\tint cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);\n+\tlen2 = len = parse_uiv(start + 2);\n+\tmaxlen = max - YYCURSOR;\n+\tif (maxlen < len || len == 0) {\n+\t\t*p = start + 2;\n+\t\treturn 0;\n+\t}\n \n-\t\t\tif (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {\n-\t\t\t\tgoto use_double;\n+\tstr = (char*)YYCURSOR;\n+\n+\tYYCURSOR += len;\n+\n+\tif (*(YYCURSOR) != '\"') {\n+\t\t*p = YYCURSOR;\n+\t\treturn 0;\n+\t}\n+\tif (*(YYCURSOR+1) != ':') {\n+\t\t*p = YYCURSOR+1;\n+\t\treturn 0;\n+\t}\n+\n+\tlen3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");\n+\tif (len3 != len)\n+\t{\n+\t\t*p = YYCURSOR + len3 - len;\n+\t\treturn 0;\n+\t}\n+\n+\tclass_name = zend_string_init(str, len, 0);\n+\n+\tdo {\n+\t\tif(!unserialize_allowed_class(class_name, classes)) {\n+\t\t\tincomplete_class = 1;\n+\t\t\tce = PHP_IC_ENTRY;\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\t/* Try to find class directly */\n+\t\tBG(serialize_lock)++;\n+\t\tce = zend_lookup_class(class_name);\n+\t\tif (ce) {\n+\t\t\tBG(serialize_lock)--;\n+\t\t\tif (EG(exception)) {\n+\t\t\t\tzend_string_release(class_name);\n+\t\t\t\treturn 0;\n \t\t\t}\n-\t\t} else {\n-\t\t\tgoto use_double;\n+\t\t\tbreak;\n \t\t}\n-\t}\n-#endif\n+\t\tBG(serialize_lock)--;\n+\n+\t\tif (EG(exception)) {\n+\t\t\tzend_string_release(class_name);\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\t/* Check for unserialize callback */\n+\t\tif ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {\n+\t\t\tincomplete_class = 1;\n+\t\t\tce = PHP_IC_ENTRY;\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\t/* Call unserialize callback */\n+\t\tZVAL_STRING(&user_func, PG(unserialize_callback_func));\n+\n+\t\tZVAL_STR_COPY(&args[0], class_name);\n+\t\tBG(serialize_lock)++;\n+\t\tif (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {\n+\t\t\tBG(serialize_lock)--;\n+\t\t\tif (EG(exception)) {\n+\t\t\t\tzend_string_release(class_name);\n+\t\t\t\tzval_ptr_dtor(&user_func);\n+\t\t\t\tzval_ptr_dtor(&args[0]);\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t\tphp_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));\n+\t\t\tincomplete_class = 1;\n+\t\t\tce = PHP_IC_ENTRY;\n+\t\t\tzval_ptr_dtor(&user_func);\n+\t\t\tzval_ptr_dtor(&args[0]);\n+\t\t\tbreak;\n+\t\t}\n+\t\tBG(serialize_lock)--;\n+\t\tzval_ptr_dtor(&retval);\n+\t\tif (EG(exception)) {\n+\t\t\tzend_string_release(class_name);\n+\t\t\tzval_ptr_dtor(&user_func);\n+\t\t\tzval_ptr_dtor(&args[0]);\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\t/* The callback function may have defined the class */\n+\t\tBG(serialize_lock)++;\n+\t\tif ((ce = zend_lookup_class(class_name)) == NULL) {\n+\t\t\tphp_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));\n+\t\t\tincomplete_class = 1;\n+\t\t\tce = PHP_IC_ENTRY;\n+\t\t}\n+\t\tBG(serialize_lock)--;\n+\n+\t\tzval_ptr_dtor(&user_func);\n+\t\tzval_ptr_dtor(&args[0]);\n+\t\tbreak;\n+\t} while (1);\n+\n \t*p = YYCURSOR;\n-\tZVAL_LONG(rval, parse_iv(start + 2));\n-\treturn 1;\n+\n+\tif (custom_object) {\n+\t\tint ret;\n+\n+\t\tret = object_custom(UNSERIALIZE_PASSTHRU, ce);\n+\n+\t\tif (ret && incomplete_class) {\n+\t\t\tphp_store_class_name(rval, ZSTR_VAL(class_name), len2);\n+\t\t}\n+\t\tzend_string_release(class_name);\n+\t\treturn ret;\n+\t}\n+\n+\telements = object_common1(UNSERIALIZE_PASSTHRU, ce);\n+\n+\tif (elements < 0) {\n+\t   zend_string_release(class_name);\n+\t   return 0;\n+\t}\n+\n+\tif (incomplete_class) {\n+\t\tphp_store_class_name(rval, ZSTR_VAL(class_name), len2);\n+\t}\n+\tzend_string_release(class_name);\n+\n+\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n }\n-#line 1292 \"ext/standard/var_unserializer.c\"\n-yy83:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych >= '2') goto yy18;\n-\tyych = *++YYCURSOR;\n-\tif (yych != ';') goto yy18;\n+#line 1266 \"ext/standard/var_unserializer.c\"\n+yy84:\n \t++YYCURSOR;\n-#line 646 \"ext/standard/var_unserializer.re\"\n+#line 724 \"ext/standard/var_unserializer.re\"\n \t{\n+\tsize_t len, maxlen;\n+\tzend_string *str;\n+\n+\tlen = parse_uiv(start + 2);\n+\tmaxlen = max - YYCURSOR;\n+\tif (maxlen < len) {\n+\t\t*p = start + 2;\n+\t\treturn 0;\n+\t}\n+\n+\tif ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {\n+\t\treturn 0;\n+\t}\n+\n+\tif (*(YYCURSOR) != '\"') {\n+\t\tzend_string_free(str);\n+\t\t*p = YYCURSOR;\n+\t\treturn 0;\n+\t}\n+\n+\tif (*(YYCURSOR + 1) != ';') {\n+\t\tefree(str);\n+\t\t*p = YYCURSOR + 1;\n+\t\treturn 0;\n+\t}\n+\n+\tYYCURSOR += 2;\n \t*p = YYCURSOR;\n-\tZVAL_BOOL(rval, parse_iv(start + 2));\n+\n+\tZVAL_STR(rval, str);\n \treturn 1;\n }\n-#line 1306 \"ext/standard/var_unserializer.c\"\n-yy87:\n+#line 1303 \"ext/standard/var_unserializer.c\"\n+yy86:\n \t++YYCURSOR;\n-#line 640 \"ext/standard/var_unserializer.re\"\n+#line 758 \"ext/standard/var_unserializer.re\"\n \t{\n+\tzend_long elements = parse_iv(start + 2);\n+\t/* use iv() not uiv() in order to check data range */\n \t*p = YYCURSOR;\n-\tZVAL_NULL(rval);\n-\treturn 1;\n+    if (!var_hash) return 0;\n+\n+\tif (elements < 0 || elements >= HT_MAX_SIZE) {\n+\t\treturn 0;\n+\t}\n+\n+\tarray_init_size(rval, elements);\n+\tif (elements) {\n+\t\t/* we can't convert from packed to hash during unserialization, because\n+\t\t   reference to some zvals might be keept in var_hash (to support references) */\n+\t\tzend_hash_real_init(Z_ARRVAL_P(rval), 0);\n+\t}\n+\n+\tif (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {\n+\t\treturn 0;\n+\t}\n+\n+\treturn finish_nested_data(UNSERIALIZE_PASSTHRU);\n }\n-#line 1315 \"ext/standard/var_unserializer.c\"\n-yy89:\n+#line 1330 \"ext/standard/var_unserializer.c\"\n+yy88:\n \tyych = *++YYCURSOR;\n \tif (yych <= ',') {\n-\t\tif (yych != '+') goto yy18;\n+\t\tif (yych == '+') goto yy96;\n+\t\tgoto yy18;\n \t} else {\n-\t\tif (yych <= '-') goto yy90;\n+\t\tif (yych <= '-') goto yy96;\n \t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy91;\n-\t\tgoto yy18;\n+\t\tif (yych >= ':') goto yy18;\n \t}\n-yy90:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n-yy91:\n+yy89:\n \t++YYCURSOR;\n \tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n \tyych = *YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy91;\n-\tif (yych != ';') goto yy18;\n+\tif (yych <= '9') goto yy89;\n+\tif (yych == ';') goto yy71;\n+\tgoto yy18;\n+yy91:\n+\tyych = *++YYCURSOR;\n+\tif (yych == ';') goto yy97;\n+\tgoto yy18;\n+yy92:\n \t++YYCURSOR;\n-#line 615 \"ext/standard/var_unserializer.re\"\n+#line 782 \"ext/standard/var_unserializer.re\"\n \t{\n-\tzend_long id;\n+\tzend_long elements;\n+    if (!var_hash) return 0;\n \n- \t*p = YYCURSOR;\n-\tif (!var_hash) return 0;\n+\telements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);\n+\tif (elements < 0 || elements >= HT_MAX_SIZE) {\n+\t\treturn 0;\n+\t}\n+\treturn object_common2(UNSERIALIZE_PASSTHRU, elements);\n+}\n+#line 1366 \"ext/standard/var_unserializer.c\"\n+yy94:\n+\t++YYCURSOR;\n+#line 692 \"ext/standard/var_unserializer.re\"\n+\t{\n+\tsize_t len, maxlen;\n+\tchar *str;\n \n-\tid = parse_iv(start + 2) - 1;\n-\tif (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {\n+\tlen = parse_uiv(start + 2);\n+\tmaxlen = max - YYCURSOR;\n+\tif (maxlen < len) {\n+\t\t*p = start + 2;\n \t\treturn 0;\n \t}\n \n-\tif (rval_ref == rval) {\n+\tstr = (char*)YYCURSOR;\n+\n+\tYYCURSOR += len;\n+\n+\tif (*(YYCURSOR) != '\"') {\n+\t\t*p = YYCURSOR;\n \t\treturn 0;\n \t}\n \n-\tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n-\t\tZVAL_UNDEF(rval);\n-\t\treturn 1;\n+\tif (*(YYCURSOR + 1) != ';') {\n+\t\t*p = YYCURSOR + 1;\n+\t\treturn 0;\n \t}\n \n-\tZVAL_COPY(rval, rval_ref);\n+\tYYCURSOR += 2;\n+\t*p = YYCURSOR;\n \n+\tZVAL_STRINGL(rval, str, len);\n \treturn 1;\n }\n-#line 1363 \"ext/standard/var_unserializer.c\"\n-yy95:\n-\tyych = *++YYCURSOR;\n-\tif (yych <= ',') {\n-\t\tif (yych != '+') goto yy18;\n-\t} else {\n-\t\tif (yych <= '-') goto yy96;\n-\t\tif (yych <= '/') goto yy18;\n-\t\tif (yych <= '9') goto yy97;\n-\t\tgoto yy18;\n-\t}\n+#line 1401 \"ext/standard/var_unserializer.c\"\n yy96:\n \tyych = *++YYCURSOR;\n \tif (yych <= '/') goto yy18;\n-\tif (yych >= ':') goto yy18;\n+\tif (yych <= '9') goto yy89;\n+\tgoto yy18;\n yy97:\n \t++YYCURSOR;\n-\tif (YYLIMIT <= YYCURSOR) YYFILL(1);\n-\tyych = *YYCURSOR;\n-\tif (yych <= '/') goto yy18;\n-\tif (yych <= '9') goto yy97;\n-\tif (yych != ';') goto yy18;\n-\t++YYCURSOR;\n-#line 589 \"ext/standard/var_unserializer.re\"\n+#line 667 \"ext/standard/var_unserializer.re\"\n \t{\n-\tzend_long id;\n-\n- \t*p = YYCURSOR;\n-\tif (!var_hash) return 0;\n-\n-\tid = parse_iv(start + 2) - 1;\n-\tif (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {\n-\t\treturn 0;\n-\t}\n+\t*p = YYCURSOR;\n \n-\tzval_ptr_dtor(rval);\n-\tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n-\t\tZVAL_UNDEF(rval);\n-\t\treturn 1;\n-\t}\n-\tif (Z_ISREF_P(rval_ref)) {\n-\t\tZVAL_COPY(rval, rval_ref);\n+\tif (!strncmp((char*)start + 2, \"NAN\", 3)) {\n+\t\tZVAL_DOUBLE(rval, php_get_nan());\n+\t} else if (!strncmp((char*)start + 2, \"INF\", 3)) {\n+\t\tZVAL_DOUBLE(rval, php_get_inf());\n+\t} else if (!strncmp((char*)start + 2, \"-INF\", 4)) {\n+\t\tZVAL_DOUBLE(rval, -php_get_inf());\n \t} else {\n-\t\tZVAL_NEW_REF(rval_ref, rval_ref);\n-\t\tZVAL_COPY(rval, rval_ref);\n+\t\tZVAL_NULL(rval);\n \t}\n \n \treturn 1;\n }\n-#line 1412 \"ext/standard/var_unserializer.c\"\n+#line 1425 \"ext/standard/var_unserializer.c\"\n }\n-#line 964 \"ext/standard/var_unserializer.re\"\n+#line 953 \"ext/standard/var_unserializer.re\"\n \n \n \treturn 0;"
        },
        {
          "filename": "ext/standard/var_unserializer.re",
          "status": "modified",
          "additions": 4,
          "deletions": 15,
          "patch": "@@ -409,16 +409,7 @@ string_key:\n \t\t\treturn 0;\n \t\t}\n \n-\t\tif (UNEXPECTED(Z_ISUNDEF_P(data))) {\n-\t\t\tif (Z_TYPE(key) == IS_LONG) {\n-\t\t\t\tzend_hash_index_del(ht, Z_LVAL(key));\n-\t\t\t} else {\n-\t\t\t\tzend_hash_del_ind(ht, Z_STR(key));\n-\t\t\t}\n-\t\t} else {\n-\t\t\tvar_push_dtor(var_hash, data);\n-\t\t}\n-\n+\t\tvar_push_dtor(var_hash, data);\n \t\tzval_dtor(&key);\n \n \t\tif (elements && *(*p-1) != ';' && *(*p-1) != '}') {\n@@ -597,11 +588,10 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)\n \t\treturn 0;\n \t}\n \n-\tzval_ptr_dtor(rval);\n \tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n-\t\tZVAL_UNDEF(rval);\n-\t\treturn 1;\n+\t\treturn 0;\n \t}\n+\n \tif (Z_ISREF_P(rval_ref)) {\n \t\tZVAL_COPY(rval, rval_ref);\n \t} else {\n@@ -628,8 +618,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)\n \t}\n \n \tif (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {\n-\t\tZVAL_UNDEF(rval);\n-\t\treturn 1;\n+\t\treturn 0;\n \t}\n \n \tZVAL_COPY(rval, rval_ref);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4e25839d34407b47050e02cb3749c44c545d601",
            "date": "2025-01-14T18:33:00Z",
            "author_login": "devnexen"
          },
          {
            "sha": "b1e0176455db6580b293a2f18a30e58cc5479ba4",
            "date": "2025-01-14T18:32:51Z",
            "author_login": "devnexen"
          },
          {
            "sha": "e4473abefc4fd711a2343a0954d60a2422a9e4fb",
            "date": "2025-01-13T18:09:08Z",
            "author_login": "devnexen"
          },
          {
            "sha": "e95b298262871462315d52dab0fc7fc157783999",
            "date": "2025-01-13T15:58:32Z",
            "author_login": "iluuu1994"
          },
          {
            "sha": "634edc8ab3850052942eba6432ba7a4f776ebae8",
            "date": "2025-01-14T11:36:58Z",
            "author_login": "cmb69"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-416",
    "description": "ext/standard/var_unserializer.re in PHP 7.0.x through 7.0.22 and 7.1.x through 7.1.8 is prone to a heap use after free while unserializing untrusted data, related to improper use of the hash API for key deletion in a situation with an invalid array size. Exploitation of this issue can have an unspecified impact on the integrity of PHP.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-08-18T03:29:00.183",
    "last_modified": "2024-11-21T03:10:27.327",
    "fix_date": "2017-08-12T11:00:39Z"
  },
  "references": [
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/100427",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1296",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:2519",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=74103",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-21",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20180112-0001/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4080",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://php.net/ChangeLog-7.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/100427",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1296",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:2519",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.php.net/bug.php?id=74103",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-21",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20180112-0001/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4080",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:05.105974",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "php-src",
    "owner": "php",
    "created_at": "2011-06-16T01:52:25Z",
    "updated_at": "2025-01-14T11:37:56Z",
    "pushed_at": "2025-01-14T11:37:44Z",
    "size": 579039,
    "stars": 38520,
    "forks": 7798,
    "open_issues": 1300,
    "watchers": 38520,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "PEAR_1_4DEV",
      "PECL_OPENSSL",
      "PECL",
      "PECL_4_3",
      "PHAR_1_2",
      "PHP-4.0",
      "PHP-4.0.5",
      "PHP-4.0.6",
      "PHP-4.0.7",
      "PHP-4.2.0",
      "PHP-4.2.2",
      "PHP-4.3",
      "PHP-4.3.0",
      "PHP-4.3.1",
      "PHP-4.3.2",
      "PHP-4.3.7",
      "PHP-4.4",
      "PHP-5",
      "PHP-5.0",
      "PHP-5.1",
      "PHP-5.2",
      "PHP-5.2.1RC1",
      "PHP-5.3",
      "PHP-5.3.11",
      "PHP-5.3.12",
      "PHP-5.3.13",
      "PHP-5.3.14",
      "PHP-5.3.15",
      "PHP-5.3.16",
      "PHP-5.3.17"
    ],
    "languages": {
      "C": 65322886,
      "PHP": 30041198,
      "C++": 580205,
      "M4": 408378,
      "Shell": 299560,
      "Lua": 272563,
      "Assembly": 236754,
      "JavaScript": 198632,
      "Lex": 99367,
      "Yacc": 92094,
      "Makefile": 33437,
      "Roff": 32243,
      "GAP": 23811,
      "Python": 14072,
      "GDB": 13663,
      "XSLT": 7963,
      "Awk": 2920,
      "Batchfile": 2219,
      "DTrace": 2180,
      "HTML": 1894
    },
    "commit_activity": {
      "total_commits_last_year": 5383,
      "avg_commits_per_week": 103.51923076923077,
      "days_active_last_year": 358
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:39.017037"
  }
}