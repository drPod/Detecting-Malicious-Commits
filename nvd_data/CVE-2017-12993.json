{
  "cve_id": "CVE-2017-12993",
  "github_data": {
    "repository": "the-tcpdump-group/tcpdump",
    "fix_commit": "b534e304568585707c4a92422aeca25cf908ff02",
    "related_commits": [
      "b534e304568585707c4a92422aeca25cf908ff02",
      "b534e304568585707c4a92422aeca25cf908ff02"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b534e304568585707c4a92422aeca25cf908ff02",
      "commit_date": "2017-02-07T18:33:07Z",
      "author": {
        "login": "guyharris",
        "type": "User",
        "stats": {
          "total_commits": 1754,
          "average_weekly_commits": 1.3267776096822996,
          "total_additions": 334479,
          "total_deletions": 321814,
          "weeks_active": 331
        }
      },
      "commit_message": {
        "title": "CVE-2017-12993/Juniper: Add more bounds checks.",
        "length": 174,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 44,
        "deletions": 0
      },
      "files": [
        {
          "filename": "print-juniper.c",
          "status": "modified",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -472,6 +472,7 @@ juniper_ggsn_print(netdissect_options *ndo,\n         p+=l2info.header_len;\n         gh = (struct juniper_ggsn_header *)&l2info.cookie;\n \n+        ND_TCHECK(*gh);\n         if (ndo->ndo_eflag) {\n             ND_PRINT((ndo, \"proto %s (%u), vlan %u: \",\n                    tok2str(juniper_protocol_values,\"Unknown\",gh->proto),\n@@ -492,6 +493,10 @@ juniper_ggsn_print(netdissect_options *ndo,\n         }\n \n         return l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_services]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -519,6 +524,7 @@ juniper_es_print(netdissect_options *ndo,\n         p+=l2info.header_len;\n         ih = (const struct juniper_ipsec_header *)p;\n \n+        ND_TCHECK(*ih);\n         switch (ih->type) {\n         case JUNIPER_IPSEC_O_ESP_ENCRYPT_ESP_AUTHEN_TYPE:\n         case JUNIPER_IPSEC_O_ESP_ENCRYPT_AH_AUTHEN_TYPE:\n@@ -564,6 +570,10 @@ juniper_es_print(netdissect_options *ndo,\n \n         ip_print(ndo, p, l2info.length);\n         return l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_services]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -588,6 +598,7 @@ juniper_monitor_print(netdissect_options *ndo,\n         p+=l2info.header_len;\n         mh = (const struct juniper_monitor_header *)p;\n \n+        ND_TCHECK(*mh);\n         if (ndo->ndo_eflag)\n             ND_PRINT((ndo, \"service-id %u, iif %u, pkt-type %u: \",\n                    EXTRACT_32BITS(&mh->service_id),\n@@ -598,6 +609,10 @@ juniper_monitor_print(netdissect_options *ndo,\n         ip_heuristic_guess (ndo, p, l2info.length);\n \n         return l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_services]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -622,6 +637,7 @@ juniper_services_print(netdissect_options *ndo,\n         p+=l2info.header_len;\n         sh = (const struct juniper_services_header *)p;\n \n+        ND_TCHECK(*sh);\n         if (ndo->ndo_eflag)\n             ND_PRINT((ndo, \"service-id %u flags 0x%02x service-set-id 0x%04x iif %u: \",\n                    sh->svc_id,\n@@ -633,6 +649,10 @@ juniper_services_print(netdissect_options *ndo,\n         ip_heuristic_guess (ndo, p, l2info.length);\n \n         return l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_services]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -740,6 +760,7 @@ juniper_pppoe_atm_print(netdissect_options *ndo,\n \n         p+=l2info.header_len;\n \n+        ND_TCHECK2(p[0], 2);\n         extracted_ethertype = EXTRACT_16BITS(p);\n         /* this DLT contains nothing but raw PPPoE frames,\n          * prepended with a type field*/\n@@ -752,6 +773,10 @@ juniper_pppoe_atm_print(netdissect_options *ndo,\n             ND_PRINT((ndo, \"unknown ethertype 0x%04x\", extracted_ethertype));\n \n         return l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_pppoe_atm]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -940,6 +965,7 @@ juniper_atm1_print(netdissect_options *ndo,\n             return l2info.header_len;\n         }\n \n+        ND_TCHECK2(p[0], 3);\n         if (EXTRACT_24BITS(p) == 0xfefe03 || /* NLPID encaps ? */\n             EXTRACT_24BITS(p) == 0xaaaa03) { /* SNAP encaps ? */\n \n@@ -958,6 +984,10 @@ juniper_atm1_print(netdissect_options *ndo,\n             return l2info.header_len;\n \n \treturn l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_atm1]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -989,6 +1019,7 @@ juniper_atm2_print(netdissect_options *ndo,\n             return l2info.header_len;\n         }\n \n+        ND_TCHECK2(p[0], 3);\n         if (EXTRACT_24BITS(p) == 0xfefe03 || /* NLPID encaps ? */\n             EXTRACT_24BITS(p) == 0xaaaa03) { /* SNAP encaps ? */\n \n@@ -1016,6 +1047,10 @@ juniper_atm2_print(netdissect_options *ndo,\n             return l2info.header_len;\n \n \treturn l2info.header_len;\n+\n+trunc:\n+\tND_PRINT((ndo, \"[|juniper_atm2]\"));\n+\treturn l2info.header_len;\n }\n #endif\n \n@@ -1280,6 +1315,7 @@ juniper_parse_header(netdissect_options *ndo,\n     l2info->caplen -= l2info->header_len;\n \n     /* search through the cookie table and copy values matching for our PIC type */\n+    ND_TCHECK(p[0]);\n     while (lp->s != NULL) {\n         if (lp->pictype == l2info->pictype) {\n \n@@ -1360,6 +1396,7 @@ juniper_parse_header(netdissect_options *ndo,\n     case DLT_JUNIPER_MLFR:\n         switch (l2info->cookie_type) {\n         case LS_COOKIE_ID:\n+            ND_TCHECK2(p[0], 2);\n             l2info->bundle = l2info->cookie[1];\n             l2info->proto = EXTRACT_16BITS(p);\n             l2info->header_len += 2;\n@@ -1383,6 +1420,7 @@ juniper_parse_header(netdissect_options *ndo,\n     case DLT_JUNIPER_MFR:\n         switch (l2info->cookie_type) {\n         case LS_COOKIE_ID:\n+            ND_TCHECK2(p[0], 2);\n             l2info->bundle = l2info->cookie[1];\n             l2info->proto = EXTRACT_16BITS(p);\n             l2info->header_len += 2;"
        },
        {
          "filename": "tests/TESTLIST",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -451,6 +451,9 @@ nfs-attr-oobr\t\tnfs-attr-oobr.pcap\t\tnfs-attr-oobr.out\n decnet-oobr\t\tdecnet-oobr.pcap\t\tdecnet-oobr.out\n oobr_parse_elements\toobr_parse_elements.pcap\toobr_parse_elements.out\n hoobr_ripng_print\thoobr_ripng_print.pcap\t\thoobr_ripng_print.out\n+hoobr_juniper\t\thoobr_juniper.pcap\t\thoobr_juniper.out\n+hoobr_juniper2\t\thoobr_juniper2.pcap\t\thoobr_juniper2.out\n+hoobr_juniper3\t\thoobr_juniper3.pcap\t\thoobr_juniper3.out\n \n # bad packets from Wilfried Kirsch\n slip-bad-direction\tslip-bad-direction.pcap\t\tslip-bad-direction.out\t-ve"
        },
        {
          "filename": "tests/hoobr_juniper.out",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+[|juniper_hdr], length 808464432"
        },
        {
          "filename": "tests/hoobr_juniper.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/hoobr_juniper2.out",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+[|juniper_atm1]"
        },
        {
          "filename": "tests/hoobr_juniper2.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/hoobr_juniper3.out",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+Unknown Juniper DLT_ type 132: [|juniper_services]"
        },
        {
          "filename": "tests/hoobr_juniper3.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 7,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "94675fce171e2a3b4e0197c5ec2deeaa51a58af9",
            "date": "2025-01-20T14:01:45Z",
            "author_login": "infrastation"
          },
          {
            "sha": "09512cfc01958a37f67951bf7b6e00d52ed1e12e",
            "date": "2025-01-20T13:59:44Z",
            "author_login": "infrastation"
          },
          {
            "sha": "584c7c4c7feb614da42c9de867e03cc7fcdb2723",
            "date": "2025-01-17T11:11:13Z",
            "author_login": "fxlb"
          },
          {
            "sha": "05a263a5418a9e5b971509c486246eb0913c8aea",
            "date": "2025-01-12T21:05:02Z",
            "author_login": "fxlb"
          },
          {
            "sha": "9aee9964aaee40750acde45f838f48eb8f95fbe3",
            "date": "2025-01-09T15:35:53Z",
            "author_login": "fxlb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The Juniper protocols parser in tcpdump before 4.9.2 has a buffer over-read in print-juniper.c, several functions.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-14T06:29:00.857",
    "last_modified": "2024-11-21T03:10:36.370",
    "fix_date": "2017-02-07T18:33:07Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/b534e304568585707c4a92422aeca25cf908ff02",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/b534e304568585707c4a92422aeca25cf908ff02",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.364355",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "tcpdump",
    "owner": "the-tcpdump-group",
    "created_at": "2013-04-14T21:46:15Z",
    "updated_at": "2025-01-25T16:42:48Z",
    "pushed_at": "2025-01-21T11:51:24Z",
    "size": 27747,
    "stars": 2799,
    "forks": 861,
    "open_issues": 113,
    "watchers": 2799,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "tcpdump-3.5",
      "tcpdump-3.6",
      "tcpdump-3.7",
      "tcpdump-3.8",
      "tcpdump-3.9",
      "tcpdump-4.0",
      "tcpdump-4.1",
      "tcpdump-4.2",
      "tcpdump-4.3",
      "tcpdump-4.4",
      "tcpdump-4.5",
      "tcpdump-4.6",
      "tcpdump-4.7",
      "tcpdump-4.8",
      "tcpdump-4.9",
      "tcpdump-4.99"
    ],
    "languages": {
      "C": 3548123,
      "CMake": 76892,
      "Roff": 66849,
      "Shell": 50525,
      "M4": 31504,
      "Perl": 29240,
      "Makefile": 14259,
      "Awk": 4120,
      "GDB": 660
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:34:03.331448"
  }
}