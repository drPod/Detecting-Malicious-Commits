{
  "cve_id": "CVE-2017-13052",
  "github_data": {
    "repository": "the-tcpdump-group/tcpdump",
    "fix_commit": "5d340a5ca6e420a70297cdbdf777333f18bfdab7",
    "related_commits": [
      "5d340a5ca6e420a70297cdbdf777333f18bfdab7",
      "5d340a5ca6e420a70297cdbdf777333f18bfdab7"
    ],
    "patch_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5d340a5ca6e420a70297cdbdf777333f18bfdab7.patch",
    "fix_commit_details": {
      "sha": "5d340a5ca6e420a70297cdbdf777333f18bfdab7",
      "commit_date": "2017-08-14T23:05:32Z",
      "author": {
        "login": "infrastation",
        "type": "User",
        "stats": {
          "total_commits": 881,
          "average_weekly_commits": 0.6674242424242425,
          "total_additions": 273527,
          "total_deletions": 143501,
          "weeks_active": 241
        }
      },
      "commit_message": {
        "title": "CVE-2017-13052/CFM: refine decoding of the Sender ID TLV",
        "length": 843,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 71,
        "additions": 62,
        "deletions": 9
      },
      "files": [
        {
          "filename": "print-cfm.c",
          "status": "modified",
          "additions": 53,
          "deletions": 9,
          "patch": "@@ -217,7 +217,7 @@ static const struct tok cfm_tlv_senderid_chassisid_values[] = {\n \n static int\n cfm_network_addr_print(netdissect_options *ndo,\n-                       register const u_char *tptr)\n+                       register const u_char *tptr, const u_int length)\n {\n     u_int network_addr_type;\n     u_int hexdump =  FALSE;\n@@ -227,6 +227,11 @@ cfm_network_addr_print(netdissect_options *ndo,\n      * 802.1ab specifies that this field width\n      * is only once octet\n      */\n+    if (length < 1) {\n+        ND_PRINT((ndo, \"\\n\\t  Network Address Type (invalid, no data\"));\n+        return hexdump;\n+    }\n+    /* The calling function must make any due ND_TCHECK calls. */\n     network_addr_type = *tptr;\n     ND_PRINT((ndo, \"\\n\\t  Network Address Type %s (%u)\",\n            tok2str(af_values, \"Unknown\", network_addr_type),\n@@ -237,10 +242,20 @@ cfm_network_addr_print(netdissect_options *ndo,\n      */\n     switch(network_addr_type) {\n     case AFNUM_INET:\n+        if (length != 1 + 4) {\n+            ND_PRINT((ndo, \"(invalid IPv4 address length %u)\", length - 1));\n+            hexdump = TRUE;\n+            break;\n+        }\n         ND_PRINT((ndo, \", %s\", ipaddr_string(ndo, tptr + 1)));\n         break;\n \n     case AFNUM_INET6:\n+        if (length != 1 + 16) {\n+            ND_PRINT((ndo, \"(invalid IPv6 address length %u)\", length - 1));\n+            hexdump = TRUE;\n+            break;\n+        }\n         ND_PRINT((ndo, \", %s\", ip6addr_string(ndo, tptr + 1)));\n         break;\n \n@@ -584,21 +599,27 @@ cfm_print(netdissect_options *ndo,\n \n             if (cfm_tlv_len < 1) {\n                 ND_PRINT((ndo, \" (too short, must be >= 1)\"));\n-                return;\n+                goto next_tlv;\n             }\n \n             /*\n              * Get the Chassis ID length and check it.\n+             * IEEE 802.1Q-2014 Section 21.5.3.1\n              */\n             chassis_id_length = *tptr;\n             tptr++;\n             tlen--;\n             cfm_tlv_len--;\n \n             if (chassis_id_length) {\n+                /*\n+                 * IEEE 802.1Q-2014 Section 21.5.3.2: Chassis ID Subtype, references\n+                 * IEEE 802.1AB-2005 Section 9.5.2.2, subsequently\n+                 * IEEE 802.1AB-2016 Section 8.5.2.2: chassis ID subtype\n+                 */\n                 if (cfm_tlv_len < 1) {\n                     ND_PRINT((ndo, \"\\n\\t  (TLV too short)\"));\n-                    return;\n+                    goto next_tlv;\n                 }\n                 chassis_id_type = *tptr;\n                 cfm_tlv_len--;\n@@ -611,16 +632,22 @@ cfm_print(netdissect_options *ndo,\n \n                 if (cfm_tlv_len < chassis_id_length) {\n                     ND_PRINT((ndo, \"\\n\\t  (TLV too short)\"));\n-                    return;\n+                    goto next_tlv;\n                 }\n \n+                /* IEEE 802.1Q-2014 Section 21.5.3.3: Chassis ID */\n                 switch (chassis_id_type) {\n                 case CFM_CHASSIS_ID_MAC_ADDRESS:\n+                    if (chassis_id_length != ETHER_ADDR_LEN) {\n+                        ND_PRINT((ndo, \" (invalid MAC address length)\"));\n+                        hexdump = TRUE;\n+                        break;\n+                    }\n                     ND_PRINT((ndo, \"\\n\\t  MAC %s\", etheraddr_string(ndo, tptr + 1)));\n                     break;\n \n                 case CFM_CHASSIS_ID_NETWORK_ADDRESS:\n-                    hexdump |= cfm_network_addr_print(ndo, tptr);\n+                    hexdump |= cfm_network_addr_print(ndo, tptr + 1, chassis_id_length);\n                     break;\n \n                 case CFM_CHASSIS_ID_INTERFACE_NAME: /* fall through */\n@@ -643,38 +670,53 @@ cfm_print(netdissect_options *ndo,\n \n             /*\n              * Check if there is a Management Address.\n+             * IEEE 802.1Q-2014 Section 21.5.3.4: Management Address Domain Length\n+             * This and all subsequent fields are not present if the TLV length\n+             * allows only the above fields.\n              */\n             if (cfm_tlv_len == 0) {\n                 /* No, there isn't; we're done. */\n-                return;\n+                break;\n             }\n \n+            /* Here mgmt_addr_length stands for the management domain length. */\n             mgmt_addr_length = *tptr;\n             tptr++;\n             tlen--;\n             cfm_tlv_len--;\n+            ND_PRINT((ndo, \"\\n\\t  Management Address Domain Length %u\", mgmt_addr_length));\n             if (mgmt_addr_length) {\n+                /* IEEE 802.1Q-2014 Section 21.5.3.5: Management Address Domain */\n                 if (cfm_tlv_len < mgmt_addr_length) {\n                     ND_PRINT((ndo, \"\\n\\t  (TLV too short)\"));\n-                    return;\n+                    goto next_tlv;\n                 }\n                 cfm_tlv_len -= mgmt_addr_length;\n                 /*\n                  * XXX - this is an OID; print it as such.\n                  */\n+                hex_print(ndo, \"\\n\\t  Management Address Domain: \", tptr, mgmt_addr_length);\n                 tptr += mgmt_addr_length;\n                 tlen -= mgmt_addr_length;\n \n+                /*\n+                 * IEEE 802.1Q-2014 Section 21.5.3.6: Management Address Length\n+                 * This field is present if Management Address Domain Length is not 0.\n+                 */\n                 if (cfm_tlv_len < 1) {\n-                    ND_PRINT((ndo, \"\\n\\t  (TLV too short)\"));\n-                    return;\n+                    ND_PRINT((ndo, \" (Management Address Length is missing)\"));\n+                    hexdump = TRUE;\n+                    break;\n                 }\n \n+                /* Here mgmt_addr_length stands for the management address length. */\n                 mgmt_addr_length = *tptr;\n                 tptr++;\n                 tlen--;\n                 cfm_tlv_len--;\n+                ND_PRINT((ndo, \"\\n\\t  Management Address Length %u\", mgmt_addr_length));\n                 if (mgmt_addr_length) {\n+                    /* IEEE 802.1Q-2014 Section 21.5.3.7: Management Address */\n                     if (cfm_tlv_len < mgmt_addr_length) {\n                         ND_PRINT((ndo, \"\\n\\t  (TLV too short)\"));\n                         return;\n@@ -683,6 +725,7 @@ cfm_print(netdissect_options *ndo,\n                     /*\n                      * XXX - this is a TransportDomain; print it as such.\n                      */\n+                    hex_print(ndo, \"\\n\\t  Management Address: \", tptr, mgmt_addr_length);\n                     tptr += mgmt_addr_length;\n                     tlen -= mgmt_addr_length;\n                 }\n@@ -706,6 +749,7 @@ cfm_print(netdissect_options *ndo,\n         if (hexdump || ndo->ndo_vflag > 1)\n             print_unknown_data(ndo, tlv_ptr, \"\\n\\t  \", cfm_tlv_len);\n \n+next_tlv:\n         tptr+=cfm_tlv_len;\n         tlen-=cfm_tlv_len;\n     }"
        },
        {
          "filename": "tests/TESTLIST",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -573,6 +573,7 @@ rsvp_uni-oobr-3\trsvp_uni-oobr-3.pcap\trsvp_uni-oobr-3.out\t-v -c3\n rpki-rtr-oob\t\trpki-rtr-oob.pcap\trpki-rtr-oob.out\t-v -c1\n lldp_8023_mtu-oobr\tlldp_8023_mtu-oobr.pcap\tlldp_8023_mtu-oobr.out\t-v -c1\n bgp_vpn_rt-oobr\tbgp_vpn_rt-oobr.pcap\tbgp_vpn_rt-oobr.out\t-v -c1\n+cfm_sender_id-oobr\tcfm_sender_id-oobr.pcap\tcfm_sender_id-oobr.out\t-v -c1\n \n # bad packets from Katie Holly\n mlppp-oobr\t\tmlppp-oobr.pcap\t\t\tmlppp-oobr.out"
        },
        {
          "filename": "tests/cfm_sender_id-oobr.out",
          "status": "added",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -0,0 +1,8 @@\n+CFMv0 unknown (255), MD Level 0, length 65556\n+\tFirst TLV offset 0\n+\t  0x0000:  ff00 0001 0004 0104 9a00 000c fb\n+\tUnknown TLV (0xff), length 0\n+\tSender ID TLV (0x01), length 4\n+\t  Chassis-ID Type MAC address (4), Chassis-ID length 1 (invalid MAC address length)\n+\t  Management Address Domain Length 0\n+\tEnd TLV (0x00)"
        },
        {
          "filename": "tests/cfm_sender_id-oobr.pcap",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05a263a5418a9e5b971509c486246eb0913c8aea",
            "date": "2025-01-12T21:05:02Z",
            "author_login": "fxlb"
          },
          {
            "sha": "9aee9964aaee40750acde45f838f48eb8f95fbe3",
            "date": "2025-01-09T15:35:53Z",
            "author_login": "fxlb"
          },
          {
            "sha": "6cd500c8dafe5a9bbf3e56312493709e8b118726",
            "date": "2025-01-08T20:12:09Z",
            "author_login": "fxlb"
          },
          {
            "sha": "c5b54bfbd68b03f7997feaa277db30d399975a4d",
            "date": "2022-10-11T20:10:46Z",
            "author_login": "fenner"
          },
          {
            "sha": "431bdb5c365360d61968e7fa02322825b1da4208",
            "date": "2025-01-07T19:21:12Z",
            "author_login": "fxlb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The CFM parser in tcpdump before 4.9.2 has a buffer over-read in print-cfm.c:cfm_print().",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-14T06:29:03.153",
    "last_modified": "2024-11-21T03:10:50.440",
    "fix_date": "2017-08-14T23:05:32Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/5d340a5ca6e420a70297cdbdf777333f18bfdab7",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3971",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securitytracker.com/id/1039307",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.tcpdump.org/tcpdump-changes.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHEA-2018:0705",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/5d340a5ca6e420a70297cdbdf777333f18bfdab7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201709-23",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/HT208221",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.374208",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tcpdump",
    "owner": "the-tcpdump-group",
    "created_at": "2013-04-14T21:46:15Z",
    "updated_at": "2025-01-14T07:48:01Z",
    "pushed_at": "2025-01-13T06:19:33Z",
    "size": 27691,
    "stars": 2789,
    "forks": 860,
    "open_issues": 115,
    "watchers": 2789,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "tcpdump-3.5",
      "tcpdump-3.6",
      "tcpdump-3.7",
      "tcpdump-3.8",
      "tcpdump-3.9",
      "tcpdump-4.0",
      "tcpdump-4.1",
      "tcpdump-4.2",
      "tcpdump-4.3",
      "tcpdump-4.4",
      "tcpdump-4.5",
      "tcpdump-4.6",
      "tcpdump-4.7",
      "tcpdump-4.8",
      "tcpdump-4.9",
      "tcpdump-4.99"
    ],
    "languages": {
      "C": 3548298,
      "CMake": 76892,
      "Roff": 66849,
      "Shell": 50525,
      "M4": 31504,
      "Perl": 29240,
      "Makefile": 14259,
      "Awk": 4120,
      "GDB": 660
    },
    "commit_activity": {
      "total_commits_last_year": 314,
      "avg_commits_per_week": 6.038461538461538,
      "days_active_last_year": 158
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:48.453717"
  }
}