{
  "cve_id": "CVE-2017-13671",
  "github_data": {
    "repository": "MISP/MISP",
    "fix_commit": "6eba658d4a648b41b357025d864c19a67412b8aa",
    "related_commits": [
      "6eba658d4a648b41b357025d864c19a67412b8aa",
      "6eba658d4a648b41b357025d864c19a67412b8aa"
    ],
    "patch_url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa.patch",
    "fix_commit_details": {
      "sha": "6eba658d4a648b41b357025d864c19a67412b8aa",
      "commit_date": "2017-08-24T09:25:32Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": {
          "total_commits": 9407,
          "average_weekly_commits": 13.692867540029113,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "fix: Fixed a potential persistent cross site scripting in the comments",
        "length": 350,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 88,
        "additions": 81,
        "deletions": 7
      },
      "files": [
        {
          "filename": "app/View/Helper/CommandHelper.php",
          "status": "modified",
          "additions": 81,
          "deletions": 7,
          "patch": "@@ -6,14 +6,88 @@\n \n \n \tclass CommandHelper extends AppHelper {\n-\t\tpublic function convertQuotes($string) {\n-\t\t\t$string = str_ireplace('[QUOTE]', '<div class=\"quote\">', $string);\n-\t\t\t$string = str_ireplace('[/QUOTE]', '</div>', $string);\n-\t\t\t$string = preg_replace('%\\[event\\]\\s*(\\d*)\\s*\\[/event\\]%isU', '<a href=\"' . h(Configure::read('MISP.baseurl')). '/events/view/$1> Event $1</a>', $string);\n-\t\t\t$string = preg_replace('%\\[thread\\]\\s*(\\d*)\\s*\\[/thread\\]%isU', '<a href=\"' . h(Configure::read('MISP.baseurl')). '/threads/view/$1> Thread $1</a>', $string);\n-\t\t\t$string = preg_replace('%\\[link\\]\\s*(http|https|ftp|git|ftps)(.*)\\s*\\[/link\\]%isU', '<a href=\"$1$2\">$1$2</a>', $string);\n-\t\t\t$string = preg_replace('%\\[code\\](.*)\\[/code\\]%isU', '<pre>$1</pre>', $string);\n+\t\tvar $helpers = array('Html');\n+\n+\t\tprivate $__replacement;\n+\n+\t\tprivate function __buildReplacements() {\n+\t\t\t$this->__replacement = array(\n+\t\t\t\t'link' => array('type' => 'url', 'url' => '$1', 'text' => '$1'),\n+\t\t\t\t'thread' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/threads/view/$1', 'text' => ' Thread $1'),\n+\t\t\t\t'event' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/events/view/$1', 'text' => ' Event $1'),\n+\t\t\t\t'code' => array('type' => 'replace', 'text' => '<pre>$1</pre>'),\n+\t\t\t\t'quote' => array('type' => 'replace', 'text' => '<div class=\"quote\">$1</div>')\n+\t\t\t);\n+\t\t}\n \n+\n+\t\tpublic function convertQuotes($string) {\n+\t\t\t$this->__buildReplacements();\n+\t\t\tforeach ($this->__replacement as $trigger => $replacement) {\n+\t\t\t\t$result = $this->__handleLinks($string, $trigger);\n+\t\t\t\tif (!$result) return 'Malformed syntax.';\n+\t\t\t}\n \t\t\treturn $string;\n \t\t}\n+\n+\t\tprivate function __handleLinks(&$string, $trigger) {\n+\t\t\t$opening = preg_match('%\\[' . $trigger . '\\]%isU', $string, $opening_matches, PREG_OFFSET_CAPTURE);\n+\t\t\t$closing = preg_match('%\\[/' . $trigger . '\\]%isU', $string, $closing_matches, PREG_OFFSET_CAPTURE);\n+\t\t\t$opening_len = strlen($trigger) + 2;\n+\t\t\t$closing_len = $opening_len + 1;\n+\t\t\tif ((count($opening) !== count($closing))) return false;\n+\t\t\t$pairs = array();\n+\t\t\t$rearrangedTags = array();\n+\t\t\tforeach ($opening_matches as $opening_tag) {\n+\t\t\t\t$rearrangedTags[$opening_tag[1]] = 'open';\n+\t\t\t}\n+\t\t\tforeach ($closing_matches as $closing_tag) {\n+\t\t\t\t$rearrangedTags[$closing_tag[1]] = 'close';\n+\t\t\t}\n+\t\t\tforeach ($opening_matches as $opening_tag) {\n+\t\t\t\t$counter = 1;\n+\t\t\t\tforeach ($rearrangedTags as $pos => $type) {\n+\t\t\t\t\tif ($opening_tag[1] == $pos) continue;\n+\t\t\t\t\tif ($type == 'close') $counter--;\n+\t\t\t\t\telse $counter++;\n+\t\t\t\t\tif ($counter == 0) {\n+\t\t\t\t\t\t$pairs[] = array($opening_tag[1], $pos);\n+\t\t\t\t\t\tcontinue 2;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tforeach ($pairs as $pair) {\n+\t\t\t\t$temp = substr($string, 0, $pair[0]);\n+\t\t\t\tif ($this->__replacement[$trigger]['type'] == 'url') {\n+\t\t\t\t\t$data = substr($string, $pair[0] + $opening_len, $pair[1] - ($pair[0] + $opening_len));\n+\t\t\t\t\tif (empty($data)) {\n+\t\t\t\t\t\t$replacement = '';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (!is_numeric($data) && ($trigger == 'event' || $trigger == 'thread')) {\n+\t\t\t\t\t\t\t$replacement = '%MALFORMED URL%';\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (filter_var(str_replace('$1', $data, $this->__replacement[$trigger]['url']), FILTER_VALIDATE_URL)) {\n+\t\t\t\t\t\t\t\t$replacement = $this->Html->link(\n+\t\t\t\t\t\t\t\t\tstr_replace('$1', $data, $this->__replacement[$trigger]['text']),\n+\t\t\t\t\t\t\t\t\tstr_replace('$1', $data, $this->__replacement[$trigger]['url'])\n+\t\t\t\t\t\t\t\t);\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t$replacement = '%MALFORMED URL%';\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\t$data = substr($string, $pair[0] + $opening_len, $pair[1] - ($pair[0] + $opening_len));\n+\t\t\t\t\tif (empty($data)) {\n+\t\t\t\t\t\t$replacement = '';\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t$replacement = str_replace('$1', $data, $this->__replacement[$trigger]['text']);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\t$temp .= $replacement;\n+\t\t\t\t$temp .= substr($string, $pair[1] + $closing_len, strlen($string));\n+\t\t\t\t$string = $temp;\n+\t\t\t}\n+\t\t\treturn true;\n+\t\t}\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1da14f0253b2d853603bfb10e0c2b92aa27ecb6a",
            "date": "2025-01-13T07:57:22Z",
            "author_login": "iglocska"
          },
          {
            "sha": "439433b405ca829f33bf886e788be84c0870b6dc",
            "date": "2025-01-10T16:37:30Z",
            "author_login": "rubentroncon"
          },
          {
            "sha": "cd6d87caa2db4b6bbe65d7cdc2bd8d84bc7f0705",
            "date": "2025-01-10T13:37:21Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "9fd8c3f8d8ba83c31614b8f0614e50be4284147f",
            "date": "2025-01-10T09:35:18Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "7c23b9d94726723a38cfd48e5f6b2555f75c05fb",
            "date": "2025-01-10T09:43:37Z",
            "author_login": "chrisr3d"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "app/View/Helper/CommandHelper.php in MISP before 2.4.79 has persistent XSS via comments. It only impacts the users of the same instance because the comment field is not part of the MISP synchronisation.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-08-24T19:29:00.250",
    "last_modified": "2024-11-21T03:11:23.800",
    "fix_date": "2017-08-24T09:25:32Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/100533",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/100533",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:05.115821",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "MISP",
    "owner": "MISP",
    "created_at": "2013-02-07T17:10:34Z",
    "updated_at": "2025-01-14T10:15:41Z",
    "pushed_at": "2025-01-13T08:23:44Z",
    "size": 158555,
    "stars": 5471,
    "forks": 1421,
    "open_issues": 2637,
    "watchers": 5471,
    "has_security_policy": false,
    "default_branch": "2.5",
    "protected_branches": [
      "2.4",
      "3.x"
    ],
    "languages": {
      "PHP": 9033432,
      "JavaScript": 1901843,
      "Python": 401628,
      "CSS": 156405,
      "Shell": 105142,
      "Perl": 6169,
      "Makefile": 759
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 231
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:59:29.252533"
  }
}