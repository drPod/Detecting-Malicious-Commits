{
  "cve_id": "CVE-2017-14040",
  "github_data": {
    "repository": "uclouvain/openjpeg",
    "fix_commit": "2cd30c2b06ce332dede81cccad8b334cde997281",
    "related_commits": [
      "2cd30c2b06ce332dede81cccad8b334cde997281",
      "2cd30c2b06ce332dede81cccad8b334cde997281"
    ],
    "patch_url": "https://github.com/uclouvain/openjpeg/commit/2cd30c2b06ce332dede81cccad8b334cde997281.patch",
    "fix_commit_details": {
      "sha": "2cd30c2b06ce332dede81cccad8b334cde997281",
      "commit_date": "2017-08-17T09:47:40Z",
      "author": {
        "login": "rouault",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "tgatoimage(): avoid excessive memory allocation attempt, and fixes unaligned load (#995)",
        "length": 88,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 27,
        "deletions": 12
      },
      "files": [
        {
          "filename": "src/bin/jp2/convert.c",
          "status": "modified",
          "additions": 27,
          "deletions": 12,
          "patch": "@@ -580,13 +580,10 @@ struct tga_header {\n };\n #endif /* INFORMATION_ONLY */\n \n-static unsigned short get_ushort(const unsigned char *data)\n+/* Returns a ushort from a little-endian serialized value */\n+static unsigned short get_tga_ushort(const unsigned char *data)\n {\n-    unsigned short val = *(const unsigned short *)data;\n-#ifdef OPJ_BIG_ENDIAN\n-    val = ((val & 0xffU) << 8) | (val >> 8);\n-#endif\n-    return val;\n+    return data[0] | (data[1] << 8);\n }\n \n #define TGA_HEADER_SIZE 18\n@@ -613,17 +610,17 @@ static int tga_readheader(FILE *fp, unsigned int *bits_per_pixel,\n     id_len = tga[0];\n     /*cmap_type = tga[1];*/\n     image_type = tga[2];\n-    /*cmap_index = get_ushort(&tga[3]);*/\n-    cmap_len = get_ushort(&tga[5]);\n+    /*cmap_index = get_tga_ushort(&tga[3]);*/\n+    cmap_len = get_tga_ushort(&tga[5]);\n     cmap_entry_size = tga[7];\n \n \n #if 0\n-    x_origin = get_ushort(&tga[8]);\n-    y_origin = get_ushort(&tga[10]);\n+    x_origin = get_tga_ushort(&tga[8]);\n+    y_origin = get_tga_ushort(&tga[10]);\n #endif\n-    image_w = get_ushort(&tga[12]);\n-    image_h = get_ushort(&tga[14]);\n+    image_w = get_tga_ushort(&tga[12]);\n+    image_h = get_tga_ushort(&tga[14]);\n     pixel_depth = tga[16];\n     image_desc  = tga[17];\n \n@@ -817,6 +814,24 @@ opj_image_t* tgatoimage(const char *filename, opj_cparameters_t *parameters)\n         color_space = OPJ_CLRSPC_SRGB;\n     }\n \n+    /* If the declared file size is > 10 MB, check that the file is big */\n+    /* enough to avoid excessive memory allocations */\n+    if (image_height != 0 && image_width > 10000000 / image_height / numcomps) {\n+        char ch;\n+        OPJ_UINT64 expected_file_size =\n+            (OPJ_UINT64)image_width * image_height * numcomps;\n+        long curpos = ftell(f);\n+        if (expected_file_size > (OPJ_UINT64)INT_MAX) {\n+            expected_file_size = (OPJ_UINT64)INT_MAX;\n+        }\n+        fseek(f, (long)expected_file_size - 1, SEEK_SET);\n+        if (fread(&ch, 1, 1, f) != 1) {\n+            fclose(f);\n+            return NULL;\n+        }\n+        fseek(f, curpos, SEEK_SET);\n+    }\n+\n     subsampling_dx = parameters->subsampling_dx;\n     subsampling_dy = parameters->subsampling_dy;\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eb25a5ec777ff6699f4bb1187740467dcfa64dd6",
            "date": "2024-12-09T16:48:54Z",
            "author_login": "rouault"
          },
          {
            "sha": "672ecbb10a8b74f6723e2e9bf062ac0f10625f98",
            "date": "2024-12-09T16:37:23Z",
            "author_login": "rouault"
          },
          {
            "sha": "210a8a5690d0da66f02d49420d7176a21ef409dc",
            "date": "2024-12-09T16:31:23Z",
            "author_login": "rouault"
          },
          {
            "sha": "e2cf50f68a51f4bbe09c400d8bcfb522e9f2bef2",
            "date": "2024-12-09T16:31:02Z",
            "author_login": "rouault"
          },
          {
            "sha": "4e3412d0a0777a12fddf0b469fd09771a2678bad",
            "date": "2024-12-09T16:27:18Z",
            "author_login": "rouault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-787",
    "description": "An invalid write access was discovered in bin/jp2/convert.c in OpenJPEG 2.2.0, triggering a crash in the tgatoimage function. The vulnerability may lead to remote denial of service or possibly unspecified other impact.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2017-08-30T22:29:00.250",
    "last_modified": "2024-11-21T03:12:02.237",
    "fix_date": "2017-08-17T09:47:40Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-4013",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/100553",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blogs.gentoo.org/ago/2017/08/28/openjpeg-invalid-memory-write-in-tgatoimage-convert-c/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/commit/2cd30c2b06ce332dede81cccad8b334cde997281",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/issues/995",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-4013",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/100553",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blogs.gentoo.org/ago/2017/08/28/openjpeg-invalid-memory-write-in-tgatoimage-convert-c/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/commit/2cd30c2b06ce332dede81cccad8b334cde997281",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/uclouvain/openjpeg/issues/995",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.333946",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openjpeg",
    "owner": "uclouvain",
    "created_at": "2015-02-15T15:04:29Z",
    "updated_at": "2025-01-14T10:29:19Z",
    "pushed_at": "2024-12-09T16:48:56Z",
    "size": 135125,
    "stars": 995,
    "forks": 463,
    "open_issues": 333,
    "watchers": 995,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 3036412,
      "C++": 338909,
      "CMake": 114732,
      "Java": 94066,
      "Shell": 36099,
      "Python": 11488,
      "Inno Setup": 1876,
      "HTML": 1412,
      "Makefile": 352
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:56.605469"
  }
}