{
  "cve_id": "CVE-2017-14727",
  "github_data": {
    "repository": "weechat/weechat",
    "fix_commit": "f105c6f0b56fb5687b2d2aedf37cb1d1b434d556",
    "related_commits": [
      "f105c6f0b56fb5687b2d2aedf37cb1d1b434d556",
      "f105c6f0b56fb5687b2d2aedf37cb1d1b434d556"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f105c6f0b56fb5687b2d2aedf37cb1d1b434d556",
      "commit_date": "2017-09-23T07:36:09Z",
      "author": {
        "login": "flashcode",
        "type": "User",
        "stats": {
          "total_commits": 11532,
          "average_weekly_commits": 10.342600896860986,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1036
        }
      },
      "commit_message": {
        "title": "logger: call strftime before replacing buffer local variables",
        "length": 61,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 95,
        "additions": 51,
        "deletions": 44
      },
      "files": [
        {
          "filename": "ChangeLog.adoc",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -15,6 +15,13 @@ https://weechat.org/files/releasenotes/ReleaseNotes-devel.html[release notes]\n (file _ReleaseNotes.adoc_ in sources).\n \n \n+[[v1.9.1]]\n+== Version 1.9.1 (under dev)\n+\n+Bug fixes::\n+\n+  * logger: call strftime before replacing buffer local variables\n+\n [[v1.9]]\n == Version 1.9 (2017-06-25)\n "
        },
        {
          "filename": "src/plugins/logger/logger.c",
          "status": "modified",
          "additions": 44,
          "deletions": 44,
          "patch": "@@ -295,71 +295,71 @@ logger_get_mask_for_buffer (struct t_gui_buffer *buffer)\n char *\n logger_get_mask_expanded (struct t_gui_buffer *buffer, const char *mask)\n {\n-    char *mask2, *mask_decoded, *mask_decoded2, *mask_decoded3, *mask_decoded4;\n-    char *mask_decoded5;\n+    char *mask2, *mask3, *mask4, *mask5, *mask6, *mask7;\n     const char *dir_separator;\n     int length;\n     time_t seconds;\n     struct tm *date_tmp;\n \n     mask2 = NULL;\n-    mask_decoded = NULL;\n-    mask_decoded2 = NULL;\n-    mask_decoded3 = NULL;\n-    mask_decoded4 = NULL;\n-    mask_decoded5 = NULL;\n+    mask3 = NULL;\n+    mask4 = NULL;\n+    mask5 = NULL;\n+    mask6 = NULL;\n+    mask7 = NULL;\n \n     dir_separator = weechat_info_get (\"dir_separator\", \"\");\n     if (!dir_separator)\n         return NULL;\n \n+    /* replace date/time specifiers in mask */\n+    length = strlen (mask) + 256 + 1;\n+    mask2 = malloc (length);\n+    if (!mask2)\n+        goto end;\n+    seconds = time (NULL);\n+    date_tmp = localtime (&seconds);\n+    mask2[0] = '\\0';\n+    if (strftime (mask2, length - 1, mask, date_tmp) == 0)\n+        mask2[0] = '\\0';\n+\n     /*\n      * we first replace directory separator (commonly '/') by \\01 because\n      * buffer mask can contain this char, and will be replaced by replacement\n      * char ('_' by default)\n      */\n-    mask2 = weechat_string_replace (mask, dir_separator, \"\\01\");\n-    if (!mask2)\n+    mask3 = weechat_string_replace (mask2, dir_separator, \"\\01\");\n+    if (!mask3)\n         goto end;\n \n-    mask_decoded = weechat_buffer_string_replace_local_var (buffer, mask2);\n-    if (!mask_decoded)\n+    mask4 = weechat_buffer_string_replace_local_var (buffer, mask3);\n+    if (!mask4)\n         goto end;\n \n-    mask_decoded2 = weechat_string_replace (mask_decoded,\n-                                            dir_separator,\n-                                            weechat_config_string (logger_config_file_replacement_char));\n-    if (!mask_decoded2)\n+    mask5 = weechat_string_replace (mask4,\n+                                    dir_separator,\n+                                    weechat_config_string (logger_config_file_replacement_char));\n+    if (!mask5)\n         goto end;\n \n #ifdef __CYGWIN__\n-    mask_decoded3 = weechat_string_replace (mask_decoded2, \"\\\\\",\n-                                            weechat_config_string (logger_config_file_replacement_char));\n+    mask6 = weechat_string_replace (mask5, \"\\\\\",\n+                                    weechat_config_string (logger_config_file_replacement_char));\n #else\n-    mask_decoded3 = strdup (mask_decoded2);\n+    mask6 = strdup (mask5);\n #endif /* __CYGWIN__ */\n-    if (!mask_decoded3)\n+    if (!mask6)\n         goto end;\n \n     /* restore directory separator */\n-    mask_decoded4 = weechat_string_replace (mask_decoded3,\n-                                            \"\\01\", dir_separator);\n-    if (!mask_decoded4)\n-        goto end;\n-\n-    /* replace date/time specifiers in mask */\n-    length = strlen (mask_decoded4) + 256 + 1;\n-    mask_decoded5 = malloc (length);\n-    if (!mask_decoded5)\n+    mask7 = weechat_string_replace (mask6,\n+                                    \"\\01\", dir_separator);\n+    if (!mask7)\n         goto end;\n-    seconds = time (NULL);\n-    date_tmp = localtime (&seconds);\n-    mask_decoded5[0] = '\\0';\n-    strftime (mask_decoded5, length - 1, mask_decoded4, date_tmp);\n \n     /* convert to lower case? */\n     if (weechat_config_boolean (logger_config_file_name_lower_case))\n-        weechat_string_tolower (mask_decoded5);\n+        weechat_string_tolower (mask7);\n \n     if (weechat_logger_plugin->debug)\n     {\n@@ -368,22 +368,22 @@ logger_get_mask_expanded (struct t_gui_buffer *buffer, const char *mask)\n                                   \"decoded mask = \\\"%s\\\"\",\n                                   LOGGER_PLUGIN_NAME,\n                                   weechat_buffer_get_string (buffer, \"name\"),\n-                                  mask, mask_decoded5);\n+                                  mask, mask7);\n     }\n \n end:\n     if (mask2)\n         free (mask2);\n-    if (mask_decoded)\n-        free (mask_decoded);\n-    if (mask_decoded2)\n-        free (mask_decoded2);\n-    if (mask_decoded3)\n-        free (mask_decoded3);\n-    if (mask_decoded4)\n-        free (mask_decoded4);\n-\n-    return mask_decoded5;\n+    if (mask3)\n+        free (mask3);\n+    if (mask4)\n+        free (mask4);\n+    if (mask5)\n+        free (mask5);\n+    if (mask6)\n+        free (mask6);\n+\n+    return mask7;\n }\n \n /*"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "04aea1bcb5b6f1e3e6e1253f92772fa6c2f4f939",
            "date": "2025-01-22T22:26:22Z",
            "author_login": "luk1337"
          },
          {
            "sha": "4b7be27028dac22b3ec6703c53c7bc154a0cb2b0",
            "date": "2025-01-26T07:48:51Z",
            "author_login": "flashcode"
          },
          {
            "sha": "68c70e55389bcd7a39ebec13cd9645a09b7f6a99",
            "date": "2025-01-22T22:37:56Z",
            "author_login": "luk1337"
          },
          {
            "sha": "865dd61d313d0b1eb89f881408d3e5a520873f12",
            "date": "2025-01-25T20:30:47Z",
            "author_login": "weechatter"
          },
          {
            "sha": "b53f3c2db8faa52094707cffa776401d1719fa39",
            "date": "2025-01-25T16:06:10Z",
            "author_login": "flashcode"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "logger.c in the logger plugin in WeeChat before 1.9.1 allows a crash via strftime date/time specifiers, because a buffer is not initialized.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-09-23T20:29:00.577",
    "last_modified": "2024-11-21T03:13:24.550",
    "fix_date": "2017-09-23T07:36:09Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/101003",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/weechat/weechat/commit/f105c6f0b56fb5687b2d2aedf37cb1d1b434d556",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://weechat.org/download/security/",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://weechat.org/news/98/20170923-Version-1.9.1-security-release/",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/101003",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/weechat/weechat/commit/f105c6f0b56fb5687b2d2aedf37cb1d1b434d556",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://weechat.org/download/security/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://weechat.org/news/98/20170923-Version-1.9.1-security-release/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:07.395928",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "weechat",
    "owner": "weechat",
    "created_at": "2014-03-03T08:08:02Z",
    "updated_at": "2025-01-25T20:31:09Z",
    "pushed_at": "2025-01-25T20:31:05Z",
    "size": 244051,
    "stars": 3021,
    "forks": 332,
    "open_issues": 430,
    "watchers": 3021,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "C": 10033665,
      "C++": 2140831,
      "Python": 205278,
      "CMake": 137199,
      "Shell": 27681,
      "PHP": 15699,
      "Makefile": 1174
    },
    "commit_activity": {
      "total_commits_last_year": 920,
      "avg_commits_per_week": 17.692307692307693,
      "days_active_last_year": 210
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:46:22.096393"
  }
}