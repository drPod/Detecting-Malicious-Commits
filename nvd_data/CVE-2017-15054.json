{
  "cve_id": "CVE-2017-15054",
  "github_data": {
    "repository": "nilsteampassnet/TeamPass",
    "fix_commit": "9811c9d453da4bd1101ff7033250d1fbedf101fc",
    "related_commits": [
      "9811c9d453da4bd1101ff7033250d1fbedf101fc",
      "9811c9d453da4bd1101ff7033250d1fbedf101fc"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9811c9d453da4bd1101ff7033250d1fbedf101fc",
      "commit_date": "2017-10-02T19:27:30Z",
      "author": {
        "login": "nilsteampassnet",
        "type": "User",
        "stats": {
          "total_commits": 2012,
          "average_weekly_commits": 2.9415204678362574,
          "total_additions": 5301385,
          "total_deletions": 4813706,
          "weeks_active": 411
        }
      },
      "commit_message": {
        "title": "2.1.27",
        "length": 107,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 400,
        "additions": 294,
        "deletions": 106
      },
      "files": [
        {
          "filename": "admin.settings.load.php",
          "status": "modified",
          "additions": 18,
          "deletions": 7,
          "patch": "@@ -252,7 +252,10 @@ function LaunchAdminActions(action, option)\n     if (action === \"admin_action_db_backup\") {\n         option = $(\"#result_admin_action_db_backup_key\").val();\n     } else if (action === \"admin_action_db_restore\") {\n-        $(\"#restore_bck_encryption_key_dialog_error\").html(\"\").hide();\n+        $(\"#restore_bck_encryption_key_dialog_error\")\n+            .html(\"<span class='fa fa-cog fa-spin fa'>&nbsp;</span><?php echo addslashes($LANG['please_wait']); ?>\")\n+            .attr(\"class\",\"ui-corner-all ui-state-focus\")\n+            .show();\n     } else if (action === \"admin_action_backup_decrypt\") {\n         option = $(\"#bck_script_decrypt_file\").val();\n     } else if (action === \"admin_action_change_salt_key\") {\n@@ -293,6 +296,7 @@ function LaunchAdminActions(action, option)\n         // convert to json string\n         option = prepareExchangedData(JSON.stringify(option) , \"encode\", \"<?php echo $_SESSION['key']; ?>\");\n     }\n+\n     //Lauchn ajax query\n     $.post(\n         \"sources/admin.queries.php\",\n@@ -309,7 +313,10 @@ function(data) {\n                     $(\"#result_admin_action_check_pf\").html(\"<span class='fa fa-check mi-green'></span>\").show();\n                 } else if (data[0].result == \"db_restore\") {\n                     if (data[0].message !== \"\") {\n-                        $(\"#restore_bck_encryption_key_dialog_error\").html(data[0].message).show();\n+                        $(\"#restore_bck_encryption_key_dialog_error\")\n+                            .html(data[0].message)\n+                            .attr(\"class\",\"ui-corner-all ui-state-error\")\n+                            .show();\n                     } else {\n                         $(\"#restore_bck_encryption_key_dialog\").dialog(\"close\");\n                         $(\"#result_admin_action_db_restore\").html(\"<span class='fa fa-check mi-green'></span>\").show();\n@@ -834,6 +841,7 @@ function(data) {\n     });\n \n     // SQL IMPORT FOR RESTORING\n+    var restore_operation_id = '';\n     var uploader_restoreDB = new plupload.Uploader({\n         runtimes : \"gears,html5,flash,silverlight,browserplus\",\n         browse_button : \"pickfiles_restoreDB\",\n@@ -876,17 +884,15 @@ function(data) {\n             BeforeUpload: function (up, file) {\n                 $(\"#import_status_ajax_loader\").show();\n                 up.settings.multipart_params = {\n-                    \"PHPSESSID\":\"'.$_SESSION['user_id'].'\",\n+                    \"PHPSESSID\":\"<?php echo $_SESSION['user_id']; ?>\",\n                     \"File\":file.name,\n                     \"type_upload\":\"restore_db\",\n                     \"user_token\": $(\"#user_token\").val()\n                 };\n             },\n             UploadComplete: function(up, files) {\n-                $.each(files, function(i, file) {\n-                    $(\"#restore_bck_fileObj\").val(file.name);\n-                    $(\"#restore_bck_encryption_key_dialog\").dialog(\"open\");\n-                });\n+                $(\"#restore_bck_fileObj\").val(restore_operation_id);\n+                $(\"#restore_bck_encryption_key_dialog\").dialog(\"open\");\n             }\n         }\n     });\n@@ -905,6 +911,11 @@ function(data) {\n     uploader_restoreDB.bind(\"+\", function(up, file) {\n         $(\"#\" + file.id + \" b\").html(\"100%\");\n     });\n+    uploader_restoreDB.bind('FileUploaded', function(upldr, file, object) {\n+        var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n+\n+        restore_operation_id = myData.operation_id;\n+    });\n     // Load CSV click\n     $(\"#uploadfiles_restoreDB\").click(function(e) {\n         uploader_restoreDB.start();"
        },
        {
          "filename": "admin.settings.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1618,6 +1618,6 @@\n <div id=\"restore_bck_encryption_key_dialog\" style=\"display:none; text-align:center;\">\n     <input id=\"restore_bck_encryption_key\" name=\"restore_bck_encryption_key\" type=\"text\" value=\"\" />\n     <br>\n-    <div class=ui-state-error ui-corner-all\" style=\"display:none;padding:5px;display:none;margin:2px;\" id=\"restore_bck_encryption_key_dialog_error\"></div>\n+    <div class=\"ui-state-error ui-corner-all\" style=\"display:none;padding:5px;display:none;margin:2px;\" id=\"restore_bck_encryption_key_dialog_error\"></div>\n </div>';\n include \"admin.settings.load.php\";"
        },
        {
          "filename": "api/functions.php",
          "status": "modified",
          "additions": 89,
          "deletions": 26,
          "patch": "@@ -188,16 +188,16 @@ function rest_delete()\n                     for ($i = count($array_category); $i > 0; $i--) {\n                         $slot = $i - 1;\n                         if (!$slot) {\n-                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[$slot].\"' AND parent_id = 0\";\n+                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).\"' AND parent_id = 0\";\n                         } else {\n-                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[$slot].\"' AND parent_id = (\";\n+                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).\"' AND parent_id = (\";\n                         }\n                     }\n                     for ($i = 1; $i < count($array_category); $i++) {\n                         $category_query .= \")\";\n                     }\n                 } elseif (count($array_category) == 1) {\n-                    $category_query = \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[0].\"' AND parent_id = 0\";\n+                    $category_query = \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[0], FILTER_SANITIZE_STRING).\"' AND parent_id = 0\";\n                 } else {\n                     rest_error('NO_CATEGORY');\n                 }\n@@ -236,22 +236,22 @@ function rest_delete()\n                     for ($i = count($array_category); $i > 0; $i--) {\n                         $slot = $i - 1;\n                         if (!$slot) {\n-                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[$slot].\"' AND parent_id = 0\";\n+                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).\"' AND parent_id = 0\";\n                         } else {\n-                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[$slot].\"' AND parent_id = (\";\n+                            $category_query .= \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).\"' AND parent_id = (\";\n                         }\n                     }\n                     for ($i = 1; $i < count($array_category); $i++) {\n                         $category_query .= \")\";\n                     }\n                 } elseif (count($array_category) == 1) {\n-                    $category_query = \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".$array_category[0].\"' AND parent_id = 0\";\n+                    $category_query = \"select id from \".prefix_table(\"nested_tree\").\" where title LIKE '\".filter_var($array_category[0], FILTER_SANITIZE_STRING).\"' AND parent_id = 0\";\n                 } else {\n                     rest_error('NO_CATEGORY');\n                 }\n \n                 // Delete item\n-                $response = DB::delete(prefix_table(\"items\"), \"id_tree = (\".$category_query.\") and label LIKE '\".$item.\"'\");\n+                $response = DB::delete(prefix_table(\"items\"), \"id_tree = (\".$category_query.\") and label LIKE '\".filter_var($item, FILTER_SANITIZE_STRING).\"'\");\n                 $json['type'] = 'item';\n                 $json['item'] = $item;\n                 $json['category'] = $GLOBALS['request'][2];\n@@ -382,7 +382,12 @@ function rest_get()\n                 if (strcmp($username, \"admin\") == 0) {\n                     // forbid admin access\n                 }\n-                $response = DB::query(\"SELECT fonction_id FROM \".prefix_table(\"users\").\" WHERE login='\".$username.\"'\");\n+                $response = DB::query(\n+                    \"SELECT fonction_id\n+                    FROM \".prefix_table(\"users\").\"\n+                    WHERE login = %s'\",\n+                    $username\n+                );\n                 if (count($response) === 0) {\n                     rest_error('USER_NOT_EXISTS');\n                 }\n@@ -392,7 +397,12 @@ function rest_get()\n                 $folder_arr = array();\n                 $roles = explode(\";\", $role_str);\n                 foreach ($roles as $role) {\n-                    $response = DB::query(\"SELECT folder_id FROM \".prefix_table(\"roles_values\").\" WHERE role_id='\".$role.\"'\");\n+                    $response = DB::query(\n+                        \"SELECT folder_id\n+                        FROM \".prefix_table(\"roles_values\").\"\n+                        WHERE role_id = %i\",\n+                        $role\n+                    );\n                     foreach ($response as $data) {\n                         $folder_id = $data['folder_id'];\n                         if (!array_key_exists($folder_id, $folder_arr)) {\n@@ -456,7 +466,12 @@ function rest_get()\n                 if (strcmp($username, \"admin\") == 0) {\n                     // forbid admin access\n                 }\n-                $response = DB::query(\"SELECT fonction_id FROM \".prefix_table(\"users\").\" WHERE login='\".$username.\"'\");\n+                $response = DB::query(\n+                    \"SELECT fonction_id\n+                    FROM \".prefix_table(\"users\").\"\n+                    WHERE login = %s\",\n+                    $username\n+                );\n                 if (count($response) === 0) {\n                     rest_error('USER_NOT_EXISTS');\n                 }\n@@ -468,13 +483,23 @@ function rest_get()\n                 $roles = explode(\";\", $role_str);\n                 $inc = 0;\n                 foreach ($roles as $role) {\n-                    $response = DB::query(\"SELECT folder_id, type FROM \".prefix_table(\"roles_values\").\" WHERE role_id='\".$role.\"'\");\n+                    $response = DB::query(\n+                        \"SELECT folder_id, type\n+                        FROM \".prefix_table(\"roles_values\").\"\n+                        WHERE role_id = %i\",\n+                        $role\n+                    );\n                     foreach ($response as $data) {\n                         $folder_id = $data['folder_id'];\n                         if (!array_key_exists($folder_id, $folder_arr)) {\n                             array_push($folder_arr, $folder_id);\n \n-                            $response2 = DB::queryFirstRow(\"SELECT title, nlevel FROM \".prefix_table(\"nested_tree\").\" WHERE id='\".$folder_id.\"'\");\n+                            $response2 = DB::queryFirstRow(\n+                                \"SELECT title, nlevel\n+                                FROM \".prefix_table(\"nested_tree\").\"\n+                                WHERE id = %i\",\n+                                $folder_id\n+                            );\n \n                             if (!empty($response2['title'])) {\n                                 $json[$folder_id]['id'] = $folder_id;\n@@ -667,7 +692,13 @@ function rest_get()\n                     // check if element doesn't already exist\n                     $item_duplicate_allowed = getSettingValue(\"duplicate_item\");\n                     if ($item_duplicate_allowed !== \"1\") {\n-                        DB::query(\"SELECT * FROM \".prefix_table(\"items\").\" WHERE label = %s AND inactif = %i\", addslashes($item_label), \"0\");\n+                        DB::query(\n+                            \"SELECT *\n+                            FROM \".prefix_table(\"items\").\"\n+                            WHERE label = %s AND inactif = %i\",\n+                            addslashes($item_label),\n+                            \"0\"\n+                        );\n                         $counter = DB::count();\n                         if ($counter != 0) {\n                             $itemExists = 1;\n@@ -804,8 +835,9 @@ function rest_get()\n                 }\n                 // Check if user already exists\n                 $data = DB::query(\n-                    \"SELECT id, fonction_id, groupes_interdits, groupes_visibles FROM \".prefix_table(\"users\").\"\n-            WHERE login LIKE %ss\",\n+                    \"SELECT id, fonction_id, groupes_interdits, groupes_visibles\n+                    FROM \".prefix_table(\"users\").\"\n+                    WHERE login LIKE %ss\",\n                     mysqli_escape_string($link, stripslashes($login))\n                 );\n \n@@ -821,7 +853,9 @@ function rest_get()\n \n                         // get default language\n                         $lang = DB::queryFirstRow(\n-                            \"SELECT `valeur` FROM \".prefix_table(\"misc\").\" WHERE type = %s AND intitule = %s\",\n+                            \"SELECT `valeur`\n+                            FROM \".prefix_table(\"misc\").\"\n+                            WHERE type = %s AND intitule = %s\",\n                             \"admin\",\n                             \"default_language\"\n                         );\n@@ -830,7 +864,9 @@ function rest_get()\n                         $rolesList = \"\";\n                         foreach (explode(',', $roles) as $role) {//echo $role.\"-\";\n                             $tmp = DB::queryFirstRow(\n-                                \"SELECT `id` FROM \".prefix_table(\"roles_title\").\" WHERE title = %s\",\n+                                \"SELECT `id`\n+                                FROM \".prefix_table(\"roles_title\").\"\n+                                WHERE title = %s\",\n                                 $role\n                             );\n                             if (empty($rolesList)) {\n@@ -944,7 +980,12 @@ function rest_get()\n                         );\n                         // if valeur = 0 then duplicate folders not allowed\n                         if ($data === 0) {\n-                            DB::query(\"SELECT * FROM \".prefix_table(\"nested_tree\").\" WHERE title = %s\", $params[0]);\n+                            DB::query(\n+                                \"SELECT *\n+                                FROM \".prefix_table(\"nested_tree\").\"\n+                                WHERE title = %s\",\n+                                $params[0]\n+                            );\n                             $counter = DB::count();\n                             if ($counter != 0) {\n                                 rest_error('ALREADY_EXISTS');\n@@ -1035,15 +1076,22 @@ function rest_get()\n                         }\n \n                         // Check Folder ID\n-                        DB::query(\"SELECT * FROM \".prefix_table(\"nested_tree\").\" WHERE id = %i\", $params[3]);\n+                        DB::query(\n+                            \"SELECT *\n+                            FROM \".prefix_table(\"nested_tree\").\"\n+                            WHERE id = %i\",\n+                            $params[3]\n+                        );\n                         $counter = DB::count();\n                         if ($counter == 0) {\n                             rest_error('NOSUCHFOLDER');\n                         }\n \n                         // check if item exists\n                         DB::query(\n-                            \"SELECT * FROM \".prefix_table(\"items\").\" WHERE id = %i\",\n+                            \"SELECT *\n+                            FROM \".prefix_table(\"items\").\"\n+                            WHERE id = %i\",\n                             $GLOBALS['request'][2]\n                         );\n                         $counter = DB::count();\n@@ -1094,7 +1142,9 @@ function rest_get()\n                                     if (!empty($tag)) {\n                                         // check if already exists\n                                         DB::query(\n-                                            \"SELECT * FROM \".prefix_table(\"tags\").\" WHERE tag = %s AND item_id = %i\",\n+                                            \"SELECT *\n+                                            FROM \".prefix_table(\"tags\").\"\n+                                            WHERE tag = %s AND item_id = %i\",\n                                             strtolower($tag),\n                                             $GLOBALS['request'][2]\n                                         );\n@@ -1163,7 +1213,12 @@ function rest_get()\n                         }\n \n                         // check if folder exists and get folder data\n-                        $data_folder = DB::queryfirstrow(\"SELECT * FROM \".prefix_table(\"nested_tree\").\" WHERE id = %s\", $GLOBALS['request'][2]);\n+                        $data_folder = DB::queryfirstrow(\n+                            \"SELECT *\n+                            FROM \".prefix_table(\"nested_tree\").\"\n+                            WHERE id = %s\",\n+                            $GLOBALS['request'][2]\n+                        );\n                         $counter = DB::count();\n                         if ($counter === 0) {\n                             rest_error('NO_DATA_EXIST');\n@@ -1252,7 +1307,9 @@ function rest_get()\n                 if (isset($GLOBALS['request'][1]) && isset($GLOBALS['request'][2])) {\n                     // is user granted?\n                     $userData = DB::queryFirstRow(\n-                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id` FROM \".$pre.\"users WHERE login = %s\",\n+                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`\n+                        FROM \".$pre.\"users\n+                        WHERE login = %s\",\n                         $GLOBALS['request'][3]\n                     );\n \n@@ -1345,7 +1402,9 @@ function rest_get()\n                     // is user granted?\n                     //db::debugMode(true);\n                     $userData = DB::queryFirstRow(\n-                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk` FROM \".$pre.\"users WHERE login = %s\",\n+                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk`\n+                        FROM \".$pre.\"users\n+                        WHERE login = %s\",\n                         $GLOBALS['request'][2]\n                     );\n \n@@ -1463,7 +1522,9 @@ function rest_get()\n                 if (isset($GLOBALS['request'][1]) && isset($GLOBALS['request'][2]) && isset($GLOBALS['request'][3])) {\n                     // is user granted?\n                     $userData = DB::queryFirstRow(\n-                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id` FROM \".$pre.\"users WHERE login = %s\",\n+                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`\n+                        FROM \".$pre.\"users\n+                        WHERE login = %s\",\n                         $GLOBALS['request'][4]\n                     );\n                     if (DB::count() == 0) {\n@@ -1596,7 +1657,9 @@ function rest_get()\n                 if (isset($GLOBALS['request'][1])) {\n                     // is user granted?\n                     $userData = DB::queryFirstRow(\n-                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk` FROM \".$pre.\"users WHERE login = %s\",\n+                        \"SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk`\n+                        FROM \".$pre.\"users\n+                        WHERE login = %s\",\n                         $GLOBALS['request'][2]\n                     );\n                     if (DB::count() == 0) {"
        },
        {
          "filename": "changelog.md",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -7,6 +7,8 @@\n  \t> a user could potentially act on Items he should not have access to\n  Securized script.backup.php by adding a security key\n  Fixed some other security failures (credit to \u200bsecurity at Amossys)\n+ Improved security regarding uploading files\n+ Fixed issue while restoring DB from administration page\n  #1945 Cannot delete items\n  #1944 File upload results in error\n  #1941 Visualisation problems"
        },
        {
          "filename": "items.import.php",
          "status": "modified",
          "additions": 10,
          "deletions": 20,
          "patch": "@@ -223,10 +223,8 @@ function(data) {\n                     };\n                 },\n                 UploadComplete: function(up, files) {\n-                    $.each(files, function(i, file) {\n-                        ImportCSV(csv_filename);\n-                        up.splice();    // clear the file queue\n-                    });\n+                    ImportCSV(csv_filename);\n+                    up.splice();    // clear the file queue\n                 }\n             }\n         });\n@@ -248,13 +246,9 @@ function(data) {\n             $(\"#\" + file.id + \" b\").html(\"100%\");\n         });\n         uploader_csv.bind('FileUploaded', function(upldr, file, object) {\n-            var myData;\n-            try {\n-                myData = eval(object.response);\n-            } catch(err) {\n-                myData = eval('(' + object.response + ')');\n-            }\n-            csv_filename = myData.newfilename;\n+            var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n+\n+            csv_filename = myData.operation_id;\n         });\n \n         // Load CSV click\n@@ -337,13 +331,9 @@ function(data) {\n             $(\"#\" + file.id + \" b\").html(\"100%\");\n         });\n         uploader_kp.bind('FileUploaded', function(upldr, file, object) {\n-            var myData;\n-            try {\n-                myData = eval(object.response);\n-            } catch(err) {\n-                myData = eval('(' + object.response + ')');\n-            }\n-            kp_filename = myData.newfilename;\n+            var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n+\n+            kp_filename = myData.operation_id;\n         });\n \n         // Load CSV click\n@@ -483,11 +473,11 @@ function(data) {\n                 $(\"#kp_import_information\").html(data[0].message + \"<?php echo '<br><br><b>'.$LANG['alert_page_will_reload'].'</b>'; ?>\");\n                 $(\"#import_information\").show().html(\"<i class='fa fa-exclamation-circle'></i>&nbsp;<?php echo $LANG['alert_message_done']; ?>\").attr(\"class\",\"ui-state-highlight\");\n                 // Reload page\n-                $(this).delay(2000).queue(function() {\n+                /*$(this).delay(2000).queue(function() {\n                     $(\"#import_information\").effect( \"fade\", \"slow\" );\n                     document.location = \"index.php?page=items\";\n                     $(this).dequeue();\n-                });\n+                });*/\n             },\n             \"json\"\n         );"
        },
        {
          "filename": "items.load.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -3361,7 +3361,7 @@ function() {\n ?>\n         init: {\n             BeforeUpload: function (up, file) {\n-                $(\"#item_upload_wait\").show();\n+                $(\"#item_upload_wait\").removeClass(\"hidden\");\n \n                 if ($(\"#random_id\").val() == \"\") {\n                     var post_id = CreateRandomString(9,\"num_no_0\");\n@@ -3470,7 +3470,7 @@ function(data) {\n ?>\n         init: {\n             BeforeUpload: function (up, file) {\n-                $(\"#item_edit_upload_wait\").show();\n+                $(\"#item_edit_upload_wait\").removeClass(\"hidden\");\n \n                 up.setOption('multipart_params', {\n                     PHPSESSID : \"<?php echo $_SESSION['user_id']; ?>\","
        },
        {
          "filename": "items.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -549,7 +549,7 @@\n         <div id=\"tabs-03\">\n             <div id=\"item_upload\">\n                 <div id=\"item_upload_list\"></div><br />\n-                <div id=\"item_upload_wait\" class=\"ui-state-focus ui-corner-all\" style=\"display:none;padding:2px;margin:5px 0 5px 0;\">'.$LANG['please_wait'].'...</div>\n+                <div id=\"item_upload_wait\" class=\"ui-state-focus ui-corner-all hidden\" style=\"padding:2px;margin:5px 0 5px 0;\">'.$LANG['please_wait'].'...</div>\n                 <a id=\"item_attach_pickfiles\" href=\"#\" class=\"button\">'.$LANG['select'].'</a>\n                 <a id=\"item_attach_uploadfiles\" href=\"#\" class=\"button\">'.$LANG['start_upload'].'</a>\n                 <input type=\"hidden\" id=\"files_number\" value=\"0\" />\n@@ -743,7 +743,7 @@\n             </div>\n             <div id=\"item_edit_upload\">\n                 <div id=\"item_edit_upload_list\"></div><br />\n-                <div id=\"item_edit_upload_wait\" class=\"ui-state-focus ui-corner-all\" style=\"display:none;padding:2px;margin:5px 0 5px 0;\">'.$LANG['please_wait'].'...</div>\n+                <div id=\"item_edit_upload_wait\" class=\"ui-state-focus ui-corner-all hidden\" style=\"padding:2px;margin:5px 0 5px 0;\">'.$LANG['please_wait'].'...</div>\n                 <a id=\"item_edit_attach_pickfiles\" href=\"#\" class=\"button\">'.$LANG['select'].'</a>\n                 <a id=\"item_edit_attach_uploadfiles\" href=\"#sd\" class=\"button\">'.$LANG['start_upload'].'</a>\n                 <input type=\"hidden\" id=\"edit_files_number\" value=\"0\" />"
        },
        {
          "filename": "profile.php",
          "status": "modified",
          "additions": 6,
          "deletions": 10,
          "patch": "@@ -260,6 +260,7 @@\n     );\n }\n ?>\n+<script type=\"text/javascript\" src=\"includes/js/functions.js\"></script>\n <script type=\"text/javascript\">\n $(function() {\n     $(\".tip\").tooltipster({multiple: true});\n@@ -424,7 +425,6 @@ function(data) {\n \n                 up.settings.multipart_params = {\n                     \"PHPSESSID\":\"<?php echo $_SESSION['user_id']; ?>\",\n-                    \"newFileName\":\"user<?php echo $_SESSION['user_id']; ?>\"+tmp,\n                     \"type_upload\":\"upload_profile_photo\",\n                     \"user_token\": $(\"#profile_user_token\").val()\n                 };\n@@ -450,12 +450,10 @@ function(data) {\n \n      // get response\n     uploader_photo.bind(\"FileUploaded\", function(up, file, object) {\n-        var myData;\n-        try {\n-            myData = eval(object.response);\n-        } catch(err) {\n-            myData = eval('(' + object.response + ')');\n-        }\n+        // Decode returned data\n+        var myData = prepareExchangedData(object.response, \"decode\", \"<?php echo $_SESSION['key']; ?>\");\n+\n+        // update form\n         $(\"#profile_photo\").html('<img src=\"includes/avatars/'+myData.filename+'\" />');\n         $(\"#user_avatar_thumb\").attr('src', 'includes/avatars/'+myData.filename_thumb);\n         $(\"#filelist_photo\").html('').hide();\n@@ -718,7 +716,5 @@ function(data){\n             }\n         }\n     );\n-\n-\n }\n- </script>\n\\ No newline at end of file\n+</script>"
        },
        {
          "filename": "sources/admin.queries.php",
          "status": "modified",
          "additions": 19,
          "deletions": 2,
          "patch": "@@ -392,6 +392,23 @@\n         $file = htmlspecialchars($dataPost[0]);\n         $key = htmlspecialchars($dataPost[1]);\n \n+        // Get filename from database\n+        $data = DB::queryFirstRow(\n+            \"SELECT valeur\n+            FROM \".$pre.\"misc\n+            WHERE increment_id = %i\",\n+            $file\n+        );\n+\n+        $file = $data['valeur'];\n+\n+        // Delete operation id\n+        DB::delete(\n+            prefix_table('misc'),\n+            \"increment_id = %i\",\n+            $file\n+        );\n+\n         // Undecrypt the file\n         if (empty($key) === false) {\n             // Decrypt the file\n@@ -432,7 +449,7 @@\n         fileDelete($file);\n \n         //Show done\n-        echo '[{\"result\":\"db_restore\"}]';\n+        echo '[{\"result\":\"db_restore\" , \"message\":\"\"}]';\n         break;\n \n     ###########################################################\n@@ -483,7 +500,7 @@\n         }\n \n         //Show done\n-        echo '[{\"result\":\"db_optimize\"}]';\n+        echo '[{\"result\":\"db_optimize\" , \"message\":\"\"}]';\n         break;\n \n     ###########################################################"
        },
        {
          "filename": "sources/import.queries.php",
          "status": "modified",
          "additions": 42,
          "deletions": 3,
          "patch": "@@ -105,9 +105,26 @@ function sanitiseString($str, $crLFReplacement)\n         //load full tree\n         $tree->rebuild();\n         $tree = $tree->getDescendants();\n+       // Init post variable\n+        $post_operation_id = filter_input(INPUT_POST, 'file', FILTER_SANITIZE_NUMBER_INT);\n+\n+        // Get filename from database\n+        $data = DB::queryFirstRow(\n+            \"SELECT valeur\n+            FROM \".$pre.\"misc\n+            WHERE increment_id = %i\",\n+            $post_operation_id\n+        );\n+\n+        // Delete operation id\n+        DB::delete(\n+            prefix_table('misc'),\n+            \"increment_id = %i\",\n+            $post_operation_id\n+        );\n \n         // do some initializations\n-        $file = $SETTINGS['path_to_files_folder'].\"/\".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING);\n+        $file = $SETTINGS['path_to_files_folder'].\"/\".$data['valeur'];\n         $size = 4096;\n         $separator = \",\";\n         $enclosure = '\"';\n@@ -237,6 +254,7 @@ function sanitiseString($str, $crLFReplacement)\n             // Show results to user.\n             echo '[{\"error\":\"no\" , \"output\" : \"'.$display.'\"}]';\n         }\n+\n         break;\n \n     //Insert into DB the items the user has selected\n@@ -376,10 +394,31 @@ function sanitiseString($str, $crLFReplacement)\n         $logFileName = \"/keepassImport_\".date('YmdHis').\".log\";\n         $cacheLogFile = fopen($SETTINGS['path_to_files_folder'].$logFileName, 'w');\n \n+        // Init post variable\n+        $post_operation_id = filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING);\n+\n+        // Get filename from database\n+        $data = DB::queryFirstRow(\n+            \"SELECT valeur\n+            FROM \".$pre.\"misc\n+            WHERE increment_id = %i\",\n+            $post_operation_id\n+        );\n+\n+        // Delete operation id\n+        DB::delete(\n+            prefix_table('misc'),\n+            \"increment_id = %i\",\n+            $post_operation_id\n+        );\n+\n+        // do some initializations\n+        $file = $data['valeur'];\n+\n         //read xml file\n-        if (file_exists(\"'\".$SETTINGS['path_to_files_folder'].\"/\".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING)).\"'\") {\n+        if (file_exists($SETTINGS['path_to_files_folder'].\"/\".$file)) {\n             $xml = simplexml_load_file(\n-                $SETTINGS['path_to_files_folder'].\"/\".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING)\n+                $SETTINGS['path_to_files_folder'].\"/\".$file\n             );\n         }\n "
        },
        {
          "filename": "sources/items.queries.php",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -452,8 +452,10 @@\n                 break;\n             }\n \n-            // Update CACHE table\n-            updateCacheTable(\"add_value\", $newID);\n+            // Add item to CACHE table if new item has been created\n+            if (isset($newID) === true) {\n+                updateCacheTable(\"add_value\", $newID);\n+            }\n \n             // Encrypt data to return\n             echo prepareExchangedData($returnValues, \"encode\");\n@@ -3387,8 +3389,10 @@\n                         \"id = %i\",\n                         $item_id\n                     );\n+\n                     // log\n                     logItems($item_id, $dataSource['label'], $_SESSION['user_id'], 'at_delete', $_SESSION['login']);\n+\n                     // Update CACHE table\n                     updateCacheTable(\"delete_value\", $item_id);\n                 }"
        },
        {
          "filename": "sources/main.functions.php",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -1286,7 +1286,7 @@ function prepareExchangedData($data, $type)\n     //load ClassLoader\n     require_once $SETTINGS['cpassman_dir'].'/sources/SplClassLoader.php';\n     //Load AES\n-    $aes = new SplClassLoader('Encryption\\Crypt', '../includes/libraries');\n+    $aes = new SplClassLoader('Encryption\\Crypt', $SETTINGS['cpassman_dir'].'/includes/libraries');\n     $aes->register();\n \n     if ($type == \"encode\") {\n@@ -1372,8 +1372,11 @@ function prefix_table($table)\n  */\n function GenerateCryptKey($size = \"\", $secure = false, $numerals = false, $capitalize = false, $ambiguous = false, $symbols = false)\n {\n+    global $SETTINGS;\n+    require_once $SETTINGS['cpassman_dir'].'/sources/SplClassLoader.php';\n+\n     // load library\n-    $pwgen = new SplClassLoader('Encryption\\PwGen', '../includes/libraries');\n+    $pwgen = new SplClassLoader('Encryption\\PwGen', $SETTINGS['cpassman_dir'].'/includes/libraries');\n     $pwgen->register();\n     $pwgen = new Encryption\\PwGen\\pwgen();\n "
        },
        {
          "filename": "sources/upload/upload.files.php",
          "status": "modified",
          "additions": 92,
          "deletions": 29,
          "patch": "@@ -73,7 +73,7 @@\n             prefix_table('tokens'),\n             array(\n                 'end_timestamp' => time() + 10\n-                ),\n+            ),\n             \"user_id = %i AND token = %s\",\n             $_SESSION['user_id'],\n             $post_user_token\n@@ -310,31 +310,81 @@\n     die();\n }\n \n+// generate file name\n+$newFileName = GenerateCryptKey(40, false, true, true, false, false);\n+\n+//Connect to mysql server\n+require_once '../../includes/config/settings.php';\n+require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';\n+$pass = defuse_return_decrypted($pass);\n+DB::$host = $server;\n+DB::$user = $user;\n+DB::$password = $pass;\n+DB::$dbName = $database;\n+DB::$port = $port;\n+DB::$encoding = $encoding;\n+DB::$error_handler = true;\n+$link = mysqli_connect($server, $user, $pass, $database, $port);\n+$link->set_charset($encoding);\n \n if (null !== ($post_type_upload)\n     && empty($post_type_upload) === false\n     && $post_type_upload === \"import_items_from_csv\"\n ) {\n-    $newFileName = time().\"_\".$_SESSION['user_id'];\n     rename(\n         $filePath,\n-        $targetDir.DIRECTORY_SEPARATOR.$newFileName\n+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.\".\".$ext\n+    );\n+\n+    // Add in DB\n+    DB::insert(\n+        prefix_table(\"misc\"),\n+        array(\n+            'type' => \"temp_file\",\n+            'intitule' => \"filename\",\n+            'valeur' => $newFileName.\".\".$ext\n+        )\n     );\n+\n+    // return info\n+    echo prepareExchangedData(\n+        array(\n+            \"operation_id\" => DB::insertId()\n+        ),\n+        \"encode\"\n+    );\n+\n+    exit();\n } elseif (null !== ($post_type_upload)\n     && $post_type_upload === \"import_items_from_keypass\"\n ) {\n-    $newFileName = time().\"_\".$_SESSION['user_id'];\n     rename(\n         $filePath,\n-        $targetDir.DIRECTORY_SEPARATOR.$newFileName\n+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.\".\".$ext\n+    );\n+\n+    // Add in DB\n+    DB::insert(\n+        prefix_table(\"misc\"),\n+        array(\n+            'type' => \"temp_file\",\n+            'intitule' => \"filename\",\n+            'valeur' => $newFileName.\".\".$ext\n+        )\n     );\n+\n+    // return info\n+    echo prepareExchangedData(\n+        array(\n+            \"operation_id\" => DB::insertId()\n+        ),\n+        \"encode\"\n+    );\n+\n+    exit();\n } elseif (null !== ($post_type_upload)\n     && $post_type_upload === \"upload_profile_photo\"\n ) {\n-    // sanitize the new file name\n-    $newFileName = preg_replace('/[^\\w\\._]+/', '_', htmlentities($post_newFileName, ENT_QUOTES));\n-    $newFileName = preg_replace('/[^'.$valid_chars_regex.'\\.]/', '', strtolower(basename($newFileName)));\n-\n     // get file extension\n     $ext = pathinfo($filePath, PATHINFO_EXTENSION);\n \n@@ -351,20 +401,6 @@\n         40\n     );\n \n-    //Connect to mysql server\n-    require_once '../../includes/config/settings.php';\n-    require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';\n-    $pass = defuse_return_decrypted($pass);\n-DB::$host = $server;\n-    DB::$user = $user;\n-    DB::$password = $pass;\n-    DB::$dbName = $database;\n-    DB::$port = $port;\n-    DB::$encoding = $encoding;\n-    DB::$error_handler = true;\n-    $link = mysqli_connect($server, $user, $pass, $database, $port);\n-    $link->set_charset($encoding);\n-\n     // get current avatar and delete it\n     $data = DB::queryFirstRow(\"SELECT avatar, avatar_thumb FROM \".$pre.\"users WHERE id=%i\", $_SESSION['user_id']);\n     fileDelete($targetDir.DIRECTORY_SEPARATOR.$data['avatar']);\n@@ -382,18 +418,45 @@\n     $_SESSION['user_avatar'] = $newFileName.'.'.$ext;\n     $_SESSION['user_avatar_thumb'] = $newFileName.\"_thumb\".'.'.$ext;\n \n-    echo '{\"filename\" : \"'.htmlentities($_SESSION['user_avatar'], ENT_QUOTES).'\" , \"filename_thumb\" : \"'.htmlentities($_SESSION['user_avatar_thumb'], ENT_QUOTES).'\"}';\n+    // return info\n+    echo prepareExchangedData(\n+        array(\n+            \"filename\" => htmlentities($_SESSION['user_avatar'], ENT_QUOTES),\n+            \"filename_thumb\" => htmlentities($_SESSION['user_avatar_thumb'], ENT_QUOTES)\n+        ),\n+        \"encode\"\n+    );\n+\n     exit();\n-} else {\n-    $newFileName = time().\"_\".$_SESSION['user_id'];\n+} elseif (null !== ($post_type_upload)\n+    && $post_type_upload === \"restore_db\"\n+) {\n     rename(\n         $filePath,\n-        $targetDir.DIRECTORY_SEPARATOR.$newFileName\n+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.\".\".$ext\n+    );\n+\n+    // Add in DB\n+    DB::insert(\n+        prefix_table(\"misc\"),\n+        array(\n+            'type' => \"temp_file\",\n+            'intitule' => \"filename\",\n+            'valeur' => $newFileName.\".\".$ext\n+        )\n     );\n+\n+    // return info\n+    echo prepareExchangedData(\n+        array(\n+            \"operation_id\" => DB::insertId()\n+        ),\n+        \"encode\"\n+    );\n+\n+    exit();\n }\n \n-// Return JSON-RPC response\n-die('{\"jsonrpc\" : \"2.0\", \"result\" : null, \"id\" : \"id\" , \"newfilename\" : \"'.$newFileName.'\"}');\n \n \n /* Handles the error output. */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aacdf6a3f2daf9b52a826d4b3d8a39873e2e2062",
            "date": "2025-01-13T17:24:23Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "eb95bc3e37f6e1f19fce98aa4c44c251f2084cd7",
            "date": "2025-01-13T17:20:31Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "9969d0ef636e28c1afcdb047aac2d2a5387b62b5",
            "date": "2025-01-12T17:29:37Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "4963736272bc4b281586f8ad4dcee70015d595b1",
            "date": "2025-01-12T17:22:24Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "b5a997952a43e4760c9eaceedfd9a7ba4a5683d2",
            "date": "2025-01-10T16:06:22Z",
            "author_login": "nilsteampassnet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-434",
    "description": "An arbitrary file upload vulnerability, present in TeamPass before 2.1.27.9, allows remote authenticated users to upload arbitrary files leading to Remote Command Execution. To exploit this vulnerability, an authenticated attacker has to tamper with parameters of a request to upload.files.php, in order to select the correct branch and be able to upload any arbitrary file. From there, it can simply access the file to execute code on the server.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-11-27T19:29:00.347",
    "last_modified": "2024-11-21T03:14:01.150",
    "fix_date": "2017-10-02T19:27:30Z"
  },
  "references": [
    {
      "url": "http://blog.amossys.fr/teampass-multiple-cve-01.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Technical Description",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nilsteampassnet/TeamPass/commit/9811c9d453da4bd1101ff7033250d1fbedf101fc",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "http://blog.amossys.fr/teampass-multiple-cve-01.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Technical Description",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nilsteampassnet/TeamPass/commit/9811c9d453da4bd1101ff7033250d1fbedf101fc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:09.752455",
    "processing_status": "enhanced"
  }
}