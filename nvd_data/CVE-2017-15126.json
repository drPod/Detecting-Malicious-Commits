{
  "cve_id": "CVE-2017-15126",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "384632e67e0829deb8015ee6ad916b180049d252",
    "related_commits": [
      "384632e67e0829deb8015ee6ad916b180049d252",
      "384632e67e0829deb8015ee6ad916b180049d252"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "384632e67e0829deb8015ee6ad916b180049d252",
      "commit_date": "2017-10-03T23:15:38Z",
      "author": {
        "login": "aagit",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "userfaultfd: non-cooperative: fix fork use after free",
        "length": 2136,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 66,
        "additions": 56,
        "deletions": 10
      },
      "files": [
        {
          "filename": "fs/userfaultfd.c",
          "status": "modified",
          "additions": 56,
          "deletions": 10,
          "patch": "@@ -588,6 +588,12 @@ static void userfaultfd_event_wait_completion(struct userfaultfd_ctx *ctx,\n \t\t\tbreak;\n \t\tif (ACCESS_ONCE(ctx->released) ||\n \t\t    fatal_signal_pending(current)) {\n+\t\t\t/*\n+\t\t\t * &ewq->wq may be queued in fork_event, but\n+\t\t\t * __remove_wait_queue ignores the head\n+\t\t\t * parameter. It would be a problem if it\n+\t\t\t * didn't.\n+\t\t\t */\n \t\t\t__remove_wait_queue(&ctx->event_wqh, &ewq->wq);\n \t\t\tif (ewq->msg.event == UFFD_EVENT_FORK) {\n \t\t\t\tstruct userfaultfd_ctx *new;\n@@ -1061,6 +1067,12 @@ static ssize_t userfaultfd_ctx_read(struct userfaultfd_ctx *ctx, int no_wait,\n \t\t\t\t\t(unsigned long)\n \t\t\t\t\tuwq->msg.arg.reserved.reserved1;\n \t\t\t\tlist_move(&uwq->wq.entry, &fork_event);\n+\t\t\t\t/*\n+\t\t\t\t * fork_nctx can be freed as soon as\n+\t\t\t\t * we drop the lock, unless we take a\n+\t\t\t\t * reference on it.\n+\t\t\t\t */\n+\t\t\t\tuserfaultfd_ctx_get(fork_nctx);\n \t\t\t\tspin_unlock(&ctx->event_wqh.lock);\n \t\t\t\tret = 0;\n \t\t\t\tbreak;\n@@ -1091,19 +1103,53 @@ static ssize_t userfaultfd_ctx_read(struct userfaultfd_ctx *ctx, int no_wait,\n \n \tif (!ret && msg->event == UFFD_EVENT_FORK) {\n \t\tret = resolve_userfault_fork(ctx, fork_nctx, msg);\n+\t\tspin_lock(&ctx->event_wqh.lock);\n+\t\tif (!list_empty(&fork_event)) {\n+\t\t\t/*\n+\t\t\t * The fork thread didn't abort, so we can\n+\t\t\t * drop the temporary refcount.\n+\t\t\t */\n+\t\t\tuserfaultfd_ctx_put(fork_nctx);\n+\n+\t\t\tuwq = list_first_entry(&fork_event,\n+\t\t\t\t\t       typeof(*uwq),\n+\t\t\t\t\t       wq.entry);\n+\t\t\t/*\n+\t\t\t * If fork_event list wasn't empty and in turn\n+\t\t\t * the event wasn't already released by fork\n+\t\t\t * (the event is allocated on fork kernel\n+\t\t\t * stack), put the event back to its place in\n+\t\t\t * the event_wq. fork_event head will be freed\n+\t\t\t * as soon as we return so the event cannot\n+\t\t\t * stay queued there no matter the current\n+\t\t\t * \"ret\" value.\n+\t\t\t */\n+\t\t\tlist_del(&uwq->wq.entry);\n+\t\t\t__add_wait_queue(&ctx->event_wqh, &uwq->wq);\n \n-\t\tif (!ret) {\n-\t\t\tspin_lock(&ctx->event_wqh.lock);\n-\t\t\tif (!list_empty(&fork_event)) {\n-\t\t\t\tuwq = list_first_entry(&fork_event,\n-\t\t\t\t\t\t       typeof(*uwq),\n-\t\t\t\t\t\t       wq.entry);\n-\t\t\t\tlist_del(&uwq->wq.entry);\n-\t\t\t\t__add_wait_queue(&ctx->event_wqh, &uwq->wq);\n+\t\t\t/*\n+\t\t\t * Leave the event in the waitqueue and report\n+\t\t\t * error to userland if we failed to resolve\n+\t\t\t * the userfault fork.\n+\t\t\t */\n+\t\t\tif (likely(!ret))\n \t\t\t\tuserfaultfd_event_complete(ctx, uwq);\n-\t\t\t}\n-\t\t\tspin_unlock(&ctx->event_wqh.lock);\n+\t\t} else {\n+\t\t\t/*\n+\t\t\t * Here the fork thread aborted and the\n+\t\t\t * refcount from the fork thread on fork_nctx\n+\t\t\t * has already been released. We still hold\n+\t\t\t * the reference we took before releasing the\n+\t\t\t * lock above. If resolve_userfault_fork\n+\t\t\t * failed we've to drop it because the\n+\t\t\t * fork_nctx has to be freed in such case. If\n+\t\t\t * it succeeded we'll hold it because the new\n+\t\t\t * uffd references it.\n+\t\t\t */\n+\t\t\tif (ret)\n+\t\t\t\tuserfaultfd_ctx_put(fork_nctx);\n \t\t}\n+\t\tspin_unlock(&ctx->event_wqh.lock);\n \t}\n \n \treturn ret;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-119",
    "description": "A use-after-free flaw was found in fs/userfaultfd.c in the Linux kernel before 4.13.6. The issue is related to the handling of fork failure when dealing with event messages. Failure to fork correctly can lead to a situation where a fork event will be removed from an already freed list of events with userfaultfd_ctx_put().",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2018-01-14T06:29:00.217",
    "last_modified": "2024-11-21T03:14:07.343",
    "fix_date": "2017-10-03T23:15:38Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=384632e67e0829deb8015ee6ad916b180049d252",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/102516",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:0676",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1062",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2017-15126",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1523481",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/384632e67e0829deb8015ee6ad916b180049d252",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.13.6",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=384632e67e0829deb8015ee6ad916b180049d252",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/102516",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:0676",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2018:1062",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2017-15126",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1523481",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/384632e67e0829deb8015ee6ad916b180049d252",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.13.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.836937",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}