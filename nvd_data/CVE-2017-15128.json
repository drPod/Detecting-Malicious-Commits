{
  "cve_id": "CVE-2017-15128",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "1e3921471354244f70fe268586ff94a97a6dd4df",
    "related_commits": [
      "1e3921471354244f70fe268586ff94a97a6dd4df",
      "1e3921471354244f70fe268586ff94a97a6dd4df"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1e3921471354244f70fe268586ff94a97a6dd4df",
      "commit_date": "2017-11-02T22:59:29Z",
      "author": {
        "login": "aagit",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "userfaultfd: hugetlbfs: prevent UFFDIO_COPY to fill beyond the end of i_size",
        "length": 1320,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 32,
        "additions": 30,
        "deletions": 2
      },
      "files": [
        {
          "filename": "mm/hugetlb.c",
          "status": "modified",
          "additions": 30,
          "deletions": 2,
          "patch": "@@ -3984,6 +3984,9 @@ int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm,\n \t\t\t    unsigned long src_addr,\n \t\t\t    struct page **pagep)\n {\n+\tstruct address_space *mapping;\n+\tpgoff_t idx;\n+\tunsigned long size;\n \tint vm_shared = dst_vma->vm_flags & VM_SHARED;\n \tstruct hstate *h = hstate_vma(dst_vma);\n \tpte_t _dst_pte;\n@@ -4021,13 +4024,24 @@ int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm,\n \t__SetPageUptodate(page);\n \tset_page_huge_active(page);\n \n+\tmapping = dst_vma->vm_file->f_mapping;\n+\tidx = vma_hugecache_offset(h, dst_vma, dst_addr);\n+\n \t/*\n \t * If shared, add to page cache\n \t */\n \tif (vm_shared) {\n-\t\tstruct address_space *mapping = dst_vma->vm_file->f_mapping;\n-\t\tpgoff_t idx = vma_hugecache_offset(h, dst_vma, dst_addr);\n+\t\tsize = i_size_read(mapping->host) >> huge_page_shift(h);\n+\t\tret = -EFAULT;\n+\t\tif (idx >= size)\n+\t\t\tgoto out_release_nounlock;\n \n+\t\t/*\n+\t\t * Serialization between remove_inode_hugepages() and\n+\t\t * huge_add_to_page_cache() below happens through the\n+\t\t * hugetlb_fault_mutex_table that here must be hold by\n+\t\t * the caller.\n+\t\t */\n \t\tret = huge_add_to_page_cache(page, mapping, idx);\n \t\tif (ret)\n \t\t\tgoto out_release_nounlock;\n@@ -4036,6 +4050,20 @@ int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm,\n \tptl = huge_pte_lockptr(h, dst_mm, dst_pte);\n \tspin_lock(ptl);\n \n+\t/*\n+\t * Recheck the i_size after holding PT lock to make sure not\n+\t * to leave any page mapped (as page_mapped()) beyond the end\n+\t * of the i_size (remove_inode_hugepages() is strict about\n+\t * enforcing that). If we bail out here, we'll also leave a\n+\t * page in the radix tree in the vm_shared case beyond the end\n+\t * of the i_size, but remove_inode_hugepages() will take care\n+\t * of it as soon as we drop the hugetlb_fault_mutex_table.\n+\t */\n+\tsize = i_size_read(mapping->host) >> huge_page_shift(h);\n+\tret = -EFAULT;\n+\tif (idx >= size)\n+\t\tgoto out_release_unlock;\n+\n \tret = -EEXIST;\n \tif (!huge_pte_none(huge_ptep_get(dst_pte)))\n \t\tgoto out_release_unlock;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "A flaw was found in the hugetlb_mcopy_atomic_pte function in mm/hugetlb.c in the Linux kernel before 4.13.12. A lack of size check could cause a denial of service (BUG).",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-01-14T06:29:00.297",
    "last_modified": "2024-11-21T03:14:07.597",
    "fix_date": "2017-11-02T22:59:29Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=1e3921471354244f70fe268586ff94a97a6dd4df",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2017-15128",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1525222",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/1e3921471354244f70fe268586ff94a97a6dd4df",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.13.12",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=1e3921471354244f70fe268586ff94a97a6dd4df",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2017-15128",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1525222",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/1e3921471354244f70fe268586ff94a97a6dd4df",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.13.12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Release Notes",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.837290",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}