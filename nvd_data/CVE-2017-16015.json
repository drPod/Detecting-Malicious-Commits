{
  "cve_id": "CVE-2017-16015",
  "github_data": {
    "repository": "caolan/forms",
    "fix_commit": "bc01e534a0ff863dedb2026a50bd03153bbc6a5d",
    "related_commits": [
      "bc01e534a0ff863dedb2026a50bd03153bbc6a5d",
      "bc01e534a0ff863dedb2026a50bd03153bbc6a5d"
    ],
    "patch_url": "https://github.com/caolan/forms/commit/bc01e534a0ff863dedb2026a50bd03153bbc6a5d.patch",
    "fix_commit_details": {
      "sha": "bc01e534a0ff863dedb2026a50bd03153bbc6a5d",
      "commit_date": "2016-11-16T02:01:48Z",
      "author": {
        "login": "ljharb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[New] [Fix] ensure that all content in `tag` is properly escaped.",
        "length": 65,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 21,
        "deletions": 10
      },
      "files": [
        {
          "filename": ".eslintrc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -13,7 +13,7 @@\n \t\t\"indent\": [2, 4],\n \t\t\"max-lines\": 0,\n \t\t\"max-nested-callbacks\": [2, 5],\n-\t\t\"max-params\": [2, 3],\n+\t\t\"max-params\": [2, 4],\n \t\t\"max-statements\": [2, 20],\n \t\t\"max-statements-per-line\": [2, { \"max\": 2 }],\n \t\t\"new-cap\": [2, { \"capIsNewExceptions\": [\"Template\"] }],"
        },
        {
          "filename": "lib/render.js",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -21,7 +21,7 @@ var wrapWith = function (tagName) {\n                 opt.errorAfterField ? '' : errorHTML,\n                 field.widget.toHTML(name, field),\n                 opt.errorAfterField ? errorHTML : ''\n-            ].join(''));\n+            ].join(''), true);\n             wrappedContent.push(fieldset);\n         } else {\n             var fieldHTMLs = [field.labelHTML(name, field.id), field.widget.toHTML(name, field)];\n@@ -35,7 +35,7 @@ var wrapWith = function (tagName) {\n             }\n             wrappedContent = wrappedContent.concat(fieldHTMLs);\n         }\n-        return tag(tagName, { classes: field.classes() }, wrappedContent.join(''));\n+        return tag(tagName, { classes: field.classes() }, wrappedContent.join(''), true);\n     };\n };\n exports.div = wrapWith('div');\n@@ -45,7 +45,7 @@ exports.li = wrapWith('li');\n exports.table = function (name, field, options) {\n     var opt = options || {};\n \n-    var th = tag('th', {}, field.labelHTML(name, field.id));\n+    var th = tag('th', {}, field.labelHTML(name, field.id), true);\n \n     var tdContent = field.widget.toHTML(name, field);\n \n@@ -58,7 +58,7 @@ exports.table = function (name, field, options) {\n         }\n     }\n \n-    var td = tag('td', {}, tdContent);\n+    var td = tag('td', {}, tdContent, true);\n \n-    return tag('tr', { classes: field.classes() }, th + td);\n+    return tag('tr', { classes: field.classes() }, th + td, true);\n };"
        },
        {
          "filename": "lib/tag.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -50,12 +50,13 @@ var isSelfClosing = function (tagName) {\n     return Object.prototype.hasOwnProperty.call(selfClosingTags, tagName);\n };\n \n-var tag = function tag(tagName, attrsMap, content) {\n+var tag = function tag(tagName, attrsMap, content, contentIsEscaped) {\n     var safeTagName = htmlEscape(tagName);\n     var attrsHTML = !is.array(attrsMap) ? attrs(attrsMap) : attrsMap.reduce(function (html, map) {\n         return html + attrs(map);\n     }, '');\n-    return '<' + safeTagName + attrsHTML + (isSelfClosing(safeTagName) ? ' />' : '>' + content + '</' + safeTagName + '>');\n+    var safeContent = contentIsEscaped ? content : htmlEscape(content);\n+    return '<' + safeTagName + attrsHTML + (isSelfClosing(safeTagName) ? ' />' : '>' + safeContent + '</' + safeTagName + '>');\n };\n \n tag.attrs = attrs;"
        },
        {
          "filename": "lib/widgets.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -117,7 +117,7 @@ var select = function (isMultiple) {\n             var choices = unifyChoices(f.choices, 1);\n             var optionsHTML = renderChoices(choices, function render(choice) {\n                 if (choice.isNested) {\n-                    return tag('optgroup', { label: choice.label }, renderChoices(choice.choices, render));\n+                    return tag('optgroup', { label: choice.label }, renderChoices(choice.choices, render), true);\n                 } else {\n                     return tag('option', { value: choice.value, selected: !!isSelected(f.value, choice.value) }, choice.label);\n                 }\n@@ -130,7 +130,7 @@ var select = function (isMultiple) {\n             if (isMultiple) {\n                 attrs.multiple = true;\n             }\n-            return tag('select', [attrs, userAttrs, w.attrs || {}], optionsHTML);\n+            return tag('select', [attrs, userAttrs, w.attrs || {}], optionsHTML, true);\n         };\n         return w;\n     };"
        },
        {
          "filename": "test/test-widgets.js",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -256,6 +256,16 @@ test('textarea', function (t) {\n         '<textarea name=\"name\" id=\"someid\" rows=\"20\" cols=\"80\" class=\"one two\" placeholder=\"hi!\">value</textarea>'\n     );\n     t.equal(forms.widgets.textarea().type, 'textarea');\n+\n+    t.test('properly escapes contents', function (st) {\n+        st.equal(\n+            forms.widgets.textarea().toHTML('name', { value: 'Inside</textarea>Escaped the textarea!' }),\n+            '<textarea name=\"name\" id=\"id_name\">Inside&lt;/textarea&gt;Escaped the textarea!</textarea>'\n+       );\n+\n+        st.end();\n+    });\n+\n     t.end();\n });\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "066f70abc2fdd63d2b421c9145ccad4b8503a310",
            "date": "2024-03-13T18:38:31Z",
            "author_login": "voxpelli"
          },
          {
            "sha": "2922dc3ae18460beab40b49979c67427b2b11262",
            "date": "2021-01-19T23:30:28Z",
            "author_login": "voxpelli"
          },
          {
            "sha": "53042014d9d35adb9cfc032b1ab6beabf1a0f815",
            "date": "2024-03-15T23:13:39Z",
            "author_login": "ljharb"
          },
          {
            "sha": "b94a94e31aeb47e8470ad29498a8d72e0882444e",
            "date": "2024-03-15T23:12:49Z",
            "author_login": "ljharb"
          },
          {
            "sha": "9f118a89cf5c42e9013beeff89ba898652958e52",
            "date": "2021-12-09T22:14:03Z",
            "author_login": "ljharb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-80",
    "description": "Forms is a library for easily creating HTML forms. Versions before 1.3.0 did not have proper html escaping. This means that if the application did not sanitize html on behalf of forms, use of forms may be vulnerable to cross site scripting",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-06-04T19:29:00.977",
    "last_modified": "2024-11-21T03:15:40.007",
    "fix_date": "2016-11-16T02:01:48Z"
  },
  "references": [
    {
      "url": "https://github.com/caolan/forms/commit/bc01e534a0ff863dedb2026a50bd03153bbc6a5d",
      "source": "support@hackerone.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://nodesecurity.io/advisories/158",
      "source": "support@hackerone.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/caolan/forms/commit/bc01e534a0ff863dedb2026a50bd03153bbc6a5d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://nodesecurity.io/advisories/158",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.880782",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "forms",
    "owner": "caolan",
    "created_at": "2010-06-21T17:29:45Z",
    "updated_at": "2025-01-13T06:01:07Z",
    "pushed_at": "2024-03-16T17:06:52Z",
    "size": 704,
    "stars": 1012,
    "forks": 167,
    "open_issues": 35,
    "watchers": 1012,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 163187
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:26:43.564522"
  }
}