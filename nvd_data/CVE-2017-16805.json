{
  "cve_id": "CVE-2017-16805",
  "github_data": {
    "repository": "radare/radare2",
    "fix_commit": "2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
    "related_commits": [
      "2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
      "2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d"
    ],
    "patch_url": "https://github.com/radare/radare2/commit/2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d.patch",
    "fix_commit_details": {
      "sha": "2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
      "commit_date": "2017-11-13T19:15:54Z",
      "author": {
        "login": "radare",
        "type": "User",
        "stats": {
          "total_commits": 16353,
          "average_weekly_commits": 19.631452581032413,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 785
        }
      },
      "commit_message": {
        "title": "Fix #8813 - segfault in dwarf parser",
        "length": 36,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 19,
        "deletions": 12
      },
      "files": [
        {
          "filename": "libr/bin/dwarf.c",
          "status": "modified",
          "additions": 18,
          "deletions": 11,
          "patch": "@@ -1,4 +1,4 @@\n-/* radare - LGPL - Copyright 2012-2016 - pancake, Fedor Sakharov */\n+/* radare - LGPL - Copyright 2012-2017 - pancake, Fedor Sakharov */\n \n #define D0 if(1)\n #define D1 if(1)\n@@ -1144,8 +1144,9 @@ static void r_bin_dwarf_dump_debug_info(FILE *f, const RBinDwarfDebugInfo *inf)\n \t\t\tvalues = dies[j].attr_values;\n \n \t\t\tfor (k = 0; k < dies[j].length; k++) {\n-\t\t\t\tif (!values[k].name)\n+\t\t\t\tif (!values[k].name) {\n \t\t\t\t\tcontinue;\n+\t\t\t\t}\n \n \t\t\t\tif (values[k].name < DW_AT_vtable_elem_location &&\n \t\t\t\t\t\tdwarf_attr_encodings[values[k].name]) {\n@@ -1168,7 +1169,7 @@ static const ut8 *r_bin_dwarf_parse_attr_value(const ut8 *obuf, int obuf_len,\n \tconst ut8 *buf_end = obuf + obuf_len;\n \tsize_t j;\n \n-\tif (!spec || !value || !hdr || !obuf || obuf_len < 0) {\n+\tif (!spec || !value || !hdr || !obuf || obuf_len < 1) {\n \t\treturn NULL;\n \t}\n \n@@ -1194,7 +1195,7 @@ static const ut8 *r_bin_dwarf_parse_attr_value(const ut8 *obuf, int obuf_len,\n \t\t\tvalue->encoding.address = READ (buf, ut64);\n \t\t\tbreak;\n \t\tdefault:\n-\t\t\teprintf(\"DWARF: Unexpected pointer size: %u\\n\", (unsigned)hdr->pointer_size);\n+\t\t\teprintf (\"DWARF: Unexpected pointer size: %u\\n\", (unsigned)hdr->pointer_size);\n \t\t\treturn NULL;\n \t\t}\n \t\tbreak;\n@@ -1219,6 +1220,8 @@ static const ut8 *r_bin_dwarf_parse_attr_value(const ut8 *obuf, int obuf_len,\n \t\t\tvalue->encoding.block.data = data;\n \t\t}\n \t\tbreak;\n+#if 0\n+// This causes segfaults to happen\n \tcase DW_FORM_data2:\n \t\tvalue->encoding.data = READ (buf, ut16);\n \t\tbreak;\n@@ -1228,6 +1231,7 @@ static const ut8 *r_bin_dwarf_parse_attr_value(const ut8 *obuf, int obuf_len,\n \tcase DW_FORM_data8:\n \t\tvalue->encoding.data = READ (buf, ut64);\n \t\tbreak;\n+#endif\n \tcase DW_FORM_string:\n \t\tvalue->encoding.str_struct.string = *buf? strdup ((const char*)buf) : NULL;\n \t\tbuf += (strlen ((const char*)buf) + 1);\n@@ -1237,16 +1241,20 @@ static const ut8 *r_bin_dwarf_parse_attr_value(const ut8 *obuf, int obuf_len,\n \t\tif (!buf) {\n \t\t\treturn NULL;\n \t\t}\n-\t\tvalue->encoding.block.data = calloc (sizeof(ut8), value->encoding.block.length);\n-\t\tfor (j = 0; j < value->encoding.block.length; j++) {\n-\t\t\tvalue->encoding.block.data[j] = READ (buf, ut8);\n+\t\tvalue->encoding.block.data = calloc (sizeof (ut8), value->encoding.block.length);\n+\t\tif (value->encoding.block.data) {\n+\t\t\tfor (j = 0; j < value->encoding.block.length; j++) {\n+\t\t\t\tvalue->encoding.block.data[j] = READ (buf, ut8);\n+\t\t\t}\n \t\t}\n \t\tbreak;\n \tcase DW_FORM_block1:\n \t\tvalue->encoding.block.length = READ (buf, ut8);\n \t\tvalue->encoding.block.data = calloc (sizeof (ut8), value->encoding.block.length + 1);\n-\t\tfor (j = 0; j < value->encoding.block.length; j++) {\n-\t\t\tvalue->encoding.block.data[j] = READ (buf, ut8);\n+\t\tif (value->encoding.block.data) {\n+\t\t\tfor (j = 0; j < value->encoding.block.length; j++) {\n+\t\t\t\tvalue->encoding.block.data[j] = READ (buf, ut8);\n+\t\t\t}\n \t\t}\n \t\tbreak;\n \tcase DW_FORM_flag:\n@@ -1344,8 +1352,7 @@ static const ut8 *r_bin_dwarf_parse_comp_unit(Sdb *s, const ut8 *obuf,\n \t\t\t\teprintf (\"Warning: malformed dwarf attribute capacity doesn't match length\\n\");\n \t\t\t\tbreak;\n \t\t\t}\n-\t\t\tmemset (&cu->dies[cu->length].attr_values[i], 0, sizeof\n-\t\t\t\t\t(cu->dies[cu->length].attr_values[i]));\n+\t\t\tmemset (&cu->dies[cu->length].attr_values[i], 0, sizeof (cu->dies[cu->length].attr_values[i]));\n \t\t\tbuf = r_bin_dwarf_parse_attr_value (buf, buf_end - buf,\n \t\t\t\t\t&da->decls[abbr_code - 1].specs[i],\n \t\t\t\t\t&cu->dies[cu->length].attr_values[i],"
        },
        {
          "filename": "libr/include/r_bin_dwarf.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -622,7 +622,7 @@ typedef union {\n \tut64\tdata;\n \tst64\tsdata;\n \tut64\treference;\n-\tstruct str_structt {\n+\tstruct {\n \t\tchar\t*string;\n \t\tut64\toffset;\n \t} str_struct;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bf6227e9295110ab97c8cf3237914acd6cfa09b0",
            "date": "2024-12-27T21:02:32Z",
            "author_login": "dennis-doyensec"
          },
          {
            "sha": "a7e958f9ebdf9771c36e8376078f027792981fea",
            "date": "2025-01-14T17:22:24Z",
            "author_login": "radare"
          },
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "In radare2 2.0.1, libr/bin/dwarf.c allows remote attackers to cause a denial of service (invalid read and application crash) via a crafted ELF file, related to r_bin_dwarf_parse_comp_unit in dwarf.c and sdb_set_internal in shlr/sdb/src/sdb.c.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-11-13T21:29:00.237",
    "last_modified": "2024-11-21T03:17:00.513",
    "fix_date": "2017-11-13T19:15:54Z"
  },
  "references": [
    {
      "url": "https://github.com/radare/radare2/commit/2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/radare/radare2/issues/8813",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/radare/radare2/commit/2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/radare/radare2/issues/8813",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:09.734349",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radare",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:06:47.409274"
  }
}