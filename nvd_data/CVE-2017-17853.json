{
  "cve_id": "CVE-2017-17853",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "4374f256ce8182019353c0c639bb8d0695b4c941",
    "related_commits": [
      "4374f256ce8182019353c0c639bb8d0695b4c941",
      "4374f256ce8182019353c0c639bb8d0695b4c941"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/4374f256ce8182019353c0c639bb8d0695b4c941.patch",
    "fix_commit_details": {
      "sha": "4374f256ce8182019353c0c639bb8d0695b4c941",
      "commit_date": "2017-12-19T04:11:53Z",
      "author": {
        "login": "ecree-solarflare",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "bpf/verifier: fix bounds calculation on BPF_RSH",
        "length": 697,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 30,
        "additions": 16,
        "deletions": 14
      },
      "files": [
        {
          "filename": "kernel/bpf/verifier.c",
          "status": "modified",
          "additions": 16,
          "deletions": 14,
          "patch": "@@ -2190,20 +2190,22 @@ static int adjust_scalar_min_max_vals(struct bpf_verifier_env *env,\n \t\t\tmark_reg_unknown(env, regs, insn->dst_reg);\n \t\t\tbreak;\n \t\t}\n-\t\t/* BPF_RSH is an unsigned shift, so make the appropriate casts */\n-\t\tif (dst_reg->smin_value < 0) {\n-\t\t\tif (umin_val) {\n-\t\t\t\t/* Sign bit will be cleared */\n-\t\t\t\tdst_reg->smin_value = 0;\n-\t\t\t} else {\n-\t\t\t\t/* Lost sign bit information */\n-\t\t\t\tdst_reg->smin_value = S64_MIN;\n-\t\t\t\tdst_reg->smax_value = S64_MAX;\n-\t\t\t}\n-\t\t} else {\n-\t\t\tdst_reg->smin_value =\n-\t\t\t\t(u64)(dst_reg->smin_value) >> umax_val;\n-\t\t}\n+\t\t/* BPF_RSH is an unsigned shift.  If the value in dst_reg might\n+\t\t * be negative, then either:\n+\t\t * 1) src_reg might be zero, so the sign bit of the result is\n+\t\t *    unknown, so we lose our signed bounds\n+\t\t * 2) it's known negative, thus the unsigned bounds capture the\n+\t\t *    signed bounds\n+\t\t * 3) the signed bounds cross zero, so they tell us nothing\n+\t\t *    about the result\n+\t\t * If the value in dst_reg is known nonnegative, then again the\n+\t\t * unsigned bounts capture the signed bounds.\n+\t\t * Thus, in all cases it suffices to blow away our signed bounds\n+\t\t * and rely on inferring new ones from the unsigned bounds and\n+\t\t * var_off of the result.\n+\t\t */\n+\t\tdst_reg->smin_value = S64_MIN;\n+\t\tdst_reg->smax_value = S64_MAX;\n \t\tif (src_known)\n \t\t\tdst_reg->var_off = tnum_rshift(dst_reg->var_off,\n \t\t\t\t\t\t       umin_val);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          },
          {
            "sha": "cbc5dde0a461240046e8a41c43d7c3b76d5db952",
            "date": "2025-01-10T15:28:21Z",
            "author_login": "rikvanriel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-119",
    "description": "kernel/bpf/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging incorrect BPF_RSH signed bounds calculations.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2017-12-27T17:08:20.140",
    "last_modified": "2024-11-21T03:18:49.160",
    "fix_date": "2017-12-19T04:11:53Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=4374f256ce8182019353c0c639bb8d0695b4c941",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/12/21/2",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/4374f256ce8182019353c0c639bb8d0695b4c941",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=4374f256ce8182019353c0c639bb8d0695b4c941",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/12/21/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/4374f256ce8182019353c0c639bb8d0695b4c941",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.789874",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}