{
  "cve_id": "CVE-2017-17862",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
    "related_commits": [
      "c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "c131187db2d3fa2f8bf32fdf4e9a4ef805168467"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "commit_date": "2017-11-23T00:42:05Z",
      "author": {
        "login": "4ast",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "bpf: fix branch pruning logic",
        "length": 1135,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 29,
        "additions": 28,
        "deletions": 1
      },
      "files": [
        {
          "filename": "include/linux/bpf_verifier.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -115,7 +115,7 @@ struct bpf_insn_aux_data {\n \t\tstruct bpf_map *map_ptr;\t/* pointer for call insn into lookup_elem */\n \t};\n \tint ctx_field_size; /* the ctx field size for load insn, maybe 0 */\n-\tint converted_op_size; /* the valid value width after perceived conversion */\n+\tbool seen; /* this insn was processed by the verifier */\n };\n \n #define MAX_USED_MAPS 64 /* max number of maps accessed by one eBPF program */"
        },
        {
          "filename": "kernel/bpf/verifier.c",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -3827,6 +3827,7 @@ static int do_check(struct bpf_verifier_env *env)\n \t\t\treturn err;\n \n \t\tregs = cur_regs(env);\n+\t\tenv->insn_aux_data[insn_idx].seen = true;\n \t\tif (class == BPF_ALU || class == BPF_ALU64) {\n \t\t\terr = check_alu_op(env, insn);\n \t\t\tif (err)\n@@ -4022,6 +4023,7 @@ static int do_check(struct bpf_verifier_env *env)\n \t\t\t\t\treturn err;\n \n \t\t\t\tinsn_idx++;\n+\t\t\t\tenv->insn_aux_data[insn_idx].seen = true;\n \t\t\t} else {\n \t\t\t\tverbose(env, \"invalid BPF_LD mode\\n\");\n \t\t\t\treturn -EINVAL;\n@@ -4204,6 +4206,7 @@ static int adjust_insn_aux_data(struct bpf_verifier_env *env, u32 prog_len,\n \t\t\t\tu32 off, u32 cnt)\n {\n \tstruct bpf_insn_aux_data *new_data, *old_data = env->insn_aux_data;\n+\tint i;\n \n \tif (cnt == 1)\n \t\treturn 0;\n@@ -4213,6 +4216,8 @@ static int adjust_insn_aux_data(struct bpf_verifier_env *env, u32 prog_len,\n \tmemcpy(new_data, old_data, sizeof(struct bpf_insn_aux_data) * off);\n \tmemcpy(new_data + off + cnt - 1, old_data + off,\n \t       sizeof(struct bpf_insn_aux_data) * (prog_len - off - cnt + 1));\n+\tfor (i = off; i < off + cnt - 1; i++)\n+\t\tnew_data[i].seen = true;\n \tenv->insn_aux_data = new_data;\n \tvfree(old_data);\n \treturn 0;\n@@ -4231,6 +4236,25 @@ static struct bpf_prog *bpf_patch_insn_data(struct bpf_verifier_env *env, u32 of\n \treturn new_prog;\n }\n \n+/* The verifier does more data flow analysis than llvm and will not explore\n+ * branches that are dead at run time. Malicious programs can have dead code\n+ * too. Therefore replace all dead at-run-time code with nops.\n+ */\n+static void sanitize_dead_code(struct bpf_verifier_env *env)\n+{\n+\tstruct bpf_insn_aux_data *aux_data = env->insn_aux_data;\n+\tstruct bpf_insn nop = BPF_MOV64_REG(BPF_REG_0, BPF_REG_0);\n+\tstruct bpf_insn *insn = env->prog->insnsi;\n+\tconst int insn_cnt = env->prog->len;\n+\tint i;\n+\n+\tfor (i = 0; i < insn_cnt; i++) {\n+\t\tif (aux_data[i].seen)\n+\t\t\tcontinue;\n+\t\tmemcpy(insn + i, &nop, sizeof(nop));\n+\t}\n+}\n+\n /* convert load instructions that access fields of 'struct __sk_buff'\n  * into sequence of instructions that access fields of 'struct sk_buff'\n  */\n@@ -4557,6 +4581,9 @@ int bpf_check(struct bpf_prog **prog, union bpf_attr *attr)\n \twhile (!pop_stack(env, NULL, NULL));\n \tfree_states(env);\n \n+\tif (ret == 0)\n+\t\tsanitize_dead_code(env);\n+\n \tif (ret == 0)\n \t\t/* program is valid, convert *(u32*)(ctx + off) accesses */\n \t\tret = convert_ctx_accesses(env);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "kernel/bpf/verifier.c in the Linux kernel through 4.14.8 ignores unreachable code, even though it would still be processed by JIT compilers. This behavior, also considered an improper branch-pruning logic issue, could possibly be used by local users for denial of service.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-12-27T17:08:20.437",
    "last_modified": "2024-11-21T03:18:50.457",
    "fix_date": "2017-11-23T00:42:05Z"
  },
  "references": [
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/102325",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1040057",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://anonscm.debian.org/cgit/kernel/linux.git/tree/debian/patches/bugfix/all/bpf-fix-branch-pruning-logic.patch?h=stretch-security",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3619-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/3619-2/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/usn/usn-3523-2/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2017/dsa-4073",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.spinics.net/lists/stable/msg206984.html",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/102325",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1040057",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://anonscm.debian.org/cgit/kernel/linux.git/tree/debian/patches/bugfix/all/bpf-fix-branch-pruning-logic.patch?h=stretch-security",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3619-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/3619-2/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/usn/usn-3523-2/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2017/dsa-4073",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.spinics.net/lists/stable/msg206984.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:12.790665",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}