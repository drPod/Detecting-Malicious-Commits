{
  "cve_id": "CVE-2017-20157",
  "github_data": {
    "repository": "Ariadne-CMS/arc-web",
    "fix_commit": "1feb1cc11e6c9f218408f15f53f537ea0d788656",
    "related_commits": [
      "1feb1cc11e6c9f218408f15f53f537ea0d788656",
      "1feb1cc11e6c9f218408f15f53f537ea0d788656"
    ],
    "patch_url": "https://github.com/Ariadne-CMS/arc-web/commit/1feb1cc11e6c9f218408f15f53f537ea0d788656.patch",
    "fix_commit_details": {
      "sha": "1feb1cc11e6c9f218408f15f53f537ea0d788656",
      "commit_date": "2017-09-26T09:47:59Z",
      "author": {
        "login": "poef",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "added checks for evil URL's (url's that could trigger parse errors and ssrf attacks)",
        "length": 145,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 83,
        "additions": 71,
        "deletions": 12
      },
      "files": [
        {
          "filename": "src/url/Url.php",
          "status": "modified",
          "additions": 16,
          "deletions": 12,
          "patch": "@@ -12,36 +12,40 @@\n namespace arc\\url;\n \n /**\n- *\tUrl parses a URL string and returns an object with the seperate parts. You can change\n- *\tthese and when cast to a string Url will regenerate the URL string and make sure it\n- *\tis valid.\n+ * Url parses a URL string and returns an object with the seperate parts. You can change\n+ * these and when cast to a string Url will regenerate the URL string and make sure it\n+ * is valid.\n  *\n- *\tUsage:\n- *\t\t$url = new \\arc\\url\\Url( 'http://www.ariadne-cms.org/' );\n- *\t\t$url->path = '/docs/search/';\n- *\t\t$url->query = 'a=1&a=2';\n- *\t\techo $url; // => 'http://www.ariadne-cms.org/docs/search/?a=1&a=2'\n+ * Usage:\n+ *    $url = new \\arc\\url\\Url( 'http://www.ariadne-cms.org/' );\n+ *    $url->path = '/docs/search/';\n+ *    $url->query = 'a=1&a=2';\n+ *    echo $url; // => 'http://www.ariadne-cms.org/docs/search/?a=1&a=2'\n  * @property Query $query The query arguments\n  */\n class Url\n {\n     /**\n-     *\tAll parts of the URL format, as returned by parse_url.\n-     *\tscheme://user:pass@host:port/path?query#fragment\n+     * All parts of the URL format, as returned by parse_url.\n+     * scheme://user:pass@host:port/path?query#fragment\n      */\n     public $scheme, $user, $pass, $host, $port, $path, $fragment;\n     private $query;\n \n     /**\n-     *\t@param string $url The URL to parse, the query part will remain a string.\n-     *  @param QueryInterface queryObject Optional. An object that parses the query string.\n+     * @param string $url The URL to parse, the query part will remain a string.\n+     * @param QueryInterface queryObject Optional. An object that parses the query string.\n      */\n     public function __construct($url, $queryObject = null)\n     {\n         $componentList = [\n             'scheme', 'host', 'port', 'user', 'pass', 'path', 'query', 'fragment'\n         ];\n         $this->importUrlComponents( parse_url( $url ), $componentList );\n+        if ($this->scheme!='ldap' && strpos($this->host, ':')) {\n+            // parse_url allows ':' in host when it occurs more than once\\\n+            $this->host = substr($this->host, 0, strpos($this->host, ':'));\n+        }\n         if ( isset( $queryObject ) ) {\n             $this->query = $queryObject->import( $this->query );\n         }"
        },
        {
          "filename": "tests/url.Test.php",
          "status": "modified",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -109,4 +109,59 @@ function testParseCommonURLS()\n             $this->assertEquals( $commonUrls, $parsedUrls);\n         }\n \n+      function testEvilURL1()\n+      {\n+         $evilURL = 'http://127.0.0.1:11211:80/';\n+         $parsed = \\arc\\url::url($evilURL);\n+         $this->assertEquals( $parsed->port, 80 );\n+         $parsedSafe = \\arc\\url::safeUrl($evilURL);\n+         $this->assertEquals( $parsedSafe->port, 80 );\n+         $safeURL = (string) $parsed;\n+         $this->assertEquals( 'http://127.0.0.1:80/', $safeURL);\n+      }\n+\n+      function testEvilURL2()\n+      {\n+         $evilURL = 'http://google.com#@evil.com/';\n+         $parsed = \\arc\\url::url($evilURL);\n+         $this->assertEquals( $parsed->host, 'google.com' );\n+         $parsedSafe = \\arc\\url::safeUrl($evilURL);\n+         $this->assertEquals( $parsedSafe->host, 'google.com');\n+         $safeURL = (string) $parsed;\n+         $this->assertEquals( 'http://google.com#%40evil.com%2F', $safeURL);\n+      }\n+\n+      function testEvilURL3()\n+      {\n+         $evilURL = 'http://foo@evil.com:80@google.com/';\n+         $parsed = \\arc\\url::url($evilURL);\n+         $this->assertEquals( $parsed->host, 'google.com' );\n+         $parsedSafe = \\arc\\url::safeUrl($evilURL);\n+         $this->assertEquals( $parsedSafe->host, 'google.com');\n+         $safeURL = (string) $parsed;\n+         $this->assertEquals( 'http://foo%40evil.com:80@google.com/', $safeURL);\n+      }\n+\n+      function testEvilURL4()\n+      {\n+         $evilURL = 'http://foo@127.0.0.1 @google.com/';\n+         $parsed = \\arc\\url::url($evilURL);\n+         $this->assertEquals( $parsed->host, 'google.com' );\n+         $parsedSafe = \\arc\\url::safeUrl($evilURL);\n+         $this->assertEquals( $parsedSafe->host, 'google.com');\n+         $safeURL = (string) $parsed;\n+         $this->assertEquals( 'http://foo%40127.0.0.1%20@google.com/', $safeURL);\n+      }\n+\n+      function testEvilURL5()\n+      {\n+         $evilURL = 'http://127.0.0.1:11211#@google.com:80/';\n+         $parsed = \\arc\\url::url($evilURL);\n+         $this->assertEquals( $parsed->host, '127.0.0.1' );\n+         $parsedSafe = \\arc\\url::safeUrl($evilURL);\n+         $this->assertEquals( $parsedSafe->host, '127.0.0.1');\n+         $safeURL = (string) $parsed;\n+         $this->assertEquals( 'http://127.0.0.1:11211#%40google.com%3A80%2F', $safeURL);\n+      }\n+\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "43abd411da734db2ca44710b2307e2d850f89ff5",
            "date": "2022-06-02T07:57:47Z",
            "author_login": "poef"
          },
          {
            "sha": "565cffeaa73c8a865dfe8fb676bfcd78944eac80",
            "date": "2022-05-30T13:58:25Z",
            "author_login": "poef"
          },
          {
            "sha": "f3d75200448f3eb11abbbb53f5249a98533966cd",
            "date": "2021-06-07T10:39:16Z",
            "author_login": "poef"
          },
          {
            "sha": "1a7f770c4768c0fe0c4eecc7599bcb135565f2b4",
            "date": "2021-06-07T08:44:24Z",
            "author_login": "poef"
          },
          {
            "sha": "91465efe37cd14d8d63715e295267f6b91fed0bd",
            "date": "2021-05-12T11:52:06Z",
            "author_login": "poef"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-918",
    "description": "A vulnerability was found in Ariadne Component Library up to 2.x. It has been classified as critical. Affected is an unknown function of the file src/url/Url.php. The manipulation leads to server-side request forgery. Upgrading to version 3.0 is able to address this issue. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217140.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-31T10:15:13.073",
    "last_modified": "2024-11-21T03:22:46.140",
    "fix_date": "2017-09-26T09:47:59Z"
  },
  "references": [
    {
      "url": "https://github.com/Ariadne-CMS/arc-web/commit/1feb1cc11e6c9f218408f15f53f537ea0d788656",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Ariadne-CMS/arc-web/releases/tag/3.0",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217140",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217140",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Ariadne-CMS/arc-web/commit/1feb1cc11e6c9f218408f15f53f537ea0d788656",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Ariadne-CMS/arc-web/releases/tag/3.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217140",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217140",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.240074",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "arc-web",
    "owner": "Ariadne-CMS",
    "created_at": "2014-06-20T15:19:09Z",
    "updated_at": "2022-05-30T13:58:39Z",
    "pushed_at": "2022-06-02T07:58:50Z",
    "size": 326,
    "stars": 2,
    "forks": 3,
    "open_issues": 1,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 70700
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:48:57.971327"
  }
}