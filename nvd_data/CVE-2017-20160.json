{
  "cve_id": "CVE-2017-20160",
  "github_data": {
    "repository": "flitto/express-param",
    "fix_commit": "db94f7391ad0a16dcfcba8b9be1af385b25c42db",
    "related_commits": [
      "db94f7391ad0a16dcfcba8b9be1af385b25c42db",
      "db94f7391ad0a16dcfcba8b9be1af385b25c42db"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "db94f7391ad0a16dcfcba8b9be1af385b25c42db",
      "commit_date": "2017-03-02T07:47:06Z",
      "author": {
        "login": "tiggerk",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: Improve fetchParams",
        "length": 154,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 48,
        "additions": 40,
        "deletions": 8
      },
      "files": [
        {
          "filename": "lib/fetchParams.js",
          "status": "modified",
          "additions": 40,
          "deletions": 8,
          "patch": "@@ -8,15 +8,21 @@ var TYPE_DELIMETER = ':'\n   , extraOption;\n \n function getValue(req, keyName) {\n+  var value;\n+\n   if (req.params && req.params[keyName] !== undefined) {\n-    return req.params[keyName];\n+    value = req.params[keyName];\n   } else if (req.body && req.body[keyName] !== undefined) {\n-    return req.body[keyName];\n+    value = req.body[keyName];\n   } else if (req.query && req.query[keyName] !== undefined) {\n-    return req.query[keyName];\n-  } else {\n-    return undefined;\n+    value = req.query[keyName];\n+  }\n+\n+  if (Array.isArray(value)) {\n+    value = value[value.length - 1];\n   }\n+\n+  return value;\n }\n \n function getPath(req, keyName) {\n@@ -117,6 +123,17 @@ function getOptionalParams(req, option_expressions) {\n \n     val = getFunc(req, key);\n \n+    var typeMap = {\n+      int: parseInt,\n+      float: parseFloat,\n+      number: parseFloat\n+    };\n+\n+    var idx = Object.keys(typeMap).indexOf(keyInfo.type);\n+    if (idx >= 0) {\n+      options[key] = typeMap[keyInfo.type](val);\n+    }\n+\n     if (keyInfo.type === 'number') {\n       if (val !== undefined && val !== '')\n         options[key] = parseFloat(val);\n@@ -178,7 +195,7 @@ function requiredParameter(req, required_expressions) {\n     , key\n     , val;\n \n-  for (var i = 0, li = required_expressions.length; i <li ; i++) {\n+  for (var i = 0, li = required_expressions.length; i < li; i++) {\n     var keyInfo;\n     try {\n       keyInfo = getRequiredKeyInfo(required_expressions[i]);\n@@ -196,13 +213,28 @@ function requiredParameter(req, required_expressions) {\n       getFunc = getValue;\n \n     val = getFunc(req, key);\n-    if (keyInfo.type === 'number') {\n+\n+    var typeMap = {\n+      int: parseInt,\n+      float: parseFloat,\n+      number: parseFloat\n+    };\n+\n+    var idx = Object.keys(typeMap).indexOf(keyInfo.type);\n+    if (idx >= 0) {\n       if (isNaN(val)) {\n         err = new Error('The parameter value is not a number : ' + key);\n         err.code = 400;\n         break;\n       }\n-      options[key] = parseFloat(val);\n+\n+      if (keyInfo.type == 'int' && !_.isSafeInteger(val)) {\n+        err = new Error('The parameter value is not a integer : ' + key);\n+        err.code = 400;\n+        break;\n+      }\n+\n+      options[key] = typeMap[keyInfo.type](val);\n     } else {\n       options[key] = val;\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "32dc0f243a884c3b7030fab5ac443a0e85d08a0b",
            "date": "2024-12-11T09:29:55Z",
            "author_login": "seungmin0105"
          },
          {
            "sha": "356e2795c81cfc78cda0ed36d01cf2ed17fb3b21",
            "date": "2024-12-11T09:17:54Z",
            "author_login": "seungmin0105"
          },
          {
            "sha": "461286ef75e2e45261df6f359953ef7fb33f4d1d",
            "date": "2023-06-02T04:26:54Z",
            "author_login": "seungmin0105"
          },
          {
            "sha": "3718a96df377a4796e70d2d627d165fc42b663f3",
            "date": "2023-05-25T13:34:23Z",
            "author_login": "seungmin0105"
          },
          {
            "sha": "a6ed39ccc190fabffc71fef5e7bdaf3bad839c6d",
            "date": "2023-01-02T01:30:26Z",
            "author_login": "dankang"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-235",
    "description": "A vulnerability was found in flitto express-param up to 0.x. It has been classified as critical. This affects an unknown part of the file lib/fetchParams.js. The manipulation leads to improper handling of extra parameters. It is possible to initiate the attack remotely. Upgrading to version 1.0.0 is able to address this issue. The identifier of the patch is db94f7391ad0a16dcfcba8b9be1af385b25c42db. It is recommended to upgrade the affected component. The identifier VDB-217149 was assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-31T20:15:08.693",
    "last_modified": "2024-11-21T03:22:46.553",
    "fix_date": "2017-03-02T07:47:06Z"
  },
  "references": [
    {
      "url": "https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/flitto/express-param/pull/19",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/flitto/express-param/releases/tag/1.0.0",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217149",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217149",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/flitto/express-param/pull/19",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/flitto/express-param/releases/tag/1.0.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217149",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217149",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.240950",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "express-param",
    "owner": "flitto",
    "created_at": "2014-09-04T15:00:00Z",
    "updated_at": "2024-12-11T09:30:00Z",
    "pushed_at": "2024-12-11T09:31:35Z",
    "size": 2952,
    "stars": 11,
    "forks": 4,
    "open_issues": 1,
    "watchers": 11,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "JavaScript": 42964
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:07:09.195176"
  }
}