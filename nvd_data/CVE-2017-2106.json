{
  "cve_id": "CVE-2017-2106",
  "github_data": {
    "repository": "webmin/webmin",
    "fix_commit": "475cc4fbdf51c865b291d252d81a58bad05de0c7",
    "related_commits": [
      "475cc4fbdf51c865b291d252d81a58bad05de0c7",
      "475cc4fbdf51c865b291d252d81a58bad05de0c7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "475cc4fbdf51c865b291d252d81a58bad05de0c7",
      "commit_date": "2016-10-21T22:46:23Z",
      "author": {
        "login": "jcameron",
        "type": "User",
        "stats": {
          "total_commits": 14403,
          "average_weekly_commits": 15.487096774193548,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 917
        }
      },
      "commit_message": {
        "title": "Strip out unsafe HTML from error messages",
        "length": 41,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 26,
        "deletions": 14
      },
      "files": [
        {
          "filename": "miniserv.pl",
          "status": "modified",
          "additions": 26,
          "deletions": 14,
          "patch": "@@ -1254,15 +1254,16 @@ sub handle_request\n # check address against access list\n if (@deny && &ip_match($acptip, $localip, @deny) ||\n     @allow && !&ip_match($acptip, $localip, @allow)) {\n-\t&http_error(403, \"Access denied for $acptip\");\n+\t&http_error(403, \"Access denied for \".&html_strip($acptip));\n \treturn 0;\n \t}\n \n if ($use_libwrap) {\n \t# Check address with TCP-wrappers\n \tif (!hosts_ctl($config{'pam'}, STRING_UNKNOWN,\n \t\t       $acptip, STRING_UNKNOWN)) {\n-\t\t&http_error(403, \"Access denied for $acptip by TCP wrappers\");\n+\t\t&http_error(403, \"Access denied for \".&html_strip($acptip).\n+\t\t\t\t \" by TCP wrappers\");\n \t\treturn 0;\n \t\t}\n \t}\n@@ -1286,7 +1287,7 @@ sub handle_request\n \t\t}\n \telse {\n \t\t&http_error(400, \"Timeout\",\n-\t\t\t    \"Waited for that $to seconds for start of headers\");\n+\t\t\t    \"Waited for $to seconds for start of headers\");\n \t\t}\n \t}\n $checked_timeout++;\n@@ -1413,11 +1414,12 @@ sub handle_request\n \t\t$header{$lastheader} .= $headline;\n \t\t}\n \telse {\n-\t\t&http_error(400, \"Bad Header $headline\");\n+\t\t&http_error(400, \"Bad Header \".&html_strip($headline));\n \t\t}\n \tif (&is_bad_header($header{$lastheader}, $lastheader)) {\n \t\tdelete($header{$lastheader});\n-\t\t&http_error(400, \"Bad Header Contents $lastheader\");\n+\t\t&http_error(400, \"Bad Header Contents \".\n+\t\t\t\t &html_strip($lastheader));\n \t\t}\n \t}\n \n@@ -1524,7 +1526,7 @@ sub handle_request\n \n # Reject CONNECT request, which isn't supported\n if ($method eq \"CONNECT\" || $method eq \"TRACE\") {\n-\t&http_error(405, \"Method $method is not supported\");\n+\t&http_error(405, \"Method \".&html_strip($method).\" is not supported\");\n \t}\n \n # work out accepted encodings\n@@ -1596,7 +1598,7 @@ sub handle_request\n \t\t}\n \t}\n if (!$davpath && ($method eq \"SEARCH\" || $method eq \"PUT\")) {\n-\t&http_error(400, \"Bad Request method $method\");\n+\t&http_error(400, \"Bad Request method \".&html_strip($method));\n \t}\n \n # Check for password if needed\n@@ -2016,15 +2018,17 @@ sub handle_request\n \t\t\t\t($>, $<) = ($u[2], $u[2]);\n \t\t\t\t}\n \t\t\telse {\n-\t\t\t\t&http_error(500, \"Unix user $authuser does not exist\");\n+\t\t\t\t&http_error(500, \"Unix user \".\n+\t\t\t\t  &html_strip($authuser).\" does not exist\");\n \t\t\t\treturn 0;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \n \t# Check per-user IP access control\n \tif (!&check_user_ip($baseauthuser)) {\n-\t\t&http_error(403, \"Access denied for $acptip for $baseauthuser\");\n+\t\t&http_error(403, \"Access denied for $acptip for \".\n+\t\t\t\t &html_strip($baseauthuser));\n \t\treturn 0;\n \t\t}\n \n@@ -2189,7 +2193,7 @@ sub handle_request\n # check filename against denyfile regexp\n local $denyfile = $config{'denyfile'};\n if ($denyfile && $full =~ /$denyfile/) {\n-\t&http_error(403, \"Access denied to \".&html_escape($page));\n+\t&http_error(403, \"Access denied to \".&html_strip($page));\n \treturn 0;\n \t}\n \n@@ -2257,7 +2261,7 @@ sub handle_request\n \t\t$len = length($df); $rest = \" \"x(35-$len);\n \t\t&write_data(sprintf \n \t\t \"<a href=\\\"%s\\\">%-${len}.${len}s</a>$rest %-20.20s %-10.10s\\n\",\n-\t\t &urlize($df), &html_escape($df), $fdate, $stbuf[7]);\n+\t\t &urlize($df), &html_strip($df), $fdate, $stbuf[7]);\n \t\t}\n \tclosedir(DIR);\n \t&log_request($loghost, $authuser, $reqline, $ok_code, &byte_count());\n@@ -2654,7 +2658,7 @@ sub http_error\n \t&reset_byte_count();\n \t&write_data(\"<h1>Error - $_[1]</h1>\\n\");\n \tif ($_[2]) {\n-\t\t&write_data(\"<pre>$_[2]</pre>\\n\");\n+\t\t&write_data(\"<p>$_[2]</p>\\n\");\n \t\t}\n \t}\n &log_request($loghost, $authuser, $reqline, $_[0], &byte_count())\n@@ -2976,7 +2980,7 @@ sub read_line\n while(($idx = index($main::read_buffer, \"\\n\")) < 0) {\n \tif (length($main::read_buffer) > 100000 && !$nolimit) {\n \t\t&http_error(414, \"Request too long\",\n-\t\t    \"Received excessive line <pre>$main::read_buffer</pre>\");\n+\t\t    \"Received excessive line <pre>\".&html_strip($main::read_buffer).\"</pre>\");\n \t\t}\n \n \t# need to read more..\n@@ -5206,7 +5210,8 @@ sub handle_dav_request\n \t\t\t}\n \t\t}\n \telse {\n-\t\t&http_error(500, \"Unix user $authuser does not exist\");\n+\t\t&http_error(500, \"Unix user \".&html_strip($authuser).\n+\t\t\t\t \" does not exist\");\n \t\treturn 0;\n \t\t}\n \t}\n@@ -6053,6 +6058,13 @@ sub html_escape\n return $tmp;\n }\n \n+sub html_strip\n+{\n+my ($tmp) = @_;\n+$tmp =~ s/<[^>]*>//g;\n+return $tmp;\n+}\n+\n # validate_twofactor(username, token)\n # Checks if a user's two-factor token is valid or not. Returns undef on success\n # or the error message on failure."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ad0b28abf78609f0f4e98fbec525039ff73f265e",
            "date": "2025-01-26T01:52:54Z",
            "author_login": "jcameron"
          },
          {
            "sha": "401631daec9c10cce5c1bf3ca0885e6315ebb800",
            "date": "2025-01-25T20:13:02Z",
            "author_login": "jcameron"
          },
          {
            "sha": "ee3357960044c3dbd3eebc3960579a8e13920b91",
            "date": "2025-01-25T19:17:12Z",
            "author_login": "iliajie"
          },
          {
            "sha": "ff065a56476baf1a11c6cf686f0092f8163bea8e",
            "date": "2025-01-25T18:04:35Z",
            "author_login": "jcameron"
          },
          {
            "sha": "e7d2dc8b67c075021a3da665de17dbd63a7f84cd",
            "date": "2025-01-25T17:38:49Z",
            "author_login": "jcameron"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "Multiple cross-site scripting vulnerabilities in Webmin versions prior to 1.830 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-04-28T16:59:00.887",
    "last_modified": "2024-11-21T03:22:54.640",
    "fix_date": "2016-10-21T22:46:23Z"
  },
  "references": [
    {
      "url": "http://jvn.jp/en/jp/JVN34207650/index.html",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/96227",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/webmin/webmin/commit/475cc4fbdf51c865b291d252d81a58bad05de0c7",
      "source": "vultures@jpcert.or.jp",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://jvn.jp/en/jp/JVN34207650/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/96227",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/webmin/webmin/commit/475cc4fbdf51c865b291d252d81a58bad05de0c7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.877680",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "webmin",
    "owner": "webmin",
    "created_at": "2009-07-20T22:03:42Z",
    "updated_at": "2025-01-26T01:53:02Z",
    "pushed_at": "2025-01-26T01:52:58Z",
    "size": 110513,
    "stars": 4598,
    "forks": 663,
    "open_issues": 518,
    "watchers": 4598,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 26069526,
      "Perl": 12330971,
      "Raku": 588929,
      "JavaScript": 345178,
      "Java": 212834,
      "CSS": 128080,
      "Prolog": 103232,
      "NewLisp": 82461,
      "Shell": 77820,
      "Python": 76600,
      "Ruby": 55550,
      "C#": 55225,
      "Roff": 33343,
      "MAXScript": 29070,
      "Makefile": 22007,
      "PHP": 18896,
      "SystemVerilog": 17056,
      "C": 15136,
      "Emacs Lisp": 14067,
      "Erlang": 5863,
      "Batchfile": 3160,
      "Smalltalk": 145
    },
    "commit_activity": {
      "total_commits_last_year": 1048,
      "avg_commits_per_week": 20.153846153846153,
      "days_active_last_year": 234
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-26T07:52:56.229498"
  }
}