{
  "cve_id": "CVE-2017-2604",
  "github_data": {
    "repository": "jenkinsci/jenkins",
    "fix_commit": "6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8",
    "related_commits": [
      "6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8",
      "6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8",
      "commit_date": "2016-12-20T20:16:05Z",
      "author": {
        "login": "jglick",
        "type": "User",
        "stats": {
          "total_commits": 3950,
          "average_weekly_commits": 5.064102564102564,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 479
        }
      },
      "commit_message": {
        "title": "Merge pull request #85 from jenkinsci-cert/security-371-staplerproxy",
        "length": 119,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 101,
        "additions": 86,
        "deletions": 15
      },
      "files": [
        {
          "filename": "core/src/main/java/hudson/diagnosis/HudsonHomeDiskUsageMonitor.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -24,14 +24,14 @@\n package hudson.diagnosis;\n \n import hudson.model.AdministrativeMonitor;\n-import jenkins.model.Jenkins;\n import hudson.model.AbstractModelObject;\n import hudson.Extension;\n import hudson.ExtensionPoint;\n import hudson.ExtensionList;\n import org.kohsuke.stapler.HttpResponse;\n import org.kohsuke.stapler.HttpResponses;\n import org.kohsuke.stapler.QueryParameter;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n import java.io.IOException;\n import java.util.List;\n@@ -64,6 +64,7 @@ public String getDisplayName() {\n     /**\n      * Depending on whether the user said \"yes\" or \"no\", send him to the right place.\n      */\n+    @RequirePOST\n     public HttpResponse doAct(@QueryParameter String no) throws IOException {\n         if(no!=null) {\n             disable(true);"
        },
        {
          "filename": "core/src/main/java/hudson/diagnosis/OldDataMonitor.java",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -52,6 +52,7 @@\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import javax.annotation.CheckForNull;\n+\n import jenkins.model.Jenkins;\n import org.acegisecurity.context.SecurityContext;\n import org.acegisecurity.context.SecurityContextHolder;"
        },
        {
          "filename": "core/src/main/java/hudson/diagnosis/ReverseProxySetupMonitor.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -36,6 +36,7 @@\n import java.util.logging.Logger;\n import jenkins.model.Jenkins;\n import org.kohsuke.stapler.Stapler;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n /**\n  * Looks out for a broken reverse proxy setup that doesn't rewrite the location header correctly.\n@@ -85,6 +86,7 @@ public void getTestForReverseProxySetup(String rest) {\n     /**\n      * Depending on whether the user said \"yes\" or \"no\", send him to the right place.\n      */\n+    @RequirePOST\n     public HttpResponse doAct(@QueryParameter String no) throws IOException {\n         if(no!=null) { // dismiss\n             disable(true);"
        },
        {
          "filename": "core/src/main/java/hudson/diagnosis/TooManyJobsButNoView.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -28,6 +28,7 @@\n import hudson.Extension;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n import java.io.IOException;\n \n@@ -49,6 +50,7 @@ public boolean isActivated() {\n     /**\n      * Depending on whether the user said \"yes\" or \"no\", send him to the right place.\n      */\n+    @RequirePOST\n     public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         if(req.hasParameter(\"no\")) {\n             disable(true);"
        },
        {
          "filename": "core/src/main/java/hudson/model/AdministrativeMonitor.java",
          "status": "modified",
          "additions": 15,
          "deletions": 2,
          "patch": "@@ -34,8 +34,12 @@\n import java.io.IOException;\n \n import jenkins.model.Jenkins;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n+import org.kohsuke.stapler.StaplerProxy;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n /**\n  * Checks the health of a subsystem of Jenkins and if there's something\n@@ -75,7 +79,7 @@\n  * @see Jenkins#administrativeMonitors\n  */\n @LegacyInstancesAreScopedToHudson\n-public abstract class AdministrativeMonitor extends AbstractModelObject implements ExtensionPoint {\n+public abstract class AdministrativeMonitor extends AbstractModelObject implements ExtensionPoint, StaplerProxy {\n     /**\n      * Human-readable ID of this monitor, which needs to be unique within the system.\n      *\n@@ -143,12 +147,21 @@ public boolean isEnabled() {\n     /**\n      * URL binding to disable this monitor.\n      */\n+    @RequirePOST\n     public void doDisable(StaplerRequest req, StaplerResponse rsp) throws IOException {\n-        Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);\n         disable(true);\n         rsp.sendRedirect2(req.getContextPath()+\"/manage\");\n     }\n \n+    /**\n+     * Requires ADMINISTER permission for any operation in here.\n+     */\n+    @Restricted(NoExternalUse.class)\n+    public Object getTarget() {\n+        Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);\n+        return this;\n+    }\n+\n     /**\n      * All registered {@link AdministrativeMonitor} instances.\n      */"
        },
        {
          "filename": "core/src/main/java/jenkins/diagnostics/SecurityIsOffMonitor.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -5,6 +5,7 @@\n import jenkins.model.Jenkins;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n import java.io.IOException;\n \n@@ -27,6 +28,7 @@ public boolean isActivated() {\n     /**\n      * Depending on whether the user said \"yes\" or \"no\", send him to the right place.\n      */\n+    @RequirePOST\n     public void doAct(StaplerRequest req, StaplerResponse rsp) throws IOException {\n         if(req.hasParameter(\"no\")) {\n             disable(true);"
        },
        {
          "filename": "core/src/main/java/jenkins/security/RekeySecretAdminMonitor.java",
          "status": "modified",
          "additions": 1,
          "deletions": 10,
          "patch": "@@ -11,7 +11,6 @@\n import jenkins.model.Jenkins;\n import jenkins.util.io.FileBoolean;\n import org.kohsuke.stapler.HttpResponse;\n-import org.kohsuke.stapler.StaplerProxy;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.interceptor.RequirePOST;\n \n@@ -29,7 +28,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n @Extension\n-public class RekeySecretAdminMonitor extends AsynchronousAdministrativeMonitor implements StaplerProxy {\n+public class RekeySecretAdminMonitor extends AsynchronousAdministrativeMonitor {\n \n     /**\n      * Whether we detected a need to run the rewrite program.\n@@ -62,14 +61,6 @@ &&  new FileBoolean(new File(j.getRootDir(),\"secret.key.not-so-secret\")).isOff()\n             needed.on();\n     }\n \n-    /**\n-     * Requires ADMINISTER permission for any operation in here.\n-     */\n-    public Object getTarget() {\n-        Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);\n-        return this;\n-    }\n-\n     @Override\n     public boolean isActivated() {\n         return needed.isOn();"
        },
        {
          "filename": "core/src/main/java/jenkins/security/s2m/AdminCallableMonitor.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n import org.kohsuke.stapler.HttpResponse;\n import org.kohsuke.stapler.HttpResponses;\n import org.kohsuke.stapler.QueryParameter;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n import javax.inject.Inject;\n import java.io.IOException;\n@@ -49,6 +50,7 @@ public AdminWhitelistRule getRule() {\n     /**\n      * Depending on whether the user said \"examin\" or \"dismiss\", send him to the right place.\n      */\n+    @RequirePOST\n     public HttpResponse doAct(@QueryParameter String dismiss) throws IOException {\n         if(dismiss!=null) {\n             disable(true);"
        },
        {
          "filename": "core/src/main/java/jenkins/security/s2m/MasterKillSwitchWarning.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -5,6 +5,7 @@\n import org.kohsuke.stapler.HttpResponse;\n import org.kohsuke.stapler.HttpResponses;\n import org.kohsuke.stapler.QueryParameter;\n+import org.kohsuke.stapler.interceptor.RequirePOST;\n \n import javax.inject.Inject;\n import java.io.IOException;\n@@ -28,6 +29,7 @@ public boolean isActivated() {\n         return rule.getMasterKillSwitch() && config.isRelevant();\n     }\n \n+    @RequirePOST\n     public HttpResponse doAct(@QueryParameter String dismiss) throws IOException {\n         if(dismiss!=null) {\n             disable(true);"
        },
        {
          "filename": "core/src/main/resources/hudson/diagnosis/HudsonHomeDiskUsageMonitor/index.jelly",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -24,7 +24,7 @@ THE SOFTWARE.\n \n <?jelly escape-by-default='true'?>\n <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\" xmlns:i=\"jelly:fmt\">\n-\t<l:layout title=\"${%JENKINS_HOME is almost full}\" permission=\"${app.ADMINISTER}\">\n+\t<l:layout title=\"${%JENKINS_HOME is almost full}\">\n \t\t<l:main-panel>\n       <h1>\n         <l:icon class=\"icon-warning icon-xlg\"/>"
        },
        {
          "filename": "core/src/main/resources/hudson/diagnosis/OldDataMonitor/manage.jelly",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -24,7 +24,7 @@ THE SOFTWARE.\n \n <?jelly escape-by-default='true'?>\n <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">\n-<l:layout title=\"${%Manage Old Data}\" permission=\"${app.ADMINISTER}\">\n+<l:layout title=\"${%Manage Old Data}\">\n   <st:include page=\"sidepanel.jelly\" it=\"${app}\"/>\n   <l:main-panel>\n     <h1>${%Manage Old Data}</h1>"
        },
        {
          "filename": "test/src/test/java/hudson/diagnosis/HudsonHomeDiskUsageMonitorTest.java",
          "status": "modified",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -1,18 +1,31 @@\n package hudson.diagnosis;\n \n+import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;\n+import com.gargoylesoftware.htmlunit.HttpMethod;\n+import com.gargoylesoftware.htmlunit.WebRequest;\n+import com.gargoylesoftware.htmlunit.util.NameValuePair;\n+import hudson.model.User;\n+import hudson.security.GlobalMatrixAuthorizationStrategy;\n+import hudson.security.HudsonPrivateSecurityRealm;\n+import hudson.security.Permission;\n+import jenkins.model.Jenkins;\n+import org.acegisecurity.context.SecurityContextHolder;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n import org.jvnet.hudson.test.JenkinsRule;\n import org.xml.sax.SAXException;\n import com.gargoylesoftware.htmlunit.html.HtmlPage;\n import com.gargoylesoftware.htmlunit.html.HtmlForm;\n import com.gargoylesoftware.htmlunit.ElementNotFoundException;\n \n import java.io.IOException;\n+import java.util.Collections;\n \n /**\n  * @author Kohsuke Kawaguchi\n@@ -45,6 +58,48 @@ public void flow() throws Exception {\n         }\n     }\n \n+    @Issue(\"SECURITY-371\")\n+    @Test\n+    public void noAccessForNonAdmin() throws Exception {\n+        JenkinsRule.WebClient wc = j.createWebClient();\n+\n+        // TODO: Use MockAuthorizationStrategy in later versions\n+        JenkinsRule.DummySecurityRealm realm = j.createDummySecurityRealm();\n+        realm.addGroups(\"administrator\", \"admins\");\n+        realm.addGroups(\"bob\", \"users\");\n+        j.jenkins.setSecurityRealm(realm);\n+        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();\n+        auth.add(Jenkins.ADMINISTER, \"admins\");\n+        auth.add(Jenkins.READ, \"users\");\n+        j.jenkins.setAuthorizationStrategy(auth);\n+\n+        WebRequest request = new WebRequest(wc.createCrumbedUrl(\"administrativeMonitor/hudsonHomeIsFull/act\"), HttpMethod.POST);\n+        NameValuePair param = new NameValuePair(\"no\", \"true\");\n+        request.setRequestParameters(Collections.singletonList(param));\n+\n+        HudsonHomeDiskUsageMonitor mon = HudsonHomeDiskUsageMonitor.get();\n+\n+        try {\n+            wc.login(\"bob\");\n+            wc.getPage(request);\n+        } catch (FailingHttpStatusCodeException e) {\n+            assertEquals(403, e.getStatusCode());\n+        }\n+        assertTrue(mon.isEnabled());\n+\n+        try {\n+            WebRequest getIndex = new WebRequest(wc.createCrumbedUrl(\"administrativeMonitor/hudsonHomeIsFull\"), HttpMethod.GET);\n+            wc.getPage(getIndex);\n+        } catch (FailingHttpStatusCodeException e) {\n+            assertEquals(403, e.getStatusCode());\n+        }\n+\n+        wc.login(\"administrator\");\n+        wc.getPage(request);\n+        assertFalse(mon.isEnabled());\n+\n+    }\n+\n     /**\n      * Gets the warning form.\n      */"
        }
      ],
      "file_patterns": {
        "security_files": 4,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 8,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5327cd59bdd289a299ff2557798613a8ffb107f9",
            "date": "2025-01-25T20:31:24Z",
            "author_login": "krisstern"
          },
          {
            "sha": "2183bcac4ca52be0c47e56dc802023312b5472d0",
            "date": "2025-01-24T18:29:26Z",
            "author_login": "krisstern"
          },
          {
            "sha": "331bd7ea13fef6bde1b109a6c2c58393e2487d25",
            "date": "2025-01-24T18:27:05Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "4db68bf59547787a030449434c7ecbaff074998c",
            "date": "2025-01-24T18:26:23Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "b5a5e0411bcd7d5cd09a6eaa5e64f09f7cff35f3",
            "date": "2025-01-24T07:31:57Z",
            "author_login": "krisstern"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-358",
    "description": "In Jenkins before versions 2.44, 2.32.2 low privilege users were able to act on administrative monitors due to them not being consistently protected by permission checks (SECURITY-371).",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-05-15T21:29:00.353",
    "last_modified": "2024-11-21T03:23:48.840",
    "fix_date": "2016-12-20T20:16:05Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/95959",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2604",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/jenkinsci/jenkins/commit/6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://jenkins.io/security/advisory/2017-02-01/",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95959",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-2604",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/jenkinsci/jenkins/commit/6efcf6c2ac39bc5c59ac7251822be8ddf67ceaf8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://jenkins.io/security/advisory/2017-02-01/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.842824",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "jenkins",
    "owner": "jenkinsci",
    "created_at": "2010-11-22T21:21:23Z",
    "updated_at": "2025-01-26T06:19:41Z",
    "pushed_at": "2025-01-25T20:31:24Z",
    "size": 162432,
    "stars": 23526,
    "forks": 8902,
    "open_issues": 77,
    "watchers": 23526,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-1.625",
      "stable-1.642",
      "stable-1.651",
      "stable-2.7",
      "stable-2.19",
      "stable-2.32",
      "stable-2.46",
      "stable-2.60",
      "stable-2.73",
      "stable-2.89",
      "stable-2.107",
      "stable-2.121",
      "stable-2.138",
      "stable-2.150",
      "stable-2.164",
      "stable-2.176",
      "stable-2.190",
      "stable-2.204",
      "stable-2.222",
      "stable-2.235",
      "stable-2.249",
      "stable-2.263",
      "stable-2.277",
      "stable-2.289",
      "stable-2.302"
    ],
    "languages": {
      "Java": 12302562,
      "HTML": 970700,
      "JavaScript": 398467,
      "SCSS": 322300,
      "Groovy": 68795,
      "CSS": 41799,
      "Ruby": 17290,
      "Perl": 16145,
      "Handlebars": 14958,
      "Python": 4925,
      "ANTLR": 4633,
      "Shell": 2871,
      "C": 2091,
      "Batchfile": 1023,
      "Dockerfile": 210
    },
    "commit_activity": {
      "total_commits_last_year": 1422,
      "avg_commits_per_week": 27.346153846153847,
      "days_active_last_year": 304
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:41:43.638362"
  }
}