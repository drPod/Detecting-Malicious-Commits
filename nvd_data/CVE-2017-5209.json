{
  "cve_id": "CVE-2017-5209",
  "github_data": {
    "repository": "libimobiledevice/libplist",
    "fix_commit": "3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
    "related_commits": [
      "3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
      "3a55ddd3c4c11ce75a86afbefd085d8d397ff957"
    ],
    "patch_url": "https://github.com/libimobiledevice/libplist/commit/3a55ddd3c4c11ce75a86afbefd085d8d397ff957.patch",
    "fix_commit_details": {
      "sha": "3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
      "commit_date": "2017-01-11T02:49:31Z",
      "author": {
        "login": "nikias",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "base64: Rework base64decode to handle split encoded data correctly",
        "length": 66,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 68,
        "additions": 27,
        "deletions": 41
      },
      "files": [
        {
          "filename": "src/base64.c",
          "status": "modified",
          "additions": 27,
          "deletions": 41,
          "patch": "@@ -28,7 +28,7 @@ static const signed char base64_table[256] = {\n \t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n \t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n \t-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n-\t52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n+\t52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1,\n \t-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n \t15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n \t-1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n@@ -71,38 +71,6 @@ size_t base64encode(char *outbuf, const unsigned char *buf, size_t size)\n \treturn m;\n }\n \n-static int base64decode_block(unsigned char *target, const char *data, size_t data_size)\n-{\n-\tint w1,w2,w3,w4;\n-\tint i;\n-\tsize_t n;\n-\n-\tif (!data || (data_size <= 0)) {\n-\t\treturn 0;\n-\t}\n-\n-\tn = 0;\n-\ti = 0;\n-\twhile (n < data_size-3) {\n-\t\tw1 = base64_table[(int)data[n]];\n-\t\tw2 = base64_table[(int)data[n+1]];\n-\t\tw3 = base64_table[(int)data[n+2]];\n-\t\tw4 = base64_table[(int)data[n+3]];\n-\n-\t\tif (w2 >= 0) {\n-\t\t\ttarget[i++] = (char)((w1*4 + (w2 >> 4)) & 255);\n-\t\t}\n-\t\tif (w3 >= 0) {\n-\t\t\ttarget[i++] = (char)((w2*16 + (w3 >> 2)) & 255);\n-\t\t}\n-\t\tif (w4 >= 0) {\n-\t\t\ttarget[i++] = (char)((w3*64 + w4) & 255);\n-\t\t}\n-\t\tn+=4;\n-\t}\n-\treturn i;\n-}\n-\n unsigned char *base64decode(const char *buf, size_t *size)\n {\n \tif (!buf || !size) return NULL;\n@@ -111,19 +79,37 @@ unsigned char *base64decode(const char *buf, size_t *size)\n \tunsigned char *outbuf = (unsigned char*)malloc((len/4)*3+3);\n \tconst char *ptr = buf;\n \tint p = 0;\n-\tsize_t l = 0;\n+\tint wv, w1, w2, w3, w4;\n+\tint tmpval[4];\n+\tint tmpcnt = 0;\n \n \tdo {\n-\t\tptr += strspn(ptr, \"\\r\\n\\t \");\n+\t\twhile (ptr < buf+len && (*ptr == ' ' || *ptr == '\\t' || *ptr == '\\n' || *ptr == '\\r')) {\n+\t\t\tptr++;\n+\t\t}\n \t\tif (*ptr == '\\0' || ptr >= buf+len) {\n \t\t\tbreak;\n \t\t}\n-\t\tl = strcspn(ptr, \"\\r\\n\\t \");\n-\t\tif (l > 3 && ptr+l <= buf+len) {\n-\t\t\tp+=base64decode_block(outbuf+p, ptr, l);\n-\t\t\tptr += l;\n-\t\t} else {\n-\t\t\tbreak;\n+\t\tif ((wv = base64_table[(int)(unsigned char)*ptr++]) == -1) {\n+\t\t\tcontinue;\n+\t\t}\n+\t\ttmpval[tmpcnt++] = wv;\n+\t\tif (tmpcnt == 4) {\n+\t\t\ttmpcnt = 0;\n+\t\t\tw1 = tmpval[0];\n+\t\t\tw2 = tmpval[1];\n+\t\t\tw3 = tmpval[2];\n+\t\t\tw4 = tmpval[3];\n+\n+\t\t\tif (w2 >= 0) {\n+\t\t\t\toutbuf[p++] = (unsigned char)(((w1 << 2) + (w2 >> 4)) & 0xFF);\n+\t\t\t}\n+\t\t\tif (w3 >= 0) {\n+\t\t\t\toutbuf[p++] = (unsigned char)(((w2 << 4) + (w3 >> 2)) & 0xFF);\n+\t\t\t}\n+\t\t\tif (w4 >= 0) {\n+\t\t\t\toutbuf[p++] = (unsigned char)(((w3 << 6) + w4) & 0xFF);\n+\t\t\t}\n \t\t}\n \t} while (1);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "44099d4b79c8d6a7d599d652ebef62db8dae6696",
            "date": "2024-12-03T01:31:03Z",
            "author_login": "nikias"
          },
          {
            "sha": "e3ca6af2c580c0b748a5635c15b973094765abbf",
            "date": "2024-12-03T01:28:15Z",
            "author_login": "nikias"
          },
          {
            "sha": "8dee549fd286ab152e94428f38eae6edac1bb746",
            "date": "2024-12-02T04:59:09Z",
            "author_login": "nikias"
          },
          {
            "sha": "c1e3868485c16292d1c7c69f8dc891fd378286b1",
            "date": "2024-11-29T01:58:51Z",
            "author_login": "nikias"
          },
          {
            "sha": "581b3e23a72ab54fda875ca447b4e492051bbd1c",
            "date": "2024-11-29T00:20:23Z",
            "author_login": "nikias"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "The base64decode function in base64.c in libimobiledevice libplist through 1.12 allows attackers to obtain sensitive information from process memory or cause a denial of service (buffer over-read) via split encoded Apple Property List data.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-01-11T16:59:00.377",
    "last_modified": "2024-11-21T03:27:17.073",
    "fix_date": "2017-01-11T02:49:31Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/95385",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/commit/3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00002.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/95385",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/commit/3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00002.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:49.828679",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libplist",
    "owner": "libimobiledevice",
    "created_at": "2013-02-13T14:30:43Z",
    "updated_at": "2025-01-01T05:20:20Z",
    "pushed_at": "2024-12-03T01:31:09Z",
    "size": 1632,
    "stars": 557,
    "forks": 311,
    "open_issues": 41,
    "watchers": 557,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 409111,
      "C++": 54470,
      "M4": 54312,
      "Cython": 31791,
      "Shell": 18863,
      "Makefile": 8622
    },
    "commit_activity": {
      "total_commits_last_year": 34,
      "avg_commits_per_week": 0.6538461538461539,
      "days_active_last_year": 20
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T13:14:25.087817"
  }
}