{
  "cve_id": "CVE-2017-5553",
  "github_data": {
    "repository": "b2evolution/b2evolution",
    "fix_commit": "ce5b36e44b714b18b0bcd34c6db0187b8d13bab8",
    "related_commits": [
      "ce5b36e44b714b18b0bcd34c6db0187b8d13bab8",
      "ce5b36e44b714b18b0bcd34c6db0187b8d13bab8"
    ],
    "patch_url": "https://github.com/b2evolution/b2evolution/commit/ce5b36e44b714b18b0bcd34c6db0187b8d13bab8.patch",
    "fix_commit_details": {
      "sha": "ce5b36e44b714b18b0bcd34c6db0187b8d13bab8",
      "commit_date": "2017-01-19T07:24:29Z",
      "author": {
        "login": "yurabakhtin",
        "type": "User",
        "stats": {
          "total_commits": 6442,
          "average_weekly_commits": 5.756925826630921,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 267
        }
      },
      "commit_message": {
        "title": "Ignore wrong urls on markdown plugin",
        "length": 36,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 9,
        "additions": 5,
        "deletions": 4
      },
      "files": [
        {
          "filename": "plugins/markdown_plugin/_parsedown.inc.php",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -29,6 +29,7 @@\n \t9. Don't apply <p> around list and already existing paragraph tags\n \t10. Don't convert HTML entities inside <code> html tags because the \"Escape code\" plugin does this\n \t11. Fix the missed empty lines in code blocks which are started and ended with ```\n+\t12. Ignore wrong URLs for links and images; Allow only which begin with http://, https:// or /\n */\n \n class Parsedown\n@@ -100,7 +101,7 @@ function parse($text)\n \n \t\t# Extracts link references.\n \n-\t\tif (preg_match_all('/^[ ]{0,3}\\[(.+)\\][ ]?:[ ]*\\n?[ ]*(.+)$/m', $text, $matches, PREG_SET_ORDER))\n+\t\tif (preg_match_all('/^[ ]{0,3}\\[(.+)\\][ ]?:[ ]*\\n?[ ]*((https?:\\/\\/|\\/).+)$/m', $text, $matches, PREG_SET_ORDER))\n \t\t{\n \t\t\tforeach ($matches as $matches)\n \t\t\t{\n@@ -589,23 +590,23 @@ private function parse_inline_elements($text)\n \t\t\tif( strpos($text, '](') !== FALSE ) # inline\n \t\t\t{\n \t\t\t\t$text = str_replace( '&quot;', '\"', $text ); // revert from html entity\n-\t\t\t\tif( preg_match_all( '/(!?)(\\[((?:[^][]+|(?2))*)\\])\\(([^\"]*?)( \"([^\"]+)\")?\\)/', $text, $matches, PREG_SET_ORDER ) )\n+\t\t\t\tif( preg_match_all( '/(!?)(\\[((?:[^][]+|(?2))*)\\])\\((https?:\\/\\/|\\/)([^\"]*?)( \"([^\"]+)\")?\\)/', $text, $matches, PREG_SET_ORDER ) )\n \t\t\t\t{\n \t\t\t\t\tforeach ($matches as $matches)\n \t\t\t\t\t{\n \t\t\t\t\t\tif ($matches[1]) # image\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tif( $this->parse_images )\n \t\t\t\t\t\t\t{ // Parse images only if it is enabled\n-\t\t\t\t\t\t\t\t$element = '<img src=\"'.$matches[4].'\" alt=\"'.$matches[3].'\"'.( ! empty( $matches[6] ) ? ' title=\"'.$matches[6].'\"' : '' ).'>';\n+\t\t\t\t\t\t\t\t$element = '<img src=\"'.$matches[4].$matches[5].'\" alt=\"'.$matches[3].'\"'.( ! empty( $matches[7] ) ? ' title=\"'.$matches[7].'\"' : '' ).'>';\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tif( $this->parse_links )\n \t\t\t\t\t\t\t{ // Parse links only if it is enabled\n \t\t\t\t\t\t\t\t$element_text = $this->parse_inline_elements($matches[3]);\n-\t\t\t\t\t\t\t\t$element = '<a href=\"'.$matches[4].'\"'.( ! empty( $matches[6] ) ? ' title=\"'.$matches[6].'\"' : '' ).'>'.$element_text.'</a>';\n+\t\t\t\t\t\t\t\t$element = '<a href=\"'.$matches[4].$matches[5].'\"'.( ! empty( $matches[7] ) ? ' title=\"'.$matches[7].'\"' : '' ).'>'.$element_text.'</a>';\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a7920fa31b433793ff59c14f70e6f01f613f595f",
            "date": "2022-09-09T13:59:39Z",
            "author_login": "fplanque"
          },
          {
            "sha": "d5c2e39d3748a4cb01c7796e506ef1c3bf303b93",
            "date": "2022-08-06T11:12:47Z",
            "author_login": "fplanque"
          },
          {
            "sha": "f370d003395ed952d2c8530107718f012637e0b9",
            "date": "2022-08-06T11:11:21Z",
            "author_login": "fplanque"
          },
          {
            "sha": "936822a34307d4442b490dc92570f2d2775d1703",
            "date": "2022-06-08T19:40:57Z",
            "author_login": "fplanque"
          },
          {
            "sha": "b983b82a19e96d69d8e87e8639093e893c8ae369",
            "date": "2022-06-07T20:11:05Z",
            "author_login": "fplanque"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "Cross-site scripting (XSS) vulnerability in plugins/markdown_plugin/_markdown.plugin.php in b2evolution before 6.8.5 allows remote authenticated users to inject arbitrary web script or HTML via a javascript: URL.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-01-23T07:59:00.580",
    "last_modified": "2024-11-21T03:27:52.927",
    "fix_date": "2017-01-19T07:24:29Z"
  },
  "references": [
    {
      "url": "http://b2evolution.net/downloads/6-8-5",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95704",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/b2evolution/b2evolution/commit/ce5b36e44b714b18b0bcd34c6db0187b8d13bab8",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://b2evolution.net/downloads/6-8-5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/95704",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/b2evolution/b2evolution/commit/ce5b36e44b714b18b0bcd34c6db0187b8d13bab8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:49.839482",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "b2evolution",
    "owner": "b2evolution",
    "created_at": "2014-06-18T00:08:10Z",
    "updated_at": "2025-01-11T19:27:43Z",
    "pushed_at": "2022-12-06T19:28:38Z",
    "size": 186741,
    "stars": 178,
    "forks": 88,
    "open_issues": 7,
    "watchers": 178,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 19993657,
      "JavaScript": 7173401,
      "CSS": 708761,
      "Less": 354448,
      "HTML": 55597,
      "Pascal": 42369,
      "C": 20339,
      "Shell": 4778,
      "M4": 1601
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0.0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:05:05.887108"
  }
}