{
  "cve_id": "CVE-2017-6087",
  "github_data": {
    "repository": "EyesOfNetworkCommunity/eonweb",
    "fix_commit": "196729cc045ef93ceeddd1de505a1de8f9cdf74d",
    "related_commits": [
      "196729cc045ef93ceeddd1de505a1de8f9cdf74d",
      "196729cc045ef93ceeddd1de505a1de8f9cdf74d"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "196729cc045ef93ceeddd1de505a1de8f9cdf74d",
      "commit_date": "2016-10-27T07:33:52Z",
      "author": {
        "login": "jeanphilippelevy",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix vulnerabilities",
        "length": 19,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 375,
        "additions": 243,
        "deletions": 132
      },
      "files": [
        {
          "filename": "include/arrays.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -37,6 +37,8 @@\n \t10 => \"EON - Name Error\",\n \t11 => \"EON - GED\");\n \n+$array_modules = array (\"glpi\",\"ocsinventory-reports\");\n+\t\n $array_tools = array (\n \t\"snmpwalk\"\t\t => \"tools/snmpwalk.php\",\n \t\"show interface\" => \"tools/interface.php\",\n@@ -60,6 +62,8 @@\n \t\"duplicate\" \t\t=> \"duplicate\",\n \t\"back-up file\" \t\t=> \"backup\");\n \n+$array_ged_queues = array(\"active\",\"sync\",\"history\");\n+\t\t\n $array_ged_types = array(\n \t0 => \"label.all\",\n \t1 => \"services\","
        },
        {
          "filename": "include/function.php",
          "status": "modified",
          "additions": 17,
          "deletions": 3,
          "patch": "@@ -63,7 +63,7 @@ function message($id, $text, $type){\n }\n \n // Connect to Database\n-function sqlrequest($database,$sql,$id=false){\n+function sqlrequest($database,$sql,$id=false,$prepare=false){\n \n \t// Get the global value\n \tglobal $database_host;\n@@ -83,8 +83,22 @@ function sqlrequest($database,$sql,$id=false){\n \t\t// Force UTF-8\n \t\tmysqli_query($connexion, \"SET NAMES 'utf8'\");\n \t}\n-\t$result=mysqli_query($connexion, \"$sql\");\n-\n+\t\n+\tif(is_array($prepare)) {\n+\t\t$stmt = mysqli_prepare($connexion,$sql);\n+\t\t\n+\t\tif(isset($prepare[0]) && isset($prepare[1])) {\n+\t\t\t$ref = new ReflectionClass('mysqli_stmt');\n+\t\t\t$method = $ref->getMethod(\"bind_param\");\n+\t\t\t$method->invokeArgs($stmt,$prepare);\n+\t\t}\n+\t\t\n+\t\tmysqli_stmt_execute($stmt);\n+\t\t$result = mysqli_stmt_get_result($stmt);\n+\t} else {\n+\t\t$result=mysqli_query($connexion, \"$sql\");\n+\t}\n+\t\t\n \tif($id==true)\n \t\t$result=mysqli_insert_id($connexion);\n \t\t"
        },
        {
          "filename": "module/admin_bp/php/auto_completion.php",
          "status": "modified",
          "additions": 19,
          "deletions": 15,
          "patch": "@@ -1,20 +1,24 @@\n <?php\n-  // Mot tap\u00e9 par l'utilisateur\n-  $q = $_GET['query'];\n-\t$table_name = $_GET['table_name'];\n \n-    try {\n-        $bdd = new PDO('mysql:host=localhost;dbname=lilac', 'root', 'root66');\n-    } catch(Exception $e) {\n-\t\t echo \"Connection failed: \" . $e->getMessage();\n-        exit('Impossible de se connecter \u00e0 la base de donn\u00e9es.');\n-    }\n+include(\"../../../include/config.php\");\n \n-    // Requ\u00eate SQL\n-    $requete = \"SELECT name FROM \" . $table_name .  \" WHERE name LIKE '\". $q .\"%' LIMIT 0, 10\";\n+// Mot tap\u00e9 par l'utilisateur\n+$q = $_GET['query'];\n+$table_name = $_GET['table_name'];\n+\n+try {\n+\t$bdd = new PDO('mysql:host=localhost;dbname='.$database_lilac, $database_username, $database_password);\n+} catch(Exception $e) {\n+\t echo \"Connection failed: \" . $e->getMessage();\n+\texit('Impossible de se connecter \u00e0 la base de donn\u00e9es.');\n+}\n+\n+// Requ\u00eate SQL\n+$requete = \"SELECT name FROM \" . $table_name .  \" WHERE name LIKE '\". $q .\"%' LIMIT 0, 10\";\n+\n+foreach  ($bdd->query($requete) as $row) {\n+\t$suggestions['suggestions'][] = $row['name'];\n+}\n+echo json_encode($suggestions);\n \n-\tforeach  ($bdd->query($requete) as $row) {\n-\t\t$suggestions['suggestions'][] = $row['name'];\n-\t}\n-    echo json_encode($suggestions);\n ?>"
        },
        {
          "filename": "module/admin_bp/php/function_bp.php",
          "status": "modified",
          "additions": 81,
          "deletions": 56,
          "patch": "@@ -1,5 +1,7 @@\n <?php\n \n+include(\"../../../include/config.php\");\n+\n $action = isset($_GET['action']) ? $_GET['action'] : false;\n $bp_name = isset($_GET['bp_name']) ? $_GET['bp_name'] : false;\n $host_name = isset($_GET['host_name']) ? $_GET['host_name'] : false;\n@@ -16,7 +18,7 @@\n $min_value = isset($_GET['min_value']) ? $_GET['min_value'] : false;\n \n try {\n-\t$bdd = new PDO('mysql:host=localhost;dbname=nagiosbp', 'root', 'root66');\n+\t$bdd = new PDO('mysql:host=localhost;dbname='.$database_nagios, $database_username, $database_password);\n } catch(Exception $e) {\n \techo \"Connection failed: \" . $e->getMessage();\n \texit('Impossible de se connecter \u00e0 la base de donn\u00e9es.');\n@@ -73,17 +75,21 @@ function verify_services($bp,$host,$bdd){\n }\n \n function delete_bp($bp,$bdd){\n-    $sql = \"delete from bp where name = '\" . $bp . \"'\";\n-    $bdd->exec($sql);\n+\t$sql = \"delete from bp where name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n \n-\t$sql = \"delete from bp_services where bp_name = '\" . $bp . \"'\";\n-    $bdd->exec($sql);\n+\t$sql = \"delete from bp_services where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n \n-\t$sql = \"delete from bp_links where bp_name = '\" . $bp . \"'\";\n-\t$bdd->exec($sql);\n+\t$sql = \"delete from bp_links where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n \t\n-\t$sql = \"delete from bp_links where bp_link = '\" . $bp . \"'\";\n-\t$bdd->exec($sql);\n+\t$sql = \"delete from bp_links where bp_link = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n }\n \n function list_services($host_name){\n@@ -112,8 +118,9 @@ function list_services($host_name){\n }\n \n function list_process($bp,$display,$bdd){\n-\t$sql = \"select name from bp where is_define = 1 and name!='\".$bp.\"' and priority = '\" . $display . \"'\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select name from bp where is_define = 1 and name!=? and priority = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp,$display));\n \t$process = $req->fetchall();\n \n     echo json_encode($process);\n@@ -130,20 +137,20 @@ function add_services($bp,$services,$bdd){\n \t\t\t$list_services[] = $service;\n \t\t}\n \t}\n-\t$sql = \"select service,host from bp_services where bp_name = '\" . $bp . \"'\";\n-\t$req = $bdd->query($sql);\n \n-\t$sql = \"delete from bp_services where bp_name = '\" . $bp . \"'\";\n-\t$bdd->exec($sql);\n+\t$sql = \"delete from bp_services where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n \n \tif(count($services) > 0){\n-\t\t$sql = \"update bp set is_define = 1 where name = '\" . $bp . \"'\";\n-\t\t$bdd->exec($sql);\n+\t\t$sql = \"update bp set is_define = 1 where name = ?\";\n+\t\t$req = $bdd->prepare($sql);\n+\t\t$req->execute(array($bp));\n \t}\n-\n \telse{\n-\t\t$sql = \"update bp set is_define = 0 where name = '\" . $bp . \"'\";\n-        $bdd->exec($sql);\n+\t\t$sql = \"update bp set is_define = 0 where name = ?\";\n+\t\t$req = $bdd->prepare($sql);\n+\t\t$req->execute(array($bp));\n     }\n \n \tif(is_array($services)) {\n@@ -152,37 +159,43 @@ function add_services($bp,$services,$bdd){\n \t\t\t$host = $value[0];\n \t\t\t$service = $value[1];\n \t\t\techo $service;\n-\t\t\t$sql = \"insert into bp_services (bp_name,host,service) values('\" . trim($bp) . \"','\" . $host . \"','\" . $service . \"')\";\n-\t\t\t$bdd->exec($sql);\n+\t\t\t$sql = \"insert into bp_services (bp_name,host,service) values(?,?,?)\";\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array(trim($bp),$host,$service));\n \t\t}\n \t}\n }\n \n function add_process($bp,$process,$bdd){\n-    $sql = \"delete from bp_links where bp_name = '\" . $bp . \"'\";\n-    $bdd->exec($sql);\n-\t$sql = \"update bp set is_define = 0 where name = '\" . $bp . \"'\";\n-\t$bdd->exec($sql);\t\n+\t$sql = \"delete from bp_links where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n+\t$sql = \"update bp set is_define = 0 where name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp));\n \n     if(count($process) > 0 and is_array($process)){\n-        $sql = \"update bp set is_define = 1 where name = '\" . $bp . \"'\";\n-        $bdd->exec($sql);\n+\t\t$sql = \"update bp set is_define = 1 where name = ?\";\n+\t\t$req = $bdd->prepare($sql);\n+\t\t$req->execute(array($bp));\n \t\n \t\tforeach($process as $values){\n \t\t\t$value = explode(\"::\", $values);\n \t\t\t$bp_link = $value[1];\n \n-\t\t\t$sql = \"insert into bp_links (bp_name,bp_link) values('\" . $bp . \"','\" . $bp_link . \"')\";\n+\t\t\t$sql = \"insert into bp_links (bp_name,bp_link) values(?,?)\";\n \n-\t\t\t$bdd->exec($sql);\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($bp,$bp_link));\n \t\t}\t\n \t}\n }\n \n function check_app_exists($uniq_name, $bdd)\n {\n-\t$sql = \"select count(*) from bp where name = '\" . $uniq_name . \"';\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select count(*) from bp where name = ?;\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($uniq_name));\n \t$bp_exist = $req->fetch(PDO::FETCH_NUM);\n \t\n \tif($bp_exist[0] == 1){\n@@ -196,34 +209,41 @@ function add_application($uniq_name_orig,$uniq_name,$process_name,$display,$url,\n \tif($type != 'MIN'){\n \t\t$min_value = \"\";\n \t}\n-\t$sql = \"select count(*) from bp where name = '\" . $uniq_name . \"';\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select count(*) from bp where name = ?;\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($uniq_name));\n \t$bp_exist = $req->fetch();\n \n \t// add\n \tif($bp_exist[0] == 0 and empty($uniq_name_orig)){\n-\t\t$sql = \"insert into bp (name,description,priority,type,command,url,min_value) values('\" . $uniq_name .\"','\" . $process_name .\"','\" . $display . \"','\" . $type . \"','\" . $command . \"','\" . $url . \"','\" . $min_value . \"')\";\n-\t\t$bdd->exec($sql);\n+\t\t$sql = \"insert into bp (name,description,priority,type,command,url,min_value) values(?,?,?,?,?,?,?)\";\n+\t\t$req = $bdd->prepare($sql);\n+\t\t$req->execute(array($uniq_name,$process_name,$display,$type,$command,$url,$min_value));\n \t}\n \t// uniq name modification\n \telseif($uniq_name_orig != $uniq_name) {\n \t\tif($bp_exist[0] != 0){\n \t\t\t// TODO QUENTIN\n \t\t} else {\n-\t\t\t$sql = \"update bp set name = '\" . $uniq_name . \"',description = '\" . $process_name . \"',priority = '\" . $display . \"',type = '\" . $type . \"',command = '\" . $command . \"',url = '\" . $url . \"',min_value = '\" . $min_value . \"' where name = '\" . $uniq_name_orig . \"'\";\n-\t\t\t$bdd->exec($sql);\n-\t\t\t$sql = \"update bp_links set bp_name = '\" . $uniq_name . \"' where bp_name = '\" . $uniq_name_orig . \"'\";\n-\t\t\t$bdd->exec($sql);\t\t\n-\t\t\t$sql = \"update bp_links set bp_link = '\" . $uniq_name . \"' where bp_link = '\" . $uniq_name_orig . \"'\";\n-\t\t\t$bdd->exec($sql);\n-\t\t\t$sql = \"update bp_services set bp_name = '\" . $uniq_name . \"' where bp_name = '\" . $uniq_name_orig . \"'\";\t\t\t\t\t\n-\t\t\t$bdd->exec($sql);\t\t\n+\t\t\t$sql = \"update bp set name = ?,description = ?,priority = ?,type = ?,command = ?,url = ?,min_value = ? where name = ?\";\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($uniq_name,$process_name,$display,$type,$command,$url,$min_value,$uniq_name_orig));\n+\t\t\t$sql = \"update bp_links set bp_name = ? where bp_name = ?\";\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($uniq_name,$uniq_name_orig));\t\n+\t\t\t$sql = \"update bp_links set bp_link = ? where bp_link = ?\";\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($uniq_name,$uniq_name_orig));\n+\t\t\t$sql = \"update bp_services set bp_name = ? where bp_name = ?\";\t\t\t\t\t\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($uniq_name,$uniq_name_orig));\t\n \t\t}\n \t}\t\n \t// modification\n \telse{\n-\t\t$sql = \"update bp set name = '\" . $uniq_name . \"',description = '\" . $process_name . \"',priority = '\" . $display . \"',type = '\" . $type . \"',command = '\" . $command . \"',url = '\" . $url . \"',min_value = '\" . $min_value . \"' where name = '\" . $uniq_name . \"'\";\n-\t\t$bdd->exec($sql);\t\n+\t\t$sql = \"update bp set name = ?,description = ?,priority = ?,type = ?,command = ?,url = ?,min_value = ? where name = ?\";\n+\t\t$req = $bdd->prepare($sql);\n+\t\t$req->execute(array($uniq_name,$process_name,$display,$type,$command,$url,$min_value,$uniq_name));\n \t}\n }\n \n@@ -252,16 +272,18 @@ function build_file($bdd){\n \n function build_file_recursive($bdd,$bp_file,$bp_informations,$bp_sons){\n \n-\t$sql = \"SELECT bp_link FROM bp_links where bp_name='\".$bp_informations['name'].\"'\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"SELECT bp_link FROM bp_links where bp_name=?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp_informations['name']));\n \tif($req->rowCount() == 0) {\n \t\t$bp_sons[]=$bp_informations['name'];\n \t\tbuild_file_bp($bdd,$bp_file, $bp_informations);\n \t} else {\n \t\t$bp_links = $req->fetchall();\n \t\tforeach($bp_links as $bp_link){\n-\t\t\t$sql = \"SELECT * FROM bp where is_define ='1' and name='\".$bp_link[\"bp_link\"].\"'\";\n-\t\t\t$req = $bdd->query($sql);\n+\t\t\t$sql = \"SELECT * FROM bp where is_define ='1' and name=?\";\n+\t\t\t$req = $bdd->prepare($sql);\n+\t\t\t$req->execute(array($bp_link[\"bp_link\"]));\n \t\t\t$bps_sons_informations = $req->fetchall();\n \t\t\tforeach($bps_sons_informations as $bp_sons_informations){\n \t\t\t\tif(!in_array($bp_sons_informations['name'],$bp_sons,true)) {\n@@ -287,8 +309,9 @@ function build_file_bp($bdd,$bp_file, $bp_informations){\n \t\t$type = \"+\";\n \t\tfputs($bp_file, $bp_informations['min_value'] . \" of: \");\n \t}\n-\t$sql = \"select host,service from bp_services where bp_name = '\" . $bp_informations['name'] . \"'\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select host,service from bp_services where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp_informations['name']));\n \t$host_services = $req->fetchall();\n \n \t$counter1 = count($host_services);\n@@ -303,8 +326,9 @@ function build_file_bp($bdd,$bp_file, $bp_informations){\n \t\t}\n \t}\n \n-\t$sql = \"select bp_link from bp_links where bp_name = '\" .$bp_informations['name'] . \"'\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select bp_link from bp_links where bp_name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp_informations['name']));\n \t$link_informations = $req->fetchall();\n \n \t$counter1 = count($link_informations);\n@@ -333,8 +357,9 @@ function build_file_bp($bdd,$bp_file, $bp_informations){\n }\n \n function info_application($bp_name, $bdd){\n-\t$sql = \"select * from bp where name = '\" . $bp_name . \"'\";\n-\t$req = $bdd->query($sql);\n+\t$sql = \"select * from bp where name = ?\";\n+\t$req = $bdd->prepare($sql);\n+\t$req->execute(array($bp_name));\n \t$info = $req->fetch();\n \techo json_encode($info);\n }"
        },
        {
          "filename": "module/admin_user/search.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -25,7 +25,8 @@\n \n // Search function for Jquery an exit\n if(isset($_GET['term']) && isset($_GET['request']) && $_GET['request'] == \"search_user\") {\n-\t$result=sqlrequest($database_eonweb,\"select * from ldap_users_extended where (user LIKE '%\".$_GET['term'].\"%') OR (login LIKE '%\".$_GET['term'].\"%') order by user\");\n+\t$sql=\"select * from ldap_users_extended where (user LIKE ?) OR (login LIKE ?) order by user\";\n+\t$result=sqlrequest($database_eonweb,$sql,false,array(\"ss\",\"%\".$_GET['term'].\"%\",\"%\".$_GET['term'].\"%\"));\n \t\n \t$array = array();\n \twhile ($line = mysqli_fetch_array($result)){"
        },
        {
          "filename": "module/index.php",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -23,10 +23,14 @@\n # Check optionnal module to load\n if(isset($_GET[\"module\"]) && isset($_GET[\"link\"])) { \n \n-\t$module=exec(\"rpm -q \".$_GET[\"module\"].\" |grep '.eon' |wc -l\");\n+\tinclude(\"../include/config.php\");\n+\tinclude(\"../include/arrays.php\");\n \t\n-\t# Redirect to module page if rpm installed\n-\tif($module!=0) { header('Location: '.$_GET[\"link\"].''); }\n+\tif(in_array($_GET[\"module\"],$array_modules)) {\n+\t\t$module=exec(\"rpm -q \".$_GET[\"module\"].\" |grep '.eon' |wc -l\");\n+\t\t# Redirect to module page if rpm installed\n+\t\tif($module!=0) { header('Location: '.$_GET[\"link\"].''); }\n+\t}\n \n } \n \t"
        },
        {
          "filename": "module/monitoring_ged/ajax.php",
          "status": "modified",
          "additions": 37,
          "deletions": 13,
          "patch": "@@ -26,6 +26,8 @@\n include(\"ged_functions.php\");\n \n extract($_GET);\n+if(!isset($queue)) { $queue=\"active\"; } \n+elseif(!in_array($queue,$array_ged_queues)) { $queue=\"active\"; }\n \n // get all GED filters\n $default = \"\";\n@@ -62,16 +64,19 @@\n \t\t\t<tbody>\n \t\t\t\t<?php\n \t\t\t\t\tif($_GET[\"type\"] == 0){\n-\t\t\t\t\t\t$ged_where = \"WHERE pkt_type_id!='0'\";\n+\t\t\t\t\t\t$sql = \"SELECT pkt_type_id,pkt_type_name FROM pkt_type WHERE pkt_type_id!='0' AND pkt_type_id<'100';\";\n+\t\t\t\t\t\t$gedsql_result1=sqlrequest($database_ged,$sql);\n \t\t\t\t\t} else {\n-\t\t\t\t\t\t$ged_where = \"WHERE pkt_type_id='\".$_GET[\"type\"].\"'\";\n+\t\t\t\t\t\t$sql = \"SELECT pkt_type_id,pkt_type_name FROM pkt_type WHERE pkt_type_id=? AND pkt_type_id<'100';\";\n+\t\t\t\t\t\t$prepare=array(\"i\",(int)$_GET[\"type\"]);\n+\t\t\t\t\t\t$gedsql_result1=sqlrequest($database_ged,$sql,false,$prepare);\n \t\t\t\t\t}\n-\t\t\t\t\t$gedsql_result1=sqlrequest($database_ged,\"SELECT pkt_type_id,pkt_type_name FROM pkt_type $ged_where AND pkt_type_id<'100';\");\n-\t\t\t\t\t\n+\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\twhile($ged_type = mysqli_fetch_assoc($gedsql_result1)){\n \n \t\t\t\t\t\t// request for ged events according to queue and filters\n \t\t\t\t\t\t$sql = createSelectClause($ged_type[\"pkt_type_name\"], $queue);\n+\t\t\t\t\t\t$mysqli_prepare=array(\"\");\n \t\t\t\t\t\t\n \t\t\t\t\t\t// time periods (only in active events);\n \t\t\t\t\t\tif($time_period != \"\"){\n@@ -84,25 +89,40 @@\n \n \t\t\t\t\t\t\tswitch ($time_period) {\n \t\t\t\t\t\t\t\tcase '0-5m':\n-\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= \". $actual_time .\" AND o_sec > \". $five_minutes;\n+\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= ? AND o_sec > ?\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"ii\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$actual_time;\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$five_minutes;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\tcase '5-15m':\n-\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= \". $five_minutes .\" AND o_sec > \". $fifteen_minutes;\n+\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= ? AND o_sec > ?\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"ii\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$five_minutes;\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$fifteen_minutes;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\tcase '15-30m':\n-\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= \". $fifteen_minutes .\" AND o_sec > \". $thirty_minutes;\n+\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= ? AND o_sec > ?\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"ii\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$fifteen_minutes;\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$thirty_minutes;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\tcase '30m-1h':\n-\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= \". $thirty_minutes .\" AND o_sec > \". $one_hour;\n+\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= ? AND o_sec > ?\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"ii\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$thirty_minutes;\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$one_hour;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t\tcase 'more':\n-\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= \". $one_hour;\n+\t\t\t\t\t\t\t\t\t$sql .= \" AND o_sec <= ?\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"i\";\n+\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(int)$one_hour;\n \t\t\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\tif($ack_time != \"\"){\n-\t\t\t\t\t\t\t$sql .= \" AND a_sec - o_sec >= $ack_time\";\n+\t\t\t\t\t\t\t$sql .= \" AND a_sec - o_sec >= ?\";\n+\t\t\t\t\t\t\t$mysqli_prepare=array(\"i\",(int)$ack_time);\n \t\t\t\t\t\t}\n \n \t\t\t\t\t\t// if there's a default filter\n@@ -132,9 +152,13 @@\n \t\t\t\t\t\t\t\t\t\t$like .= \"%\";\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\tif($sqlcpt==\"0\") {\n-\t\t\t\t\t\t\t\t\t\t$sql .= \" AND ($key LIKE '$like'\";\n+\t\t\t\t\t\t\t\t\t\t$sql .= \" AND ($key LIKE ?\";\n+\t\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"s\";\n+\t\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(string)$like;\n \t\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t\t$sql .= \" OR $key LIKE '$like'\";\n+\t\t\t\t\t\t\t\t\t\t$sql .= \" OR $key LIKE ?\";\n+\t\t\t\t\t\t\t\t\t\t$mysqli_prepare[0].=\"s\";\n+\t\t\t\t\t\t\t\t\t\t$mysqli_prepare[]=(string)$like;\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t$sqlcpt++;\n \t\t\t\t\t\t\t\t}\n@@ -144,7 +168,7 @@\n \n \t\t\t\t\t\t$sql .= createWhereClause($owner,$filter,$search,$daterange,$ok,$warning,$critical,$unknown);\n \n-\t\t\t\t\t\t$request = sqlrequest($database_ged, $sql);\n+\t\t\t\t\t\t$request = sqlrequest($database_ged, $sql, false, $mysqli_prepare);\n \t\t\t\t\t\twhile($event = mysqli_fetch_object($request)){\n \t\t\t\t\t\t\t$event_state = getEventState($event);\n \t\t\t\t\t\t\t$row_class = getClassRow($event_state);"
        },
        {
          "filename": "module/monitoring_ged/ged_actions.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -27,6 +27,8 @@\n \n // create variables from $_GET\n extract($_GET);\n+if(!isset($queue)) { $queue=\"active\"; } \n+elseif(!in_array($queue,$array_ged_queues)) { $queue=\"active\"; }\n \n if(isset($action) && $action != \"\" && (isset($selected_events) && count($selected_events) > 0) || isset($filter_name) || isset($filter) ){\n \tswitch ($action) {"
        },
        {
          "filename": "module/monitoring_ged/ged_functions.php",
          "status": "modified",
          "additions": 74,
          "deletions": 41,
          "patch": "@@ -49,8 +49,11 @@ function getClassRow($event_state)\n \n function createTableRow($event, $event_state, $queue)\n {\n+\tglobal $array_ged_queues;\n \tglobal $dateformat;\n \tglobal $ged_prefix;\n+\n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n \t\n \tforeach ($event as $key => $value) {\n \t\t$class = \"\";\n@@ -96,9 +99,12 @@ function createTableRow($event, $event_state, $queue)\n \n function createSelectClause($ged_type, $queue)\n {\n+\tglobal $array_ged_queues; \n \tglobal $array_ged_packets;\n \tglobal $database_ged;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\n \t$sql = \"SELECT id,\";\n \tforeach ($array_ged_packets as $key => $value) {\n \t\tif($value[\"col\"] == true){\n@@ -119,6 +125,9 @@ function createSelectClause($ged_type, $queue)\n \n function createWhereClause($owner, $filter, $search, $daterange, $ok, $warning, $critical, $unknown)\n {\n+\t\n+\tglobal $mysqli_prepare;\n+\t\n \t$where_clause = \"\";\n \t\n \t// owner\n@@ -136,7 +145,9 @@ function createWhereClause($owner, $filter, $search, $daterange, $ok, $warning,\n \t\t\t$like .= \"%\";\n \t\t}\n \n-\t\t$where_clause .= \" AND $filter LIKE '$like'\";\n+\t\t$where_clause .= \" AND $filter LIKE ?\";\n+\t\t$mysqli_prepare[0].=\"s\";\n+\t\t$mysqli_prepare[]=(string)$like;\n \t}\n \n \t// daterange\n@@ -151,15 +162,18 @@ function createWhereClause($owner, $filter, $search, $daterange, $ok, $warning,\n \t\t$start += 3600;\n \t\t$end = strtotime($end);\n \t\t$end += 86400 + 3600;\n-\t\t$where_clause .= \" AND o_sec > $start AND o_sec < $end\";\n+\t\t$where_clause .= \" AND o_sec > ? AND o_sec < ?\";\n+\t\t$mysqli_prepare[0].=\"ii\";\n+\t\t$mysqli_prepare[]=(int)$start;\n+\t\t$mysqli_prepare[]=(int)$end;\n \t}\n \n \t// states\n \t$states_list = \"\";\n-\tif($ok != \"\")\t\t{ $states_list .= \"0,\"; }\n-\tif($warning != \"\")\t{ $states_list .= \"1,\"; }\n-\tif($critical != \"\")\t{ $states_list .= \"2,\"; }\n-\tif($unknown != \"\")\t{ $states_list .= \"3,\"; }\n+\tif($ok != \"\")\t\t{ $states_list .= \"?,\"; $mysqli_prepare[0].=\"i\"; $mysqli_prepare[]=0; }\n+\tif($warning != \"\")\t{ $states_list .= \"?,\"; $mysqli_prepare[0].=\"i\"; $mysqli_prepare[]=1; }\n+\tif($critical != \"\")\t{ $states_list .= \"?,\"; $mysqli_prepare[0].=\"i\"; $mysqli_prepare[]=2; }\n+\tif($unknown != \"\")\t{ $states_list .= \"?,\"; $mysqli_prepare[0].=\"i\"; $mysqli_prepare[]=3; }\n \t$states_list = trim($states_list, \",\");\n \t\n \tif($states_list != \"\"){\n@@ -203,15 +217,18 @@ function createDetailRow($event, $db_col_name, $row_name)\n \n function details($selected_events, $queue)\n {\n+\tglobal $array_ged_queues; \n \tglobal $database_ged;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\n \t// get all needed infos into variables\n \t$value_parts = explode(\":\", $selected_events);\n \t$id = $value_parts[0];\n \t$ged_type = $value_parts[1];\n \n-\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = $id\";\n-\t$result = sqlrequest($database_ged, $sql);\n+\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = ?\";\n+\t$result = sqlrequest($database_ged, $sql, false, array(\"s\",(string)$id));\n \t$event = mysqli_fetch_assoc($result);\n \n \t// display event's details\n@@ -238,20 +255,20 @@ function details($selected_events, $queue)\n \n function edit($selected_events, $queue)\n {\n+\tglobal $array_ged_queues; \n \tglobal $database_ged;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\n \t// get all needed infos into variables\n \t$value_parts = explode(\":\", $selected_events);\n \t$id = $value_parts[0];\n \t$ged_type = $value_parts[1];\n \n-\t$sql = \"SELECT comments FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = $id\";\n-\t$result = sqlrequest($database_ged, $sql);\n+\t$sql = \"SELECT comments FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = ?\";\n+\t$result = sqlrequest($database_ged, $sql, false, array(\"s\",(string)$id));\n \t$event = mysqli_fetch_assoc($result);\n \n-\t$event[\"comments\"] = str_replace(\"\\'\", \"'\", $event[\"comments\"]);\n-\t$event[\"comments\"] = str_replace(\"\\#\", \"#'\", $event[\"comments\"]);\n-\n \techo \"\n \t<form id='edit-event-form'>\n \t\t<div class='form-group'>\n@@ -263,19 +280,18 @@ function edit($selected_events, $queue)\n \n function editEvent($selected_events, $queue, $comments)\n {\n+\tglobal $array_ged_queues;\n \tglobal $database_ged;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\t\n \t// get all needed infos into variables\n \t$value_parts = explode(\":\", $selected_events);\n \t$id = $value_parts[0];\n \t$ged_type = $value_parts[1];\n \n-\t// format comment string to avoid errors\n-\t$comments = str_replace(\"'\", \"\\'\", $comments);\n-\t$comments = str_replace(\"#\", \"\\#\", $comments);\n-\n-\t$sql = \"UPDATE \".$ged_type.\"_queue_\".$queue.\" SET comments='$comments' WHERE id = $id\";\n-\t$result = sqlrequest($database_ged, $sql);\n+\t$sql = \"UPDATE \".$ged_type.\"_queue_\".$queue.\" SET comments=? WHERE id = ?\";\n+\t$result = sqlrequest($database_ged, $sql, false, array(\"ss\",(string)$comments,(string)$id));\n \tif($result){\n \t\tmessage(11, \" : \".getLabel(\"message.event_edited\"), \"ok\");\n \t} else {\n@@ -285,21 +301,20 @@ function editEvent($selected_events, $queue, $comments)\n \n function editAllEvents($selected_events, $queue, $comments)\n {\n+\tglobal $array_ged_queues;\n \tglobal $database_ged;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\t\n \t$success = true;\n \tforeach ($selected_events as $key => $value) {\n \t\t// get all needed infos into variables\n \t\t$value_parts = explode(\":\", $value);\n \t\t$id = $value_parts[0];\n \t\t$ged_type = $value_parts[1];\n \n-\t\t// format comment string to avoid errors\n-\t\t$comments = str_replace(\"'\", \"\\'\", $comments);\n-\t\t$comments = str_replace(\"#\", \"\\#\", $comments);\n-\n-\t\t$sql = \"UPDATE \".$ged_type.\"_queue_\".$queue.\" SET comments='$comments' WHERE id = $id\";\n-\t\t$result = sqlrequest($database_ged, $sql);\n+\t\t$sql = \"UPDATE \".$ged_type.\"_queue_\".$queue.\" SET comments=? WHERE id = ?\";\n+\t\t$result = sqlrequest($database_ged, $sql, false, array(\"ss\",(string)$comments,(string)$id));\n \t\tif(!$result){\n \t\t\t$success = false;\n \t\t}\n@@ -317,9 +332,12 @@ function ownDisown($selected_events, $queue, $global_action)\n {\n \tglobal $database_ged;\n \tglobal $array_ged_packets;\n+\tglobal $array_ged_queues;\n \tglobal $path_ged_bin;\n \tglobal $array_serv_system;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\t\n \tif(exec($array_serv_system[\"Ged agent\"][\"status\"])==NULL) {\n \t\treturn message(0,\" : ged daemon must be dead\",\"critical\");\n \t}\n@@ -337,8 +355,8 @@ function ownDisown($selected_events, $queue, $global_action)\n \t\tif($ged_type == \"nagios\"){ $ged_type_nbr = 1; }\n \t\tif($ged_type == \"snmptrap\"){ $ged_type_nbr = 2; }\n \n-\t\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = $id\";\n-\t\t$result = sqlrequest($database_ged, $sql);\n+\t\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = ?\";\n+\t\t$result = sqlrequest($database_ged, $sql, false, array(\"s\",(string)$id));\n \t\t$event = mysqli_fetch_assoc($result);\n \n \t\t$ged_command = \"-update -type $ged_type_nbr \";\n@@ -351,19 +369,23 @@ function ownDisown($selected_events, $queue, $global_action)\n \t\t\t}\n \t\t}\n \t\t$ged_command = trim($ged_command, \" \");\n-\n+\t\t$ged_command=escapeshellcmd($ged_command);\n+\t\t\n \t\tshell_exec($path_ged_bin.\" \".$ged_command);\n \t\tlogging(\"ged_update\",$ged_command);\n \t}\n }\n \n function acknowledge($selected_events, $queue)\n {\n+\tglobal $array_ged_queues;\n \tglobal $database_ged;\n \tglobal $array_ged_packets;\n \tglobal $path_ged_bin;\n \tglobal $array_serv_system;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\t\n \tif(exec($array_serv_system[\"Ged agent\"][\"status\"])==NULL) {\n \t\treturn message(0,\" : ged daemon must be dead\",\"critical\");\n \t}\n@@ -380,8 +402,8 @@ function acknowledge($selected_events, $queue)\n \t\t$event_to_delete = [];\n \t\tarray_push($event_to_delete, $value);\n \n-\t\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = $id\";\n-\t\t$result = sqlrequest($database_ged, $sql);\n+\t\t$sql = \"SELECT * FROM \".$ged_type.\"_queue_\".$queue.\" WHERE id = ?\";\n+\t\t$result = sqlrequest($database_ged, $sql, false, array(\"s\",(string)$id));\n \t\t$event = mysqli_fetch_assoc($result);\n \n \t\t$ged_command = \"-update -type $ged_type_nbr \";\n@@ -394,7 +416,8 @@ function acknowledge($selected_events, $queue)\n \t\t\t}\n \t\t}\n \t\t$ged_command = trim($ged_command, \" \");\n-\n+\t\t$ged_command=escapeshellcmd($ged_command);\n+\t\t\n \t\tshell_exec($path_ged_bin.\" \".$ged_command);\n \t\tlogging(\"ged_update\",$ged_command);\n \t\tdelete($event_to_delete, $queue);\n@@ -403,11 +426,14 @@ function acknowledge($selected_events, $queue)\n \n function delete($selected_events, $queue)\n {\n+\tglobal $array_ged_queues;\n \tglobal $database_ged;\n \tglobal $array_ged_packets;\n \tglobal $path_ged_bin;\n \tglobal $array_serv_system;\n \n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n+\t\n \tif(exec($array_serv_system[\"Ged agent\"][\"status\"])==NULL) {\n \t\treturn message(0,\" : ged daemon must be dead\",\"critical\");\n \t}\n@@ -433,7 +459,8 @@ function delete($selected_events, $queue)\n \t\t\t\t}\n \t\t\t}\n \t\t\t$ged_command = trim($ged_command, \" \");\n-\n+\t\t\t$ged_command=escapeshellcmd($ged_command);\n+\t\t\t\t\t\n \t\t\tshell_exec($path_ged_bin.\" \".$ged_command);\n \t\t\tlogging(\"ged_update\",$ged_command);\n \t\t} else {\n@@ -444,7 +471,8 @@ function delete($selected_events, $queue)\n \tif($queue == \"history\"){\n \t\t$id_list = trim($id_list, \",\");\n \t\t$ged_command = \"-drop -id \".$id_list.\" -queue history\";\n-\n+\t\t$ged_command=escapeshellcmd($ged_command);\n+\t\t\n \t\tshell_exec($path_ged_bin.\" \".$ged_command);\n \t\tlogging(\"ged_update\",$ged_command);\n \t}\n@@ -482,8 +510,12 @@ function changeGedFilter($filter_name)\n // advanced search autocomplete\n function advancedFilterSearch($queue, $filter)\n {\n+\tglobal $array_ged_packets;\n+\tglobal $array_ged_queues;\n \tglobal $database_ged;\n \t$datas = array();\n+\t\n+\tif(!in_array($queue,$array_ged_queues)) { $queue=$array_ged_queues[0]; }\n \n \tif($filter == \"description\"){\n \t\techo json_encode($datas);\n@@ -492,14 +524,15 @@ function advancedFilterSearch($queue, $filter)\n \n \t$gedsql_result1=sqlrequest($database_ged,\"SELECT pkt_type_id,pkt_type_name FROM pkt_type WHERE pkt_type_id!='0' AND pkt_type_id<'100';\");\n \t\n-\t\n-\twhile($ged_type = mysqli_fetch_assoc($gedsql_result1)){\n-\t\t$sql = \"SELECT DISTINCT $filter FROM \".$ged_type[\"pkt_type_name\"].\"_queue_\".$queue;\n-\n-\t\t$results = sqlrequest($database_ged, $sql);\n-\t\twhile($result = mysqli_fetch_array($results)){\n-\t\t\tif( !in_array($result[$filter], $datas) && $result[$filter] != \"\" ){\n-\t\t\t\tarray_push($datas, $result[$filter]);\n+\tif(isset($array_ged_packets[$filter])) {\n+\t\twhile($ged_type = mysqli_fetch_assoc($gedsql_result1)){\n+\t\t\t$sql = \"SELECT DISTINCT $filter FROM \".$ged_type[\"pkt_type_name\"].\"_queue_\".$queue;\n+\n+\t\t\t$results = sqlrequest($database_ged, $sql);\n+\t\t\twhile($result = mysqli_fetch_array($results)){\n+\t\t\t\tif( !in_array($result[$filter], $datas) && $result[$filter] != \"\" ){\n+\t\t\t\t\tarray_push($datas, $result[$filter]);\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9c6606d707eddaf516c92ec750c2a802f8ac2253",
            "date": "2023-03-11T01:19:58Z",
            "author_login": "EyesOfNetwork"
          },
          {
            "sha": "3a7b9ccaad78ac1fa80e260491dd6a8428f8bf62",
            "date": "2023-03-10T18:51:39Z",
            "author_login": "EyesOfNetwork"
          },
          {
            "sha": "c2fcf07ab7fb7f1cabbbc6d784a3b70a92be386c",
            "date": "2023-03-10T18:50:27Z",
            "author_login": "EyesOfNetwork"
          },
          {
            "sha": "396309b553e0e8eb267383650a9ab8229262bb3c",
            "date": "2023-02-03T17:15:59Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "a19bda94492505b81a9530c0703ca4ecbea2670a",
            "date": "2022-10-07T13:10:05Z",
            "author_login": "EyesOfNetwork"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-78",
    "description": "EyesOfNetwork (\"EON\") 5.0 and earlier allows remote authenticated users to execute arbitrary code via shell metacharacters in the selected_events[] parameter in the (1) acknowledge, (2) delete, or (3) ownDisown function in module/monitoring_ged/ged_functions.php or the (4) module parameter to module/index.php.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-03-24T14:59:00.337",
    "last_modified": "2024-11-21T03:29:03.813",
    "fix_date": "2016-10-27T07:33:52Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/03/23/5",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97109",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/EyesOfNetworkCommunity/eonweb/commit/196729cc045ef93ceeddd1de505a1de8f9cdf74d",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sysdream.com/news/lab/2017-03-14-cve-2017-6087-eon-5-0-remote-code-execution/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.exploit-db.com/exploits/41746/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/03/23/5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97109",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/EyesOfNetworkCommunity/eonweb/commit/196729cc045ef93ceeddd1de505a1de8f9cdf74d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sysdream.com/news/lab/2017-03-14-cve-2017-6087-eon-5-0-remote-code-execution/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.exploit-db.com/exploits/41746/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.819816",
    "processing_status": "enhanced"
  }
}