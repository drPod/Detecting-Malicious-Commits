{
  "cve_id": "CVE-2017-6308",
  "github_data": {
    "repository": "verdammelt/tnef",
    "fix_commit": "c5044689e50039635e7700fe2472fd632ac77176",
    "related_commits": [
      "c5044689e50039635e7700fe2472fd632ac77176",
      "c5044689e50039635e7700fe2472fd632ac77176"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c5044689e50039635e7700fe2472fd632ac77176",
      "commit_date": "2017-02-17T08:43:21Z",
      "author": {
        "login": "EricSesterhennX41",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix integer overflows and harden memory allocator.",
        "length": 50,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 65,
        "additions": 44,
        "deletions": 21
      },
      "files": [
        {
          "filename": "src/alloc.c",
          "status": "modified",
          "additions": 39,
          "deletions": 16,
          "patch": "@@ -40,14 +40,23 @@ get_alloc_limit()\n     return alloc_limit;\n }\n \n+size_t\n+check_mul_overflow(size_t a, size_t b, size_t* res)\n+{\n+    size_t tmp = a * b;\n+    if (a != 0 && tmp / a != b) return 1;\n+    *res = tmp;\n+    return 0;\n+}\n+\n static void\n alloc_limit_failure (char *fn_name, size_t size)\n {\n-    fprintf (stderr, \n+    fprintf (stderr,\n              \"%s: Maximum allocation size exceeded \"\n              \"(maxsize = %lu; size = %lu).\\n\",\n              fn_name,\n-             (unsigned long)alloc_limit, \n+             (unsigned long)alloc_limit,\n              (unsigned long)size);\n }\n \n@@ -56,17 +65,21 @@ alloc_limit_assert (char *fn_name, size_t size)\n {\n     if (alloc_limit && size > alloc_limit)\n     {\n-\talloc_limit_failure (fn_name, size);\n-\texit (-1);\n+        alloc_limit_failure (fn_name, size);\n+        exit (-1);\n     }\n }\n \n /* attempts to malloc memory, if fails print error and call abort */\n void*\n-xmalloc (size_t size)\n+xmalloc (size_t num, size_t size)\n {\n-    void *ptr = malloc (size);\n-    if (!ptr \n+    size_t res;\n+    if (check_mul_overflow(num, size, &res))\n+        abort();\n+\n+    void *ptr = malloc (res);\n+    if (!ptr\n         && (size != 0))         /* some libc don't like size == 0 */\n     {\n         perror (\"xmalloc: Memory allocation failure\");\n@@ -77,20 +90,29 @@ xmalloc (size_t size)\n \n /* Allocates memory but only up to a limit */\n void*\n-checked_xmalloc (size_t size)\n+checked_xmalloc (size_t num, size_t size)\n {\n-    alloc_limit_assert (\"checked_xmalloc\", size);\n-    return xmalloc (size);\n+    size_t res;\n+    if (check_mul_overflow(num, size, &res))\n+        abort();\n+\n+    alloc_limit_assert (\"checked_xmalloc\", res);\n+    return xmalloc (num, size);\n }\n \n /* xmallocs memory and clears it out */\n void*\n xcalloc (size_t num, size_t size)\n {\n-    void *ptr = malloc(num * size);\n+    size_t res;\n+    if (check_mul_overflow(num, size, &res))\n+        abort();\n+\n+    void *ptr;\n+    ptr = malloc(res);\n     if (ptr)\n     {\n-        memset (ptr, '\\0', (num * size));\n+        memset (ptr, '\\0', (res));\n     }\n     return ptr;\n }\n@@ -99,9 +121,10 @@ xcalloc (size_t num, size_t size)\n void*\n checked_xcalloc (size_t num, size_t size)\n {\n-    alloc_limit_assert (\"checked_xcalloc\", (num *size));\n+    size_t res;\n+    if (check_mul_overflow(num, size, &res))\n+        abort();\n+\n+    alloc_limit_assert (\"checked_xcalloc\", (res));\n     return xcalloc (num, size);\n }\n-\n-\n-"
        },
        {
          "filename": "src/alloc.h",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -35,20 +35,20 @@ extern void free (void*);\n extern void set_alloc_limit (size_t size);\n extern size_t get_alloc_limit();\n extern void alloc_limit_assert (char *fn_name, size_t size);\n-extern void* checked_xmalloc (size_t size);\n-extern void* xmalloc (size_t size);\n+extern void* checked_xmalloc (size_t num, size_t size);\n+extern void* xmalloc (size_t num, size_t size);\n extern void* checked_xcalloc (size_t num, size_t size);\n extern void* xcalloc (size_t num, size_t size);\n \n #define XMALLOC(_type,_num)\t\t\t                \\\n-        ((_type*)xmalloc((_num)*sizeof(_type)))\n+        ((_type*)xmalloc((_num), sizeof(_type)))\n #define XCALLOC(_type,_num) \t\t\t\t        \\\n         ((_type*)xcalloc((_num), sizeof (_type)))\n #define CHECKED_XMALLOC(_type,_num) \t\t\t        \\\n-        ((_type*)checked_xmalloc((_num)*sizeof(_type)))\n+        ((_type*)checked_xmalloc((_num),sizeof(_type)))\n #define CHECKED_XCALLOC(_type,_num) \t\t\t        \\\n         ((_type*)checked_xcalloc((_num),sizeof(_type)))\n #define XFREE(_ptr)\t\t\t\t\t\t\\\n-\tdo { if (_ptr) { free (_ptr); _ptr = 0; } } while (0)\n+        do { if (_ptr) { free (_ptr); _ptr = 0; } } while (0)\n \n #endif /* ALLOC_H */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c5a5b7537c9b4d3f8a3196c2edf2b65bd9315b99",
            "date": "2020-12-23T15:06:09Z",
            "author_login": "verdammelt"
          },
          {
            "sha": "45459a21f8c3ef1af31fb5df999269756265f0ce",
            "date": "2020-12-22T11:17:47Z",
            "author_login": "ddeka2910"
          },
          {
            "sha": "1810f3a99a79026c84db38afa5181f25d7d48b37",
            "date": "2019-12-07T02:12:19Z",
            "author_login": "verdammelt"
          },
          {
            "sha": "d1500b172eda132365122ca5835fcc67b36fb022",
            "date": "2019-11-15T10:18:20Z",
            "author_login": "joankaradimov"
          },
          {
            "sha": "5a7a2cd7ca16e8a4722b48551e736dc9545a9c3e",
            "date": "2019-11-15T10:18:03Z",
            "author_login": "joankaradimov"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-190",
    "description": "An issue was discovered in tnef before 1.4.13. Several Integer Overflows, which can lead to Heap Overflows, have been identified in the functions that wrap memory allocation.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-02-24T04:59:00.607",
    "last_modified": "2024-11-21T03:29:31.773",
    "fix_date": "2017-02-17T08:43:21Z"
  },
  "references": [
    {
      "url": "http://www.debian.org/security/2017/dsa-3798",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/96427",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/verdammelt/tnef/blob/master/ChangeLog",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/verdammelt/tnef/commit/c5044689e50039635e7700fe2472fd632ac77176",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201708-02",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.x41-dsec.de/lab/advisories/x41-2017-004-tnef/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.debian.org/security/2017/dsa-3798",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/96427",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/verdammelt/tnef/blob/master/ChangeLog",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/verdammelt/tnef/commit/c5044689e50039635e7700fe2472fd632ac77176",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201708-02",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.x41-dsec.de/lab/advisories/x41-2017-004-tnef/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.236259",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "tnef",
    "owner": "verdammelt",
    "created_at": "2011-11-05T22:33:05Z",
    "updated_at": "2024-07-11T20:59:40Z",
    "pushed_at": "2020-12-23T15:06:10Z",
    "size": 3927,
    "stars": 58,
    "forks": 21,
    "open_issues": 0,
    "watchers": 58,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 140113,
      "Shell": 71078,
      "Makefile": 5138,
      "Awk": 4439,
      "Perl": 3811,
      "M4": 2732
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T08:06:33.617037"
  }
}