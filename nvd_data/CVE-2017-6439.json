{
  "cve_id": "CVE-2017-6439",
  "github_data": {
    "repository": "libimobiledevice/libplist",
    "fix_commit": "32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
    "related_commits": [
      "32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
      "32ee5213fe64f1e10ec76c1ee861ee6f233120dd"
    ],
    "patch_url": "https://github.com/libimobiledevice/libplist/commit/32ee5213fe64f1e10ec76c1ee861ee6f233120dd.patch",
    "fix_commit_details": {
      "sha": "32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
      "commit_date": "2017-02-10T12:42:46Z",
      "author": {
        "login": "nikias",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "bplist: Fix data range check for string/data/dict/array nodes",
        "length": 349,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 12,
        "additions": 6,
        "deletions": 6
      },
      "files": [
        {
          "filename": "src/bplist.c",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -654,14 +654,14 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n         return parse_date_node(object, size);\n \n     case BPLIST_DATA:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_DATA data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_data_node(object, size);\n \n     case BPLIST_STRING:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_STRING data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n@@ -672,15 +672,15 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n             PLIST_BIN_ERR(\"%s: Integer overflow when calculating BPLIST_UNICODE data size.\\n\", __func__);\n             return NULL;\n         }\n-        if (*object + size*2 > bplist->offset_table) {\n+        if (*object + size*2 < *object || *object + size*2 > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_UNICODE data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_unicode_node(object, size);\n \n     case BPLIST_SET:\n     case BPLIST_ARRAY:\n-        if (*object + size > bplist->offset_table) {\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n             PLIST_BIN_ERR(\"%s: BPLIST_ARRAY data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n@@ -694,8 +694,8 @@ static plist_t parse_bin_node(struct bplist_data *bplist, const char** object)\n         return parse_uid_node(object, size);\n \n     case BPLIST_DICT:\n-        if (*object + size > bplist->offset_table) {\n-            PLIST_BIN_ERR(\"%s: BPLIST_REAL data bytes point outside of valid range\\n\", __func__);\n+        if (*object + size < *object || *object + size > bplist->offset_table) {\n+            PLIST_BIN_ERR(\"%s: BPLIST_DICT data bytes point outside of valid range\\n\", __func__);\n             return NULL;\n         }\n         return parse_dict_node(bplist, object, size);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "44099d4b79c8d6a7d599d652ebef62db8dae6696",
            "date": "2024-12-03T01:31:03Z",
            "author_login": "nikias"
          },
          {
            "sha": "e3ca6af2c580c0b748a5635c15b973094765abbf",
            "date": "2024-12-03T01:28:15Z",
            "author_login": "nikias"
          },
          {
            "sha": "8dee549fd286ab152e94428f38eae6edac1bb746",
            "date": "2024-12-02T04:59:09Z",
            "author_login": "nikias"
          },
          {
            "sha": "c1e3868485c16292d1c7c69f8dc891fd378286b1",
            "date": "2024-11-29T01:58:51Z",
            "author_login": "nikias"
          },
          {
            "sha": "581b3e23a72ab54fda875ca447b4e492051bbd1c",
            "date": "2024-11-29T00:20:23Z",
            "author_login": "nikias"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-787",
    "description": "Heap-based buffer overflow in the parse_string_node function in bplist.c in libimobiledevice libplist 1.12 allows local users to cause a denial of service (out-of-bounds write) via a crafted plist file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-03-15T14:59:01.087",
    "last_modified": "2024-11-21T03:29:46.663",
    "fix_date": "2017-02-10T12:42:46Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/97278",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/commit/32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/issues/95",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00002.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/97278",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/commit/32ee5213fe64f1e10ec76c1ee861ee6f233120dd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/libimobiledevice/libplist/issues/95",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00002.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.266969",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libplist",
    "owner": "libimobiledevice",
    "created_at": "2013-02-13T14:30:43Z",
    "updated_at": "2025-01-01T05:20:20Z",
    "pushed_at": "2024-12-03T01:31:09Z",
    "size": 1632,
    "stars": 557,
    "forks": 311,
    "open_issues": 41,
    "watchers": 557,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 409111,
      "C++": 54470,
      "M4": 54312,
      "Cython": 31791,
      "Shell": 18863,
      "Makefile": 8622
    },
    "commit_activity": {
      "total_commits_last_year": 34,
      "avg_commits_per_week": 0.6538461538461539,
      "days_active_last_year": 20
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T13:14:25.087817"
  }
}