{
  "cve_id": "CVE-2017-6503",
  "github_data": {
    "repository": "qbittorrent/qBittorrent",
    "fix_commit": "6ca3e4f094da0a0017cb2d483ec1db6176bb0b16",
    "related_commits": [
      "6ca3e4f094da0a0017cb2d483ec1db6176bb0b16",
      "6ca3e4f094da0a0017cb2d483ec1db6176bb0b16"
    ],
    "patch_url": "https://github.com/qbittorrent/qBittorrent/commit/6ca3e4f094da0a0017cb2d483ec1db6176bb0b16.patch",
    "fix_commit_details": {
      "sha": "6ca3e4f094da0a0017cb2d483ec1db6176bb0b16",
      "commit_date": "2017-02-11T06:04:06Z",
      "author": {
        "login": "Chocobo1",
        "type": "User",
        "stats": {
          "total_commits": 3055,
          "average_weekly_commits": 4.370529327610873,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 453
        }
      },
      "commit_message": {
        "title": "Add Utils::String::toHtmlEscaped",
        "length": 32,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 29,
        "additions": 21,
        "deletions": 8
      },
      "files": [
        {
          "filename": "src/base/logger.cpp",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -1,6 +1,7 @@\n #include \"logger.h\"\n \n #include <QDateTime>\n+#include \"base/utils/string.h\"\n \n Logger* Logger::m_instance = 0;\n \n@@ -36,7 +37,7 @@ void Logger::addMessage(const QString &message, const Log::MsgType &type)\n {\n     QWriteLocker locker(&lock);\n \n-    Log::Msg temp = { msgCounter++, QDateTime::currentMSecsSinceEpoch(), type, message };\n+    Log::Msg temp = { msgCounter++, QDateTime::currentMSecsSinceEpoch(), type, Utils::String::toHtmlEscaped(message) };\n     m_messages.push_back(temp);\n \n     if (m_messages.size() >= MAX_LOG_MESSAGES)\n@@ -49,7 +50,7 @@ void Logger::addPeer(const QString &ip, bool blocked, const QString &reason)\n {\n     QWriteLocker locker(&lock);\n \n-    Log::Peer temp = { peerCounter++, QDateTime::currentMSecsSinceEpoch(), ip, blocked, reason };\n+    Log::Peer temp = { peerCounter++, QDateTime::currentMSecsSinceEpoch(), Utils::String::toHtmlEscaped(ip), blocked, Utils::String::toHtmlEscaped(reason) };\n     m_peers.push_back(temp);\n \n     if (m_peers.size() >= MAX_LOG_MESSAGES)"
        },
        {
          "filename": "src/base/utils/string.cpp",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -211,3 +211,12 @@ bool Utils::String::slowEquals(const QByteArray &a, const QByteArray &b)\n \n     return (diff == 0);\n }\n+\n+QString Utils::String::toHtmlEscaped(const QString &str)\n+{\n+#ifdef QBT_USES_QT5\n+    return str.toHtmlEscaped();\n+#else\n+    return Qt::escape(str);\n+#endif\n+}"
        },
        {
          "filename": "src/base/utils/string.h",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -47,6 +47,8 @@ namespace Utils\n         // Taken from https://crackstation.net/hashing-security.htm\n         bool slowEquals(const QByteArray &a, const QByteArray &b);\n \n+        QString toHtmlEscaped(const QString &str);\n+\n         bool naturalCompareCaseSensitive(const QString &left, const QString &right);\n         bool naturalCompareCaseInsensitive(const QString &left, const QString &right);\n     }"
        },
        {
          "filename": "src/gui/deletionconfirmationdlg.h",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -35,8 +35,9 @@\n #include <QPushButton>\n #include \"ui_confirmdeletiondlg.h\"\n #include \"base/preferences.h\"\n-#include \"guiiconprovider.h\"\n #include \"base/utils/misc.h\"\n+#include \"base/utils/string.h\"\n+#include \"guiiconprovider.h\"\n \n class DeletionConfirmationDlg : public QDialog, private Ui::confirmDeletionDlg {\n   Q_OBJECT\n@@ -45,7 +46,7 @@ class DeletionConfirmationDlg : public QDialog, private Ui::confirmDeletionDlg {\n   DeletionConfirmationDlg(QWidget *parent, const int &size, const QString &name, bool defaultDeleteFiles): QDialog(parent) {\n     setupUi(this);\n     if (size == 1)\n-      label->setText(tr(\"Are you sure you want to delete '%1' from the transfer list?\", \"Are you sure you want to delete 'ubuntu-linux-iso' from the transfer list?\").arg(name));\n+      label->setText(tr(\"Are you sure you want to delete '%1' from the transfer list?\", \"Are you sure you want to delete 'ubuntu-linux-iso' from the transfer list?\").arg(Utils::String::toHtmlEscaped(name)));\n     else\n       label->setText(tr(\"Are you sure you want to delete these %1 torrents from the transfer list?\", \"Are you sure you want to delete these 5 torrents from the transfer list?\").arg(QString::number(size)));\n     // Icons"
        },
        {
          "filename": "src/gui/properties/peerlistwidget.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -401,7 +401,7 @@ QStandardItem* PeerListWidget::addPeer(const QString& ip, BitTorrent::TorrentHan\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::CONNECTION), peer.connectionType());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::FLAGS), peer.flags());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::FLAGS), peer.flagsDescription(), Qt::ToolTipRole);\n-    m_listModel->setData(m_listModel->index(row, PeerListDelegate::CLIENT), peer.client());\n+    m_listModel->setData(m_listModel->index(row, PeerListDelegate::CLIENT), Utils::String::toHtmlEscaped(peer.client()));\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::PROGRESS), peer.progress());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::DOWN_SPEED), peer.payloadDownSpeed());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::UP_SPEED), peer.payloadUpSpeed());\n@@ -432,7 +432,7 @@ void PeerListWidget::updatePeer(const QString &ip, BitTorrent::TorrentHandle *co\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::PORT), peer.address().port);\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::FLAGS), peer.flags());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::FLAGS), peer.flagsDescription(), Qt::ToolTipRole);\n-    m_listModel->setData(m_listModel->index(row, PeerListDelegate::CLIENT), peer.client());\n+    m_listModel->setData(m_listModel->index(row, PeerListDelegate::CLIENT), Utils::String::toHtmlEscaped(peer.client()));\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::PROGRESS), peer.progress());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::DOWN_SPEED), peer.payloadDownSpeed());\n     m_listModel->setData(m_listModel->index(row, PeerListDelegate::UP_SPEED), peer.payloadUpSpeed());"
        },
        {
          "filename": "src/gui/properties/propertieswidget.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -314,12 +314,12 @@ void PropertiesWidget::loadTorrentInfos(BitTorrent::TorrentHandle *const torrent\n         label_total_size_val->setText(Utils::Misc::friendlyUnit(m_torrent->totalSize()));\n \n         // Comment\n-        comment_text->setText(Utils::Misc::parseHtmlLinks(m_torrent->comment()));\n+        comment_text->setText(Utils::Misc::parseHtmlLinks(Utils::String::toHtmlEscaped(m_torrent->comment())));\n \n         // URL seeds\n         loadUrlSeeds();\n \n-        label_created_by_val->setText(m_torrent->creator());\n+        label_created_by_val->setText(Utils::String::toHtmlEscaped(m_torrent->creator()));\n \n         // List files in torrent\n         PropListModel->model()->setupModelData(m_torrent->info());"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4686d6709e1b929a2af289d797633d2a0b361152",
            "date": "2025-01-13T09:24:08Z",
            "author_login": "Chocobo1"
          },
          {
            "sha": "2cc7ec90a8b9992e6568369b51dca48f1055d783",
            "date": "2025-01-13T09:13:20Z",
            "author_login": "Chocobo1"
          },
          {
            "sha": "99adb1609011ddaccef67edacd87ac3b7eaf11a4",
            "date": "2025-01-13T07:21:40Z",
            "author_login": "glassez"
          },
          {
            "sha": "c622d50814f4fea5c4fbe13b9bde360dea60ec9b",
            "date": "2025-01-12T13:36:59Z",
            "author_login": "Chocobo1"
          },
          {
            "sha": "11991e62f507de11e5ad52d296c348cdf276d9b3",
            "date": "2025-01-12T13:18:41Z",
            "author_login": "Chocobo1"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "WebUI in qBittorrent before 3.3.11 did not escape many values, which could potentially lead to XSS.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-03-06T02:59:00.743",
    "last_modified": "2024-11-21T03:29:54.423",
    "fix_date": "2017-02-11T06:04:06Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/96758",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/qbittorrent/qBittorrent/commit/6ca3e4f094da0a0017cb2d483ec1db6176bb0b16",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.qbittorrent.org/news.php",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Release Notes"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/96758",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/qbittorrent/qBittorrent/commit/6ca3e4f094da0a0017cb2d483ec1db6176bb0b16",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.qbittorrent.org/news.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.252555",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "qBittorrent",
    "owner": "qbittorrent",
    "created_at": "2012-02-04T09:37:46Z",
    "updated_at": "2025-01-14T14:52:01Z",
    "pushed_at": "2025-01-13T09:24:08Z",
    "size": 244448,
    "stars": 29417,
    "forks": 4076,
    "open_issues": 2813,
    "watchers": 29417,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "debian",
      "master",
      "v2_9_x",
      "v3_0_x",
      "v3_1_x",
      "v3_2_x",
      "v3_3_x",
      "v4_0_x",
      "v4_1_x",
      "v4_2_x",
      "v4_3_x",
      "v4_4_x",
      "v4_5_x",
      "v4_6_x",
      "v5_0_x"
    ],
    "languages": {
      "C++": 3480853,
      "JavaScript": 702440,
      "HTML": 600283,
      "CSS": 42640,
      "Python": 42380,
      "CMake": 35228,
      "C": 27131,
      "Objective-C++": 12356,
      "Objective-C": 1651,
      "Shell": 891
    },
    "commit_activity": {
      "total_commits_last_year": 503,
      "avg_commits_per_week": 9.673076923076923,
      "days_active_last_year": 204
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:20:58.047554"
  }
}