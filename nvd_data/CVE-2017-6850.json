{
  "cve_id": "CVE-2017-6850",
  "github_data": {
    "repository": "mdadams/jasper",
    "fix_commit": "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
    "related_commits": [
      "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
      "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d"
    ],
    "patch_url": "https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d.patch",
    "fix_commit_details": {
      "sha": "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
      "commit_date": "2017-03-04T22:43:24Z",
      "author": {
        "login": "mdadams",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed bugs due to uninitialized data in the JP2 decoder.",
        "length": 198,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 62,
        "additions": 48,
        "deletions": 14
      },
      "files": [
        {
          "filename": "src/libjasper/base/jas_stream.c",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -664,6 +664,7 @@ int jas_stream_ungetc(jas_stream_t *stream, int c)\n \treturn 0;\n }\n \n+/* FIXME integral type */\n int jas_stream_read(jas_stream_t *stream, void *buf, int cnt)\n {\n \tint n;\n@@ -690,6 +691,7 @@ int jas_stream_read(jas_stream_t *stream, void *buf, int cnt)\n \treturn n;\n }\n \n+/* FIXME integral type */\n int jas_stream_write(jas_stream_t *stream, const void *buf, int cnt)\n {\n \tint n;\n@@ -742,6 +744,7 @@ int jas_stream_puts(jas_stream_t *stream, const char *s)\n \treturn 0;\n }\n \n+/* FIXME integral type */\n char *jas_stream_gets(jas_stream_t *stream, char *buf, int bufsize)\n {\n \tint c;\n@@ -765,6 +768,7 @@ char *jas_stream_gets(jas_stream_t *stream, char *buf, int bufsize)\n \treturn buf;\n }\n \n+/* FIXME integral type */\n int jas_stream_gobble(jas_stream_t *stream, int n)\n {\n \tint m;\n@@ -783,6 +787,7 @@ int jas_stream_gobble(jas_stream_t *stream, int n)\n \treturn n;\n }\n \n+/* FIXME integral type */\n int jas_stream_pad(jas_stream_t *stream, int n, int c)\n {\n \tint m;\n@@ -885,6 +890,7 @@ long jas_stream_tell(jas_stream_t *stream)\n * Buffer initialization code.\n \\******************************************************************************/\n \n+/* FIXME integral type */\n static void jas_stream_initbuf(jas_stream_t *stream, int bufmode, char *buf,\n   int bufsize)\n {\n@@ -1060,6 +1066,7 @@ static int jas_strtoopenmode(const char *s)\n \treturn openmode;\n }\n \n+/* FIXME integral type */\n int jas_stream_copy(jas_stream_t *out, jas_stream_t *in, int n)\n {\n \tint all;\n@@ -1085,6 +1092,7 @@ int jas_stream_copy(jas_stream_t *out, jas_stream_t *in, int n)\n \treturn 0;\n }\n \n+/* FIXME integral type */\n long jas_stream_setrwcount(jas_stream_t *stream, long rwcnt)\n {\n \tint old;\n@@ -1094,6 +1102,7 @@ long jas_stream_setrwcount(jas_stream_t *stream, long rwcnt)\n \treturn old;\n }\n \n+/* FIXME integral type */\n int jas_stream_display(jas_stream_t *stream, FILE *fp, int n)\n {\n \tunsigned char buf[16];\n@@ -1168,6 +1177,7 @@ long jas_stream_length(jas_stream_t *stream)\n * Memory stream object.\n \\******************************************************************************/\n \n+/* FIXME integral type */\n static int mem_read(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tssize_t n;\n@@ -1209,6 +1219,7 @@ static int mem_resize(jas_stream_memobj_t *m, size_t bufsize)\n \treturn 0;\n }\n \n+/* FIXME integral type */\n static int mem_write(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tsize_t n;\n@@ -1264,6 +1275,7 @@ static int mem_write(jas_stream_obj_t *obj, char *buf, int cnt)\n \treturn ret;\n }\n \n+/* FIXME integral type */\n static long mem_seek(jas_stream_obj_t *obj, long offset, int origin)\n {\n \tjas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;\n@@ -1310,6 +1322,7 @@ static int mem_close(jas_stream_obj_t *obj)\n * File stream object.\n \\******************************************************************************/\n \n+/* FIXME integral type */\n static int file_read(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tjas_stream_fileobj_t *fileobj;\n@@ -1318,6 +1331,7 @@ static int file_read(jas_stream_obj_t *obj, char *buf, int cnt)\n \treturn read(fileobj->fd, buf, cnt);\n }\n \n+/* FIXME integral type */\n static int file_write(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tjas_stream_fileobj_t *fileobj;\n@@ -1326,6 +1340,7 @@ static int file_write(jas_stream_obj_t *obj, char *buf, int cnt)\n \treturn write(fileobj->fd, buf, cnt);\n }\n \n+/* FIXME integral type */\n static long file_seek(jas_stream_obj_t *obj, long offset, int origin)\n {\n \tjas_stream_fileobj_t *fileobj;\n@@ -1352,6 +1367,7 @@ static int file_close(jas_stream_obj_t *obj)\n * Stdio file stream object.\n \\******************************************************************************/\n \n+/* FIXME integral type */\n static int sfile_read(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tFILE *fp;\n@@ -1367,6 +1383,7 @@ static int sfile_read(jas_stream_obj_t *obj, char *buf, int cnt)\n \treturn result;\n }\n \n+/* FIXME integral type */\n static int sfile_write(jas_stream_obj_t *obj, char *buf, int cnt)\n {\n \tFILE *fp;\n@@ -1377,6 +1394,7 @@ static int sfile_write(jas_stream_obj_t *obj, char *buf, int cnt)\n \treturn (n != JAS_CAST(size_t, cnt)) ? (-1) : cnt;\n }\n \n+/* FIXME integral type */\n static long sfile_seek(jas_stream_obj_t *obj, long offset, int origin)\n {\n \tFILE *fp;"
        },
        {
          "filename": "src/libjasper/jp2/jp2_cod.c",
          "status": "modified",
          "additions": 30,
          "deletions": 14,
          "patch": "@@ -183,15 +183,28 @@ jp2_boxinfo_t jp2_boxinfo_unk = {\n * Box constructor.\n \\******************************************************************************/\n \n-jp2_box_t *jp2_box_create(int type)\n+jp2_box_t *jp2_box_create0()\n {\n \tjp2_box_t *box;\n-\tjp2_boxinfo_t *boxinfo;\n-\n \tif (!(box = jas_malloc(sizeof(jp2_box_t)))) {\n \t\treturn 0;\n \t}\n \tmemset(box, 0, sizeof(jp2_box_t));\n+\tbox->type = 0;\n+\tbox->len = 0;\n+\t// Mark the box data as never having been constructed\n+\t// so that we will not errantly attempt to destroy it later.\n+\tbox->ops = &jp2_boxinfo_unk.ops;\n+\treturn box;\n+}\n+\n+jp2_box_t *jp2_box_create(int type)\n+{\n+\tjp2_box_t *box;\n+\tjp2_boxinfo_t *boxinfo;\n+\tif (!(box = jp2_box_create0())) {\n+\t\treturn 0;\n+\t}\n \tbox->type = type;\n \tbox->len = 0;\n \tif (!(boxinfo = jp2_boxinfolookup(type))) {\n@@ -248,25 +261,22 @@ jp2_box_t *jp2_box_get(jas_stream_t *in)\n \tbox = 0;\n \ttmpstream = 0;\n \n-\tif (!(box = jas_malloc(sizeof(jp2_box_t)))) {\n+\tif (!(box = jp2_box_create0())) {\n \t\tgoto error;\n \t}\n-\n-\t// Mark the box data as never having been constructed\n-\t// so that we will not errantly attempt to destroy it later.\n-\tbox->ops = &jp2_boxinfo_unk.ops;\n-\n \tif (jp2_getuint32(in, &len) || jp2_getuint32(in, &box->type)) {\n \t\tgoto error;\n \t}\n \tboxinfo = jp2_boxinfolookup(box->type);\n \tbox->info = boxinfo;\n \tbox->len = len;\n \tJAS_DBGLOG(10, (\n-\t  \"preliminary processing of JP2 box: type=%c%s%c (0x%08x); length=%d\\n\",\n+\t  \"preliminary processing of JP2 box: \"\n+\t  \"type=%c%s%c (0x%08x); length=%\"PRIuFAST32\"\\n\",\n \t  '\"', boxinfo->name, '\"', box->type, box->len\n \t  ));\n \tif (box->len == 1) {\n+\t\tJAS_DBGLOG(10, (\"big length\\n\"));\n \t\tif (jp2_getuint64(in, &extlen)) {\n \t\t\tgoto error;\n \t\t}\n@@ -382,6 +392,7 @@ static int jp2_bpcc_getdata(jp2_box_t *box, jas_stream_t *in)\n {\n \tjp2_bpcc_t *bpcc = &box->data.bpcc;\n \tunsigned int i;\n+\tbpcc->bpcs = 0;\n \tbpcc->numcmpts = box->datalen;\n \tif (!(bpcc->bpcs = jas_alloc2(bpcc->numcmpts, sizeof(uint_fast8_t)))) {\n \t\treturn -1;\n@@ -462,6 +473,7 @@ static int jp2_cdef_getdata(jp2_box_t *box, jas_stream_t *in)\n \tjp2_cdef_t *cdef = &box->data.cdef;\n \tjp2_cdefchan_t *chan;\n \tunsigned int channo;\n+\tcdef->ents = 0;\n \tif (jp2_getuint16(in, &cdef->numchans)) {\n \t\treturn -1;\n \t}\n@@ -518,7 +530,9 @@ int jp2_box_put(jp2_box_t *box, jas_stream_t *out)\n \t}\n \n \tif (dataflag) {\n-\t\tif (jas_stream_copy(out, tmpstream, box->len - JP2_BOX_HDRLEN(false))) {\n+\t\tif (jas_stream_copy(out, tmpstream, box->len -\n+\t\t  JP2_BOX_HDRLEN(false))) {\n+\t\t\tjas_eprintf(\"cannot copy box data\\n\");\n \t\t\tgoto error;\n \t\t}\n \t\tjas_stream_close(tmpstream);\n@@ -777,6 +791,7 @@ static int jp2_cmap_getdata(jp2_box_t *box, jas_stream_t *in)\n \tjp2_cmap_t *cmap = &box->data.cmap;\n \tjp2_cmapent_t *ent;\n \tunsigned int i;\n+\tcmap->ents = 0;\n \n \tcmap->numchans = (box->datalen) / 4;\n \tif (!(cmap->ents = jas_alloc2(cmap->numchans, sizeof(jp2_cmapent_t)))) {\n@@ -835,6 +850,7 @@ static int jp2_pclr_getdata(jp2_box_t *box, jas_stream_t *in)\n \tint_fast32_t x;\n \n \tpclr->lutdata = 0;\n+\tpclr->bpc = 0;\n \n \tif (jp2_getuint16(in, &pclr->numlutents) ||\n \t  jp2_getuint8(in, &pclr->numchans)) {\n@@ -869,9 +885,9 @@ static int jp2_pclr_putdata(jp2_box_t *box, jas_stream_t *out)\n #if 0\n \tjp2_pclr_t *pclr = &box->data.pclr;\n #endif\n-/* Eliminate warning about unused variable. */\n-box = 0;\n-out = 0;\n+\t/* Eliminate warning about unused variable. */\n+\tbox = 0;\n+\tout = 0;\n \treturn -1;\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8766848706a727f61c1c76a5a7cf1078433fad02",
            "date": "2024-04-27T17:53:19Z",
            "author_login": "mdadams"
          },
          {
            "sha": "2d6b6e8a9987386afe388e1cde859d0182445e63",
            "date": "2024-04-27T17:49:23Z",
            "author_login": "mdadams"
          },
          {
            "sha": "29154a52b6c2b895ac3db60d51be9f2a995ee145",
            "date": "2024-04-10T06:11:01Z",
            "author_login": "mdadams"
          },
          {
            "sha": "2fe7d2d73d18d9c7072507d462737b372f9d56bf",
            "date": "2024-03-30T16:57:05Z",
            "author_login": "mdadams"
          },
          {
            "sha": "6d084c53a77762f41bb5310713a5f1872fef55f5",
            "date": "2024-03-29T14:57:29Z",
            "author_login": "mdadams"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-476",
    "description": "The jp2_cdef_destroy function in jp2_cod.c in JasPer before 2.0.13 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-03-15T14:59:01.557",
    "last_modified": "2024-11-21T03:30:40.730",
    "fix_date": "2017-03-04T22:43:24Z"
  },
  "references": [
    {
      "url": "https://blogs.gentoo.org/ago/2017/01/25/jasper-null-pointer-dereference-in-jp2_cdef_destroy-jp2_cod-c/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mdadams/jasper/issues/112",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3693-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://blogs.gentoo.org/ago/2017/01/25/jasper-null-pointer-dereference-in-jp2_cdef_destroy-jp2_cod-c/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mdadams/jasper/issues/112",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3693-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:52.267282",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jasper",
    "owner": "mdadams",
    "created_at": "2016-09-16T18:52:32Z",
    "updated_at": "2025-01-10T13:03:21Z",
    "pushed_at": "2024-04-27T17:54:09Z",
    "size": 4405,
    "stars": 232,
    "forks": 102,
    "open_issues": 4,
    "watchers": 232,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1567274,
      "Shell": 147989,
      "CMake": 50869,
      "Roff": 3703,
      "Batchfile": 1905,
      "C++": 235
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:01:40.770708"
  }
}