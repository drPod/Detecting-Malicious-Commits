{
  "cve_id": "CVE-2017-7239",
  "github_data": {
    "repository": "dmgerman/ninka",
    "fix_commit": "81f185261c8863c5b84344ee31192870be939faf",
    "related_commits": [
      "81f185261c8863c5b84344ee31192870be939faf",
      "81f185261c8863c5b84344ee31192870be939faf"
    ],
    "patch_url": "https://github.com/dmgerman/ninka/commit/81f185261c8863c5b84344ee31192870be939faf.patch",
    "fix_commit_details": {
      "sha": "81f185261c8863c5b84344ee31192870be939faf",
      "commit_date": "2017-04-02T20:57:09Z",
      "author": {
        "login": "dmgerman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Addresses  CVE-2017-7239: ninka license identification tool: insufficient escaping of external input",
        "length": 100,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 50,
        "additions": 42,
        "deletions": 8
      },
      "files": [
        {
          "filename": "Changes",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -1,3 +1,17 @@\n+2017-04-02  Daniel M. German  <dmg@uvic.ca>\n+\n+        These changes address CVE-2017-7239\n+\n+\t* lib/Ninka.pm: upgraded to version to 1.3.2\n+\n+\t* Makefile.PL: Added IO::CaptureOutput to dependencies\n+\n+\t* CommentExtractor.pm:\n+\n+\t- replaced call to system with a single argument with a list of arguments.\n+\n+\t- replaced the use of open3 with captureoutput to simplify the code\n+\n 2017-03-26  Daniel M. German  <dmg@uvic.ca>\n \n \t* lib/Ninka/CommentExtractor.pm (execute_command): "
        },
        {
          "filename": "Makefile.PL",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -27,6 +27,8 @@ WriteMakefile(\n         'Getopt::Std' => '0',\n         'IPC::Open3' => '0',\n         'Spreadsheet::WriteExcel' => '0',\n+        'IO::CaptureOutput' => '0',\n+                  \n     },\n     TEST_REQUIRES => {\n         'File::Temp' => '0',"
        },
        {
          "filename": "lib/Ninka.pm",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -9,7 +9,7 @@ use Ninka::SentenceExtractor;\n use Ninka::SentenceFilter;\n use Ninka::SentenceTokenizer;\n \n-our $VERSION = '1.3.1';\n+our $VERSION = '1.3.2';\n \n sub process_file {\n     my ($input_file, $create_intermediary_files, $verbose) = @_;"
        },
        {
          "filename": "lib/Ninka/CommentExtractor.pm",
          "status": "modified",
          "additions": 25,
          "deletions": 7,
          "patch": "@@ -4,6 +4,7 @@ use strict;\n use warnings;\n use IPC::Open3 'open3';\n use Symbol 'gensym';\n+use IO::CaptureOutput qw/capture_exec/;\n \n sub new {\n     my ($class, %args) = @_;\n@@ -21,11 +22,11 @@ sub new {\n sub execute {\n     my ($self) = @_;\n \n-    my $command = $self->determine_comments_command();\n-    my $comments = execute_command($command);\n-    if ($command =~ /^comments/ && length($comments) == 0) {\n-        $command = create_head_cmd($self->{input_file}, 700);\n-        $comments = execute_command($command);\n+    my @command = $self->determine_comments_command();\n+    my $comments = execute_command(@command);\n+    if ($command[0] =~ /^comments/ && length($comments) == 0) {\n+        @command = create_head_cmd($self->{input_file}, 700);\n+        $comments = execute_command(@command);\n     }\n \n     return $comments;\n@@ -45,7 +46,7 @@ sub determine_comments_command {\n         } elsif ($ext =~ /^(java|c|cpp|h|cxx|c\\+\\+|cc)$/) {\n             my $comments_binary = 'comments';\n             if (`which $comments_binary` ne '') {\n-                return \"$comments_binary -c1 '$input_file' 2> /dev/null\";\n+                return ($comments_binary, \"-c1\", $input_file);\n             } else {\n                 return create_head_cmd($input_file, 400);\n             }\n@@ -60,10 +61,27 @@ sub determine_comments_command {\n sub create_head_cmd {\n     my ($input_file, $count_lines) = @_;\n \n-    return \"head -$count_lines $input_file\";\n+    return (\"head\",  \"-$count_lines\",  $input_file);\n }\n \n sub execute_command {\n+    my (@command) = @_;\n+    # make sure we have more than one element in the array\n+    #    otherwise system will use the shell to do the execution\n+    die \"command (@command) seems to be missing parameters\" unless (scalar(@command) > 1);\n+\n+    my ($stdout, $error, $success, $status) = capture_exec( @command );\n+\n+    my $commandSt = join(' ', @command);\n+    die \"execution of program [$commandSt] failed: status [$status], error [$error]\" if ($status != 0);\n+\n+    return $stdout;\n+}\n+\n+\n+# insecure execute command. Leave here for the time being\n+# it is dead code\n+sub execute_command_old {\n     my ($command) = @_;\n \n     if ($command =~ /&/) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b94e0d36669c4cc086856adf57bc67ced8f1aaf0",
            "date": "2022-06-19T00:36:33Z",
            "author_login": "dmgerman"
          },
          {
            "sha": "1242759d8ce45344d56a97941a958ec5c63a28cf",
            "date": "2022-06-18T20:23:13Z",
            "author_login": "dmgerman"
          },
          {
            "sha": "39e6fa1b967cec74b0744c5943639c27bdafa1ac",
            "date": "2018-01-07T18:14:02Z",
            "author_login": "rillig"
          },
          {
            "sha": "2554f99ad4677b200747eb7824213798974f8552",
            "date": "2018-01-06T20:02:51Z",
            "author_login": "rillig"
          },
          {
            "sha": "81f185261c8863c5b84344ee31192870be939faf",
            "date": "2017-04-02T20:57:09Z",
            "author_login": "dmgerman"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-74",
    "description": "Ninka before 1.3.2 might allow remote attackers to obtain sensitive information, manipulate license compliance scan results, or cause a denial of service (process hang) via a crafted filename.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-04-10T15:59:00.550",
    "last_modified": "2024-11-21T03:31:26.817",
    "fix_date": "2017-04-02T20:57:09Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/04/03/3",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97325",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/dmgerman/ninka/commit/81f185261c8863c5b84344ee31192870be939faf",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2017/04/03/3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/97325",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/dmgerman/ninka/commit/81f185261c8863c5b84344ee31192870be939faf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.847834",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ninka",
    "owner": "dmgerman",
    "created_at": "2011-01-21T15:33:04Z",
    "updated_at": "2024-12-28T05:58:45Z",
    "pushed_at": "2022-06-19T00:36:33Z",
    "size": 648,
    "stars": 110,
    "forks": 31,
    "open_issues": 23,
    "watchers": 110,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Roff": 236253,
      "Perl": 63442,
      "C++": 34748,
      "Makefile": 1189,
      "C": 919,
      "Dockerfile": 139
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T17:09:37.010239"
  }
}