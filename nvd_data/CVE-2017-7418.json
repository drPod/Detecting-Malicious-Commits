{
  "cve_id": "CVE-2017-7418",
  "github_data": {
    "repository": "proftpd/proftpd",
    "fix_commit": "ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
    "related_commits": [
      "ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
      "f59593e6ff730b832dbe8754916cb5c821db579f",
      "ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
      "f59593e6ff730b832dbe8754916cb5c821db579f"
    ],
    "patch_url": "https://github.com/proftpd/proftpd/commit/ecff21e0d0e84f35c299ef91d7fda088e516d4ed.patch",
    "fix_commit_details": {
      "sha": "ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
      "commit_date": "2017-03-06T16:31:29Z",
      "author": {
        "login": "Castaglia",
        "type": "User",
        "stats": {
          "total_commits": 3767,
          "average_weekly_commits": 6.750896057347671,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 387
        }
      },
      "commit_message": {
        "title": "Backporting recursive handling of DefaultRoot path, when AllowChrootSymlinks",
        "length": 101,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 83,
        "additions": 65,
        "deletions": 18
      },
      "files": [
        {
          "filename": "modules/mod_auth.c",
          "status": "modified",
          "additions": 65,
          "deletions": 18,
          "patch": "@@ -2,7 +2,7 @@\n  * ProFTPD - FTP server daemon\n  * Copyright (c) 1997, 1998 Public Flood Software\n  * Copyright (c) 1999, 2000 MacGyver aka Habeeb J. Dihu <macgyver@tos.net>\n- * Copyright (c) 2001-2016 The ProFTPD Project team\n+ * Copyright (c) 2001-2017 The ProFTPD Project team\n  *\n  * This program is free software; you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as published by\n@@ -688,9 +688,66 @@ static char *get_default_chdir(pool *p, xaset_t *conf) {\n   return dir;\n }\n \n-/* Determine if the user (non-anon) needs a default root dir other than /.\n- */\n+static int is_symlink_path(pool *p, const char *path, size_t pathlen) {\n+  int res, xerrno = 0;\n+  struct stat st;\n+  char *ptr;\n+\n+  if (pathlen == 0) {\n+    return 0;\n+  }\n+\n+  pr_fs_clear_cache();\n+  res = pr_fsio_lstat(path, &st);\n+  if (res < 0) {\n+    xerrno = errno;\n+\n+    pr_log_pri(PR_LOG_WARNING, \"error: unable to check %s: %s\", path,\n+      strerror(xerrno));\n+\n+    errno = xerrno;\n+    return -1;\n+  }\n \n+  if (S_ISLNK(st.st_mode)) {\n+    errno = EPERM;\n+    return -1;\n+  }\n+\n+  /* To handle the case where a component further up the path might be a\n+   * symlink (which lstat(2) will NOT handle), we walk the path backwards,\n+   * calling ourselves recursively.\n+   */\n+\n+  ptr = strrchr(path, '/');\n+  if (ptr != NULL) {\n+    char *new_path;\n+    size_t new_pathlen;\n+\n+    pr_signals_handle();\n+\n+    new_pathlen = ptr - path;\n+\n+    /* Make sure our pointer actually changed position. */\n+    if (new_pathlen == pathlen) {\n+      return 0;\n+    }\n+\n+    new_path = pstrndup(p, path, new_pathlen);\n+\n+    pr_log_debug(DEBUG10,\n+      \"AllowChrootSymlink: path '%s' not a symlink, checking '%s'\", path,\n+      new_path);\n+    res = is_symlink_path(p, new_path, new_pathlen);\n+    if (res < 0) {\n+      return -1;\n+    }\n+  }\n+\n+  return 0;\n+}\n+\n+/* Determine if the user (non-anon) needs a default root dir other than /. */\n static int get_default_root(pool *p, int allow_symlinks, char **root) {\n   config_rec *c = NULL;\n   char *dir = NULL;\n@@ -733,7 +790,6 @@ static int get_default_root(pool *p, int allow_symlinks, char **root) {\n \n       if (allow_symlinks == FALSE) {\n         char *path, target_path[PR_TUNABLE_PATH_MAX + 1];\n-        struct stat st;\n         size_t pathlen;\n \n         /* First, deal with any possible interpolation.  dir_realpath() will\n@@ -764,22 +820,13 @@ static int get_default_root(pool *p, int allow_symlinks, char **root) {\n           path[pathlen-1] = '\\0';\n         }\n \n-        pr_fs_clear_cache();\n-        res = pr_fsio_lstat(path, &st);\n+        res = is_symlink_path(p, path, pathlen);\n         if (res < 0) {\n-          xerrno = errno;\n-\n-          pr_log_pri(PR_LOG_WARNING, \"error: unable to check %s: %s\", path,\n-            strerror(xerrno));\n-\n-          errno = xerrno;\n-          return -1;\n-        }\n+          if (errno == EPERM) {\n+            pr_log_pri(PR_LOG_WARNING, \"error: DefaultRoot %s is a symlink \"\n+              \"(denied by AllowChrootSymlinks config)\", path);\n+          }\n \n-        if (S_ISLNK(st.st_mode)) {\n-          pr_log_pri(PR_LOG_WARNING,\n-            \"error: DefaultRoot %s is a symlink (denied by AllowChrootSymlinks \"\n-            \"config)\", path);\n           errno = EPERM;\n           return -1;\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d5a707348922b1d3294b7aa1e02c177e59b89fcb",
            "date": "2025-01-05T19:07:06Z",
            "author_login": "Castaglia"
          },
          {
            "sha": "7b2af33f379a748a601799933d2331e5b8ebf7e1",
            "date": "2024-12-30T18:13:48Z",
            "author_login": "Castaglia"
          },
          {
            "sha": "d4e8c6c9218b7319fd77f07e0d2414809553e61d",
            "date": "2024-12-30T18:06:35Z",
            "author_login": "Shivam7-1"
          },
          {
            "sha": "7652d8e145216ddff42b1c79771b66e00c5874de",
            "date": "2024-12-13T23:08:56Z",
            "author_login": "Castaglia"
          },
          {
            "sha": "e3457a391b6ed6dcc92172093068e2c9b19ecc66",
            "date": "2024-12-12T19:04:19Z",
            "author_login": "Castaglia"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-59",
    "description": "ProFTPD before 1.3.5e and 1.3.6 before 1.3.6rc5 controls whether the home directory of a user could contain a symbolic link through the AllowChrootSymlinks configuration option, but checks only the last path component when enforcing AllowChrootSymlinks. Attackers with local access could bypass the AllowChrootSymlinks control by replacing a path component (other than the last one) with a symbolic link. The threat model includes an attacker who is not granted full filesystem access by a hosting provider, but can reconfigure the home directory of an FTP user.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-04-04T17:59:00.337",
    "last_modified": "2024-11-21T03:31:51.593",
    "fix_date": "2017-03-06T16:31:29Z"
  },
  "references": [
    {
      "url": "http://bugs.proftpd.org/show_bug.cgi?id=4295",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00004.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00022.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00009.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/97409",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/commit/ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/commit/f59593e6ff730b832dbe8754916cb5c821db579f",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/pull/444/commits/349addc3be4fcdad9bd4ec01ad1ccd916c898ed8",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://bugs.proftpd.org/show_bug.cgi?id=4295",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00004.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00009.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/97409",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/commit/ecff21e0d0e84f35c299ef91d7fda088e516d4ed",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/commit/f59593e6ff730b832dbe8754916cb5c821db579f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/proftpd/proftpd/pull/444/commits/349addc3be4fcdad9bd4ec01ad1ccd916c898ed8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.842165",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "proftpd",
    "owner": "proftpd",
    "created_at": "2014-05-16T16:22:01Z",
    "updated_at": "2025-01-13T11:12:33Z",
    "pushed_at": "2025-01-05T19:07:16Z",
    "size": 75330,
    "stars": 541,
    "forks": 207,
    "open_issues": 154,
    "watchers": 541,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 19973898,
      "Shell": 854251,
      "PHP": 388170,
      "M4": 287572,
      "Perl": 150476,
      "Makefile": 92074,
      "Roff": 28578
    },
    "commit_activity": {
      "total_commits_last_year": 68,
      "avg_commits_per_week": 1.3076923076923077,
      "days_active_last_year": 36
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:31:18.770014"
  }
}