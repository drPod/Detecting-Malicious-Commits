{
  "cve_id": "CVE-2017-7585",
  "github_data": {
    "repository": "erikd/libsndfile",
    "fix_commit": "60b234301adf258786d8b90be5c1d437fc8799e0",
    "related_commits": [
      "60b234301adf258786d8b90be5c1d437fc8799e0",
      "60b234301adf258786d8b90be5c1d437fc8799e0"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "60b234301adf258786d8b90be5c1d437fc8799e0",
      "commit_date": "2017-03-24T09:51:59Z",
      "author": {
        "login": "erikd",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "src/flac.c: Improve error handling",
        "length": 92,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 28,
        "additions": 22,
        "deletions": 6
      },
      "files": [
        {
          "filename": "src/flac.c",
          "status": "modified",
          "additions": 22,
          "deletions": 6,
          "patch": "@@ -68,9 +68,9 @@ typedef struct\n \tunsigned bufferpos ;\n \n \tconst FLAC__Frame *frame ;\n-\tFLAC__bool bufferbackup ;\n \n \tunsigned compression ;\n+\n } FLAC_PRIVATE ;\n \n typedef struct\n@@ -187,10 +187,9 @@ flac_buffer_copy (SF_PRIVATE *psf)\n \n \tif (pflac->ptr == NULL)\n \t{\t/*\n-\t\t**\tNot sure why this code is here and not elsewhere.\n-\t\t**\tRemoving it causes valgrind errors.\n+\t\t** This pointer is reset to NULL each time the current frame has been\n+\t\t** decoded. Somehow its used during encoding and decoding.\n \t\t*/\n-\t\tpflac->bufferbackup = SF_TRUE ;\n \t\tfor (i = 0 ; i < channels ; i++)\n \t\t{\n \t\t\tif (pflac->rbuffer [i] == NULL)\n@@ -206,6 +205,11 @@ flac_buffer_copy (SF_PRIVATE *psf)\n \n \tlen = SF_MIN (pflac->len, frame->header.blocksize) ;\n \n+\tif (pflac->remain % channels != 0)\n+\t{\tpsf_log_printf (psf, \"Error: pflac->remain %u    channels %u\\n\", pflac->remain, channels) ;\n+\t\treturn 0 ;\n+\t\t} ;\n+\n \tswitch (pflac->pcmtype)\n \t{\tcase PFLAC_PCM_SHORT :\n \t\t\t{\tshort *retpcm = (short*) pflac->ptr ;\n@@ -381,7 +385,6 @@ sf_flac_write_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC\n \tpflac->frame = frame ;\n \tpflac->bufferpos = 0 ;\n \n-\tpflac->bufferbackup = SF_FALSE ;\n \tpflac->wbuffer = buffer ;\n \n \tflac_buffer_copy (psf) ;\n@@ -907,11 +910,19 @@ flac_init (SF_PRIVATE *psf)\n static unsigned\n flac_read_loop (SF_PRIVATE *psf, unsigned len)\n {\tFLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;\n+\tFLAC__StreamDecoderState state ;\n \n \tpflac->pos = 0 ;\n \tpflac->len = len ;\n \tpflac->remain = len ;\n \n+\tstate = FLAC__stream_decoder_get_state (pflac->fsd) ;\n+\tif (state > FLAC__STREAM_DECODER_END_OF_STREAM)\n+\t{\tpsf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;\n+\t\t/* Current frame is busted, so NULL the pointer. */\n+\t\tpflac->frame = NULL ;\n+\t\t} ;\n+\n \t/* First copy data that has already been decoded and buffered. */\n \tif (pflac->frame != NULL && pflac->bufferpos < pflac->frame->header.blocksize)\n \t\tflac_buffer_copy (psf) ;\n@@ -920,8 +931,13 @@ flac_read_loop (SF_PRIVATE *psf, unsigned len)\n \twhile (pflac->pos < pflac->len)\n \t{\tif (FLAC__stream_decoder_process_single (pflac->fsd) == 0)\n \t\t\tbreak ;\n-\t\tif (FLAC__stream_decoder_get_state (pflac->fsd) >= FLAC__STREAM_DECODER_END_OF_STREAM)\n+\t\tstate = FLAC__stream_decoder_get_state (pflac->fsd) ;\n+\t\tif (state >= FLAC__STREAM_DECODER_END_OF_STREAM)\n+\t\t{\tpsf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;\n+\t\t\t/* Current frame is busted, so NULL the pointer. */\n+\t\t\tpflac->frame = NULL ;\n \t\t\tbreak ;\n+\t\t\t} ;\n \t\t} ;\n \n \tpflac->ptr = NULL ;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0d3f80b7394368623df558d8ba3fee6348584d4d",
            "date": "2024-11-16T04:00:33Z",
            "author_login": "arthurt"
          },
          {
            "sha": "b8d90da26268eed4bbf15042d634e718629906f5",
            "date": "2024-11-16T03:48:54Z",
            "author_login": "arthurt"
          },
          {
            "sha": "4755f5bd7854611d92ad0f1295587b439f9950ba",
            "date": "2024-11-16T03:46:53Z",
            "author_login": "arthurt"
          },
          {
            "sha": "58c05b87162264200b1aa7790be260fd74c9deee",
            "date": "2024-06-27T03:26:03Z",
            "author_login": "brad0"
          },
          {
            "sha": "3ab2093f32325fa5eeeb099d53064639c0e9a861",
            "date": "2024-04-04T02:06:32Z",
            "author_login": "brad0"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "In libsndfile before 1.0.28, an error in the \"flac_buffer_copy()\" function (flac.c) can be exploited to cause a stack-based buffer overflow via a specially crafted FLAC file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-04-07T20:59:00.190",
    "last_modified": "2024-11-21T03:32:13.053",
    "fix_date": "2017-03-24T09:51:59Z"
  },
  "references": [
    {
      "url": "http://www.mega-nerd.com/libsndfile/#History",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Release Notes"
      ]
    },
    {
      "url": "http://www.mega-nerd.com/libsndfile/NEWS",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/erikd/libsndfile/commit/60b234301adf258786d8b90be5c1d437fc8799e0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://secuniaresearch.flexerasoftware.com/secunia_research/2017-4/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201707-04",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.mega-nerd.com/libsndfile/#History",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Release Notes"
      ]
    },
    {
      "url": "http://www.mega-nerd.com/libsndfile/NEWS",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/erikd/libsndfile/commit/60b234301adf258786d8b90be5c1d437fc8799e0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://secuniaresearch.flexerasoftware.com/secunia_research/2017-4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201707-04",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:54.845548",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "libsndfile",
    "owner": "erikd",
    "created_at": "2012-01-15T09:10:10Z",
    "updated_at": "2025-01-22T12:52:38Z",
    "pushed_at": "2024-11-16T18:22:19Z",
    "size": 32832,
    "stars": 1506,
    "forks": 399,
    "open_issues": 173,
    "watchers": 1506,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "fuzz-testing",
      "master"
    ],
    "languages": {
      "C": 2423995,
      "Smarty": 179798,
      "CMake": 106424,
      "M4": 82989,
      "C++": 44206,
      "Python": 42209,
      "Makefile": 30299,
      "Shell": 28775,
      "MATLAB": 6242
    },
    "commit_activity": {
      "total_commits_last_year": 11,
      "avg_commits_per_week": 0.21153846153846154,
      "days_active_last_year": 7
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T08:24:29.371762"
  }
}