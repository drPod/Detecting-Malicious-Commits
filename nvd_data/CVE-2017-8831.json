{
  "cve_id": "CVE-2017-8831",
  "github_data": {
    "repository": "stoth68000/media-tree",
    "fix_commit": "354dd3924a2e43806774953de536257548b5002c",
    "related_commits": [
      "354dd3924a2e43806774953de536257548b5002c",
      "354dd3924a2e43806774953de536257548b5002c"
    ],
    "patch_url": "https://github.com/stoth68000/media-tree/commit/354dd3924a2e43806774953de536257548b5002c.patch",
    "fix_commit_details": {
      "sha": "354dd3924a2e43806774953de536257548b5002c",
      "commit_date": "2017-06-06T12:30:27Z",
      "author": {
        "login": "stoth68000",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[PATCH] saa7164: Bug - Double fetch PCIe access condition",
        "length": 317,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 13,
        "additions": 1,
        "deletions": 12
      },
      "files": [
        {
          "filename": "drivers/media/pci/saa7164/saa7164-bus.c",
          "status": "modified",
          "additions": 1,
          "deletions": 12,
          "patch": "@@ -389,11 +389,11 @@ int saa7164_bus_get(struct saa7164_dev *dev, struct tmComResInfo* msg,\n \tmsg_tmp.size = le16_to_cpu((__force __le16)msg_tmp.size);\n \tmsg_tmp.command = le32_to_cpu((__force __le32)msg_tmp.command);\n \tmsg_tmp.controlselector = le16_to_cpu((__force __le16)msg_tmp.controlselector);\n+\tmemcpy(msg, &msg_tmp, sizeof(*msg));\n \n \t/* No need to update the read positions, because this was a peek */\n \t/* If the caller specifically want to peek, return */\n \tif (peekonly) {\n-\t\tmemcpy(msg, &msg_tmp, sizeof(*msg));\n \t\tgoto peekout;\n \t}\n \n@@ -438,21 +438,15 @@ int saa7164_bus_get(struct saa7164_dev *dev, struct tmComResInfo* msg,\n \t\tspace_rem = bus->m_dwSizeGetRing - curr_grp;\n \n \t\tif (space_rem < sizeof(*msg)) {\n-\t\t\t/* msg wraps around the ring */\n-\t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, space_rem);\n-\t\t\tmemcpy_fromio((u8 *)msg + space_rem, bus->m_pdwGetRing,\n-\t\t\t\tsizeof(*msg) - space_rem);\n \t\t\tif (buf)\n \t\t\t\tmemcpy_fromio(buf, bus->m_pdwGetRing + sizeof(*msg) -\n \t\t\t\t\tspace_rem, buf_size);\n \n \t\t} else if (space_rem == sizeof(*msg)) {\n-\t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));\n \t\t\tif (buf)\n \t\t\t\tmemcpy_fromio(buf, bus->m_pdwGetRing, buf_size);\n \t\t} else {\n \t\t\t/* Additional data wraps around the ring */\n-\t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));\n \t\t\tif (buf) {\n \t\t\t\tmemcpy_fromio(buf, bus->m_pdwGetRing + curr_grp +\n \t\t\t\t\tsizeof(*msg), space_rem - sizeof(*msg));\n@@ -465,15 +459,10 @@ int saa7164_bus_get(struct saa7164_dev *dev, struct tmComResInfo* msg,\n \n \t} else {\n \t\t/* No wrapping */\n-\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));\n \t\tif (buf)\n \t\t\tmemcpy_fromio(buf, bus->m_pdwGetRing + curr_grp + sizeof(*msg),\n \t\t\t\tbuf_size);\n \t}\n-\t/* Convert from little endian to CPU */\n-\tmsg->size = le16_to_cpu((__force __le16)msg->size);\n-\tmsg->command = le32_to_cpu((__force __le32)msg->command);\n-\tmsg->controlselector = le16_to_cpu((__force __le16)msg->controlselector);\n \n \t/* Update the read positions, adjusting the ring */\n \tsaa7164_writel(bus->m_dwGetReadPos, new_grp);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "37404f91ef8b910e6117b7920c082d71aba27250",
            "date": "2017-05-05T15:31:21Z",
            "author_login": "hfr72"
          },
          {
            "sha": "a3f194c6fa928fa290e10cd1a8b5cddada4d3438",
            "date": "2017-05-05T15:31:20Z",
            "author_login": "hfr72"
          },
          {
            "sha": "af3a8480646cf5816528c44210dd4a70fb2026e9",
            "date": "2017-05-19T12:06:07Z",
            "author_login": "mchehab"
          },
          {
            "sha": "ec33fbd585f76b0803a90ee66804fa6f937dccaa",
            "date": "2017-05-19T12:05:19Z",
            "author_login": "mchehab"
          },
          {
            "sha": "d0994fe9ba22895e56b943ff3f03f2b39fcaa397",
            "date": "2017-05-19T12:03:17Z",
            "author_login": "mchehab"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.4,
    "cvss_vector": "CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-125",
    "description": "The saa7164_bus_get function in drivers/media/pci/saa7164/saa7164-bus.c in the Linux kernel through 4.11.5 allows local users to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact by changing a certain sequence-number value, aka a \"double fetch\" vulnerability.",
    "attack_vector": "PHYSICAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2017-05-08T06:29:00.270",
    "last_modified": "2024-11-21T03:34:47.413",
    "fix_date": "2017-06-06T12:30:27Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/archive/1/540770/30/0/threaded",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/99619",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.kernel.org/show_bug.cgi?id=195559",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/stoth68000/media-tree/commit/354dd3924a2e43806774953de536257548b5002c",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2017/12/msg00004.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3754-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/archive/1/540770/30/0/threaded",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/99619",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugzilla.kernel.org/show_bug.cgi?id=195559",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/stoth68000/media-tree/commit/354dd3924a2e43806774953de536257548b5002c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2017/12/msg00004.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3754-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:56.550393",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "media-tree",
    "owner": "stoth68000",
    "created_at": "2017-06-06T12:38:54Z",
    "updated_at": "2024-04-21T09:06:31Z",
    "pushed_at": "2017-06-06T12:53:44Z",
    "size": 932577,
    "stars": 0,
    "forks": 0,
    "open_issues": 1,
    "watchers": 0,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 632102386,
      "C++": 13814880,
      "Assembly": 10443166,
      "Makefile": 1625365,
      "Objective-C": 798693,
      "Perl": 763434,
      "Shell": 195180,
      "Yacc": 83162,
      "Python": 70508,
      "Lex": 43207,
      "Awk": 22865,
      "GDB": 18113,
      "UnrealScript": 16715,
      "SourcePawn": 2711
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0.0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T21:50:23.254877"
  }
}