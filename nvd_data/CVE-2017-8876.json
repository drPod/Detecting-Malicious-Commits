{
  "cve_id": "CVE-2017-8876",
  "github_data": {
    "repository": "DeuxHuitHuit/symphony-2",
    "fix_commit": "cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
    "related_commits": [
      "cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
      "cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7"
    ],
    "patch_url": "https://github.com/DeuxHuitHuit/symphony-2/commit/cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7.patch",
    "fix_commit_details": {
      "sha": "cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
      "commit_date": "2017-05-09T15:29:30Z",
      "author": {
        "login": "nitriques",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevent XSS with section's name and nav group",
        "length": 230,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 28,
        "additions": 14,
        "deletions": 14
      },
      "files": [
        {
          "filename": "symphony/content/content.blueprintssections.php",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -215,7 +215,7 @@ public function __viewNew()\n \n         $sections = SectionManager::fetch(null, 'ASC', 'sortorder');\n         $label = Widget::Label(__('Navigation Group'));\n-        $label->appendChild(Widget::Input('meta[navigation_group]', $meta['navigation_group']));\n+        $label->appendChild(Widget::Input('meta[navigation_group]', (isset($meta['navigation_group']) ? General::sanitize($meta['navigation_group']) : null)));\n \n         if (isset($this->_errors['navigation_group'])) {\n             $navgroupdiv->appendChild(Widget::Error($label, $this->_errors['navigation_group']));\n@@ -232,7 +232,7 @@ public function __viewNew()\n                     continue;\n                 }\n \n-                $ul->appendChild(new XMLElement('li', $s->get('navigation_group')));\n+                $ul->appendChild(new XMLElement('li', General::sanitize($s->get('navigation_group'))));\n                 $groups[] = $s->get('navigation_group');\n             }\n \n@@ -381,8 +381,8 @@ public function __viewEdit()\n         }\n \n         $this->setPageType('form');\n-        $this->setTitle(__('%1$s &ndash; %2$s &ndash; %3$s', array($meta['name'], __('Sections'), __('Symphony'))));\n-        $this->appendSubheading($meta['name'],\n+        $this->setTitle(__('%1$s &ndash; %2$s &ndash; %3$s', array(General::sanitize($meta['name']), __('Sections'), __('Symphony'))));\n+        $this->appendSubheading(General::sanitize($meta['name']),\n             Widget::Anchor(__('View Entries'), SYMPHONY_URL . '/publish/' . $section->get('handle'), __('View Section Entries'), 'button')\n         );\n         $this->insertBreadcrumbs(array(\n@@ -425,7 +425,7 @@ public function __viewEdit()\n \n         $sections = SectionManager::fetch(null, 'ASC', 'sortorder');\n         $label = Widget::Label(__('Navigation Group'));\n-        $label->appendChild(Widget::Input('meta[navigation_group]', $meta['navigation_group']));\n+        $label->appendChild(Widget::Input('meta[navigation_group]', General::sanitize($meta['navigation_group'])));\n \n         if (isset($this->_errors['navigation_group'])) {\n             $navgroupdiv->appendChild(Widget::Error($label, $this->_errors['navigation_group']));\n@@ -442,7 +442,7 @@ public function __viewEdit()\n                     continue;\n                 }\n \n-                $ul->appendChild(new XMLElement('li', $s->get('navigation_group')));\n+                $ul->appendChild(new XMLElement('li', General::sanitize($s->get('navigation_group'))));\n                 $groups[] = $s->get('navigation_group');\n             }\n "
        },
        {
          "filename": "symphony/content/content.publish.php",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -379,7 +379,7 @@ public function __viewIndex()\n         $section = SectionManager::fetch($section_id);\n \n         $this->setPageType('table');\n-        $this->setTitle(__('%1$s &ndash; %2$s', array($section->get('name'), __('Symphony'))));\n+        $this->setTitle(__('%1$s &ndash; %2$s', array(General::sanitize($section->get('name')), __('Symphony'))));\n \n         $filters = array();\n         $filter_querystring = $prepopulate_querystring = $where = $joins = null;\n@@ -469,7 +469,7 @@ public function __viewIndex()\n             array_unshift($subheading_buttons, Widget::Anchor(__('Edit Section'), SYMPHONY_URL . '/blueprints/sections/edit/' . $section_id . '/', __('Edit Section Configuration'), 'button'));\n         }\n \n-        $this->appendSubheading($section->get('name'), $subheading_buttons);\n+        $this->appendSubheading(General::sanitize($section->get('name')), $subheading_buttons);\n \n         /**\n          * Allows adjustments to be made to the SQL where and joins statements\n@@ -960,7 +960,7 @@ public function __viewNew()\n         $section = SectionManager::fetch($section_id);\n \n         $this->setPageType('form');\n-        $this->setTitle(__('%1$s &ndash; %2$s', array($section->get('name'), __('Symphony'))));\n+        $this->setTitle(__('%1$s &ndash; %2$s', array(General::sanitize($section->get('name')), __('Symphony'))));\n \n         // Ensure errored entries still maintain any prepopulated values [#2211]\n         $this->Form->setAttribute('action', $this->Form->getAttribute('action') . $this->getPrepopulateString());\n@@ -986,7 +986,7 @@ public function __viewNew()\n \n         // Build filtered breadcrumb [#1378}\n         $this->insertBreadcrumbs(array(\n-            Widget::Anchor($section->get('name'), SYMPHONY_URL . '/publish/' . $this->_context['section_handle'] . '/' . $this->getFilterString()),\n+            Widget::Anchor(General::sanitize($section->get('name')), SYMPHONY_URL . '/publish/' . $this->_context['section_handle'] . '/' . $this->getFilterString()),\n         ));\n \n         $this->Form->appendChild(Widget::Input('MAX_FILE_SIZE', Symphony::Configuration()->get('max_upload_size', 'admin'), 'hidden'));\n@@ -1297,7 +1297,7 @@ public function __viewEdit()\n \n         $this->setPageType('form');\n         $this->Form->setAttribute('enctype', 'multipart/form-data');\n-        $this->setTitle(__('%1$s &ndash; %2$s &ndash; %3$s', array($title, $section->get('name'), __('Symphony'))));\n+        $this->setTitle(__('%1$s &ndash; %2$s &ndash; %3$s', array($title, General::sanitize($section->get('name')), __('Symphony'))));\n \n         $sidebar_fields = $section->fetchFields(null, 'sidebar');\n         $main_fields = $section->fetchFields(null, 'main');\n@@ -1316,7 +1316,7 @@ public function __viewEdit()\n         }\n \n         $this->insertBreadcrumbs(array(\n-            Widget::Anchor($section->get('name'), SYMPHONY_URL . (isset($filter_link) ? $filter_link : $base)),\n+            Widget::Anchor(General::sanitize($section->get('name')), SYMPHONY_URL . (isset($filter_link) ? $filter_link : $base)),\n         ));\n \n         $this->Form->appendChild(Widget::Input('MAX_FILE_SIZE', Symphony::Configuration()->get('max_upload_size', 'admin'), 'hidden'));"
        },
        {
          "filename": "symphony/lib/toolkit/class.administrationpage.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -807,7 +807,7 @@ public function appendNavigation()\n             }\n \n             if ($this->doesAuthorHaveAccess($n['limit'])) {\n-                $xGroup = new XMLElement('li', $n['name'], array('role' => 'presentation'));\n+                $xGroup = new XMLElement('li', General::sanitize($n['name']), array('role' => 'presentation'));\n \n                 if (isset($n['class']) && trim($n['name']) !== '') {\n                     $xGroup->setAttribute('class', $n['class']);\n@@ -826,7 +826,7 @@ public function appendNavigation()\n                         if ($this->doesAuthorHaveAccess($c['limit'])) {\n                             $xChild = new XMLElement('li');\n                             $xChild->setAttribute('role', 'menuitem');\n-                            $linkChild = Widget::Anchor($c['name'], SYMPHONY_URL . $c['link']);\n+                            $linkChild = Widget::Anchor(General::sanitize($c['name']), SYMPHONY_URL . $c['link']);\n                             if (isset($c['target'])) {\n                                 $linkChild->setAttribute('target', $c['target']);\n                             }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1b8e26d1633d514b59e58c65e7e34f62a3a768b1",
            "date": "2020-04-08T19:19:48Z",
            "author_login": "nitriques"
          },
          {
            "sha": "b39fce60005f3da5ccf9944880f64fbaee9fd3df",
            "date": "2020-04-02T20:04:50Z",
            "author_login": "nitriques"
          },
          {
            "sha": "ea690f74cbc5b325014e45fb44b7ad5501b7da5e",
            "date": "2020-03-27T16:13:27Z",
            "author_login": "nitriques"
          },
          {
            "sha": "e8af4536c5e5fc26e162e82fd8b3e8a548801a4b",
            "date": "2020-03-27T01:51:38Z",
            "author_login": "nitriques"
          },
          {
            "sha": "cb323149ab3bbe46e03623a0076822a08c02ebb3",
            "date": "2020-03-27T01:50:56Z",
            "author_login": "nitriques"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Symphony 2 2.6.11 has XSS in the meta[navigation_group] parameter to content/content.blueprintssections.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2017-05-10T05:29:00.410",
    "last_modified": "2024-11-21T03:34:54.210",
    "fix_date": "2017-05-09T15:29:30Z"
  },
  "references": [
    {
      "url": "https://github.com/DeuxHuitHuit/symphony-2/commit/cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DeuxHuitHuit/symphony-2/commit/cd69a2a516e6503c1a1c7e097ee90d255ec3d6b7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:58:56.554053",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symphonycms",
    "owner": "DeuxHuitHuit",
    "created_at": "2012-03-01T15:38:35Z",
    "updated_at": "2023-01-28T04:37:47Z",
    "pushed_at": "2021-04-27T08:14:38Z",
    "size": 20598,
    "stars": 2,
    "forks": 2,
    "open_issues": 3,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "3.0.x",
    "protected_branches": [
      "2.1.x",
      "2.2.x",
      "2.5.x",
      "2.6.x"
    ],
    "languages": {
      "PHP": 2303601,
      "JavaScript": 186262,
      "CSS": 61928,
      "TSQL": 12767,
      "Smarty": 6043,
      "Shell": 2590,
      "XSLT": 628
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:02:10.047798"
  }
}