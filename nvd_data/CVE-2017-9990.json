{
  "cve_id": "CVE-2017-9990",
  "github_data": {
    "repository": "FFmpeg/FFmpeg",
    "fix_commit": "cb243972b121b1ae6b60a78ff55a0506c69f3879",
    "related_commits": [
      "cb243972b121b1ae6b60a78ff55a0506c69f3879",
      "cb243972b121b1ae6b60a78ff55a0506c69f3879"
    ],
    "patch_url": "https://github.com/FFmpeg/FFmpeg/commit/cb243972b121b1ae6b60a78ff55a0506c69f3879.patch",
    "fix_commit_details": {
      "sha": "cb243972b121b1ae6b60a78ff55a0506c69f3879",
      "commit_date": "2017-05-11T00:38:33Z",
      "author": {
        "login": "michaelni",
        "type": "User",
        "stats": {
          "total_commits": 30563,
          "average_weekly_commits": 24.352988047808765,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1151
        }
      },
      "commit_message": {
        "title": "avcodec/xpmdec: Fix multiple pointer/memory issues",
        "length": 397,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 30,
        "deletions": 7
      },
      "files": [
        {
          "filename": "libavcodec/xpmdec.c",
          "status": "modified",
          "additions": 30,
          "deletions": 7,
          "patch": "@@ -29,6 +29,8 @@\n typedef struct XPMContext {\n     uint32_t  *pixels;\n     int        pixels_size;\n+    uint8_t   *buf;\n+    int        buf_size;\n } XPMDecContext;\n \n typedef struct ColorEntry {\n@@ -233,6 +235,8 @@ static uint32_t color_string_to_rgba(const char *p, int len)\n     const ColorEntry *entry;\n     char color_name[100];\n \n+    len = FFMIN(FFMAX(len, 0), sizeof(color_name) - 1);\n+\n     if (*p == '#') {\n         p++;\n         len--;\n@@ -299,18 +303,25 @@ static int xpm_decode_frame(AVCodecContext *avctx, void *data,\n {\n     XPMDecContext *x = avctx->priv_data;\n     AVFrame *p=data;\n-    const uint8_t *end, *ptr = avpkt->data;\n+    const uint8_t *end, *ptr;\n     int ncolors, cpp, ret, i, j;\n     int64_t size;\n     uint32_t *dst;\n \n     avctx->pix_fmt = AV_PIX_FMT_BGRA;\n \n-    end = avpkt->data + avpkt->size;\n-    while (memcmp(ptr, \"/* XPM */\", 9) && ptr < end - 9)\n+    av_fast_padded_malloc(&x->buf, &x->buf_size, avpkt->size);\n+    if (!x->buf)\n+        return AVERROR(ENOMEM);\n+    memcpy(x->buf, avpkt->data, avpkt->size);\n+    x->buf[avpkt->size] = 0;\n+\n+    ptr = x->buf;\n+    end = x->buf + avpkt->size;\n+    while (end - ptr > 9 && memcmp(ptr, \"/* XPM */\", 9))\n         ptr++;\n \n-    if (ptr >= end) {\n+    if (end - ptr <= 9) {\n         av_log(avctx, AV_LOG_ERROR, \"missing signature\\n\");\n         return AVERROR_INVALIDDATA;\n     }\n@@ -335,7 +346,7 @@ static int xpm_decode_frame(AVCodecContext *avctx, void *data,\n \n     size = 1;\n     for (i = 0; i < cpp; i++)\n-        size *= 94;\n+        size *= 95;\n \n     if (ncolors <= 0 || ncolors > size) {\n         av_log(avctx, AV_LOG_ERROR, \"invalid number of colors: %d\\n\", ncolors);\n@@ -349,12 +360,15 @@ static int xpm_decode_frame(AVCodecContext *avctx, void *data,\n         return AVERROR(ENOMEM);\n \n     ptr += mod_strcspn(ptr, \",\") + 1;\n+    if (end - ptr < 1)\n+        return AVERROR_INVALIDDATA;\n+\n     for (i = 0; i < ncolors; i++) {\n         const uint8_t *index;\n         int len;\n \n         ptr += mod_strcspn(ptr, \"\\\"\") + 1;\n-        if (ptr + cpp > end)\n+        if (end - ptr < cpp)\n             return AVERROR_INVALIDDATA;\n         index = ptr;\n         ptr += cpp;\n@@ -373,14 +387,20 @@ static int xpm_decode_frame(AVCodecContext *avctx, void *data,\n \n         x->pixels[ret] = color_string_to_rgba(ptr, len);\n         ptr += mod_strcspn(ptr, \",\") + 1;\n+        if (end - ptr < 1)\n+            return AVERROR_INVALIDDATA;\n     }\n \n     for (i = 0; i < avctx->height; i++) {\n         dst = (uint32_t *)(p->data[0] + i * p->linesize[0]);\n+        if (end - ptr < 1)\n+            return AVERROR_INVALIDDATA;\n         ptr += mod_strcspn(ptr, \"\\\"\") + 1;\n+        if (end - ptr < 1)\n+            return AVERROR_INVALIDDATA;\n \n         for (j = 0; j < avctx->width; j++) {\n-            if (ptr + cpp > end)\n+            if (end - ptr < cpp)\n                 return AVERROR_INVALIDDATA;\n \n             if ((ret = ascii2index(ptr, cpp)) < 0)\n@@ -405,6 +425,9 @@ static av_cold int xpm_decode_close(AVCodecContext *avctx)\n     XPMDecContext *x = avctx->priv_data;\n     av_freep(&x->pixels);\n \n+    av_freep(&x->buf);\n+    x->buf_size = 0;\n+\n     return 0;\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8eb1d76e146a0e557d596a4039efebac746b4d83",
            "date": "2025-01-12T03:34:17Z",
            "author_login": "nuomi2021"
          },
          {
            "sha": "d5873be583ada9e1fb887e2fe8dcfd4b12e0efcd",
            "date": "2025-01-13T20:28:02Z",
            "author_login": "jamrial"
          },
          {
            "sha": "b88fc4e098607bed98c74e6d13ed77b907776685",
            "date": "2025-01-08T11:06:30Z",
            "author_login": "mypopydev"
          },
          {
            "sha": "8ded602edad43227aa5b84ac8041d4b174ec9431",
            "date": "2025-01-08T11:04:12Z",
            "author_login": "mypopydev"
          },
          {
            "sha": "851a84650ef6026871f3b565d1f54c9d7a5397a4",
            "date": "2025-01-07T04:56:11Z",
            "author_login": "cyanreg"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "Stack-based buffer overflow in the color_string_to_rgba function in libavcodec/xpmdec.c in FFmpeg 3.3 before 3.3.1 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2017-06-28T06:29:00.427",
    "last_modified": "2024-11-21T03:37:18.523",
    "fix_date": "2017-05-11T00:38:33Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/99313",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1466",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FFmpeg/FFmpeg/commit/cb243972b121b1ae6b60a78ff55a0506c69f3879",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/99313",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1466",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FFmpeg/FFmpeg/commit/cb243972b121b1ae6b60a78ff55a0506c69f3879",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:01.668007",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "FFmpeg",
    "owner": "FFmpeg",
    "created_at": "2011-04-14T14:12:38Z",
    "updated_at": "2025-01-14T12:22:35Z",
    "pushed_at": "2025-01-13T21:15:03Z",
    "size": 431834,
    "stars": 47243,
    "forks": 12316,
    "open_issues": 3,
    "watchers": 47243,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "release/0.5",
      "release/0.6",
      "release/0.7",
      "release/0.8",
      "release/0.9",
      "release/0.10",
      "release/0.11",
      "release/1.0",
      "release/1.1",
      "release/1.2",
      "release/2.0",
      "release/2.1",
      "release/2.2",
      "release/2.3",
      "release/2.4",
      "release/2.5",
      "release/2.6",
      "release/2.7",
      "release/2.8",
      "release/3.0",
      "release/3.1",
      "release/3.2",
      "release/3.3",
      "release/3.4",
      "release/4.0",
      "release/4.1",
      "release/4.2",
      "release/4.3"
    ],
    "languages": {
      "C": 65826781,
      "Assembly": 5688727,
      "Makefile": 948271,
      "C++": 141194,
      "Objective-C": 108023,
      "Cuda": 85420,
      "Shell": 59093,
      "Perl": 29093,
      "Metal": 7961,
      "Python": 5992,
      "Awk": 1912,
      "HTML": 1631,
      "Ruby": 1462,
      "Verilog": 729,
      "Roff": 132
    },
    "commit_activity": {
      "total_commits_last_year": 4412,
      "avg_commits_per_week": 84.84615384615384,
      "days_active_last_year": 353
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:03:32.126548"
  }
}