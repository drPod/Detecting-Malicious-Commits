{
  "cve_id": "CVE-2018-0046",
  "github_data": {
    "repository": "OpenNMS/opennms",
    "fix_commit": "8710463077c10034fcfa06556a98fb1a1a64fd0d",
    "related_commits": [
      "8710463077c10034fcfa06556a98fb1a1a64fd0d",
      "8710463077c10034fcfa06556a98fb1a1a64fd0d"
    ],
    "patch_url": "https://github.com/OpenNMS/opennms/commit/8710463077c10034fcfa06556a98fb1a1a64fd0d.patch",
    "fix_commit_details": {
      "sha": "8710463077c10034fcfa06556a98fb1a1a64fd0d",
      "commit_date": "2017-02-01T15:32:08Z",
      "author": {
        "login": "christianpape",
        "type": "User",
        "stats": {
          "total_commits": 1242,
          "average_weekly_commits": 1.1640112464854733,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 367
        }
      },
      "commit_message": {
        "title": "NMS-9065: Fixed the Asset pages JSPs to handle ACL filtering for release-19.0.0",
        "length": 79,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 163,
        "additions": 95,
        "deletions": 68
      },
      "files": [
        {
          "filename": "opennms-webapp/src/main/webapp/asset/modify.jsp",
          "status": "modified",
          "additions": 83,
          "deletions": 60,
          "patch": "@@ -28,7 +28,7 @@\n  *******************************************************************************/\n --%>\n \n-<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n+<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" import=\"org.opennms.web.springframework.security.AclUtils\"%>\n \n <% pageContext.setAttribute(\"nodeId\", request.getParameter(\"node\")); %>\n \n@@ -47,72 +47,95 @@\n   <jsp:param name=\"script\" value='<script type=\"text/javascript\" src=\"js/onms-assets/app.js\"></script>' />\n </jsp:include>\n \n-<div class=\"container-fluid\" ng-app=\"onms-assets\" ng-controller=\"NodeAssetsCtrl\" ng-init=\"init(${nodeId})\">\n+<%\n+  AclUtils.NodeAccessChecker accessChecker = AclUtils.getNodeAccessChecker(getServletContext());\n \n-  <div growl></div>\n+  Integer nodeId = null;\n \n-  <h4>\n-    Node: <strong><a href=\"element/node.jsp?node=${nodeId}\">{{ nodeLabel }}</a></strong>\n-  </h4>\n-  <p>\n-    Last modified by {{ master['lastModifiedBy'] }} at {{ master['lastModifiedDate'] | date }}\n-  </p>\n+  try {\n+    nodeId = Integer.valueOf(request.getParameter(\"node\"));\n+  } catch (NumberFormatException e) {\n+%>\n+    <h2>Error parsing node parameter.</h2>\n+<%\n+  }\n \n-  <form name=\"assetForm\" novalidate>\n-    <div class=\"row\" ng-repeat=\"row in config.rows\">\n-      <div ng-class=\"col.class\" ng-repeat=\"col in row.columns\">\n-        <div class=\"panel panel-default\" ng-repeat=\"panel in col.panels\">\n-          <div class=\"panel-heading\">\n-            <h3 class=\"panel-title\">{{ panel.title }}</h3>\n-          </div>\n-          <div class=\"panel-body\">\n-            <div class=\"form-horizontal\" ng-repeat=\"field in panel.fields\"> \n-              <div class=\"form-group\" ng-class=\"{ 'has-error': assetForm[field.model].$invalid && !assetForm[field.model].$pristine, 'has-warning': assetForm[field.model].$dirty }\">\n-                <label class=\"control-label col-md-3\" for=\"{{ field.model }}\" uib-tooltip=\"{{ field.tooltip  }}\">{{ field.label }}</label>\n-                <div class=\"col-md-9\">\n-                  <%-- Static/ReadOnly fields --%>\n-                  <p class=\"form-control-static\" ng-if=\"field.type=='static'\">{{ asset[field.model] }}</p>\n-                  <%-- Standard fields with typeahead suggestions --%>\n-                  <input type=\"text\" class=\"form-control\" id=\"{{ field.model }}\" name=\"{{ field.model }}\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='text'\"\n-                    typeahead-editable=\"true\" typeahead-min-length=\"0\" ng-pattern=\"field.pattern\"\n-                    uib-typeahead=\"suggestion for suggestion in getSuggestions(field.model) | filter:$viewValue\"></input>\n-                  <%-- Password fields --%>\n-                  <input type=\"password\" class=\"form-control\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='password'\"></input>\n-                  <%-- Textarea fields --%>\n-                  <textarea class=\"form-control\" style=\"height: 20em;\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='textarea'\"></textarea>\n-                  <%-- Date fields with Popup Picker --%>\n-                  <p class=\"input-group\" ng-if=\"field.type=='date'\">\n-                    <input type=\"date\" class=\"form-control\" uib-datepicker-popup=\"{{ dateFormat }}\" is-open=\"field.open\" ng-model=\"asset[field.model]\" placeholder=\"Specify date using this format: {{ dateFormat }}\" />\n-                    <span class=\"input-group-btn\">\n-                      <button type=\"button\" class=\"btn btn-default\" ng-click=\"field.open=true\"><i class=\"glyphicon glyphicon-calendar\"></i></button>\n-                    </span>\n-                  </p>\n-                  <%-- List/Select fields --%>\n-                  <select class=\"form-control\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='select'\">\n-                    <option ng-repeat=\"value in field.options\">{{value}}</option>\n-                  </select>\n+  if (nodeId != null) {\n+    if (accessChecker.isNodeAccessible(nodeId)) {\n+%>\n+      <div class=\"container-fluid\" ng-app=\"onms-assets\" ng-controller=\"NodeAssetsCtrl\" ng-init=\"init(${nodeId})\">\n+\n+        <div growl></div>\n+\n+        <h4>\n+          Node: <strong><a href=\"element/node.jsp?node=${nodeId}\">{{ nodeLabel }}</a></strong>\n+        </h4>\n+        <p>\n+          Last modified by {{ master['lastModifiedBy'] }} at {{ master['lastModifiedDate'] | date }}\n+        </p>\n+\n+        <form name=\"assetForm\" novalidate>\n+          <div class=\"row\" ng-repeat=\"row in config.rows\">\n+            <div ng-class=\"col.class\" ng-repeat=\"col in row.columns\">\n+              <div class=\"panel panel-default\" ng-repeat=\"panel in col.panels\">\n+                <div class=\"panel-heading\">\n+                  <h3 class=\"panel-title\">{{ panel.title }}</h3>\n+                </div>\n+                <div class=\"panel-body\">\n+                  <div class=\"form-horizontal\" ng-repeat=\"field in panel.fields\">\n+                    <div class=\"form-group\" ng-class=\"{ 'has-error': assetForm[field.model].$invalid && !assetForm[field.model].$pristine, 'has-warning': assetForm[field.model].$dirty }\">\n+                      <label class=\"control-label col-md-3\" for=\"{{ field.model }}\" uib-tooltip=\"{{ field.tooltip  }}\">{{ field.label }}</label>\n+                      <div class=\"col-md-9\">\n+                        <%-- Static/ReadOnly fields --%>\n+                        <p class=\"form-control-static\" ng-if=\"field.type=='static'\">{{ asset[field.model] }}</p>\n+                        <%-- Standard fields with typeahead suggestions --%>\n+                        <input type=\"text\" class=\"form-control\" id=\"{{ field.model }}\" name=\"{{ field.model }}\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='text'\"\n+                          typeahead-editable=\"true\" typeahead-min-length=\"0\" ng-pattern=\"field.pattern\"\n+                          uib-typeahead=\"suggestion for suggestion in getSuggestions(field.model) | filter:$viewValue\"></input>\n+                        <%-- Password fields --%>\n+                        <input type=\"password\" class=\"form-control\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='password'\"></input>\n+                        <%-- Textarea fields --%>\n+                        <textarea class=\"form-control\" style=\"height: 20em;\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='textarea'\"></textarea>\n+                        <%-- Date fields with Popup Picker --%>\n+                        <p class=\"input-group\" ng-if=\"field.type=='date'\">\n+                          <input type=\"date\" class=\"form-control\" uib-datepicker-popup=\"{{ dateFormat }}\" is-open=\"field.open\" ng-model=\"asset[field.model]\" placeholder=\"Specify date using this format: {{ dateFormat }}\" />\n+                          <span class=\"input-group-btn\">\n+                            <button type=\"button\" class=\"btn btn-default\" ng-click=\"field.open=true\"><i class=\"glyphicon glyphicon-calendar\"></i></button>\n+                          </span>\n+                        </p>\n+                        <%-- List/Select fields --%>\n+                        <select class=\"form-control\" ng-model=\"asset[field.model]\" ng-if=\"field.type=='select'\">\n+                          <option ng-repeat=\"value in field.options\">{{value}}</option>\n+                        </select>\n+                      </div>\n+                    </div>\n+                  </div>\n                 </div>\n               </div>\n-            </div> \n+            </div>\n           </div>\n-        </div>\n-      </div>\n-    </div>\n-    <div class=\"row\">\n-      <div class=\"col-md-6\">\n-        <div class=\"btn-group\">\n-          <button type=\"button\" class=\"btn btn-default\" ng-click=\"save()\" id=\"save-asset\" ng-disabled=\"assetForm.$invalid\">Save Asset Record&nbsp;&nbsp;&nbsp;\n-            <span class=\"glyphicon glyphicon-save\"><span>\n-          </button>\n-          <button type=\"button\" class=\"btn btn-default\" ng-click=\"reset()\" id=\"reset-asset\">Reset&nbsp;&nbsp;&nbsp;\n-            <span class=\"glyphicon glyphicon-refresh\"><span>\n-          </button>\n-        </div>\n+          <div class=\"row\">\n+            <div class=\"col-md-6\">\n+              <div class=\"btn-group\">\n+                <button type=\"button\" class=\"btn btn-default\" ng-click=\"save()\" id=\"save-asset\" ng-disabled=\"assetForm.$invalid\">Save Asset Record&nbsp;&nbsp;&nbsp;\n+                  <span class=\"glyphicon glyphicon-save\"><span>\n+                </button>\n+                <button type=\"button\" class=\"btn btn-default\" ng-click=\"reset()\" id=\"reset-asset\">Reset&nbsp;&nbsp;&nbsp;\n+                  <span class=\"glyphicon glyphicon-refresh\"><span>\n+                </button>\n+              </div>\n+            </div>\n+          </div>\n+        </form>\n       </div>\n-    </div>\n-  </form>\n-\n-</div>\n+<%\n+    } else {\n+%>\n+      <h2>Access denied.</h2>\n+<%\n+    }\n+  }\n+%>\n \n <jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\"/>\n "
        },
        {
          "filename": "opennms-webapp/src/main/webapp/asset/nodelist.jsp",
          "status": "modified",
          "additions": 12,
          "deletions": 8,
          "patch": "@@ -30,13 +30,11 @@\n --%>\n \n <%@page language=\"java\"\n-\tcontentType=\"text/html\"\n-\tsession=\"true\"\n-\timport=\"org.opennms.web.asset.*,\n-\t\torg.opennms.web.servlet.MissingParameterException \n-\t\"\n-%>\n-\n+        contentType=\"text/html\"\n+        session=\"true\"\n+        import=\"org.opennms.web.asset.*,\n+\t\t    org.opennms.web.servlet.MissingParameterException,\n+            org.opennms.web.springframework.security.AclUtils\"%>\n <%\n     final String ALL_NON_EMPTY = \"_allNonEmpty\";\n     String column = request.getParameter(\"column\");\n@@ -52,6 +50,8 @@\n     }\n \n     AssetModel.MatchingAsset[] assets = column.equals(ALL_NON_EMPTY) ? AssetModel.searchNodesWithAssets() : AssetModel.searchAssets(column, search);\n+\n+    AclUtils.NodeAccessChecker accessChecker = AclUtils.getNodeAccessChecker(getServletContext());\n %>\n \n <jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n@@ -80,7 +80,11 @@\n             <th>Node Link</td>\n           </tr>\n \n-        <% for( int i=0; i < assets.length; i++ ) { %>\n+        <% for( int i=0; i < assets.length; i++ ) {\n+            if (!accessChecker.isNodeAccessible(assets[i].nodeId)) {\n+                continue;\n+            }\n+        %>\n           <tr>\n             <td><%=assets[i].matchingValue%></td>\n             <td><a href=\"asset/modify.jsp?node=<%=assets[i].nodeId%>\"><%=assets[i].nodeLabel%></a></td>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa0a6c01745db1fb97c4e136e7b66f8223fd9023",
            "date": "2025-01-09T20:52:26Z",
            "author_login": "opennms-bamboo"
          },
          {
            "sha": "14ede259455c439c9f3ea8aa76726968661240c8",
            "date": "2025-01-09T18:30:16Z",
            "author_login": "opennms-bamboo"
          },
          {
            "sha": "9843579bedf5627bc55bd455903351be4c681713",
            "date": "2025-01-09T17:00:12Z",
            "author_login": "mershad-manesh"
          },
          {
            "sha": "d5aa086a8545ef95b5fef24a34c5468fe83e4c21",
            "date": "2025-01-08T18:38:01Z",
            "author_login": "mershad-manesh"
          },
          {
            "sha": "1f6ecf40b935a1067adf9068b10d6fd095eee915",
            "date": "2025-01-08T14:24:56Z",
            "author_login": "opennms-bamboo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "A reflected cross-site scripting vulnerability in OpenNMS included with Juniper Networks Junos Space may allow the stealing of sensitive information or session credentials from Junos Space administrators or perform administrative actions. This issue affects Juniper Networks Junos Space versions prior to 18.2R1.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-10-10T18:29:00.780",
    "last_modified": "2024-11-21T03:37:25.467",
    "fix_date": "2017-02-01T15:32:08Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/105566",
      "source": "sirt@juniper.net",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1041862",
      "source": "sirt@juniper.net",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/OpenNMS/opennms/commit/8710463077c10034fcfa06556a98fb1a1a64fd0d",
      "source": "sirt@juniper.net",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://kb.juniper.net/JSA10880",
      "source": "sirt@juniper.net",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/105566",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1041862",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/OpenNMS/opennms/commit/8710463077c10034fcfa06556a98fb1a1a64fd0d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://kb.juniper.net/JSA10880",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:35.852105",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "opennms",
    "owner": "OpenNMS",
    "created_at": "2013-04-11T18:22:33Z",
    "updated_at": "2025-01-14T07:56:39Z",
    "pushed_at": "2025-01-14T11:15:07Z",
    "size": 804409,
    "stars": 1002,
    "forks": 588,
    "open_issues": 62,
    "watchers": 1002,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "1.6",
      "1.8",
      "1.10",
      "1.12"
    ],
    "languages": {
      "Java": 60412677,
      "JavaScript": 3887957,
      "TypeScript": 374916,
      "HTML": 360783,
      "Vue": 352190,
      "Shell": 341289,
      "CSS": 133110,
      "Perl": 73669,
      "Python": 72357,
      "XSLT": 60925,
      "Groovy": 53961,
      "SCSS": 51003,
      "FreeMarker": 41468,
      "M4": 31931,
      "Makefile": 24635,
      "Dockerfile": 16707,
      "C++": 9187,
      "Batchfile": 8017,
      "PLpgSQL": 7633,
      "Smarty": 6633,
      "Jinja": 5483,
      "C": 4048,
      "R": 1375,
      "Clojure": 941,
      "CMake": 898
    },
    "commit_activity": {
      "total_commits_last_year": 874,
      "avg_commits_per_week": 16.807692307692307,
      "days_active_last_year": 181
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:59:41.732233"
  }
}