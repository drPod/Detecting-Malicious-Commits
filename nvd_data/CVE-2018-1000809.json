{
  "cve_id": "CVE-2018-1000809",
  "github_data": {
    "repository": "privacyidea/privacyidea",
    "fix_commit": "a3edc09beffa2104f357fe24971ea3211ce40751",
    "related_commits": [
      "a3edc09beffa2104f357fe24971ea3211ce40751",
      "a3edc09beffa2104f357fe24971ea3211ce40751"
    ],
    "patch_url": "https://github.com/privacyidea/privacyidea/commit/a3edc09beffa2104f357fe24971ea3211ce40751.patch",
    "fix_commit_details": {
      "sha": "a3edc09beffa2104f357fe24971ea3211ce40751",
      "commit_date": "2018-09-07T12:33:56Z",
      "author": {
        "login": "cornelinux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge branch 'branch-2.23'",
        "length": 26,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 72,
        "additions": 67,
        "deletions": 5
      },
      "files": [
        {
          "filename": "Changelog",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,3 +1,8 @@\n+Version 2.23.2, 2018-09-07\n+\n+  Fixes:\n+  * Fix problem with empty username (#1227)\n+\n Version 2.23.1, 2018-09-06\n \n   Fixes:"
        },
        {
          "filename": "Makefile",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -15,7 +15,7 @@ info:\n \t@echo \"make ppa          - upload to launchpad stable repo\"\n \t\n #VERSION=1.3~dev5\n-SHORT_VERSION=2.23.1\n+SHORT_VERSION=2.23.2\n #SHORT_VERSION=2.10~dev7\n VERSION_JESSIE=${SHORT_VERSION}\n VERSION=${SHORT_VERSION}"
        },
        {
          "filename": "deploy/debian-ubuntu/changelog",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -1,3 +1,10 @@\n+python-privacyidea (2.23.2-1trusty) trusty; urgency=medium\n+\n+  Fixes:\n+  * Fix problem with empty username (#1227)\n+\n+ -- Cornelius K\u00f6lbel <cornelius.koelbel@netknights.it>  Fri, 07 Sep 2018 12:00:00 +0200\n+\n python-privacyidea (2.23.1-1trusty) trusty; urgency=medium\n \n   Fixes:"
        },
        {
          "filename": "deploy/debian-virtualenv/changelog",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -1,3 +1,10 @@\n+privacyidea-venv (2.23.2-1) jessie; urgency=medium\n+\n+  Fixes:\n+  * Fix problem with empty username (#1227)\n+\n+ -- Cornelius K\u00f6lbel <cornelius.koelbel@netknights.it>  Fri, 07 Sep 2018 12:00:00 +0200\n+\n privacyidea-venv (2.23.1-1) jessie; urgency=medium\n \n   Fixes:"
        },
        {
          "filename": "deploy/debian-virtualenv/rules",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -12,4 +12,7 @@ override_dh_virtualenv:\n override_dh_shlibdeps:\n \tdh_shlibdeps --exclude=numpy --exclude=psycopg2 --exclude=libz --exclude=png16\n \n+override_dh_strip:\n+\tdh_strip --exclude=cffi --exclude=PIL --exclude=Pillow\n+\n "
        },
        {
          "filename": "doc/conf.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -17,7 +17,7 @@\n # built documents.\n #\n # The short X.Y version.\n-version = '2.23.1'\n+version = '2.23.2'\n # The full version, including alpha/beta/rc tags.\n #release = '2.16dev5'\n release = version"
        },
        {
          "filename": "privacyidea/api/validate.py",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -164,6 +164,7 @@ def after_request(response):\n \n \n @validate_blueprint.route('/offlinerefill', methods=['POST'])\n+@check_user_or_serial_in_request(request)\n @event(\"validate_offlinerefill\", request, g)\n def offlinerefill():\n     \"\"\""
        },
        {
          "filename": "privacyidea/lib/decorators.py",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -84,10 +84,15 @@ def __init__(self, request):\n     def __call__(self, func):\n         @functools.wraps(func)\n         def check_user_or_serial_in_request_wrapper(*args, **kwds):\n-            user = self.request.all_data.get(\"user\")\n-            serial = self.request.all_data.get(\"serial\")\n+            user = self.request.all_data.get(\"user\", \"\").strip()\n+            serial = self.request.all_data.get(\"serial\", \"\").strip()\n             if not serial and not user:\n                 raise ParameterError(_(\"You need to specify a serial or a user.\"))\n+            if \"*\" in serial:\n+                raise ParameterError(_(\"Invalid serial number.\"))\n+            if \"%\" in user:\n+                raise ParameterError(_(\"Invalid user.\"))\n+\n             f_result = func(*args, **kwds)\n             return f_result\n "
        },
        {
          "filename": "setup.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@\n import sys\n \n #VERSION=\"2.1dev4\"\n-VERSION=\"2.23.1\"\n+VERSION=\"2.23.2\"\n \n # Taken from kennethreitz/requests/setup.py\n package_directory = os.path.realpath(os.path.dirname(__file__))"
        },
        {
          "filename": "tests/test_api_validate.py",
          "status": "modified",
          "additions": 34,
          "deletions": 0,
          "patch": "@@ -2193,6 +2193,40 @@ def test_30_challenge_text(self):\n         remove_token(\"CHAL3\")\n         remove_token(\"CHAL4\")\n \n+    def test_01_check_invalid_input(self):\n+        # Empty username\n+        with self.app.test_request_context('/validate/check',\n+                                           method='POST',\n+                                           data={\"user\": \" \",\n+                                                 \"pass\": \"\"}):\n+            res = self.app.full_dispatch_request()\n+            self.assertTrue(res.status_code == 400, res)\n+            result = json.loads(res.data).get(\"result\")\n+            error_msg = result.get(\"error\").get(\"message\")\n+            self.assertEqual(\"ERR905: You need to specify a serial or a user.\", error_msg)\n+\n+        # wrong username\n+        with self.app.test_request_context('/validate/check',\n+                                           method='POST',\n+                                           data={\"user\": \"h%h\",\n+                                                 \"pass\": \"\"}):\n+            res = self.app.full_dispatch_request()\n+            self.assertTrue(res.status_code == 400, res)\n+            result = json.loads(res.data).get(\"result\")\n+            error_msg = result.get(\"error\").get(\"message\")\n+            self.assertEqual(\"ERR905: Invalid user.\", error_msg)\n+\n+        # wrong serial\n+        with self.app.test_request_context('/validate/check',\n+                                           method='POST',\n+                                           data={\"serial\": \"*\",\n+                                                 \"pass\": \"\"}):\n+            res = self.app.full_dispatch_request()\n+            self.assertTrue(res.status_code == 400, res)\n+            result = json.loads(res.data).get(\"result\")\n+            error_msg = result.get(\"error\").get(\"message\")\n+            self.assertEqual(\"ERR905: Invalid serial number.\", error_msg)\n+\n \n class AChallengeResponse(MyTestCase):\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 7,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3e7e398c84fd651adf65a26423c4bca42f2cd464",
            "date": "2025-01-13T14:24:01Z",
            "author_login": "nilsbehlen"
          },
          {
            "sha": "d2e12402bcbae6aadffc7195a898da1930bdac97",
            "date": "2024-12-19T14:30:02Z",
            "author_login": "plettich"
          },
          {
            "sha": "55a9b609992b002fe6fa02bfd1fd39628d8a8b67",
            "date": "2025-01-13T11:56:40Z",
            "author_login": "nilsbehlen"
          },
          {
            "sha": "be6c6830ebffe27e6e2f85c8108e169cb6f5f17d",
            "date": "2025-01-13T11:11:39Z",
            "author_login": "plettich"
          },
          {
            "sha": "7b8f5e12a66b1efc07a17264afb5bcc2489aaf01",
            "date": "2025-01-13T10:07:32Z",
            "author_login": "plettich"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "privacyIDEA version 2.23.1 and earlier contains a Improper Input Validation vulnerability in token validation api that can result in Denial-of-Service. This attack appear to be exploitable via http request with user=<space>&pass= to /validate/check url. This vulnerability appears to have been fixed in 2.23.2.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-10-08T15:29:01.057",
    "last_modified": "2024-11-21T03:40:24.113",
    "fix_date": "2018-09-07T12:33:56Z"
  },
  "references": [
    {
      "url": "https://github.com/privacyidea/privacyidea/commit/a3edc09beffa2104f357fe24971ea3211ce40751",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/privacyidea/privacyidea/issues/1227",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/privacyidea/privacyidea/commit/a3edc09beffa2104f357fe24971ea3211ce40751",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/privacyidea/privacyidea/issues/1227",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:35.847942",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "privacyidea",
    "owner": "privacyidea",
    "created_at": "2014-06-03T14:47:02Z",
    "updated_at": "2025-01-13T14:24:06Z",
    "pushed_at": "2025-01-14T15:47:41Z",
    "size": 59921,
    "stars": 1552,
    "forks": 327,
    "open_issues": 218,
    "watchers": 1552,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 6472625,
      "JavaScript": 976761,
      "HTML": 541625,
      "Shell": 23142,
      "CSS": 16003,
      "PHP": 11482,
      "Makefile": 10539,
      "Roff": 8508,
      "Perl": 6106,
      "Mako": 412,
      "Procfile": 70
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T17:14:40.928420"
  }
}