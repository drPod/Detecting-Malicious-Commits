{
  "cve_id": "CVE-2018-1002209",
  "github_data": {
    "repository": "stachenov/quazip",
    "fix_commit": "5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
    "related_commits": [
      "5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
      "5d2fc16a1976e5bf78d2927b012f67a2ae047a98"
    ],
    "patch_url": "https://github.com/stachenov/quazip/commit/5d2fc16a1976e5bf78d2927b012f67a2ae047a98.patch",
    "fix_commit_details": {
      "sha": "5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
      "commit_date": "2018-06-12T18:32:45Z",
      "author": {
        "login": "stachenov",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed the Zip Slip vulnerability in JlCompress",
        "length": 280,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 30,
        "deletions": 14
      },
      "files": [
        {
          "filename": "NEWS.txt",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1,5 +1,8 @@\n QuaZIP changes\n \n+* Current\n+        * Fixed the Zip Slip vulnerability in JlCompress\n+\n * 0.7.5\n         * Fixed target_link_libraries call in CMakeLists\n         * Worked around a Qt 4.6 bug (QTBUG-15421) screwing up hidden"
        },
        {
          "filename": "quazip/JlCompress.cpp",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -364,15 +364,19 @@ QStringList JlCompress::extractDir(QuaZip &zip, const QString &dir)\n     if(!zip.open(QuaZip::mdUnzip)) {\n         return QStringList();\n     }\n-\n-    QDir directory(dir);\n+    QString cleanDir = QDir::cleanPath(dir);\n+    QDir directory(cleanDir);\n+    QString absCleanDir = directory.absolutePath();\n     QStringList extracted;\n     if (!zip.goToFirstFile()) {\n         return QStringList();\n     }\n     do {\n         QString name = zip.getCurrentFileName();\n         QString absFilePath = directory.absoluteFilePath(name);\n+        QString absCleanPath = QDir::cleanPath(absFilePath);\n+        if (!absCleanPath.startsWith(absCleanDir + \"/\"))\n+            continue;\n         if (!extractFile(&zip, \"\", absFilePath)) {\n             removeFile(extracted);\n             return QStringList();"
        },
        {
          "filename": "qztest/testjlcompress.cpp",
          "status": "modified",
          "additions": 21,
          "deletions": 12,
          "patch": "@@ -302,17 +302,25 @@ void TestJlCompress::extractDir_data()\n {\n     QTest::addColumn<QString>(\"zipName\");\n     QTest::addColumn<QStringList>(\"fileNames\");\n-    QTest::newRow(\"simple\") << \"jlextdir.zip\" << (\n-            QStringList() << \"test0.txt\" << \"testdir1/test1.txt\"\n+    QTest::addColumn<QStringList>(\"expectedExtracted\");\n+    QTest::newRow(\"simple\") << \"jlextdir.zip\"\n+        << (QStringList() << \"test0.txt\" << \"testdir1/test1.txt\"\n+            << \"testdir2/test2.txt\" << \"testdir2/subdir/test2sub.txt\")\n+        << (QStringList() << \"test0.txt\" << \"testdir1/test1.txt\"\n             << \"testdir2/test2.txt\" << \"testdir2/subdir/test2sub.txt\");\n-    QTest::newRow(\"separate dir\") << \"sepdir.zip\" << (\n-            QStringList() << \"laj/\" << \"laj/lajfile.txt\");\n+    QTest::newRow(\"separate dir\") << \"sepdir.zip\"\n+        << (QStringList() << \"laj/\" << \"laj/lajfile.txt\")\n+        << (QStringList() << \"laj/\" << \"laj/lajfile.txt\");\n+    QTest::newRow(\"Zip Slip\") << \"zipslip.zip\"\n+        << (QStringList() << \"test0.txt\" << \"../zipslip.txt\")\n+        << (QStringList() << \"test0.txt\");\n }\n \n void TestJlCompress::extractDir()\n {\n     QFETCH(QString, zipName);\n     QFETCH(QStringList, fileNames);\n+    QFETCH(QStringList, expectedExtracted);\n     QDir curDir;\n     if (!curDir.mkpath(\"jlext/jldir\")) {\n         QFAIL(\"Couldn't mkpath jlext/jldir\");\n@@ -325,17 +333,18 @@ void TestJlCompress::extractDir()\n     }\n     QStringList extracted;\n     QCOMPARE((extracted = JlCompress::extractDir(zipName, \"jlext/jldir\"))\n-        .count(), fileNames.count());\n-    foreach (QString fileName, fileNames) {\n-        QString fullName = \"jlext/jldir/\" + fileName;\n+        .count(), expectedExtracted.count());\n+    const QString dir = \"jlext/jldir/\";\n+    foreach (QString fileName, expectedExtracted) {\n+        QString fullName = dir + fileName;\n         QFileInfo fileInfo(fullName);\n         QFileInfo extInfo(\"tmp/\" + fileName);\n         if (!fileInfo.isDir())\n             QCOMPARE(fileInfo.size(), extInfo.size());\n         QCOMPARE(fileInfo.permissions(), extInfo.permissions());\n         curDir.remove(fullName);\n         curDir.rmpath(fileInfo.dir().path());\n-        QString absolutePath = fileInfo.absoluteFilePath();\n+        QString absolutePath = QDir(dir).absoluteFilePath(fileName);\n         if (fileInfo.isDir() && !absolutePath.endsWith('/'))\n \t    absolutePath += '/';\n         QVERIFY(extracted.contains(absolutePath));\n@@ -344,17 +353,17 @@ void TestJlCompress::extractDir()\n     QFile zipFile(zipName);\n     QVERIFY(zipFile.open(QIODevice::ReadOnly));\n     QCOMPARE((extracted = JlCompress::extractDir(&zipFile, \"jlext/jldir\"))\n-        .count(), fileNames.count());\n-    foreach (QString fileName, fileNames) {\n-        QString fullName = \"jlext/jldir/\" + fileName;\n+        .count(), expectedExtracted.count());\n+    foreach (QString fileName, expectedExtracted) {\n+        QString fullName = dir + fileName;\n         QFileInfo fileInfo(fullName);\n         QFileInfo extInfo(\"tmp/\" + fileName);\n         if (!fileInfo.isDir())\n             QCOMPARE(fileInfo.size(), extInfo.size());\n         QCOMPARE(fileInfo.permissions(), extInfo.permissions());\n         curDir.remove(fullName);\n         curDir.rmpath(fileInfo.dir().path());\n-        QString absolutePath = fileInfo.absoluteFilePath();\n+        QString absolutePath = QDir(dir).absoluteFilePath(fileName);\n         if (fileInfo.isDir() && !absolutePath.endsWith('/'))\n         absolutePath += '/';\n         QVERIFY(extracted.contains(absolutePath));"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8aeb3f7d8254f4bf1f7c6cf2a8f59c2ca141a552",
            "date": "2024-10-24T18:28:14Z",
            "author_login": "pradlol"
          },
          {
            "sha": "9ed79a19dca3fbe28dd7f43ca6a3769bc8fc901c",
            "date": "2024-10-05T17:24:10Z",
            "author_login": "cen1"
          },
          {
            "sha": "aab2f0be9d50167192c482eb022d1c2f0dbf5b95",
            "date": "2024-10-05T17:17:10Z",
            "author_login": "cen1"
          },
          {
            "sha": "89bef114b83c9ac38aad65e08f3f50fabd3bbd3d",
            "date": "2024-10-05T10:27:26Z",
            "author_login": "cen1"
          },
          {
            "sha": "c3e87805fdb7caca9c05f58367749c8aa9b31de7",
            "date": "2024-10-02T08:08:07Z",
            "author_login": "cen1"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-22",
    "description": "QuaZIP before 0.7.6 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-07-25T17:29:02.283",
    "last_modified": "2024-11-21T03:40:40.540",
    "fix_date": "2018-06-12T18:32:45Z"
  },
  "references": [
    {
      "url": "https://github.com/snyk/zip-slip-vulnerability",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/stachenov/quazip/blob/0.7.6/NEWS.txt",
      "source": "report@snyk.io",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/stachenov/quazip/commit/5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://snyk.io/research/zip-slip-vulnerability",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/snyk/zip-slip-vulnerability",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/stachenov/quazip/blob/0.7.6/NEWS.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/stachenov/quazip/commit/5d2fc16a1976e5bf78d2927b012f67a2ae047a98",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://snyk.io/research/zip-slip-vulnerability",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:32.415462",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "quazip",
    "owner": "stachenov",
    "created_at": "2018-03-18T18:28:00Z",
    "updated_at": "2025-01-13T04:32:54Z",
    "pushed_at": "2024-10-24T18:28:14Z",
    "size": 1596,
    "stars": 593,
    "forks": 234,
    "open_issues": 27,
    "watchers": 593,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "v0.9.x"
    ],
    "languages": {
      "C++": 336829,
      "C": 208165,
      "CMake": 15550,
      "Python": 367
    },
    "commit_activity": {
      "total_commits_last_year": 21,
      "avg_commits_per_week": 0.40384615384615385,
      "days_active_last_year": 10
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:05.886267"
  }
}