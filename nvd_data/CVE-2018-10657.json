{
  "cve_id": "CVE-2018-10657",
  "github_data": {
    "repository": "matrix-org/synapse",
    "fix_commit": "33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
    "related_commits": [
      "33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
      "33f469ba19586bbafa0cf2c7d7c35463bdab87eb"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
      "commit_date": "2018-05-01T15:19:39Z",
      "author": {
        "login": "richvdh",
        "type": "User",
        "stats": {
          "total_commits": 3503,
          "average_weekly_commits": 6.404021937842779,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 303
        }
      },
      "commit_message": {
        "title": "Apply some limits to depth to counter abuse",
        "length": 248,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 30,
        "additions": 26,
        "deletions": 4
      },
      "files": [
        {
          "filename": "synapse/api/constants.py",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -16,6 +16,9 @@\n \n \"\"\"Contains constants from the specification.\"\"\"\n \n+# the \"depth\" field on events is limited to 2**63 - 1\n+MAX_DEPTH = 2**63 - 1\n+\n \n class Membership(object):\n "
        },
        {
          "filename": "synapse/federation/federation_base.py",
          "status": "modified",
          "additions": 18,
          "deletions": 3,
          "patch": "@@ -14,7 +14,10 @@\n # limitations under the License.\n import logging\n \n-from synapse.api.errors import SynapseError\n+import six\n+\n+from synapse.api.constants import MAX_DEPTH\n+from synapse.api.errors import SynapseError, Codes\n from synapse.crypto.event_signing import check_event_content_hash\n from synapse.events import FrozenEvent\n from synapse.events.utils import prune_event\n@@ -190,11 +193,23 @@ def event_from_pdu_json(pdu_json, outlier=False):\n         FrozenEvent\n \n     Raises:\n-        SynapseError: if the pdu is missing required fields\n+        SynapseError: if the pdu is missing required fields or is otherwise\n+            not a valid matrix event\n     \"\"\"\n     # we could probably enforce a bunch of other fields here (room_id, sender,\n     # origin, etc etc)\n-    assert_params_in_request(pdu_json, ('event_id', 'type'))\n+    assert_params_in_request(pdu_json, ('event_id', 'type', 'depth'))\n+\n+    depth = pdu_json['depth']\n+    if not isinstance(depth, six.integer_types):\n+        raise SynapseError(400, \"Depth %r not an intger\" % (depth, ),\n+                           Codes.BAD_JSON)\n+\n+    if depth < 0:\n+        raise SynapseError(400, \"Depth too small\", Codes.BAD_JSON)\n+    elif depth > MAX_DEPTH:\n+        raise SynapseError(400, \"Depth too large\", Codes.BAD_JSON)\n+\n     event = FrozenEvent(\n         pdu_json\n     )"
        },
        {
          "filename": "synapse/handlers/message.py",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -16,7 +16,7 @@\n from twisted.internet import defer, reactor\n from twisted.python.failure import Failure\n \n-from synapse.api.constants import EventTypes, Membership\n+from synapse.api.constants import EventTypes, Membership, MAX_DEPTH\n from synapse.api.errors import AuthError, Codes, SynapseError\n from synapse.crypto.event_signing import add_hashes_and_signatures\n from synapse.events.utils import serialize_event\n@@ -624,6 +624,10 @@ def create_new_client_event(self, builder, requester=None,\n \n         if prev_events_and_hashes:\n             depth = max([d for _, _, d in prev_events_and_hashes]) + 1\n+            # we cap depth of generated events, to ensure that they are not\n+            # rejected by other servers (and so that they can be persisted in\n+            # the db)\n+            depth = min(depth, MAX_DEPTH)\n         else:\n             depth = 1\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be65a8ec0195955c15fdb179c9158b187638e39a",
            "date": "2023-12-13T14:50:56Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "66fc265578f4501307edcac2514892ecdf791fc9",
            "date": "2023-12-13T14:47:34Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "025951bc3b6ddc0a6487ac045cc00a35a9d7eaaa",
            "date": "2023-12-13T14:46:11Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "70c020b532821f898aaa07c35c5d5ab59055ae1c",
            "date": "2023-12-12T20:32:48Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "e1f8440c8959719a417fbf1bdda11406cfdf523d",
            "date": "2023-11-21T19:26:47Z",
            "author_login": "clokep"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "Matrix Synapse before 0.28.1 is prone to a denial of service flaw where malicious events injected with depth = 2^63 - 1 render rooms unusable, related to federation/federation_base.py and handlers/message.py, as exploited in the wild in April 2018.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-05-02T16:29:00.233",
    "last_modified": "2024-11-21T03:41:44.710",
    "fix_date": "2018-05-01T15:19:39Z"
  },
  "references": [
    {
      "url": "https://github.com/matrix-org/synapse/commit/33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://matrix.org/blog/2018/05/01/security-update-synapse-0-28-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/commit/33f469ba19586bbafa0cf2c7d7c35463bdab87eb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://matrix.org/blog/2018/05/01/security-update-synapse-0-28-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.826176",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "synapse",
    "owner": "matrix-org",
    "created_at": "2014-08-11T15:51:42Z",
    "updated_at": "2025-01-25T11:19:08Z",
    "pushed_at": "2024-04-26T15:47:23Z",
    "size": 429495,
    "stars": 11852,
    "forks": 2122,
    "open_issues": 1529,
    "watchers": 11852,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Python": 11907179,
      "Rust": 95720,
      "HTML": 64571,
      "Shell": 59187,
      "Perl": 28191,
      "Nix": 12267,
      "Dockerfile": 12096,
      "JavaScript": 11988,
      "Jinja": 7942,
      "CSS": 6211,
      "Makefile": 634,
      "Gherkin": 308,
      "Lua": 241
    },
    "commit_activity": {
      "total_commits_last_year": 1,
      "avg_commits_per_week": 0.019230769230769232,
      "days_active_last_year": 1
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:39:36.627913"
  }
}