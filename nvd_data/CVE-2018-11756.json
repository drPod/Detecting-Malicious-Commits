{
  "cve_id": "CVE-2018-11756",
  "github_data": {
    "repository": "apache/incubator-openwhisk-runtime-php",
    "fix_commit": "6caf902f527250ee4b7b695929b628d560e0dad1",
    "related_commits": [
      "6caf902f527250ee4b7b695929b628d560e0dad1",
      "6caf902f527250ee4b7b695929b628d560e0dad1"
    ],
    "patch_url": "https://github.com/apache/incubator-openwhisk-runtime-php/commit/6caf902f527250ee4b7b695929b628d560e0dad1.patch",
    "fix_commit_details": {
      "sha": "6caf902f527250ee4b7b695929b628d560e0dad1",
      "commit_date": "2018-07-08T01:20:35Z",
      "author": {
        "login": "rabbah",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update tests to pick up upstream changes.",
        "length": 41,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 174,
        "additions": 87,
        "deletions": 87
      },
      "files": [
        {
          "filename": "core/php7.1Action/CHANGELOG.md",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -17,6 +17,10 @@\n #\n -->\n \n+## 1.0.2\n+Changes:\n+  - Disallow re-initialization of function.\n+\n ## 1.0.1\n \n - Change: Update PHP to 7.1.18"
        },
        {
          "filename": "core/php7.1Action/router.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -108,7 +108,7 @@ function init() : array\n     $binary = $data['binary'] ?? false;  // code is binary?\n \n     if (!$code) {\n-        throw new RuntimeException(\"No code to execute\");\n+        throw new RuntimeException(\"Missing main/no code to execute.\");\n     }\n \n     if ($binary) {"
        },
        {
          "filename": "core/php7.2Action/CHANGELOG.md",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -17,6 +17,10 @@\n #\n -->\n \n+## 1.0.1\n+Changes:\n+  - Disallow re-initialization of function.\n+\n ## 1.0.0\n Initial release\n "
        },
        {
          "filename": "core/php7.2Action/router.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -139,7 +139,7 @@ function init() : array\n     $binary = $data['binary'] ?? false;  // code is binary?\n \n     if (!$code) {\n-        throw new RuntimeException(\"No code to execute\");\n+        throw new RuntimeException(\"Missing main/no code to execute.\");\n     }\n \n     if ($binary) {"
        },
        {
          "filename": "tests/.pydevproject",
          "status": "removed",
          "additions": 0,
          "deletions": 5,
          "patch": "@@ -1,5 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<?eclipse-pydev version=\"1.0\"?><pydev_project>\n-<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_INTERPRETER\">Default</pydev_property>\n-<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_VERSION\">python 2.7</pydev_property>\n-</pydev_project>"
        },
        {
          "filename": "tests/src/test/scala/runtime/actionContainers/Php7ActionContainerTests.scala",
          "status": "modified",
          "additions": 77,
          "deletions": 80,
          "patch": "@@ -27,11 +27,10 @@ import spray.json._\n \n @RunWith(classOf[JUnitRunner])\n abstract class Php7ActionContainerTests extends BasicActionRunnerTests with WskActorSystem {\n-  // note: \"out\" will not be empty as the PHP web server outputs a message when\n-  // it starts up\n+  // note: \"out\" will not be empty as the PHP web server outputs a message when it starts up\n   val enforceEmptyOutputStream = false\n \n-  lazy val phpContainerImageName = \"action-php-v7.x\"\n+  lazy val phpContainerImageName: String = ???\n \n   override def withActionContainer(env: Map[String, String] = Map.empty)(code: ActionContainer => Unit) = {\n     withContainer(phpContainerImageName, env)(code)\n@@ -41,68 +40,94 @@ abstract class Php7ActionContainerTests extends BasicActionRunnerTests with WskA\n \n   behavior of phpContainerImageName\n \n-  testEcho(Seq {\n-    (\n-      \"PHP\",\n+  override val testNoSourceOrExec = TestConfig(\"\")\n+\n+  override val testNotReturningJson = {\n+    TestConfig(\n+      \"\"\"\n+       |<?php\n+       |function main(array $args) {\n+       |    return \"not a json object\";\n+       |}\n+     \"\"\".stripMargin,\n+      enforceEmptyOutputStream = enforceEmptyOutputStream,\n+      enforceEmptyErrorStream = false)\n+  }\n+\n+  override val testInitCannotBeCalledMoreThanOnce = {\n+    TestConfig(\n       \"\"\"\n-          |<?php\n-          |function main(array $args) : array {\n-          |    echo 'hello stdout';\n-          |    error_log('hello stderr');\n-          |    return $args;\n-          |}\n-          \"\"\".stripMargin)\n-  })\n-\n-  testNotReturningJson(\"\"\"\n         |<?php\n-        |function main(array $args) {\n-        |    return \"not a json object\";\n+        |function main(array $args) : array {\n+        |    return $args;\n         |}\n-        \"\"\".stripMargin)\n+      \"\"\".stripMargin,\n+      enforceEmptyOutputStream = enforceEmptyOutputStream)\n+  }\n \n-  testUnicode(Seq {\n-    (\n-      \"PHP\",\n+  override val testEntryPointOtherThanMain = {\n+    TestConfig(\n       \"\"\"\n+        | <?php\n+        | function niam(array $args) {\n+        |     return $args;\n+        | }\n+      \"\"\".stripMargin,\n+      main = \"niam\",\n+      enforceEmptyOutputStream = enforceEmptyOutputStream)\n+  }\n+\n+  override val testEcho = {\n+    TestConfig(\"\"\"\n+                 |<?php\n+                 |function main(array $args) : array {\n+                 |    echo 'hello stdout';\n+                 |    error_log('hello stderr');\n+                 |    return $args;\n+                 |}\n+               \"\"\".stripMargin)\n+  }\n+\n+  override val testUnicode = {\n+    TestConfig(\"\"\"\n          |<?php\n          |function main(array $args) : array {\n          |    $str = $args['delimiter'] . \" \u2603 \" . $args['delimiter'];\n          |    echo $str . \"\\n\";\n          |    return  [\"winter\" => $str];\n          |}\n          \"\"\".stripMargin.trim)\n-  })\n+  }\n \n-  testEnv(\n-    Seq {\n-      (\n-        \"PHP\",\n-        \"\"\"\n-         |<?php\n-         |function main(array $args) : array {\n-         |    return [\n-         |       \"env\" => $_ENV,\n-         |       \"api_host\" => $_ENV['__OW_API_HOST'],\n-         |       \"api_key\" => $_ENV['__OW_API_KEY'],\n-         |       \"namespace\" => $_ENV['__OW_NAMESPACE'],\n-         |       \"action_name\" => $_ENV['__OW_ACTION_NAME'],\n-         |       \"activation_id\" => $_ENV['__OW_ACTIVATION_ID'],\n-         |       \"deadline\" => $_ENV['__OW_DEADLINE'],\n-         |    ];\n-         |}\n-         \"\"\".stripMargin.trim)\n-    },\n-    enforceEmptyOutputStream)\n-\n-  testInitCannotBeCalledMoreThanOnce(\"\"\"\n-          |<?php\n-          |function main(array $args) : array {\n-          |    echo 'hello stdout';\n-          |    error_log('hello stderr');\n-          |    return $args;\n-          |}\n-          \"\"\".stripMargin)\n+  override val testEnv = {\n+    TestConfig(\n+      \"\"\"\n+        |<?php\n+        |function main(array $args) : array {\n+        |    return [\n+        |       \"env\" => $_ENV,\n+        |       \"api_host\" => $_ENV['__OW_API_HOST'],\n+        |       \"api_key\" => $_ENV['__OW_API_KEY'],\n+        |       \"namespace\" => $_ENV['__OW_NAMESPACE'],\n+        |       \"action_name\" => $_ENV['__OW_ACTION_NAME'],\n+        |       \"activation_id\" => $_ENV['__OW_ACTIVATION_ID'],\n+        |       \"deadline\" => $_ENV['__OW_DEADLINE'],\n+        |    ];\n+        |}\n+      \"\"\".stripMargin.trim,\n+      enforceEmptyOutputStream = enforceEmptyOutputStream)\n+  }\n+\n+  override val testLargeInput = {\n+    TestConfig(\"\"\"\n+                 |<?php\n+                 |function main(array $args) : array {\n+                 |    echo 'hello stdout';\n+                 |    error_log('hello stderr');\n+                 |    return $args;\n+                 |}\n+               \"\"\".stripMargin)\n+  }\n \n   it should \"fail to initialize with bad code\" in {\n     val (out, err) = withPhp7Container { c =>\n@@ -127,19 +152,6 @@ abstract class Php7ActionContainerTests extends BasicActionRunnerTests with WskA\n     })\n   }\n \n-  it should \"fail to initialize with no code\" in {\n-    val (out, err) = withPhp7Container { c =>\n-      val code = \"\"\n-\n-      val (initCode, error) = c.init(initPayload(code))\n-\n-      initCode should not be (200)\n-      error shouldBe a[Some[_]]\n-      error.get shouldBe a[JsObject]\n-      error.get.fields(\"error\").toString should include(\"No code to execute\")\n-    }\n-  }\n-\n   it should \"return some error on action error\" in {\n     val (out, err) = withPhp7Container { c =>\n       val code = \"\"\"\n@@ -467,21 +479,6 @@ abstract class Php7ActionContainerTests extends BasicActionRunnerTests with WskA\n     })\n   }\n \n-  it should \"support actions using non-default entry point\" in {\n-    val (out, err) = withPhp7Container { c =>\n-      val code = \"\"\"\n-            | <?php\n-            | function niam(array $args) {\n-            |     return [result => \"it works\"];\n-            | }\n-            \"\"\".stripMargin\n-\n-      c.init(initPayload(code, main = \"niam\"))._1 should be(200)\n-      val (runCode, runRes) = c.run(runPayload(JsObject()))\n-      runRes.get.fields.get(\"result\") shouldBe Some(JsString(\"it works\"))\n-    }\n-  }\n-\n   it should \"support zipped actions using non-default entry point\" in {\n     val srcs = Seq(Seq(\"index.php\") -> \"\"\"\n                 | <?php"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0e9b299633ed82d9ff70303c974efc74be2b5f16",
            "date": "2024-09-24T14:25:57Z",
            "author_login": "jbampton"
          },
          {
            "sha": "ca8a68313f466ed5f797594fda477b1437fcac8f",
            "date": "2024-09-17T01:39:37Z",
            "author_login": "dgrove-oss"
          },
          {
            "sha": "9f95e4bba4540fc7f99b7a82e66c01ff98e94c04",
            "date": "2024-09-13T04:33:37Z",
            "author_login": "dgrove-oss"
          },
          {
            "sha": "cdf8ed2fb6bd74cc19e47454004631a5adf5a6ef",
            "date": "2024-09-06T07:19:30Z",
            "author_login": "dgrove-oss"
          },
          {
            "sha": "0817bf53ef1c6fb17c0e93eb1dec6d8e0e4977e3",
            "date": "2024-02-19T14:22:33Z",
            "author_login": "dgrove-oss"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": null,
    "description": "In PHP Runtime for Apache OpenWhisk, a Docker action inheriting one of the Docker tags openwhisk/action-php-v7.2:1.0.0 or openwhisk/action-php-v7.1:1.0.1 (or earlier) may allow an attacker to replace the user function inside the container if the user code is vulnerable to code exploitation.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-07-23T17:29:00.243",
    "last_modified": "2024-11-21T03:43:57.927",
    "fix_date": "2018-07-08T01:20:35Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/104915",
      "source": "security@apache.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/apache/incubator-openwhisk-runtime-php/commit/6caf902f527250ee4b7b695929b628d560e0dad1",
      "source": "security@apache.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/439bd5ff5822708c645a0d816ed9914b88c97eda32eae6ea211bc0dc%40%3Cdev.openwhisk.apache.org%3E",
      "source": "security@apache.org",
      "tags": []
    },
    {
      "url": "https://www.puresec.io/hubfs/Apache%20OpenWhisk%20PureSec%20Security%20Advisory.pdf",
      "source": "nvd@nist.gov",
      "tags": [
        "Mitigation",
        "Technical Description",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/104915",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/apache/incubator-openwhisk-runtime-php/commit/6caf902f527250ee4b7b695929b628d560e0dad1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/439bd5ff5822708c645a0d816ed9914b88c97eda32eae6ea211bc0dc%40%3Cdev.openwhisk.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:32.411324",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openwhisk-runtime-php",
    "owner": "apache",
    "created_at": "2017-09-29T20:44:34Z",
    "updated_at": "2024-09-24T14:26:05Z",
    "pushed_at": "2024-09-24T14:25:58Z",
    "size": 3234,
    "stars": 39,
    "forks": 33,
    "open_issues": 2,
    "watchers": 39,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Scala": 19287,
      "PHP": 16572,
      "Dockerfile": 11501
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T18:53:38.285203"
  }
}