{
  "cve_id": "CVE-2018-12043",
  "github_data": {
    "repository": "symphonycms/symphony-2",
    "fix_commit": "1ace6b31867cc83267b3550686271c9c65ac3ec0",
    "related_commits": [
      "1ace6b31867cc83267b3550686271c9c65ac3ec0",
      "1ace6b31867cc83267b3550686271c9c65ac3ec0"
    ],
    "patch_url": "https://github.com/symphonycms/symphony-2/commit/1ace6b31867cc83267b3550686271c9c65ac3ec0.patch",
    "fix_commit_details": {
      "sha": "1ace6b31867cc83267b3550686271c9c65ac3ec0",
      "commit_date": "2018-06-06T14:21:03Z",
      "author": {
        "login": "nitriques",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix possible self-XSS in the pages content page",
        "length": 87,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 81,
        "additions": 54,
        "deletions": 27
      },
      "files": [
        {
          "filename": "symphony/content/content.blueprintspages.php",
          "status": "modified",
          "additions": 54,
          "deletions": 27,
          "patch": "@@ -30,22 +30,22 @@ public function insertBreadcrumbsUsingPageIdentifier($page_id, $preserve_last =\n             // to the parent's Page Editor.\n             if ($this->_context[0] == 'edit') {\n                 $page = Widget::Anchor(\n-                    PageManager::fetchTitleFromHandle($page),\n+                    General::sanitize(PageManager::fetchTitleFromHandle($page)),\n                     SYMPHONY_URL . '/blueprints/pages/edit/' . PageManager::fetchIDFromHandle($page) . '/'\n                 );\n \n                 // If the pages index is nested, the Breadcrumb should link to the\n                 // Pages Index filtered by parent\n             } elseif (Symphony::Configuration()->get('pages_table_nest_children', 'symphony') == 'yes') {\n                 $page = Widget::Anchor(\n-                    PageManager::fetchTitleFromHandle($page),\n+                    General::sanitize(PageManager::fetchTitleFromHandle($page)),\n                     SYMPHONY_URL . '/blueprints/pages/?parent=' . PageManager::fetchIDFromHandle($page)\n                 );\n \n                 // If there is no nesting on the Pages Index, the breadcrumb is\n                 // not a link, just plain text\n             } else {\n-                $page = new XMLElement('span', PageManager::fetchTitleFromHandle($page));\n+                $page = new XMLElement('span', General::sanitize(PageManager::fetchTitleFromHandle($page)));\n             }\n         }\n \n@@ -70,10 +70,19 @@ public function __viewIndex()\n             $parent = PageManager::fetchPageByID((int)$_GET['parent'], array('title', 'id'));\n         }\n \n-        $this->appendSubheading(isset($parent) ? $parent['title'] : __('Pages'), Widget::Anchor(\n-            __('Create New'), Administration::instance()->getCurrentPageURL() . 'new/' . ($nesting && isset($parent) ? \"?parent={$parent['id']}\" : null),\n-            __('Create a new page'), 'create button', null, array('accesskey' => 'c')\n-        ));\n+        $this->appendSubheading(\n+            isset($parent)\n+                ? General::sanitize($parent['title'])\n+                : __('Pages'),\n+            Widget::Anchor(\n+                __('Create New'),\n+                Administration::instance()->getCurrentPageURL() . 'new/' . ($nesting && isset($parent) ? \"?parent={$parent['id']}\" : null),\n+                __('Create a new page'),\n+                'create button',\n+                null,\n+                ['accesskey' => 'c']\n+            )\n+        );\n \n         if (isset($parent)) {\n             $this->insertBreadcrumbsUsingPageIdentifier($parent['id'], false);\n@@ -112,10 +121,18 @@ public function __viewIndex()\n                 $page_edit_url = Administration::instance()->getCurrentPageURL() . 'edit/' . $page['id'] . '/';\n                 $page_template = PageManager::createFilePath($page['path'], $page['handle']);\n \n-                $col_title = Widget::TableData(Widget::Anchor($page_title, $page_edit_url, $page['handle']));\n-                $col_title->appendChild(Widget::Label(__('Select Page %s', array($page_title)), null, 'accessible', null, array(\n-                    'for' => 'page-' . $page['id']\n-                )));\n+                $col_title = Widget::TableData(\n+                    Widget::Anchor(General::sanitize($page_title), $page_edit_url, $page['handle'])\n+                );\n+                $col_title->appendChild(\n+                    Widget::Label(\n+                        __('Select Page %s', [General::sanitize($page_title)]),\n+                        null,\n+                        'accessible',\n+                        null,\n+                        ['for' => 'page-' . $page['id']]\n+                    )\n+                );\n                 $col_title->appendChild(Widget::Input('items['.$page['id'].']', 'on', 'checkbox', array(\n                     'id' => 'page-' . $page['id']\n                 )));\n@@ -125,13 +142,13 @@ public function __viewIndex()\n                 $col_url = Widget::TableData(Widget::Anchor($page_url, $page_url));\n \n                 if ($page['params']) {\n-                    $col_params = Widget::TableData(trim($page['params'], '/'));\n+                    $col_params = Widget::TableData(trim(General::sanitize($page['params']), '/'));\n                 } else {\n                     $col_params = Widget::TableData(__('None'), 'inactive');\n                 }\n \n                 if (!empty($page['type'])) {\n-                    $col_types = Widget::TableData(implode(', ', $page['type']));\n+                    $col_types = Widget::TableData(implode(', ', array_map(['General', 'sanitize'], $page['type'])));\n                 } else {\n                     $col_types = Widget::TableData(__('None'), 'inactive');\n                 }\n@@ -294,14 +311,14 @@ public function __viewEdit()\n             $title = $existing['title'];\n         }\n \n-        $this->setTitle(__(\n-            ($title ? '%1$s &ndash; %2$s &ndash; %3$s' : '%2$s &ndash; %3$s'),\n-            array(\n-                $title,\n-                __('Pages'),\n-                __('Symphony')\n+        $this->setTitle(\n+            __(\n+                $title\n+                    ? '%1$s &ndash; %2$s &ndash; %3$s'\n+                    : '%2$s &ndash; %3$s',\n+                [General::sanitize($title), __('Pages'), __('Symphony')]\n             )\n-        ));\n+        );\n         $this->addElementToHead(new XMLElement('link', null, array(\n             'rel' => 'canonical',\n             'href' => SYMPHONY_URL . $canonical_link,\n@@ -312,11 +329,19 @@ public function __viewEdit()\n         if (!empty($title)) {\n             $page_url = URL . '/' . PageManager::resolvePagePath($page_id) . '/';\n \n-            $this->appendSubheading($title, array(\n-                Widget::Anchor(__('View Page'), $page_url, __('View Page on Frontend'), 'button', null, array('target' => '_blank', 'accesskey' => 'v'))\n-            ));\n+            $this->appendSubheading(\n+                General::sanitize($title),\n+                Widget::Anchor(\n+                    __('View Page'),\n+                    $page_url,\n+                    __('View Page on Frontend'),\n+                    'button',\n+                    null,\n+                    ['target' => '_blank', 'accesskey' => 'v']\n+                )\n+            );\n         } else {\n-            $this->appendSubheading(!empty($title) ? $title : __('Untitled'));\n+            $this->appendSubheading(!empty($title) ? General::sanitize($title) : __('Untitled'));\n         }\n \n         if (isset($page_id)) {\n@@ -420,7 +445,7 @@ public function __viewEdit()\n         $types = PageManager::fetchAvailablePageTypes();\n \n         foreach ($types as $type) {\n-            $tags->appendChild(new XMLElement('li', $type));\n+            $tags->appendChild(new XMLElement('li', General::sanitize($type)));\n         }\n \n         $column->appendChild($tags);\n@@ -509,8 +534,10 @@ public function __viewEdit()\n         $div = new XMLElement('div');\n         $div->setAttribute('class', 'actions');\n         $div->appendChild(Widget::Input(\n-            'action[save]', ($this->_context[0] == 'edit' ? __('Save Changes') : __('Create Page')),\n-            'submit', array('accesskey' => 's')\n+            'action[save]',\n+            ($this->_context[0] == 'edit' ? __('Save Changes') : __('Create Page')),\n+            'submit',\n+            ['accesskey' => 's']\n         ));\n \n         if ($this->_context[0] == 'edit') {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ea690f74cbc5b325014e45fb44b7ad5501b7da5e",
            "date": "2020-03-27T16:13:27Z",
            "author_login": "nitriques"
          },
          {
            "sha": "e8af4536c5e5fc26e162e82fd8b3e8a548801a4b",
            "date": "2020-03-27T01:51:38Z",
            "author_login": "nitriques"
          },
          {
            "sha": "cb323149ab3bbe46e03623a0076822a08c02ebb3",
            "date": "2020-03-27T01:50:56Z",
            "author_login": "nitriques"
          },
          {
            "sha": "659b41319737f5b805042e1195fda4f043e05f52",
            "date": "2020-03-25T20:07:35Z",
            "author_login": "nitriques"
          },
          {
            "sha": "f97f57c36937a2c5fc8c8d6efe0a5743933cded7",
            "date": "2020-03-25T19:59:25Z",
            "author_login": "nitriques"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "content/content.blueprintspages.php in Symphony 2.7.6 has XSS via the pages content page.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-06-07T20:29:00.323",
    "last_modified": "2024-11-21T03:44:28.973",
    "fix_date": "2018-06-06T14:21:03Z"
  },
  "references": [
    {
      "url": "https://github.com/symphonycms/symphony-2/commit/1ace6b31867cc83267b3550686271c9c65ac3ec0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symphonycms/symphony-2/commit/1ace6b31867cc83267b3550686271c9c65ac3ec0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.918655",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symphonycms",
    "owner": "symphonycms",
    "created_at": "2010-07-17T11:14:07Z",
    "updated_at": "2025-01-02T01:15:23Z",
    "pushed_at": "2022-12-06T17:22:34Z",
    "size": 18126,
    "stars": 544,
    "forks": 210,
    "open_issues": 100,
    "watchers": 544,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.2.x",
      "2.5.x",
      "2.6.x",
      "2.7.x",
      "2.7.0-bundle",
      "2.7.1-bundle",
      "2.7.2-bundle",
      "2.7.3-bundle",
      "2.7.4-bundle",
      "2.7.5-bundle",
      "2.7.6-bundle",
      "2.7.7-bundle",
      "2.7.8-bundle",
      "2.7.9-bundle",
      "2.7.10-bundle",
      "3.0.x",
      "gh-pages",
      "integration"
    ],
    "languages": {
      "PHP": 2302939,
      "JavaScript": 186262,
      "CSS": 61928,
      "TSQL": 12767,
      "Smarty": 6043,
      "Shell": 2590,
      "XSLT": 628
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:33:40.285840"
  }
}