{
  "cve_id": "CVE-2018-13006",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "bceb03fd2be95097a7b409ea59914f332fb6bc86",
    "related_commits": [
      "bceb03fd2be95097a7b409ea59914f332fb6bc86",
      "bceb03fd2be95097a7b409ea59914f332fb6bc86"
    ],
    "patch_url": "https://github.com/gpac/gpac/commit/bceb03fd2be95097a7b409ea59914f332fb6bc86.patch",
    "fix_commit_details": {
      "sha": "bceb03fd2be95097a7b409ea59914f332fb6bc86",
      "commit_date": "2018-06-28T11:34:08Z",
      "author": {
        "login": "aureliendavid",
        "type": "User",
        "stats": {
          "total_commits": 799,
          "average_weekly_commits": 0.7841020608439647,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 213
        }
      },
      "commit_message": {
        "title": "fixed 2 possible heap overflows (inc. #1088)",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 9,
        "deletions": 9
      },
      "files": [
        {
          "filename": "include/gpac/internal/isomedia_dev.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -3710,7 +3710,7 @@ GF_GenericSubtitleSample *gf_isom_parse_generic_subtitle_sample_from_data(char *\n \t\tchar __ptype[5];\\\n \t\tstrcpy(__ptype, gf_4cc_to_str(__parent->type) );\\\n \t\tGF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] extra box %s found in %s, deleting\\n\", gf_4cc_to_str(__abox->type), __ptype)); \\\n-\t\tgf_isom_box_del(a);\\\n+\t\tgf_isom_box_del(__abox);\\\n \t\treturn GF_OK;\\\n \t}\n "
        },
        {
          "filename": "src/isomedia/box_code_base.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -632,7 +632,7 @@ GF_Err urn_Read(GF_Box *s, GF_BitStream *bs)\n \n \t//then get the break\n \ti = 0;\n-\twhile ( (tmpName[i] != 0) && (i < to_read) ) {\n+\twhile ( (i < to_read) && (tmpName[i] != 0) ) {\n \t\ti++;\n \t}\n \t//check the data is consistent"
        },
        {
          "filename": "src/isomedia/box_dump.c",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -484,7 +484,7 @@ GF_Err hdlr_dump(GF_Box *a, FILE * trace)\n {\n \tGF_HandlerBox *p = (GF_HandlerBox *)a;\n \tgf_isom_box_dump_start(a, \"HandlerBox\", trace);\n-\tif (p->nameUTF8 && (u32) p->nameUTF8[0] == strlen(p->nameUTF8+1)) {\n+\tif (p->nameUTF8 && (u32) p->nameUTF8[0] == strlen(p->nameUTF8)-1) {\n \t\tfprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8+1);\n \t} else {\n \t\tfprintf(trace, \"hdlrType=\\\"%s\\\" Name=\\\"%s\\\" \", gf_4cc_to_str(p->handlerType), p->nameUTF8);\n@@ -4157,9 +4157,9 @@ static void oinf_entry_dump(GF_OperatingPointsInformation *ptr, FILE * trace)\n \t\tfprintf(trace, \" maxPicWidth=\\\"%u\\\" maxPicHeight=\\\"%u\\\"\", op->maxPicWidth, op->maxPicHeight);\n \t\tfprintf(trace, \" maxChromaFormat=\\\"%u\\\" maxBitDepth=\\\"%u\\\"\", op->maxChromaFormat, op->maxBitDepth);\n \t\tfprintf(trace, \" frame_rate_info_flag=\\\"%u\\\" bit_rate_info_flag=\\\"%u\\\"\", op->frame_rate_info_flag, op->bit_rate_info_flag);\n-\t\tif (op->frame_rate_info_flag) \n+\t\tif (op->frame_rate_info_flag)\n \t\t\tfprintf(trace, \" avgFrameRate=\\\"%u\\\" constantFrameRate=\\\"%u\\\"\", op->avgFrameRate, op->constantFrameRate);\n-\t\tif (op->bit_rate_info_flag) \n+\t\tif (op->bit_rate_info_flag)\n \t\t\tfprintf(trace, \" maxBitRate=\\\"%u\\\" avgBitRate=\\\"%u\\\"\", op->maxBitRate, op->avgBitRate);\n \t\tfprintf(trace, \"/>\\n\");\n \t}\n@@ -4261,14 +4261,14 @@ static void nalm_dump(FILE * trace, char *data, u32 data_size)\n \t\tfprintf(trace, \"</NALUMap>\\n\");\n \t\treturn;\n \t}\n-\t\n+\n \tbs = gf_bs_new(data, data_size, GF_BITSTREAM_READ);\n \tgf_bs_read_int(bs, 6);\n \tlarge_size = gf_bs_read_int(bs, 1);\n \trle = gf_bs_read_int(bs, 1);\n \tentry_count = gf_bs_read_int(bs, large_size ? 16 : 8);\n \tfprintf(trace, \"<NALUMap rle=\\\"%d\\\" large_size=\\\"%d\\\">\\n\", rle, large_size);\n-\t\n+\n \twhile (entry_count) {\n \t\tu32 ID;\n \t\tfprintf(trace, \"<NALUMapEntry \");\n@@ -4338,7 +4338,7 @@ GF_Err sgpd_dump(GF_Box *a, FILE * trace)\n \t\tcase GF_ISOM_SAMPLE_GROUP_TRIF:\n \t\t\ttrif_dump(trace, (char *) ((GF_DefaultSampleGroupDescriptionEntry*)entry)->data,  ((GF_DefaultSampleGroupDescriptionEntry*)entry)->length);\n \t\t\tbreak;\n-\t\t\t\n+\n \t\tcase GF_ISOM_SAMPLE_GROUP_NALM:\n \t\t\tnalm_dump(trace, (char *) ((GF_DefaultSampleGroupDescriptionEntry*)entry)->data,  ((GF_DefaultSampleGroupDescriptionEntry*)entry)->length);\n \t\t\tbreak;\n@@ -4507,7 +4507,7 @@ GF_Err tenc_dump(GF_Box *a, FILE * trace)\n \t\tfprintf(trace, \"\\\"  KID=\\\"\");\n \t}\n \tdump_data_hex(trace, (char *) ptr->KID, 16);\n-\tif (ptr->version) \n+\tif (ptr->version)\n \t\tfprintf(trace, \"\\\" crypt_byte_block=\\\"%d\\\" skip_byte_block=\\\"%d\", ptr->crypt_byte_block, ptr->skip_byte_block);\n \tfprintf(trace, \"\\\">\\n\");\n \tgf_isom_box_dump_done(\"TrackEncryptionBox\", a, trace);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e075efa1bd0984e0e87f6752f1e5b991ba3a7cf7",
            "date": "2025-01-14T15:00:34Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "7af1bfcdc25dd74e158437abd13858281ae1bea0",
            "date": "2025-01-14T12:33:00Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "08572e41a7eae3d7e4329bf88a455ba6cb209936",
            "date": "2025-01-14T12:18:43Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5f2c53efbc58ecfb01885c73b9507413efde6c81",
            "date": "2025-01-14T11:46:01Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "f2082beb80c470f4eaf2bb0421b56e8adcde303a",
            "date": "2025-01-14T11:45:02Z",
            "author_login": "aureliendavid"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "An issue was discovered in MP4Box in GPAC 0.7.1. There is a heap-based buffer over-read in the isomedia/box_dump.c function hdlr_dump.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-06-29T14:29:00.433",
    "last_modified": "2024-11-21T03:46:14.260",
    "fix_date": "2018-06-28T11:34:08Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/bceb03fd2be95097a7b409ea59914f332fb6bc86",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2018/07/msg00024.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3926-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/commit/bceb03fd2be95097a7b409ea59914f332fb6bc86",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2018/07/msg00024.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3926-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:28.554915",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-14T12:51:06Z",
    "pushed_at": "2025-01-14T12:51:01Z",
    "size": 148655,
    "stars": 2857,
    "forks": 539,
    "open_issues": 84,
    "watchers": 2857,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29230795,
      "JavaScript": 1164507,
      "C++": 591365,
      "Roff": 570792,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1273,
      "avg_commits_per_week": 24.48076923076923,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:56:58.367536"
  }
}