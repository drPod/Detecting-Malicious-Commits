{
  "cve_id": "CVE-2018-13447",
  "github_data": {
    "repository": "Dolibarr/dolibarr",
    "fix_commit": "36402c22eef49d60edd73a2f312f8e28fe0bd1cb",
    "related_commits": [
      "36402c22eef49d60edd73a2f312f8e28fe0bd1cb",
      "36402c22eef49d60edd73a2f312f8e28fe0bd1cb"
    ],
    "patch_url": "https://github.com/Dolibarr/dolibarr/commit/36402c22eef49d60edd73a2f312f8e28fe0bd1cb.patch",
    "fix_commit_details": {
      "sha": "36402c22eef49d60edd73a2f312f8e28fe0bd1cb",
      "commit_date": "2018-06-25T12:06:09Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "FIX SQL Injections reported by mu shcor (ADLab of Venustech)",
        "length": 60,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 63,
        "additions": 35,
        "deletions": 28
      },
      "files": [
        {
          "filename": "htdocs/core/class/html.form.class.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -1044,7 +1044,7 @@ function select_company($selected='', $htmlname='socid', $filter='', $showempty=\n \t *\n \t *\t@param\tstring\t$selected       Preselected type\n \t *\t@param  string\t$htmlname       Name of field in form\n-\t *  @param  string\t$filter         optional filters criteras (example: 's.rowid <> x', 's.client in (1,3)')\n+\t *  @param  string\t$filter         Optional filters criteras (example: 's.rowid <> x', 's.client in (1,3)')\n \t *\t@param\tstring\t$showempty\t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n \t * \t@param\tint\t\t$showtype\t\tShow third party type in combolist (customer, prospect or supplier)\n \t * \t@param\tint\t\t$forcecombo\t\tForce to use standard HTML select component without beautification\n@@ -1064,6 +1064,9 @@ function select_thirdparty_list($selected='',$htmlname='socid',$filter='',$showe\n \t\t$num=0;\n \t\t$outarray=array();\n \n+\t\t// Clean $filter that may contains sql conditions so sql code\n+\t\tif (function_exists('test_sql_and_script_inject')) $filter = test_sql_and_script_inject($filter, 3);\n+\n \t\t// On recherche les societes\n \t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n \t\t$sql.= \" FROM \".MAIN_DB_PREFIX .\"societe as s\";"
        },
        {
          "filename": "htdocs/main.inc.php",
          "status": "modified",
          "additions": 10,
          "deletions": 6,
          "patch": "@@ -72,24 +72,30 @@ function stripslashes_deep($value)\n  * Security: SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n  *\n  * @param\t\tstring\t\t$val\t\tValue\n- * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n+ * @param\t\tstring\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF, 3=GET without sql reserved keywords (the less tolerant test)\n  * @return\t\tint\t\t\t\t\t\t>0 if there is an injection, 0 if none\n  */\n function test_sql_and_script_inject($val, $type)\n {\n \t$inj = 0;\n \t// For SQL Injection (only GET are used to be included into bad escaped SQL requests)\n-\tif ($type == 1)\n+\tif ($type == 1 || $type == 3)\n \t{\n-\t\t$inj += preg_match('/updatexml\\(/i',\t $val);\n \t\t$inj += preg_match('/delete\\s+from/i',\t $val);\n \t\t$inj += preg_match('/create\\s+table/i',\t $val);\n \t\t$inj += preg_match('/insert\\s+into/i', \t $val);\n \t\t$inj += preg_match('/select\\s+from/i', \t $val);\n \t\t$inj += preg_match('/into\\s+(outfile|dumpfile)/i',  $val);\n+\t\t$inj += preg_match('/user\\s*\\(/i',  $val);\t\t\t\t\t\t// avoid to use function user() that return current database login\n+\t\t$inj += preg_match('/information_schema/i',  $val);\t\t\t\t// avoid to use request that read information_schema database\n \t}\n-\tif ($type != 2)\t// Not common, we can check on POST\n+\tif ($type == 3)\n \t{\n+\t\t$inj += preg_match('/select|update|delete|replace|group\\s+by|concat|count|from/i',\t $val);\n+\t}\n+\tif ($type != 2)\t// Not common key strings, so we can check them both on GET and POST\n+\t{\n+\t\t$inj += preg_match('/updatexml\\(/i', \t $val);\n \t\t$inj += preg_match('/update.+set.+=/i',  $val);\n \t\t$inj += preg_match('/union.+select/i', \t $val);\n \t\t$inj += preg_match('/(\\.\\.%2f)+/i',\t\t $val);\n@@ -1558,8 +1564,6 @@ function top_menu($head, $title='', $target='', $disablejs=0, $disablehead=0, $a\n \t\tprint \"</div>\\n\";\n \t\tprint '</div></div>';\n \n-\t\t//unset($form);\n-\n \t\tprint '<div style=\"clear: both;\"></div>';\n \t\tprint \"<!-- End top horizontal menu -->\\n\\n\";\n \t}"
        },
        {
          "filename": "htdocs/product/card.php",
          "status": "modified",
          "additions": 20,
          "deletions": 20,
          "patch": "@@ -289,8 +289,8 @@\n             $object->url\t\t\t\t\t = GETPOST('url');\n             $object->note_private          \t = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n             $object->note               \t = $object->note_private;   // deprecated\n-            $object->customcode              = GETPOST('customcode');\n-            $object->country_id              = GETPOST('country_id');\n+            $object->customcode              = GETPOST('customcode','alpha');\n+            $object->country_id              = GETPOST('country_id','int');\n             $object->duration_value     \t = $duration_value;\n             $object->duration_unit      \t = $duration_unit;\n             $object->seuil_stock_alerte \t = GETPOST('seuil_stock_alerte')?GETPOST('seuil_stock_alerte'):0;\n@@ -306,13 +306,13 @@\n             $object->surface_units      \t = GETPOST('surface_units');\n             $object->volume             \t = GETPOST('volume');\n             $object->volume_units       \t = GETPOST('volume_units');\n-            $object->finished           \t = GETPOST('finished');\n-\t        $object->fk_unit                 = GETPOST('units');\n+            $object->finished           \t = GETPOST('finished','alpha');\n+            $object->fk_unit                 = GETPOST('units','alpha');\n \n-\t\t\t$accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell');\n-\t\t\t$accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra');\n-\t\t\t$accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export');\n-\t\t\t$accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy');\n+\t        $accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell','alpha');\n+\t        $accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra','alpha');\n+\t        $accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export','alpha');\n+\t        $accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy','alpha');\n \n \t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n \t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n@@ -385,11 +385,11 @@\n                 \t$object->note_private           = dol_htmlcleanlastbr(GETPOST('note_private','none'));\n                     $object->note                   = $object->note_private;\n     \t\t\t}\n-                $object->customcode             = GETPOST('customcode');\n-                $object->country_id             = GETPOST('country_id');\n-                $object->status                 = GETPOST('statut');\n-                $object->status_buy             = GETPOST('statut_buy');\n-                $object->status_batch\t        = GETPOST('status_batch');\n+                $object->customcode             = GETPOST('customcode','alpha');\n+                $object->country_id             = GETPOST('country_id','int');\n+                $object->status                 = GETPOST('statut','int');\n+                $object->status_buy             = GETPOST('statut_buy','int');\n+                $object->status_batch\t        = GETPOST('status_batch','aZ09');\n                 // removed from update view so GETPOST always empty\n                 /*\n                 $object->seuil_stock_alerte     = GETPOST('seuil_stock_alerte');\n@@ -410,7 +410,7 @@\n                 $object->surface_units          = GETPOST('surface_units');\n                 $object->volume                 = GETPOST('volume');\n                 $object->volume_units           = GETPOST('volume_units');\n-                $object->finished               = GETPOST('finished');\n+                $object->finished               = GETPOST('finished','alpha');\n \n \t            $units = GETPOST('units', 'int');\n \n@@ -437,10 +437,10 @@\n     \t        $object->barcode_type_coder     = $stdobject->barcode_type_coder;\n     \t        $object->barcode_type_label     = $stdobject->barcode_type_label;\n \n-\t\t\t\t$accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell');\n-\t\t\t\t$accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra');\n-\t\t\t\t$accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export');\n-\t\t\t\t$accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy');\n+    \t        $accountancy_code_sell \t\t\t = GETPOST('accountancy_code_sell','alpha');\n+    \t        $accountancy_code_sell_intra\t = GETPOST('accountancy_code_sell_intra','alpha');\n+    \t        $accountancy_code_sell_export\t = GETPOST('accountancy_code_sell_export','alpha');\n+    \t        $accountancy_code_buy \t\t\t = GETPOST('accountancy_code_buy','alpha');\n \n \t\t\t\tif ($accountancy_code_sell <= 0) { $object->accountancy_code_sell = ''; } else { $object->accountancy_code_sell = $accountancy_code_sell; }\n \t\t\t\tif ($accountancy_code_sell_intra <= 0) { $object->accountancy_code_sell_intra = ''; } else { $object->accountancy_code_sell_intra = $accountancy_code_sell_intra; }\n@@ -1303,7 +1303,7 @@\n             print '</td></tr>';\n \n \t\t\t// Batch number managment\n-\t\t\tif ($conf->productbatch->enabled) \n+\t\t\tif ($conf->productbatch->enabled)\n \t\t\t{\n \t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n \t\t\t\t{\n@@ -1723,7 +1723,7 @@\n \t\t\tprint '</td></tr>';\n \n             // Batch number management (to batch)\n-            if (! empty($conf->productbatch->enabled)) \n+            if (! empty($conf->productbatch->enabled))\n             {\n \t\t\t\tif ($object->isProduct() || ! empty($conf->global->STOCK_SUPPORTS_SERVICES))\n \t\t\t\t{"
        },
        {
          "filename": "htdocs/societe/ajax/company.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -87,7 +87,7 @@\n \n \tif (! $searchkey) return;\n \n-\t$form = new Form($db);\n+\tif (! is_object($form)) $form = new Form($db);\n \t$arrayresult=$form->select_thirdparty_list(0, $htmlname, $filter, 1, $showtype, 0, null, $searchkey, $outjson);\n \n \t$db->close();"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "SQL injection vulnerability in product/card.php in Dolibarr ERP/CRM version 7.0.3 allows remote attackers to execute arbitrary SQL commands via the statut parameter.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-07-08T16:29:00.360",
    "last_modified": "2024-11-21T03:47:06.970",
    "fix_date": "2018-06-25T12:06:09Z"
  },
  "references": [
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/36402c22eef49d60edd73a2f312f8e28fe0bd1cb",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/36402c22eef49d60edd73a2f312f8e28fe0bd1cb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:28.584115",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "Dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T11:04:06Z",
    "size": 1507317,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1162,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:10:40.684709"
  }
}