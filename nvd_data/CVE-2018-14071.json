{
  "cve_id": "CVE-2018-14071",
  "github_data": {
    "repository": "cyberhobo/wordpress-geo-mashup",
    "fix_commit": "838e2fe15a2328f5ae3dfc75d90e420509286f2f",
    "related_commits": [
      "838e2fe15a2328f5ae3dfc75d90e420509286f2f",
      "838e2fe15a2328f5ae3dfc75d90e420509286f2f"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "838e2fe15a2328f5ae3dfc75d90e420509286f2f",
      "commit_date": "2018-07-12T03:20:20Z",
      "author": {
        "login": "cyberhobo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Strengthen sanitization, fixes #817",
        "length": 35,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 411,
        "additions": 250,
        "deletions": 161
      },
      "files": [
        {
          "filename": "geo-mashup-db.php",
          "status": "modified",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -1476,6 +1476,61 @@ public static function get_post_locations( $query_args = '' ) {\n \t\treturn self::get_object_locations( $query_args );\r\n \t}\r\n \r\n+\t/**\r\n+\t * Sanitize an array of query arguments.\r\n+\t *\r\n+\t * @param array $query_args\r\n+\t *\r\n+\t * @return array\r\n+\t */\r\n+\tpublic static function sanitize_query_args( $query_args ) {\r\n+\t\tarray_walk_recursive($query_args, array( __CLASS__, 'sanitize_query_arg' ) );\r\n+\t\treturn $query_args;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sanitize a single query argument.\r\n+\t *\r\n+\t * @param mixed $value May be modified.\r\n+\t * @param string $name\r\n+\t */\r\n+\tpublic static function sanitize_query_arg( &$value, $name ) {\r\n+\t\tswitch ($name) {\r\n+\t\t\tcase 'minlat':\r\n+\t\t\tcase 'maxlat':\r\n+\t\t\tcase 'minlng':\r\n+\t\t\tcase 'maxlng':\r\n+\t\t\tcase 'near_lat':\r\n+\t\t\tcase 'near_lng':\r\n+\t\t\tcase 'radius_km':\r\n+\t\t\tcase 'radius_mi':\r\n+\t\t\t\t$value = (float) $value;\r\n+\t\t\t\tbreak;\r\n+\r\n+\t\t\tcase 'map_cat':\r\n+\t\t\tcase 'object_ids':\r\n+\t\t\t\t$value = preg_replace( '/[^0-9,]', '', $value );\r\n+\t\t\t\tbreak;\r\n+\r\n+\t\t\tcase 'map_post_type':\r\n+\t\t\tcase 'object_name':\r\n+\t\t\t\t$value = sanitize_key( $value );\r\n+\t\t\t\tbreak;\r\n+\r\n+\t\t\tcase 'limit':\r\n+\t\t\tcase 'map_offset':\r\n+\t\t\t\t$value = (int) $value;\r\n+\t\t\t\tbreak;\r\n+\r\n+\t\t\tcase 'suppress_filters':\r\n+\t\t\t\t$value = (bool) $value;\r\n+\t\t\t\tbreak;\r\n+\r\n+\t\t\tdefault:\r\n+\t\t\t\t$value = sanitize_text_field( $value );\r\n+\t\t}\r\n+\t}\r\n+\r\n \t/**\r\n \t * Get locations of objects.\r\n \t *\r"
        },
        {
          "filename": "geo-mashup-ui-managers.php",
          "status": "modified",
          "additions": 190,
          "deletions": 157,
          "patch": "@@ -1,5 +1,5 @@\n <?php\r\n-/** \r\n+/**\r\n  * Geo Mashup \"core\" implementation of location management user interfaces.\r\n  *\r\n  * Theoretically, everything done here could be done in a separate plugin.\r\n@@ -36,7 +36,7 @@ public static function get_instance( $name ) {\n \r\n \t/**\r\n \t * Queue UI styles to match the jQuery version.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t */\r\n \tpublic function enqueue_jquery_styles() {\r\n@@ -51,22 +51,22 @@ public function enqueue_jquery_styles() {\n \t */\r\n \tpublic function enqueue_form_client_items() {\r\n \t\tglobal $geo_mashup_options, $geo_mashup_custom;\r\n-\t\t\r\n+\r\n \t\tGeoMashup::register_style( 'geo-mashup-edit-form', 'css/location-editor.css', false, GEO_MASHUP_VERSION, 'screen' );\r\n \t\twp_enqueue_style( 'geo-mashup-edit-form' );\r\n \r\n-\t\tGeoMashup::register_script( \r\n-\t\t\t\t'mxn', \r\n-\t\t\t\t'js/mxn/mxn.js', \r\n-\t\t\t\tnull, \r\n-\t\t\t\tGEO_MASHUP_VERSION , \r\n+\t\tGeoMashup::register_script(\r\n+\t\t\t\t'mxn',\r\n+\t\t\t\t'js/mxn/mxn.js',\r\n+\t\t\t\tnull,\r\n+\t\t\t\tGEO_MASHUP_VERSION ,\r\n \t\t\t\ttrue);\r\n-\t\t\t\t\r\n-\t\tGeoMashup::register_script( \r\n-\t\t\t\t'mxn-core', \r\n-\t\t\t\t'js/mxn/mxn.core.js', \r\n-\t\t\t\tarray( 'mxn' ), \r\n-\t\t\t\tGEO_MASHUP_VERSION, \r\n+\r\n+\t\tGeoMashup::register_script(\r\n+\t\t\t\t'mxn-core',\r\n+\t\t\t\t'js/mxn/mxn.core.js',\r\n+\t\t\t\tarray( 'mxn' ),\r\n+\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\ttrue );\r\n \r\n \t\t$map_api = $geo_mashup_options->get( 'overall', 'map_api' );\r\n@@ -81,54 +81,54 @@ public function enqueue_form_client_items() {\n \t\t\twp_register_script(\r\n \t\t\t\t\t'google-maps-3',\r\n \t\t\t\t\t'//maps.google.com/maps/api/js?key=' . $geo_mashup_options->get( 'overall', 'googlev3_key' ) . '&amp;language=' . GeoMashup::get_language_code(),\r\n-\t\t\t\t\tnull, \r\n-\t\t\t\t\t'', \r\n+\t\t\t\t\tnull,\r\n+\t\t\t\t\t'',\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n-\t\t\tGeoMashup::register_script( \r\n-\t\t\t\t\t'mxn-google-3', \r\n-\t\t\t\t\t'js/mxn/mxn.googlev3.core.js', \r\n-\t\t\t\t\tarray( 'mxn-core', 'google-maps-3' ), \r\n-\t\t\t\t\tGEO_MASHUP_VERSION, \r\n+\r\n+\t\t\tGeoMashup::register_script(\r\n+\t\t\t\t\t'mxn-google-3',\r\n+\t\t\t\t\t'js/mxn/mxn.googlev3.core.js',\r\n+\t\t\t\t\tarray( 'mxn-core', 'google-maps-3' ),\r\n+\t\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n-\t\t\tGeoMashup::register_script( \r\n-\t\t\t\t\t'mxn-google-3-gm', \r\n-\t\t\t\t\t'js/mxn/mxn.googlev3.geo-mashup.js', \r\n-\t\t\t\t\tarray( 'mxn-google-3' ), \r\n-\t\t\t\t\tGEO_MASHUP_VERSION, \r\n+\r\n+\t\t\tGeoMashup::register_script(\r\n+\t\t\t\t\t'mxn-google-3-gm',\r\n+\t\t\t\t\t'js/mxn/mxn.googlev3.geo-mashup.js',\r\n+\t\t\t\t\tarray( 'mxn-google-3' ),\r\n+\t\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\t\t\r\n+\r\n \t\t\t$required_scripts[] = 'mxn-google-3-gm';\r\n \t\t} else if ( 'openlayers' == $map_api ) {\r\n-\t\t\twp_register_script( \r\n-\t\t\t\t\t'openlayers', \r\n+\t\t\twp_register_script(\r\n+\t\t\t\t\t'openlayers',\r\n \t\t\t\t\t'//cdnjs.cloudflare.com/ajax/libs/openlayers/2.13.1/OpenLayers.js',\r\n-\t\t\t\t\tnull, \r\n-\t\t\t\t\t'latest', \r\n+\t\t\t\t\tnull,\r\n+\t\t\t\t\t'latest',\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n-\t\t\twp_register_script( \r\n-\t\t\t\t\t'openstreetmap', \r\n+\r\n+\t\t\twp_register_script(\r\n+\t\t\t\t\t'openstreetmap',\r\n \t\t\t\t\t'//www.openstreetmap.org/openlayers/OpenStreetMap.js',\r\n \t\t\t\t\t array( 'openlayers' ),\r\n \t\t\t\t\t'latest',\r\n \t\t\t\t\t true );\r\n-\t\t\t\t\t \r\n-\t\t\tGeoMashup::register_script( \r\n+\r\n+\t\t\tGeoMashup::register_script(\r\n \t\t\t\t\t'mxn-openlayers',\r\n-\t\t\t\t\t'js/mxn/mxn.openlayers.core.js', \r\n-\t\t\t\t\tarray( 'mxn-core', 'openstreetmap' ), \r\n-\t\t\t\t\tGEO_MASHUP_VERSION, \r\n+\t\t\t\t\t'js/mxn/mxn.openlayers.core.js',\r\n+\t\t\t\t\tarray( 'mxn-core', 'openstreetmap' ),\r\n+\t\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n-\t\t\tGeoMashup::register_script( \r\n-\t\t\t\t\t'mxn-openlayers-gm', \r\n-\t\t\t\t\t'js/mxn/mxn.openlayers.geo-mashup.js', \r\n-\t\t\t\t\tarray( 'mxn-openlayers' ), \r\n-\t\t\t\t\tGEO_MASHUP_VERSION, \r\n+\r\n+\t\t\tGeoMashup::register_script(\r\n+\t\t\t\t\t'mxn-openlayers-gm',\r\n+\t\t\t\t\t'js/mxn/mxn.openlayers.geo-mashup.js',\r\n+\t\t\t\t\tarray( 'mxn-openlayers' ),\r\n+\t\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n+\r\n \t\t\t$required_scripts[] = 'mxn-openlayers-gm';\r\n \t\t} elseif ( 'leaflet' == $map_api ) {\r\n \r\n@@ -169,30 +169,30 @@ public function enqueue_form_client_items() {\n \t\t\t$required_scripts[] = 'mxn-leaflet-gm';\r\n \t\t}\r\n \r\n-\t\tGeoMashup::register_script( \r\n-\t\t\t\t'geo-mashup-location-editor', \r\n-\t\t\t\t'js/location-editor.js', \r\n-\t\t\t\t$required_scripts, \r\n-\t\t\t\tGEO_MASHUP_VERSION, \r\n+\t\tGeoMashup::register_script(\r\n+\t\t\t\t'geo-mashup-location-editor',\r\n+\t\t\t\t'js/location-editor.js',\r\n+\t\t\t\t$required_scripts,\r\n+\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\ttrue );\r\n-\t\t\t\t\r\n+\r\n \t\twp_enqueue_script( 'geo-mashup-location-editor' );\r\n \r\n-\t\tGeoMashup::register_script( \r\n-\t\t\t\t'jquery-ui-datepicker', \r\n-\t\t\t\t'js/jquery-ui.1.7.3.datepicker.js', \r\n-\t\t\t\tarray( 'jquery', 'jquery-ui-core'), \r\n-\t\t\t\t'1.7.3', \r\n+\t\tGeoMashup::register_script(\r\n+\t\t\t\t'jquery-ui-datepicker',\r\n+\t\t\t\t'js/jquery-ui.1.7.3.datepicker.js',\r\n+\t\t\t\tarray( 'jquery', 'jquery-ui-core'),\r\n+\t\t\t\t'1.7.3',\r\n \t\t\t\ttrue );\r\n-\t\t\t\t\r\n+\r\n \t\twp_enqueue_script( 'jquery-ui-datepicker' );\r\n \r\n \t\tif ( isset( $geo_mashup_custom ) ) {\r\n \t\t\t$custom_url = $geo_mashup_custom->file_url( 'location-editor.js' );\r\n \t\t\tif ( ! empty( $custom_url ) ) {\r\n-\t\t\t\twp_enqueue_script( \r\n-\t\t\t\t\t'geo-mashup-location-editor-custom', \r\n-\t\t\t\t\t$custom_url, \r\n+\t\t\t\twp_enqueue_script(\r\n+\t\t\t\t\t'geo-mashup-location-editor-custom',\r\n+\t\t\t\t\t$custom_url,\r\n \t\t\t\t\tarray( 'geo-mashup-location-editor' ),\r\n \t\t\t\t\tnull,\r\n \t\t\t\t\ttrue );\r\n@@ -202,7 +202,7 @@ public function enqueue_form_client_items() {\n \r\n \t/**\r\n \t * Determine the appropriate action from posted data.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t */\r\n \tprivate function get_submit_action() {\r\n@@ -226,7 +226,7 @@ private function get_submit_action() {\n \r\n \t\t\t// The geo mashup submit button wasn't used, but a change was made and the post saved\r\n \t\t\t$action = 'save';\r\n-\t\t\t\t \r\n+\r\n \t\t} else if ( isset( $_POST['geo_mashup_delete_location'] ) ) {\r\n \r\n \t\t\t$action = 'delete';\r\n@@ -242,7 +242,7 @@ private function get_submit_action() {\n \r\n \t/**\r\n \t * Save an object location from data posted by the location editor.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @uses GeoMashupDB::set_object_location()\r\n \t * @uses GeoMashupDB::delete_location()\r\n@@ -257,64 +257,96 @@ public function save_posted_object_location( $object_name, $object_id ) {\n \t\tif ( empty( $_POST['geo_mashup_nonce'] ) || !wp_verify_nonce( $_POST['geo_mashup_nonce'], 'geo-mashup-edit' ) ) {\r\n \t\t\treturn new WP_Error( 'invalid_request', __( 'Object location not saved - invalid request.', 'GeoMashup' ) );\r\n \t\t}\r\n-\t\t\r\n+\r\n \t\t$action = $this->get_submit_action();\r\n \r\n-\t\tif ( 'save' == $action or 'geocode' == $action ) {\r\n+\t\t$post_location = array();\r\n+\t\t$search_text = $geo_date = '';\r\n+\r\n+\t\tif ( 'save' === $action || 'geocode' === $action ) {\r\n+\r\n+\t\t\t$date_string = sanitize_text_field( $_POST['geo_mashup_date'] ) . ' ' .\r\n+\t\t\t               (int) $_POST['geo_mashup_hour'] . ':' .\r\n+\t\t\t               (int) $_POST['geo_mashup_minute'] . ':00';\r\n+\t\t\t$geo_date    = date( 'Y-m-d H:i:s', strtotime( $date_string ) );\r\n+\r\n+\t\t\t$post_location['saved_name'] = sanitize_text_field( wp_unslash( $_POST['geo_mashup_location_name'] ) );\r\n+\r\n+\t\t\t$search_text = sanitize_text_field( $_POST['geo_mashup_search'] );\r\n+\t\t}\r\n+\r\n \r\n-\t\t\t$date_string = $_POST['geo_mashup_date'] . ' ' . $_POST['geo_mashup_hour'] . ':' . \r\n-\t\t\t\t$_POST['geo_mashup_minute'] . ':00';\r\n-\t\t\t$geo_date = date( 'Y-m-d H:i:s', strtotime( $date_string ) );\r\n+\t\tif ( 'geocode' === $action && ! GeoMashupDB::geocode( $search_text, $post_location ) ) {\r\n \r\n \t\t\t$post_location = array();\r\n-\t\t\t// If PHP has added slashes, WP will do it again before saving\r\n-\t\t\t$post_location['saved_name'] = stripslashes( $_POST['geo_mashup_location_name'] );\r\n \r\n-\t\t\tif ( 'geocode' == $action ) {\r\n+\t\t}\r\n \r\n-\t\t\t\t$status = GeoMashupDB::geocode( $_POST['geo_mashup_search'], $post_location );\r\n-\t\t\t\tif ( $status != 200 ) {\r\n-\t\t\t\t\t$post_location = array();\r\n-\t\t\t\t}\r\n+\t\tif ( 'save' === $action && ! empty( $_POST['geo_mashup_select'] ) ) {\r\n \r\n-\t\t\t} else {\r\n+\t\t\t$selected_items = explode( '|', $_POST['geo_mashup_select'] );\r\n+\t\t\t$post_location  = empty( $selected_items ) ? 0 : (int) $selected_items[0];\r\n \r\n-\t\t\t\tif ( ! empty( $_POST['geo_mashup_select'] ) ) {\r\n-\t\t\t\t\t$selected_items = explode( '|', $_POST['geo_mashup_select'] );\r\n-\t\t\t\t\t$post_location = intval( $selected_items[0] );\r\n-\t\t\t\t} else { \r\n-\t\t\t\t\t$post_location['id'] = $_POST['geo_mashup_location_id'];\r\n-\t\t\t\t\tlist( $lat, $lng ) = explode( ',', $_POST['geo_mashup_location'] );\r\n-\t\t\t\t\t$post_location['lat'] = trim( $lat );\r\n-\t\t\t\t\t$post_location['lng'] = trim( $lng );\r\n-\t\t\t\t\t$post_location['geoname'] = $_POST['geo_mashup_geoname'];\r\n-\t\t\t\t\t$post_location['address'] = stripslashes( $_POST['geo_mashup_address'] );\r\n-\t\t\t\t\t$post_location['postal_code'] = $_POST['geo_mashup_postal_code'];\r\n-\t\t\t\t\t$post_location['country_code'] = $_POST['geo_mashup_country_code'];\r\n-\t\t\t\t\t$post_location['admin_code'] = $_POST['geo_mashup_admin_code'];\r\n-\t\t\t\t\t$post_location['sub_admin_code'] = $_POST['geo_mashup_sub_admin_code'];\r\n-\t\t\t\t\t$post_location['locality_name'] = $_POST['geo_mashup_locality_name'];\r\n-\t\t\t\t\tif ( !empty( $_POST['geo_mashup_null_fields'] ) )\r\n-\t\t\t\t\t\t$post_location['set_null'] = $_POST['geo_mashup_null_fields'];\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\t\r\n-\t\t\tif ( ! empty( $post_location ) ) {\r\n-\t\t\t\t$error = GeoMashupDB::set_object_location( $object_name, $object_id, $post_location, true, $geo_date );\r\n-\t\t\t\tif ( is_wp_error( $error ) ) \r\n-\t\t\t\t\treturn $error;\r\n-\t\t\t}\r\n+\t\t}\r\n+\r\n+\t\tif ( 'save' === $action && empty( $_POST['geo_mashup_select'] ) ) {\r\n+\t\t\t$post_location['id'] = (int) $_POST['geo_mashup_location_id'];\r\n+\t\t\tlist( $lat, $lng ) = explode( ',', $_POST['geo_mashup_location'] );\r\n+\t\t\t$post_location['lat']            = (float) $lat;\r\n+\t\t\t$post_location['lng']            = (float) $lng;\r\n+\t\t\t$post_location['geoname']        = sanitize_text_field( $_POST['geo_mashup_geoname'] );\r\n+\t\t\t$post_location['address']        = sanitize_text_field( wp_unslash( $_POST['geo_mashup_address'] ) );\r\n+\t\t\t$post_location['postal_code']    = sanitize_text_field( $_POST['geo_mashup_postal_code'] );\r\n+\t\t\t$post_location['country_code']   = $this->sanitize_country_code( $_POST['geo_mashup_country_code'] );\r\n+\t\t\t$post_location['admin_code']     = sanitize_text_field( $_POST['geo_mashup_admin_code'] );\r\n+\t\t\t$post_location['sub_admin_code'] = sanitize_text_field( $_POST['geo_mashup_sub_admin_code'] );\r\n+\t\t\t$post_location['locality_name']  = sanitize_text_field( $_POST['geo_mashup_locality_name'] );\r\n+\t\t\t$post_location['set_null']       = $this->sanitize_null_fields( $_POST['geo_mashup_null_fields'] );\r\n+\t\t}\r\n+\r\n+\t\t$error = null;\r\n \r\n-\t\t} else if ( 'delete' == $action ) {\r\n+\t\tif ( ! empty( $post_location ) ) {\r\n+\r\n+\t\t\t$error = GeoMashupDB::set_object_location(\r\n+\t\t\t\t$object_name,\r\n+\t\t\t\t$object_id,\r\n+\t\t\t\t$post_location,\r\n+\t\t\t\ttrue,\r\n+\t\t\t\t$geo_date\r\n+\t\t\t);\r\n+\r\n+\t\t}\r\n+\r\n+\t\tif ( 'delete' === $action ) {\r\n \r\n \t\t\t$error = GeoMashupDB::delete_object_location( $object_name, $object_id );\r\n-\t\t\tif ( is_wp_error( $error ) ) \r\n-\t\t\t\treturn $error;\r\n \r\n \t\t}\r\n-\t\t// If geodata was manually updated but Geo Mashup location was not,\r\n-\t\t// they may be out of sync now. Allowing that for now.\r\n-\t\treturn true;\r\n+\r\n+\t\treturn is_wp_error( $error ) ? $error : true;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sanitize country codes to two uppercase alpha characters.\r\n+\t *\r\n+\t * @param string $code\r\n+\t *\r\n+\t * @return string\r\n+\t */\r\n+\tprivate function sanitize_country_code( $code ) {\r\n+\t\treturn substr( preg_replace( '/[^A-Z]/', '', $code), 0, 2 );\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sanitize null fields to null or a safe string.\r\n+\t *\r\n+\t * @param string $fields\r\n+\t *\r\n+\t * @return string\r\n+\t */\r\n+\tprivate function sanitize_null_fields( $fields ) {\r\n+\t\treturn empty( $fields ) ? null : sanitize_text_field( $fields );\r\n \t}\r\n }\r\n \r\n@@ -330,7 +362,7 @@ public function save_posted_object_location( $object_name, $object_id ) {\n class GeoMashupUserUIManager extends GeoMashupUIManager {\r\n \t/**\r\n \t * Get the single instance of this class.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @uses parent::get_instance()\r\n \t *\r\n@@ -360,7 +392,7 @@ public function __construct() {\n \t * called by WordPress.\r\n \t *\r\n \t * @since 1.3\r\n-\t * @global array $geo_mashup_options \r\n+\t * @global array $geo_mashup_options\r\n \t * @global string $pagenow The WordPress-supplied requested filename.\r\n \t * @uses apply_filters geo_mashup_load_user_editor Returns a boolean that loads the editor when true.\r\n \t */\r\n@@ -374,7 +406,7 @@ public function init() {\n \t\t$enabled = apply_filters( 'geo_mashup_load_user_editor', $enabled );\r\n \r\n \t\t// If enabled, register all the interface elements\r\n-\t\tif ( $enabled ) { \r\n+\t\tif ( $enabled ) {\r\n \r\n \t\t\t// Form generation\r\n \t\t\tadd_action( 'show_user_profile', array( &$this, 'print_form' ) );\r\n@@ -391,7 +423,7 @@ public function init() {\n \r\n \t/**\r\n \t * Print the user location editor form.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @uses edit-form.php\r\n \t */\r\n@@ -400,7 +432,7 @@ public function print_form() {\n \r\n \t\tinclude_once( GEO_MASHUP_DIR_PATH . '/edit-form.php');\r\n \t\tif ( isset( $_GET['user_id'] ) ) {\r\n-\t\t\t$object_id = $_GET['user_id'];\r\n+\t\t\t$object_id = (int) $_GET['user_id'];\r\n \t\t} else {\r\n \t\t\t$object_id = $user_id;\r\n \t\t}\r\n@@ -430,20 +462,16 @@ public function save_posted_object_location( $object_name, $object_id = null ) {\n \t *\r\n \t * save_user {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by WordPress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n-\t * @return bool|WP_Error \r\n+\t * @return bool|WP_Error\r\n \t */\r\n \tpublic function save_user() {\r\n \t\tif ( empty( $_POST['user_id'] ) ) {\r\n \t\t\treturn false;\r\n \t\t}\r\n \r\n-\t\t$user_id = $_POST['user_id'];\r\n-\r\n-\t\tif ( !is_numeric( $user_id ) ) {\r\n-\t\t\treturn $user_id;\r\n-\t\t}\r\n+\t\t$user_id = (int) $_POST['user_id'];\r\n \r\n \t\tif ( !current_user_can( 'edit_user', $user_id ) ) {\r\n \t\t\treturn $user_id;\r\n@@ -468,15 +496,15 @@ public function save_user() {\n class GeoMashupPostUIManager extends GeoMashupUIManager {\r\n \t/**\r\n \t * Location found in geo_mashup_save_location shortcode.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @var array\r\n \t */\r\n \tprivate $inline_location;\r\n \r\n \t/**\r\n \t * Get the single instance of this class.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @uses parent::get_instance()\r\n \t *\r\n@@ -503,9 +531,9 @@ public function __construct() {\n \t *\r\n \t * init {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by WordPress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n-\t * @global array $geo_mashup_options \r\n+\t * @global array $geo_mashup_options\r\n \t * @global string $pagenow The WordPress-supplied requested filename.\r\n \t * @uses apply_filters geo_mashup_load_location_editor Returns a boolean that loads the editor when true.\r\n \t */\r\n@@ -582,12 +610,12 @@ public function enqueue_scripts() {\n \r\n \t\t\t$this->enqueue_form_client_items();\r\n \r\n-\t\t} \r\n+\t\t}\r\n \t}\r\n \r\n \t/**\r\n \t * Add a location meta box to the post editors.\r\n-\t * \r\n+\t *\r\n \t * admin_menu {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by Wordpress.\r\n \t *\r\n@@ -603,7 +631,7 @@ public function admin_menu() {\n \r\n \t/**\r\n \t * Print the post editor form.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t * @uses edit-form.php\r\n \t */\r\n@@ -633,15 +661,15 @@ public function save_posted_object_location( $object_name, $object_id = null ) {\n \r\n \t/**\r\n \t * When a post is saved, save any posted location for it.\r\n-\t * \r\n+\t *\r\n \t * save_post {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by WordPress.\r\n \t *\r\n \t * @since 1.3\r\n \t * @uses GeoMashupDB::set_object_location()\r\n \t *\r\n-\t * @param id $post_id \r\n-\t * @param object $post \r\n+\t * @param id $post_id\r\n+\t * @param object $post\r\n \t * @return bool|WP_Error\r\n \t */\r\n \tpublic function save_post($post_id, $post) {\r\n@@ -674,7 +702,7 @@ public function save_post($post_id, $post) {\n \t *\r\n \t * content_save_pre {@link http://codex.wordpress.org/Plugin_API/Filter_Reference filter}\r\n \t * called by Wordpress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t */\r\n \tpublic function content_save_pre( $content ) {\r\n@@ -686,15 +714,15 @@ public function content_save_pre( $content ) {\n \r\n \t/**\r\n \t * Store the inline location from a save location shortcode before it is removed.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t *\r\n-\t * @param array $shortcode_match \r\n+\t * @param array $shortcode_match\r\n \t * @return The matched content, or an empty string if it was a save location shortcode.\r\n \t */\r\n \tpublic function replace_save_pre_shortcode( $shortcode_match ) {\r\n \t\t$content = $shortcode_match[0];\r\n-\t\t$tag_index = array_search( 'geo_mashup_save_location',  $shortcode_match ); \r\n+\t\t$tag_index = array_search( 'geo_mashup_save_location',  $shortcode_match );\r\n \t\tif ( $tag_index !== false ) {\r\n \t\t\t// There is an inline location - save the attributes\r\n \t\t\t$this->inline_location = shortcode_parse_atts( stripslashes( $shortcode_match[$tag_index+1] ) );\r\n@@ -723,7 +751,7 @@ public function replace_save_pre_shortcode( $shortcode_match ) {\n \t\t\t\t$content = str_replace( ']', ' geocoding_error=\"' . $message . '\"]', $content );\r\n \t\t\t\t$this->inline_location = null;\r\n \t\t\t}\r\n-\t\t} \r\n+\t\t}\r\n \t\treturn $content;\r\n \t}\r\n \r\n@@ -732,7 +760,7 @@ public function replace_save_pre_shortcode( $shortcode_match ) {\n \t *\r\n \t * media_meta {@link http://codex.wordpress.org/Plugin_API/Filter_Reference filter}\r\n \t * called by WordPress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t */\r\n \tpublic function media_meta( $content, $post ) {\r\n@@ -753,12 +781,12 @@ public function media_meta( $content, $post ) {\n \t *\r\n \t * admin_print_scripts {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by WordPress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t */\r\n \tpublic function admin_print_scripts( $not_used ) {\r\n \t\t// Load any uploaded KML into the search map - only works with browser uploader\r\n-\t\t\r\n+\r\n \t\t// See if wp_upload_handler found uploaded KML\r\n \t\t$kml_url = get_transient( 'gm_uploaded_kml_url' );\r\n \t\tif (strlen($kml_url) > 0) {\r\n@@ -773,7 +801,7 @@ public function admin_print_scripts( $not_used ) {\n \r\n \t/**\r\n \t * Add geo mime types to allowable uploads.\r\n-\t * \r\n+\t *\r\n \t * upload_mimes {@link http://codex.wordpress.org/Plugin_API/Filter_Reference filter}\r\n \t * called by WordPress.\r\n \t *\r\n@@ -787,8 +815,8 @@ public function upload_mimes( $mimes ) {\n \t}\r\n \r\n \t/**\r\n-\t * If an upload is KML, put the URL in an option to be loaded in the response \r\n-\t * \r\n+\t * If an upload is KML, put the URL in an option to be loaded in the response\r\n+\t *\r\n \t * wp_handle_upload {@link http://codex.wordpress.org/Plugin_API/Filter_Reference filter}\r\n \t * called by WordPress.\r\n \t *\r\n@@ -827,7 +855,7 @@ class GeoMashupCommentUIManager {\n \r\n \t/**\r\n \t * Get the single instance of this class.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n \t *\r\n \t * @return GeoMashupPostUIManager The instance.\r\n@@ -856,15 +884,15 @@ public function __construct() {\n \t *\r\n \t * init {@link http://codex.wordpress.org/Plugin_API/Action_Reference action}\r\n \t * called by WordPress.\r\n-\t * \r\n+\t *\r\n \t * @since 1.3\r\n-\t * @global array $geo_mashup_options \r\n+\t * @global array $geo_mashup_options\r\n \t * @uses apply_filters geo_mashup_load_comment_editor Returns a boolean that loads the editor when true.\r\n \t */\r\n \tpublic function init() {\r\n \t\tglobal $geo_mashup_options;\r\n \r\n-\t\t$load_comment_editor = ( !is_admin() && $geo_mashup_options->get( 'overall', 'located_object_name', 'comment' ) == 'true' ); \r\n+\t\t$load_comment_editor = ( !is_admin() && $geo_mashup_options->get( 'overall', 'located_object_name', 'comment' ) == 'true' );\r\n \t\t$load_comment_editor = apply_filters( 'geo_mashup_load_comment_editor', $load_comment_editor );\r\n \r\n \t\t// If enabled, register all the interface elements\r\n@@ -895,7 +923,7 @@ public function print_form() {\n \t\t// If there's a logged in user with a location, use that as a default.\r\n \t\t// The client-side location will override it if available\r\n \t\t$user = wp_get_current_user();\r\n-\t\tif ( $user ) \r\n+\t\tif ( $user )\r\n \t\t\t$default_location = GeoMashupDB::get_object_location( 'user', $user->ID );\r\n \t\tif ( !$default_location )\r\n \t\t\t$default_location = GeoMashupDB::blank_object_location();\r\n@@ -907,8 +935,8 @@ public function print_form() {\n \t\tprintf( '<input id=\"geo-mashup-summary-input\" style=\"display:none;\" type=\"text\" size=\"25\" value=\"%s\" />', $default_summary );\r\n \t\tprintf( '<img id=\"geo-mashup-busy-icon\" style=\"display:none;\" src=\"%s\" alt=\"%s\" />', path_join( GEO_MASHUP_URL_PATH, 'images/busy_icon.gif' ), __( 'Loading...', 'GeoMashup' ) );\r\n \t\t$input_format = '<input id=\"geo-mashup-%s-input\" name=\"comment_location[%s]\" type=\"hidden\" value=\"%s\" />';\r\n-\t\tprintf( $input_format, 'lat', 'lat', $default_location->lat );\r\n-\t\tprintf( $input_format, 'lng', 'lng', $default_location->lng );\r\n+\t\tprintf( $input_format, 'lat', 'lat', esc_attr( $default_location->lat ) );\r\n+\t\tprintf( $input_format, 'lng', 'lng', esc_attr( $default_location->lng ) );\r\n \t}\r\n \r\n \t/**\r\n@@ -919,13 +947,13 @@ public function print_form() {\n \tpublic function wp_footer() {\r\n \t\tglobal $geo_mashup_options;\r\n \t\tif ( $this->add_form_script ) {\r\n-\t\t\tGeoMashup::register_script( \r\n-\t\t\t\t\t'geo-mashup-comment-form', \r\n-\t\t\t\t\t'js/comment-form.js', \r\n-\t\t\t\t\tarray( 'jquery' ), \r\n-\t\t\t\t\tGEO_MASHUP_VERSION, \r\n+\t\t\tGeoMashup::register_script(\r\n+\t\t\t\t\t'geo-mashup-comment-form',\r\n+\t\t\t\t\t'js/comment-form.js',\r\n+\t\t\t\t\tarray( 'jquery' ),\r\n+\t\t\t\t\tGEO_MASHUP_VERSION,\r\n \t\t\t\t\ttrue );\r\n-\t\t\t\t\t\r\n+\r\n \t\t\twp_localize_script( 'geo-mashup-comment-form', 'geo_mashup_comment_form_settings', array( 'geonames_username' => $geo_mashup_options->get( 'overall', 'geonames_username' ) ) );\r\n \t\t\twp_print_scripts( 'geo-mashup-comment-form' );\r\n \t\t}\r\n@@ -945,7 +973,12 @@ public function save_comment( $comment_id = 0, $approval = '' ) {\n \t\t\treturn false;\r\n \t\t}\r\n \r\n-\t\tGeoMashupDB::set_object_location( 'comment', $comment_id, $_POST['comment_location'] );\r\n+\t\t$location = array(\r\n+\t\t\t'lat' => (float) $_POST['comment_location']['lat'],\r\n+\t\t\t'lng' => (float) $_POST['comment_location']['lng']\r\n+\t\t);\r\n+\r\n+\t\tGeoMashupDB::set_object_location( 'comment', $comment_id, $location );\r\n \t}\r\n }\r\n \r"
        },
        {
          "filename": "geo-mashup.php",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -715,8 +715,9 @@ public static function ajax_kml_attachments() {\n \t\t\t}\n \t\t}\n \t\t$json = json_encode( $urls );\n-\t\tif ( isset( $_REQUEST['callback'] ) )\n-\t\t\t$json = $_REQUEST['callback'] . '(' . $json . ')';\n+\t\tif ( isset( $_REQUEST['callback'] ) ) {\n+\t\t\t$json = esc_js( $_REQUEST['callback'] ) . '(' . $json . ')';\n+\t\t}\n \t\techo $json;\n \t\texit();\n \t}"
        },
        {
          "filename": "geo-query.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -249,9 +249,9 @@ public static function generate_location_json( ) {\n \t\theader('Cache-Control: no-cache;', true);\r\n \t\theader('Expires: -1;', true);\r\n \r\n-\t\t$json = GeoMashup::get_locations_json($_REQUEST);\r\n+\t\t$json = GeoMashup::get_locations_json( GeoMashupDB::sanitize_query_args( $_REQUEST ) );\r\n \t\tif ( isset( $_REQUEST['callback'] ) )\r\n-\t\t\t$json = $_REQUEST['callback'] . '(' . $json . ')';\r\n+\t\t\t$json = esc_js( $_REQUEST['callback'] ) . '(' . $json . ')';\r\n \t\techo $json;\r\n \t}\r\n }\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5cad935c9a43da308f4ea7f2cf798e99a7759602",
            "date": "2024-11-11T00:00:00Z",
            "author_login": "cyberhobo"
          },
          {
            "sha": "079dc10af70046211feb916faeed75e7e4017230",
            "date": "2024-11-10T23:57:50Z",
            "author_login": "cyberhobo"
          },
          {
            "sha": "2c4f34c84f736827f2b9fd2ced7e5bb51e4ad13f",
            "date": "2024-09-30T02:32:30Z",
            "author_login": "cyberhobo"
          },
          {
            "sha": "8db11a8604d674e67567f5c857e47a8ece35a109",
            "date": "2024-09-30T02:29:30Z",
            "author_login": "cyberhobo"
          },
          {
            "sha": "6a8c57ff90a790fec40f51c5ca6df7f7b52087a4",
            "date": "2024-09-30T02:16:43Z",
            "author_login": "cyberhobo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "The Geo Mashup plugin before 1.10.4 for WordPress has insufficient sanitization of post editor and other user input.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-07-16T13:29:00.397",
    "last_modified": "2024-11-21T03:48:34.053",
    "fix_date": "2018-07-12T03:20:20Z"
  },
  "references": [
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/blob/master/readme.txt",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/commit/838e2fe15a2328f5ae3dfc75d90e420509286f2f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/issues/817",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/blob/master/readme.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/commit/838e2fe15a2328f5ae3dfc75d90e420509286f2f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cyberhobo/wordpress-geo-mashup/issues/817",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:32.393418",
    "processing_status": "enhanced"
  }
}