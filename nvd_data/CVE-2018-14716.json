{
  "cve_id": "CVE-2018-14716",
  "github_data": {
    "repository": "nystudio107/craft-seomatic",
    "fix_commit": "1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
    "related_commits": [
      "1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
      "1e7d1d084ac3a89e7ec70620f2749110508d1ce1"
    ],
    "patch_url": "https://github.com/nystudio107/craft-seomatic/commit/1e7d1d084ac3a89e7ec70620f2749110508d1ce1.patch",
    "fix_commit_details": {
      "sha": "1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
      "commit_date": "2018-07-23T22:19:43Z",
      "author": {
        "login": "khalwat",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Changed the way requests that don't match any elements generate the `canonicalUrl`, to avoid potentially executing injected Twig code",
        "length": 187,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 101,
        "additions": 72,
        "deletions": 29
      },
      "files": [
        {
          "filename": "src/helpers/DynamicMeta.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -500,6 +500,12 @@ public static function getLocalizedUrls(string $uri = null, int $siteId = null):\n                     Craft::error($e->getMessage(), __METHOD__);\n                 }\n             }\n+            // Strip any query string params, and make sure we have an absolute URL with protocol\n+            if ($urlParams === null) {\n+                $url = UrlHelper::stripQueryString($url);\n+            }\n+            $url = UrlHelper::absoluteUrlWithProtocol($url);\n+\n             $url = $url ?? '';\n             $language = $site->language;\n             $ogLanguage = str_replace('-', '_', $language);"
        },
        {
          "filename": "src/models/MetaGlobalVars.php",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -199,6 +199,20 @@ public function __construct(array $config = [])\n         parent::__construct($config);\n     }\n \n+    /**\n+     * @inheritdoc\n+     */\n+    public function init()\n+    {\n+        parent::init();\n+        // If we have potentially unsafe Twig code, strip it out\n+        if (!empty($this->canonicalUrl)) {\n+            if (strpos($this->canonicalUrl, 'craft.app.request.pathInfo') !== false) {\n+                $this->canonicalUrl = '{seomatic.helper.safeCanonicalUrl()}';\n+            }\n+        }\n+    }\n+\n     /**\n      * @inheritdoc\n      */"
        },
        {
          "filename": "src/seomatic-config/globalmeta/GlobalVars.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -26,7 +26,7 @@\n         'seoImageWidth'           => '',\n         'seoImageHeight'          => '',\n         'seoImageDescription'     => '',\n-        'canonicalUrl'            => '{{ craft.app.request.pathInfo | striptags }}',\n+        'canonicalUrl'            => '{seomatic.helper.safeCanonicalUrl()}',\n         'robots'                  => 'all',\n         'ogType'                  => 'website',\n         'ogTitle'                 => '{seomatic.meta.seoTitle}',"
        },
        {
          "filename": "src/services/Helper.php",
          "status": "modified",
          "additions": 51,
          "deletions": 28,
          "patch": "@@ -11,20 +11,23 @@\n \n namespace nystudio107\\seomatic\\services;\n \n+use nystudio107\\seomatic\\helpers\\UrlHelper;\n use nystudio107\\seomatic\\Seomatic;\n use nystudio107\\seomatic\\helpers\\DynamicMeta as DynamicMetaHelper;\n use nystudio107\\seomatic\\helpers\\ImageTransform as ImageTransformHelper;\n use nystudio107\\seomatic\\helpers\\Schema as SchemaHelper;\n use nystudio107\\seomatic\\helpers\\Text as TextHelper;\n \n+use Craft;\n use craft\\base\\Component;\n use craft\\elements\\Asset;\n use craft\\elements\\db\\MatrixBlockQuery;\n use craft\\elements\\db\\TagQuery;\n use craft\\helpers\\Template;\n-use craft\\helpers\\UrlHelper;\n use craft\\web\\twig\\variables\\Paginate;\n \n+use yii\\base\\InvalidConfigException;\n+\n /**\n  * @author    nystudio107\n  * @package   Seomatic\n@@ -38,9 +41,28 @@ class Helper extends Component\n     // Public Methods\n     // =========================================================================\n \n+    /**\n+     * Return the canonical URL for the request, with the query string stripped\n+     *\n+     * @return string\n+     */\n+    public static function safeCanonicalUrl(): string\n+    {\n+        $url = '';\n+        try {\n+            $url = Craft::$app->getRequest()->getPathInfo();\n+        } catch (InvalidConfigException $e) {\n+            Craft::error($e->getMessage(), __METHOD__);\n+        }\n+        $url = UrlHelper::stripQueryString($url);\n+\n+        return UrlHelper::absoluteUrlWithProtocol($url);\n+    }\n+\n     /**\n      * Paginate based on the passed in Paginate variable as returned from the\n-     * Twig {% paginate %} tag: https://docs.craftcms.com/v3/templating/tags/paginate.html#the-pageInfo-variable\n+     * Twig {% paginate %} tag:\n+     * https://docs.craftcms.com/v3/templating/tags/paginate.html#the-pageInfo-variable\n      *\n      * @param Paginate $pageInfo\n      */\n@@ -86,8 +108,8 @@ public static function truncateOnWord($string, $length, $substring = '\u2026'): str\n      * Return a list of localized URLs that are in the current site's group\n      * The current URI is used if $uri is null. Similarly, the current site is\n      * used if $siteId is null.\n-     * The resulting array of arrays has `id`, `language`, `ogLanguage`, `hreflangLanguage`,\n-     * and `url` as keys.\n+     * The resulting array of arrays has `id`, `language`, `ogLanguage`,\n+     * `hreflangLanguage`, and `url` as keys.\n      *\n      * @param string|null $uri\n      * @param int|null    $siteId\n@@ -131,6 +153,7 @@ public static function seoFileLink($url, $robots = '', $canonical = '', $inline\n             .$inlineStr\n             .'/'\n             .$fileName;\n+\n         return Template::raw(UrlHelper::siteUrl($seoFileLink));\n     }\n \n@@ -238,6 +261,30 @@ public static function extractSummary($text = '', $useStopWords = true): string\n         return TextHelper::extractSummary($text, $useStopWords);\n     }\n \n+    /**\n+     * Return a flattened, indented menu of the given $path\n+     *\n+     * @param string $path\n+     *\n+     * @return array\n+     */\n+    public static function getTypeMenu($path): array\n+    {\n+        return SchemaHelper::getTypeMenu($path);\n+    }\n+\n+    /**\n+     * Return a single menu of schemas starting at $path\n+     *\n+     * @param string $path\n+     *\n+     * @return array\n+     */\n+    public static function getSingleTypeMenu($path): array\n+    {\n+        return SchemaHelper::getSingleTypeMenu($path);\n+    }\n+\n     /**\n      * Transform the $asset for social media sites in $transformName and\n      * optional $siteId\n@@ -282,28 +329,4 @@ public function socialTransformHeight($asset, string $transformName = '', $siteI\n     {\n         return ImageTransformHelper::socialTransformHeight($asset, $transformName, $siteId);\n     }\n-\n-    /**\n-     * Return a flattened, indented menu of the given $path\n-     *\n-     * @param string $path\n-     *\n-     * @return array\n-     */\n-    public static function getTypeMenu($path): array\n-    {\n-        return SchemaHelper::getTypeMenu($path);\n-    }\n-\n-    /**\n-     * Return a single menu of schemas starting at $path\n-     *\n-     * @param string $path\n-     *\n-     * @return array\n-     */\n-    public static function getSingleTypeMenu($path): array\n-    {\n-        return SchemaHelper::getSingleTypeMenu($path);\n-    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f1c4155508df4e2a445b50fdf792cd96a354cce5",
            "date": "2025-01-14T02:27:48Z",
            "author_login": "khalwat"
          },
          {
            "sha": "6c580fafc3465b84351fd9bfa17ee84027d74397",
            "date": "2025-01-13T21:09:47Z",
            "author_login": "khalwat"
          },
          {
            "sha": "de1151e462a476862d15ffca6c37d49b26e363be",
            "date": "2025-01-13T21:09:44Z",
            "author_login": "khalwat"
          },
          {
            "sha": "bd0280960731cf451ed64b8db290fe3dfe3a1fc9",
            "date": "2025-01-13T07:05:15Z",
            "author_login": "khalwat"
          },
          {
            "sha": "d198d877d51b3d7a7d24ce97fc905e4c88be2bc8",
            "date": "2025-01-13T05:50:51Z",
            "author_login": "khalwat"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-94",
    "description": "A Server Side Template Injection (SSTI) was discovered in the SEOmatic plugin before 3.1.4 for Craft CMS, because requests that don't match any elements incorrectly generate the canonicalUrl, and can lead to execution of Twig code.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2018-08-06T20:29:01.490",
    "last_modified": "2024-11-21T03:49:39.503",
    "fix_date": "2018-07-23T22:19:43Z"
  },
  "references": [
    {
      "url": "http://ha.cker.info/exploitation-of-server-side-template-injection-with-craft-cms-plguin-seomatic/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nystudio107/craft-seomatic/commit/1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/nystudio107/craft-seomatic/releases/tag/3.1.4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://twitter.com/nystudio107/status/1021847835418009605",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://twitter.com/nystudio107/status/1021855169515057152",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/45108/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://ha.cker.info/exploitation-of-server-side-template-injection-with-craft-cms-plguin-seomatic/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nystudio107/craft-seomatic/commit/1e7d1d084ac3a89e7ec70620f2749110508d1ce1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/nystudio107/craft-seomatic/releases/tag/3.1.4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://twitter.com/nystudio107/status/1021847835418009605",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://twitter.com/nystudio107/status/1021855169515057152",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/45108/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:32.431969",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "craft-seomatic",
    "owner": "nystudio107",
    "created_at": "2017-02-18T19:18:55Z",
    "updated_at": "2025-01-14T02:27:54Z",
    "pushed_at": "2025-01-14T02:34:21Z",
    "size": 147407,
    "stars": 167,
    "forks": 71,
    "open_issues": 40,
    "watchers": 167,
    "has_security_policy": false,
    "default_branch": "develop-v5",
    "protected_branches": [],
    "languages": {
      "PHP": 25474920,
      "Twig": 350100,
      "CSS": 29022,
      "Vue": 22157,
      "JavaScript": 13610,
      "Makefile": 2469,
      "TypeScript": 2190,
      "Dockerfile": 130
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:35:06.855652"
  }
}