{
  "cve_id": "CVE-2018-15503",
  "github_data": {
    "repository": "swoole/swoole-src",
    "fix_commit": "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
    "related_commits": [
      "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
      "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76"
    ],
    "patch_url": "https://github.com/swoole/swoole-src/commit/4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76.patch",
    "fix_commit_details": {
      "sha": "4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
      "commit_date": "2018-08-15T11:21:06Z",
      "author": {
        "login": "GXhua",
        "type": "User",
        "stats": {
          "total_commits": 206,
          "average_weekly_commits": 0.31546707503828486,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 44
        }
      },
      "commit_message": {
        "title": "add buffer end check",
        "length": 20,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 164,
        "additions": 87,
        "deletions": 77
      },
      "files": [
        {
          "filename": "swoole_serialize.c",
          "status": "modified",
          "additions": 87,
          "deletions": 77,
          "patch": "@@ -52,8 +52,10 @@ zend_class_entry swoole_serialize_ce;\n zend_class_entry *swoole_serialize_class_entry_ptr;\n \n #define SWOOLE_SERI_EOF \"EOF\"\n+#define CHECK_STEP if(buffer>unseri_buffer_end){ php_error_docref(NULL TSRMLS_CC, E_ERROR, \"illegal unserialize data\"); return NULL;}\n \n static struct _swSeriaG swSeriaG;\n+char *unseri_buffer_end = NULL;\n \n void swoole_serialize_init(int module_number TSRMLS_DC)\n {\n@@ -113,148 +115,149 @@ static CPINLINE void swoole_check_size(seriaString *str, size_t len)\n     }\n }\n #ifdef __SSE2__\n+\n void CPINLINE swoole_mini_memcpy(void *dst, const void *src, size_t len)\n {\n     register unsigned char *dd = (unsigned char*) dst + len;\n     register const unsigned char *ss = (const unsigned char*) src + len;\n     switch (len)\n     {\n         case 68: *((int*) (dd - 68)) = *((int*) (ss - 68));\n-        /* no break */\n+            /* no break */\n         case 64: *((int*) (dd - 64)) = *((int*) (ss - 64));\n-        /* no break */\n+            /* no break */\n         case 60: *((int*) (dd - 60)) = *((int*) (ss - 60));\n-        /* no break */\n+            /* no break */\n         case 56: *((int*) (dd - 56)) = *((int*) (ss - 56));\n-        /* no break */\n+            /* no break */\n         case 52: *((int*) (dd - 52)) = *((int*) (ss - 52));\n-        /* no break */\n+            /* no break */\n         case 48: *((int*) (dd - 48)) = *((int*) (ss - 48));\n-        /* no break */\n+            /* no break */\n         case 44: *((int*) (dd - 44)) = *((int*) (ss - 44));\n-        /* no break */\n+            /* no break */\n         case 40: *((int*) (dd - 40)) = *((int*) (ss - 40));\n-        /* no break */\n+            /* no break */\n         case 36: *((int*) (dd - 36)) = *((int*) (ss - 36));\n-        /* no break */\n+            /* no break */\n         case 32: *((int*) (dd - 32)) = *((int*) (ss - 32));\n-        /* no break */\n+            /* no break */\n         case 28: *((int*) (dd - 28)) = *((int*) (ss - 28));\n-        /* no break */\n+            /* no break */\n         case 24: *((int*) (dd - 24)) = *((int*) (ss - 24));\n-        /* no break */\n+            /* no break */\n         case 20: *((int*) (dd - 20)) = *((int*) (ss - 20));\n-        /* no break */\n+            /* no break */\n         case 16: *((int*) (dd - 16)) = *((int*) (ss - 16));\n-        /* no break */\n+            /* no break */\n         case 12: *((int*) (dd - 12)) = *((int*) (ss - 12));\n-        /* no break */\n+            /* no break */\n         case 8: *((int*) (dd - 8)) = *((int*) (ss - 8));\n-        /* no break */\n+            /* no break */\n         case 4: *((int*) (dd - 4)) = *((int*) (ss - 4));\n             break;\n         case 67: *((int*) (dd - 67)) = *((int*) (ss - 67));\n-        /* no break */\n+            /* no break */\n         case 63: *((int*) (dd - 63)) = *((int*) (ss - 63));\n-        /* no break */\n+            /* no break */\n         case 59: *((int*) (dd - 59)) = *((int*) (ss - 59));\n-        /* no break */\n+            /* no break */\n         case 55: *((int*) (dd - 55)) = *((int*) (ss - 55));\n-        /* no break */\n+            /* no break */\n         case 51: *((int*) (dd - 51)) = *((int*) (ss - 51));\n-        /* no break */\n+            /* no break */\n         case 47: *((int*) (dd - 47)) = *((int*) (ss - 47));\n-        /* no break */\n+            /* no break */\n         case 43: *((int*) (dd - 43)) = *((int*) (ss - 43));\n-        /* no break */\n+            /* no break */\n         case 39: *((int*) (dd - 39)) = *((int*) (ss - 39));\n-        /* no break */\n+            /* no break */\n         case 35: *((int*) (dd - 35)) = *((int*) (ss - 35));\n-        /* no break */\n+            /* no break */\n         case 31: *((int*) (dd - 31)) = *((int*) (ss - 31));\n-        /* no break */\n+            /* no break */\n         case 27: *((int*) (dd - 27)) = *((int*) (ss - 27));\n-        /* no break */\n+            /* no break */\n         case 23: *((int*) (dd - 23)) = *((int*) (ss - 23));\n-        /* no break */\n+            /* no break */\n         case 19: *((int*) (dd - 19)) = *((int*) (ss - 19));\n-        /* no break */\n+            /* no break */\n         case 15: *((int*) (dd - 15)) = *((int*) (ss - 15));\n-        /* no break */\n+            /* no break */\n         case 11: *((int*) (dd - 11)) = *((int*) (ss - 11));\n-        /* no break */\n+            /* no break */\n         case 7: *((int*) (dd - 7)) = *((int*) (ss - 7));\n             *((int*) (dd - 4)) = *((int*) (ss - 4));\n             break;\n         case 3: *((short*) (dd - 3)) = *((short*) (ss - 3));\n             dd[-1] = ss[-1];\n             break;\n         case 66: *((int*) (dd - 66)) = *((int*) (ss - 66));\n-        /* no break */\n+            /* no break */\n         case 62: *((int*) (dd - 62)) = *((int*) (ss - 62));\n-        /* no break */\n+            /* no break */\n         case 58: *((int*) (dd - 58)) = *((int*) (ss - 58));\n-        /* no break */\n+            /* no break */\n         case 54: *((int*) (dd - 54)) = *((int*) (ss - 54));\n-        /* no break */\n+            /* no break */\n         case 50: *((int*) (dd - 50)) = *((int*) (ss - 50));\n-        /* no break */\n+            /* no break */\n         case 46: *((int*) (dd - 46)) = *((int*) (ss - 46));\n-        /* no break */\n+            /* no break */\n         case 42: *((int*) (dd - 42)) = *((int*) (ss - 42));\n-        /* no break */\n+            /* no break */\n         case 38: *((int*) (dd - 38)) = *((int*) (ss - 38));\n-        /* no break */\n+            /* no break */\n         case 34: *((int*) (dd - 34)) = *((int*) (ss - 34));\n-        /* no break */\n+            /* no break */\n         case 30: *((int*) (dd - 30)) = *((int*) (ss - 30));\n-        /* no break */\n+            /* no break */\n         case 26: *((int*) (dd - 26)) = *((int*) (ss - 26));\n-        /* no break */\n+            /* no break */\n         case 22: *((int*) (dd - 22)) = *((int*) (ss - 22));\n-        /* no break */\n+            /* no break */\n         case 18: *((int*) (dd - 18)) = *((int*) (ss - 18));\n-        /* no break */\n+            /* no break */\n         case 14: *((int*) (dd - 14)) = *((int*) (ss - 14));\n-        /* no break */\n+            /* no break */\n         case 10: *((int*) (dd - 10)) = *((int*) (ss - 10));\n-        /* no break */\n+            /* no break */\n         case 6: *((int*) (dd - 6)) = *((int*) (ss - 6));\n-        /* no break */\n+            /* no break */\n         case 2: *((short*) (dd - 2)) = *((short*) (ss - 2));\n             break;\n         case 65: *((int*) (dd - 65)) = *((int*) (ss - 65));\n-        /* no break */\n+            /* no break */\n         case 61: *((int*) (dd - 61)) = *((int*) (ss - 61));\n-        /* no break */\n+            /* no break */\n         case 57: *((int*) (dd - 57)) = *((int*) (ss - 57));\n-        /* no break */\n+            /* no break */\n         case 53: *((int*) (dd - 53)) = *((int*) (ss - 53));\n-        /* no break */\n+            /* no break */\n         case 49: *((int*) (dd - 49)) = *((int*) (ss - 49));\n-        /* no break */\n+            /* no break */\n         case 45: *((int*) (dd - 45)) = *((int*) (ss - 45));\n-        /* no break */\n+            /* no break */\n         case 41: *((int*) (dd - 41)) = *((int*) (ss - 41));\n-        /* no break */\n+            /* no break */\n         case 37: *((int*) (dd - 37)) = *((int*) (ss - 37));\n-        /* no break */\n+            /* no break */\n         case 33: *((int*) (dd - 33)) = *((int*) (ss - 33));\n-        /* no break */\n+            /* no break */\n         case 29: *((int*) (dd - 29)) = *((int*) (ss - 29));\n-        /* no break */\n+            /* no break */\n         case 25: *((int*) (dd - 25)) = *((int*) (ss - 25));\n-        /* no break */\n+            /* no break */\n         case 21: *((int*) (dd - 21)) = *((int*) (ss - 21));\n-        /* no break */\n+            /* no break */\n         case 17: *((int*) (dd - 17)) = *((int*) (ss - 17));\n-        /* no break */\n+            /* no break */\n         case 13: *((int*) (dd - 13)) = *((int*) (ss - 13));\n-        /* no break */\n+            /* no break */\n         case 9: *((int*) (dd - 9)) = *((int*) (ss - 9));\n-        /* no break */\n+            /* no break */\n         case 5: *((int*) (dd - 5)) = *((int*) (ss - 5));\n-        /* no break */\n+            /* no break */\n         case 1: dd[-1] = ss[-1];\n             break;\n         case 0:\n@@ -648,6 +651,7 @@ static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfE\n     //Initialize zend array\n     zend_ulong h, nIndex, max_index = 0;\n     uint32_t size = cp_zend_hash_check_size(nNumOfElements);\n+    CHECK_STEP;\n     if (!size)\n     {\n         return NULL;\n@@ -727,6 +731,7 @@ static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfE\n                     key_len = *((size_t*) buffer);\n                     buffer += sizeof (size_t);\n                 }\n+                CHECK_STEP;\n                 p->key = zend_string_init((char*) buffer, key_len, 0);\n                 //           h = zend_inline_hash_func((char*) buffer, key_len);\n                 h = zend_inline_hash_func((char*) buffer, key_len);\n@@ -804,6 +809,7 @@ static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfE\n                     data_len = *((size_t*) buffer);\n                     buffer += sizeof (size_t);\n                 }\n+                CHECK_STEP;\n                 p->val.value.str = zend_string_init((char*) buffer, data_len, 0);\n                 buffer += data_len;\n             }\n@@ -832,6 +838,7 @@ static void* swoole_unserialize_arr(void *buffer, zval *zvalue, uint32_t nNumOfE\n \n     }\n     ht->nNextFreeElement = max_index;\n+    CHECK_STEP;\n \n     return buffer;\n \n@@ -995,7 +1002,7 @@ static void swoole_serialize_arr(seriaString *buffer, zend_array *zvalue)\n \n                 if (GC_IS_RECURSIVE(ht))\n                 {\n-                    ((SBucketType*) (buffer->buffer + p))->data_type = IS_NULL;//reset type null\n+                    ((SBucketType*) (buffer->buffer + p))->data_type = IS_NULL; //reset type null\n                     php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"the array has cycle ref\");\n                 }\n                 else\n@@ -1077,6 +1084,7 @@ static CPINLINE void swoole_unserialize_raw(void *buffer, zval *zvalue)\n }\n \n #if 0\n+\n /*\n  * null\n  */\n@@ -1250,7 +1258,7 @@ static CPINLINE zend_class_entry* swoole_try_get_ce(zend_string *class_name)\n         zend_throw_exception_ex(NULL, 0, \"can not find class %s\", class_name->val TSRMLS_CC);\n         return NULL;\n     }\n-    \n+\n     zend_string *fname = swoole_string_init(ZEND_STRL(PG(unserialize_callback_func)));\n     Z_STR(user_func) = fname;\n     Z_TYPE_INFO(user_func) = IS_STRING_EX;\n@@ -1282,24 +1290,26 @@ static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uc\n     zval property;\n     uint32_t arr_num = 0;\n     size_t name_len = *((unsigned short*) buffer);\n+    CHECK_STEP;\n     if (!name_len)\n     {\n         php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"illegal unserialize data\");\n         return NULL;\n     }\n     buffer += 2;\n     zend_string *class_name;\n-    if (flag == UNSERIALIZE_OBJECT_TO_STDCLASS) \n+    if (flag == UNSERIALIZE_OBJECT_TO_STDCLASS)\n     {\n         class_name = swoole_string_init(ZEND_STRL(\"StdClass\"));\n-    } \n-    else \n+    }\n+    else\n     {\n         class_name = swoole_string_init((char*) buffer, name_len);\n     }\n     buffer += name_len;\n     zend_class_entry *ce = swoole_try_get_ce(class_name);\n     swoole_string_release(class_name);\n+    CHECK_STEP;\n \n     if (!ce)\n     {\n@@ -1311,11 +1321,10 @@ static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uc\n \n     object_init_ex(return_value, ce);\n \n-    zval *data,*d;\n+    zval *data, *d;\n     zend_string *key;\n     zend_ulong index;\n \n-    \n     ZEND_HASH_FOREACH_KEY_VAL(Z_ARRVAL(property), index, key, data)\n     {\n         const char *prop_name, *tmp;\n@@ -1337,8 +1346,8 @@ static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uc\n                 zend_unmangle_property_name_ex(key, &tmp, &prop_name, &prop_len);\n                 zend_update_property(ce, return_value, prop_name, prop_len, data);\n             }\n-//            zend_hash_update(Z_OBJPROP_P(return_value),key,data);\n-//            zend_update_property(ce, return_value, ZSTR_VAL(key), ZSTR_LEN(key), data);\n+            //            zend_hash_update(Z_OBJPROP_P(return_value),key,data);\n+            //            zend_update_property(ce, return_value, ZSTR_VAL(key), ZSTR_LEN(key), data);\n         }\n         else\n         {\n@@ -1388,7 +1397,7 @@ static void* swoole_unserialize_object(void *buffer, zval *return_value, zend_uc\n         swoole_string_release(fname);\n         zval_ptr_dtor(&ret);\n     }\n-\n+    CHECK_STEP;\n     return buffer;\n \n }\n@@ -1486,6 +1495,7 @@ PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value,\n {\n     SBucketType type = *(SBucketType*) (buffer);\n     zend_uchar real_type = type.data_type;\n+    unseri_buffer_end = buffer + len;\n     buffer += sizeof (SBucketType);\n     switch (real_type)\n     {\n@@ -1511,8 +1521,8 @@ PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value,\n         {\n             if (swoole_seria_check_eof(buffer, len) < 0)\n             {\n-                  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");\n-                  return SW_FALSE;\n+                php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");\n+                return SW_FALSE;\n             }\n             unser_start = buffer - sizeof (SBucketType);\n             uint32_t num = 0;\n@@ -1526,8 +1536,8 @@ PHPAPI int php_swoole_unserialize(void *buffer, size_t len, zval *return_value,\n         case IS_UNDEF:\n             if (swoole_seria_check_eof(buffer, len) < 0)\n             {\n-                  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");\n-                  return SW_FALSE;\n+                php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"detect the error eof\");\n+                return SW_FALSE;\n             }\n             unser_start = buffer - sizeof (SBucketType);\n             if (!swoole_unserialize_object(buffer, return_value, type.data_len, object_args, flag))"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "214334ffe66a023eadef8cd9cb09a593bf750ca2",
            "date": "2025-01-09T09:47:20Z",
            "author_login": "matyhtf"
          },
          {
            "sha": "3f78da5cc9f388262c609439882e7b758d317381",
            "date": "2025-01-08T11:36:35Z",
            "author_login": "matyhtf"
          },
          {
            "sha": "c8e2a6ce5ebc996bcdf8e6fd1090c62c704061e8",
            "date": "2025-01-08T10:33:12Z",
            "author_login": "NathanFreeman"
          },
          {
            "sha": "3b732c9461fa826f7bdcd6e67ae87fe7b77ad309",
            "date": "2025-01-08T07:23:15Z",
            "author_login": "matyhtf"
          },
          {
            "sha": "58c870f0476816ac586343c302c143c68c03e385",
            "date": "2025-01-07T10:08:31Z",
            "author_login": "matyhtf"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-502",
    "description": "The unpack implementation in Swoole version 4.0.4 lacks correct size checks in the deserialization process. An attacker can craft a serialized object to exploit this vulnerability and cause a SEGV.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-08-18T02:29:01.903",
    "last_modified": "2024-11-21T03:50:57.260",
    "fix_date": "2018-08-15T11:21:06Z"
  },
  "references": [
    {
      "url": "https://github.com/swoole/swoole-src/commit/4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/swoole/swoole-src/issues/1882",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://x-c3ll.github.io/posts/swoole-deserialization-cve-2018-15503/",
      "source": "cve@mitre.org",
      "tags": [
        "Technical Description",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swoole/swoole-src/commit/4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/swoole/swoole-src/issues/1882",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://x-c3ll.github.io/posts/swoole-deserialization-cve-2018-15503/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Technical Description",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:32.442076",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "swoole-src",
    "owner": "swoole",
    "created_at": "2012-07-21T13:49:59Z",
    "updated_at": "2025-01-14T09:51:15Z",
    "pushed_at": "2025-01-09T09:47:26Z",
    "size": 53231,
    "stars": 18532,
    "forks": 3163,
    "open_issues": 89,
    "watchers": 18532,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C++": 3805702,
      "PHP": 2450730,
      "C": 206814,
      "M4": 51060,
      "Shell": 17960,
      "CMake": 9084,
      "PLpgSQL": 4955,
      "Python": 3155,
      "Go": 620,
      "Makefile": 618,
      "JavaScript": 372
    },
    "commit_activity": {
      "total_commits_last_year": 249,
      "avg_commits_per_week": 4.788461538461538,
      "days_active_last_year": 101
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T17:05:35.407483"
  }
}