{
  "cve_id": "CVE-2018-16974",
  "github_data": {
    "repository": "jbroadway/elefant",
    "fix_commit": "49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0",
    "related_commits": [
      "49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0",
      "49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0",
      "commit_date": "2018-09-11T07:13:26Z",
      "author": {
        "login": "lux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed filemanager file upload validations, re: #287",
        "length": 51,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 22,
        "deletions": 17
      },
      "files": [
        {
          "filename": "apps/filemanager/handlers/embed.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -110,7 +110,9 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\tif (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_POST['newName'])) {\n+\t\t$_POST['newName'] = trim ($_POST['newName']);\n+\t\t\n+\t\tif (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_POST['newName'])) {\n \t\t\techo __ ('Invalid file type');\n \t\t\treturn;\n \t\t}"
        },
        {
          "filename": "apps/filemanager/handlers/redactor/upload.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -41,9 +41,9 @@\n }\n \n // some browsers may urlencode the file name\n-$_FILES['file']['name'] = urldecode ($_FILES['file']['name']);\n+$_FILES['file']['name'] = trim (urldecode ($_FILES['file']['name']));\n \n-if (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'])) {\n+if (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'])) {\n \techo json_encode (array ('error' => __ ('Cannot upload executable files due to security.')));\n \treturn;\n }"
        },
        {
          "filename": "apps/filemanager/handlers/upload.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -49,7 +49,7 @@\n }\n \n for ($i = 0; $i < count ($_FILES['file']['name']); $i++) {\n-\t$_FILES['file']['name'][$i] = urldecode ($_FILES['file']['name'][$i]);\n+\t$_FILES['file']['name'][$i] = trim (urldecode ($_FILES['file']['name'][$i]));\n \tif (@file_exists ($root . $_POST['path'] . '/' . $_FILES['file']['name'][$i])) {\n \t\t$page->title = __ ('File Already Exists') . ': ' . $_FILES['file']['name'][$i];\n \t\techo '<p>' . __ ('A file by that name already exists.') . '</p>';\n@@ -62,7 +62,7 @@\n \t\techo '<p><a href=\"/filemanager\">' . __ ('Back') . '</a></p>';\n \t\treturn;\n \t}\n-\tif (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'][$i])) {\n+\tif (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'][$i])) {\n \t\t$page->title = __ ('Invalid File Name') . ': ' . $_FILES['file']['name'][$i];\n \t\techo '<p>' . __ ('Cannot upload executable files due to security.') . '</p>';\n \t\techo '<p><a href=\"/filemanager\">' . __ ('Back') . '</a></p>';"
        },
        {
          "filename": "apps/filemanager/handlers/upload/drop.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -45,9 +45,9 @@\n }\n \n // some browsers may urlencode the file name\n-$_FILES['file']['name'] = urldecode ($_FILES['file']['name']);\n+$_FILES['file']['name'] = trim (urldecode ($_FILES['file']['name']));\n \n-if (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'])) {\n+if (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'])) {\n \techo json_encode (array ('success' => false, 'error' => __ ('Cannot upload executable files due to security.')));\n \treturn;\n }"
        },
        {
          "filename": "apps/filemanager/lib/API.php",
          "status": "modified",
          "additions": 9,
          "deletions": 9,
          "patch": "@@ -13,7 +13,7 @@ class API extends Restful {\n \t * Handle list directory requests (/filemanager/api/ls).\n \t */\n \tpublic function get_ls () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \n \t\t$res = FileManager::dir ($file);\n \t\tif (! $res) {\n@@ -43,7 +43,7 @@ public function get_dirs () {\n \t * Handle Bitly link requests (/filemanager/api/bitly).\n \t */\n \tpublic function get_bitly () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \t\t$link = $this->controller->absolutize ('/files/' . $file);\n \t\treturn BitlyLink::lookup ($link);\n \t}\n@@ -52,7 +52,7 @@ public function get_bitly () {\n \t * Handle remove file requests (/filemanager/api/rm).\n \t */\n \tpublic function post_rm () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \n \t\t$res = FileManager::unlink ($file);\n \t\tif (! $res) {\n@@ -71,7 +71,7 @@ public function post_rm () {\n \t * Note: Erases the contents of the folder as well.\n \t */\n \tpublic function post_rmdir () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \n \t\t$res = FileManager::rmdir ($file, true);\n \t\tif (! $res) {\n@@ -89,7 +89,7 @@ public function post_rmdir () {\n \t * Handle rename requests (/filemanager/api/mv).\n \t */\n \tpublic function post_mv () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \n \t\t$is_folder = FileManager::verify_folder ($file) ? true : false;\n \t\t\n@@ -114,7 +114,7 @@ public function post_mv () {\n \t * folders.\n \t */\n \tpublic function post_drop () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \t\t\n \t\tif (! FileManager::move ($file, $_POST['folder'])) {\n \t\t\treturn $this->error (FileManager::error ());\n@@ -133,7 +133,7 @@ public function post_drop () {\n \t * Handle make directory requests (/filemanager/api/mkdir).\n \t */\n \tpublic function post_mkdir () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \t\t\n \t\tif (! FileManager::mkdir ($file)) {\n \t\t\treturn $this->error (FileManager::error ());\n@@ -153,7 +153,7 @@ public function post_mkdir () {\n \t * be used to set an individual property's value.\n \t */\n \tpublic function post_prop () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \t\tif (! FileManager::verify_file ($file)) {\n \t\t\treturn $this->error (__ ('Invalid file name'));\n \t\t}\n@@ -200,7 +200,7 @@ public function post_prop () {\n \t * Handle unzip requests via (/filemanager/api/unzip).\n \t */\n \tpublic function post_unzip () {\n-\t\t$file = urldecode (join ('/', func_get_args ()));\n+\t\t$file = trim (urldecode (join ('/', func_get_args ())));\n \t\tif (! FileManager::verify_file ($file)) {\n \t\t\treturn $this->error (__ ('Invalid file name'));\n \t\t}"
        },
        {
          "filename": "apps/filemanager/lib/FileManager.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -160,6 +160,9 @@ public static function unlink ($file) {\n \t\t} elseif (! self::verify_file ($file)) {\n \t\t\tself::$error = __ ('File not found');\n \t\t\treturn false;\n+\t\t} elseif (! self::verify_file_name ($file)) {\n+\t\t\tself::$error = __ ('Invalid file name');\n+\t\t\treturn false;\n \t\t} elseif (! unlink (self::root () . $file)) {\n \t\t\tself::$error = __ ('Unable to delete') . ' ' . $file;\n \t\t\treturn false;\n@@ -405,7 +408,7 @@ public static function verify_file_name ($name) {\n \t\tif (! preg_match ('/^[a-zA-Z0-9 _-]+\\.[a-zA-Z0-9_-]+$/', $name)) {\n \t\t\treturn false;\n \t\t}\n-\t\tif (preg_match ('/\\.php$/i', $name)) {\n+\t\tif (preg_match ('/\\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $name)) {\n \t\t\treturn false;\n \t\t}\n \t\treturn true;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2e5d751e9521f1fcf30f964357761c090645d667",
            "date": "2024-10-16T15:59:21Z",
            "author_login": "lux"
          },
          {
            "sha": "6876e60a8c3f81e23bc8619101510a63d078c59d",
            "date": "2024-10-16T15:56:29Z",
            "author_login": "lux"
          },
          {
            "sha": "bfbf7b4d1d00afa7a00fd3105fdc635e220bb83f",
            "date": "2024-10-16T15:56:20Z",
            "author_login": "lux"
          },
          {
            "sha": "76b595ceba2d13ebc8b0dccad4b8a204748c7e93",
            "date": "2024-10-16T15:55:16Z",
            "author_login": "lux"
          },
          {
            "sha": "9fa37d5a6f7cdec1c73525c8fc72eefb1db798fd",
            "date": "2024-02-15T06:46:50Z",
            "author_login": "lux"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-434",
    "description": "An issue was discovered in Elefant CMS before 2.0.7. There is a PHP Code Execution Vulnerability in apps/filemanager/upload/drop.php by using /filemanager/api/rm/.htaccess to remove the .htaccess file, and then using a filename that ends in .php followed by space characters (for bypassing the blacklist).",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-09-12T21:29:00.613",
    "last_modified": "2024-11-21T03:53:37.520",
    "fix_date": "2018-09-11T07:13:26Z"
  },
  "references": [
    {
      "url": "https://github.com/jbroadway/elefant/commit/49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jbroadway/elefant/issues/287",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jbroadway/elefant/releases/tag/elefant_2_0_7_stable",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/jbroadway/elefant/commit/49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jbroadway/elefant/issues/287",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jbroadway/elefant/releases/tag/elefant_2_0_7_stable",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:35.812721",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "elefant",
    "owner": "jbroadway",
    "created_at": "2011-05-04T18:43:58Z",
    "updated_at": "2024-12-12T14:20:42Z",
    "pushed_at": "2024-10-16T15:59:21Z",
    "size": 18797,
    "stars": 210,
    "forks": 39,
    "open_issues": 35,
    "watchers": 210,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 2484775,
      "JavaScript": 2001040,
      "HTML": 630287,
      "CSS": 194608,
      "SCSS": 39308,
      "PLpgSQL": 27578,
      "CoffeeScript": 2266,
      "Makefile": 895,
      "Shell": 267
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:12:47.776716"
  }
}