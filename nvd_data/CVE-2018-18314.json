{
  "cve_id": "CVE-2018-18314",
  "github_data": {
    "repository": "Perl/perl5",
    "fix_commit": "19a498a461d7c81ae3507c450953d1148efecf4f",
    "related_commits": [
      "19a498a461d7c81ae3507c450953d1148efecf4f",
      "19a498a461d7c81ae3507c450953d1148efecf4f"
    ],
    "patch_url": "https://github.com/Perl/perl5/commit/19a498a461d7c81ae3507c450953d1148efecf4f.patch",
    "fix_commit_details": {
      "sha": "19a498a461d7c81ae3507c450953d1148efecf4f",
      "commit_date": "2017-06-26T11:19:55Z",
      "author": {
        "login": "demerphq",
        "type": "User",
        "stats": {
          "total_commits": 1381,
          "average_weekly_commits": 0.9400953029271614,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 263
        }
      },
      "commit_message": {
        "title": "fix #131649 - extended charclass can trigger assert",
        "length": 342,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 100,
        "additions": 68,
        "deletions": 32
      },
      "files": [
        {
          "filename": "pod/perldiag.pod",
          "status": "modified",
          "additions": 26,
          "deletions": 1,
          "patch": "@@ -5945,7 +5945,7 @@ yourself.\n a perl4 interpreter, especially if the next 2 tokens are \"use strict\"\n or \"my $var\" or \"our $var\".\n \n-=item Syntax error in (?[...]) in regex m/%s/\n+=item Syntax error in (?[...]) in regex; marked by <-- HERE in m/%s/\n \n (F) Perl could not figure out what you meant inside this construct; this\n notifies you that it is giving up trying.\n@@ -6441,6 +6441,31 @@ to find out why that isn't happening.\n (F) The unexec() routine failed for some reason.  See your local FSF\n representative, who probably put it there in the first place.\n \n+=item Unexpected ']' with no following ')' in (?[... in regex; marked by <-- HERE in m/%s/\n+\n+(F) While parsing an extended character class a ']' character was encountered\n+at a point in the definition where the only legal use of ']' is to close the\n+character class definition as part of a '])', you may have forgotten the close\n+paren, or otherwise confused the parser.\n+\n+=item Expecting close paren for nested extended charclass in regex; marked by <-- HERE in m/%s/\n+\n+(F) While parsing a nested extended character class like:\n+\n+    (?[ ... (?flags:(?[ ... ])) ... ])\n+                             ^\n+\n+we expected to see a close paren ')' (marked by ^) but did not.\n+\n+=item Expecting close paren for wrapper for nested extended charclass in regex; marked by <-- HERE in m/%s/\n+\n+(F) While parsing a nested extended character class like:\n+\n+    (?[ ... (?flags:(?[ ... ])) ... ])\n+                              ^\n+\n+we expected to see a close paren ')' (marked by ^) but did not.\n+\n =item Unexpected binary operator '%c' with no preceding operand in regex;\n marked by S<<-- HERE> in m/%s/\n "
        },
        {
          "filename": "pod/perlrecharclass.pod",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1128,8 +1128,8 @@ hence both of the following work:\n Any contained POSIX character classes, including things like C<\\w> and C<\\D>\n respect the C<E<sol>a> (and C<E<sol>aa>) modifiers.\n \n-C<< (?[ ]) >> is a regex-compile-time construct.  Any attempt to use\n-something which isn't knowable at the time the containing regular\n+Note that C<< (?[ ]) >> is a regex-compile-time construct.  Any attempt\n+to use something which isn't knowable at the time the containing regular\n expression is compiled is a fatal error.  In practice, this means\n just three limitations:\n "
        },
        {
          "filename": "regcomp.c",
          "status": "modified",
          "additions": 18,
          "deletions": 10,
          "patch": "@@ -14947,8 +14947,9 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,\n                                     TRUE /* Force /x */ );\n \n             switch (*RExC_parse) {\n-                case '?':\n-                    if (RExC_parse[1] == '[') nest_depth++, RExC_parse++;\n+                case '(':\n+                    if (RExC_parse[1] == '?' && RExC_parse[2] == '[')\n+                        nest_depth++, RExC_parse+=2;\n                     /* FALLTHROUGH */\n                 default:\n                     break;\n@@ -15005,9 +15006,9 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,\n                 }\n \n                 case ']':\n-                    if (nest_depth--) break;\n-                    RExC_parse++;\n-                    if (*RExC_parse == ')') {\n+                    if (RExC_parse[1] == ')') {\n+                        RExC_parse++;\n+                        if (nest_depth--) break;\n                         node = reganode(pRExC_state, ANYOF, 0);\n                         RExC_size += ANYOF_SKIP;\n                         nextchar(pRExC_state);\n@@ -15019,20 +15020,25 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,\n \n                         return node;\n                     }\n-                    goto no_close;\n+                    /* We output the messages even if warnings are off, because we'll fail\n+                     * the very next thing, and these give a likely diagnosis for that */\n+                    if (posix_warnings && av_tindex_skip_len_mg(posix_warnings) >= 0) {\n+                        output_or_return_posix_warnings(pRExC_state, posix_warnings, NULL);\n+                    }\n+                    RExC_parse++;\n+                    vFAIL(\"Unexpected ']' with no following ')' in (?[...\");\n             }\n \n             RExC_parse += UTF ? UTF8SKIP(RExC_parse) : 1;\n         }\n \n-      no_close:\n         /* We output the messages even if warnings are off, because we'll fail\n          * the very next thing, and these give a likely diagnosis for that */\n         if (posix_warnings && av_tindex_skip_len_mg(posix_warnings) >= 0) {\n             output_or_return_posix_warnings(pRExC_state, posix_warnings, NULL);\n         }\n \n-        FAIL(\"Syntax error in (?[...])\");\n+        vFAIL(\"Syntax error in (?[...])\");\n     }\n \n     /* Pass 2 only after this. */\n@@ -15212,12 +15218,14 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,\n                      * inversion list, and RExC_parse points to the trailing\n                      * ']'; the next character should be the ')' */\n                     RExC_parse++;\n-                    assert(UCHARAT(RExC_parse) == ')');\n+                    if (UCHARAT(RExC_parse) != ')')\n+                        vFAIL(\"Expecting close paren for nested extended charclass\");\n \n                     /* Then the ')' matching the original '(' handled by this\n                      * case: statement */\n                     RExC_parse++;\n-                    assert(UCHARAT(RExC_parse) == ')');\n+                    if (UCHARAT(RExC_parse) != ')')\n+                        vFAIL(\"Expecting close paren for wrapper for nested extended charclass\");\n \n                     RExC_parse++;\n                     RExC_flags = save_flags;"
        },
        {
          "filename": "t/lib/warnings/regcomp",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -59,21 +59,21 @@ Unmatched [ in regex; marked by <-- HERE in m/abc[ <-- HERE \ufb01[.00./ at - line\n qr/(?[[[:word]]])/;\n EXPECT\n Assuming NOT a POSIX class since there is no terminating ':' in regex; marked by <-- HERE in m/(?[[[:word <-- HERE ]]])/ at - line 2.\n-syntax error in (?[...]) in regex m/(?[[[:word]]])/ at - line 2.\n+Unexpected ']' with no following ')' in (?[... in regex; marked by <-- HERE in m/(?[[[:word]] <-- HERE ])/ at - line 2.\n ########\n # NAME qr/(?[ [[:digit: ])/\n # OPTION fatal\n qr/(?[[[:digit: ])/;\n EXPECT\n Assuming NOT a POSIX class since no blanks are allowed in one in regex; marked by <-- HERE in m/(?[[[:digit: ] <-- HERE )/ at - line 2.\n-syntax error in (?[...]) in regex m/(?[[[:digit: ])/ at - line 2.\n+syntax error in (?[...]) in regex; marked by <-- HERE in m/(?[[[:digit: ]) <-- HERE / at - line 2.\n ########\n # NAME qr/(?[ [:digit: ])/\n # OPTION fatal\n qr/(?[[:digit: ])/\n EXPECT\n Assuming NOT a POSIX class since no blanks are allowed in one in regex; marked by <-- HERE in m/(?[[:digit: ] <-- HERE )/ at - line 2.\n-syntax error in (?[...]) in regex m/(?[[:digit: ])/ at - line 2.\n+syntax error in (?[...]) in regex; marked by <-- HERE in m/(?[[:digit: ]) <-- HERE / at - line 2.\n ########\n # NAME [perl #126141]\n # OPTION fatal"
        },
        {
          "filename": "t/re/reg_mesg.t",
          "status": "modified",
          "additions": 16,
          "deletions": 13,
          "patch": "@@ -234,8 +234,9 @@ my @death =\n  '/\\b{gc}/' => \"'gc' is an unknown bound type {#} m/\\\\b{gc{#}}/\",\n  '/\\B{gc}/' => \"'gc' is an unknown bound type {#} m/\\\\B{gc{#}}/\",\n \n- '/(?[[[::]]])/' => \"Syntax error in (?[...]) in regex m/(?[[[::]]])/\",\n- '/(?[[[:w:]]])/' => \"Syntax error in (?[...]) in regex m/(?[[[:w:]]])/\",\n+\n+ '/(?[[[::]]])/' => \"Unexpected ']' with no following ')' in (?[... {#} m/(?[[[::]]{#}])/\",\n+ '/(?[[[:w:]]])/' => \"Unexpected ']' with no following ')' in (?[... {#} m/(?[[[:w:]]{#}])/\",\n  '/(?[[:w:]])/' => \"\",\n  '/([.].*)[.]/'   => \"\",    # [perl #127582]\n  '/[.].*[.]/'     => \"\",    # [perl #127604]\n@@ -258,11 +259,12 @@ my @death =\n  '/(?[ \\p{foo} ])/' => 'Can\\'t find Unicode property definition \"foo\" {#} m/(?[ \\p{foo}{#} ])/',\n  '/(?[ \\p{ foo = bar } ])/' => 'Can\\'t find Unicode property definition \"foo = bar\" {#} m/(?[ \\p{ foo = bar }{#} ])/',\n  '/(?[ \\8 ])/' => 'Unrecognized escape \\8 in character class {#} m/(?[ \\8{#} ])/',\n- '/(?[ \\t ]/' => 'Syntax error in (?[...]) in regex m/(?[ \\t ]/',\n- '/(?[ [ \\t ]/' => 'Syntax error in (?[...]) in regex m/(?[ [ \\t ]/',\n- '/(?[ \\t ] ]/' => 'Syntax error in (?[...]) in regex m/(?[ \\t ] ]/',\n- '/(?[ [ ] ]/' => 'Syntax error in (?[...]) in regex m/(?[ [ ] ]/',\n- '/(?[ \\t + \\e # This was supposed to be a comment ])/' => 'Syntax error in (?[...]) in regex m/(?[ \\t + \\e # This was supposed to be a comment ])/',\n+ '/(?[ \\t ]/' => \"Unexpected ']' with no following ')' in (?[... {#} m/(?[ \\\\t ]{#}/\",\n+ '/(?[ [ \\t ]/' => \"Syntax error in (?[...]) {#} m/(?[ [ \\\\t ]{#}/\",\n+ '/(?[ \\t ] ]/' => \"Unexpected ']' with no following ')' in (?[... {#} m/(?[ \\\\t ]{#} ]/\",\n+ '/(?[ [ ] ]/' => \"Syntax error in (?[...]) {#} m/(?[ [ ] ]{#}/\",\n+ '/(?[ \\t + \\e # This was supposed to be a comment ])/' =>\n+    \"Syntax error in (?[...]) {#} m/(?[ \\\\t + \\\\e # This was supposed to be a comment ]){#}/\",\n  '/(?[ ])/' => 'Incomplete expression within \\'(?[ ])\\' {#} m/(?[ {#}])/',\n  'm/(?[[a-\\d]])/' => 'False [] range \"a-\\d\" {#} m/(?[[a-\\d{#}]])/',\n  'm/(?[[\\w-x]])/' => 'False [] range \"\\w-\" {#} m/(?[[\\w-{#}x]])/',\n@@ -452,10 +454,10 @@ my @death_utf8 = mark_as_utf8(\n \n  '/\u30cd\\p{}\u30cd/' => 'Empty \\p{} {#} m/\u30cd\\p{{#}}\u30cd/',\n \n- '/\u30cd(?[[[:\u30cd]]])\u30cd/' => \"Syntax error in (?[...]) in regex m/\u30cd(?[[[:\u30cd]]])\u30cd/\",\n- '/\u30cd(?[[[:\u30cd: ])\u30cd/' => \"Syntax error in (?[...]) in regex m/\u30cd(?[[[:\u30cd: ])\u30cd/\",\n- '/\u30cd(?[[[::]]])\u30cd/' => \"Syntax error in (?[...]) in regex m/\u30cd(?[[[::]]])\u30cd/\",\n- '/\u30cd(?[[[:\u30cd:]]])\u30cd/' => \"Syntax error in (?[...]) in regex m/\u30cd(?[[[:\u30cd:]]])\u30cd/\",\n+ '/\u30cd(?[[[:\u30cd]]])\u30cd/' => \"Unexpected ']' with no following ')' in (?[... {#} m/\u30cd(?[[[:\u30cd]]{#}])\u30cd/\",\n+ '/\u30cd(?[[[:\u30cd: ])\u30cd/' => \"Syntax error in (?[...]) {#} m/\u30cd(?[[[:\u30cd: ])\u30cd{#}/\",\n+ '/\u30cd(?[[[::]]])\u30cd/' => \"Unexpected ']' with no following ')' in (?[... {#} m/\u30cd(?[[[::]]{#}])\u30cd/\",\n+ '/\u30cd(?[[[:\u30cd:]]])\u30cd/' => \"Unexpected ']' with no following ')' in (?[... {#} m/\u30cd(?[[[:\u30cd:]]{#}])\u30cd/\",\n  '/\u30cd(?[[:\u30cd:]])\u30cd/' => \"\",\n  '/\u30cd(?[\u30cd])\u30cd/' =>  'Unexpected character {#} m/\u30cd(?[\u30cd{#}])\u30cd/',\n  '/\u30cd(?[ + [\u30cd] ])/' => 'Unexpected binary operator \\'+\\' with no preceding operand {#} m/\u30cd(?[ +{#} [\u30cd] ])/',\n@@ -468,8 +470,9 @@ my @death_utf8 = mark_as_utf8(\n  '/(?[ \\x{\u30cd} ])\u30cd/' => 'Non-hex character {#} m/(?[ \\x{\u30cd{#}} ])\u30cd/',\n  '/(?[ \\p{\u30cd} ])/' => 'Can\\'t find Unicode property definition \"\u30cd\" {#} m/(?[ \\p{\u30cd}{#} ])/',\n  '/(?[ \\p{ \u30cd = bar } ])/' => 'Can\\'t find Unicode property definition \"\u30cd = bar\" {#} m/(?[ \\p{ \u30cd = bar }{#} ])/',\n- '/\u30cd(?[ \\t ]/' => 'Syntax error in (?[...]) in regex m/\u30cd(?[ \\t ]/',\n- '/(?[ \\t + \\e # \u30cd This was supposed to be a comment ])/' => 'Syntax error in (?[...]) in regex m/(?[ \\t + \\e # \u30cd This was supposed to be a comment ])/',\n+ '/\u30cd(?[ \\t ]/' => \"Unexpected ']' with no following ')' in (?[... {#} m/\u30cd(?[ \\\\t ]{#}/\",\n+ '/(?[ \\t + \\e # \u30cd This was supposed to be a comment ])/' =>\n+    \"Syntax error in (?[...]) {#} m/(?[ \\\\t + \\\\e # \u30cd This was supposed to be a comment ]){#}/\",\n  'm/(*\u30cd)\u30cd/' => q<Unknown verb pattern '\u30cd' {#} m/(*\u30cd){#}\u30cd/>,\n  '/\\c\u30cd/' => \"Character following \\\"\\\\c\\\" must be printable ASCII\",\n  '/\\b{\u30cd}/' => \"'\u30cd' is an unknown bound type {#} m/\\\\b{\u30cd{#}}/\","
        },
        {
          "filename": "t/re/regex_sets.t",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -158,13 +158,13 @@ for my $char (\"\u0660\", \"\u0665\", \"\u0669\") {\n \teval { $_ = '/(?[(\\c]) /'; qr/$_/ };\n \tlike($@, qr/^Syntax error/, '/(?[(\\c]) / should not panic');\n \teval { $_ = '(?[\\c#]' . \"\\n])\"; qr/$_/ };\n-\tlike($@, qr/^Syntax error/, '/(?[(\\c]) / should not panic');\n+\tlike($@, qr/^Unexpected/, '/(?[(\\c]) / should not panic');\n \teval { $_ = '(?[(\\c])'; qr/$_/ };\n \tlike($@, qr/^Syntax error/, '/(?[(\\c])/ should be a syntax error');\n \teval { $_ = '(?[(\\c]) ]\\b'; qr/$_/ };\n-\tlike($@, qr/^Syntax error/, '/(?[(\\c]) ]\\b/ should be a syntax error');\n+\tlike($@, qr/^Unexpected/, '/(?[(\\c]) ]\\b/ should be a syntax error');\n \teval { $_ = '(?[\\c[]](])'; qr/$_/ };\n-\tlike($@, qr/^Syntax error/, '/(?[\\c[]](])/ should be a syntax error');\n+\tlike($@, qr/^Unexpected/, '/(?[\\c[]](])/ should be a syntax error');\n \tlike(\"\\c#\", qr/(?[\\c#])/, '\\c# should match itself');\n \tlike(\"\\c[\", qr/(?[\\c[])/, '\\c[ should match itself');\n \tlike(\"\\c\\ \", qr/(?[\\c\\])/, '\\c\\ should match itself');"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "61978476912ee303cc78e7bf09602a4b38f3d75e",
            "date": "2024-12-12T22:09:05Z",
            "author_login": "richardleach"
          },
          {
            "sha": "a3a7684e4cf709f359f6dc550a9712044d24cfec",
            "date": "2024-12-05T15:19:41Z",
            "author_login": "richardleach"
          },
          {
            "sha": "cdbed2a40eb1292d5be2fd59c091cf78f6a4be69",
            "date": "2024-11-19T23:02:37Z",
            "author_login": "richardleach"
          },
          {
            "sha": "c107bb0b9c05a0ad0390ca4d42f0eaf567047bcd",
            "date": "2024-12-05T14:39:43Z",
            "author_login": "richardleach"
          },
          {
            "sha": "8282950bdf10676d19a19579594e95ab114da3d9",
            "date": "2025-01-13T18:47:15Z",
            "author_login": "khwilliamson"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-119",
    "description": "Perl before 5.26.3 has a buffer overflow via a crafted regular expression that triggers invalid write operations.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-12-07T21:29:00.920",
    "last_modified": "2024-11-21T03:55:41.367",
    "fix_date": "2017-06-26T11:19:55Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/106145",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1042181",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:0001",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:0010",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1646751",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Perl/perl5/commit/19a498a461d7c81ae3507c450953d1148efecf4f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RWQGEB543QN7SSBRKYJM6PSOC3RLYGSM/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://metacpan.org/changes/release/SHAY/perl-5.26.3",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://rt.perl.org/Ticket/Display.html?id=131649",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201909-01",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20190221-0003/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3834-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4347",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.securityfocus.com/bid/106145",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.securitytracker.com/id/1042181",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:0001",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:0010",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1646751",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Perl/perl5/commit/19a498a461d7c81ae3507c450953d1148efecf4f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RWQGEB543QN7SSBRKYJM6PSOC3RLYGSM/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://metacpan.org/changes/release/SHAY/perl-5.26.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://rt.perl.org/Ticket/Display.html?id=131649",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/201909-01",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20190221-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3834-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4347",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:42.168073",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "perl5",
    "owner": "Perl",
    "created_at": "2013-02-13T17:10:40Z",
    "updated_at": "2025-01-13T22:11:22Z",
    "pushed_at": "2025-01-13T22:11:17Z",
    "size": 348929,
    "stars": 2012,
    "forks": 560,
    "open_issues": 2322,
    "watchers": 2012,
    "has_security_policy": false,
    "default_branch": "blead",
    "protected_branches": [
      "blead"
    ],
    "languages": {
      "Perl": 28195339,
      "C": 11677742,
      "Shell": 1417210,
      "XS": 1235700,
      "DIGITAL Command Language": 232265,
      "C++": 201213,
      "Makefile": 136990,
      "Yacc": 54550,
      "PHP": 46851,
      "Roff": 26054,
      "Prolog": 24640,
      "Batchfile": 2696,
      "TeX": 1708,
      "DTrace": 491,
      "Emacs Lisp": 312
    },
    "commit_activity": {
      "total_commits_last_year": 1602,
      "avg_commits_per_week": 30.807692307692307,
      "days_active_last_year": 288
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:34.612146"
  }
}