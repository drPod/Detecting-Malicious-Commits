{
  "cve_id": "CVE-2018-19908",
  "github_data": {
    "repository": "MISP/MISP",
    "fix_commit": "211ac0737281b65e7da160f0aac52f401a94e1a3",
    "related_commits": [
      "211ac0737281b65e7da160f0aac52f401a94e1a3",
      "211ac0737281b65e7da160f0aac52f401a94e1a3"
    ],
    "patch_url": "https://github.com/MISP/MISP/commit/211ac0737281b65e7da160f0aac52f401a94e1a3.patch",
    "fix_commit_details": {
      "sha": "211ac0737281b65e7da160f0aac52f401a94e1a3",
      "commit_date": "2018-12-06T10:47:14Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": {
          "total_commits": 9407,
          "average_weekly_commits": 13.692867540029113,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "fix: [internal] Handle the upload of original versions of ingested files via a helper function instead of leaving it to external tools",
        "length": 134,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 70,
        "additions": 55,
        "deletions": 15
      },
      "files": [
        {
          "filename": "app/Model/Event.php",
          "status": "modified",
          "additions": 53,
          "deletions": 1,
          "patch": "@@ -5079,7 +5079,7 @@ public function upload_stix($user, $filename, $stix_version, $original_file)\n         } else {\n             throw new MethodNotAllowedException('Invalid STIX version');\n         }\n-        $shell_command .=  ' ' . $original_file . ' ' . escapeshellarg(Configure::read('MISP.default_event_distribution')) . ' ' . escapeshellarg(Configure::read('MISP.default_attribute_distribution')) . ' 2>' . APP . 'tmp/logs/exec-errors.log';\n+        $shell_command .=  ' ' . escapeshellarg(Configure::read('MISP.default_event_distribution')) . ' ' . escapeshellarg(Configure::read('MISP.default_attribute_distribution')) . ' 2>' . APP . 'tmp/logs/exec-errors.log';\n         $result = shell_exec($shell_command);\n         unlink($tempFilePath);\n         if (trim($result) == '1') {\n@@ -5090,6 +5090,7 @@ public function upload_stix($user, $filename, $stix_version, $original_file)\n             $validationIssues = false;\n             $result = $this->_add($data, true, $user, '', null, false, null, $created_id, $validationIssues);\n             if ($result) {\n+                $this->add_original_file($tempFilePath, $original_filename, $created_id, 'STIX 1.1');\n                 return $created_id;\n             }\n             return $validationIssues;\n@@ -5643,4 +5644,55 @@ private function __clusterEventIds($exportTool, $eventIds)\n         }\n         return $eventIdList;\n     }\n+\n+    public function add_original_file($file_path, $original_filename, $event_id, $format)\n+    {\n+        if (!Configure::check('MISP.default_attribute_distribution') || Configure::read('MISP.default_attribute_distribution') === 'event') {\n+            $distribution = 5;\n+        } else {\n+            $distribution = Configure::read('MISP.default_attribute_distribution');\n+        }\n+        $this->MispObject->create();\n+        $object = array(\n+            'name' => 'original-imported-file',\n+            'meta-category' => 'file',\n+            'description' => 'Object describing the original file used to import data in MISP.',\n+            'template_uuid' => '4cd560e9-2cfe-40a1-9964-7b2e797ecac5',\n+            'template_version' => '2',\n+            'event_id' => $event_id,\n+            'distribution' => $distribution\n+        );\n+        $this->MispObject->save($object);\n+        $object_id = $this->MispObject->id;\n+        $file = file_get_contents($file_path);\n+        $attributes = array(\n+            array(\n+                'type' => 'attachment',\n+                'category' => 'External analysis',\n+                'to_ids' => false,\n+                'event_id' => $event_id,\n+                'distribution' => $distribution,\n+                'object_relation' => 'imported-sample',\n+                'value' => $original_filename,\n+                'data' => base64_encode($file),\n+                'object_id' => $object_id,\n+            ),\n+            array(\n+                'type' => 'text',\n+                'category' => 'Other',\n+                'to_ids' => false,\n+                'uuid' => '5c08f00d-2174-4ab7-ad0d-1b1a011fb688',\n+                'event_id' => $event_id,\n+                'distribution' => $distribution,\n+                'object_id' => $object_id,\n+                'object_relation' => 'format',\n+                'value' => 'STIX 1.1'\n+            )\n+        );\n+        foreach ($attributes as $attribute) {\n+            $this->Attribute->create();\n+            $this->Attribute->save($attribute);\n+        }\n+        return true;\n+    }\n }"
        },
        {
          "filename": "app/files/scripts/stix2misp.py",
          "status": "modified",
          "additions": 2,
          "deletions": 14,
          "patch": "@@ -53,16 +53,14 @@ def __init__(self):\n     # Load data from STIX document, and other usefull data\n     def load_event(self, args, filename, from_misp, stix_version):\n         self.outputname = '{}.json'.format(filename)\n-        if len(args) > 0 and args[0]:\n-            self.add_original_file(filename, args[0], stix_version)\n         try:\n-            event_distribution = args[1]\n+            event_distribution = args[0]\n             if not isinstance(event_distribution, int):\n                 event_distribution = int(event_distribution) if event_distribution.isdigit() else 5\n         except IndexError:\n             event_distribution = 5\n         try:\n-            attribute_distribution = args[2]\n+            attribute_distribution = args[1]\n             if attribute_distribution == 'event':\n                 attribute_distribution = event_distribution\n             elif not isinstance(attribute_distribution, int):\n@@ -81,16 +79,6 @@ def saveFile(self):\n         with open(self.outputname, 'wt', encoding='utf-8') as f:\n             f.write(eventDict)\n \n-    def add_original_file(self, filename, original_filename, version):\n-        with open(filename, 'rb') as f:\n-            sample = base64.b64encode(f.read()).decode('utf-8')\n-        original_file = MISPObject('original-imported-file')\n-        original_file.add_attribute(**{'type': 'attachment', 'value': original_filename,\n-                                       'object_relation': 'imported-sample', 'data': sample})\n-        original_file.add_attribute(**{'type': 'text', 'object_relation': 'format',\n-                                       'value': 'STIX {}'.format(version)})\n-        self.misp_event.add_object(**original_file)\n-\n     # Load the mapping dictionary for STIX object types\n     def load_mapping(self):\n         self.attribute_types_mapping = {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1da14f0253b2d853603bfb10e0c2b92aa27ecb6a",
            "date": "2025-01-13T07:57:22Z",
            "author_login": "iglocska"
          },
          {
            "sha": "439433b405ca829f33bf886e788be84c0870b6dc",
            "date": "2025-01-10T16:37:30Z",
            "author_login": "rubentroncon"
          },
          {
            "sha": "cd6d87caa2db4b6bbe65d7cdc2bd8d84bc7f0705",
            "date": "2025-01-10T13:37:21Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "9fd8c3f8d8ba83c31614b8f0614e50be4284147f",
            "date": "2025-01-10T09:35:18Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "7c23b9d94726723a38cfd48e5f6b2555f75c05fb",
            "date": "2025-01-10T09:43:37Z",
            "author_login": "chrisr3d"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-78",
    "description": "An issue was discovered in MISP 2.4.9x before 2.4.99. In app/Model/Event.php (the STIX 1 import code), an unescaped filename string is used to construct a shell command. This vulnerability can be abused by a malicious authenticated user to execute arbitrary commands by tweaking the original filename of the STIX import.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-12-06T16:29:00.290",
    "last_modified": "2024-11-21T03:58:47.737",
    "fix_date": "2018-12-06T10:47:14Z"
  },
  "references": [
    {
      "url": "https://github.com/MISP/MISP/commit/211ac0737281b65e7da160f0aac52f401a94e1a3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/releases/tag/v2.4.99",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/46401/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/211ac0737281b65e7da160f0aac52f401a94e1a3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/releases/tag/v2.4.99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/46401/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:42.163907",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "MISP",
    "owner": "MISP",
    "created_at": "2013-02-07T17:10:34Z",
    "updated_at": "2025-01-14T10:15:41Z",
    "pushed_at": "2025-01-13T08:23:44Z",
    "size": 158555,
    "stars": 5471,
    "forks": 1421,
    "open_issues": 2637,
    "watchers": 5471,
    "has_security_policy": false,
    "default_branch": "2.5",
    "protected_branches": [
      "2.4",
      "3.x"
    ],
    "languages": {
      "PHP": 9033432,
      "JavaScript": 1901843,
      "Python": 401628,
      "CSS": 156405,
      "Shell": 105142,
      "Perl": 6169,
      "Makefile": 759
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 231
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:59:29.252533"
  }
}