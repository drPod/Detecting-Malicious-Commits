{
  "cve_id": "CVE-2018-20149",
  "github_data": {
    "repository": "WordPress/WordPress",
    "fix_commit": "246a70bdbfac3bd45ff71c7941deef1bb206b19a",
    "related_commits": [
      "246a70bdbfac3bd45ff71c7941deef1bb206b19a",
      "246a70bdbfac3bd45ff71c7941deef1bb206b19a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "246a70bdbfac3bd45ff71c7941deef1bb206b19a",
      "commit_date": "2018-12-12T23:01:47Z",
      "author": {
        "login": "jeremyfelt",
        "type": "User",
        "stats": {
          "total_commits": 354,
          "average_weekly_commits": 0.5429447852760736,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 81
        }
      },
      "commit_message": {
        "title": "Media: Improve verification of MIME file types.",
        "length": 212,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 49,
        "additions": 42,
        "deletions": 7
      },
      "files": [
        {
          "filename": "wp-includes/functions.php",
          "status": "modified",
          "additions": 41,
          "deletions": 6,
          "patch": "@@ -2349,17 +2349,52 @@ function wp_check_filetype_and_ext( $file, $filename, $mimes = null ) {\n \t\t$real_mime = finfo_file( $finfo, $file );\n \t\tfinfo_close( $finfo );\n \n+\t\t// fileinfo often misidentifies obscure files as one of these types\n+\t\t$nonspecific_types = array(\n+\t\t\t'application/octet-stream',\n+\t\t\t'application/encrypted',\n+\t\t\t'application/CDFV2-encrypted',\n+\t\t\t'application/zip',\n+\t\t);\n+\n \t\t/*\n-\t\t * If $real_mime doesn't match what we're expecting, we need to do some extra\n-\t\t * vetting of application mime types to make sure this type of file is allowed.\n-\t\t * Other mime types are assumed to be safe, but should be considered unverified.\n+\t\t * If $real_mime doesn't match the content type we're expecting from the file's extension,\n+\t\t * we need to do some additional vetting. Media types and those listed in $nonspecific_types are\n+\t\t * allowed some leeway, but anything else must exactly match the real content type.\n \t\t */\n-\t\tif ( $real_mime && ( $real_mime !== $type ) && ( 0 === strpos( $real_mime, 'application' ) ) ) {\n-\t\t\t$allowed = get_allowed_mime_types();\n+\t\tif ( in_array( $real_mime, $nonspecific_types, true ) ) {\n+\t\t\t// File is a non-specific binary type. That's ok if it's a type that generally tends to be binary.\n+\t\t\tif ( !in_array( substr( $type, 0, strcspn( $type, '/' ) ), array( 'application', 'video', 'audio' ) ) ) {\n+\t\t\t\t$type = $ext = false;\n+\t\t\t}\n+\t\t} elseif ( 0 === strpos( $real_mime, 'video/' ) || 0 === strpos( $real_mime, 'audio/' ) ) {\n+\t\t\t/*\n+\t\t\t * For these types, only the major type must match the real value.\n+\t\t\t * This means that common mismatches are forgiven: application/vnd.apple.numbers is often misidentified as application/zip,\n+\t\t\t * and some media files are commonly named with the wrong extension (.mov instead of .mp4)\n+\t\t\t */\n \n-\t\t\tif ( ! in_array( $real_mime, $allowed ) ) {\n+\t\t\tif ( substr( $real_mime, 0, strcspn( $real_mime, '/' ) ) !== substr( $type, 0, strcspn( $type, '/' ) ) ) {\n+\t\t\t\t$type = $ext = false;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif ( $type !== $real_mime ) {\n+\t\t\t\t/*\n+\t\t\t\t * Everything else including image/* and application/*: \n+\t\t\t\t * If the real content type doesn't match the file extension, assume it's dangerous.\n+\t\t\t\t */\n \t\t\t\t$type = $ext = false;\n \t\t\t}\n+\n+\t\t}\n+\t}\n+\n+\t// The mime type must be allowed \n+\tif ( $type ) {\n+\t\t$allowed = get_allowed_mime_types();\n+\n+\t\tif ( ! in_array( $type, $allowed ) ) {\n+\t\t\t$type = $ext = false;\n \t\t}\n \t}\n "
        },
        {
          "filename": "wp-includes/version.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4,7 +4,7 @@\n  *\n  * @global string $wp_version\n  */\n-$wp_version = '5.0.1-alpha-43972';\n+$wp_version = '5.0.1-alpha-43988';\n \n /**\n  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cf2aebff7f24e3775678f5b5e70e58043021fecf",
            "date": "2025-01-25T23:51:24Z",
            "author_login": "audrasjb"
          },
          {
            "sha": "ffa50f3c7baa9b30335034c423a1dada4fba5be2",
            "date": "2025-01-25T17:11:23Z",
            "author_login": "audrasjb"
          },
          {
            "sha": "b74968d542e93ff5a9b088879cb4b2b06eb2602e",
            "date": "2025-01-25T14:34:20Z",
            "author_login": "SergeyBiryukov"
          },
          {
            "sha": "130a7a8567c1a13a9296abc9279f91dfc3e26dba",
            "date": "2025-01-25T14:12:19Z",
            "author_login": "audrasjb"
          },
          {
            "sha": "471cffffcc28c181524e5bf809f9efe2d96c99a2",
            "date": "2025-01-25T14:07:23Z",
            "author_login": "audrasjb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "In WordPress before 4.9.9 and 5.x before 5.0.1, when the Apache HTTP Server is used, authors could upload crafted files that bypass intended MIME type restrictions, leading to XSS, as demonstrated by a .jpg file without JPEG data.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-12-14T20:29:00.437",
    "last_modified": "2024-11-21T04:00:57.110",
    "fix_date": "2018-12-12T23:01:47Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/106220",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://codex.wordpress.org/Version_4.9.9",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/WordPress/WordPress/commit/246a70bdbfac3bd45ff71c7941deef1bb206b19a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2019/02/msg00019.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/support/wordpress-version/version-5-0-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wpvulndb.com/vulnerabilities/9175",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2019/dsa-4401",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.zdnet.com/article/wordpress-plugs-bug-that-led-to-google-indexing-some-user-passwords/",
      "source": "cve@mitre.org",
      "tags": [
        "Press/Media Coverage",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/106220",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://codex.wordpress.org/Version_4.9.9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/WordPress/WordPress/commit/246a70bdbfac3bd45ff71c7941deef1bb206b19a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2019/02/msg00019.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/news/2018/12/wordpress-5-0-1-security-release/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/support/wordpress-version/version-5-0-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wpvulndb.com/vulnerabilities/9175",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2019/dsa-4401",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.zdnet.com/article/wordpress-plugs-bug-that-led-to-google-indexing-some-user-passwords/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Press/Media Coverage",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:42.177256",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "WordPress",
    "owner": "WordPress",
    "created_at": "2011-12-01T07:05:17Z",
    "updated_at": "2025-01-25T23:52:13Z",
    "pushed_at": "2025-01-25T23:52:05Z",
    "size": 530651,
    "stars": 19812,
    "forks": 12704,
    "open_issues": 2,
    "watchers": 19812,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 20616593,
      "JavaScript": 5411354,
      "CSS": 4992383,
      "SCSS": 323898,
      "HTML": 48043
    },
    "commit_activity": {
      "total_commits_last_year": 1522,
      "avg_commits_per_week": 29.26923076923077,
      "days_active_last_year": 356
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:46:46.124114"
  }
}