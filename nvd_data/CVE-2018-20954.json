{
  "cve_id": "CVE-2018-20954",
  "github_data": {
    "repository": "mailpile/Mailpile",
    "fix_commit": "49b64f62ade9ade3dff9337c7bbc1171eab3d59e",
    "related_commits": [
      "49b64f62ade9ade3dff9337c7bbc1171eab3d59e",
      "49b64f62ade9ade3dff9337c7bbc1171eab3d59e"
    ],
    "patch_url": "https://github.com/mailpile/Mailpile/commit/49b64f62ade9ade3dff9337c7bbc1171eab3d59e.patch",
    "fix_commit_details": {
      "sha": "49b64f62ade9ade3dff9337c7bbc1171eab3d59e",
      "commit_date": "2018-09-21T16:17:11Z",
      "author": {
        "login": "JackDca",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "First working (but rough) version to omit revoked and disabled keys from",
        "length": 126,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 22,
        "additions": 19,
        "deletions": 3
      },
      "files": [
        {
          "filename": "mailpile/crypto/gpgi.py",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -810,6 +810,9 @@ def list_secret_keys(self, selectors=None):\n         # state when listing secret keys; it seems internally only the\n         # public key is disabled. This makes it hard for us to reason about\n         # which keys can actually be used, so we compensate...\n+        # *** FIXME JackDca 2018-09-21 - Above behaviour not seen in 2.1.18 if\n+        # --with-colons is used (but true for human-readable output) so this\n+        # code could be deleted.\n         list_keys = [\"--fingerprint\"]\n         for fprint in set(secret_keys):\n             list_keys += [\"--list-keys\", fprint]"
        },
        {
          "filename": "mailpile/plugins/crypto_gnupg.py",
          "status": "modified",
          "additions": 15,
          "deletions": 2,
          "patch": "@@ -387,11 +387,24 @@ class GPGKeyListSecret(Command):\n     \"\"\"List Secret GPG Keys\"\"\"\n     ORDER = ('', 0)\n     SYNOPSIS = (None, 'crypto/gpg/keylist/secret',\n-                'crypto/gpg/keylist/secret', '<address>')\n+                                    'crypto/gpg/keylist/secret', '[<check>]')\n     HTTP_CALLABLE = ('GET', )\n+    HTTP_QUERY_VARS = {'check': 'True to omit disabled, expired, revoked keys'}\n \n     def command(self):\n-        res = self._gnupg().list_secret_keys()\n+        args = list(self.args)\n+        if len(args) > 0:\n+            check = args[0]\n+        else:\n+            check = self.data.get('check', '')\n+        check = 'True' in check\n+        \n+        all = self._gnupg().list_secret_keys()\n+        if check:\n+            res = {fprint : all[fprint] for fprint in all\n+                if not (all[fprint]['revoked'] or all[fprint]['disabled'])}\n+        else:\n+            res = all\n         return self._success(\"Searched for secret keys\", res)\n \n "
        },
        {
          "filename": "shared-data/default-theme/html/profiles/account-form.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -714,7 +714,7 @@\n                 name=\"security-pgp-key\">\n           <option value=\"!CREATE:RSA2048\">{{_(\"Create a new 2048 bit RSA key\")}}</option>\n           <option value=\"!CREATE:RSA3072\" class=\"fpa-pgp-key-default\">{{_(\"Create a new 3072 bit RSA key\")}}</option>\n-        {%- set pgp_keys = mailpile('crypto/gpg/keylist/secret').result %}\n+        {%- set pgp_keys = mailpile('crypto/gpg/keylist/secret','True').result %}\n         {%- for fingerprint in pgp_keys -%}\n           {%- set key = pgp_keys[fingerprint] -%}\n           {%- for uid in key.uids %}"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "741e610f3e765f03bd0c452c92c6758280e7f99f",
            "date": "2023-11-01T17:23:18Z",
            "author_login": "BjarniRunar"
          },
          {
            "sha": "376204535bde6f010df038786b06d3ce4ad1d6d8",
            "date": "2023-10-27T06:49:05Z",
            "author_login": "fazledyn-or"
          },
          {
            "sha": "57ec943876ea6e6be6c3d08b5f16d0f3fe2593a6",
            "date": "2023-09-27T08:45:25Z",
            "author_login": "BjarniRunar"
          },
          {
            "sha": "39e4716184b0f293db992935a51d74def9b7d532",
            "date": "2023-09-15T04:42:29Z",
            "author_login": "munahaf"
          },
          {
            "sha": "f6542fb0cb3f5d05e2964baca4e41af4872237fe",
            "date": "2023-07-11T18:56:54Z",
            "author_login": "BjarniRunar"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-287",
    "description": "The \"Security and Privacy\" Encryption feature in Mailpile before 1.0.0rc4 does not exclude disabled, revoked, and expired keys.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2019-08-08T21:15:11.490",
    "last_modified": "2024-11-21T04:02:33.250",
    "fix_date": "2018-09-21T16:17:11Z"
  },
  "references": [
    {
      "url": "https://github.com/mailpile/Mailpile/commit/49b64f62ade9ade3dff9337c7bbc1171eab3d59e",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mailpile/Mailpile/compare/1.0.0rc3...1.0.0rc4",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mailpile/Mailpile/pull/2145",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mailpile/Mailpile/commit/49b64f62ade9ade3dff9337c7bbc1171eab3d59e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mailpile/Mailpile/compare/1.0.0rc3...1.0.0rc4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mailpile/Mailpile/pull/2145",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:54.836790",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Mailpile",
    "owner": "mailpile",
    "created_at": "2011-10-30T23:45:22Z",
    "updated_at": "2025-01-13T18:38:04Z",
    "pushed_at": "2023-11-01T17:23:19Z",
    "size": 25753,
    "stars": 8819,
    "forks": 1019,
    "open_issues": 1,
    "watchers": 8819,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 2290254,
      "JavaScript": 621597,
      "HTML": 467380,
      "CSS": 245394,
      "Less": 150091,
      "Shell": 28249,
      "Makefile": 11001,
      "Dockerfile": 810,
      "Ruby": 675,
      "Batchfile": 586,
      "Roff": 450
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:37:42.451042"
  }
}