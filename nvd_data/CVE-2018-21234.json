{
  "cve_id": "CVE-2018-21234",
  "github_data": {
    "repository": "oblac/jodd",
    "fix_commit": "9bffc3913aeb8472c11bb543243004b4b4376f16",
    "related_commits": [
      "9bffc3913aeb8472c11bb543243004b4b4376f16",
      "9bffc3913aeb8472c11bb543243004b4b4376f16"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9bffc3913aeb8472c11bb543243004b4b4376f16",
      "commit_date": "2018-08-17T16:32:20Z",
      "author": {
        "login": "igr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Added `allowClass` (closes #628)",
        "length": 32,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 69,
        "additions": 69,
        "deletions": 0
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -24,6 +24,7 @@ All notable changes to Jodd project are documented here.\n + **mail** - added custom properties.\n + **json** - added `onValue` callback for JSON serializer.\n + **json** - added `excludeEmpty` flag for JSON serializer.\n++ **json** - added `allowClass` for whitelisting class names.\n + **petite** - allow injection in the private fields of super types.\n \n "
        },
        {
          "filename": "jodd-json/src/main/java/jodd/json/JsonParser.java",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -36,6 +36,7 @@\n import jodd.util.UnsafeUtil;\n \n import java.math.BigInteger;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.List;\n@@ -307,6 +308,26 @@ public JsonParser withClassMetadata(final boolean useMetadata) {\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Adds a {@link jodd.util.Wildcard wildcard} pattern for white-listing classes.\n+\t * @see #setClassMetadataName(String)\n+\t */\n+\tpublic JsonParser allowClass(final String classPattern) {\n+\t\tif (super.classnameWhitelist == null) {\n+\t\t\tsuper.classnameWhitelist = new ArrayList<>();\n+\t\t}\n+\t\tclassnameWhitelist.add(classPattern);\n+\t\treturn this;\n+\t}\n+\n+\t/**\n+\t * Removes the whitelist of allowed classes.\n+\t * @see #setClassMetadataName(String)\n+\t */\n+\tpublic JsonParser allowAllClasses() {\n+\t\tclassnameWhitelist = null;\n+\t\treturn this;\n+\t}\n \n \t// ---------------------------------------------------------------- parse\n "
        },
        {
          "filename": "jodd-json/src/main/java/jodd/json/JsonParserBase.java",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -55,6 +55,7 @@ public abstract class JsonParserBase {\n \n \tprotected Supplier<Map> mapSupplier = HASMAP_SUPPLIER;\n \tprotected Supplier<List> listSupplier = ARRAYLIST_SUPPLIER;\n+\tprotected List<String> classnameWhitelist;\n \n \t/**\n \t * Creates new instance of {@link jodd.json.MapToBean}."
        },
        {
          "filename": "jodd-json/src/main/java/jodd/json/MapToBean.java",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -32,6 +32,7 @@\n import jodd.typeconverter.TypeConverterManager;\n import jodd.util.ClassLoaderUtil;\n import jodd.util.ClassUtil;\n+import jodd.util.Wildcard;\n \n import java.lang.reflect.InvocationTargetException;\n import java.util.HashMap;\n@@ -69,6 +70,8 @@ public Object map2bean(final Map map, Class targetType) {\n \t\t\t}\n \t\t}\n \t\telse {\n+\t\t\tcheckClassName(jsonParser.classnameWhitelist, className);\n+\n \t\t\ttry {\n \t\t\t\ttargetType = ClassLoaderUtil.loadClass(className);\n \t\t\t} catch (ClassNotFoundException cnfex) {\n@@ -145,6 +148,17 @@ else if (value instanceof Map) {\n \t\treturn target;\n \t}\n \n+\tprivate void checkClassName(final List<String> classnameWhitelist, final String className) {\n+\t\tif (classnameWhitelist == null) {\n+\t\t\treturn;\n+\t\t}\n+\t\tclassnameWhitelist.forEach(pattern -> {\n+\t\t\tif (!Wildcard.equalsOrMatch(className, pattern)) {\n+\t\t\t\tthrow new JsonException(\"Class can't be loaded as it is not whitelisted: \" + className);\n+\t\t\t}\n+\t\t});\n+\t}\n+\n \t/**\n \t * Converts type of all list elements to match the component type.\n \t */"
        },
        {
          "filename": "jodd-json/src/test/java/jodd/json/JSONDeserializerTest.java",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -62,6 +62,7 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.fail;\n \n@@ -709,6 +710,37 @@ void testPoint() {\n \t\t});\n \t}\n \n+\t@Test\n+\tvoid testPointWithException() {\n+\t\tJsonParser.Defaults.classMetadataName = \"__class\";\n+\t\tJsonSerializer.Defaults.classMetadataName = \"__class\";\n+\n+\t\tJsonParsers.forEachParser(jsonParser -> {\n+\t\t\tjsonParser.allowClass(\"notAllowed\");\n+\t\t\tfinal String json = new JsonSerializer().serialize(new Point2D.Float(1.0f, 2.0f));\n+\t\t\tassertThrows(JsonException.class, () -> {\n+\t\t\t\tjsonParser.parse(json);\n+\t\t\t});\n+\t\t\tjsonParser.allowAllClasses();\n+\t\t});\n+\t}\n+\n+\t@Test\n+\tvoid testPointWithoutExceptionWhitelisted() {\n+\t\tJsonParser.Defaults.classMetadataName = \"__class\";\n+\t\tJsonSerializer.Defaults.classMetadataName = \"__class\";\n+\n+\t\tJsonParsers.forEachParser(jsonParser -> {\n+\t\t\tjsonParser.allowClass(\"*.Point?D*\");\n+\t\t\tString json = new JsonSerializer().serialize(new Point2D.Float(1.0f, 2.0f));\n+\t\t\tPoint2D.Float point = jsonParser.parse(json);\n+\t\t\tassertEquals(1.0f, point.x, DELTA);\n+\t\t\tassertEquals(2.0f, point.y, DELTA);\n+\t\t\tjsonParser.allowAllClasses();\n+\t\t});\n+\t}\n+\n+\n \t@Test\n \tvoid testUnixEpoch() {\n \t\tJsonParsers.forEachParser(jsonParser -> {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3a0790e4d52be2b9c9db7675184c6fc3ad9b16dc",
            "date": "2023-11-04T07:40:40Z",
            "author_login": "igr"
          },
          {
            "sha": "64789830911f722d4ed0330edb95ab0bf9ae41dd",
            "date": "2022-06-20T15:49:51Z",
            "author_login": "lacinoire"
          },
          {
            "sha": "f039c7152445cd80f2234ce92cd7e97985ea3311",
            "date": "2022-02-19T10:54:37Z",
            "author_login": "igr"
          },
          {
            "sha": "d87151f78ebf7862177987511c22fb838a812598",
            "date": "2022-02-19T10:54:16Z",
            "author_login": "igr"
          },
          {
            "sha": "79cfdcf4ee9ae940ae8984ed3b989e7462bbd51c",
            "date": "2021-12-12T19:34:28Z",
            "author_login": "igr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-502",
    "description": "Jodd before 5.0.4 performs Deserialization of Untrusted JSON Data when setClassMetadataName is set.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-05-21T23:15:11.103",
    "last_modified": "2024-11-21T04:03:14.940",
    "fix_date": "2018-08-17T16:32:20Z"
  },
  "references": [
    {
      "url": "https://github.com/oblac/jodd/commit/9bffc3913aeb8472c11bb543243004b4b4376f16",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oblac/jodd/compare/v5.0.3...v5.0.4",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oblac/jodd/issues/628",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r0bacc701ab7105500a0ab2769270d18f332cb379e6a62ec7553f3327%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r157d01c96a2c10e7ceb3e005f42c52cfe87b11dd018935e1c4277433%40%3Cgitbox.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r317aec95c436848233047af7ecb3ce04ce446eb6031f981aef50df0d%40%3Cdev.drill.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r729bc1e0f367fe8a857ac8a14641dba284ac4cf5131edf483022cf59%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r965503b27d67a2d934e34fc1d088c9547d51d927c43b8b9bd9b7e695%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rc23200043872384e0fc48a4a4502f4c6b4b5ddc79ba4076414150d59%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rc85b650b4ad2c77d7c39c69824488e40dce6d0ebbb4204777d094375%40%3Cgitbox.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rd575d9877424a2d8776f5c2ff33bf3dc3382cd83f031d483f29c11ab%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdbb99b43334b59d3d3478d360c87e3235ba22edb1de7d39019194347%40%3Cissues.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdce006b282e56c5cc73cdf452c51c5097154d0503396d62f48abbeae%40%3Cgitbox.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rf458683390d6650b26a2c8ba8ad396e038e520ad1cc3f3f1e20514d9%40%3Cdev.hive.apache.org%3E",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/oblac/jodd/commit/9bffc3913aeb8472c11bb543243004b4b4376f16",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oblac/jodd/compare/v5.0.3...v5.0.4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/oblac/jodd/issues/628",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r0bacc701ab7105500a0ab2769270d18f332cb379e6a62ec7553f3327%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r157d01c96a2c10e7ceb3e005f42c52cfe87b11dd018935e1c4277433%40%3Cgitbox.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r317aec95c436848233047af7ecb3ce04ce446eb6031f981aef50df0d%40%3Cdev.drill.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r729bc1e0f367fe8a857ac8a14641dba284ac4cf5131edf483022cf59%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r965503b27d67a2d934e34fc1d088c9547d51d927c43b8b9bd9b7e695%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rc23200043872384e0fc48a4a4502f4c6b4b5ddc79ba4076414150d59%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rc85b650b4ad2c77d7c39c69824488e40dce6d0ebbb4204777d094375%40%3Cgitbox.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rd575d9877424a2d8776f5c2ff33bf3dc3382cd83f031d483f29c11ab%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdbb99b43334b59d3d3478d360c87e3235ba22edb1de7d39019194347%40%3Cissues.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdce006b282e56c5cc73cdf452c51c5097154d0503396d62f48abbeae%40%3Cgitbox.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rf458683390d6650b26a2c8ba8ad396e038e520ad1cc3f3f1e20514d9%40%3Cdev.hive.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:47.816786",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "jodd",
    "owner": "oblac",
    "created_at": "2012-09-07T20:26:48Z",
    "updated_at": "2025-01-21T12:50:23Z",
    "pushed_at": "2024-04-15T19:08:00Z",
    "size": 42823,
    "stars": 4062,
    "forks": 723,
    "open_issues": 3,
    "watchers": 4062,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 2111083,
      "Python": 37164,
      "HTML": 3113,
      "Shell": 485
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-26T07:52:09.034402"
  }
}