{
  "cve_id": "CVE-2018-25066",
  "github_data": {
    "repository": "PeterMu/nodebatis",
    "fix_commit": "6629ff5b7e3d62ad8319007a54589ec1f62c7c35",
    "related_commits": [
      "6629ff5b7e3d62ad8319007a54589ec1f62c7c35",
      "6629ff5b7e3d62ad8319007a54589ec1f62c7c35"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6629ff5b7e3d62ad8319007a54589ec1f62c7c35",
      "commit_date": "2018-01-13T13:14:22Z",
      "author": {
        "login": "PeterMu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix bug of sql injection in sqlBuilder",
        "length": 38,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 3632,
        "additions": 3596,
        "deletions": 36
      },
      "files": [
        {
          "filename": "dist/lib/pool.js",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -44,7 +44,7 @@ var _class = function () {\n     _createClass(_class, [{\n         key: 'getConn',\n         value: function () {\n-            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n+            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                 var conn;\n                 return regeneratorRuntime.wrap(function _callee$(_context) {\n                     while (1) {\n@@ -74,7 +74,7 @@ var _class = function () {\n     }, {\n         key: 'releaseConn',\n         value: function () {\n-            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(conn) {\n+            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(conn) {\n                 return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                     while (1) {\n                         switch (_context2.prev = _context2.next) {\n@@ -98,7 +98,7 @@ var _class = function () {\n     }, {\n         key: 'query',\n         value: function () {\n-            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(key, sql, params, transationConn) {\n+            var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(key, sql, params, transationConn) {\n                 var that, conn, _that;\n \n                 return regeneratorRuntime.wrap(function _callee3$(_context3) {\n@@ -170,7 +170,7 @@ var _class = function () {\n     }, {\n         key: 'beginTransation',\n         value: function () {\n-            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {\n+            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                 var conn;\n                 return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                     while (1) {\n@@ -200,7 +200,7 @@ var _class = function () {\n     }, {\n         key: 'commit',\n         value: function () {\n-            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(conn) {\n+            var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(conn) {\n                 return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                     while (1) {\n                         switch (_context5.prev = _context5.next) {\n@@ -228,7 +228,7 @@ var _class = function () {\n     }, {\n         key: 'rollback',\n         value: function () {\n-            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(conn) {\n+            var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(conn) {\n                 return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                     while (1) {\n                         switch (_context6.prev = _context6.next) {"
        },
        {
          "filename": "dist/lib/sqlBuilder.js",
          "status": "modified",
          "additions": 13,
          "deletions": 5,
          "patch": "@@ -3,25 +3,28 @@\n Object.defineProperty(exports, \"__esModule\", {\n     value: true\n });\n-/**\n- * sql \u6784\u9020\n- */\n+exports.getDelSql = exports.getUpdateSql = exports.getInsertSql = undefined;\n+\n+var _sqlstring = require('sqlstring');\n \n var getInsertSql = exports.getInsertSql = function getInsertSql(tableName, data) {\n     var columns = [],\n         params = [],\n         holders = [],\n         sql = '';\n+    tableName = (0, _sqlstring.escapeId)(tableName);\n     for (var key in data) {\n-        columns.push(key);\n+        columns.push((0, _sqlstring.escapeId)(key));\n         holders.push('?');\n         params.push(data[key]);\n     }\n     columns = columns.join(',');\n     holders = holders.join(',');\n     sql = 'insert into ' + tableName + ' (' + columns + ') values (' + holders + ')';\n     return { sql: sql, params: params };\n-};\n+}; /**\n+    * sql \u6784\u9020\n+    */\n \n var getUpdateSql = exports.getUpdateSql = function getUpdateSql(tableName, data) {\n     var idKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n@@ -30,8 +33,11 @@ var getUpdateSql = exports.getUpdateSql = function getUpdateSql(tableName, data)\n         params = [],\n         holders = [];\n     var where = '';\n+    tableName = (0, _sqlstring.escapeId)(tableName);\n+    idKey = (0, _sqlstring.escapeId)(idKey);\n     for (var key in data) {\n         if (key != idKey) {\n+            key = (0, _sqlstring.escapeId)(key);\n             holders.push(key + ' = ?');\n             params.push(data[key]);\n         }\n@@ -49,6 +55,8 @@ var getDelSql = exports.getDelSql = function getDelSql(tableName, id) {\n     var idKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n \n     var sql = 'delete from ' + tableName + ' where ' + idKey + ' = ?';\n+    tableName = (0, _sqlstring.escapeId)(tableName);\n+    idKey = (0, _sqlstring.escapeId)(idKey);\n     return {\n         sql: sql,\n         params: [id]"
        },
        {
          "filename": "dist/nodebatis.js",
          "status": "modified",
          "additions": 17,
          "deletions": 17,
          "patch": "@@ -56,7 +56,7 @@ var NodeBatis = function () {\n     _createClass(NodeBatis, [{\n         key: 'execute',\n         value: function () {\n-            var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(key, data, transationConn) {\n+            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(key, data, transationConn) {\n                 var sqlObj, result;\n                 return regeneratorRuntime.wrap(function _callee$(_context) {\n                     while (1) {\n@@ -91,7 +91,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'query',\n         value: function () {\n-            var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(key, data, transationConn) {\n+            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(key, data, transationConn) {\n                 return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                     while (1) {\n                         switch (_context2.prev = _context2.next) {\n@@ -119,7 +119,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'insert',\n         value: function () {\n-            var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(tableName, data, transationConn) {\n+            var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(tableName, data, transationConn) {\n                 var sqlObj, key;\n                 return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                     while (1) {\n@@ -162,7 +162,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'update',\n         value: function () {\n-            var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(tableName, data, idKey, transationConn) {\n+            var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(tableName, data, idKey, transationConn) {\n                 var sqlObj, key;\n                 return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                     while (1) {\n@@ -205,7 +205,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'del',\n         value: function () {\n-            var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(tableName, id, idKey, transationConn) {\n+            var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(tableName, id, idKey, transationConn) {\n                 var sqlObj, key;\n                 return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                     while (1) {\n@@ -251,7 +251,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'getTransation',\n         value: function () {\n-            var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {\n+            var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n                 var _this = this;\n \n                 var that, conn, nodebatis;\n@@ -268,7 +268,7 @@ var NodeBatis = function () {\n                                 nodebatis = {\n                                     conn: conn,\n                                     execute: function () {\n-                                        var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(key, data) {\n+                                        var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(key, data) {\n                                             return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                                 while (1) {\n                                                     switch (_context6.prev = _context6.next) {\n@@ -292,7 +292,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     query: function () {\n-                                        var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(key, data) {\n+                                        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(key, data) {\n                                             return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                                 while (1) {\n                                                     switch (_context7.prev = _context7.next) {\n@@ -316,7 +316,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     insert: function () {\n-                                        var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(tableName, data) {\n+                                        var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(tableName, data) {\n                                             return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                                 while (1) {\n                                                     switch (_context8.prev = _context8.next) {\n@@ -340,7 +340,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     update: function () {\n-                                        var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(tableName, data, idKey) {\n+                                        var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(tableName, data, idKey) {\n                                             return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                                                 while (1) {\n                                                     switch (_context9.prev = _context9.next) {\n@@ -364,7 +364,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     del: function () {\n-                                        var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(tableName, id, idKey) {\n+                                        var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(tableName, id, idKey) {\n                                             return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                                                 while (1) {\n                                                     switch (_context10.prev = _context10.next) {\n@@ -388,7 +388,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     commit: function () {\n-                                        var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {\n+                                        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n                                             var ret;\n                                             return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                                                 while (1) {\n@@ -432,7 +432,7 @@ var NodeBatis = function () {\n                                         };\n                                     }(),\n                                     rollback: function () {\n-                                        var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {\n+                                        var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n                                             var ret;\n                                             return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                                                 while (1) {\n@@ -495,7 +495,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'beginTransation',\n         value: function () {\n-            var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {\n+            var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n                 var _this2 = this;\n \n                 var that, conn;\n@@ -511,7 +511,7 @@ var NodeBatis = function () {\n                                 conn = _context15.sent;\n \n                                 conn.execute = function () {\n-                                    var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(key, data) {\n+                                    var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(key, data) {\n                                         return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                                             while (1) {\n                                                 switch (_context14.prev = _context14.next) {\n@@ -553,7 +553,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'commit',\n         value: function () {\n-            var _ref16 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(conn) {\n+            var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(conn) {\n                 return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                     while (1) {\n                         switch (_context16.prev = _context16.next) {\n@@ -581,7 +581,7 @@ var NodeBatis = function () {\n     }, {\n         key: 'rollback',\n         value: function () {\n-            var _ref17 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(conn) {\n+            var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(conn) {\n                 return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                     while (1) {\n                         switch (_context17.prev = _context17.next) {"
        },
        {
          "filename": "package-lock.json",
          "status": "added",
          "additions": 3537,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"nodebatis\",\n-  \"version\": \"2.1.3\",\n+  \"version\": \"2.2.0\",\n   \"description\": \"a sql style orm for nodejs\",\n   \"main\": \"dist/nodebatis.js\",\n   \"scripts\": {\n@@ -19,6 +19,7 @@\n     \"babel-polyfill\": \"^6.9.1\",\n     \"js-yaml\": \"^3.6.1\",\n     \"mysql\": \"^2.11.1\",\n+    \"sqlstring\": \"^2.3.0\",\n     \"validator\": \"^5.5.0\"\n   },\n   \"devDependencies\": {"
        },
        {
          "filename": "src/lib/sqlBuilder.js",
          "status": "modified",
          "additions": 9,
          "deletions": 1,
          "patch": "@@ -2,10 +2,13 @@\n  * sql \u6784\u9020\n  */\n \n+import { escapeId } from 'sqlstring'\n+\n export const getInsertSql = (tableName, data) => {\n     let columns = [], params = [], holders = [], sql = '' \n+    tableName = escapeId(tableName)\n     for (let key in data) {\n-        columns.push(key)\n+        columns.push(escapeId(key))\n         holders.push('?')\n         params.push(data[key])\n     }\n@@ -18,8 +21,11 @@ export const getInsertSql = (tableName, data) => {\n export const getUpdateSql = (tableName, data, idKey = 'id') => {\n     let sql = '', params = [], holders = []\n     let where = '' \n+    tableName = escapeId(tableName)\n+    idKey = escapeId(idKey)\n     for (let key in data) {\n         if (key != idKey) {\n+            key = escapeId(key)\n             holders.push(`${key} = ?`)\n             params.push(data[key])\n         }\n@@ -35,6 +41,8 @@ export const getUpdateSql = (tableName, data, idKey = 'id') => {\n \n export const getDelSql = (tableName, id, idKey = 'id') => {\n     let sql = `delete from ${tableName} where ${idKey} = ?`\n+    tableName = escapeId(tableName)\n+    idKey = escapeId(idKey)\n     return {\n         sql: sql,\n         params: [id]"
        },
        {
          "filename": "test/dist/test.js",
          "status": "modified",
          "additions": 7,
          "deletions": 4,
          "patch": "@@ -23,7 +23,7 @@ var nodebatis = new NodeBatis(path.resolve(__dirname, '../yaml'), {\n });\n \n var queryTest = function () {\n-\tvar _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(name, age) {\n+\tvar _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(name, age) {\n \t\tvar ret;\n \t\treturn regeneratorRuntime.wrap(function _callee$(_context) {\n \t\t\twhile (1) {\n@@ -60,7 +60,7 @@ var queryTest = function () {\n }();\n \n var insertTest = function () {\n-\tvar _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {\n+\tvar _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n \t\tvar ret;\n \t\treturn regeneratorRuntime.wrap(function _callee2$(_context2) {\n \t\t\twhile (1) {\n@@ -88,7 +88,7 @@ var insertTest = function () {\n }();\n \n var updateTest = function () {\n-\tvar _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {\n+\tvar _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n \t\tvar ret;\n \t\treturn regeneratorRuntime.wrap(function _callee3$(_context3) {\n \t\t\twhile (1) {\n@@ -116,7 +116,7 @@ var updateTest = function () {\n }();\n \n var deleteTest = function () {\n-\tvar _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {\n+\tvar _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n \t\tvar ret;\n \t\treturn regeneratorRuntime.wrap(function _callee4$(_context4) {\n \t\t\twhile (1) {\n@@ -143,4 +143,7 @@ var deleteTest = function () {\n \t};\n }();\n \n+insertTest();\n+updateTest();\n+deleteTest();\n queryTest();\n\\ No newline at end of file"
        },
        {
          "filename": "test/dist/transationTest.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -23,7 +23,7 @@ var nodebatis = new NodeBatis(path.resolve(__dirname, '../yaml'), {\n });\n \n var transationTest = function () {\n-    var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {\n+    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n         var tdao, result3, result1, result2;\n         return regeneratorRuntime.wrap(function _callee$(_context) {\n             while (1) {\n@@ -75,7 +75,7 @@ var transationTest = function () {\n     return function transationTest() {\n         return _ref.apply(this, arguments);\n     };\n-}();_asyncToGenerator(regeneratorRuntime.mark(function _callee2() {\n+}();_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n     var result;\n     return regeneratorRuntime.wrap(function _callee2$(_context2) {\n         while (1) {"
        },
        {
          "filename": "test/src/test.js",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -42,4 +42,7 @@ let deleteTest = async () => {\n \tconsole.log(ret)\n }\n \n+insertTest()\n+updateTest()\n+deleteTest()\n queryTest()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 3,
        "unique_directories": 6,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1e50adcc1b9ccd3f8b1df69017c3fd0754f1c112",
            "date": "2022-07-21T09:40:11Z",
            "author_login": "PeterMu"
          },
          {
            "sha": "6fd0ef8f1a16f8c6a898dca40df8ab426cc9f1a9",
            "date": "2022-07-21T09:39:57Z",
            "author_login": "PeterMu"
          },
          {
            "sha": "89e5bf1e3b9ce042229ea2c3ab945b1c07e8c4c8",
            "date": "2022-07-21T09:39:44Z",
            "author_login": "PeterMu"
          },
          {
            "sha": "5c4251240a741a8a181dca6b3f6e3ae8a913ce7e",
            "date": "2022-07-21T09:39:30Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "2740a37984186ce8058bae289a635475d07de786",
            "date": "2022-07-21T09:39:27Z",
            "author_login": "PeterMu"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "A vulnerability was found in PeterMu nodebatis up to 2.1.x. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. Upgrading to version 2.2.0 is able to address this issue. The patch is identified as 6629ff5b7e3d62ad8319007a54589ec1f62c7c35. It is recommended to upgrade the affected component. VDB-217554 is the identifier assigned to this vulnerability.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-06T11:15:09.320",
    "last_modified": "2024-11-21T04:03:28.700",
    "fix_date": "2018-01-13T13:14:22Z"
  },
  "references": [
    {
      "url": "https://github.com/PeterMu/nodebatis/commit/6629ff5b7e3d62ad8319007a54589ec1f62c7c35",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/PeterMu/nodebatis/releases/tag/v2.2.0",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217554",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217554",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PeterMu/nodebatis/commit/6629ff5b7e3d62ad8319007a54589ec1f62c7c35",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/PeterMu/nodebatis/releases/tag/v2.2.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.217554",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.217554",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.519757",
    "processing_status": "enhanced"
  }
}