{
  "cve_id": "CVE-2018-25091",
  "github_data": {
    "repository": "urllib3/urllib3",
    "fix_commit": "adb358f8e06865406d1f05e581a16cbea2136fbc",
    "related_commits": [
      "adb358f8e06865406d1f05e581a16cbea2136fbc",
      "adb358f8e06865406d1f05e581a16cbea2136fbc"
    ],
    "patch_url": "https://github.com/urllib3/urllib3/commit/adb358f8e06865406d1f05e581a16cbea2136fbc.patch",
    "fix_commit_details": {
      "sha": "adb358f8e06865406d1f05e581a16cbea2136fbc",
      "commit_date": "2018-12-29T22:41:54Z",
      "author": {
        "login": "kyoshidajp",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Remove Authorization headers regardless of case on cross-origin redirects (#1511)",
        "length": 81,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 39,
        "deletions": 5
      },
      "files": [
        {
          "filename": "CHANGES.rst",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -8,6 +8,8 @@ dev (master)\n \n * Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull #1487)\n \n+* Remove Authorization header regardless of case when redirecting to cross-site. (Issue #1510)\n+\n * ... [Short description of non-trivial change.] (Issue #)\n \n "
        },
        {
          "filename": "CONTRIBUTORS.txt",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -272,5 +272,8 @@ In chronological order:\n * Justin Bramley <https://github.com/jbramleycl>\n   * Add ability to handle multiple Content-Encodings\n \n+* Katsuhiko YOSHIDA <https://github.com/kyoshidajp>\n+  * Remove Authorization header regardless of case when redirecting to cross-site\n+\n * [Your name or handle] <[email or website]>\n   * [Brief summary of your changes]"
        },
        {
          "filename": "src/urllib3/poolmanager.py",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -7,6 +7,7 @@\n from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool\n from .connectionpool import port_by_scheme\n from .exceptions import LocationValueError, MaxRetryError, ProxySchemeUnknown\n+from .packages import six\n from .packages.six.moves.urllib.parse import urljoin\n from .request import RequestMethods\n from .util.url import parse_url\n@@ -342,8 +343,10 @@ def urlopen(self, method, url, redirect=True, **kw):\n         # conn.is_same_host() which may use socket.gethostbyname() in the future.\n         if (retries.remove_headers_on_redirect\n                 and not conn.is_same_host(redirect_location)):\n-            for header in retries.remove_headers_on_redirect:\n-                kw['headers'].pop(header, None)\n+            headers = list(six.iterkeys(kw['headers']))\n+            for header in headers:\n+                if header.lower() in retries.remove_headers_on_redirect:\n+                    kw['headers'].pop(header, None)\n \n         try:\n             retries = retries.increment(method, url, response=response, _pool=conn)"
        },
        {
          "filename": "src/urllib3/util/retry.py",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -179,7 +179,8 @@ def __init__(self, total=10, connect=None, read=None, redirect=None, status=None\n         self.raise_on_status = raise_on_status\n         self.history = history or tuple()\n         self.respect_retry_after_header = respect_retry_after_header\n-        self.remove_headers_on_redirect = remove_headers_on_redirect\n+        self.remove_headers_on_redirect = frozenset([\n+            h.lower() for h in remove_headers_on_redirect])\n \n     def new(self, **kw):\n         params = dict("
        },
        {
          "filename": "test/test_retry.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -253,9 +253,9 @@ def test_retry_method_not_in_whitelist(self):\n     def test_retry_default_remove_headers_on_redirect(self):\n         retry = Retry()\n \n-        assert list(retry.remove_headers_on_redirect) == ['Authorization']\n+        assert list(retry.remove_headers_on_redirect) == ['authorization']\n \n     def test_retry_set_remove_headers_on_redirect(self):\n         retry = Retry(remove_headers_on_redirect=['X-API-Secret'])\n \n-        assert list(retry.remove_headers_on_redirect) == ['X-API-Secret']\n+        assert list(retry.remove_headers_on_redirect) == ['x-api-secret']"
        },
        {
          "filename": "test/with_dummyserver/test_poolmanager.py",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -123,6 +123,17 @@ def test_redirect_cross_host_remove_headers(self):\n \n         self.assertNotIn('Authorization', data)\n \n+        r = http.request('GET', '%s/redirect' % self.base_url,\n+                         fields={'target': '%s/headers' % self.base_url_alt},\n+                         headers={'authorization': 'foo'})\n+\n+        self.assertEqual(r.status, 200)\n+\n+        data = json.loads(r.data.decode('utf-8'))\n+\n+        self.assertNotIn('authorization', data)\n+        self.assertNotIn('Authorization', data)\n+\n     def test_redirect_cross_host_no_remove_headers(self):\n         http = PoolManager()\n         self.addCleanup(http.clear)\n@@ -155,6 +166,20 @@ def test_redirect_cross_host_set_removed_headers(self):\n         self.assertNotIn('X-API-Secret', data)\n         self.assertEqual(data['Authorization'], 'bar')\n \n+        r = http.request('GET', '%s/redirect' % self.base_url,\n+                         fields={'target': '%s/headers' % self.base_url_alt},\n+                         headers={'x-api-secret': 'foo',\n+                                  'authorization': 'bar'},\n+                         retries=Retry(remove_headers_on_redirect=['X-API-Secret']))\n+\n+        self.assertEqual(r.status, 200)\n+\n+        data = json.loads(r.data.decode('utf-8'))\n+\n+        self.assertNotIn('x-api-secret', data)\n+        self.assertNotIn('X-API-Secret', data)\n+        self.assertEqual(data['Authorization'], 'bar')\n+\n     def test_raise_on_redirect(self):\n         http = PoolManager()\n         self.addCleanup(http.clear)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f5f876c985faa063c5ff40cb97f20fc021be6a98",
            "date": "2025-01-13T09:34:59Z",
            "author_login": "graingert"
          },
          {
            "sha": "c82d8e506abff905e366ea72ef62c65eed584b17",
            "date": "2025-01-10T10:32:20Z",
            "author_login": "s-t-e-v-e-n-k"
          },
          {
            "sha": "1111e6c8fc3764c523ff9cd1d128ef7b864fbc79",
            "date": "2024-12-30T15:04:28Z",
            "author_login": "carlsmedstad"
          },
          {
            "sha": "4eb7c11f027c740bb44a0af0000f220ce498752f",
            "date": "2024-12-28T16:13:11Z",
            "author_login": "illia-v"
          },
          {
            "sha": "2aea62b62ecdafe830f39468fc67f834dc58419f",
            "date": "2024-12-24T06:45:08Z",
            "author_login": "pquentin"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "urllib3 before 1.24.2 does not remove the authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the authorization header to be exposed to unintended hosts or transmitted in cleartext. NOTE: this issue exists because of an incomplete fix for CVE-2018-20060 (which was case-sensitive).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-15T19:15:09.213",
    "last_modified": "2024-11-21T04:03:32.303",
    "fix_date": "2018-12-29T22:41:54Z"
  },
  "references": [
    {
      "url": "https://github.com/urllib3/urllib3/commit/adb358f8e06865406d1f05e581a16cbea2136fbc",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/urllib3/urllib3/compare/1.24.1...1.24.2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/urllib3/urllib3/issues/1510",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/urllib3/urllib3/commit/adb358f8e06865406d1f05e581a16cbea2136fbc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/urllib3/urllib3/compare/1.24.1...1.24.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/urllib3/urllib3/issues/1510",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:10.601335",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "urllib3",
    "owner": "urllib3",
    "created_at": "2011-09-18T18:08:28Z",
    "updated_at": "2025-01-13T09:35:04Z",
    "pushed_at": "2025-01-13T09:34:59Z",
    "size": 7450,
    "stars": 3821,
    "forks": 1168,
    "open_issues": 132,
    "watchers": 3821,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.24-series",
      "1.25-series",
      "1.26.x",
      "2.0.x",
      "main",
      "misleading-error-truncated-response",
      "release",
      "sethmlarson-patch-1",
      "v2"
    ],
    "languages": {
      "Python": 1105360,
      "HTML": 8754,
      "JavaScript": 3655,
      "Shell": 183,
      "Gherkin": 66
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:00:06.286934"
  }
}