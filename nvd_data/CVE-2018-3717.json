{
  "cve_id": "CVE-2018-3717",
  "github_data": {
    "repository": "senchalabs/connect",
    "fix_commit": "6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
    "related_commits": [
      "6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
      "6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
      "commit_date": "2014-03-06T00:15:43Z",
      "author": {
        "login": "dougwilson",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "directory: use serve-index",
        "length": 26,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 672,
        "additions": 5,
        "deletions": 667
      },
      "files": [
        {
          "filename": "History.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -6,6 +6,7 @@ HEAD\n  * compress: use compression\n  * csrf: use csurf\n  * dep: cookie-signature@1.0.3\n+ * directory: use serve-index\n  * errorHandler: use errorhandler\n  * favicon: use static-favicon\n  * logger: use morgan"
        },
        {
          "filename": "lib/index.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -23,6 +23,7 @@\n  *  - [cookieParser](https://github.com/expressjs/cookie-parser) cookie parser\n  *  - [compress](https://github.com/expressjs/compression) Gzip compression middleware\n  *  - [csrf](https://github.com/expressjs/csurf) Cross-site request forgery protection\n+ *  - [directory](https://github.com/expressjs/serve-index) directory listing middleware\n  *  - [errorHandler](https://github.com/expressjs/errorhandler) flexible error handler\n  *  - [favicon](https://github.com/expressjs/favicon) efficient favicon server (with default icon)\n  *  - [logger](https://github.com/expressjs/morgan) request logger with custom format support\n@@ -38,7 +39,6 @@\n  *  - [cookieSession](cookieSession.html) cookie-based session support\n  *  - [staticCache](staticCache.html) memory cache layer for the static() middleware\n  *  - [static](static.html) streaming static file server supporting `Range` and more\n- *  - [directory](directory.html) directory listing middleware\n  *  - [limit](limit.html) limit the bytesize of request bodies\n  *  - [query](query.html) automatic querystring parser, populating `req.query`\n  *"
        },
        {
          "filename": "lib/middleware/directory.js",
          "status": "modified",
          "additions": 2,
          "deletions": 325,
          "patch": "@@ -6,338 +6,15 @@\n  * MIT Licensed\n  */\n \n-// TODO: arrow key navigation\n-// TODO: make icons extensible\n-\n-/**\n- * Module dependencies.\n- */\n-\n-var fs = require('fs')\n-  , parse = require('url').parse\n-  , utils = require('../utils')\n-  , path = require('path')\n-  , normalize = path.normalize\n-  , sep = path.sep\n-  , extname = path.extname\n-  , join = path.join;\n-var Batch = require('batch');\n-var Negotiator = require('negotiator');\n-\n-/*!\n- * Icon cache.\n- */\n-\n-var cache = {};\n-\n-/*!\n- * Default template.\n- */\n-\n-var defaultTemplate = join(__dirname, '..', 'public', 'directory.html');\n-\n-/**\n- * Media types and the map for content negotiation.\n- */\n-\n-var mediaTypes = [\n-  'text/html',\n-  'text/plain',\n-  'application/json'\n-];\n-\n-var mediaType = {\n-  'text/html': 'html',\n-  'text/plain': 'plain',\n-  'application/json': 'json'\n-};\n-\n /**\n  * Directory:\n  *\n- * Serve directory listings with the given `root` path.\n- *\n- * Options:\n- *\n- *  - `hidden` display hidden (dot) files. Defaults to false.\n- *  - `icons`  display icons. Defaults to false.\n- *  - `filter` Apply this filter function to files. Defaults to false.\n- *  - `template` Optional path to html template. Defaults to a built-in template.\n- *    The following tokens are replaced:\n- *      - `{directory}` with the name of the directory.\n- *      - `{files}` with the HTML of an unordered list of file links.\n- *      - `{linked-path}` with the HTML of a link to the directory.\n- *      - `{style}` with the built-in CSS and embedded images.\n+ * See [serve-index](https://github.com/expressjs/serve-index)\n  *\n  * @param {String} root\n  * @param {Object} options\n  * @return {Function}\n  * @api public\n  */\n \n-exports = module.exports = function directory(root, options){\n-  options = options || {};\n-\n-  // root required\n-  if (!root) throw new Error('directory() root path required');\n-  var hidden = options.hidden\n-    , icons = options.icons\n-    , view = options.view || 'tiles'\n-    , filter = options.filter\n-    , root = normalize(root + sep)\n-    , template = options.template || defaultTemplate;\n-\n-  return function directory(req, res, next) {\n-    if ('GET' != req.method && 'HEAD' != req.method) return next();\n-\n-    var url = parse(req.url)\n-      , dir = decodeURIComponent(url.pathname)\n-      , path = normalize(join(root, dir))\n-      , originalUrl = parse(req.originalUrl)\n-      , originalDir = decodeURIComponent(originalUrl.pathname)\n-      , showUp = path != root;\n-\n-    // null byte(s), bad request\n-    if (~path.indexOf('\\0')) return next(utils.error(400));\n-\n-    // malicious path, forbidden\n-    if (0 != path.indexOf(root)) return next(utils.error(403));\n-\n-    // check if we have a directory\n-    fs.stat(path, function(err, stat){\n-      if (err) return 'ENOENT' == err.code\n-        ? next()\n-        : next(err);\n-\n-      if (!stat.isDirectory()) return next();\n-\n-      // fetch files\n-      fs.readdir(path, function(err, files){\n-        if (err) return next(err);\n-        if (!hidden) files = removeHidden(files);\n-        if (filter) files = files.filter(filter);\n-        files.sort();\n-\n-        // content-negotiation\n-        var type = new Negotiator(req).preferredMediaType(mediaTypes);\n-\n-        // not acceptable\n-        if (!type) return next(utils.error(406));\n-        exports[mediaType[type]](req, res, files, next, originalDir, showUp, icons, path, view, template);\n-      });\n-    });\n-  };\n-};\n-\n-/**\n- * Respond with text/html.\n- */\n-\n-exports.html = function(req, res, files, next, dir, showUp, icons, path, view, template){\n-  fs.readFile(template, 'utf8', function(err, str){\n-    if (err) return next(err);\n-    fs.readFile(__dirname + '/../public/style.css', 'utf8', function(err, style){\n-      if (err) return next(err);\n-      stat(path, files, function(err, stats){\n-        if (err) return next(err);\n-        files = files.map(function(file, i){ return { name: file, stat: stats[i] }; });\n-        files.sort(fileSort);\n-        if (showUp) files.unshift({ name: '..' });\n-        str = str\n-          .replace('{style}', style.concat(iconStyle(files, icons)))\n-          .replace('{files}', html(files, dir, icons, view))\n-          .replace('{directory}', dir)\n-          .replace('{linked-path}', htmlPath(dir));\n-        res.setHeader('Content-Type', 'text/html');\n-        res.setHeader('Content-Length', str.length);\n-        res.end(str);\n-      });\n-    });\n-  });\n-};\n-\n-/**\n- * Respond with application/json.\n- */\n-\n-exports.json = function(req, res, files){\n-  files = JSON.stringify(files);\n-  res.setHeader('Content-Type', 'application/json');\n-  res.setHeader('Content-Length', files.length);\n-  res.end(files);\n-};\n-\n-/**\n- * Respond with text/plain.\n- */\n-\n-exports.plain = function(req, res, files){\n-  files = files.join('\\n') + '\\n';\n-  res.setHeader('Content-Type', 'text/plain');\n-  res.setHeader('Content-Length', files.length);\n-  res.end(files);\n-};\n-\n-/**\n- * Sort function for with directories first.\n- */\n-\n-function fileSort(a, b) {\n-  return Number(b.stat && b.stat.isDirectory()) - Number(a.stat && a.stat.isDirectory()) ||\n-    String(a.name).toLocaleLowerCase().localeCompare(String(b.name).toLocaleLowerCase());\n-}\n-\n-/**\n- * Map html `dir`, returning a linked path.\n- */\n-\n-function htmlPath(dir) {\n-  var curr = [];\n-  return dir.split('/').map(function(part){\n-    curr.push(encodeURIComponent(part));\n-    return part ? '<a href=\"' + curr.join('/') + '\">' + part + '</a>' : '';\n-  }).join(' / ');\n-}\n-\n-/**\n- * Load icon images, return css string.\n- */\n-\n-function iconStyle (files, useIcons) {\n-  if (!useIcons) return '';\n-  var data = {};\n-  var views = { tiles: [], details: [], mobile: [] };\n-\n-  for (var i=0; i < files.length; i++) {\n-    var file = files[i];\n-    if (file.name == '..') continue;\n-\n-    var isDir = '..' == file.name || (file.stat && file.stat.isDirectory());\n-    var icon = isDir ? icons.folder : icons[extname(file.name)] || icons.default;\n-\n-    var ext = extname(file.name);\n-    ext = isDir ? '.directory' : (icons[ext] ? ext : '.default');\n-\n-    if (data[icon]) continue;\n-    data[icon] = ext + ' .name{background-image: url(data:image/png;base64,' + load(icon)+');}';\n-    views.tiles.push('.view-tiles ' + data[icon]);\n-  \tviews.details.push('.view-details ' + data[icon]);\n-  \tviews.mobile.push('#files ' + data[icon]);\n-  }\n-\n-  var style = views.tiles.join('\\n')\n-    + '\\n'+views.details.join('\\n')\n-    + '\\n@media (max-width: 768px) {\\n\\t'\n-    + views.mobile.join('\\n\\t')\n-    + '\\n}';\n-  return style;\n-}\n-\n-/**\n- * Map html `files`, returning an html unordered list.\n- */\n-\n-function html(files, dir, useIcons, view) {\n-  \treturn '<ul id=\"files\" class=\"view-'+view+'\">'\n-    + (view == 'details' ? (\n-      '<li class=\"header\">'\n-      + '<span class=\"name\">Name</span>'\n-      + '<span class=\"size\">Size</span>'\n-      + '<span class=\"date\">Modified</span>'\n-      + '</li>') : '')\n-    + files.map(function(file){\n-    var isDir\n-      , classes = []\n-      , path = dir.split('/').map(function (c) { return encodeURIComponent(c); });\n-\n-    if (useIcons) {\n-      var ext = extname(file.name);\n-      isDir = '..' == file.name || (file.stat && file.stat.isDirectory());\n-      ext = isDir ? '.directory' : (icons[ext] ? ext : '.default');\n-      classes.push('icon');\n-      classes.push(ext.replace('.',''));\n-    }\n-\n-    path.push(encodeURIComponent(file.name));\n-\n-    var date = file.name == '..' ? ''\n-      : file.stat.mtime.toDateString()+' '+file.stat.mtime.toLocaleTimeString();\n-    var size = file.name == '..' ? '' : file.stat.size;\n-\n-    return '<li><a href=\"'\n-      + utils.normalizeSlashes(normalize(path.join('/')))\n-      + '\" class=\"'\n-      + classes.join(' ') + '\"'\n-      + ' title=\"' + file.name + '\">'\n-      + '<span class=\"name\">'+file.name+'</span>'\n-      + '<span class=\"size\">'+size+'</span>'\n-      + '<span class=\"date\">'+date+'</span>'\n-      + '</a></li>';\n-\n-  }).join('\\n') + '</ul>';\n-}\n-\n-/**\n- * Load and cache the given `icon`.\n- *\n- * @param {String} icon\n- * @return {String}\n- * @api private\n- */\n-\n-function load(icon) {\n-  if (cache[icon]) return cache[icon];\n-  return cache[icon] = fs.readFileSync(__dirname + '/../public/icons/' + icon, 'base64');\n-}\n-\n-/**\n- * Filter \"hidden\" `files`, aka files\n- * beginning with a `.`.\n- *\n- * @param {Array} files\n- * @return {Array}\n- * @api private\n- */\n-\n-function removeHidden(files) {\n-  return files.filter(function(file){\n-    return '.' != file[0];\n-  });\n-}\n-\n-/**\n- * Stat all files and return array of stat\n- * in same order.\n- */\n-\n-function stat(dir, files, cb) {\n-  var batch = new Batch();\n-\n-  batch.concurrency(10);\n-\n-  files.forEach(function(file, i){\n-    batch.push(function(done){\n-      fs.stat(join(dir, file), done);\n-    });\n-  });\n-\n-  batch.end(cb);\n-}\n-\n-/**\n- * Icon map.\n- */\n-\n-var icons = {\n-    '.js': 'page_white_code_red.png'\n-  , '.c': 'page_white_c.png'\n-  , '.h': 'page_white_h.png'\n-  , '.cc': 'page_white_cplusplus.png'\n-  , '.php': 'page_white_php.png'\n-  , '.rb': 'page_white_ruby.png'\n-  , '.cpp': 'page_white_cplusplus.png'\n-  , '.swf': 'page_white_flash.png'\n-  , '.pdf': 'page_white_acrobat.png'\n-  , 'folder': 'folder.png'\n-  , 'default': 'page_white.png'\n-};\n+module.exports = require('serve-index');"
        },
        {
          "filename": "lib/public/directory.html",
          "status": "removed",
          "additions": 0,
          "deletions": 82,
          "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset='utf-8'> \n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n-    <title>listing directory {directory}</title>\n-    <style>{style}</style>\n-    <script>\n-      function $(id){\n-        var el = 'string' == typeof id\n-          ? document.getElementById(id)\n-          : id;\n-\n-        el.on = function(event, fn){\n-          if ('content loaded' == event) {\n-            event = window.attachEvent ? \"load\" : \"DOMContentLoaded\";\n-          }\n-          el.addEventListener\n-            ? el.addEventListener(event, fn, false)\n-            : el.attachEvent(\"on\" + event, fn);\n-        };\n-\n-        el.all = function(selector){\n-          return $(el.querySelectorAll(selector));\n-        };\n-\n-        el.each = function(fn){\n-          for (var i = 0, len = el.length; i < len; ++i) {\n-            fn($(el[i]), i);\n-          }\n-        };\n-\n-        el.getClasses = function(){\n-          return this.getAttribute('class').split(/\\s+/);\n-        };\n-\n-        el.addClass = function(name){\n-          var classes = this.getAttribute('class');\n-          el.setAttribute('class', classes\n-            ? classes + ' ' + name\n-            : name);\n-        };\n-\n-        el.removeClass = function(name){\n-          var classes = this.getClasses().filter(function(curr){\n-            return curr != name;\n-          });\n-          this.setAttribute('class', classes.join(' '));\n-        };\n-\n-        return el;\n-      }\n-\n-      function search() {\n-        var str = $('search').value\n-          , links = $('files').all('a');\n-\n-        links.each(function(link){\n-          var text = link.textContent;\n-\n-          if ('..' == text) return;\n-          if (str.length && ~text.indexOf(str)) {\n-            link.addClass('highlight');\n-          } else {\n-            link.removeClass('highlight');\n-          }\n-        });\n-      }\n-\n-      $(window).on('content loaded', function(){\n-        $('search').on('keyup', search);\n-      });\n-    </script>\n-  </head>\n-  <body class=\"directory\">\n-    <input id=\"search\" type=\"text\" placeholder=\"Search\" autocomplete=\"off\" />\n-    <div id=\"wrapper\">\n-      <h1>{linked-path}</h1>\n-      {files}\n-    </div>\n-  </body>\n-</html>\n\\ No newline at end of file"
        },
        {
          "filename": "lib/public/favicon.ico",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/folder.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_add.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_attach.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_code.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_copy.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_delete.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_edit.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_error.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_excel.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_find.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_gear.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_go.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_green.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_key.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_lightning.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_link.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_paintbrush.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_paste.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_red.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_refresh.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_save.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_acrobat.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_actionscript.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_add.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_c.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_camera.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_cd.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_code.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_code_red.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_coldfusion.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_compressed.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_copy.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_cplusplus.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_csharp.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_cup.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_database.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_delete.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_dvd.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_edit.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_error.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_excel.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_find.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_flash.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_freehand.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_gear.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_get.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_go.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_h.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_horizontal.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_key.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_lightning.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_link.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_magnify.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_medal.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_office.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_paint.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_paintbrush.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_paste.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_php.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_picture.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_powerpoint.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_put.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_ruby.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_stack.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_star.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_swoosh.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_text.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_text_width.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_tux.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_vector.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_visualstudio.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_width.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_word.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_world.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_wrench.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_white_zip.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_word.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/icons/page_world.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "lib/public/style.css",
          "status": "removed",
          "additions": 0,
          "deletions": 257,
          "patch": "@@ -1,257 +0,0 @@\n-* {\n-  margin: 0;\n-  padding: 0;\n-  outline: 0;\n-}\n-\n-body {\n-  padding: 80px 100px;\n-  font: 13px \"Helvetica Neue\", \"Lucida Grande\", \"Arial\";\n-  background: #ECE9E9 -webkit-gradient(linear, 0% 0%, 0% 100%, from(#fff), to(#ECE9E9));\n-  background: #ECE9E9 -moz-linear-gradient(top, #fff, #ECE9E9);\n-  background-repeat: no-repeat;\n-  color: #555;\n-  -webkit-font-smoothing: antialiased;\n-}\n-h1, h2, h3 {\n-  font-size: 22px;\n-  color: #343434;\n-}\n-h1 em, h2 em {\n-  padding: 0 5px;\n-  font-weight: normal;\n-}\n-h1 {\n-  font-size: 60px;\n-}\n-h2 {\n-  margin-top: 10px;\n-}\n-h3 {\n-  margin: 5px 0 10px 0;\n-  padding-bottom: 5px;\n-  border-bottom: 1px solid #eee;\n-  font-size: 18px;\n-}\n-ul li {\n-  list-style: none;\n-}\n-ul li:hover {\n-  cursor: pointer;\n-  color: #2e2e2e;\n-}\n-ul li .path {\n-  padding-left: 5px;\n-  font-weight: bold;\n-}\n-ul li .line {\n-  padding-right: 5px;\n-  font-style: italic;\n-}\n-ul li:first-child .path {\n-  padding-left: 0;\n-}\n-p {\n-  line-height: 1.5;\n-}\n-a {\n-  color: #555;\n-  text-decoration: none;\n-}\n-a:hover {\n-  color: #303030;\n-}\n-#stacktrace {\n-  margin-top: 15px;\n-}\n-.directory h1 {\n-  margin-bottom: 15px;\n-  font-size: 18px;\n-}\n-ul#files {\n-  width: 100%;\n-  height: 100%;\n-  overflow: hidden;\n-}\n-ul#files li {\n-  float: left;\n-  width: 30%;\n-  line-height: 25px;\n-  margin: 1px;\n-}\n-ul#files li a {\n-  display: block;\n-  height: 25px;\n-  border: 1px solid transparent;\n-  -webkit-border-radius: 5px;\n-  -moz-border-radius: 5px;\n-  border-radius: 5px;\n-  overflow: hidden;\n-  white-space: nowrap;\n-}\n-ul#files li a:focus,\n-ul#files li a:hover {\n-  background: rgba(255,255,255,0.65);\n-  border: 1px solid #ececec;\n-}\n-ul#files li a.highlight {\n-  -webkit-transition: background .4s ease-in-out;\n-  background: #ffff4f;\n-  border-color: #E9DC51;\n-}\n-#search {\n-  display: block;\n-  position: fixed;\n-  top: 20px;\n-  right: 20px;\n-  width: 90px;\n-  -webkit-transition: width ease 0.2s, opacity ease 0.4s;\n-  -moz-transition: width ease 0.2s, opacity ease 0.4s;\n-  -webkit-border-radius: 32px;\n-  -moz-border-radius: 32px;\n-  -webkit-box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.25), inset 0px 1px 3px rgba(0, 0, 0, 0.7), 0px 1px 0px rgba(255, 255, 255, 0.03);\n-  -moz-box-shadow: inset 0px 0px 3px rgba(0, 0, 0, 0.25), inset 0px 1px 3px rgba(0, 0, 0, 0.7), 0px 1px 0px rgba(255, 255, 255, 0.03);\n-  -webkit-font-smoothing: antialiased;\n-  text-align: left;\n-  font: 13px \"Helvetica Neue\", Arial, sans-serif;\n-  padding: 4px 10px;\n-  border: none;\n-  background: transparent;\n-  margin-bottom: 0;\n-  outline: none;\n-  opacity: 0.7;\n-  color: #888;\n-}\n-#search:focus {\n-  width: 120px;\n-  opacity: 1.0; \n-}\n-\n-/*views*/\n-#files span {\n-  display: inline-block;\n-  overflow: hidden;\n-  text-overflow: ellipsis;\n-  text-indent: 10px;\n-}\n-#files .name {\n-  background-repeat: no-repeat;\n-}\n-#files .icon .name {\n-  text-indent: 28px;\n-}\n-\n-/*tiles*/\n-.view-tiles .name {\n-  width: 100%;\n-  background-position: 8px 5px;\n-}\n-.view-tiles .size,\n-.view-tiles .date {\n-  display: none;\n-}\n-\n-/*details*/\n-ul#files.view-details li {\n-  float: none;\n-  display: block;\n-  width: 90%;\n-}\n-ul#files.view-details li.header {\n-  height: 25px;\n-  background: #000;\n-  color: #fff;\n-  font-weight: bold;\n-}\n-.view-details .header {\n-  border-radius: 5px;\n-}\n-.view-details .name {\n-  width: 60%;\n-  background-position: 8px 5px;\n-}\n-.view-details .size {\n-  width: 10%;\n-}\n-.view-details .date {\n-  width: 30%;\n-}\n-.view-details .size,\n-.view-details .date {\n-  text-align: right;\n-  direction: rtl;\n-}\n-\n-/*mobile*/\n-@media (max-width: 768px) {\n-  body {\n-    font-size: 13px;\n-    line-height: 16px;\n-    padding: 0;\n-  }\n-  #search {\n-    position: static;\n-    width: 100%;\n-    font-size: 2em;\n-    line-height: 1.8em;\n-    text-indent: 10px;\n-    border: 0;\n-    border-radius: 0;\n-    padding: 10px 0;\n-    margin: 0;\n-  }\n-  #search:focus {\n-    width: 100%;\n-    border: 0;\n-    opacity: 1;\n-  }\n-  .directory h1 {\n-    font-size: 2em;\n-    line-height: 1.5em;\n-    color: #fff;\n-    background: #000;\n-    padding: 15px 10px;\n-    margin: 0;\n-  }\n-  ul#files {\n-    border-top: 1px solid #cacaca;\n-  }\n-  ul#files li {\n-    float: none;\n-    width: auto !important;\n-    display: block;\n-    border-bottom: 1px solid #cacaca;\n-    font-size: 2em;\n-    line-height: 1.2em;\n-    text-indent: 0;\n-    margin: 0;\n-  }\n-  ul#files li:nth-child(odd) {\n-    background: #e0e0e0;\n-  }\n-  ul#files li a {\n-    height: auto;\n-    border: 0;\n-    border-radius: 0;\n-    padding: 15px 10px;\n-  }\n-  ul#files li a:focus,\n-  ul#files li a:hover {\n-    border: 0;\n-  }\n-  #files .header,\n-  #files .size,\n-  #files .date {\n-    display: none !important;\n-  }\n-  #files .name {\n-    float: none;\n-    display: inline-block;\n-    width: 100%;\n-    text-indent: 0;\n-    background-position: 0 0;\n-  }\n-  #files .icon .name {\n-    text-indent: 41px;\n-  }\n-}"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -13,7 +13,6 @@\n   \"author\": \"TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)\",\n   \"dependencies\": {\n     \"basic-auth-connect\": \"1.0.0\",\n-    \"batch\": \"0.5.0\",\n     \"cookie-parser\": \"1.0.1\",\n     \"cookie-signature\": \"1.0.3\",\n     \"compression\": \"1.0.0\",\n@@ -25,6 +24,7 @@\n     \"morgan\": \"1.0.0\",\n     \"qs\": \"0.6.6\",\n     \"response-time\": \"1.0.0\",\n+    \"serve-index\": \"1.0.0\",\n     \"static-favicon\": \"1.0.0\",\n     \"vhost\": \"1.0.0\",\n     \"send\": \"0.1.4\",\n@@ -33,7 +33,6 @@\n     \"pause\": \"0.0.1\",\n     \"debug\": \">= 0.7.3 < 1\",\n     \"raw-body\": \"1.1.3\",\n-    \"negotiator\": \"0.3.0\",\n     \"multiparty\": \"2.2.0\"\n   },\n   \"devDependencies\": {"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "98ab0c435852b311ed57fe48a1846c2dae84e266",
            "date": "2024-09-27T16:10:18Z",
            "author_login": "dougwilson"
          },
          {
            "sha": "4068baef8a065e78c082d75b2bd5f05ce62897d9",
            "date": "2024-09-27T16:04:02Z",
            "author_login": "dougwilson"
          },
          {
            "sha": "ffce56c18f833aa584e0c6146a79c9cfe11e3f0f",
            "date": "2024-09-27T15:58:14Z",
            "author_login": "dougwilson"
          },
          {
            "sha": "81091030a956966ad25ec5c72cfb8f82624c4ed7",
            "date": "2024-09-27T15:57:09Z",
            "author_login": "dougwilson"
          },
          {
            "sha": "ea622836659548474fd2160c4621330bb66831a0",
            "date": "2024-09-27T15:53:21Z",
            "author_login": "dougwilson"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "connect node module before 2.14.0 suffers from a Cross-Site Scripting (XSS) vulnerability due to a lack of validation of file in directory.js middleware.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2018-06-07T02:29:08.130",
    "last_modified": "2024-11-21T04:05:56.447",
    "fix_date": "2014-03-06T00:15:43Z"
  },
  "references": [
    {
      "url": "https://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
      "source": "support@hackerone.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/309394",
      "source": "support@hackerone.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/309641",
      "source": "support@hackerone.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/309394",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/309641",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.916494",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "connect",
    "owner": "senchalabs",
    "created_at": "2010-05-26T18:55:41Z",
    "updated_at": "2025-01-25T02:00:36Z",
    "pushed_at": "2024-09-27T16:10:21Z",
    "size": 5321,
    "stars": 9849,
    "forks": 1092,
    "open_issues": 6,
    "watchers": 9849,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 22817
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:10:04.355811"
  }
}