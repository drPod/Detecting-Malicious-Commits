{
  "cve_id": "CVE-2018-6010",
  "github_data": {
    "repository": "yiisoft/yii2",
    "fix_commit": "6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
    "related_commits": [
      "6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
      "6b0be47e0fa9c532e03b07b4369050582fcf5c7a"
    ],
    "patch_url": "https://github.com/yiisoft/yii2/commit/6b0be47e0fa9c532e03b07b4369050582fcf5c7a.patch",
    "fix_commit_details": {
      "sha": "6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
      "commit_date": "2018-01-22T08:41:24Z",
      "author": {
        "login": "samdark",
        "type": "User",
        "stats": {
          "total_commits": 3616,
          "average_weekly_commits": 5.029207232267037,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 405
        }
      },
      "commit_message": {
        "title": "Fixes #14711: Fixed `yii\\web\\ErrorHandler` displaying exception message in non-debug mode",
        "length": 89,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 80,
        "additions": 57,
        "deletions": 23
      },
      "files": [
        {
          "filename": "framework/CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -4,6 +4,7 @@ Yii Framework 2 Change Log\n 2.0.14 under development\n ------------------------\n \n+- Bug #14711: Fixed `yii\\web\\ErrorHandler` displaying exception message in non-debug mode (samdark)\n - Enh #13814: MySQL unique index names can now contain spaces (df2)\n - Bug #15300: Fixed \"Cannot read property 'style' of undefined\" error at the error screen (vitorarantes)\n - Enh #15426: Added abilitiy to create and drop database views (igravity, vladis84)"
        },
        {
          "filename": "framework/base/ErrorHandler.php",
          "status": "modified",
          "additions": 28,
          "deletions": 14,
          "patch": "@@ -324,22 +324,36 @@ public static function convertExceptionToError($exception)\n      */\n     public static function convertExceptionToString($exception)\n     {\n-        if ($exception instanceof Exception && ($exception instanceof UserException || !YII_DEBUG)) {\n-            $message = \"{$exception->getName()}: {$exception->getMessage()}\";\n-        } elseif (YII_DEBUG) {\n-            if ($exception instanceof Exception) {\n-                $message = \"Exception ({$exception->getName()})\";\n-            } elseif ($exception instanceof ErrorException) {\n-                $message = \"{$exception->getName()}\";\n-            } else {\n-                $message = 'Exception';\n-            }\n-            $message .= \" '\" . get_class($exception) . \"' with message '{$exception->getMessage()}' \\n\\nin \"\n-                . $exception->getFile() . ':' . $exception->getLine() . \"\\n\\n\"\n-                . \"Stack trace:\\n\" . $exception->getTraceAsString();\n+        if ($exception instanceof UserException) {\n+            return \"{$exception->getName()}: {$exception->getMessage()}\";\n+        }\n+\n+        if (YII_DEBUG) {\n+            return static::convertExceptionToVerboseString($exception);\n+        }\n+\n+        return 'An internal server error occurred.';\n+    }\n+\n+    /**\n+     * Converts an exception into a string that has verbose information about the exception and its trace.\n+     * @param \\Exception|\\Error $exception the exception being converted\n+     * @return string the string representation of the exception.\n+     *\n+     * @since 2.0.14\n+     */\n+    public static function convertExceptionToVerboseString($exception)\n+    {\n+        if ($exception instanceof Exception) {\n+            $message = \"Exception ({$exception->getName()})\";\n+        } elseif ($exception instanceof ErrorException) {\n+            $message = \"{$exception->getName()}\";\n         } else {\n-            $message = 'Error: ' . $exception->getMessage();\n+            $message = 'Exception';\n         }\n+        $message .= \" '\" . get_class($exception) . \"' with message '{$exception->getMessage()}' \\n\\nin \"\n+            . $exception->getFile() . ':' . $exception->getLine() . \"\\n\\n\"\n+            . \"Stack trace:\\n\" . $exception->getTraceAsString();\n \n         return $message;\n     }"
        },
        {
          "filename": "framework/log/Dispatcher.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -190,7 +190,7 @@ public function dispatch($messages, $final)\n                 } catch (\\Exception $e) {\n                     $target->enabled = false;\n                     $targetErrors[] = [\n-                        'Unable to send log via ' . get_class($target) . ': ' . ErrorHandler::convertExceptionToString($e),\n+                        'Unable to send log via ' . get_class($target) . ': ' . ErrorHandler::convertExceptionToVerboseString($e),\n                         Logger::LEVEL_WARNING,\n                         __METHOD__,\n                         microtime(true),"
        },
        {
          "filename": "framework/views/errorHandler/exception.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -17,7 +17,6 @@\n         if ($exception instanceof \\yii\\web\\HttpException) {\n             echo (int) $exception->statusCode . ' ' . $handler->htmlEncode($name);\n         } else {\n-            $name = $handler->getExceptionName($exception);\n             if ($name !== null) {\n                 echo $handler->htmlEncode($name . ' \u2013 ' . get_class($exception));\n             } else {"
        },
        {
          "filename": "tests/framework/log/DispatcherTest.php",
          "status": "modified",
          "additions": 27,
          "deletions": 7,
          "patch": "@@ -203,13 +203,33 @@ public function testDispatchWithFakeTarget2ThrowExceptionWhenCollect()\n                 ->withConsecutive(\n                     [$this->equalTo('messages'), $this->equalTo(true)],\n                     [\n-                        [[\n-                            'Unable to send log via ' . get_class($target1) . ': Exception: some error',\n-                            Logger::LEVEL_WARNING,\n-                            'yii\\log\\Dispatcher::dispatch',\n-                            'time data',\n-                            [],\n-                        ]],\n+                        $this->callback(function($arg) use ($target1) {\n+                            if (!isset($arg[0][0], $arg[0][1], $arg[0][2], $arg[0][3])) {\n+                                return false;\n+                            }\n+\n+                            if (strpos($arg[0][0], 'Unable to send log via ' . get_class($target1) . ': Exception (Exception) \\'yii\\base\\UserException\\' with message \\'some error\\'') !== 0) {\n+                                return false;\n+                            }\n+\n+                            if ($arg[0][1] !== Logger::LEVEL_WARNING) {\n+                                return false;\n+                            }\n+\n+                            if ($arg[0][2] !== 'yii\\log\\Dispatcher::dispatch') {\n+                                return false;\n+                            }\n+\n+                            if ($arg[0][3] !== 'time data') {\n+                                return false;\n+                            }\n+\n+                            if ($arg[0][4] !== []) {\n+                                return false;\n+                            }\n+\n+                            return true;\n+                        }),\n                         true,\n                     ]\n                 );"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b0b7832235a706625fca00221039227f15dde18f",
            "date": "2025-01-14T11:07:19Z",
            "author_login": "mtangoo"
          },
          {
            "sha": "fd866da415125233b4628fcae5c8a2cc4c61e143",
            "date": "2025-01-12T21:44:34Z",
            "author_login": "xepozz"
          },
          {
            "sha": "f94017ce4c2c2f83065f5079dc250e788265fa4e",
            "date": "2025-01-06T14:53:58Z",
            "author_login": "xcopy"
          },
          {
            "sha": "3fc7e71c6718f259f3e9960ed9968a2b8117cb50",
            "date": "2025-01-01T19:43:47Z",
            "author_login": "xcopy"
          },
          {
            "sha": "a8586fc2961a4a6c7df2160d80493b5e13bc55be",
            "date": "2024-12-30T16:53:25Z",
            "author_login": "rob006"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "In Yii Framework 2.x before 2.0.14, remote attackers could obtain potentially sensitive information from exception messages, or exploit reflected XSS on the error handler page in non-debug mode. Related to base/ErrorHandler.php, log/Dispatcher.php, and views/errorHandler/exception.php.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-01-22T22:29:00.270",
    "last_modified": "2024-11-21T04:09:52.970",
    "fix_date": "2018-01-22T08:41:24Z"
  },
  "references": [
    {
      "url": "https://github.com/yiisoft/yii2/commit/6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/yiisoft/yii2/issues/14711",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/yiisoft/yii2/pull/15534",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/yiisoft/yii2/commit/6b0be47e0fa9c532e03b07b4369050582fcf5c7a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yiisoft/yii2/issues/14711",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yiisoft/yii2/pull/15534",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:15.381033",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "yii2",
    "owner": "yiisoft",
    "created_at": "2012-02-13T15:32:36Z",
    "updated_at": "2025-01-14T11:07:29Z",
    "pushed_at": "2025-01-14T11:07:19Z",
    "size": 81278,
    "stars": 14254,
    "forks": 6890,
    "open_issues": 522,
    "watchers": 14254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.2",
      "master"
    ],
    "languages": {
      "PHP": 7803207,
      "JavaScript": 282198,
      "PLSQL": 20760,
      "TSQL": 18884,
      "HTML": 14463,
      "Hack": 4074,
      "Dockerfile": 3216,
      "Shell": 2070,
      "Batchfile": 1090,
      "CSS": 20
    },
    "commit_activity": {
      "total_commits_last_year": 165,
      "avg_commits_per_week": 3.173076923076923,
      "days_active_last_year": 82
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T18:21:53.325039"
  }
}