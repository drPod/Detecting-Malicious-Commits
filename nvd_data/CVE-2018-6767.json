{
  "cve_id": "CVE-2018-6767",
  "github_data": {
    "repository": "dbry/WavPack",
    "fix_commit": "d5bf76b5a88d044a1be1d5656698e3ba737167e5",
    "related_commits": [
      "d5bf76b5a88d044a1be1d5656698e3ba737167e5",
      "d5bf76b5a88d044a1be1d5656698e3ba737167e5"
    ],
    "patch_url": "https://github.com/dbry/WavPack/commit/d5bf76b5a88d044a1be1d5656698e3ba737167e5.patch",
    "fix_commit_details": {
      "sha": "d5bf76b5a88d044a1be1d5656698e3ba737167e5",
      "commit_date": "2018-02-04T19:28:15Z",
      "author": {
        "login": "dbry",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "issue #27, do not overwrite stack on corrupt RF64 file",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 32,
        "deletions": 7
      },
      "files": [
        {
          "filename": "cli/riff.c",
          "status": "modified",
          "additions": 32,
          "deletions": 7,
          "patch": "@@ -42,6 +42,7 @@ typedef struct {\n \n #pragma pack(pop)\n \n+#define CS64ChunkFormat \"4D\"\n #define DS64ChunkFormat \"DDDL\"\n \n #define WAVPACK_NO_ERROR    0\n@@ -101,13 +102,13 @@ int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, Wavpack\n \n         if (!strncmp (chunk_header.ckID, \"ds64\", 4)) {\n             if (chunk_header.ckSize < sizeof (DS64Chunk) ||\n-                !DoReadFile (infile, &ds64_chunk, chunk_header.ckSize, &bcount) ||\n-                bcount != chunk_header.ckSize) {\n+                !DoReadFile (infile, &ds64_chunk, sizeof (DS64Chunk), &bcount) ||\n+                bcount != sizeof (DS64Chunk)) {\n                     error_line (\"%s is not a valid .WAV file!\", infilename);\n                     return WAVPACK_SOFT_ERROR;\n             }\n             else if (!(config->qmode & QMODE_NO_STORE_WRAPPER) &&\n-                !WavpackAddWrapper (wpc, &ds64_chunk, chunk_header.ckSize)) {\n+                !WavpackAddWrapper (wpc, &ds64_chunk, sizeof (DS64Chunk))) {\n                     error_line (\"%s\", WavpackGetErrorMessage (wpc));\n                     return WAVPACK_SOFT_ERROR;\n             }\n@@ -315,10 +316,11 @@ int ParseRiffHeaderConfig (FILE *infile, char *infilename, char *fourcc, Wavpack\n \n int WriteRiffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples, int qmode)\n {\n-    int do_rf64 = 0, write_junk = 1;\n+    int do_rf64 = 0, write_junk = 1, table_length = 0;\n     ChunkHeader ds64hdr, datahdr, fmthdr;\n     RiffChunkHeader riffhdr;\n     DS64Chunk ds64_chunk;\n+    CS64Chunk cs64_chunk;\n     JunkChunk junkchunk;\n     WaveHeader wavhdr;\n     uint32_t bcount;\n@@ -380,6 +382,7 @@ int WriteRiffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples,\n     strncpy (riffhdr.formType, \"WAVE\", sizeof (riffhdr.formType));\n     total_riff_bytes = sizeof (riffhdr) + wavhdrsize + sizeof (datahdr) + ((total_data_bytes + 1) & ~(int64_t)1);\n     if (do_rf64) total_riff_bytes += sizeof (ds64hdr) + sizeof (ds64_chunk);\n+    total_riff_bytes += table_length * sizeof (CS64Chunk);\n     if (write_junk) total_riff_bytes += sizeof (junkchunk);\n     strncpy (fmthdr.ckID, \"fmt \", sizeof (fmthdr.ckID));\n     strncpy (datahdr.ckID, \"data\", sizeof (datahdr.ckID));\n@@ -394,11 +397,12 @@ int WriteRiffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples,\n \n     if (do_rf64) {\n         strncpy (ds64hdr.ckID, \"ds64\", sizeof (ds64hdr.ckID));\n-        ds64hdr.ckSize = sizeof (ds64_chunk);\n+        ds64hdr.ckSize = sizeof (ds64_chunk) + (table_length * sizeof (CS64Chunk));\n         CLEAR (ds64_chunk);\n         ds64_chunk.riffSize64 = total_riff_bytes;\n         ds64_chunk.dataSize64 = total_data_bytes;\n         ds64_chunk.sampleCount64 = total_samples;\n+        ds64_chunk.tableLength = table_length;\n         riffhdr.ckSize = (uint32_t) -1;\n         datahdr.ckSize = (uint32_t) -1;\n         WavpackNativeToLittleEndian (&ds64hdr, ChunkHeaderFormat);\n@@ -409,6 +413,14 @@ int WriteRiffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples,\n         datahdr.ckSize = (uint32_t) total_data_bytes;\n     }\n \n+    // this \"table\" is just a dummy placeholder for testing (normally not written)\n+\n+    if (table_length) {\n+        strncpy (cs64_chunk.ckID, \"dmmy\", sizeof (cs64_chunk.ckID));\n+        cs64_chunk.chunkSize64 = 12345678;\n+        WavpackNativeToLittleEndian (&cs64_chunk, CS64ChunkFormat);\n+    }\n+\n     // write the RIFF chunks up to just before the data starts\n \n     WavpackNativeToLittleEndian (&riffhdr, ChunkHeaderFormat);\n@@ -418,8 +430,21 @@ int WriteRiffHeader (FILE *outfile, WavpackContext *wpc, int64_t total_samples,\n \n     if (!DoWriteFile (outfile, &riffhdr, sizeof (riffhdr), &bcount) || bcount != sizeof (riffhdr) ||\n         (do_rf64 && (!DoWriteFile (outfile, &ds64hdr, sizeof (ds64hdr), &bcount) || bcount != sizeof (ds64hdr))) ||\n-        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk))) ||\n-        (write_junk && (!DoWriteFile (outfile, &junkchunk, sizeof (junkchunk), &bcount) || bcount != sizeof (junkchunk))) ||\n+        (do_rf64 && (!DoWriteFile (outfile, &ds64_chunk, sizeof (ds64_chunk), &bcount) || bcount != sizeof (ds64_chunk)))) {\n+            error_line (\"can't write .WAV data, disk probably full!\");\n+            return FALSE;\n+    }\n+\n+    // again, this is normally not written except for testing\n+\n+    while (table_length--)\n+        if (!DoWriteFile (outfile, &cs64_chunk, sizeof (cs64_chunk), &bcount) || bcount != sizeof (cs64_chunk)) {\n+            error_line (\"can't write .WAV data, disk probably full!\");\n+            return FALSE;\n+        }\n+\n+\n+    if ((write_junk && (!DoWriteFile (outfile, &junkchunk, sizeof (junkchunk), &bcount) || bcount != sizeof (junkchunk))) ||\n         !DoWriteFile (outfile, &fmthdr, sizeof (fmthdr), &bcount) || bcount != sizeof (fmthdr) ||\n         !DoWriteFile (outfile, &wavhdr, wavhdrsize, &bcount) || bcount != wavhdrsize ||\n         !DoWriteFile (outfile, &datahdr, sizeof (datahdr), &bcount) || bcount != sizeof (datahdr)) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8b5b1f54863c2b3b2d578d3c4c8434a7447134e5",
            "date": "2025-01-14T02:15:41Z",
            "author_login": "dbry"
          },
          {
            "sha": "d9c4a35e822bb274b8c94fc95ff16c5b4c04d346",
            "date": "2024-11-20T14:11:50Z",
            "author_login": "sezero"
          },
          {
            "sha": "1afa7248db579dfc54080946b35f64f68c59323d",
            "date": "2024-11-20T04:35:50Z",
            "author_login": "madebr"
          },
          {
            "sha": "5a441e803b5e10d4bac1d7aa04ea16b1e8079cf9",
            "date": "2024-10-31T19:29:14Z",
            "author_login": "madebr"
          },
          {
            "sha": "f89d138eaf4ce02eac1e6bc8828d6d2e45ffbf33",
            "date": "2024-09-30T23:00:04Z",
            "author_login": "dbry"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-125",
    "description": "A stack-based buffer over-read in the ParseRiffHeaderConfig function of cli/riff.c file of WavPack 5.1.0 allows a remote attacker to cause a denial-of-service attack or possibly have unspecified other impact via a maliciously crafted RF64 file.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2018-02-06T22:29:00.210",
    "last_modified": "2024-11-21T04:11:08.823",
    "fix_date": "2018-02-04T19:28:15Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/155743/Slackware-Security-Advisory-wavpack-Updates.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=889276",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dbry/WavPack/commit/d5bf76b5a88d044a1be1d5656698e3ba737167e5",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbry/WavPack/issues/27",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2019/Dec/37",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/3568-1/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4125",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/155743/Slackware-Security-Advisory-wavpack-Updates.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=889276",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dbry/WavPack/commit/d5bf76b5a88d044a1be1d5656698e3ba737167e5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbry/WavPack/issues/27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2019/Dec/37",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/3568-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2018/dsa-4125",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:15.400310",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "WavPack",
    "owner": "dbry",
    "created_at": "2013-09-25T01:18:11Z",
    "updated_at": "2025-01-14T09:53:51Z",
    "pushed_at": "2025-01-14T02:15:54Z",
    "size": 12022,
    "stars": 378,
    "forks": 69,
    "open_issues": 21,
    "watchers": 378,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1612975,
      "Assembly": 424145,
      "C++": 235518,
      "CMake": 36882,
      "Makefile": 7711,
      "M4": 5205,
      "NSIS": 4212,
      "Shell": 3750
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:09:24.048233"
  }
}