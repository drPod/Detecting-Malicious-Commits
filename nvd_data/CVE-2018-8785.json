{
  "cve_id": "CVE-2018-8785",
  "github_data": {
    "repository": "FreeRDP/FreeRDP",
    "fix_commit": "602f4a2e14b41703b5f431de3154cd46a5750a2d",
    "related_commits": [
      "602f4a2e14b41703b5f431de3154cd46a5750a2d",
      "602f4a2e14b41703b5f431de3154cd46a5750a2d"
    ],
    "patch_url": "https://github.com/FreeRDP/FreeRDP/commit/602f4a2e14b41703b5f431de3154cd46a5750a2d.patch",
    "fix_commit_details": {
      "sha": "602f4a2e14b41703b5f431de3154cd46a5750a2d",
      "commit_date": "2018-10-22T14:20:34Z",
      "author": {
        "login": "akallabeth",
        "type": "User",
        "stats": {
          "total_commits": 7815,
          "average_weekly_commits": 11.038135593220339,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 486
        }
      },
      "commit_message": {
        "title": "Fixed CVE-2018-8785",
        "length": 81,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 100,
        "additions": 61,
        "deletions": 39
      },
      "files": [
        {
          "filename": "include/freerdp/codec/zgfx.h",
          "status": "modified",
          "additions": 7,
          "deletions": 23,
          "patch": "@@ -32,34 +32,18 @@\n \n #define ZGFX_SEGMENTED_MAXSIZE\t\t\t65535\n \n-struct _ZGFX_CONTEXT\n-{\n-\tBOOL Compressor;\n-\n-\tconst BYTE* pbInputCurrent;\n-\tconst BYTE* pbInputEnd;\n-\n-\tUINT32 bits;\n-\tUINT32 cBitsRemaining;\n-\tUINT32 BitsCurrent;\n-\tUINT32 cBitsCurrent;\n-\n-\tBYTE OutputBuffer[65536];\n-\tUINT32 OutputCount;\n-\n-\tBYTE HistoryBuffer[2500000];\n-\tUINT32 HistoryIndex;\n-\tUINT32 HistoryBufferSize;\n-};\n typedef struct _ZGFX_CONTEXT ZGFX_CONTEXT;\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif\n \n-FREERDP_API int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BYTE** ppDstData, UINT32* pDstSize, UINT32 flags);\n-FREERDP_API int zgfx_compress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BYTE** ppDstData, UINT32* pDstSize, UINT32* pFlags);\n-FREERDP_API int zgfx_compress_to_stream(ZGFX_CONTEXT* zgfx, wStream* sDst, const BYTE* pUncompressed, UINT32 uncompressedSize, UINT32* pFlags);\n+FREERDP_API int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize,\n+                                BYTE** ppDstData, UINT32* pDstSize, UINT32 flags);\n+FREERDP_API int zgfx_compress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize,\n+                              BYTE** ppDstData, UINT32* pDstSize, UINT32* pFlags);\n+FREERDP_API int zgfx_compress_to_stream(ZGFX_CONTEXT* zgfx, wStream* sDst,\n+                                        const BYTE* pUncompressed, UINT32 uncompressedSize, UINT32* pFlags);\n \n FREERDP_API void zgfx_context_reset(ZGFX_CONTEXT* zgfx, BOOL flush);\n \n@@ -71,4 +55,4 @@ FREERDP_API void zgfx_context_free(ZGFX_CONTEXT* zgfx);\n #endif\n \n #endif /* FREERDP_CODEC_ZGFX_H */\n- \n+"
        },
        {
          "filename": "libfreerdp/codec/zgfx.c",
          "status": "modified",
          "additions": 54,
          "deletions": 16,
          "patch": "@@ -44,14 +44,34 @@\n \n struct _ZGFX_TOKEN\n {\n-\tint prefixLength;\n-\tint prefixCode;\n-\tint valueBits;\n-\tint tokenType;\n+\tUINT32 prefixLength;\n+\tUINT32 prefixCode;\n+\tUINT32 valueBits;\n+\tUINT32 tokenType;\n \tUINT32 valueBase;\n };\n typedef struct _ZGFX_TOKEN ZGFX_TOKEN;\n \n+struct _ZGFX_CONTEXT\n+{\n+\tBOOL Compressor;\n+\n+\tconst BYTE* pbInputCurrent;\n+\tconst BYTE* pbInputEnd;\n+\n+\tUINT32 bits;\n+\tUINT32 cBitsRemaining;\n+\tUINT32 BitsCurrent;\n+\tUINT32 cBitsCurrent;\n+\n+\tBYTE OutputBuffer[65536];\n+\tUINT32 OutputCount;\n+\n+\tBYTE HistoryBuffer[2500000];\n+\tUINT32 HistoryIndex;\n+\tUINT32 HistoryBufferSize;\n+};\n+\n static const ZGFX_TOKEN ZGFX_TOKEN_TABLE[] =\n {\n \t// len code vbits type  vbase\n@@ -98,17 +118,26 @@ static const ZGFX_TOKEN ZGFX_TOKEN_TABLE[] =\n \t{ 0 }\n };\n \n-#define zgfx_GetBits(_zgfx, _nbits) \\\n-\twhile (_zgfx->cBitsCurrent < _nbits) { \\\n-\t\t_zgfx->BitsCurrent <<= 8; \\\n-\t\tif (_zgfx->pbInputCurrent < _zgfx->pbInputEnd) \\\n-\t\t\t_zgfx->BitsCurrent += *(_zgfx->pbInputCurrent)++; \\\n-\t\t_zgfx->cBitsCurrent += 8; \\\n-\t} \\\n-\t_zgfx->cBitsRemaining -= _nbits; \\\n-\t_zgfx->cBitsCurrent -= _nbits; \\\n-\t_zgfx->bits = _zgfx->BitsCurrent >> _zgfx->cBitsCurrent; \\\n+static INLINE BOOL zgfx_GetBits(ZGFX_CONTEXT* _zgfx, UINT32 _nbits)\n+{\n+\tif (!_zgfx)\n+\t\treturn FALSE;\n+\n+\twhile (_zgfx->cBitsCurrent < _nbits)\n+\t{\n+\t\t_zgfx->BitsCurrent <<= 8;\n+\n+\t\tif (_zgfx->pbInputCurrent < _zgfx->pbInputEnd)\n+\t\t\t_zgfx->BitsCurrent += *(_zgfx->pbInputCurrent)++;\n+\n+\t\t_zgfx->cBitsCurrent += 8;\n+\t}\n+\n+\t_zgfx->cBitsRemaining -= _nbits;\n+\t_zgfx->cBitsCurrent -= _nbits;\n+\t_zgfx->bits = _zgfx->BitsCurrent >> _zgfx->cBitsCurrent;\n \t_zgfx->BitsCurrent &= ((1 << _zgfx->cBitsCurrent) - 1);\n+}\n \n static void zgfx_history_buffer_ring_write(ZGFX_CONTEXT* zgfx, const BYTE* src, size_t count)\n {\n@@ -193,7 +222,7 @@ static BOOL zgfx_decompress_segment(ZGFX_CONTEXT* zgfx, wStream* stream, size_t\n {\n \tBYTE c;\n \tBYTE flags;\n-\tint extra;\n+\tUINT32 extra = 0;\n \tint opIndex;\n \tint haveBits;\n \tint inPrefix;\n@@ -317,8 +346,8 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n {\n \tint status = -1;\n \tBYTE descriptor;\n-\n \twStream* stream = Stream_New((BYTE*)pSrcData, SrcSize);\n+\n \tif (!stream)\n \t\treturn -1;\n \n@@ -333,6 +362,7 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \t\t\tgoto fail;\n \n \t\t*ppDstData = NULL;\n+\n \t\tif (zgfx->OutputCount > 0)\n \t\t\t*ppDstData = (BYTE*) malloc(zgfx->OutputCount);\n \n@@ -349,6 +379,7 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \t\tUINT16 segmentCount;\n \t\tUINT32 uncompressedSize;\n \t\tBYTE* pConcatenated;\n+\t\tsize_t used = 0;\n \n \t\tif (Stream_GetRemainingLength(stream) < 6)\n \t\t\tgoto fail;\n@@ -377,8 +408,15 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \t\t\tif (!zgfx_decompress_segment(zgfx, stream, segmentSize))\n \t\t\t\tgoto fail;\n \n+\t\t\tif (zgfx->OutputCount > UINT32_MAX - used)\n+\t\t\t\tgoto fail;\n+\n+\t\t\tif (used + zgfx->OutputCount > uncompressedSize)\n+\t\t\t\tgoto fail;\n+\n \t\t\tCopyMemory(pConcatenated, zgfx->OutputBuffer, zgfx->OutputCount);\n \t\t\tpConcatenated += zgfx->OutputCount;\n+\t\t\tused += zgfx->OutputCount;\n \t\t}\n \t}\n \telse"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "79e59a1614eaca84a43466107c4f8fe6aab2a151",
            "date": "2025-01-14T19:15:57Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "df158b7e5c93764243554eb524d6831aa1fa4bf4",
            "date": "2025-01-14T18:17:06Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "e0ce33634f18b62a86e2a3470f051be5f764d0bc",
            "date": "2025-01-14T17:42:13Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "e1ee4bee38c341e345c589fdce0df46439d7174b",
            "date": "2025-01-14T17:39:57Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "6dfd18bfb8aec03012543285f330506accb1527d",
            "date": "2025-01-14T17:19:03Z",
            "author_login": "akallabeth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-120",
    "description": "FreeRDP prior to version 2.0.0-rc4 contains a Heap-Based Buffer Overflow in function zgfx_decompress() that results in a memory corruption and probably even a remote code execution.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2018-11-29T18:29:00.850",
    "last_modified": "2024-11-21T04:14:18.520",
    "fix_date": "2018-10-22T14:20:34Z"
  },
  "references": [
    {
      "url": "http://www.securityfocus.com/bid/106938",
      "source": "cve@checkpoint.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/602f4a2e14b41703b5f431de3154cd46a5750a2d",
      "source": "cve@checkpoint.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://research.checkpoint.com/reverse-rdp-attack-code-execution-on-rdp-clients/",
      "source": "cve@checkpoint.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3845-1/",
      "source": "cve@checkpoint.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/106938",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/602f4a2e14b41703b5f431de3154cd46a5750a2d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://research.checkpoint.com/reverse-rdp-attack-code-execution-on-rdp-clients/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://usn.ubuntu.com/3845-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:38.575352",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "FreeRDP",
    "owner": "FreeRDP",
    "created_at": "2011-06-30T19:14:15Z",
    "updated_at": "2025-01-14T11:51:38Z",
    "pushed_at": "2025-01-14T11:16:30Z",
    "size": 68011,
    "stars": 11214,
    "forks": 14938,
    "open_issues": 248,
    "watchers": 11214,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-1.0",
      "stable-1.1",
      "stable-2.0"
    ],
    "languages": {
      "C": 17349509,
      "C++": 685511,
      "CMake": 627854,
      "Objective-C": 540407,
      "Java": 373726,
      "HTML": 99135,
      "Shell": 51324,
      "Python": 46681,
      "Lua": 27393,
      "Roff": 26338,
      "Perl": 8044,
      "C#": 5756,
      "CSS": 5696,
      "Makefile": 2420,
      "Rich Text Format": 937
    },
    "commit_activity": {
      "total_commits_last_year": 2287,
      "avg_commits_per_week": 43.98076923076923,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:01:37.323973"
  }
}