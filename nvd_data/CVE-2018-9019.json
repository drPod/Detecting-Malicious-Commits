{
  "cve_id": "CVE-2018-9019",
  "github_data": {
    "repository": "Dolibarr/dolibarr",
    "fix_commit": "83b762b681c6dfdceb809d26ce95f3667b614739",
    "related_commits": [
      "83b762b681c6dfdceb809d26ce95f3667b614739",
      "83b762b681c6dfdceb809d26ce95f3667b614739"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "83b762b681c6dfdceb809d26ce95f3667b614739",
      "commit_date": "2018-04-25T14:01:06Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81896,
          "average_weekly_commits": 68.93602693602693,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1075
        }
      },
      "commit_message": {
        "title": "FIX CVE-2018-9019",
        "length": 17,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 172,
        "additions": 42,
        "deletions": 130
      },
      "files": [
        {
          "filename": "htdocs/accountancy/admin/accountmodel.php",
          "status": "modified",
          "additions": 7,
          "deletions": 33,
          "patch": "@@ -45,7 +45,7 @@\n \n $action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n $confirm=GETPOST('confirm','alpha');\n-$id=GETPOST('id','int');\n+$id=31;\n $rowid=GETPOST('rowid','alpha');\n $code=GETPOST('code','alpha');\n \n@@ -58,8 +58,8 @@\n $listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n $active = 1;\n \n-$sortfield = GETPOST(\"sortfield\",'alpha');\n-$sortorder = GETPOST(\"sortorder\",'alpha');\n+$sortfield = GETPOST(\"sortfield\",'aZ09comma');\n+$sortorder = GETPOST(\"sortorder\",'aZ09comma');\n $page = GETPOST(\"page\",'int');\n if (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n $offset = $listlimit * $page ;\n@@ -84,59 +84,48 @@\n $tabname=array();\n \n $tabname[31]= MAIN_DB_PREFIX.\"accounting_system\";\n-$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n \n // Dictionary labels\n $tablib=array();\n $tablib[31]= \"Pcg_version\";\n-$tablib[32]= \"DictionaryAccountancyCategory\";\n \n // Requests to extract data\n $tabsql=array();\n $tabsql[31]= \"SELECT s.rowid as rowid, pcg_version, s.label, s.fk_country as country_id, c.code as country_code, c.label as country, s.active FROM \".MAIN_DB_PREFIX.\"accounting_system as s, \".MAIN_DB_PREFIX.\"c_country as c WHERE s.fk_country=c.rowid and c.active=1\";\n-$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.sens, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n \n // Criteria to sort dictionaries\n $tabsqlsort=array();\n $tabsqlsort[31]=\"pcg_version ASC\";\n-$tabsqlsort[32]=\"position ASC\";\n \n // Nom des champs en resultat de select pour affichage du dictionnaire\n $tabfield=array();\n $tabfield[31]= \"pcg_version,label,country_id,country\";\n-$tabfield[32]= \"code,label,range_account,sens,category_type,formula,position,country_id,country\";\n \n // Nom des champs d'edition pour modification d'un enregistrement\n $tabfieldvalue=array();\n $tabfieldvalue[31]= \"pcg_version,label,country\";\n-$tabfieldvalue[32]= \"code,label,range_account,sens,category_type,formula,position,country\";\n \n // Nom des champs dans la table pour insertion d'un enregistrement\n $tabfieldinsert=array();\n $tabfieldinsert[31]= \"pcg_version,label,fk_country\";\n-$tabfieldinsert[32]= \"code,label,range_account,sens,category_type,formula,position,fk_country\";\n \n // Nom du rowid si le champ n'est pas de type autoincrement\n // Example: \"\" if id field is \"rowid\" and has autoincrement on\n //          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n $tabrowid=array();\n $tabrowid[31]= \"\";\n-$tabrowid[32]= \"\";\n \n // Condition to show dictionary in setup page\n $tabcond=array();\n $tabcond[31]= ! empty($conf->accounting->enabled);\n-$tabcond[32]= ! empty($conf->accounting->enabled);\n \n // List of help for fields\n $tabhelp=array();\n $tabhelp[31] = array('pcg_version'=>$langs->trans(\"EnterAnyCode\"));\n-$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n \n // List of check for fields (NOT USED YET)\n $tabfieldcheck=array();\n $tabfieldcheck[31] = array();\n-$tabfieldcheck[32] = array();\n \n \n // Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n@@ -484,7 +473,7 @@\n // Confirmation de la suppression de la ligne\n if ($action == 'delete')\n {\n-\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n+\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.urlencode($page).'&':'').'sortfield='.urlencode($sortfield).'&sortorder='.urlencode($sortorder).'&rowid='.urlencode($rowid).'&code='.urlencode($code).'&id='.urlencode($id), $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n }\n //var_dump($elementList);\n \n@@ -503,24 +492,9 @@\n \t\t$sql.= \" c.rowid = \".$search_country_id;\n \t}\n \n-\tif ($sortfield)\n-\t{\n-\t\t// If sort order is \"country\", we use country_code instead\n-\t\tif ($sortfield == 'country') $sortfield='country_code';\n-\t\t$sql.= \" ORDER BY \".$sortfield;\n-\t\tif ($sortorder)\n-\t\t{\n-\t\t\t$sql.=\" \".strtoupper($sortorder);\n-\t\t}\n-\t\t$sql.=\", \";\n-\t\t// Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n-\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n-\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n-\t}\n-\telse {\n-\t\t$sql.=\" ORDER BY \";\n-\t}\n-\t$sql.=$tabsqlsort[$id];\n+\t// If sort order is \"country\", we use country_code instead\n+\tif ($sortfield == 'country') $sortfield='country_code';\n+\t$sql.=$db->order($sortfield,$sortorder);\n \t$sql.=$db->plimit($listlimit+1,$offset);\n \t//print $sql;\n "
        },
        {
          "filename": "htdocs/accountancy/admin/categories.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -88,7 +88,7 @@\n \n llxheader('', $langs->trans('AccountingCategory'));\n \n-$linkback = '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories_list.php?search_country_id='.$mysoc->country_id.'\">'.$langs->trans(\"BackToList\").'</a>';\n+$linkback = '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories_list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n \n print load_fiche_titre($langs->trans('AccountingCategory'), $linkback);\n "
        },
        {
          "filename": "htdocs/accountancy/admin/categories_list.php",
          "status": "modified",
          "additions": 15,
          "deletions": 30,
          "patch": "@@ -54,8 +54,8 @@\n $listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n $active = 1;\n \n-$sortfield = GETPOST(\"sortfield\",'alpha');\n-$sortorder = GETPOST(\"sortorder\",'alpha');\n+$sortfield = GETPOST(\"sortfield\",'aZ09comma');\n+$sortorder = GETPOST(\"sortorder\",'aZ09comma');\n $page = GETPOST(\"page\",'int');\n if (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n $offset = $listlimit * $page ;\n@@ -300,7 +300,7 @@\n     if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n     else { $rowidcol=\"rowid\"; }\n \n-    $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n+    $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n \n     dol_syslog(\"delete\", LOG_DEBUG);\n     $result = $db->query($sql);\n@@ -324,10 +324,10 @@\n     else { $rowidcol=\"rowid\"; }\n \n     if ($rowid) {\n-        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n+        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n     }\n     elseif ($code) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code = '\".$this->db->escape($code).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code = '\".$db->escape($code).\"'\";\n     }\n \n     $result = $db->query($sql);\n@@ -344,10 +344,10 @@\n     else { $rowidcol=\"rowid\"; }\n \n     if ($rowid) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n     }\n     elseif ($code) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code = '\".$this->db->escape($code).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code = '\".$db->escape($code).\"'\";\n     }\n \n     $result = $db->query($sql);\n@@ -364,10 +364,10 @@\n     else { $rowidcol=\"rowid\"; }\n \n     if ($rowid) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n     }\n     elseif ($code) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code = '\".$this->db->escape($code).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code = '\".$db->escape($code).\"'\";\n     }\n \n     $result = $db->query($sql);\n@@ -384,10 +384,10 @@\n     else { $rowidcol=\"rowid\"; }\n \n     if ($rowid) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n     }\n     elseif ($code) {\n-    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code = '\".$this->db->escape($code).\"'\";\n+    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code = '\".$db->escape($code).\"'\";\n     }\n \n     $result = $db->query($sql);\n@@ -437,24 +437,9 @@\n         $sql.= \" (a.fk_country = \".$search_country_id.\" OR a.fk_country = 0)\";\n     }\n \n-    if ($sortfield)\n-    {\n-        // If sort order is \"country\", we use country_code instead\n-    \tif ($sortfield == 'country') $sortfield='country_code';\n-        $sql.= \" ORDER BY \".$sortfield;\n-        if ($sortorder)\n-        {\n-            $sql.=\" \".strtoupper($sortorder);\n-        }\n-        $sql.=\", \";\n-        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n-        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n-        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n-    }\n-    else {\n-        $sql.=\" ORDER BY \";\n-    }\n-    $sql.=$tabsqlsort[$id];\n+    // If sort order is \"country\", we use country_code instead\n+    if ($sortfield == 'country') $sortfield='country_code';\n+    $sql.=$db->order($sortfield,$sortorder);\n     $sql.=$db->plimit($listlimit+1,$offset);\n     //print $sql;\n \n@@ -793,7 +778,7 @@\n                     print '<td class=\"center\">';\n                     if (empty($obj->formula))\n                     {\n-                        print '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories.php?action=display&account_category='.$obj->rowid.'\">';\n+                        print '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories.php?action=display&save_lastsearch_values=1&account_category='.$obj->rowid.'\">';\n                         print $langs->trans(\"ListOfAccounts\");\n                         print '</a>';\n                     }"
        },
        {
          "filename": "htdocs/accountancy/admin/journals_list.php",
          "status": "modified",
          "additions": 4,
          "deletions": 19,
          "patch": "@@ -36,7 +36,7 @@\n \n $action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n $confirm=GETPOST('confirm','alpha');\n-$id=GETPOST('id','int');\n+$id=35;\n $rowid=GETPOST('rowid','alpha');\n $code=GETPOST('code','alpha');\n \n@@ -400,24 +400,9 @@\n \t$sql=$tabsql[$id];\n \t$sql.= \" WHERE a.entity = \".$conf->entity;\n \n-\tif ($sortfield)\n-\t{\n-\t\t// If sort order is \"country\", we use country_code instead\n-\t\tif ($sortfield == 'country') $sortfield='country_code';\n-\t\t$sql.= \" ORDER BY \".$sortfield;\n-\t\tif ($sortorder)\n-\t\t{\n-\t\t\t$sql.=\" \".strtoupper($sortorder);\n-\t\t}\n-\t\t$sql.=\", \";\n-\t\t// Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n-\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n-\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n-\t}\n-\telse {\n-\t\t$sql.=\" ORDER BY \";\n-\t}\n-\t$sql.=$tabsqlsort[$id];\n+\t// If sort order is \"country\", we use country_code instead\n+\tif ($sortfield == 'country') $sortfield='country_code';\n+\t$sql.=$db->order($sortfield,$sortorder);\n \t$sql.=$db->plimit($listlimit+1,$offset);\n \n \t$fieldlist=explode(',',$tabfield[$id]);"
        },
        {
          "filename": "htdocs/admin/dict.php",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -965,14 +965,14 @@\n print \"<br>\\n\";\n \n \n-$param = '&id='.$id;\n-if ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n+$param = '&id='.urlencode($id);\n+if ($search_country_id > 0) $param.= '&search_country_id='.urlencode($search_country_id);\n if ($search_code != '')     $param.= '&search_code='.urlencode($search_country_id);\n if ($entity != '') $param.= '&entity=' . (int) $entity;\n $paramwithsearch = $param;\n-if ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n-if ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n-if (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n+if ($sortorder) $paramwithsearch.= '&sortorder='.urlencode($sortorder);\n+if ($sortfield) $paramwithsearch.= '&sortfield='.urlencode($sortfield);\n+if (GETPOST('from')) $paramwithsearch.= '&from='.urlencode(GETPOST('from','alpha'));\n \n \n // Confirmation de la suppression de la ligne\n@@ -999,10 +999,10 @@\n     {\n         // If sort order is \"country\", we use country_code instead\n     \tif ($sortfield == 'country') $sortfield='country_code';\n-        $sql.= \" ORDER BY \".$sortfield;\n+        $sql.= \" ORDER BY \".$db->escape($sortfield);\n         if ($sortorder)\n         {\n-            $sql.=\" \".strtoupper($sortorder);\n+        \t$sql.=\" \".strtoupper($db->escape($sortorder));\n         }\n         $sql.=\", \";\n         // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value"
        },
        {
          "filename": "htdocs/admin/mails_templates.php",
          "status": "modified",
          "additions": 3,
          "deletions": 18,
          "patch": "@@ -430,24 +430,9 @@\n if ($search_lang) $sql.=natural_search('lang', $search_lang);\n if ($search_fk_user != '' && $search_fk_user != '-1') $sql.=natural_search('fk_user', $search_fk_user, 2);\n if ($search_topic) $sql.=natural_search('topic', $search_topic);\n-if ($sortfield)\n-{\n-    // If sort order is \"country\", we use country_code instead\n-\tif ($sortfield == 'country') $sortfield='country_code';\n-    $sql.= \" ORDER BY \".$sortfield;\n-    if ($sortorder)\n-    {\n-        $sql.=\" \".strtoupper($sortorder);\n-    }\n-    $sql.=\", \";\n-    // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n-    $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n-    $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n-}\n-else {\n-    $sql.=\" ORDER BY \";\n-}\n-$sql.=$tabsqlsort[$id];\n+// If sort order is \"country\", we use country_code instead\n+if ($sortfield == 'country') $sortfield='country_code';\n+$sql.=$db->order($sortfield,$sortorder);\n $sql.=$db->plimit($listlimit+1,$offset);\n //print $sql;\n "
        },
        {
          "filename": "htdocs/admin/website.php",
          "status": "modified",
          "additions": 1,
          "deletions": 18,
          "patch": "@@ -419,24 +419,7 @@\n {\n     // Complete requete recherche valeurs avec critere de tri\n     $sql=$tabsql[$id];\n-\n-    if ($sortfield)\n-    {\n-        // If sort order is \"country\", we use country_code instead\n-        $sql.= \" ORDER BY \".$sortfield;\n-        if ($sortorder)\n-        {\n-            $sql.=\" \".strtoupper($sortorder);\n-        }\n-        $sql.=\", \";\n-        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n-        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n-        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n-    }\n-    else {\n-        $sql.=\" ORDER BY \";\n-    }\n-    $sql.=$tabsqlsort[$id];\n+    $sql.=$db->order($sortfield,$sortorder);\n     $sql.=$db->plimit($limit+1, $offset);\n     //print $sql;\n "
        },
        {
          "filename": "htdocs/core/lib/functions.lib.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -578,12 +578,12 @@ function GETPOST($paramname, $check='none', $method=0, $filter=NULL, $options=NU\n \t\t{\n \t\t\t//var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n \n-\t\t\t// We save search key only if:\n-\t\t\t// - not empty, or\n-\t\t\t// - if value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n+\t\t\t// We save search key only if $out not empty that means:\n+\t\t\t// - posted value not empty, or\n+\t\t\t// - if posted value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n \n \t\t\t//if (! empty($out) || ! empty($user->default_values[$relativepathstring]['filters'][$paramname]))\n-\t\t\tif (! empty($out))\n+\t\t\tif ($out != '')\t\t// $out = '0' like 'abc' is a search criteria to keep\n \t\t\t{\n \t\t\t\t$user->lastsearch_values_tmp[$relativepathstring][$paramname]=$out;\n \t\t\t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aca840e1002c3ad088eeb5ca520ddc3778b5621e",
            "date": "2025-01-25T18:34:25Z",
            "author_login": "eldy"
          },
          {
            "sha": "01c5025befe9bfaa32812ee633a4bb8924e855d9",
            "date": "2025-01-25T15:07:41Z",
            "author_login": "eldy"
          },
          {
            "sha": "c3ca19e6e7a14acdc205dabfc7ffdc543c52d5ed",
            "date": "2025-01-25T15:06:31Z",
            "author_login": "eldy"
          },
          {
            "sha": "722797aaade08f1262056e4d7dd4a6343a90c787",
            "date": "2025-01-25T15:02:17Z",
            "author_login": "eldy"
          },
          {
            "sha": "c3dd7733e41e265cde3322c2c9c7f00c7793401a",
            "date": "2025-01-25T14:53:05Z",
            "author_login": "eldy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "SQL Injection vulnerability in Dolibarr before version 7.0.2 allows remote attackers to execute arbitrary SQL commands via the sortfield parameter to /accountancy/admin/accountmodel.php, /accountancy/admin/categories_list.php, /accountancy/admin/journals_list.php, /admin/dict.php, /admin/mails_templates.php, or /admin/website.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2018-05-22T20:29:01.273",
    "last_modified": "2024-11-21T04:14:47.947",
    "fix_date": "2018-04-25T14:01:06Z"
  },
  "references": [
    {
      "url": "https://github.com/Dolibarr/dolibarr/blob/7.0.2/ChangeLog",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/83b762b681c6dfdceb809d26ce95f3667b614739",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/blob/7.0.2/ChangeLog",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/83b762b681c6dfdceb809d26ce95f3667b614739",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:25.855079",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "Dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-25T18:34:32Z",
    "pushed_at": "2025-01-25T18:34:25Z",
    "size": 1509625,
    "stars": 5649,
    "forks": 2842,
    "open_issues": 1183,
    "watchers": 5649,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72670617,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12205,
      "avg_commits_per_week": 234.71153846153845,
      "days_active_last_year": 347
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:41:05.033221"
  }
}