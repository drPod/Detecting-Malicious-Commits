{
  "cve_id": "CVE-2019-10767",
  "github_data": {
    "repository": "ioBroker/ioBroker.js-controller",
    "fix_commit": "f6e292c6750a491a5000d0f851b2fede4f9e2fda",
    "related_commits": [
      "f6e292c6750a491a5000d0f851b2fede4f9e2fda",
      "f6e292c6750a491a5000d0f851b2fede4f9e2fda"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f6e292c6750a491a5000d0f851b2fede4f9e2fda",
      "commit_date": "2019-10-04T09:09:30Z",
      "author": {
        "login": "Apollon77",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "some security enhancements to better prevent path traversing",
        "length": 60,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 45,
        "additions": 42,
        "deletions": 3
      },
      "files": [
        {
          "filename": "lib/objects/objectsUtils.js",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -472,11 +472,17 @@ function sanitizePath(id, name, callback) {\n     }\n \n     if (id) {\n-        id = id.replace(/\\.\\./g, ''); // do not allow to write in parent directories\n+        id = id.replace(/[\\]\\[*,;'\"`<>\\\\?\\/]/g, ''); // remove all invalid characters from states plus slashes\n     }\n \n-    if (name.indexOf('..') !== -1) {\n-        name = path.normalize(name);\n+    if (name.includes('..')) {\n+        name = path.normalize('/' + name);\n+        name = name.replace(/\\\\/g, '/');\n+    }\n+    if (name.includes('..')) {\n+        // Also after normalization we still have .. in it - should not happen if normalize worked correctly\n+        name = name.replace(/\\.\\./g, '');\n+        name = path.normalize('/' + name);\n         name = name.replace(/\\\\/g, '/');\n     }\n     if (name[0] === '/') name = name.substring(1); // do not allow absolute paths"
        },
        {
          "filename": "test/lib/testObjects.js",
          "status": "modified",
          "additions": 33,
          "deletions": 0,
          "patch": "@@ -341,6 +341,39 @@ function register(it, expect, context) {\n         });\n     });\n \n+    it(textName + 'should read file and prevent path traversing', done => {\n+        const objects = context.objects;\n+        objects.readFile(testId, '../../myFile/abc1.txt', err => {\n+            expect(err).to.be.not.ok;\n+            expect(data).to.be.equal('dataInFile');\n+            objects.readFile(testId, '/myFile/abc1.txt', err => {\n+                expect(err).to.be.not.ok;\n+                expect(data).to.be.equal('dataInFile');\n+                objects.readFile(testId, '/../../myFile/abc1.txt', err => {\n+                    expect(err).to.be.not.ok;\n+                    expect(data).to.be.equal('dataInFile');\n+                    objects.readFile(testId, 'myFile/../blubb/../myFile/abc1.txt', err => {\n+                        expect(err).to.be.not.ok;\n+                        expect(data).to.be.equal('dataInFile');\n+                        objects.readFile(testId, '/myFile/../blubb/../myFile/abc1.txt', err => {\n+                            expect(err).to.be.not.ok;\n+                            expect(data).to.be.equal('dataInFile');\n+                            objects.readFile(testId, '../blubb/../myFile/abc1.txt', err => {\n+                                expect(err).to.be.not.ok;\n+                                expect(data).to.be.equal('dataInFile');\n+                                objects.readFile(testId, '/../blubb/../myFile/abc1.txt', err => {\n+                                    expect(err).to.be.not.ok;\n+                                    expect(data).to.be.equal('dataInFile');\n+                                    done();\n+                                });\n+                            });\n+                        });\n+                    });\n+                });\n+            });\n+        });\n+    });\n+\n     it(textName + 'should unlink file', done => {\n         const objects = context.objects;\n         objects.unlink(testId, 'myFile/abc1.txt', err => {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1e5ae5ec4b6b1d75e2b14ffe7dbaa28dc25d8a34",
            "date": "2025-01-25T02:57:31Z",
            "author_login": "foxriver76"
          },
          {
            "sha": "99469b9944509b9c64b9a28da6d8dabf17a8ea74",
            "date": "2025-01-24T18:55:40Z",
            "author_login": "GermanBluefox"
          },
          {
            "sha": "03d82e2a18c2d61bdf5ef1fbe4e05134746a920f",
            "date": "2025-01-14T02:59:49Z",
            "author_login": "foxriver76"
          },
          {
            "sha": "3f7dfd7110e5b0031cea7f51684c94438886c7d3",
            "date": "2025-01-13T15:39:58Z",
            "author_login": "foxriver76"
          },
          {
            "sha": "ea2722d8dd5e71948413bd1bffd891df2f0a4497",
            "date": "2025-01-10T03:10:02Z",
            "author_login": "foxriver76"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "An attacker can include file contents from outside the `/adapter/xxx/` directory, where `xxx` is the name of an existent adapter like \"admin\". It is exploited using the administrative web panel with a request for an adapter file. **Note:** The attacker has to be logged in if the authentication is enabled (by default isn't enabled).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-11-21T17:15:11.350",
    "last_modified": "2024-11-21T04:19:52.933",
    "fix_date": "2019-10-04T09:09:30Z"
  },
  "references": [
    {
      "url": "https://github.com/ioBroker/ioBroker.js-controller/commit/f6e292c6750a491a5000d0f851b2fede4f9e2fda",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-IOBROKERJSCONTROLLER-534881",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ioBroker/ioBroker.js-controller/commit/f6e292c6750a491a5000d0f851b2fede4f9e2fda",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-IOBROKERJSCONTROLLER-534881",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:09.209166",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "ioBroker.js-controller",
    "owner": "ioBroker",
    "created_at": "2014-07-22T18:58:09Z",
    "updated_at": "2025-01-25T02:57:36Z",
    "pushed_at": "2025-01-25T16:45:33Z",
    "size": 103969,
    "stars": 292,
    "forks": 57,
    "open_issues": 103,
    "watchers": 292,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 2521736,
      "JavaScript": 206254,
      "Lua": 15416,
      "Shell": 2186
    },
    "commit_activity": {
      "total_commits_last_year": 270,
      "avg_commits_per_week": 5.1923076923076925,
      "days_active_last_year": 125
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:45:21.812912"
  }
}