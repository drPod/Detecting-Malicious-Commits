{
  "cve_id": "CVE-2019-10793",
  "github_data": {
    "repository": "rhalff/dot-object",
    "fix_commit": "f76cff5fe6d01d30ce110d8f454db2e5bd28a7de",
    "related_commits": [
      "f76cff5fe6d01d30ce110d8f454db2e5bd28a7de",
      "f76cff5fe6d01d30ce110d8f454db2e5bd28a7de"
    ],
    "patch_url": "https://github.com/rhalff/dot-object/commit/f76cff5fe6d01d30ce110d8f454db2e5bd28a7de.patch",
    "fix_commit_details": {
      "sha": "f76cff5fe6d01d30ce110d8f454db2e5bd28a7de",
      "commit_date": "2020-02-16T18:07:45Z",
      "author": {
        "login": "rhalff",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "guard for possible prototype polution",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 307,
        "additions": 188,
        "deletions": 119
      },
      "files": [
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 80,
          "deletions": 57,
          "patch": "@@ -45,11 +45,22 @@ function isEmptyObject (val) {\n   return Object.keys(val).length === 0\n }\n \n+const blacklist = ['__proto__', 'prototype', 'constructor']\n+\n function parsePath (path, sep) {\n   if (path.indexOf('[') >= 0) {\n     path = path.replace(/\\[/g, '.').replace(/]/g, '')\n   }\n-  return path.split(sep)\n+\n+  const parts = path.split(sep)\n+\n+  const check = parts.filter(part => blacklist.indexOf(part) === -1)\n+\n+  if (check.length !== parts.length) {\n+    throw Error('Refusing to update blacklisted property ' + path)\n+  }\n+\n+  return parts\n }\n \n var hasOwnProperty = Object.prototype.hasOwnProperty\n@@ -83,8 +94,7 @@ DotObject.prototype._fill = function (a, obj, v, mod) {\n   var k = a.shift()\n \n   if (a.length > 0) {\n-    obj[k] = obj[k] ||\n-      (this.useArray && isIndex(a[0]) ? [] : {})\n+    obj[k] = obj[k] || (this.useArray && isIndex(a[0]) ? [] : {})\n \n     if (!isArrayOrObject(obj[k])) {\n       if (this.override) {\n@@ -102,8 +112,7 @@ DotObject.prototype._fill = function (a, obj, v, mod) {\n \n     this._fill(a, obj[k], v, mod)\n   } else {\n-    if (!this.override &&\n-      isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n+    if (!this.override && isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n       if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n         throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\")\n       }\n@@ -195,7 +204,7 @@ DotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n   for (i = 0; i < keys.length; i++) {\n     key = parseKey(keys[i], obj)\n     if (obj && typeof obj === 'object' && key in obj) {\n-      if (i === (keys.length - 1)) {\n+      if (i === keys.length - 1) {\n         if (remove) {\n           val = obj[key]\n           if (reindexArray && Array.isArray(obj)) {\n@@ -221,7 +230,9 @@ DotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n     }\n   }\n   if (remove && Array.isArray(obj)) {\n-    obj = obj.filter(function (n) { return n !== undefined })\n+    obj = obj.filter(function (n) {\n+      return n !== undefined\n+    })\n   }\n   return obj\n }\n@@ -279,7 +290,9 @@ DotObject.prototype._cleanup = function (obj) {\n       keys = this.cleanup[i].split('.')\n       root = keys.splice(0, -1).join('.')\n       ret = root ? this.pick(root, obj) : obj\n-      ret = ret[keys[0]].filter(function (v) { return v !== undefined })\n+      ret = ret[keys[0]].filter(function (v) {\n+        return v !== undefined\n+      })\n       this.set(this.cleanup[i], ret, obj)\n     }\n     this.cleanup = []\n@@ -336,13 +349,21 @@ DotObject.prototype.move = function (source, target, obj, mods, merge) {\n  * @param {Function|Array} mods\n  * @param {Boolean} merge\n  */\n-DotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {\n+DotObject.prototype.transfer = function (\n+  source,\n+  target,\n+  obj1,\n+  obj2,\n+  mods,\n+  merge\n+) {\n   if (typeof mods === 'function' || Array.isArray(mods)) {\n-    this.set(target,\n-      _process(\n-        this.pick(source, obj1, true),\n-        mods\n-      ), obj2, merge)\n+    this.set(\n+      target,\n+      _process(this.pick(source, obj1, true), mods),\n+      obj2,\n+      merge\n+    )\n   } else {\n     merge = mods\n     this.set(target, this.pick(source, obj1, true), obj2, merge)\n@@ -367,16 +388,16 @@ DotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge\n  */\n DotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n   if (typeof mods === 'function' || Array.isArray(mods)) {\n-    this.set(target,\n+    this.set(\n+      target,\n       _process(\n         // clone what is picked\n-        JSON.parse(\n-          JSON.stringify(\n-            this.pick(source, obj1, false)\n-          )\n-        ),\n+        JSON.parse(JSON.stringify(this.pick(source, obj1, false))),\n         mods\n-      ), obj2, merge)\n+      ),\n+      obj2,\n+      merge\n+    )\n   } else {\n     merge = mods\n     this.set(target, this.pick(source, obj1, false), obj2, merge)\n@@ -408,7 +429,7 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n \n   for (i = 0; i < keys.length; i++) {\n     key = keys[i]\n-    if (i === (keys.length - 1)) {\n+    if (i === keys.length - 1) {\n       if (merge && isObject(val) && isObject(obj[key])) {\n         for (k in val) {\n           if (hasOwnProperty.call(val, k)) {\n@@ -447,14 +468,14 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n  *\n  *   var obj = {\n  *     \"id\": 1,\n-  *    \"some\": {\n-  *      \"thing\": \"else\"\n-  *    }\n+ *    \"some\": {\n+ *      \"thing\": \"else\"\n+ *    }\n  *   }\n  *\n  *   var transform = {\n  *     \"id\": \"nr\",\n-  *    \"some.thing\": \"name\"\n+ *    \"some.thing\": \"name\"\n  *   }\n  *\n  *   var tgt = dot.transform(transform, obj)\n@@ -466,9 +487,11 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n DotObject.prototype.transform = function (recipe, obj, tgt) {\n   obj = obj || {}\n   tgt = tgt || {}\n-  Object.keys(recipe).forEach(function (key) {\n-    this.set(recipe[key], this.pick(key, obj), tgt)\n-  }.bind(this))\n+  Object.keys(recipe).forEach(\n+    function (key) {\n+      this.set(recipe[key], this.pick(key, obj), tgt)\n+    }.bind(this)\n+  )\n   return tgt\n }\n \n@@ -494,31 +517,33 @@ DotObject.prototype.dot = function (obj, tgt, path) {\n   path = path || []\n   var isArray = Array.isArray(obj)\n \n-  Object.keys(obj).forEach(function (key) {\n-    var index = isArray && this.useBrackets ? '[' + key + ']' : key\n-    if (\n-      (\n+  Object.keys(obj).forEach(\n+    function (key) {\n+      var index = isArray && this.useBrackets ? '[' + key + ']' : key\n+      if (\n         isArrayOrObject(obj[key]) &&\n-        (\n-          (isObject(obj[key]) && !isEmptyObject(obj[key])) ||\n-          (Array.isArray(obj[key]) && (!this.keepArray && (obj[key].length !== 0)))\n-        )\n-      )\n-    ) {\n-      if (isArray && this.useBrackets) {\n-        var previousKey = path[path.length - 1] || ''\n-        return this.dot(obj[key], tgt, path.slice(0, -1).concat(previousKey + index))\n-      } else {\n-        return this.dot(obj[key], tgt, path.concat(index))\n-      }\n-    } else {\n-      if (isArray && this.useBrackets) {\n-        tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]\n+        ((isObject(obj[key]) && !isEmptyObject(obj[key])) ||\n+          (Array.isArray(obj[key]) && !this.keepArray && obj[key].length !== 0))\n+      ) {\n+        if (isArray && this.useBrackets) {\n+          var previousKey = path[path.length - 1] || ''\n+          return this.dot(\n+            obj[key],\n+            tgt,\n+            path.slice(0, -1).concat(previousKey + index)\n+          )\n+        } else {\n+          return this.dot(obj[key], tgt, path.concat(index))\n+        }\n       } else {\n-        tgt[path.concat(index).join(this.separator)] = obj[key]\n+        if (isArray && this.useBrackets) {\n+          tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]\n+        } else {\n+          tgt[path.concat(index).join(this.separator)] = obj[key]\n+        }\n       }\n-    }\n-  }.bind(this))\n+    }.bind(this)\n+  )\n   return tgt\n }\n \n@@ -532,9 +557,8 @@ DotObject.str = wrap('str')\n DotObject.set = wrap('set')\n DotObject.delete = wrap('delete')\n DotObject.del = DotObject.remove = wrap('remove')\n-DotObject.dot = wrap('dot')\n-\n-;['override', 'overwrite'].forEach(function (prop) {\n+DotObject.dot = wrap('dot');\n+['override', 'overwrite'].forEach(function (prop) {\n   Object.defineProperty(DotObject, prop, {\n     get: function () {\n       return dotDefault.override\n@@ -543,9 +567,8 @@ DotObject.dot = wrap('dot')\n       dotDefault.override = !!val\n     }\n   })\n-})\n-\n-;['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n+});\n+['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n   Object.defineProperty(DotObject, prop, {\n     get: function () {\n       return dotDefault[prop]"
        },
        {
          "filename": "src/dot-object.js",
          "status": "modified",
          "additions": 80,
          "deletions": 57,
          "patch": "@@ -45,11 +45,22 @@ function isEmptyObject (val) {\n   return Object.keys(val).length === 0\n }\n \n+const blacklist = ['__proto__', 'prototype', 'constructor']\n+\n function parsePath (path, sep) {\n   if (path.indexOf('[') >= 0) {\n     path = path.replace(/\\[/g, '.').replace(/]/g, '')\n   }\n-  return path.split(sep)\n+\n+  const parts = path.split(sep)\n+\n+  const check = parts.filter(part => blacklist.indexOf(part) === -1)\n+\n+  if (check.length !== parts.length) {\n+    throw Error('Refusing to update blacklisted property ' + path)\n+  }\n+\n+  return parts\n }\n \n var hasOwnProperty = Object.prototype.hasOwnProperty\n@@ -83,8 +94,7 @@ DotObject.prototype._fill = function (a, obj, v, mod) {\n   var k = a.shift()\n \n   if (a.length > 0) {\n-    obj[k] = obj[k] ||\n-      (this.useArray && isIndex(a[0]) ? [] : {})\n+    obj[k] = obj[k] || (this.useArray && isIndex(a[0]) ? [] : {})\n \n     if (!isArrayOrObject(obj[k])) {\n       if (this.override) {\n@@ -102,8 +112,7 @@ DotObject.prototype._fill = function (a, obj, v, mod) {\n \n     this._fill(a, obj[k], v, mod)\n   } else {\n-    if (!this.override &&\n-      isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n+    if (!this.override && isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n       if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n         throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\")\n       }\n@@ -195,7 +204,7 @@ DotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n   for (i = 0; i < keys.length; i++) {\n     key = parseKey(keys[i], obj)\n     if (obj && typeof obj === 'object' && key in obj) {\n-      if (i === (keys.length - 1)) {\n+      if (i === keys.length - 1) {\n         if (remove) {\n           val = obj[key]\n           if (reindexArray && Array.isArray(obj)) {\n@@ -221,7 +230,9 @@ DotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n     }\n   }\n   if (remove && Array.isArray(obj)) {\n-    obj = obj.filter(function (n) { return n !== undefined })\n+    obj = obj.filter(function (n) {\n+      return n !== undefined\n+    })\n   }\n   return obj\n }\n@@ -279,7 +290,9 @@ DotObject.prototype._cleanup = function (obj) {\n       keys = this.cleanup[i].split('.')\n       root = keys.splice(0, -1).join('.')\n       ret = root ? this.pick(root, obj) : obj\n-      ret = ret[keys[0]].filter(function (v) { return v !== undefined })\n+      ret = ret[keys[0]].filter(function (v) {\n+        return v !== undefined\n+      })\n       this.set(this.cleanup[i], ret, obj)\n     }\n     this.cleanup = []\n@@ -336,13 +349,21 @@ DotObject.prototype.move = function (source, target, obj, mods, merge) {\n  * @param {Function|Array} mods\n  * @param {Boolean} merge\n  */\n-DotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {\n+DotObject.prototype.transfer = function (\n+  source,\n+  target,\n+  obj1,\n+  obj2,\n+  mods,\n+  merge\n+) {\n   if (typeof mods === 'function' || Array.isArray(mods)) {\n-    this.set(target,\n-      _process(\n-        this.pick(source, obj1, true),\n-        mods\n-      ), obj2, merge)\n+    this.set(\n+      target,\n+      _process(this.pick(source, obj1, true), mods),\n+      obj2,\n+      merge\n+    )\n   } else {\n     merge = mods\n     this.set(target, this.pick(source, obj1, true), obj2, merge)\n@@ -367,16 +388,16 @@ DotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge\n  */\n DotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n   if (typeof mods === 'function' || Array.isArray(mods)) {\n-    this.set(target,\n+    this.set(\n+      target,\n       _process(\n         // clone what is picked\n-        JSON.parse(\n-          JSON.stringify(\n-            this.pick(source, obj1, false)\n-          )\n-        ),\n+        JSON.parse(JSON.stringify(this.pick(source, obj1, false))),\n         mods\n-      ), obj2, merge)\n+      ),\n+      obj2,\n+      merge\n+    )\n   } else {\n     merge = mods\n     this.set(target, this.pick(source, obj1, false), obj2, merge)\n@@ -408,7 +429,7 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n \n   for (i = 0; i < keys.length; i++) {\n     key = keys[i]\n-    if (i === (keys.length - 1)) {\n+    if (i === keys.length - 1) {\n       if (merge && isObject(val) && isObject(obj[key])) {\n         for (k in val) {\n           if (hasOwnProperty.call(val, k)) {\n@@ -447,14 +468,14 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n  *\n  *   var obj = {\n  *     \"id\": 1,\n-  *    \"some\": {\n-  *      \"thing\": \"else\"\n-  *    }\n+ *    \"some\": {\n+ *      \"thing\": \"else\"\n+ *    }\n  *   }\n  *\n  *   var transform = {\n  *     \"id\": \"nr\",\n-  *    \"some.thing\": \"name\"\n+ *    \"some.thing\": \"name\"\n  *   }\n  *\n  *   var tgt = dot.transform(transform, obj)\n@@ -466,9 +487,11 @@ DotObject.prototype.set = function (path, val, obj, merge) {\n DotObject.prototype.transform = function (recipe, obj, tgt) {\n   obj = obj || {}\n   tgt = tgt || {}\n-  Object.keys(recipe).forEach(function (key) {\n-    this.set(recipe[key], this.pick(key, obj), tgt)\n-  }.bind(this))\n+  Object.keys(recipe).forEach(\n+    function (key) {\n+      this.set(recipe[key], this.pick(key, obj), tgt)\n+    }.bind(this)\n+  )\n   return tgt\n }\n \n@@ -494,31 +517,33 @@ DotObject.prototype.dot = function (obj, tgt, path) {\n   path = path || []\n   var isArray = Array.isArray(obj)\n \n-  Object.keys(obj).forEach(function (key) {\n-    var index = isArray && this.useBrackets ? '[' + key + ']' : key\n-    if (\n-      (\n+  Object.keys(obj).forEach(\n+    function (key) {\n+      var index = isArray && this.useBrackets ? '[' + key + ']' : key\n+      if (\n         isArrayOrObject(obj[key]) &&\n-        (\n-          (isObject(obj[key]) && !isEmptyObject(obj[key])) ||\n-          (Array.isArray(obj[key]) && (!this.keepArray && (obj[key].length !== 0)))\n-        )\n-      )\n-    ) {\n-      if (isArray && this.useBrackets) {\n-        var previousKey = path[path.length - 1] || ''\n-        return this.dot(obj[key], tgt, path.slice(0, -1).concat(previousKey + index))\n-      } else {\n-        return this.dot(obj[key], tgt, path.concat(index))\n-      }\n-    } else {\n-      if (isArray && this.useBrackets) {\n-        tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]\n+        ((isObject(obj[key]) && !isEmptyObject(obj[key])) ||\n+          (Array.isArray(obj[key]) && !this.keepArray && obj[key].length !== 0))\n+      ) {\n+        if (isArray && this.useBrackets) {\n+          var previousKey = path[path.length - 1] || ''\n+          return this.dot(\n+            obj[key],\n+            tgt,\n+            path.slice(0, -1).concat(previousKey + index)\n+          )\n+        } else {\n+          return this.dot(obj[key], tgt, path.concat(index))\n+        }\n       } else {\n-        tgt[path.concat(index).join(this.separator)] = obj[key]\n+        if (isArray && this.useBrackets) {\n+          tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]\n+        } else {\n+          tgt[path.concat(index).join(this.separator)] = obj[key]\n+        }\n       }\n-    }\n-  }.bind(this))\n+    }.bind(this)\n+  )\n   return tgt\n }\n \n@@ -532,9 +557,8 @@ DotObject.str = wrap('str')\n DotObject.set = wrap('set')\n DotObject.delete = wrap('delete')\n DotObject.del = DotObject.remove = wrap('remove')\n-DotObject.dot = wrap('dot')\n-\n-;['override', 'overwrite'].forEach(function (prop) {\n+DotObject.dot = wrap('dot');\n+['override', 'overwrite'].forEach(function (prop) {\n   Object.defineProperty(DotObject, prop, {\n     get: function () {\n       return dotDefault.override\n@@ -543,9 +567,8 @@ DotObject.dot = wrap('dot')\n       dotDefault.override = !!val\n     }\n   })\n-})\n-\n-;['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n+});\n+['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n   Object.defineProperty(DotObject, prop, {\n     get: function () {\n       return dotDefault[prop]"
        },
        {
          "filename": "test/array_notation.js",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -167,4 +167,10 @@ describe('Dotted Array notation', function () {\n   describe('with bracket notation', function () {\n     runVariant('bracket')\n   })\n+\n+  describe('Refuse to update __proto__', function () {\n+    var obj = { path: [] }\n+\n+    ;(() => Dot.set('path[0].__proto__.toString', 'test', obj)).should.throw(/Refusing to update/)\n+  })\n })"
        },
        {
          "filename": "test/dot-json.js",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -205,4 +205,11 @@ describe('Object test:', function () {\n \n     row.should.eql({ page: { name: 'my_page' } })\n   })\n+\n+  it('Dot.object should disallow to set __proto__', function () {\n+    var row = { '__proto__.toString': 'hi' }\n+\n+    var dot = new Dot()\n+    ;(() => dot.object(row)).should.throw(/Refusing to update/)\n+  })\n })"
        },
        {
          "filename": "test/str.js",
          "status": "modified",
          "additions": 15,
          "deletions": 5,
          "patch": "@@ -34,11 +34,14 @@ describe('str:', function () {\n     obj.should.deepEqual({\n       a: 1,\n       object: {\n-        fields: [{\n-          subfield: 'value'\n-        }, {\n-          subfield: 'value1'\n-        }]\n+        fields: [\n+          {\n+            subfield: 'value'\n+          },\n+          {\n+            subfield: 'value1'\n+          }\n+        ]\n       }\n     })\n   })\n@@ -50,4 +53,11 @@ describe('str:', function () {\n       a: 'b'\n     })\n   })\n+\n+  it('cannot set __proto__ property', function () {\n+    (() => Dot.str('__proto__.toString', 'hi', {})).should.throw(\n+      /Refusing to update/\n+    );\n+    ({}.toString().should.deepEqual('[object Object]'))\n+  })\n })"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a95a7fc88c55a82bae785c0dd1791d5e40156957",
            "date": "2024-04-19T11:55:40Z",
            "author_login": "rhalff"
          },
          {
            "sha": "05ff71974f323749e03a7d29378130248d9e24bf",
            "date": "2024-04-19T11:53:07Z",
            "author_login": "rhalff"
          },
          {
            "sha": "67eb561ae6445fcf3e38a48170aaf9d0a5cf1805",
            "date": "2024-04-19T11:52:47Z",
            "author_login": "rhalff"
          },
          {
            "sha": "d7964e798a54c882ad3ab1b584f53418142b356e",
            "date": "2024-04-19T11:52:30Z",
            "author_login": "rhalff"
          },
          {
            "sha": "6b0790a33cfedf1e53a44609884d249bf273974e",
            "date": "2024-04-19T11:52:16Z",
            "author_login": "rhalff"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-74",
    "description": "dot-object before 2.1.3 is vulnerable to Prototype Pollution. The set function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-02-18T16:15:10.327",
    "last_modified": "2024-11-21T04:19:55.940",
    "fix_date": "2020-02-16T18:07:45Z"
  },
  "references": [
    {
      "url": "https://github.com/rhalff/dot-object/commit/f76cff5fe6d01d30ce110d8f454db2e5bd28a7de",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-DOTOBJECT-548905",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rhalff/dot-object/commit/f76cff5fe6d01d30ce110d8f454db2e5bd28a7de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-DOTOBJECT-548905",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:39.854207",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dot-object",
    "owner": "rhalff",
    "created_at": "2013-06-13T22:03:37Z",
    "updated_at": "2024-12-26T20:14:40Z",
    "pushed_at": "2024-04-19T11:59:40Z",
    "size": 549,
    "stars": 474,
    "forks": 47,
    "open_issues": 44,
    "watchers": 474,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 64792,
      "Smarty": 307
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:28:46.528149"
  }
}