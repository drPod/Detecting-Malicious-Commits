{
  "cve_id": "CVE-2019-11413",
  "github_data": {
    "repository": "ccxvii/mujs",
    "fix_commit": "00d4606c3baf813b7b1c176823b2729bf51002a2",
    "related_commits": [
      "00d4606c3baf813b7b1c176823b2729bf51002a2",
      "00d4606c3baf813b7b1c176823b2729bf51002a2"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "00d4606c3baf813b7b1c176823b2729bf51002a2",
      "commit_date": "2019-04-04T10:06:56Z",
      "author": {
        "login": "ccxvii",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Bug 700937: Limit recursion in regexp matcher.",
        "length": 112,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 101,
        "additions": 66,
        "deletions": 35
      },
      "files": [
        {
          "filename": "jsregexp.c",
          "status": "modified",
          "additions": 10,
          "deletions": 2,
          "patch": "@@ -29,6 +29,7 @@ void js_newregexp(js_State *J, const char *pattern, int flags)\n \n void js_RegExp_prototype_exec(js_State *J, js_Regexp *re, const char *text)\n {\n+\tint result;\n \tint i;\n \tint opts;\n \tResub m;\n@@ -46,7 +47,10 @@ void js_RegExp_prototype_exec(js_State *J, js_Regexp *re, const char *text)\n \t\t}\n \t}\n \n-\tif (!js_regexec(re->prog, text, &m, opts)) {\n+\tresult = js_regexec(re->prog, text, &m, opts);\n+\tif (result < 0)\n+\t\tjs_error(J, \"regexec failed\");\n+\tif (result == 0) {\n \t\tjs_newarray(J);\n \t\tjs_pushstring(J, text);\n \t\tjs_setproperty(J, -2, \"input\");\n@@ -71,6 +75,7 @@ static void Rp_test(js_State *J)\n {\n \tjs_Regexp *re;\n \tconst char *text;\n+\tint result;\n \tint opts;\n \tResub m;\n \n@@ -90,7 +95,10 @@ static void Rp_test(js_State *J)\n \t\t}\n \t}\n \n-\tif (!js_regexec(re->prog, text, &m, opts)) {\n+\tresult = js_regexec(re->prog, text, &m, opts);\n+\tif (result < 0)\n+\t\tjs_error(J, \"regexec failed\");\n+\tif (result == 0) {\n \t\tif (re->flags & JS_REGEXP_G)\n \t\t\tre->last = re->last + (m.sub[0].ep - text);\n \t\tjs_pushboolean(J, 1);"
        },
        {
          "filename": "jsstring.c",
          "status": "modified",
          "additions": 14,
          "deletions": 6,
          "patch": "@@ -4,6 +4,14 @@\n #include \"utf.h\"\n #include \"regexp.h\"\n \n+static int js_doregexec(js_State *J, Reprog *prog, const char *string, Resub *sub, int eflags)\n+{\n+\tint result = js_regexec(prog, string, sub, eflags);\n+\tif (result < 0)\n+\t\tjs_error(J, \"regexec failed\");\n+\treturn result;\n+}\n+\n static const char *checkstring(js_State *J, int idx)\n {\n \tif (!js_iscoercible(J, idx))\n@@ -343,7 +351,7 @@ static void Sp_match(js_State *J)\n \ta = text;\n \te = text + strlen(text);\n \twhile (a <= e) {\n-\t\tif (js_regexec(re->prog, a, &m, a > text ? REG_NOTBOL : 0))\n+\t\tif (js_doregexec(J, re->prog, a, &m, a > text ? REG_NOTBOL : 0))\n \t\t\tbreak;\n \n \t\tb = m.sub[0].sp;\n@@ -380,7 +388,7 @@ static void Sp_search(js_State *J)\n \n \tre = js_toregexp(J, -1);\n \n-\tif (!js_regexec(re->prog, text, &m, 0))\n+\tif (!js_doregexec(J, re->prog, text, &m, 0))\n \t\tjs_pushnumber(J, js_utfptrtoidx(text, m.sub[0].sp));\n \telse\n \t\tjs_pushnumber(J, -1);\n@@ -397,7 +405,7 @@ static void Sp_replace_regexp(js_State *J)\n \tsource = checkstring(J, 0);\n \tre = js_toregexp(J, 1);\n \n-\tif (js_regexec(re->prog, source, &m, 0)) {\n+\tif (js_doregexec(J, re->prog, source, &m, 0)) {\n \t\tjs_copy(J, 0);\n \t\treturn;\n \t}\n@@ -471,7 +479,7 @@ static void Sp_replace_regexp(js_State *J)\n \t\t\telse\n \t\t\t\tgoto end;\n \t\t}\n-\t\tif (!js_regexec(re->prog, source, &m, REG_NOTBOL))\n+\t\tif (!js_doregexec(J, re->prog, source, &m, REG_NOTBOL))\n \t\t\tgoto loop;\n \t}\n \n@@ -576,7 +584,7 @@ static void Sp_split_regexp(js_State *J)\n \n \t/* splitting the empty string */\n \tif (e == text) {\n-\t\tif (js_regexec(re->prog, text, &m, 0)) {\n+\t\tif (js_doregexec(J, re->prog, text, &m, 0)) {\n \t\t\tif (len == limit) return;\n \t\t\tjs_pushliteral(J, \"\");\n \t\t\tjs_setindex(J, -2, 0);\n@@ -586,7 +594,7 @@ static void Sp_split_regexp(js_State *J)\n \n \tp = a = text;\n \twhile (a < e) {\n-\t\tif (js_regexec(re->prog, a, &m, a > text ? REG_NOTBOL : 0))\n+\t\tif (js_doregexec(J, re->prog, a, &m, a > text ? REG_NOTBOL : 0))\n \t\t\tbreak; /* no match */\n \n \t\tb = m.sub[0].sp;"
        },
        {
          "filename": "regexp.c",
          "status": "modified",
          "additions": 42,
          "deletions": 27,
          "patch": "@@ -16,6 +16,7 @@\n #define REPINF 255\n #define MAXSUB REG_MAXSUB\n #define MAXPROG (32 << 10)\n+#define MAXREC 1024\n \n typedef struct Reclass Reclass;\n typedef struct Renode Renode;\n@@ -967,98 +968,112 @@ static int strncmpcanon(const char *a, const char *b, int n)\n \treturn 0;\n }\n \n-static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *out)\n+static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *out, int depth)\n {\n \tResub scratch;\n+\tint result;\n \tint i;\n \tRune c;\n \n+\t/* stack overflow */\n+\tif (depth > MAXREC)\n+\t\treturn -1;\n+\n \tfor (;;) {\n \t\tswitch (pc->opcode) {\n \t\tcase I_END:\n-\t\t\treturn 1;\n+\t\t\treturn 0;\n \t\tcase I_JUMP:\n \t\t\tpc = pc->x;\n \t\t\tbreak;\n \t\tcase I_SPLIT:\n \t\t\tscratch = *out;\n-\t\t\tif (match(pc->x, sp, bol, flags, &scratch)) {\n+\t\t\tresult = match(pc->x, sp, bol, flags, &scratch, depth+1);\n+\t\t\tif (result == -1)\n+\t\t\t\treturn -1;\n+\t\t\tif (result == 0) {\n \t\t\t\t*out = scratch;\n-\t\t\t\treturn 1;\n+\t\t\t\treturn 0;\n \t\t\t}\n \t\t\tpc = pc->y;\n \t\t\tbreak;\n \n \t\tcase I_PLA:\n-\t\t\tif (!match(pc->x, sp, bol, flags, out))\n-\t\t\t\treturn 0;\n+\t\t\tresult = match(pc->x, sp, bol, flags, out, depth+1);\n+\t\t\tif (result == -1)\n+\t\t\t\treturn -1;\n+\t\t\tif (result == 1)\n+\t\t\t\treturn 1;\n \t\t\tpc = pc->y;\n \t\t\tbreak;\n \t\tcase I_NLA:\n \t\t\tscratch = *out;\n-\t\t\tif (match(pc->x, sp, bol, flags, &scratch))\n-\t\t\t\treturn 0;\n+\t\t\tresult = match(pc->x, sp, bol, flags, &scratch, depth+1);\n+\t\t\tif (result == -1)\n+\t\t\t\treturn -1;\n+\t\t\tif (result == 0)\n+\t\t\t\treturn 1;\n \t\t\tpc = pc->y;\n \t\t\tbreak;\n \n \t\tcase I_ANYNL:\n \t\t\tsp += chartorune(&c, sp);\n \t\t\tif (c == 0)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_ANY:\n \t\t\tsp += chartorune(&c, sp);\n \t\t\tif (c == 0)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tif (isnewline(c))\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_CHAR:\n \t\t\tsp += chartorune(&c, sp);\n \t\t\tif (c == 0)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tif (flags & REG_ICASE)\n \t\t\t\tc = canon(c);\n \t\t\tif (c != pc->c)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_CCLASS:\n \t\t\tsp += chartorune(&c, sp);\n \t\t\tif (c == 0)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tif (flags & REG_ICASE) {\n \t\t\t\tif (!incclasscanon(pc->cc, canon(c)))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t} else {\n \t\t\t\tif (!incclass(pc->cc, c))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t}\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_NCCLASS:\n \t\t\tsp += chartorune(&c, sp);\n \t\t\tif (c == 0)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tif (flags & REG_ICASE) {\n \t\t\t\tif (incclasscanon(pc->cc, canon(c)))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t} else {\n \t\t\t\tif (incclass(pc->cc, c))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t}\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_REF:\n \t\t\ti = out->sub[pc->n].ep - out->sub[pc->n].sp;\n \t\t\tif (flags & REG_ICASE) {\n \t\t\t\tif (strncmpcanon(sp, out->sub[pc->n].sp, i))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t} else {\n \t\t\t\tif (strncmp(sp, out->sub[pc->n].sp, i))\n-\t\t\t\t\treturn 0;\n+\t\t\t\t\treturn 1;\n \t\t\t}\n \t\t\tif (i > 0)\n \t\t\t\tsp += i;\n@@ -1076,7 +1091,7 @@ static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n-\t\t\treturn 0;\n+\t\t\treturn 1;\n \t\tcase I_EOL:\n \t\t\tif (*sp == 0) {\n \t\t\t\tpc = pc + 1;\n@@ -1088,19 +1103,19 @@ static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n-\t\t\treturn 0;\n+\t\t\treturn 1;\n \t\tcase I_WORD:\n \t\t\ti = sp > bol && iswordchar(sp[-1]);\n \t\t\ti ^= iswordchar(sp[0]);\n \t\t\tif (!i)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tcase I_NWORD:\n \t\t\ti = sp > bol && iswordchar(sp[-1]);\n \t\t\ti ^= iswordchar(sp[0]);\n \t\t\tif (i)\n-\t\t\t\treturn 0;\n+\t\t\t\treturn 1;\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \n@@ -1113,7 +1128,7 @@ static int match(Reinst *pc, const char *sp, const char *bol, int flags, Resub *\n \t\t\tpc = pc + 1;\n \t\t\tbreak;\n \t\tdefault:\n-\t\t\treturn 0;\n+\t\t\treturn 1;\n \t\t}\n \t}\n }\n@@ -1130,7 +1145,7 @@ int regexec(Reprog *prog, const char *sp, Resub *sub, int eflags)\n \tfor (i = 0; i < MAXSUB; ++i)\n \t\tsub->sub[i].sp = sub->sub[i].ep = NULL;\n \n-\treturn !match(prog->start, sp, sp, prog->flags | eflags, sub);\n+\treturn match(prog->start, sp, sp, prog->flags | eflags, sub, 0);\n }\n \n #ifdef TEST"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "91abee564144def1dd802350c9dcc98f6331dcc4",
            "date": "2025-01-03T12:25:06Z",
            "author_login": "ccxvii"
          },
          {
            "sha": "02147f5a9f52bd6016c735ccaf1179eee08e2192",
            "date": "2024-11-21T17:41:32Z",
            "author_login": "ccxvii"
          },
          {
            "sha": "0df0707f2f10187127e36acfbc3ba9b9ca5b5cf0",
            "date": "2024-06-20T11:01:31Z",
            "author_login": "ccxvii"
          },
          {
            "sha": "40556b31c6920491474a4e24784ed3b1c1c832de",
            "date": "2024-01-26T13:18:08Z",
            "author_login": "ccxvii"
          },
          {
            "sha": "d2697fd6435d0ffaae5c424e00ccf3a4b5a21f56",
            "date": "2024-01-23T13:33:04Z",
            "author_login": "ccxvii"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-674",
    "description": "An issue was discovered in Artifex MuJS 1.0.5. It has unlimited recursion because the match function in regexp.c lacks a depth check.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2019-04-22T11:29:05.157",
    "last_modified": "2024-11-21T04:21:03.923",
    "fix_date": "2019-04-04T10:06:56Z"
  },
  "references": [
    {
      "url": "http://www.ghostscript.com/cgi-bin/findgit.cgi?00d4606c3baf813b7b1c176823b2729bf51002a2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/108093",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.ghostscript.com/show_bug.cgi?id=700937",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ccxvii/mujs/commit/00d4606c3baf813b7b1c176823b2729bf51002a2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3RQXMWEOWCGLOLFBQSXBM3MBN33T4I5H/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/67PMOZV4DLVL2KGU2SV724QL7Y4PKWKU/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MFCRO74ORRIVWNVAX2MAMRY3THCTWLQI/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202007-52",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.ghostscript.com/cgi-bin/findgit.cgi?00d4606c3baf813b7b1c176823b2729bf51002a2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://www.securityfocus.com/bid/108093",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://bugs.ghostscript.com/show_bug.cgi?id=700937",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ccxvii/mujs/commit/00d4606c3baf813b7b1c176823b2729bf51002a2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3RQXMWEOWCGLOLFBQSXBM3MBN33T4I5H/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/67PMOZV4DLVL2KGU2SV724QL7Y4PKWKU/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MFCRO74ORRIVWNVAX2MAMRY3THCTWLQI/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202007-52",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:50.443554",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "mujs",
    "owner": "ccxvii",
    "created_at": "2013-12-23T18:35:20Z",
    "updated_at": "2025-01-23T03:59:39Z",
    "pushed_at": "2025-01-03T12:47:07Z",
    "size": 986,
    "stars": 823,
    "forks": 100,
    "open_issues": 21,
    "watchers": 823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 418291,
      "Makefile": 4538,
      "JavaScript": 4302,
      "Shell": 3342,
      "Python": 1620
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "isc"
    },
    "collected_at": "2025-01-26T07:45:48.964601"
  }
}