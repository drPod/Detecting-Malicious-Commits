{
  "cve_id": "CVE-2019-13233",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
    "related_commits": [
      "de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "de9f869616dd95e95c00bdd6b0fcd3421e8a4323"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/de9f869616dd95e95c00bdd6b0fcd3421e8a4323.patch",
    "fix_commit_details": {
      "sha": "de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "commit_date": "2019-06-02T01:15:58Z",
      "author": {
        "login": "thejh",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "x86/insn-eval: Fix use-after-free access to LDT entry",
        "length": 530,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 47,
        "additions": 24,
        "deletions": 23
      },
      "files": [
        {
          "filename": "arch/x86/lib/insn-eval.c",
          "status": "modified",
          "additions": 24,
          "deletions": 23,
          "patch": "@@ -557,39 +557,42 @@ static int get_reg_offset_16(struct insn *insn, struct pt_regs *regs,\n }\n \n /**\n- * get_desc() - Obtain pointer to a segment descriptor\n+ * get_desc() - Obtain contents of a segment descriptor\n+ * @out:\tSegment descriptor contents on success\n  * @sel:\tSegment selector\n  *\n  * Given a segment selector, obtain a pointer to the segment descriptor.\n  * Both global and local descriptor tables are supported.\n  *\n  * Returns:\n  *\n- * Pointer to segment descriptor on success.\n+ * True on success, false on failure.\n  *\n  * NULL on error.\n  */\n-static struct desc_struct *get_desc(unsigned short sel)\n+static bool get_desc(struct desc_struct *out, unsigned short sel)\n {\n \tstruct desc_ptr gdt_desc = {0, 0};\n \tunsigned long desc_base;\n \n #ifdef CONFIG_MODIFY_LDT_SYSCALL\n \tif ((sel & SEGMENT_TI_MASK) == SEGMENT_LDT) {\n-\t\tstruct desc_struct *desc = NULL;\n+\t\tbool success = false;\n \t\tstruct ldt_struct *ldt;\n \n \t\t/* Bits [15:3] contain the index of the desired entry. */\n \t\tsel >>= 3;\n \n \t\tmutex_lock(&current->active_mm->context.lock);\n \t\tldt = current->active_mm->context.ldt;\n-\t\tif (ldt && sel < ldt->nr_entries)\n-\t\t\tdesc = &ldt->entries[sel];\n+\t\tif (ldt && sel < ldt->nr_entries) {\n+\t\t\t*out = ldt->entries[sel];\n+\t\t\tsuccess = true;\n+\t\t}\n \n \t\tmutex_unlock(&current->active_mm->context.lock);\n \n-\t\treturn desc;\n+\t\treturn success;\n \t}\n #endif\n \tnative_store_gdt(&gdt_desc);\n@@ -604,9 +607,10 @@ static struct desc_struct *get_desc(unsigned short sel)\n \tdesc_base = sel & ~(SEGMENT_RPL_MASK | SEGMENT_TI_MASK);\n \n \tif (desc_base > gdt_desc.size)\n-\t\treturn NULL;\n+\t\treturn false;\n \n-\treturn (struct desc_struct *)(gdt_desc.address + desc_base);\n+\t*out = *(struct desc_struct *)(gdt_desc.address + desc_base);\n+\treturn true;\n }\n \n /**\n@@ -628,7 +632,7 @@ static struct desc_struct *get_desc(unsigned short sel)\n  */\n unsigned long insn_get_seg_base(struct pt_regs *regs, int seg_reg_idx)\n {\n-\tstruct desc_struct *desc;\n+\tstruct desc_struct desc;\n \tshort sel;\n \n \tsel = get_segment_selector(regs, seg_reg_idx);\n@@ -666,11 +670,10 @@ unsigned long insn_get_seg_base(struct pt_regs *regs, int seg_reg_idx)\n \tif (!sel)\n \t\treturn -1L;\n \n-\tdesc = get_desc(sel);\n-\tif (!desc)\n+\tif (!get_desc(&desc, sel))\n \t\treturn -1L;\n \n-\treturn get_desc_base(desc);\n+\treturn get_desc_base(&desc);\n }\n \n /**\n@@ -692,7 +695,7 @@ unsigned long insn_get_seg_base(struct pt_regs *regs, int seg_reg_idx)\n  */\n static unsigned long get_seg_limit(struct pt_regs *regs, int seg_reg_idx)\n {\n-\tstruct desc_struct *desc;\n+\tstruct desc_struct desc;\n \tunsigned long limit;\n \tshort sel;\n \n@@ -706,8 +709,7 @@ static unsigned long get_seg_limit(struct pt_regs *regs, int seg_reg_idx)\n \tif (!sel)\n \t\treturn 0;\n \n-\tdesc = get_desc(sel);\n-\tif (!desc)\n+\tif (!get_desc(&desc, sel))\n \t\treturn 0;\n \n \t/*\n@@ -716,8 +718,8 @@ static unsigned long get_seg_limit(struct pt_regs *regs, int seg_reg_idx)\n \t * not tested when checking the segment limits. In practice,\n \t * this means that the segment ends in (limit << 12) + 0xfff.\n \t */\n-\tlimit = get_desc_limit(desc);\n-\tif (desc->g)\n+\tlimit = get_desc_limit(&desc);\n+\tif (desc.g)\n \t\tlimit = (limit << 12) + 0xfff;\n \n \treturn limit;\n@@ -741,7 +743,7 @@ static unsigned long get_seg_limit(struct pt_regs *regs, int seg_reg_idx)\n  */\n int insn_get_code_seg_params(struct pt_regs *regs)\n {\n-\tstruct desc_struct *desc;\n+\tstruct desc_struct desc;\n \tshort sel;\n \n \tif (v8086_mode(regs))\n@@ -752,19 +754,18 @@ int insn_get_code_seg_params(struct pt_regs *regs)\n \tif (sel < 0)\n \t\treturn sel;\n \n-\tdesc = get_desc(sel);\n-\tif (!desc)\n+\tif (!get_desc(&desc, sel))\n \t\treturn -EINVAL;\n \n \t/*\n \t * The most significant byte of the Type field of the segment descriptor\n \t * determines whether a segment contains data or code. If this is a data\n \t * segment, return error.\n \t */\n-\tif (!(desc->type & BIT(3)))\n+\tif (!(desc.type & BIT(3)))\n \t\treturn -EINVAL;\n \n-\tswitch ((desc->l << 1) | desc->d) {\n+\tswitch ((desc.l << 1) | desc.d) {\n \tcase 0: /*\n \t\t * Legacy mode. CS.L=0, CS.D=0. Address and operand size are\n \t\t * both 16-bit."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          },
          {
            "sha": "cbc5dde0a461240046e8a41c43d7c3b76d5db952",
            "date": "2025-01-10T15:28:21Z",
            "author_login": "rikvanriel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-362",
    "description": "In arch/x86/lib/insn-eval.c in the Linux kernel before 5.1.9, there is a use-after-free for access to an LDT entry because of a race condition between modify_ldt() and a #BR exception for an MPX bounds violation.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2019-07-04T13:15:11.000",
    "last_modified": "2024-11-21T04:24:30.130",
    "fix_date": "2019-06-02T01:15:58Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00025.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/154408/Kernel-Live-Patch-Security-Notice-LSN-0055-1.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:3309",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:3517",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=1879",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://cdn.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.1.9",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2019/Aug/13",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20190806-0001/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://support.f5.com/csp/article/K13331647?utm_source=f5support&amp%3Butm_medium=RSS",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4093-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4094-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4117-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4118-1/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2019/dsa-4495",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-07/msg00025.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/154408/Kernel-Live-Patch-Security-Notice-LSN-0055-1.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:3309",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:3517",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=1879",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://cdn.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.1.9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/de9f869616dd95e95c00bdd6b0fcd3421e8a4323",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2019/Aug/13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20190806-0001/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.f5.com/csp/article/K13331647?utm_source=f5support&amp%3Butm_medium=RSS",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4093-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4094-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4117-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4118-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2019/dsa-4495",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:52.600099",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}