{
  "cve_id": "CVE-2019-14243",
  "github_data": {
    "repository": "mastercactapus/proxyprotocol",
    "fix_commit": "5c4a101121fc3e868026189c7a73f7f19eef90ac",
    "related_commits": [
      "5c4a101121fc3e868026189c7a73f7f19eef90ac",
      "5c4a101121fc3e868026189c7a73f7f19eef90ac"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "5c4a101121fc3e868026189c7a73f7f19eef90ac",
      "commit_date": "2019-07-23T13:18:40Z",
      "author": {
        "login": "mastercactapus",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add test and fix for malformed/truncated header",
        "length": 47,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 50,
        "deletions": 9
      },
      "files": [
        {
          "filename": "headerv2.go",
          "status": "modified",
          "additions": 19,
          "deletions": 8,
          "patch": "@@ -50,7 +50,24 @@ func parseV2(r *bufio.Reader) (*HeaderV2, error) {\n \t}\n \n \t// highest 4 indicate address family\n-\tif (rawHdr.FamProto >> 4) > 3 {\n+\tswitch rawHdr.FamProto >> 4 {\n+\tcase 0: // local\n+\t\tif rawHdr.Len != 0 {\n+\t\t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid length\")}\n+\t\t}\n+\tcase 1: // ipv4\n+\t\tif rawHdr.Len != 12 {\n+\t\t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid length\")}\n+\t\t}\n+\tcase 2: // ipv6\n+\t\tif rawHdr.Len != 36 {\n+\t\t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid length\")}\n+\t\t}\n+\tcase 3: // unix\n+\t\tif rawHdr.Len != 216 {\n+\t\t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid length\")}\n+\t\t}\n+\tdefault:\n \t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid v2 address family\")}\n \t}\n \n@@ -59,13 +76,7 @@ func parseV2(r *bufio.Reader) (*HeaderV2, error) {\n \t\treturn nil, &InvalidHeaderErr{Read: buf[:16], error: errors.New(\"invalid v2 transport protocol\")}\n \t}\n \n-\tif 16+int(rawHdr.Len) > len(buf) {\n-\t\tnewBuf := make([]byte, 16+int(rawHdr.Len))\n-\t\tcopy(newBuf, buf[:16])\n-\t\tbuf = newBuf\n-\t} else {\n-\t\tbuf = buf[:16+int(rawHdr.Len)]\n-\t}\n+\tbuf = buf[:16+int(rawHdr.Len)]\n \n \tn, err = io.ReadFull(r, buf[16:])\n \tif err != nil {"
        },
        {
          "filename": "headerv2_test.go",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -33,7 +33,9 @@ func TestHeaderV2(t *testing.T) {\n \t\t\t\tbuf.Write(s.value)\n \t\t\t}\n \t\t\thdr, err := Parse(bufio.NewReader(&buf))\n-\t\t\tassert.NoError(t, err)\n+\t\t\tif !assert.NoError(t, err) {\n+\t\t\t\treturn\n+\t\t\t}\n \t\t\tassert.IsType(t, &HeaderV2{}, hdr, \"Header Type\")\n \t\t\tp := hdr.(*HeaderV2)\n \t\t\tassert.Equal(t, h.Command, p.Command, \"Command\")"
        },
        {
          "filename": "parse_test.go",
          "status": "added",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -0,0 +1,28 @@\n+package proxyprotocol\n+\n+import (\n+\t\"bufio\"\n+\t\"bytes\"\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+)\n+\n+func TestParse_Malformed(t *testing.T) {\n+\tdata := []byte{\n+\t\t// PROXY protocol v2 magic header\n+\t\t0x0D, 0x0A, 0x0D, 0x0A, 0x00, 0x0D, 0x0A, 0x51, 0x55, 0x49, 0x54, 0x0A,\n+\t\t// v2 version, PROXY cmd\n+\t\t0x21,\n+\t\t// TCP, IPv4 (also works with 0x13,0x21,0x22,0x31,0x32)\n+\t\t0x12,\n+\t\t// Length\n+\t\t0x00, 0x00,\n+\t\t// src/dest address data _should_ be here but is omitted.\n+\t}\n+\n+\t_, err := Parse(\n+\t\tbufio.NewReader(\n+\t\t\tbytes.NewReader(data)))\n+\tassert.Error(t, err)\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ab99c61acf16026043e36f5d4d862596386a0372",
            "date": "2023-03-12T15:25:06Z",
            "author_login": "mastercactapus"
          },
          {
            "sha": "ae65f2ce73c948fdd0d8f00ffaa6c519373c38bf",
            "date": "2020-09-22T15:14:52Z",
            "author_login": "mastercactapus"
          },
          {
            "sha": "33bfbddd3395c4ebe592b09fb81a2b3cb028d195",
            "date": "2020-09-22T14:24:37Z",
            "author_login": "mastercactapus"
          },
          {
            "sha": "a4607efab7cef8781a9a1c6024f8a063446d37da",
            "date": "2020-09-22T14:20:09Z",
            "author_login": "mastercactapus"
          },
          {
            "sha": "3f56883f58cf2ca707ff4fd8f72dafeff92dc1f5",
            "date": "2020-09-22T04:07:22Z",
            "author_login": "mastercactapus"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-20",
    "description": "headerv2.go in mastercactapus proxyprotocol before 0.0.2, as used in the mastercactapus caddy-proxyprotocol plugin through 0.0.2 for Caddy, allows remote attackers to cause a denial of service (webserver panic and daemon crash) via a crafted HAProxy PROXY v2 request with truncated source/destination address data.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-07-23T22:15:11.643",
    "last_modified": "2024-11-21T04:26:16.877",
    "fix_date": "2019-07-23T13:18:40Z"
  },
  "references": [
    {
      "url": "https://caddy.community/t/dos-in-http-proxyprotocol-plugin/6014",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/caddy-proxyprotocol/issues/8",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/compare/ef496d7...5c4a101",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/issues/1",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://caddy.community/t/dos-in-http-proxyprotocol-plugin/6014",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/caddy-proxyprotocol/issues/8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/compare/ef496d7...5c4a101",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/issues/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:54.804007",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "proxyprotocol",
    "owner": "mastercactapus",
    "created_at": "2018-10-29T00:30:18Z",
    "updated_at": "2025-01-08T06:25:54Z",
    "pushed_at": "2023-11-12T12:05:38Z",
    "size": 45,
    "stars": 13,
    "forks": 7,
    "open_issues": 2,
    "watchers": 13,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 37498
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:16:45.836850"
  }
}