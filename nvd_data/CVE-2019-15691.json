{
  "cve_id": "CVE-2019-15691",
  "github_data": {
    "repository": "TigerVNC/tigervnc",
    "fix_commit": "d61a767d6842b530ffb532ddd5a3d233119aad40",
    "related_commits": [
      "d61a767d6842b530ffb532ddd5a3d233119aad40",
      "d61a767d6842b530ffb532ddd5a3d233119aad40"
    ],
    "patch_url": "https://github.com/TigerVNC/tigervnc/commit/d61a767d6842b530ffb532ddd5a3d233119aad40.patch",
    "fix_commit_details": {
      "sha": "d61a767d6842b530ffb532ddd5a3d233119aad40",
      "commit_date": "2019-09-10T09:05:48Z",
      "author": {
        "login": "CendioOssman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Make ZlibInStream more robust against failures",
        "length": 407,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 27,
        "additions": 16,
        "deletions": 11
      },
      "files": [
        {
          "filename": "common/rdr/ZlibInStream.cxx",
          "status": "modified",
          "additions": 7,
          "deletions": 6,
          "patch": "@@ -52,16 +52,16 @@ int ZlibInStream::pos()\n   return offset + ptr - start;\n }\n \n-void ZlibInStream::removeUnderlying()\n+void ZlibInStream::flushUnderlying()\n {\n   ptr = end = start;\n-  if (!underlying) return;\n \n   while (bytesIn > 0) {\n     decompress(true);\n     end = start; // throw away any data\n   }\n-  underlying = 0;\n+\n+  setUnderlying(NULL, 0);\n }\n \n void ZlibInStream::reset()\n@@ -90,7 +90,7 @@ void ZlibInStream::init()\n void ZlibInStream::deinit()\n {\n   assert(zs != NULL);\n-  removeUnderlying();\n+  setUnderlying(NULL, 0);\n   inflateEnd(zs);\n   delete zs;\n   zs = NULL;\n@@ -100,8 +100,6 @@ int ZlibInStream::overrun(int itemSize, int nItems, bool wait)\n {\n   if (itemSize > bufSize)\n     throw Exception(\"ZlibInStream overrun: max itemSize exceeded\");\n-  if (!underlying)\n-    throw Exception(\"ZlibInStream overrun: no underlying stream\");\n \n   if (end - ptr != 0)\n     memmove(start, ptr, end - ptr);\n@@ -127,6 +125,9 @@ int ZlibInStream::overrun(int itemSize, int nItems, bool wait)\n \n bool ZlibInStream::decompress(bool wait)\n {\n+  if (!underlying)\n+    throw Exception(\"ZlibInStream overrun: no underlying stream\");\n+\n   zs->next_out = (U8*)end;\n   zs->avail_out = start + bufSize - end;\n "
        },
        {
          "filename": "common/rdr/ZlibInStream.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@ namespace rdr {\n     virtual ~ZlibInStream();\n \n     void setUnderlying(InStream* is, int bytesIn);\n-    void removeUnderlying();\n+    void flushUnderlying();\n     int pos();\n     void reset();\n "
        },
        {
          "filename": "common/rfb/CMsgReader.cxx",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -242,7 +242,8 @@ void CMsgReader::readExtendedClipboard(rdr::S32 len)\n       num++;\n     }\n \n-    zis.removeUnderlying();\n+    zis.flushUnderlying();\n+    zis.setUnderlying(NULL, 0);\n \n     handler->handleClipboardProvide(flags, lengths, buffers);\n "
        },
        {
          "filename": "common/rfb/SMsgReader.cxx",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -293,7 +293,8 @@ void SMsgReader::readExtendedClipboard(rdr::S32 len)\n       num++;\n     }\n \n-    zis.removeUnderlying();\n+    zis.flushUnderlying();\n+    zis.setUnderlying(NULL, 0);\n \n     handler->handleClipboardProvide(flags, lengths, buffers);\n "
        },
        {
          "filename": "common/rfb/TightDecoder.cxx",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -341,7 +341,8 @@ void TightDecoder::decodeRect(const Rect& r, const void* buffer,\n \n     zis[streamId].readBytes(netbuf, dataSize);\n \n-    zis[streamId].removeUnderlying();\n+    zis[streamId].flushUnderlying();\n+    zis[streamId].setUnderlying(NULL, 0);\n     delete ms;\n \n     bufptr = netbuf;"
        },
        {
          "filename": "common/rfb/zrleDecode.h",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -174,7 +174,8 @@ void ZRLE_DECODE (const Rect& r, rdr::InStream* is,\n     }\n   }\n \n-  zis->removeUnderlying();\n+  zis->flushUnderlying();\n+  zis->setUnderlying(NULL, 0);\n }\n \n #undef ZRLE_DECODE"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a91699ec469846816ddb7b1b670d660d923ff022",
            "date": "2025-01-14T15:35:02Z",
            "author_login": "CendioOssman"
          },
          {
            "sha": "9881fe0b18fc6d182d22470c0ac363e945192ca2",
            "date": "2025-01-14T15:11:46Z",
            "author_login": "CendioOssman"
          },
          {
            "sha": "fc645a833310161c0c97d5a2ccb937dd66280f14",
            "date": "2025-01-14T15:21:46Z",
            "author_login": "CendioOssman"
          },
          {
            "sha": "d43cd3eaa7daf64c8e9236a62e89efcaf806f80d",
            "date": "2025-01-14T15:18:39Z",
            "author_login": "CendioOssman"
          },
          {
            "sha": "65d1771dfc3d1e0c0efd046dc373dc978c037c86",
            "date": "2025-01-14T15:17:55Z",
            "author_login": "CendioOssman"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-825",
    "description": "TigerVNC version prior to 1.10.1 is vulnerable to stack use-after-return, which occurs due to incorrect usage of stack memory in ZRLEDecoder. If decoding routine would throw an exception, ZRLEDecoder may try to access stack variable, which has been already freed during the process of stack unwinding. Exploitation of this vulnerability could potentially result into remote code execution. This attack appear to be exploitable via network connectivity.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-12-26T15:15:11.007",
    "last_modified": "2024-11-21T04:29:16.087",
    "fix_date": "2019-09-10T09:05:48Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00039.html",
      "source": "vulnerability@kaspersky.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CendioOssman/tigervnc/commit/d61a767d6842b530ffb532ddd5a3d233119aad40",
      "source": "vulnerability@kaspersky.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/TigerVNC/tigervnc/releases/tag/v1.10.1",
      "source": "vulnerability@kaspersky.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2019/12/20/2",
      "source": "vulnerability@kaspersky.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00039.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CendioOssman/tigervnc/commit/d61a767d6842b530ffb532ddd5a3d233119aad40",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/TigerVNC/tigervnc/releases/tag/v1.10.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2019/12/20/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:24.272221",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tigervnc",
    "owner": "TigerVNC",
    "created_at": "2014-06-25T12:48:26Z",
    "updated_at": "2025-01-14T11:44:26Z",
    "pushed_at": "2025-01-14T11:44:21Z",
    "size": 25050,
    "stars": 5359,
    "forks": 970,
    "open_issues": 175,
    "watchers": 5359,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 2105004,
      "Java": 1745894,
      "C": 1008908,
      "CMake": 70519,
      "Roff": 50879,
      "Makefile": 32567,
      "Objective-C++": 17412,
      "Perl": 12443,
      "Shell": 11196,
      "Objective-C": 1780,
      "Python": 1378
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:43:04.443892"
  }
}