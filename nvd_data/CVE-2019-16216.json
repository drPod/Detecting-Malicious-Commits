{
  "cve_id": "CVE-2019-16216",
  "github_data": {
    "repository": "zulip/zulip",
    "fix_commit": "1195841dfb9aa26b3b0dabc6f05d72e4af25be3e",
    "related_commits": [
      "1195841dfb9aa26b3b0dabc6f05d72e4af25be3e",
      "1195841dfb9aa26b3b0dabc6f05d72e4af25be3e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1195841dfb9aa26b3b0dabc6f05d72e4af25be3e",
      "commit_date": "2019-09-09T22:21:31Z",
      "author": {
        "login": "andersk",
        "type": "User",
        "stats": {
          "total_commits": 4726,
          "average_weekly_commits": 7.2819722650231125,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 310
        }
      },
      "commit_message": {
        "title": "CVE-2019-16216: Fix MIME type validation.",
        "length": 798,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 21,
        "deletions": 11
      },
      "files": [
        {
          "filename": "zerver/lib/upload.py",
          "status": "modified",
          "additions": 16,
          "deletions": 4,
          "patch": "@@ -1,4 +1,4 @@\n-from typing import Dict, Optional, Tuple\n+from typing import Optional, Tuple\n \n from django.utils.translation import ugettext as _\n from django.conf import settings\n@@ -41,6 +41,17 @@\n MAX_EMOJI_GIF_SIZE = 128\n MAX_EMOJI_GIF_FILE_SIZE_BYTES = 128 * 1024 * 1024  # 128 kb\n \n+INLINE_MIME_TYPES = [\n+    \"application/pdf\",\n+    \"image/gif\",\n+    \"image/jpeg\",\n+    \"image/png\",\n+    \"image/webp\",\n+    # To avoid cross-site scripting attacks, DO NOT add types such\n+    # as application/xhtml+xml, application/x-shockwave-flash,\n+    # image/svg+xml, text/html, or text/xml.\n+]\n+\n # Performance Note:\n #\n # For writing files to S3, the file could either be stored in RAM\n@@ -267,10 +278,11 @@ def upload_image_to_s3(\n     key.set_metadata(\"user_profile_id\", str(user_profile.id))\n     key.set_metadata(\"realm_id\", str(user_profile.realm_id))\n \n+    headers = {}\n     if content_type is not None:\n-        headers = {'Content-Type': content_type}  # type: Optional[Dict[str, str]]\n-    else:\n-        headers = None\n+        headers[\"Content-Type\"] = content_type\n+    if content_type not in INLINE_MIME_TYPES:\n+        headers[\"Content-Disposition\"] = \"attachment\"\n \n     key.set_contents_from_string(contents, headers=headers)  # type: ignore # https://github.com/python/typeshed/issues/1552\n "
        },
        {
          "filename": "zerver/views/upload.py",
          "status": "modified",
          "additions": 5,
          "deletions": 7,
          "patch": "@@ -7,7 +7,7 @@\n \n from zerver.lib.response import json_success, json_error\n from zerver.lib.upload import upload_message_image_from_request, get_local_file_path, \\\n-    get_signed_upload_url, check_upload_within_quota\n+    get_signed_upload_url, check_upload_within_quota, INLINE_MIME_TYPES\n from zerver.models import UserProfile, validate_attachment_request\n from django.conf import settings\n from sendfile import sendfile\n@@ -38,13 +38,11 @@ def serve_local(request: HttpRequest, path_id: str) -> HttpResponse:\n     # consistent format (urlquoted).  For more details on filename*\n     # and filename, see the below docs:\n     # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition\n-    attachment = True\n-    file_type = guess_type(local_path)[0]\n-    if file_type is not None and (file_type.startswith(\"image/\") or\n-                                  file_type == \"application/pdf\"):\n-        attachment = False\n+    mimetype, encoding = guess_type(local_path)\n+    attachment = mimetype not in INLINE_MIME_TYPES\n \n-    return sendfile(request, local_path, attachment=attachment)\n+    return sendfile(request, local_path, attachment=attachment,\n+                    mimetype=mimetype, encoding=encoding)\n \n def serve_file_backend(request: HttpRequest, user_profile: UserProfile,\n                        realm_id_str: str, filename: str) -> HttpResponse:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "32f9ee7a62cdeb9cca5b694dc0fdb805dbcbff87",
            "date": "2025-01-25T11:51:02Z",
            "author_login": "kuv2707"
          },
          {
            "sha": "f52ec0559c4b10f841dcb9d4c9089363b5f7fffb",
            "date": "2025-01-23T21:10:14Z",
            "author_login": "andersk"
          },
          {
            "sha": "73783f551986f138495ad22721a5d8de06153c77",
            "date": "2025-01-23T21:08:44Z",
            "author_login": "andersk"
          },
          {
            "sha": "235ead6247b9d632c94c0e95d1e1b50bf468b1d5",
            "date": "2025-01-23T21:04:15Z",
            "author_login": "andersk"
          },
          {
            "sha": "0ba41328fdbfdf52a0ab7534a448c3b7b81c74a9",
            "date": "2025-01-23T20:47:15Z",
            "author_login": "andersk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Zulip server before 2.0.5 incompletely validated the MIME types of uploaded files. A user who is logged into the server could upload files of certain types to mount a stored cross-site scripting attack on other logged-in users. On a Zulip server using the default local uploads backend, the attack is only effective against browsers lacking support for Content-Security-Policy such as Internet Explorer 11. On a Zulip server using the S3 uploads backend, the attack is confined to the origin of the configured S3 uploads hostname and cannot reach the Zulip server itself.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-09-18T12:15:10.990",
    "last_modified": "2024-11-21T04:30:17.553",
    "fix_date": "2019-09-09T22:21:31Z"
  },
  "references": [
    {
      "url": "https://blog.zulip.org/2019/09/11/zulip-server-2-0-5-security-release/",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zulip/zulip/commit/1195841dfb9aa26b3b0dabc6f05d72e4af25be3e",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://blog.zulip.org/2019/09/11/zulip-server-2-0-5-security-release/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zulip/zulip/commit/1195841dfb9aa26b3b0dabc6f05d72e4af25be3e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:57.330384",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "zulip",
    "owner": "zulip",
    "created_at": "2015-09-25T16:37:25Z",
    "updated_at": "2025-01-26T01:40:47Z",
    "pushed_at": "2025-01-25T19:41:25Z",
    "size": 497093,
    "stars": 22067,
    "forks": 8164,
    "open_issues": 2505,
    "watchers": 22067,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.4.x",
      "1.5.x",
      "1.8.x",
      "1.9.x",
      "2.0.x",
      "2.1.x",
      "3.x",
      "3.1-with-bmemcached",
      "4.x",
      "4.0-rc1-branch",
      "5.x",
      "5.x-user-sharding",
      "5.0-rc1-branch",
      "5.0-rc2-branch",
      "6.x",
      "6.0-beta1-branch",
      "6.0-rc1-branch",
      "7.x",
      "7.0-beta1-branch",
      "7.0-beta2-branch",
      "8.x",
      "9.x",
      "buddy-list-prep",
      "chat.zulip.org",
      "dockertest",
      "main",
      "s3-compatible-uploads",
      "zulip-cloud-current"
    ],
    "languages": {
      "Python": 14257600,
      "TypeScript": 4079970,
      "JavaScript": 2288841,
      "HTML": 956986,
      "CSS": 945407,
      "Handlebars": 602813,
      "Shell": 161466,
      "Puppet": 137651,
      "Perl": 10353,
      "Dockerfile": 4219,
      "Ruby": 3794,
      "Emacs Lisp": 157
    },
    "commit_activity": {
      "total_commits_last_year": 6333,
      "avg_commits_per_week": 121.78846153846153,
      "days_active_last_year": 354
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:42:35.024113"
  }
}