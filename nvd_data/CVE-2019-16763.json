{
  "cve_id": "CVE-2019-16763",
  "github_data": {
    "repository": "mpetroff/pannellum",
    "fix_commit": "cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
    "related_commits": [
      "cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "cc2f3d99953de59db908e0c6efd1c2c17f7c6914"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "commit_date": "2019-11-22T01:35:45Z",
      "author": {
        "login": "mpetroff",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-m52x-29pq-w3vv",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 19,
        "additions": 13,
        "deletions": 6
      },
      "files": [
        {
          "filename": "src/js/pannellum.js",
          "status": "modified",
          "additions": 13,
          "deletions": 6,
          "patch": "@@ -1719,7 +1719,7 @@ function createHotSpot(hs) {\n         if (config.basePath && !absoluteURL(imgp))\n             imgp = config.basePath + imgp;\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL ? hs.URL : imgp);\n+        a.href = sanitizeURL(hs.URL ? hs.URL : imgp, true);\n         a.target = '_blank';\n         span.appendChild(a);\n         var image = document.createElement('img');\n@@ -1731,7 +1731,7 @@ function createHotSpot(hs) {\n         span.style.maxWidth = 'initial';\n     } else if (hs.URL) {\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL);\n+        a.href = sanitizeURL(hs.URL, true);\n         if (hs.attributes) {\n             for (var key in hs.attributes) {\n                 a.setAttribute(key, hs.attributes[key]);\n@@ -2005,7 +2005,7 @@ function processOptions(isPreview) {\n                 var authorText = escapeHTML(config[key]);\n                 if (config.authorURL) {\n                     var authorLink = document.createElement('a');\n-                    authorLink.href = sanitizeURL(config['authorURL']);\n+                    authorLink.href = sanitizeURL(config['authorURL'], true);\n                     authorLink.target = '_blank';\n                     authorLink.innerHTML = escapeHTML(config[key]);\n                     authorText = authorLink.outerHTML;\n@@ -2016,7 +2016,7 @@ function processOptions(isPreview) {\n             \n             case 'fallback':\n                 var link = document.createElement('a');\n-                link.href = sanitizeURL(config[key]);\n+                link.href = sanitizeURL(config[key], true);\n                 link.target = '_blank';\n                 link.textContent = 'Click here to view this panorama in an alternative viewer.';\n                 var message = document.createElement('p');\n@@ -2378,10 +2378,17 @@ function escapeHTML(s) {\n  * The URL cannot be of protocol 'javascript'.\n  * @private\n  * @param {string} url - URL to sanitize\n+ * @param {boolean} href - True if URL is for link (blocks data URIs)\n  * @returns {string} Sanitized URL\n  */\n-function sanitizeURL(url) {\n-    if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n+function sanitizeURL(url, href) {\n+    if (url.trim().toLowerCase().indexOf('javascript:') === 0 ||\n+        url.trim().toLowerCase().indexOf('vbscript:') === 0) {\n+        console.log('Script URL removed.');\n+        return 'about:blank';\n+    }\n+    if (href && url.trim().toLowerCase().indexOf('data:') === 0) {\n+        console.log('Data URI removed from link.');\n         return 'about:blank';\n     }\n     return url;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1eaccef60f75c8553997b37fe5d9784b2ed7b07a",
            "date": "2024-10-10T00:13:39Z",
            "author_login": "mpetroff"
          },
          {
            "sha": "9274ed63d7f285bd9e1ddd8b7fff8935adab9121",
            "date": "2024-09-25T15:39:31Z",
            "author_login": "jox"
          },
          {
            "sha": "fde3fbd5520fa58f3ce63ef83b61bdab46fffb41",
            "date": "2024-08-21T21:10:25Z",
            "author_login": "mpetroff"
          },
          {
            "sha": "bbf97c88dc644c85a0f420a6e2d64e875466f563",
            "date": "2024-08-21T21:04:22Z",
            "author_login": "mpetroff"
          },
          {
            "sha": "badf8812c39aaf515e6a8aa2f5f034331b33aa18",
            "date": "2024-08-18T19:53:30Z",
            "author_login": "mpetroff"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "In Pannellum from 2.5.0 through 2.5.4 URLs were not sanitized for data URIs (or vbscript:), allowing for potential XSS attacks. Such an attack would require a user to click on a hot spot to execute and would require an attacker-provided configuration. The most plausible potential attack would be if pannellum.htm was hosted on a domain that shared cookies with the targeted site's user authentication; an &lt;iframe&gt; could then be embedded on the attacker's site using pannellum.htm from the targeted site, which would allow the attacker to potentially access information from the targeted site as the authenticated user (or worse if the targeted site did not have adequate CSRF protections) if the user clicked on a hot spot in the attacker's embedded panorama viewer. This was patched in version 2.5.5.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2019-11-22T19:15:12.560",
    "last_modified": "2024-11-21T04:31:08.430",
    "fix_date": "2019-11-22T01:35:45Z"
  },
  "references": [
    {
      "url": "https://github.com/mpetroff/pannellum/commit/cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mpetroff/pannellum/security/advisories/GHSA-m52x-29pq-w3vv",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mpetroff/pannellum/commit/cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mpetroff/pannellum/security/advisories/GHSA-m52x-29pq-w3vv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:09.212472",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pannellum",
    "owner": "mpetroff",
    "created_at": "2012-09-17T15:43:07Z",
    "updated_at": "2025-01-25T19:22:20Z",
    "pushed_at": "2024-10-10T00:13:44Z",
    "size": 21469,
    "stars": 4353,
    "forks": 736,
    "open_issues": 207,
    "watchers": 4353,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "JavaScript": 209237,
      "Python": 34917,
      "CSS": 9369,
      "HTML": 8225,
      "TeX": 4043,
      "Dockerfile": 753,
      "Shell": 614,
      "Batchfile": 17
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:57:30.137788"
  }
}