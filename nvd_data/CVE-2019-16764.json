{
  "cve_id": "CVE-2019-16764",
  "github_data": {
    "repository": "pow-auth/pow_assent",
    "fix_commit": "026105eeecc0e3c2f807e7109e745ea93c0fd9cf",
    "related_commits": [
      "026105eeecc0e3c2f807e7109e745ea93c0fd9cf",
      "026105eeecc0e3c2f807e7109e745ea93c0fd9cf"
    ],
    "patch_url": "https://github.com/pow-auth/pow_assent/commit/026105eeecc0e3c2f807e7109e745ea93c0fd9cf.patch",
    "fix_commit_details": {
      "sha": "026105eeecc0e3c2f807e7109e745ea93c0fd9cf",
      "commit_date": "2019-11-22T19:21:24Z",
      "author": {
        "login": "danschultzer",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevent `String.to_atom/1` calls",
        "length": 32,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 35,
        "additions": 31,
        "deletions": 4
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -1,5 +1,11 @@\n # Changelog\n \n+## v0.4.4 (TBA)\n+\n+* [`PowAssent.Plug`] Now uses `String.to_existing_atom/1` in `PowAssent.Plug.providers_for_current_user/1`\n+* [`PowAssent.Plug`] Fixed security issue by removing `String.to_atom/1` for user provided binary in `PowAssent.Plug.authorize_url/3` and `PowAssent.Plug.callback/4`\n+* [`PowAssent.Config`] `PowAssent.Config.get_provider_config/2` now accepts binary provider\n+\n ## v0.4.3 (2019-11-20)\n \n * Removed `:phoenix_html` dependency requirement"
        },
        {
          "filename": "lib/pow_assent/config.ex",
          "status": "modified",
          "additions": 14,
          "deletions": 2,
          "patch": "@@ -50,15 +50,27 @@ defmodule PowAssent.Config do\n   @doc \"\"\"\n   Gets the provider configuration from the provided configuration.\n   \"\"\"\n-  @spec get_provider_config(t(), atom()) :: t() | no_return\n+  @spec get_provider_config(t(), atom() | binary()) :: t() | no_return\n   def get_provider_config(config, provider) do\n     config\n     |> get_providers()\n-    |> get(provider)\n+    |> get_for_provider(provider)\n     |> Kernel.||(raise_error(\"No provider configuration available for #{provider}.\"))\n     |> add_global_config(config)\n   end\n \n+  defp get_for_provider(providers_config, provider) when is_atom(provider) do\n+    get(providers_config, provider)\n+  end\n+  defp get_for_provider(providers_config, provider) when is_binary(provider) do\n+    Enum.find_value(providers_config, fn {key, value} ->\n+      case Atom.to_string(key) do\n+        ^provider -> value\n+        _any      -> false\n+      end\n+    end)\n+  end\n+\n   defp add_global_config(provider_config, config) do\n     [\n       :http_adapter,"
        },
        {
          "filename": "lib/pow_assent/plug.ex",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -197,7 +197,7 @@ defmodule PowAssent.Plug do\n     conn\n     |> Pow.Plug.current_user()\n     |> get_all_providers_for_user(config)\n-    |> Enum.map(&String.to_atom(&1.provider))\n+    |> Enum.map(&String.to_existing_atom(&1.provider))\n   end\n \n   defp get_all_providers_for_user(nil, _config), do: []\n@@ -232,7 +232,6 @@ defmodule PowAssent.Plug do\n     |> get_provider_config(provider, redirect_uri)\n   end\n   defp get_provider_config(config, provider, redirect_uri) do\n-    provider        = String.to_atom(provider)\n     config          = Config.get_provider_config(config, provider)\n     strategy        = config[:strategy]\n     provider_config ="
        },
        {
          "filename": "test/pow_assent/config_test.exs",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -28,4 +28,14 @@ defmodule PowAssent.ConfigTest do\n     assert Config.get_provider_config([http_adapter: HTTPAdapater, json_adapter: JSONAdapter, jwt_adapter: JWTAdapter], :provider1) ==\n       [http_adapter: HTTPAdapater, json_adapter: JSONAdapter, jwt_adapter: JWTAdapter, a: 1]\n   end\n+\n+  test \"get_provider_config/2 with binary provider\" do\n+    config = [providers: [provider1: [a: 1], provider2: [b: 2]]]\n+\n+    assert Config.get_provider_config(config, \"provider1\") == [a: 1]\n+\n+    assert_raise PowAssent.Config.ConfigError, \"No provider configuration available for non_existent.\", fn ->\n+      refute Config.get_provider_config(config, \"non_existent\")\n+    end\n+  end\n end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9833bc41d3d2f1ae979368212732ce7ba11f2f09",
            "date": "2024-02-17T22:04:10Z",
            "author_login": "danschultzer"
          },
          {
            "sha": "d139201659a9233fb599061459e2d8608f96ca9a",
            "date": "2024-02-17T22:01:20Z",
            "author_login": "danschultzer"
          },
          {
            "sha": "a8922c0abba7810f4a3a76ab2c7a1e104dd88d66",
            "date": "2024-02-17T22:00:18Z",
            "author_login": "danschultzer"
          },
          {
            "sha": "f442c04bb2a07c0109468c47815b057bd9584e64",
            "date": "2024-02-17T21:27:09Z",
            "author_login": "danschultzer"
          },
          {
            "sha": "7ca4390da82f63c04dbc75a9d2c4c2fc723afb3f",
            "date": "2024-02-17T21:25:26Z",
            "author_login": "danschultzer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "The use of `String.to_atom/1` in PowAssent is susceptible to denial of service attacks. In `PowAssent.Phoenix.AuthorizationController` a value is fetched from the user provided params, and `String.to_atom/1` is used to convert the binary value to an atom so it can be used to fetch the provider configuration value. This is unsafe as it is user provided data, and can be used to fill up the whole atom table of ~1M which will cause the app to crash.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-11-25T17:15:11.713",
    "last_modified": "2024-11-21T04:31:08.573",
    "fix_date": "2019-11-22T19:21:24Z"
  },
  "references": [
    {
      "url": "http://erlang.org/doc/efficiency_guide/commoncaveats.html#list_to_atom-1",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/pow-auth/pow_assent/commit/026105eeecc0e3c2f807e7109e745ea93c0fd9cf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pow-auth/pow_assent/security/advisories/GHSA-368c-xvrv-x986",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hex.pm/packages/pow_assent",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "http://erlang.org/doc/efficiency_guide/commoncaveats.html#list_to_atom-1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/pow-auth/pow_assent/commit/026105eeecc0e3c2f807e7109e745ea93c0fd9cf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pow-auth/pow_assent/security/advisories/GHSA-368c-xvrv-x986",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hex.pm/packages/pow_assent",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:09.213890",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pow_assent",
    "owner": "pow-auth",
    "created_at": "2018-07-27T22:41:22Z",
    "updated_at": "2025-01-10T15:45:34Z",
    "pushed_at": "2024-07-14T14:50:16Z",
    "size": 846,
    "stars": 328,
    "forks": 50,
    "open_issues": 27,
    "watchers": 328,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Elixir": 248747,
      "HTML": 21
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:21:39.567213"
  }
}