{
  "cve_id": "CVE-2019-16779",
  "github_data": {
    "repository": "excon/excon",
    "fix_commit": "ccb57d7a422f020dc74f1de4e8fb505ab46d8a29",
    "related_commits": [
      "ccb57d7a422f020dc74f1de4e8fb505ab46d8a29",
      "ccb57d7a422f020dc74f1de4e8fb505ab46d8a29"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "ccb57d7a422f020dc74f1de4e8fb505ab46d8a29",
      "commit_date": "2019-12-12T22:45:12Z",
      "author": {
        "login": "geemus",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix for leftover data with interrupted persistent connections",
        "length": 118,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 39,
        "deletions": 0
      },
      "files": [
        {
          "filename": "lib/excon/connection.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -262,6 +262,11 @@ def request(params={}, &block)\n \n       datum[:connection] = self\n \n+      # cleanup data left behind on persistent connection after interrupt\n+      if datum[:persistent] && !@persistent_socket_reusable\n+        reset\n+      end\n+\n       datum[:stack] = datum[:middlewares].map do |middleware|\n         lambda {|stack| middleware.new(stack)}\n       end.reverse.inject(self) do |middlewares, middleware|\n@@ -270,7 +275,9 @@ def request(params={}, &block)\n       datum = datum[:stack].request_call(datum)\n \n       unless datum[:pipeline]\n+        @persistent_socket_reusable = false\n         datum = response(datum)\n+        @persistent_socket_reusable = true\n \n         if datum[:persistent]\n           if key = datum[:response][:headers].keys.detect {|k| k.casecmp('Connection') == 0 }\n@@ -344,6 +351,7 @@ def reset\n       if old_socket = sockets.delete(@socket_key)\n         old_socket.close rescue nil\n       end\n+      @persistent_socket_reusable = true\n     end\n \n     # Generate HTTP request verb methods"
        },
        {
          "filename": "tests/connection_tests.rb",
          "status": "modified",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -14,6 +14,29 @@\n       connection.send(:socket) # creates/connects socket\n       connection.data[:remote_ip]\n     end\n+\n+    tests(\"persistent connections\") do\n+      connection = Excon.new('http://127.0.0.1:9292', persistent: true)\n+\n+      response_body = connection.request(path: '/foo', method: 'get').body\n+      test(\"successful uninterrupted request\") do\n+        connection.request(path: '/foo', method: 'get').body == 'foo'\n+      end\n+\n+      begin\n+        # simulate an interrupted connection which leaves data behind\n+        Timeout::timeout(0.0000000001) do\n+          connection.request(path: '/foo', method: 'get')\n+        end\n+      rescue Timeout::Error\n+        nil\n+      end\n+\n+      test(\"resets connection after interrupt\") do\n+        response = connection.request(path: '/bar', method: 'get')\n+        response.body == 'bar'\n+      end\n+    end\n   end\n \n   tests(\"inspect redaction\") do"
        },
        {
          "filename": "tests/rackups/basic.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -32,6 +32,14 @@ class Basic < Sinatra::Base\n     echo\n   end\n \n+  get('/foo') do\n+    'foo'\n+  end\n+\n+  get('/bar') do\n+    'bar'\n+  end\n+\n   private\n \n   def echo"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "650e937b8def96882f560986ac943f5c74ebdef9",
            "date": "2025-01-20T21:12:02Z",
            "author_login": "Earlopain"
          },
          {
            "sha": "d647c801d06990abb855c5c65bb5e4b2b3534716",
            "date": "2025-01-03T14:07:35Z",
            "author_login": "geemus"
          },
          {
            "sha": "9b9055fbdce9769caf3bf64c664adb492d055860",
            "date": "2025-01-03T14:06:26Z",
            "author_login": "geemus"
          },
          {
            "sha": "63bbd3ecc2ff5a598de18e9c5a9cb69cb3d2581a",
            "date": "2025-01-02T22:57:34Z",
            "author_login": "geemus"
          },
          {
            "sha": "2089d2fb32a100f1ddc336b3b3b9daa0cfbb767c",
            "date": "2024-12-05T02:43:41Z",
            "author_login": "geemus"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-664",
    "description": "In RubyGem excon before 0.71.0, there was a race condition around persistent connections, where a connection which is interrupted (such as by a timeout) would leave data on the socket. Subsequent requests would then read this data, returning content from the previous response. The race condition window appears to be short, and it would be difficult to purposefully exploit this.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2019-12-16T20:15:15.540",
    "last_modified": "2024-11-21T04:31:10.503",
    "fix_date": "2019-12-12T22:45:12Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00062.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/excon/excon/commit/ccb57d7a422f020dc74f1de4e8fb505ab46d8a29",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/excon/excon/security/advisories/GHSA-q58g-455p-8vw9",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/01/msg00015.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-01/msg00062.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/excon/excon/commit/ccb57d7a422f020dc74f1de4e8fb505ab46d8a29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/excon/excon/security/advisories/GHSA-q58g-455p-8vw9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/01/msg00015.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:24.259643",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "excon",
    "owner": "excon",
    "created_at": "2009-10-25T17:50:46Z",
    "updated_at": "2025-01-20T21:12:06Z",
    "pushed_at": "2025-01-20T21:12:02Z",
    "size": 3228,
    "stars": 1162,
    "forks": 283,
    "open_issues": 21,
    "watchers": 1162,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Ruby": 322248
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:14:43.055183"
  }
}