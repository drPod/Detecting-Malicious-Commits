{
  "cve_id": "CVE-2019-16792",
  "github_data": {
    "repository": "Pylons/waitress",
    "fix_commit": "575994cd42e83fd772a5f7ec98b2c56751bd3f65",
    "related_commits": [
      "575994cd42e83fd772a5f7ec98b2c56751bd3f65",
      "575994cd42e83fd772a5f7ec98b2c56751bd3f65"
    ],
    "patch_url": "https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65.patch",
    "fix_commit_details": {
      "sha": "575994cd42e83fd772a5f7ec98b2c56751bd3f65",
      "commit_date": "2019-12-13T02:19:40Z",
      "author": {
        "login": "digitalresistor",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Upon receiving invalid Content-Length bail",
        "length": 294,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 26,
        "additions": 23,
        "deletions": 3
      },
      "files": [
        {
          "filename": "waitress/parser.py",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -254,7 +254,8 @@ def parse_header(self, header_plus):\n             try:\n                 cl = int(headers.get(\"CONTENT_LENGTH\", 0))\n             except ValueError:\n-                cl = 0\n+                raise ParsingError(\"Content-Length is invalid\")\n+\n             self.content_length = cl\n             if cl > 0:\n                 buf = OverflowableBuffer(self.adj.inbuf_overflow)"
        },
        {
          "filename": "waitress/tests/test_parser.py",
          "status": "modified",
          "additions": 21,
          "deletions": 2,
          "patch": "@@ -167,9 +167,28 @@ def test_parse_header_no_cr_in_headerplus(self):\n             self.assertTrue(False)\n \n     def test_parse_header_bad_content_length(self):\n+        from waitress.parser import ParsingError\n+\n         data = b\"GET /foobar HTTP/8.4\\r\\ncontent-length: abc\\r\\n\"\n-        self.parser.parse_header(data)\n-        self.assertEqual(self.parser.body_rcv, None)\n+\n+        try:\n+            self.parser.parse_header(data)\n+        except ParsingError as e:\n+            self.assertIn(\"Content-Length is invalid\", e.args[0])\n+        else:  # pragma: nocover\n+            self.assertTrue(False)\n+\n+    def test_parse_header_multiple_content_length(self):\n+        from waitress.parser import ParsingError\n+\n+        data = b\"GET /foobar HTTP/8.4\\r\\ncontent-length: 10\\r\\ncontent-length: 20\\r\\n\"\n+\n+        try:\n+            self.parser.parse_header(data)\n+        except ParsingError as e:\n+            self.assertIn(\"Content-Length is invalid\", e.args[0])\n+        else:  # pragma: nocover\n+            self.assertTrue(False)\n \n     def test_parse_header_11_te_chunked(self):\n         # NB: test that capitalization of header value is unimportant"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fc592e804a1aed87654c1ad21337dad86582c71f",
            "date": "2024-11-25T01:07:27Z",
            "author_login": "mmerickel"
          },
          {
            "sha": "7a19337321c43b81076da20bc9c4e2e077a7e01c",
            "date": "2024-11-24T19:55:09Z",
            "author_login": "kgaughan"
          },
          {
            "sha": "2a1524a9b5786459786a4b86e5b2f09d1041e53d",
            "date": "2024-11-23T19:40:01Z",
            "author_login": "kgaughan"
          },
          {
            "sha": "b11ae729cc51ca2998a1ad9b4992b34f34ac95e7",
            "date": "2024-11-16T19:46:41Z",
            "author_login": "digitalresistor"
          },
          {
            "sha": "38ffad094b785168aba197f6b6d8df5de713cc2b",
            "date": "2024-11-16T19:39:00Z",
            "author_login": "digitalresistor"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-444",
    "description": "Waitress through version 1.3.1 allows request smuggling by sending the Content-Length header twice. Waitress would header fold a double Content-Length header and due to being unable to cast the now comma separated value to an integer would set the Content-Length to 0 internally. If two Content-Length headers are sent in a single request, Waitress would treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining. This issue is fixed in Waitress 1.4.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-01-22T19:15:11.140",
    "last_modified": "2024-11-21T04:31:11.940",
    "fix_date": "2019-12-13T02:19:40Z"
  },
  "references": [
    {
      "url": "https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:37.478817",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "waitress",
    "owner": "Pylons",
    "created_at": "2011-12-17T06:58:21Z",
    "updated_at": "2025-01-11T21:17:13Z",
    "pushed_at": "2024-11-25T01:07:27Z",
    "size": 1868,
    "stars": 1467,
    "forks": 178,
    "open_issues": 16,
    "watchers": 1467,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 495340
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:00:04.687602"
  }
}