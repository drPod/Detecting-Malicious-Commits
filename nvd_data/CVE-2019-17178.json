{
  "cve_id": "CVE-2019-17178",
  "github_data": {
    "repository": "FreeRDP/FreeRDP",
    "fix_commit": "9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
    "related_commits": [
      "9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
      "9fee4ae076b1ec97b97efb79ece08d1dab4df29a"
    ],
    "patch_url": "https://github.com/FreeRDP/FreeRDP/commit/9fee4ae076b1ec97b97efb79ece08d1dab4df29a.patch",
    "fix_commit_details": {
      "sha": "9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
      "commit_date": "2019-10-04T12:49:30Z",
      "author": {
        "login": "akallabeth",
        "type": "User",
        "stats": {
          "total_commits": 7813,
          "average_weekly_commits": 11.035310734463277,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 486
        }
      },
      "commit_message": {
        "title": "Fixed #5645: realloc return handling",
        "length": 36,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 46,
        "deletions": 10
      },
      "files": [
        {
          "filename": "client/X11/generate_argument_docbook.c",
          "status": "modified",
          "additions": 27,
          "deletions": 6,
          "patch": "@@ -9,6 +9,7 @@\n LPSTR tr_esc_str(LPCSTR arg, bool format)\n {\n \tLPSTR tmp = NULL;\n+\tLPSTR tmp2 = NULL;\n \tsize_t cs = 0, x, ds, len;\n \tsize_t s;\n \n@@ -25,7 +26,12 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \tds = s + 1;\n \n \tif (s)\n-\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t{\n+\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\tif (!tmp2)\n+\t\t\tfree(tmp);\n+\t\ttmp = tmp2;\n+\t}\n \n \tif (NULL == tmp)\n \t{\n@@ -43,7 +49,10 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \t\t\tcase '<':\n \t\t\t\tlen = format ? 13 : 4;\n \t\t\t\tds += len - 1;\n-\t\t\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\tif (!tmp2)\n+\t\t\t\t\tfree(tmp);\n+\t\t\t\ttmp = tmp2;\n \n \t\t\t\tif (NULL == tmp)\n \t\t\t\t{\n@@ -64,7 +73,10 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \t\t\tcase '>':\n \t\t\t\tlen = format ? 14 : 4;\n \t\t\t\tds += len - 1;\n-\t\t\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\tif (!tmp2)\n+\t\t\t\t\tfree(tmp);\n+\t\t\t\ttmp = tmp2;\n \n \t\t\t\tif (NULL == tmp)\n \t\t\t\t{\n@@ -84,7 +96,10 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \n \t\t\tcase '\\'':\n \t\t\t\tds += 5;\n-\t\t\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\tif (!tmp2)\n+\t\t\t\t\tfree(tmp);\n+\t\t\t\ttmp = tmp2;\n \n \t\t\t\tif (NULL == tmp)\n \t\t\t\t{\n@@ -102,7 +117,10 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \n \t\t\tcase '\"':\n \t\t\t\tds += 5;\n-\t\t\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\tif (!tmp2)\n+\t\t\t\t\tfree(tmp);\n+\t\t\t\ttmp = tmp2;\n \n \t\t\t\tif (NULL == tmp)\n \t\t\t\t{\n@@ -120,7 +138,10 @@ LPSTR tr_esc_str(LPCSTR arg, bool format)\n \n \t\t\tcase '&':\n \t\t\t\tds += 4;\n-\t\t\t\ttmp = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\ttmp2 = (LPSTR)realloc(tmp, ds * sizeof(CHAR));\n+\t\t\t\tif (!tmp2)\n+\t\t\t\t\tfree(tmp);\n+\t\t\t\ttmp = tmp2;\n \n \t\t\t\tif (NULL == tmp)\n \t\t\t\t{"
        },
        {
          "filename": "libfreerdp/codec/region.c",
          "status": "modified",
          "additions": 14,
          "deletions": 3,
          "patch": "@@ -467,8 +467,12 @@ static BOOL region16_simplify_bands(REGION16* region)\n \n \tif (finalNbRects != nbRects)\n \t{\n-\t\tint allocSize = sizeof(REGION16_DATA) + (finalNbRects * sizeof(RECTANGLE_16));\n-\t\tregion->data = realloc(region->data, allocSize);\n+\t\tREGION16_DATA* data;\n+\t\tsize_t allocSize = sizeof(REGION16_DATA) + (finalNbRects * sizeof(RECTANGLE_16));\n+\t\tdata = realloc(region->data, allocSize);\n+\t\tif (!data)\n+\t\t\tfree(region->data);\n+\t\tregion->data = data;\n \n \t\tif (!region->data)\n \t\t{\n@@ -485,10 +489,12 @@ static BOOL region16_simplify_bands(REGION16* region)\n \n BOOL region16_union_rect(REGION16* dst, const REGION16* src, const RECTANGLE_16* rect)\n {\n+\tREGION16_DATA* data;\n \tconst RECTANGLE_16* srcExtents;\n \tRECTANGLE_16* dstExtents;\n \tconst RECTANGLE_16* currentBand, *endSrcRect, *nextBand;\n \tREGION16_DATA* newItems = NULL;\n+\tREGION16_DATA* tmpItems = NULL;\n \tRECTANGLE_16* dstRect = NULL;\n \tUINT32 usedRects, srcNbRects;\n \tUINT16 topInterBand;\n@@ -673,7 +679,11 @@ BOOL region16_union_rect(REGION16* dst, const REGION16* src, const RECTANGLE_16*\n \tdstExtents->bottom = MAX(rect->bottom, srcExtents->bottom);\n \tdstExtents->right = MAX(rect->right, srcExtents->right);\n \tnewItems->size = sizeof(REGION16_DATA) + (usedRects * sizeof(RECTANGLE_16));\n-\tdst->data = realloc(newItems, newItems->size);\n+\ttmpItems = realloc(newItems, newItems->size);\n+\tif (!tmpItems)\n+\t\tfree(newItems);\n+\tnewItems = tmpItems;\n+\tdst->data = newItems;\n \n \tif (!dst->data)\n \t{\n@@ -717,6 +727,7 @@ BOOL region16_intersects_rect(const REGION16* src, const RECTANGLE_16* arg2)\n \n BOOL region16_intersect_rect(REGION16* dst, const REGION16* src, const RECTANGLE_16* rect)\n {\n+\tREGION16_DATA* data;\n \tREGION16_DATA* newItems;\n \tconst RECTANGLE_16* srcPtr, *endPtr, *srcExtents;\n \tRECTANGLE_16* dstPtr;"
        },
        {
          "filename": "winpr/libwinpr/utils/lodepng/lodepng.c",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -841,11 +841,15 @@ unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequen\n static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,\n                                                 size_t mincodes, size_t numcodes, unsigned maxbitlen)\n {\n+\tunsigned* lengths;\n   unsigned error = 0;\n   while(!frequencies[numcodes - 1] && numcodes > mincodes) numcodes--; /*trim zeroes*/\n   tree->maxbitlen = maxbitlen;\n   tree->numcodes = (unsigned)numcodes; /*number of symbols*/\n-  tree->lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));\n+  lengths = (unsigned*)realloc(tree->lengths, numcodes * sizeof(unsigned));\n+\tif (!lengths)\n+\t\tfree(tree->lengths);\n+\ttree->lengths = lengths;\n   if(!tree->lengths) return 83; /*alloc fail*/\n   /*initialize all lengths to 0*/\n   memset(tree->lengths, 0, numcodes * sizeof(unsigned));"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e0ce33634f18b62a86e2a3470f051be5f764d0bc",
            "date": "2025-01-14T17:42:13Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "e1ee4bee38c341e345c589fdce0df46439d7174b",
            "date": "2025-01-14T17:39:57Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "6dfd18bfb8aec03012543285f330506accb1527d",
            "date": "2025-01-14T17:19:03Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "eac37a7c6509b8815f94b741ad6ab2407c0ea5cf",
            "date": "2025-01-14T17:09:16Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "7b4a903f662596981675ef49161586df2a04e28a",
            "date": "2025-01-14T12:32:12Z",
            "author_login": "oleg0421"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-252",
    "description": "HuffmanTree_makeFromFrequencies in lodepng.c in LodePNG through 2019-09-28, as used in WinPR in FreeRDP and other products, has a memory leak because a supplied realloc pointer (i.e., the first argument to realloc) is also used for a realloc return value.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-10-04T17:15:10.067",
    "last_modified": "2024-11-21T04:31:48.230",
    "fix_date": "2019-10-04T12:49:30Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-12/msg00004.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-12/msg00005.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/issues/5645",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-12/msg00004.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2019-12/msg00005.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/9fee4ae076b1ec97b97efb79ece08d1dab4df29a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/issues/5645",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:59.934520",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "FreeRDP",
    "owner": "FreeRDP",
    "created_at": "2011-06-30T19:14:15Z",
    "updated_at": "2025-01-14T11:51:38Z",
    "pushed_at": "2025-01-14T11:16:30Z",
    "size": 68011,
    "stars": 11214,
    "forks": 14938,
    "open_issues": 248,
    "watchers": 11214,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-1.0",
      "stable-1.1",
      "stable-2.0"
    ],
    "languages": {
      "C": 17349509,
      "C++": 685511,
      "CMake": 627854,
      "Objective-C": 540407,
      "Java": 373726,
      "HTML": 99135,
      "Shell": 51324,
      "Python": 46681,
      "Lua": 27393,
      "Roff": 26338,
      "Perl": 8044,
      "C#": 5756,
      "CSS": 5696,
      "Makefile": 2420,
      "Rich Text Format": 937
    },
    "commit_activity": {
      "total_commits_last_year": 2287,
      "avg_commits_per_week": 43.98076923076923,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:01:37.323973"
  }
}