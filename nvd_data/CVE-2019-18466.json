{
  "cve_id": "CVE-2019-18466",
  "github_data": {
    "repository": "containers/libpod",
    "fix_commit": "5c09c4d2947a759724f9d5aef6bac04317e03f7e",
    "related_commits": [
      "5c09c4d2947a759724f9d5aef6bac04317e03f7e",
      "5c09c4d2947a759724f9d5aef6bac04317e03f7e"
    ],
    "patch_url": "https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e.patch",
    "fix_commit_details": {
      "sha": "5c09c4d2947a759724f9d5aef6bac04317e03f7e",
      "commit_date": "2019-09-13T14:36:21Z",
      "author": {
        "login": "openshift-merge-robot",
        "type": "User",
        "stats": {
          "total_commits": 7639,
          "average_weekly_commits": 20.26259946949602,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 257
        }
      },
      "commit_message": {
        "title": "Merge pull request #3942 from jwhonce/issue/3829",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 48,
        "additions": 14,
        "deletions": 34
      },
      "files": [
        {
          "filename": "cmd/podman/cp.go",
          "status": "modified",
          "additions": 6,
          "deletions": 21,
          "patch": "@@ -52,7 +52,7 @@ func init() {\n \tcpCommand.Command = _cpCommand\n \tflags := cpCommand.Flags()\n \tflags.BoolVar(&cpCommand.Extract, \"extract\", false, \"Extract the tar file into the destination directory.\")\n-\tflags.BoolVar(&cpCommand.Pause, \"pause\", false, \"Pause the container while copying\")\n+\tflags.BoolVar(&cpCommand.Pause, \"pause\", true, \"Pause the container while copying\")\n \tcpCommand.SetHelpTemplate(HelpTemplate())\n \tcpCommand.SetUsageTemplate(UsageTemplate())\n }\n@@ -147,7 +147,6 @@ func copyBetweenHostAndContainer(runtime *libpod.Runtime, src string, dest strin\n \n \thostOwner := idtools.IDPair{UID: int(hostUID), GID: int(hostGID)}\n \n-\tvar glob []string\n \tif isFromHostToCtr {\n \t\tif isVol, volDestName, volName := isVolumeDestName(destPath, ctr); isVol {\n \t\t\tpath, err := pathWithVolumeMount(ctr, runtime, volDestName, volName, destPath)\n@@ -209,13 +208,7 @@ func copyBetweenHostAndContainer(runtime *libpod.Runtime, src string, dest strin\n \t\t\tsrcPath = cleanedPath\n \t\t}\n \t}\n-\tglob, err = filepath.Glob(srcPath)\n-\tif err != nil {\n-\t\treturn errors.Wrapf(err, \"invalid glob %q\", srcPath)\n-\t}\n-\tif len(glob) == 0 {\n-\t\tglob = append(glob, srcPath)\n-\t}\n+\n \tif !filepath.IsAbs(destPath) {\n \t\tdir, err := os.Getwd()\n \t\tif err != nil {\n@@ -224,19 +217,11 @@ func copyBetweenHostAndContainer(runtime *libpod.Runtime, src string, dest strin\n \t\tdestPath = filepath.Join(dir, destPath)\n \t}\n \n-\tvar lastError error\n-\tfor _, src := range glob {\n-\t\tif src == \"-\" {\n-\t\t\tsrc = os.Stdin.Name()\n-\t\t\textract = true\n-\t\t}\n-\t\terr := copy(src, destPath, dest, idMappingOpts, &destOwner, extract, isFromHostToCtr)\n-\t\tif lastError != nil {\n-\t\t\tlogrus.Error(lastError)\n-\t\t}\n-\t\tlastError = err\n+\tif src == \"-\" {\n+\t\tsrcPath = os.Stdin.Name()\n+\t\textract = true\n \t}\n-\treturn lastError\n+\treturn copy(srcPath, destPath, dest, idMappingOpts, &destOwner, extract, isFromHostToCtr)\n }\n \n func getUser(mountPoint string, userspec string) (specs.User, error) {"
        },
        {
          "filename": "test/e2e/cp_test.go",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -223,7 +223,7 @@ var _ = Describe(\"Podman cp\", func() {\n \t\tsession.WaitWithDefaultTimeout()\n \t\tExpect(session.ExitCode()).To(Equal(0))\n \n-\t\tsession = podmanTest.Podman([]string{\"cp\", \"testctr:testfile\", \"testfile1\"})\n+\t\tsession = podmanTest.Podman([]string{\"cp\", \"--pause=false\", \"testctr:testfile\", \"testfile1\"})\n \t\tsession.WaitWithDefaultTimeout()\n \t\tExpect(session.ExitCode()).To(Equal(0))\n \n@@ -233,7 +233,7 @@ var _ = Describe(\"Podman cp\", func() {\n \t\tExpect(err).To(BeNil())\n \t\tExpect(strings.Contains(string(cmdRet), \"testuser\")).To(BeFalse())\n \n-\t\tsession = podmanTest.Podman([]string{\"cp\", \"testfile1\", \"testctr:testfile2\"})\n+\t\tsession = podmanTest.Podman([]string{\"cp\", \"--pause=false\", \"testfile1\", \"testctr:testfile2\"})\n \t\tsession.WaitWithDefaultTimeout()\n \t\tExpect(session.ExitCode()).To(Equal(0))\n "
        },
        {
          "filename": "test/system/065-cp.bats",
          "status": "modified",
          "additions": 6,
          "deletions": 11,
          "patch": "@@ -27,13 +27,8 @@ load helpers\n                \"echo $rand_content1 >/tmp/$rand_filename1;\n                 echo $rand_content2 >/tmp/$rand_filename2\"\n \n-    run_podman cp 'cpcontainer:/tmp/*' $dstdir\n-\n-    test -e $dstdir/$rand_filename1 || die \"file 1 not copied from container\"\n-    test -e $dstdir/$rand_filename2 || die \"file 2 not copied from container\"\n-\n-    is \"$(<$dstdir/$rand_filename1)\" \"$rand_content1\" \"content of file 1\"\n-    is \"$(<$dstdir/$rand_filename2)\" \"$rand_content2\" \"content of file 2\"\n+    # cp no longer supports wildcarding\n+    run_podman 125 cp 'cpcontainer:/tmp/*' $dstdir\n \n     run_podman rm cpcontainer\n }\n@@ -150,13 +145,13 @@ load helpers\n \n     # Copy file from host into container, into a file named 'x'\n     # Note that the second has a trailing slash; this will trigger mkdir\n-    run_podman cp $srcdir/$rand_filename1 cpcontainer:/tmp/d1/x\n+    run_podman cp --pause=false $srcdir/$rand_filename1 cpcontainer:/tmp/d1/x\n     is \"$output\" \"\" \"output from podman cp 1\"\n \n-    run_podman cp $srcdir/$rand_filename2 cpcontainer:/tmp/d2/x/\n+    run_podman cp --pause=false $srcdir/$rand_filename2 cpcontainer:/tmp/d2/x/\n     is \"$output\" \"\" \"output from podman cp 3\"\n \n-    run_podman cp $srcdir/$rand_filename3 cpcontainer:/tmp/d3/x\n+    run_podman cp --pause=false $srcdir/$rand_filename3 cpcontainer:/tmp/d3/x\n     is \"$output\" \"\" \"output from podman cp 3\"\n \n     # Read back.\n@@ -205,7 +200,7 @@ load helpers\n                \"mkdir -p $graphroot; trap 'exit 0' 15;while :;do sleep 0.5;done\"\n \n     # Copy from host into container.\n-    run_podman cp $srcdir/$rand_filename cpcontainer:$graphroot/$rand_filename\n+    run_podman cp --pause=false $srcdir/$rand_filename cpcontainer:$graphroot/$rand_filename\n \n     # ls, and confirm it's there.\n     run_podman exec cpcontainer ls -l $graphroot/$rand_filename"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9f1fee2a0b119024750975e2b16c1a89edc615d9",
            "date": "2025-01-13T17:15:37Z",
            "author_login": "openshift-merge-bot[bot]"
          },
          {
            "sha": "75b4a1b2aa6c0440cfac61fcd38d70d57a9b1472",
            "date": "2025-01-09T17:46:00Z",
            "author_login": "AhmedMoalla"
          },
          {
            "sha": "11945578fc357225acdf753bc87f8852564286c5",
            "date": "2025-01-10T15:15:11Z",
            "author_login": "openshift-merge-bot[bot]"
          },
          {
            "sha": "de1aa44cc95e80156df1e55ba12b0d8bcb102f0b",
            "date": "2025-01-09T17:30:53Z",
            "author_login": "mtrmac"
          },
          {
            "sha": "0c18beaea7393eb6662fa1b8deced6ca7591b3d2",
            "date": "2025-01-08T19:32:40Z",
            "author_login": "mtrmac"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-59",
    "description": "An issue was discovered in Podman in libpod before 1.6.0. It resolves a symlink in the host context during a copy operation from the container to the host, because an undesired glob operation occurs. An attacker could create a container image containing particular symlinks that, when copied by a victim user to the host filesystem, may overwrite existing files with others from the host.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-10-28T13:15:11.430",
    "last_modified": "2024-11-21T04:33:17.487",
    "fix_date": "2019-09-13T14:36:21Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00040.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:4269",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1744588",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/compare/v1.5.1...v1.6.0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/issues/3829",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00040.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://access.redhat.com/errata/RHSA-2019:4269",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1744588",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/compare/v1.5.1...v1.6.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/containers/libpod/issues/3829",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:09.172683",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "podman",
    "owner": "containers",
    "created_at": "2017-11-01T15:01:27Z",
    "updated_at": "2025-01-14T16:23:05Z",
    "pushed_at": "2025-01-13T20:20:54Z",
    "size": 150763,
    "stars": 24520,
    "forks": 2461,
    "open_issues": 755,
    "watchers": 24520,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "v1.0",
      "v1.4.1-crio114",
      "v1.4.2-stable",
      "v1.6",
      "v1.6.4-rhel",
      "v1.9",
      "v2.0",
      "v2.0.5-rhel",
      "v2.1",
      "v2.1.1-rhel",
      "v2.2",
      "v2.2.1-rhel",
      "v3.0",
      "v3.0.1-rhel",
      "v3.1",
      "v3.2",
      "v3.2.3-rhel"
    ],
    "languages": {
      "Go": 8179809,
      "Shell": 1395561,
      "Perl": 211314,
      "Python": 108784,
      "PowerShell": 56174,
      "C": 54393,
      "Makefile": 47235,
      "Dockerfile": 4348,
      "Ruby": 3511,
      "Awk": 570,
      "HTML": 404,
      "Batchfile": 222
    },
    "commit_activity": {
      "total_commits_last_year": 2912,
      "avg_commits_per_week": 56.0,
      "days_active_last_year": 303
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T16:47:26.608972"
  }
}