{
  "cve_id": "CVE-2019-18672",
  "github_data": {
    "repository": "keepkey/keepkey-firmware",
    "fix_commit": "769714fcb569e7a4faff9530a2d9ac1f9d6e5680",
    "related_commits": [
      "769714fcb569e7a4faff9530a2d9ac1f9d6e5680",
      "769714fcb569e7a4faff9530a2d9ac1f9d6e5680"
    ],
    "patch_url": "https://github.com/keepkey/keepkey-firmware/commit/769714fcb569e7a4faff9530a2d9ac1f9d6e5680.patch",
    "fix_commit_details": {
      "sha": "769714fcb569e7a4faff9530a2d9ac1f9d6e5680",
      "commit_date": "2019-09-11T19:30:33Z",
      "author": {
        "login": "keepkeyjon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "firmware: stronger recovery state machine checks",
        "length": 48,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 30,
        "additions": 28,
        "deletions": 2
      },
      "files": [
        {
          "filename": "lib/firmware/recovery_cipher.c",
          "status": "modified",
          "additions": 28,
          "deletions": 2,
          "patch": "@@ -36,6 +36,7 @@\n \n #define MAX_UNCYPHERED_WORDS (3)\n \n+static bool recovery_started = false;\n static bool enforce_wordlist;\n static bool dry_run;\n static bool awaiting_character;\n@@ -56,6 +57,7 @@ static void recovery_abort(void) {\n         storage_reset();\n     }\n \n+    recovery_started = false;\n     awaiting_character = false;\n     memzero(mnemonic, sizeof(mnemonic));\n     memzero(cipher, sizeof(cipher));\n@@ -270,6 +272,7 @@ void recovery_cipher_init(bool passphrase_protection, bool pin_protection,\n \n     /* Set to recovery cipher mode and generate and show next cipher */\n     awaiting_character = true;\n+    recovery_started = true;\n     next_character();\n }\n \n@@ -283,6 +286,13 @@ void recovery_cipher_init(bool passphrase_protection, bool pin_protection,\n  */\n void next_character(void)\n {\n+    if (!recovery_started) {\n+        recovery_abort();\n+        fsm_sendFailure(FailureType_Failure_UnexpectedMessage, \"Not in Recovery mode\");\n+        layoutHome();\n+        return;\n+    }\n+\n     /* Scramble cipher */\n     strlcpy(cipher, english_alphabet, ENGLISH_ALPHABET_BUF);\n     random_permute_char(cipher, strlen(cipher));\n@@ -341,7 +351,7 @@ void next_character(void)\n  */\n void recovery_character(const char *character)\n {\n-    if (!awaiting_character) {\n+    if (!awaiting_character || !recovery_started) {\n         recovery_abort();\n         fsm_sendFailure(FailureType_Failure_UnexpectedMessage, \"Not in Recovery mode\");\n         layoutHome();\n@@ -430,6 +440,13 @@ void recovery_character(const char *character)\n  */\n void recovery_delete_character(void)\n {\n+    if (!recovery_started) {\n+        recovery_abort();\n+        fsm_sendFailure(FailureType_Failure_UnexpectedMessage, \"Not in Recovery mode\");\n+        layoutHome();\n+        return;\n+    }\n+\n     if(strlen(mnemonic) > 0)\n     {\n         mnemonic[strlen(mnemonic) - 1] = '\\0';\n@@ -448,6 +465,13 @@ void recovery_delete_character(void)\n  */\n void recovery_cipher_finalize(void)\n {\n+    if (!recovery_started) {\n+        recovery_abort();\n+        fsm_sendFailure(FailureType_Failure_UnexpectedMessage, \"Not in Recovery mode\");\n+        layoutHome();\n+        return;\n+    }\n+\n     static char CONFIDENTIAL new_mnemonic[MNEMONIC_BUF] = \"\";\n     static char CONFIDENTIAL temp_word[CURRENT_WORD_BUF];\n     volatile bool auto_completed = true;\n@@ -479,7 +503,7 @@ void recovery_cipher_finalize(void)\n     }\n \n     /* Truncate additional space at the end */\n-    new_mnemonic[strlen(new_mnemonic) - 1] = '\\0';\n+    new_mnemonic[MAX(0u, strnlen(new_mnemonic, sizeof(new_mnemonic)) - 1)] = '\\0';\n \n     if (!dry_run && (!enforce_wordlist || mnemonic_check(new_mnemonic))) {\n         storage_setMnemonic(new_mnemonic);\n@@ -532,6 +556,8 @@ void recovery_cipher_finalize(void)\n  */\n bool recovery_cipher_abort(void)\n {\n+    recovery_started = false;\n+\n     if (awaiting_character) {\n         awaiting_character = false;\n         return true;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "742a7d62e31465696509d8a8f32ebae9c4c703fa",
            "date": "2024-03-06T02:12:26Z",
            "author_login": "pastaghost"
          },
          {
            "sha": "a8d9caae87119e739dfd6ad709144305884aac85",
            "date": "2024-03-06T02:06:47Z",
            "author_login": "pastaghost"
          },
          {
            "sha": "33b3ae5f5371c3e17616e3070ef048c048f59080",
            "date": "2024-03-05T21:25:07Z",
            "author_login": "pastaghost"
          },
          {
            "sha": "1297662a2313fa6b363440458f0964be970fe9e3",
            "date": "2024-03-04T22:52:35Z",
            "author_login": "pastaghost"
          },
          {
            "sha": "50164a2eece63b84f1d5d4ff80df1184d3bb17c2",
            "date": "2024-03-04T22:52:28Z",
            "author_login": "pastaghost"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-354",
    "description": "Insufficient checks in the finite state machine of the ShapeShift KeepKey hardware wallet before firmware 6.2.2 allow a partial reset of cryptographic secrets to known values via crafted messages. Notably, this breaks the security of U2F for new server registrations and invalidates existing registrations. This vulnerability can be exploited by unauthenticated attackers and the interface is reachable via WebUSB.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-12-06T18:15:12.700",
    "last_modified": "2024-11-21T04:33:30.100",
    "fix_date": "2019-09-11T19:30:33Z"
  },
  "references": [
    {
      "url": "https://blog.inhq.net/posts/keepkey-CVE-2019-18672/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/keepkey/keepkey-firmware/commit/769714fcb569e7a4faff9530a2d9ac1f9d6e5680",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://medium.com/shapeshift-stories/keepkey-release-notes-v-6f7d2ec78065",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://medium.com/shapeshift-stories/shapeshift-security-update-8ec89bb1b4e3",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://blog.inhq.net/posts/keepkey-CVE-2019-18672/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/keepkey/keepkey-firmware/commit/769714fcb569e7a4faff9530a2d9ac1f9d6e5680",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://medium.com/shapeshift-stories/keepkey-release-notes-v-6f7d2ec78065",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://medium.com/shapeshift-stories/shapeshift-security-update-8ec89bb1b4e3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:24.248942",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "keepkey-firmware",
    "owner": "keepkey",
    "created_at": "2015-07-21T16:37:45Z",
    "updated_at": "2025-01-07T15:34:05Z",
    "pushed_at": "2024-03-06T02:19:56Z",
    "size": 40493,
    "stars": 157,
    "forks": 103,
    "open_issues": 14,
    "watchers": 157,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "beta"
    ],
    "languages": {
      "C": 1873217,
      "C++": 92884,
      "CMake": 37609,
      "Assembly": 28081,
      "Shell": 8597,
      "Dockerfile": 2436,
      "Python": 1057,
      "Pawn": 656,
      "GDB": 179
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T13:13:29.883414"
  }
}