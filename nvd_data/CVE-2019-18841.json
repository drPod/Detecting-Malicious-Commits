{
  "cve_id": "CVE-2019-18841",
  "github_data": {
    "repository": "ankane/chartkick",
    "fix_commit": "b810936bbf687bc74c5b6dba72d2397a399885fa",
    "related_commits": [
      "b810936bbf687bc74c5b6dba72d2397a399885fa",
      "b810936bbf687bc74c5b6dba72d2397a399885fa"
    ],
    "patch_url": "https://github.com/ankane/chartkick/commit/b810936bbf687bc74c5b6dba72d2397a399885fa.patch",
    "fix_commit_details": {
      "sha": "b810936bbf687bc74c5b6dba72d2397a399885fa",
      "commit_date": "2019-11-10T00:18:52Z",
      "author": {
        "login": "ankane",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Updated Chartkick.js to 3.2.0",
        "length": 29,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 118,
        "additions": 109,
        "deletions": 9
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,5 +1,6 @@\n ## 3.3.0 [unreleased]\n \n+- Updated Chartkick.js to 3.2.0\n - Rolled back Chart.js to 2.8.0 due to legend change\n \n ## 3.2.2"
        },
        {
          "filename": "vendor/assets/javascripts/chartkick.js",
          "status": "modified",
          "additions": 108,
          "deletions": 9,
          "patch": "@@ -2,15 +2,15 @@\n  * Chartkick.js\n  * Create beautiful charts with one line of JavaScript\n  * https://github.com/ankane/chartkick.js\n- * v3.1.3\n+ * v3.2.0\n  * MIT License\n  */\n \n (function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n   typeof define === 'function' && define.amd ? define(factory) :\n   (global = global || self, global.Chartkick = factory());\n-}(this, function () { 'use strict';\n+}(this, (function () { 'use strict';\n \n   function isArray(variable) {\n     return Object.prototype.toString.call(variable) === \"[object Array]\";\n@@ -21,13 +21,17 @@\n   }\n \n   function isPlainObject(variable) {\n-    return Object.prototype.toString.call(variable) === \"[object Object]\";\n+    // protect against prototype pollution, defense 2\n+    return Object.prototype.toString.call(variable) === \"[object Object]\" && !isFunction(variable) && variable instanceof Object;\n   }\n \n   // https://github.com/madrobby/zepto/blob/master/src/zepto.js\n   function extend(target, source) {\n     var key;\n     for (key in source) {\n+      // protect against prototype pollution, defense 1\n+      if (key === \"__proto__\") { continue; }\n+\n       if (isPlainObject(source[key]) || isArray(source[key])) {\n         if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n           target[key] = {};\n@@ -237,7 +241,7 @@\n     return typeof obj === \"number\";\n   }\n \n-  function formatValue(pre, value, options) {\n+  function formatValue(pre, value, options, axis) {\n     pre = pre || \"\";\n     if (options.prefix) {\n       if (value < 0) {\n@@ -247,6 +251,58 @@\n       pre += options.prefix;\n     }\n \n+    var suffix = options.suffix || \"\";\n+    var precision = options.precision;\n+    var round = options.round;\n+\n+    if (options.byteScale) {\n+      var baseValue = axis ? options.byteScale : value;\n+      if (baseValue >= 1099511627776) {\n+        value /= 1099511627776;\n+        suffix = \" TB\";\n+      } else if (baseValue >= 1073741824) {\n+        value /= 1073741824;\n+        suffix = \" GB\";\n+      } else if (baseValue >= 1048576) {\n+        value /= 1048576;\n+        suffix = \" MB\";\n+      } else if (baseValue >= 1024) {\n+        value /= 1024;\n+        suffix = \" KB\";\n+      } else {\n+        suffix = \" bytes\";\n+      }\n+\n+      if (precision === undefined && round === undefined) {\n+        precision = 3;\n+      }\n+    }\n+\n+    if (precision !== undefined && round !== undefined) {\n+      throw Error(\"Use either round or precision, not both\");\n+    }\n+\n+    if (!axis) {\n+      if (precision !== undefined) {\n+        value = value.toPrecision(precision);\n+        if (!options.zeros) {\n+          value = parseFloat(value);\n+        }\n+      }\n+\n+      if (round !== undefined) {\n+        if (round < 0) {\n+          var num = Math.pow(10, -1 * round);\n+          value = parseInt((1.0 * value / num).toFixed(0)) * num;\n+        } else {\n+          value = value.toFixed(round);\n+          if (!options.zeros) {\n+            value = parseFloat(value);\n+          }\n+        }\n+      }\n+    }\n+\n     if (options.thousands || options.decimal) {\n       value = toStr(value);\n       var parts = value.split(\".\");\n@@ -259,7 +315,7 @@\n       }\n     }\n \n-    return pre + value + (options.suffix || \"\");\n+    return pre + value + suffix;\n   }\n \n   function seriesOption(chart, series, option) {\n@@ -420,18 +476,58 @@\n       prefix: chart.options.prefix,\n       suffix: chart.options.suffix,\n       thousands: chart.options.thousands,\n-      decimal: chart.options.decimal\n+      decimal: chart.options.decimal,\n+      precision: chart.options.precision,\n+      round: chart.options.round,\n+      zeros: chart.options.zeros\n     };\n \n+    if (chart.options.bytes) {\n+      var series = chart.data;\n+      if (chartType === \"pie\") {\n+        series = [{data: series}];\n+      }\n+\n+      // calculate max\n+      var max = 0;\n+      for (var i = 0; i < series.length; i++) {\n+        var s = series[i];\n+        for (var j = 0; j < s.data.length; j++) {\n+          if (s.data[j][1] > max) {\n+            max = s.data[j][1];\n+          }\n+        }\n+      }\n+\n+      // calculate scale\n+      var scale = 1;\n+      while (max >= 1024) {\n+        scale *= 1024;\n+        max /= 1024;\n+      }\n+\n+      // set step size\n+      formatOptions.byteScale = scale;\n+    }\n+\n     if (chartType !== \"pie\") {\n       var myAxes = options.scales.yAxes;\n       if (chartType === \"bar\") {\n         myAxes = options.scales.xAxes;\n       }\n \n+      if (formatOptions.byteScale) {\n+        if (!myAxes[0].ticks.stepSize) {\n+          myAxes[0].ticks.stepSize = formatOptions.byteScale / 2;\n+        }\n+        if (!myAxes[0].ticks.maxTicksLimit) {\n+          myAxes[0].ticks.maxTicksLimit = 4;\n+        }\n+      }\n+\n       if (!myAxes[0].ticks.callback) {\n         myAxes[0].ticks.callback = function (value) {\n-          return formatValue(\"\", value, formatOptions);\n+          return formatValue(\"\", value, formatOptions, true);\n         };\n       }\n     }\n@@ -948,7 +1044,10 @@\n       prefix: chart.options.prefix,\n       suffix: chart.options.suffix,\n       thousands: chart.options.thousands,\n-      decimal: chart.options.decimal\n+      decimal: chart.options.decimal,\n+      precision: chart.options.precision,\n+      round: chart.options.round,\n+      zeros: chart.options.zeros\n     };\n \n     if (chartType !== \"pie\" && !options.yAxis.labels.formatter) {\n@@ -2316,4 +2415,4 @@\n \n   return Chartkick;\n \n-}));\n+})));"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ad13bead86b09592d1602a4c5078ba69762bf260",
            "date": "2024-12-29T17:07:12Z",
            "author_login": "ankane"
          },
          {
            "sha": "b07c7d51be3886028dbd7db5c96258f7468b9b4f",
            "date": "2024-12-03T15:17:19Z",
            "author_login": "ankane"
          },
          {
            "sha": "a1d4820e8a9cdf1dac404369408c85150cda1391",
            "date": "2024-11-12T06:28:20Z",
            "author_login": "ankane"
          },
          {
            "sha": "7f7628c19f6ead0b6cadbd85c62da12a8977d6ab",
            "date": "2024-11-12T05:31:21Z",
            "author_login": "ankane"
          },
          {
            "sha": "3bd298cd948cc0c22b8ecb5d314afef7af39b07a",
            "date": "2024-11-11T00:15:15Z",
            "author_login": "ankane"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": null,
    "description": "Chartkick.js 3.1.0 through 3.1.3, as used in the Chartkick gem before 3.3.0 for Ruby, allows prototype pollution.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-11-11T01:15:10.353",
    "last_modified": "2024-11-21T04:33:41.530",
    "fix_date": "2019-11-10T00:18:52Z"
  },
  "references": [
    {
      "url": "https://chartkick.com",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick.js/issues/117",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/blob/master/CHANGELOG.md",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/commit/b810936bbf687bc74c5b6dba72d2397a399885fa",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/commits/master",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://rubygems.org/gems/chartkick/",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Release Notes"
      ]
    },
    {
      "url": "https://chartkick.com",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick.js/issues/117",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/blob/master/CHANGELOG.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/commit/b810936bbf687bc74c5b6dba72d2397a399885fa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ankane/chartkick/commits/master",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://rubygems.org/gems/chartkick/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:09.186257",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "chartkick",
    "owner": "ankane",
    "created_at": "2013-05-07T07:39:38Z",
    "updated_at": "2025-01-14T12:50:59Z",
    "pushed_at": "2024-12-29T17:07:17Z",
    "size": 2227,
    "stars": 6384,
    "forks": 571,
    "open_issues": 8,
    "watchers": 6384,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Ruby": 13198,
      "JavaScript": 2051
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:56:17.490825"
  }
}