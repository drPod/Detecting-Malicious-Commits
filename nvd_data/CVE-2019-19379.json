{
  "cve_id": "CVE-2019-19379",
  "github_data": {
    "repository": "MISP/MISP",
    "fix_commit": "e05dc512a437284f14624da23cca4a829a76aebf",
    "related_commits": [
      "e05dc512a437284f14624da23cca4a829a76aebf",
      "e05dc512a437284f14624da23cca4a829a76aebf"
    ],
    "patch_url": "https://github.com/MISP/MISP/commit/e05dc512a437284f14624da23cca4a829a76aebf.patch",
    "fix_commit_details": {
      "sha": "e05dc512a437284f14624da23cca4a829a76aebf",
      "commit_date": "2019-11-26T10:36:49Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": {
          "total_commits": 9407,
          "average_weekly_commits": 13.692867540029113,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "fix: [security] tightened checks for restricting users from tagging data they shouldn't be allowed to tag",
        "length": 142,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 67,
        "additions": 41,
        "deletions": 26
      },
      "files": [
        {
          "filename": "app/Controller/TagsController.php",
          "status": "modified",
          "additions": 41,
          "deletions": 26,
          "patch": "@@ -860,41 +860,48 @@ public function tagStatistics($percentage = false, $keysort = false)\n         $this->render('/Servers/json/simple');\n     }\n \n-    private function __findObjectByUuid($object_uuid, &$type)\n+    private function __findObjectByUuid($object_uuid, &$type, $scope = 'modify')\n     {\n         $this->loadModel('Event');\n-        $object = $this->Event->find('first', array(\n-            'conditions' => array(\n-                'Event.uuid' => $object_uuid,\n-            ),\n-            'fields' => array('Event.orgc_id', 'Event.id'),\n-            'recursive' => -1\n+        if (!$this->userRole['perm_tagger']) {\n+            throw new MethodNotAllowedException(__('This functionality requires tagging permission.'));\n+        }\n+        $object = $this->Event->fetchEvent($this->Auth->user(), array(\n+            'event_uuid' => $object_uuid,\n+            'metadata' => 1\n         ));\n         $type = 'Event';\n         if (!empty($object)) {\n+            $object = $object[0];\n             if (\n+                $scope !== 'view' &&\n                 !$this->_isSiteAdmin() &&\n-                !$this->userRole['perm_tagger'] &&\n-                $object['Event']['orgc_id'] != $this->Auth->user('org_id')\n+                !$object['Event']['orgc_id'] != $this->Auth->user('org_id')\n             ) {\n-                throw new MethodNotAllowedException('Invalid Target.');\n+                throw new MethodNotAllowedException(__('Invalid Target.'));\n             }\n         } else {\n             $type = 'Attribute';\n-            $object = $this->Event->Attribute->find('first', array(\n-                'conditions' => array(\n-                    'Attribute.uuid' => $object_uuid,\n-                ),\n-                'fields' => array('Attribute.id'),\n-                'recursive' => -1,\n-                'contain' => array('Event.orgc_id')\n-            ));\n+            $object = $this->Event->Attribute->fetchAttributes(\n+                $this->Auth->user(),\n+                array(\n+                    'conditions' => array(\n+                        'Attribute.uuid' => $object_uuid\n+                    ),\n+                    'flatten' => 1\n+                )\n+            );\n             if (!empty($object)) {\n-                if (!$this->_isSiteAdmin() && !$this->userRole['perm_tagger'] && $object['Event']['orgc_id'] != $this->Auth->user('org_id')) {\n-                    throw new MethodNotAllowedException('Invalid Target.');\n+                $object = $object[0];\n+                if (\n+                    $scope !== 'view' &&\n+                    !$this->_isSiteAdmin() &&\n+                    !$object['Event']['orgc_id'] != $this->Auth->user('org_id')\n+                ) {\n+                    throw new MethodNotAllowedException(__('Invalid Target.'));\n                 }\n             } else {\n-                throw new MethodNotAllowedException('Invalid Target.');\n+                throw new MethodNotAllowedException(__('Invalid Target.'));\n             }\n         }\n         return $object;\n@@ -932,11 +939,11 @@ public function attachTagToObject($uuid = false, $tag = false, $local = false)\n                 $local = $this->request->data['local'];\n             }\n         }\n-        if (!is_bool($local)) {\n-            throw new InvalidArgumentException('Invalid local flag');\n+        if (!empty($local) && $this->Auth->user('org_id') != Configure::read('MISP.host_org_id')) {\n+            throw new MethodNotAllowedException(__('Local tags can only be added by users of the host organisation.'));\n         }\n         $objectType = '';\n-        $object = $this->__findObjectByUuid($uuid, $objectType);\n+        $object = $this->__findObjectByUuid($uuid, $objectType, $local ? 'view' : 'modify');\n         $existingTag = $this->Tag->find('first', array('conditions' => $conditions, 'recursive' => -1));\n         if (empty($existingTag)) {\n             if (!is_numeric($tag)) {\n@@ -1038,9 +1045,9 @@ public function removeTagFromObject($uuid = false, $tag = false)\n             throw new MethodNotAllowedException('Invalid Tag.');\n         }\n         $objectType = '';\n-        $object = $this->__findObjectByUuid($uuid, $objectType);\n+        $object = $this->__findObjectByUuid($uuid, $objectType, 'view');\n         if (empty($object)) {\n-            throw new MethodNotAllowedException('Invalid Target.');\n+            throw new MethodNotAllowedException(__('Invalid Target.'));\n         }\n         $connectorObject = $objectType . 'Tag';\n         $this->loadModel($objectType);\n@@ -1052,6 +1059,14 @@ public function removeTagFromObject($uuid = false, $tag = false)\n         ));\n         if (empty($existingAssociation)) {\n             throw new MethodNotAllowedException('Could not remove tag as it is not attached to the target ' . $objectType);\n+        } else {\n+            if (empty($existingAssociation[$objectType . 'Tag']['local'])) {\n+                $object = $this->__findObjectByUuid($uuid, $objectType);\n+            } else {\n+                if ($object['Event']['orgc_id'] !== $this->Auth->user('org_id') && $this->Auth->user('org_id') != Configure::read('MISP.host_org_id')) {\n+                    throw new MethodNotAllowedException(__('Insufficient privileges to remove local tags from events you do not own.'));\n+                }\n+            }\n         }\n         $result = $this->$objectType->$connectorObject->delete($existingAssociation[$connectorObject]['id']);\n         if ($result) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1da14f0253b2d853603bfb10e0c2b92aa27ecb6a",
            "date": "2025-01-13T07:57:22Z",
            "author_login": "iglocska"
          },
          {
            "sha": "439433b405ca829f33bf886e788be84c0870b6dc",
            "date": "2025-01-10T16:37:30Z",
            "author_login": "rubentroncon"
          },
          {
            "sha": "cd6d87caa2db4b6bbe65d7cdc2bd8d84bc7f0705",
            "date": "2025-01-10T13:37:21Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "9fd8c3f8d8ba83c31614b8f0614e50be4284147f",
            "date": "2025-01-10T09:35:18Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "7c23b9d94726723a38cfd48e5f6b2555f75c05fb",
            "date": "2025-01-10T09:43:37Z",
            "author_login": "chrisr3d"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": null,
    "description": "In app/Controller/TagsController.php in MISP 2.4.118, users can bypass intended restrictions on tagging data.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-11-28T17:15:12.867",
    "last_modified": "2024-11-21T04:34:40.843",
    "fix_date": "2019-11-26T10:36:49Z"
  },
  "references": [
    {
      "url": "https://github.com/MISP/MISP/commit/e05dc512a437284f14624da23cca4a829a76aebf",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/e05dc512a437284f14624da23cca4a829a76aebf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:24.239040",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "MISP",
    "owner": "MISP",
    "created_at": "2013-02-07T17:10:34Z",
    "updated_at": "2025-01-14T10:15:41Z",
    "pushed_at": "2025-01-13T08:23:44Z",
    "size": 158555,
    "stars": 5471,
    "forks": 1421,
    "open_issues": 2637,
    "watchers": 5471,
    "has_security_policy": false,
    "default_branch": "2.5",
    "protected_branches": [
      "2.4",
      "3.x"
    ],
    "languages": {
      "PHP": 9033432,
      "JavaScript": 1901843,
      "Python": 401628,
      "CSS": 156405,
      "Shell": 105142,
      "Perl": 6169,
      "Makefile": 759
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 231
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:59:29.252533"
  }
}