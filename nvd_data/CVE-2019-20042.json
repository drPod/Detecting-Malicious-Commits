{
  "cve_id": "CVE-2019-20042",
  "github_data": {
    "repository": "WordPress/wordpress-develop",
    "fix_commit": "1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
    "related_commits": [
      "1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
      "1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d"
    ],
    "patch_url": "https://github.com/WordPress/wordpress-develop/commit/1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d.patch",
    "fix_commit_details": {
      "sha": "1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
      "commit_date": "2019-12-12T18:08:36Z",
      "author": {
        "login": "whyisjake",
        "type": "User",
        "stats": {
          "total_commits": 206,
          "average_weekly_commits": 0.18101933216168717,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 37
        }
      },
      "commit_message": {
        "title": "Prevent  stored XSS through wp_targeted_link_rel().",
        "length": 269,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 105,
        "additions": 56,
        "deletions": 49
      },
      "files": [
        {
          "filename": "src/wp-includes/formatting.php",
          "status": "modified",
          "additions": 45,
          "deletions": 34,
          "patch": "@@ -3146,9 +3146,25 @@ function( $matches ) {\n  */\n function wp_targeted_link_rel( $text ) {\n \t// Don't run (more expensive) regex if no links with targets.\n-\tif ( stripos( $text, 'target' ) !== false && stripos( $text, '<a ' ) !== false ) {\n-\t\tif ( ! is_serialized( $text ) ) {\n-\t\t\t$text = preg_replace_callback( '|<a\\s([^>]*target\\s*=[^>]*)>|i', 'wp_targeted_link_rel_callback', $text );\n+\tif ( stripos( $text, 'target' ) === false || stripos( $text, '<a ' ) === false || is_serialized( $text ) ) {\n+\t\treturn $text;\n+\t}\n+\n+\t$script_and_style_regex = '/<(script|style).*?<\\/\\\\1>/si';\n+\n+\tpreg_match_all( $script_and_style_regex, $text, $matches );\n+\t$extra_parts = $matches[0];\n+\t$html_parts  = preg_split( $script_and_style_regex, $text );\n+\n+\tforeach ( $html_parts as &$part ) {\n+\t\t$part = preg_replace_callback( '|<a\\s([^>]*target\\s*=[^>]*)>|i', 'wp_targeted_link_rel_callback', $part );\n+\t}\n+\n+\t$text = '';\n+\tfor ( $i = 0; $i < count( $html_parts ); $i++ ) {\n+\t\t$text .= $html_parts[ $i ];\n+\t\tif ( isset( $extra_parts[ $i ] ) ) {\n+\t\t\t$text .= $extra_parts[ $i ];\n \t\t}\n \t}\n \n@@ -3167,8 +3183,17 @@ function wp_targeted_link_rel( $text ) {\n  * @return string HTML A Element with rel noreferrer noopener in addition to any existing values\n  */\n function wp_targeted_link_rel_callback( $matches ) {\n-\t$link_html = $matches[1];\n-\t$rel_match = array();\n+\t$link_html          = $matches[1];\n+\t$original_link_html = $link_html;\n+\n+\t// Consider the html escaped if there are no unescaped quotes\n+\t$is_escaped = ! preg_match( '/(^|[^\\\\\\\\])[\\'\"]/', $link_html );\n+\tif ( $is_escaped ) {\n+\t\t// Replace only the quotes so that they are parsable by wp_kses_hair, leave the rest as is\n+\t\t$link_html = preg_replace( '/\\\\\\\\([\\'\"])/', '$1', $link_html );\n+\t}\n+\n+\t$atts = wp_kses_hair( $link_html, wp_allowed_protocols() );\n \n \t/**\n \t * Filters the rel values that are added to links with `target` attribute.\n@@ -3180,35 +3205,21 @@ function wp_targeted_link_rel_callback( $matches ) {\n \t */\n \t$rel = apply_filters( 'wp_targeted_link_rel', 'noopener noreferrer', $link_html );\n \n-\t// Avoid additional regex if the filter removes rel values.\n-\tif ( ! $rel ) {\n-\t\treturn \"<a $link_html>\";\n-\t}\n-\n-\t// Value with delimiters, spaces around are optional.\n-\t$attr_regex = '|rel\\s*=\\s*?(\\\\\\\\{0,1}[\"\\'])(.*?)\\\\1|i';\n-\tpreg_match( $attr_regex, $link_html, $rel_match );\n-\n-\tif ( empty( $rel_match[0] ) ) {\n-\t\t// No delimiters, try with a single value and spaces, because `rel =  va\"lue` is totally fine...\n-\t\t$attr_regex = '|rel\\s*=(\\s*)([^\\s]*)|i';\n-\t\tpreg_match( $attr_regex, $link_html, $rel_match );\n-\t}\n-\n-\tif ( ! empty( $rel_match[0] ) ) {\n-\t\t$parts     = preg_split( '|\\s+|', strtolower( $rel_match[2] ) );\n-\t\t$parts     = array_map( 'esc_attr', $parts );\n-\t\t$needed    = explode( ' ', $rel );\n-\t\t$parts     = array_unique( array_merge( $parts, $needed ) );\n-\t\t$delimiter = trim( $rel_match[1] ) ? $rel_match[1] : '\"';\n-\t\t$rel       = 'rel=' . $delimiter . trim( implode( ' ', $parts ) ) . $delimiter;\n-\t\t$link_html = str_replace( $rel_match[0], $rel, $link_html );\n-\t} elseif ( preg_match( '|target\\s*=\\s*?\\\\\\\\\"|', $link_html ) ) {\n-\t\t$link_html .= \" rel=\\\\\\\"$rel\\\\\\\"\";\n-\t} elseif ( preg_match( '#(target|href)\\s*=\\s*?\\'#', $link_html ) ) {\n-\t\t$link_html .= \" rel='$rel'\";\n-\t} else {\n-\t\t$link_html .= \" rel=\\\"$rel\\\"\";\n+\t// Return early if no rel values to be added or if no actual target attribute\n+\tif ( ! $rel || ! isset( $atts['target'] ) ) {\n+\t\treturn \"<a $original_link_html>\";\n+\t}\n+\n+\tif ( isset( $atts['rel'] ) ) {\n+\t\t$all_parts = preg_split( '/\\s/', \"{$atts['rel']['value']} $rel\", -1, PREG_SPLIT_NO_EMPTY );\n+\t\t$rel       = implode( ' ', array_unique( $all_parts ) );\n+\t}\n+\n+\t$atts['rel']['whole'] = 'rel=\"' . esc_attr( $rel ) . '\"';\n+\t$link_html            = join( ' ', array_column( $atts, 'whole' ) );\n+\n+\tif ( $is_escaped ) {\n+\t\t$link_html = preg_replace( '/[\\'\"]/', '\\\\\\\\$0', $link_html );\n \t}\n \n \treturn \"<a $link_html>\";"
        },
        {
          "filename": "tests/phpunit/tests/formatting/WPTargetedLinkRel.php",
          "status": "modified",
          "additions": 11,
          "deletions": 15,
          "patch": "@@ -38,7 +38,7 @@ public function test_no_duplicate_values_added() {\n \n \tpublic function test_rel_with_single_quote_delimiter() {\n \t\t$content  = '<p>Links: <a href=\"/\" rel=\\'existing values\\' target=\"_blank\">Existing rel</a></p>';\n-\t\t$expected = '<p>Links: <a href=\"/\" rel=\\'existing values noopener noreferrer\\' target=\"_blank\">Existing rel</a></p>';\n+\t\t$expected = '<p>Links: <a href=\"/\" rel=\"existing values noopener noreferrer\" target=\"_blank\">Existing rel</a></p>';\n \t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n \t}\n \n@@ -54,12 +54,6 @@ public function test_rel_value_spaced_and_no_delimiter() {\n \t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n \t}\n \n-\tpublic function test_rel_value_spaced_and_no_delimiter_and_values_to_escape() {\n-\t\t$content  = '<p>Links: <a href=\"/\" rel = existing\"value target=\"_blank\">Existing rel</a></p>';\n-\t\t$expected = '<p>Links: <a href=\"/\" rel=\"existing&quot;value noopener noreferrer\" target=\"_blank\">Existing rel</a></p>';\n-\t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n-\t}\n-\n \tpublic function test_escaped_quotes() {\n \t\t$content  = '<p>Links: <a href=\\\"/\\\" rel=\\\"existing values\\\" target=\\\"_blank\\\">Existing rel</a></p>';\n \t\t$expected = '<p>Links: <a href=\\\"/\\\" rel=\\\"existing values noopener noreferrer\\\" target=\\\"_blank\\\">Existing rel</a></p>';\n@@ -114,17 +108,13 @@ public function test_wp_targeted_link_rel_should_preserve_json() {\n \t}\n \n \t/**\n-\t * Ensure correct quotes are used when relation attribute (rel) is missing.\n+\t * Ensure the content of style and script tags are not processed\n \t *\n \t * @ticket 47244\n \t */\n-\tpublic function test_wp_targeted_link_rel_should_use_correct_quotes() {\n-\t\t$content  = '<p>Links: <a href=\\'\\/\\' target=\\'_blank\\'>No rel<\\/a><\\/p>';\n-\t\t$expected = '<p>Links: <a href=\\'\\/\\' target=\\'_blank\\' rel=\\'noopener noreferrer\\'>No rel<\\/a><\\/p>';\n-\t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n-\n-\t\t$content  = '<p>Links: <a href=\\'\\/\\' target=_blank>No rel<\\/a><\\/p>';\n-\t\t$expected = '<p>Links: <a href=\\'\\/\\' target=_blank rel=\\'noopener noreferrer\\'>No rel<\\/a><\\/p>';\n+\tpublic function test_wp_targeted_link_rel_skips_style_and_scripts() {\n+\t\t$content  = '<style><a href=\"/\" target=a></style><p>Links: <script>console.log(\"<a href=\\'/\\' target=a>hi</a>\");</script><script>alert(1);</script>here <a href=\"/\" target=_blank>aq</a></p><script>console.log(\"<a href=\\'last\\' target=\\'_blank\\'\")</script>';\n+\t\t$expected = '<style><a href=\"/\" target=a></style><p>Links: <script>console.log(\"<a href=\\'/\\' target=a>hi</a>\");</script><script>alert(1);</script>here <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">aq</a></p><script>console.log(\"<a href=\\'last\\' target=\\'_blank\\'\")</script>';\n \t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n \t}\n \n@@ -139,4 +129,10 @@ public function test_ignore_entirely_serialized_content() {\n \t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n \t}\n \n+\tpublic function test_wp_targeted_link_rel_tab_separated_values_are_split() {\n+\t\t$content  = \"<p>Links: <a href=\\\"/\\\" target=\\\"_blank\\\" rel=\\\"ugc\\t\\tnoopener\\t\\\">No rel</a></p>\";\n+\t\t$expected = '<p>Links: <a href=\"/\" target=\"_blank\" rel=\"ugc noopener noreferrer\">No rel</a></p>';\n+\t\t$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );\n+\t}\n+\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "47774776112815b1b997a68fc51cf3dabd3f44c2",
            "date": "2025-01-14T11:37:00Z",
            "author_login": "johnbillion"
          },
          {
            "sha": "9d9d73cd9e5d243e4841fe9567ef388e3fb65932",
            "date": "2025-01-13T22:20:03Z",
            "author_login": "SergeyBiryukov"
          },
          {
            "sha": "062df4cd8825c3a44de4c05fe612bf3172ede84b",
            "date": "2025-01-13T14:55:09Z",
            "author_login": "desrosj"
          },
          {
            "sha": "88796678fd838ab0e790d22558f258c906262400",
            "date": "2025-01-12T18:12:14Z",
            "author_login": "SergeyBiryukov"
          },
          {
            "sha": "c0d073d62d32d424d9149619a7fcae48ddb82c26",
            "date": "2025-01-11T13:42:46Z",
            "author_login": "swissspidy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "In wp-includes/formatting.php in WordPress 3.7 to 5.3.0, the function wp_targeted_link_rel() can be used in a particular way to result in a stored cross-site scripting (XSS) vulnerability. This has been patched in WordPress 5.3.1, along with all the previous WordPress versions from 3.7 to 5.3 via a minor release.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2019-12-27T08:15:09.747",
    "last_modified": "2024-11-21T04:37:56.660",
    "fix_date": "2019-12-12T18:08:36Z"
  },
  "references": [
    {
      "url": "https://blog.ripstech.com/filter/vulnerabilities/",
      "source": "cve@mitre.org",
      "tags": [
        "Not Applicable"
      ]
    },
    {
      "url": "https://core.trac.wordpress.org/changeset/46894/trunk",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/WordPress/wordpress-develop/commit/1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-xvg2-m2f4-83m7",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/509930",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2020/Jan/8",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wpvulndb.com/vulnerabilities/9975",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4599",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4677",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://blog.ripstech.com/filter/vulnerabilities/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Not Applicable"
      ]
    },
    {
      "url": "https://core.trac.wordpress.org/changeset/46894/trunk",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/WordPress/wordpress-develop/commit/1f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/WordPress/wordpress-develop/security/advisories/GHSA-xvg2-m2f4-83m7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/509930",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://seclists.org/bugtraq/2020/Jan/8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://wpvulndb.com/vulnerabilities/9975",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4599",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4677",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:24.277176",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wordpress-develop",
    "owner": "WordPress",
    "created_at": "2016-12-05T16:41:44Z",
    "updated_at": "2025-01-14T11:37:14Z",
    "pushed_at": "2025-01-14T11:37:07Z",
    "size": 307564,
    "stars": 2652,
    "forks": 2710,
    "open_issues": 1941,
    "watchers": 2652,
    "has_security_policy": false,
    "default_branch": "trunk",
    "protected_branches": [
      "1.5",
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "2.9",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "3.5",
      "3.6",
      "3.7",
      "3.8",
      "3.9",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "4.5",
      "4.6",
      "4.7",
      "4.8",
      "4.9"
    ],
    "languages": {
      "PHP": 31280108,
      "CSS": 3527314,
      "JavaScript": 3133436,
      "SCSS": 321414,
      "HTML": 252320,
      "XSLT": 2137,
      "Python": 1724,
      "Shell": 977,
      "Rich Text Format": 341,
      "Hack": 245
    },
    "commit_activity": {
      "total_commits_last_year": 1725,
      "avg_commits_per_week": 33.17307692307692,
      "days_active_last_year": 358
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:50:59.247064"
  }
}