{
  "cve_id": "CVE-2019-20913",
  "github_data": {
    "repository": "LibreDWG/libredwg",
    "fix_commit": "3f503dd294efc63a59608d8a16058c41d44ba13a",
    "related_commits": [
      "3f503dd294efc63a59608d8a16058c41d44ba13a",
      "3f503dd294efc63a59608d8a16058c41d44ba13a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "3f503dd294efc63a59608d8a16058c41d44ba13a",
      "commit_date": "2020-01-02T06:53:11Z",
      "author": {
        "login": "rurban",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "add DEBUGGING_CLASS_CPP",
        "length": 197,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 30,
        "additions": 19,
        "deletions": 11
      },
      "files": [
        {
          "filename": "src/classes.inc",
          "status": "modified",
          "additions": 17,
          "deletions": 9,
          "patch": "@@ -53,10 +53,12 @@\n # define DEBUGGING_DXF(action, name)                 ALLOW_DXF(action, name)\n # define DEBUGGING_CLASS(action, name)               UNSTABLE_CLASS(action, name)\n # define DEBUGGING_CLASS_DXF(action, name, _dxfname) UNSTABLE_CLASS_DXF(action, name, _dxfname)\n+# define DEBUGGING_CLASS_CPP(action, name, _cppname) UNSTABLE_CLASS_CPP(action, name, _cppname)\n #else\n # define DEBUGGING_DXF(action, name)                 DISALLOW_DXF(action, name)\n # define DEBUGGING_CLASS(action, name)               UNHANDLED_CLASS(action, name)\n # define DEBUGGING_CLASS_DXF(action, name, _dxfname) UNHANDLED_CLASS_DXF(action, name, _dxfname)\n+# define DEBUGGING_CLASS_CPP(action, name, _cppname) UNHANDLED_CLASS_CPP(action, name, _cppname)\n #endif\n \n //#define _DWG_FUNC_N(action,name) dwg_ ## action ## _ ## name\n@@ -123,7 +125,7 @@\n         obj->dxfname = (char*) #_name; \\\n         obj->fixedtype = DWG_TYPE_##_name; \\\n       } \\\n-      return DEBUGGING_DXF(action, name) DWG_FUNC_N(action,_name)(dat, obj); \\\n+      return DEBUGGING_DXF(action, name) DWG_FUNC_N(action,_name) (dat, obj); \\\n     }\n #define UNHANDLED_CLASS(action, _name) \\\n   if (klass->dxfname && strEQc (klass->dxfname, #_name)) \\\n@@ -132,9 +134,7 @@\n       if (strEQc (_STR(action), \"decode\") || !memcmp (_STR(action), \"in\", 2)) { \\\n         obj->name = (char*) #_name; \\\n         obj->dxfname = (char*) #_name; \\\n-        /*obj->fixedtype = DWG_TYPE_##_name; */ \\\n       } \\\n-      /* return dwg_##action_##_name(dat, obj); */ \\\n       return DWG_ERR_UNHANDLEDCLASS; \\\n     }\n #define UNHANDLED_CLASS_DXF(action, _name, _dxfname) \\\n@@ -144,9 +144,17 @@\n       if (strEQc (_STR(action), \"decode\") || !memcmp (_STR(action), \"in\", 2)) { \\\n         obj->name = (char*) #_name; \\\n         obj->dxfname = (char*) #_dxfname; \\\n-        /*obj->fixedtype = DWG_TYPE_##_name; */ \\\n       } \\\n-      /* return dwg_##action_##name(dat, obj); */ \\\n+      return DWG_ERR_UNHANDLEDCLASS; \\\n+    }\n+#define UNHANDLED_CLASS_CPP(action, _name, _cppname) \\\n+  if (klass->cppname && strEQc (klass->cppname, #_cppname)) \\\n+    { \\\n+      WARN_UNHANDLED_CLASS; \\\n+      if (strEQc (_STR(action), \"decode\") || !memcmp (_STR(action), \"in\", 2)) { \\\n+        obj->name = (char*) #_name; \\\n+        obj->dxfname = (char*) #_name; \\\n+      } \\\n       return DWG_ERR_UNHANDLEDCLASS; \\\n     }\n \n@@ -170,9 +178,9 @@\n   STABLE_CLASS    (ACTION, IMAGEDEF)\n   STABLE_CLASS    (ACTION, IMAGEDEF_REACTOR)\n   STABLE_CLASS    (ACTION, LAYER_INDEX)\n-  STABLE_CLASS    (ACTION, LAYOUT)\n+  STABLE_CLASS    (ACTION, LAYOUT) // TODO bottom_margin nan\n   STABLE_CLASS    (ACTION, LWPOLYLINE)\n-  STABLE_CLASS    (ACTION, MLEADERSTYLE)\n+  STABLE_CLASS    (ACTION, MLEADERSTYLE) // TODO block_rotation nan\n   STABLE_CLASS    (ACTION, OBJECTCONTEXTDATA)\n   STABLE_CLASS_CPP(ACTION, OBJECTCONTEXTDATA, AcDbObjectContextData)\n   STABLE_CLASS_DXF(ACTION, PLACEHOLDER, ACDBPLACEHOLDER)\n@@ -219,8 +227,8 @@\n   DEBUGGING_CLASS     (ACTION, REVOLVEDSURFACE)   /*ent */\n   DEBUGGING_CLASS     (ACTION, SWEPTSURFACE)      /*ent */\n   DEBUGGING_CLASS_DXF (ACTION, TABLE, ACAD_TABLE) /*ent, r2010+ needs subclassing */\n-  DEBUGGING_CLASS     (ACTION, ARC_DIMENSION) //ent\n-  DEBUGGING_CLASS     (ACTION, TABLECONTENT) //wrong values\n+  DEBUGGING_CLASS     (ACTION, ARC_DIMENSION)     /*ent */\n+  DEBUGGING_CLASS_CPP (ACTION, TABLECONTENT, AcDbTableContent)\n   DEBUGGING_CLASS     (ACTION, TABLEGEOMETRY) //wrong geom_data\n   DEBUGGING_CLASS     (ACTION, CELLSTYLEMAP) //broken\n   DEBUGGING_CLASS     (ACTION, MATERIAL)     //working on"
        },
        {
          "filename": "src/dec_macros.h",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1236,8 +1236,8 @@\n       obj_dat = *dat;                                                         \\\n       hdl_dat = *dat;                                                         \\\n       str_dat = *dat;                                                         \\\n-      error                                                                   \\\n-          = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat, obj); \\\n+      error = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat,     \\\n+                                            obj);                             \\\n     }                                                                         \\\n     else { error = dwg_decode_##token##_private (dat, dat, dat, obj); }       \\\n     return error;                                                             \\"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "56d392a7e5ae5f522004ff92396dabd468f8d810",
            "date": "2024-12-22T06:40:55Z",
            "author_login": "aled-ua"
          },
          {
            "sha": "47a07e5fadfd335adf63cb3ff995edbda86565a3",
            "date": "2024-12-03T09:11:55Z",
            "author_login": "rurban"
          },
          {
            "sha": "a208df1ba9702d2933d57869230b51738fa05d32",
            "date": "2024-12-01T17:43:48Z",
            "author_login": "rurban"
          },
          {
            "sha": "73ea171313ed2efca15b59a1f484c56b4a661e1e",
            "date": "2024-12-01T17:38:55Z",
            "author_login": "rurban"
          },
          {
            "sha": "b76f99df5bf29af8f0b9bfdeb79793f8b821e247",
            "date": "2023-07-28T14:31:49Z",
            "author_login": "rurban"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "An issue was discovered in GNU LibreDWG through 0.9.3. Crafted input will lead to a heap-based buffer over-read in dwg_encode_entity in common_entity_data.spec.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-07-16T18:15:13.503",
    "last_modified": "2024-11-21T04:39:40.487",
    "fix_date": "2020-01-02T06:53:11Z"
  },
  "references": [
    {
      "url": "https://github.com/LibreDWG/libredwg/commit/3f503dd294efc63a59608d8a16058c41d44ba13a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LibreDWG/libredwg/issues/178",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LibreDWG/libredwg/commit/3f503dd294efc63a59608d8a16058c41d44ba13a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LibreDWG/libredwg/issues/178",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:01.368029",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "libredwg",
    "owner": "LibreDWG",
    "created_at": "2018-05-06T13:01:25Z",
    "updated_at": "2025-01-24T23:33:12Z",
    "pushed_at": "2025-01-01T08:30:48Z",
    "size": 93717,
    "stars": 1025,
    "forks": 246,
    "open_issues": 111,
    "watchers": 1025,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 27080259,
      "Shell": 195384,
      "M4": 188244,
      "Perl": 133096,
      "SWIG": 62478,
      "Makefile": 57350,
      "CMake": 27062,
      "Roff": 12889,
      "Python": 11732,
      "Common Lisp": 4155,
      "Batchfile": 3219,
      "Dockerfile": 2881,
      "HTML": 842
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:35:17.441942"
  }
}