{
  "cve_id": "CVE-2019-25049",
  "github_data": {
    "repository": "libressl-portable/portable",
    "fix_commit": "17c88164016df821df2dff4b2b1291291ec4f28a",
    "related_commits": [
      "17c88164016df821df2dff4b2b1291291ec4f28a",
      "17c88164016df821df2dff4b2b1291291ec4f28a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "17c88164016df821df2dff4b2b1291291ec4f28a",
      "commit_date": "2020-09-19T16:09:35Z",
      "author": {
        "login": "4a6f656c",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Make pthread_mutex static initialisation work on Windows.",
        "length": 364,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 28,
        "additions": 23,
        "deletions": 5
      },
      "files": [
        {
          "filename": "include/compat/pthread.h",
          "status": "modified",
          "additions": 23,
          "deletions": 5,
          "patch": "@@ -8,6 +8,8 @@\n \n #ifdef _WIN32\n \n+#include <malloc.h>\n+#include <stdlib.h>\n #include <windows.h>\n \n /*\n@@ -18,7 +20,7 @@\n /*\n  * Static mutex initialization values.\n  */\n-#define PTHREAD_MUTEX_INITIALIZER\t{ 0, 0, 0, 0, 0, 0 }\n+#define PTHREAD_MUTEX_INITIALIZER\t{ .lock = NULL }\n \n /*\n  * Once definitions.\n@@ -60,27 +62,43 @@ pthread_equal(pthread_t t1, pthread_t t2)\n \treturn t1 == t2;\n }\n \n-typedef CRITICAL_SECTION pthread_mutex_t;\n+struct pthread_mutex {\n+\tvolatile LPCRITICAL_SECTION lock;\n+};\n+typedef struct pthread_mutex pthread_mutex_t;\n typedef void pthread_mutexattr_t;\n \n static inline int\n pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)\n {\n-\tInitializeCriticalSection(mutex);\n+\tif ((mutex->lock = malloc(sizeof(CRITICAL_SECTION))) == NULL)\n+\t\texit(ENOMEM);\n+\tInitializeCriticalSection(mutex->lock);\n \treturn 0;\n }\n \n static inline int\n pthread_mutex_lock(pthread_mutex_t *mutex)\n {\n-\tEnterCriticalSection(mutex);\n+\tif (mutex->lock == NULL) {\n+\t\tLPCRITICAL_SECTION lcs;\n+\n+\t\tif ((lcs = malloc(sizeof(CRITICAL_SECTION))) == NULL)\n+\t\t\texit(ENOMEM);\n+\t\tInitializeCriticalSection(lcs);\n+\t\tif (InterlockedCompareExchangePointer((PVOID*)&mutex->lock, (PVOID)lcs, NULL) != NULL) {\n+\t\t\tDeleteCriticalSection(lcs);\n+\t\t\tfree(lcs);\n+\t\t}\n+\t}\n+\tEnterCriticalSection(mutex->lock);\n \treturn 0;\n }\n \n static inline int\n pthread_mutex_unlock(pthread_mutex_t *mutex)\n {\n-\tLeaveCriticalSection(mutex);\n+\tLeaveCriticalSection(mutex->lock);\n \treturn 0;\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7e58cd8d51dbc517d562d11f256a8102fb04e748",
            "date": "2025-01-25T19:40:01Z",
            "author_login": "botovq"
          },
          {
            "sha": "63b31651802015069b531ccae1269e680e233a9d",
            "date": "2025-01-25T15:39:20Z",
            "author_login": "botovq"
          },
          {
            "sha": "7428e5554cf44e9606dc72ba65671da5e127fd22",
            "date": "2025-01-22T19:22:39Z",
            "author_login": "botovq"
          },
          {
            "sha": "49aacfca015ccfc767dd4dbfe38cf7e88a354391",
            "date": "2025-01-22T16:47:09Z",
            "author_login": "botovq"
          },
          {
            "sha": "055b96d6317c040c9010df2ed914443851513e32",
            "date": "2025-01-21T16:21:26Z",
            "author_login": "botovq"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "LibreSSL 2.9.1 through 3.2.1 has an out-of-bounds read in asn1_item_print_ctx (called from asn1_template_print_ctx).",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-07-01T03:15:07.600",
    "last_modified": "2024-11-21T04:39:49.783",
    "fix_date": "2020-09-19T16:09:35Z"
  },
  "references": [
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13920",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/libressl/OSV-2020-1965.yaml",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/libressl-portable/portable/commit/17c88164016df821df2dff4b2b1291291ec4f28a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13920",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/libressl/OSV-2020-1965.yaml",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/libressl-portable/portable/commit/17c88164016df821df2dff4b2b1291291ec4f28a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.766932",
    "processing_status": "enhanced"
  }
}