{
  "cve_id": "CVE-2019-25052",
  "github_data": {
    "repository": "OP-TEE/optee_os",
    "fix_commit": "34a08bec755670ea0490cb53bbc68058cafc69b6",
    "related_commits": [
      "34a08bec755670ea0490cb53bbc68058cafc69b6",
      "34a08bec755670ea0490cb53bbc68058cafc69b6"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "34a08bec755670ea0490cb53bbc68058cafc69b6",
      "commit_date": "2019-06-25T09:47:09Z",
      "author": {
        "login": "jbech-linaro",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "cryp: prevent direct calls to update and final functions",
        "length": 872,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 36,
        "deletions": 0
      },
      "files": [
        {
          "filename": "core/tee/tee_svc_cryp.c",
          "status": "modified",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -31,6 +31,11 @@\n #include <tee/tee_cryp_pbkdf2.h>\n #endif\n \n+enum cryp_state {\n+\tCRYP_STATE_INITIALIZED = 0,\n+\tCRYP_STATE_UNINITIALIZED\n+};\n+\n typedef void (*tee_cryp_ctx_finalize_func_t) (void *ctx, uint32_t algo);\n struct tee_cryp_state {\n \tTAILQ_ENTRY(tee_cryp_state) link;\n@@ -40,6 +45,7 @@ struct tee_cryp_state {\n \tvaddr_t key2;\n \tvoid *ctx;\n \ttee_cryp_ctx_finalize_func_t ctx_finalize;\n+\tenum cryp_state state;\n };\n \n struct tee_cryp_obj_secret {\n@@ -2056,6 +2062,7 @@ TEE_Result syscall_cryp_state_alloc(unsigned long algo, unsigned long mode,\n \tTAILQ_INSERT_TAIL(&utc->cryp_states, cs, link);\n \tcs->algo = algo;\n \tcs->mode = mode;\n+\tcs->state = CRYP_STATE_UNINITIALIZED;\n \n \tswitch (TEE_ALG_GET_CLASS(algo)) {\n \tcase TEE_OPERATION_EXTENSION:\n@@ -2179,6 +2186,8 @@ TEE_Result syscall_cryp_state_copy(unsigned long dst, unsigned long src)\n \t\treturn TEE_ERROR_BAD_STATE;\n \t}\n \n+\tcs_dst->state = cs_src->state;\n+\n \treturn TEE_SUCCESS;\n }\n \n@@ -2253,6 +2262,8 @@ TEE_Result syscall_hash_init(unsigned long state,\n \t\treturn TEE_ERROR_BAD_PARAMETERS;\n \t}\n \n+\tcs->state = CRYP_STATE_INITIALIZED;\n+\n \treturn TEE_SUCCESS;\n }\n \n@@ -2286,6 +2297,9 @@ TEE_Result syscall_hash_update(unsigned long state, const void *chunk,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tswitch (TEE_ALG_GET_CLASS(cs->algo)) {\n \tcase TEE_OPERATION_DIGEST:\n \t\tres = crypto_hash_update(cs->ctx, cs->algo, chunk, chunk_size);\n@@ -2344,6 +2358,9 @@ TEE_Result syscall_hash_final(unsigned long state, const void *chunk,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tswitch (TEE_ALG_GET_CLASS(cs->algo)) {\n \tcase TEE_OPERATION_DIGEST:\n \t\tres = tee_hash_get_digest_size(cs->algo, &hash_size);\n@@ -2453,6 +2470,8 @@ TEE_Result syscall_cipher_init(unsigned long state, const void *iv,\n \t\treturn res;\n \n \tcs->ctx_finalize = crypto_cipher_final;\n+\tcs->state = CRYP_STATE_INITIALIZED;\n+\n \treturn TEE_SUCCESS;\n }\n \n@@ -2473,6 +2492,9 @@ static TEE_Result tee_svc_cipher_update_helper(unsigned long state,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tres = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),\n \t\t\t\t\t  TEE_MEMORY_ACCESS_READ |\n \t\t\t\t\t  TEE_MEMORY_ACCESS_ANY_OWNER,\n@@ -2987,6 +3009,8 @@ TEE_Result syscall_authenc_init(unsigned long state, const void *nonce,\n \t\treturn res;\n \n \tcs->ctx_finalize = (tee_cryp_ctx_finalize_func_t)crypto_authenc_final;\n+\tcs->state = CRYP_STATE_INITIALIZED;\n+\n \treturn TEE_SUCCESS;\n }\n \n@@ -3013,6 +3037,9 @@ TEE_Result syscall_authenc_update_aad(unsigned long state,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tif (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)\n \t\treturn TEE_ERROR_BAD_STATE;\n \n@@ -3041,6 +3068,9 @@ TEE_Result syscall_authenc_update_payload(unsigned long state,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tif (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)\n \t\treturn TEE_ERROR_BAD_STATE;\n \n@@ -3100,6 +3130,9 @@ TEE_Result syscall_authenc_enc_final(unsigned long state,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tif (cs->mode != TEE_MODE_ENCRYPT)\n \t\treturn TEE_ERROR_BAD_PARAMETERS;\n \n@@ -3184,6 +3217,9 @@ TEE_Result syscall_authenc_dec_final(unsigned long state,\n \tif (res != TEE_SUCCESS)\n \t\treturn res;\n \n+\tif (cs->state != CRYP_STATE_INITIALIZED)\n+\t\treturn TEE_ERROR_BAD_STATE;\n+\n \tif (cs->mode != TEE_MODE_DECRYPT)\n \t\treturn TEE_ERROR_BAD_PARAMETERS;\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ded20780a4ad85f64b383c3f8ecc96c3ffade082",
            "date": "2024-10-23T08:54:44Z",
            "author_login": "etienne-lms"
          },
          {
            "sha": "234a510d622818c8dce21cd189c805faac10e32d",
            "date": "2024-12-09T17:23:56Z",
            "author_login": "etienne-lms"
          },
          {
            "sha": "8261ca4b6970e536f8a4c833d6659fed148b9cec",
            "date": "2025-01-16T09:21:26Z",
            "author_login": "etienne-lms"
          },
          {
            "sha": "6e2e1d60896e5833a3c061592273066c635bb0b7",
            "date": "2025-01-16T09:23:08Z",
            "author_login": "etienne-lms"
          },
          {
            "sha": "76306f734337ea628c45ed3f0d208d3af33ceadb",
            "date": "2025-01-16T09:20:19Z",
            "author_login": "etienne-lms"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-327",
    "description": "In Linaro OP-TEE before 3.7.0, by using inconsistent or malformed data, it is possible to call update and final cryptographic functions directly, causing a crash that could leak sensitive information.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-08-11T15:15:07.187",
    "last_modified": "2024-11-21T04:39:50.280",
    "fix_date": "2019-06-25T09:47:09Z"
  },
  "references": [
    {
      "url": "https://github.com/OP-TEE/optee_os/commit/34a08bec755670ea0490cb53bbc68058cafc69b6",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-pgwr-qmgh-vhmf",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OP-TEE/optee_os/commit/34a08bec755670ea0490cb53bbc68058cafc69b6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OP-TEE/optee_os/security/advisories/GHSA-pgwr-qmgh-vhmf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.063375",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "optee_os",
    "owner": "OP-TEE",
    "created_at": "2014-05-26T17:18:57Z",
    "updated_at": "2025-01-26T07:09:56Z",
    "pushed_at": "2025-01-24T17:44:45Z",
    "size": 36041,
    "stars": 1644,
    "forks": 1082,
    "open_issues": 52,
    "watchers": 1644,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "poc/openssl_cryptolib"
    ],
    "languages": {
      "C": 21335924,
      "Assembly": 474892,
      "Makefile": 430397,
      "Python": 165315,
      "HTML": 75678,
      "Shell": 8903
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:41:08.656425"
  }
}