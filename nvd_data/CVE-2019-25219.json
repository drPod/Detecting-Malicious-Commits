{
  "cve_id": "CVE-2019-25219",
  "github_data": {
    "repository": "chriskohlhoff/asio",
    "fix_commit": "93337cba7b013150f5aa6194393e1d94be2853ec",
    "related_commits": [
      "93337cba7b013150f5aa6194393e1d94be2853ec"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "93337cba7b013150f5aa6194393e1d94be2853ec",
      "commit_date": "2019-03-01T21:44:03Z",
      "author": {
        "login": "chriskohlhoff",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add a fallback error code for when we get SSL_ERROR_SYSCALL without an associated error.",
        "length": 88,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 46,
        "additions": 36,
        "deletions": 10
      },
      "files": [
        {
          "filename": "asio/include/asio/ssl/detail/impl/engine.ipp",
          "status": "modified",
          "additions": 16,
          "deletions": 4,
          "patch": "@@ -246,8 +246,15 @@ engine::want engine::perform(int (engine::* op)(void*, std::size_t),\n \n   if (ssl_error == SSL_ERROR_SYSCALL)\n   {\n-    ec = asio::error_code(sys_error,\n-        asio::error::get_system_category());\n+    if (sys_error == 0)\n+    {\n+      ec = asio::ssl::error::unspecified_system_error;\n+    }\n+    else\n+    {\n+      ec = asio::error_code(sys_error,\n+          asio::error::get_ssl_category());\n+    }\n     return pending_output_after > pending_output_before\n       ? want_output : want_nothing;\n   }\n@@ -270,16 +277,21 @@ engine::want engine::perform(int (engine::* op)(void*, std::size_t),\n     ec = asio::error_code();\n     return want_input_and_retry;\n   }\n-  else if (::SSL_get_shutdown(ssl_) & SSL_RECEIVED_SHUTDOWN)\n+  else if (ssl_error == SSL_ERROR_ZERO_RETURN)\n   {\n     ec = asio::error::eof;\n     return want_nothing;\n   }\n-  else\n+  else if (ssl_error == SSL_ERROR_NONE)\n   {\n     ec = asio::error_code();\n     return want_nothing;\n   }\n+  else\n+  {\n+    ec = asio::ssl::error::unexpected_result;\n+    return want_nothing;\n+  }\n }\n \n int engine::do_accept(void*, std::size_t)"
        },
        {
          "filename": "asio/include/asio/ssl/error.hpp",
          "status": "modified",
          "additions": 18,
          "deletions": 6,
          "patch": "@@ -44,12 +44,24 @@ enum stream_errors\n {\n #if defined(GENERATING_DOCUMENTATION)\n   /// The underlying stream closed before the ssl stream gracefully shut down.\n-  stream_truncated\n-#elif (OPENSSL_VERSION_NUMBER < 0x10100000L) && !defined(OPENSSL_IS_BORINGSSL)\n-  stream_truncated = ERR_PACK(ERR_LIB_SSL, 0, SSL_R_SHORT_READ)\n-#else\n-  stream_truncated = 1\n-#endif\n+  stream_truncated,\n+\n+  /// The underlying SSL library returned a system error without providing\n+  /// further information.\n+  unspecified_system_error,\n+\n+  /// The underlying SSL library generated an unexpected result from a function\n+  /// call.\n+  unexpected_result\n+#else // defined(GENERATING_DOCUMENTATION)\n+# if (OPENSSL_VERSION_NUMBER < 0x10100000L) && !defined(OPENSSL_IS_BORINGSSL)\n+  stream_truncated = ERR_PACK(ERR_LIB_SSL, 0, SSL_R_SHORT_READ),\n+# else\n+  stream_truncated = 1,\n+# endif\n+  unspecified_system_error = 2,\n+  unexpected_result = 3\n+#endif // defined(GENERATING_DOCUMENTATION)\n };\n \n extern ASIO_DECL"
        },
        {
          "filename": "asio/include/asio/ssl/impl/error.ipp",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -76,6 +76,8 @@ public:\n     switch (value)\n     {\n     case stream_truncated: return \"stream truncated\";\n+    case unspecified_system_error: return \"unspecified system error\";\n+    case unexpected_result: return \"unexpected result\";\n     default: return \"asio.ssl.stream error\";\n     }\n   }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "62481a25be6cf78cbe714419a4462fd89bd84ab9",
            "date": "2024-11-05T12:17:49Z",
            "author_login": "chriskohlhoff"
          },
          {
            "sha": "13a6d87706df135cf60134a0d639d80a343aa028",
            "date": "2024-11-05T11:53:52Z",
            "author_login": "chriskohlhoff"
          },
          {
            "sha": "24e049c5761f823270a8cf02f5cdbeb891e0ef3a",
            "date": "2024-11-05T09:52:22Z",
            "author_login": "chriskohlhoff"
          },
          {
            "sha": "b6110cffea56fee4d0eb1b674d5a5a63f4523413",
            "date": "2024-11-05T09:26:36Z",
            "author_login": "chriskohlhoff"
          },
          {
            "sha": "f53fa4a2f6139284d1f3c6e4af03d25d90c9c6e6",
            "date": "2024-09-20T15:02:45Z",
            "author_login": "ceggers-arri"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-1188",
    "description": "Asio C++ Library before 1.13.0 lacks a fallback error code in the case of SSL_ERROR_SYSCALL with no associated error information from the SSL library being used.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-29T17:15:03.567",
    "last_modified": "2024-11-01T12:57:35.843",
    "fix_date": "2019-03-01T21:44:03Z"
  },
  "references": [
    {
      "url": "https://github.com/chriskohlhoff/asio/commit/93337cba7b013150f5aa6194393e1d94be2853ec",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/chriskohlhoff/asio/compare/asio-1-12-2...asio-1-13-0",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://think-async.com/Asio/",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:27.106785",
    "processing_status": "enhanced"
  }
}