{
  "cve_id": "CVE-2019-8400",
  "github_data": {
    "repository": "ory/hydra",
    "fix_commit": "9b5bbd48a72096930af08402c5e07fce7dd770f3",
    "related_commits": [
      "9b5bbd48a72096930af08402c5e07fce7dd770f3",
      "9b5bbd48a72096930af08402c5e07fce7dd770f3"
    ],
    "patch_url": "https://github.com/ory/hydra/commit/9b5bbd48a72096930af08402c5e07fce7dd770f3.patch",
    "fix_commit_details": {
      "sha": "9b5bbd48a72096930af08402c5e07fce7dd770f3",
      "commit_date": "2018-12-06T09:18:48Z",
      "author": {
        "login": "aeneasr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "oauth2: Use html templates in fallback endpoints (#1202)",
        "length": 96,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 140,
        "additions": 50,
        "deletions": 90
      },
      "files": [
        {
          "filename": "go.mod",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@ require (\n \tgithub.com/urfave/negroni v1.0.0\n \tgithub.com/ziutek/mymysql v1.5.4 // indirect\n \tgo.uber.org/atomic v1.3.2 // indirect\n-\tgolang.org/x/crypto v0.0.0-20181001203147-e3636079e1a4\n+\tgolang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9\n \tgolang.org/x/net v0.0.0-20181029044818-c44066c5c816 // indirect\n \tgolang.org/x/oauth2 v0.0.0-20181003184128-c57b0facaced\n \tgopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 // indirect"
        },
        {
          "filename": "go.sum",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -266,6 +266,8 @@ golang.org/x/crypto v0.0.0-20180830192347-182538f80094/go.mod h1:6SG95UA2DQfeDnf\n golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\n golang.org/x/crypto v0.0.0-20181001203147-e3636079e1a4 h1:Vk3wNqEZwyGyei9yq5ekj7frek2u7HUfffJ1/opblzc=\n golang.org/x/crypto v0.0.0-20181001203147-e3636079e1a4/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\n+golang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9 h1:mKdxBk7AujPs8kU4m80U72y/zjbZ3UcXC7dClwKbUI0=\n+golang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\n golang.org/x/net v0.0.0-20180530234432-1e491301e022/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180611182652-db08ff08e862 h1:JZi6BqOZ+iSgmLWe6llhGrNnEnK+YB/MRkStwnEfbqM=\n golang.org/x/net v0.0.0-20180611182652-db08ff08e862/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4="
        },
        {
          "filename": "main_test.go.bak",
          "status": "removed",
          "additions": 0,
          "deletions": 78,
          "patch": "@@ -1,78 +0,0 @@\n-package main_test\n-\n-import (\n-\t\"fmt\"\n-\t\"github.com/jmoiron/sqlx\"\n-\t\"github.com/ory/fosite\"\n-\t\"github.com/ory/hydra/client\"\n-\t\"github.com/ory/hydra/consent\"\n-\t\"github.com/ory/hydra/jwk\"\n-\t\"github.com/ory/hydra/oauth2\"\n-\t\"github.com/ory/x/resilience\"\n-\t\"github.com/sirupsen/logrus\"\n-\t\"github.com/stretchr/testify/require\"\n-\t\"os\"\n-\t\"testing\"\n-\t\"time\"\n-)\n-\n-func connect(t *testing.T, driver, dsn string) (db *sqlx.DB) {\n-\trequire.NoError(t, resilience.Retry(\n-\t\tlogrus.New(),\n-\t\ttime.Second * 5,\n-\t\ttime.Minute * 5,\n-\t\tfunc() (err error) {\n-\t\t\tdb, err = sqlx.Open(driver, dsn)\n-\t\t\tif err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\n-\t\t\treturn db.Ping()\n-\t\t},\n-\t))\n-\treturn db\n-}\n-\n-func TestCreateSchemasAtRoot(t *testing.T) {\n-\tif testing.Short() {\n-\t\tt.Skip(\"Skipping database tests in short mode.\")\n-\t\treturn\n-\t}\n-\n-\tdrivers := map[string]string{\n-\t\t\"TEST_DATABASE_POSTGRESQL\": \"postgres\",\n-\t\t\"TEST_DATABASE_MYSQL\":      \"mysql\",\n-\t}\n-\turls := map[string]string{\n-\t\t\"TEST_DATABASE_POSTGRESQL\": os.Getenv(\"TEST_DATABASE_POSTGRESQL\"),\n-\t\t\"TEST_DATABASE_MYSQL\":      os.Getenv(\"TEST_DATABASE_MYSQL\"),\n-\t}\n-\n-\tfor e, u := range urls {\n-\t\tif len(u) == 0 {\n-\t\t\tt.Fatalf(\"Environment variable %s is empty but it should point to a database. If you are running this test locally, make sure to run `make test` instead of `go test ./...`\", e)\n-\t\t}\n-\n-\t\tdriver := drivers[e]\n-\t\tt.Run(fmt.Sprintf(\"driver=%s\", driver), func(t *testing.T) {\n-\t\t\tt.Logf(\"Connecting to database %s: %s\", driver, u)\n-\n-\t\t\tdb := connect(t, driver, u)\n-\t\t\tcm := &client.SQLManager{DB: db, Hasher: &fosite.BCrypt{}}\n-\t\t\t_, err := cm.CreateSchemas()\n-\t\t\trequire.NoError(t, err)\n-\n-\t\t\tjm := &jwk.SQLManager{DB: db, Cipher: &jwk.AEAD{Key: []byte(\"11111111111111111111111111111111\")}}\n-\t\t\t_, err = jm.CreateSchemas()\n-\t\t\trequire.NoError(t, err)\n-\n-\t\t\tom := &oauth2.FositeSQLStore{Manager: cm, DB: db, L: logrus.New()}\n-\t\t\t_, err = om.CreateSchemas()\n-\t\t\trequire.NoError(t, err)\n-\n-\t\t\tcrm := consent.NewSQLManager(db, nil, om)\n-\t\t\t_, err = crm.CreateSchemas()\n-\t\t\trequire.NoError(t, err)\n-\t\t})\n-\t}\n-}"
        },
        {
          "filename": "oauth2/handler_fallback_endpoints.go",
          "status": "modified",
          "additions": 47,
          "deletions": 11,
          "patch": "@@ -21,7 +21,7 @@\n package oauth2\n \n import (\n-\t\"fmt\"\n+\t\"html/template\"\n \t\"net/http\"\n \n \t\"github.com/julienschmidt/httprouter\"\n@@ -31,7 +31,7 @@ func (h *Handler) DefaultConsentHandler(w http.ResponseWriter, r *http.Request,\n \th.L.Warnln(\"It looks like no consent/login URL was set. All OAuth2 flows except client credentials will fail.\")\n \th.L.Warnln(\"A client requested the default login & consent URL, environment variable OAUTH2_CONSENT_URL or OAUTH2_LOGIN_URL or both are probably not set.\")\n \n-\tw.Write([]byte(`\n+\tt, err := template.New(\"consent\").Parse(`\n <html>\n <head>\n \t<title>Misconfigured consent/login URL</title>\n@@ -47,13 +47,22 @@ func (h *Handler) DefaultConsentHandler(w http.ResponseWriter, r *http.Request,\n </p>\n </body>\n </html>\n-`))\n+`)\n+\tif err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n+\n+\tif err := t.Execute(w, nil); err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n }\n \n func (h *Handler) DefaultErrorHandler(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {\n \th.L.Warnln(\"A client requested the default error URL, environment variable OAUTH2_ERROR_URL is probably not set.\")\n \n-\tfmt.Fprintf(w, `\n+\tt, err := template.New(\"consent\").Parse(`\n <html>\n <head>\n \t<title>An OAuth 2.0 Error Occurred</title>\n@@ -63,10 +72,10 @@ func (h *Handler) DefaultErrorHandler(w http.ResponseWriter, r *http.Request, _\n \tThe OAuth2 request resulted in an error.\n </h1>\n <ul>\n-\t<li>Error: %s</li>\n-\t<li>Description: %s</li>\n-\t<li>Hint: %s</li>\n-\t<li>Debug: %s</li>\n+\t<li>Error: {{ .Name }}</li>\n+\t<li>Description: {{ .Description }}</li>\n+\t<li>Hint: {{ .Hint }}</li>\n+\t<li>Debug: {{ .Debug }}</li>\n </ul>\n <p>\n \tYou are seeing this default error page because the administrator has not set a dedicated error URL (environment variable <code>OAUTH2_ERROR_URL</code> is not set). \n@@ -75,13 +84,31 @@ func (h *Handler) DefaultErrorHandler(w http.ResponseWriter, r *http.Request, _\n </p>\n </body>\n </html>\n-`, r.URL.Query().Get(\"error\"), r.URL.Query().Get(\"error_description\"), r.URL.Query().Get(\"error_hint\"), r.URL.Query().Get(\"error_debug\"))\n+`)\n+\tif err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n+\n+\tif err := t.Execute(w, struct {\n+\t\tName        string\n+\t\tDescription string\n+\t\tHint        string\n+\t\tDebug       string\n+\t}{\n+\t\tName:        r.URL.Query().Get(\"error\"),\n+\t\tDescription: r.URL.Query().Get(\"error_description\"),\n+\t\tHint:        r.URL.Query().Get(\"error_hint\"),\n+\t\tDebug:       r.URL.Query().Get(\"error_debug\"),\n+\t}); err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n }\n \n func (h *Handler) DefaultLogoutHandler(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {\n \th.L.Warnln(\"A client requested the default logout URL, environment variable OAUTH2_LOGOUT_REDIRECT_URL is probably not set.\")\n-\n-\tfmt.Fprintf(w, `\n+\tt, err := template.New(\"consent\").Parse(`\n <html>\n <head>\n \t<title>You logged out successfully</title>\n@@ -98,4 +125,13 @@ func (h *Handler) DefaultLogoutHandler(w http.ResponseWriter, r *http.Request, _\n </body>\n </html>\n `)\n+\tif err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n+\n+\tif err := t.Execute(w, nil); err != nil {\n+\t\th.H.WriteError(w, r, err)\n+\t\treturn\n+\t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6fd65a704c39c0b324262d1484b9c98c03ba42a2",
            "date": "2025-01-11T13:04:31Z",
            "author_login": "ory-bot"
          },
          {
            "sha": "8ca6cbd1ab4fe659a0a9feff82766961de6c1d77",
            "date": "2025-01-11T12:32:35Z",
            "author_login": "aeneasr"
          },
          {
            "sha": "a9930c07f60e81aa795ec0809466f34a22e54f4f",
            "date": "2025-01-11T12:31:09Z",
            "author_login": "aeneasr"
          },
          {
            "sha": "de90d0b4118950c1270258a3923992c71c53bb18",
            "date": "2025-01-11T12:31:09Z",
            "author_login": "aeneasr"
          },
          {
            "sha": "471d9b7545d5dacfd50e372ca8346c37cff95055",
            "date": "2025-01-11T12:31:09Z",
            "author_login": "aeneasr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "ORY Hydra before v1.0.0-rc.3+oryOS.9 has Reflected XSS via the oauth2/fallbacks/error error_hint parameter.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2019-02-17T06:29:00.643",
    "last_modified": "2024-11-21T04:49:50.773",
    "fix_date": "2018-12-06T09:18:48Z"
  },
  "references": [
    {
      "url": "https://drive.google.com/file/d/1-25expUYVfK6vsiCmEabUCuelOP7aUDj/view?usp=drivesdk",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ory/hydra/blob/master/CHANGELOG.md#v100-rc3oryos9-2018-12-06",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ory/hydra/commit/9b5bbd48a72096930af08402c5e07fce7dd770f3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/456333",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.youtube.com/watch?v=RIyZLeKEC8E",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://drive.google.com/file/d/1-25expUYVfK6vsiCmEabUCuelOP7aUDj/view?usp=drivesdk",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ory/hydra/blob/master/CHANGELOG.md#v100-rc3oryos9-2018-12-06",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ory/hydra/commit/9b5bbd48a72096930af08402c5e07fce7dd770f3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://hackerone.com/reports/456333",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.youtube.com/watch?v=RIyZLeKEC8E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T22:59:44.480370",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "hydra",
    "owner": "ory",
    "created_at": "2015-05-22T12:42:08Z",
    "updated_at": "2025-01-14T01:05:40Z",
    "pushed_at": "2025-01-13T11:10:26Z",
    "size": 117434,
    "stars": 15767,
    "forks": 1505,
    "open_issues": 109,
    "watchers": 15767,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 1547244,
      "Ruby": 107106,
      "JavaScript": 91500,
      "Shell": 35351,
      "Makefile": 7491,
      "Dockerfile": 2517
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:24:51.892363"
  }
}