{
  "cve_id": "CVE-2020-11006",
  "github_data": {
    "repository": "shopizer-ecommerce/shopizer",
    "fix_commit": "929ca0839a80c6f4dad087e0259089908787ad2a",
    "related_commits": [
      "929ca0839a80c6f4dad087e0259089908787ad2a",
      "929ca0839a80c6f4dad087e0259089908787ad2a"
    ],
    "patch_url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a.patch",
    "fix_commit_details": {
      "sha": "929ca0839a80c6f4dad087e0259089908787ad2a",
      "commit_date": "2020-04-10T13:35:12Z",
      "author": {
        "login": "shopizer-ecommerce",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-w8rc-pgxq-x2cj",
        "length": 81,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 12,
        "additions": 5,
        "deletions": 7
      },
      "files": [
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/store/controller/shoppingCart/facade/ShoppingCartFacadeImpl.java",
          "status": "modified",
          "additions": 5,
          "deletions": 7,
          "patch": "@@ -108,7 +108,7 @@ public ShoppingCartData addItemsToShoppingCart( final ShoppingCartData shoppingC\n     {\n \n         ShoppingCart cartModel = null;\n-        \n+        if(item.getQuantity() < 1) item.setQuantity(1);\n         /**\n          * Sometimes a user logs in and a shopping cart is present in db (shoppingCartData\n          * but ui has no cookie with shopping cart code so the cart code will have\n@@ -216,7 +216,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\n         }\n         \t\n         for(ProductAvailability availability : availabilities) {\n-        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\n+        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\n         \t}\n         }\n@@ -288,7 +288,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\n         }\n         \t\n         for(ProductAvailability availability : availabilities) {\n-        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\n+        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\n         \t}\n         }\n@@ -554,8 +554,7 @@ public ShoppingCartData updateCartItem( final Long itemID, final String cartId,\n         return null;\n     }\n     \n-    @SuppressWarnings(\"unchecked\")\n-\t@Override\n+    @Override\n     public ShoppingCartData updateCartItems( final List<ShoppingCartItem> shoppingCartItems, final MerchantStore store, final Language language )\n             throws Exception\n         {\n@@ -720,7 +719,6 @@ public ReadableShoppingCart addToCart(PersistableShoppingCartItem item, Merchant\n \t}\n \t\n \n-\t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic void removeShoppingCartItem(String cartCode, Long productId,\n \t      MerchantStore merchant, Language language) throws Exception {\n@@ -914,7 +912,7 @@ public ReadableShoppingCart addToCart(Customer customer, PersistableShoppingCart\n \t\t\n \t\tValidate.notNull(customer,\"Customer cannot be null\");\n \t\tValidate.notNull(customer.getId(),\"Customer.id cannot be null or empty\");\n-\t\t\n+\t\tif(item.getQuantity() < 1) item.setQuantity(1);\n \t\t//Check if customer has an existing shopping cart\n \t\tShoppingCart cartModel = shoppingCartService.getByCustomer(customer);\n \t\t"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "42e5937f6b39d0227de5b4e65b610cdc53b2ade2",
            "date": "2024-08-10T14:38:29Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "e4d85b191b359742edae5d5d23c4d704b0731d9a",
            "date": "2024-08-10T14:38:14Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "8227a6b64996f232bcf2153da146f7b72a255a4e",
            "date": "2024-08-10T14:37:13Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "054a3bde1ea8894d13b0a8fb4e28f9db17262224",
            "date": "2023-04-26T02:47:50Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "1e495f7893a5b3b270de23358787c9635bf4ad41",
            "date": "2023-04-26T02:37:12Z",
            "author_login": "shopizer-ecommerce"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "In Shopizer before version 2.11.0, a script can be injected in various forms and saved in the database, then executed when information is fetched from backend. This has been patched in version 2.11.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-05-08T19:15:12.863",
    "last_modified": "2024-11-21T04:56:33.980",
    "fix_date": "2020-04-10T13:35:12Z"
  },
  "references": [
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/security/advisories/GHSA-8pc4-gvfw-634p",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/security/advisories/GHSA-8pc4-gvfw-634p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.982770",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "shopizer",
    "owner": "shopizer-ecommerce",
    "created_at": "2012-11-21T03:42:39Z",
    "updated_at": "2025-01-14T02:06:42Z",
    "pushed_at": "2024-12-19T17:37:24Z",
    "size": 566471,
    "stars": 3612,
    "forks": 3018,
    "open_issues": 555,
    "watchers": 3612,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Java": 3638347,
      "FreeMarker": 111592,
      "Dockerfile": 203
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:04:13.648803"
  }
}