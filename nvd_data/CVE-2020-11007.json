{
  "cve_id": "CVE-2020-11007",
  "github_data": {
    "repository": "shopizer-ecommerce/shopizer",
    "fix_commit": "929ca0839a80c6f4dad087e0259089908787ad2a",
    "related_commits": [
      "929ca0839a80c6f4dad087e0259089908787ad2a",
      "929ca0839a80c6f4dad087e0259089908787ad2a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "929ca0839a80c6f4dad087e0259089908787ad2a",
      "commit_date": "2020-04-10T13:35:12Z",
      "author": {
        "login": "shopizer-ecommerce",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-w8rc-pgxq-x2cj",
        "length": 81,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 12,
        "additions": 5,
        "deletions": 7
      },
      "files": [
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/store/controller/shoppingCart/facade/ShoppingCartFacadeImpl.java",
          "status": "modified",
          "additions": 5,
          "deletions": 7,
          "patch": "@@ -108,7 +108,7 @@ public ShoppingCartData addItemsToShoppingCart( final ShoppingCartData shoppingC\n     {\n \n         ShoppingCart cartModel = null;\n-        \n+        if(item.getQuantity() < 1) item.setQuantity(1);\n         /**\n          * Sometimes a user logs in and a shopping cart is present in db (shoppingCartData\n          * but ui has no cookie with shopping cart code so the cart code will have\n@@ -216,7 +216,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\n         }\n         \t\n         for(ProductAvailability availability : availabilities) {\n-        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\n+        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\n         \t}\n         }\n@@ -288,7 +288,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\n         }\n         \t\n         for(ProductAvailability availability : availabilities) {\n-        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\n+        \tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\n         \t}\n         }\n@@ -554,8 +554,7 @@ public ShoppingCartData updateCartItem( final Long itemID, final String cartId,\n         return null;\n     }\n     \n-    @SuppressWarnings(\"unchecked\")\n-\t@Override\n+    @Override\n     public ShoppingCartData updateCartItems( final List<ShoppingCartItem> shoppingCartItems, final MerchantStore store, final Language language )\n             throws Exception\n         {\n@@ -720,7 +719,6 @@ public ReadableShoppingCart addToCart(PersistableShoppingCartItem item, Merchant\n \t}\n \t\n \n-\t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic void removeShoppingCartItem(String cartCode, Long productId,\n \t      MerchantStore merchant, Language language) throws Exception {\n@@ -914,7 +912,7 @@ public ReadableShoppingCart addToCart(Customer customer, PersistableShoppingCart\n \t\t\n \t\tValidate.notNull(customer,\"Customer cannot be null\");\n \t\tValidate.notNull(customer.getId(),\"Customer.id cannot be null or empty\");\n-\t\t\n+\t\tif(item.getQuantity() < 1) item.setQuantity(1);\n \t\t//Check if customer has an existing shopping cart\n \t\tShoppingCart cartModel = shoppingCartService.getByCustomer(customer);\n \t\t"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7460ceb86cb7c5feac5f0b057632655ae1cc9e5b",
            "date": "2025-01-20T23:55:58Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "027495bb57bc45bad6d19d403e3f5cc708612a9f",
            "date": "2025-01-20T23:54:30Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "ae57a5b96b26ab232baaccad833a4b5e2b2e6a43",
            "date": "2025-01-20T23:53:59Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "d25f6cc243a98ceb0c69af324405613452da5ee0",
            "date": "2025-01-20T23:52:51Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "050638bd9ce255a64811926438fb145f6459b7b5",
            "date": "2025-01-09T17:53:35Z",
            "author_login": "MdShamshad786"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-20",
    "description": "In Shopizer before version 2.11.0, using API or Controller based versions negative quantity is not adequately validated hence creating incorrect shopping cart and order total. This vulnerability makes it possible to create a negative total in the shopping cart. This has been patched in version 2.11.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-04-16T19:15:26.400",
    "last_modified": "2024-11-21T04:56:34.113",
    "fix_date": "2020-04-10T13:35:12Z"
  },
  "references": [
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/security/advisories/GHSA-w8rc-pgxq-x2cj",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/security/advisories/GHSA-w8rc-pgxq-x2cj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.944968",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "shopizer",
    "owner": "shopizer-ecommerce",
    "created_at": "2012-11-21T03:42:39Z",
    "updated_at": "2025-01-25T15:58:42Z",
    "pushed_at": "2025-01-20T23:55:58Z",
    "size": 566492,
    "stars": 3630,
    "forks": 3029,
    "open_issues": 552,
    "watchers": 3630,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Java": 3650130,
      "FreeMarker": 111592,
      "Dockerfile": 203
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:49:27.087727"
  }
}