{
  "cve_id": "CVE-2020-11008",
  "github_data": {
    "repository": "git/git",
    "fix_commit": "c44088ecc4b0722636e0a305f9608d3047197282",
    "related_commits": [
      "c44088ecc4b0722636e0a305f9608d3047197282",
      "c44088ecc4b0722636e0a305f9608d3047197282"
    ],
    "patch_url": "https://github.com/git/git/commit/c44088ecc4b0722636e0a305f9608d3047197282.patch",
    "fix_commit_details": {
      "sha": "c44088ecc4b0722636e0a305f9608d3047197282",
      "commit_date": "2020-04-19T03:54:13Z",
      "author": {
        "login": "jrn",
        "type": "User",
        "stats": {
          "total_commits": 824,
          "average_weekly_commits": 0.7992240543161979,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 190
        }
      },
      "commit_message": {
        "title": "credential: treat URL without scheme as invalid",
        "length": 1808,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 93,
        "additions": 84,
        "deletions": 9
      },
      "files": [
        {
          "filename": "credential.c",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -357,8 +357,11 @@ int credential_from_url_gently(struct credential *c, const char *url,\n \t *   (3) proto://<user>:<pass>@<host>/...\n \t */\n \tproto_end = strstr(url, \"://\");\n-\tif (!proto_end)\n-\t\treturn 0;\n+\tif (!proto_end) {\n+\t\tif (!quiet)\n+\t\t\twarning(_(\"url has no scheme: %s\"), url);\n+\t\treturn -1;\n+\t}\n \tcp = proto_end + 3;\n \tat = strchr(cp, '@');\n \tcolon = strchr(cp, ':');"
        },
        {
          "filename": "fsck.c",
          "status": "modified",
          "additions": 45,
          "deletions": 2,
          "patch": "@@ -971,6 +971,34 @@ static int submodule_url_is_relative(const char *url)\n \treturn starts_with_dot_slash(url) || starts_with_dot_dot_slash(url);\n }\n \n+/*\n+ * Count directory components that a relative submodule URL should chop\n+ * from the remote_url it is to be resolved against.\n+ *\n+ * In other words, this counts \"../\" components at the start of a\n+ * submodule URL.\n+ *\n+ * Returns the number of directory components to chop and writes a\n+ * pointer to the next character of url after all leading \"./\" and\n+ * \"../\" components to out.\n+ */\n+static int count_leading_dotdots(const char *url, const char **out)\n+{\n+\tint result = 0;\n+\twhile (1) {\n+\t\tif (starts_with_dot_dot_slash(url)) {\n+\t\t\tresult++;\n+\t\t\turl += strlen(\"../\");\n+\t\t\tcontinue;\n+\t\t}\n+\t\tif (starts_with_dot_slash(url)) {\n+\t\t\turl += strlen(\"./\");\n+\t\t\tcontinue;\n+\t\t}\n+\t\t*out = url;\n+\t\treturn result;\n+\t}\n+}\n /*\n  * Check whether a transport is implemented by git-remote-curl.\n  *\n@@ -1018,15 +1046,30 @@ static int check_submodule_url(const char *url)\n \t\treturn -1;\n \n \tif (submodule_url_is_relative(url)) {\n+\t\tchar *decoded;\n+\t\tconst char *next;\n+\t\tint has_nl;\n+\n \t\t/*\n \t\t * This could be appended to an http URL and url-decoded;\n \t\t * check for malicious characters.\n \t\t */\n-\t\tchar *decoded = url_decode(url);\n-\t\tint has_nl = !!strchr(decoded, '\\n');\n+\t\tdecoded = url_decode(url);\n+\t\thas_nl = !!strchr(decoded, '\\n');\n+\n \t\tfree(decoded);\n \t\tif (has_nl)\n \t\t\treturn -1;\n+\n+\t\t/*\n+\t\t * URLs which escape their root via \"../\" can overwrite\n+\t\t * the host field and previous components, resolving to\n+\t\t * URLs like https::example.com/submodule.git that were\n+\t\t * susceptible to CVE-2020-11008.\n+\t\t */\n+\t\tif (count_leading_dotdots(url, &next) > 0 &&\n+\t\t    *next == ':')\n+\t\t\treturn -1;\n \t}\n \n \telse if (url_to_curl_url(url, &curl_url)) {"
        },
        {
          "filename": "t/t5550-http-fetch-dumb.sh",
          "status": "modified",
          "additions": 2,
          "deletions": 5,
          "patch": "@@ -310,11 +310,8 @@ test_expect_success 'git client does not send an empty Accept-Language' '\n '\n \n test_expect_success 'remote-http complains cleanly about malformed urls' '\n-\t# do not actually issue \"list\" or other commands, as we do not\n-\t# want to rely on what curl would actually do with such a broken\n-\t# URL. This is just about making sure we do not segfault during\n-\t# initialization.\n-\ttest_must_fail git remote-http http::/example.com/repo.git\n+\ttest_must_fail git remote-http http::/example.com/repo.git 2>stderr &&\n+\ttest_i18ngrep \"url has no scheme\" stderr\n '\n \n test_expect_success 'redirects can be forbidden/allowed' '"
        },
        {
          "filename": "t/t7416-submodule-dash-url.sh",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -60,6 +60,38 @@ test_expect_success 'trailing backslash is handled correctly' '\n \ttest_i18ngrep ! \"unknown option\" err\n '\n \n+test_expect_success 'fsck rejects missing URL scheme' '\n+\tgit checkout --orphan missing-scheme &&\n+\tcat >.gitmodules <<-\\EOF &&\n+\t[submodule \"foo\"]\n+\t\turl = http::one.example.com/foo.git\n+\tEOF\n+\tgit add .gitmodules &&\n+\ttest_tick &&\n+\tgit commit -m \"gitmodules with missing URL scheme\" &&\n+\ttest_when_finished \"rm -rf dst\" &&\n+\tgit init --bare dst &&\n+\tgit -C dst config transfer.fsckObjects true &&\n+\ttest_must_fail git push dst HEAD 2>err &&\n+\tgrep gitmodulesUrl err\n+'\n+\n+test_expect_success 'fsck rejects relative URL resolving to missing scheme' '\n+\tgit checkout --orphan relative-missing-scheme &&\n+\tcat >.gitmodules <<-\\EOF &&\n+\t[submodule \"foo\"]\n+\t\turl = \"..\\\\../.\\\\../:one.example.com/foo.git\"\n+\tEOF\n+\tgit add .gitmodules &&\n+\ttest_tick &&\n+\tgit commit -m \"gitmodules with relative URL that strips off scheme\" &&\n+\ttest_when_finished \"rm -rf dst\" &&\n+\tgit init --bare dst &&\n+\tgit -C dst config transfer.fsckObjects true &&\n+\ttest_must_fail git push dst HEAD 2>err &&\n+\tgrep gitmodulesUrl err\n+'\n+\n test_expect_success 'fsck permits embedded newline with unrecognized scheme' '\n \tgit checkout --orphan newscheme &&\n \tcat >.gitmodules <<-\\EOF &&"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "757161efcca150a9a96b312d9e780a071e601a03",
            "date": "2025-01-13T21:02:01Z",
            "author_login": "gitster"
          },
          {
            "sha": "46afc2ba91a3c7fa8f1591c0a6a1b7c4ad0d2a07",
            "date": "2025-01-13T21:00:48Z",
            "author_login": "gitster"
          },
          {
            "sha": "f93ff170b93a1782659637824b25923245ac9dd1",
            "date": "2025-01-13T20:57:19Z",
            "author_login": "gitster"
          },
          {
            "sha": "65faad6d841c29d4545e9cf3676d75f4e6e4872c",
            "date": "2025-01-13T20:55:26Z",
            "author_login": "gitster"
          },
          {
            "sha": "fbe8d3079d4a96aeb4e4529cc93cc0043b759a05",
            "date": "2025-01-10T17:20:20Z",
            "author_login": "gitster"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-20",
    "description": "Affected versions of Git have a vulnerability whereby Git can be tricked into sending private credentials to a host controlled by an attacker. This bug is similar to CVE-2020-5260(GHSA-qm7j-c969-7j4q). The fix for that bug still left the door open for an exploit where _some_ credential is leaked (but the attacker cannot control which one). Git uses external \"credential helper\" programs to store and retrieve passwords or other credentials from secure storage provided by the operating system. Specially-crafted URLs that are considered illegal as of the recently published Git versions can cause Git to send a \"blank\" pattern to helpers, missing hostname and protocol fields. Many helpers will interpret this as matching _any_ URL, and will return some unspecified stored password, leaking the password to an attacker's server. The vulnerability can be triggered by feeding a malicious URL to `git clone`. However, the affected URLs look rather suspicious; the likely vector would be through systems which automatically clone URLs not visible to the user, such as Git submodules, or package systems built around Git. The root of the problem is in Git itself, which should not be feeding blank input to helpers. However, the ability to exploit the vulnerability in practice depends on which helpers are in use. Credential helpers which are known to trigger the vulnerability: - Git's \"store\" helper - Git's \"cache\" helper - the \"osxkeychain\" helper that ships in Git's \"contrib\" directory Credential helpers which are known to be safe even with vulnerable versions of Git: - Git Credential Manager for Windows Any helper not in this list should be assumed to trigger the vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-04-21T19:15:13.457",
    "last_modified": "2024-11-21T04:56:34.263",
    "fix_date": "2020-04-19T03:54:13Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-05/msg00003.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/May/41",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/git/git/commit/c44088ecc4b0722636e0a305f9608d3047197282",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/git/git/security/advisories/GHSA-hjc9-x69f-jqj7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00015.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/74Q7WVJ6FKLIN62VS2JD2XCNWK5TNKOW/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MOCTR2SEHCPSCOVUQJAGFPGKFMI2VE6V/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PN3FUOXKX3AXTULYV53ACABER2W2FSOU/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202004-13",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://support.apple.com/kb/HT211183",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4334-1/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-05/msg00003.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/May/41",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/git/git/commit/c44088ecc4b0722636e0a305f9608d3047197282",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/git/git/security/advisories/GHSA-hjc9-x69f-jqj7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/04/msg00015.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/74Q7WVJ6FKLIN62VS2JD2XCNWK5TNKOW/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MOCTR2SEHCPSCOVUQJAGFPGKFMI2VE6V/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PN3FUOXKX3AXTULYV53ACABER2W2FSOU/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202004-13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://support.apple.com/kb/HT211183",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4334-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.951226",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "git",
    "owner": "git",
    "created_at": "2008-07-23T14:21:26Z",
    "updated_at": "2025-01-14T14:01:56Z",
    "pushed_at": "2025-01-13T19:45:30Z",
    "size": 271691,
    "stars": 53164,
    "forks": 25796,
    "open_issues": 201,
    "watchers": 53164,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 11381600,
      "Shell": 8590199,
      "Perl": 1166701,
      "Tcl": 852369,
      "Python": 183463,
      "Makefile": 168746,
      "Meson": 106388,
      "JavaScript": 49713,
      "CMake": 46584,
      "M4": 38265,
      "Roff": 26859,
      "C++": 26403,
      "SmPL": 15676,
      "Go": 15064,
      "CSS": 10664,
      "Batchfile": 9822,
      "Emacs Lisp": 660,
      "PowerShell": 478,
      "ReScript": 92
    },
    "commit_activity": {
      "total_commits_last_year": 3693,
      "avg_commits_per_week": 71.01923076923077,
      "days_active_last_year": 312
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:39:36.932072"
  }
}