{
  "cve_id": "CVE-2020-11021",
  "github_data": {
    "repository": "actions/http-client",
    "fix_commit": "f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
    "related_commits": [
      "f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
      "f6aae3dda4f4c9dc0b49737b36007330f78fd53a"
    ],
    "patch_url": "https://github.com/actions/http-client/commit/f6aae3dda4f4c9dc0b49737b36007330f78fd53a.patch",
    "fix_commit_details": {
      "sha": "f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
      "commit_date": "2020-04-23T21:09:17Z",
      "author": {
        "login": "bryanmacfarlane",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #27 from actions/redirect-auth-issue",
        "length": 116,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 58,
        "additions": 57,
        "deletions": 1
      },
      "files": [
        {
          "filename": "__tests__/basics.test.ts",
          "status": "modified",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -179,6 +179,52 @@ describe('basics', () => {\n     done()\n   })\n \n+  it('does not pass auth with diff hostname redirects', async done => {\n+    let headers = {\n+      accept: 'application/json',\n+      authorization: 'shhh'\n+    }\n+    let res: httpm.HttpClientResponse = await _http.get(\n+      'https://httpbin.org/redirect-to?url=' +\n+        encodeURIComponent('https://www.httpbin.org/get'),\n+      headers\n+    )\n+\n+    expect(res.message.statusCode).toBe(200)\n+    let body: string = await res.readBody()\n+    let obj: any = JSON.parse(body)\n+    // httpbin \"fixes\" the casing\n+    expect(obj.headers['Accept']).toBe('application/json')\n+    expect(obj.headers['Authorization']).toBeUndefined()\n+    expect(obj.headers['authorization']).toBeUndefined()\n+    expect(obj.url).toBe('https://www.httpbin.org/get')\n+\n+    done()\n+  })\n+\n+  it('does not pass Auth with diff hostname redirects', async done => {\n+    let headers = {\n+      Accept: 'application/json',\n+      Authorization: 'shhh'\n+    }\n+    let res: httpm.HttpClientResponse = await _http.get(\n+      'https://httpbin.org/redirect-to?url=' +\n+        encodeURIComponent('https://www.httpbin.org/get'),\n+      headers\n+    )\n+\n+    expect(res.message.statusCode).toBe(200)\n+    let body: string = await res.readBody()\n+    let obj: any = JSON.parse(body)\n+    // httpbin \"fixes\" the casing\n+    expect(obj.headers['Accept']).toBe('application/json')\n+    expect(obj.headers['Authorization']).toBeUndefined()\n+    expect(obj.headers['authorization']).toBeUndefined()\n+    expect(obj.url).toBe('https://www.httpbin.org/get')\n+\n+    done()\n+  })\n+\n   it('does basic head request', async done => {\n     let res: httpm.HttpClientResponse = await _http.head(\n       'http://httpbin.org/get'"
        },
        {
          "filename": "index.ts",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -386,6 +386,16 @@ export class HttpClient {\n         // which will leak the open socket.\n         await response.readBody()\n \n+        // strip authorization header if redirected to a different hostname\n+        if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n+          for (let header in headers) {\n+            // header names are case insensitive\n+            if (header.toLowerCase() === 'authorization') {\n+              delete headers[header]\n+            }\n+          }\n+        }\n+\n         // let's make the request with the new redirectUrl\n         info = this._prepareRequest(verb, parsedRedirectUrl, headers)\n         response = await this.requestRaw(info, data)"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"@actions/http-client\",\n-  \"version\": \"1.0.7\",\n+  \"version\": \"1.0.8\",\n   \"description\": \"Actions Http Client\",\n   \"main\": \"index.js\",\n   \"scripts\": {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "602cbafdf5b9de6e5a68995f6d8ccf4f318c5fde",
            "date": "2022-05-03T15:12:21Z",
            "author_login": "brcrista"
          },
          {
            "sha": "1ec680f841750d5bcfeb7b1ef9b575af70d288b0",
            "date": "2022-04-11T18:42:28Z",
            "author_login": "joshmgross"
          },
          {
            "sha": "e2b423c28084fd9691f02ba7abd691159f64a909",
            "date": "2022-04-11T18:21:06Z",
            "author_login": "dhadka"
          },
          {
            "sha": "5ea1c5292929dba26848ea46f3b4c2e1ea1e30a2",
            "date": "2021-04-06T17:26:21Z",
            "author_login": "konradpabjan"
          },
          {
            "sha": "18031ad1398f444a83f2c083cf56a2ba81be9ea8",
            "date": "2021-03-25T12:07:53Z",
            "author_login": "bryanmacfarlane"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Actions Http-Client (NPM @actions/http-client) before version 1.0.8 can disclose Authorization headers to incorrect domain in certain redirect scenarios. The conditions in which this happens are if consumers of the http-client: 1. make an http request with an authorization header 2. that request leads to a redirect (302) and 3. the redirect url redirects to another domain or hostname Then the authorization header will get passed to the other domain. The problem is fixed in version 1.0.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-04-29T18:15:13.423",
    "last_modified": "2024-11-21T04:56:35.970",
    "fix_date": "2020-04-23T21:09:17Z"
  },
  "references": [
    {
      "url": "https://github.com/actions/http-client/commit/f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/actions/http-client/pull/27",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/actions/http-client/security/advisories/GHSA-9w6v-m7wp-jwg4",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/actions/http-client/commit/f6aae3dda4f4c9dc0b49737b36007330f78fd53a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/actions/http-client/pull/27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/actions/http-client/security/advisories/GHSA-9w6v-m7wp-jwg4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.962909",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "http-client",
    "owner": "actions",
    "created_at": "2020-01-09T23:08:41Z",
    "updated_at": "2024-12-16T23:08:09Z",
    "pushed_at": "2022-05-03T15:12:21Z",
    "size": 176,
    "stars": 72,
    "forks": 33,
    "open_issues": 25,
    "watchers": 72,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 56390,
      "JavaScript": 209
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T19:39:56.609886"
  }
}