{
  "cve_id": "CVE-2020-11022",
  "github_data": {
    "repository": "jquery/jquery",
    "fix_commit": "1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
    "related_commits": [
      "1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
      "1d61fd9407e6fbe82fe55cb0b938307aa0791f77"
    ],
    "patch_url": "https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77.patch",
    "fix_commit_details": {
      "sha": "1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
      "commit_date": "2020-03-16T20:49:29Z",
      "author": {
        "login": "mgol",
        "type": "User",
        "stats": {
          "total_commits": 501,
          "average_weekly_commits": 0.5096642929806714,
          "total_additions": 69162,
          "total_deletions": 86497,
          "weeks_active": 235
        }
      },
      "commit_message": {
        "title": "Manipulation: Make jQuery.htmlPrefilter an identity function",
        "length": 139,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 503,
        "additions": 246,
        "deletions": 257
      },
      "files": [
        {
          "filename": "src/manipulation.js",
          "status": "modified",
          "additions": 1,
          "deletions": 8,
          "patch": "@@ -33,13 +33,6 @@ define( [\n \n var\n \n-\t/* eslint-disable max-len */\n-\n-\t// See https://github.com/eslint/eslint/issues/3229\n-\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n-\n-\t/* eslint-enable */\n-\n \t// Support: IE <=10 - 11, Edge 12 - 13 only\n \t// In IE/Edge using regex groups here causes severe slowdowns.\n \t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n@@ -236,7 +229,7 @@ function remove( elem, selector, keepData ) {\n \n jQuery.extend( {\n \thtmlPrefilter: function( html ) {\n-\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n+\t\treturn html;\n \t},\n \n \tclone: function( elem, dataAndEvents, deepDataAndEvents ) {"
        },
        {
          "filename": "test/data/testinit.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -251,7 +251,7 @@ this.testIframe = function( title, fileName, func, wrapper ) {\n \t}\n \twrapper.call( QUnit, title, function( assert ) {\n \t\tvar done = assert.async(),\n-\t\t\t$iframe = supportjQuery( \"<iframe/>\" )\n+\t\t\t$iframe = supportjQuery( \"<iframe></iframe>\" )\n \t\t\t\t.css( { position: \"absolute\", top: \"0\", left: \"-600px\", width: \"500px\" } )\n \t\t\t\t.attr( { id: \"qunit-fixture-iframe\", src: url( fileName ) } );\n "
        },
        {
          "filename": "test/localfile.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -49,7 +49,7 @@ <h2>\n \t<script>\n \t\tvar logUL = jQuery( \"#log\" );\n \t\tfunction doLog( message, args ) {\n-\t\t\tjQuery( \"<li />\").appendTo( logUL ).text( message + ': \"' + Array.prototype.join.call( args, '\" - \"' ) + '\"' );\n+\t\t\tjQuery( \"<li></li>\" ).appendTo( logUL ).text( message + ': \"' + Array.prototype.join.call( args, '\" - \"' ) + '\"' );\n \t\t}\n \t\tjQuery.ajax( \"./data/badjson.js\" , {\n \t\t\tcontext: jQuery( \"#success\" ),"
        },
        {
          "filename": "test/unit/ajax.js",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -2456,7 +2456,7 @@ if ( typeof window.ArrayBuffer === \"undefined\" || typeof new XMLHttpRequest().re\n \n \t\taddGlobalEvents( \"ajaxStart ajaxStop ajaxSend ajaxComplete ajaxError\", assert )();\n \t\tjQuery( document ).on( \"ajaxStop\", done );\n-\t\tjQuery( \"<div/>\" ).load( baseURL + \"404.txt\", function() {\n+\t\tjQuery( \"<div></div>\" ).load( baseURL + \"404.txt\", function() {\n \t\t\tassert.ok( true, \"complete\" );\n \t\t} );\n \t} );\n@@ -2563,7 +2563,7 @@ if ( typeof window.ArrayBuffer === \"undefined\" || typeof new XMLHttpRequest().re\n \t\t\t\treturn \"Hello World\";\n \t\t\t}\n \t\t} );\n-\t\tjQuery( \"<div/>\" ).load( url( \"name.html\" ), function( responseText ) {\n+\t\tjQuery( \"<div></div>\" ).load( url( \"name.html\" ), function( responseText ) {\n \t\t\tassert.strictEqual( jQuery( this ).html(), \"Hello World\", \"Test div was filled with filtered data\" );\n \t\t\tassert.strictEqual( responseText, \"Hello World\", \"Test callback receives filtered data\" );\n \t\t\tdone();\n@@ -2573,7 +2573,7 @@ if ( typeof window.ArrayBuffer === \"undefined\" || typeof new XMLHttpRequest().re\n \tQUnit.test( \"jQuery.fn.load( String, Object, Function )\", function( assert ) {\n \t\tassert.expect( 2 );\n \t\tvar done = assert.async();\n-\t\tjQuery( \"<div />\" ).load( url( \"mock.php?action=echoHtml\" ), {\n+\t\tjQuery( \"<div></div>\" ).load( url( \"mock.php?action=echoHtml\" ), {\n \t\t\t\"bar\": \"ok\"\n \t\t}, function() {\n \t\t\tvar $node = jQuery( this );\n@@ -2587,7 +2587,7 @@ if ( typeof window.ArrayBuffer === \"undefined\" || typeof new XMLHttpRequest().re\n \t\tassert.expect( 2 );\n \t\tvar done = assert.async();\n \n-\t\tjQuery( \"<div />\" ).load( url( \"mock.php?action=echoHtml\" ), \"foo=3&bar=ok\", function() {\n+\t\tjQuery( \"<div></div>\" ).load( url( \"mock.php?action=echoHtml\" ), \"foo=3&bar=ok\", function() {\n \t\t\tvar $node = jQuery( this );\n \t\t\tassert.strictEqual( $node.find( \"#method\" ).text(), \"GET\", \"Check method\" );\n \t\t\tassert.ok( $node.find( \"#query\" ).text().match( /foo=3&bar=ok/ ), \"Check if a string of data is passed correctly\" );"
        },
        {
          "filename": "test/unit/attributes.js",
          "status": "modified",
          "additions": 23,
          "deletions": 23,
          "patch": "@@ -93,12 +93,12 @@ QUnit.test( \"attr(String)\", function( assert ) {\n \tassert.equal( jQuery( \"#area1\" ).attr( \"maxLength\" ), \"30\", \"Check for maxLength attribute\" );\n \n \t// using innerHTML in IE causes href attribute to be serialized to the full path\n-\tjQuery( \"<a/>\" ).attr( {\n+\tjQuery( \"<a></a>\" ).attr( {\n \t\t\"id\": \"tAnchor5\",\n \t\t\"href\": \"#5\"\n \t} ).appendTo( \"#qunit-fixture\" );\n \tassert.equal( jQuery( \"#tAnchor5\" ).attr( \"href\" ), \"#5\", \"Check for non-absolute href (an anchor)\" );\n-\tjQuery( \"<a id='tAnchor6' href='#5' />\" ).appendTo( \"#qunit-fixture\" );\n+\tjQuery( \"<a id='tAnchor6' href='#5'></a>\" ).appendTo( \"#qunit-fixture\" );\n \tassert.equal( jQuery( \"#tAnchor5\" ).prop( \"href\" ), jQuery( \"#tAnchor6\" ).prop( \"href\" ), \"Check for absolute href prop on an anchor\" );\n \n \tjQuery( \"<script type='jquery/test' src='#5' id='scriptSrc'></script>\" ).appendTo( \"#qunit-fixture\" );\n@@ -136,7 +136,7 @@ QUnit.test( \"attr(String)\", function( assert ) {\n \tassert.equal( $img.attr( \"height\" ), \"53\", \"Retrieve height attribute on an element with display:none.\" );\n \n \t// Check for style support\n-\tstyleElem = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ).css( {\n+\tstyleElem = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ).css( {\n \t\tbackground: \"url(UPPERlower.gif)\"\n \t} );\n \tassert.ok( !!~styleElem.attr( \"style\" ).indexOf( \"UPPERlower.gif\" ), \"Check style attribute getter\" );\n@@ -158,11 +158,11 @@ QUnit.test( \"attr(String)\", function( assert ) {\n \t$a = jQuery( \"<a href='#' onclick='something()'>Click</a>\" ).appendTo( \"#qunit-fixture\" );\n \tassert.equal( $a.attr( \"onclick\" ), \"something()\", \"Retrieve ^on attribute without anonymous function wrapper.\" );\n \n-\tassert.ok( jQuery( \"<div/>\" ).attr( \"doesntexist\" ) === undefined, \"Make sure undefined is returned when no attribute is found.\" );\n-\tassert.ok( jQuery( \"<div/>\" ).attr( \"title\" ) === undefined, \"Make sure undefined is returned when no attribute is found.\" );\n-\tassert.equal( jQuery( \"<div/>\" ).attr( \"title\", \"something\" ).attr( \"title\" ), \"something\", \"Set the title attribute.\" );\n+\tassert.ok( jQuery( \"<div></div>\" ).attr( \"doesntexist\" ) === undefined, \"Make sure undefined is returned when no attribute is found.\" );\n+\tassert.ok( jQuery( \"<div></div>\" ).attr( \"title\" ) === undefined, \"Make sure undefined is returned when no attribute is found.\" );\n+\tassert.equal( jQuery( \"<div></div>\" ).attr( \"title\", \"something\" ).attr( \"title\" ), \"something\", \"Set the title attribute.\" );\n \tassert.ok( jQuery().attr( \"doesntexist\" ) === undefined, \"Make sure undefined is returned when no element is there.\" );\n-\tassert.equal( jQuery( \"<div/>\" ).attr( \"value\" ), undefined, \"An unset value on a div returns undefined.\" );\n+\tassert.equal( jQuery( \"<div></div>\" ).attr( \"value\" ), undefined, \"An unset value on a div returns undefined.\" );\n \tassert.strictEqual( jQuery( \"<select><option value='property'></option></select>\" ).attr( \"value\" ), undefined, \"An unset value on a select returns undefined.\" );\n \n \t$form = jQuery( \"#form\" ).attr( \"enctype\", \"multipart/form-data\" );\n@@ -180,7 +180,7 @@ QUnit.test( \"attr(String) on cloned elements, #9646\", function( assert ) {\n \n \tassert.strictEqual( input.clone( true ).attr( \"name\", \"test\" )[ 0 ].name, \"test\", \"Name attribute should be changed on cloned element\" );\n \n-\tdiv = jQuery( \"<div id='tester' />\" );\n+\tdiv = jQuery( \"<div id='tester'></div>\" );\n \tdiv.attr( \"id\" );\n \n \tassert.strictEqual( div.clone( true ).attr( \"id\", \"test\" )[ 0 ].id, \"test\", \"Id attribute should be changed on cloned element\" );\n@@ -299,7 +299,7 @@ QUnit.test( \"attr(String, Object)\", function( assert ) {\n \t$input = jQuery( \"<input type='checkbox'/>\" ).attr( \"checked\", true );\n \tassert.equal( $input.prop( \"checked\" ), true, \"Setting checked updates property (verified by .prop)\" );\n \tassert.equal( $input[ 0 ].checked, true, \"Setting checked updates property (verified by native property)\" );\n-\t$input = jQuery( \"<option/>\" ).attr( \"selected\", true );\n+\t$input = jQuery( \"<option></option>\" ).attr( \"selected\", true );\n \tassert.equal( $input.prop( \"selected\" ), true, \"Setting selected updates property (verified by .prop)\" );\n \tassert.equal( $input[ 0 ].selected, true, \"Setting selected updates property (verified by native property)\" );\n \n@@ -592,7 +592,7 @@ QUnit.test( \"removeAttr(String)\", function( assert ) {\n \tassert.expect( 12 );\n \tvar $first;\n \n-\tassert.equal( jQuery( \"<div class='hello' />\" ).removeAttr( \"class\" ).attr( \"class\" ), undefined, \"remove class\" );\n+\tassert.equal( jQuery( \"<div class='hello'></div>\" ).removeAttr( \"class\" ).attr( \"class\" ), undefined, \"remove class\" );\n \tassert.equal( jQuery( \"#form\" ).removeAttr( \"id\" ).attr( \"id\" ), undefined, \"Remove id\" );\n \tassert.equal( jQuery( \"#foo\" ).attr( \"style\", \"position:absolute;\" ).removeAttr( \"style\" ).attr( \"style\" ), undefined, \"Check removing style attribute\" );\n \tassert.equal( jQuery( \"#form\" ).attr( \"style\", \"position:absolute;\" ).removeAttr( \"style\" ).attr( \"style\" ), undefined, \"Check removing style attribute on a form\" );\n@@ -692,7 +692,7 @@ QUnit.test( \"prop(String, Object)\", function( assert ) {\n \tassert.equal( jQuery( \"#select2\" ).prop( \"selectedIndex\" ), 3, \"Check for selectedIndex attribute\" );\n \tassert.equal( jQuery( \"#foo\" ).prop( \"nodeName\" ).toUpperCase(), \"DIV\", \"Check for nodeName attribute\" );\n \tassert.equal( jQuery( \"#foo\" ).prop( \"tagName\" ).toUpperCase(), \"DIV\", \"Check for tagName attribute\" );\n-\tassert.equal( jQuery( \"<option/>\" ).prop( \"selected\" ), false, \"Check selected attribute on disconnected element.\" );\n+\tassert.equal( jQuery( \"<option></option>\" ).prop( \"selected\" ), false, \"Check selected attribute on disconnected element.\" );\n \n \tassert.equal( jQuery( \"#listWithTabIndex\" ).prop( \"tabindex\" ), 5, \"Check retrieving tabindex\" );\n \tjQuery( \"#text1\" ).prop( \"readonly\", true );\n@@ -837,16 +837,16 @@ QUnit.test( \"option.prop('selected', true) affects select.selectedIndex (gh-2732\n \n \tfunction addOptions( $elem ) {\n \t\treturn $elem.append(\n-\t\t\tjQuery( \"<option/>\" ).val( \"a\" ).text( \"One\" ),\n-\t\t\tjQuery( \"<option/>\" ).val( \"b\" ).text( \"Two\" ),\n-\t\t\tjQuery( \"<option/>\" ).val( \"c\" ).text( \"Three\" )\n+\t\t\tjQuery( \"<option></option>\" ).val( \"a\" ).text( \"One\" ),\n+\t\t\tjQuery( \"<option></option>\" ).val( \"b\" ).text( \"Two\" ),\n+\t\t\tjQuery( \"<option></option>\" ).val( \"c\" ).text( \"Three\" )\n \t\t)\n \t\t.find( \"[value=a]\" ).prop( \"selected\", true ).end()\n \t\t.find( \"[value=c]\" ).prop( \"selected\", true ).end();\n \t}\n \n \tvar $optgroup,\n-\t\t$select = jQuery( \"<select/>\" );\n+\t\t$select = jQuery( \"<select></select>\" );\n \n \t// Check select with options\n \taddOptions( $select ).appendTo( \"#qunit-fixture\" );\n@@ -856,7 +856,7 @@ QUnit.test( \"option.prop('selected', true) affects select.selectedIndex (gh-2732\n \t$select.empty();\n \n \t// Check select with optgroup\n-\t$optgroup = jQuery( \"<optgroup/>\" );\n+\t$optgroup = jQuery( \"<optgroup></optgroup>\" );\n \taddOptions( $optgroup ).appendTo( $select );\n \t$select.find( \"[value=b]\" ).prop( \"selected\", true );\n \n@@ -970,7 +970,7 @@ QUnit.test( \"val()\", function( assert ) {\n \tassert.equal( $button.val(), \"foobar\", \"Value retrieval on a button does not return innerHTML\" );\n \tassert.equal( $button.val( \"baz\" ).html(), \"text\", \"Setting the value does not change innerHTML\" );\n \n-\tassert.equal( jQuery( \"<option/>\" ).val( \"test\" ).attr( \"value\" ), \"test\", \"Setting value sets the value attribute\" );\n+\tassert.equal( jQuery( \"<option></option>\" ).val( \"test\" ).attr( \"value\" ), \"test\", \"Setting value sets the value attribute\" );\n } );\n \n QUnit.test( \"val() with non-matching values on dropdown list\", function( assert ) {\n@@ -1029,7 +1029,7 @@ var testVal = function( valueObj, assert ) {\n \tassert.equal( document.getElementById( \"text1\" ).value, \"\", \"Check for modified (via val(null)) value of input element\" );\n \n \tvar j,\n-\t\t$select = jQuery( \"<select multiple><option value='1'/><option value='2'/></select>\" ),\n+\t\t$select = jQuery( \"<select multiple><option value='1'></option><option value='2'></option></select>\" ),\n \t\t$select1 = jQuery( \"#select1\" );\n \n \t$select1.val( valueObj( \"3\" ) );\n@@ -1145,7 +1145,7 @@ QUnit.test( \"val(select) after form.reset() (Bug #2551)\", function( assert ) {\n QUnit.test( \"select.val(space characters) (gh-2978)\", function( assert ) {\n \tassert.expect( 37 );\n \n-\tvar $select = jQuery( \"<select/>\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar $select = jQuery( \"<select></select>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tspaces = {\n \t\t\t\"\\\\t\": {\n \t\t\t\thtml: \"&#09;\",\n@@ -1230,7 +1230,7 @@ var testAddClass = function( valueObj, assert ) {\n \tj.addClass( valueObj( \"asdf\" ) );\n \tassert.ok( j.hasClass( \"asdf\" ), \"Check node,textnode,comment for addClass\" );\n \n-\tdiv = jQuery( \"<div/>\" );\n+\tdiv = jQuery( \"<div></div>\" );\n \n \tdiv.addClass( valueObj( \"test\" ) );\n \tassert.equal( div.attr( \"class\" ), \"test\", \"Make sure there's no extra whitespace.\" );\n@@ -1669,17 +1669,17 @@ QUnit.test( \"coords returns correct values in IE6/IE7, see #10828\", function( as\n \tassert.expect( 1 );\n \n \tvar area,\n-\t\tmap = jQuery( \"<map />\" );\n+\t\tmap = jQuery( \"<map></map>\" );\n \n-\tarea = map.html( \"<area shape='rect' coords='0,0,0,0' href='#' alt='a' />\" ).find( \"area\" );\n+\tarea = map.html( \"<area shape='rect' coords='0,0,0,0' href='#' alt='a'></area>\" ).find( \"area\" );\n \tassert.equal( area.attr( \"coords\" ), \"0,0,0,0\", \"did not retrieve coords correctly\" );\n } );\n \n QUnit.test( \"should not throw at $(option).val() (#14686)\", function( assert ) {\n \tassert.expect( 1 );\n \n \ttry {\n-\t\tjQuery( \"<option/>\" ).val();\n+\t\tjQuery( \"<option></option>\" ).val();\n \t\tassert.ok( true );\n \t} catch ( _ ) {\n \t\tassert.ok( false );"
        },
        {
          "filename": "test/unit/basic.js",
          "status": "modified",
          "additions": 12,
          "deletions": 12,
          "patch": "@@ -36,7 +36,7 @@ QUnit.test( \"ajax\", function( assert ) {\n QUnit.test( \"attributes\", function( assert ) {\n \tassert.expect( 6 );\n \n-\tvar a = jQuery( \"<a/>\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar a = jQuery( \"<a></a>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tinput = jQuery( \"<input/>\" ).appendTo( \"#qunit-fixture\" );\n \n \tassert.strictEqual( a.attr( \"foo\", \"bar\" ).attr( \"foo\" ), \"bar\", \".attr getter/setter\" );\n@@ -56,7 +56,7 @@ if ( jQuery.css ) {\n QUnit.test( \"css\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar div = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar div = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tassert.strictEqual( div.css( \"width\", \"50px\" ).css( \"width\" ), \"50px\", \".css getter/setter\" );\n } );\n@@ -66,7 +66,7 @@ if ( jQuery.fn.show && jQuery.fn.hide ) {\n QUnit.test( \"show/hide\", function( assert ) {\n \tassert.expect( 2 );\n \n-\tvar div = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar div = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tdiv.hide();\n \tassert.strictEqual( div.css( \"display\" ), \"none\", \"div hidden\" );\n@@ -126,7 +126,7 @@ QUnit.test( \"core\", function( assert ) {\n QUnit.test( \"data\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar elem = jQuery( \"<div data-c='d'/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar elem = jQuery( \"<div data-c='d'></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tassert.ok( !jQuery.hasData( elem[ 0 ] ), \"jQuery.hasData - false\" );\n \tassert.strictEqual( elem.data( \"a\", \"b\" ).data( \"a\" ), \"b\", \".data getter/setter\" );\n@@ -138,7 +138,7 @@ QUnit.test( \"dimensions\", function( assert ) {\n \tassert.expect( 3 );\n \n \tvar elem = jQuery(\n-\t\t\"<div style='margin: 10px; padding: 7px; border: 2px solid black;' /> \"\n+\t\t\"<div style='margin: 10px; padding: 7px; border: 2px solid black;'></div> \"\n \t).appendTo( \"#qunit-fixture\" );\n \n \tassert.strictEqual( elem.width( 50 ).width(), 50, \".width getter/setter\" );\n@@ -149,7 +149,7 @@ QUnit.test( \"dimensions\", function( assert ) {\n QUnit.test( \"event\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar elem = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar elem = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \telem\n \t\t.on( \"click\", function() {\n@@ -168,12 +168,12 @@ QUnit.test( \"manipulation\", function( assert ) {\n \n \tvar child,\n \t\telem1 = jQuery( \"<div><span></span></div>\" ).appendTo( \"#qunit-fixture\" ),\n-\t\telem2 = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\t\telem2 = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tassert.strictEqual( elem1.text( \"foo\" ).text(), \"foo\", \".html getter/setter\" );\n \n \tassert.strictEqual(\n-\t\telem1.html( \"<span/>\" ).html(),\n+\t\telem1.html( \"<span></span>\" ).html(),\n \t\t\"<span></span>\",\n \t\t\".html getter/setter\"\n \t);\n@@ -182,8 +182,8 @@ QUnit.test( \"manipulation\", function( assert ) {\n \tassert.strictEqual( elem1.prepend( elem2 )[ 0 ].childNodes[ 0 ], elem2[ 0 ], \".prepend\" );\n \n \tchild = elem1.find( \"span\" );\n-\tchild.after( \"<a/>\" );\n-\tchild.before( \"<b/>\" );\n+\tchild.after( \"<a></a>\" );\n+\tchild.before( \"<b></b>\" );\n \n \tassert.strictEqual(\n \t\telem1.html(),\n@@ -197,8 +197,8 @@ QUnit.test( \"manipulation\", function( assert ) {\n QUnit[ /jsdom\\//.test( navigator.userAgent ) ? \"skip\" : \"test\" ]( \"offset\", function( assert ) {\n \tassert.expect( 3 );\n \n-\tvar parent = jQuery( \"<div style='position:fixed;top:20px;'/>\" ).appendTo( \"#qunit-fixture\" ),\n-\t\telem = jQuery( \"<div style='position:absolute;top:5px;'/>\" ).appendTo( parent );\n+\tvar parent = jQuery( \"<div style='position:fixed;top:20px;'></div>\" ).appendTo( \"#qunit-fixture\" ),\n+\t\telem = jQuery( \"<div style='position:absolute;top:5px;'></div>\" ).appendTo( parent );\n \n \tassert.strictEqual( elem.offset().top, 25, \".offset getter\" );\n \tassert.strictEqual( elem.position().top, 5, \".position getter\" );"
        },
        {
          "filename": "test/unit/core.js",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -23,9 +23,9 @@ QUnit.test( \"jQuery()\", function( assert ) {\n \n \tvar elem, i,\n \t\tobj = jQuery( \"div\" ),\n-\t\tcode = jQuery( \"<code/>\" ),\n+\t\tcode = jQuery( \"<code></code>\" ),\n \t\timg = jQuery( \"<img/>\" ),\n-\t\tdiv = jQuery( \"<div/><hr/><code/><b/>\" ),\n+\t\tdiv = jQuery( \"<div></div><hr/><code></code><b/>\" ),\n \t\texec = false,\n \t\texpected = 23,\n \t\tattrObj = {\n@@ -113,7 +113,7 @@ QUnit.test( \"jQuery()\", function( assert ) {\n \telem = jQuery( \"\\n\\n<em>world</em>\" )[ 0 ];\n \tassert.equal( elem.nodeName.toLowerCase(), \"em\", \"leading newlines\" );\n \n-\telem = jQuery( \"<div/>\", attrObj );\n+\telem = jQuery( \"<div></div>\", attrObj );\n \n \tif ( jQuery.fn.width ) {\n \t\tassert.equal( elem[ 0 ].style.width, \"10px\", \"jQuery() quick setter width\" );\n@@ -458,7 +458,7 @@ QUnit.test( \"jQuery('html')\", function( assert ) {\n \n \tassert.ok( jQuery( \"<link rel='stylesheet'/>\" )[ 0 ], \"Creating a link\" );\n \n-\tassert.ok( !jQuery( \"<script/>\" )[ 0 ].parentNode, \"Create a script\" );\n+\tassert.ok( !jQuery( \"<script></script>\" )[ 0 ].parentNode, \"Create a script\" );\n \n \tassert.ok( jQuery( \"<input/>\" ).attr( \"type\", \"hidden\" ), \"Create an input and set the type.\" );\n \n@@ -526,8 +526,8 @@ QUnit.test( \"jQuery('massive html #7990')\", function( assert ) {\n QUnit.test( \"jQuery('html', context)\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar $div = jQuery( \"<div/>\" )[ 0 ],\n-\t\t$span = jQuery( \"<span/>\", $div );\n+\tvar $div = jQuery( \"<div></div>\" )[ 0 ],\n+\t\t$span = jQuery( \"<span></span>\", $div );\n \tassert.equal( $span.length, 1, \"verify a span created with a div context works, #1763\" );\n } );\n \n@@ -1356,7 +1356,7 @@ QUnit.test( \"jQuery.parseHTML\", function( assert ) {\n \tassert.equal( jQuery.parseHTML( \"text\" )[ 0 ].nodeType, 3, \"Parsing text returns a text node\" );\n \tassert.equal( jQuery.parseHTML( \"\\t<div></div>\" )[ 0 ].nodeValue, \"\\t\", \"Preserve leading whitespace\" );\n \n-\tassert.equal( jQuery.parseHTML( \" <div/> \" )[ 0 ].nodeType, 3, \"Leading spaces are treated as text nodes (#11290)\" );\n+\tassert.equal( jQuery.parseHTML( \" <div></div> \" )[ 0 ].nodeType, 3, \"Leading spaces are treated as text nodes (#11290)\" );\n \n \thtml = jQuery.parseHTML( \"<div>test div</div>\" );\n "
        },
        {
          "filename": "test/unit/css.js",
          "status": "modified",
          "additions": 56,
          "deletions": 56,
          "patch": "@@ -13,7 +13,7 @@ QUnit.test( \"css(String|Hash)\", function( assert ) {\n \tassert.notEqual( $child.css( \"width\" ), \"20px\", \"Retrieving a width percentage on the child of a hidden div returns percentage\" );\n \tassert.notEqual( $child.css( \"height\" ), \"20px\", \"Retrieving a height percentage on the child of a hidden div returns percentage\" );\n \n-\tdiv = jQuery( \"<div/>\" );\n+\tdiv = jQuery( \"<div></div>\" );\n \n \t// These should be \"auto\" (or some better value)\n \t// temporarily provide \"0px\" for backwards compat\n@@ -25,7 +25,7 @@ QUnit.test( \"css(String|Hash)\", function( assert ) {\n \tassert.equal( div.css( \"width\" ), \"4px\", \"Width on disconnected node.\" );\n \tassert.equal( div.css( \"height\" ), \"4px\", \"Height on disconnected node.\" );\n \n-\tdiv2 = jQuery( \"<div style='display:none;'><input type='text' style='height:20px;'/><textarea style='height:20px;'/><div style='height:20px;'></div></div>\" ).appendTo( \"body\" );\n+\tdiv2 = jQuery( \"<div style='display:none;'><input type='text' style='height:20px;'/><textarea style='height:20px;'></textarea><div style='height:20px;'></div></div>\" ).appendTo( \"body\" );\n \n \tassert.equal( div2.find( \"input\" ).css( \"height\" ), \"20px\", \"Height on hidden input.\" );\n \tassert.equal( div2.find( \"textarea\" ).css( \"height\" ), \"20px\", \"Height on hidden textarea.\" );\n@@ -42,7 +42,7 @@ QUnit.test( \"css(String|Hash)\", function( assert ) {\n \tassert.equal( parseFloat( jQuery( \"#nothiddendiv\" ).css( \"width\" ) ), 0, \"Test negative width set to 0\" );\n \tassert.equal( parseFloat( jQuery( \"#nothiddendiv\" ).css( \"height\" ) ), 0, \"Test negative height set to 0\" );\n \n-\tassert.equal( jQuery( \"<div style='display: none;'/>\" ).css( \"display\" ), \"none\", \"Styles on disconnected nodes\" );\n+\tassert.equal( jQuery( \"<div style='display: none;'></div>\" ).css( \"display\" ), \"none\", \"Styles on disconnected nodes\" );\n \n \tjQuery( \"#floatTest\" ).css( { \"float\": \"right\" } );\n \tassert.equal( jQuery( \"#floatTest\" ).css( \"float\" ), \"right\", \"Modified CSS float using \\\"float\\\": Assert float is right\" );\n@@ -111,7 +111,7 @@ QUnit.test( \"css(String|Hash)\", function( assert ) {\n \n \tassert.strictEqual( child.css( \"x-fake\" ), undefined, \"Make sure undefined is returned from css(nonexistent).\" );\n \n-\tdiv = jQuery( \"<div/>\" ).css( { position: \"absolute\", \"z-index\": 1000 } ).appendTo( \"#qunit-fixture\" );\n+\tdiv = jQuery( \"<div></div>\" ).css( { position: \"absolute\", \"z-index\": 1000 } ).appendTo( \"#qunit-fixture\" );\n \tassert.strictEqual( div.css( \"z-index\" ), \"1000\",\n \t\t\"Make sure that a string z-index is returned from css('z-index') (#14432).\" );\n } );\n@@ -275,10 +275,10 @@ QUnit.test( \"css() mismatched relative values with bounded styles (gh-2144)\", fu\n \tassert.expect( 1 );\n \n \tvar right,\n-\t\t$container = jQuery( \"<div/>\" )\n+\t\t$container = jQuery( \"<div></div>\" )\n \t\t\t.css( { position: \"absolute\", width: \"400px\", fontSize: \"4px\" } )\n \t\t\t.appendTo( \"#qunit-fixture\" ),\n-\t\t$el = jQuery( \"<div/>\" )\n+\t\t$el = jQuery( \"<div></div>\" )\n \t\t\t.css( { position: \"absolute\", left: \"50%\", right: \"50%\" } )\n \t\t\t.appendTo( $container );\n \n@@ -574,7 +574,7 @@ QUnit.test( \"show/hide detached nodes\", function( assert ) {\n \tassert.equal( div.css( \"display\" ), \"none\",\n \t\t\"A shown-while-detached div inside a visible div can be hidden by the CSS cascade\" );\n \n-\tspan = jQuery( \"<span class='hidden'/>\" );\n+\tspan = jQuery( \"<span class='hidden'></span>\" );\n \tspan.show().appendTo( \"#qunit-fixture\" );\n \tassert.equal( span.css( \"display\" ), \"none\",\n \t\t\"A shown-while-detached span can be hidden by the CSS cascade\" );\n@@ -588,7 +588,7 @@ QUnit.test( \"show/hide detached nodes\", function( assert ) {\n \t\t\"A shown-while-detached cascade-hidden div is hidden after attachment\" );\n \tdiv.remove();\n \n-\tspan = jQuery( \"<span class='hidden'/>\" );\n+\tspan = jQuery( \"<span class='hidden'></span>\" );\n \tspan.appendTo( \"#qunit-fixture\" ).detach().show().appendTo( \"#qunit-fixture\" );\n \tassert.equal( span.css( \"display\" ), \"none\",\n \t\t\"A shown-while-detached cascade-hidden span is hidden after attachment\" );\n@@ -615,28 +615,28 @@ QUnit.test( \"show/hide detached nodes\", function( assert ) {\n \t\t\"A shown-while-detached inline-hidden div inside a visible div has default display \" +\n \t\t\"after attachment\" );\n \n-\tspan = jQuery( \"<span style='display: none'/>\" );\n+\tspan = jQuery( \"<span style='display: none'></span>\" );\n \tspan.show();\n \tassert.equal( span[ 0 ].style.display, \"\",\n \t\t\"show() updates inline style of a detached inline-hidden span\" );\n \tspan.appendTo( \"#qunit-fixture\" );\n \tassert.equal( span.css( \"display\" ), \"inline\",\n \t\t\"A shown-while-detached inline-hidden span has default display after attachment\" );\n \n-\tdiv = jQuery( \"<div style='display: inline'/>\" );\n+\tdiv = jQuery( \"<div style='display: inline'></div>\" );\n \tdiv.show().appendTo( \"#qunit-fixture\" );\n \tassert.equal( div.css( \"display\" ), \"inline\",\n \t\t\"show() does not update inline style of a detached inline-visible div\" );\n \tdiv.remove();\n \n-\ttr = jQuery( \"<tr/>\" );\n+\ttr = jQuery( \"<tr></tr>\" );\n \tjQuery( \"#table\" ).append( tr );\n \ttr.detach().hide().show();\n \n \tassert.ok( !tr[ 0 ].style.display, \"Not-hidden detached tr elements have no inline style\" );\n \ttr.remove();\n \n-\tspan = jQuery( \"<span/>\" ).hide().show();\n+\tspan = jQuery( \"<span></span>\" ).hide().show();\n \tassert.ok( !span[ 0 ].style.display, \"Not-hidden detached span elements have no inline style\" );\n \tspan.remove();\n } );\n@@ -718,7 +718,7 @@ QUnit.test( \"hide hidden elements (bug #7141)\", function( assert ) {\n QUnit.test( \"show() after hide() should always set display to initial value (#14750)\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar div = jQuery( \"<div />\" ),\n+\tvar div = jQuery( \"<div></div>\" ),\n \t\tfixture = jQuery( \"#qunit-fixture\" );\n \n \tfixture.append( div );\n@@ -732,11 +732,11 @@ QUnit.test( \"show/hide 3.0, default display\", function( assert ) {\n \tassert.expect( 36 );\n \n \tvar i,\n-\t\t$elems = jQuery( \"<div/>\" )\n+\t\t$elems = jQuery( \"<div></div>\" )\n \t\t\t.appendTo( \"#qunit-fixture\" )\n-\t\t\t.html( \"<div data-expected-display='block'/>\" +\n-\t\t\t\t\"<span data-expected-display='inline'/>\" +\n-\t\t\t\t\"<ul><li data-expected-display='list-item'/></ul>\" )\n+\t\t\t.html( \"<div data-expected-display='block'></div>\" +\n+\t\t\t\t\"<span data-expected-display='inline'></span>\" +\n+\t\t\t\t\"<ul><li data-expected-display='list-item'></li></ul>\" )\n \t\t\t.find( \"[data-expected-display]\" );\n \n \t$elems.each( function() {\n@@ -790,9 +790,9 @@ QUnit.test( \"show/hide 3.0, cascade display\", function( assert ) {\n \tassert.expect( 36 );\n \n \tvar i,\n-\t\t$elems = jQuery( \"<div/>\" )\n+\t\t$elems = jQuery( \"<div></div>\" )\n \t\t\t.appendTo( \"#qunit-fixture\" )\n-\t\t\t.html( \"<span class='block'/><div class='inline'/><div class='list-item'/>\" )\n+\t\t\t.html( \"<span class='block'></span><div class='inline'></div><div class='list-item'></div>\" )\n \t\t\t.children();\n \n \t$elems.each( function() {\n@@ -829,17 +829,17 @@ QUnit.test( \"show/hide 3.0, inline display\", function( assert ) {\n \tassert.expect( 96 );\n \n \tvar i,\n-\t\t$elems = jQuery( \"<div/>\" )\n+\t\t$elems = jQuery( \"<div></div>\" )\n \t\t\t.appendTo( \"#qunit-fixture\" )\n-\t\t\t.html( \"<span data-expected-display='block' style='display:block'/>\" +\n-\t\t\t\t\"<span class='list-item' data-expected-display='block' style='display:block'/>\" +\n-\t\t\t\t\"<div data-expected-display='inline' style='display:inline'/>\" +\n-\t\t\t\t\"<div class='list-item' data-expected-display='inline' style='display:inline'/>\" +\n+\t\t\t.html( \"<span data-expected-display='block' style='display:block'></span>\" +\n+\t\t\t\t\"<span class='list-item' data-expected-display='block' style='display:block'></span>\" +\n+\t\t\t\t\"<div data-expected-display='inline' style='display:inline'></div>\" +\n+\t\t\t\t\"<div class='list-item' data-expected-display='inline' style='display:inline'></div>\" +\n \t\t\t\t\"<ul>\" +\n-\t\t\t\t\t\"<li data-expected-display='block' style='display:block'/>\" +\n-\t\t\t\t\t\"<li class='inline' data-expected-display='block' style='display:block'/>\" +\n-\t\t\t\t\t\"<li data-expected-display='inline' style='display:inline'/>\" +\n-\t\t\t\t\t\"<li class='block' data-expected-display='inline' style='display:inline'/>\" +\n+\t\t\t\t\t\"<li data-expected-display='block' style='display:block'></li>\" +\n+\t\t\t\t\t\"<li class='inline' data-expected-display='block' style='display:block'></li>\" +\n+\t\t\t\t\t\"<li data-expected-display='inline' style='display:inline'></li>\" +\n+\t\t\t\t\t\"<li class='block' data-expected-display='inline' style='display:inline'></li>\" +\n \t\t\t\t\"</ul>\" )\n \t\t\t.find( \"[data-expected-display]\" );\n \n@@ -878,15 +878,15 @@ QUnit.test( \"show/hide 3.0, cascade hidden\", function( assert ) {\n \tassert.expect( 72 );\n \n \tvar i,\n-\t\t$elems = jQuery( \"<div/>\" )\n+\t\t$elems = jQuery( \"<div></div>\" )\n \t\t\t.appendTo( \"#qunit-fixture\" )\n-\t\t\t.html( \"<div class='hidden' data-expected-display='block'/>\" +\n-\t\t\t\t\"<div class='hidden' data-expected-display='block' style='display:none'/>\" +\n-\t\t\t\t\"<span class='hidden' data-expected-display='inline'/>\" +\n-\t\t\t\t\"<span class='hidden' data-expected-display='inline' style='display:none'/>\" +\n+\t\t\t.html( \"<div class='hidden' data-expected-display='block'></div>\" +\n+\t\t\t\t\"<div class='hidden' data-expected-display='block' style='display:none'></div>\" +\n+\t\t\t\t\"<span class='hidden' data-expected-display='inline'></span>\" +\n+\t\t\t\t\"<span class='hidden' data-expected-display='inline' style='display:none'></span>\" +\n \t\t\t\t\"<ul>\" +\n-\t\t\t\t\t\"<li class='hidden' data-expected-display='list-item'/>\" +\n-\t\t\t\t\t\"<li class='hidden' data-expected-display='list-item' style='display:none'/>\" +\n+\t\t\t\t\t\"<li class='hidden' data-expected-display='list-item'></li>\" +\n+\t\t\t\t\t\"<li class='hidden' data-expected-display='list-item' style='display:none'></li>\" +\n \t\t\t\t\"</ul>\" )\n \t\t\t.find( \"[data-expected-display]\" );\n \n@@ -925,16 +925,16 @@ QUnit.test( \"show/hide 3.0, inline hidden\", function( assert ) {\n \tassert.expect( 84 );\n \n \tvar i,\n-\t\t$elems = jQuery( \"<div/>\" )\n+\t\t$elems = jQuery( \"<div></div>\" )\n \t\t\t.appendTo( \"#qunit-fixture\" )\n-\t\t\t.html( \"<span data-expected-display='inline' style='display:none'/>\" +\n-\t\t\t\t\"<span class='list-item' data-expected-display='list-item' style='display:none'/>\" +\n-\t\t\t\t\"<div data-expected-display='block' style='display:none'/>\" +\n-\t\t\t\t\"<div class='list-item' data-expected-display='list-item' style='display:none'/>\" +\n+\t\t\t.html( \"<span data-expected-display='inline' style='display:none'></span>\" +\n+\t\t\t\t\"<span class='list-item' data-expected-display='list-item' style='display:none'></span>\" +\n+\t\t\t\t\"<div data-expected-display='block' style='display:none'></div>\" +\n+\t\t\t\t\"<div class='list-item' data-expected-display='list-item' style='display:none'></div>\" +\n \t\t\t\t\"<ul>\" +\n-\t\t\t\t\t\"<li data-expected-display='list-item' style='display:none'/>\" +\n-\t\t\t\t\t\"<li class='block' data-expected-display='block' style='display:none'/>\" +\n-\t\t\t\t\t\"<li class='inline' data-expected-display='inline' style='display:none'/>\" +\n+\t\t\t\t\t\"<li data-expected-display='list-item' style='display:none'></li>\" +\n+\t\t\t\t\t\"<li class='block' data-expected-display='block' style='display:none'></li>\" +\n+\t\t\t\t\t\"<li class='inline' data-expected-display='inline' style='display:none'></li>\" +\n \t\t\t\t\"</ul>\" )\n \t\t\t.find( \"[data-expected-display]\" );\n \n@@ -1005,9 +1005,9 @@ QUnit[ jQuery.find.compile && jQuery.fn.toggle ? \"test\" : \"skip\" ]( \"toggle()\",\n \n QUnit[ jQuery.find.compile && jQuery.fn.toggle ? \"test\" : \"skip\" ]( \"detached toggle()\", function( assert ) {\n \tassert.expect( 6 );\n-\tvar detached = jQuery( \"<p><a/><p>\" ).find( \"*\" ).addBack(),\n-\t\thiddenDetached = jQuery( \"<p><a/></p>\" ).find( \"*\" ).addBack().css( \"display\", \"none\" ),\n-\t\tcascadeHiddenDetached = jQuery( \"<p><a/></p>\" ).find( \"*\" ).addBack().addClass( \"hidden\" );\n+\tvar detached = jQuery( \"<p><a></a><p>\" ).find( \"*\" ).addBack(),\n+\t\thiddenDetached = jQuery( \"<p><a></a></p>\" ).find( \"*\" ).addBack().css( \"display\", \"none\" ),\n+\t\tcascadeHiddenDetached = jQuery( \"<p><a></a></p>\" ).find( \"*\" ).addBack().addClass( \"hidden\" );\n \n \tdetached.toggle();\n \tdetached.appendTo( \"#qunit-fixture\" );\n@@ -1108,9 +1108,9 @@ QUnit.test( \"computed margins (trac-3333; gh-2237)\", function( assert ) {\n QUnit.test( \"box model properties incorrectly returning % instead of px, see #10639 and #12088\", function( assert ) {\n \tassert.expect( 2 );\n \n-\tvar container = jQuery( \"<div/>\" ).width( 400 ).appendTo( \"#qunit-fixture\" ),\n-\t\tel = jQuery( \"<div/>\" ).css( { \"width\": \"50%\", \"marginRight\": \"50%\" } ).appendTo( container ),\n-\t\tel2 = jQuery( \"<div/>\" ).css( { \"width\": \"50%\", \"minWidth\": \"300px\", \"marginLeft\": \"25%\" } ).appendTo( container );\n+\tvar container = jQuery( \"<div></div>\" ).width( 400 ).appendTo( \"#qunit-fixture\" ),\n+\t\tel = jQuery( \"<div></div>\" ).css( { \"width\": \"50%\", \"marginRight\": \"50%\" } ).appendTo( container ),\n+\t\tel2 = jQuery( \"<div></div>\" ).css( { \"width\": \"50%\", \"minWidth\": \"300px\", \"marginLeft\": \"25%\" } ).appendTo( container );\n \n \tassert.equal( el.css( \"marginRight\" ), \"200px\", \"css('marginRight') returning % instead of px, see #10639\" );\n \tassert.equal( el2.css( \"marginLeft\" ), \"100px\", \"css('marginLeft') returning incorrect pixel value, see #12088\" );\n@@ -1154,10 +1154,10 @@ QUnit.test( \"can't get css for disconnected in IE<9, see #10254 and #8388\", func\n \tassert.expect( 2 );\n \tvar span, div;\n \n-\tspan = jQuery( \"<span/>\" ).css( \"background-image\", \"url(\" + baseURL + \"1x1.jpg)\" );\n+\tspan = jQuery( \"<span></span>\" ).css( \"background-image\", \"url(\" + baseURL + \"1x1.jpg)\" );\n \tassert.notEqual( span.css( \"background-image\" ), null, \"can't get background-image in IE<9, see #10254\" );\n \n-\tdiv = jQuery( \"<div/>\" ).css( \"top\", 10 );\n+\tdiv = jQuery( \"<div></div>\" ).css( \"top\", 10 );\n \tassert.equal( div.css( \"top\" ), \"10px\", \"can't get top in IE<9, see #8388\" );\n } );\n \n@@ -1172,7 +1172,7 @@ QUnit.test( \"Ensure styles are retrieving from parsed html on document fragments\n } );\n \n QUnit.test( \"can't get background-position in IE<9, see #10796\", function( assert ) {\n-\tvar div = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar div = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tunits = [\n \t\t\t\"0 0\",\n \t\t\t\"12px 12px\",\n@@ -1262,7 +1262,7 @@ QUnit[\n \t\t};\n \n \tfor ( prop in gridProps ) {\n-\t\t$div = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\t\t$div = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \t\t$div.css( prop, 2 );\n \n \t\tvalue = gridProps[ prop ];\n@@ -1627,7 +1627,7 @@ QUnit.test(\n \t\tQUnit.test( \"Don't append px to CSS \\\"order\\\" value (#14049)\", function( assert ) {\n \t\t\tassert.expect( 1 );\n \n-\t\t\tvar $elem = jQuery( \"<div/>\" );\n+\t\t\tvar $elem = jQuery( \"<div></div>\" );\n \n \t\t\t$elem.css( \"order\", 2 );\n \t\t\tassert.equal( $elem.css( \"order\" ), \"2\", \"2 on order\" );\n@@ -1706,7 +1706,7 @@ QUnit.test( \"Do not throw on frame elements from css method (#15098)\", function(\n \t\tresetCssPropsFor( \"appearance\" );\n \t\tresetCssPropsFor( \"transform\" );\n \n-\t\telem = jQuery( \"<div/>\" )\n+\t\telem = jQuery( \"<div></div>\" )\n \t\t\t.css( {\n \t\t\t\tmsAppearance: \"none\",\n \t\t\t\tappearance: \"none\",\n@@ -1730,7 +1730,7 @@ QUnit.test( \"Do not throw on frame elements from css method (#15098)\", function(\n \tQUnit.test( \"Don't detect fake set properties on a node when caching the prefixed version\", function( assert ) {\n \t\tassert.expect( 1 );\n \n-\t\tvar elem = jQuery( \"<div/>\" ),\n+\t\tvar elem = jQuery( \"<div></div>\" ),\n \t\t\tstyle = elem[ 0 ].style;\n \t\tstyle.MozFakeProperty = \"old value\";\n \t\telem.css( \"fakeProperty\", \"new value\" );"
        },
        {
          "filename": "test/unit/data.js",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -427,7 +427,7 @@ QUnit.test( \".data(Object)\", function( assert ) {\n \tassert.expect( 4 );\n \n \tvar obj, jqobj,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \n \tdiv.data( { \"test\": \"in\", \"test2\": \"in2\" } );\n \tassert.equal( div.data( \"test\" ), \"in\", \"Verify setting an object in data\" );\n@@ -556,7 +556,7 @@ QUnit.test( \".data should not miss preset data-* w/ hyphenated property names\",\n \n \tassert.expect( 2 );\n \n-\tvar div = jQuery( \"<div/>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n+\tvar div = jQuery( \"<div></div>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n \t\ttest = {\n \t\t\t\"camelBar\": \"camelBar\",\n \t\t\t\"hyphen-foo\": \"hyphen-foo\"\n@@ -573,7 +573,7 @@ QUnit.test( \"jQuery.data should not miss data-* w/ hyphenated property names #14\n \n \tassert.expect( 1 );\n \n-\tvar div = jQuery( \"<div/>\" );\n+\tvar div = jQuery( \"<div></div>\" );\n \n \tdiv.data( \"foo-bar\", \"baz\" );\n \n@@ -585,14 +585,14 @@ QUnit.test( \".data should not miss attr() set data-* with hyphenated property na\n \n \tvar a, b;\n \n-\ta = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\ta = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \ta.attr( \"data-long-param\", \"test\" );\n \ta.data( \"long-param\", { a: 2 } );\n \n \tassert.deepEqual( a.data( \"long-param\" ), { a: 2 }, \"data with property long-param was found, 1\" );\n \n-\tb = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\tb = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tb.attr( \"data-long-param\", \"test\" );\n \tb.data( \"long-param\" );\n@@ -668,7 +668,7 @@ QUnit.test( \".data should not strip more than one hyphen when camelCasing (gh-20\n \n QUnit.test( \".data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values\", function( assert ) {\n \n-\tvar div = jQuery( \"<div/>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n+\tvar div = jQuery( \"<div></div>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n \t\tdatas = {\n \t\t\t\"non-empty\": {\n \t\t\t\tkey: \"nonEmpty\",\n@@ -736,7 +736,7 @@ QUnit.test( \".data supports interoperable hyphenated/camelCase get/set of proper\n } );\n \n QUnit.test( \".data supports interoperable removal of hyphenated/camelCase properties\", function( assert ) {\n-\tvar div = jQuery( \"<div/>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n+\tvar div = jQuery( \"<div></div>\", { id: \"hyphened\" } ).appendTo( \"#qunit-fixture\" ),\n \t\trdashAlpha = /-([a-z])/g,\n \t\tdatas = {\n \t\t\t\"non-empty\": \"a string\",\n@@ -943,7 +943,7 @@ QUnit.test( \"Check that the expando is removed when there's no more data\", funct\n \tassert.expect( 2 );\n \n \tvar key,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \tdiv.data( \"some\", \"data\" );\n \tassert.equal( div.data( \"some\" ), \"data\", \"Data is added\" );\n \tdiv.removeData( \"some\" );\n@@ -977,7 +977,7 @@ QUnit.test( \".data(prop) does not create expando\", function( assert ) {\n \tassert.expect( 1 );\n \n \tvar key,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \n \tdiv.data( \"foo\" );\n \tassert.equal( jQuery.hasData( div[ 0 ] ), false, \"No data exists after access\" );\n@@ -993,7 +993,7 @@ QUnit.test( \".data(prop) does not create expando\", function( assert ) {\n QUnit.test( \"keys matching Object.prototype properties  (gh-3256)\", function( assert ) {\n \tassert.expect( 2 );\n \n-\tvar div = jQuery( \"<div/>\" );\n+\tvar div = jQuery( \"<div></div>\" );\n \n \tassert.strictEqual( div.data( \"hasOwnProperty\" ), undefined,\n \t\t\"hasOwnProperty not matched (before forced data creation)\" );"
        },
        {
          "filename": "test/unit/deprecated.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -138,7 +138,7 @@ if ( jQuery.ajax && jQuery.fn.ajaxSend ) {\n QUnit[ jQuery.fn.click ? \"test\" : \"skip\" ]( \"Event aliases\", function( assert ) {\n \n \t// Explicitly skipping focus/blur events due to their flakiness\n-\tvar\t$elem = jQuery( \"<div />\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar\t$elem = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\taliases = ( \"resize scroll click dblclick mousedown mouseup \" +\n \t\t\t\"mousemove mouseover mouseout mouseenter mouseleave change \" +\n \t\t\t\"select submit keydown keypress keyup contextmenu\" ).split( \" \" );"
        },
        {
          "filename": "test/unit/dimensions.js",
          "status": "modified",
          "additions": 15,
          "deletions": 15,
          "patch": "@@ -342,7 +342,7 @@ QUnit.test( \"getting dimensions shouldn't modify runtimeStyle see #9233\", functi\n QUnit.test( \"table dimensions\", function( assert ) {\n \tassert.expect( 2 );\n \n-\tvar table = jQuery( \"<table><colgroup><col/><col/></colgroup><tbody><tr><td></td><td>a</td></tr><tr><td></td><td>a</td></tr></tbody></table>\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar table = jQuery( \"<table><colgroup><col></col><col></col></colgroup><tbody><tr><td></td><td>a</td></tr><tr><td></td><td>a</td></tr></tbody></table>\" ).appendTo( \"#qunit-fixture\" ),\n \t\ttdElem = table.find( \"td\" ).first(),\n \t\tcolElem = table.find( \"col\" ).first().width( 300 );\n \n@@ -536,7 +536,7 @@ QUnit.test( \"allow modification of coordinates argument (gh-1848)\", function( as\n \tassert.expect( 1 );\n \n \tvar offsetTop,\n-\t\telement = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\t\telement = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \telement.offset( function( index, coords ) {\n \t\tcoords.top = 100;\n@@ -583,7 +583,7 @@ QUnit.test( \"width/height on element with transform (gh-3193)\", function( assert\n \n \tassert.expect( 2 );\n \n-\tvar $elem = jQuery( \"<div style='width: 200px; height: 200px; transform: scale(2);' />\" )\n+\tvar $elem = jQuery( \"<div style='width: 200px; height: 200px; transform: scale(2);'></div>\" )\n \t\t.appendTo( \"#qunit-fixture\" );\n \n \tassert.equal( $elem.width(), 200, \"Width ignores transforms\" );\n@@ -663,7 +663,7 @@ QUnit.test( \"interaction with scrollbars (gh-3589)\", function( assert ) {\n \t\t\t\treturn old + adjustment;\n \t\t\t};\n \t\t},\n-\t\tparent = jQuery( \"<div/>\" )\n+\t\tparent = jQuery( \"<div></div>\" )\n \t\t\t.css( { position: \"absolute\", width: \"1000px\", height: \"1000px\" } )\n \t\t\t.appendTo( \"#qunit-fixture\" ),\n \t\tfraction = jQuery.support.boxSizingReliable() ?\n@@ -672,7 +672,7 @@ QUnit.test( \"interaction with scrollbars (gh-3589)\", function( assert ) {\n \t\tborderWidth = 1,\n \t\tpadding = 2,\n \t\tsize = 100 + fraction,\n-\t\tplainBox = jQuery( \"<div />\" )\n+\t\tplainBox = jQuery( \"<div></div>\" )\n \t\t\t.css( {\n \t\t\t\t\"box-sizing\": \"content-box\",\n \t\t\t\tposition: \"absolute\",\n@@ -759,24 +759,24 @@ QUnit.test( \"interaction with scrollbars (gh-3589)\", function( assert ) {\n \n QUnit.test( \"outerWidth/Height for table cells and textarea with border-box in IE 11 (gh-4102)\", function( assert ) {\n \tassert.expect( 5 );\n-\tvar $table = jQuery( \"<table class='border-box' style='border-collapse: separate' />\" ).appendTo( \"#qunit-fixture\" ),\n-\t\t$thead = jQuery( \"<thead />\" ).appendTo( $table ),\n-\t\t$firstTh = jQuery( \"<th style='width: 200px;padding: 5px' />\" ),\n-\t\t$secondTh = jQuery( \"<th style='width: 190px;padding: 5px' />\" ),\n-\t\t$thirdTh = jQuery( \"<th style='width: 180px;padding: 5px' />\" ),\n+\tvar $table = jQuery( \"<table class='border-box' style='border-collapse: separate'></table>\" ).appendTo( \"#qunit-fixture\" ),\n+\t\t$thead = jQuery( \"<thead></thead>\" ).appendTo( $table ),\n+\t\t$firstTh = jQuery( \"<th style='width: 200px;padding: 5px'></th>\" ),\n+\t\t$secondTh = jQuery( \"<th style='width: 190px;padding: 5px'></th>\" ),\n+\t\t$thirdTh = jQuery( \"<th style='width: 180px;padding: 5px'></th>\" ),\n \n \t\t// Support: Firefox 63, Edge 16-17, Android 8, iOS 7-11\n \t\t// These browsers completely ignore the border-box and height settings\n \t\t// The computed height is instead just line-height + border\n \t\t// Either way, what we're doing in css.js is correct\n \t\t$td = jQuery( \"<td style='height: 20px;padding: 5px;border: 1px solid;line-height:18px'>text</td>\" ),\n \n-\t\t$tbody = jQuery( \"<tbody />\" ).appendTo( $table ),\n-\t\t$textarea = jQuery( \"<textarea style='height: 0;padding: 2px;border: 1px solid;box-sizing: border-box' />\" ).appendTo( \"#qunit-fixture\" );\n+\t\t$tbody = jQuery( \"<tbody></tbody>\" ).appendTo( $table ),\n+\t\t$textarea = jQuery( \"<textarea style='height: 0;padding: 2px;border: 1px solid;box-sizing: border-box'></textarea>\" ).appendTo( \"#qunit-fixture\" );\n \n-\tjQuery( \"<tr />\" ).appendTo( $thead ).append( $firstTh );\n-\tjQuery( \"<tr />\" ).appendTo( $thead ).append( $secondTh );\n-\tjQuery( \"<tr />\" ).appendTo( $thead ).append( $thirdTh );\n+\tjQuery( \"<tr></tr>\" ).appendTo( $thead ).append( $firstTh );\n+\tjQuery( \"<tr></tr>\" ).appendTo( $thead ).append( $secondTh );\n+\tjQuery( \"<tr></tr>\" ).appendTo( $thead ).append( $thirdTh );\n \tjQuery( \"<tr><td></td></tr>\" ).appendTo( $tbody ).append( $td );\n \n \tassert.strictEqual( $firstTh.outerWidth(), 200, \"First th has outerWidth 200.\" );"
        },
        {
          "filename": "test/unit/effects.js",
          "status": "modified",
          "additions": 11,
          "deletions": 11,
          "patch": "@@ -605,7 +605,7 @@ QUnit.test( \"animate duration 0\", function( assert ) {\n \t} );\n \tthis.clock.tick( 200 );\n \n-\t$elem = jQuery( \"<div />\" );\n+\t$elem = jQuery( \"<div></div>\" );\n \t$elem.show( 0, function() {\n \t\tassert.ok( true, \"Show callback with no duration\" );\n \t} );\n@@ -1302,7 +1302,7 @@ QUnit.test( \"animate with CSS shorthand properties\", function( assert ) {\n QUnit.test( \"hide hidden elements, with animation (bug #7141)\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar div = jQuery( \"<div id='bug7141' style='display:none'/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar div = jQuery( \"<div id='bug7141' style='display:none'></div>\" ).appendTo( \"#qunit-fixture\" );\n \tassert.equal( div.css( \"display\" ), \"none\", \"Element is initially hidden\" );\n \tdiv.hide( 10, function() {\n \t\tassert.equal( div.css( \"display\" ), \"none\", \"Element is hidden in .hide() callback\" );\n@@ -1603,10 +1603,10 @@ QUnit.test( \"animate should set display for disconnected nodes\", function( asser\n \t\t\ttoggle: [ 1 ],\n \t\t\tslideToggle: []\n \t\t},\n-\t\t$divEmpty = jQuery( \"<div/>\" ),\n+\t\t$divEmpty = jQuery( \"<div></div>\" ),\n \t\t$divTest = jQuery( \"<div>test</div>\" ),\n-\t\t$divNone = jQuery( \"<div style='display: none;'/>\" ),\n-\t\t$divInline = jQuery( \"<div style='display: inline;'/>\" ),\n+\t\t$divNone = jQuery( \"<div style='display: none;'></div>\" ),\n+\t\t$divInline = jQuery( \"<div style='display: inline;'></div>\" ),\n \t\tnullParentDisplay = $divEmpty.css( \"display\" ),\n \t\tunderFragmentDisplay = $divTest.css( \"display\" ),\n \t\tclock = this.clock;\n@@ -1626,7 +1626,7 @@ QUnit.test( \"animate should set display for disconnected nodes\", function( asser\n \tassert.expectJqData( env, $divNone[ 0 ], \"olddisplay\" );\n \n \tjQuery.each( showMethods, function( name, opt ) {\n-\t\tjQuery.fn[ name ].apply( jQuery( \"<div/>\" ), opt.concat( [ function() {\n+\t\tjQuery.fn[ name ].apply( jQuery( \"<div></div>\" ), opt.concat( [ function() {\n \t\t\tassert.strictEqual( jQuery( this ).css( \"display\" ), nullParentDisplay,\n \t\t\t\t\".\" + name + \" block with null parentNode\" );\n \t\t} ] ) );\n@@ -1637,7 +1637,7 @@ QUnit.test( \"animate should set display for disconnected nodes\", function( asser\n \t\t} ] ) );\n \t} );\n \tjQuery.each( toggleMethods, function( name, opt ) {\n-\t\tjQuery.fn[ name ].apply( jQuery( \"<div/>\" ), opt.concat( [ function() {\n+\t\tjQuery.fn[ name ].apply( jQuery( \"<div></div>\" ), opt.concat( [ function() {\n \t\t\tassert.strictEqual( jQuery( this ).css( \"display\" ), \"none\",\n \t\t\t\t\".\" + name + \" block with null parentNode\" );\n \t\t} ] ) );\n@@ -2362,8 +2362,8 @@ QUnit.test( \"Respect display value on inline elements (#14824)\", function( asser\n \tassert.expect( 2 );\n \n \tvar clock = this.clock,\n-\t\tfromStyleSheet = jQuery( \"<span id='span-14824' />\" ),\n-\t\tfromStyleAttr = jQuery( \"<span style='display: block;' />\" );\n+\t\tfromStyleSheet = jQuery( \"<span id='span-14824'></span>\" ),\n+\t\tfromStyleAttr = jQuery( \"<span style='display: block;'></span>\" );\n \n \tjQuery( \"#qunit-fixture\" ).append( fromStyleSheet, fromStyleAttr );\n \n@@ -2463,7 +2463,7 @@ QUnit.test( \"jQuery.easing._default in Tween (gh-2218)\", function( assert ) {\n QUnit.test( \"Display value is correct for disconnected nodes (trac-13310)\", function( assert ) {\n \tassert.expect( 3 );\n \n-\tvar div = jQuery( \"<div/>\" );\n+\tvar div = jQuery( \"<div></div>\" );\n \n \tassert.equal( div.css( \"display\", \"inline\" ).hide().show().appendTo( \"body\" ).css( \"display\" ), \"inline\", \"Initialized display value has returned\" );\n \tdiv.remove();\n@@ -2484,7 +2484,7 @@ QUnit.test( \"Show/hide/toggle and display: inline\", function( assert ) {\n \n \tvar clock = this.clock;\n \n-\tjQuery( \"<span/><div style='display:inline' title='inline div'/>\" ).each( function() {\n+\tjQuery( \"<span></span><div style='display:inline' title='inline div'></div>\" ).each( function() {\n \t\tvar completed, interrupted,\n \t\t\tN = 100,\n \t\t\tfixture = jQuery( \"#qunit-fixture\" ),"
        },
        {
          "filename": "test/unit/event.js",
          "status": "modified",
          "additions": 13,
          "deletions": 13,
          "patch": "@@ -153,7 +153,7 @@ QUnit.test( \"on(), multiple events at once and namespaces\", function( assert ) {\n \tvar cur, div,\n \t\tobj = {};\n \n-\tdiv = jQuery( \"<div/>\" ).on( \"focusin.a\", function( e ) {\n+\tdiv = jQuery( \"<div></div>\" ).on( \"focusin.a\", function( e ) {\n \t\tassert.equal( e.type, cur, \"Verify right single event was fired.\" );\n \t} );\n \n@@ -163,7 +163,7 @@ QUnit.test( \"on(), multiple events at once and namespaces\", function( assert ) {\n \t// manually clean up detached elements\n \tdiv.remove();\n \n-\tdiv = jQuery( \"<div/>\" ).on( \"click mouseover\", obj, function( e ) {\n+\tdiv = jQuery( \"<div></div>\" ).on( \"click mouseover\", obj, function( e ) {\n \t\tassert.equal( e.type, cur, \"Verify right multi event was fired.\" );\n \t\tassert.equal( e.data, obj, \"Make sure the data came in correctly.\" );\n \t} );\n@@ -177,7 +177,7 @@ QUnit.test( \"on(), multiple events at once and namespaces\", function( assert ) {\n \t// manually clean up detached elements\n \tdiv.remove();\n \n-\tdiv = jQuery( \"<div/>\" ).on( \"focusin.a focusout.b\", function( e ) {\n+\tdiv = jQuery( \"<div></div>\" ).on( \"focusin.a focusout.b\", function( e ) {\n \t\tassert.equal( e.type, cur, \"Verify right multi event was fired.\" );\n \t} );\n \n@@ -195,7 +195,7 @@ QUnit.test( \"on(), namespace with special add\", function( assert ) {\n \tassert.expect( 27 );\n \n \tvar i = 0,\n-\t\tdiv = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ).on( \"test\", function() {\n+\t\tdiv = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ).on( \"test\", function() {\n \t\t\tassert.ok( true, \"Test event fired.\" );\n \t\t} );\n \n@@ -244,7 +244,7 @@ QUnit.test( \"on(), namespace with special add\", function( assert ) {\n \t// Should trigger 4\n \tdiv.off( \"test\" );\n \n-\tdiv = jQuery( \"<div/>\" ).on( \"test\", function() {\n+\tdiv = jQuery( \"<div></div>\" ).on( \"test\", function() {\n \t\tassert.ok( true, \"Test event fired.\" );\n \t} );\n \n@@ -876,7 +876,7 @@ QUnit.test( \"mouseover triggers mouseenter\", function( assert ) {\n \tassert.expect( 1 );\n \n \tvar count = 0,\n-\t\telem = jQuery( \"<a />\" );\n+\t\telem = jQuery( \"<a></a>\" );\n \telem.on( \"mouseenter\", function() {\n \t\tcount++;\n \t} );\n@@ -890,7 +890,7 @@ QUnit.test( \"pointerover triggers pointerenter\", function( assert ) {\n \tassert.expect( 1 );\n \n \tvar count = 0,\n-\t\telem = jQuery( \"<a />\" );\n+\t\telem = jQuery( \"<a></a>\" );\n \telem.on( \"pointerenter\", function() {\n \t\tcount++;\n \t} );\n@@ -1075,7 +1075,7 @@ QUnit.test( \"submit event bubbles on copied forms (#11649)\", function( assert )\n \tvar $formByClone, $formByHTML,\n \t\t$testForm = jQuery( \"#testForm\" ),\n \t\t$fixture = jQuery( \"#qunit-fixture\" ),\n-\t\t$wrapperDiv = jQuery( \"<div/>\" ).appendTo( $fixture );\n+\t\t$wrapperDiv = jQuery( \"<div></div>\" ).appendTo( $fixture );\n \n \tfunction noSubmit( e ) {\n \t\te.preventDefault();\n@@ -1111,7 +1111,7 @@ QUnit.test( \"change event bubbles on copied forms (#11796)\", function( assert )\n \tvar $formByClone, $formByHTML,\n \t\t$form = jQuery( \"#form\" ),\n \t\t$fixture = jQuery( \"#qunit-fixture\" ),\n-\t\t$wrapperDiv = jQuery( \"<div/>\" ).appendTo( $fixture );\n+\t\t$wrapperDiv = jQuery( \"<div></div>\" ).appendTo( $fixture );\n \n \tfunction delegatedChange() {\n \t\tassert.ok( true, \"Make sure change event bubbles up.\" );\n@@ -1141,7 +1141,7 @@ QUnit.test( \"trigger(eventObject, [data], [fn])\", function( assert ) {\n \tassert.expect( 28 );\n \n \tvar event,\n-\t\t$parent = jQuery( \"<div id='par' />\" ).appendTo( \"body\" ),\n+\t\t$parent = jQuery( \"<div id='par'></div>\" ).appendTo( \"body\" ),\n \t\t$child = jQuery( \"<p id='child'>foo</p>\" ).appendTo( $parent );\n \n \t$parent.get( 0 ).style.display = \"none\";\n@@ -1799,7 +1799,7 @@ QUnit.test( \"jQuery.off using dispatched jQuery.Event\", function( assert ) {\n QUnit.test( \"events with type matching an Object.prototype property (gh-3256)\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar elem = jQuery( \"<div/>\" ),\n+\tvar elem = jQuery( \"<div></div>\" ),\n \t\teventFired = false;\n \n \telem.appendTo( \"#qunit-fixture\" );\n@@ -1819,7 +1819,7 @@ QUnit.test( \"events with type matching an Object.prototype property, cloned elem\n \tfunction( assert ) {\n \tassert.expect( 1 );\n \n-\tvar elem = jQuery( \"<div/>\" ),\n+\tvar elem = jQuery( \"<div></div>\" ),\n \t\teventFired = false;\n \n \telem.appendTo( \"#qunit-fixture\" );\n@@ -2783,7 +2783,7 @@ QUnit.test( \".off() removes the expando when there's no more data\", function( as\n \tassert.expect( 2 );\n \n \tvar key,\n-\t\tdiv = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\t\tdiv = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tdiv.on( \"click\", false );\n \tdiv.on( \"custom\", function() {"
        },
        {
          "filename": "test/unit/manipulation.js",
          "status": "modified",
          "additions": 67,
          "deletions": 71,
          "patch": "@@ -88,9 +88,9 @@ function testText( valueObj, assert ) {\n \tassert.equal( $multipleElements.eq( 1 ).text(), expected, \"text() updates multiple elements (#11809)\" );\n \n \t// Prevent memory leaks #11809\n-\t$childDiv = jQuery( \"<div/>\" );\n+\t$childDiv = jQuery( \"<div></div>\" );\n \t$childDiv.data( \"leak\", true );\n-\t$parentDiv = jQuery( \"<div/>\" );\n+\t$parentDiv = jQuery( \"<div></div>\" );\n \t$parentDiv.append( $childDiv );\n \t$parentDiv.text( \"Dry off\" );\n }\n@@ -241,10 +241,10 @@ function testAppend( valueObj, assert ) {\n \t\tassert.strictEqual( e.message || e, undefined, message );\n \t}\n \n-\tjQuery( \"<fieldset/>\" ).appendTo( \"#form\" ).append( valueObj( \"<legend id='legend'>test</legend>\" ) );\n+\tjQuery( \"<fieldset></fieldset>\" ).appendTo( \"#form\" ).append( valueObj( \"<legend id='legend'>test</legend>\" ) );\n \tassert.t( \"Append legend\", \"#legend\", [ \"legend\" ] );\n \n-\t$map = jQuery( \"<map/>\" ).append( valueObj( \"<area id='map01' shape='rect' coords='50,50,150,150' href='http://www.jquery.com/' alt='jQuery'>\" ) );\n+\t$map = jQuery( \"<map></map>\" ).append( valueObj( \"<area id='map01' shape='rect' coords='50,50,150,150' href='http://www.jquery.com/' alt='jQuery'>\" ) );\n \n \tassert.equal( $map[ 0 ].childNodes.length, 1, \"The area was inserted.\" );\n \tassert.equal( $map[ 0 ].firstChild.nodeName.toLowerCase(), \"area\", \"The area was inserted.\" );\n@@ -264,20 +264,20 @@ function testAppend( valueObj, assert ) {\n \t\tassert.ok( jQuery.parseHTML( \"<\" + name + \"/>\" ).length, name + \" wrapped correctly\" );\n \t} );\n \n-\tjQuery( \"#table colgroup\" ).append( valueObj( \"<col/>\" ) );\n+\tjQuery( \"#table colgroup\" ).append( valueObj( \"<col></col>\" ) );\n \tassert.equal( jQuery( \"#table colgroup col\" ).length, 1, \"Append col\" );\n \n \tjQuery( \"#form\" )\n \t\t.append( valueObj( \"<select id='appendSelect1'></select>\" ) )\n \t\t.append( valueObj( \"<select id='appendSelect2'><option>Test</option></select>\" ) );\n \tassert.t( \"Append Select\", \"#appendSelect1, #appendSelect2\", [ \"appendSelect1\", \"appendSelect2\" ] );\n \n-\tassert.equal( \"Two nodes\", jQuery( \"<div />\" ).append( \"Two\", \" nodes\" ).text(), \"Appending two text nodes (#4011)\" );\n-\tassert.equal( jQuery( \"<div />\" ).append( \"1\", \"\", 3 ).text(), \"13\", \"If median is false-like value, subsequent arguments should not be ignored\" );\n+\tassert.equal( \"Two nodes\", jQuery( \"<div></div>\" ).append( \"Two\", \" nodes\" ).text(), \"Appending two text nodes (#4011)\" );\n+\tassert.equal( jQuery( \"<div></div>\" ).append( \"1\", \"\", 3 ).text(), \"13\", \"If median is false-like value, subsequent arguments should not be ignored\" );\n \n \t// using contents will get comments regular, text, and comment nodes\n \tj = jQuery( \"#nonnodes\" ).contents();\n-\td = jQuery( \"<div/>\" ).appendTo( \"#nonnodes\" ).append( j );\n+\td = jQuery( \"<div></div>\" ).appendTo( \"#nonnodes\" ).append( j );\n \n \tassert.equal( jQuery( \"#nonnodes\" ).length, 1, \"Check node,textnode,comment append moved leaving just the div\" );\n \tassert.equal( d.contents().length, 3, \"Check node,textnode,comment append works\" );\n@@ -294,12 +294,12 @@ function testAppend( valueObj, assert ) {\n \t$radioChecked.trigger( \"click\" );\n \t$radioUnchecked[ 0 ].checked = false;\n \n-\tjQuery( \"<div/>\" ).insertBefore( $radioParent ).append( $radioParent );\n+\tjQuery( \"<div></div>\" ).insertBefore( $radioParent ).append( $radioParent );\n \n \tassert.equal( $radioChecked[ 0 ].checked, true, \"Reappending radios uphold which radio is checked\" );\n \tassert.equal( $radioUnchecked[ 0 ].checked, false, \"Reappending radios uphold not being checked\" );\n \n-\tassert.equal( jQuery( \"<div/>\" ).append( valueObj( \"option<area/>\" ) )[ 0 ].childNodes.length, 2, \"HTML-string with leading text should be processed correctly\" );\n+\tassert.equal( jQuery( \"<div></div>\" ).append( valueObj( \"option<area></area>\" ) )[ 0 ].childNodes.length, 2, \"HTML-string with leading text should be processed correctly\" );\n }\n \n QUnit.test( \"append(String|Element|Array<Element>|jQuery)\", function( assert ) {\n@@ -672,15 +672,15 @@ QUnit.test( \"appendTo(jQuery)\", function( assert ) {\n \tjQuery( \"#select1\" ).appendTo( \"#foo\" );\n \tassert.t( \"Append select\", \"#foo select\", [ \"select1\" ] );\n \n-\tdiv = jQuery( \"<div/>\" ).on( \"click\", function() {\n+\tdiv = jQuery( \"<div></div>\" ).on( \"click\", function() {\n \t\tassert.ok( true, \"Running a cloned click.\" );\n \t} );\n \tdiv.appendTo( \"#qunit-fixture, #moretests\" );\n \n \tjQuery( \"#qunit-fixture div\" ).last().trigger( \"click\" );\n \tjQuery( \"#moretests div\" ).last().trigger( \"click\" );\n \n-\tdiv = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture, #moretests\" );\n+\tdiv = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture, #moretests\" );\n \n \tassert.equal( div.length, 2, \"appendTo returns the inserted elements\" );\n \n@@ -689,7 +689,7 @@ QUnit.test( \"appendTo(jQuery)\", function( assert ) {\n \tassert.ok( jQuery( \"#qunit-fixture div\" ).last().hasClass( \"test\" ), \"appendTo element was modified after the insertion\" );\n \tassert.ok( jQuery( \"#moretests div\" ).last().hasClass( \"test\" ), \"appendTo element was modified after the insertion\" );\n \n-\tdiv = jQuery( \"<div/>\" );\n+\tdiv = jQuery( \"<div></div>\" );\n \tjQuery( \"<span>a</span><b>b</b>\" ).filter( \"span\" ).appendTo( div );\n \n \tassert.equal( div.children().length, 1, \"Make sure the right number of children were inserted.\" );\n@@ -989,7 +989,7 @@ QUnit.test( \"before(no-op)\", function( assert ) {\n \tassert.expect( 2 );\n \n \tvar set;\n-\tset = jQuery( \"<div/>\" ).before( \"<span>test</span>\" );\n+\tset = jQuery( \"<div></div>\" ).before( \"<span>test</span>\" );\n \tassert.equal( set[ 0 ].nodeName.toLowerCase(), \"div\", \"Insert before a disconnected node should be a no-op\" );\n \tassert.equal( set.length, 1, \"Insert the element before the disconnected node. should be a no-op\" );\n } );\n@@ -1008,8 +1008,8 @@ QUnit.test( \".before() and .after() disconnected node\", function( assert ) {\n \n \tassert.expect( 2 );\n \n-\tassert.equal( jQuery( \"<input type='checkbox'/>\" ).before( \"<div/>\" ).length, 1, \"before() on disconnected node is no-op\" );\n-\tassert.equal( jQuery( \"<input type='checkbox'/>\" ).after( \"<div/>\" ).length, 1, \"after() on disconnected node is no-op\" );\n+\tassert.equal( jQuery( \"<input type='checkbox'/>\" ).before( \"<div></div>\" ).length, 1, \"before() on disconnected node is no-op\" );\n+\tassert.equal( jQuery( \"<input type='checkbox'/>\" ).after( \"<div></div>\" ).length, 1, \"after() on disconnected node is no-op\" );\n } );\n \n QUnit.test( \"insert with .before() on disconnected node last\", function( assert ) {\n@@ -1018,7 +1018,7 @@ QUnit.test( \"insert with .before() on disconnected node last\", function( assert\n \n \tvar expectedBefore = \"This is a normal link: bugaYahoo\";\n \n-\tjQuery( \"#yahoo\" ).add( \"<span/>\" ).before( \"<b>buga</b>\" );\n+\tjQuery( \"#yahoo\" ).add( \"<span></span>\" ).before( \"<b>buga</b>\" );\n \tassert.equal( jQuery( \"#en\" ).text(), expectedBefore, \"Insert String before with disconnected node last\" );\n } );\n \n@@ -1028,7 +1028,7 @@ QUnit.test( \"insert with .before() on disconnected node first\", function( assert\n \n \tvar expectedBefore = \"This is a normal link: bugaYahoo\";\n \n-\tjQuery( \"<span/>\" ).add( \"#yahoo\" ).before( \"<b>buga</b>\" );\n+\tjQuery( \"<span></span>\" ).add( \"#yahoo\" ).before( \"<b>buga</b>\" );\n \tassert.equal( jQuery( \"#en\" ).text(), expectedBefore, \"Insert String before with disconnected node first\" );\n } );\n \n@@ -1038,7 +1038,7 @@ QUnit.test( \"insert with .before() on disconnected node last\", function( assert\n \n \tvar expectedAfter = \"This is a normal link: Yahoobuga\";\n \n-\tjQuery( \"#yahoo\" ).add( \"<span/>\" ).after( \"<b>buga</b>\" );\n+\tjQuery( \"#yahoo\" ).add( \"<span></span>\" ).after( \"<b>buga</b>\" );\n \tassert.equal( jQuery( \"#en\" ).text(), expectedAfter, \"Insert String after with disconnected node last\" );\n } );\n \n@@ -1048,7 +1048,7 @@ QUnit.test( \"insert with .before() on disconnected node last\", function( assert\n \n \tvar expectedAfter = \"This is a normal link: Yahoobuga\";\n \n-\tjQuery( \"<span/>\" ).add( \"#yahoo\" ).after( \"<b>buga</b>\" );\n+\tjQuery( \"<span></span>\" ).add( \"#yahoo\" ).after( \"<b>buga</b>\" );\n \tassert.equal( jQuery( \"#en\" ).text(), expectedAfter, \"Insert String after with disconnected node first\" );\n } );\n \n@@ -1168,7 +1168,7 @@ QUnit.test( \".after(disconnected node)\", function( assert ) {\n \n \tassert.expect( 2 );\n \n-\tvar set = jQuery( \"<div/>\" ).before( \"<span>test</span>\" );\n+\tvar set = jQuery( \"<div></div>\" ).before( \"<span>test</span>\" );\n \tassert.equal( set[ 0 ].nodeName.toLowerCase(), \"div\", \"Insert after a disconnected node should be a no-op\" );\n \tassert.equal( set.length, 1, \"Insert the element after the disconnected node should be a no-op\" );\n } );\n@@ -1250,10 +1250,10 @@ function testReplaceWith( val, assert ) {\n \tjQuery( \"#anchor1\" ).contents().replaceWith( val( tmp ) );\n \tassert.deepEqual( jQuery( \"#anchor1\" ).contents().get(), [ tmp ], \"Replace text node with element\" );\n \n-\ttmp = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n+\ttmp = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n \t\tassert.ok( true, \"Newly bound click run.\" );\n \t} );\n-\ty = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n+\ty = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n \t\tassert.ok( false, \"Previously bound click run.\" );\n \t} );\n \tchild = y.append( \"<b>test</b>\" ).find( \"b\" ).on( \"click\", function() {\n@@ -1267,7 +1267,7 @@ function testReplaceWith( val, assert ) {\n \ty.trigger( \"click\" ); // Shouldn't be run\n \tchild.trigger( \"click\" ); // Shouldn't be run\n \n-\ty = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n+\ty = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ).on( \"click\", function() {\n \t\tassert.ok( false, \"Previously bound click run.\" );\n \t} );\n \tchild2 = y.append( \"<u>test</u>\" ).find( \"u\" ).on( \"click\", function() {\n@@ -1279,13 +1279,13 @@ function testReplaceWith( val, assert ) {\n \n \tchild2.trigger( \"click\" );\n \n-\tset = jQuery( \"<div/>\" ).replaceWith( val( \"<span>test</span>\" ) );\n+\tset = jQuery( \"<div></div>\" ).replaceWith( val( \"<span>test</span>\" ) );\n \tassert.equal( set[ 0 ].nodeName.toLowerCase(), \"div\", \"No effect on a disconnected node.\" );\n \tassert.equal( set.length, 1, \"No effect on a disconnected node.\" );\n \tassert.equal( set[ 0 ].childNodes.length, 0, \"No effect on a disconnected node.\" );\n \n \tchild = jQuery( \"#qunit-fixture\" ).children().first();\n-\t$div = jQuery( \"<div class='pathological'/>\" ).insertBefore( child );\n+\t$div = jQuery( \"<div class='pathological'></div>\" ).insertBefore( child );\n \t$div.replaceWith( $div );\n \tassert.deepEqual( jQuery( \".pathological\", \"#qunit-fixture\" ).get(), $div.get(),\n \t\t\"Self-replacement\" );\n@@ -1342,7 +1342,7 @@ QUnit.test( \"Empty replaceWith (trac-13401; trac-13596; gh-2204)\", function( ass\n \n \tassert.expect( 25 );\n \n-\tvar $el = jQuery( \"<div/><div/>\" ).html( \"<p>0</p>\" ),\n+\tvar $el = jQuery( \"<div></div><div></div>\" ).html( \"<p>0</p>\" ),\n \t\texpectedHTML = $el.html(),\n \t\ttests = {\n \t\t\t\"empty string\": \"\",\n@@ -1355,13 +1355,13 @@ QUnit.test( \"Empty replaceWith (trac-13401; trac-13596; gh-2204)\", function( ass\n \t\t};\n \n \tjQuery.each( tests, function( label, input ) {\n-\t\t$el.html( \"<a/>\" ).children().replaceWith( input );\n+\t\t$el.html( \"<a></a>\" ).children().replaceWith( input );\n \t\tassert.strictEqual( $el.html(), \"\", \"replaceWith(\" + label + \")\" );\n-\t\t$el.html( \"<b/>\" ).children().replaceWith( function() { return input; } );\n+\t\t$el.html( \"<b></b>\" ).children().replaceWith( function() { return input; } );\n \t\tassert.strictEqual( $el.html(), \"\", \"replaceWith(function returning \" + label + \")\" );\n-\t\t$el.html( \"<i/>\" ).children().replaceWith( function( i ) { return input; } );\n+\t\t$el.html( \"<i></i>\" ).children().replaceWith( function( i ) { return input; } );\n \t\tassert.strictEqual( $el.html(), \"\", \"replaceWith(other function returning \" + label + \")\" );\n-\t\t$el.html( \"<p/>\" ).children().replaceWith( function( i ) {\n+\t\t$el.html( \"<p></p>\" ).children().replaceWith( function( i ) {\n \t\t\treturn i ?\n \t\t\t\tinput :\n \t\t\t\tjQuery( this ).html( i + \"\" );\n@@ -1482,7 +1482,7 @@ QUnit.test( \"clone()\", function( assert ) {\n \tdiv.remove();\n \n \t// Verify that cloned children can keep event listeners\n-\tdiv = jQuery( \"<div/>\" ).append( [ document.createElement( \"table\" ), document.createElement( \"table\" ) ] );\n+\tdiv = jQuery( \"<div></div>\" ).append( [ document.createElement( \"table\" ), document.createElement( \"table\" ) ] );\n \tdiv.find( \"table\" ).on( \"click\", function() {\n \t\tassert.ok( true, \"Bound event still exists.\" );\n \t} );\n@@ -1509,7 +1509,7 @@ QUnit.test( \"clone()\", function( assert ) {\n \tdiv.remove();\n \n \t// Test both html() and clone() for <embed> and <object> types\n-\tdiv = jQuery( \"<div/>\" ).html( \"<embed height='355' width='425' src='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'></embed>\" );\n+\tdiv = jQuery( \"<div></div>\" ).html( \"<embed height='355' width='425' src='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'></embed>\" );\n \n \tclone = div.clone( true );\n \tassert.equal( clone.length, 1, \"One element cloned\" );\n@@ -1519,7 +1519,7 @@ QUnit.test( \"clone()\", function( assert ) {\n \t// this is technically an invalid object, but because of the special\n \t// classid instantiation it is the only kind that IE has trouble with,\n \t// so let's test with it too.\n-\tdiv = jQuery( \"<div/>\" ).html( \"<object height='355' width='425' classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'>  <param name='movie' value='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='wmode' value='transparent'> </object>\" );\n+\tdiv = jQuery( \"<div></div>\" ).html( \"<object height='355' width='425' classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'>  <param name='movie' value='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='wmode' value='transparent'> </object>\" );\n \n \tclone = div.clone( true );\n \tassert.equal( clone.length, 1, \"One element cloned\" );\n@@ -1546,14 +1546,14 @@ QUnit.test( \"clone()\", function( assert ) {\n \t} )();\n \n \t// and here's a valid one.\n-\tdiv = jQuery( \"<div/>\" ).html( \"<object height='355' width='425' type='application/x-shockwave-flash' data='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='movie' value='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='wmode' value='transparent'> </object>\" );\n+\tdiv = jQuery( \"<div></div>\" ).html( \"<object height='355' width='425' type='application/x-shockwave-flash' data='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='movie' value='http://www.youtube.com/v/3KANI2dpXLw&amp;hl=en'>  <param name='wmode' value='transparent'> </object>\" );\n \n \tclone = div.clone( true );\n \tassert.equal( clone.length, 1, \"One element cloned\" );\n \tassert.equal( clone.html(), div.html(), \"Element contents cloned\" );\n \tassert.equal( clone[ 0 ].nodeName.toUpperCase(), \"DIV\", \"DIV element cloned\" );\n \n-\tdiv = jQuery( \"<div/>\" ).data( { \"a\": true } );\n+\tdiv = jQuery( \"<div></div>\" ).data( { \"a\": true } );\n \tclone = div.clone( true );\n \tassert.equal( clone.data( \"a\" ), true, \"Data cloned.\" );\n \tclone.data( \"a\", false );\n@@ -1688,12 +1688,12 @@ function testHtml( valueObj, assert ) {\n \t\tdiv = jQuery( \"<div></div>\" ),\n \t\tfixture = jQuery( \"#qunit-fixture\" );\n \n-\tdiv.html( valueObj( \"<div id='parent_1'><div id='child_1'/></div><div id='parent_2'/>\" ) );\n+\tdiv.html( valueObj( \"<div id='parent_1'><div id='child_1'></div></div><div id='parent_2'></div>\" ) );\n \tassert.equal( div.children().length, 2, \"Found children\" );\n \tassert.equal( div.children().children().length, 1, \"Found grandchild\" );\n \n \tactual = []; expected = [];\n-\ttmp = jQuery( \"<map/>\" ).html( valueObj( \"<area alt='area'/>\" ) ).each( function() {\n+\ttmp = jQuery( \"<map></map>\" ).html( valueObj( \"<area alt='area'></area>\" ) ).each( function() {\n \t\texpected.push( \"AREA\" );\n \t\tactual.push( childNodeNames( this ) );\n \t} );\n@@ -1748,7 +1748,7 @@ function testHtml( valueObj, assert ) {\n \tassert.equal( expected.length, 1, \"Expecting one parent\" );\n \tassert.deepEqual( actual, expected, \"Found the inserted style element\" );\n \n-\tfixture.html( valueObj( \"<select/>\" ) );\n+\tfixture.html( valueObj( \"<select></select>\" ) );\n \tjQuery( \"#qunit-fixture select\" ).html( valueObj( \"<option>O1</option><option selected='selected'>O2</option><option>O3</option>\" ) );\n \tassert.equal( jQuery( \"#qunit-fixture select\" ).val(), \"O2\", \"Selected option correct\" );\n \n@@ -1903,7 +1903,7 @@ QUnit.test( \"html(Function) with incoming value -- jQuery.contents()\", function(\n \n \tassert.equal( j.html().replace( / xmlns=\"[^\"]+\"/g, \"\" ).toLowerCase(), \"<b>bold</b>\", \"Check node,textnode,comment with html()\" );\n \n-\t$div = jQuery( \"<div />\" );\n+\t$div = jQuery( \"<div></div>\" );\n \n \tassert.equal( $div.html( function( i, val ) {\n \t\tassert.equal( val, \"\", \"Make sure the incoming value is correct.\" );\n@@ -1915,7 +1915,7 @@ QUnit.test( \"html(Function) with incoming value -- jQuery.contents()\", function(\n \t\treturn 0;\n \t} ).html(), \"0\", \"Setting a zero as html\" );\n \n-\t$div2 = jQuery( \"<div/>\" );\n+\t$div2 = jQuery( \"<div></div>\" );\n \tinsert = \"&lt;div&gt;hello1&lt;/div&gt;\";\n \tassert.equal( $div2.html( function( i, val ) {\n \t\tassert.equal( val, \"\", \"Make sure the incoming value is correct.\" );\n@@ -2211,7 +2211,7 @@ QUnit.test( \"jQuery.cleanData\", function( assert ) {\n QUnit.test( \"jQuery.cleanData eliminates all private data (gh-2127)\", function( assert ) {\n \tassert.expect( 3 );\n \n-\tvar div = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" );\n+\tvar div = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" );\n \n \tjQuery._data( div[ 0 ], \"gh-2127\", \"testing\" );\n \n@@ -2231,7 +2231,7 @@ QUnit.test( \"jQuery.cleanData eliminates all public data\", function( assert ) {\n \tassert.expect( 3 );\n \n \tvar key,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \tdiv.data( \"some\", \"data\" );\n \tassert.ok( !jQuery.isEmptyObject( jQuery.data( div[ 0 ] ) ),  \"Ensure some public data exists\" );\n \n@@ -2253,7 +2253,7 @@ QUnit.test( \"domManip plain-text caching (trac-6779)\", function( assert ) {\n \n \t// DOM manipulation fails if added text matches an Object method\n \tvar i,\n-\t\t$f = jQuery( \"<div />\" ).appendTo( \"#qunit-fixture\" ),\n+\t\t$f = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tbad = [ \"start-\", \"toString\", \"hasOwnProperty\", \"append\", \"here&there!\", \"-end\" ];\n \n \tfor ( i = 0; i < bad.length; i++ ) {\n@@ -2422,7 +2422,7 @@ QUnit.test( \"Guard against exceptions when clearing safeChildNodes\", function( a\n \tvar div;\n \n \ttry {\n-\t\tdiv = jQuery( \"<div/><hr/><code/><b/>\" );\n+\t\tdiv = jQuery( \"<div></div><hr/><code></code><b></b>\" );\n \t} catch ( e ) {}\n \n \tassert.ok( div && div.jquery, \"Created nodes safely, guarded against exceptions on safeChildNodes[ -1 ]\" );\n@@ -2432,11 +2432,11 @@ QUnit.test( \"Ensure oldIE creates a new set on appendTo (#8894)\", function( asse\n \n \tassert.expect( 5 );\n \n-\tassert.strictEqual( jQuery( \"<div/>\" ).clone().addClass( \"test\" ).appendTo( \"<div/>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.clone\" );\n-\tassert.strictEqual( jQuery( \"<div/>\" ).find( \"p\" ).end().addClass( \"test\" ).appendTo( \"<div/>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.fn.find\" );\n-\tassert.strictEqual( jQuery( \"<div/>\" ).text( \"test\" ).addClass( \"test\" ).appendTo( \"<div/>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.fn.text\" );\n-\tassert.strictEqual( jQuery( \"<bdi/>\" ).clone().addClass( \"test\" ).appendTo( \"<div/>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after clone html5 element\" );\n-\tassert.strictEqual( jQuery( \"<p/>\" ).appendTo( \"<div/>\" ).end().length, jQuery( \"<p>test</p>\" ).appendTo( \"<div/>\" ).end().length, \"Elements created with createElement and with createDocumentFragment should be treated alike\" );\n+\tassert.strictEqual( jQuery( \"<div></div>\" ).clone().addClass( \"test\" ).appendTo( \"<div></div>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.clone\" );\n+\tassert.strictEqual( jQuery( \"<div></div>\" ).find( \"p\" ).end().addClass( \"test\" ).appendTo( \"<div></div>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.fn.find\" );\n+\tassert.strictEqual( jQuery( \"<div></div>\" ).text( \"test\" ).addClass( \"test\" ).appendTo( \"<div></div>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after jQuery.fn.text\" );\n+\tassert.strictEqual( jQuery( \"<bdi></bdi>\" ).clone().addClass( \"test\" ).appendTo( \"<div></div>\" ).end().end().hasClass( \"test\" ), false, \"Check jQuery.fn.appendTo after clone html5 element\" );\n+\tassert.strictEqual( jQuery( \"<p></p>\" ).appendTo( \"<div></div>\" ).end().length, jQuery( \"<p>test</p>\" ).appendTo( \"<div></div>\" ).end().length, \"Elements created with createElement and with createDocumentFragment should be treated alike\" );\n } );\n \n QUnit.test( \"html() - script exceptions bubble (#11743)\", function( assert ) {\n@@ -2526,7 +2526,7 @@ QUnit.test( \"script evaluation (#11795)\", function( assert ) {\n \t\t\t\"<script>QUnit.assert.ok( true, 'evaluated: inner no type' );</script>\",\n \t\t\"</div>\"\n \t].join( \"\" ) );\n-\tscriptsIn.appendTo( jQuery( \"<div class='detached'/>\" ) );\n+\tscriptsIn.appendTo( jQuery( \"<div class='detached'></div>\" ) );\n \tobjGlobal.ok = isOk;\n \n \tscriptsOut = fixture.append( scriptsIn ).find( \"script\" );\n@@ -2543,7 +2543,7 @@ QUnit.test( \"script evaluation (#11795)\", function( assert ) {\n \n \tif ( jQuery.ajax ) {\n \t\tGlobals.register( \"testBar\" );\n-\t\tjQuery( \"#qunit-fixture\" ).append( \"<script src='\" + url( \"mock.php?action=testbar\" ) + \"'/>\" );\n+\t\tjQuery( \"#qunit-fixture\" ).append( \"<script src='\" + url( \"mock.php?action=testbar\" ) + \"'></script>\" );\n \t\tassert.strictEqual( window.testBar, \"bar\", \"Global script evaluation\" );\n \t} else {\n \t\tassert.ok( true, \"No jQuery.ajax\" );\n@@ -2565,7 +2565,7 @@ QUnit[ jQuery.ajax ? \"test\" : \"skip\" ]( \"jQuery._evalUrl (#12838)\", function( as\n \t\tassert.equal( ( input.url || input ).slice( -1 ), expectedArgument, message );\n \t\texpectedArgument++;\n \t};\n-\tjQuery( \"#qunit-fixture\" ).append( \"<script src='1'/><script src='2'/>\" );\n+\tjQuery( \"#qunit-fixture\" ).append( \"<script src='1'></script><script src='2'></script>\" );\n \tassert.equal( expectedArgument, 3, \"synchronous execution\" );\n \n \tmessage = \"custom implementation\";\n@@ -2574,7 +2574,7 @@ QUnit[ jQuery.ajax ? \"test\" : \"skip\" ]( \"jQuery._evalUrl (#12838)\", function( as\n \tjQuery.ajax = function( options ) {\n \t\tassert.strictEqual( options, {}, \"Unexpected call to jQuery.ajax\" );\n \t};\n-\tjQuery( \"#qunit-fixture\" ).append( \"<script src='3'/><script src='4'/>\" );\n+\tjQuery( \"#qunit-fixture\" ).append( \"<script src='3'></script><script src='4'></script>\" );\n \n \tjQuery.ajax = ajax;\n \tjQuery._evalUrl = evalUrl;\n@@ -2588,7 +2588,7 @@ QUnit.test( \"jQuery.htmlPrefilter (gh-1747)\", function( assert ) {\n \t\tinvocations = 0,\n \t\tdone = assert.async(),\n \t\thtmlPrefilter = jQuery.htmlPrefilter,\n-\t\tfixture = jQuery( \"<div/>\" ).appendTo( \"#qunit-fixture\" ),\n+\t\tfixture = jQuery( \"<div></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tpoison = \"<script>jQuery.htmlPrefilter.assert.ok( false, 'script not executed' );</script>\";\n \n \tjQuery.htmlPrefilter = function( html ) {\n@@ -2604,7 +2604,7 @@ QUnit.test( \"jQuery.htmlPrefilter (gh-1747)\", function( assert ) {\n \texpectedArgument = \"A-\" + poison + \"B-\" + poison + poison + \"C-\";\n \tfixture.html( expectedArgument );\n \n-\texpectedArgument = \"D-\" + poison + \"E-\" + \"<del/><div>\" + poison + poison + \"</div>\" + \"F-\";\n+\texpectedArgument = \"D-\" + poison + \"E-\" + \"<del></del><div>\" + poison + poison + \"</div>\" + \"F-\";\n \tfixture.append( expectedArgument );\n \n \texpectedArgument = poison;\n@@ -2659,7 +2659,7 @@ QUnit.test( \"Index for function argument should be received (#13094)\", function(\n \n \tvar i = 0;\n \n-\tjQuery( \"<div/><div/>\" ).before( function( index ) {\n+\tjQuery( \"<div></div><div></div>\" ).before( function( index ) {\n \t\tassert.equal( index, i++, \"Index should be correct\" );\n \t} );\n \n@@ -2685,7 +2685,7 @@ QUnit.test( \"Make sure specific elements with content created correctly (#13232)\n \t\t\tthead: \"<tr><td>thead</td></tr>\",\n \t\t\ttbody: \"<tr><td>tbody</td></tr>\",\n \t\t\ttfoot: \"<tr><td>tfoot</td></tr>\",\n-\t\t\tcolgroup: \"<col span='5' />\",\n+\t\t\tcolgroup: \"<col span='5'></col>\",\n \t\t\tcaption: \"caption\",\n \t\t\ttr: \"<td>tr</td>\",\n \t\t\tth: \"th\",\n@@ -2702,23 +2702,19 @@ QUnit.test( \"Make sure specific elements with content created correctly (#13232)\n \t\targs.push( html );\n \t} );\n \n-\tjQuery.fn.append.apply( jQuery( \"<div/>\" ), args ).children().each( function( i ) {\n+\tjQuery.fn.append.apply( jQuery( \"<div></div>\" ), args ).children().each( function( i ) {\n \t\tassert.ok( this.nodeName.toLowerCase() === results[ i ] );\n \t} );\n } );\n \n QUnit.test( \"Validate creation of multiple quantities of certain elements (#13818)\", function( assert ) {\n-\tassert.expect( 44 );\n+\tassert.expect( 22 );\n \n \tvar tags = [ \"thead\", \"tbody\", \"tfoot\", \"colgroup\", \"col\", \"caption\", \"tr\", \"th\", \"td\", \"optgroup\", \"option\" ];\n \n \tjQuery.each( tags, function( index, tag ) {\n-\t\tjQuery( \"<\" + tag + \"/><\" + tag + \"/>\" ).each( function() {\n-\t\t\tassert.ok( this.nodeName.toLowerCase() === tag, tag + \" empty elements created correctly\" );\n-\t\t} );\n-\n-\t\tjQuery( \"<\" + this + \"></\" + tag + \"><\" + tag + \"></\" + tag + \">\" ).each( function() {\n-\t\t\tassert.ok( this.nodeName.toLowerCase() === tag, tag + \" elements with closing tag created correctly\" );\n+\t\tjQuery( \"<\" + tag + \"></\" + tag + \"><\" + tag + \"></\" + tag + \">\" ).each( function() {\n+\t\t\tassert.ok( this.nodeName.toLowerCase() === tag, tag + \" elements created correctly\" );\n \t\t} );\n \t} );\n } );\n@@ -2766,7 +2762,7 @@ QUnit.test( \"Make sure tfoot element will not be appended to tbody element of ta\n \ttable.appendChild( document.createElement( \"tbody\" ) );\n \tdocument.getElementById( \"qunit-fixture\" ).appendChild( table );\n \n-\tjQuery( table ).append( \"<tfoot/>\" );\n+\tjQuery( table ).append( \"<tfoot></tfoot>\" );\n \n \t// Lowercase and replace spaces to remove possible browser inconsistencies\n \thtml = table.innerHTML.toLowerCase().replace( /\\s/g, \"\" );\n@@ -2805,7 +2801,7 @@ QUnit.test( \"Make sure col element is appended correctly\", function( assert ) {\n \n \tjQuery( table ).appendTo( \"#qunit-fixture\" );\n \n-\tjQuery( \"<col width='150'/>\" ).prependTo( table );\n+\tjQuery( \"<col width='150'></col>\" ).prependTo( table );\n \n \tassert.strictEqual( table.find( \"td\" ).width(), 150 );\n } );\n@@ -2820,7 +2816,7 @@ QUnit.test( \"Make sure tr is not appended to the wrong tbody (gh-3439)\", functio\n \t\t\t\"</td></tr></thead>\",\n \t\tnewRow = \"<tr><td>added</td></tr>\",\n \t\thtmlExpected = htmlIn.replace( \"</thead>\", \"</thead>\" + newRow ),\n-\t\ttable = supportjQuery( \"<table/>\" ).html( htmlIn ).appendTo( \"#qunit-fixture\" )[ 0 ];\n+\t\ttable = supportjQuery( \"<table></table>\" ).html( htmlIn ).appendTo( \"#qunit-fixture\" )[ 0 ];\n \n \tjQuery( table ).append( newRow );\n \n@@ -2835,7 +2831,7 @@ QUnit.test( \"Make sure tags with single-character names are found (gh-4124)\", fu\n \n \tvar htmlOut,\n \t\thtmlIn = \"<p>foo<!--<td>--></p>\",\n-\t\t$el = jQuery( \"<div/>\" );\n+\t\t$el = jQuery( \"<div></div>\" );\n \n \t$el.html( htmlIn );\n \n@@ -2883,7 +2879,7 @@ QUnit.test( \"Ignore content from unsuccessful responses (gh-4126)\", function( as\n \n \ttry {\n \t\tjQuery( \"#qunit-fixture\" ).append(\n-\t\t\t\"<script src='\" + url( \"mock.php?action=error\" ) + \"'/>\" );\n+\t\t\t\"<script src='\" + url( \"mock.php?action=error\" ) + \"'></script>\" );\n \t\tassert.ok( true, \"no error thrown from embedding script with unsuccessful-response src\" );\n \t} catch ( e ) {\n \t\tthrow e;"
        },
        {
          "filename": "test/unit/offset.js",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -5,7 +5,7 @@ if ( !jQuery.fn.offset ) {\n }\n \n var supportsFixedPosition, supportsScroll, alwaysScrollable,\n-\tforceScroll = supportjQuery( \"<div/>\" ).css( { width: 2000, height: 2000 } ),\n+\tforceScroll = supportjQuery( \"<div></div>\" ).css( { width: 2000, height: 2000 } ),\n \tcheckSupport = function( assert ) {\n \n \t\t// Only run once\n@@ -81,7 +81,7 @@ QUnit.test( \"disconnected element\", function( assert ) {\n QUnit.test( \"hidden (display: none) element\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar node = jQuery( \"<div style='display: none' />\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar node = jQuery( \"<div style='display: none'></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tresult = node.offset();\n \n \tnode.remove();\n@@ -98,7 +98,7 @@ QUnit.test( \"hidden (display: none) element\", function( assert ) {\n QUnit.test( \"0 sized element\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar node = jQuery( \"<div style='margin: 5px; width: 0; height: 0' />\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar node = jQuery( \"<div style='margin: 5px; width: 0; height: 0'></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tresult = node.offset();\n \n \tnode.remove();\n@@ -112,7 +112,7 @@ QUnit.test( \"0 sized element\", function( assert ) {\n QUnit.test( \"hidden (visibility: hidden) element\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar node = jQuery( \"<div style='margin: 5px; visibility: hidden' />\" ).appendTo( \"#qunit-fixture\" ),\n+\tvar node = jQuery( \"<div style='margin: 5px; visibility: hidden'></div>\" ).appendTo( \"#qunit-fixture\" ),\n \t\tresult = node.offset();\n \n \tnode.remove();\n@@ -785,7 +785,7 @@ QUnit.test( \"offsetParent\", function( assert ) {\n QUnit.test( \"fractions (see #7730 and #7885)\", function( assert ) {\n \tassert.expect( 2 );\n \n-\tjQuery( \"body\" ).append( \"<div id='fractions'/>\" );\n+\tjQuery( \"body\" ).append( \"<div id='fractions'></div>\" );\n \n \tvar result,\n \t\texpected = { \"top\": 1000, \"left\": 1000 },"
        },
        {
          "filename": "test/unit/selector.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -92,7 +92,7 @@ QUnit.test( \"name\", function( assert ) {\n QUnit.test( \"selectors with comma\", function( assert ) {\n \tassert.expect( 4 );\n \n-\tvar fixture = jQuery( \"<div><h2><span/></h2><div><p><span/></p><p/></div></div>\" );\n+\tvar fixture = jQuery( \"<div><h2><span></span></h2><div><p><span></span></p><p></p></div></div>\" );\n \n \tassert.equal( fixture.find( \"h2, div p\" ).filter( \"p\" ).length, 2, \"has to find two <p>\" );\n \tassert.equal( fixture.find( \"h2, div p\" ).filter( \"h2\" ).length, 1, \"has to find one <h2>\" );\n@@ -275,7 +275,7 @@ QUnit.test( \"attributes\", function( assert ) {\n QUnit.test( \"disconnected nodes\", function( assert ) {\n \tassert.expect( 1 );\n \n-\tvar $div = jQuery( \"<div/>\" );\n+\tvar $div = jQuery( \"<div></div>\" );\n \tassert.equal( $div.is( \"div\" ), true, \"Make sure .is('nodeName') works on disconnected nodes.\" );\n } );\n "
        },
        {
          "filename": "test/unit/traversing.js",
          "status": "modified",
          "additions": 11,
          "deletions": 11,
          "patch": "@@ -197,7 +197,7 @@ QUnit.test( \"index()\", function( assert ) {\n \n \tassert.equal( jQuery( \"#text2\" ).index(), 2, \"Returns the index of a child amongst its siblings\" );\n \n-\tassert.equal( jQuery( \"<div/>\" ).index(), -1, \"Node without parent returns -1\" );\n+\tassert.equal( jQuery( \"<div></div>\" ).index(), -1, \"Node without parent returns -1\" );\n } );\n \n QUnit.test( \"index(Object|String|undefined)\", function( assert ) {\n@@ -502,7 +502,7 @@ QUnit.test( \"has(Element)\", function( assert ) {\n \tobj = jQuery( \"#qunit-fixture\" ).has( jQuery( \"#sndp\" )[ 0 ] );\n \tassert.deepEqual( obj.get(), q( \"qunit-fixture\" ), \"Keeps elements that have the element as a descendant\" );\n \n-\tdetached = jQuery( \"<a><b><i/></b></a>\" );\n+\tdetached = jQuery( \"<a><b><i></i></b></a>\" );\n \tassert.deepEqual( detached.has( detached.find( \"i\" )[ 0 ] ).get(), detached.get(), \"...Even when detached\" );\n \n \tmultipleParent = jQuery( \"#qunit-fixture, #header\" ).has( jQuery( \"#sndp\" )[ 0 ] );\n@@ -517,7 +517,7 @@ QUnit.test( \"has(Selector)\", function( assert ) {\n \tobj = jQuery( \"#qunit-fixture\" ).has( \"#sndp\" );\n \tassert.deepEqual( obj.get(), q( \"qunit-fixture\" ), \"Keeps elements that have any element matching the selector as a descendant\" );\n \n-\tdetached = jQuery( \"<a><b><i/></b></a>\" );\n+\tdetached = jQuery( \"<a><b><i></i></b></a>\" );\n \tassert.deepEqual( detached.has( \"i\" ).get(), detached.get(), \"...Even when detached\" );\n \n \tmultipleParent = jQuery( \"#qunit-fixture, #header\" ).has( \"#sndp\" );\n@@ -538,7 +538,7 @@ QUnit.test( \"has(Arrayish)\", function( assert ) {\n \tsimple = jQuery( \"#qunit-fixture\" ).has( jQuery( \"#sndp\" ) );\n \tassert.deepEqual( simple.get(), q( \"qunit-fixture\" ), \"Keeps elements that have any element in the jQuery list as a descendant\" );\n \n-\tdetached = jQuery( \"<a><b><i/></b></a>\" );\n+\tdetached = jQuery( \"<a><b><i></i></b></a>\" );\n \tassert.deepEqual( detached.has( detached.find( \"i\" ) ).get(), detached.get(), \"...Even when detached\" );\n \n \tmultipleParent = jQuery( \"#qunit-fixture, #header\" ).has( jQuery( \"#sndp\" ) );\n@@ -566,7 +566,7 @@ QUnit.test( \"siblings([String])\", function( assert ) {\n \tvar set = q( \"sndp\", \"en\", \"sap\" );\n \tassert.deepEqual( jQuery( \"#en, #sndp\" ).siblings().get(), set, \"Check for unique results from siblings\" );\n \tassert.deepEqual( jQuery( \"#option5a\" ).siblings( \"option[data-attr]\" ).get(), q( \"option5c\" ), \"Has attribute selector in siblings (#9261)\" );\n-\tassert.equal( jQuery( \"<a/>\" ).siblings().length, 0, \"Detached elements have no siblings (#11370)\" );\n+\tassert.equal( jQuery( \"<a></a>\" ).siblings().length, 0, \"Detached elements have no siblings (#11370)\" );\n } );\n \n QUnit[ jQuery.find.compile ? \"test\" : \"skip\" ]( \"siblings([String])\", function( assert ) {\n@@ -733,7 +733,7 @@ QUnit.test( \"contents()\", function( assert ) {\n \n \tassert.equal( jQuery( \"div\", ibody ).text(), \"span text\", \"Make sure the correct div is still left after deletion in IFrame\" );\n \n-\tjQuery( \"<table/>\", ibody ).append( \"<tr><td>cell</td></tr>\" ).appendTo( ibody );\n+\tjQuery( \"<table></table>\", ibody ).append( \"<tr><td>cell</td></tr>\" ).appendTo( ibody );\n \tjQuery( \"table\", ibody ).remove();\n \tassert.equal( jQuery( \"div\", ibody ).length, 1, \"Check for JS error on add and delete of a table in IFrame\" );\n \n@@ -761,7 +761,7 @@ QUnit.test( \"contents() for <template />\", function( assert ) {\n \n \tassert.equal( contents.find( \"span\" ).text(), \"Hello, Web Component!\", \"Find span in template and check its text\" );\n \n-\tjQuery( \"<div id='templateTest' />\" ).append(\n+\tjQuery( \"<div id='templateTest'></div>\" ).append(\n \t\t\tjQuery( jQuery.map( contents, function( node ) {\n \t\t\t\t\treturn document.importNode( node, true );\n \t\t\t} ) )\n@@ -875,7 +875,7 @@ QUnit.test( \"add(String selector)\", function( assert ) {\n \t\t\"Check elements from document\"\n \t);\n \n-\tdivs = jQuery( \"<div/>\" ).add( \"#sndp\" );\n+\tdivs = jQuery( \"<div></div>\" ).add( \"#sndp\" );\n \tassert.ok( divs[ 0 ].parentNode, \"Sort with the disconnected node last (started with disconnected first).\" );\n } );\n \n@@ -893,7 +893,7 @@ QUnit.test( \"add(String html)\", function( assert ) {\n \tassert.expect( 3 );\n \n \tvar x,\n-\t\tdivs = jQuery( \"#sndp\" ).add( \"<div/>\" );\n+\t\tdivs = jQuery( \"#sndp\" ).add( \"<div></div>\" );\n \n \tassert.ok( !divs[ 1 ].parentNode, \"Sort with the disconnected node last.\" );\n \n@@ -906,7 +906,7 @@ QUnit.test( \"add(jQuery)\", function( assert ) {\n \tassert.expect( 4 );\n \n \tvar x,\n-\t\ttmp = jQuery( \"<div/>\" );\n+\t\ttmp = jQuery( \"<div></div>\" );\n \n \tx = jQuery( [] )\n \t.add(\n@@ -935,7 +935,7 @@ QUnit.test( \"add(Element)\", function( assert ) {\n \tassert.expect( 2 );\n \n \tvar x,\n-\t\ttmp = jQuery( \"<div/>\" );\n+\t\ttmp = jQuery( \"<div></div>\" );\n \n \tx = jQuery( [] ).add( jQuery( \"<p id='x1'>xxx</p>\" ).appendTo( tmp )[ 0 ] ).add( jQuery( \"<p id='x2'>xxx</p>\" ).appendTo( tmp )[ 0 ] );\n \tassert.equal( x[ 0 ].id, \"x1\", \"Check on-the-fly element1\" );"
        },
        {
          "filename": "test/unit/wrap.js",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -74,7 +74,7 @@ function testWrap( val, assert ) {\n \t\tcacheLength++;\n \t}\n \n-\tj = jQuery( \"<label/>\" ).wrap( val( \"<li/>\" ) );\n+\tj = jQuery( \"<label></label>\" ).wrap( val( \"<li></li>\" ) );\n \tassert.equal(\n \t\tj[ 0 ] .nodeName.toUpperCase(), \"LABEL\", \"Element is a label\"\n \t);\n@@ -90,7 +90,7 @@ function testWrap( val, assert ) {\n \t);\n \n \t// Wrap an element containing a text node\n-\tj = jQuery( \"<span/>\" ).wrap( \"<div>test</div>\" );\n+\tj = jQuery( \"<span></span>\" ).wrap( \"<div>test</div>\" );\n \tassert.equal(\n \t\tj[ 0 ].previousSibling.nodeType, 3, \"Make sure the previous node is a text element\"\n \t);\n@@ -112,7 +112,7 @@ function testWrap( val, assert ) {\n \t);\n \n \t// Wrap an element with a jQuery set\n-\tj = jQuery( \"<span/>\" ).wrap( jQuery( \"<div></div>\" ) );\n+\tj = jQuery( \"<span></span>\" ).wrap( jQuery( \"<div></div>\" ) );\n \tassert.equal(\n \t\tj[ 0 ].parentNode.nodeName.toLowerCase(), \"div\", \"Wrapping works.\"\n \t);\n@@ -128,7 +128,7 @@ function testWrap( val, assert ) {\n \t\tjQuery( this ).off();\n \t} );\n \n-\tj = jQuery( \"<span/>\" ).wrap( result );\n+\tj = jQuery( \"<span></span>\" ).wrap( result );\n \tassert.equal(\n \t\tj[ 0 ].parentNode.nodeName.toLowerCase(), \"div\", \"Wrapping works.\"\n \t);\n@@ -313,7 +313,7 @@ QUnit.test( \"wrapInner(Element)\", function( assert ) {\n \tassert.expect( 5 );\n \n \tvar num,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \n \tnum = jQuery( \"#first\" ).children().length;\n \tjQuery( \"#first\" ).wrapInner( document.getElementById( \"empty\" ) );\n@@ -375,7 +375,7 @@ QUnit.test( \"wrapInner(Function) returns Element\", function( assert ) {\n \n \tvar num,\n     val = manipulationFunctionReturningObj,\n-\t\tdiv = jQuery( \"<div/>\" );\n+\t\tdiv = jQuery( \"<div></div>\" );\n \n \tnum = jQuery( \"#first\" ).children().length;\n \tjQuery( \"#first\" ).wrapInner( val( document.getElementById( \"empty\" ) ) );"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 17,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "098591e6fd3222e64b59af92c8849f5d8963d43c",
            "date": "2025-01-14T10:29:12Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "733e62d20328dd3e5b226fd9793b159637d922b8",
            "date": "2025-01-14T03:36:10Z",
            "author_login": "timmywil"
          },
          {
            "sha": "4466770992d5833358169d0248c4deedadea1a96",
            "date": "2024-12-16T18:00:50Z",
            "author_login": "mgol"
          },
          {
            "sha": "0e123509d529456ddf130abb97e6266b53f62c50",
            "date": "2024-12-10T23:38:27Z",
            "author_login": "mgol"
          },
          {
            "sha": "75b48e6a2bff1258ca4d85ab7887e78772a67a69",
            "date": "2024-12-08T23:33:15Z",
            "author_login": "mgol"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-04-29T22:15:11.903",
    "last_modified": "2024-11-21T04:56:36.110",
    "fix_date": "2020-03-16T20:49:29Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00067.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00085.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00039.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/162159/jQuery-1.2-Cross-Site-Scripting.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jquery.com/upgrade-guide/3.5/",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r0483ba0072783c2e1bfea613984bfb3c86e73ba8879d780dc1cc7d36%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r49ce4243b4738dd763caeb27fa8ad6afb426ae3e8c011ff00b8b1f48%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r54565a8f025c7c4f305355fdfd75b68eca442eebdb5f31c2e7d977ae%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r564585d97bc069137e64f521e68ba490c7c9c5b342df5d73c49a0760%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r706cfbc098420f7113968cc377247ec3d1439bce42e679c11c609e2d%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r8f70b0f65d6bedf316ecd899371fd89e65333bc988f6326d2956735c%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rbb448222ba62c430e21e13f940be4cb5cfc373cd3bce56b48c0ffa67%40%3Cdev.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdf44341677cf7eec7e9aa96dcf3f37ed709544863d619cca8c36f133%40%3Ccommits.airflow.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/re4ae96fa5c1a2fe71ccbb7b7ac1538bd0cb677be270a2bf6e2f8d108%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rede9cfaa756e050a3d83045008f84a62802fc68c17f2b4eabeaae5e4%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/ree3bd8ddb23df5fa4e372d11c226830ea3650056b1059f3965b3fce2%40%3Cissues.flink.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/03/msg00033.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AVKYXLWCLZBV2N7M46KYK4LVA5OXWPBY/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QPN2L2XVQGUA2V5HNQJWHK3APSK3VN7K/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SAPQVX3XDNPGFT26QAQ6AJIXZZBZ4CD4/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SFP4UK4EGP4AFH2MWYJ5A5Z4I7XVFQ6B/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VOE7P7APPRQKD4FGNHBKJPDY6FFCOH3W/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202007-03",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20200511-0006/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4693",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.drupal.org/sa-core-2020-002",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2022.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2020.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2020-10",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2020-11",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2021-02",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2021-10",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00067.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00085.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00039.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/162159/jQuery-1.2-Cross-Site-Scripting.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jquery.com/upgrade-guide/3.5/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r0483ba0072783c2e1bfea613984bfb3c86e73ba8879d780dc1cc7d36%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r49ce4243b4738dd763caeb27fa8ad6afb426ae3e8c011ff00b8b1f48%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r54565a8f025c7c4f305355fdfd75b68eca442eebdb5f31c2e7d977ae%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r564585d97bc069137e64f521e68ba490c7c9c5b342df5d73c49a0760%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r706cfbc098420f7113968cc377247ec3d1439bce42e679c11c609e2d%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r8f70b0f65d6bedf316ecd899371fd89e65333bc988f6326d2956735c%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rbb448222ba62c430e21e13f940be4cb5cfc373cd3bce56b48c0ffa67%40%3Cdev.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rdf44341677cf7eec7e9aa96dcf3f37ed709544863d619cca8c36f133%40%3Ccommits.airflow.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/re4ae96fa5c1a2fe71ccbb7b7ac1538bd0cb677be270a2bf6e2f8d108%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/rede9cfaa756e050a3d83045008f84a62802fc68c17f2b4eabeaae5e4%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/ree3bd8ddb23df5fa4e372d11c226830ea3650056b1059f3965b3fce2%40%3Cissues.flink.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/03/msg00033.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/08/msg00040.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AVKYXLWCLZBV2N7M46KYK4LVA5OXWPBY/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QPN2L2XVQGUA2V5HNQJWHK3APSK3VN7K/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SAPQVX3XDNPGFT26QAQ6AJIXZZBZ4CD4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SFP4UK4EGP4AFH2MWYJ5A5Z4I7XVFQ6B/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VOE7P7APPRQKD4FGNHBKJPDY6FFCOH3W/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202007-03",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20200511-0006/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4693",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.drupal.org/sa-core-2020-002",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2020-10",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2020-11",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2021-02",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.tenable.com/security/tns-2021-10",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.965338",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jquery",
    "owner": "jquery",
    "created_at": "2009-04-03T15:20:14Z",
    "updated_at": "2025-01-14T12:02:49Z",
    "pushed_at": "2025-01-14T10:32:33Z",
    "size": 34583,
    "stars": 59292,
    "forks": 20572,
    "open_issues": 89,
    "watchers": 59292,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.12-stable",
      "2.2-stable",
      "3.x-stable",
      "3.6-stable",
      "main"
    ],
    "languages": {
      "JavaScript": 1287796,
      "HTML": 67606,
      "PHP": 9378,
      "CSS": 2254,
      "Shell": 1837
    },
    "commit_activity": {
      "total_commits_last_year": 88,
      "avg_commits_per_week": 1.6923076923076923,
      "days_active_last_year": 60
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:15:12.449437"
  }
}