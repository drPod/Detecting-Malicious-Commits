{
  "cve_id": "CVE-2020-11080",
  "github_data": {
    "repository": "nghttp2/nghttp2",
    "fix_commit": "336a98feb0d56b9ac54e12736b18785c27f75090",
    "related_commits": [
      "336a98feb0d56b9ac54e12736b18785c27f75090",
      "f8da73bd042f810f34d19f9eae02b46d870af394",
      "336a98feb0d56b9ac54e12736b18785c27f75090",
      "f8da73bd042f810f34d19f9eae02b46d870af394"
    ],
    "patch_url": "https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090.patch",
    "fix_commit_details": {
      "sha": "336a98feb0d56b9ac54e12736b18785c27f75090",
      "commit_date": "2020-04-17T23:53:51Z",
      "author": {
        "login": "jasnell",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Implement max settings option",
        "length": 29,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 124,
        "additions": 124,
        "deletions": 0
      },
      "files": [
        {
          "filename": "doc/CMakeLists.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -42,6 +42,7 @@ set(APIDOCS\n   nghttp2_option_set_no_recv_client_magic.rst\n   nghttp2_option_set_peer_max_concurrent_streams.rst\n   nghttp2_option_set_user_recv_extension_type.rst\n+  nghttp2_option_set_max_settings.rst\n   nghttp2_pack_settings_payload.rst\n   nghttp2_priority_spec_check_default.rst\n   nghttp2_priority_spec_default_init.rst"
        },
        {
          "filename": "doc/Makefile.am",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -69,6 +69,7 @@ APIDOCS= \\\n \tnghttp2_option_set_peer_max_concurrent_streams.rst \\\n \tnghttp2_option_set_user_recv_extension_type.rst \\\n \tnghttp2_option_set_max_outbound_ack.rst \\\n+\tnghttp2_option_set_max_settings.rst \\\n \tnghttp2_pack_settings_payload.rst \\\n \tnghttp2_priority_spec_check_default.rst \\\n \tnghttp2_priority_spec_default_init.rst \\"
        },
        {
          "filename": "lib/includes/nghttp2/nghttp2.h",
          "status": "modified",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -228,6 +228,13 @@ typedef struct {\n  */\n #define NGHTTP2_CLIENT_MAGIC_LEN 24\n \n+/**\n+ * @macro\n+ *\n+ * The default max number of settings per SETTINGS frame\n+ */\n+#define NGHTTP2_DEFAULT_MAX_SETTINGS 32\n+\n /**\n  * @enum\n  *\n@@ -398,6 +405,11 @@ typedef enum {\n    * receives an other type of frame.\n    */\n   NGHTTP2_ERR_SETTINGS_EXPECTED = -536,\n+  /**\n+   * When a local endpoint receives too many settings entries\n+   * in a single SETTINGS frame.\n+   */\n+  NGHTTP2_ERR_TOO_MANY_SETTINGS = -537,\n   /**\n    * The errors < :enum:`NGHTTP2_ERR_FATAL` mean that the library is\n    * under unexpected condition and processing was terminated (e.g.,\n@@ -2659,6 +2671,17 @@ NGHTTP2_EXTERN void nghttp2_option_set_no_closed_streams(nghttp2_option *option,\n NGHTTP2_EXTERN void nghttp2_option_set_max_outbound_ack(nghttp2_option *option,\n                                                         size_t val);\n \n+/**\n+ * @function\n+ *\n+ * This function sets the maximum number of SETTINGS entries per\n+ * SETTINGS frame that will be accepted. If more than those entries\n+ * are received, the peer is considered to be misbehaving and session\n+ * will be closed. The default value is 32.\n+ */\n+NGHTTP2_EXTERN void nghttp2_option_set_max_settings(nghttp2_option *option,\n+                                                    size_t val);\n+\n /**\n  * @function\n  *"
        },
        {
          "filename": "lib/nghttp2_helper.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -334,6 +334,8 @@ const char *nghttp2_strerror(int error_code) {\n   case NGHTTP2_ERR_FLOODED:\n     return \"Flooding was detected in this HTTP/2 session, and it must be \"\n            \"closed\";\n+  case NGHTTP2_ERR_TOO_MANY_SETTINGS:\n+    return \"SETTINGS frame contained more than the maximum allowed entries\";\n   default:\n     return \"Unknown error code\";\n   }"
        },
        {
          "filename": "lib/nghttp2_option.c",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -121,3 +121,8 @@ void nghttp2_option_set_max_outbound_ack(nghttp2_option *option, size_t val) {\n   option->opt_set_mask |= NGHTTP2_OPT_MAX_OUTBOUND_ACK;\n   option->max_outbound_ack = val;\n }\n+\n+void nghttp2_option_set_max_settings(nghttp2_option *option, size_t val) {\n+  option->opt_set_mask |= NGHTTP2_OPT_MAX_SETTINGS;\n+  option->max_settings = val;\n+}"
        },
        {
          "filename": "lib/nghttp2_option.h",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -67,6 +67,7 @@ typedef enum {\n   NGHTTP2_OPT_MAX_DEFLATE_DYNAMIC_TABLE_SIZE = 1 << 9,\n   NGHTTP2_OPT_NO_CLOSED_STREAMS = 1 << 10,\n   NGHTTP2_OPT_MAX_OUTBOUND_ACK = 1 << 11,\n+  NGHTTP2_OPT_MAX_SETTINGS = 1 << 12,\n } nghttp2_option_flag;\n \n /**\n@@ -85,6 +86,10 @@ struct nghttp2_option {\n    * NGHTTP2_OPT_MAX_OUTBOUND_ACK\n    */\n   size_t max_outbound_ack;\n+  /**\n+   * NGHTTP2_OPT_MAX_SETTINGS\n+   */\n+  size_t max_settings;\n   /**\n    * Bitwise OR of nghttp2_option_flag to determine that which fields\n    * are specified."
        },
        {
          "filename": "lib/nghttp2_session.c",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -458,6 +458,7 @@ static int session_new(nghttp2_session **session_ptr,\n \n   (*session_ptr)->max_send_header_block_length = NGHTTP2_MAX_HEADERSLEN;\n   (*session_ptr)->max_outbound_ack = NGHTTP2_DEFAULT_MAX_OBQ_FLOOD_ITEM;\n+  (*session_ptr)->max_settings = NGHTTP2_DEFAULT_MAX_SETTINGS;\n \n   if (option) {\n     if ((option->opt_set_mask & NGHTTP2_OPT_NO_AUTO_WINDOW_UPDATE) &&\n@@ -521,6 +522,11 @@ static int session_new(nghttp2_session **session_ptr,\n     if (option->opt_set_mask & NGHTTP2_OPT_MAX_OUTBOUND_ACK) {\n       (*session_ptr)->max_outbound_ack = option->max_outbound_ack;\n     }\n+\n+    if ((option->opt_set_mask & NGHTTP2_OPT_MAX_SETTINGS) &&\n+        option->max_settings) {\n+      (*session_ptr)->max_settings = option->max_settings;\n+    }\n   }\n \n   rv = nghttp2_hd_deflate_init2(&(*session_ptr)->hd_deflater,\n@@ -5657,6 +5663,16 @@ ssize_t nghttp2_session_mem_recv(nghttp2_session *session, const uint8_t *in,\n           iframe->max_niv =\n               iframe->frame.hd.length / NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH + 1;\n \n+          if (iframe->max_niv - 1 > session->max_settings) {\n+            rv = nghttp2_session_terminate_session_with_reason(\n+                session, NGHTTP2_ENHANCE_YOUR_CALM,\n+                \"SETTINGS: too many setting entries\");\n+            if (nghttp2_is_fatal(rv)) {\n+              return rv;\n+            }\n+            return (ssize_t)inlen;\n+          }\n+\n           iframe->iv = nghttp2_mem_malloc(mem, sizeof(nghttp2_settings_entry) *\n                                                    iframe->max_niv);\n \n@@ -7425,6 +7441,11 @@ static int nghttp2_session_upgrade_internal(nghttp2_session *session,\n   if (settings_payloadlen % NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH) {\n     return NGHTTP2_ERR_INVALID_ARGUMENT;\n   }\n+  /* SETTINGS frame contains too many settings */\n+  if (settings_payloadlen / NGHTTP2_FRAME_SETTINGS_ENTRY_LENGTH\n+        > session->max_settings) {\n+    return NGHTTP2_ERR_TOO_MANY_SETTINGS;\n+  }\n   rv = nghttp2_frame_unpack_settings_payload2(&iv, &niv, settings_payload,\n                                               settings_payloadlen, mem);\n   if (rv != 0) {"
        },
        {
          "filename": "lib/nghttp2_session.h",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -267,6 +267,8 @@ struct nghttp2_session {\n   /* The maximum length of header block to send.  Calculated by the\n      same way as nghttp2_hd_deflate_bound() does. */\n   size_t max_send_header_block_length;\n+  /* The maximum number of settings accepted per SETTINGS frame. */\n+  size_t max_settings;\n   /* Next Stream ID. Made unsigned int to detect >= (1 << 31). */\n   uint32_t next_stream_id;\n   /* The last stream ID this session initiated.  For client session,"
        },
        {
          "filename": "tests/main.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -317,6 +317,8 @@ int main() {\n                    test_nghttp2_session_set_local_window_size) ||\n       !CU_add_test(pSuite, \"session_cancel_from_before_frame_send\",\n                    test_nghttp2_session_cancel_from_before_frame_send) ||\n+      !CU_add_test(pSuite, \"session_too_many_settings\",\n+                   test_nghttp2_session_too_many_settings) ||\n       !CU_add_test(pSuite, \"session_removed_closed_stream\",\n                    test_nghttp2_session_removed_closed_stream) ||\n       !CU_add_test(pSuite, \"session_pause_data\","
        },
        {
          "filename": "tests/nghttp2_session_test.c",
          "status": "modified",
          "additions": 61,
          "deletions": 0,
          "patch": "@@ -10614,6 +10614,67 @@ void test_nghttp2_session_cancel_from_before_frame_send(void) {\n   nghttp2_session_del(session);\n }\n \n+void test_nghttp2_session_too_many_settings(void) {\n+  nghttp2_session *session;\n+  nghttp2_option *option;\n+  nghttp2_session_callbacks callbacks;\n+  nghttp2_frame frame;\n+  nghttp2_bufs bufs;\n+  nghttp2_buf *buf;\n+  ssize_t rv;\n+  my_user_data ud;\n+  nghttp2_settings_entry iv[3];\n+  nghttp2_mem *mem;\n+  nghttp2_outbound_item *item;\n+\n+  mem = nghttp2_mem_default();\n+  frame_pack_bufs_init(&bufs);\n+\n+  memset(&callbacks, 0, sizeof(nghttp2_session_callbacks));\n+  callbacks.on_frame_recv_callback = on_frame_recv_callback;\n+  callbacks.send_callback = null_send_callback;\n+\n+  nghttp2_option_new(&option);\n+  nghttp2_option_set_max_settings(option, 1);\n+\n+  nghttp2_session_client_new2(&session, &callbacks, &ud, option);\n+\n+  CU_ASSERT(1 == session->max_settings);\n+\n+  nghttp2_option_del(option);\n+\n+  iv[0].settings_id = NGHTTP2_SETTINGS_HEADER_TABLE_SIZE;\n+  iv[0].value = 3000;\n+\n+  iv[1].settings_id = NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE;\n+  iv[1].value = 16384;\n+\n+  nghttp2_frame_settings_init(&frame.settings, NGHTTP2_FLAG_NONE, dup_iv(iv, 2),\n+                              2);\n+\n+  rv = nghttp2_frame_pack_settings(&bufs, &frame.settings);\n+\n+  CU_ASSERT(0 == rv);\n+  CU_ASSERT(nghttp2_bufs_len(&bufs) > 0);\n+\n+  nghttp2_frame_settings_free(&frame.settings, mem);\n+\n+  buf = &bufs.head->buf;\n+  assert(nghttp2_bufs_len(&bufs) == nghttp2_buf_len(buf));\n+\n+  ud.frame_recv_cb_called = 0;\n+\n+  rv = nghttp2_session_mem_recv(session, buf->pos, nghttp2_buf_len(buf));\n+  CU_ASSERT((ssize_t)nghttp2_buf_len(buf) == rv);\n+\n+  item = nghttp2_session_get_next_ob_item(session);\n+  CU_ASSERT(NGHTTP2_GOAWAY == item->frame.hd.type);\n+\n+  nghttp2_bufs_reset(&bufs);\n+  nghttp2_bufs_free(&bufs);\n+  nghttp2_session_del(session);\n+}\n+\n static void\n prepare_session_removed_closed_stream(nghttp2_session *session,\n                                       nghttp2_hd_deflater *deflater) {"
        },
        {
          "filename": "tests/nghttp2_session_test.h",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -156,6 +156,7 @@ void test_nghttp2_session_repeated_priority_change(void);\n void test_nghttp2_session_repeated_priority_submission(void);\n void test_nghttp2_session_set_local_window_size(void);\n void test_nghttp2_session_cancel_from_before_frame_send(void);\n+void test_nghttp2_session_too_many_settings(void);\n void test_nghttp2_session_removed_closed_stream(void);\n void test_nghttp2_session_pause_data(void);\n void test_nghttp2_session_no_closed_streams(void);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f88c09857dc8819c3a849a67a5e1d8e10503b49f",
            "date": "2025-01-14T09:16:54Z",
            "author_login": "tatsuhiro-t"
          },
          {
            "sha": "3cb06f116d662843cc4fbd82ffd251cd90842532",
            "date": "2025-01-13T14:56:50Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e53096123c961357302442fb1e0ac14cf7bc7e03",
            "date": "2025-01-12T09:24:40Z",
            "author_login": "tatsuhiro-t"
          },
          {
            "sha": "48cdba3553b294a470651f040d4c9dfff9fdea74",
            "date": "2025-01-12T08:51:21Z",
            "author_login": "tatsuhiro-t"
          },
          {
            "sha": "71498767046147f87bb3a5b01d5e4ff35dfba4c3",
            "date": "2025-01-12T08:47:25Z",
            "author_login": "tatsuhiro-t"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-707",
    "description": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., > 32), then drop the connection.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-06-03T23:15:11.073",
    "last_modified": "2024-11-21T04:56:44.657",
    "fix_date": "2020-04-17T23:53:51Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/commit/f8da73bd042f810f34d19f9eae02b46d870af394",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00011.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AAC2AA36OTRHKSVM5OV7TTVB3CZIGEFL/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4696",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2020.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/commit/f8da73bd042f810f34d19f9eae02b46d870af394",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00011.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AAC2AA36OTRHKSVM5OV7TTVB3CZIGEFL/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4696",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2020.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:47.832658",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nghttp2",
    "owner": "nghttp2",
    "created_at": "2013-07-16T15:12:33Z",
    "updated_at": "2025-01-14T12:37:12Z",
    "pushed_at": "2025-01-14T09:17:00Z",
    "size": 38249,
    "stars": 4686,
    "forks": 880,
    "open_issues": 395,
    "watchers": 4686,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C++": 2286176,
      "C": 1682086,
      "Go": 180283,
      "Python": 90018,
      "M4": 74621,
      "CMake": 66979,
      "Makefile": 23852,
      "Shell": 9762,
      "Dockerfile": 6966,
      "Ruby": 559
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:27:20.285893"
  }
}