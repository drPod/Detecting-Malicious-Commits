{
  "cve_id": "CVE-2020-11096",
  "github_data": {
    "repository": "FreeRDP/FreeRDP",
    "fix_commit": "b8beb55913471952f92770c90c372139d78c16c0",
    "related_commits": [
      "b8beb55913471952f92770c90c372139d78c16c0",
      "b8beb55913471952f92770c90c372139d78c16c0"
    ],
    "patch_url": "https://github.com/FreeRDP/FreeRDP/commit/b8beb55913471952f92770c90c372139d78c16c0.patch",
    "fix_commit_details": {
      "sha": "b8beb55913471952f92770c90c372139d78c16c0",
      "commit_date": "2020-05-26T05:50:55Z",
      "author": {
        "login": "akallabeth",
        "type": "User",
        "stats": {
          "total_commits": 7821,
          "average_weekly_commits": 11.046610169491526,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 486
        }
      },
      "commit_message": {
        "title": "Fixed OOB read in update_read_cache_bitmap_v3_order",
        "length": 109,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 122,
        "additions": 98,
        "deletions": 24
      },
      "files": [
        {
          "filename": "libfreerdp/core/orders.c",
          "status": "modified",
          "additions": 98,
          "deletions": 24,
          "patch": "@@ -113,20 +113,74 @@ BYTE get_primary_drawing_order_field_bytes(UINT32 orderType, BOOL* pValid)\n \t}\n }\n \n-static const BYTE CBR2_BPP[] = { 0, 0, 0, 8, 16, 24, 32 };\n-\n-static const BYTE BPP_CBR2[] = { 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0,\n-\t                             0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0 };\n-\n-static const BYTE CBR23_BPP[] = { 0, 0, 0, 8, 16, 24, 32 };\n-\n-static const BYTE BPP_CBR23[] = { 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0,\n-\t                              0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0 };\n-\n-static const BYTE BMF_BPP[] = { 0, 1, 0, 8, 16, 24, 32, 0 };\n+static BYTE get_cbr2_bpp(UINT32 bpp, BOOL* pValid)\n+{\n+\tif (pValid)\n+\t\t*pValid = TRUE;\n+\tswitch (bpp)\n+\t{\n+\t\tcase 3:\n+\t\t\treturn 8;\n+\t\tcase 4:\n+\t\t\treturn 16;\n+\t\tcase 5:\n+\t\t\treturn 24;\n+\t\tcase 6:\n+\t\t\treturn 32;\n+\t\tdefault:\n+\t\t\tWLog_WARN(TAG, \"Invalid bpp %\" PRIu32, bpp);\n+\t\t\tif (pValid)\n+\t\t\t\t*pValid = FALSE;\n+\t\t\treturn 0;\n+\t}\n+}\n \n-static const BYTE BPP_BMF[] = { 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0,\n-\t                            0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0 };\n+static BYTE get_bmf_bpp(UINT32 bmf, BOOL* pValid)\n+{\n+\tif (pValid)\n+\t\t*pValid = TRUE;\n+\tswitch (bmf)\n+\t{\n+\t\tcase 1:\n+\t\t\treturn 1;\n+\t\tcase 3:\n+\t\t\treturn 8;\n+\t\tcase 4:\n+\t\t\treturn 16;\n+\t\tcase 5:\n+\t\t\treturn 24;\n+\t\tcase 6:\n+\t\t\treturn 32;\n+\t\tdefault:\n+\t\t\tWLog_WARN(TAG, \"Invalid bmf %\" PRIu32, bmf);\n+\t\t\tif (pValid)\n+\t\t\t\t*pValid = FALSE;\n+\t\t\treturn 0;\n+\t}\n+}\n+static BYTE get_bpp_bmf(UINT32 bpp, BOOL* pValid)\n+{\n+\tif (pValid)\n+\t\t*pValid = TRUE;\n+\tswitch (bpp)\n+\t{\n+\t\tcase 1:\n+\t\t\treturn 1;\n+\t\tcase 8:\n+\t\t\treturn 3;\n+\t\tcase 16:\n+\t\t\treturn 4;\n+\t\tcase 24:\n+\t\t\treturn 5;\n+\t\tcase 32:\n+\t\t\treturn 6;\n+\t\tdefault:\n+\t\t\tWLog_WARN(TAG, \"Invalid color depth %\" PRIu32, bpp);\n+\t\t\tif (pValid)\n+\t\t\t\t*pValid = FALSE;\n+\t\t\treturn 0;\n+\t}\n+}\n \n static BOOL check_order_activated(wLog* log, rdpSettings* settings, const char* orderName,\n                                   BOOL condition)\n@@ -814,9 +868,11 @@ static INLINE BOOL update_read_brush(wStream* s, rdpBrush* brush, BYTE fieldFlag\n \n \tif (brush->style & CACHED_BRUSH)\n \t{\n+\t\tBOOL rc;\n \t\tbrush->index = brush->hatch;\n-\t\tbrush->bpp = BMF_BPP[brush->style & 0x07];\n-\n+\t\tbrush->bpp = get_bmf_bpp(brush->style, &rc);\n+\t\tif (!rc)\n+\t\t\treturn FALSE;\n \t\tif (brush->bpp == 0)\n \t\t\tbrush->bpp = 1;\n \t}\n@@ -858,9 +914,11 @@ static INLINE BOOL update_write_brush(wStream* s, rdpBrush* brush, BYTE fieldFla\n \n \tif (brush->style & CACHED_BRUSH)\n \t{\n+\t\tBOOL rc;\n \t\tbrush->hatch = brush->index;\n-\t\tbrush->bpp = BMF_BPP[brush->style & 0x07];\n-\n+\t\tbrush->bpp = get_bmf_bpp(brush->style, &rc);\n+\t\tif (!rc)\n+\t\t\treturn FALSE;\n \t\tif (brush->bpp == 0)\n \t\t\tbrush->bpp = 1;\n \t}\n@@ -2016,6 +2074,7 @@ BOOL update_write_cache_bitmap_order(wStream* s, const CACHE_BITMAP_ORDER* cache\n static CACHE_BITMAP_V2_ORDER* update_read_cache_bitmap_v2_order(rdpUpdate* update, wStream* s,\n                                                                 BOOL compressed, UINT16 flags)\n {\n+\tBOOL rc;\n \tBYTE bitsPerPixelId;\n \tCACHE_BITMAP_V2_ORDER* cache_bitmap_v2;\n \n@@ -2030,7 +2089,9 @@ static CACHE_BITMAP_V2_ORDER* update_read_cache_bitmap_v2_order(rdpUpdate* updat\n \tcache_bitmap_v2->cacheId = flags & 0x0003;\n \tcache_bitmap_v2->flags = (flags & 0xFF80) >> 7;\n \tbitsPerPixelId = (flags & 0x0078) >> 3;\n-\tcache_bitmap_v2->bitmapBpp = CBR2_BPP[bitsPerPixelId];\n+\tcache_bitmap_v2->bitmapBpp = get_cbr2_bpp(bitsPerPixelId, &rc);\n+\tif (!rc)\n+\t\tgoto fail;\n \n \tif (cache_bitmap_v2->flags & CBR2_PERSISTENT_KEY_PRESENT)\n \t{\n@@ -2109,13 +2170,16 @@ int update_approximate_cache_bitmap_v2_order(CACHE_BITMAP_V2_ORDER* cache_bitmap\n BOOL update_write_cache_bitmap_v2_order(wStream* s, CACHE_BITMAP_V2_ORDER* cache_bitmap_v2,\n                                         BOOL compressed, UINT16* flags)\n {\n+\tBOOL rc;\n \tBYTE bitsPerPixelId;\n \n \tif (!Stream_EnsureRemainingCapacity(\n \t        s, update_approximate_cache_bitmap_v2_order(cache_bitmap_v2, compressed, flags)))\n \t\treturn FALSE;\n \n-\tbitsPerPixelId = BPP_CBR2[cache_bitmap_v2->bitmapBpp];\n+\tbitsPerPixelId = get_bpp_bmf(cache_bitmap_v2->bitmapBpp, &rc);\n+\tif (!rc)\n+\t\treturn FALSE;\n \t*flags = (cache_bitmap_v2->cacheId & 0x0003) | (bitsPerPixelId << 3) |\n \t         ((cache_bitmap_v2->flags << 7) & 0xFF80);\n \n@@ -2177,6 +2241,7 @@ BOOL update_write_cache_bitmap_v2_order(wStream* s, CACHE_BITMAP_V2_ORDER* cache\n static CACHE_BITMAP_V3_ORDER* update_read_cache_bitmap_v3_order(rdpUpdate* update, wStream* s,\n                                                                 UINT16 flags)\n {\n+\tBOOL rc;\n \tBYTE bitsPerPixelId;\n \tBITMAP_DATA_EX* bitmapData;\n \tUINT32 new_len;\n@@ -2194,7 +2259,9 @@ static CACHE_BITMAP_V3_ORDER* update_read_cache_bitmap_v3_order(rdpUpdate* updat\n \tcache_bitmap_v3->cacheId = flags & 0x00000003;\n \tcache_bitmap_v3->flags = (flags & 0x0000FF80) >> 7;\n \tbitsPerPixelId = (flags & 0x00000078) >> 3;\n-\tcache_bitmap_v3->bpp = CBR23_BPP[bitsPerPixelId];\n+\tcache_bitmap_v3->bpp = get_cbr2_bpp(bitsPerPixelId, &rc);\n+\tif (!rc)\n+\t\tgoto fail;\n \n \tif (Stream_GetRemainingLength(s) < 21)\n \t\tgoto fail;\n@@ -2242,6 +2309,7 @@ int update_approximate_cache_bitmap_v3_order(CACHE_BITMAP_V3_ORDER* cache_bitmap\n BOOL update_write_cache_bitmap_v3_order(wStream* s, CACHE_BITMAP_V3_ORDER* cache_bitmap_v3,\n                                         UINT16* flags)\n {\n+\tBOOL rc;\n \tBYTE bitsPerPixelId;\n \tBITMAP_DATA_EX* bitmapData;\n \n@@ -2250,7 +2318,9 @@ BOOL update_write_cache_bitmap_v3_order(wStream* s, CACHE_BITMAP_V3_ORDER* cache\n \t\treturn FALSE;\n \n \tbitmapData = &cache_bitmap_v3->bitmapData;\n-\tbitsPerPixelId = BPP_CBR23[cache_bitmap_v3->bpp];\n+\tbitsPerPixelId = get_bpp_bmf(cache_bitmap_v3->bpp, &rc);\n+\tif (!rc)\n+\t\treturn FALSE;\n \t*flags = (cache_bitmap_v3->cacheId & 0x00000003) |\n \t         ((cache_bitmap_v3->flags << 7) & 0x0000FF80) | ((bitsPerPixelId << 3) & 0x00000078);\n \tStream_Write_UINT16(s, cache_bitmap_v3->cacheIndex); /* cacheIndex (2 bytes) */\n@@ -2574,6 +2644,7 @@ static BOOL update_compress_brush(wStream* s, const BYTE* input, BYTE bpp)\n static CACHE_BRUSH_ORDER* update_read_cache_brush_order(rdpUpdate* update, wStream* s, UINT16 flags)\n {\n \tint i;\n+\tBOOL rc;\n \tBYTE iBitmapFormat;\n \tBOOL compressed = FALSE;\n \tCACHE_BRUSH_ORDER* cache_brush = calloc(1, sizeof(CACHE_BRUSH_ORDER));\n@@ -2587,10 +2658,10 @@ static CACHE_BRUSH_ORDER* update_read_cache_brush_order(rdpUpdate* update, wStre\n \tStream_Read_UINT8(s, cache_brush->index); /* cacheEntry (1 byte) */\n \tStream_Read_UINT8(s, iBitmapFormat);      /* iBitmapFormat (1 byte) */\n \n-\tif (iBitmapFormat >= ARRAYSIZE(BMF_BPP))\n+\tcache_brush->bpp = get_bmf_bpp(iBitmapFormat, &rc);\n+\tif (!rc)\n \t\tgoto fail;\n \n-\tcache_brush->bpp = BMF_BPP[iBitmapFormat];\n \tStream_Read_UINT8(s, cache_brush->cx);     /* cx (1 byte) */\n \tStream_Read_UINT8(s, cache_brush->cy);     /* cy (1 byte) */\n \tStream_Read_UINT8(s, cache_brush->style);  /* style (1 byte) */\n@@ -2661,13 +2732,16 @@ BOOL update_write_cache_brush_order(wStream* s, const CACHE_BRUSH_ORDER* cache_b\n {\n \tint i;\n \tBYTE iBitmapFormat;\n+\tBOOL rc;\n \tBOOL compressed = FALSE;\n \n \tif (!Stream_EnsureRemainingCapacity(s,\n \t                                    update_approximate_cache_brush_order(cache_brush, flags)))\n \t\treturn FALSE;\n \n-\tiBitmapFormat = BPP_BMF[cache_brush->bpp];\n+\tiBitmapFormat = get_bpp_bmf(cache_brush->bpp, &rc);\n+\tif (!rc)\n+\t\treturn FALSE;\n \tStream_Write_UINT8(s, cache_brush->index);  /* cacheEntry (1 byte) */\n \tStream_Write_UINT8(s, iBitmapFormat);       /* iBitmapFormat (1 byte) */\n \tStream_Write_UINT8(s, cache_brush->cx);     /* cx (1 byte) */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "87e6ceca988b8e0ee581301e43523b8404c3fb00",
            "date": "2025-01-14T21:52:26Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "ba424d7600a9ed7fd2598052a12e4ae8bd787c45",
            "date": "2025-01-14T21:05:33Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "52708ad86df206b033adee88fe329fc61e78d312",
            "date": "2025-01-14T20:57:52Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "0455da9adcf942f5626d7f9999e03eee44a98254",
            "date": "2025-01-14T20:26:24Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "b02e58a039ae7bea77286e39ce62a794f9c26b92",
            "date": "2025-01-14T20:05:58Z",
            "author_login": "akallabeth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:N/I:L/A:N",
    "cwe_id": "CWE-125",
    "description": "In FreeRDP before version 2.1.2, there is a global OOB read in update_read_cache_bitmap_v3_order. As a workaround, one can disable bitmap cache with -bitmap-cache (default). This is fixed in version 2.1.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-06-22T22:15:12.007",
    "last_modified": "2024-11-21T04:56:46.677",
    "fix_date": "2020-05-26T05:50:55Z"
  },
  "references": [
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00080.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.freerdp.com/2020/06/22/2_1_2-released",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/b8beb55913471952f92770c90c372139d78c16c0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/security/advisories/GHSA-mjw7-3mq2-996x",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00008.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y35HBHG2INICLSGCIKNAR7GCXEHQACQ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XOZLH35OJWIQLM7FYDXAP2EAUBDXE76V/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4481-1/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00080.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.freerdp.com/2020/06/22/2_1_2-released",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/b8beb55913471952f92770c90c372139d78c16c0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/security/advisories/GHSA-mjw7-3mq2-996x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00008.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6Y35HBHG2INICLSGCIKNAR7GCXEHQACQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XOZLH35OJWIQLM7FYDXAP2EAUBDXE76V/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://usn.ubuntu.com/4481-1/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:47.867670",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "FreeRDP",
    "owner": "FreeRDP",
    "created_at": "2011-06-30T19:14:15Z",
    "updated_at": "2025-01-14T11:51:38Z",
    "pushed_at": "2025-01-14T11:16:30Z",
    "size": 68011,
    "stars": 11214,
    "forks": 14938,
    "open_issues": 248,
    "watchers": 11214,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-1.0",
      "stable-1.1",
      "stable-2.0"
    ],
    "languages": {
      "C": 17349509,
      "C++": 685511,
      "CMake": 627854,
      "Objective-C": 540407,
      "Java": 373726,
      "HTML": 99135,
      "Shell": 51324,
      "Python": 46681,
      "Lua": 27393,
      "Roff": 26338,
      "Perl": 8044,
      "C#": 5756,
      "CSS": 5696,
      "Makefile": 2420,
      "Rich Text Format": 937
    },
    "commit_activity": {
      "total_commits_last_year": 2287,
      "avg_commits_per_week": 43.98076923076923,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:01:37.323973"
  }
}