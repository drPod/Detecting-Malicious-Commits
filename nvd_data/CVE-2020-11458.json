{
  "cve_id": "CVE-2020-11458",
  "github_data": {
    "repository": "MISP/MISP",
    "fix_commit": "30ff4b6451549dae7b526d4fb3a49061311ed477",
    "related_commits": [
      "30ff4b6451549dae7b526d4fb3a49061311ed477",
      "30ff4b6451549dae7b526d4fb3a49061311ed477"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "30ff4b6451549dae7b526d4fb3a49061311ed477",
      "commit_date": "2020-03-30T12:02:14Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": {
          "total_commits": 9409,
          "average_weekly_commits": 13.656023222060957,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "chg: [security] Added setting to restrict the encoding of local feeds",
        "length": 637,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 75,
        "additions": 65,
        "deletions": 10
      },
      "files": [
        {
          "filename": "app/Controller/FeedsController.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -246,7 +246,7 @@ public function add()\n                     $this->Flash->success($message);\n                     $this->redirect(array('controller' => 'feeds', 'action' => 'index'));\n                 } else {\n-                    $message = __('Feed could not be added. Invalid field: %s', array_keys($this->Feed->validationErrors)[0]);\n+                    $message = __('Feed could not be added. Reason: %s', json_encode($this->Feed->validationErrors));\n                     if ($this->_isRest()) {\n                         return $this->RestResponse->saveFailResponse('Feeds', 'add', false, $message, $this->response->type());\n                     }\n@@ -345,7 +345,7 @@ public function edit($feedId)\n                 $this->Flash->success($message);\n                 $this->redirect(array('controller' => 'feeds', 'action' => 'index'));\n             } else {\n-                $message = __('Feed could not be updated. Invalid fields: %s', implode(', ', array_keys($this->Feed->validationErrors)));\n+                $message = __('Feed could not be updated. Reason: %s', json_encode($this->Feed->validationErrors));\n                 if ($this->_isRest()) {\n                     return $this->RestResponse->saveFailResponse('Feeds', 'add', false, $message, $this->response->type());\n                 }"
        },
        {
          "filename": "app/Model/Feed.php",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -31,6 +31,10 @@ class Feed extends AppModel\n         'event_id' => array(\n             'rule' => array('numeric'),\n             'message' => 'Please enter a numeric event ID or leave this field blank.',\n+        ),\n+        'input_source' => array(\n+            'rule' => 'validateInputSource',\n+            'message' => ''\n         )\n     );\n \n@@ -47,6 +51,27 @@ class Feed extends AppModel\n         )\n     );\n \n+    public function validateInputSource($fields)\n+    {\n+        if (!empty($this->data['Feed']['input_source'])) {\n+            $localAllowed = empty(Configure::read('Security.disable_local_feed_access'));\n+            $validOptions = array('network');\n+            if ($localAllowed) {\n+                $validOptions[] = 'local';\n+            }\n+            if (!in_array($this->data['Feed']['input_source'], $validOptions)) {\n+                return __(\n+                    'Invalid input source. The only valid options are %s. %s',\n+                    implode(', ', $validOptions),\n+                    (!$localAllowed && $this->data['Feed']['input_source'] === 'local') ?\n+                    __('Security.disable_local_feed_access is currently enabled, local feeds are thereby not allowed.') :\n+                    ''\n+                );\n+            }\n+        }\n+        return true;\n+    }\n+\n     public function urlOrExistingFilepath($fields)\n     {\n         if ($this->isFeedLocal($this->data)) {"
        },
        {
          "filename": "app/Model/Server.php",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -1295,6 +1295,16 @@ public function __construct($id = false, $table = null, $ds = null)\n                             'type' => 'boolean',\n                             'null' => true\n                         ),\n+                        'disable_local_feed_access' => array(\n+                                'level' => 0,\n+                                'description' => __('Disabling this setting will allow the creation/modification of local feeds (as opposed to network feeds). Enabling this setting will restrict feed sources to be network based only. When disabled, keep in mind that a malicious site administrator could get access to any arbitrary file on the system that the apache user has access to. Make sure that proper safe-guards are in place. This setting can only be modified via the CLI.'),\n+                                'value' => false,\n+                                'errorMessage' => '',\n+                                'test' => 'testBool',\n+                                'type' => 'boolean',\n+                                'null' => true,\n+                                'cli_only' => 1\n+                        ),\n                         'allow_unsafe_apikey_named_param' => array(\n                             'level' => 0,\n                             'description' => __('Allows passing the API key via the named url parameter \"apikey\" - highly recommended not to enable this, but if you have some dodgy legacy tools that cannot pass the authorization header it can work as a workaround. Again, only use this as a last resort.'),"
        },
        {
          "filename": "app/View/Feeds/add.ctp",
          "status": "modified",
          "additions": 15,
          "deletions": 5,
          "patch": "@@ -2,10 +2,16 @@\n <?php echo $this->Form->create('Feed');?>\n     <fieldset>\n         <legend><?php echo __('Add MISP Feed');?></legend>\n-        <p><?php echo __('Add a new MISP feed source.');?></p>\n-    <?php\n-        echo $this->Form->input('enabled', array());\n-        echo $this->Form->input('caching_enabled', array('label' => __('Caching enabled')));\n+        <?php\n+            if (!empty(Configure::read('Security.disable_local_feed_access'))) {\n+                echo sprintf(\n+                    '<p class=\"red bold\">%s</p>',\n+                    __('Warning: local feeds are currently disabled by policy, to re-enable the feature, set the Security.allow_local_feed_access flag in the server settings. This setting can only be set via the CLI.')\n+                );\n+            }\n+            echo '<p>' . __('Add a new MISP feed source.') . '</p>';\n+            echo $this->Form->input('enabled', array());\n+            echo $this->Form->input('caching_enabled', array('label' => __('Caching enabled')));\n     ?>\n         <div class=\"input clear\"></div>\n     <?php\n@@ -21,10 +27,14 @@\n                 'placeholder' => __('Name of the content provider'),\n                 'class' => 'form-control span6'\n         ));\n+        $options = array('network' => 'Network');\n+        if (empty(Configure::read('Security.disable_local_feed_access'))) {\n+            $options['local'] = 'Local';\n+        }\n         echo $this->Form->input('input_source', array(\n                 'label' => __('Input Source'),\n                 'div' => 'input clear',\n-                'options' => array('network' => 'Network', 'local' => 'Local'),\n+                'options' => $options,\n                 'class' => 'form-control span6'\n         ));\n         ?>"
        },
        {
          "filename": "app/View/Feeds/edit.ctp",
          "status": "modified",
          "additions": 13,
          "deletions": 3,
          "patch": "@@ -2,8 +2,14 @@\n <?php echo $this->Form->create('Feed');?>\n     <fieldset>\n         <legend><?php echo __('Edit MISP Feed');?></legend>\n-        <p><?php echo __('Edit a new MISP feed source.');?></p>\n-    <?php\n+        <?php\n+            if (!empty(Configure::read('Security.disable_local_feed_access'))) {\n+                echo sprintf(\n+                    '<p class=\"red bold\">%s</p>',\n+                    __('Warning: local feeds are currently disabled by policy, to re-enable the feature, set the Security.allow_local_feed_access flag in the server settings. This setting can only be set via the CLI.')\n+                );\n+            }\n+            echo '<p>' . __('Edit a new MISP feed source.') . '</p>';\n             echo $this->Form->input('enabled', array(\n                 'type' => 'checkbox'\n             ));\n@@ -26,9 +32,13 @@\n                     'placeholder' => __('Name of the content provider'),\n                     'class' => 'form-control span6'\n             ));\n+            $options = array('network' => 'Network');\n+            if (empty(Configure::read('Security.disable_local_feed_access'))) {\n+                $options['local'] = 'Local';\n+            }\n             echo $this->Form->input('input_source', array(\n                     'div' => 'input clear',\n-                    'options' => array('network' => 'Network', 'local' => 'Local'),\n+                    'options' => $options,\n                     'class' => 'form-control span6'\n             ));\n             ?>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8031c316958fe138f7e7454996461f706f5de65b",
            "date": "2025-01-24T21:43:57Z",
            "author_login": "adulau"
          },
          {
            "sha": "075ac07928928b85b0e6ba16ff8bb257c2a43f31",
            "date": "2025-01-23T18:28:16Z",
            "author_login": "DocArmoryTech"
          },
          {
            "sha": "0bed57728fdf15e55138e3cc5bf77c9416d9f4ee",
            "date": "2025-01-17T13:24:52Z",
            "author_login": "iglocska"
          },
          {
            "sha": "ae8e0623697977dbcdb625b8cb8c287ccb3060a1",
            "date": "2025-01-17T13:17:58Z",
            "author_login": "iglocska"
          },
          {
            "sha": "ba58d0318443b3fa565d4c290d1e3b70bebf8022",
            "date": "2025-01-16T10:39:00Z",
            "author_login": "adulau"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": null,
    "description": "app/Model/feed.php in MISP before 2.4.124 allows administrators to choose arbitrary files that should be ingested by MISP. This does not cause a leak of the full contents of a file, but does cause a leaks of strings that match certain patterns. Among the data that can leak are passwords from database.php or GPG key passphrases from config.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-04-02T12:15:15.870",
    "last_modified": "2024-11-21T04:57:57.807",
    "fix_date": "2020-03-30T12:02:14Z"
  },
  "references": [
    {
      "url": "https://github.com/MISP/MISP/commit/30ff4b6451549dae7b526d4fb3a49061311ed477",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://matthias.sdfeu.org/misp-poc.py",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/30ff4b6451549dae7b526d4fb3a49061311ed477",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://matthias.sdfeu.org/misp-poc.py",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:42.312740",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "MISP",
    "owner": "MISP",
    "created_at": "2013-02-07T17:10:34Z",
    "updated_at": "2025-01-25T09:46:55Z",
    "pushed_at": "2025-01-24T21:43:57Z",
    "size": 158413,
    "stars": 5488,
    "forks": 1426,
    "open_issues": 2649,
    "watchers": 5488,
    "has_security_policy": false,
    "default_branch": "2.5",
    "protected_branches": [
      "2.4",
      "3.x"
    ],
    "languages": {
      "PHP": 9033626,
      "JavaScript": 1901843,
      "Python": 401628,
      "CSS": 156405,
      "Shell": 105142,
      "Perl": 6169,
      "Makefile": 759
    },
    "commit_activity": {
      "total_commits_last_year": 1591,
      "avg_commits_per_week": 30.596153846153847,
      "days_active_last_year": 224
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:39:48.002351"
  }
}