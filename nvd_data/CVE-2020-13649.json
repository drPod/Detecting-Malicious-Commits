{
  "cve_id": "CVE-2020-13649",
  "github_data": {
    "repository": "jerryscript-project/jerryscript",
    "fix_commit": "69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
    "related_commits": [
      "69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
      "69f8e78c2f8d562bd6d8002b5488f1662ac30d24"
    ],
    "patch_url": "https://github.com/jerryscript-project/jerryscript/commit/69f8e78c2f8d562bd6d8002b5488f1662ac30d24.patch",
    "fix_commit_details": {
      "sha": "69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
      "commit_date": "2020-05-27T12:40:43Z",
      "author": {
        "login": "rerobika",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix error handling in scanner when in case of OOM (#3793)",
        "length": 175,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 30,
        "deletions": 26
      },
      "files": [
        {
          "filename": "jerry-core/parser/js/js-scanner.c",
          "status": "modified",
          "additions": 30,
          "deletions": 26,
          "patch": "@@ -3159,42 +3159,48 @@ scanner_scan_all (parser_context_t *context_p, /**< context */\n   }\n   PARSER_CATCH\n   {\n-    /* Ignore the errors thrown by the lexer. */\n-    if (context_p->error != PARSER_ERR_OUT_OF_MEMORY)\n-    {\n-      context_p->error = PARSER_ERR_NO_ERROR;\n-    }\n-\n #if ENABLED (JERRY_ES2015)\n     while (scanner_context.active_binding_list_p != NULL)\n     {\n       scanner_pop_binding_list (&scanner_context);\n     }\n #endif /* ENABLED (JERRY_ES2015) */\n \n-    /* The following code may allocate memory, so it is enclosed in a try/catch. */\n-    PARSER_TRY (context_p->try_buffer)\n+    if (JERRY_UNLIKELY (context_p->error != PARSER_ERR_OUT_OF_MEMORY))\n     {\n-#if ENABLED (JERRY_ES2015)\n-      if (scanner_context.status_flags & SCANNER_CONTEXT_THROW_ERR_ASYNC_FUNCTION)\n+      /* Ignore the errors thrown by the lexer. */\n+      context_p->error = PARSER_ERR_NO_ERROR;\n+\n+      /* The following code may allocate memory, so it is enclosed in a try/catch. */\n+      PARSER_TRY (context_p->try_buffer)\n       {\n-        JERRY_ASSERT (scanner_context.async_source_p != NULL);\n+  #if ENABLED (JERRY_ES2015)\n+        if (scanner_context.status_flags & SCANNER_CONTEXT_THROW_ERR_ASYNC_FUNCTION)\n+        {\n+          JERRY_ASSERT (scanner_context.async_source_p != NULL);\n \n-        scanner_info_t *info_p;\n-        info_p = scanner_insert_info (context_p, scanner_context.async_source_p, sizeof (scanner_info_t));\n-        info_p->type = SCANNER_TYPE_ERR_ASYNC_FUNCTION;\n-      }\n-#endif /* ENABLED (JERRY_ES2015) */\n+          scanner_info_t *info_p;\n+          info_p = scanner_insert_info (context_p, scanner_context.async_source_p, sizeof (scanner_info_t));\n+          info_p->type = SCANNER_TYPE_ERR_ASYNC_FUNCTION;\n+        }\n+  #endif /* ENABLED (JERRY_ES2015) */\n \n-      while (scanner_context.active_literal_pool_p != NULL)\n+        while (scanner_context.active_literal_pool_p != NULL)\n+        {\n+          scanner_pop_literal_pool (context_p, &scanner_context);\n+        }\n+      }\n+      PARSER_CATCH\n       {\n-        scanner_pop_literal_pool (context_p, &scanner_context);\n+        JERRY_ASSERT (context_p->error == PARSER_ERR_OUT_OF_MEMORY);\n       }\n+      PARSER_TRY_END\n     }\n-    PARSER_CATCH\n-    {\n-      JERRY_ASSERT (context_p->error == PARSER_ERR_NO_ERROR);\n \n+    JERRY_ASSERT (context_p->error == PARSER_ERR_NO_ERROR || context_p->error == PARSER_ERR_OUT_OF_MEMORY);\n+\n+    if (context_p->error == PARSER_ERR_OUT_OF_MEMORY)\n+    {\n       while (scanner_context.active_literal_pool_p != NULL)\n       {\n         scanner_literal_pool_t *literal_pool_p = scanner_context.active_literal_pool_p;\n@@ -3204,12 +3210,10 @@ scanner_scan_all (parser_context_t *context_p, /**< context */\n         parser_list_free (&literal_pool_p->literal_pool);\n         scanner_free (literal_pool_p, sizeof (scanner_literal_pool_t));\n       }\n-    }\n-    PARSER_TRY_END\n \n-#if ENABLED (JERRY_ES2015)\n-    context_p->status_flags &= (uint32_t) ~PARSER_IS_GENERATOR_FUNCTION;\n-#endif /* ENABLED (JERRY_ES2015) */\n+      parser_stack_free (context_p);\n+      return;\n+    }\n   }\n   PARSER_TRY_END\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "50200152feb724a74a5f64e44d7885151537cfad",
            "date": "2024-12-18T10:36:32Z",
            "author_login": "LaszloLango"
          },
          {
            "sha": "4cda5960606fa1456f81b01e8aeb7a11177167ee",
            "date": "2024-12-18T10:28:38Z",
            "author_login": "LaszloLango"
          },
          {
            "sha": "d2d30df420da79442f8d53585822e7d5ff220d5d",
            "date": "2024-12-17T09:41:12Z",
            "author_login": "lygstate"
          },
          {
            "sha": "a1e4bd859ecda2f2b1d92a206f23e9727d4fbb48",
            "date": "2024-12-17T09:20:20Z",
            "author_login": "lygstate"
          },
          {
            "sha": "f322f603f578af78fd039175d62a70e5669fe98f",
            "date": "2024-12-17T09:17:57Z",
            "author_login": "lygstate"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-476",
    "description": "parser/js/js-scanner.c in JerryScript 2.2.0 mishandles errors during certain out-of-memory conditions, as demonstrated by a scanner_reverse_info_list NULL pointer dereference and a scanner_scan_all assertion failure.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-05-28T15:15:11.980",
    "last_modified": "2024-11-21T05:01:40.610",
    "fix_date": "2020-05-27T12:40:43Z"
  },
  "references": [
    {
      "url": "https://github.com/jerryscript-project/jerryscript/commit/69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jerryscript-project/jerryscript/issues/3786",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jerryscript-project/jerryscript/issues/3788",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jerryscript-project/jerryscript/commit/69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jerryscript-project/jerryscript/issues/3786",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jerryscript-project/jerryscript/issues/3788",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:47.822994",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jerryscript",
    "owner": "jerryscript-project",
    "created_at": "2015-04-03T01:10:31Z",
    "updated_at": "2025-01-13T22:23:36Z",
    "pushed_at": "2024-12-18T13:00:01Z",
    "size": 62003,
    "stars": 7053,
    "forks": 675,
    "open_issues": 162,
    "watchers": 7053,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 6126979,
      "JavaScript": 2178792,
      "Python": 235319,
      "CMake": 85423,
      "Shell": 46479,
      "C++": 8060,
      "Makefile": 7047,
      "Batchfile": 2635,
      "Assembly": 1421
    },
    "commit_activity": {
      "total_commits_last_year": 46,
      "avg_commits_per_week": 0.8846153846153846,
      "days_active_last_year": 31
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:01:10.365409"
  }
}