{
  "cve_id": "CVE-2020-13756",
  "github_data": {
    "repository": "sabberworm/PHP-CSS-Parser",
    "fix_commit": "2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4",
    "related_commits": [
      "2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4",
      "2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4"
    ],
    "patch_url": "https://github.com/sabberworm/PHP-CSS-Parser/commit/2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4.patch",
    "fix_commit_details": {
      "sha": "2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4",
      "commit_date": "2020-06-01T09:03:20Z",
      "author": {
        "login": "sabberworm",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Don\u2019t use eval",
        "length": 14,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 41,
        "additions": 35,
        "deletions": 6
      },
      "files": [
        {
          "filename": "lib/Sabberworm/CSS/CSSList/CSSBlockList.php",
          "status": "modified",
          "additions": 28,
          "deletions": 3,
          "patch": "@@ -65,9 +65,34 @@ protected function allSelectors(&$aResult, $sSpecificitySearch = null) {\n \t\t\t\tif ($sSpecificitySearch === null) {\n \t\t\t\t\t$aResult[] = $oSelector;\n \t\t\t\t} else {\n-\t\t\t\t\t$sComparison = \"\\$bRes = {$oSelector->getSpecificity()} $sSpecificitySearch;\";\n-\t\t\t\t\teval($sComparison);\n-\t\t\t\t\tif ($bRes) {\n+\t\t\t\t\t$sComparator = '===';\n+\t\t\t\t\t$aSpecificitySearch = explode(' ', $sSpecificitySearch);\n+\t\t\t\t\t$iTargetSpecificity = $aSpecificitySearch[0];\n+\t\t\t\t\tif(count($aSpecificitySearch) > 1) {\n+\t\t\t\t\t\t$sComparator = $aSpecificitySearch[0];\n+\t\t\t\t\t\t$iTargetSpecificity = $aSpecificitySearch[1];\n+\t\t\t\t\t}\n+\t\t\t\t\t$iTargetSpecificity = (int)$iTargetSpecificity;\n+\t\t\t\t\t$iSelectorSpecificity = $oSelector->getSpecificity();\n+\t\t\t\t\t$bMatches = false;\n+\t\t\t\t\tswitch($sComparator) {\n+\t\t\t\t\t\tcase '<=':\n+\t\t\t\t\t\t\t$bMatches = $iSelectorSpecificity <= $iTargetSpecificity;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase '<':\n+\t\t\t\t\t\t\t$bMatches = $iSelectorSpecificity < $iTargetSpecificity;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase '>=':\n+\t\t\t\t\t\t\t$bMatches = $iSelectorSpecificity >= $iTargetSpecificity;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase '>':\n+\t\t\t\t\t\t\t$bMatches = $iSelectorSpecificity > $iTargetSpecificity;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tdefault:\n+\t\t\t\t\t\t\t$bMatches = $iSelectorSpecificity === $iTargetSpecificity;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t\tif ($bMatches) {\n \t\t\t\t\t\t$aResult[] = $oSelector;\n \t\t\t\t\t}\n \t\t\t\t}"
        },
        {
          "filename": "lib/Sabberworm/CSS/CSSList/Document.php",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -57,9 +57,6 @@ public function getAllValues($mElement = null, $bSearchInFunctionArguments = fal\n      * @example getSelectorsBySpecificity('>= 100')\n      */\n     public function getSelectorsBySpecificity($sSpecificitySearch = null) {\n-        if (is_numeric($sSpecificitySearch) || is_numeric($sSpecificitySearch[0])) {\n-            $sSpecificitySearch = \"== $sSpecificitySearch\";\n-        }\n         $aResult = array();\n         $this->allSelectors($aResult, $sSpecificitySearch);\n         return $aResult;"
        },
        {
          "filename": "tests/Sabberworm/CSS/ParserTest.php",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -146,6 +146,13 @@ function testSpecificity() {\n \t\t\t}\n \t\t}\n \t\t$this->assertEquals(array(new Selector('#test .help', true)), $oDoc->getSelectorsBySpecificity('> 100'));\n+\t\t$this->assertEquals(array(new Selector('#test .help', true), new Selector('#file', true)), $oDoc->getSelectorsBySpecificity('>= 100'));\n+\t\t$this->assertEquals(array(new Selector('#file', true)), $oDoc->getSelectorsBySpecificity('=== 100'));\n+\t\t$this->assertEquals(array(new Selector('#file', true)), $oDoc->getSelectorsBySpecificity('== 100'));\n+\t\t$this->assertEquals(array(new Selector('#file', true), new Selector('.help:hover', true), new Selector('li.green', true), new Selector('ol li::before', true)), $oDoc->getSelectorsBySpecificity('<= 100'));\n+\t\t$this->assertEquals(array(new Selector('.help:hover', true), new Selector('li.green', true), new Selector('ol li::before', true)), $oDoc->getSelectorsBySpecificity('< 100'));\n+\t\t$this->assertEquals(array(new Selector('li.green', true)), $oDoc->getSelectorsBySpecificity('11'));\n+\t\t$this->assertEquals(array(new Selector('ol li::before', true)), $oDoc->getSelectorsBySpecificity(3));\n \t}\n \n \tfunction testManipulation() {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d783f0e94ccb58136e9da84f661a310b01b66166",
            "date": "2025-01-03T15:22:43Z",
            "author_login": "oliverklee"
          },
          {
            "sha": "9aba8865fb309fd4f64974e8d88523ffbdb0ccad",
            "date": "2024-12-31T17:47:53Z",
            "author_login": "oliverklee"
          },
          {
            "sha": "56d4c4e8e0b61df2a8c0821f46f4bc5674347177",
            "date": "2024-12-31T17:41:25Z",
            "author_login": "oliverklee"
          },
          {
            "sha": "fe2eaa0c1b1325191bc9ccffdeda6ee9cf1f7fae",
            "date": "2024-12-19T19:46:07Z",
            "author_login": "oliverklee"
          },
          {
            "sha": "3d8e6b68c73a4de6991800ddf9565700eeb1b2f8",
            "date": "2024-12-17T23:22:55Z",
            "author_login": "oliverklee"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Sabberworm PHP CSS Parser before 8.3.1 calls eval on uncontrolled data, possibly leading to remote code execution if the function allSelectors() or getSelectorsBySpecificity() is called with input from an attacker.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-06-03T14:15:12.703",
    "last_modified": "2024-11-21T05:01:47.240",
    "fix_date": "2020-06-01T09:03:20Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/157923/Sabberworm-PHP-CSS-Code-Injection.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/Jun/7",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sabberworm/PHP-CSS-Parser/commit/2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sabberworm/PHP-CSS-Parser/releases/tag/8.3.1",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/157923/Sabberworm-PHP-CSS-Code-Injection.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/Jun/7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sabberworm/PHP-CSS-Parser/commit/2ebf59e8bfbf6cfc1653a5f0ed743b95062c62a4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sabberworm/PHP-CSS-Parser/releases/tag/8.3.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:47.830248",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "PHP-CSS-Parser",
    "owner": "sabberworm",
    "created_at": "2010-08-24T09:39:55Z",
    "updated_at": "2025-01-05T14:23:54Z",
    "pushed_at": "2025-01-06T10:50:29Z",
    "size": 2081,
    "stars": 1774,
    "forks": 148,
    "open_issues": 119,
    "watchers": 1774,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 274611
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:55:50.285073"
  }
}