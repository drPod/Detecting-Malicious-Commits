{
  "cve_id": "CVE-2020-15097",
  "github_data": {
    "repository": "loklak/loklak_server",
    "fix_commit": "50dd69230d3cd71dab0bfa7156682ffeca8ed8b9",
    "related_commits": [
      "50dd69230d3cd71dab0bfa7156682ffeca8ed8b9",
      "50dd69230d3cd71dab0bfa7156682ffeca8ed8b9"
    ],
    "patch_url": "https://github.com/loklak/loklak_server/commit/50dd69230d3cd71dab0bfa7156682ffeca8ed8b9.patch",
    "fix_commit_details": {
      "sha": "50dd69230d3cd71dab0bfa7156682ffeca8ed8b9",
      "commit_date": "2020-07-02T16:46:45Z",
      "author": {
        "login": "sudheesh001",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7557-4v29-rqw6",
        "length": 68,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 71,
        "additions": 68,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/org/loklak/data/DAO.java",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -99,6 +99,7 @@\n import org.loklak.server.*;\n import org.loklak.stream.MQTTPublisher;\n import org.loklak.tools.DateParser;\n+import org.loklak.tools.IO;\n import org.loklak.tools.OS;\n import org.loklak.tools.storage.*;\n import org.slf4j.Logger;\n@@ -340,7 +341,7 @@ public static void init(Map<String, String> configMap, Path dataPath) throws Exc\n         // elasticsearch will probably take some time until it is started up. We do some other stuff meanwhile..\n \n         // create and document the data dump dir\n-        assets = new File(datadir, \"assets\");\n+        assets = new File(datadir, \"assets\").getAbsoluteFile();\n         external_data = new File(datadir, \"external\");\n         dictionaries = new File(external_data, \"dictionaries\");\n         dictionaries.mkdirs();\n@@ -525,8 +526,8 @@ public static Map<String, String> nodeSettings() {\n     public static File getAssetFile(String screen_name, String id_str, String file) {\n         String letter0 = (\"\" + screen_name.charAt(0)).toLowerCase();\n         String letter1 = (\"\" + screen_name.charAt(1)).toLowerCase();\n-        File storage_path = new File(new File(new File(assets, letter0), letter1), screen_name);\n-        return new File(storage_path, id_str + \"_\" + file); // all assets for one user in one file\n+        Path storage_path = IO.resolvePath(assets.toPath(), letter0, letter1, screen_name);\n+        return IO.resolvePath(storage_path, id_str + \"_\" + file).toFile(); // all assets for one user in one file\n     }\n \n     public static Collection<File> getTweetOwnDumps(int count) {"
        },
        {
          "filename": "src/org/loklak/tools/IO.java",
          "status": "modified",
          "additions": 64,
          "deletions": 0,
          "patch": "@@ -7,6 +7,7 @@\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.Paths;\n import java.security.*;\n import java.security.spec.InvalidKeySpecException;\n import java.security.spec.X509EncodedKeySpec;\n@@ -96,4 +97,67 @@ public synchronized static PublicKey decodePublicKey(@Nonnull String encodedKey,\n \t\t}\n \t\treturn null;\n \t}\n+\t\n+\t/**\n+\t * Resolves an untrusted user-specified path against the API's base directory.\n+\t * Paths that try to escape the base directory are rejected.\n+\t *\n+\t * @param baseDirPath  the absolute path of the base directory that all\n+\t * user-specified paths should be within\n+\t * @param userPath  the untrusted path provided by the API user, expected to be\n+\t * relative to {@code baseDirPath}\n+\t */\n+\tpublic static Path resolvePath(final Path baseDirPath, final Path userPath) {\n+\t\tif (!baseDirPath.isAbsolute()) {\n+\t\t\tthrow new IllegalArgumentException(\"Base path must be absolute\");\n+\t\t}\n+\n+\t\tif (userPath.isAbsolute()) {\n+\t\t\tthrow new IllegalArgumentException(\"User path must be relative\");\n+\t\t}\n+\n+\t\t// Join the two paths together, then normalize so that any \"..\" elements\n+\t\t// in the userPath can remove parts of baseDirPath.\n+\t\t// (e.g. \"/foo/bar/baz\" + \"../attack\" -> \"/foo/bar/attack\")\n+\t\tfinal Path resolvedPath = baseDirPath.resolve(userPath).normalize();\n+\n+\t\t// Make sure the resulting path is still within the required directory.\n+\t\t// (In the example above, \"/foo/bar/attack\" is not.)\n+\t\tif (!resolvedPath.startsWith(baseDirPath)) {\n+\t\t\tthrow new IllegalArgumentException(\"User path escapes the base path\");\n+\t\t}\n+\n+\t\treturn resolvedPath;\n+\t}\n+\n+\tpublic static Path resolvePath(final Path baseDirPath, final String userPath) {\n+\t\treturn resolvePath(baseDirPath, Paths.get(userPath));\n+\t}\n+\n+\t/**\n+\t * Checks each subsequent path to be strictly within the baseDirPath so that\n+\t * no path argument leads to directory traversal attack\n+\t *\n+\t * E.g. /models/ + req.model + '/' + req.lang + /images/ + req.image\n+\t * Should be checked for ('models', req.model, req.lang, 'images', req.image)\n+\t * that each subsequent element is within the previous and not breaking out by passing\n+\t * req.model => ..\n+\t * req.lang  => ..\n+\t * req.image => ../../private/data.json\n+\t *\n+\t * Since just checking the last argument isn't enough\n+\t *\n+\t * @param baseDirPath the absolute path of the base directory that all\n+\t * user-specified paths should be within\n+\t * @param paths the untrusted paths provided by the API user, expected to be\n+\t * relative to {@code baseDirPath}\n+\t */\n+\tpublic static Path resolvePath(final Path baseDirPath, final String... paths) {\n+\t\tPath resolved = baseDirPath;\n+\t\tfor (String path: paths) {\n+\t\t\tresolved = resolvePath(resolved, path);\n+\t\t}\n+\n+\t\treturn resolved;\n+\t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f79c657ef8b2c9fccd505ee6c887e38c861f10f3",
            "date": "2020-08-24T17:00:41Z",
            "author_login": "Orbiter"
          },
          {
            "sha": "d6ea5acf04f8f8395984b473cdc7e69c6745a593",
            "date": "2020-08-24T17:00:26Z",
            "author_login": "Orbiter"
          },
          {
            "sha": "d866d7db9249af9d2bed15f99e1146795a3bec66",
            "date": "2020-08-22T11:54:06Z",
            "author_login": "Orbiter"
          },
          {
            "sha": "1577e039c450dacdbfcfb35c21d0b4b6991d2aca",
            "date": "2020-08-11T21:25:59Z",
            "author_login": "Orbiter"
          },
          {
            "sha": "440c34d95a4c0bbc1e251685c4b3b9c0f6f6ff4b",
            "date": "2020-08-11T21:16:16Z",
            "author_login": "Orbiter"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-22",
    "description": "loklak is an open-source server application which is able to collect messages from various sources, including twitter. The server contains a search index and a peer-to-peer index sharing interface. All messages are stored in an elasticsearch index. In loklak less than or equal to commit 5f48476, a path traversal vulnerability exists. Insufficient input validation in the APIs exposed by the loklak server allowed a directory traversal vulnerability. Any admin configuration and files readable by the app available on the hosted file system can be retrieved by the attacker. Furthermore, user-controlled content could be written to any admin config and files readable by the application. This has been patched in commit 50dd692. Users will need to upgrade their hosted instances of loklak to not be vulnerable to this exploit.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-02-02T18:15:11.420",
    "last_modified": "2024-11-21T05:04:48.143",
    "fix_date": "2020-07-02T16:46:45Z"
  },
  "references": [
    {
      "url": "https://github.com/loklak/loklak_server/commit/50dd69230d3cd71dab0bfa7156682ffeca8ed8b9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/loklak/loklak_server/security/advisories/GHSA-7557-4v29-rqw6",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/loklak/loklak_server/commit/50dd69230d3cd71dab0bfa7156682ffeca8ed8b9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/loklak/loklak_server/security/advisories/GHSA-7557-4v29-rqw6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.178830",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "loklak_server",
    "owner": "loklak",
    "created_at": "2015-03-23T18:32:59Z",
    "updated_at": "2025-01-08T16:55:31Z",
    "pushed_at": "2022-10-03T21:25:38Z",
    "size": 239472,
    "stars": 1383,
    "forks": 222,
    "open_issues": 95,
    "watchers": 1383,
    "has_security_policy": false,
    "default_branch": "development",
    "protected_branches": [
      "development",
      "master"
    ],
    "languages": {
      "Java": 1918128,
      "JavaScript": 31492,
      "HTML": 30255,
      "Shell": 17976,
      "Python": 9193,
      "CSS": 9046,
      "Perl": 5111,
      "Scala": 3943,
      "Dockerfile": 3584,
      "Ruby": 427,
      "Batchfile": 277
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T21:57:34.129430"
  }
}