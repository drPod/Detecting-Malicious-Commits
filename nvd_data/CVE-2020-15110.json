{
  "cve_id": "CVE-2020-15110",
  "github_data": {
    "repository": "jupyterhub/kubespawner",
    "fix_commit": "3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
    "related_commits": [
      "3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
      "3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0"
    ],
    "patch_url": "https://github.com/jupyterhub/kubespawner/commit/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0.patch",
    "fix_commit_details": {
      "sha": "3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
      "commit_date": "2020-07-03T07:48:42Z",
      "author": {
        "login": "minrk",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "move delimiter to pvc/pod name templates",
        "length": 65,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 28,
        "deletions": 16
      },
      "files": [
        {
          "filename": "kubespawner/spawner.py",
          "status": "modified",
          "additions": 28,
          "deletions": 16,
          "patch": "@@ -307,16 +307,25 @@ def _namespace_default(self):\n     )\n \n     pod_name_template = Unicode(\n-        'jupyter-{username}{servername}',\n+        'jupyter-{username}--{servername}',\n         config=True,\n         help=\"\"\"\n         Template to use to form the name of user's pods.\n \n-        `{username}` is expanded to the escaped, dns-label safe username.\n+        `{username}` is expanded to the escaped, dns-label-safe username.\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\n+\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\n \n         This must be unique within the namespace the pods are being spawned\n         in, so if you are running multiple jupyterhubs spawning in the\n         same namespace, consider setting this to be something more unique.\n+\n+        .. versionchanged:: 0.12\n+            `--` delimiter added to the template,\n+            where it was implicitly added to the `servername` field before.\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\n+            allowing collisions in certain circumstances.\n         \"\"\"\n     )\n \n@@ -332,16 +341,25 @@ def _namespace_default(self):\n     )\n \n     pvc_name_template = Unicode(\n-        'claim-{username}{servername}',\n+        'claim-{username}--{servername}',\n         config=True,\n         help=\"\"\"\n         Template to use to form the name of user's pvc.\n \n         `{username}` is expanded to the escaped, dns-label safe username.\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\n+\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\n \n         This must be unique within the namespace the pvc are being spawned\n         in, so if you are running multiple jupyterhubs spawning in the\n         same namespace, consider setting this to be something more unique.\n+\n+        .. versionchanged:: 0.12\n+            `--` delimiter added to the template,\n+            where it was implicitly added to the `servername` field before.\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\n+            allowing collisions in certain circumstances.\n         \"\"\"\n     )\n \n@@ -1313,28 +1331,22 @@ def _expand_user_properties(self, template):\n         # Note: '-' is not in safe_chars, as it is being used as escape character\n         safe_chars = set(string.ascii_lowercase + string.digits)\n \n-        # Set servername based on whether named-server initialised\n-        if self.name:\n-            # use two -- to ensure no collision possibilities\n-            # are created by an ambiguous boundary between username and\n-            # servername.\n-            # -- cannot occur in a string where - is the escape char.\n-            servername = '--{}'.format(self.name)\n-            safe_servername = '--{}'.format(escapism.escape(self.name, safe=safe_chars, escape_char='-').lower())\n-        else:\n-            servername = ''\n-            safe_servername = ''\n+        raw_servername = self.name or ''\n+        safe_servername = escapism.escape(raw_servername, safe=safe_chars, escape_char='-').lower()\n \n         legacy_escaped_username = ''.join([s if s in safe_chars else '-' for s in self.user.name.lower()])\n         safe_username = escapism.escape(self.user.name, safe=safe_chars, escape_char='-').lower()\n-        return template.format(\n+        rendered = template.format(\n             userid=self.user.id,\n             username=safe_username,\n             unescaped_username=self.user.name,\n             legacy_escape_username=legacy_escaped_username,\n             servername=safe_servername,\n-            unescaped_servername=servername,\n+            unescaped_servername=raw_servername,\n         )\n+        # strip trailing - delimiter in case of empty servername.\n+        # k8s object names cannot have trailing -\n+        return rendered.rstrip(\"-\")\n \n     def _expand_all(self, src):\n         if isinstance(src, list):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ac45e946ae39a2949c50a0b1a2bee79077b1351",
            "date": "2024-11-15T17:39:13Z",
            "author_login": "consideRatio"
          },
          {
            "sha": "d11546ef41092428e538e069320e4e759e571027",
            "date": "2024-11-15T15:53:52Z",
            "author_login": "manics"
          },
          {
            "sha": "d20a65fa22d7b9a2dfbc2b6127b3e67e8754d093",
            "date": "2024-11-08T07:31:51Z",
            "author_login": "consideRatio"
          },
          {
            "sha": "aadc3e4e50803a0abb46749e07a37e29fa5c840b",
            "date": "2024-11-08T06:09:57Z",
            "author_login": "omad"
          },
          {
            "sha": "ff5cb0cc1ceb953b33b4dc2f465c58426ffd3788",
            "date": "2024-11-06T08:29:47Z",
            "author_login": "minrk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "In jupyterhub-kubespawner before 0.12, certain usernames will be able to craft particular server names which will grant them access to the default server of other users who have matching usernames. This has been fixed in 0.12.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-07-17T21:15:12.857",
    "last_modified": "2024-11-21T05:04:50.033",
    "fix_date": "2020-07-03T07:48:42Z"
  },
  "references": [
    {
      "url": "https://github.com/jupyterhub/kubespawner/commit/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyterhub/kubespawner/security/advisories/GHSA-v7m9-9497-p9gr",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyterhub/kubespawner/commit/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyterhub/kubespawner/security/advisories/GHSA-v7m9-9497-p9gr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:01.369978",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "kubespawner",
    "owner": "jupyterhub",
    "created_at": "2015-11-21T07:02:52Z",
    "updated_at": "2025-01-14T00:16:24Z",
    "pushed_at": "2025-01-07T01:50:58Z",
    "size": 1624,
    "stars": 553,
    "forks": 303,
    "open_issues": 91,
    "watchers": 553,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 479473,
      "HTML": 4543,
      "CSS": 636
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T14:41:03.571268"
  }
}