{
  "cve_id": "CVE-2020-15130",
  "github_data": {
    "repository": "simpleledger/slpjs",
    "fix_commit": "290c20e8bff13ac81459d43e54cac232b5e3456c",
    "related_commits": [
      "290c20e8bff13ac81459d43e54cac232b5e3456c",
      "290c20e8bff13ac81459d43e54cac232b5e3456c"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "290c20e8bff13ac81459d43e54cac232b5e3456c",
      "commit_date": "2020-07-29T16:10:14Z",
      "author": {
        "login": "jcramer",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "critical update for NFT child genesis validation",
        "length": 48,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 56,
        "additions": 35,
        "deletions": 21
      },
      "files": [
        {
          "filename": "lib/localvalidator.ts",
          "status": "modified",
          "additions": 32,
          "deletions": 18,
          "patch": "@@ -210,9 +210,10 @@ export class LocalValidator implements SlpValidator {\n             if (slpmsg.versionType === 0x41) {\n                 // An NFT1 parent should be provided at input index 0,\n                 // so we check this first before checking the whole parent DAG\n-                let input_txid = txn.inputs[0].prevTxId.toString(\"hex\");\n-                let input_txhex = await this.retrieveRawTransaction(input_txid);\n-                let input_tx: Bitcore.Transaction = new Bitcore.Transaction(input_txhex);\n+                const input_txid = txn.inputs[0].prevTxId.toString(\"hex\");\n+                const input_prevout = txn.inputs[0].outputIndex;\n+                const input_txhex = await this.retrieveRawTransaction(input_txid);\n+                const input_tx: Bitcore.Transaction = new Bitcore.Transaction(input_txhex);\n                 let input_slpmsg;\n                 try {\n                     input_slpmsg = this.slp.parseSlpOutputScript(input_tx.outputs[0]._scriptBuffer);\n@@ -224,21 +225,34 @@ export class LocalValidator implements SlpValidator {\n                     return this.cachedValidations[txid].validity!;\n                 }\n                 // Check that the there is a burned output >0 in the parent txn SLP message\n-                if (input_slpmsg.transactionType === SlpTransactionType.SEND &&\n-                    (!input_slpmsg.sendOutputs![1].isGreaterThan(0)))\n-                {\n-                    this.cachedValidations[txid].validity = false;\n-                    this.cachedValidations[txid].waiting = false;\n-                    this.cachedValidations[txid].invalidReason = \"NFT1 child's parent has SLP output that is not greater than zero.\";\n-                    return this.cachedValidations[txid].validity!;\n-                } else if ((input_slpmsg.transactionType === SlpTransactionType.GENESIS ||\n-                            input_slpmsg.transactionType === SlpTransactionType.MINT) &&\n-                            !input_slpmsg.genesisOrMintQuantity!.isGreaterThan(0))\n-                {\n-                    this.cachedValidations[txid].validity = false;\n-                    this.cachedValidations[txid].waiting = false;\n-                    this.cachedValidations[txid].invalidReason = \"NFT1 child's parent has SLP output that is not greater than zero.\";\n-                    return this.cachedValidations[txid].validity!;\n+                if (input_slpmsg.transactionType === SlpTransactionType.SEND) {\n+                    if (input_prevout > input_slpmsg.sendOutputs!.length - 1) {\n+                        this.cachedValidations[txid].validity = false;\n+                        this.cachedValidations[txid].waiting = false;\n+                        this.cachedValidations[txid].invalidReason = \"NFT1 child GENESIS does not have a valid NFT1 parent input.\";\n+                        return this.cachedValidations[txid].validity!;\n+                    } else if (! input_slpmsg.sendOutputs![input_prevout].isGreaterThan(0)) {\n+                        this.cachedValidations[txid].validity = false;\n+                        this.cachedValidations[txid].waiting = false;\n+                        this.cachedValidations[txid].invalidReason = \"NFT1 child's parent has SLP output that is not greater than zero.\";\n+                        return this.cachedValidations[txid].validity!;\n+                    } else {\n+                        this.cachedValidations[txid].validity = true;\n+                        this.cachedValidations[txid].waiting = false;\n+                    }\n+                } else if (input_slpmsg.transactionType === SlpTransactionType.GENESIS ||\n+                            input_slpmsg.transactionType === SlpTransactionType.MINT) {\n+                    if (input_prevout !== 1) {\n+                        this.cachedValidations[txid].validity = false;\n+                        this.cachedValidations[txid].waiting = false;\n+                        this.cachedValidations[txid].invalidReason = \"NFT1 child GENESIS does not have a valid NFT1 parent input.\";\n+                        return this.cachedValidations[txid].validity!;\n+                    } else if (!input_slpmsg.genesisOrMintQuantity!.isGreaterThan(0)) {\n+                        this.cachedValidations[txid].validity = false;\n+                        this.cachedValidations[txid].waiting = false;\n+                        this.cachedValidations[txid].invalidReason = \"NFT1 child's parent has SLP output that is not greater than zero.\";\n+                        return this.cachedValidations[txid].validity!;\n+                    }\n                 }\n                 // Continue to check the NFT1 parent DAG\n                 let nft_parent_dag_validity = await this.isValidSlpTxid(input_txid, undefined, 0x81);"
        },
        {
          "filename": "package-lock.json",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -5592,8 +5592,8 @@\n       }\n     },\n     \"slp-unit-test-data\": {\n-      \"version\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#a450146e112aee4db5a1b33dc978229fdcfb23a4\",\n-      \"from\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#a450146e112aee4db5a1b33dc978229fdcfb23a4\",\n+      \"version\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#8c942eacfae12686dcf1f3366321445a4fba73e7\",\n+      \"from\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#8c942eacfae12686dcf1f3366321445a4fba73e7\",\n       \"dev\": true\n     },\n     \"socket.io\": {"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n     \"mkdirp\": \"^0.5.5\",\n     \"mocha\": \"^7.2.0\",\n     \"nyc\": \"^15.1.0\",\n-    \"slp-unit-test-data\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#a450146e112aee4db5a1b33dc978229fdcfb23a4\",\n+    \"slp-unit-test-data\": \"git+https://github.com/simpleledger/slp-unit-test-data.git#8c942eacfae12686dcf1f3366321445a4fba73e7\",\n     \"source-map-support\": \"^0.5.19\",\n     \"ts-node\": \"^7.0.1\",\n     \"typescript\": \"^3.9.5\","
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8fdfc622d3231f9079b6da6701d0ee5331e7928d",
            "date": "2021-04-11T15:09:19Z",
            "author_login": "jcramer"
          },
          {
            "sha": "39aaed9673eb504c4603628e3d879bc0a6b1ff00",
            "date": "2021-04-11T15:02:41Z",
            "author_login": "jcramer"
          },
          {
            "sha": "d5db3edb451cc40fbbcd7b3fbf44cffa598df820",
            "date": "2021-03-30T16:21:13Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "3ee1a73a40fc698039733a75d93bf5e4500d7534",
            "date": "2021-02-28T20:16:57Z",
            "author_login": "jcramer"
          },
          {
            "sha": "ba4380535b7054ab9a7028cfff256b418b634e1e",
            "date": "2021-02-28T20:16:45Z",
            "author_login": "jcramer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-697",
    "description": "In SLPJS (npm package slpjs) before version 0.27.4, there is a vulnerability to false-positive validation outcomes for the NFT1 Child Genesis transaction type. A poorly implemented SLP wallet or opportunistic attacker could create a seemingly valid NFT1 child token without burning any of the NFT1 Group token type as is required by the NFT1 specification. This is fixed in version 0.27.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-07-30T15:15:13.057",
    "last_modified": "2024-11-21T05:04:54.477",
    "fix_date": "2020-07-29T16:10:14Z"
  },
  "references": [
    {
      "url": "https://github.com/simpleledger/slpjs/commit/290c20e8bff13ac81459d43e54cac232b5e3456c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/simpleledger/slpjs/security/advisories/GHSA-cc2p-4jhr-xhhx",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/simpleledger/slpjs/commit/290c20e8bff13ac81459d43e54cac232b5e3456c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/simpleledger/slpjs/security/advisories/GHSA-cc2p-4jhr-xhhx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:01.381937",
    "processing_status": "enhanced"
  }
}