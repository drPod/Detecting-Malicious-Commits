{
  "cve_id": "CVE-2020-15141",
  "github_data": {
    "repository": "triaxtec/openapi-python-client",
    "fix_commit": "3e7dfae5d0b3685abf1ede1bc6c086a116ac4746",
    "related_commits": [
      "3e7dfae5d0b3685abf1ede1bc6c086a116ac4746",
      "3e7dfae5d0b3685abf1ede1bc6c086a116ac4746"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "3e7dfae5d0b3685abf1ede1bc6c086a116ac4746",
      "commit_date": "2020-08-13T16:57:06Z",
      "author": {
        "login": "dbanty",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7wgr-7666-7pwj",
        "length": 259,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 23,
        "deletions": 17
      },
      "files": [
        {
          "filename": "end_to_end_tests/regen_golden_master.py",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -7,9 +7,6 @@\n from openapi_python_client.cli import app\n \n if __name__ == \"__main__\":\n-    from .fastapi_app import generate_openapi_json\n-\n-    generate_openapi_json()\n     runner = CliRunner()\n     openapi_path = Path(__file__).parent / \"fastapi_app\" / \"openapi.json\"\n     gm_path = Path(__file__).parent / \"golden-master\""
        },
        {
          "filename": "openapi_python_client/__init__.py",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -83,15 +83,15 @@ def _get_document(*, url: Optional[str], path: Optional[Path]) -> Union[Dict[str\n \n \n class Project:\n-    TEMPLATE_FILTERS = {\"snakecase\": utils.snake_case, \"spinalcase\": utils.spinal_case}\n+    TEMPLATE_FILTERS = {\"snakecase\": utils.snake_case, \"kebabcase\": utils.kebab_case}\n     project_name_override: Optional[str] = None\n     package_name_override: Optional[str] = None\n \n     def __init__(self, *, openapi: GeneratorData) -> None:\n         self.openapi: GeneratorData = openapi\n         self.env: Environment = Environment(loader=PackageLoader(__package__), trim_blocks=True, lstrip_blocks=True)\n \n-        self.project_name: str = self.project_name_override or f\"{openapi.title.replace(' ', '-').lower()}-client\"\n+        self.project_name: str = self.project_name_override or f\"{utils.kebab_case(openapi.title).lower()}-client\"\n         self.project_dir: Path = Path.cwd() / self.project_name\n \n         self.package_name: str = self.package_name_override or self.project_name.replace(\"-\", \"_\")\n@@ -231,6 +231,7 @@ def _build_api(self) -> None:\n         endpoint_template = self.env.get_template(\"endpoint_module.pyi\")\n         async_endpoint_template = self.env.get_template(\"async_endpoint_module.pyi\")\n         for tag, collection in self.openapi.endpoint_collections_by_tag.items():\n+            tag = utils.snake_case(tag)\n             module_path = api_dir / f\"{tag}.py\"\n             module_path.write_text(endpoint_template.render(collection=collection))\n             async_module_path = async_api_dir / f\"{tag}.py\""
        },
        {
          "filename": "openapi_python_client/templates/endpoint_macros.pyi",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -2,10 +2,10 @@\n {% if endpoint.header_parameters %}\n     {% for parameter in endpoint.header_parameters %}\n         {% if parameter.required %}\n-headers[\"{{ parameter.python_name | spinalcase}}\"] = {{ parameter.python_name }}\n+headers[\"{{ parameter.python_name | kebabcase}}\"] = {{ parameter.python_name }}\n         {% else %}\n if {{ parameter.python_name }} is not None:\n-    headers[\"{{ parameter.python_name | spinalcase}}\"] = {{ parameter.python_name }}\n+    headers[\"{{ parameter.python_name | kebabcase}}\"] = {{ parameter.python_name }}\n         {% endif %}\n     {% endfor %}\n {% endif %}"
        },
        {
          "filename": "openapi_python_client/utils.py",
          "status": "modified",
          "additions": 13,
          "deletions": 5,
          "patch": "@@ -3,15 +3,23 @@\n import stringcase\n \n \n-def snake_case(value: str) -> str:\n+def _sanitize(value: str) -> str:\n+    return re.sub(r\"[^\\w _-]+\", \"\", value)\n+\n+\n+def group_title(value: str) -> str:\n     value = re.sub(r\"([A-Z]{2,})([A-Z][a-z]|[ -_]|$)\", lambda m: m.group(1).title() + m.group(2), value.strip())\n     value = re.sub(r\"(^|[ _-])([A-Z])\", lambda m: m.group(1) + m.group(2).lower(), value)\n-    return stringcase.snakecase(value)\n+    return value\n+\n+\n+def snake_case(value: str) -> str:\n+    return stringcase.snakecase(group_title(_sanitize(value)))\n \n \n def pascal_case(value: str) -> str:\n-    return stringcase.pascalcase(value)\n+    return stringcase.pascalcase(_sanitize(value))\n \n \n-def spinal_case(value: str) -> str:\n-    return stringcase.spinalcase(value)\n+def kebab_case(value: str) -> str:\n+    return stringcase.spinalcase(group_title(_sanitize(value)))"
        },
        {
          "filename": "tests/test___init__.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -486,8 +486,8 @@ def test__build_api(self, mocker):\n         from openapi_python_client import GeneratorData, Project\n \n         openapi = mocker.MagicMock(autospec=GeneratorData, title=\"My Test API\")\n-        tag_1 = mocker.MagicMock(autospec=str)\n-        tag_2 = mocker.MagicMock(autospec=str)\n+        tag_1 = \"a_tag\"\n+        tag_2 = \"another_tag\"\n         collection_1 = mocker.MagicMock()\n         collection_2 = mocker.MagicMock()\n         openapi.endpoint_collections_by_tag = {tag_1: collection_1, tag_2: collection_2}"
        },
        {
          "filename": "tests/test_templates/conftest.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,7 +6,7 @@\n def env() -> Environment:\n     from openapi_python_client import utils\n \n-    TEMPLATE_FILTERS = {\"snakecase\": utils.snake_case, \"spinalcase\": utils.spinal_case}\n+    TEMPLATE_FILTERS = {\"snakecase\": utils.snake_case, \"kebabcase\": utils.kebab_case}\n     env = Environment(loader=PackageLoader(\"openapi_python_client\"), trim_blocks=True, lstrip_blocks=True)\n     env.filters.update(TEMPLATE_FILTERS)\n     return env"
        },
        {
          "filename": "tests/test_utils.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -20,5 +20,5 @@ def test_snake_case_from_camel():\n     assert utils.snake_case(\"httpResponseLowerCamel\") == \"http_response_lower_camel\"\n \n \n-def test_spinal_case():\n-    assert utils.spinal_case(\"keep_alive\") == \"keep-alive\"\n+def test_kebab_case():\n+    assert utils.kebab_case(\"keep_alive\") == \"keep-alive\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 5,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5cfe4e1d594951725844ea470fc9d61f40c08093",
            "date": "2025-01-22T16:06:18Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "ca3a42a59f757dfdf1c1014b261d4c16de1f9438",
            "date": "2025-01-22T15:57:02Z",
            "author_login": "knope-bot[bot]"
          },
          {
            "sha": "3bd12f86f0c196896818e1b0952f457b29fcbc11",
            "date": "2025-01-13T17:00:54Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "a594a14873c47e940d076f16ba021e8b61f699ee",
            "date": "2025-01-13T16:50:59Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "718e9aaa743550d31f4e7db14de10cb3c91d36bc",
            "date": "2024-12-30T17:17:52Z",
            "author_login": "renovate[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N",
    "cwe_id": "CWE-22",
    "description": "In openapi-python-client before version 0.5.3, there is a path traversal vulnerability. If a user generated a client using a maliciously crafted OpenAPI document, it is possible for generated files to be placed in arbitrary locations on disk.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-08-14T17:15:13.877",
    "last_modified": "2024-11-21T05:04:55.920",
    "fix_date": "2020-08-13T16:57:06Z"
  },
  "references": [
    {
      "url": "https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/triaxtec/openapi-python-client/commit/3e7dfae5d0b3685abf1ede1bc6c086a116ac4746",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-7wgr-7666-7pwj",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/openapi-python-client",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/triaxtec/openapi-python-client/commit/3e7dfae5d0b3685abf1ede1bc6c086a116ac4746",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-7wgr-7666-7pwj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/openapi-python-client",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.794511",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "openapi-python-client",
    "owner": "triaxtec",
    "created_at": "2020-02-15T19:33:46Z",
    "updated_at": "2025-01-25T21:59:27Z",
    "pushed_at": "2025-01-24T05:39:15Z",
    "size": 3347,
    "stars": 1427,
    "forks": 211,
    "open_issues": 71,
    "watchers": 1427,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 979413,
      "Jinja": 52889
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:59:59.502991"
  }
}