{
  "cve_id": "CVE-2020-15163",
  "github_data": {
    "repository": "theupdateframework/tuf",
    "fix_commit": "3d342e648fbacdf43a13d7ba8886aaaf07334af7",
    "related_commits": [
      "3d342e648fbacdf43a13d7ba8886aaaf07334af7",
      "3d342e648fbacdf43a13d7ba8886aaaf07334af7"
    ],
    "patch_url": "https://github.com/theupdateframework/tuf/commit/3d342e648fbacdf43a13d7ba8886aaaf07334af7.patch",
    "fix_commit_details": {
      "sha": "3d342e648fbacdf43a13d7ba8886aaaf07334af7",
      "commit_date": "2019-10-07T09:54:59Z",
      "author": {
        "login": "lukpueh",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #885 from trishankatdatadog:trishankatdatadog/correctly-rotate-root",
        "length": 146,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 71,
        "additions": 53,
        "deletions": 18
      },
      "files": [
        {
          "filename": "tuf/client/updater.py",
          "status": "modified",
          "additions": 49,
          "deletions": 18,
          "patch": "@@ -145,6 +145,7 @@\n import securesystemslib.util\n import six\n import iso8601\n+import requests.exceptions\n \n # The Timestamp role does not have signed metadata about it; otherwise we\n # would need an infinite regress of metadata. Therefore, we use some\n@@ -1125,28 +1126,58 @@ def _update_root_metadata(self, current_root_metadata):\n       None.\n     \"\"\"\n \n-    # Retrieve the latest, remote root.json.\n-    latest_root_metadata_file = self._get_metadata_file(\n-        'root', 'root.json', DEFAULT_ROOT_UPPERLENGTH, None)\n+    def neither_403_nor_404(mirror_error):\n+      if isinstance(mirror_error, requests.exceptions.HTTPError):\n+        if mirror_error.response.status_code in {403, 404}:\n+          return False\n+      return True\n \n-    latest_root_metadata = securesystemslib.util.load_json_string(\n-        latest_root_metadata_file.read().decode('utf-8'))\n+    # Temporarily set consistent snapshot. Will be updated to whatever is set\n+    # in the latest root.json after running through the intermediates with\n+    # _update_metadata().\n+    self.consistent_snapshot = True\n \n+    # Following the spec, try downloading the N+1th root for a certain maximum\n+    # number of times.\n+    lower_bound = current_root_metadata['version'] + 1\n+    upper_bound = lower_bound + tuf.settings.MAX_NUMBER_ROOT_ROTATIONS\n+\n+    # Try downloading the next root.\n+    for next_version in range(lower_bound, upper_bound):\n+      try:\n+        # Thoroughly verify it.\n+        self._update_metadata('root', DEFAULT_ROOT_UPPERLENGTH,\n+            version=next_version)\n+      # When we run into HTTP 403/404 error from ALL mirrors, break out of\n+      # loop, because the next root metadata file is most likely missing.\n+      except tuf.exceptions.NoWorkingMirrorError as exception:\n+        for mirror_error in exception.mirror_errors.values():\n+          # Otherwise, reraise the error, because it is not a simple HTTP\n+          # error.\n+          if neither_403_nor_404(mirror_error):\n+            logging.exception('Misc error for root version '+str(next_version))\n+            raise\n+          else:\n+            # Calling this function should give us a detailed stack trace\n+            # including an HTTP error code, if any.\n+            logging.exception('HTTP error for root version '+str(next_version))\n+        # If we are here, then we ran into only 403 / 404 errors, which are\n+        # good reasons to suspect that the next root metadata file does not\n+        # exist.\n+        break\n \n-    next_version = current_root_metadata['version'] + 1\n-    latest_version = latest_root_metadata['signed']['version']\n+      # Ensure that the role and key information of the top-level roles is the\n+      # latest.  We do this whether or not Root needed to be updated, in order\n+      # to ensure that, e.g., the entries in roledb for top-level roles are\n+      # populated with expected keyid info so that roles can be validated.  In\n+      # certain circumstances, top-level metadata might be missing because it\n+      # was marked obsolete and deleted after a failed attempt, and thus we\n+      # should refresh them here as a protective measure.  See Issue #736.\n+      self._rebuild_key_and_role_db()\n \n-    # update from the next version of root up to (and including) the latest\n-    # version.  For example:\n-    # current = version 1\n-    # latest = version 3\n-    # update from 1.root.json to 3.root.json.\n-    for version in range(next_version, latest_version + 1):\n-      # Temporarily set consistent snapshot. Will be updated to whatever is set\n-      # in the latest root.json after running through the intermediates with\n-      # _update_metadata().\n-      self.consistent_snapshot = True\n-      self._update_metadata('root', DEFAULT_ROOT_UPPERLENGTH, version=version)\n+    # Set our consistent snapshot property to what the latest root has said.\n+    self.consistent_snapshot = \\\n+        self.metadata['current']['root']['consistent_snapshot']\n \n \n "
        },
        {
          "filename": "tuf/settings.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -107,3 +107,7 @@\n # to suspend execution for a specified amount of time.  See\n # theupdateframework/tuf/issue#338.\n SLEEP_BEFORE_ROUND = None\n+\n+# Maximum number of root metadata file rotations we should perform in order to\n+# prevent a denial-of-service (DoS) attack.\n+MAX_NUMBER_ROOT_ROTATIONS = 2**5"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e49b613cf8d8d47040fdd7161d4896f2d654850e",
            "date": "2025-01-14T08:27:24Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "43221a931a47d85dda8e4c92c764371453f1536b",
            "date": "2025-01-07T08:35:55Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "467e806614ca2b8dd10a52ce46ff547d16219489",
            "date": "2025-01-06T14:25:55Z",
            "author_login": "kairoaraujo"
          },
          {
            "sha": "3c4fcde38a7acb3f55cfb07bfe824edb398562f3",
            "date": "2025-01-06T14:25:31Z",
            "author_login": "kairoaraujo"
          },
          {
            "sha": "83ec7be7cf3b08991c02b85872f3799e9c6342b3",
            "date": "2024-12-11T08:36:00Z",
            "author_login": "jku"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "Python TUF (The Update Framework) reference implementation before version 0.12 it will incorrectly trust a previously downloaded root metadata file which failed verification at download time. This allows an attacker who is able to serve multiple new versions of root metadata (i.e. by a person-in-the-middle attack) culminating in a version which has not been correctly signed to control the trust chain for future updates. This is fixed in version 0.12 and newer.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-09-09T18:15:22.480",
    "last_modified": "2024-11-21T05:04:58.837",
    "fix_date": "2019-10-07T09:54:59Z"
  },
  "references": [
    {
      "url": "https://github.com/theupdateframework/tuf/commit/3d342e648fbacdf43a13d7ba8886aaaf07334af7",
      "source": "security-advisories@github.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/pull/885",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/releases/tag/v0.12.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/security/advisories/GHSA-f8mr-jv2c-v8mg",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/tuf",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/commit/3d342e648fbacdf43a13d7ba8886aaaf07334af7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/pull/885",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/releases/tag/v0.12.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theupdateframework/tuf/security/advisories/GHSA-f8mr-jv2c-v8mg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/tuf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.824508",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "python-tuf",
    "owner": "theupdateframework",
    "created_at": "2013-01-31T18:36:34Z",
    "updated_at": "2025-01-14T12:27:57Z",
    "pushed_at": "2025-01-14T08:40:58Z",
    "size": 18682,
    "stars": 1636,
    "forks": 275,
    "open_issues": 90,
    "watchers": 1636,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "series/3.1"
    ],
    "languages": {
      "Python": 433939
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:17:31.165619"
  }
}