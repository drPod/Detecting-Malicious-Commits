{
  "cve_id": "CVE-2020-15185",
  "github_data": {
    "repository": "helm/helm",
    "fix_commit": "055dd41cbe53ce131ab0357524a7f6729e6e40dc",
    "related_commits": [
      "055dd41cbe53ce131ab0357524a7f6729e6e40dc",
      "055dd41cbe53ce131ab0357524a7f6729e6e40dc"
    ],
    "patch_url": "https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc.patch",
    "fix_commit_details": {
      "sha": "055dd41cbe53ce131ab0357524a7f6729e6e40dc",
      "commit_date": "2020-09-17T18:33:59Z",
      "author": {
        "login": "technosophos",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-jm56-5h66-w453",
        "length": 101,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 50,
        "additions": 48,
        "deletions": 2
      },
      "files": [
        {
          "filename": "pkg/downloader/chart_downloader_test.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -71,7 +71,7 @@ func TestResolveChartRef(t *testing.T) {\n \t\t\tif tt.fail {\n \t\t\t\tcontinue\n \t\t\t}\n-\t\t\tt.Errorf(\"%s: failed with error %s\", tt.name, err)\n+\t\t\tt.Errorf(\"%s: failed with error %q\", tt.name, err)\n \t\t\tcontinue\n \t\t}\n \t\tif got := u.String(); got != tt.expect {"
        },
        {
          "filename": "pkg/repo/index.go",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -228,6 +228,23 @@ type ChartVersion struct {\n \tCreated time.Time `json:\"created,omitempty\"`\n \tRemoved bool      `json:\"removed,omitempty\"`\n \tDigest  string    `json:\"digest,omitempty\"`\n+\n+\t// ChecksumDeprecated is deprecated in Helm 3, and therefore ignored. Helm 3 replaced\n+\t// this with Digest. However, with a strict YAML parser enabled, a field must be\n+\t// present on the struct for backwards compatibility.\n+\tChecksumDeprecated string `json:\"checksum,omitempty\"`\n+\n+\t// EngineDeprecated is deprecated in Helm 3, and therefore ignored. However, with a strict\n+\t// YAML parser enabled, this field must be present.\n+\tEngineDeprecated string `json:\"engine,omitempty\"`\n+\n+\t// TillerVersionDeprecated is deprecated in Helm 3, and therefore ignored. However, with a strict\n+\t// YAML parser enabled, this field must be present.\n+\tTillerVersionDeprecated string `json:\"tillerVersion,omitempty\"`\n+\n+\t// URLDeprecated is deprectaed in Helm 3, superseded by URLs. It is ignored. However,\n+\t// with a strict YAML parser enabled, this must be present on the struct.\n+\tURLDeprecated string `json:\"url,omitempty\"`\n }\n \n // IndexDirectory reads a (flat) directory and generates an index.\n@@ -281,7 +298,7 @@ func IndexDirectory(dir, baseURL string) (*IndexFile, error) {\n // This will fail if API Version is not set (ErrNoAPIVersion) or if the unmarshal fails.\n func loadIndex(data []byte) (*IndexFile, error) {\n \ti := &IndexFile{}\n-\tif err := yaml.Unmarshal(data, i); err != nil {\n+\tif err := yaml.UnmarshalStrict(data, i); err != nil {\n \t\treturn i, err\n \t}\n \ti.SortEntries()"
        },
        {
          "filename": "pkg/repo/index_test.go",
          "status": "modified",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -95,6 +95,35 @@ func TestLoadIndex(t *testing.T) {\n \tverifyLocalIndex(t, i)\n }\n \n+const indexWithDuplicates = `\n+apiVersion: v1\n+entries:\n+  nginx:\n+    - urls:\n+        - https://kubernetes-charts.storage.googleapis.com/nginx-0.2.0.tgz\n+      name: nginx\n+      description: string\n+      version: 0.2.0\n+      home: https://github.com/something/else\n+      digest: \"sha256:1234567890abcdef\"\n+  nginx:\n+    - urls:\n+        - https://kubernetes-charts.storage.googleapis.com/alpine-1.0.0.tgz\n+        - http://storage2.googleapis.com/kubernetes-charts/alpine-1.0.0.tgz\n+      name: alpine\n+      description: string\n+      version: 1.0.0\n+      home: https://github.com/something\n+      digest: \"sha256:1234567890abcdef\"\n+`\n+\n+// TestLoadIndex_Duplicates is a regression to make sure that we don't non-deterministically allow duplicate packages.\n+func TestLoadIndex_Duplicates(t *testing.T) {\n+\tif _, err := loadIndex([]byte(indexWithDuplicates)); err == nil {\n+\t\tt.Errorf(\"Expected an error when duplicate entries are present\")\n+\t}\n+}\n+\n func TestLoadIndexFile(t *testing.T) {\n \ti, err := LoadIndexFile(testfile)\n \tif err != nil {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "53a4a59eb9f093bf2b5e83357951038d1833ad71",
            "date": "2025-01-14T20:42:54Z",
            "author_login": "gjenkins8"
          },
          {
            "sha": "fb54996b001697513cdb1ffa5915c0ba90149fff",
            "date": "2025-01-14T02:16:44Z",
            "author_login": "sabre1041"
          },
          {
            "sha": "7dac0157a78e5ba6ad607cf1b1fc598b98ef5dfd",
            "date": "2025-01-13T18:01:22Z",
            "author_login": "robertsirc"
          },
          {
            "sha": "6d42a2973d108a28bff46e38f2afe6a9e98918af",
            "date": "2025-01-11T18:41:47Z",
            "author_login": "shahbazaamir"
          },
          {
            "sha": "bd897c96fbaf7546d6a5c57be009f16f9d38d6de",
            "date": "2025-01-09T00:46:19Z",
            "author_login": "gjenkins8"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-74",
    "description": "In Helm before versions 2.16.11 and 3.3.2, a Helm repository can contain duplicates of the same chart, with the last one always used. If a repository is compromised, this lowers the level of access that an attacker needs to inject a bad chart into a repository. To perform this attack, an attacker must have write access to the index file (which can occur during a MITM attack on a non-SSL connection). This issue has been patched in Helm 3.3.2 and 2.16.11. A possible workaround is to manually review the index file in the Helm repository cache before installing software.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-09-17T22:15:12.443",
    "last_modified": "2024-11-21T05:05:01.830",
    "fix_date": "2020-09-17T18:33:59Z"
  },
  "references": [
    {
      "url": "https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/helm/helm/security/advisories/GHSA-jm56-5h66-w453",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/helm/helm/security/advisories/GHSA-jm56-5h66-w453",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.138000",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "helm",
    "owner": "helm",
    "created_at": "2015-10-06T01:07:32Z",
    "updated_at": "2025-01-14T12:24:26Z",
    "pushed_at": "2025-01-14T02:16:52Z",
    "size": 22466,
    "stars": 27310,
    "forks": 7159,
    "open_issues": 777,
    "watchers": 27310,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "feat-v3/event-emitter-lua",
      "kube-update-test",
      "main",
      "release-2.0",
      "release-2.1",
      "release-2.2",
      "release-2.3",
      "release-2.4",
      "release-2.5",
      "release-2.6",
      "release-2.7",
      "release-2.8",
      "release-2.9"
    ],
    "languages": {
      "Go": 1934648,
      "Shell": 31103,
      "Makefile": 8742
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:57:31.645568"
  }
}