{
  "cve_id": "CVE-2020-15230",
  "github_data": {
    "repository": "vapor/vapor",
    "fix_commit": "cf1651f7ff76515593f4d8ca6e6e15d2247fe255",
    "related_commits": [
      "cf1651f7ff76515593f4d8ca6e6e15d2247fe255",
      "cf1651f7ff76515593f4d8ca6e6e15d2247fe255"
    ],
    "patch_url": "https://github.com/vapor/vapor/commit/cf1651f7ff76515593f4d8ca6e6e15d2247fe255.patch",
    "fix_commit_details": {
      "sha": "cf1651f7ff76515593f4d8ca6e6e15d2247fe255",
      "commit_date": "2020-09-30T23:28:20Z",
      "author": {
        "login": "tanner0101",
        "type": "User",
        "stats": {
          "total_commits": 1995,
          "average_weekly_commits": 4.24468085106383,
          "total_additions": 536750,
          "total_deletions": 533257,
          "weeks_active": 167
        }
      },
      "commit_message": {
        "title": "fix relative percent decoding in file middleware (#2500)",
        "length": 56,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 21,
        "deletions": 3
      },
      "files": [
        {
          "filename": "Sources/Vapor/Middleware/FileMiddleware.swift",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -13,8 +13,10 @@ public final class FileMiddleware: Middleware {\n \n     /// See `Middleware`.\n     public func respond(to request: Request, chainingTo next: Responder) -> EventLoopFuture<Response> {\n-        // make a copy of the path\n-        var path = request.url.path\n+        // make a copy of the percent-decoded path\n+        guard var path = request.url.path.removingPercentEncoding else {\n+            return request.eventLoop.makeFailedFuture(Abort(.badRequest))\n+        }\n \n         // path must be relative.\n         while path.hasPrefix(\"/\") {\n@@ -27,7 +29,7 @@ public final class FileMiddleware: Middleware {\n         }\n \n         // create absolute file path\n-        let filePath = self.publicDirectory + (path.removingPercentEncoding ?? path)\n+        let filePath = self.publicDirectory + path\n \n         // check if file exists and is not a directory\n         var isDir: ObjCBool = false"
        },
        {
          "filename": "Tests/VaporTests/FileTests.swift",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -61,4 +61,19 @@ final class FileTests: XCTestCase {\n             XCTAssertEqual(res.body.string, \"<h1>Hello</h1>\\n\")\n         }\n     }\n+\n+    func testPercentDecodedRelativePath() throws {\n+        let app = Application(.testing)\n+        defer { app.shutdown() }\n+\n+        let path = #file.split(separator: \"/\").dropLast().joined(separator: \"/\")\n+        app.middleware.use(FileMiddleware(publicDirectory: \"/\" + path))\n+\n+        try app.test(.GET, \"%2e%2e/VaporTests/Utilities/foo.txt\") { res in\n+            XCTAssertEqual(res.status, .forbidden)\n+        }.test(.GET, \"Utilities/foo.txt\") { res in\n+            XCTAssertEqual(res.status, .ok)\n+            XCTAssertEqual(res.body.string, \"bar\\n\")\n+        }\n+    }\n }"
        },
        {
          "filename": "Tests/VaporTests/Utilities/foo.txt",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+bar"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eafbca78d0ced81a127c94f3703fc3fc76827963",
            "date": "2025-01-14T13:15:43Z",
            "author_login": "weissi"
          },
          {
            "sha": "4d7456c0d4b33ef82783a90ecfeae33a52a3972a",
            "date": "2024-12-30T18:52:00Z",
            "author_login": "WilliamFernsV3"
          },
          {
            "sha": "73dfe634f04945285054b261369cd93f5100b44c",
            "date": "2024-12-28T12:23:23Z",
            "author_login": "gwynne"
          },
          {
            "sha": "4c5d467a96fc4c64f6279327d8fd1e1600e85bc5",
            "date": "2024-12-26T15:37:40Z",
            "author_login": "MahdiBM"
          },
          {
            "sha": "1f29415ed888a942bb23486ca9e422123a07e70f",
            "date": "2024-12-21T01:33:12Z",
            "author_login": "MahdiBM"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:H/A:N",
    "cwe_id": "CWE-22",
    "description": "Vapor is a web framework for Swift. In Vapor before version 4.29.4, Attackers can access data at arbitrary filesystem paths on the same host as an application. Only applications using FileMiddleware are affected. This is fixed in version 4.29.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-10-02T19:15:12.963",
    "last_modified": "2024-11-21T05:05:08.610",
    "fix_date": "2020-09-30T23:28:20Z"
  },
  "references": [
    {
      "url": "https://github.com/vapor/vapor/commit/cf1651f7ff76515593f4d8ca6e6e15d2247fe255",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vapor/vapor/pull/2500",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vapor/vapor/security/advisories/GHSA-vcvg-xgr8-p5gq",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vapor/vapor/commit/cf1651f7ff76515593f4d8ca6e6e15d2247fe255",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vapor/vapor/pull/2500",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vapor/vapor/security/advisories/GHSA-vcvg-xgr8-p5gq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.165766",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vapor",
    "owner": "vapor",
    "created_at": "2016-01-18T22:37:52Z",
    "updated_at": "2025-01-14T13:38:54Z",
    "pushed_at": "2025-01-14T13:15:50Z",
    "size": 17155,
    "stars": 24729,
    "forks": 1453,
    "open_issues": 95,
    "watchers": 24729,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "3",
      "main"
    ],
    "languages": {
      "Swift": 1446558,
      "C": 38624,
      "HTML": 67
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:50:15.643999"
  }
}