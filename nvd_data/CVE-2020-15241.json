{
  "cve_id": "CVE-2020-15241",
  "github_data": {
    "repository": "TYPO3/Fluid",
    "fix_commit": "9ef6a8ffff2e812025fc0701b4ce72eea6911a3d",
    "related_commits": [
      "9ef6a8ffff2e812025fc0701b4ce72eea6911a3d",
      "9ef6a8ffff2e812025fc0701b4ce72eea6911a3d"
    ],
    "patch_url": "https://github.com/TYPO3/Fluid/commit/9ef6a8ffff2e812025fc0701b4ce72eea6911a3d.patch",
    "fix_commit_details": {
      "sha": "9ef6a8ffff2e812025fc0701b4ce72eea6911a3d",
      "commit_date": "2019-03-06T10:58:14Z",
      "author": {
        "login": "NamelessCoder",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[BUGFIX] Ensure escaping of escapable ExpressionNode",
        "length": 373,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 16,
        "additions": 13,
        "deletions": 3
      },
      "files": [
        {
          "filename": "examples/Resources/Private/Singles/Variables.html",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -29,6 +29,7 @@\n \n <!-- Passing arguments to sections/partials -->\n <f:render section=\"Secondary\" arguments=\"{\n+    ternaryCheck: 1,\n \tmyVariable: 'Nice string',\n \tarray: {\n \t\tbaz: 42,\n@@ -43,6 +44,8 @@\n </f:section>\n \n <f:section name=\"Secondary\">\n+Escaped ternary expression: {ternaryCheck ? array.foobar : array.foobar}\n+Escaped cast expression: {array.foobar as string}\n Received $array.foobar with value {array.foobar -> f:format.raw()} (same using \"value\" argument: {f:format.raw(value: array.foobar)})\n Received $array.printf with formatted string {array.printf -> f:format.printf(arguments: {0: 'formatted'})}\n Received $array.baz with value {array.baz}"
        },
        {
          "filename": "src/Core/Parser/Interceptor/Escape.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -9,6 +9,7 @@\n use TYPO3Fluid\\Fluid\\Core\\Parser\\InterceptorInterface;\n use TYPO3Fluid\\Fluid\\Core\\Parser\\ParsingState;\n use TYPO3Fluid\\Fluid\\Core\\Parser\\SyntaxTree\\EscapingNode;\n+use TYPO3Fluid\\Fluid\\Core\\Parser\\SyntaxTree\\Expression\\ExpressionNodeInterface;\n use TYPO3Fluid\\Fluid\\Core\\Parser\\SyntaxTree\\NodeInterface;\n use TYPO3Fluid\\Fluid\\Core\\Parser\\SyntaxTree\\ObjectAccessorNode;\n use TYPO3Fluid\\Fluid\\Core\\Parser\\SyntaxTree\\ViewHelperNode;\n@@ -62,7 +63,7 @@ public function process(NodeInterface $node, $interceptorPosition, ParsingState\n             if ($this->childrenEscapingEnabled && $node->getUninitializedViewHelper()->isOutputEscapingEnabled()) {\n                 $node = new EscapingNode($node);\n             }\n-        } elseif ($this->childrenEscapingEnabled && $node instanceof ObjectAccessorNode) {\n+        } elseif ($this->childrenEscapingEnabled && ($node instanceof ObjectAccessorNode || $node instanceof ExpressionNodeInterface)) {\n             $node = new EscapingNode($node);\n         }\n         return $node;\n@@ -78,7 +79,8 @@ public function getInterceptionPoints()\n         return [\n             InterceptorInterface::INTERCEPT_OPENING_VIEWHELPER,\n             InterceptorInterface::INTERCEPT_CLOSING_VIEWHELPER,\n-            InterceptorInterface::INTERCEPT_OBJECTACCESSOR\n+            InterceptorInterface::INTERCEPT_OBJECTACCESSOR,\n+            InterceptorInterface::INTERCEPT_EXPRESSION,\n         ];\n     }\n }"
        },
        {
          "filename": "src/Core/Parser/InterceptorInterface.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -19,6 +19,7 @@ interface InterceptorInterface\n     const INTERCEPT_CLOSING_VIEWHELPER = 2;\n     const INTERCEPT_TEXT = 3;\n     const INTERCEPT_OBJECTACCESSOR = 4;\n+    const INTERCEPT_EXPRESSION = 5;\n \n     /**\n      * The interceptor can process the given node at will and must return a node"
        },
        {
          "filename": "src/Core/Parser/TemplateParser.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -625,6 +625,8 @@ protected function textAndShorthandSyntaxHandler(ParsingState $state, $text, $co\n                                 if ($expressionStartPosition > 0) {\n                                     $state->getNodeFromStack()->addChildNode(new TextNode(substr($section, 0, $expressionStartPosition)));\n                                 }\n+\n+                                $this->callInterceptor($expressionNode, InterceptorInterface::INTERCEPT_EXPRESSION, $state);\n                                 $state->getNodeFromStack()->addChildNode($expressionNode);\n \n                                 $expressionEndPosition = $expressionStartPosition + strlen($matchedVariableSet[0]);"
        },
        {
          "filename": "tests/Functional/ExamplesTest.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -218,6 +218,8 @@ public function getExampleScriptTestValues()\n                     'Output of variable whose name is stored in a variable: string foo',\n                     'Direct access of numeric prefixed variable: Numeric prefixed variable',\n                     'Aliased access of numeric prefixed variable: Numeric prefixed variable',\n+                    'Escaped ternary expression: &lt;b&gt;Unescaped string&lt;/b&gt;',\n+                    'Escaped cast expression: &lt;b&gt;Unescaped string&lt;/b&gt;',\n                     'Received $array.foobar with value <b>Unescaped string</b> (same using \"value\" argument: <b>Unescaped string</b>)',\n                     'Received $array.printf with formatted string Formatted string, value: formatted',\n                     'Received $array.baz with value 42',\n@@ -260,7 +262,7 @@ public function getExampleScriptTestValues()\n                     'ViewHelper error: Undeclared arguments passed to ViewHelper TYPO3Fluid\\Fluid\\ViewHelpers\\IfViewHelper: notregistered. Valid arguments are: then, else, condition - Offending code: <f:if notregistered=\"1\" />',\n                     'Parser error: The ViewHelper \"<f:invalid>\" could not be resolved.',\n                     'Based on your spelling, the system would load the class \"TYPO3Fluid\\Fluid\\ViewHelpers\\InvalidViewHelper\", however this class does not exist. Offending code: <f:invalid />',\n-                    'Invalid expression: Invalid target conversion type \"invalidtype\" specified in casting expression \"{foobar as invalidtype}\".',\n+                    'Invalid expression: Invalid target conversion type &quot;invalidtype&quot; specified in casting expression &quot;{foobar as invalidtype}&quot;.',\n                 ]\n             ]\n         ];"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ece4e1e21b0db4ad3e89bba163f6ad33be0cecbe",
            "date": "2024-11-21T11:32:51Z",
            "author_login": "lolli42"
          },
          {
            "sha": "a013dfdc1b99c1b33a9e7fa41ecc10daada9249c",
            "date": "2024-11-20T02:16:00Z",
            "author_login": "lolli42"
          },
          {
            "sha": "5535e1fab578513a53dbfc6599993b9896aa04a3",
            "date": "2024-11-20T01:54:43Z",
            "author_login": "lolli42"
          },
          {
            "sha": "b3866017b7e3a7030644894e5173f30afceab43e",
            "date": "2024-11-20T01:40:23Z",
            "author_login": "lolli42"
          },
          {
            "sha": "336e10a1ea5730b2f8c2163b13c06572a282430d",
            "date": "2024-11-20T01:29:01Z",
            "author_login": "lolli42"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "TYPO3 Fluid Engine (package `typo3fluid/fluid`) before versions 2.0.5, 2.1.4, 2.2.1, 2.3.5, 2.4.1, 2.5.5 or 2.6.1 is vulnerable to cross-site scripting when making use of the ternary conditional operator in templates like `{showFullName ? fullName : defaultValue}`. Updated versions of this package are bundled in following TYPO3 (`typo3/cms-core`) versions as well: TYPO3 v8.7.25 (using `typo3fluid/fluid` v2.5.4) and TYPO3 v9.5.6 (using `typo3fluid/fluid` v2.6.1).",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-10-08T21:15:10.167",
    "last_modified": "2024-11-21T05:05:10.170",
    "fix_date": "2019-03-06T10:58:14Z"
  },
  "references": [
    {
      "url": "https://github.com/TYPO3/Fluid/commit/9ef6a8ffff2e812025fc0701b4ce72eea6911a3d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/TYPO3/Fluid/security/advisories/GHSA-7733-hjv6-4h47",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://typo3.org/security/advisory/typo3-core-sa-2019-013",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/TYPO3/Fluid/commit/9ef6a8ffff2e812025fc0701b4ce72eea6911a3d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/TYPO3/Fluid/security/advisories/GHSA-7733-hjv6-4h47",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://typo3.org/security/advisory/typo3-core-sa-2019-013",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.174625",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Fluid",
    "owner": "TYPO3",
    "created_at": "2015-08-13T15:04:55Z",
    "updated_at": "2024-12-05T18:45:45Z",
    "pushed_at": "2024-12-08T15:30:28Z",
    "size": 5443,
    "stars": 154,
    "forks": 93,
    "open_issues": 49,
    "watchers": 154,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "2.9",
      "2.10",
      "2.11",
      "2.12",
      "2.13",
      "2.14",
      "2.15",
      "2.16",
      "main"
    ],
    "languages": {
      "PHP": 1098049,
      "HTML": 2980
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T17:02:12.607084"
  }
}