{
  "cve_id": "CVE-2020-15247",
  "github_data": {
    "repository": "octobercms/october",
    "fix_commit": "4c650bb775ab849e48202a4923bac93bd74f9982",
    "related_commits": [
      "4c650bb775ab849e48202a4923bac93bd74f9982",
      "4c650bb775ab849e48202a4923bac93bd74f9982"
    ],
    "patch_url": "https://github.com/octobercms/october/commit/4c650bb775ab849e48202a4923bac93bd74f9982.patch",
    "fix_commit_details": {
      "sha": "4c650bb775ab849e48202a4923bac93bd74f9982",
      "commit_date": "2020-09-04T03:02:01Z",
      "author": {
        "login": "daftspunk",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Security fixes for v1.0.469",
        "length": 116,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 67,
        "additions": 67,
        "deletions": 0
      },
      "files": [
        {
          "filename": "modules/cms/classes/Controller.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@\n use BackendAuth;\n use Twig\\Environment as TwigEnvironment;\n use Twig\\Cache\\FilesystemCache as TwigCacheFilesystem;\n+use Twig\\Extension\\SandboxExtension;\n use Cms\\Twig\\Loader as TwigLoader;\n use Cms\\Twig\\DebugExtension;\n use Cms\\Twig\\Extension as CmsTwigExtension;\n@@ -23,6 +24,7 @@\n use System\\Helpers\\View as ViewHelper;\n use System\\Classes\\CombineAssets;\n use System\\Twig\\Extension as SystemTwigExtension;\n+use System\\Twig\\SecurityPolicy;\n use October\\Rain\\Exception\\AjaxException;\n use October\\Rain\\Exception\\ValidationException;\n use October\\Rain\\Parse\\Bracket as TextParser;\n@@ -608,6 +610,7 @@ protected function initTwigEnvironment()\n         $this->twig = new TwigEnvironment($this->loader, $options);\n         $this->twig->addExtension(new CmsTwigExtension($this));\n         $this->twig->addExtension(new SystemTwigExtension);\n+        $this->twig->addExtension(new SandboxExtension(new SecurityPolicy, true));\n \n         if ($isDebugMode) {\n             $this->twig->addExtension(new DebugExtension($this));"
        },
        {
          "filename": "modules/system/ServiceProvider.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -19,6 +19,7 @@\n use System\\Twig\\Engine as TwigEngine;\n use System\\Twig\\Loader as TwigLoader;\n use System\\Twig\\Extension as TwigExtension;\n+use System\\Twig\\SecurityPolicy as TwigSecurityPolicy;\n use System\\Models\\EventLog;\n use System\\Models\\MailSetting;\n use System\\Classes\\CombineAssets;\n@@ -27,6 +28,7 @@\n use October\\Rain\\Router\\Helper as RouterHelper;\n use Illuminate\\Pagination\\Paginator;\n use Illuminate\\Support\\Facades\\Schema;\n+use Twig\\Extension\\SandboxExtension;\n \n class ServiceProvider extends ModuleServiceProvider\n {\n@@ -297,6 +299,7 @@ protected function registerTwigParser()\n         App::singleton('twig.environment', function ($app) {\n             $twig = new TwigEnvironment(new TwigLoader, ['auto_reload' => true]);\n             $twig->addExtension(new TwigExtension);\n+            $twig->addExtension(new SandboxExtension(new TwigSecurityPolicy, true));\n             return $twig;\n         });\n "
        },
        {
          "filename": "modules/system/twig/SecurityPolicy.php",
          "status": "added",
          "additions": 61,
          "deletions": 0,
          "patch": "@@ -0,0 +1,61 @@\n+<?php namespace System\\Twig;\n+\n+use Twig\\Markup;\n+use Twig\\Template;\n+use Twig\\Sandbox\\SecurityPolicyInterface;\n+use Twig\\Sandbox\\SecurityNotAllowedMethodError;\n+use Twig\\Sandbox\\SecurityNotAllowedPropertyError;\n+\n+/**\n+ * SecurityPolicy globally blocks accessibility of certain methods and properties.\n+ *\n+ * @package october\\system\n+ * @author Alexey Bobkov, Samuel Georges\n+ */\n+final class SecurityPolicy implements SecurityPolicyInterface\n+{\n+    protected $blockedProperties = [];\n+\n+    protected $blockedMethods = [\n+        'addDynamicMethod',\n+        'addDynamicProperty'\n+    ];\n+\n+    public function __construct()\n+    {\n+        $this->setBlockedMethods($this->blockedMethods);\n+    }\n+\n+    public function setBlockedMethods(array $methods)\n+    {\n+        foreach ($this->blockedMethods as $i => $m) {\n+            $this->blockedMethods[$i] = strtr($m, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz');\n+        }\n+    }\n+\n+    public function checkSecurity($tags, $filters, $functions)\n+    {\n+    }\n+\n+    public function checkMethodAllowed($obj, $method)\n+    {\n+        if ($obj instanceof Template || $obj instanceof Markup) {\n+            return;\n+        }\n+\n+        $blockedMethod = strtr($method, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz');\n+\n+        if (in_array($blockedMethod, $this->blockedMethods)) {\n+            $class = get_class($obj);\n+            throw new SecurityNotAllowedMethodError(sprintf('Calling \"%s\" method on a \"%s\" object is blocked.', $method, $class), $class, $method);\n+        }\n+    }\n+\n+    public function checkPropertyAllowed($obj, $property)\n+    {\n+        if (in_array($property, $this->blockedProperties)) {\n+            $class = get_class($obj);\n+            throw new SecurityNotAllowedPropertyError(sprintf('Calling \"%s\" property on a \"%s\" object is blocked.', $property, $class), $class, $property);\n+        }\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "45fe601f47cdd3e25a4a667c6b9a622b003c006a",
            "date": "2024-11-25T21:28:07Z",
            "author_login": "daftspunk"
          },
          {
            "sha": "ff1816942cf629286f1b1a482595ef005281a14c",
            "date": "2024-11-11T22:11:58Z",
            "author_login": "daftspunk"
          },
          {
            "sha": "5877d59e2b999852e60b85e6bbce132ac4ab2993",
            "date": "2024-10-17T23:14:13Z",
            "author_login": "daftspunk"
          },
          {
            "sha": "45e757608ae65060ecd0b78e70f5c5c824fdd7f1",
            "date": "2024-10-17T22:10:49Z",
            "author_login": "daftspunk"
          },
          {
            "sha": "f6aa7503065681cbdc18b905e92d51b1a4a94aff",
            "date": "2024-10-16T21:43:54Z",
            "author_login": "daftspunk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:L",
    "cwe_id": "CWE-862",
    "description": "October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.469, an authenticated backend user with the cms.manage_pages, cms.manage_layouts, or cms.manage_partials permissions who would normally not be permitted to provide PHP code to be executed by the CMS due to cms.enableSafeMode being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP. This is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having cms.enableSafeMode enabled, but would be a problem for anyone relying on cms.enableSafeMode to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP. Issue has been patched in Build 469 (v1.0.469) and v1.1.0.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-23T20:15:12.383",
    "last_modified": "2024-11-21T05:05:10.993",
    "fix_date": "2020-09-04T03:02:01Z"
  },
  "references": [
    {
      "url": "https://github.com/octobercms/october/commit/4c650bb775ab849e48202a4923bac93bd74f9982",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octobercms/october/security/advisories/GHSA-94vp-rmqv-5875",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octobercms/october/commit/4c650bb775ab849e48202a4923bac93bd74f9982",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octobercms/october/security/advisories/GHSA-94vp-rmqv-5875",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.470961",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "october",
    "owner": "octobercms",
    "created_at": "2013-11-26T23:30:43Z",
    "updated_at": "2025-01-13T15:19:04Z",
    "pushed_at": "2025-01-12T01:37:43Z",
    "size": 53556,
    "stars": 11056,
    "forks": 2205,
    "open_issues": 3,
    "watchers": 11056,
    "has_security_policy": false,
    "default_branch": "3.x",
    "protected_branches": [],
    "languages": {
      "PHP": 2058174,
      "HTML": 84753,
      "Less": 48913,
      "JavaScript": 22950,
      "CSS": 11828,
      "Hack": 1770
    },
    "commit_activity": {
      "total_commits_last_year": 29,
      "avg_commits_per_week": 0.5576923076923077,
      "days_active_last_year": 23
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:31:49.007671"
  }
}