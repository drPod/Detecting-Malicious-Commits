{
  "cve_id": "CVE-2020-15265",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "eccb7ec454e6617738554a255d77f08e60ee0808",
    "related_commits": [
      "eccb7ec454e6617738554a255d77f08e60ee0808",
      "eccb7ec454e6617738554a255d77f08e60ee0808"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "eccb7ec454e6617738554a255d77f08e60ee0808",
      "commit_date": "2020-10-20T00:56:36Z",
      "author": {
        "login": "mihaimaruseac",
        "type": "User",
        "stats": {
          "total_commits": 1591,
          "average_weekly_commits": 3.300829875518672,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 215
        }
      },
      "commit_message": {
        "title": "Prevent segfault in `quantize_and_dequantize`",
        "length": 412,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 20,
        "deletions": 0
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -71,6 +71,10 @@ class QuantizeAndDequantizeV2Op : public OpKernel {\n \n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& input = ctx->input(0);\n+    OP_REQUIRES(\n+        ctx, (axis_ == -1 || axis_ < input.shape().dims()),\n+        errors::InvalidArgument(\"Shape must be at least rank \", axis_ + 1,\n+                                \" but is rank \", input.shape().dims()));\n     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\n     Tensor input_min_tensor;\n     Tensor input_max_tensor;"
        },
        {
          "filename": "tensorflow/python/kernel_tests/array_ops_test.py",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -1628,6 +1628,22 @@ def testAxis(self):\n                   axis=(axis - 4)))\n           self.assertAllClose(fake_quantized, expected)\n \n+  def testBadAxis(self):\n+    input_tensor = [2.5, 2.5]\n+    input_min = [0, 0]\n+    input_max = [1, 1]\n+    error_message_pattern = \"Shape must be at least rank 11 but is rank 1\"\n+    # TODO(b/171260356): Eager mode and graph mode throw different error types\n+    error = errors.InvalidArgumentError if context.executing_eagerly(\n+    ) else ValueError\n+    with self.assertRaisesRegex(error, error_message_pattern):\n+      self.evaluate(\n+          array_ops.quantize_and_dequantize_v2(\n+              input=input_tensor,\n+              input_min=input_min,\n+              input_max=input_max,\n+              axis=10))\n+\n   def testQuantizeDequantizeGrad(self):\n     shape = (2, 2)\n     max_threshold = 0"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5c27f5f4dc39afdefbd93c2ef266a8c7ab534a98",
            "date": "2025-01-25T18:55:10Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "05df81c283627135b7651c9c7a8fa0035bff2206",
            "date": "2025-01-25T17:06:34Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "4075a7dd74ea543557d1824e16721598e1a6af8d",
            "date": "2025-01-25T17:06:30Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "4d08d96d6a0aea39c5bd90d9728dbcf59008993c",
            "date": "2025-01-25T17:04:34Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "1b58ec4dcd6e5752598dc57d4788119f8ea12e23",
            "date": "2025-01-25T11:39:06Z",
            "author_login": "tensorflower-gardener"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "In Tensorflow before version 2.4.0, an attacker can pass an invalid `axis` value to `tf.quantization.quantize_and_dequantize`. This results in accessing a dimension outside the rank of the input tensor in the C++ kernel implementation. However, dim_size only does a DCHECK to validate the argument and then uses it to access the corresponding element of an array. Since in normal builds, `DCHECK`-like macros are no-ops, this results in segfault and access out of bounds of the array. The issue is patched in eccb7ec454e6617738554a255d77f08e60ee0808 and TensorFlow 2.4.0 will be released containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-10-21T21:15:12.257",
    "last_modified": "2024-11-21T05:05:13.733",
    "fix_date": "2020-10-20T00:56:36Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/eccb7ec454e6617738554a255d77f08e60ee0808",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/issues/42105",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrfp-j2mp-hq9c",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/eccb7ec454e6617738554a255d77f08e60ee0808",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/issues/42105",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrfp-j2mp-hq9c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.188947",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-26T06:52:14Z",
    "pushed_at": "2025-01-26T07:27:00Z",
    "size": 1126495,
    "stars": 187418,
    "forks": 74442,
    "open_issues": 6822,
    "watchers": 187418,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101327392,
      "Python": 45791326,
      "MLIR": 10764225,
      "HTML": 7662661,
      "Starlark": 7439181,
      "Go": 2171369,
      "C": 1294440,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 702245,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 38067,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15545,
      "avg_commits_per_week": 298.9423076923077,
      "days_active_last_year": 354
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:37:26.588757"
  }
}