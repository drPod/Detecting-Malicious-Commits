{
  "cve_id": "CVE-2020-15272",
  "github_data": {
    "repository": "ericcornelissen/git-tag-annotation-action",
    "fix_commit": "9f30756375cc4b1b6c66f274fc9c591fa901455a",
    "related_commits": [
      "9f30756375cc4b1b6c66f274fc9c591fa901455a",
      "9f30756375cc4b1b6c66f274fc9c591fa901455a"
    ],
    "patch_url": "https://github.com/ericcornelissen/git-tag-annotation-action/commit/9f30756375cc4b1b6c66f274fc9c591fa901455a.patch",
    "fix_commit_details": {
      "sha": "9f30756375cc4b1b6c66f274fc9c591fa901455a",
      "commit_date": "2020-10-24T18:29:06Z",
      "author": {
        "login": "ericcornelissen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix shell injection bug",
        "length": 388,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 34,
        "deletions": 10
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -9,6 +9,11 @@ Versioning].\n \n - _No changes yet_\n \n+## [1.0.1] - 2020-10-24\n+\n+- Update Action icon.\n+- Fix shell injection vulnerability.\n+\n ## [1.0.0] - 2020-10-22\n \n - Run the Action to get the git tag annotation of the current tag."
        },
        {
          "filename": "action.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -16,5 +16,5 @@ runs:\n   main: 'lib/index.js'\n \n branding:\n-  icon: 'git-commit'\n+  icon: 'tag'\n   color: 'gray-dark'"
        },
        {
          "filename": "src/main.js",
          "status": "modified",
          "additions": 15,
          "deletions": 7,
          "patch": "@@ -1,20 +1,28 @@\n const core = require('@actions/core');\n const { exec } = require('child_process');\n \n+// Based on https://stackoverflow.com/a/22827128\n+function escapeShellArg(arg) {\n+  return arg.replace(/'/g, `'\\\\''`);\n+}\n+\n function main() {\n   try {\n     let tag = process.env.GITHUB_REF;\n     if (core.getInput('tag')) {\n       tag = `refs/tags/${core.getInput('tag')}`;\n     }\n \n-    exec(`git for-each-ref --format='%(contents)' ${tag}`, (err, stdout) => {\n-      if (err) {\n-        core.setFailed(err);\n-      } else {\n-        core.setOutput('git-tag-annotation', stdout);\n-      }\n-    });\n+    exec(\n+      `git for-each-ref --format='%(contents)' '${escapeShellArg(tag)}'`,\n+      (err, stdout) => {\n+        if (err) {\n+          core.setFailed(err);\n+        } else {\n+          core.setOutput('git-tag-annotation', stdout);\n+        }\n+      },\n+    );\n   } catch (error) {\n     core.setFailed(error.message);\n   }"
        },
        {
          "filename": "test/main.test.js",
          "status": "modified",
          "additions": 13,
          "deletions": 2,
          "patch": "@@ -23,7 +23,7 @@ it.each([\n   main();\n \n   expect(child_process.exec).toHaveBeenCalledWith(\n-    `git for-each-ref --format='%(contents)' refs/tags/${tag}`,\n+    `git for-each-ref --format='%(contents)' 'refs/tags/${tag}'`,\n     expect.any(Function),\n   );\n });\n@@ -46,7 +46,7 @@ it.each([\n \n   expect(core.getInput).toHaveBeenCalledTimes(2);\n   expect(child_process.exec).toHaveBeenCalledWith(\n-    `git for-each-ref --format='%(contents)' refs/tags/${tag}`,\n+    `git for-each-ref --format='%(contents)' 'refs/tags/${tag}'`,\n     expect.any(Function),\n   );\n });\n@@ -89,3 +89,14 @@ it('sets an error if exec fails', () => {\n   expect(core.setOutput).not.toHaveBeenCalled();\n   expect(core.setFailed).toHaveBeenCalledTimes(1);\n });\n+\n+it('escapes malicious values from the input', () => {\n+  core.getInput.mockReturnValue(`'; $(cat /etc/shadow)`);\n+\n+  main();\n+\n+  expect(child_process.exec).toHaveBeenCalledWith(\n+    \"git for-each-ref --format='%(contents)' 'refs/tags/'\\\\''; $(cat /etc/shadow)'\",\n+    expect.any(Function),\n+  );\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "17bd8c617c786c4aeeefcf258f6c0f96bf6f774a",
            "date": "2024-06-12T07:41:50Z",
            "author_login": "ericcornelissen"
          },
          {
            "sha": "36c8930e6e5f502752e02f4995b0694d7c0d9a21",
            "date": "2024-04-04T20:57:03Z",
            "author_login": "ericcornelissen"
          },
          {
            "sha": "2c0ce99ce4c538ab884f22fcb11a1cb5827216cb",
            "date": "2024-04-02T20:15:27Z",
            "author_login": "ericcornelissen"
          },
          {
            "sha": "579b6aafd0809cecd37f2a906d6d0e730355c784",
            "date": "2024-03-13T19:42:45Z",
            "author_login": "ericcornelissen"
          },
          {
            "sha": "9d91c7669a144e031df405fc2cc91a80e800cd7a",
            "date": "2024-03-13T19:35:24Z",
            "author_login": "ec-automation-bot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-78",
    "description": "In the git-tag-annotation-action (open source GitHub Action) before version 1.0.1, an attacker can execute arbitrary (*) shell commands if they can control the value of [the `tag` input] or manage to alter the value of [the `GITHUB_REF` environment variable]. The problem has been patched in version 1.0.1. If you don't use the `tag` input you are most likely safe. The `GITHUB_REF` environment variable is protected by the GitHub Actions environment so attacks from there should be impossible. If you must use the `tag` input and cannot upgrade to `> 1.0.0` make sure that the value is not controlled by another Action.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-10-26T19:15:12.770",
    "last_modified": "2024-11-21T05:05:14.503",
    "fix_date": "2020-10-24T18:29:06Z"
  },
  "references": [
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/commit/9f30756375cc4b1b6c66f274fc9c591fa901455a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/releases/tag/v1.0.1",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/security/advisories/GHSA-hgx2-4pp9-357g",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/commit/9f30756375cc4b1b6c66f274fc9c591fa901455a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/releases/tag/v1.0.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ericcornelissen/git-tag-annotation-action/security/advisories/GHSA-hgx2-4pp9-357g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.195883",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "git-tag-annotation-action",
    "owner": "ericcornelissen",
    "created_at": "2020-10-22T18:48:28Z",
    "updated_at": "2024-06-12T07:45:42Z",
    "pushed_at": "2024-06-12T07:42:25Z",
    "size": 1586,
    "stars": 4,
    "forks": 2,
    "open_issues": 0,
    "watchers": 4,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "v1",
      "v2"
    ],
    "languages": {
      "Shell": 19593,
      "Makefile": 2194
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:40:23.328272"
  }
}