{
  "cve_id": "CVE-2020-15278",
  "github_data": {
    "repository": "Cog-Creators/Red-DiscordBot",
    "fix_commit": "726bfd38adfdfaef760412a68e01447b470f438b",
    "related_commits": [
      "726bfd38adfdfaef760412a68e01447b470f438b",
      "726bfd38adfdfaef760412a68e01447b470f438b"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "726bfd38adfdfaef760412a68e01447b470f438b",
      "commit_date": "2020-10-27T19:46:49Z",
      "author": {
        "login": "Jackenmen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-mp9m-g7qj-6vqr",
        "length": 125,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 71,
        "additions": 47,
        "deletions": 24
      },
      "files": [
        {
          "filename": "docs/changelog_3_4_0.rst",
          "status": "modified",
          "additions": 13,
          "deletions": 3,
          "patch": "@@ -9,16 +9,26 @@ Redbot 3.4.1 (2020-10-27)\n Read before updating\n --------------------\n \n-1. This Red update bumps discord.py to version 1.5.1, which explicitly requests Discord intents. Red requires all Prvileged Intents to be enabled. More information can be found at :ref:`enabling-privileged-intents`.\n-2. Mutes functionality has been moved from the Mod cog to a new separate cog (Mutes) featuring timed and role-based mutes. If you were using it (or want to start now), you can load the new cog with ``[p]load mutes``. You can see the full `Mutes changelog below <important-341-1>`.\n-3. Information for Audio users that are using an external Lavalink instance (if you don't know what that is, you should skip this point):\n+1. This release fixes a security issue in Mod cog. See `Security changelog below <important-341-2>` for more information.\n+2. This Red update bumps discord.py to version 1.5.1, which explicitly requests Discord intents. Red requires all Prvileged Intents to be enabled. More information can be found at :ref:`enabling-privileged-intents`.\n+3. Mutes functionality has been moved from the Mod cog to a new separate cog (Mutes) featuring timed and role-based mutes. If you were using it (or want to start now), you can load the new cog with ``[p]load mutes``. You can see the full `Mutes changelog below <important-341-1>`.\n+4. Information for Audio users that are using an external Lavalink instance (if you don't know what that is, you should skip this point):\n \n    We've updated our `application.yml file <https://github.com/Cog-Creators/Red-DiscordBot/blob/3.4.1/redbot/cogs/audio/data/application.yml>`_ and you should update your instance's ``application.yml`` appropriately.\n    Please ensure that the WS port in Audio's settings (``[p]llset wsport``) is set to the port from the ``application.yml``.\n \n End-user changelog\n ------------------\n \n+.. _important-341-2:\n+\n+Security\n+********\n+\n+**NOTE:** If you can't update immediately, we recommend globally disabling the affected command until you can.\n+\n+- **Mod** - Fixed unauthorized privilege escalation exploit in ``[p]massban`` (also called ``[p]hackban``) command. Full security advisory `can be found on our GitHub <https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-mp9m-g7qj-6vqr>`_.\n+\n Core Bot\n ********\n "
        },
        {
          "filename": "redbot/cogs/mod/kickban.py",
          "status": "modified",
          "additions": 34,
          "deletions": 21,
          "patch": "@@ -2,7 +2,7 @@\n import contextlib\n import logging\n from datetime import datetime, timedelta, timezone\n-from typing import Optional, Tuple, Union\n+from typing import Dict, List, Optional, Tuple, Union\n \n import discord\n from redbot.core import commands, i18n, checks, modlog\n@@ -440,28 +440,41 @@ def remove_processed(ids):\n             await show_results()\n             return\n \n+        # We need to check here, if any of the users isn't a member and if they are,\n+        # we need to use our `ban_user()` method to do hierarchy checks.\n+        members: Dict[int, discord.Member] = {}\n+        to_query: List[int] = []\n+\n         for user_id in user_ids:\n-            user = guild.get_member(user_id)\n-            if user is not None:\n-                if user_id in tempbans:\n-                    # We need to check if a user is tempbanned here because otherwise they won't be processed later on.\n-                    continue\n+            member = guild.get_member(user_id)\n+            if member is not None:\n+                members[user_id] = member\n+            elif not guild.chunked:\n+                to_query.append(user_id)\n+\n+        # If guild isn't chunked, we might possibly be missing the member from cache,\n+        # so we need to make sure that isn't the case by querying the user IDs for such guilds.\n+        while to_query:\n+            queried_members = await guild.query_members(user_ids=to_query[:100], limit=100)\n+            members.update((member.id, member) for member in queried_members)\n+            to_query = to_query[100:]\n+\n+        # Call `ban_user()` method for all users that turned out to be guild members.\n+        for member in members:\n+            try:\n+                success, reason = await self.ban_user(\n+                    user=member, ctx=ctx, days=days, reason=reason, create_modlog_case=True\n+                )\n+                if success:\n+                    banned.append(user_id)\n                 else:\n-                    # Instead of replicating all that handling... gets attr from decorator\n-                    try:\n-                        success, reason = await self.ban_user(\n-                            user=user, ctx=ctx, days=days, reason=reason, create_modlog_case=True\n-                        )\n-                        if success:\n-                            banned.append(user_id)\n-                        else:\n-                            errors[user_id] = _(\"Failed to ban user {user_id}: {reason}\").format(\n-                                user_id=user_id, reason=reason\n-                            )\n-                    except Exception as e:\n-                        errors[user_id] = _(\"Failed to ban user {user_id}: {reason}\").format(\n-                            user_id=user_id, reason=e\n-                        )\n+                    errors[user_id] = _(\"Failed to ban user {user_id}: {reason}\").format(\n+                        user_id=user_id, reason=reason\n+                    )\n+            except Exception as e:\n+                errors[user_id] = _(\"Failed to ban user {user_id}: {reason}\").format(\n+                    user_id=user_id, reason=e\n+                )\n \n         user_ids = remove_processed(user_ids)\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "22888f801488cf59a29b5fea5c5c332643347268",
            "date": "2025-01-07T20:41:17Z",
            "author_login": "Kowlin"
          },
          {
            "sha": "ba4437002003a15744cc392b83d55fa521c4918a",
            "date": "2025-01-07T20:31:27Z",
            "author_login": "Jackenmen"
          },
          {
            "sha": "cd0e8750c12a29690837937d989da26375f41ce5",
            "date": "2024-12-29T00:48:24Z",
            "author_login": "Jackenmen"
          },
          {
            "sha": "679289fd1c9df4e5e2dd668288b2186a9e0ad6b2",
            "date": "2024-12-25T04:34:06Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "ce6489325e23b81a3cc7e8bb2c2b1352c2200638",
            "date": "2024-12-25T04:25:15Z",
            "author_login": "github-actions[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "Red Discord Bot before version 3.4.1 has an unauthorized privilege escalation exploit in the Mod module. This exploit allows Discord users with a high privilege level within the guild to bypass hierarchy checks when the application is in a specific condition that is beyond that user's control. By abusing this exploit, it is possible to perform destructive actions within the guild the user has high privileges in. This exploit has been fixed in version 3.4.1. As a workaround, unloading the Mod module with unload mod or, disabling the massban command with command disable global massban can render this exploit not accessible. We still highly recommend updating to 3.4.1 to completely patch this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-10-28T17:15:12.420",
    "last_modified": "2024-11-21T05:05:15.323",
    "fix_date": "2020-10-27T19:46:49Z"
  },
  "references": [
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/commit/726bfd38adfdfaef760412a68e01447b470f438b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.4.1",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-mp9m-g7qj-6vqr",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/commit/726bfd38adfdfaef760412a68e01447b470f438b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.4.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-mp9m-g7qj-6vqr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.437529",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "Red-DiscordBot",
    "owner": "Cog-Creators",
    "created_at": "2016-01-02T09:27:12Z",
    "updated_at": "2025-01-26T05:50:01Z",
    "pushed_at": "2025-01-07T20:41:17Z",
    "size": 83898,
    "stars": 4909,
    "forks": 2320,
    "open_issues": 281,
    "watchers": 4909,
    "has_security_policy": false,
    "default_branch": "V3/develop",
    "protected_branches": [
      "V3/develop",
      "V3/feature/audio",
      "V3/feature/mutes",
      "V3/feature/streams_game_alerts",
      "develop",
      "master"
    ],
    "languages": {
      "Python": 2821304,
      "PLpgSQL": 25564,
      "PowerShell": 2738,
      "Makefile": 1730,
      "Batchfile": 1281,
      "HTML": 454
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T08:02:33.444754"
  }
}