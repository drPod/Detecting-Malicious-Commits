{
  "cve_id": "CVE-2020-15473",
  "github_data": {
    "repository": "ntop/nDPI",
    "fix_commit": "8e7b1ea7a136cc4e4aa9880072ec2d69900a825e",
    "related_commits": [
      "8e7b1ea7a136cc4e4aa9880072ec2d69900a825e",
      "8e7b1ea7a136cc4e4aa9880072ec2d69900a825e"
    ],
    "patch_url": "https://github.com/ntop/nDPI/commit/8e7b1ea7a136cc4e4aa9880072ec2d69900a825e.patch",
    "fix_commit_details": {
      "sha": "8e7b1ea7a136cc4e4aa9880072ec2d69900a825e",
      "commit_date": "2020-05-15T19:10:37Z",
      "author": {
        "login": "lucaderi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix for potential heap-buffer-overflow in ndpi_search_openvpn",
        "length": 61,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 51,
        "additions": 30,
        "deletions": 21
      },
      "files": [
        {
          "filename": "src/lib/protocols/openvpn.c",
          "status": "modified",
          "additions": 30,
          "deletions": 21,
          "patch": "@@ -72,11 +72,12 @@ void ndpi_search_openvpn(struct ndpi_detection_module_struct* ndpi_struct,\n   u_int8_t alen;\n   int8_t hmac_size;\n   int8_t failed = 0;\n-\n-  if(packet->payload_packet_len >= 40) {\n+  /* No u_ */int16_t ovpn_payload_len = packet->payload_packet_len;\n+  \n+  if(ovpn_payload_len >= 40) {\n     // skip openvpn TCP transport packet size\n     if(packet->tcp != NULL)\n-      ovpn_payload += 2;\n+      ovpn_payload += 2, ovpn_payload_len -= 2;;\n \n     opcode = ovpn_payload[0] & P_OPCODE_MASK;\n \n@@ -85,16 +86,16 @@ void ndpi_search_openvpn(struct ndpi_detection_module_struct* ndpi_struct,\n       printf(\"[packet_id: %u][opcode: %u][Packet ID: %d][%u <-> %u][len: %u]\\n\",\n \t     flow->num_processed_pkts,\n \t     opcode, check_pkid_and_detect_hmac_size(ovpn_payload),\n-\t     htons(packet->udp->source), htons(packet->udp->dest), packet->payload_packet_len);\t   \n+\t     htons(packet->udp->source), htons(packet->udp->dest), ovpn_payload_len);\t   \n #endif\n       \n       if(\n \t (flow->num_processed_pkts == 1)\n \t && (\n-\t     ((packet->payload_packet_len == 112)\n+\t     ((ovpn_payload_len == 112)\n \t      && ((opcode == 168) || (opcode == 192))\n \t      )\n-\t     || ((packet->payload_packet_len == 80)\n+\t     || ((ovpn_payload_len == 80)\n \t\t && ((opcode == 184) || (opcode == 88) || (opcode == 160) || (opcode == 168) || (opcode == 200)))\n \t     )) {\n \tNDPI_LOG_INFO(ndpi_struct,\"found openvpn\\n\");\n@@ -119,22 +120,30 @@ void ndpi_search_openvpn(struct ndpi_detection_module_struct* ndpi_struct,\n       hmac_size = check_pkid_and_detect_hmac_size(ovpn_payload);\n \n       if(hmac_size > 0) {\n-        alen = ovpn_payload[P_PACKET_ID_ARRAY_LEN_OFFSET(hmac_size)];\n+\tu_int16_t offset = P_PACKET_ID_ARRAY_LEN_OFFSET(hmac_size);\n+\t  \n+        alen = ovpn_payload[offset];\n+\t\n         if (alen > 0) {\n-\t  session_remote = ovpn_payload + P_PACKET_ID_ARRAY_LEN_OFFSET(hmac_size) + 1 + alen * 4;\n-\n-          if(memcmp(flow->ovpn_session_id, session_remote, 8) == 0) {\n-\t    NDPI_LOG_INFO(ndpi_struct,\"found openvpn\\n\");\n-\t    ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_OPENVPN, NDPI_PROTOCOL_UNKNOWN);\n-\t    return;\n-\t  } else {\n-            NDPI_LOG_DBG2(ndpi_struct,\n-\t\t   \"key mismatch: %02x%02x%02x%02x%02x%02x%02x%02x\\n\",\n-\t\t   session_remote[0], session_remote[1], session_remote[2], session_remote[3],\n-\t\t   session_remote[4], session_remote[5], session_remote[6], session_remote[7]);\n-            failed = 1;\n-          }\n-        } else\n+\t  offset += 1 + alen * 4;\n+\n+\t  if((offset+8) <= ovpn_payload_len) {\n+\t    session_remote = &ovpn_payload[offset];\n+\t    \n+\t    if(memcmp(flow->ovpn_session_id, session_remote, 8) == 0) {\n+\t      NDPI_LOG_INFO(ndpi_struct,\"found openvpn\\n\");\n+\t      ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_OPENVPN, NDPI_PROTOCOL_UNKNOWN);\n+\t      return;\n+\t    } else {\n+\t      NDPI_LOG_DBG2(ndpi_struct,\n+\t\t\t    \"key mismatch: %02x%02x%02x%02x%02x%02x%02x%02x\\n\",\n+\t\t\t    session_remote[0], session_remote[1], session_remote[2], session_remote[3],\n+\t\t\t    session_remote[4], session_remote[5], session_remote[6], session_remote[7]);\n+\t      failed = 1;\n+\t    }\n+\t  } else\n+\t    failed = 1;\n+\t} else\n           failed = 1;\n       } else\n         failed = 1;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "63a3547f998bfbe52c2bc8a540e0f33d37f3ad88",
            "date": "2025-01-14T11:05:03Z",
            "author_login": "IvanNardi"
          },
          {
            "sha": "69a4f8120a3e335074fcc33f81e1d82dc0a88791",
            "date": "2025-01-13T19:38:37Z",
            "author_login": "lucaderi"
          },
          {
            "sha": "243b79544fb8525394c880d6f242ceb72ce1d9b0",
            "date": "2025-01-13T19:14:14Z",
            "author_login": "lucaderi"
          },
          {
            "sha": "082a9ad3c3d5b50c60c7077f246e7c4675f09f9b",
            "date": "2025-01-13T19:14:00Z",
            "author_login": "lucaderi"
          },
          {
            "sha": "6b686be9d3cf9c30cb09a02a17eab45e03e7b8e4",
            "date": "2025-01-13T19:13:46Z",
            "author_login": "lucaderi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "In nDPI through 3.2, the OpenVPN dissector is vulnerable to a heap-based buffer over-read in ndpi_search_openvpn in lib/protocols/openvpn.c.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-07-01T11:15:11.210",
    "last_modified": "2024-11-21T05:05:35.083",
    "fix_date": "2020-05-15T19:10:37Z"
  },
  "references": [
    {
      "url": "https://github.com/ntop/nDPI/commit/8e7b1ea7a136cc4e4aa9880072ec2d69900a825e",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ntop/nDPI/commit/8e7b1ea7a136cc4e4aa9880072ec2d69900a825e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:01.348284",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nDPI",
    "owner": "ntop",
    "created_at": "2015-04-19T04:56:52Z",
    "updated_at": "2025-01-14T11:05:08Z",
    "pushed_at": "2025-01-14T11:05:03Z",
    "size": 239718,
    "stars": 3903,
    "forks": 907,
    "open_issues": 74,
    "watchers": 3903,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev"
    ],
    "languages": {
      "C": 5715374,
      "Lua": 166102,
      "C++": 121071,
      "Makefile": 71493,
      "Shell": 57930,
      "M4": 43358,
      "Python": 41148,
      "Ruby": 1119
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T13:05:33.168001"
  }
}