{
  "cve_id": "CVE-2020-15908",
  "github_data": {
    "repository": "CauldronDevelopmentLLC/cbang",
    "fix_commit": "1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7",
    "related_commits": [
      "1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7",
      "1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7"
    ],
    "patch_url": "https://github.com/CauldronDevelopmentLLC/cbang/commit/1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7.patch",
    "fix_commit_details": {
      "sha": "1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7",
      "commit_date": "2020-07-19T19:43:49Z",
      "author": {
        "login": "jcoffland",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Don't allow extraction of tar files outside of the target directory, added tar tests",
        "length": 84,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 101,
        "additions": 99,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/cbang/tar/TarFileReader.cpp",
          "status": "modified",
          "additions": 17,
          "deletions": 2,
          "patch": "@@ -101,11 +101,26 @@ std::string TarFileReader::extract(const string &_path) {\n   if (!hasMore()) THROW(\"No more tar files\");\n \n   string path = _path;\n-  if (SystemUtilities::isDirectory(path)) path += \"/\" + getFilename();\n+  if (SystemUtilities::isDirectory(path)) {\n+    path += \"/\" + getFilename();\n+\n+    // Check that path is under the target directory\n+    string a = SystemUtilities::getCanonicalPath(_path);\n+    string b = SystemUtilities::getCanonicalPath(path);\n+    if (!String::startsWith(b, a))\n+      THROW(\"Tar path points outside of the extraction directory: \" << path);\n+  }\n \n   LOG_DEBUG(5, \"Extracting: \" << path);\n \n-  return extract(*SystemUtilities::oopen(path));\n+  switch (getType()) {\n+  case NORMAL_FILE: case CONTIGUOUS_FILE:\n+    return extract(*SystemUtilities::oopen(path));\n+  case DIRECTORY: SystemUtilities::ensureDirectory(path); break;\n+  default: THROW(\"Unsupported tar file type \" << getType());\n+  }\n+\n+  return getFilename();\n }\n \n "
        },
        {
          "filename": "tests/tarTests/.gitignore",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+/path"
        },
        {
          "filename": "tests/tarTests/BadExtractTest/data/args",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+--extract test.tar"
        },
        {
          "filename": "tests/tarTests/BadExtractTest/data/test.tar",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/BadExtractTest/expect/return",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+1"
        },
        {
          "filename": "tests/tarTests/BadExtractTest/expect/stderr",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+Tar path points outside of the extraction directory: ./../hello.txt\n\\ No newline at end of file"
        },
        {
          "filename": "tests/tarTests/BadExtractTest/expect/stdout",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/CompressedExtractTest/data/args",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+--extract test.tar.bz2"
        },
        {
          "filename": "tests/tarTests/CompressedExtractTest/data/test.tar.bz2",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/CompressedExtractTest/expect/return",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+0"
        },
        {
          "filename": "tests/tarTests/CompressedExtractTest/expect/stderr",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/CompressedExtractTest/expect/stdout",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+hello.txt"
        },
        {
          "filename": "tests/tarTests/ExtractTest/data/args",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+--extract test.tar"
        },
        {
          "filename": "tests/tarTests/ExtractTest/data/test.tar",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/ExtractTest/expect/return",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+0"
        },
        {
          "filename": "tests/tarTests/ExtractTest/expect/stderr",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/ExtractTest/expect/stdout",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+hello.txt"
        },
        {
          "filename": "tests/tarTests/SConscript",
          "status": "added",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -0,0 +1,8 @@\n+Import('*')\n+\n+# Local includes\n+env.Append(CPPPATH = ['#'])\n+\n+prog = env.Program('tar', 'tar.cpp')\n+\n+Return('prog')"
        },
        {
          "filename": "tests/tarTests/tar",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/tarTests/tar.cpp",
          "status": "added",
          "additions": 61,
          "deletions": 0,
          "patch": "@@ -0,0 +1,61 @@\n+/******************************************************************************\\\n+\n+          This file is part of the C! library.  A.K.A the cbang library.\n+\n+                Copyright (c) 2003-2019, Cauldron Development LLC\n+                   Copyright (c) 2003-2017, Stanford University\n+                               All rights reserved.\n+\n+         The C! library is free software: you can redistribute it and/or\n+        modify it under the terms of the GNU Lesser General Public License\n+       as published by the Free Software Foundation, either version 2.1 of\n+               the License, or (at your option) any later version.\n+\n+        The C! library is distributed in the hope that it will be useful,\n+          but WITHOUT ANY WARRANTY; without even the implied warranty of\n+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+                 Lesser General Public License for more details.\n+\n+         You should have received a copy of the GNU Lesser General Public\n+                 License along with the C! library.  If not, see\n+                         <http://www.gnu.org/licenses/>.\n+\n+        In addition, BSD licensing may be granted on a case by case basis\n+        by written permission from at least one of the copyright holders.\n+           You may request written permission by emailing the authors.\n+\n+                  For information regarding this software email:\n+                                 Joseph Coffland\n+                          joseph@cauldrondevelopment.com\n+\n+\\******************************************************************************/\n+\n+#include <cbang/tar/TarFileReader.h>\n+#include <cbang/Catch.h>\n+\n+#include <iostream>\n+\n+using namespace cb;\n+using namespace std;\n+\n+\n+int main(int argc, char *argv[]) {\n+  try {\n+    for (int i = 1; i < argc; i++) {\n+      string arg = argv[i];\n+\n+      if (arg == \"--extract\" && i < argc - 1) {\n+        TarFileReader reader(argv[++i]);\n+\n+        while (reader.hasMore())\n+          cout << reader.extract() << endl;\n+\n+      } else THROWS(\"Invalid arg '\" << arg << \"'\");\n+    }\n+\n+    return 0;\n+\n+  } catch (const Exception &e) {cerr << e.getMessage();}\n+\n+  return 1;\n+}"
        },
        {
          "filename": "tests/tarTests/test.json",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+{\n+  \"command\": \"%(suite-dir)s/tar\"\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 20,
        "unique_directories": 8,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c8e71efebbd13b48a02114059c7e4dfc78c8ff1c",
            "date": "2025-01-11T16:06:41Z",
            "author_login": "jcoffland"
          },
          {
            "sha": "c9ef0357ceb38785c15647c802827826e92d9ed6",
            "date": "2024-12-22T21:44:53Z",
            "author_login": "jcoffland"
          },
          {
            "sha": "05147998e1c2c22b8c58460ee1c6305cfbbae552",
            "date": "2024-12-19T13:24:23Z",
            "author_login": "jcoffland"
          },
          {
            "sha": "19d7c55130d89ecf96df7535edd772dcca475a28",
            "date": "2024-12-09T16:06:11Z",
            "author_login": "jcoffland"
          },
          {
            "sha": "be05617f6c3dbc3fcf7d22f976ad3c6261f687cf",
            "date": "2024-12-04T13:36:27Z",
            "author_login": "jcoffland"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "tar/TarFileReader.cpp in Cauldron cbang (aka C-Bang or C!) before 1.6.0 allows Directory Traversal during extraction from a TAR archive.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-07-23T04:15:10.627",
    "last_modified": "2024-11-21T05:06:25.767",
    "fix_date": "2020-07-19T19:43:49Z"
  },
  "references": [
    {
      "url": "https://github.com/CauldronDevelopmentLLC/cbang/commit/1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CauldronDevelopmentLLC/cbang/compare/1.5.1...1.6.0",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CauldronDevelopmentLLC/cbang/commit/1c1dba62bd3e6fa9d0d0c0aa21926043b75382c7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CauldronDevelopmentLLC/cbang/compare/1.5.1...1.6.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:01.374571",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cbang",
    "owner": "CauldronDevelopmentLLC",
    "created_at": "2014-03-08T00:24:00Z",
    "updated_at": "2025-01-11T16:06:51Z",
    "pushed_at": "2025-01-11T16:06:47Z",
    "size": 24222,
    "stars": 57,
    "forks": 42,
    "open_issues": 12,
    "watchers": 57,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 22054109,
      "C": 11073043,
      "Python": 334478,
      "Shell": 3540
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T15:48:38.044617"
  }
}