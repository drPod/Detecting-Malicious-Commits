{
  "cve_id": "CVE-2020-19005",
  "github_data": {
    "repository": "94fzb/zrlog",
    "fix_commit": "b2b4415e2e59b6f18b0a62b633e71c96d63c43ba",
    "related_commits": [
      "b2b4415e2e59b6f18b0a62b633e71c96d63c43ba",
      "b2b4415e2e59b6f18b0a62b633e71c96d63c43ba"
    ],
    "patch_url": "https://github.com/94fzb/zrlog/commit/b2b4415e2e59b6f18b0a62b633e71c96d63c43ba.patch",
    "fix_commit_details": {
      "sha": "b2b4415e2e59b6f18b0a62b633e71c96d63c43ba",
      "commit_date": "2019-04-14T01:34:15Z",
      "author": {
        "login": "94fzb",
        "type": "User",
        "stats": {
          "total_commits": 192,
          "average_weekly_commits": 0.39669421487603307,
          "total_additions": 278478,
          "total_deletions": 170030,
          "weeks_active": 70
        }
      },
      "commit_message": {
        "title": "Fix #48 forget remove token from ThreadLocal",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 133,
        "additions": 119,
        "deletions": 14
      },
      "files": [
        {
          "filename": "common/src/main/java/com/zrlog/web/util/PluginHelper.java",
          "status": "renamed",
          "additions": 4,
          "deletions": 8,
          "patch": "@@ -1,8 +1,7 @@\n-package com.zrlog.service;\n+package com.zrlog.web.util;\n \n-import com.jfinal.core.JFinal;\n import com.zrlog.common.vo.AdminTokenVO;\n-import com.zrlog.model.User;\n+import com.zrlog.util.BlogBuildInfoUtil;\n import com.zrlog.util.I18nUtil;\n import com.zrlog.util.ZrLogUtil;\n \n@@ -12,17 +11,14 @@\n \n public class PluginHelper {\n \n-    public static Map<String, String> genHeaderMapByRequest(HttpServletRequest request) {\n+    public static Map<String, String> genHeaderMapByRequest(HttpServletRequest request, AdminTokenVO adminTokenVO) {\n         Map<String, String> map = new HashMap<>();\n-        AdminTokenVO adminTokenVO = AdminTokenThreadLocal.getUser();\n         if (adminTokenVO != null) {\n-            User user = User.dao.findById(adminTokenVO.getUserId());\n-            map.put(\"LoginUserName\", user.get(\"userName\").toString());\n             map.put(\"LoginUserId\", adminTokenVO.getUserId() + \"\");\n         }\n         map.put(\"IsLogin\", (adminTokenVO != null) + \"\");\n         map.put(\"Current-Locale\", I18nUtil.getCurrentLocale());\n-        map.put(\"Blog-Version\", ((Map) JFinal.me().getServletContext().getAttribute(\"zrlog\")).get(\"version\").toString());\n+        map.put(\"Blog-Version\", BlogBuildInfoUtil.getVersion());\n         if (request != null) {\n             String fullUrl = ZrLogUtil.getFullUrl(request);\n             if (request.getQueryString() != null) {"
        },
        {
          "filename": "pom.xml",
          "status": "added",
          "additions": 104,
          "deletions": 0,
          "patch": "@@ -0,0 +1,104 @@\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>com.zrlog</groupId>\n+    <artifactId>zrlog</artifactId>\n+    <version>2.1.0</version>\n+    <modules>\n+        <module>web</module>\n+        <module>service</module>\n+        <module>common</module>\n+        <module>data</module>\n+    </modules>\n+    <packaging>pom</packaging>\n+    <name>zrlog</name>\n+    <description>ZrLog\u662f\u4f7f\u7528Java\u5f00\u53d1\u7684\u535a\u5ba2/CMS\u7a0b\u5e8f\uff0c\u5177\u6709\u7b80\u7ea6\uff0c\u6613\u7528\uff0c\u7ec4\u4ef6\u5316\uff0c\u5185\u5b58\u5360\u7528\u4f4e\u7b49\u7279\u70b9\u3002\u81ea\u5e26Markdown\u7f16\u8f91\u5668\uff0c\u8ba9\u66f4\u591a\u7684\u7cbe\u529b\u653e\u5728\u5199\u4f5c\u4e0a\uff0c\u800c\u4e0d\u662f\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u5728\u5b66\u4e60\u7a0b\u5e8f\u7684\u4f7f\u7528\u4e0a\u3002\n+    </description>\n+    <url>https://www.zrlog.com</url>\n+\n+    <properties>\n+        <java.version>1.8</java.version>\n+        <jfinal.version>3.3</jfinal.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <servlet.version>3.1.0</servlet.version>\n+    </properties>\n+\n+    <developers>\n+        <developer>\n+            <name>xiaochun</name>\n+            <email>xchun90@163.com</email>\n+            <url>http://blog.94fzb.com</url>\n+            <roles>\n+                <role>owner</role>\n+            </roles>\n+        </developer>\n+        <developer>\n+            <name>weekdragon</name>\n+            <email>790774717@qq.com</email>\n+            <url>https://www.weekdragon.cn</url>\n+            <roles>\n+                <role>developer</role>\n+            </roles>\n+        </developer>\n+        <developer>\n+            <name>e-lionel</name>\n+            <email>lionel0724@163.com</email>\n+            <url>https://github.com/e-lionel</url>\n+            <roles>\n+                <role>reporter</role>\n+            </roles>\n+        </developer>\n+    </developers>\n+\n+    <issueManagement>\n+        <system>Github Issue</system>\n+        <url>http://github.com/94fzb/zrlog</url>\n+    </issueManagement>\n+\n+    <licenses>\n+        <license>\n+            <name>The Apache Software License, Version 2.0</name>\n+            <url>http://apache.org/licenses/LICENSE-2.0.txt</url>\n+        </license>\n+    </licenses>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+            <version>1.7.12</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-log4j12</artifactId>\n+            <version>1.7.12</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>log4j</groupId>\n+            <artifactId>log4j</artifactId>\n+            <version>1.2.17</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>4.12</version>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <sourceDirectory>src/main/java</sourceDirectory>\n+        <testSourceDirectory>src/test/java</testSourceDirectory>\n+        <plugins>\n+            <plugin>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>${java.version}</source>\n+                    <target>${java.version}</target>\n+                    <encoding>UTF-8</encoding>\n+                </configuration>\n+                <version>2.3.2</version>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>\n\\ No newline at end of file"
        },
        {
          "filename": "service/src/main/java/com/zrlog/service/UploadService.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -4,6 +4,7 @@\n import com.hibegin.common.util.http.handle.HttpJsonArrayHandle;\n import com.zrlog.common.Constants;\n import com.zrlog.common.response.UploadFileResponse;\n+import com.zrlog.web.util.PluginHelper;\n import org.apache.log4j.Logger;\n \n import javax.servlet.http.HttpServletRequest;\n@@ -24,7 +25,7 @@ public UploadFileResponse getCloudUrl(String contextPath, String uri, String fin\n         String url;\n         try {\n             List<Map> urls = HttpUtil.getInstance().sendGetRequest(Constants.pluginServer + \"/service\", map\n-                    , new HttpJsonArrayHandle<Map>(), PluginHelper.genHeaderMapByRequest(request)).getT();\n+                    , new HttpJsonArrayHandle<Map>(), PluginHelper.genHeaderMapByRequest(request, AdminTokenThreadLocal.getUser())).getT();\n             if (urls != null && !urls.isEmpty()) {\n                 url = (String) urls.get(0).get(\"url\");\n                 if (!url.startsWith(\"https://\") && !url.startsWith(\"http://\")) {"
        },
        {
          "filename": "web/src/main/java/com/zrlog/web/handler/PluginHandler.java",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -10,8 +10,8 @@\n import com.zrlog.model.User;\n import com.zrlog.service.AdminTokenService;\n import com.zrlog.service.AdminTokenThreadLocal;\n-import com.zrlog.service.PluginHelper;\n import com.zrlog.util.BlogBuildInfoUtil;\n+import com.zrlog.web.util.PluginHelper;\n import org.apache.http.Header;\n import org.apache.http.client.methods.CloseableHttpResponse;\n import org.apache.log4j.Logger;\n@@ -52,8 +52,9 @@ public void handle(String target, HttpServletRequest request, HttpServletRespons\n             }\n         }\n         if (isPluginPath) {\n+            Map.Entry<AdminTokenVO, User> entry = null;\n             try {\n-                Map.Entry<AdminTokenVO, User> entry = adminTokenService.getAdminTokenVOUserEntry(request);\n+                entry = adminTokenService.getAdminTokenVOUserEntry(request);\n                 if (entry != null) {\n                     adminTokenService.setAdminToken(entry.getValue(), entry.getKey().getSessionId(), entry.getKey().getProtocol(), request, response);\n                 }\n@@ -72,6 +73,9 @@ public void handle(String target, HttpServletRequest request, HttpServletRespons\n                 }\n             } finally {\n                 isHandled[0] = true;\n+                if (entry != null) {\n+                    AdminTokenThreadLocal.remove();\n+                }\n             }\n         } else {\n             this.next.handle(target, request, response, isHandled);\n@@ -153,13 +157,13 @@ public static CloseResponseHandle getContext(String uri, String method, HttpServ\n         HttpUtil httpUtil = disableRedirect ? HttpUtil.getDisableRedirectInstance() : HttpUtil.getInstance();\n         //GET\u8bf7\u6c42\u4e0d\u5173\u5fc3request.getInputStream() \u7684\u6570\u636e\n         if (method.equals(request.getMethod()) && \"GET\".equalsIgnoreCase(method)) {\n-            httpResponse = httpUtil.sendGetRequest(pluginServerHttp + uri, request.getParameterMap(), handle, PluginHelper.genHeaderMapByRequest(request)).getT();\n+            httpResponse = httpUtil.sendGetRequest(pluginServerHttp + uri, request.getParameterMap(), handle, PluginHelper.genHeaderMapByRequest(request, AdminTokenThreadLocal.getUser())).getT();\n         } else {\n             //\u5982\u679c\u662f\u8868\u5355\u6570\u636e\u63d0\u4ea4\u4e0d\u5173\u5fc3\u8bf7\u6c42\u5934\uff0c\u53cd\u4e4b\u5c06\u6240\u6709\u8bf7\u6c42\u5934\u90fd\u53d1\u5230\u63d2\u4ef6\u670d\u52a1\n             if (\"application/x-www-form-urlencoded\".equals(request.getContentType())) {\n-                httpResponse = httpUtil.sendPostRequest(pluginServerHttp + uri, request.getParameterMap(), handle, PluginHelper.genHeaderMapByRequest(request)).getT();\n+                httpResponse = httpUtil.sendPostRequest(pluginServerHttp + uri, request.getParameterMap(), handle, PluginHelper.genHeaderMapByRequest(request, AdminTokenThreadLocal.getUser())).getT();\n             } else {\n-                httpResponse = httpUtil.sendPostRequest(pluginServerHttp + uri + \"?\" + request.getQueryString(), IOUtil.getByteByInputStream(request.getInputStream()), handle, PluginHelper.genHeaderMapByRequest(request)).getT();\n+                httpResponse = httpUtil.sendPostRequest(pluginServerHttp + uri + \"?\" + request.getQueryString(), IOUtil.getByteByInputStream(request.getInputStream()), handle, PluginHelper.genHeaderMapByRequest(request, AdminTokenThreadLocal.getUser())).getT();\n             }\n         }\n         //\u6dfb\u52a0\u63d2\u4ef6\u670d\u52a1\u7684HTTP\u54cd\u5e94\u5934\u5230\u8c03\u7528\u8005\u54cd\u5e94\u5934\u91cc\u9762"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "adce1a6700dd4f083f195f7e4ca2dbb8530b11ec",
            "date": "2024-12-30T04:03:27Z",
            "author_login": "94fzb"
          },
          {
            "sha": "07935a9eb63308f01907ccdfd9e4b89a88a5ec52",
            "date": "2024-12-30T03:55:27Z",
            "author_login": "94fzb"
          },
          {
            "sha": "aef1fa046ca7c16c96770b4496d2e6dba0598e22",
            "date": "2024-12-16T11:23:20Z",
            "author_login": "94fzb"
          },
          {
            "sha": "30a0ba67baa62483d8da36b86733c0c5d4e1ed36",
            "date": "2024-12-10T15:09:41Z",
            "author_login": "94fzb"
          },
          {
            "sha": "56b629b0462ffbb81fb99a035309b11ed4aa6085",
            "date": "2024-12-10T15:02:41Z",
            "author_login": "94fzb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-863",
    "description": "zrlog v2.1.0 has a vulnerability with the permission check. If admin account is logged in, other unauthorized users can download the database backup file directly.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-08-25T22:15:11.537",
    "last_modified": "2024-11-21T05:08:54.817",
    "fix_date": "2019-04-14T01:34:15Z"
  },
  "references": [
    {
      "url": "https://github.com/94fzb/zrlog/commit/b2b4415e2e59b6f18b0a62b633e71c96d63c43ba",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/94fzb/zrlog/issues/48",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/94fzb/zrlog/commit/b2b4415e2e59b6f18b0a62b633e71c96d63c43ba",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/94fzb/zrlog/issues/48",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.808526",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "zrlog",
    "owner": "94fzb",
    "created_at": "2015-09-23T06:08:05Z",
    "updated_at": "2025-01-12T09:28:57Z",
    "pushed_at": "2024-12-30T04:03:31Z",
    "size": 9314,
    "stars": 372,
    "forks": 152,
    "open_issues": 8,
    "watchers": 372,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "release"
    ],
    "languages": {
      "Java": 521168,
      "TypeScript": 398587,
      "CSS": 83446,
      "JavaScript": 21471,
      "FreeMarker": 13721,
      "Shell": 6727,
      "HTML": 4648,
      "Batchfile": 94
    },
    "commit_activity": {
      "total_commits_last_year": 27,
      "avg_commits_per_week": 0.5192307692307693,
      "days_active_last_year": 13
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:58:23.168693"
  }
}