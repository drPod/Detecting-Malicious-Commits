{
  "cve_id": "CVE-2020-1912",
  "github_data": {
    "repository": "facebook/hermes",
    "fix_commit": "091835377369c8fd5917d9b87acffa721ad2a168",
    "related_commits": [
      "091835377369c8fd5917d9b87acffa721ad2a168",
      "091835377369c8fd5917d9b87acffa721ad2a168"
    ],
    "patch_url": "https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168.patch",
    "fix_commit_details": {
      "sha": "091835377369c8fd5917d9b87acffa721ad2a168",
      "commit_date": "2020-09-08T21:27:55Z",
      "author": {
        "login": "willholen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Correctly restore whether or not a function is an inner generator",
        "length": 434,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 85,
        "additions": 64,
        "deletions": 21
      },
      "files": [
        {
          "filename": "include/hermes/IR/IR.h",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -336,8 +336,10 @@ class SerializedScope {\n #ifndef HERMESVM_LEAN\n /// The source of a lazy AST node.\n struct LazySource {\n-  // The type of node (such as a FunctionDeclaration or FunctionExpression).\n+  /// The type of node (such as a FunctionDeclaration or FunctionExpression).\n   ESTree::NodeKind nodeKind{ESTree::NodeKind::Empty};\n+  /// Whether or not this is the inner function of a generator\n+  bool isGeneratorInnerFunction;\n   /// The source buffer id in which this function can be find.\n   uint32_t bufferId{0};\n   /// The range of the function within the buffer (the whole function node, not"
        },
        {
          "filename": "include/hermes/IRGen/IRGen.h",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -42,6 +42,9 @@ struct LazyCompilationData {\n   /// The type of function, e.g. statement or expression.\n   ESTree::NodeKind nodeKind;\n \n+  /// Whether or not this is the inner function of a generator.\n+  bool isGeneratorInnerFunction;\n+\n   /// Whether or not the function is strict.\n   bool strictMode;\n };"
        },
        {
          "filename": "lib/BCGen/HBC/BytecodeGenerator.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -278,6 +278,8 @@ std::unique_ptr<BytecodeModule> BytecodeModuleGenerator::generate() {\n       auto lazyData = llvh::make_unique<LazyCompilationData>();\n       lazyData->parentScope = F->getLazyScope();\n       lazyData->nodeKind = F->getLazySource().nodeKind;\n+      lazyData->isGeneratorInnerFunction =\n+          F->getLazySource().isGeneratorInnerFunction;\n       lazyData->bufferId = F->getLazySource().bufferId;\n       lazyData->originalName = F->getOriginalOrInferredName();\n       lazyData->closureAlias = F->getLazyClosureAlias()"
        },
        {
          "filename": "lib/IRGen/ESTreeIRGen-func.cpp",
          "status": "modified",
          "additions": 10,
          "deletions": 6,
          "patch": "@@ -215,6 +215,7 @@ Function *ESTreeIRGen::genES5Function(\n       auto &lazySource = newFunction->getLazySource();\n       lazySource.bufferId = bodyBlock->bufferId;\n       lazySource.nodeKind = getLazyFunctionKind(functionNode);\n+      lazySource.isGeneratorInnerFunction = isGeneratorInnerFunction;\n       lazySource.functionRange = functionNode->getSourceRange();\n \n       // Set the function's .length.\n@@ -302,14 +303,17 @@ Function *ESTreeIRGen::genGeneratorFunction(\n       ESTree::isStrict(functionNode->strictness),\n       /* insertBefore */ nullptr);\n \n-  auto *innerFn = genES5Function(\n-      genAnonymousLabelName(originalName.isValid() ? originalName.str() : \"\"),\n-      lazyClosureAlias,\n-      functionNode,\n-      true);\n-\n   {\n     FunctionContext outerFnContext{this, outerFn, functionNode->getSemInfo()};\n+\n+    // Build the inner function. This must be done in the outerFnContext\n+    // since it's lexically considered a child function.\n+    auto *innerFn = genES5Function(\n+        genAnonymousLabelName(originalName.isValid() ? originalName.str() : \"\"),\n+        lazyClosureAlias,\n+        functionNode,\n+        true);\n+\n     emitFunctionPrologue(\n         functionNode,\n         Builder.createBasicBlock(outerFn),"
        },
        {
          "filename": "lib/IRGen/ESTreeIRGen.cpp",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -349,7 +349,11 @@ std::pair<Function *, Function *> ESTreeIRGen::doLazyFunction(\n       !llvh::isa<ESTree::ArrowFunctionExpressionNode>(node) &&\n       \"lazy compilation not supported for arrow functions\");\n \n-  auto *func = genES5Function(lazyData->originalName, parentVar, node);\n+  auto *func = genES5Function(\n+      lazyData->originalName,\n+      parentVar,\n+      node,\n+      lazyData->isGeneratorInnerFunction);\n   addLexicalDebugInfo(func, topLevel, lexicalScopeChain);\n   return {func, topLevel};\n }"
        },
        {
          "filename": "test/BCGen/HBC/es6/generator.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -74,7 +74,7 @@ function *args() {\n // CHECK-NEXT:     CreateGenerator   r1, r0, 4\n // CHECK-NEXT:     Ret               r1\n \n-// CHECK-LABEL: Function<?anon_1_args>(1 params, 7 registers, 0 symbols):\n+// CHECK-LABEL: Function<?anon_0_args>(1 params, 7 registers, 0 symbols):\n // CHECK-NEXT: Offset in debug table: source 0x{{.*}}, lexical 0x0000\n // CHECK-NEXT:     StartGenerator\n // CHECK-NEXT:     CreateEnvironment r0"
        },
        {
          "filename": "test/IRGen/es6/generator.js",
          "status": "modified",
          "additions": 12,
          "deletions": 12,
          "patch": "@@ -47,11 +47,11 @@ function *useResult() {\n //CHECK-NEXT:frame = [x]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StoreFrameInst undefined : undefined, [x]\n-//CHECK-NEXT:  %1 = CreateGeneratorInst %?anon_1_useResult()\n+//CHECK-NEXT:  %1 = CreateGeneratorInst %?anon_0_useResult()\n //CHECK-NEXT:  %2 = ReturnInst %1 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_1_useResult()\n+//CHECK-LABEL:function ?anon_0_useResult()\n //CHECK-NEXT:frame = [x]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst\n@@ -86,11 +86,11 @@ function *loop(x) {\n //CHECK-NEXT:frame = [i]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StoreFrameInst undefined : undefined, [i]\n-//CHECK-NEXT:  %1 = CreateGeneratorInst %?anon_2_loop()\n+//CHECK-NEXT:  %1 = CreateGeneratorInst %?anon_0_loop()\n //CHECK-NEXT:  %2 = ReturnInst %1 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_2_loop(x)\n+//CHECK-LABEL:function ?anon_0_loop(x)\n //CHECK-NEXT:frame = [i, x]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst\n@@ -139,11 +139,11 @@ var simple2 = function*() {\n //CHECK-LABEL:function simple2()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n-//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_4_simple2()\n+//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_0_simple2()\n //CHECK-NEXT:  %1 = ReturnInst %0 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_4_simple2()\n+//CHECK-LABEL:function ?anon_0_simple2()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst\n@@ -172,11 +172,11 @@ var yieldStar = function*() {\n //CHECK-LABEL:function yieldStar()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n-//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_5_yieldStar()\n+//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_0_yieldStar()\n //CHECK-NEXT:  %1 = ReturnInst %0 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_5_yieldStar()\n+//CHECK-LABEL:function ?anon_0_yieldStar()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst\n@@ -281,13 +281,13 @@ var destr = function*([x]) {\n //CHECK-LABEL:function destr()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n-//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_6_destr()\n+//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_0_destr()\n //CHECK-NEXT:  %1 = LoadPropertyInst %0 : object, \"next\" : string\n //CHECK-NEXT:  %2 = CallInst %1, %0 : object\n //CHECK-NEXT:  %3 = ReturnInst %0 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_6_destr(?anon_2_param)\n+//CHECK-LABEL:function ?anon_0_destr(?anon_2_param)\n //CHECK-NEXT:frame = [x]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst\n@@ -355,13 +355,13 @@ var initializer = function*(x = foo()) {\n //CHECK-LABEL:function initializer()\n //CHECK-NEXT:frame = []\n //CHECK-NEXT:%BB0:\n-//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_7_initializer()\n+//CHECK-NEXT:  %0 = CreateGeneratorInst %?anon_0_initializer()\n //CHECK-NEXT:  %1 = LoadPropertyInst %0 : object, \"next\" : string\n //CHECK-NEXT:  %2 = CallInst %1, %0 : object\n //CHECK-NEXT:  %3 = ReturnInst %0 : object\n //CHECK-NEXT:function_end\n \n-//CHECK-LABEL:function ?anon_7_initializer(x)\n+//CHECK-LABEL:function ?anon_0_initializer(x)\n //CHECK-NEXT:frame = [x]\n //CHECK-NEXT:%BB0:\n //CHECK-NEXT:  %0 = StartGeneratorInst"
        },
        {
          "filename": "test/IRGen/lazy-function-in-generator.js",
          "status": "added",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -0,0 +1,28 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+// RUN: %hermes -lazy %s | %FileCheck %s --match-full-lines\n+\n+// Make sure we can correctly resolve scopes through lazily compiled\n+// functions in lazily compiled generators.\n+function f() {\n+  var f_var = 10;\n+  function* g() {\n+    var g_var = 32;\n+    function h() {\n+      /* Some text to pad out the function so that it won't be eagerly compiled\n+       * for being too short. Lorem ipsum dolor sit amet, consectetur adipiscing\n+       * elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n+       */\n+      return f_var + g_var;\n+    }\n+    yield h();\n+  }\n+  return g().next().value;\n+}\n+// CHECK: 42\n+print(f());"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 7,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a942ef374897d85da38e9c8904574f8376555388",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "9f0b77fc801b1bed97e6097776a6baa1c4ed2e00",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "c995d195adaf07811cf35d81423a5a4afa7d60cf",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "e08fb5fc02177d55ca13fd71324a0e94e33ffb76",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "a49b895b12e3a9d6cfa79204daa480dcc831cbe0",
            "date": "2025-01-08T16:47:41Z",
            "author_login": "SamChou19815"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-787",
    "description": "An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-09-09T19:15:20.850",
    "last_modified": "2024-11-21T05:11:35.917",
    "fix_date": "2020-09-08T21:27:55Z"
  },
  "references": [
    {
      "url": "https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168",
      "source": "cve-assign@fb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.facebook.com/security/advisories/cve-2020-1912",
      "source": "cve-assign@fb.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.facebook.com/security/advisories/cve-2020-1912",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.824743",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "hermes",
    "owner": "facebook",
    "created_at": "2018-10-22T19:13:00Z",
    "updated_at": "2025-01-13T03:07:27Z",
    "pushed_at": "2025-01-13T14:55:56Z",
    "size": 98978,
    "stars": 10032,
    "forks": 648,
    "open_issues": 161,
    "watchers": 10032,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "gh-pages",
      "main"
    ],
    "languages": {
      "C++": 10937781,
      "JavaScript": 7932464,
      "Rust": 1201532,
      "Python": 337453,
      "Java": 319660,
      "TypeScript": 184977,
      "Objective-C++": 113458,
      "CMake": 113065,
      "C": 41344,
      "Shell": 38189,
      "Swift": 22129,
      "NASL": 4993,
      "Ruby": 3189,
      "DTrace": 574,
      "Objective-C": 303,
      "D": 225
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:50:37.887799"
  }
}