{
  "cve_id": "CVE-2020-19498",
  "github_data": {
    "repository": "strukturag/libheif",
    "fix_commit": "2710c930918609caaf0a664e9c7bc3dce05d5b58",
    "related_commits": [
      "2710c930918609caaf0a664e9c7bc3dce05d5b58",
      "2710c930918609caaf0a664e9c7bc3dce05d5b58"
    ],
    "patch_url": "https://github.com/strukturag/libheif/commit/2710c930918609caaf0a664e9c7bc3dce05d5b58.patch",
    "fix_commit_details": {
      "sha": "2710c930918609caaf0a664e9c7bc3dce05d5b58",
      "commit_date": "2019-08-02T15:37:19Z",
      "author": {
        "login": "farindk",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "force fraction to a limited resolution to finally solve those pesky numerical edge cases",
        "length": 88,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 52,
        "additions": 9,
        "deletions": 43
      },
      "files": [
        {
          "filename": "libheif/box.cc",
          "status": "modified",
          "additions": 8,
          "deletions": 42,
          "patch": "@@ -40,54 +40,20 @@ heif::Error heif::Error::Ok(heif_error_Ok);\n \n \n \n-static int32_t gcd(int a, int b)\n-{\n-  if (a == 0 && b == 0) {\n-    return 1;\n-  }\n-\n-  if (a == 0) return b;\n-  if (b == 0) return a;\n-\n-  int32_t h;\n-\n-  do {\n-    h = a % b;\n-    a = b;\n-    b = h;\n-  } while (b != 0);\n-\n-  return a;\n-}\n-\n-\n Fraction::Fraction(int32_t num,int32_t den)\n {\n-  int32_t g = gcd(num, den);\n-\n-  // these strange tests are for catching the case that we divide -2147483648 by -1,\n-  // which would exceed the maximum positive value by one.\n-\n-  if (num == std::numeric_limits<int32_t>::min() && g == -1) {\n-    num++;\n-  }\n-\n-  if (den == std::numeric_limits<int32_t>::min() && g == -1) {\n-    den++;\n-  }\n-\n-\n-  numerator = num / g;\n-  denominator = den / g;\n-\n-\n   // Reduce resolution of fraction until we are in a safe range.\n   // We need this as adding fractions may lead to very large denominators\n   // (e.g. 0x10000 * 0x10000 > 0x100000000 -> overflow, leading to integer 0)\n \n-  while (denominator > MAX_FRACTION_DENOMINATOR) {\n-    numerator >>= 1;\n-    denominator >>= 1;\n+  while (denominator > MAX_FRACTION_VALUE || denominator < -MAX_FRACTION_VALUE) {\n+    numerator /= 2;\n+    denominator /= 2;\n+  }\n+\n+  while (numerator > MAX_FRACTION_VALUE || numerator < -MAX_FRACTION_VALUE) {\n+    numerator /= 2;\n+    denominator /= 2;\n   }\n }\n "
        },
        {
          "filename": "libheif/heif_limits.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,6 +47,6 @@ static const int MAX_BOX_NESTING_LEVEL = 20;\n static const int MAX_BOX_SIZE = 0x7FFFFFFF; // 2 GB\n static const int64_t MAX_LARGE_BOX_SIZE = 0x0FFFFFFFFFFFFFFF;\n static const int64_t MAX_FILE_POS = 0x007FFFFFFFFFFFFFLL; // maximum file position\n-static const int MAX_FRACTION_DENOMINATOR = 0x10000;\n+static const int MAX_FRACTION_VALUE = 0x10000;\n \n #endif  // LIBHEIF_HEIF_LIMITS_H"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e52035eaeb0697c09f4d70dd52c02281b51f2a0a",
            "date": "2025-01-14T11:06:04Z",
            "author_login": "farindk"
          },
          {
            "sha": "e7c6d712902d4e0d97d2946636fec40e8be1797e",
            "date": "2025-01-14T11:03:46Z",
            "author_login": "farindk"
          },
          {
            "sha": "b44c4ecbc500d8d5fb91911b43b9461b48102859",
            "date": "2025-01-14T10:43:50Z",
            "author_login": "lovell"
          },
          {
            "sha": "2b736bf786292da16b34a73bf82dad745f3c3115",
            "date": "2025-01-10T14:51:01Z",
            "author_login": "farindk"
          },
          {
            "sha": "1630460fdb747f2d3c803e9ce38c22469eeadc83",
            "date": "2025-01-06T15:08:25Z",
            "author_login": "farindk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": null,
    "description": "Floating point exception in function Fraction in libheif 1.4.0, allows attackers to cause a Denial of Service or possibly other unspecified impacts.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-07-21T18:15:09.133",
    "last_modified": "2024-11-21T05:09:13.457",
    "fix_date": "2019-08-02T15:37:19Z"
  },
  "references": [
    {
      "url": "https://github.com/strukturag/libheif/commit/2710c930918609caaf0a664e9c7bc3dce05d5b58",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/strukturag/libheif/issues/139",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/strukturag/libheif/commit/2710c930918609caaf0a664e9c7bc3dce05d5b58",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/strukturag/libheif/issues/139",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:02.326381",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libheif",
    "owner": "strukturag",
    "created_at": "2017-12-21T14:06:21Z",
    "updated_at": "2025-01-14T12:03:23Z",
    "pushed_at": "2025-01-14T11:38:18Z",
    "size": 11679,
    "stars": 1812,
    "forks": 312,
    "open_issues": 245,
    "watchers": 1812,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "coverity"
    ],
    "languages": {
      "C++": 3265751,
      "C": 205335,
      "CMake": 68394,
      "Go": 50734,
      "Shell": 43462,
      "JavaScript": 6472
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:57:41.565599"
  }
}