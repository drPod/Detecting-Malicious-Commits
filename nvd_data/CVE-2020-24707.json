{
  "cve_id": "CVE-2020-24707",
  "github_data": {
    "repository": "gophish/gophish",
    "fix_commit": "b25f5ac5e468f6730e377f43c7995e18f8fccc2b",
    "related_commits": [
      "b25f5ac5e468f6730e377f43c7995e18f8fccc2b",
      "b25f5ac5e468f6730e377f43c7995e18f8fccc2b"
    ],
    "patch_url": "https://github.com/gophish/gophish/commit/b25f5ac5e468f6730e377f43c7995e18f8fccc2b.patch",
    "fix_commit_details": {
      "sha": "b25f5ac5e468f6730e377f43c7995e18f8fccc2b",
      "commit_date": "2020-07-25T03:44:24Z",
      "author": {
        "login": "jordan-wright",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Updated PapaParse config to prevent CSV injection.",
        "length": 394,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 1947,
        "additions": 1938,
        "deletions": 9
      },
      "files": [
        {
          "filename": "static/js/dist/app/campaign_results.min.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-var map=null,doPoll=!0,statuses={\"Email Sent\":{color:\"#1abc9c\",label:\"label-success\",icon:\"fa-envelope\",point:\"ct-point-sent\"},\"Emails Sent\":{color:\"#1abc9c\",label:\"label-success\",icon:\"fa-envelope\",point:\"ct-point-sent\"},\"In progress\":{label:\"label-primary\"},Queued:{label:\"label-info\"},Completed:{label:\"label-success\"},\"Email Opened\":{color:\"#f9bf3b\",label:\"label-warning\",icon:\"fa-envelope-open\",point:\"ct-point-opened\"},\"Clicked Link\":{color:\"#F39C12\",label:\"label-clicked\",icon:\"fa-mouse-pointer\",point:\"ct-point-clicked\"},Success:{color:\"#f05b4f\",label:\"label-danger\",icon:\"fa-exclamation\",point:\"ct-point-clicked\"},\"Email Reported\":{color:\"#45d6ef\",label:\"label-info\",icon:\"fa-bullhorn\",point:\"ct-point-reported\"},Error:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-times\",point:\"ct-point-error\"},\"Error Sending Email\":{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-times\",point:\"ct-point-error\"},\"Submitted Data\":{color:\"#f05b4f\",label:\"label-danger\",icon:\"fa-exclamation\",point:\"ct-point-clicked\"},Unknown:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-question\",point:\"ct-point-error\"},Sending:{color:\"#428bca\",label:\"label-primary\",icon:\"fa-spinner\",point:\"ct-point-sending\"},Retrying:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-clock-o\",point:\"ct-point-error\"},Scheduled:{color:\"#428bca\",label:\"label-primary\",icon:\"fa-clock-o\",point:\"ct-point-sending\"},\"Campaign Created\":{label:\"label-success\",icon:\"fa-rocket\"}},statusMapping={\"Email Sent\":\"sent\",\"Email Opened\":\"opened\",\"Clicked Link\":\"clicked\",\"Submitted Data\":\"submitted_data\",\"Email Reported\":\"reported\"},progressListing=[\"Email Sent\",\"Email Opened\",\"Clicked Link\",\"Submitted Data\"],campaign={},bubbles=[];function dismiss(){$(\"#modal\\\\.flashes\").empty(),$(\"#modal\").modal(\"hide\"),$(\"#resultsTable\").dataTable().DataTable().clear().draw()}function deleteCampaign(){Swal.fire({title:\"Are you sure?\",text:\"This will delete the campaign. This can't be undone!\",type:\"warning\",animation:!1,showCancelButton:!0,confirmButtonText:\"Delete Campaign\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0,preConfirm:function(){return new Promise(function(t,a){api.campaignId.delete(campaign.id).success(function(e){t()}).error(function(e){a(e.responseJSON.message)})})}}).then(function(e){e.value&&Swal.fire(\"Campaign Deleted!\",\"This campaign has been deleted!\",\"success\"),$('button:contains(\"OK\")').on(\"click\",function(){location.href=\"/campaigns\"})})}function completeCampaign(){Swal.fire({title:\"Are you sure?\",text:\"Gophish will stop processing events for this campaign\",type:\"warning\",animation:!1,showCancelButton:!0,confirmButtonText:\"Complete Campaign\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0,preConfirm:function(){return new Promise(function(t,a){api.campaignId.complete(campaign.id).success(function(e){t()}).error(function(e){a(e.responseJSON.message)})})}}).then(function(e){e.value&&(Swal.fire(\"Campaign Completed!\",\"This campaign has been completed!\",\"success\"),$(\"#complete_button\")[0].disabled=!0,$(\"#complete_button\").text(\"Completed!\"),doPoll=!1)})}function exportAsCSV(e){exportHTML=$(\"#exportButton\").html();var t=null,a=campaign.name+\" - \"+capitalize(e)+\".csv\";switch(e){case\"results\":t=campaign.results;break;case\"events\":t=campaign.timeline}if(t){$(\"#exportButton\").html('<i class=\"fa fa-spinner fa-spin\"></i>');var s=Papa.unparse(t,{}),i=new Blob([s],{type:\"text/csv;charset=utf-8;\"});if(navigator.msSaveBlob)navigator.msSaveBlob(i,a);else{var l=window.URL.createObjectURL(i),n=document.createElement(\"a\");n.href=l,n.setAttribute(\"download\",a),document.body.appendChild(n),n.click(),document.body.removeChild(n)}$(\"#exportButton\").html(exportHTML)}}function replay(e){return request=campaign.timeline[e],details=JSON.parse(request.details),url=null,form=$(\"<form>\").attr({method:\"POST\",target:\"_blank\"}),$.each(Object.keys(details.payload),function(e,t){return\"rid\"==t||(\"__original_url\"==t?(url=details.payload[t],!0):void $(\"<input>\").attr({name:t}).val(details.payload[t]).appendTo(form))}),void Swal.fire({title:\"Where do you want the credentials submitted to?\",input:\"text\",showCancelButton:!0,inputPlaceholder:\"http://example.com/login\",inputValue:url||\"\",inputValidator:function(a){return new Promise(function(e,t){a?e():t(\"Invalid URL.\")})}}).then(function(e){e.value&&(url=e.value,t())});function t(){form.attr({action:url}),form.appendTo(\"body\").submit().remove()}}var renderDevice=function(e){var t=UAParser(details.browser[\"user-agent\"]),a='<div class=\"timeline-device-details\">',s=\"laptop\";t.device.type&&(\"tablet\"!=t.device.type&&\"mobile\"!=t.device.type||(s=t.device.type));var i=\"\";t.device.vendor&&\"microsoft\"==(i=t.device.vendor.toLowerCase())&&(i=\"windows\");var l=\"Unknown\";t.os.name&&(\"Mac OS\"==(l=t.os.name)?i=\"apple\":\"Windows\"==l&&(i=\"windows\"),t.device.vendor&&t.device.model&&(l=t.device.vendor+\" \"+t.device.model)),t.os.version&&(l=l+\" (OS Version: \"+t.os.version+\")\"),deviceString='<div class=\"timeline-device-os\"><span class=\"fa fa-stack\"><i class=\"fa fa-'+escapeHtml(s)+' fa-stack-2x\"></i><i class=\"fa fa-vendor-icon fa-'+escapeHtml(i)+' fa-stack-1x\"></i></span> '+escapeHtml(l)+\"</div>\",a+=deviceString;var n=\"Unknown\",r=\"info-circle\",o=\"\";return t.browser&&t.browser.name&&((n=(n=t.browser.name).replace(\"Mobile \",\"\"))&&\"ie\"==(r=n.toLowerCase())&&(r=\"internet-explorer\"),o=\"(Version: \"+t.browser.version+\")\"),a+='<div class=\"timeline-device-browser\"><span class=\"fa fa-stack\"><i class=\"fa fa-'+escapeHtml(r)+' fa-stack-1x\"></i></span> '+n+\" \"+o+\"</div>\",a+=\"</div>\"};function renderTimeline(e){return record={id:e[0],first_name:e[2],last_name:e[3],email:e[4],position:e[5],status:e[6],reported:e[7],send_date:e[8]},results='<div class=\"timeline col-sm-12 well well-lg\"><h6>Timeline for '+escapeHtml(record.first_name)+\" \"+escapeHtml(record.last_name)+'</h6><span class=\"subtitle\">Email: '+escapeHtml(record.email)+\"<br>Result ID: \"+escapeHtml(record.id)+'</span><div class=\"timeline-graph col-sm-6\">',$.each(campaign.timeline,function(e,t){t.email&&t.email!=record.email||(results+='<div class=\"timeline-entry\">    <div class=\"timeline-bar\"></div>',results+='    <div class=\"timeline-icon '+statuses[t.message].label+'\">    <i class=\"fa '+statuses[t.message].icon+'\"></i></div>    <div class=\"timeline-message\">'+escapeHtml(t.message)+'    <span class=\"timeline-date\">'+moment.utc(t.time).local().format(\"MMMM Do YYYY h:mm:ss a\")+\"</span>\",t.details&&(details=JSON.parse(t.details),\"Clicked Link\"!=t.message&&\"Submitted Data\"!=t.message||(deviceView=renderDevice(details),deviceView&&(results+=deviceView)),\"Submitted Data\"==t.message&&(results+='<div class=\"timeline-replay-button\"><button onclick=\"replay('+e+')\" class=\"btn btn-success\">',results+='<i class=\"fa fa-refresh\"></i> Replay Credentials</button></div>',results+='<div class=\"timeline-event-details\"><i class=\"fa fa-caret-right\"></i> View Details</div>'),details.payload&&(results+='<div class=\"timeline-event-results\">',results+='    <table class=\"table table-condensed table-bordered table-striped\">',results+=\"        <thead><tr><th>Parameter</th><th>Value(s)</tr></thead><tbody>\",$.each(Object.keys(details.payload),function(e,t){if(\"rid\"==t)return!0;results+=\"    <tr>\",results+=\"        <td>\"+escapeHtml(t)+\"</td>\",results+=\"        <td>\"+escapeHtml(details.payload[t])+\"</td>\",results+=\"    </tr>\"}),results+=\"       </tbody></table>\",results+=\"</div>\"),details.error&&(results+='<div class=\"timeline-event-details\"><i class=\"fa fa-caret-right\"></i> View Details</div>',results+='<div class=\"timeline-event-results\">',results+='<span class=\"label label-default\">Error</span> '+details.error,results+=\"</div>\")),results+=\"</div></div>\")}),\"Scheduled\"!=record.status&&\"Retrying\"!=record.status||(results+='<div class=\"timeline-entry\">    <div class=\"timeline-bar\"></div>',results+='    <div class=\"timeline-icon '+statuses[record.status].label+'\">    <i class=\"fa '+statuses[record.status].icon+'\"></i></div>    <div class=\"timeline-message\">Scheduled to send at '+record.send_date+\"</span>\"),results+=\"</div></div>\",results}var setRefresh,renderTimelineChart=function(e){return Highcharts.chart(\"timeline_chart\",{chart:{zoomType:\"x\",type:\"line\",height:\"200px\"},title:{text:\"Campaign Timeline\"},xAxis:{type:\"datetime\",dateTimeLabelFormats:{second:\"%l:%M:%S\",minute:\"%l:%M\",hour:\"%l:%M\",day:\"%b %d, %Y\",week:\"%b %d, %Y\",month:\"%b %Y\"}},yAxis:{min:0,max:2,visible:!1,tickInterval:1,labels:{enabled:!1},title:{text:\"\"}},tooltip:{formatter:function(){return Highcharts.dateFormat(\"%A, %b %d %l:%M:%S %P\",new Date(this.x))+\"<br>Event: \"+this.point.message+\"<br>Email: <b>\"+this.point.email+\"</b>\"}},legend:{enabled:!1},plotOptions:{series:{marker:{enabled:!0,symbol:\"circle\",radius:3},cursor:\"pointer\"},line:{states:{hover:{lineWidth:1}}}},credits:{enabled:!1},series:[{data:e.data,dashStyle:\"shortdash\",color:\"#cccccc\",lineWidth:1,turboThreshold:0}]})},renderPieChart=function(l){return Highcharts.chart(l.elemId,{chart:{type:\"pie\",events:{load:function(){var e=this,t=e.renderer,a=e.series[0],s=e.plotLeft+a.center[0],i=e.plotTop+a.center[1];this.innerText=t.text(l.data[0].count,s,i).attr({\"text-anchor\":\"middle\",\"font-size\":\"24px\",\"font-weight\":\"bold\",fill:l.colors[0],\"font-family\":\"Helvetica,Arial,sans-serif\"}).add()},render:function(){this.innerText.attr({text:l.data[0].count})}}},title:{text:l.title},plotOptions:{pie:{innerSize:\"80%\",dataLabels:{enabled:!1}}},credits:{enabled:!1},tooltip:{formatter:function(){return null!=this.key&&'<span style=\"color:'+this.color+'\">\u25cf</span>'+this.point.name+\": <b>\"+this.y+\"%</b><br/>\"}},series:[{data:l.data,colors:l.colors}]})},updateMap=function(e){map&&(bubbles=[],$.each(campaign.results,function(e,a){if(0==a.latitude&&0==a.longitude)return!0;newIP=!0,$.each(bubbles,function(e,t){if(t.ip==a.ip)return bubbles[e].radius+=1,newIP=!1}),newIP&&bubbles.push({latitude:a.latitude,longitude:a.longitude,name:a.ip,fillKey:\"point\",radius:2})}),map.bubbles(bubbles))};function createStatusLabel(e,t){var a=statuses[e].label||\"label-default\",s='<span class=\"label '+a+'\">'+e+\"</span>\";\"Scheduled\"!=e&&\"Retrying\"!=e||(s='<span class=\"label '+a+'\" data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title=\"'+(\"Scheduled to send at \"+t)+'\">'+e+\"</span>\");return s}function poll(){api.campaignId.results(campaign.id).success(function(e){campaign=e;var s=[];$.each(campaign.timeline,function(e,t){var a=moment.utc(t.time).local();s.push({email:t.email,message:t.message,x:a.valueOf(),y:1,marker:{fillColor:statuses[t.message].color}})}),$(\"#timeline_chart\").highcharts().series[0].update({data:s});var i={};Object.keys(statusMapping).forEach(function(e){i[e]=0}),$.each(campaign.results,function(e,t){i[t.status]++,t.reported&&i[\"Email Reported\"]++;var a=progressListing.indexOf(t.status);for(e=0;e<a;e++)i[progressListing[e]]++}),$.each(i,function(e,t){var a=[];if(!(e in statusMapping))return!0;a.push({name:e,y:Math.floor(t/campaign.results.length*100),count:t}),a.push({name:\"\",y:100-Math.floor(t/campaign.results.length*100)}),$(\"#\"+statusMapping[e]+\"_chart\").highcharts().series[0].update({data:a})}),resultsTable=$(\"#resultsTable\").DataTable(),resultsTable.rows().every(function(a,e,t){var s=this.row(a),i=s.data(),l=i[0];$.each(campaign.results,function(e,t){if(t.id==l)return i[8]=moment(t.send_date).format(\"MMMM Do YYYY, h:mm:ss a\"),i[7]=t.reported,i[6]=t.status,resultsTable.row(a).data(i),s.child.isShown()&&($(s.node()).find(\"#caret\").removeClass(\"fa-caret-right\"),$(s.node()).find(\"#caret\").addClass(\"fa-caret-down\"),s.child(renderTimeline(s.data()))),!1})}),resultsTable.draw(!1),updateMap(campaign.results),$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#refresh_message\").hide(),$(\"#refresh_btn\").show()})}function load(){campaign.id=window.location.pathname.split(\"/\").slice(-1)[0];var t=JSON.parse(localStorage.getItem(\"gophish.use_map\"));api.campaignId.results(campaign.id).success(function(e){if(campaign=e){$(\"title\").text(e.name+\" - Gophish\"),$(\"#loading\").hide(),$(\"#campaignResults\").show(),$(\"#page-title\").text(\"Results for \"+e.name),\"Completed\"==e.status&&($(\"#complete_button\")[0].disabled=!0,$(\"#complete_button\").text(\"Completed!\"),doPoll=!1),$(\"#resultsTable\").on(\"click\",\".timeline-event-details\",function(){payloadResults=$(this).parent().find(\".timeline-event-results\"),payloadResults.is(\":visible\")?($(this).find(\"i\").removeClass(\"fa-caret-down\"),$(this).find(\"i\").addClass(\"fa-caret-right\"),payloadResults.hide()):($(this).find(\"i\").removeClass(\"fa-caret-right\"),$(this).find(\"i\").addClass(\"fa-caret-down\"),payloadResults.show())}),resultsTable=$(\"#resultsTable\").DataTable({destroy:!0,order:[[2,\"asc\"]],columnDefs:[{orderable:!1,targets:\"no-sort\"},{className:\"details-control\",targets:[1]},{visible:!1,targets:[0,8]},{render:function(e,t,a){return createStatusLabel(e,a[8])},targets:[6]},{className:\"text-center\",render:function(e,t,a){return\"display\"==t?e?\"<i class='fa fa-check-circle text-center text-success'></i>\":\"<i role='button' class='fa fa-times-circle text-center text-muted' onclick='report_mail(\\\"\"+a[0]+'\", \"'+campaign.id+\"\\\");'></i>\":e},targets:[7]}]}),resultsTable.clear();var s={},i=[];Object.keys(statusMapping).forEach(function(e){s[e]=0}),$.each(campaign.results,function(e,t){resultsTable.row.add([t.id,'<i id=\"caret\" class=\"fa fa-caret-right\"></i>',escapeHtml(t.first_name)||\"\",escapeHtml(t.last_name)||\"\",escapeHtml(t.email)||\"\",escapeHtml(t.position)||\"\",t.status,t.reported,moment(t.send_date).format(\"MMMM Do YYYY, h:mm:ss a\")]),s[t.status]++,t.reported&&s[\"Email Reported\"]++;var a=progressListing.indexOf(t.status);for(e=0;e<a;e++)s[progressListing[e]]++}),resultsTable.draw(),$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#resultsTable tbody\").on(\"click\",\"td.details-control\",function(){var e=$(this).closest(\"tr\"),t=resultsTable.row(e);t.child.isShown()?(t.child.hide(),e.removeClass(\"shown\"),$(this).find(\"i\").removeClass(\"fa-caret-down\"),$(this).find(\"i\").addClass(\"fa-caret-right\")):($(this).find(\"i\").removeClass(\"fa-caret-right\"),$(this).find(\"i\").addClass(\"fa-caret-down\"),t.child(renderTimeline(t.data())).show(),e.addClass(\"shown\"))}),$.each(campaign.timeline,function(e,t){if(\"Campaign Created\"==t.message)return!0;var a=moment.utc(t.time).local();i.push({email:t.email,message:t.message,x:a.valueOf(),y:1,marker:{fillColor:statuses[t.message].color}})}),renderTimelineChart({data:i}),$.each(s,function(e,t){var a=[];if(!(e in statusMapping))return!0;a.push({name:e,y:Math.floor(t/campaign.results.length*100),count:t}),a.push({name:\"\",y:100-Math.floor(t/campaign.results.length*100)});renderPieChart({elemId:statusMapping[e]+\"_chart\",title:e,name:e,data:a,colors:[statuses[e].color,\"#dddddd\"]})}),t&&($(\"#resultsMapContainer\").show(),map=new Datamap({element:document.getElementById(\"resultsMap\"),responsive:!0,fills:{defaultFill:\"#ffffff\",point:\"#283F50\"},geographyConfig:{highlightFillColor:\"#1abc9c\",borderColor:\"#283F50\"},bubblesConfig:{borderColor:\"#283F50\"}})),updateMap(campaign.results)}}).error(function(){$(\"#loading\").hide(),errorFlash(\" Campaign not found!\")})}function refresh(){doPoll&&($(\"#refresh_message\").show(),$(\"#refresh_btn\").hide(),poll(),clearTimeout(setRefresh),setRefresh=setTimeout(refresh,6e4))}function report_mail(t,a){Swal.fire({title:\"Are you sure?\",text:\"This result will be flagged as reported (RID: \"+t+\")\",type:\"question\",animation:!1,showCancelButton:!0,confirmButtonText:\"Continue\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0}).then(function(e){e.value&&api.campaignId.get(a).success(function(e){report_url=e.url,report_url+=report_url.endsWith(\"/\")?\"\":\"/\",report_url+=\"report?rid=\"+t,$.ajax({url:report_url,method:\"GET\",success:function(e){refresh()}})})})}$(document).ready(function(){Highcharts.setOptions({global:{useUTC:!1}}),load(),setRefresh=setTimeout(refresh,6e4)});\n\\ No newline at end of file\n+var map=null,doPoll=!0,statuses={\"Email Sent\":{color:\"#1abc9c\",label:\"label-success\",icon:\"fa-envelope\",point:\"ct-point-sent\"},\"Emails Sent\":{color:\"#1abc9c\",label:\"label-success\",icon:\"fa-envelope\",point:\"ct-point-sent\"},\"In progress\":{label:\"label-primary\"},Queued:{label:\"label-info\"},Completed:{label:\"label-success\"},\"Email Opened\":{color:\"#f9bf3b\",label:\"label-warning\",icon:\"fa-envelope-open\",point:\"ct-point-opened\"},\"Clicked Link\":{color:\"#F39C12\",label:\"label-clicked\",icon:\"fa-mouse-pointer\",point:\"ct-point-clicked\"},Success:{color:\"#f05b4f\",label:\"label-danger\",icon:\"fa-exclamation\",point:\"ct-point-clicked\"},\"Email Reported\":{color:\"#45d6ef\",label:\"label-info\",icon:\"fa-bullhorn\",point:\"ct-point-reported\"},Error:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-times\",point:\"ct-point-error\"},\"Error Sending Email\":{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-times\",point:\"ct-point-error\"},\"Submitted Data\":{color:\"#f05b4f\",label:\"label-danger\",icon:\"fa-exclamation\",point:\"ct-point-clicked\"},Unknown:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-question\",point:\"ct-point-error\"},Sending:{color:\"#428bca\",label:\"label-primary\",icon:\"fa-spinner\",point:\"ct-point-sending\"},Retrying:{color:\"#6c7a89\",label:\"label-default\",icon:\"fa-clock-o\",point:\"ct-point-error\"},Scheduled:{color:\"#428bca\",label:\"label-primary\",icon:\"fa-clock-o\",point:\"ct-point-sending\"},\"Campaign Created\":{label:\"label-success\",icon:\"fa-rocket\"}},statusMapping={\"Email Sent\":\"sent\",\"Email Opened\":\"opened\",\"Clicked Link\":\"clicked\",\"Submitted Data\":\"submitted_data\",\"Email Reported\":\"reported\"},progressListing=[\"Email Sent\",\"Email Opened\",\"Clicked Link\",\"Submitted Data\"],campaign={},bubbles=[];function dismiss(){$(\"#modal\\\\.flashes\").empty(),$(\"#modal\").modal(\"hide\"),$(\"#resultsTable\").dataTable().DataTable().clear().draw()}function deleteCampaign(){Swal.fire({title:\"Are you sure?\",text:\"This will delete the campaign. This can't be undone!\",type:\"warning\",animation:!1,showCancelButton:!0,confirmButtonText:\"Delete Campaign\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0,preConfirm:function(){return new Promise(function(t,a){api.campaignId.delete(campaign.id).success(function(e){t()}).error(function(e){a(e.responseJSON.message)})})}}).then(function(e){e.value&&Swal.fire(\"Campaign Deleted!\",\"This campaign has been deleted!\",\"success\"),$('button:contains(\"OK\")').on(\"click\",function(){location.href=\"/campaigns\"})})}function completeCampaign(){Swal.fire({title:\"Are you sure?\",text:\"Gophish will stop processing events for this campaign\",type:\"warning\",animation:!1,showCancelButton:!0,confirmButtonText:\"Complete Campaign\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0,preConfirm:function(){return new Promise(function(t,a){api.campaignId.complete(campaign.id).success(function(e){t()}).error(function(e){a(e.responseJSON.message)})})}}).then(function(e){e.value&&(Swal.fire(\"Campaign Completed!\",\"This campaign has been completed!\",\"success\"),$(\"#complete_button\")[0].disabled=!0,$(\"#complete_button\").text(\"Completed!\"),doPoll=!1)})}function exportAsCSV(e){exportHTML=$(\"#exportButton\").html();var t=null,a=campaign.name+\" - \"+capitalize(e)+\".csv\";switch(e){case\"results\":t=campaign.results;break;case\"events\":t=campaign.timeline}if(t){$(\"#exportButton\").html('<i class=\"fa fa-spinner fa-spin\"></i>');var s=Papa.unparse(t,{escapeFormulae:!0}),i=new Blob([s],{type:\"text/csv;charset=utf-8;\"});if(navigator.msSaveBlob)navigator.msSaveBlob(i,a);else{var l=window.URL.createObjectURL(i),n=document.createElement(\"a\");n.href=l,n.setAttribute(\"download\",a),document.body.appendChild(n),n.click(),document.body.removeChild(n)}$(\"#exportButton\").html(exportHTML)}}function replay(e){return request=campaign.timeline[e],details=JSON.parse(request.details),url=null,form=$(\"<form>\").attr({method:\"POST\",target:\"_blank\"}),$.each(Object.keys(details.payload),function(e,t){return\"rid\"==t||(\"__original_url\"==t?(url=details.payload[t],!0):void $(\"<input>\").attr({name:t}).val(details.payload[t]).appendTo(form))}),void Swal.fire({title:\"Where do you want the credentials submitted to?\",input:\"text\",showCancelButton:!0,inputPlaceholder:\"http://example.com/login\",inputValue:url||\"\",inputValidator:function(a){return new Promise(function(e,t){a?e():t(\"Invalid URL.\")})}}).then(function(e){e.value&&(url=e.value,t())});function t(){form.attr({action:url}),form.appendTo(\"body\").submit().remove()}}var renderDevice=function(e){var t=UAParser(details.browser[\"user-agent\"]),a='<div class=\"timeline-device-details\">',s=\"laptop\";t.device.type&&(\"tablet\"!=t.device.type&&\"mobile\"!=t.device.type||(s=t.device.type));var i=\"\";t.device.vendor&&\"microsoft\"==(i=t.device.vendor.toLowerCase())&&(i=\"windows\");var l=\"Unknown\";t.os.name&&(\"Mac OS\"==(l=t.os.name)?i=\"apple\":\"Windows\"==l&&(i=\"windows\"),t.device.vendor&&t.device.model&&(l=t.device.vendor+\" \"+t.device.model)),t.os.version&&(l=l+\" (OS Version: \"+t.os.version+\")\"),deviceString='<div class=\"timeline-device-os\"><span class=\"fa fa-stack\"><i class=\"fa fa-'+escapeHtml(s)+' fa-stack-2x\"></i><i class=\"fa fa-vendor-icon fa-'+escapeHtml(i)+' fa-stack-1x\"></i></span> '+escapeHtml(l)+\"</div>\",a+=deviceString;var n=\"Unknown\",r=\"info-circle\",o=\"\";return t.browser&&t.browser.name&&((n=(n=t.browser.name).replace(\"Mobile \",\"\"))&&\"ie\"==(r=n.toLowerCase())&&(r=\"internet-explorer\"),o=\"(Version: \"+t.browser.version+\")\"),a+='<div class=\"timeline-device-browser\"><span class=\"fa fa-stack\"><i class=\"fa fa-'+escapeHtml(r)+' fa-stack-1x\"></i></span> '+n+\" \"+o+\"</div>\",a+=\"</div>\"};function renderTimeline(e){return record={id:e[0],first_name:e[2],last_name:e[3],email:e[4],position:e[5],status:e[6],reported:e[7],send_date:e[8]},results='<div class=\"timeline col-sm-12 well well-lg\"><h6>Timeline for '+escapeHtml(record.first_name)+\" \"+escapeHtml(record.last_name)+'</h6><span class=\"subtitle\">Email: '+escapeHtml(record.email)+\"<br>Result ID: \"+escapeHtml(record.id)+'</span><div class=\"timeline-graph col-sm-6\">',$.each(campaign.timeline,function(e,t){t.email&&t.email!=record.email||(results+='<div class=\"timeline-entry\">    <div class=\"timeline-bar\"></div>',results+='    <div class=\"timeline-icon '+statuses[t.message].label+'\">    <i class=\"fa '+statuses[t.message].icon+'\"></i></div>    <div class=\"timeline-message\">'+escapeHtml(t.message)+'    <span class=\"timeline-date\">'+moment.utc(t.time).local().format(\"MMMM Do YYYY h:mm:ss a\")+\"</span>\",t.details&&(details=JSON.parse(t.details),\"Clicked Link\"!=t.message&&\"Submitted Data\"!=t.message||(deviceView=renderDevice(details),deviceView&&(results+=deviceView)),\"Submitted Data\"==t.message&&(results+='<div class=\"timeline-replay-button\"><button onclick=\"replay('+e+')\" class=\"btn btn-success\">',results+='<i class=\"fa fa-refresh\"></i> Replay Credentials</button></div>',results+='<div class=\"timeline-event-details\"><i class=\"fa fa-caret-right\"></i> View Details</div>'),details.payload&&(results+='<div class=\"timeline-event-results\">',results+='    <table class=\"table table-condensed table-bordered table-striped\">',results+=\"        <thead><tr><th>Parameter</th><th>Value(s)</tr></thead><tbody>\",$.each(Object.keys(details.payload),function(e,t){if(\"rid\"==t)return!0;results+=\"    <tr>\",results+=\"        <td>\"+escapeHtml(t)+\"</td>\",results+=\"        <td>\"+escapeHtml(details.payload[t])+\"</td>\",results+=\"    </tr>\"}),results+=\"       </tbody></table>\",results+=\"</div>\"),details.error&&(results+='<div class=\"timeline-event-details\"><i class=\"fa fa-caret-right\"></i> View Details</div>',results+='<div class=\"timeline-event-results\">',results+='<span class=\"label label-default\">Error</span> '+details.error,results+=\"</div>\")),results+=\"</div></div>\")}),\"Scheduled\"!=record.status&&\"Retrying\"!=record.status||(results+='<div class=\"timeline-entry\">    <div class=\"timeline-bar\"></div>',results+='    <div class=\"timeline-icon '+statuses[record.status].label+'\">    <i class=\"fa '+statuses[record.status].icon+'\"></i></div>    <div class=\"timeline-message\">Scheduled to send at '+record.send_date+\"</span>\"),results+=\"</div></div>\",results}var setRefresh,renderTimelineChart=function(e){return Highcharts.chart(\"timeline_chart\",{chart:{zoomType:\"x\",type:\"line\",height:\"200px\"},title:{text:\"Campaign Timeline\"},xAxis:{type:\"datetime\",dateTimeLabelFormats:{second:\"%l:%M:%S\",minute:\"%l:%M\",hour:\"%l:%M\",day:\"%b %d, %Y\",week:\"%b %d, %Y\",month:\"%b %Y\"}},yAxis:{min:0,max:2,visible:!1,tickInterval:1,labels:{enabled:!1},title:{text:\"\"}},tooltip:{formatter:function(){return Highcharts.dateFormat(\"%A, %b %d %l:%M:%S %P\",new Date(this.x))+\"<br>Event: \"+this.point.message+\"<br>Email: <b>\"+this.point.email+\"</b>\"}},legend:{enabled:!1},plotOptions:{series:{marker:{enabled:!0,symbol:\"circle\",radius:3},cursor:\"pointer\"},line:{states:{hover:{lineWidth:1}}}},credits:{enabled:!1},series:[{data:e.data,dashStyle:\"shortdash\",color:\"#cccccc\",lineWidth:1,turboThreshold:0}]})},renderPieChart=function(l){return Highcharts.chart(l.elemId,{chart:{type:\"pie\",events:{load:function(){var e=this,t=e.renderer,a=e.series[0],s=e.plotLeft+a.center[0],i=e.plotTop+a.center[1];this.innerText=t.text(l.data[0].count,s,i).attr({\"text-anchor\":\"middle\",\"font-size\":\"24px\",\"font-weight\":\"bold\",fill:l.colors[0],\"font-family\":\"Helvetica,Arial,sans-serif\"}).add()},render:function(){this.innerText.attr({text:l.data[0].count})}}},title:{text:l.title},plotOptions:{pie:{innerSize:\"80%\",dataLabels:{enabled:!1}}},credits:{enabled:!1},tooltip:{formatter:function(){return null!=this.key&&'<span style=\"color:'+this.color+'\">\u25cf</span>'+this.point.name+\": <b>\"+this.y+\"%</b><br/>\"}},series:[{data:l.data,colors:l.colors}]})},updateMap=function(e){map&&(bubbles=[],$.each(campaign.results,function(e,a){if(0==a.latitude&&0==a.longitude)return!0;newIP=!0,$.each(bubbles,function(e,t){if(t.ip==a.ip)return bubbles[e].radius+=1,newIP=!1}),newIP&&bubbles.push({latitude:a.latitude,longitude:a.longitude,name:a.ip,fillKey:\"point\",radius:2})}),map.bubbles(bubbles))};function createStatusLabel(e,t){var a=statuses[e].label||\"label-default\",s='<span class=\"label '+a+'\">'+e+\"</span>\";\"Scheduled\"!=e&&\"Retrying\"!=e||(s='<span class=\"label '+a+'\" data-toggle=\"tooltip\" data-placement=\"top\" data-html=\"true\" title=\"'+(\"Scheduled to send at \"+t)+'\">'+e+\"</span>\");return s}function poll(){api.campaignId.results(campaign.id).success(function(e){campaign=e;var s=[];$.each(campaign.timeline,function(e,t){var a=moment.utc(t.time).local();s.push({email:t.email,message:t.message,x:a.valueOf(),y:1,marker:{fillColor:statuses[t.message].color}})}),$(\"#timeline_chart\").highcharts().series[0].update({data:s});var i={};Object.keys(statusMapping).forEach(function(e){i[e]=0}),$.each(campaign.results,function(e,t){i[t.status]++,t.reported&&i[\"Email Reported\"]++;var a=progressListing.indexOf(t.status);for(e=0;e<a;e++)i[progressListing[e]]++}),$.each(i,function(e,t){var a=[];if(!(e in statusMapping))return!0;a.push({name:e,y:Math.floor(t/campaign.results.length*100),count:t}),a.push({name:\"\",y:100-Math.floor(t/campaign.results.length*100)}),$(\"#\"+statusMapping[e]+\"_chart\").highcharts().series[0].update({data:a})}),resultsTable=$(\"#resultsTable\").DataTable(),resultsTable.rows().every(function(a,e,t){var s=this.row(a),i=s.data(),l=i[0];$.each(campaign.results,function(e,t){if(t.id==l)return i[8]=moment(t.send_date).format(\"MMMM Do YYYY, h:mm:ss a\"),i[7]=t.reported,i[6]=t.status,resultsTable.row(a).data(i),s.child.isShown()&&($(s.node()).find(\"#caret\").removeClass(\"fa-caret-right\"),$(s.node()).find(\"#caret\").addClass(\"fa-caret-down\"),s.child(renderTimeline(s.data()))),!1})}),resultsTable.draw(!1),updateMap(campaign.results),$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#refresh_message\").hide(),$(\"#refresh_btn\").show()})}function load(){campaign.id=window.location.pathname.split(\"/\").slice(-1)[0];var t=JSON.parse(localStorage.getItem(\"gophish.use_map\"));api.campaignId.results(campaign.id).success(function(e){if(campaign=e){$(\"title\").text(e.name+\" - Gophish\"),$(\"#loading\").hide(),$(\"#campaignResults\").show(),$(\"#page-title\").text(\"Results for \"+e.name),\"Completed\"==e.status&&($(\"#complete_button\")[0].disabled=!0,$(\"#complete_button\").text(\"Completed!\"),doPoll=!1),$(\"#resultsTable\").on(\"click\",\".timeline-event-details\",function(){payloadResults=$(this).parent().find(\".timeline-event-results\"),payloadResults.is(\":visible\")?($(this).find(\"i\").removeClass(\"fa-caret-down\"),$(this).find(\"i\").addClass(\"fa-caret-right\"),payloadResults.hide()):($(this).find(\"i\").removeClass(\"fa-caret-right\"),$(this).find(\"i\").addClass(\"fa-caret-down\"),payloadResults.show())}),resultsTable=$(\"#resultsTable\").DataTable({destroy:!0,order:[[2,\"asc\"]],columnDefs:[{orderable:!1,targets:\"no-sort\"},{className:\"details-control\",targets:[1]},{visible:!1,targets:[0,8]},{render:function(e,t,a){return createStatusLabel(e,a[8])},targets:[6]},{className:\"text-center\",render:function(e,t,a){return\"display\"==t?e?\"<i class='fa fa-check-circle text-center text-success'></i>\":\"<i role='button' class='fa fa-times-circle text-center text-muted' onclick='report_mail(\\\"\"+a[0]+'\", \"'+campaign.id+\"\\\");'></i>\":e},targets:[7]}]}),resultsTable.clear();var s={},i=[];Object.keys(statusMapping).forEach(function(e){s[e]=0}),$.each(campaign.results,function(e,t){resultsTable.row.add([t.id,'<i id=\"caret\" class=\"fa fa-caret-right\"></i>',escapeHtml(t.first_name)||\"\",escapeHtml(t.last_name)||\"\",escapeHtml(t.email)||\"\",escapeHtml(t.position)||\"\",t.status,t.reported,moment(t.send_date).format(\"MMMM Do YYYY, h:mm:ss a\")]),s[t.status]++,t.reported&&s[\"Email Reported\"]++;var a=progressListing.indexOf(t.status);for(e=0;e<a;e++)s[progressListing[e]]++}),resultsTable.draw(),$('[data-toggle=\"tooltip\"]').tooltip(),$(\"#resultsTable tbody\").on(\"click\",\"td.details-control\",function(){var e=$(this).closest(\"tr\"),t=resultsTable.row(e);t.child.isShown()?(t.child.hide(),e.removeClass(\"shown\"),$(this).find(\"i\").removeClass(\"fa-caret-down\"),$(this).find(\"i\").addClass(\"fa-caret-right\")):($(this).find(\"i\").removeClass(\"fa-caret-right\"),$(this).find(\"i\").addClass(\"fa-caret-down\"),t.child(renderTimeline(t.data())).show(),e.addClass(\"shown\"))}),$.each(campaign.timeline,function(e,t){if(\"Campaign Created\"==t.message)return!0;var a=moment.utc(t.time).local();i.push({email:t.email,message:t.message,x:a.valueOf(),y:1,marker:{fillColor:statuses[t.message].color}})}),renderTimelineChart({data:i}),$.each(s,function(e,t){var a=[];if(!(e in statusMapping))return!0;a.push({name:e,y:Math.floor(t/campaign.results.length*100),count:t}),a.push({name:\"\",y:100-Math.floor(t/campaign.results.length*100)});renderPieChart({elemId:statusMapping[e]+\"_chart\",title:e,name:e,data:a,colors:[statuses[e].color,\"#dddddd\"]})}),t&&($(\"#resultsMapContainer\").show(),map=new Datamap({element:document.getElementById(\"resultsMap\"),responsive:!0,fills:{defaultFill:\"#ffffff\",point:\"#283F50\"},geographyConfig:{highlightFillColor:\"#1abc9c\",borderColor:\"#283F50\"},bubblesConfig:{borderColor:\"#283F50\"}})),updateMap(campaign.results)}}).error(function(){$(\"#loading\").hide(),errorFlash(\" Campaign not found!\")})}function refresh(){doPoll&&($(\"#refresh_message\").show(),$(\"#refresh_btn\").hide(),poll(),clearTimeout(setRefresh),setRefresh=setTimeout(refresh,6e4))}function report_mail(t,a){Swal.fire({title:\"Are you sure?\",text:\"This result will be flagged as reported (RID: \"+t+\")\",type:\"question\",animation:!1,showCancelButton:!0,confirmButtonText:\"Continue\",confirmButtonColor:\"#428bca\",reverseButtons:!0,allowOutsideClick:!1,showLoaderOnConfirm:!0}).then(function(e){e.value&&api.campaignId.get(a).success(function(e){report_url=e.url,report_url+=report_url.endsWith(\"/\")?\"\":\"/\",report_url+=\"report?rid=\"+t,$.ajax({url:report_url,method:\"GET\",success:function(e){refresh()}})})})}$(document).ready(function(){Highcharts.setOptions({global:{useUTC:!1}}),load(),setRefresh=setTimeout(refresh,6e4)});\n\\ No newline at end of file"
        },
        {
          "filename": "static/js/dist/vendor.min.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": null
        },
        {
          "filename": "static/js/src/app/campaign_results.js",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -216,7 +216,9 @@ function exportAsCSV(scope) {\n         return\r\n     }\r\n     $(\"#exportButton\").html('<i class=\"fa fa-spinner fa-spin\"></i>')\r\n-    var csvString = Papa.unparse(csvScope, {})\r\n+    var csvString = Papa.unparse(csvScope, {\r\n+        'escapeFormulae': true\r\n+    })\r\n     var csvData = new Blob([csvString], {\r\n         type: 'text/csv;charset=utf-8;'\r\n     });\r"
        },
        {
          "filename": "static/js/src/vendor/papaparse.min.js",
          "status": "modified",
          "additions": 1933,
          "deletions": 6,
          "patch": "@@ -1,7 +1,1934 @@\n-/*!\n-\tPapa Parse\n-\tv4.3.6\n-\thttps://github.com/mholt/PapaParse\n-\tLicense: MIT\n+/* @license\n+Papa Parse\n+v5.2.0\n+https://github.com/mholt/PapaParse\n+License: MIT\n */\n-!function(a,b){\"function\"==typeof define&&define.amd?define([],b):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=b():a.Papa=b()}(this,function(){\"use strict\";function a(a,b){b=b||{};var c=b.dynamicTyping||!1;if(r(c)&&(b.dynamicTypingFunction=c,c={}),b.dynamicTyping=c,b.worker&&z.WORKERS_SUPPORTED){var h=k();return h.userStep=b.step,h.userChunk=b.chunk,h.userComplete=b.complete,h.userError=b.error,b.step=r(b.step),b.chunk=r(b.chunk),b.complete=r(b.complete),b.error=r(b.error),delete b.worker,void h.postMessage({input:a,config:b,workerId:h.id})}var i=null;return\"string\"==typeof a?i=b.download?new d(b):new f(b):a.readable===!0&&r(a.read)&&r(a.on)?i=new g(b):(t.File&&a instanceof File||a instanceof Object)&&(i=new e(b)),i.stream(a)}function b(a,b){function c(){\"object\"==typeof b&&(\"string\"==typeof b.delimiter&&1===b.delimiter.length&&z.BAD_DELIMITERS.indexOf(b.delimiter)===-1&&(j=b.delimiter),(\"boolean\"==typeof b.quotes||b.quotes instanceof Array)&&(h=b.quotes),\"string\"==typeof b.newline&&(k=b.newline),\"string\"==typeof b.quoteChar&&(l=b.quoteChar),\"boolean\"==typeof b.header&&(i=b.header))}function d(a){if(\"object\"!=typeof a)return[];var b=[];for(var c in a)b.push(c);return b}function e(a,b){var c=\"\";\"string\"==typeof a&&(a=JSON.parse(a)),\"string\"==typeof b&&(b=JSON.parse(b));var d=a instanceof Array&&a.length>0,e=!(b[0]instanceof Array);if(d&&i){for(var g=0;g<a.length;g++)g>0&&(c+=j),c+=f(a[g],g);b.length>0&&(c+=k)}for(var h=0;h<b.length;h++){for(var l=d?a.length:b[h].length,m=0;m<l;m++){m>0&&(c+=j);var n=d&&e?a[m]:m;c+=f(b[h][n],m)}h<b.length-1&&(c+=k)}return c}function f(a,b){if(\"undefined\"==typeof a||null===a)return\"\";a=a.toString().replace(m,l+l);var c=\"boolean\"==typeof h&&h||h instanceof Array&&h[b]||g(a,z.BAD_DELIMITERS)||a.indexOf(j)>-1||\" \"===a.charAt(0)||\" \"===a.charAt(a.length-1);return c?l+a+l:a}function g(a,b){for(var c=0;c<b.length;c++)if(a.indexOf(b[c])>-1)return!0;return!1}var h=!1,i=!0,j=\",\",k=\"\\r\\n\",l='\"';c();var m=new RegExp(l,\"g\");if(\"string\"==typeof a&&(a=JSON.parse(a)),a instanceof Array){if(!a.length||a[0]instanceof Array)return e(null,a);if(\"object\"==typeof a[0])return e(d(a[0]),a)}else if(\"object\"==typeof a)return\"string\"==typeof a.data&&(a.data=JSON.parse(a.data)),a.data instanceof Array&&(a.fields||(a.fields=a.meta&&a.meta.fields),a.fields||(a.fields=a.data[0]instanceof Array?a.fields:d(a.data[0])),a.data[0]instanceof Array||\"object\"==typeof a.data[0]||(a.data=[a.data])),e(a.fields||[],a.data||[]);throw\"exception: Unable to serialize unrecognized input\"}function c(a){function b(a){var b=p(a);b.chunkSize=parseInt(b.chunkSize),a.step||a.chunk||(b.chunkSize=null),this._handle=new h(b),this._handle.streamer=this,this._config=b}this._handle=null,this._paused=!1,this._finished=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},b.call(this,a),this.parseChunk=function(a){if(this.isFirstChunk&&r(this._config.beforeFirstChunk)){var b=this._config.beforeFirstChunk(a);void 0!==b&&(a=b)}this.isFirstChunk=!1;var c=this._partialLine+a;this._partialLine=\"\";var d=this._handle.parse(c,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var e=d.meta.cursor;this._finished||(this._partialLine=c.substring(e-this._baseIndex),this._baseIndex=e),d&&d.data&&(this._rowCount+=d.data.length);var f=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(v)t.postMessage({results:d,workerId:z.WORKER_ID,finished:f});else if(r(this._config.chunk)){if(this._config.chunk(d,this._handle),this._paused)return;d=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(d.data),this._completeResults.errors=this._completeResults.errors.concat(d.errors),this._completeResults.meta=d.meta),!f||!r(this._config.complete)||d&&d.meta.aborted||this._config.complete(this._completeResults,this._input),f||d&&d.meta.paused||this._nextChunk(),d}},this._sendError=function(a){r(this._config.error)?this._config.error(a):v&&this._config.error&&t.postMessage({workerId:z.WORKER_ID,error:a,finished:!1})}}function d(a){function b(a){var b=a.getResponseHeader(\"Content-Range\");return null===b?-1:parseInt(b.substr(b.lastIndexOf(\"/\")+1))}a=a||{},a.chunkSize||(a.chunkSize=z.RemoteChunkSize),c.call(this,a);var d;u?this._nextChunk=function(){this._readChunk(),this._chunkLoaded()}:this._nextChunk=function(){this._readChunk()},this.stream=function(a){this._input=a,this._nextChunk()},this._readChunk=function(){if(this._finished)return void this._chunkLoaded();if(d=new XMLHttpRequest,this._config.withCredentials&&(d.withCredentials=this._config.withCredentials),u||(d.onload=q(this._chunkLoaded,this),d.onerror=q(this._chunkError,this)),d.open(\"GET\",this._input,!u),this._config.downloadRequestHeaders){var a=this._config.downloadRequestHeaders;for(var b in a)d.setRequestHeader(b,a[b])}if(this._config.chunkSize){var c=this._start+this._config.chunkSize-1;d.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+c),d.setRequestHeader(\"If-None-Match\",\"webkit-no-cache\")}try{d.send()}catch(a){this._chunkError(a.message)}u&&0===d.status?this._chunkError():this._start+=this._config.chunkSize},this._chunkLoaded=function(){if(4==d.readyState){if(d.status<200||d.status>=400)return void this._chunkError();this._finished=!this._config.chunkSize||this._start>b(d),this.parseChunk(d.responseText)}},this._chunkError=function(a){var b=d.statusText||a;this._sendError(b)}}function e(a){a=a||{},a.chunkSize||(a.chunkSize=z.LocalChunkSize),c.call(this,a);var b,d,e=\"undefined\"!=typeof FileReader;this.stream=function(a){this._input=a,d=a.slice||a.webkitSlice||a.mozSlice,e?(b=new FileReader,b.onload=q(this._chunkLoaded,this),b.onerror=q(this._chunkError,this)):b=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var a=this._input;if(this._config.chunkSize){var c=Math.min(this._start+this._config.chunkSize,this._input.size);a=d.call(a,this._start,c)}var f=b.readAsText(a,this._config.encoding);e||this._chunkLoaded({target:{result:f}})},this._chunkLoaded=function(a){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(a.target.result)},this._chunkError=function(){this._sendError(b.error)}}function f(a){a=a||{},c.call(this,a);var b,d;this.stream=function(a){return b=a,d=a,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var a=this._config.chunkSize,b=a?d.substr(0,a):d;return d=a?d.substr(a):\"\",this._finished=!d,this.parseChunk(b)}}}function g(a){a=a||{},c.call(this,a);var b=[],d=!0;this.stream=function(a){this._input=a,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._nextChunk=function(){b.length?this.parseChunk(b.shift()):d=!0},this._streamData=q(function(a){try{b.push(\"string\"==typeof a?a:a.toString(this._config.encoding)),d&&(d=!1,this.parseChunk(b.shift()))}catch(a){this._streamError(a)}},this),this._streamError=q(function(a){this._streamCleanUp(),this._sendError(a.message)},this),this._streamEnd=q(function(){this._streamCleanUp(),this._finished=!0,this._streamData(\"\")},this),this._streamCleanUp=q(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function h(a){function b(){if(x&&o&&(l(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+z.DefaultDelimiter+\"'\"),o=!1),a.skipEmptyLines)for(var b=0;b<x.data.length;b++)1===x.data[b].length&&\"\"===x.data[b][0]&&x.data.splice(b--,1);return c()&&d(),g()}function c(){return a.header&&0===w.length}function d(){if(x){for(var a=0;c()&&a<x.data.length;a++)for(var b=0;b<x.data[a].length;b++)w.push(x.data[a][b]);x.data.splice(0,1)}}function e(b){return a.dynamicTypingFunction&&void 0===a.dynamicTyping[b]&&(a.dynamicTyping[b]=a.dynamicTypingFunction(b)),(a.dynamicTyping[b]||a.dynamicTyping)===!0}function f(a,b){return e(a)?\"true\"===b||\"TRUE\"===b||\"false\"!==b&&\"FALSE\"!==b&&k(b):b}function g(){if(!x||!a.header&&!a.dynamicTyping)return x;for(var b=0;b<x.data.length;b++){for(var c=a.header?{}:[],d=0;d<x.data[b].length;d++){var e=d,g=x.data[b][d];a.header&&(e=d>=w.length?\"__parsed_extra\":w[d]),g=f(e,g),\"__parsed_extra\"===e?(c[e]=c[e]||[],c[e].push(g)):c[e]=g}x.data[b]=c,a.header&&(d>w.length?l(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+w.length+\" fields but parsed \"+d,b):d<w.length&&l(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+w.length+\" fields but parsed \"+d,b))}return a.header&&x.meta&&(x.meta.fields=w),x}function h(b,c,d){for(var e,f,g,h=[\",\",\"\\t\",\"|\",\";\",z.RECORD_SEP,z.UNIT_SEP],j=0;j<h.length;j++){var k=h[j],l=0,m=0,n=0;g=void 0;for(var o=new i({delimiter:k,newline:c,preview:10}).parse(b),p=0;p<o.data.length;p++)if(d&&1===o.data[p].length&&0===o.data[p][0].length)n++;else{var q=o.data[p].length;m+=q,\"undefined\"!=typeof g?q>1&&(l+=Math.abs(q-g),g=q):g=q}o.data.length>0&&(m/=o.data.length-n),(\"undefined\"==typeof f||l<f)&&m>1.99&&(f=l,e=k)}return a.delimiter=e,{successful:!!e,bestDelimiter:e}}function j(a){a=a.substr(0,1048576);var b=a.split(\"\\r\"),c=a.split(\"\\n\"),d=c.length>1&&c[0].length<b[0].length;if(1===b.length||d)return\"\\n\";for(var e=0,f=0;f<b.length;f++)\"\\n\"===b[f][0]&&e++;return e>=b.length/2?\"\\r\\n\":\"\\r\"}function k(a){var b=q.test(a);return b?parseFloat(a):a}function l(a,b,c,d){x.errors.push({type:a,code:b,message:c,row:d})}var m,n,o,q=/^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i,s=this,t=0,u=!1,v=!1,w=[],x={data:[],errors:[],meta:{}};if(r(a.step)){var y=a.step;a.step=function(d){if(x=d,c())b();else{if(b(),0===x.data.length)return;t+=d.data.length,a.preview&&t>a.preview?n.abort():y(x,s)}}}this.parse=function(c,d,e){if(a.newline||(a.newline=j(c)),o=!1,a.delimiter)r(a.delimiter)&&(a.delimiter=a.delimiter(c),x.meta.delimiter=a.delimiter);else{var f=h(c,a.newline,a.skipEmptyLines);f.successful?a.delimiter=f.bestDelimiter:(o=!0,a.delimiter=z.DefaultDelimiter),x.meta.delimiter=a.delimiter}var g=p(a);return a.preview&&a.header&&g.preview++,m=c,n=new i(g),x=n.parse(m,d,e),b(),u?{meta:{paused:!0}}:x||{meta:{paused:!1}}},this.paused=function(){return u},this.pause=function(){u=!0,n.abort(),m=m.substr(n.getCharIndex())},this.resume=function(){u=!1,s.streamer.parseChunk(m)},this.aborted=function(){return v},this.abort=function(){v=!0,n.abort(),x.meta.aborted=!0,r(a.complete)&&a.complete(x),m=\"\"}}function i(a){a=a||{};var b=a.delimiter,c=a.newline,d=a.comments,e=a.step,f=a.preview,g=a.fastMode,h=a.quoteChar||'\"';if((\"string\"!=typeof b||z.BAD_DELIMITERS.indexOf(b)>-1)&&(b=\",\"),d===b)throw\"Comment character same as delimiter\";d===!0?d=\"#\":(\"string\"!=typeof d||z.BAD_DELIMITERS.indexOf(d)>-1)&&(d=!1),\"\\n\"!=c&&\"\\r\"!=c&&\"\\r\\n\"!=c&&(c=\"\\n\");var i=0,j=!1;this.parse=function(a,k,l){function m(a){x.push(a),A=i}function n(b){return l?p():(\"undefined\"==typeof b&&(b=a.substr(i)),z.push(b),i=s,m(z),w&&q(),p())}function o(b){i=b,m(z),z=[],E=a.indexOf(c,i)}function p(a){return{data:x,errors:y,meta:{delimiter:b,linebreak:c,aborted:j,truncated:!!a,cursor:A+(k||0)}}}function q(){e(p()),x=[],y=[]}if(\"string\"!=typeof a)throw\"Input must be a string\";var s=a.length,t=b.length,u=c.length,v=d.length,w=r(e);i=0;var x=[],y=[],z=[],A=0;if(!a)return p();if(g||g!==!1&&a.indexOf(h)===-1){for(var B=a.split(c),C=0;C<B.length;C++){var z=B[C];if(i+=z.length,C!==B.length-1)i+=c.length;else if(l)return p();if(!d||z.substr(0,v)!==d){if(w){if(x=[],m(z.split(b)),q(),j)return p()}else m(z.split(b));if(f&&C>=f)return x=x.slice(0,f),p(!0)}}return p()}for(var D=a.indexOf(b,i),E=a.indexOf(c,i),F=new RegExp(h+h,\"g\");;)if(a[i]!==h)if(d&&0===z.length&&a.substr(i,v)===d){if(E===-1)return p();i=E+u,E=a.indexOf(c,i),D=a.indexOf(b,i)}else if(D!==-1&&(D<E||E===-1))z.push(a.substring(i,D)),i=D+t,D=a.indexOf(b,i);else{if(E===-1)break;if(z.push(a.substring(i,E)),o(E+u),w&&(q(),j))return p();if(f&&x.length>=f)return p(!0)}else{var G=i;for(i++;;){var G=a.indexOf(h,G+1);if(G===-1)return l||y.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:x.length,index:i}),n();if(G===s-1){var H=a.substring(i,G).replace(F,h);return n(H)}if(a[G+1]!==h){if(a[G+1]===b){z.push(a.substring(i,G).replace(F,h)),i=G+1+t,D=a.indexOf(b,i),E=a.indexOf(c,i);break}if(a.substr(G+1,u)===c){if(z.push(a.substring(i,G).replace(F,h)),o(G+1+u),D=a.indexOf(b,i),w&&(q(),j))return p();if(f&&x.length>=f)return p(!0);break}y.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:x.length,index:i}),G++}else G++}}return n()},this.abort=function(){j=!0},this.getCharIndex=function(){return i}}function j(){var a=document.getElementsByTagName(\"script\");return a.length?a[a.length-1].src:\"\"}function k(){if(!z.WORKERS_SUPPORTED)return!1;if(!w&&null===z.SCRIPT_PATH)throw new Error(\"Script path cannot be determined automatically when Papa Parse is loaded asynchronously. You need to set Papa.SCRIPT_PATH manually.\");var a=z.SCRIPT_PATH||s;a+=(a.indexOf(\"?\")!==-1?\"&\":\"?\")+\"papaworker\";var b=new t.Worker(a);return b.onmessage=l,b.id=y++,x[b.id]=b,b}function l(a){var b=a.data,c=x[b.workerId],d=!1;if(b.error)c.userError(b.error,b.file);else if(b.results&&b.results.data){var e=function(){d=!0,m(b.workerId,{data:[],errors:[],meta:{aborted:!0}})},f={abort:e,pause:n,resume:n};if(r(c.userStep)){for(var g=0;g<b.results.data.length&&(c.userStep({data:[b.results.data[g]],errors:b.results.errors,meta:b.results.meta},f),!d);g++);delete b.results}else r(c.userChunk)&&(c.userChunk(b.results,f,b.file),delete b.results)}b.finished&&!d&&m(b.workerId,b.results)}function m(a,b){var c=x[a];r(c.userComplete)&&c.userComplete(b),c.terminate(),delete x[a]}function n(){throw\"Not implemented.\"}function o(a){var b=a.data;if(\"undefined\"==typeof z.WORKER_ID&&b&&(z.WORKER_ID=b.workerId),\"string\"==typeof b.input)t.postMessage({workerId:z.WORKER_ID,results:z.parse(b.input,b.config),finished:!0});else if(t.File&&b.input instanceof File||b.input instanceof Object){var c=z.parse(b.input,b.config);c&&t.postMessage({workerId:z.WORKER_ID,results:c,finished:!0})}}function p(a){if(\"object\"!=typeof a)return a;var b=a instanceof Array?[]:{};for(var c in a)b[c]=p(a[c]);return b}function q(a,b){return function(){a.apply(b,arguments)}}function r(a){return\"function\"==typeof a}var s,t=function(){return\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:\"undefined\"!=typeof t?t:{}}(),u=!t.document&&!!t.postMessage,v=u&&/(\\?|&)papaworker(=|&|$)/.test(t.location.search),w=!1,x={},y=0,z={};if(z.parse=a,z.unparse=b,z.RECORD_SEP=String.fromCharCode(30),z.UNIT_SEP=String.fromCharCode(31),z.BYTE_ORDER_MARK=\"\\ufeff\",z.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',z.BYTE_ORDER_MARK],z.WORKERS_SUPPORTED=!u&&!!t.Worker,z.SCRIPT_PATH=null,z.LocalChunkSize=10485760,z.RemoteChunkSize=5242880,z.DefaultDelimiter=\",\",z.Parser=i,z.ParserHandle=h,z.NetworkStreamer=d,z.FileStreamer=e,z.StringStreamer=f,z.ReadableStreamStreamer=g,t.jQuery){var A=t.jQuery;A.fn.parse=function(a){function b(){if(0===f.length)return void(r(a.complete)&&a.complete());var b=f[0];if(r(a.before)){var e=a.before(b.file,b.inputElem);if(\"object\"==typeof e){if(\"abort\"===e.action)return void c(\"AbortError\",b.file,b.inputElem,e.reason);if(\"skip\"===e.action)return void d();\"object\"==typeof e.config&&(b.instanceConfig=A.extend(b.instanceConfig,e.config))}else if(\"skip\"===e)return void d()}var g=b.instanceConfig.complete;b.instanceConfig.complete=function(a){r(g)&&g(a,b.file,b.inputElem),d()},z.parse(b.file,b.instanceConfig)}function c(b,c,d,e){r(a.error)&&a.error({name:b},c,d,e)}function d(){f.splice(0,1),b()}var e=a.config||{},f=[];return this.each(function(a){var b=\"INPUT\"===A(this).prop(\"tagName\").toUpperCase()&&\"file\"===A(this).attr(\"type\").toLowerCase()&&t.FileReader;if(!b||!this.files||0===this.files.length)return!0;for(var c=0;c<this.files.length;c++)f.push({file:this.files[c],inputElem:this,instanceConfig:A.extend({},e)})}),b(),this}}return v?t.onmessage=o:z.WORKERS_SUPPORTED&&(s=j(),document.body?document.addEventListener(\"DOMContentLoaded\",function(){w=!0},!0):w=!0),d.prototype=Object.create(c.prototype),d.prototype.constructor=d,e.prototype=Object.create(c.prototype),e.prototype.constructor=e,f.prototype=Object.create(f.prototype),f.prototype.constructor=f,g.prototype=Object.create(c.prototype),g.prototype.constructor=g,z});\n\\ No newline at end of file\n+\n+(function(root, factory)\n+{\n+\t/* globals define */\n+\tif (typeof define === 'function' && define.amd)\n+\t{\n+\t\t// AMD. Register as an anonymous module.\n+\t\tdefine([], factory);\n+\t}\n+\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n+\t{\n+\t\t// Node. Does not work with strict CommonJS, but\n+\t\t// only CommonJS-like environments that support module.exports,\n+\t\t// like Node.\n+\t\tmodule.exports = factory();\n+\t}\n+\telse\n+\t{\n+\t\t// Browser globals (root is window)\n+\t\troot.Papa = factory();\n+\t}\n+\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n+\t// stringify the factory method for the blob worker\n+\t// eslint-disable-next-line func-name\n+}(this, function moduleFactory()\n+{\n+\t'use strict';\n+\n+\tvar global = (function() {\n+\t\t// alternative method, similar to `Function('return this')()`\n+\t\t// but without using `eval` (which is disabled when\n+\t\t// using Content Security Policy).\n+\n+\t\tif (typeof self !== 'undefined') { return self; }\n+\t\tif (typeof window !== 'undefined') { return window; }\n+\t\tif (typeof global !== 'undefined') { return global; }\n+\n+\t\t// When running tests none of the above have been defined\n+\t\treturn {};\n+\t})();\n+\n+\n+\tfunction getWorkerBlob() {\n+\t\tvar URL = global.URL || global.webkitURL || null;\n+\t\tvar code = moduleFactory.toString();\n+\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob(['(', code, ')();'], {type: 'text/javascript'})));\n+\t}\n+\n+\tvar IS_WORKER = !global.document && !!global.postMessage,\n+\t\tIS_PAPA_WORKER = IS_WORKER && /blob:/i.test((global.location || {}).protocol);\n+\tvar workers = {}, workerIdCounter = 0;\n+\n+\tvar Papa = {};\n+\n+\tPapa.parse = CsvToJson;\n+\tPapa.unparse = JsonToCsv;\n+\n+\tPapa.RECORD_SEP = String.fromCharCode(30);\n+\tPapa.UNIT_SEP = String.fromCharCode(31);\n+\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n+\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n+\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n+\tPapa.NODE_STREAM_INPUT = 1;\n+\n+\t// Configurable chunk sizes for local and remote files, respectively\n+\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n+\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n+\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n+\n+\t// Exposed for testing and development only\n+\tPapa.Parser = Parser;\n+\tPapa.ParserHandle = ParserHandle;\n+\tPapa.NetworkStreamer = NetworkStreamer;\n+\tPapa.FileStreamer = FileStreamer;\n+\tPapa.StringStreamer = StringStreamer;\n+\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n+\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n+\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n+\t}\n+\n+\tif (global.jQuery)\n+\t{\n+\t\tvar $ = global.jQuery;\n+\t\t$.fn.parse = function(options)\n+\t\t{\n+\t\t\tvar config = options.config || {};\n+\t\t\tvar queue = [];\n+\n+\t\t\tthis.each(function(idx)\n+\t\t\t{\n+\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n+\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n+\t\t\t\t\t\t\t\t&& global.FileReader;\n+\n+\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n+\t\t\t\t\treturn true;\t// continue to next input element\n+\n+\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n+\t\t\t\t{\n+\t\t\t\t\tqueue.push({\n+\t\t\t\t\t\tfile: this.files[i],\n+\t\t\t\t\t\tinputElem: this,\n+\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n+\t\t\t\t\t});\n+\t\t\t\t}\n+\t\t\t});\n+\n+\t\t\tparseNextFile();\t// begin parsing\n+\t\t\treturn this;\t\t// maintains chainability\n+\n+\n+\t\t\tfunction parseNextFile()\n+\t\t\t{\n+\t\t\t\tif (queue.length === 0)\n+\t\t\t\t{\n+\t\t\t\t\tif (isFunction(options.complete))\n+\t\t\t\t\t\toptions.complete();\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\n+\t\t\t\tvar f = queue[0];\n+\n+\t\t\t\tif (isFunction(options.before))\n+\t\t\t\t{\n+\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n+\n+\t\t\t\t\tif (typeof returned === 'object')\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif (returned.action === 'abort')\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n+\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (returned.action === 'skip')\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\telse if (typeof returned.config === 'object')\n+\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (returned === 'skip')\n+\t\t\t\t\t{\n+\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n+\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n+\t\t\t\tf.instanceConfig.complete = function(results)\n+\t\t\t\t{\n+\t\t\t\t\tif (isFunction(userCompleteFunc))\n+\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n+\t\t\t\t\tfileComplete();\n+\t\t\t\t};\n+\n+\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n+\t\t\t}\n+\n+\t\t\tfunction error(name, file, elem, reason)\n+\t\t\t{\n+\t\t\t\tif (isFunction(options.error))\n+\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n+\t\t\t}\n+\n+\t\t\tfunction fileComplete()\n+\t\t\t{\n+\t\t\t\tqueue.splice(0, 1);\n+\t\t\t\tparseNextFile();\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\n+\tif (IS_PAPA_WORKER)\n+\t{\n+\t\tglobal.onmessage = workerThreadReceivedMessage;\n+\t}\n+\n+\n+\n+\n+\tfunction CsvToJson(_input, _config)\n+\t{\n+\t\t_config = _config || {};\n+\t\tvar dynamicTyping = _config.dynamicTyping || false;\n+\t\tif (isFunction(dynamicTyping)) {\n+\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n+\t\t\t// Will be filled on first row call\n+\t\t\tdynamicTyping = {};\n+\t\t}\n+\t\t_config.dynamicTyping = dynamicTyping;\n+\n+\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n+\n+\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n+\t\t{\n+\t\t\tvar w = newWorker();\n+\n+\t\t\tw.userStep = _config.step;\n+\t\t\tw.userChunk = _config.chunk;\n+\t\t\tw.userComplete = _config.complete;\n+\t\t\tw.userError = _config.error;\n+\n+\t\t\t_config.step = isFunction(_config.step);\n+\t\t\t_config.chunk = isFunction(_config.chunk);\n+\t\t\t_config.complete = isFunction(_config.complete);\n+\t\t\t_config.error = isFunction(_config.error);\n+\t\t\tdelete _config.worker;\t// prevent infinite loop\n+\n+\t\t\tw.postMessage({\n+\t\t\t\tinput: _input,\n+\t\t\t\tconfig: _config,\n+\t\t\t\tworkerId: w.id\n+\t\t\t});\n+\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tvar streamer = null;\n+\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n+\t\t{\n+\t\t\t// create a node Duplex stream for use\n+\t\t\t// with .pipe\n+\t\t\tstreamer = new DuplexStreamStreamer(_config);\n+\t\t\treturn streamer.getStream();\n+\t\t}\n+\t\telse if (typeof _input === 'string')\n+\t\t{\n+\t\t\tif (_config.download)\n+\t\t\t\tstreamer = new NetworkStreamer(_config);\n+\t\t\telse\n+\t\t\t\tstreamer = new StringStreamer(_config);\n+\t\t}\n+\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n+\t\t{\n+\t\t\tstreamer = new ReadableStreamStreamer(_config);\n+\t\t}\n+\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n+\t\t\tstreamer = new FileStreamer(_config);\n+\n+\t\treturn streamer.stream(_input);\n+\t}\n+\n+\n+\n+\n+\n+\n+\tfunction JsonToCsv(_input, _config)\n+\t{\n+\t\t// Default configuration\n+\n+\t\t/** whether to surround every datum with quotes */\n+\t\tvar _quotes = false;\n+\n+\t\t/** whether to write headers */\n+\t\tvar _writeHeader = true;\n+\n+\t\t/** delimiting character(s) */\n+\t\tvar _delimiter = ',';\n+\n+\t\t/** newline character(s) */\n+\t\tvar _newline = '\\r\\n';\n+\n+\t\t/** quote character */\n+\t\tvar _quoteChar = '\"';\n+\n+\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n+\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n+\n+\t\t/** whether to skip empty lines */\n+\t\tvar _skipEmptyLines = false;\n+\n+\t\t/** the columns (keys) we expect when we unparse objects */\n+\t\tvar _columns = null;\n+\n+\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n+\t\tvar _escapeFormulae = false;\n+\n+\t\tunpackConfig();\n+\n+\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n+\n+\t\tif (typeof _input === 'string')\n+\t\t\t_input = JSON.parse(_input);\n+\n+\t\tif (Array.isArray(_input))\n+\t\t{\n+\t\t\tif (!_input.length || Array.isArray(_input[0]))\n+\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n+\t\t\telse if (typeof _input[0] === 'object')\n+\t\t\t\treturn serialize(_columns || objectKeys(_input[0]), _input, _skipEmptyLines);\n+\t\t}\n+\t\telse if (typeof _input === 'object')\n+\t\t{\n+\t\t\tif (typeof _input.data === 'string')\n+\t\t\t\t_input.data = JSON.parse(_input.data);\n+\n+\t\t\tif (Array.isArray(_input.data))\n+\t\t\t{\n+\t\t\t\tif (!_input.fields)\n+\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n+\n+\t\t\t\tif (!_input.fields)\n+\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n+\t\t\t\t\t\t? _input.fields\n+\t\t\t\t\t\t: objectKeys(_input.data[0]);\n+\n+\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n+\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n+\t\t\t}\n+\n+\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n+\t\t}\n+\n+\t\t// Default (any valid paths should return before this)\n+\t\tthrow new Error('Unable to serialize unrecognized input');\n+\n+\n+\t\tfunction unpackConfig()\n+\t\t{\n+\t\t\tif (typeof _config !== 'object')\n+\t\t\t\treturn;\n+\n+\t\t\tif (typeof _config.delimiter === 'string'\n+                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n+\t\t\t{\n+\t\t\t\t_delimiter = _config.delimiter;\n+\t\t\t}\n+\n+\t\t\tif (typeof _config.quotes === 'boolean'\n+\t\t\t\t|| typeof _config.quotes === 'function'\n+\t\t\t\t|| Array.isArray(_config.quotes))\n+\t\t\t\t_quotes = _config.quotes;\n+\n+\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n+\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n+\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n+\n+\t\t\tif (typeof _config.newline === 'string')\n+\t\t\t\t_newline = _config.newline;\n+\n+\t\t\tif (typeof _config.quoteChar === 'string')\n+\t\t\t\t_quoteChar = _config.quoteChar;\n+\n+\t\t\tif (typeof _config.header === 'boolean')\n+\t\t\t\t_writeHeader = _config.header;\n+\n+\t\t\tif (Array.isArray(_config.columns)) {\n+\n+\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n+\n+\t\t\t\t_columns = _config.columns;\n+\t\t\t}\n+\n+\t\t\tif (_config.escapeChar !== undefined) {\n+\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n+\t\t\t}\n+\n+\t\t\tif (typeof _config.escapeFormulae === 'boolean')\n+\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n+\t\t}\n+\n+\n+\t\t/** Turns an object's keys into an array */\n+\t\tfunction objectKeys(obj)\n+\t\t{\n+\t\t\tif (typeof obj !== 'object')\n+\t\t\t\treturn [];\n+\t\t\tvar keys = [];\n+\t\t\tfor (var key in obj)\n+\t\t\t\tkeys.push(key);\n+\t\t\treturn keys;\n+\t\t}\n+\n+\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n+\t\tfunction serialize(fields, data, skipEmptyLines)\n+\t\t{\n+\t\t\tvar csv = '';\n+\n+\t\t\tif (typeof fields === 'string')\n+\t\t\t\tfields = JSON.parse(fields);\n+\t\t\tif (typeof data === 'string')\n+\t\t\t\tdata = JSON.parse(data);\n+\n+\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n+\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n+\n+\t\t\t// If there a header row, write it first\n+\t\t\tif (hasHeader && _writeHeader)\n+\t\t\t{\n+\t\t\t\tfor (var i = 0; i < fields.length; i++)\n+\t\t\t\t{\n+\t\t\t\t\tif (i > 0)\n+\t\t\t\t\t\tcsv += _delimiter;\n+\t\t\t\t\tcsv += safe(fields[i], i);\n+\t\t\t\t}\n+\t\t\t\tif (data.length > 0)\n+\t\t\t\t\tcsv += _newline;\n+\t\t\t}\n+\n+\t\t\t// Then write out the data\n+\t\t\tfor (var row = 0; row < data.length; row++)\n+\t\t\t{\n+\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n+\n+\t\t\t\tvar emptyLine = false;\n+\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n+\t\t\t\tif (skipEmptyLines && !hasHeader)\n+\t\t\t\t{\n+\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n+\t\t\t\t}\n+\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n+\t\t\t\t\tvar line = [];\n+\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n+\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n+\t\t\t\t\t\tline.push(data[row][cx]);\n+\t\t\t\t\t}\n+\t\t\t\t\temptyLine = line.join('').trim() === '';\n+\t\t\t\t}\n+\t\t\t\tif (!emptyLine)\n+\t\t\t\t{\n+\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif (col > 0 && !nullLine)\n+\t\t\t\t\t\t\tcsv += _delimiter;\n+\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n+\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n+\t\t\t\t\t}\n+\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tcsv += _newline;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn csv;\n+\t\t}\n+\n+\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n+\t\tfunction safe(str, col)\n+\t\t{\n+\t\t\tif (typeof str === 'undefined' || str === null)\n+\t\t\t\treturn '';\n+\n+\t\t\tif (str.constructor === Date)\n+\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n+\n+\t\t\tif (_escapeFormulae === true && typeof str === \"string\" && (str.match(/^[=+\\-@].*$/) !== null)) {\n+\t\t\t\tstr = \"'\" + str;\n+\t\t\t}\n+\n+\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n+\n+\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n+\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n+\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n+\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n+\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n+\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n+\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n+\n+\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n+\t\t}\n+\n+\t\tfunction hasAny(str, substrings)\n+\t\t{\n+\t\t\tfor (var i = 0; i < substrings.length; i++)\n+\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n+\t\t\t\t\treturn true;\n+\t\t\treturn false;\n+\t\t}\n+\t}\n+\n+\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n+\tfunction ChunkStreamer(config)\n+\t{\n+\t\tthis._handle = null;\n+\t\tthis._finished = false;\n+\t\tthis._completed = false;\n+\t\tthis._halted = false;\n+\t\tthis._input = null;\n+\t\tthis._baseIndex = 0;\n+\t\tthis._partialLine = '';\n+\t\tthis._rowCount = 0;\n+\t\tthis._start = 0;\n+\t\tthis._nextChunk = null;\n+\t\tthis.isFirstChunk = true;\n+\t\tthis._completeResults = {\n+\t\t\tdata: [],\n+\t\t\terrors: [],\n+\t\t\tmeta: {}\n+\t\t};\n+\t\treplaceConfig.call(this, config);\n+\n+\t\tthis.parseChunk = function(chunk, isFakeChunk)\n+\t\t{\n+\t\t\t// First chunk pre-processing\n+\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n+\t\t\t{\n+\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n+\t\t\t\tif (modifiedChunk !== undefined)\n+\t\t\t\t\tchunk = modifiedChunk;\n+\t\t\t}\n+\t\t\tthis.isFirstChunk = false;\n+\t\t\tthis._halted = false;\n+\n+\t\t\t// Rejoin the line we likely just split in two by chunking the file\n+\t\t\tvar aggregate = this._partialLine + chunk;\n+\t\t\tthis._partialLine = '';\n+\n+\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n+\n+\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n+\t\t\t\tthis._halted = true;\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tvar lastIndex = results.meta.cursor;\n+\n+\t\t\tif (!this._finished)\n+\t\t\t{\n+\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n+\t\t\t\tthis._baseIndex = lastIndex;\n+\t\t\t}\n+\n+\t\t\tif (results && results.data)\n+\t\t\t\tthis._rowCount += results.data.length;\n+\n+\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n+\n+\t\t\tif (IS_PAPA_WORKER)\n+\t\t\t{\n+\t\t\t\tglobal.postMessage({\n+\t\t\t\t\tresults: results,\n+\t\t\t\t\tworkerId: Papa.WORKER_ID,\n+\t\t\t\t\tfinished: finishedIncludingPreview\n+\t\t\t\t});\n+\t\t\t}\n+\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n+\t\t\t{\n+\t\t\t\tthis._config.chunk(results, this._handle);\n+\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n+\t\t\t\t\tthis._halted = true;\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tresults = undefined;\n+\t\t\t\tthis._completeResults = undefined;\n+\t\t\t}\n+\n+\t\t\tif (!this._config.step && !this._config.chunk) {\n+\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n+\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n+\t\t\t\tthis._completeResults.meta = results.meta;\n+\t\t\t}\n+\n+\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n+\t\t\t\tthis._config.complete(this._completeResults, this._input);\n+\t\t\t\tthis._completed = true;\n+\t\t\t}\n+\n+\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n+\t\t\t\tthis._nextChunk();\n+\n+\t\t\treturn results;\n+\t\t};\n+\n+\t\tthis._sendError = function(error)\n+\t\t{\n+\t\t\tif (isFunction(this._config.error))\n+\t\t\t\tthis._config.error(error);\n+\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n+\t\t\t{\n+\t\t\t\tglobal.postMessage({\n+\t\t\t\t\tworkerId: Papa.WORKER_ID,\n+\t\t\t\t\terror: error,\n+\t\t\t\t\tfinished: false\n+\t\t\t\t});\n+\t\t\t}\n+\t\t};\n+\n+\t\tfunction replaceConfig(config)\n+\t\t{\n+\t\t\t// Deep-copy the config so we can edit it\n+\t\t\tvar configCopy = copy(config);\n+\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n+\t\t\tif (!config.step && !config.chunk)\n+\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n+\t\t\tthis._handle = new ParserHandle(configCopy);\n+\t\t\tthis._handle.streamer = this;\n+\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n+\t\t}\n+\t}\n+\n+\n+\tfunction NetworkStreamer(config)\n+\t{\n+\t\tconfig = config || {};\n+\t\tif (!config.chunkSize)\n+\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n+\t\tChunkStreamer.call(this, config);\n+\n+\t\tvar xhr;\n+\n+\t\tif (IS_WORKER)\n+\t\t{\n+\t\t\tthis._nextChunk = function()\n+\t\t\t{\n+\t\t\t\tthis._readChunk();\n+\t\t\t\tthis._chunkLoaded();\n+\t\t\t};\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tthis._nextChunk = function()\n+\t\t\t{\n+\t\t\t\tthis._readChunk();\n+\t\t\t};\n+\t\t}\n+\n+\t\tthis.stream = function(url)\n+\t\t{\n+\t\t\tthis._input = url;\n+\t\t\tthis._nextChunk();\t// Starts streaming\n+\t\t};\n+\n+\t\tthis._readChunk = function()\n+\t\t{\n+\t\t\tif (this._finished)\n+\t\t\t{\n+\t\t\t\tthis._chunkLoaded();\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\txhr = new XMLHttpRequest();\n+\n+\t\t\tif (this._config.withCredentials)\n+\t\t\t{\n+\t\t\t\txhr.withCredentials = this._config.withCredentials;\n+\t\t\t}\n+\n+\t\t\tif (!IS_WORKER)\n+\t\t\t{\n+\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n+\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n+\t\t\t}\n+\n+\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n+\t\t\t// Headers can only be set when once the request state is OPENED\n+\t\t\tif (this._config.downloadRequestHeaders)\n+\t\t\t{\n+\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n+\n+\t\t\t\tfor (var headerName in headers)\n+\t\t\t\t{\n+\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif (this._config.chunkSize)\n+\t\t\t{\n+\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n+\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n+\t\t\t}\n+\n+\t\t\ttry {\n+\t\t\t\txhr.send(this._config.downloadRequestBody);\n+\t\t\t}\n+\t\t\tcatch (err) {\n+\t\t\t\tthis._chunkError(err.message);\n+\t\t\t}\n+\n+\t\t\tif (IS_WORKER && xhr.status === 0)\n+\t\t\t\tthis._chunkError();\n+\t\t};\n+\n+\t\tthis._chunkLoaded = function()\n+\t\t{\n+\t\t\tif (xhr.readyState !== 4)\n+\t\t\t\treturn;\n+\n+\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n+\t\t\t{\n+\t\t\t\tthis._chunkError();\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n+\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n+\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n+\t\t\tthis.parseChunk(xhr.responseText);\n+\t\t};\n+\n+\t\tthis._chunkError = function(errorMessage)\n+\t\t{\n+\t\t\tvar errorText = xhr.statusText || errorMessage;\n+\t\t\tthis._sendError(new Error(errorText));\n+\t\t};\n+\n+\t\tfunction getFileSize(xhr)\n+\t\t{\n+\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n+\t\t\tif (contentRange === null) { // no content range, then finish!\n+\t\t\t\treturn -1;\n+\t\t\t}\n+\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n+\t\t}\n+\t}\n+\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n+\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n+\n+\n+\tfunction FileStreamer(config)\n+\t{\n+\t\tconfig = config || {};\n+\t\tif (!config.chunkSize)\n+\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n+\t\tChunkStreamer.call(this, config);\n+\n+\t\tvar reader, slice;\n+\n+\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n+\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n+\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n+\n+\t\tthis.stream = function(file)\n+\t\t{\n+\t\t\tthis._input = file;\n+\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n+\n+\t\t\tif (usingAsyncReader)\n+\t\t\t{\n+\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n+\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n+\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n+\n+\t\t\tthis._nextChunk();\t// Starts streaming\n+\t\t};\n+\n+\t\tthis._nextChunk = function()\n+\t\t{\n+\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n+\t\t\t\tthis._readChunk();\n+\t\t};\n+\n+\t\tthis._readChunk = function()\n+\t\t{\n+\t\t\tvar input = this._input;\n+\t\t\tif (this._config.chunkSize)\n+\t\t\t{\n+\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n+\t\t\t\tinput = slice.call(input, this._start, end);\n+\t\t\t}\n+\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n+\t\t\tif (!usingAsyncReader)\n+\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n+\t\t};\n+\n+\t\tthis._chunkLoaded = function(event)\n+\t\t{\n+\t\t\t// Very important to increment start each time before handling results\n+\t\t\tthis._start += this._config.chunkSize;\n+\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n+\t\t\tthis.parseChunk(event.target.result);\n+\t\t};\n+\n+\t\tthis._chunkError = function()\n+\t\t{\n+\t\t\tthis._sendError(reader.error);\n+\t\t};\n+\n+\t}\n+\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n+\tFileStreamer.prototype.constructor = FileStreamer;\n+\n+\n+\tfunction StringStreamer(config)\n+\t{\n+\t\tconfig = config || {};\n+\t\tChunkStreamer.call(this, config);\n+\n+\t\tvar remaining;\n+\t\tthis.stream = function(s)\n+\t\t{\n+\t\t\tremaining = s;\n+\t\t\treturn this._nextChunk();\n+\t\t};\n+\t\tthis._nextChunk = function()\n+\t\t{\n+\t\t\tif (this._finished) return;\n+\t\t\tvar size = this._config.chunkSize;\n+\t\t\tvar chunk;\n+\t\t\tif(size) {\n+\t\t\t\tchunk = remaining.substring(0, size);\n+\t\t\t\tremaining = remaining.substring(size);\n+\t\t\t} else {\n+\t\t\t\tchunk = remaining;\n+\t\t\t\tremaining = '';\n+\t\t\t}\n+\t\t\tthis._finished = !remaining;\n+\t\t\treturn this.parseChunk(chunk);\n+\t\t};\n+\t}\n+\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n+\tStringStreamer.prototype.constructor = StringStreamer;\n+\n+\n+\tfunction ReadableStreamStreamer(config)\n+\t{\n+\t\tconfig = config || {};\n+\n+\t\tChunkStreamer.call(this, config);\n+\n+\t\tvar queue = [];\n+\t\tvar parseOnData = true;\n+\t\tvar streamHasEnded = false;\n+\n+\t\tthis.pause = function()\n+\t\t{\n+\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n+\t\t\tthis._input.pause();\n+\t\t};\n+\n+\t\tthis.resume = function()\n+\t\t{\n+\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n+\t\t\tthis._input.resume();\n+\t\t};\n+\n+\t\tthis.stream = function(stream)\n+\t\t{\n+\t\t\tthis._input = stream;\n+\n+\t\t\tthis._input.on('data', this._streamData);\n+\t\t\tthis._input.on('end', this._streamEnd);\n+\t\t\tthis._input.on('error', this._streamError);\n+\t\t};\n+\n+\t\tthis._checkIsFinished = function()\n+\t\t{\n+\t\t\tif (streamHasEnded && queue.length === 1) {\n+\t\t\t\tthis._finished = true;\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._nextChunk = function()\n+\t\t{\n+\t\t\tthis._checkIsFinished();\n+\t\t\tif (queue.length)\n+\t\t\t{\n+\t\t\t\tthis.parseChunk(queue.shift());\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tparseOnData = true;\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._streamData = bindFunction(function(chunk)\n+\t\t{\n+\t\t\ttry\n+\t\t\t{\n+\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n+\n+\t\t\t\tif (parseOnData)\n+\t\t\t\t{\n+\t\t\t\t\tparseOnData = false;\n+\t\t\t\t\tthis._checkIsFinished();\n+\t\t\t\t\tthis.parseChunk(queue.shift());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tcatch (error)\n+\t\t\t{\n+\t\t\t\tthis._streamError(error);\n+\t\t\t}\n+\t\t}, this);\n+\n+\t\tthis._streamError = bindFunction(function(error)\n+\t\t{\n+\t\t\tthis._streamCleanUp();\n+\t\t\tthis._sendError(error);\n+\t\t}, this);\n+\n+\t\tthis._streamEnd = bindFunction(function()\n+\t\t{\n+\t\t\tthis._streamCleanUp();\n+\t\t\tstreamHasEnded = true;\n+\t\t\tthis._streamData('');\n+\t\t}, this);\n+\n+\t\tthis._streamCleanUp = bindFunction(function()\n+\t\t{\n+\t\t\tthis._input.removeListener('data', this._streamData);\n+\t\t\tthis._input.removeListener('end', this._streamEnd);\n+\t\t\tthis._input.removeListener('error', this._streamError);\n+\t\t}, this);\n+\t}\n+\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n+\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n+\n+\n+\tfunction DuplexStreamStreamer(_config) {\n+\t\tvar Duplex = require('stream').Duplex;\n+\t\tvar config = copy(_config);\n+\t\tvar parseOnWrite = true;\n+\t\tvar writeStreamHasFinished = false;\n+\t\tvar parseCallbackQueue = [];\n+\t\tvar stream = null;\n+\n+\t\tthis._onCsvData = function(results)\n+\t\t{\n+\t\t\tvar data = results.data;\n+\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n+\t\t\t\t// the writeable consumer buffer has filled up\n+\t\t\t\t// so we need to pause until more items\n+\t\t\t\t// can be processed\n+\t\t\t\tthis._handle.pause();\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._onCsvComplete = function()\n+\t\t{\n+\t\t\t// node will finish the read stream when\n+\t\t\t// null is pushed\n+\t\t\tstream.push(null);\n+\t\t};\n+\n+\t\tconfig.step = bindFunction(this._onCsvData, this);\n+\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n+\t\tChunkStreamer.call(this, config);\n+\n+\t\tthis._nextChunk = function()\n+\t\t{\n+\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n+\t\t\t\tthis._finished = true;\n+\t\t\t}\n+\t\t\tif (parseCallbackQueue.length) {\n+\t\t\t\tparseCallbackQueue.shift()();\n+\t\t\t} else {\n+\t\t\t\tparseOnWrite = true;\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._addToParseQueue = function(chunk, callback)\n+\t\t{\n+\t\t\t// add to queue so that we can indicate\n+\t\t\t// completion via callback\n+\t\t\t// node will automatically pause the incoming stream\n+\t\t\t// when too many items have been added without their\n+\t\t\t// callback being invoked\n+\t\t\tparseCallbackQueue.push(bindFunction(function() {\n+\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n+\t\t\t\tif (isFunction(callback)) {\n+\t\t\t\t\treturn callback();\n+\t\t\t\t}\n+\t\t\t}, this));\n+\t\t\tif (parseOnWrite) {\n+\t\t\t\tparseOnWrite = false;\n+\t\t\t\tthis._nextChunk();\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._onRead = function()\n+\t\t{\n+\t\t\tif (this._handle.paused()) {\n+\t\t\t\t// the writeable consumer can handle more data\n+\t\t\t\t// so resume the chunk parsing\n+\t\t\t\tthis._handle.resume();\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis._onWrite = function(chunk, encoding, callback)\n+\t\t{\n+\t\t\tthis._addToParseQueue(chunk, callback);\n+\t\t};\n+\n+\t\tthis._onWriteComplete = function()\n+\t\t{\n+\t\t\twriteStreamHasFinished = true;\n+\t\t\t// have to write empty string\n+\t\t\t// so parser knows its done\n+\t\t\tthis._addToParseQueue('');\n+\t\t};\n+\n+\t\tthis.getStream = function()\n+\t\t{\n+\t\t\treturn stream;\n+\t\t};\n+\t\tstream = new Duplex({\n+\t\t\treadableObjectMode: true,\n+\t\t\tdecodeStrings: false,\n+\t\t\tread: bindFunction(this._onRead, this),\n+\t\t\twrite: bindFunction(this._onWrite, this)\n+\t\t});\n+\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n+\t}\n+\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n+\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n+\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n+\t}\n+\n+\n+\t// Use one ParserHandle per entire CSV file or string\n+\tfunction ParserHandle(_config)\n+\t{\n+\t\t// One goal is to minimize the use of regular expressions...\n+\t\tvar MAX_FLOAT = Math.pow(2, 53);\n+\t\tvar MIN_FLOAT = -MAX_FLOAT;\n+\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/;\n+\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n+\t\tvar self = this;\n+\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n+\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n+\t\tvar _input;\t\t\t\t// The input being parsed\n+\t\tvar _parser;\t\t\t// The core parser being used\n+\t\tvar _paused = false;\t// Whether we are paused or not\n+\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n+\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n+\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n+\t\tvar _results = {\t\t// The last results returned from the parser\n+\t\t\tdata: [],\n+\t\t\terrors: [],\n+\t\t\tmeta: {}\n+\t\t};\n+\n+\t\tif (isFunction(_config.step))\n+\t\t{\n+\t\t\tvar userStep = _config.step;\n+\t\t\t_config.step = function(results)\n+\t\t\t{\n+\t\t\t\t_results = results;\n+\n+\t\t\t\tif (needsHeaderRow())\n+\t\t\t\t\tprocessResults();\n+\t\t\t\telse\t// only call user's step function after header row\n+\t\t\t\t{\n+\t\t\t\t\tprocessResults();\n+\n+\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n+\t\t\t\t\tif (_results.data.length === 0)\n+\t\t\t\t\t\treturn;\n+\n+\t\t\t\t\t_stepCounter += results.data.length;\n+\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n+\t\t\t\t\t\t_parser.abort();\n+\t\t\t\t\telse {\n+\t\t\t\t\t\t_results.data = _results.data[0];\n+\t\t\t\t\t\tuserStep(_results, self);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t};\n+\t\t}\n+\n+\t\t/**\n+\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n+\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n+\t\t * when an input comes in multiple chunks, like from a file.\n+\t\t */\n+\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n+\t\t{\n+\t\t\tvar quoteChar = _config.quoteChar || '\"';\n+\t\t\tif (!_config.newline)\n+\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n+\n+\t\t\t_delimiterError = false;\n+\t\t\tif (!_config.delimiter)\n+\t\t\t{\n+\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n+\t\t\t\tif (delimGuess.successful)\n+\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n+\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n+\t\t\t\t}\n+\t\t\t\t_results.meta.delimiter = _config.delimiter;\n+\t\t\t}\n+\t\t\telse if(isFunction(_config.delimiter))\n+\t\t\t{\n+\t\t\t\t_config.delimiter = _config.delimiter(input);\n+\t\t\t\t_results.meta.delimiter = _config.delimiter;\n+\t\t\t}\n+\n+\t\t\tvar parserConfig = copy(_config);\n+\t\t\tif (_config.preview && _config.header)\n+\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n+\n+\t\t\t_input = input;\n+\t\t\t_parser = new Parser(parserConfig);\n+\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n+\t\t\tprocessResults();\n+\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n+\t\t};\n+\n+\t\tthis.paused = function()\n+\t\t{\n+\t\t\treturn _paused;\n+\t\t};\n+\n+\t\tthis.pause = function()\n+\t\t{\n+\t\t\t_paused = true;\n+\t\t\t_parser.abort();\n+\n+\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n+\t\t\t// otherwise we can get duplicate content within a row\n+\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n+\t\t};\n+\n+\t\tthis.resume = function()\n+\t\t{\n+\t\t\tif(self.streamer._halted) {\n+\t\t\t\t_paused = false;\n+\t\t\t\tself.streamer.parseChunk(_input, true);\n+\t\t\t} else {\n+\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n+\t\t\t\t// wait for it to halt in order to resume\n+\t\t\t\tsetTimeout(self.resume, 3);\n+\t\t\t}\n+\t\t};\n+\n+\t\tthis.aborted = function()\n+\t\t{\n+\t\t\treturn _aborted;\n+\t\t};\n+\n+\t\tthis.abort = function()\n+\t\t{\n+\t\t\t_aborted = true;\n+\t\t\t_parser.abort();\n+\t\t\t_results.meta.aborted = true;\n+\t\t\tif (isFunction(_config.complete))\n+\t\t\t\t_config.complete(_results);\n+\t\t\t_input = '';\n+\t\t};\n+\n+\t\tfunction testEmptyLine(s) {\n+\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n+\t\t}\n+\n+\t\tfunction testFloat(s) {\n+\t\t\tif (FLOAT.test(s)) {\n+\t\t\t\tvar floatValue = parseFloat(s);\n+\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tfunction processResults()\n+\t\t{\n+\t\t\tif (_results && _delimiterError)\n+\t\t\t{\n+\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n+\t\t\t\t_delimiterError = false;\n+\t\t\t}\n+\n+\t\t\tif (_config.skipEmptyLines)\n+\t\t\t{\n+\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n+\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n+\t\t\t\t\t\t_results.data.splice(i--, 1);\n+\t\t\t}\n+\n+\t\t\tif (needsHeaderRow())\n+\t\t\t\tfillHeaderFields();\n+\n+\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n+\t\t}\n+\n+\t\tfunction needsHeaderRow()\n+\t\t{\n+\t\t\treturn _config.header && _fields.length === 0;\n+\t\t}\n+\n+\t\tfunction fillHeaderFields()\n+\t\t{\n+\t\t\tif (!_results)\n+\t\t\t\treturn;\n+\n+\t\t\tfunction addHeader(header, i)\n+\t\t\t{\n+\t\t\t\tif (isFunction(_config.transformHeader))\n+\t\t\t\t\theader = _config.transformHeader(header, i);\n+\n+\t\t\t\t_fields.push(header);\n+\t\t\t}\n+\n+\t\t\tif (Array.isArray(_results.data[0]))\n+\t\t\t{\n+\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n+\t\t\t\t\t_results.data[i].forEach(addHeader);\n+\n+\t\t\t\t_results.data.splice(0, 1);\n+\t\t\t}\n+\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n+\t\t\telse\n+\t\t\t\t_results.data.forEach(addHeader);\n+\t\t}\n+\n+\t\tfunction shouldApplyDynamicTyping(field) {\n+\t\t\t// Cache function values to avoid calling it for each row\n+\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n+\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n+\t\t\t}\n+\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n+\t\t}\n+\n+\t\tfunction parseDynamic(field, value)\n+\t\t{\n+\t\t\tif (shouldApplyDynamicTyping(field))\n+\t\t\t{\n+\t\t\t\tif (value === 'true' || value === 'TRUE')\n+\t\t\t\t\treturn true;\n+\t\t\t\telse if (value === 'false' || value === 'FALSE')\n+\t\t\t\t\treturn false;\n+\t\t\t\telse if (testFloat(value))\n+\t\t\t\t\treturn parseFloat(value);\n+\t\t\t\telse if (ISO_DATE.test(value))\n+\t\t\t\t\treturn new Date(value);\n+\t\t\t\telse\n+\t\t\t\t\treturn (value === '' ? null : value);\n+\t\t\t}\n+\t\t\treturn value;\n+\t\t}\n+\n+\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n+\t\t{\n+\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n+\t\t\t\treturn _results;\n+\n+\t\t\tfunction processRow(rowSource, i)\n+\t\t\t{\n+\t\t\t\tvar row = _config.header ? {} : [];\n+\n+\t\t\t\tvar j;\n+\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n+\t\t\t\t{\n+\t\t\t\t\tvar field = j;\n+\t\t\t\t\tvar value = rowSource[j];\n+\n+\t\t\t\t\tif (_config.header)\n+\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n+\n+\t\t\t\t\tif (_config.transform)\n+\t\t\t\t\t\tvalue = _config.transform(value,field);\n+\n+\t\t\t\t\tvalue = parseDynamic(field, value);\n+\n+\t\t\t\t\tif (field === '__parsed_extra')\n+\t\t\t\t\t{\n+\t\t\t\t\t\trow[field] = row[field] || [];\n+\t\t\t\t\t\trow[field].push(value);\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t\trow[field] = value;\n+\t\t\t\t}\n+\n+\n+\t\t\t\tif (_config.header)\n+\t\t\t\t{\n+\t\t\t\t\tif (j > _fields.length)\n+\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n+\t\t\t\t\telse if (j < _fields.length)\n+\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n+\t\t\t\t}\n+\n+\t\t\t\treturn row;\n+\t\t\t}\n+\n+\t\t\tvar incrementBy = 1;\n+\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n+\t\t\t{\n+\t\t\t\t_results.data = _results.data.map(processRow);\n+\t\t\t\tincrementBy = _results.data.length;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t\t_results.data = processRow(_results.data, 0);\n+\n+\n+\t\t\tif (_config.header && _results.meta)\n+\t\t\t\t_results.meta.fields = _fields;\n+\n+\t\t\t_rowCounter += incrementBy;\n+\t\t\treturn _results;\n+\t\t}\n+\n+\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n+\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n+\n+\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n+\n+\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n+\t\t\t\tvar delim = delimitersToGuess[i];\n+\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n+\t\t\t\tfieldCountPrevRow = undefined;\n+\n+\t\t\t\tvar preview = new Parser({\n+\t\t\t\t\tcomments: comments,\n+\t\t\t\t\tdelimiter: delim,\n+\t\t\t\t\tnewline: newline,\n+\t\t\t\t\tpreview: 10\n+\t\t\t\t}).parse(input);\n+\n+\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n+\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n+\t\t\t\t\t\temptyLinesCount++;\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tvar fieldCount = preview.data[j].length;\n+\t\t\t\t\tavgFieldCount += fieldCount;\n+\n+\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n+\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (fieldCount > 0) {\n+\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n+\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\tif (preview.data.length > 0)\n+\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n+\n+\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n+\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n+\t\t\t\t\tbestDelta = delta;\n+\t\t\t\t\tbestDelim = delim;\n+\t\t\t\t\tmaxFieldCount = avgFieldCount;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t_config.delimiter = bestDelim;\n+\n+\t\t\treturn {\n+\t\t\t\tsuccessful: !!bestDelim,\n+\t\t\t\tbestDelimiter: bestDelim\n+\t\t\t};\n+\t\t}\n+\n+\t\tfunction guessLineEndings(input, quoteChar)\n+\t\t{\n+\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n+\t\t\t// Replace all the text inside quotes\n+\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n+\t\t\tinput = input.replace(re, '');\n+\n+\t\t\tvar r = input.split('\\r');\n+\n+\t\t\tvar n = input.split('\\n');\n+\n+\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n+\n+\t\t\tif (r.length === 1 || nAppearsFirst)\n+\t\t\t\treturn '\\n';\n+\n+\t\t\tvar numWithN = 0;\n+\t\t\tfor (var i = 0; i < r.length; i++)\n+\t\t\t{\n+\t\t\t\tif (r[i][0] === '\\n')\n+\t\t\t\t\tnumWithN++;\n+\t\t\t}\n+\n+\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n+\t\t}\n+\n+\t\tfunction addError(type, code, msg, row)\n+\t\t{\n+\t\t\tvar error = {\n+\t\t\t\ttype: type,\n+\t\t\t\tcode: code,\n+\t\t\t\tmessage: msg\n+\t\t\t};\n+\t\t\tif(row !== undefined) {\n+\t\t\t\terror.row = row;\n+\t\t\t}\n+\t\t\t_results.errors.push(error);\n+\t\t}\n+\t}\n+\n+\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n+\tfunction escapeRegExp(string)\n+\t{\n+\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n+\t}\n+\n+\t/** The core parser implements speedy and correct CSV parsing */\n+\tfunction Parser(config)\n+\t{\n+\t\t// Unpack the config object\n+\t\tconfig = config || {};\n+\t\tvar delim = config.delimiter;\n+\t\tvar newline = config.newline;\n+\t\tvar comments = config.comments;\n+\t\tvar step = config.step;\n+\t\tvar preview = config.preview;\n+\t\tvar fastMode = config.fastMode;\n+\t\tvar quoteChar;\n+\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n+\t\tif (config.quoteChar === undefined) {\n+\t\t\tquoteChar = '\"';\n+\t\t} else {\n+\t\t\tquoteChar = config.quoteChar;\n+\t\t}\n+\t\tvar escapeChar = quoteChar;\n+\t\tif (config.escapeChar !== undefined) {\n+\t\t\tescapeChar = config.escapeChar;\n+\t\t}\n+\n+\t\t// Delimiter must be valid\n+\t\tif (typeof delim !== 'string'\n+\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n+\t\t\tdelim = ',';\n+\n+\t\t// Comment character must be valid\n+\t\tif (comments === delim)\n+\t\t\tthrow new Error('Comment character same as delimiter');\n+\t\telse if (comments === true)\n+\t\t\tcomments = '#';\n+\t\telse if (typeof comments !== 'string'\n+\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n+\t\t\tcomments = false;\n+\n+\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n+\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n+\t\t\tnewline = '\\n';\n+\n+\t\t// We're gonna need these at the Parser scope\n+\t\tvar cursor = 0;\n+\t\tvar aborted = false;\n+\n+\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n+\t\t{\n+\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n+\t\t\tif (typeof input !== 'string')\n+\t\t\t\tthrow new Error('Input must be a string');\n+\n+\t\t\t// We don't need to compute some of these every time parse() is called,\n+\t\t\t// but having them in a more local scope seems to perform better\n+\t\t\tvar inputLen = input.length,\n+\t\t\t\tdelimLen = delim.length,\n+\t\t\t\tnewlineLen = newline.length,\n+\t\t\t\tcommentsLen = comments.length;\n+\t\t\tvar stepIsFunction = isFunction(step);\n+\n+\t\t\t// Establish starting state\n+\t\t\tcursor = 0;\n+\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n+\n+\t\t\tif (!input)\n+\t\t\t\treturn returnable();\n+\n+\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n+\t\t\t{\n+\t\t\t\tvar rows = input.split(newline);\n+\t\t\t\tfor (var i = 0; i < rows.length; i++)\n+\t\t\t\t{\n+\t\t\t\t\trow = rows[i];\n+\t\t\t\t\tcursor += row.length;\n+\t\t\t\t\tif (i !== rows.length - 1)\n+\t\t\t\t\t\tcursor += newline.length;\n+\t\t\t\t\telse if (ignoreLastRow)\n+\t\t\t\t\t\treturn returnable();\n+\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\tif (stepIsFunction)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tdata = [];\n+\t\t\t\t\t\tpushRow(row.split(delim));\n+\t\t\t\t\t\tdoStep();\n+\t\t\t\t\t\tif (aborted)\n+\t\t\t\t\t\t\treturn returnable();\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t\tpushRow(row.split(delim));\n+\t\t\t\t\tif (preview && i >= preview)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tdata = data.slice(0, preview);\n+\t\t\t\t\t\treturn returnable(true);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn returnable();\n+\t\t\t}\n+\n+\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n+\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n+\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n+\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n+\n+\t\t\t// Parser loop\n+\t\t\tfor (;;)\n+\t\t\t{\n+\t\t\t\t// Field has opening quote\n+\t\t\t\tif (input[cursor] === quoteChar)\n+\t\t\t\t{\n+\t\t\t\t\t// Start our search for the closing quote where the cursor is\n+\t\t\t\t\tquoteSearch = cursor;\n+\n+\t\t\t\t\t// Skip the opening quote\n+\t\t\t\t\tcursor++;\n+\n+\t\t\t\t\tfor (;;)\n+\t\t\t\t\t{\n+\t\t\t\t\t\t// Find closing quote\n+\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n+\n+\t\t\t\t\t\t//No other quotes are found - no other delimiters\n+\t\t\t\t\t\tif (quoteSearch === -1)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tif (!ignoreLastRow) {\n+\t\t\t\t\t\t\t\t// No closing quote... what a pity\n+\t\t\t\t\t\t\t\terrors.push({\n+\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n+\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n+\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n+\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n+\t\t\t\t\t\t\t\t\tindex: cursor\n+\t\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\treturn finish();\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t// Closing quote at EOF\n+\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n+\t\t\t\t\t\t\treturn finish(value);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n+\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n+\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tquoteSearch++;\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n+\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n+\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n+\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n+\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n+\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n+\n+\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n+\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n+\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n+\n+\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n+\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n+\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n+\n+\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n+\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n+\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n+\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n+\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n+\n+\t\t\t\t\t\t\tif (stepIsFunction)\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tdoStep();\n+\t\t\t\t\t\t\t\tif (aborted)\n+\t\t\t\t\t\t\t\t\treturn returnable();\n+\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\tif (preview && data.length >= preview)\n+\t\t\t\t\t\t\t\treturn returnable(true);\n+\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\n+\n+\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n+\t\t\t\t\t\terrors.push({\n+\t\t\t\t\t\t\ttype: 'Quotes',\n+\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n+\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n+\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n+\t\t\t\t\t\t\tindex: cursor\n+\t\t\t\t\t\t});\n+\n+\t\t\t\t\t\tquoteSearch++;\n+\t\t\t\t\t\tcontinue;\n+\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Comment found at start of new line\n+\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n+\t\t\t\t{\n+\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n+\t\t\t\t\t\treturn returnable();\n+\t\t\t\t\tcursor = nextNewline + newlineLen;\n+\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n+\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n+\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n+\t\t\t\t{\n+\t\t\t\t\t// we check, if we have quotes, because delimiter char may be part of field enclosed in quotes\n+\t\t\t\t\tif (quoteSearch > nextDelim) {\n+\t\t\t\t\t\t// we have quotes, so we try to find the next delimiter not enclosed in quotes and also next starting quote char\n+\t\t\t\t\t\tvar nextDelimObj = getNextUnquotedDelimiter(nextDelim, quoteSearch, nextNewline);\n+\n+\t\t\t\t\t\t// if we have next delimiter char which is not enclosed in quotes\n+\t\t\t\t\t\tif (nextDelimObj && typeof nextDelimObj.nextDelim !== 'undefined') {\n+\t\t\t\t\t\t\tnextDelim = nextDelimObj.nextDelim;\n+\t\t\t\t\t\t\tquoteSearch = nextDelimObj.quoteSearch;\n+\t\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n+\t\t\t\t\t\t\tcursor = nextDelim + delimLen;\n+\t\t\t\t\t\t\t// we look for next delimiter char\n+\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n+\t\t\t\t\t\tcursor = nextDelim + delimLen;\n+\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\t// End of row\n+\t\t\t\tif (nextNewline !== -1)\n+\t\t\t\t{\n+\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n+\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n+\n+\t\t\t\t\tif (stepIsFunction)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tdoStep();\n+\t\t\t\t\t\tif (aborted)\n+\t\t\t\t\t\t\treturn returnable();\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (preview && data.length >= preview)\n+\t\t\t\t\t\treturn returnable(true);\n+\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tbreak;\n+\t\t\t}\n+\n+\n+\t\t\treturn finish();\n+\n+\n+\t\t\tfunction pushRow(row)\n+\t\t\t{\n+\t\t\t\tdata.push(row);\n+\t\t\t\tlastCursor = cursor;\n+\t\t\t}\n+\n+\t\t\t/**\n+             * checks if there are extra spaces after closing quote and given index without any text\n+             * if Yes, returns the number of spaces\n+             */\n+\t\t\tfunction extraSpaces(index) {\n+\t\t\t\tvar spaceLength = 0;\n+\t\t\t\tif (index !== -1) {\n+\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n+\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n+\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn spaceLength;\n+\t\t\t}\n+\n+\t\t\t/**\n+\t\t\t * Appends the remaining input from cursor to the end into\n+\t\t\t * row, saves the row, calls step, and returns the results.\n+\t\t\t */\n+\t\t\tfunction finish(value)\n+\t\t\t{\n+\t\t\t\tif (ignoreLastRow)\n+\t\t\t\t\treturn returnable();\n+\t\t\t\tif (typeof value === 'undefined')\n+\t\t\t\t\tvalue = input.substring(cursor);\n+\t\t\t\trow.push(value);\n+\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n+\t\t\t\tpushRow(row);\n+\t\t\t\tif (stepIsFunction)\n+\t\t\t\t\tdoStep();\n+\t\t\t\treturn returnable();\n+\t\t\t}\n+\n+\t\t\t/**\n+\t\t\t * Appends the current row to the results. It sets the cursor\n+\t\t\t * to newCursor and finds the nextNewline. The caller should\n+\t\t\t * take care to execute user's step function and check for\n+\t\t\t * preview and end parsing if necessary.\n+\t\t\t */\n+\t\t\tfunction saveRow(newCursor)\n+\t\t\t{\n+\t\t\t\tcursor = newCursor;\n+\t\t\t\tpushRow(row);\n+\t\t\t\trow = [];\n+\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n+\t\t\t}\n+\n+\t\t\t/** Returns an object with the results, errors, and meta. */\n+\t\t\tfunction returnable(stopped)\n+\t\t\t{\n+\t\t\t\treturn {\n+\t\t\t\t\tdata: data,\n+\t\t\t\t\terrors: errors,\n+\t\t\t\t\tmeta: {\n+\t\t\t\t\t\tdelimiter: delim,\n+\t\t\t\t\t\tlinebreak: newline,\n+\t\t\t\t\t\taborted: aborted,\n+\t\t\t\t\t\ttruncated: !!stopped,\n+\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\t\t\t}\n+\n+\t\t\t/** Executes the user's step function and resets data & errors. */\n+\t\t\tfunction doStep()\n+\t\t\t{\n+\t\t\t\tstep(returnable());\n+\t\t\t\tdata = [];\n+\t\t\t\terrors = [];\n+\t\t\t}\n+\n+\t\t\t/** Gets the delimiter character, which is not inside the quoted field */\n+\t\t\tfunction getNextUnquotedDelimiter(nextDelim, quoteSearch, newLine) {\n+\t\t\t\tvar result = {\n+\t\t\t\t\tnextDelim: undefined,\n+\t\t\t\t\tquoteSearch: undefined\n+\t\t\t\t};\n+\t\t\t\t// get the next closing quote character\n+\t\t\t\tvar nextQuoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n+\n+\t\t\t\t// if next delimiter is part of a field enclosed in quotes\n+\t\t\t\tif (nextDelim > quoteSearch && nextDelim < nextQuoteSearch && (nextQuoteSearch < newLine || newLine === -1)) {\n+\t\t\t\t\t// get the next delimiter character after this one\n+\t\t\t\t\tvar nextNextDelim = input.indexOf(delim, nextQuoteSearch);\n+\n+\t\t\t\t\t// if there is no next delimiter, return default result\n+\t\t\t\t\tif (nextNextDelim === -1) {\n+\t\t\t\t\t\treturn result;\n+\t\t\t\t\t}\n+\t\t\t\t\t// find the next opening quote char position\n+\t\t\t\t\tif (nextNextDelim > nextQuoteSearch) {\n+\t\t\t\t\t\tnextQuoteSearch = input.indexOf(quoteChar, nextQuoteSearch + 1);\n+\t\t\t\t\t}\n+\t\t\t\t\t// try to get the next delimiter position\n+\t\t\t\t\tresult = getNextUnquotedDelimiter(nextNextDelim, nextQuoteSearch, newLine);\n+\t\t\t\t} else {\n+\t\t\t\t\tresult = {\n+\t\t\t\t\t\tnextDelim: nextDelim,\n+\t\t\t\t\t\tquoteSearch: quoteSearch\n+\t\t\t\t\t};\n+\t\t\t\t}\n+\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t};\n+\n+\t\t/** Sets the abort flag */\n+\t\tthis.abort = function()\n+\t\t{\n+\t\t\taborted = true;\n+\t\t};\n+\n+\t\t/** Gets the cursor position */\n+\t\tthis.getCharIndex = function()\n+\t\t{\n+\t\t\treturn cursor;\n+\t\t};\n+\t}\n+\n+\n+\tfunction newWorker()\n+\t{\n+\t\tif (!Papa.WORKERS_SUPPORTED)\n+\t\t\treturn false;\n+\n+\t\tvar workerUrl = getWorkerBlob();\n+\t\tvar w = new global.Worker(workerUrl);\n+\t\tw.onmessage = mainThreadReceivedMessage;\n+\t\tw.id = workerIdCounter++;\n+\t\tworkers[w.id] = w;\n+\t\treturn w;\n+\t}\n+\n+\t/** Callback when main thread receives a message */\n+\tfunction mainThreadReceivedMessage(e)\n+\t{\n+\t\tvar msg = e.data;\n+\t\tvar worker = workers[msg.workerId];\n+\t\tvar aborted = false;\n+\n+\t\tif (msg.error)\n+\t\t\tworker.userError(msg.error, msg.file);\n+\t\telse if (msg.results && msg.results.data)\n+\t\t{\n+\t\t\tvar abort = function() {\n+\t\t\t\taborted = true;\n+\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n+\t\t\t};\n+\n+\t\t\tvar handle = {\n+\t\t\t\tabort: abort,\n+\t\t\t\tpause: notImplemented,\n+\t\t\t\tresume: notImplemented\n+\t\t\t};\n+\n+\t\t\tif (isFunction(worker.userStep))\n+\t\t\t{\n+\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n+\t\t\t\t{\n+\t\t\t\t\tworker.userStep({\n+\t\t\t\t\t\tdata: msg.results.data[i],\n+\t\t\t\t\t\terrors: msg.results.errors,\n+\t\t\t\t\t\tmeta: msg.results.meta\n+\t\t\t\t\t}, handle);\n+\t\t\t\t\tif (aborted)\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t\tdelete msg.results;\t// free memory ASAP\n+\t\t\t}\n+\t\t\telse if (isFunction(worker.userChunk))\n+\t\t\t{\n+\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n+\t\t\t\tdelete msg.results;\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (msg.finished && !aborted)\n+\t\t\tcompleteWorker(msg.workerId, msg.results);\n+\t}\n+\n+\tfunction completeWorker(workerId, results) {\n+\t\tvar worker = workers[workerId];\n+\t\tif (isFunction(worker.userComplete))\n+\t\t\tworker.userComplete(results);\n+\t\tworker.terminate();\n+\t\tdelete workers[workerId];\n+\t}\n+\n+\tfunction notImplemented() {\n+\t\tthrow new Error('Not implemented.');\n+\t}\n+\n+\t/** Callback when worker thread receives a message */\n+\tfunction workerThreadReceivedMessage(e)\n+\t{\n+\t\tvar msg = e.data;\n+\n+\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n+\t\t\tPapa.WORKER_ID = msg.workerId;\n+\n+\t\tif (typeof msg.input === 'string')\n+\t\t{\n+\t\t\tglobal.postMessage({\n+\t\t\t\tworkerId: Papa.WORKER_ID,\n+\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n+\t\t\t\tfinished: true\n+\t\t\t});\n+\t\t}\n+\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n+\t\t{\n+\t\t\tvar results = Papa.parse(msg.input, msg.config);\n+\t\t\tif (results)\n+\t\t\t\tglobal.postMessage({\n+\t\t\t\t\tworkerId: Papa.WORKER_ID,\n+\t\t\t\t\tresults: results,\n+\t\t\t\t\tfinished: true\n+\t\t\t\t});\n+\t\t}\n+\t}\n+\n+\t/** Makes a deep copy of an array or object (mostly) */\n+\tfunction copy(obj)\n+\t{\n+\t\tif (typeof obj !== 'object' || obj === null)\n+\t\t\treturn obj;\n+\t\tvar cpy = Array.isArray(obj) ? [] : {};\n+\t\tfor (var key in obj)\n+\t\t\tcpy[key] = copy(obj[key]);\n+\t\treturn cpy;\n+\t}\n+\n+\tfunction bindFunction(f, self)\n+\t{\n+\t\treturn function() { f.apply(self, arguments); };\n+\t}\n+\n+\tfunction isFunction(func)\n+\t{\n+\t\treturn typeof func === 'function';\n+\t}\n+\n+\treturn Papa;\n+}));"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "95618469799295e2c0fec980805a2dfbb818816b",
            "date": "2024-09-23T04:24:43Z",
            "author_login": "jordan-wright"
          },
          {
            "sha": "908886f2cd9567ddd0523d43532e33e4df8fd200",
            "date": "2024-09-23T03:53:08Z",
            "author_login": "Caetan"
          },
          {
            "sha": "8e79294413932fa302212d8e785b281fb0f8896d",
            "date": "2023-09-15T14:45:30Z",
            "author_login": "glennzw"
          },
          {
            "sha": "ac9e6a719004a1cf08cf1585a996372dbd301c9f",
            "date": "2023-08-23T02:03:39Z",
            "author_login": "rpsteinbrueck"
          },
          {
            "sha": "04f0fb6dfd9498f68fed145e1c3fbe515697cf0a",
            "date": "2023-08-23T01:50:03Z",
            "author_login": "wmnnd"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-1236",
    "description": "Gophish before 0.11.0 allows the creation of CSV sheets that contain malicious content.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-10-28T20:15:13.150",
    "last_modified": "2024-11-21T05:15:54.630",
    "fix_date": "2020-07-25T03:44:24Z"
  },
  "references": [
    {
      "url": "https://github.com/gophish/gophish/commit/b25f5ac5e468f6730e377f43c7995e18f8fccc2b",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gophish/gophish/releases/tag/v0.11.0",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://herolab.usd.de/security-advisories/usd-2020-0052/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gophish/gophish/commit/b25f5ac5e468f6730e377f43c7995e18f8fccc2b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gophish/gophish/releases/tag/v0.11.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://herolab.usd.de/security-advisories/usd-2020-0052/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.438312",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gophish",
    "owner": "gophish",
    "created_at": "2013-11-18T23:26:43Z",
    "updated_at": "2025-01-14T08:44:53Z",
    "pushed_at": "2024-09-23T04:24:43Z",
    "size": 55052,
    "stars": 12002,
    "forks": 2300,
    "open_issues": 592,
    "watchers": 12002,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 372379,
      "JavaScript": 154041,
      "HTML": 72203,
      "Shell": 3070,
      "Jinja": 2399,
      "Dockerfile": 1081
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:24:42.209730"
  }
}