{
  "cve_id": "CVE-2020-24917",
  "github_data": {
    "repository": "osTicket/osTicket",
    "fix_commit": "518de223933eab0c5558741ce317f36958ef193d",
    "related_commits": [
      "518de223933eab0c5558741ce317f36958ef193d",
      "518de223933eab0c5558741ce317f36958ef193d"
    ],
    "patch_url": "https://github.com/osTicket/osTicket/commit/518de223933eab0c5558741ce317f36958ef193d.patch",
    "fix_commit_details": {
      "sha": "518de223933eab0c5558741ce317f36958ef193d",
      "commit_date": "2020-08-18T15:39:05Z",
      "author": {
        "login": "JediKev",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "xss: Draft Uploaded Attachment",
        "length": 629,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 13,
        "additions": 12,
        "deletions": 1
      },
      "files": [
        {
          "filename": "include/ajax.draft.php",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -16,6 +16,7 @@ function _createDraft($vars) {\n         if (!($draft = Draft::create($vars)) || !$draft->save())\n             Http::response(500, 'Unable to create draft');\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         echo JsonDataEncoder::encode(array(\n             'draft_id' => $draft->getId(),\n         ));\n@@ -27,6 +28,7 @@ function _getDraft($draft) {\n \n         $body = Format::viewableImages($draft->getBody());\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         echo JsonDataEncoder::encode(array(\n             'body' => $body,\n             'draft_id' => $draft->getId(),\n@@ -126,8 +128,9 @@ function _uploadInlineImage($draft) {\n         if (!($f = AttachmentFile::lookup($id)))\n             return Http::response(500, 'Unable to attach image');\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         echo JsonDataEncoder::encode(array(\n-            $f->getName() => array(\n+            Format::sanitize($f->getName()) => array(\n             'content_id' => 'cid:'.$f->getKey(),\n             'id' => $f->getKey(),\n             // Return draft_id to connect the auto draft creation\n@@ -369,6 +372,7 @@ function getFileList() {\n                 'title' => $f->getName(),\n             );\n         }\n+        header('Content-Type: application/json; charset=UTF-8');\n         echo JsonDataEncoder::encode($files);\n     }\n "
        },
        {
          "filename": "include/ajax.forms.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -382,6 +382,7 @@ function upload($id) {\n         if (!$impl instanceof FileUploadField)\n             Http::response(400, 'Upload to a non file-field');\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         return JsonDataEncoder::encode(\n             array('id'=>$impl->ajaxUpload())\n         );\n@@ -404,6 +405,7 @@ function attach($object=null) {\n             ->first()->getConfiguration();\n         $field = new FileUploadField();\n         $field->_config = $config;\n+        header('Content-Type: application/json; charset=UTF-8');\n         return JsonDataEncoder::encode(\n             array('id'=>$field->ajaxUpload($thisstaff ? true : false))\n         );"
        },
        {
          "filename": "include/ajax.i18n.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -49,6 +49,7 @@ function getTranslations($tag) {\n         $json = JsonDataEncoder::encode($phrases) ?: '{}';\n         //Http::cacheable(md5($json), $lm);\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         return $json;\n     }\n \n@@ -124,6 +125,7 @@ function getConfiguredLanguages() {\n         $json = JsonDataEncoder::encode($langs);\n         Http::cacheable(md5($json), $cfg->lastModified());\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         return $json;\n     }\n \n@@ -142,6 +144,7 @@ function getSecondaryLanguages() {\n         $json = JsonDataEncoder::encode($langs);\n         Http::cacheable(md5($json), $cfg->lastModified());\n \n+        header('Content-Type: application/json; charset=UTF-8');\n         return $json;\n     }\n }"
        },
        {
          "filename": "include/class.file.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -633,6 +633,8 @@ function format($files) {\n \n         //Basic validation.\n         foreach($attachments as $i => &$file) {\n+            $file['name'] = Format::sanitize($file['name']);\n+\n             //skip no file upload \"error\" - why PHP calls it an error is beyond me.\n             if($file['error'] && $file['error']==UPLOAD_ERR_NO_FILE) {\n                 unset($attachments[$i]);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4689926b2d3d25754f0ddcf8d4e181a2817f6d56",
            "date": "2023-10-25T15:45:33Z",
            "author_login": "JediKev"
          },
          {
            "sha": "03755768d9f239d70a1af7ddc7eb35c49bf6239d",
            "date": "2023-10-25T15:34:06Z",
            "author_login": "JediKev"
          },
          {
            "sha": "0f08e5b0b7474522d76416e7b57709c3ff619fef",
            "date": "2023-10-25T15:26:17Z",
            "author_login": "JediKev"
          },
          {
            "sha": "7c2003629dd7c11db33cd7d7f790704d87cfd412",
            "date": "2023-10-25T15:19:29Z",
            "author_login": "JediKev"
          },
          {
            "sha": "f878766863fc6e5bc8b8c53ae48afef31496b53a",
            "date": "2023-10-25T15:06:35Z",
            "author_login": "JediKev"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "osTicket before 1.14.3 allows XSS via a crafted filename to DraftAjaxAPI::_uploadInlineImage() in include/ajax.draft.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-08-30T16:15:14.230",
    "last_modified": "2024-11-21T05:16:12.620",
    "fix_date": "2020-08-18T15:39:05Z"
  },
  "references": [
    {
      "url": "https://github.com/osTicket/osTicket/commit/518de223933eab0c5558741ce317f36958ef193d",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/osTicket/osTicket/compare/v1.14.2...v1.14.3",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sisl.lab.uic.edu/projects/chess/osticket-xss/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/osTicket/osTicket/commit/518de223933eab0c5558741ce317f36958ef193d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/osTicket/osTicket/compare/v1.14.2...v1.14.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sisl.lab.uic.edu/projects/chess/osticket-xss/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.814856",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "osTicket",
    "owner": "osTicket",
    "created_at": "2013-08-12T19:10:14Z",
    "updated_at": "2025-01-09T09:49:59Z",
    "pushed_at": "2024-11-14T16:43:24Z",
    "size": 76341,
    "stars": 3300,
    "forks": 1675,
    "open_issues": 1158,
    "watchers": 3300,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "PHP": 6160811,
      "JavaScript": 360520,
      "CSS": 239335,
      "Less": 15079,
      "Shell": 4233,
      "Perl": 2087,
      "HTML": 882,
      "Standard ML": 33
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:23:08.049811"
  }
}