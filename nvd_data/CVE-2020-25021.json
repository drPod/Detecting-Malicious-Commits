{
  "cve_id": "CVE-2020-25021",
  "github_data": {
    "repository": "rweather/noise-java",
    "fix_commit": "18e86b6f8bea7326934109aa9ffa705ebf4bde90",
    "related_commits": [
      "18e86b6f8bea7326934109aa9ffa705ebf4bde90",
      "18e86b6f8bea7326934109aa9ffa705ebf4bde90"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "18e86b6f8bea7326934109aa9ffa705ebf4bde90",
      "commit_date": "2020-08-28T21:59:27Z",
      "author": {
        "login": "rweather",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Improve array bounds checks in CipherState implementations",
        "length": 112,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 65,
        "additions": 35,
        "deletions": 30
      },
      "files": [
        {
          "filename": ".gitignore",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -3,3 +3,4 @@ target\n .metadata\n .project\n doc\n+*.class"
        },
        {
          "filename": "src/main/java/com/southernstorm/noise/protocol/AESGCMFallbackCipherState.java",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -185,10 +185,11 @@ public int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length)\n \t\t\tthrows ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -214,16 +215,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
          "filename": "src/main/java/com/southernstorm/noise/protocol/AESGCMOnCtrCipherState.java",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -218,10 +218,11 @@ public int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length)\n \t\t\tthrows ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (keySpec == null) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -262,16 +263,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (keySpec == null) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
          "filename": "src/main/java/com/southernstorm/noise/protocol/ChaChaPolyCipherState.java",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -214,10 +214,11 @@ private void encrypt(byte[] plaintext, int plaintextOffset,\n \tpublic int encryptWithAd(byte[] ad, byte[] plaintext, int plaintextOffset,\n \t\t\tbyte[] ciphertext, int ciphertextOffset, int length) throws ShortBufferException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = ciphertext.length - ciphertextOffset;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the plaintext as-is.\n \t\t\tif (length > space)\n@@ -241,16 +242,15 @@ public int decryptWithAd(byte[] ad, byte[] ciphertext,\n \t\t\tint ciphertextOffset, byte[] plaintext, int plaintextOffset,\n \t\t\tint length) throws ShortBufferException, BadPaddingException {\n \t\tint space;\n-\t\tif (ciphertextOffset > ciphertext.length)\n-\t\t\tspace = 0;\n+\t\tif (ciphertextOffset < 0 || ciphertextOffset > ciphertext.length)\n+\t\t\tthrow new IllegalArgumentException();\n \t\telse\n \t\t\tspace = ciphertext.length - ciphertextOffset;\n \t\tif (length > space)\n \t\t\tthrow new ShortBufferException();\n-\t\tif (plaintextOffset > plaintext.length)\n-\t\t\tspace = 0;\n-\t\telse\n-\t\t\tspace = plaintext.length - plaintextOffset;\n+\t\tif (length < 0 || plaintextOffset < 0 || plaintextOffset > plaintext.length)\n+\t\t\tthrow new IllegalArgumentException();\n+\t\tspace = plaintext.length - plaintextOffset;\n \t\tif (!haskey) {\n \t\t\t// The key is not set yet - return the ciphertext as-is.\n \t\t\tif (length > space)"
        },
        {
          "filename": "src/main/java/com/southernstorm/noise/protocol/CipherState.java",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -100,6 +100,8 @@ public interface CipherState extends Destroyable {\n \t * \n \t * @throws IllegalStateException The nonce has wrapped around.\n \t * \n+\t * @throws IllegalArgumentException One of the parameters is out of range.\n+\t *\n \t * The plaintext and ciphertext buffers can be the same for in-place\n \t * encryption.  In that case, plaintextOffset must be identical to\n \t * ciphertextOffset.\n@@ -130,6 +132,8 @@ public interface CipherState extends Destroyable {\n \t * \n \t * @throws IllegalStateException The nonce has wrapped around.\n \t * \n+\t * @throws IllegalArgumentException One of the parameters is out of range.\n+\t *\n \t * The plaintext and ciphertext buffers can be the same for in-place\n \t * decryption.  In that case, ciphertextOffset must be identical to\n \t * plaintextOffset."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "49377b6dfc6a1e75740bce2318118291a57c0d6e",
            "date": "2022-08-02T18:10:19Z",
            "author_login": "rweather"
          },
          {
            "sha": "dce0d18e24acfe747e74bf0eaf43d94128a3620e",
            "date": "2021-07-21T14:07:47Z",
            "author_login": "jon-signal"
          },
          {
            "sha": "76cbc067e1499d4a08e18aeb50c7d665ec65941d",
            "date": "2021-07-21T14:07:35Z",
            "author_login": "jon-signal"
          },
          {
            "sha": "226aff4d3e80d8955695bdfb066a70d3c3f6bd42",
            "date": "2021-07-21T13:53:19Z",
            "author_login": "jon-signal"
          },
          {
            "sha": "04bb4ef11549d13d3a648c193410cf1d687aea7a",
            "date": "2021-04-08T19:03:12Z",
            "author_login": "rweather"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-125",
    "description": "An issue was discovered in Noise-Java through 2020-08-27. ChaChaPolyCipherState.encryptWithAd() allows out-of-bounds access.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-09-04T04:15:12.140",
    "last_modified": "2024-11-21T05:16:35.433",
    "fix_date": "2020-08-28T21:59:27Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/159057/Noise-Java-ChaChaPolyCipherState.encryptWithAd-Insufficient-Boundary-Checks.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/Sep/14",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rweather/noise-java/commit/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rweather/noise-java/pull/12",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/159057/Noise-Java-ChaChaPolyCipherState.encryptWithAd-Insufficient-Boundary-Checks.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2020/Sep/14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rweather/noise-java/commit/18e86b6f8bea7326934109aa9ffa705ebf4bde90",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rweather/noise-java/pull/12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.822251",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "noise-java",
    "owner": "rweather",
    "created_at": "2016-06-28T05:10:29Z",
    "updated_at": "2025-01-01T15:37:59Z",
    "pushed_at": "2024-03-28T11:58:22Z",
    "size": 215,
    "stars": 130,
    "forks": 51,
    "open_issues": 7,
    "watchers": 130,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 521720,
      "Shell": 224
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:43:39.054184"
  }
}