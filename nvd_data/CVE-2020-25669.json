{
  "cve_id": "CVE-2020-25669",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "77e70d351db7de07a46ac49b87a6c3c7a60fca7e",
    "related_commits": [
      "77e70d351db7de07a46ac49b87a6c3c7a60fca7e",
      "77e70d351db7de07a46ac49b87a6c3c7a60fca7e"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/77e70d351db7de07a46ac49b87a6c3c7a60fca7e.patch",
    "fix_commit_details": {
      "sha": "77e70d351db7de07a46ac49b87a6c3c7a60fca7e",
      "commit_date": "2020-10-26T20:36:17Z",
      "author": {
        "login": "dtor",
        "type": "User",
        "stats": {
          "total_commits": 1982,
          "average_weekly_commits": 1.6669470142977292,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 513
        }
      },
      "commit_message": {
        "title": "Input: sunkbd - avoid use-after-free in teardown paths",
        "length": 326,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 41,
        "additions": 33,
        "deletions": 8
      },
      "files": [
        {
          "filename": "drivers/input/keyboard/sunkbd.c",
          "status": "modified",
          "additions": 33,
          "deletions": 8,
          "patch": "@@ -99,7 +99,8 @@ static irqreturn_t sunkbd_interrupt(struct serio *serio,\n \tswitch (data) {\n \n \tcase SUNKBD_RET_RESET:\n-\t\tschedule_work(&sunkbd->tq);\n+\t\tif (sunkbd->enabled)\n+\t\t\tschedule_work(&sunkbd->tq);\n \t\tsunkbd->reset = -1;\n \t\tbreak;\n \n@@ -200,16 +201,12 @@ static int sunkbd_initialize(struct sunkbd *sunkbd)\n }\n \n /*\n- * sunkbd_reinit() sets leds and beeps to a state the computer remembers they\n- * were in.\n+ * sunkbd_set_leds_beeps() sets leds and beeps to a state the computer remembers\n+ * they were in.\n  */\n \n-static void sunkbd_reinit(struct work_struct *work)\n+static void sunkbd_set_leds_beeps(struct sunkbd *sunkbd)\n {\n-\tstruct sunkbd *sunkbd = container_of(work, struct sunkbd, tq);\n-\n-\twait_event_interruptible_timeout(sunkbd->wait, sunkbd->reset >= 0, HZ);\n-\n \tserio_write(sunkbd->serio, SUNKBD_CMD_SETLED);\n \tserio_write(sunkbd->serio,\n \t\t(!!test_bit(LED_CAPSL,   sunkbd->dev->led) << 3) |\n@@ -222,11 +219,39 @@ static void sunkbd_reinit(struct work_struct *work)\n \t\tSUNKBD_CMD_BELLOFF - !!test_bit(SND_BELL, sunkbd->dev->snd));\n }\n \n+\n+/*\n+ * sunkbd_reinit() wait for the keyboard reset to complete and restores state\n+ * of leds and beeps.\n+ */\n+\n+static void sunkbd_reinit(struct work_struct *work)\n+{\n+\tstruct sunkbd *sunkbd = container_of(work, struct sunkbd, tq);\n+\n+\t/*\n+\t * It is OK that we check sunkbd->enabled without pausing serio,\n+\t * as we only want to catch true->false transition that will\n+\t * happen once and we will be woken up for it.\n+\t */\n+\twait_event_interruptible_timeout(sunkbd->wait,\n+\t\t\t\t\t sunkbd->reset >= 0 || !sunkbd->enabled,\n+\t\t\t\t\t HZ);\n+\n+\tif (sunkbd->reset >= 0 && sunkbd->enabled)\n+\t\tsunkbd_set_leds_beeps(sunkbd);\n+}\n+\n static void sunkbd_enable(struct sunkbd *sunkbd, bool enable)\n {\n \tserio_pause_rx(sunkbd->serio);\n \tsunkbd->enabled = enable;\n \tserio_continue_rx(sunkbd->serio);\n+\n+\tif (!enable) {\n+\t\twake_up_interruptible(&sunkbd->wait);\n+\t\tcancel_work_sync(&sunkbd->tq);\n+\t}\n }\n \n /*"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          },
          {
            "sha": "cbc5dde0a461240046e8a41c43d7c3b76d5db952",
            "date": "2025-01-10T15:28:21Z",
            "author_login": "rikvanriel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-416",
    "description": "A vulnerability was found in the Linux Kernel where the function sunkbd_reinit having been scheduled by sunkbd_interrupt before sunkbd being freed. Though the dangling pointer is set to NULL in sunkbd_disconnect, there is still an alias in sunkbd_reinit causing Use After Free.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-26T12:15:15.743",
    "last_modified": "2024-11-21T05:18:24.777",
    "fix_date": "2020-10-26T20:36:17Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2020/11/05/2",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2020/11/20/5",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/77e70d351db7de07a46ac49b87a6c3c7a60fca7e",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00015.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00027.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210702-0006/",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2020/11/05/2%2C",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2020/11/20/5%2C",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2020/11/05/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2020/11/20/5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/77e70d351db7de07a46ac49b87a6c3c7a60fca7e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00015.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00027.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210702-0006/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2020/11/05/2%2C",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2020/11/20/5%2C",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.121789",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}