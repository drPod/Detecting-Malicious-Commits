{
  "cve_id": "CVE-2020-25820",
  "github_data": {
    "repository": "bigbluebutton/bigbluebutton",
    "fix_commit": "71fe1eac1e5bd73a2cd44bd79c001086b250e435",
    "related_commits": [
      "71fe1eac1e5bd73a2cd44bd79c001086b250e435",
      "71fe1eac1e5bd73a2cd44bd79c001086b250e435"
    ],
    "patch_url": "https://github.com/bigbluebutton/bigbluebutton/commit/71fe1eac1e5bd73a2cd44bd79c001086b250e435.patch",
    "fix_commit_details": {
      "sha": "71fe1eac1e5bd73a2cd44bd79c001086b250e435",
      "commit_date": "2020-10-08T21:24:06Z",
      "author": {
        "login": "ffdixon",
        "type": "User",
        "stats": {
          "total_commits": 2145,
          "average_weekly_commits": 2.476905311778291,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 465
        }
      },
      "commit_message": {
        "title": "Merge pull request #10619 from bigbluebutton/bbb-soffice-disable-update",
        "length": 136,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 25,
        "additions": 6,
        "deletions": 19
      },
      "files": [
        {
          "filename": "bbb-common-web/src/main/java/org/bigbluebutton/presentation/imp/OfficeToPdfConversionService.java",
          "status": "modified",
          "additions": 6,
          "deletions": 19,
          "patch": "@@ -16,13 +16,10 @@\n  * with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.\r\n  *\r\n  */\r\n-\r\n package org.bigbluebutton.presentation.imp;\r\n-\r\n import java.io.File;\r\n import java.util.HashMap;\r\n import java.util.Map;\r\n-\r\n import org.bigbluebutton.presentation.ConversionMessageConstants;\r\n import org.bigbluebutton.presentation.SupportedFileTypes;\r\n import org.bigbluebutton.presentation.UploadedPresentation;\r\n@@ -32,29 +29,30 @@\n import org.jodconverter.local.office.LocalOfficeManager;\r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n-\r\n+import com.sun.star.document.UpdateDocMode;\r\n import com.google.gson.Gson;\r\n-\r\n public class OfficeToPdfConversionService {\r\n   private static Logger log = LoggerFactory.getLogger(OfficeToPdfConversionService.class);\r\n-\r\n   private OfficeDocumentValidator2 officeDocumentValidator;\r\n   private final OfficeManager officeManager;\r\n   private final LocalConverter documentConverter;\r\n   private boolean skipOfficePrecheck = false;\r\n-\r\n   public OfficeToPdfConversionService() throws OfficeException {\r\n+    final Map<String, Object> loadProperties = new HashMap<>();\r\n+    loadProperties.put(\"Hidden\", true);\r\n+    loadProperties.put(\"ReadOnly\", true);\r\n+    loadProperties.put(\"UpdateDocMode\", UpdateDocMode.NO_UPDATE);\r\n     officeManager = LocalOfficeManager\r\n       .builder()\r\n       .portNumbers(8100, 8101, 8102, 8103, 8104)\r\n       .build();\r\n     documentConverter = LocalConverter\r\n       .builder()\r\n       .officeManager(officeManager)\r\n+      .loadProperties(loadProperties)\r\n       .filterChain(new OfficeDocumentConversionFilter())\r\n       .build();\r\n   }\r\n-\r\n   /*\r\n    * Convert the Office document to PDF. If successful, update\r\n    * UploadPresentation.uploadedFile with the new PDF out and\r\n@@ -74,7 +72,6 @@ public UploadedPresentation convertOfficeToPdf(UploadedPresentation pres) {\n         Gson gson = new Gson();\r\n         String logStr = gson.toJson(logData);\r\n         log.warn(\" --analytics-- data={}\", logStr);\r\n-\r\n         pres.setConversionStatus(ConversionMessageConstants.OFFICE_DOC_CONVERSION_INVALID_KEY);\r\n         return pres;\r\n       }\r\n@@ -89,7 +86,6 @@ public UploadedPresentation convertOfficeToPdf(UploadedPresentation pres) {\n         Gson gson = new Gson();\r\n         String logStr = gson.toJson(logData);\r\n         log.info(\" --analytics-- data={}\", logStr);\r\n-\r\n         makePdfTheUploadedFileAndSetStepAsSuccess(pres, pdfOutput);\r\n       } else {\r\n         Map<String, Object> logData = new HashMap<>();\r\n@@ -107,51 +103,42 @@ public UploadedPresentation convertOfficeToPdf(UploadedPresentation pres) {\n     }\r\n     return pres;\r\n   }\r\n-\r\n   public void initialize(UploadedPresentation pres) {\r\n     pres.setConversionStatus(ConversionMessageConstants.OFFICE_DOC_CONVERSION_FAILED_KEY);\r\n   }\r\n-\r\n   private File setupOutputPdfFile(UploadedPresentation pres) {\r\n     File presentationFile = pres.getUploadedFile();\r\n     String filenameWithoutExt = presentationFile.getAbsolutePath().substring(0,\r\n         presentationFile.getAbsolutePath().lastIndexOf('.'));\r\n     return new File(filenameWithoutExt + \".pdf\");\r\n   }\r\n-\r\n   private boolean convertOfficeDocToPdf(UploadedPresentation pres,\r\n       File pdfOutput) {\r\n     Office2PdfPageConverter converter = new Office2PdfPageConverter();\r\n     return converter.convert(pres.getUploadedFile(), pdfOutput, 0, pres, documentConverter);\r\n   }\r\n-\r\n   private void makePdfTheUploadedFileAndSetStepAsSuccess(UploadedPresentation pres, File pdf) {\r\n     pres.setUploadedFile(pdf);\r\n     pres.setConversionStatus(ConversionMessageConstants.OFFICE_DOC_CONVERSION_SUCCESS_KEY);\r\n   }\r\n-\r\n   public void setOfficeDocumentValidator(OfficeDocumentValidator2 v) {\r\n     officeDocumentValidator = v;\r\n   }\r\n-\r\n   public void setSkipOfficePrecheck(boolean skipOfficePrecheck) {\r\n     this.skipOfficePrecheck = skipOfficePrecheck;\r\n   }\r\n-\r\n   public void start() {\r\n     try {\r\n       officeManager.start();\r\n     } catch (OfficeException e) {\r\n       log.error(\"Could not start Office Manager\", e);\r\n     }\r\n   }\r\n-\r\n   public void stop() {\r\n     try {\r\n       officeManager.stop();\r\n     } catch (OfficeException e) {\r\n       log.error(\"Could not stop Office Manager\", e);\r\n     }\r\n-\r\n   }\r\n }\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2a54e3d959a4ca4b7bf38fe26799d2577b504015",
            "date": "2025-01-14T20:26:32Z",
            "author_login": "antobinary"
          },
          {
            "sha": "92580b13d6aa9f288f8c5daaef021f3867ca6fb9",
            "date": "2025-01-14T20:09:21Z",
            "author_login": "prlanzarin"
          },
          {
            "sha": "64a0fa6b5b132a8408e64d5c0961a5871e498e1c",
            "date": "2025-01-14T20:02:08Z",
            "author_login": "transifex-integration[bot]"
          },
          {
            "sha": "bebeef69855aa9ac341706278cc1fb8a185a6c9a",
            "date": "2025-01-14T19:05:46Z",
            "author_login": "prlanzarin"
          },
          {
            "sha": "12ae891ac7b321a93d48ecb8f953e4674f4faed9",
            "date": "2025-01-14T19:01:19Z",
            "author_login": "prlanzarin"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "BigBlueButton before 2.2.7 allows remote authenticated users to read local files and conduct SSRF attacks via an uploaded Office document that has a crafted URL in an ODF xlink field.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-10-21T13:15:12.960",
    "last_modified": "2024-11-21T05:18:50.273",
    "fix_date": "2020-10-08T21:24:06Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/159667/BigBlueButton-2.2.25-File-Disclosure-Server-Side-Request-Forgery.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bigbluebutton/bigbluebutton/commit/71fe1eac1e5bd73a2cd44bd79c001086b250e435",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bigbluebutton/bigbluebutton/compare/v2.2.26...v2.2.27",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.golem.de/news/big-blue-button-das-grosse-blaue-sicherheitsrisiko-2010-151610.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.redteam-pentesting.de/advisories/rt-sa-2020-005",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/159667/BigBlueButton-2.2.25-File-Disclosure-Server-Side-Request-Forgery.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bigbluebutton/bigbluebutton/commit/71fe1eac1e5bd73a2cd44bd79c001086b250e435",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bigbluebutton/bigbluebutton/compare/v2.2.26...v2.2.27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.golem.de/news/big-blue-button-das-grosse-blaue-sicherheitsrisiko-2010-151610.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.redteam-pentesting.de/advisories/rt-sa-2020-005",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.186901",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "bigbluebutton",
    "owner": "bigbluebutton",
    "created_at": "2010-05-25T01:42:41Z",
    "updated_at": "2025-01-14T12:12:39Z",
    "pushed_at": "2025-01-14T12:12:29Z",
    "size": 893040,
    "stars": 8626,
    "forks": 5969,
    "open_issues": 743,
    "watchers": 8626,
    "has_security_policy": false,
    "default_branch": "v3.0.x-release",
    "protected_branches": [],
    "languages": {
      "JavaScript": 4126026,
      "Scala": 1661584,
      "TypeScript": 1609907,
      "Java": 1170092,
      "Ruby": 394574,
      "Shell": 281919,
      "Groovy": 165624,
      "CSS": 162616,
      "Go": 113680,
      "PLpgSQL": 96927,
      "Python": 75857,
      "HTML": 26837,
      "Batchfile": 2375,
      "Gherkin": 925,
      "Dockerfile": 59,
      "PostScript": 36
    },
    "commit_activity": {
      "total_commits_last_year": 3379,
      "avg_commits_per_week": 64.98076923076923,
      "days_active_last_year": 265
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T12:54:33.084574"
  }
}