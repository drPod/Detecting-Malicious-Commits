{
  "cve_id": "CVE-2020-25989",
  "github_data": {
    "repository": "pritunl/pritunl-client-electron",
    "fix_commit": "89f8c997c6f93e724f68f76f7f47f8891d9acc2d",
    "related_commits": [
      "89f8c997c6f93e724f68f76f7f47f8891d9acc2d",
      "89f8c997c6f93e724f68f76f7f47f8891d9acc2d"
    ],
    "patch_url": "https://github.com/pritunl/pritunl-client-electron/commit/89f8c997c6f93e724f68f76f7f47f8891d9acc2d.patch",
    "fix_commit_details": {
      "sha": "89f8c997c6f93e724f68f76f7f47f8891d9acc2d",
      "commit_date": "2020-08-31T09:55:29Z",
      "author": {
        "login": "zachhuff386",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Remove file before io write file",
        "length": 32,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 9,
        "additions": 8,
        "deletions": 1
      },
      "files": [
        {
          "filename": "service/profile/profile.go",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -214,6 +214,7 @@ func (p *Profile) write() (pth string, err error) {\n \n \tpth = filepath.Join(rootDir, p.Id)\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(pth, []byte(p.Data), os.FileMode(0600))\n \tif err != nil {\n \t\terr = &WriteError{\n@@ -261,6 +262,7 @@ func (p *Profile) writeUp() (pth string, err error) {\n \t\tpanic(\"profile: Not implemented\")\n \t}\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(pth, []byte(script), os.FileMode(0755))\n \tif err != nil {\n \t\terr = &WriteError{\n@@ -308,6 +310,7 @@ func (p *Profile) writeDown() (pth string, err error) {\n \t\tpanic(\"profile: Not implemented\")\n \t}\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(pth, []byte(script), os.FileMode(0755))\n \tif err != nil {\n \t\terr = &WriteError{\n@@ -327,6 +330,7 @@ func (p *Profile) writeBlock() (pth string, err error) {\n \n \tpth = filepath.Join(rootDir, p.Id+\"-block.sh\")\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(pth, []byte(blockScript), os.FileMode(0755))\n \tif err != nil {\n \t\terr = &WriteError{\n@@ -468,6 +472,7 @@ func (p *Profile) writeAuth() (pth string, err error) {\n \n \tpth = filepath.Join(rootDir, p.Id+\".auth\")\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(pth, []byte(username+\"\\n\"+password+\"\\n\"),\n \t\tos.FileMode(0600))\n \tif err != nil {\n@@ -511,6 +516,7 @@ func (p *Profile) writeConfWgLinux() (pth string, err error) {\n \n \tpth = filepath.Join(rootDir, p.Id+\".key\")\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(\n \t\tpth,\n \t\t[]byte(p.PrivateKeyWg+\"\\n\"),\n@@ -599,7 +605,7 @@ func (p *Profile) writeConfWgQuick(data *WgConf) (pth string, err error) {\n \n \tpth = filepath.Join(rootDir, p.Iface+\".conf\")\n \n-\tos.Remove(pth)\n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(\n \t\tpth,\n \t\t[]byte(output.String()),"
        },
        {
          "filename": "service/utils/utils.go",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -914,6 +914,7 @@ func PidInit() (err error) {\n \t\t}\n \t}\n \n+\t_ = os.Remove(pth)\n \terr = ioutil.WriteFile(\n \t\tpth,\n \t\t[]byte(strconv.Itoa(os.Getpid())),"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "53bc2c0157dee4e3b6e4b925ceb5300a4babbd45",
            "date": "2024-12-20T19:24:17Z",
            "author_login": "zachhuff386"
          },
          {
            "sha": "21f264e8eb1e6b398a5ae466289b2bba59ce6cad",
            "date": "2024-12-20T19:24:04Z",
            "author_login": "zachhuff386"
          },
          {
            "sha": "e09068a356e34484f939bc63628583412b4fc356",
            "date": "2024-12-20T19:23:50Z",
            "author_login": "zachhuff386"
          },
          {
            "sha": "d9b1f7d02cbb7cab33e886bf7554cbac6ee88b84",
            "date": "2024-12-20T19:23:35Z",
            "author_login": "zachhuff386"
          },
          {
            "sha": "eebc3d8dac0190a5e9d8e921d40f77540773dc19",
            "date": "2024-12-20T19:23:01Z",
            "author_login": "zachhuff386"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-59",
    "description": "Privilege escalation via arbitrary file write in pritunl electron client 1.0.1116.6 through v1.2.2550.20. Successful exploitation of the issue may allow an attacker to execute code on the effected system with root privileges.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-19T21:15:12.200",
    "last_modified": "2024-11-21T05:19:02.490",
    "fix_date": "2020-08-31T09:55:29Z"
  },
  "references": [
    {
      "url": "https://github.com/pritunl/pritunl-client-electron/commit/89f8c997c6f93e724f68f76f7f47f8891d9acc2d",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vkas-afk.github.io/vuln-disclosures/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pritunl/pritunl-client-electron/commit/89f8c997c6f93e724f68f76f7f47f8891d9acc2d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vkas-afk.github.io/vuln-disclosures/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.468311",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pritunl-client-electron",
    "owner": "pritunl",
    "created_at": "2015-05-21T02:40:17Z",
    "updated_at": "2025-01-11T15:31:22Z",
    "pushed_at": "2024-12-20T19:24:35Z",
    "size": 315463,
    "stars": 1266,
    "forks": 238,
    "open_issues": 7,
    "watchers": 1266,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 416175,
      "Go": 352239,
      "Shell": 40174,
      "Ruby": 20623,
      "Python": 15500,
      "Swift": 4097,
      "Inno Setup": 3475
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:58:03.171587"
  }
}