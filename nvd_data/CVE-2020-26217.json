{
  "cve_id": "CVE-2020-26217",
  "github_data": {
    "repository": "x-stream/xstream",
    "fix_commit": "0fec095d534126931c99fd38e9c6d41f5c685c1a",
    "related_commits": [
      "0fec095d534126931c99fd38e9c6d41f5c685c1a",
      "0fec095d534126931c99fd38e9c6d41f5c685c1a"
    ],
    "patch_url": "https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a.patch",
    "fix_commit_details": {
      "sha": "0fec095d534126931c99fd38e9c6d41f5c685c1a",
      "commit_date": "2020-09-23T23:56:49Z",
      "author": {
        "login": "joehni",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix for CVE-2017-9805.",
        "length": 22,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 128,
        "additions": 99,
        "deletions": 29
      },
      "files": [
        {
          "filename": "xstream-distribution/src/content/changes.html",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -28,6 +28,14 @@\n \t\tfilter for the appropriate milestone.\n \t</p>\n \n+\t<h1 id=\"upcoming-1.4.x\">Upcoming 1.4.x maintenance release</h1>\n+\n+\t<p>Not yet released.</p>\n+\n+\t<p class=\"highlight\">This maintenance release addresses the security vulnerability CVE-2017-9805 reported\n+\toriginally for Struts' XStream Plugin, an arbitrary execution of commands when unmarshalling for XStream instances\n+\twith uninitialized security framework.</p>\n+\n \t<h1 id=\"1.4.13\">1.4.13</h1>\n \n \t<p>Released September 6, 2020.</p>"
        },
        {
          "filename": "xstream/src/java/com/thoughtworks/xstream/XStream.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -642,7 +642,7 @@ protected void setupSecurity() {\n         }\n \n         addPermission(AnyTypePermission.ANY);\n-        denyTypes(new String[]{\"java.beans.EventHandler\"});\n+        denyTypes(new String[]{\"java.beans.EventHandler\", \"javax.imageio.ImageIO$ContainsFilter\"});\n         denyTypesByRegExp(new Pattern[]{LAZY_ITERATORS, JAVAX_CRYPTO});\n         allowTypeHierarchy(Exception.class);\n         securityInitialized = false;"
        },
        {
          "filename": "xstream/src/test/com/thoughtworks/acceptance/SecurityVulnerabilityTest.java",
          "status": "modified",
          "additions": 90,
          "deletions": 28,
          "patch": "@@ -11,14 +11,14 @@\n package com.thoughtworks.acceptance;\n \n import java.beans.EventHandler;\n+import java.util.Iterator;\n \n import com.thoughtworks.xstream.XStream;\n import com.thoughtworks.xstream.XStreamException;\n import com.thoughtworks.xstream.converters.ConversionException;\n-import com.thoughtworks.xstream.converters.reflection.ReflectionConverter;\n+import com.thoughtworks.xstream.core.JVM;\n import com.thoughtworks.xstream.security.AnyTypePermission;\n import com.thoughtworks.xstream.security.ForbiddenClassException;\n-import com.thoughtworks.xstream.security.NoTypePermission;\n \n \n /**\n@@ -39,15 +39,15 @@ protected void setupSecurity(XStream xstream) {\n \n     public void testCannotInjectEventHandler() {\n         final String xml = \"\"\n-                + \"<string class='runnable-array'>\\n\"\n-                + \"  <dynamic-proxy>\\n\"\n-                + \"    <interface>java.lang.Runnable</interface>\\n\"\n-                + \"    <handler class='java.beans.EventHandler'>\\n\"\n-                + \"      <target class='com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec'/>\\n\"\n-                + \"      <action>exec</action>\\n\"\n-                + \"    </handler>\\n\"\n-                + \"  </dynamic-proxy>\\n\"\n-                + \"</string>\";\n+            + \"<string class='runnable-array'>\\n\"\n+            + \"  <dynamic-proxy>\\n\"\n+            + \"    <interface>java.lang.Runnable</interface>\\n\"\n+            + \"    <handler class='java.beans.EventHandler'>\\n\"\n+            + \"      <target class='com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec'/>\\n\"\n+            + \"      <action>exec</action>\\n\"\n+            + \"    </handler>\\n\"\n+            + \"  </dynamic-proxy>\\n\"\n+            + \"</string>\";\n \n         try {\n             xstream.fromXML(xml);\n@@ -75,33 +75,96 @@ public void testCannotInjectEventHandlerWithUnconfiguredSecurityFramework() {\n             xstream.fromXML(xml);\n             fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n         } catch (final XStreamException e) {\n-            assertTrue(e.getMessage().indexOf(EventHandler.class.getName())>=0);\n+            assertTrue(e.getMessage().indexOf(EventHandler.class.getName()) >= 0);\n         }\n         assertEquals(0, BUFFER.length());\n     }\n \n     public void testExplicitlyConvertEventHandler() {\n         final String xml = \"\"\n-                + \"<string class='runnable-array'>\\n\"\n-                + \"  <dynamic-proxy>\\n\"\n-                + \"    <interface>java.lang.Runnable</interface>\\n\"\n-                + \"    <handler class='java.beans.EventHandler'>\\n\"\n-                + \"      <target class='com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec'/>\\n\"\n-                + \"      <action>exec</action>\\n\"\n-                + \"    </handler>\\n\"\n-                + \"  </dynamic-proxy>\\n\"\n-                + \"</string>\";\n+            + \"<string class='runnable-array'>\\n\"\n+            + \"  <dynamic-proxy>\\n\"\n+            + \"    <interface>java.lang.Runnable</interface>\\n\"\n+            + \"    <handler class='java.beans.EventHandler'>\\n\"\n+            + \"      <target class='com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec'/>\\n\"\n+            + \"      <action>exec</action>\\n\"\n+            + \"    </handler>\\n\"\n+            + \"  </dynamic-proxy>\\n\"\n+            + \"</string>\";\n \n         xstream.allowTypes(new Class[]{EventHandler.class});\n-        xstream.registerConverter(new ReflectionConverter(xstream.getMapper(), xstream\n-            .getReflectionProvider(), EventHandler.class));\n \n         final Runnable[] array = (Runnable[])xstream.fromXML(xml);\n         assertEquals(0, BUFFER.length());\n         array[0].run();\n         assertEquals(\"Executed!\", BUFFER.toString());\n     }\n \n+    public void testCannotInjectConvertImageIOContainsFilterWithUnconfiguredSecurityFramework() {\n+        if (JVM.isVersion(7)) {\n+            final String xml = \"\"\n+                + \"<string class='javax.imageio.spi.FilterIterator'>\\n\"\n+                + \" <iter class='java.util.ArrayList$Itr'>\\n\"\n+                + \"   <cursor>0</cursor>\\n\"\n+                + \"   <lastRet>1</lastRet>\\n\"\n+                + \"   <expectedModCount>1</expectedModCount>\\n\"\n+                + \"   <outer-class>\\n\"\n+                + \"     <com.thoughtworks.acceptance.SecurityVulnerabilityTest_-Exec/>\\n\"\n+                + \"   </outer-class>\\n\"\n+                + \" </iter>\\n\"\n+                + \" <filter class='javax.imageio.ImageIO$ContainsFilter'>\\n\"\n+                + \"   <method>\\n\"\n+                + \"     <class>com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec</class>\\n\"\n+                + \"     <name>exec</name>\\n\"\n+                + \"     <parameter-types/>\\n\"\n+                + \"   </method>\\n\"\n+                + \"   <name>exec</name>\\n\"\n+                + \" </filter>\\n\"\n+                + \" <next/>\\n\"\n+                + \"</string>\";\n+\n+            try {\n+                xstream.fromXML(xml);\n+                fail(\"Thrown \" + XStreamException.class.getName() + \" expected\");\n+            } catch (final XStreamException e) {\n+                assertTrue(e.getMessage().indexOf(\"javax.imageio.ImageIO$ContainsFilter\") >= 0);\n+            }\n+            assertEquals(0, BUFFER.length());\n+        }\n+    }\n+\n+    public void testExplicitlyConvertImageIOContainsFilter() {\n+        if (JVM.isVersion(7)) {\n+            final String xml = \"\"\n+                + \"<string class='javax.imageio.spi.FilterIterator'>\\n\"\n+                + \" <iter class='java.util.ArrayList$Itr'>\\n\"\n+                + \"   <cursor>0</cursor>\\n\"\n+                + \"   <lastRet>1</lastRet>\\n\"\n+                + \"   <expectedModCount>1</expectedModCount>\\n\"\n+                + \"   <outer-class>\\n\"\n+                + \"     <com.thoughtworks.acceptance.SecurityVulnerabilityTest_-Exec/>\\n\"\n+                + \"   </outer-class>\\n\"\n+                + \" </iter>\\n\"\n+                + \" <filter class='javax.imageio.ImageIO$ContainsFilter'>\\n\"\n+                + \"   <method>\\n\"\n+                + \"     <class>com.thoughtworks.acceptance.SecurityVulnerabilityTest$Exec</class>\\n\"\n+                + \"     <name>exec</name>\\n\"\n+                + \"     <parameter-types/>\\n\"\n+                + \"   </method>\\n\"\n+                + \"   <name>exec</name>\\n\"\n+                + \" </filter>\\n\"\n+                + \" <next/>\\n\"\n+                + \"</string>\";\n+\n+            xstream.allowTypes(new String[]{\"javax.imageio.ImageIO$ContainsFilter\"});\n+\n+            final Iterator iterator = (Iterator)xstream.fromXML(xml);\n+            assertEquals(0, BUFFER.length());\n+            iterator.next();\n+            assertEquals(\"Executed!\", BUFFER.toString());\n+        }\n+    }\n+\n     public static class Exec {\n \n         public void exec() {\n@@ -120,7 +183,7 @@ public void testInstanceOfVoid() {\n \n     public void testDeniedInstanceOfVoid() {\n         xstream.addPermission(AnyTypePermission.ANY); // clear out defaults\n-        xstream.denyTypes(new Class[] { void.class, Void.class });\n+        xstream.denyTypes(new Class[]{void.class, Void.class});\n         try {\n             xstream.fromXML(\"<void/>\");\n             fail(\"Thrown \" + ForbiddenClassException.class.getName() + \" expected\");\n@@ -130,17 +193,16 @@ public void testDeniedInstanceOfVoid() {\n     }\n \n     public void testAllowedInstanceOfVoid() {\n-        xstream.allowTypes(new Class[] { void.class, Void.class });\n+        xstream.allowTypes(new Class[]{void.class, Void.class});\n         try {\n             xstream.fromXML(\"<void/>\");\n             fail(\"Thrown \" + ConversionException.class.getName() + \" expected\");\n         } catch (final ConversionException e) {\n             assertEquals(\"void\", e.get(\"construction-type\"));\n         }\n     }\n-    \n-    public static class LazyIterator {\n-    }\n+\n+    public static class LazyIterator {}\n \n     public void testInstanceOfLazyIterator() {\n         xstream.alias(\"lazy-iterator\", LazyIterator.class);"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9cbe8891fe698e4aeec1aca4b13d8ec868ccdf0a",
            "date": "2024-12-27T22:39:35Z",
            "author_login": "joehni"
          },
          {
            "sha": "d987316a7b4d7c48cbf0dd1396dde3853488b80b",
            "date": "2023-05-02T23:25:06Z",
            "author_login": "basil"
          },
          {
            "sha": "ab4a1729543e47f66889d2331ea65cca30dc7138",
            "date": "2024-11-06T20:15:41Z",
            "author_login": "joehni"
          },
          {
            "sha": "43e7156241a8cd176390ae853b472393724b55ed",
            "date": "2024-10-18T09:33:48Z",
            "author_login": "joehni"
          },
          {
            "sha": "9eef78cd85c51d3c77d6ee1061ee6df91f1dd36b",
            "date": "2024-11-06T18:11:09Z",
            "author_login": "joehni"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "XStream before version 1.4.14 is vulnerable to Remote Code Execution.The vulnerability may allow a remote attacker to run arbitrary shell commands only by manipulating the processed input stream. Only users who rely on blocklists are affected. Anyone using XStream's Security Framework allowlist is not affected. The linked advisory provides code workarounds for users who cannot upgrade. The issue is fixed in version 1.4.14.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-11-16T21:15:12.893",
    "last_modified": "2024-11-21T05:19:33.353",
    "fix_date": "2020-09-23T23:56:49Z"
  },
  "references": [
    {
      "url": "https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-mw36-7c6c-q4q2",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r2de526726e7f4db4a7cb91b7355070779f51a84fd985c6529c2f4e9e%40%3Cissues.activemq.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r7c9fc255edc0b9cd9567093d131f6d33fde4c662aaf912460ef630e9%40%3Ccommits.camel.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r826a006fda71cc96fc87b6eca4b5d195f19a292ad36cea501682c38c%40%3Cissues.activemq.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/redde3609b89b2a4ff18b536a06ef9a77deb93d47fda8ed28086fa8c3%40%3Cissues.activemq.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00001.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210409-0004/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4811",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://x-stream.github.io/CVE-2020-26217.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Mitigation",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-mw36-7c6c-q4q2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r2de526726e7f4db4a7cb91b7355070779f51a84fd985c6529c2f4e9e%40%3Cissues.activemq.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r7c9fc255edc0b9cd9567093d131f6d33fde4c662aaf912460ef630e9%40%3Ccommits.camel.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/r826a006fda71cc96fc87b6eca4b5d195f19a292ad36cea501682c38c%40%3Cissues.activemq.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.apache.org/thread.html/redde3609b89b2a4ff18b536a06ef9a77deb93d47fda8ed28086fa8c3%40%3Cissues.activemq.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00001.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210409-0004/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2020/dsa-4811",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Not Applicable",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://x-stream.github.io/CVE-2020-26217.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mitigation",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.463417",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xstream",
    "owner": "x-stream",
    "created_at": "2015-03-14T15:57:12Z",
    "updated_at": "2024-12-27T22:39:45Z",
    "pushed_at": "2024-12-27T22:39:39Z",
    "size": 21741,
    "stars": 749,
    "forks": 228,
    "open_issues": 37,
    "watchers": 749,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 2852082,
      "HTML": 711607,
      "CSS": 7028,
      "Batchfile": 2073,
      "Shell": 1714,
      "XSLT": 1128
    },
    "commit_activity": {
      "total_commits_last_year": 20,
      "avg_commits_per_week": 0.38461538461538464,
      "days_active_last_year": 12
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:03:10.131861"
  }
}