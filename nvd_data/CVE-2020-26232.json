{
  "cve_id": "CVE-2020-26232",
  "github_data": {
    "repository": "jupyter/jupyter_server",
    "fix_commit": "3d83e49090289c431da253e2bdb8dc479cbcb157",
    "related_commits": [
      "3d83e49090289c431da253e2bdb8dc479cbcb157",
      "3d83e49090289c431da253e2bdb8dc479cbcb157"
    ],
    "patch_url": "https://github.com/jupyter/jupyter_server/commit/3d83e49090289c431da253e2bdb8dc479cbcb157.patch",
    "fix_commit_details": {
      "sha": "3d83e49090289c431da253e2bdb8dc479cbcb157",
      "commit_date": "2020-11-18T17:17:16Z",
      "author": {
        "login": "Zsailer",
        "type": "User",
        "stats": {
          "total_commits": 433,
          "average_weekly_commits": 0.4942922374429224,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 120
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-grfj-wjv9-4f9v",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 38,
        "additions": 34,
        "deletions": 4
      },
      "files": [
        {
          "filename": "jupyter_server/base/handlers.py",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -776,9 +776,12 @@ class TrailingSlashHandler(web.RequestHandler):\n     \"\"\"\n \n     def get(self):\n-        uri = self.request.path.rstrip(\"/\")\n-        if uri:\n-            self.redirect('?'.join((uri, self.request.query)))\n+        path, *rest = self.request.uri.partition(\"?\")\n+        # trim trailing *and* leading /\n+        # to avoid misinterpreting repeated '//'\n+        path = \"/\" + path.strip(\"/\")\n+        new_uri = \"\".join([path, *rest])\n+        self.redirect(new_uri)\n \n     post = put = get\n "
        },
        {
          "filename": "tests/test_paths.py",
          "status": "modified",
          "additions": 28,
          "deletions": 1,
          "patch": "@@ -1,5 +1,6 @@\n import re\n-\n+import pytest\n+import tornado\n from jupyter_server.base.handlers import path_regex\n \n \n@@ -29,3 +30,29 @@ def test_path_regex_bad():\n         '/y/x/foo',\n     ):\n         assert re.match(path_pat, path) is None\n+\n+\n+@pytest.mark.parametrize(\n+    'uri,expected',\n+    [\n+        (\"/notebooks/mynotebook/\", \"/notebooks/mynotebook\"),\n+        (\"////foo///\", \"/foo\"),\n+        (\"//example.com/\", \"/example.com\"),\n+        (\"/has/param/?hasparam=true\", \"/has/param?hasparam=true\"),\n+    ]\n+)\n+async def test_trailing_slash(uri, expected, http_server_client, auth_header, base_url):\n+    # http_server_client raises an exception when follow_redirects=False\n+    with pytest.raises(tornado.httpclient.HTTPClientError) as err:\n+        await http_server_client.fetch(\n+            uri,\n+            headers=auth_header,\n+            request_timeout=20,\n+            follow_redirects=False\n+        )\n+    # Capture the response from the raised exception value.\n+    response = err.value.response\n+    assert response.code == 302\n+    assert \"Location\" in response.headers\n+    assert response.headers[\"Location\"] == expected\n+    assert False"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "952782bc9636baa74f4a03966e1c14b43808d703",
            "date": "2024-12-20T13:02:28Z",
            "author_login": "minrk"
          },
          {
            "sha": "8a6f60774599b4d72ad449f98ab2214d2d035bb4",
            "date": "2024-12-20T13:02:26Z",
            "author_login": "minrk"
          },
          {
            "sha": "f23b3392624001c8fba6623e19f526a98b4a07ba",
            "date": "2024-12-20T12:52:39Z",
            "author_login": "minrk"
          },
          {
            "sha": "219597175e8275e7f3e958952a4254aedc046859",
            "date": "2024-12-20T12:23:45Z",
            "author_login": "minrk"
          },
          {
            "sha": "e74da85b1ed78151e62311f3610660315847145d",
            "date": "2024-12-20T12:06:13Z",
            "author_login": "cjwatson"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "Jupyter Server before version 1.0.6 has an Open redirect vulnerability. A maliciously crafted link to a jupyter server could redirect the browser to a different website. All jupyter servers are technically affected, however, these maliciously crafted links can only be reasonably made for known jupyter server hosts. A link to your jupyter server may appear safe, but ultimately redirect to a spoofed server on the public internet.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-24T21:15:11.557",
    "last_modified": "2024-11-21T05:19:36.430",
    "fix_date": "2020-11-18T17:17:16Z"
  },
  "references": [
    {
      "url": "https://github.com/jupyter-server/jupyter_server/blob/master/CHANGELOG.md#106---2020-11-18",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyter-server/jupyter_server/commit/3d83e49090289c431da253e2bdb8dc479cbcb157",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyter/jupyter_server/security/advisories/GHSA-grfj-wjv9-4f9v",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyter-server/jupyter_server/blob/master/CHANGELOG.md#106---2020-11-18",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyter-server/jupyter_server/commit/3d83e49090289c431da253e2bdb8dc479cbcb157",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jupyter/jupyter_server/security/advisories/GHSA-grfj-wjv9-4f9v",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.474464",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jupyter_server",
    "owner": "jupyter",
    "created_at": "2016-09-21T19:18:45Z",
    "updated_at": "2025-01-08T11:04:52Z",
    "pushed_at": "2025-01-06T21:30:38Z",
    "size": 25887,
    "stars": 496,
    "forks": 313,
    "open_issues": 205,
    "watchers": 496,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.x",
      "1.0.x",
      "main"
    ],
    "languages": {
      "Python": 1075364,
      "HTML": 10136,
      "CSS": 1414,
      "JavaScript": 528
    },
    "commit_activity": {
      "total_commits_last_year": 76,
      "avg_commits_per_week": 1.4615384615384615,
      "days_active_last_year": 31
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:34:34.445898"
  }
}