{
  "cve_id": "CVE-2020-26262",
  "github_data": {
    "repository": "coturn/coturn",
    "fix_commit": "abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
    "related_commits": [
      "abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
      "abfe1fd08d78baa0947d17dac0f7411c3d948e4d"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
      "commit_date": "2021-01-10T19:59:14Z",
      "author": {
        "login": "misi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge branch 'advisory-fix-1' CVE-2020-26262",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 30,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/client/ns_turn_ioaddr.c",
          "status": "modified",
          "additions": 27,
          "deletions": 2,
          "patch": "@@ -483,9 +483,9 @@ int ioa_addr_is_loopback(ioa_addr *addr)\n \t\t\treturn (u[0] == 127);\n \t\t} else if(addr->ss.sa_family == AF_INET6) {\n \t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s6.sin6_addr));\n-\t\t\tif(u[7] == 1) {\n+\t\t\tif(u[15] == 1) {\n \t\t\t\tint i;\n-\t\t\t\tfor(i=0;i<7;++i) {\n+\t\t\t\tfor(i=0;i<15;++i) {\n \t\t\t\t\tif(u[i])\n \t\t\t\t\t\treturn 0;\n \t\t\t\t}\n@@ -496,6 +496,31 @@ int ioa_addr_is_loopback(ioa_addr *addr)\n \treturn 0;\n }\n \n+/*\n+To avoid a vulnerability this function checks whether the addr is in 0.0.0.0/8 or ::/128.\n+Source from (INADDR_ANY) 0.0.0.0/32 and (in6addr_any) ::/128 routed to loopback on Linux systems for old BSD backward compatibility.\n+https://github.com/torvalds/linux/blob/a2f5ea9e314ba6778f885c805c921e9362ec0420/net/ipv6/tcp_ipv6.c#L182\n+To avoid any trouble we match the whole 0.0.0.0/8 that defined in RFC6890 as local network \"this\".\n+*/\n+int ioa_addr_is_zero(ioa_addr *addr)\n+{\n+\tif(addr) {\n+\t\tif(addr->ss.sa_family == AF_INET) {\n+\t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s4.sin_addr));\n+\t\t\treturn (u[0] == 0);\n+\t\t} else if(addr->ss.sa_family == AF_INET6) {\n+\t\t\tconst uint8_t *u = ((const uint8_t*)&(addr->s6.sin6_addr));\n+\t\t\tint i;\n+\t\t\tfor(i=0;i<=15;++i) {\n+\t\t\t\tif(u[i])\n+\t\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t\treturn 1;\n+\t\t}\n+\t}\n+\treturn 0;\n+}\n+\n /////// Map \"public\" address to \"private\" address //////////////\n \n // Must be called only in a single-threaded context,"
        },
        {
          "filename": "src/client/ns_turn_ioaddr.h",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -89,6 +89,7 @@ void ioa_addr_range_cpy(ioa_addr_range* dest, const ioa_addr_range* src);\n \n int ioa_addr_is_multicast(ioa_addr *a);\n int ioa_addr_is_loopback(ioa_addr *addr);\n+int ioa_addr_is_zero(ioa_addr *addr);\n \n /////// Map \"public\" address to \"private\" address //////////////\n "
        },
        {
          "filename": "src/server/ns_turn_server.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -273,6 +273,8 @@ static int good_peer_addr(turn_turnserver *server, const char* realm, ioa_addr *\n \t\t\treturn 0;\n \t\tif( !*(server->allow_loopback_peers) && ioa_addr_is_loopback(peer_addr))\n \t\t\treturn 0;\n+\t\tif (ioa_addr_is_zero(peer_addr))\n+\t\t\treturn 0;\n \n \t\t{\n \t\t\tint i;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2acb4b1989284fcebe0466217ec625e59f785af8",
            "date": "2025-01-14T10:39:57Z",
            "author_login": "tyranron"
          },
          {
            "sha": "a85eefc48a4e59b253612aa2059fcd153fa2c440",
            "date": "2025-01-09T10:58:41Z",
            "author_login": "tyranron"
          },
          {
            "sha": "e825110d38c54a9479e962abddfe860c8e7ddb15",
            "date": "2025-01-08T11:02:43Z",
            "author_login": "tyranron"
          },
          {
            "sha": "22aae5d0d040cff51fcc23391cc96a90499ca4dd",
            "date": "2025-01-05T01:50:29Z",
            "author_login": "guoyingbo"
          },
          {
            "sha": "c98bb935148288b6d13a8b954422a52edfb17a83",
            "date": "2024-12-27T22:52:44Z",
            "author_login": "eakraly"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-441",
    "description": "Coturn is free open source implementation of TURN and STUN Server. Coturn before version 4.5.2 by default does not allow peers to connect and relay packets to loopback addresses in the range of `127.x.x.x`. However, it was observed that when sending a `CONNECT` request with the `XOR-PEER-ADDRESS` value of `0.0.0.0`, a successful response was received and subsequently, `CONNECTIONBIND` also received a successful response. Coturn then is able to relay packets to the loopback interface. Additionally, when coturn is listening on IPv6, which is default, the loopback interface can also be reached by making use of either `[::1]` or `[::]` as the peer address. By using the address `0.0.0.0` as the peer address, a malicious user will be able to relay packets to the loopback interface, unless `--denied-peer-ip=0.0.0.0` (or similar) has been specified. Since the default configuration implies that loopback peers are not allowed, coturn administrators may choose to not set the `denied-peer-ip` setting. The issue patched in version 4.5.2. As a workaround the addresses in the address block `0.0.0.0/8`, `[::1]` and `[::]` should be denied by default unless `--allow-loopback-peers` has been specified.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-01-13T19:15:16.027",
    "last_modified": "2024-11-21T05:19:41.527",
    "fix_date": "2021-01-10T19:59:14Z"
  },
  "references": [
    {
      "url": "https://github.com/coturn/coturn/blob/57180ab60afcaeb13537e69ae8cb8aefd8f3f546/ChangeLog#L48",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/coturn/coturn/commit/abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/coturn/coturn/security/advisories/GHSA-6g6j-r9rf-cm7p",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/G54UIUFTEC6RLPOISMB6FUW7456SBZC4/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/M4CJOPAQT43MYAFU3UROGLEXN3Z6RS4H/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/coturn/coturn/blob/57180ab60afcaeb13537e69ae8cb8aefd8f3f546/ChangeLog#L48",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/coturn/coturn/commit/abfe1fd08d78baa0947d17dac0f7411c3d948e4d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/coturn/coturn/security/advisories/GHSA-6g6j-r9rf-cm7p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/G54UIUFTEC6RLPOISMB6FUW7456SBZC4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/M4CJOPAQT43MYAFU3UROGLEXN3Z6RS4H/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.147146",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "coturn",
    "owner": "coturn",
    "created_at": "2015-07-17T08:15:16Z",
    "updated_at": "2025-01-26T07:11:33Z",
    "pushed_at": "2025-01-14T10:40:00Z",
    "size": 5256,
    "stars": 11721,
    "forks": 2055,
    "open_issues": 403,
    "watchers": 11721,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 1692374,
      "CMake": 62501,
      "Shell": 33188,
      "C++": 28234,
      "Makefile": 20215,
      "Dockerfile": 11566
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:23:14.249065"
  }
}