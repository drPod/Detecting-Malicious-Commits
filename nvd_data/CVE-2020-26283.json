{
  "cve_id": "CVE-2020-26283",
  "github_data": {
    "repository": "ipfs/go-ipfs",
    "fix_commit": "fb0a9acd2d8288bd1028c3219a420de62a09683a",
    "related_commits": [
      "fb0a9acd2d8288bd1028c3219a420de62a09683a",
      "fb0a9acd2d8288bd1028c3219a420de62a09683a"
    ],
    "patch_url": "https://github.com/ipfs/go-ipfs/commit/fb0a9acd2d8288bd1028c3219a420de62a09683a.patch",
    "fix_commit_details": {
      "sha": "fb0a9acd2d8288bd1028c3219a420de62a09683a",
      "commit_date": "2021-01-14T18:00:51Z",
      "author": {
        "login": "aschmahmann",
        "type": "User",
        "stats": {
          "total_commits": 410,
          "average_weekly_commits": 0.7427536231884058,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 89
        }
      },
      "commit_message": {
        "title": "Merge pull request #7831 from ipfs/fix/escape-nonprintable-chars",
        "length": 112,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 176,
        "additions": 131,
        "deletions": 45
      },
      "files": [
        {
          "filename": "core/commands/add.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -353,7 +353,7 @@ only-hash, and progress/status related flags) will change the final hash.\n \t\t\t\t\t\t\tif quiet {\n \t\t\t\t\t\t\t\tfmt.Fprintf(os.Stdout, \"%s\\n\", output.Hash)\n \t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tfmt.Fprintf(os.Stdout, \"added %s %s\\n\", output.Hash, output.Name)\n+\t\t\t\t\t\t\t\tfmt.Fprintf(os.Stdout, \"added %s %s\\n\", output.Hash, cmdenv.EscNonPrint(output.Name))\n \t\t\t\t\t\t\t}\n \n \t\t\t\t\t\t} else {"
        },
        {
          "filename": "core/commands/cmdenv/env.go",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@ package cmdenv\n \n import (\n \t\"fmt\"\n+\t\"strconv\"\n \t\"strings\"\n \n \t\"github.com/ipfs/go-ipfs/commands\"\n@@ -70,3 +71,29 @@ func GetConfigRoot(env cmds.Environment) (string, error) {\n \n \treturn ctx.ConfigRoot, nil\n }\n+\n+// EscNonPrint converts non-printable characters and backslash into Go escape\n+// sequences.  This is done to display all characters in a string, including\n+// those that would otherwise not be displayed or have an undesirable effect on\n+// the display.\n+func EscNonPrint(s string) string {\n+\tif !needEscape(s) {\n+\t\treturn s\n+\t}\n+\n+\tesc := strconv.Quote(s)\n+\t// Remove first and last quote, and unescape quotes.\n+\treturn strings.ReplaceAll(esc[1:len(esc)-1], `\\\"`, `\"`)\n+}\n+\n+func needEscape(s string) bool {\n+\tif strings.ContainsRune(s, '\\\\') {\n+\t\treturn true\n+\t}\n+\tfor _, r := range s {\n+\t\tif !strconv.IsPrint(r) {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}"
        },
        {
          "filename": "core/commands/cmdenv/env_test.go",
          "status": "added",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -0,0 +1,48 @@\n+package cmdenv\n+\n+import (\n+\t\"strconv\"\n+\t\"testing\"\n+)\n+\n+func TestEscNonPrint(t *testing.T) {\n+\tb := []byte(\"hello\")\n+\tb[2] = 0x7f\n+\ts := string(b)\n+\tif !needEscape(s) {\n+\t\tt.Fatal(\"string needs escaping\")\n+\t}\n+\tif !hasNonPrintable(s) {\n+\t\tt.Fatal(\"expected non-printable\")\n+\t}\n+\tif hasNonPrintable(EscNonPrint(s)) {\n+\t\tt.Fatal(\"escaped string has non-printable\")\n+\t}\n+\tif EscNonPrint(`hel\\lo`) != `hel\\\\lo` {\n+\t\tt.Fatal(\"backslash not escaped\")\n+\t}\n+\n+\ts = `hello`\n+\tif needEscape(s) {\n+\t\tt.Fatal(\"string does not need escaping\")\n+\t}\n+\tif EscNonPrint(s) != s {\n+\t\tt.Fatal(\"string should not have changed\")\n+\t}\n+\ts = `\"hello\"`\n+\tif EscNonPrint(s) != s {\n+\t\tt.Fatal(\"string should not have changed\")\n+\t}\n+\tif EscNonPrint(`\"hel\\\"lo\"`) != `\"hel\\\\\"lo\"` {\n+\t\tt.Fatal(\"did not get expected escaped string\")\n+\t}\n+}\n+\n+func hasNonPrintable(s string) bool {\n+\tfor _, r := range s {\n+\t\tif !strconv.IsPrint(r) {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}"
        },
        {
          "filename": "core/commands/dns.go",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -4,6 +4,7 @@ import (\n \t\"fmt\"\n \t\"io\"\n \n+\tcmdenv \"github.com/ipfs/go-ipfs/core/commands/cmdenv\"\n \tncmd \"github.com/ipfs/go-ipfs/core/commands/name\"\n \tnamesys \"github.com/ipfs/go-ipfs/namesys\"\n \tnsopts \"github.com/ipfs/interface-go-ipfs-core/options/namesys\"\n@@ -77,7 +78,7 @@ The resolver can recursively resolve:\n \t},\n \tEncoders: cmds.EncoderMap{\n \t\tcmds.Text: cmds.MakeTypedEncoder(func(req *cmds.Request, w io.Writer, out *ncmd.ResolvedPath) error {\n-\t\t\tfmt.Fprintln(w, out.Path.String())\n+\t\t\tfmt.Fprintln(w, cmdenv.EscNonPrint(out.Path.String()))\n \t\t\treturn nil\n \t\t}),\n \t},"
        },
        {
          "filename": "core/commands/keystore.go",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -383,9 +383,9 @@ var keyRenameCmd = &cmds.Command{\n \tEncoders: cmds.EncoderMap{\n \t\tcmds.Text: cmds.MakeTypedEncoder(func(req *cmds.Request, w io.Writer, kro *KeyRenameOutput) error {\n \t\t\tif kro.Overwrite {\n-\t\t\t\tfmt.Fprintf(w, \"Key %s renamed to %s with overwriting\\n\", kro.Id, kro.Now)\n+\t\t\t\tfmt.Fprintf(w, \"Key %s renamed to %s with overwriting\\n\", kro.Id, cmdenv.EscNonPrint(kro.Now))\n \t\t\t} else {\n-\t\t\t\tfmt.Fprintf(w, \"Key %s renamed to %s\\n\", kro.Id, kro.Now)\n+\t\t\t\tfmt.Fprintf(w, \"Key %s renamed to %s\\n\", kro.Id, cmdenv.EscNonPrint(kro.Now))\n \t\t\t}\n \t\t\treturn nil\n \t\t}),\n@@ -547,9 +547,9 @@ func keyOutputListEncoders() cmds.EncoderFunc {\n \t\ttw := tabwriter.NewWriter(w, 1, 2, 1, ' ', 0)\n \t\tfor _, s := range list.Keys {\n \t\t\tif withID {\n-\t\t\t\tfmt.Fprintf(tw, \"%s\\t%s\\t\\n\", s.Id, s.Name)\n+\t\t\t\tfmt.Fprintf(tw, \"%s\\t%s\\t\\n\", s.Id, cmdenv.EscNonPrint(s.Name))\n \t\t\t} else {\n-\t\t\t\tfmt.Fprintf(tw, \"%s\\n\", s.Name)\n+\t\t\t\tfmt.Fprintf(tw, \"%s\\n\", cmdenv.EscNonPrint(s.Name))\n \t\t\t}\n \t\t}\n \t\ttw.Flush()"
        },
        {
          "filename": "core/commands/ls.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -251,7 +251,7 @@ func tabularOutput(req *cmds.Request, w io.Writer, out *LsOutput, lastObjectHash\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tfmt.Fprintf(tw, s, link.Hash, link.Size, link.Name)\n+\t\t\tfmt.Fprintf(tw, s, link.Hash, link.Size, cmdenv.EscNonPrint(link.Name))\n \t\t}\n \t}\n \ttw.Flush()"
        },
        {
          "filename": "core/commands/mount_unix.go",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -119,8 +119,8 @@ baz\n \tType: config.Mounts{},\n \tEncoders: cmds.EncoderMap{\n \t\tcmds.Text: cmds.MakeTypedEncoder(func(req *cmds.Request, w io.Writer, mounts *config.Mounts) error {\n-\t\t\tfmt.Fprintf(w, \"IPFS mounted at: %s\\n\", mounts.IPFS)\n-\t\t\tfmt.Fprintf(w, \"IPNS mounted at: %s\\n\", mounts.IPNS)\n+\t\t\tfmt.Fprintf(w, \"IPFS mounted at: %s\\n\", cmdenv.EscNonPrint(mounts.IPFS))\n+\t\t\tfmt.Fprintf(w, \"IPNS mounted at: %s\\n\", cmdenv.EscNonPrint(mounts.IPNS))\n \n \t\t\treturn nil\n \t\t}),"
        },
        {
          "filename": "core/commands/name/publish.go",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -152,9 +152,9 @@ Alternatively, publish an <ipfs-path> using a valid PeerID (as listed by\n \t\t\tvar err error\n \t\t\tquieter, _ := req.Options[quieterOptionName].(bool)\n \t\t\tif quieter {\n-\t\t\t\t_, err = fmt.Fprintln(w, ie.Name)\n+\t\t\t\t_, err = fmt.Fprintln(w, cmdenv.EscNonPrint(ie.Name))\n \t\t\t} else {\n-\t\t\t\t_, err = fmt.Fprintf(w, \"Published to %s: %s\\n\", ie.Name, ie.Value)\n+\t\t\t\t_, err = fmt.Fprintf(w, \"Published to %s: %s\\n\", cmdenv.EscNonPrint(ie.Name), cmdenv.EscNonPrint(ie.Value))\n \t\t\t}\n \t\t\treturn err\n \t\t}),"
        },
        {
          "filename": "core/commands/object/object.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -167,7 +167,7 @@ multihash.\n \t\t\t\tfmt.Fprintln(tw, \"Hash\\tSize\\tName\")\n \t\t\t}\n \t\t\tfor _, link := range out.Links {\n-\t\t\t\tfmt.Fprintf(tw, \"%s\\t%v\\t%s\\n\", link.Hash, link.Size, link.Name)\n+\t\t\t\tfmt.Fprintf(tw, \"%s\\t%v\\t%s\\n\", link.Hash, link.Size, cmdenv.EscNonPrint(link.Name))\n \t\t\t}\n \t\t\ttw.Flush()\n "
        },
        {
          "filename": "core/commands/pin/remotepin.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -254,7 +254,7 @@ Returns a list of objects that are pinned to a remote pinning service.\n \tEncoders: cmds.EncoderMap{\n \t\tcmds.Text: cmds.MakeTypedEncoder(func(req *cmds.Request, w io.Writer, out *RemotePinOutput) error {\n \t\t\t// pin remote ls produces a flat output similar to legacy pin ls\n-\t\t\tfmt.Fprintf(w, \"%s\\t%s\\t%s\\n\", out.Cid, out.Status, out.Name)\n+\t\t\tfmt.Fprintf(w, \"%s\\t%s\\t%s\\n\", out.Cid, out.Status, cmdenv.EscNonPrint(out.Name))\n \t\t\treturn nil\n \t\t}),\n \t},"
        },
        {
          "filename": "core/commands/pubsub.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -205,7 +205,7 @@ To use, the daemon must be run with '--enable-pubsub-experiment'.\n \n func stringListEncoder(req *cmds.Request, w io.Writer, list *stringList) error {\n \tfor _, str := range list.Strings {\n-\t\t_, err := fmt.Fprintf(w, \"%s\\n\", str)\n+\t\t_, err := fmt.Fprintf(w, \"%s\\n\", cmdenv.EscNonPrint(str))\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}"
        },
        {
          "filename": "core/commands/unixfs/ls.go",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -213,12 +213,12 @@ If possible, please use 'ipfs ls' instead.\n \t\t\t\tif len(out.Arguments) > 1 {\n \t\t\t\t\tfor _, arg := range directories[i:] {\n \t\t\t\t\t\tif out.Arguments[arg] == hash {\n-\t\t\t\t\t\t\tfmt.Fprintf(tw, \"%s:\\n\", arg)\n+\t\t\t\t\t\t\tfmt.Fprintf(tw, \"%s:\\n\", cmdenv.EscNonPrint(arg))\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tfor _, link := range object.Links {\n-\t\t\t\t\tfmt.Fprintf(tw, \"%s\\n\", link.Name)\n+\t\t\t\t\tfmt.Fprintf(tw, \"%s\\n\", cmdenv.EscNonPrint(link.Name))\n \t\t\t\t}\n \t\t\t}\n \t\t\ttw.Flush()"
        },
        {
          "filename": "test/sharness/t0045-ls.sh",
          "status": "modified",
          "additions": 39,
          "deletions": 29,
          "patch": "@@ -19,6 +19,7 @@ test_ls_cmd() {\n     random 128 42 >testData/d1/128 &&\n     echo \"world\" >testData/d2/a &&\n     random 1024 42 >testData/d2/1024 &&\n+    echo \"badname\" >testData/d2/`echo -e \"bad\\x7fname.txt\"` &&\n     ipfs add -r testData >actual_add\n   '\n \n@@ -28,30 +29,32 @@ added QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe testData/d1/128\n added QmZULkCELmmk5XNfCgTnCyFgAVxBRBXyDHGGMVoLFLiXEN testData/d1/a\n added QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd testData/d2/1024\n added QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL testData/d2/a\n+added QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn testData/d2/bad\\u007fname.txt\n added QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH testData/f1\n added QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M testData/f2\n added QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss testData/d1\n-added QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy testData/d2\n-added QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj testData\n+added Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy testData/d2\n+added QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 testData\n EOF\n     test_cmp expected_add actual_add\n   '\n \n   test_expect_success \"'ipfs ls <three dir hashes>' succeeds\" '\n-    ipfs ls QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls\n+    ipfs ls QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls\n   '\n \n   test_expect_success \"'ipfs ls <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss - d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy - d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy - d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH 5 f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M 5 f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024 1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL 6    a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn 8    bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe 128 128\n@@ -61,20 +64,21 @@ EOF\n   '\n \n   test_expect_success \"'ipfs ls --size=false <three dir hashes>' succeeds\" '\n-    ipfs ls --size=false QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls\n+    ipfs ls --size=false QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls\n   '\n \n   test_expect_success \"'ipfs ls <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe 128\n@@ -84,22 +88,23 @@ EOF\n   '\n \n   test_expect_success \"'ipfs ls --headers <three dir hashes>' succeeds\" '\n-    ipfs ls --headers QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_headers\n+    ipfs ls --headers QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_headers\n   '\n \n   test_expect_success \"'ipfs ls --headers  <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls_headers &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n Hash                                           Size Name\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss -    d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy -    d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy -    d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH 5    f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M 5    f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n Hash                                           Size Name\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024 1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL 6    a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn 8    bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n Hash                                           Size Name\n@@ -110,7 +115,7 @@ EOF\n   '\n \n   test_expect_success \"'ipfs ls --size=false --cid-base=base32 <three dir hashes>' succeeds\" '\n-    ipfs ls --size=false --cid-base=base32 $(cid-fmt -v 1 -b base32 %s QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss) >actual_ls_base32\n+    ipfs ls --size=false --cid-base=base32 $(cid-fmt -v 1 -b base32 %s QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss) >actual_ls_base32\n   '\n \n   test_expect_success \"'ipfs ls --size=false --cid-base=base32 <three dir hashes>' output looks good\" '\n@@ -130,6 +135,7 @@ test_ls_cmd_streaming() {\n     random 128 42 >testData/d1/128 &&\n     echo \"world\" >testData/d2/a &&\n     random 1024 42 >testData/d2/1024 &&\n+    echo \"badname\" >testData/d2/`echo -e \"bad\\x7fname.txt\"` &&\n     ipfs add -r testData >actual_add\n   '\n \n@@ -139,30 +145,32 @@ added QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe testData/d1/128\n added QmZULkCELmmk5XNfCgTnCyFgAVxBRBXyDHGGMVoLFLiXEN testData/d1/a\n added QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd testData/d2/1024\n added QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL testData/d2/a\n+added QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn testData/d2/bad\\u007fname.txt\n added QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH testData/f1\n added QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M testData/f2\n added QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss testData/d1\n-added QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy testData/d2\n-added QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj testData\n+added Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy testData/d2\n+added QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 testData\n EOF\n     test_cmp expected_add actual_add\n   '\n \n   test_expect_success \"'ipfs ls --stream <three dir hashes>' succeeds\" '\n-    ipfs ls --stream QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream\n+    ipfs ls --stream QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream\n   '\n \n   test_expect_success \"'ipfs ls --stream <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls_stream &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss -         d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy -         d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy -         d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH 5         f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M 5         f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024      1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL 6         a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn 8         bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe 128       128\n@@ -172,20 +180,21 @@ EOF\n   '\n \n   test_expect_success \"'ipfs ls --size=false --stream <three dir hashes>' succeeds\" '\n-    ipfs ls --size=false --stream QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream\n+    ipfs ls --size=false --stream QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream\n   '\n \n   test_expect_success \"'ipfs ls --size=false --stream <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls_stream &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n QmQNd6ubRXaNG6Prov8o6vk3bn6eWsj9FxLGrAVDUAGkGe 128\n@@ -195,22 +204,23 @@ EOF\n   '\n \n   test_expect_success \"'ipfs ls --stream --headers <three dir hashes>' succeeds\" '\n-    ipfs ls --stream --headers QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream_headers\n+    ipfs ls --stream --headers QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21 Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss >actual_ls_stream_headers\n   '\n \n   test_expect_success \"'ipfs ls --stream --headers  <three dir hashes>' output looks good\" '\n     cat <<-\\EOF >expected_ls_stream_headers &&\n-QmfNy183bXiRVyrhyWtq3TwHn79yHEkiAGFr18P7YNzESj:\n+QmRPX2PWaPGqzoVzqNcQkueijHVzPicjupnD7eLck6Rs21:\n Hash                                           Size      Name\n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss -         d1/\n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy -         d2/\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy -         d2/\n QmeomffUNfmQy76CQGy9NdmqEnnHU9soCexBnGU3ezPHVH 5         f1\n QmNtocSs7MoDkJMc1RkyisCSKvLadujPsfJfSdJ3e1eA1M 5         f2\n \n-QmR3jhV4XpxxPjPT3Y8vNnWvWNvakdcT3H6vqpRBsX1MLy:\n+Qmf9nCpkCfa8Gtz5m1NJMeHBWcBozKRcbdom338LukPAjy:\n Hash                                           Size      Name\n QmbQBUSRL9raZtNXfpTDeaxQapibJEG6qEY8WqAN22aUzd 1024      1024\n QmaRGe7bVmVaLmxbrMiVNXqW4pRNNp3xq7hFtyRKA3mtJL 6         a\n+QmQSLRRd1Lxn6NMsWmmj2g9W3LtSRfmVAVqU3ShneLUrbn 8         bad\\u007fname.txt\n \n QmSix55yz8CzWXf5ZVM9vgEvijnEeeXiTSarVtsqiiCJss:\n Hash                                           Size      Name"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 7,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5f8dd91c3c2f8f25c8ebf3da85e78937a186ec17",
            "date": "2025-01-13T23:36:54Z",
            "author_login": "lidel"
          },
          {
            "sha": "3b098b969af9aa7e9904ec1e6428dd96384e6fa6",
            "date": "2025-01-10T21:34:56Z",
            "author_login": "lidel"
          },
          {
            "sha": "7383e1ecbb41d91c3ac14e681d560c3a2702ebd2",
            "date": "2025-01-07T02:17:39Z",
            "author_login": "gammazero"
          },
          {
            "sha": "b7cc47aef5ee95ff1a45aedc76a176d5f6008a71",
            "date": "2025-01-04T00:37:18Z",
            "author_login": "gammazero"
          },
          {
            "sha": "016c2a7d16bf5876ab96315804880ef82c019926",
            "date": "2025-01-03T11:58:27Z",
            "author_login": "hsanjuan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:H/A:N",
    "cwe_id": "CWE-116",
    "description": "go-ipfs is an open-source golang implementation of IPFS which is a global, versioned, peer-to-peer filesystem. In go-ipfs before version 0.8.0, control characters are not escaped from console output. This can result in hiding input from the user which could result in the user taking an unknown, malicious action. This is fixed in version 0.8.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-24T21:15:11.163",
    "last_modified": "2024-11-21T05:19:45.257",
    "fix_date": "2021-01-14T18:00:51Z"
  },
  "references": [
    {
      "url": "https://github.com/ipfs/go-ipfs/commit/fb0a9acd2d8288bd1028c3219a420de62a09683a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipfs/go-ipfs/pull/7831",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-r4gv-vj59-cccm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipfs/go-ipfs/commit/fb0a9acd2d8288bd1028c3219a420de62a09683a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipfs/go-ipfs/pull/7831",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipfs/go-ipfs/security/advisories/GHSA-r4gv-vj59-cccm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.861003",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "kubo",
    "owner": "ipfs",
    "created_at": "2014-06-26T08:14:34Z",
    "updated_at": "2025-01-13T23:37:01Z",
    "pushed_at": "2025-01-14T00:57:14Z",
    "size": 56335,
    "stars": 16281,
    "forks": 3038,
    "open_issues": 1157,
    "watchers": 16281,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "bifrost-bitswap-cache-wantlist",
      "bifrost-deadlock-detection",
      "bifrost-delegated-routing-deadlock",
      "bifrost-docker",
      "bifrost-exp",
      "bifrost-issue8381",
      "bifrost-tracing",
      "bifrost-v0.9.1-firstblock"
    ],
    "languages": {
      "Go": 1707653,
      "Shell": 536393,
      "Makefile": 20291,
      "Dockerfile": 4848,
      "Python": 770,
      "PureBasic": 29
    },
    "commit_activity": {
      "total_commits_last_year": 322,
      "avg_commits_per_week": 6.1923076923076925,
      "days_active_last_year": 104
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T20:48:54.685966"
  }
}