{
  "cve_id": "CVE-2020-26288",
  "github_data": {
    "repository": "parse-community/parse-server",
    "fix_commit": "da905a357d062ab4fea727a21eac231acc2ed92a",
    "related_commits": [
      "da905a357d062ab4fea727a21eac231acc2ed92a",
      "da905a357d062ab4fea727a21eac231acc2ed92a"
    ],
    "patch_url": "https://github.com/parse-community/parse-server/commit/da905a357d062ab4fea727a21eac231acc2ed92a.patch",
    "fix_commit_details": {
      "sha": "da905a357d062ab4fea727a21eac231acc2ed92a",
      "commit_date": "2020-12-02T21:08:02Z",
      "author": {
        "login": "davimacedo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-4w46-w44m-3jq3",
        "length": 278,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 47,
        "additions": 47,
        "deletions": 0
      },
      "files": [
        {
          "filename": "spec/LdapAuth.spec.js",
          "status": "modified",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -211,3 +211,49 @@ it('Should fail if the LDAP server encounters an error while searching', done =>\n       .finally(() => server.close());\n   });\n });\n+\n+it('Should delete the password from authData after validation', done => {\n+  mockLdapServer(port, 'uid=testuser, o=example', true).then(server => {\n+    const options = {\n+      suffix: 'o=example',\n+      url: `ldap://localhost:${port}`,\n+      dn: 'uid={{id}}, o=example'\n+    };\n+\n+    const authData = { id: 'testuser', password: 'secret' };\n+\n+    ldap\n+      .validateAuthData(authData, options)\n+      .then(() => {\n+        expect(authData).toEqual({ id: 'testuser' });\n+        done();\n+      })\n+      .catch(done.fail)\n+      .finally(() => server.close());\n+  });\n+});\n+\n+it('Should not save the password in the user record after authentication', done => {\n+  mockLdapServer(port, 'uid=testuser, o=example', true).then(server => {\n+    const options = {\n+      suffix: 'o=example',\n+      url: `ldap://localhost:${port}`,\n+      dn: 'uid={{id}}, o=example'\n+    };\n+    reconfigureServer({ auth: { ldap: options } }).then(() => {\n+      const authData = { authData: { id: 'testuser', password: 'secret' } };\n+      Parse.User.logInWith('ldap', authData).then((returnedUser) => {\n+        const query = new Parse.Query(\"User\");\n+        query\n+          .equalTo('objectId', returnedUser.id).first({ useMasterKey: true })\n+          .then((user) => {\n+            expect(user.get('authData')).toEqual({ ldap:{ id: 'testuser' }});\n+            expect(user.get('authData').ldap.password).toBeUndefined();\n+            done();\n+          })\n+          .catch(done.fail)\n+          .finally(() => server.close())\n+      })\n+    });\n+  });\n+});"
        },
        {
          "filename": "src/Adapters/Auth/ldap.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -23,6 +23,7 @@ function validateAuthData(authData, options) {\n \n   return new Promise((resolve, reject) => {\n     client.bind(userCn, authData.password, ldapError => {\n+      delete(authData.password);\n       if (ldapError) {\n         let error;\n         switch (ldapError.code) {"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ad0a7bc0ba1823ada299a6476402420fdc4c4467",
            "date": "2025-01-14T18:51:58Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "28b3edee4e76679dedee9fe115283110fd952678",
            "date": "2025-01-13T15:19:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "1b61cab81c4206ce135f1239f17a53dabbc698d7",
            "date": "2025-01-13T14:47:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "a0efad88d2177f027ee3709beba13282a6ca9d35",
            "date": "2025-01-12T20:55:48Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bb1daafef0f5f0b6a9c9b33c9d7e0529fd49afbf",
            "date": "2025-01-12T18:53:43Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-312",
    "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. It is an npm package \"parse-server\". In Parse Server before version 4.5.0, user passwords involved in LDAP authentication are stored in cleartext. This is fixed in version 4.5.0 by stripping password after authentication to prevent cleartext password storage.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-30T20:15:15.267",
    "last_modified": "2024-11-21T05:19:46.160",
    "fix_date": "2020-12-02T21:08:02Z"
  },
  "references": [
    {
      "url": "https://github.com/parse-community/parse-server/commit/da905a357d062ab4fea727a21eac231acc2ed92a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.5.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-4w46-w44m-3jq3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/parse-server",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/commit/da905a357d062ab4fea727a21eac231acc2ed92a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.5.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-4w46-w44m-3jq3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/parse-server",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.553607",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-server",
    "owner": "parse-community",
    "created_at": "2016-01-28T18:29:14Z",
    "updated_at": "2025-01-13T16:51:06Z",
    "pushed_at": "2025-01-14T11:16:34Z",
    "size": 73208,
    "stars": 20994,
    "forks": 4781,
    "open_issues": 474,
    "watchers": 20994,
    "has_security_policy": false,
    "default_branch": "alpha",
    "protected_branches": [
      "alpha",
      "beta",
      "release",
      "release-4.x.x",
      "release-5.x.x",
      "release-6.x.x",
      "release-7.x.x"
    ],
    "languages": {
      "JavaScript": 4248231,
      "HTML": 25876,
      "Shell": 7825,
      "Handlebars": 2113,
      "Dockerfile": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:26:59.166995"
  }
}