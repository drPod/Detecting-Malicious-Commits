{
  "cve_id": "CVE-2020-26289",
  "github_data": {
    "repository": "knowledgecode/date-and-time",
    "fix_commit": "9e4b501eacddccc8b1f559fb414f48472ee17c2a",
    "related_commits": [
      "9e4b501eacddccc8b1f559fb414f48472ee17c2a",
      "9e4b501eacddccc8b1f559fb414f48472ee17c2a"
    ],
    "patch_url": "https://github.com/knowledgecode/date-and-time/commit/9e4b501eacddccc8b1f559fb414f48472ee17c2a.patch",
    "fix_commit_details": {
      "sha": "9e4b501eacddccc8b1f559fb414f48472ee17c2a",
      "commit_date": "2020-12-24T12:05:20Z",
      "author": {
        "login": "knowledgecode",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed regular expression denial of service (ReDoS) vulnerability",
        "length": 64,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 16,
        "additions": 8,
        "deletions": 8
      },
      "files": [
        {
          "filename": "date-and-time.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -136,7 +136,7 @@\n      * @returns {Array.<string>} a compiled object\n      */\n     date.compile = function (formatString) {\n-        var re = /\\[([^\\[\\]]*|\\[[^\\[\\]]*\\])*\\]|([A-Za-z])\\2+|\\.{3}|./g, keys, pattern = [formatString];\n+        var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g, keys, pattern = [formatString];\n \n         while ((keys = re.exec(formatString))) {\n             pattern[pattern.length] = keys[0];"
        },
        {
          "filename": "date-and-time.min.js",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -7,10 +7,10 @@ h:function(a){return\"\"+(a.getHours()%12||12)},mm:function(a){return(\"0\"+a.getMin\n dd:function(a){return this.res.dd[a.getDay()]},Z:function(a){return a.utc?\"+0000\":/[\\+-]\\d{4}/.exec(a.toTimeString())[0]},post:function(a){return a}},x={YYYY:function(a){return this.exec(/^\\d{4}/,a)},Y:function(a){return this.exec(/^\\d{1,4}/,a)},MMMM:function(a){a=this.find(this.res.MMMM,a);a.value++;return a},MMM:function(a){a=this.find(this.res.MMM,a);a.value++;return a},MM:function(a){return this.exec(/^\\d\\d/,a)},M:function(a){return this.exec(/^\\d\\d?/,a)},DD:function(a){return this.exec(/^\\d\\d/,\n a)},D:function(a){return this.exec(/^\\d\\d?/,a)},HH:function(a){return this.exec(/^\\d\\d/,a)},H:function(a){return this.exec(/^\\d\\d?/,a)},A:function(a){return this.find(this.res.A,a)},hh:function(a){return this.exec(/^\\d\\d/,a)},h:function(a){return this.exec(/^\\d\\d?/,a)},mm:function(a){return this.exec(/^\\d\\d/,a)},m:function(a){return this.exec(/^\\d\\d?/,a)},ss:function(a){return this.exec(/^\\d\\d/,a)},s:function(a){return this.exec(/^\\d\\d?/,a)},SSS:function(a){return this.exec(/^\\d{1,3}/,a)},SS:function(a){a=\n this.exec(/^\\d\\d?/,a);a.value*=10;return a},S:function(a){a=this.exec(/^\\d/,a);a.value*=100;return a},Z:function(a){a=this.exec(/^[\\+-]\\d{2}[0-5]\\d/,a);a.value=-60*(a.value/100|0)-a.value%100;return a},h12:function(a,c){return(12===a?0:a)+12*c},exec:function(a,c){var b=(a.exec(c)||[\"\"])[0];return{value:b|0,length:b.length}},find:function(a,c){for(var b=-1,e=0,g=0,h=a.length,f;g<h;g++)f=a[g],!c.indexOf(f)&&f.length>e&&(b=g,e=f.length);return{value:b,length:e}},pre:function(a){return a}},u=function(a,\n-c,b){var e=function(h,f,l){var p=function(n){n&&(this.res=n)};p.prototype=h;p.prototype.constructor=p;h=new p(l);for(var k in f||{})l=f[k],h[k]=l.slice?l.slice():l;return h},g={res:e(c.res,b.res)};g.formatter=e(c.formatter,b.formatter,g.res);g.parser=e(c.parser,b.parser,g.res);t[a]=g};d.compile=function(a){for(var c=/\\[([^\\[\\]]*|\\[[^\\[\\]]*\\])*\\]|([A-Za-z])\\2+|\\.{3}|./g,b,e=[a];b=c.exec(a);)e[e.length]=b[0];return e};d.format=function(a,c,b){c=\"string\"===typeof c?d.compile(c):c;a=d.addMinutes(a,b?\n-a.getTimezoneOffset():0);var e=t[m].formatter,g=\"\";a.utc=b||!1;b=1;for(var h=c.length,f;b<h;b++)f=c[b],g+=e[f]?e.post(e[f](a,c[0])):f.replace(/\\[(.*)]/,\"$1\");return g};d.preparse=function(a,c){var b=\"string\"===typeof c?d.compile(c):c,e={Y:1970,M:1,D:1,H:0,A:0,h:0,m:0,s:0,S:0,Z:0,_index:0,_length:0,_match:0},g=/\\[(.*)]/,h=t[m].parser,f=0;a=h.pre(a);for(var l=1,p=b.length,k,n;l<p;l++)if(k=b[l],h[k]){n=h[k](a.slice(f),b[0]);if(!n.length)break;f+=n.length;e[k.charAt(0)]=n.value;e._match++}else if(k===\n-a.charAt(f)||\" \"===k)f++;else if(g.test(k)&&!a.slice(f).indexOf(g.exec(k)[1]))f+=k.length-2;else{\"...\"===k&&(f=a.length);break}e.H=e.H||h.h12(e.h,e.A);e._index=f;e._length=a.length;return e};d.isValid=function(a,c){var b=\"string\"===typeof a?d.preparse(a,c):a,e=[31,28+d.isLeapYear(b.Y)|0,31,30,31,30,31,31,30,31,30,31][b.M-1];return!(1>b._index||1>b._length||b._index-b._length||1>b._match||1>b.Y||9999<b.Y||1>b.M||12<b.M||1>b.D||b.D>e||0>b.H||23<b.H||0>b.m||59<b.m||0>b.s||59<b.s||0>b.S||999<b.S||-720>\n-b.Z||840<b.Z)};d.parse=function(a,c,b){a=d.preparse(a,c);return d.isValid(a)?(a.M-=100>a.Y?22801:1,b||a.Z?new Date(Date.UTC(a.Y,a.M,a.D,a.H,a.m+a.Z,a.s,a.S)):new Date(a.Y,a.M,a.D,a.H,a.m,a.s,a.S)):new Date(NaN)};d.transform=function(a,c,b,e){return d.format(d.parse(a,c),b,e)};d.addYears=function(a,c){return d.addMonths(a,12*c)};d.addMonths=function(a,c){var b=new Date(a.getTime());b.setMonth(b.getMonth()+c);return b};d.addDays=function(a,c){var b=new Date(a.getTime());b.setDate(b.getDate()+c);return b};\n-d.addHours=function(a,c){return d.addMinutes(a,60*c)};d.addMinutes=function(a,c){return d.addSeconds(a,60*c)};d.addSeconds=function(a,c){return d.addMilliseconds(a,1E3*c)};d.addMilliseconds=function(a,c){return new Date(a.getTime()+c)};d.subtract=function(a,c){var b=a.getTime()-c.getTime();return{toMilliseconds:function(){return b},toSeconds:function(){return b/1E3},toMinutes:function(){return b/6E4},toHours:function(){return b/36E5},toDays:function(){return b/864E5}}};d.isLeapYear=function(a){return!(a%\n-4)&&!!(a%100)||!(a%400)};d.isSameDay=function(a,c){return a.toDateString()===c.toDateString()};d.locale=function(a,c){c?u(a,{res:v,formatter:w,parser:x},c):\"function\"===typeof a?m=a(d):a&&(q&&!q.date&&console.warn(\"This method of changing the locale is deprecated. See documentation for details.\"),m=a);return m};d.extend=function(a){var c=a.extender||{},b;for(b in c)d[b]||(d[b]=c[b]);(a.formatter||a.parser||a.res)&&u(m,t[m],a)};d.plugin=function(a,c){\"function\"===typeof a?d.extend(r[a(d)]):(r[a]=r[a]||\n-c,!c&&r[a]&&(d.extend(r[a]),q&&!q.date&&console.warn(\"This method of applying plugins is deprecated. See documentation for details.\")))};d.locale(m,{});\"object\"===typeof module&&\"object\"===typeof module.exports?module.exports=d:\"function\"===typeof define&&define.amd?define([],function(){return d}):q.date=d})(this);\n+c,b){var e=function(h,f,l){var p=function(n){n&&(this.res=n)};p.prototype=h;p.prototype.constructor=p;h=new p(l);for(var k in f||{})l=f[k],h[k]=l.slice?l.slice():l;return h},g={res:e(c.res,b.res)};g.formatter=e(c.formatter,b.formatter,g.res);g.parser=e(c.parser,b.parser,g.res);t[a]=g};d.compile=function(a){for(var c=/\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g,b,e=[a];b=c.exec(a);)e[e.length]=b[0];return e};d.format=function(a,c,b){c=\"string\"===typeof c?d.compile(c):c;a=d.addMinutes(a,b?a.getTimezoneOffset():\n+0);var e=t[m].formatter,g=\"\";a.utc=b||!1;b=1;for(var h=c.length,f;b<h;b++)f=c[b],g+=e[f]?e.post(e[f](a,c[0])):f.replace(/\\[(.*)]/,\"$1\");return g};d.preparse=function(a,c){var b=\"string\"===typeof c?d.compile(c):c,e={Y:1970,M:1,D:1,H:0,A:0,h:0,m:0,s:0,S:0,Z:0,_index:0,_length:0,_match:0},g=/\\[(.*)]/,h=t[m].parser,f=0;a=h.pre(a);for(var l=1,p=b.length,k,n;l<p;l++)if(k=b[l],h[k]){n=h[k](a.slice(f),b[0]);if(!n.length)break;f+=n.length;e[k.charAt(0)]=n.value;e._match++}else if(k===a.charAt(f)||\" \"===k)f++;\n+else if(g.test(k)&&!a.slice(f).indexOf(g.exec(k)[1]))f+=k.length-2;else{\"...\"===k&&(f=a.length);break}e.H=e.H||h.h12(e.h,e.A);e._index=f;e._length=a.length;return e};d.isValid=function(a,c){var b=\"string\"===typeof a?d.preparse(a,c):a,e=[31,28+d.isLeapYear(b.Y)|0,31,30,31,30,31,31,30,31,30,31][b.M-1];return!(1>b._index||1>b._length||b._index-b._length||1>b._match||1>b.Y||9999<b.Y||1>b.M||12<b.M||1>b.D||b.D>e||0>b.H||23<b.H||0>b.m||59<b.m||0>b.s||59<b.s||0>b.S||999<b.S||-720>b.Z||840<b.Z)};d.parse=\n+function(a,c,b){a=d.preparse(a,c);return d.isValid(a)?(a.M-=100>a.Y?22801:1,b||a.Z?new Date(Date.UTC(a.Y,a.M,a.D,a.H,a.m+a.Z,a.s,a.S)):new Date(a.Y,a.M,a.D,a.H,a.m,a.s,a.S)):new Date(NaN)};d.transform=function(a,c,b,e){return d.format(d.parse(a,c),b,e)};d.addYears=function(a,c){return d.addMonths(a,12*c)};d.addMonths=function(a,c){var b=new Date(a.getTime());b.setMonth(b.getMonth()+c);return b};d.addDays=function(a,c){var b=new Date(a.getTime());b.setDate(b.getDate()+c);return b};d.addHours=function(a,\n+c){return d.addMinutes(a,60*c)};d.addMinutes=function(a,c){return d.addSeconds(a,60*c)};d.addSeconds=function(a,c){return d.addMilliseconds(a,1E3*c)};d.addMilliseconds=function(a,c){return new Date(a.getTime()+c)};d.subtract=function(a,c){var b=a.getTime()-c.getTime();return{toMilliseconds:function(){return b},toSeconds:function(){return b/1E3},toMinutes:function(){return b/6E4},toHours:function(){return b/36E5},toDays:function(){return b/864E5}}};d.isLeapYear=function(a){return!(a%4)&&!!(a%100)||\n+!(a%400)};d.isSameDay=function(a,c){return a.toDateString()===c.toDateString()};d.locale=function(a,c){c?u(a,{res:v,formatter:w,parser:x},c):\"function\"===typeof a?m=a(d):a&&(q&&!q.date&&console.warn(\"This method of changing the locale is deprecated. See documentation for details.\"),m=a);return m};d.extend=function(a){var c=a.extender||{},b;for(b in c)d[b]||(d[b]=c[b]);(a.formatter||a.parser||a.res)&&u(m,t[m],a)};d.plugin=function(a,c){\"function\"===typeof a?d.extend(r[a(d)]):(r[a]=r[a]||c,!c&&r[a]&&\n+(d.extend(r[a]),q&&!q.date&&console.warn(\"This method of applying plugins is deprecated. See documentation for details.\")))};d.locale(m,{});\"object\"===typeof module&&\"object\"===typeof module.exports?module.exports=d:\"function\"===typeof define&&define.amd?define([],function(){return d}):q.date=d})(this);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4fadb3caaf98e8f7f1be41143e000d7c7e0831e4",
            "date": "2024-09-28T08:18:04Z",
            "author_login": "knowledgecode"
          },
          {
            "sha": "1f84db9a93fde54087b9f588f91fb38a4d4e27c6",
            "date": "2024-09-28T08:16:59Z",
            "author_login": "knowledgecode"
          },
          {
            "sha": "11dc1a2859c750bc5f389b176d80cc8285ed6e14",
            "date": "2024-09-28T08:16:26Z",
            "author_login": "knowledgecode"
          },
          {
            "sha": "1fa4d04306a8434e00311b00b7ad92559cb93260",
            "date": "2024-09-28T08:16:01Z",
            "author_login": "knowledgecode"
          },
          {
            "sha": "f03823bf86f6b8e8bb68f8d9dd3b459f61bc43d2",
            "date": "2024-09-28T06:12:35Z",
            "author_login": "knowledgecode"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "date-and-time is an npm package for manipulating date and time. In date-and-time before version 0.14.2, there a regular expression involved in parsing which can be exploited to to cause a denial of service. This is fixed in version 0.14.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-28T19:15:12.907",
    "last_modified": "2024-11-21T05:19:46.337",
    "fix_date": "2020-12-24T12:05:20Z"
  },
  "references": [
    {
      "url": "https://github.com/knowledgecode/date-and-time/commit/9e4b501eacddccc8b1f559fb414f48472ee17c2a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/knowledgecode/date-and-time/security/advisories/GHSA-r92x-f52r-x54g",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/date-and-time",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/knowledgecode/date-and-time/commit/9e4b501eacddccc8b1f559fb414f48472ee17c2a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/knowledgecode/date-and-time/security/advisories/GHSA-r92x-f52r-x54g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/date-and-time",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.546440",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "date-and-time",
    "owner": "knowledgecode",
    "created_at": "2014-12-20T09:10:32Z",
    "updated_at": "2024-12-23T06:42:20Z",
    "pushed_at": "2024-09-28T08:21:29Z",
    "size": 1597,
    "stars": 186,
    "forks": 42,
    "open_issues": 0,
    "watchers": 186,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 1181851,
      "TypeScript": 10348,
      "Shell": 2605
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:57:08.043364"
  }
}