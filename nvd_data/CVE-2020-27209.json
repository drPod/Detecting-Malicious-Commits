{
  "cve_id": "CVE-2020-27209",
  "github_data": {
    "repository": "kmackay/micro-ecc",
    "fix_commit": "1b5f5cea5145c96dd8791b9b2c41424fc74c2172",
    "related_commits": [
      "1b5f5cea5145c96dd8791b9b2c41424fc74c2172",
      "1b5f5cea5145c96dd8791b9b2c41424fc74c2172"
    ],
    "patch_url": "https://github.com/kmackay/micro-ecc/commit/1b5f5cea5145c96dd8791b9b2c41424fc74c2172.patch",
    "fix_commit_details": {
      "sha": "1b5f5cea5145c96dd8791b9b2c41424fc74c2172",
      "commit_date": "2020-10-07T17:47:40Z",
      "author": {
        "login": "kmackay",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix for #168",
        "length": 12,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 17,
        "additions": 13,
        "deletions": 4
      },
      "files": [
        {
          "filename": "uECC.c",
          "status": "modified",
          "additions": 13,
          "deletions": 4,
          "patch": "@@ -1210,7 +1210,7 @@ static void bits2int(uECC_word_t *native,\n     bcopy((uint8_t *) native, bits, bits_size);\n #else\n     uECC_vli_bytesToNative(native, bits, bits_size);\n-#endif    \n+#endif\n     if (bits_size * 8 <= (unsigned)curve->num_n_bits) {\n         return;\n     }\n@@ -1239,6 +1239,7 @@ static int uECC_sign_with_k(const uint8_t *private_key,\n     uECC_word_t tmp[uECC_MAX_WORDS];\n     uECC_word_t s[uECC_MAX_WORDS];\n     uECC_word_t *k2[2] = {tmp, s};\n+    uECC_word_t *initial_Z = 0;\n #if uECC_VLI_NATIVE_LITTLE_ENDIAN\n     uECC_word_t *p = (uECC_word_t *)signature;\n #else\n@@ -1255,7 +1256,15 @@ static int uECC_sign_with_k(const uint8_t *private_key,\n     }\n \n     carry = regularize_k(k, tmp, s, curve);\n-    EccPoint_mult(p, curve->G, k2[!carry], 0, num_n_bits + 1, curve);\n+    /* If an RNG function was specified, try to get a random initial Z value to improve\n+       protection against side-channel attacks. */\n+    if (g_rng_function) {\n+        if (!uECC_generate_random_int(k2[carry], curve->p, num_words)) {\n+            return 0;\n+        }\n+        initial_Z = k2[carry];\n+    }\n+    EccPoint_mult(p, curve->G, k2[!carry], initial_Z, num_n_bits + 1, curve);\n     if (uECC_vli_isZero(p, num_words)) {\n         return 0;\n     }\n@@ -1299,7 +1308,7 @@ static int uECC_sign_with_k(const uint8_t *private_key,\n     bcopy((uint8_t *) signature + curve->num_bytes, (uint8_t *) s, curve->num_bytes);\n #else\n     uECC_vli_nativeToBytes(signature + curve->num_bytes, curve->num_bytes, s);\n-#endif    \n+#endif\n     return 1;\n }\n \n@@ -1472,7 +1481,7 @@ int uECC_verify(const uint8_t *public_key,\n     uECC_word_t *_public = (uECC_word_t *)public_key;\n #else\n     uECC_word_t _public[uECC_MAX_WORDS * 2];\n-#endif    \n+#endif\n     uECC_word_t r[uECC_MAX_WORDS], s[uECC_MAX_WORDS];\n     wordcount_t num_words = curve->num_words;\n     wordcount_t num_n_words = BITS_TO_WORDS(curve->num_n_bits);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "541b3a78026420a3e369c4c9281c396b5e531113",
            "date": "2024-11-14T03:34:49Z",
            "author_login": "kmackay"
          },
          {
            "sha": "a24112de66c2118dcaec89d4e651d1d3eeb181f7",
            "date": "2024-11-12T16:44:34Z",
            "author_login": "kmackay"
          },
          {
            "sha": "fe8ed90abc356347378eb25e2586e90df7be015a",
            "date": "2023-04-20T16:20:24Z",
            "author_login": "kmackay"
          },
          {
            "sha": "a029d90af014078a5a58c27e6063abe16b289243",
            "date": "2023-04-19T15:17:51Z",
            "author_login": "Prabhuk"
          },
          {
            "sha": "13721361f72877decb07cc7747b7a104dbdb0656",
            "date": "2023-03-23T02:48:39Z",
            "author_login": "kmackay"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": null,
    "description": "The ECDSA operation of the micro-ecc library 1.0 is vulnerable to simple power analysis attacks which allows an adversary to extract the private ECC key.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-20T21:15:07.653",
    "last_modified": "2024-11-21T05:20:51.677",
    "fix_date": "2020-10-07T17:47:40Z"
  },
  "references": [
    {
      "url": "https://eprint.iacr.org/2021/640",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kmackay/micro-ecc/commit/1b5f5cea5145c96dd8791b9b2c41424fc74c2172",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kmackay/micro-ecc/releases",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aisec.fraunhofer.de/de/das-institut/wissenschaftliche-exzellenz/security-and-trust-in-open-source-security-tokens.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aisec.fraunhofer.de/en/FirmwareProtection.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://eprint.iacr.org/2021/640",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kmackay/micro-ecc/commit/1b5f5cea5145c96dd8791b9b2c41424fc74c2172",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kmackay/micro-ecc/releases",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aisec.fraunhofer.de/de/das-institut/wissenschaftliche-exzellenz/security-and-trust-in-open-source-security-tokens.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aisec.fraunhofer.de/en/FirmwareProtection.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.113591",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "micro-ecc",
    "owner": "kmackay",
    "created_at": "2013-05-05T16:29:20Z",
    "updated_at": "2025-01-14T09:42:16Z",
    "pushed_at": "2024-11-14T03:34:49Z",
    "size": 670,
    "stars": 1276,
    "forks": 463,
    "open_issues": 57,
    "watchers": 1276,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 930168,
      "Pawn": 151052,
      "C++": 113949,
      "C": 106393,
      "Python": 36832
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-14T19:45:21.404439"
  }
}