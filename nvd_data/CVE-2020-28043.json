{
  "cve_id": "CVE-2020-28043",
  "github_data": {
    "repository": "MISP/MISP",
    "fix_commit": "6e81c8ee8ad19576c055b5c4773f914b918f32be",
    "related_commits": [
      "6e81c8ee8ad19576c055b5c4773f914b918f32be",
      "6e81c8ee8ad19576c055b5c4773f914b918f32be"
    ],
    "patch_url": "https://github.com/MISP/MISP/commit/6e81c8ee8ad19576c055b5c4773f914b918f32be.patch",
    "fix_commit_details": {
      "sha": "6e81c8ee8ad19576c055b5c4773f914b918f32be",
      "commit_date": "2020-10-30T23:22:27Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": {
          "total_commits": 9407,
          "average_weekly_commits": 13.692867540029113,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "fix: [security] SSRF fixed in the rest client",
        "length": 642,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 21,
        "deletions": 3
      },
      "files": [
        {
          "filename": "app/Controller/ServersController.php",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -2002,17 +2002,17 @@ private function __doRestQuery($request, &$curl = false, &$python = false)\n             'body' => empty($request['body']) ? '' : $request['body'],\n             'url' => $request['url'],\n             'http_method' => $request['method'],\n-            'use_full_path' => $request['use_full_path'],\n+            'use_full_path' => empty($request['use_full_path']) ? false : $request['use_full_path'],\n             'show_result' => $request['show_result'],\n             'skip_ssl' => $request['skip_ssl_validation'],\n             'bookmark' => $request['bookmark'],\n             'bookmark_name' => $request['name'],\n             'timestamp' => $date->getTimestamp()\n         );\n         if (!empty($request['url'])) {\n-            if (empty($request['use_full_path'])) {\n+            if (empty($request['use_full_path']) || empty(Configure::read('Security.rest_client_enable_arbitrary_urls'))) {\n                 $path = preg_replace('#^(://|[^/?])+#', '', $request['url']);\n-                $url = Configure::read('MISP.baseurl') . $path;\n+                $url = empty(Configure::read('Security.rest_client_baseurl')) ? (Configure::read('MISP.baseurl') . $path) : (Configure::read('Security.rest_client_baseurl') . $path);\n                 unset($request['url']);\n             } else {\n                 $url = $request['url'];\n@@ -2082,6 +2082,7 @@ private function __doRestQuery($request, &$curl = false, &$python = false)\n         }\n         $view_data['duration'] = microtime(true) - $start;\n         $view_data['duration'] = round($view_data['duration'] * 1000, 2) . 'ms';\n+        $view_data['url'] = $url;\n         $view_data['code'] =  $response->code;\n         $view_data['headers'] = $response->headers;\n         if (!empty($request['show_result'])) {"
        },
        {
          "filename": "app/Model/Server.php",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -1279,6 +1279,23 @@ public function __construct($id = false, $table = null, $ds = null)\n                                 'editable' => false,\n                                 'redacted' => true\n                         ),\n+                        'rest_client_enable_arbitrary_urls' => array(\n+                            'level' => 0,\n+                            'description' => __('Enable this setting if you wish for users to be able to query any arbitrary URL via the rest client. Keep in mind that queries are executed by the MISP server, so internal IPs in your MISP\\'s network may be reachable.'),\n+                            'value' => false,\n+                            'errorMessage' => '',\n+                            'test' => 'testBool',\n+                            'type' => 'boolean',\n+                            'null' => true\n+                        ),\n+                        'rest_client_baseurl' => array(\n+                            'level' => 1,\n+                            'description' => __('If left empty, the baseurl of your MISP is used. However, in some instances (such as port-forwarded VM installations) this will not work. You can override the baseurl with a url through which your MISP can reach itself (typically https://127.0.0.1 would work).'),\n+                            'value' => false,\n+                            'errorMessage' => '',\n+                            'test' => null,\n+                            'type' => 'string',\n+                        ),\n                         'syslog' => array(\n                             'level' => 0,\n                             'description' => __('Enable this setting to pass all audit log entries directly to syslog. Keep in mind, this is verbose and will include user, organisation, event data.'),"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1da14f0253b2d853603bfb10e0c2b92aa27ecb6a",
            "date": "2025-01-13T07:57:22Z",
            "author_login": "iglocska"
          },
          {
            "sha": "439433b405ca829f33bf886e788be84c0870b6dc",
            "date": "2025-01-10T16:37:30Z",
            "author_login": "rubentroncon"
          },
          {
            "sha": "cd6d87caa2db4b6bbe65d7cdc2bd8d84bc7f0705",
            "date": "2025-01-10T13:37:21Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "9fd8c3f8d8ba83c31614b8f0614e50be4284147f",
            "date": "2025-01-10T09:35:18Z",
            "author_login": "chrisr3d"
          },
          {
            "sha": "7c23b9d94726723a38cfd48e5f6b2555f75c05fb",
            "date": "2025-01-10T09:43:37Z",
            "author_login": "chrisr3d"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "MISP through 2.4.133 allows SSRF in the REST client via the use_full_path parameter with an arbitrary URL.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-02T21:15:31.400",
    "last_modified": "2024-11-21T05:22:16.120",
    "fix_date": "2020-10-30T23:22:27Z"
  },
  "references": [
    {
      "url": "https://github.com/MISP/MISP/commit/6e81c8ee8ad19576c055b5c4773f914b918f32be",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/MISP/MISP/commit/6e81c8ee8ad19576c055b5c4773f914b918f32be",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.443887",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "MISP",
    "owner": "MISP",
    "created_at": "2013-02-07T17:10:34Z",
    "updated_at": "2025-01-14T10:15:41Z",
    "pushed_at": "2025-01-13T08:23:44Z",
    "size": 158555,
    "stars": 5471,
    "forks": 1421,
    "open_issues": 2637,
    "watchers": 5471,
    "has_security_policy": false,
    "default_branch": "2.5",
    "protected_branches": [
      "2.4",
      "3.x"
    ],
    "languages": {
      "PHP": 9033432,
      "JavaScript": 1901843,
      "Python": 401628,
      "CSS": 156405,
      "Shell": 105142,
      "Perl": 6169,
      "Makefile": 759
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 231
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:59:29.252533"
  }
}