{
  "cve_id": "CVE-2020-28337",
  "github_data": {
    "repository": "microweber/microweber",
    "fix_commit": "777ee9c3e7519eb3672c79ac41066175b2001b50",
    "related_commits": [
      "777ee9c3e7519eb3672c79ac41066175b2001b50",
      "777ee9c3e7519eb3672c79ac41066175b2001b50"
    ],
    "patch_url": "https://github.com/microweber/microweber/commit/777ee9c3e7519eb3672c79ac41066175b2001b50.patch",
    "fix_commit_details": {
      "sha": "777ee9c3e7519eb3672c79ac41066175b2001b50",
      "commit_date": "2020-11-04T09:43:08Z",
      "author": {
        "login": "bobimicroweber",
        "type": "User",
        "stats": {
          "total_commits": 5511,
          "average_weekly_commits": 10.378531073446327,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 156
        }
      },
      "commit_message": {
        "title": "update",
        "length": 6,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 31,
        "additions": 28,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/MicroweberPackages/Utils/Zip/Unzip.php",
          "status": "modified",
          "additions": 27,
          "deletions": 3,
          "patch": "@@ -82,14 +82,19 @@ public function extract($zip_file, $target_dir = null, $preserve_filepath = true\n             }\n \n         } else if (function_exists('gzinflate')) {\n+\n             if (!$files = $this->_list_files()) {\n                 $this->set_error('ZIP folder was empty.');\n-\n                 return false;\n             }\n \n             $file_locations = array();\n             foreach ($files as $file => $trash) {\n+\n+                if (strpos($file,'..') !== false) {\n+                    continue;\n+                }\n+\n                 $dirname = pathinfo($file, PATHINFO_DIRNAME);\n                 $extension = (pathinfo($file, PATHINFO_EXTENSION));\n \n@@ -205,12 +210,17 @@ public function native_unzip($zip_file, $target_dir = null, $preserve_filepath =\n                 $name = dirname($name);\n                 $is_dir_there = $target_dir . $name;\n \n+                if (strpos($is_dir_there,'..') !== false) {\n+                   continue;\n+                }\n+\n                 if ($name != '.') {\n                     $dirs_tree[] = $is_dir_there;\n \n                 }\n \n             }\n+\n             $dirs_tree = array_unique($dirs_tree);\n \n             foreach ($dirs_tree as $item) {\n@@ -238,6 +248,11 @@ public function native_unzip($zip_file, $target_dir = null, $preserve_filepath =\n                     $size = zip_entry_filesize($entry);\n                     $name = zip_entry_name($entry);\n                     $target_file_to_save = normalize_path($target_dir . $name, false);\n+\n+                    if (strpos($target_file_to_save,'..') !== false) {\n+                        continue;\n+                    }\n+\n                     $target_file_to_save_dir = dirname($target_file_to_save);\n                     if(!is_dir($target_file_to_save_dir)){\n                         mkdir_recursive($target_file_to_save_dir);\n@@ -263,8 +278,9 @@ public function native_unzip($zip_file, $target_dir = null, $preserve_filepath =\n                 }\n                 zip_close($archive);\n             }\n-\n-            return $file_locations;\n+            if (!empty($file_locations)) {\n+                $file_locations = array_unique($file_locations);\n+            }\n         }\n \n         return $file_locations;\n@@ -569,6 +585,14 @@ private function _load_files_by_signatures(&$fh, $stop_on_file = false)\n      */\n     private function _extract_file($compressed_file_name, $target_file_name = false, $underscore_case = false)\n     {\n+        if (strpos($target_file_name,'..') !== false) {\n+            return false;\n+        }\n+\n+        if (strpos($compressed_file_name,'..') !== false) {\n+            return false;\n+        }\n+\n         if (!sizeof($this->compressed_list)) {\n             $this->set_debug('Trying to unzip before loading file list... Loading it!');\n             $this->_list_files(false, $compressed_file_name);"
        },
        {
          "filename": "userfiles/modules/admin/backup_v2/css/style.css",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -140,6 +140,7 @@\n     border-radius: 4px;\n     margin-top: 15px;\n     margin-bottom: 15px;\n+    overflow-y: scroll;\n }\n \n .js-export-log:empty {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d4e8c4a13967ac9856c3e1179d4185e59b8d9311",
            "date": "2024-11-26T15:08:46Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "9a701a997a4041f040b00d989b19e446c34419e5",
            "date": "2024-06-26T12:33:18Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "5851e060318fb8065a478df6b63b335b1d3a52c2",
            "date": "2024-06-26T11:34:21Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "7c37d77e617d35cdefdcaf96c7a18a33a9758289",
            "date": "2024-06-26T11:14:53Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "eff6fadcadd749e8f4295bec99bf173d2401f3ac",
            "date": "2024-06-26T11:11:53Z",
            "author_login": "Radanovn"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "A directory traversal issue in the Utils/Unzip module in Microweber through 1.1.20 allows an authenticated attacker to gain remote code execution via the backup restore feature. To exploit the vulnerability, an attacker must have the credentials of an administrative user, upload a maliciously constructed ZIP file with file paths including relative paths (i.e., ../../), move this file into the backup directory, and execute a restore on this file.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-02-15T20:15:12.223",
    "last_modified": "2024-11-21T05:22:36.137",
    "fix_date": "2020-11-04T09:43:08Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/162514/Microweber-CMS-1.1.20-Remote-Code-Execution.html",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/777ee9c3e7519eb3672c79ac41066175b2001b50",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sl1nki.page/advisories/CVE-2020-28337",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sl1nki.page/blog/2021/02/01/microweber-zip-slip",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/162514/Microweber-CMS-1.1.20-Remote-Code-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/777ee9c3e7519eb3672c79ac41066175b2001b50",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sl1nki.page/advisories/CVE-2020-28337",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sl1nki.page/blog/2021/02/01/microweber-zip-slip",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.788890",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "microweber",
    "owner": "microweber",
    "created_at": "2010-10-07T09:04:43Z",
    "updated_at": "2025-01-13T15:04:29Z",
    "pushed_at": "2025-01-14T13:26:48Z",
    "size": 1026007,
    "stars": 3170,
    "forks": 887,
    "open_issues": 360,
    "watchers": 3170,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 12566636,
      "PHP": 11976208,
      "JavaScript": 8696748,
      "CSS": 3597687,
      "SCSS": 2178754,
      "Blade": 1663671,
      "Less": 518400,
      "Hack": 476030,
      "MDX": 387317,
      "Vue": 344860,
      "Ruby": 12504,
      "OCaml": 4815,
      "Dockerfile": 1548,
      "CoffeeScript": 950,
      "Batchfile": 61,
      "Shell": 59,
      "Sass": 1
    },
    "commit_activity": {
      "total_commits_last_year": 1332,
      "avg_commits_per_week": 25.615384615384617,
      "days_active_last_year": 106
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:59:40.368111"
  }
}