{
  "cve_id": "CVE-2020-28441",
  "github_data": {
    "repository": "loge5/conf-cfg-ini",
    "fix_commit": "3a88a6c52c31eb6c0f033369eed40aa168a636ea",
    "related_commits": [
      "3a88a6c52c31eb6c0f033369eed40aa168a636ea",
      "3a88a6c52c31eb6c0f033369eed40aa168a636ea"
    ],
    "patch_url": "https://github.com/loge5/conf-cfg-ini/commit/3a88a6c52c31eb6c0f033369eed40aa168a636ea.patch",
    "fix_commit_details": {
      "sha": "3a88a6c52c31eb6c0f033369eed40aa168a636ea",
      "commit_date": "2020-12-09T16:53:16Z",
      "author": {
        "login": "loge5",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: prevent prototype pollution attack",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 16,
        "additions": 15,
        "deletions": 1
      },
      "files": [
        {
          "filename": "conf-cfg-ini.js",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -35,6 +35,7 @@ Config.prototype.decode = function(data){\n             throw new Error('expecting string but got '+typeof data);\n         }\n     }\n+    var protectedKeys = ['__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__', '__proto__'];\n     var result = {};\n     var currentSection = undefined;\n     var lines = data.split(this.options.lineEnding);\n@@ -51,7 +52,7 @@ Config.prototype.decode = function(data){\n         var newSection = line.match(sectionRegExp);\n         if(newSection !== null){\n             currentSection = newSection[1];\n-            if(typeof result[currentSection] === 'undefined'){\n+            if(typeof result[currentSection] === 'undefined' && !protectedKeys.includes(currentSection)){\n                 result[currentSection] = {};\n             }\n             continue;\n@@ -78,6 +79,9 @@ Config.prototype.decode = function(data){\n         if (typeof this.options.valueIdentifier === 'string') {\n             value = this.valueTrim(value, this.options.valueIdentifier);\n         }\n+        if (protectedKeys.includes(currentSection) || protectedKeys.includes(key)) {\n+            continue;\n+        }\n         if(typeof currentSection === 'undefined'){\n             result[key] = value;\n         } else {"
        },
        {
          "filename": "conf-cfg-ini.spec.js",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -112,6 +112,16 @@ describe('Config', function() {\n         expect(result.Section.foo).to.equal(\"bar\");\n     });\n \n+    it('decode should prevent prototype pollution attacks', function () {\n+        var config = new Config();\n+        config.options.lineEnding = \"\\n\";\n+        config.options.assignIdentifier = \":\";\n+        var result = config.decode(\"[__proto__]\\nfoo:bar\\n\");\n+        should.not.exist(result.__proto__.foo);\n+        result = config.decode(\"[Section]\\n__proto__:bar\\n\");\n+        expect(result.Section.__proto__).to.not.equal(\"bar\");\n+    });\n+\n     it('valueTrim should trim custom chars', function () {\n         var config = new Config();\n         expect(config.valueTrim('\"Te\"s\"t\"', '\"')).to.equal('Te\"s\"t');"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d39b85867e320dce92353173e707f714f19c7ba0",
            "date": "2024-06-17T05:39:11Z",
            "author_login": "loge5"
          },
          {
            "sha": "33908e2663021069d7e671c95249187108876fde",
            "date": "2024-06-16T12:17:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "7487fcb3b82f6adf5601b1656cfc1733f54fd2e6",
            "date": "2022-11-15T07:03:03Z",
            "author_login": "loge5"
          },
          {
            "sha": "73ce862ebfb4f5fc2a103bf3ebe992c6bff40379",
            "date": "2022-02-11T06:56:48Z",
            "author_login": "loge5"
          },
          {
            "sha": "201b5560e4a43ceb2ddc9111e215c0a38fccbbda",
            "date": "2022-02-11T06:55:01Z",
            "author_login": "loge5"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-1321",
    "description": "This affects the package conf-cfg-ini before 1.2.2. If an attacker submits a malicious INI file to an application that parses it with decode, they will pollute the prototype on the application. This can be exploited further depending on the context.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-07-25T14:15:09.270",
    "last_modified": "2024-11-21T05:22:48.643",
    "fix_date": "2020-12-09T16:53:16Z"
  },
  "references": [
    {
      "url": "https://github.com/loge5/conf-cfg-ini/commit/3a88a6c52c31eb6c0f033369eed40aa168a636ea",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-CONFCFGINI-1048973",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/loge5/conf-cfg-ini/commit/3a88a6c52c31eb6c0f033369eed40aa168a636ea",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-CONFCFGINI-1048973",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:11.515262",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "conf-cfg-ini",
    "owner": "loge5",
    "created_at": "2016-08-24T13:22:07Z",
    "updated_at": "2024-06-17T05:39:14Z",
    "pushed_at": "2024-06-17T05:39:17Z",
    "size": 118,
    "stars": 8,
    "forks": 2,
    "open_issues": 0,
    "watchers": 8,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 13680
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:28:58.049699"
  }
}