{
  "cve_id": "CVE-2020-29159",
  "github_data": {
    "repository": "zammad/zammad",
    "fix_commit": "f0462d4c20c2968b52b5dc6a585f26c0409b4fc4",
    "related_commits": [
      "f0462d4c20c2968b52b5dc6a585f26c0409b4fc4",
      "f0462d4c20c2968b52b5dc6a585f26c0409b4fc4"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f0462d4c20c2968b52b5dc6a585f26c0409b4fc4",
      "commit_date": "2020-10-07T12:05:07Z",
      "author": {
        "login": "rolfschmidt",
        "type": "User",
        "stats": {
          "total_commits": 863,
          "average_weekly_commits": 1.289985052316891,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 237
        }
      },
      "commit_message": {
        "title": "Maintenance: Provide allow_signup column to define the signup permissions for roles and disable new permissions by default as signup permission.",
        "length": 144,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 160,
        "additions": 116,
        "deletions": 44
      },
      "files": [
        {
          "filename": "app/models/role.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 6,
          "patch": "@@ -222,13 +222,12 @@ def validate_agent_limit_by_permission(permission)\n   end\n \n   def check_default_at_signup_permissions\n-    all_permissions = Permission.all.pluck(:id)\n-    admin_permissions = Permission.where('name LIKE ? OR name = ?', 'admin%', 'ticket.agent').pluck(:id) # admin.*/ticket.agent permissions\n-    normal_permissions = (all_permissions - admin_permissions) | (admin_permissions - all_permissions) # all other permissions besides admin.*/ticket.agent\n-    return true if default_at_signup != true # means if default_at_signup = false, no need further checks\n-    return true if self.permission_ids.all? { |i| normal_permissions.include? i } # allow user to choose only normal permissions\n+    return true if !default_at_signup\n \n-    raise Exceptions::UnprocessableEntity, 'Cannot set default at signup when role has admin or ticket.agent permissions.'\n+    forbidden_permissions = permissions.reject(&:allow_signup)\n+    return true if forbidden_permissions.blank?\n+\n+    raise Exceptions::UnprocessableEntity, \"Cannot set default at signup when role has #{forbidden_permissions.join(', ')} permissions.\"\n   end\n \n end"
        },
        {
          "filename": "db/migrate/20120101000001_create_base.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -128,11 +128,12 @@ def up\n     add_foreign_key :roles, :users, column: :updated_by_id\n \n     create_table :permissions do |t|\n-      t.string :name,                   limit: 255, null: false\n-      t.string :note,                   limit: 500, null: true\n-      t.string :preferences,            limit: 10_000, null: true\n-      t.boolean :active,                               null: false, default: true\n-      t.timestamps limit: 3, null: false\n+      t.string :name,          limit: 255, null: false\n+      t.string :note,          limit: 500, null: true\n+      t.string :preferences,   limit: 10_000, null: true\n+      t.boolean :active,       null: false, default: true\n+      t.boolean :allow_signup, null: false, default: false\n+      t.timestamps limit: 3,   null: false\n     end\n     add_index :permissions, [:name], unique: true\n "
        },
        {
          "filename": "db/migrate/20201005113317_role_signup_column.rb",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -0,0 +1,31 @@\n+class RoleSignupColumn < ActiveRecord::Migration[5.2]\n+  def change\n+\n+    # return if it's a new setup\n+    return if !Setting.exists?(name: 'system_init_done')\n+\n+    add_column :permissions, :allow_signup, :boolean, null: false, default: false\n+\n+    signup_permissions = [\n+      'user_preferences',\n+      'user_preferences.password',\n+      'user_preferences.notifications',\n+      'user_preferences.access_token',\n+      'user_preferences.language',\n+      'user_preferences.linked_accounts',\n+      'user_preferences.device',\n+      'user_preferences.avatar',\n+      'user_preferences.calendar',\n+      'user_preferences.out_of_office',\n+      'ticket.customer',\n+    ]\n+\n+    Permission.where(name: signup_permissions).update(allow_signup: true)\n+\n+    Role.where(default_at_signup: true).find_each do |role|\n+      role.permissions.where.not(name: signup_permissions).find_each do |permission|\n+        role.permission_revoke(permission.name)\n+      end\n+    end\n+  end\n+end"
        },
        {
          "filename": "db/seeds/permissions.rb",
          "status": "modified",
          "additions": 44,
          "deletions": 33,
          "patch": "@@ -263,75 +263,85 @@\n   },\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences',\n-  note:        'User Preferences',\n-  preferences: {},\n+  name:         'user_preferences',\n+  note:         'User Preferences',\n+  preferences:  {},\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.password',\n-  note:        'Change %s',\n-  preferences: {\n+  name:         'user_preferences.password',\n+  note:         'Change %s',\n+  preferences:  {\n     translations: ['Password']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.notifications',\n-  note:        'Manage %s',\n-  preferences: {\n+  name:         'user_preferences.notifications',\n+  note:         'Manage %s',\n+  preferences:  {\n     translations: ['Notifications'],\n     required:     ['ticket.agent'],\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.access_token',\n-  note:        'Manage %s',\n-  preferences: {\n+  name:         'user_preferences.access_token',\n+  note:         'Manage %s',\n+  preferences:  {\n     translations: ['Token Access']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.language',\n-  note:        'Change %s',\n-  preferences: {\n+  name:         'user_preferences.language',\n+  note:         'Change %s',\n+  preferences:  {\n     translations: ['Language']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.linked_accounts',\n-  note:        'Manage %s',\n-  preferences: {\n+  name:         'user_preferences.linked_accounts',\n+  note:         'Manage %s',\n+  preferences:  {\n     translations: ['Linked Accounts']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.device',\n-  note:        'Manage %s',\n-  preferences: {\n+  name:         'user_preferences.device',\n+  note:         'Manage %s',\n+  preferences:  {\n     translations: ['Devices']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.avatar',\n-  note:        'Manage %s',\n-  preferences: {\n+  name:         'user_preferences.avatar',\n+  note:         'Manage %s',\n+  preferences:  {\n     translations: ['Avatar']\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.calendar',\n-  note:        'Access to %s',\n-  preferences: {\n+  name:         'user_preferences.calendar',\n+  note:         'Access to %s',\n+  preferences:  {\n     translations: ['Calendars'],\n     required:     ['ticket.agent'],\n   },\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n-  name:        'user_preferences.out_of_office',\n-  note:        'Change %s',\n-  preferences: {\n+  name:         'user_preferences.out_of_office',\n+  note:         'Change %s',\n+  preferences:  {\n     translations: ['Out of Office'],\n     required:     ['ticket.agent'],\n   },\n+  allow_signup: true,\n )\n \n Permission.create_if_not_exists(\n@@ -354,9 +364,10 @@\n   },\n )\n Permission.create_if_not_exists(\n-  name:        'ticket.customer',\n-  note:        'Access to Customer Tickets based on current_user and organization',\n-  preferences: {},\n+  name:         'ticket.customer',\n+  note:         'Access to Customer Tickets based on current_user and organization',\n+  preferences:  {},\n+  allow_signup: true,\n )\n Permission.create_if_not_exists(\n   name:        'chat',"
        },
        {
          "filename": "spec/db/migrate/role_signup_column_spec.rb",
          "status": "added",
          "additions": 30,
          "deletions": 0,
          "patch": "@@ -0,0 +1,30 @@\n+require 'rails_helper'\n+\n+RSpec.describe RoleSignupColumn, type: :db_migration, db_strategy: :reset do\n+  context 'when a role contains signup permissions' do\n+    let!(:role) do\n+      role = create(:role)\n+      role.permission_grant('user_preferences.password')\n+      role.permission_grant('ticket.agent')\n+      role.update_column(:default_at_signup, true)\n+      role\n+    end\n+\n+    before do\n+      without_column(:permissions, column: :allow_signup)\n+      migrate\n+    end\n+\n+    it 'has password permission' do\n+      expect(role.reload.permissions.map(&:name)).to include('user_preferences.password')\n+    end\n+\n+    it 'has no agent permission' do\n+      expect(role.reload.permissions.map(&:name)).not_to include('ticket.agent')\n+    end\n+\n+    it 'has permission with allow_signup set correctly' do\n+      expect(Permission.find_by(name: 'user_preferences.password').allow_signup).to be true\n+    end\n+  end\n+end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "98ea2e924935a8ae2cfc92f6b4d4434ea1e2efe8",
            "date": "2025-01-25T15:52:03Z",
            "author_login": "mgruner"
          },
          {
            "sha": "7f5fac4eb074b03907a0210b1bc63aa407dea3cb",
            "date": "2025-01-24T22:49:19Z",
            "author_login": "vBenTec"
          },
          {
            "sha": "260dd9c94c8e088e2b26aed3e1f0db1d0c2ac298",
            "date": "2025-01-24T16:50:05Z",
            "author_login": "rolfschmidt"
          },
          {
            "sha": "c2395f4e1d43fbee37c70b2e8cff3107dcb2d655",
            "date": "2025-01-24T15:34:11Z",
            "author_login": "rolfschmidt"
          },
          {
            "sha": "7c1489eea5893e737652dc19607f4fe688db926b",
            "date": "2025-01-24T15:14:07Z",
            "author_login": "dominikklein"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": null,
    "description": "An issue was discovered in Zammad before 3.5.1. The default signup Role (for newly created Users) can be a privileged Role, if configured by an admin. This behvaior was unintended.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-28T08:15:11.570",
    "last_modified": "2024-11-21T05:23:45.000",
    "fix_date": "2020-10-07T12:05:07Z"
  },
  "references": [
    {
      "url": "https://github.com/zammad/zammad/commit/f0462d4c20c2968b52b5dc6a585f26c0409b4fc4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zammad.com/en/advisories/zaa-2020-22",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zammad/zammad/commit/f0462d4c20c2968b52b5dc6a585f26c0409b4fc4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zammad.com/en/advisories/zaa-2020-22",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.545372",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "zammad",
    "owner": "zammad",
    "created_at": "2012-04-02T08:50:33Z",
    "updated_at": "2025-01-25T21:40:17Z",
    "pushed_at": "2025-01-25T16:33:56Z",
    "size": 626208,
    "stars": 4591,
    "forks": 782,
    "open_issues": 471,
    "watchers": 4591,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Ruby": 12135470,
      "TypeScript": 4487221,
      "CoffeeScript": 2307070,
      "Vue": 1496073,
      "JavaScript": 1294158,
      "HTML": 470015,
      "SCSS": 284398,
      "Shell": 75274,
      "CSS": 44030,
      "PHP": 7732,
      "Raku": 3038,
      "Dockerfile": 1289,
      "Perl": 1236,
      "Procfile": 275
    },
    "commit_activity": {
      "total_commits_last_year": 1705,
      "avg_commits_per_week": 32.78846153846154,
      "days_active_last_year": 249
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:39:07.613543"
  }
}