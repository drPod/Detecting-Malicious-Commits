{
  "cve_id": "CVE-2020-29160",
  "github_data": {
    "repository": "zammad/zammad",
    "fix_commit": "28944de180a88698509a656f61558bf9d7f810f4",
    "related_commits": [
      "28944de180a88698509a656f61558bf9d7f810f4",
      "28944de180a88698509a656f61558bf9d7f810f4"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "28944de180a88698509a656f61558bf9d7f810f4",
      "commit_date": "2020-10-08T07:19:37Z",
      "author": {
        "login": "rolfschmidt",
        "type": "User",
        "stats": {
          "total_commits": 863,
          "average_weekly_commits": 1.289985052316891,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 237
        }
      },
      "commit_message": {
        "title": "Maintenance: Sync Article REST API capabilities with the ones of the frontend.",
        "length": 78,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 33,
        "additions": 24,
        "deletions": 9
      },
      "files": [
        {
          "filename": "app/controllers/ticket_articles_controller.rb",
          "status": "modified",
          "additions": 12,
          "deletions": 5,
          "patch": "@@ -101,11 +101,18 @@ def update\n     article = Ticket::Article.find(params[:id])\n     authorize!(article)\n \n-    clean_params = Ticket::Article.association_name_to_id_convert(params)\n-    clean_params = Ticket::Article.param_cleanup(clean_params, true)\n-\n-    # only apply preferences changes (keep not updated keys/values)\n-    clean_params = article.param_preferences_merge(clean_params)\n+    # only update internal and highlight info\n+    clean_params = {}\n+    if !params[:internal].nil?\n+      clean_params[:internal] = params[:internal]\n+    end\n+    if params.dig(:preferences, :highlight).present?\n+      clean_params = article.param_preferences_merge(clean_params.merge(\n+                                                       preferences: {\n+                                                         highlight: params[:preferences][:highlight].to_s\n+                                                       }\n+                                                     ))\n+    end\n \n     article.update!(clean_params)\n "
        },
        {
          "filename": "spec/requests/ticket/article_spec.rb",
          "status": "modified",
          "additions": 10,
          "deletions": 2,
          "patch": "@@ -118,37 +118,45 @@\n         content_type: 'text/plain',\n         body:         'some body',\n         type:         'note',\n+        internal:     false,\n         preferences:  {\n           some_key1: 123,\n+          highlight: '123',\n         },\n       }\n       post '/api/v1/ticket_articles', params: params, as: :json\n       expect(response).to have_http_status(:created)\n       expect(json_response).to be_a_kind_of(Hash)\n       expect(json_response['subject']).to be_nil\n       expect(json_response['body']).to eq('some body')\n+      expect(json_response['internal']).to eq(false)\n       expect(json_response['content_type']).to eq('text/plain')\n       expect(json_response['updated_by_id']).to eq(agent.id)\n       expect(json_response['created_by_id']).to eq(agent.id)\n       expect(json_response['preferences']['some_key1']).to eq(123)\n+      expect(json_response['preferences']['highlight']).to eq('123')\n       expect(ticket.articles.count).to eq(5)\n \n       params = {\n         body:        'some body 2',\n+        internal:    true,\n         preferences: {\n           some_key2: 'abc',\n+          highlight: '234',\n         },\n       }\n       put \"/api/v1/ticket_articles/#{json_response['id']}\", params: params, as: :json\n       expect(response).to have_http_status(:ok)\n       expect(json_response).to be_a_kind_of(Hash)\n       expect(json_response['subject']).to be_nil\n-      expect(json_response['body']).to eq('some body 2')\n+      expect(json_response['body']).not_to eq('some body 2')\n+      expect(json_response['internal']).to eq(true)\n       expect(json_response['content_type']).to eq('text/plain')\n       expect(json_response['updated_by_id']).to eq(agent.id)\n       expect(json_response['created_by_id']).to eq(agent.id)\n       expect(json_response['preferences']['some_key1']).to eq(123)\n-      expect(json_response['preferences']['some_key2']).to eq('abc')\n+      expect(json_response['preferences']['some_key2']).not_to eq('abc')\n+      expect(json_response['preferences']['highlight']).to eq('234')\n \n     end\n "
        },
        {
          "filename": "spec/requests/ticket_spec.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -902,7 +902,7 @@\n       expect(json_response).to be_a_kind_of(Hash)\n       expect(json_response['ticket_id']).to eq(ticket.id)\n       expect(json_response['from']).to eq(%(\"Tickets Agent via #{ticket_group.email_address.realname}\" <#{ticket_group.email_address.email}>))\n-      expect(json_response['subject']).to eq('new subject')\n+      expect(json_response['subject']).not_to eq('new subject')\n       expect(json_response['body']).to eq('some body')\n       expect(json_response['content_type']).to eq('text/plain')\n       expect(json_response['internal']).to eq(true)\n@@ -991,7 +991,7 @@\n       expect(json_response).to be_a_kind_of(Hash)\n       expect(json_response['ticket_id']).to eq(ticket.id)\n       expect(json_response['from']).to eq('Tickets Admin')\n-      expect(json_response['subject']).to eq('new subject')\n+      expect(json_response['subject']).not_to eq('new subject')\n       expect(json_response['body']).to eq('some body')\n       expect(json_response['content_type']).to eq('text/plain')\n       expect(json_response['internal']).to eq(true)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "98ea2e924935a8ae2cfc92f6b4d4434ea1e2efe8",
            "date": "2025-01-25T15:52:03Z",
            "author_login": "mgruner"
          },
          {
            "sha": "7f5fac4eb074b03907a0210b1bc63aa407dea3cb",
            "date": "2025-01-24T22:49:19Z",
            "author_login": "vBenTec"
          },
          {
            "sha": "260dd9c94c8e088e2b26aed3e1f0db1d0c2ac298",
            "date": "2025-01-24T16:50:05Z",
            "author_login": "rolfschmidt"
          },
          {
            "sha": "c2395f4e1d43fbee37c70b2e8cff3107dcb2d655",
            "date": "2025-01-24T15:34:11Z",
            "author_login": "rolfschmidt"
          },
          {
            "sha": "7c1489eea5893e737652dc19607f4fe688db926b",
            "date": "2025-01-24T15:14:07Z",
            "author_login": "dominikklein"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-862",
    "description": "An issue was discovered in Zammad before 3.5.1. A REST API call allows an attacker to change Ticket Article data in a way that defeats auditing.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-28T08:15:11.617",
    "last_modified": "2024-11-21T05:23:45.160",
    "fix_date": "2020-10-08T07:19:37Z"
  },
  "references": [
    {
      "url": "https://github.com/zammad/zammad/commit/28944de180a88698509a656f61558bf9d7f810f4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zammad.com/en/advisories/zaa-2020-24",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/zammad/zammad/commit/28944de180a88698509a656f61558bf9d7f810f4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zammad.com/en/advisories/zaa-2020-24",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.545621",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "zammad",
    "owner": "zammad",
    "created_at": "2012-04-02T08:50:33Z",
    "updated_at": "2025-01-14T16:43:45Z",
    "pushed_at": "2025-01-14T12:55:08Z",
    "size": 614035,
    "stars": 4579,
    "forks": 780,
    "open_issues": 473,
    "watchers": 4579,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Ruby": 12092834,
      "TypeScript": 4400117,
      "CoffeeScript": 2299732,
      "Vue": 1438308,
      "JavaScript": 1294158,
      "HTML": 469188,
      "SCSS": 284398,
      "Shell": 75274,
      "CSS": 44030,
      "PHP": 7732,
      "Raku": 3038,
      "Dockerfile": 1289,
      "Perl": 1236,
      "Procfile": 275
    },
    "commit_activity": {
      "total_commits_last_year": 1712,
      "avg_commits_per_week": 32.92307692307692,
      "days_active_last_year": 252
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T16:48:55.646726"
  }
}