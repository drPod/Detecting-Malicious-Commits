{
  "cve_id": "CVE-2020-29367",
  "github_data": {
    "repository": "Blosc/c-blosc2",
    "fix_commit": "c4c6470e88210afc95262c8b9fcc27e30ca043ee",
    "related_commits": [
      "c4c6470e88210afc95262c8b9fcc27e30ca043ee",
      "c4c6470e88210afc95262c8b9fcc27e30ca043ee"
    ],
    "patch_url": "https://github.com/Blosc/c-blosc2/commit/c4c6470e88210afc95262c8b9fcc27e30ca043ee.patch",
    "fix_commit_details": {
      "sha": "c4c6470e88210afc95262c8b9fcc27e30ca043ee",
      "commit_date": "2020-10-17T23:43:22Z",
      "author": {
        "login": "nmoinvaz",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed asan heap buffer overflow when not enough space to write compressed block size.",
        "length": 85,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 12,
        "additions": 8,
        "deletions": 4
      },
      "files": [
        {
          "filename": "blosc/blosc2.c",
          "status": "modified",
          "additions": 8,
          "deletions": 4,
          "patch": "@@ -706,7 +706,7 @@ static bool get_run(const uint8_t* ip, const uint8_t* ip_bound) {\n \n /* Shuffle & compress a single block */\n static int blosc_c(struct thread_context* thread_context, int32_t bsize,\n-                   int32_t leftoverblock, int32_t ntbytes, int32_t maxbytes,\n+                   int32_t leftoverblock, int32_t ntbytes, int32_t destsize,\n                    const uint8_t* src, const int32_t offset, uint8_t* dest,\n                    uint8_t* tmp, uint8_t* tmp2) {\n   blosc2_context* context = thread_context->parent_context;\n@@ -772,6 +772,10 @@ static int blosc_c(struct thread_context* thread_context, int32_t bsize,\n     if (get_run(ip, ipbound)) {\n       // A run.  Encode the repeated byte as a negative length in the length of the split.\n       int32_t value = _src[j * neblock];\n+      if (ntbytes > destsize) {\n+        /* Not enough space to write out compressed block size */\n+        return -1;\n+      }\n       _sw32(dest - 4, -value);\n       continue;\n     }\n@@ -782,9 +786,9 @@ static int blosc_c(struct thread_context* thread_context, int32_t bsize,\n       maxout = (int32_t)snappy_max_compressed_length((size_t)neblock);\n     }\n   #endif /*  HAVE_SNAPPY */\n-    if (ntbytes + maxout > maxbytes) {\n+    if (ntbytes + maxout > destsize) {\n       /* avoid buffer * overrun */\n-      maxout = (int64_t)maxbytes - (int64_t)ntbytes;\n+      maxout = (int64_t)destsize - (int64_t)ntbytes;\n       if (maxout <= 0) {\n         return 0;                  /* non-compressible block */\n       }\n@@ -859,7 +863,7 @@ static int blosc_c(struct thread_context* thread_context, int32_t bsize,\n         /* The compressor has been unable to compress data at all. */\n         /* Before doing the copy, check that we are not running into a\n            buffer overflow. */\n-        if ((ntbytes + neblock) > maxbytes) {\n+        if ((ntbytes + neblock) > destsize) {\n           return 0;    /* Non-compressible data */\n         }\n         memcpy(dest, _src + j * neblock, (unsigned int)neblock);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "07a76d18a7e1597d50175acd71737a0eaf0810d2",
            "date": "2025-01-14T18:48:41Z",
            "author_login": "FrancescAlted"
          },
          {
            "sha": "867ddb31e91e1419c0ef9423a61e3dd10abd7703",
            "date": "2024-12-26T12:49:27Z",
            "author_login": "FrancescAlted"
          },
          {
            "sha": "2c4e182a42caf012013e79518bb2c090e7d9cce7",
            "date": "2024-12-16T13:03:47Z",
            "author_login": "FrancescAlted"
          },
          {
            "sha": "24883ac1a85febad3e9850e19b3c87e6eabc2c06",
            "date": "2024-12-04T13:27:56Z",
            "author_login": "FrancescAlted"
          },
          {
            "sha": "43135d71b911cd6e8b2e9c847ef1ed819d09dd76",
            "date": "2024-12-04T12:43:26Z",
            "author_login": "FrancescAlted"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-787",
    "description": "blosc2.c in Blosc C-Blosc2 through 2.0.0.beta.5 has a heap-based buffer overflow when there is a lack of space to write compressed data.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-27T20:15:11.090",
    "last_modified": "2024-11-21T05:23:55.293",
    "fix_date": "2020-10-17T23:43:22Z"
  },
  "references": [
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26442",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Blosc/c-blosc2/commit/c4c6470e88210afc95262c8b9fcc27e30ca043ee",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26442",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Blosc/c-blosc2/commit/c4c6470e88210afc95262c8b9fcc27e30ca043ee",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.479842",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "c-blosc2",
    "owner": "Blosc",
    "created_at": "2015-08-07T10:51:35Z",
    "updated_at": "2025-01-09T04:19:13Z",
    "pushed_at": "2024-12-26T12:49:27Z",
    "size": 24797,
    "stars": 461,
    "forks": 85,
    "open_issues": 51,
    "watchers": 461,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "C": 5581093,
      "C++": 794210,
      "CMake": 174163,
      "Makefile": 47856,
      "Assembly": 15018,
      "Python": 13179,
      "Shell": 12864,
      "Starlark": 4480,
      "Scheme": 4275,
      "Dockerfile": 1187
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:11:17.970128"
  }
}