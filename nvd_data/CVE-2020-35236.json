{
  "cve_id": "CVE-2020-35236",
  "github_data": {
    "repository": "amazeeio/lagoon",
    "fix_commit": "1140289bf9fa98b8602ab4662ae867b210d8476b",
    "related_commits": [
      "1140289bf9fa98b8602ab4662ae867b210d8476b",
      "1140289bf9fa98b8602ab4662ae867b210d8476b"
    ],
    "patch_url": "https://github.com/amazeeio/lagoon/commit/1140289bf9fa98b8602ab4662ae867b210d8476b.patch",
    "fix_commit_details": {
      "sha": "1140289bf9fa98b8602ab4662ae867b210d8476b",
      "commit_date": "2020-12-11T21:07:18Z",
      "author": {
        "login": "Schnitzel",
        "type": "User",
        "stats": {
          "total_commits": 3723,
          "average_weekly_commits": 8.5,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 189
        }
      },
      "commit_message": {
        "title": "Merge pull request #6 from amazeeio/AIOSEC-85-insecure-gitlab-project-delete",
        "length": 118,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 80,
        "additions": 72,
        "deletions": 8
      },
      "files": [
        {
          "filename": "node-packages/commons/src/api.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -653,6 +653,23 @@ export async function getProjectByName(project: string): Promise<any> {\n   return result.project;\n }\n \n+export const allProjectsInGroup = (groupInput: {\n+  id?: string;\n+  name?: string;\n+}): Promise<any[]> =>\n+  graphqlapi.query(\n+    `\n+    query($groupInput: GroupInput!) {\n+      allProjectsInGroup(input: $groupInput) {\n+        ...${projectFragment}\n+      }\n+    }\n+  `,\n+    {\n+      groupInput\n+    }\n+  );\n+\n export async function getMicrosoftTeamsInfoForProject(\n   project: string, contentType = 'DEPLOYMENT'\n ): Promise<any[]> {\n@@ -1456,4 +1473,4 @@ export const getProblemHarborScanMatches = () => graphqlapi.query(\n         regex\n       }\n     }`\n-);\n\\ No newline at end of file\n+);"
        },
        {
          "filename": "node-packages/commons/src/gitlabApi.ts",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -18,6 +18,26 @@ const options = {\n \n const gitlabapi = axios.create(options);\n \n+export const secureGitlabSystemHooks = [\n+  'group_create',\n+  'group_rename',\n+  'group_destroy',\n+  'project_create',\n+  'project_transfer',\n+  'project_rename',\n+  'project_update',\n+  'project_destroy',\n+  'user_create',\n+  'user_rename',\n+  'user_destroy',\n+  'user_add_to_group',\n+  'user_remove_from_group',\n+  'user_add_to_team',\n+  'user_remove_from_team',\n+  'key_create',\n+  'key_destroy',\n+];\n+\n class NetworkError extends Error {\n   constructor(message: string) {\n     super(message);"
        },
        {
          "filename": "services/webhook-handler/src/extractWebhookData.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -2,6 +2,7 @@ import uuid4 from 'uuid4';\n import url from 'url';\n import R from 'ramda';\n import { IncomingMessage } from 'http';\n+import { secureGitlabSystemHooks } from '@lagoon/commons/dist/gitlabApi';\n \n import type { RawData, WebhookRequestData } from './types';\n \n@@ -45,7 +46,7 @@ export function extractWebhookData(req: IncomingMessage, body: string): WebhookR\n       giturl = R.path(['project', 'git_ssh_url'], bodyObj);\n \n       // This is a system webhook\n-      if (!giturl) {\n+      if (R.contains(event, secureGitlabSystemHooks)) {\n         // Ensure the system hook came from gitlab\n         if (!('x-gitlab-token' in req.headers) || req.headers['x-gitlab-token'] !== process.env.GITLAB_SYSTEM_HOOK_TOKEN) {\n           throw new Error('Gitlab system hook secret verification failed');"
        },
        {
          "filename": "services/webhooks2tasks/src/handlers/gitlabProjectDelete.ts",
          "status": "modified",
          "additions": 28,
          "deletions": 5,
          "patch": "@@ -1,5 +1,6 @@\n+import R from 'ramda';\n import { sendToLagoonLogs } from '@lagoon/commons/dist/logs';\n-import { deleteProject } from '@lagoon/commons/dist/api';\n+import { allProjectsInGroup, deleteProject, sanitizeGroupName } from '@lagoon/commons/dist/api';\n \n import { WebhookRequestData } from '../types';\n \n@@ -9,23 +10,45 @@ export async function gitlabProjectDelete(webhook: WebhookRequestData) {\n     event,\n     uuid,\n     body,\n-    body: { path: name }\n+    body: { path: projectName, path_with_namespace }\n   } = webhook;\n \n   try {\n     const meta = {\n-      project: name\n+      project: projectName\n     };\n \n-    await deleteProject(name);\n+    const groupName = sanitizeGroupName(path_with_namespace.replace(`/${projectName}`, ''));\n+    const projectsInGroup = await allProjectsInGroup({ name: groupName });\n+    const projectExists = R.pipe(\n+      R.prop('allProjectsInGroup'),\n+      R.pluck('name'),\n+      R.contains(projectName),\n+    // @ts-ignore\n+    )(projectsInGroup);\n+\n+    if (projectExists) {\n+      await deleteProject(projectName);\n+\n+      sendToLagoonLogs(\n+        'info',\n+        '',\n+        uuid,\n+        `${webhooktype}:${event}:handled`,\n+        meta,\n+        `deleted project ${projectName}`\n+      );\n+\n+      return;\n+    }\n \n     sendToLagoonLogs(\n       'info',\n       '',\n       uuid,\n       `${webhooktype}:${event}:handled`,\n       meta,\n-      `deleted project ${name}`\n+      `project \"${projectName}\" not a member of group \"${groupName}\"`\n     );\n \n     return;"
        },
        {
          "filename": "services/webhooks2tasks/src/processQueue.ts",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -1,5 +1,7 @@\n+import R from 'ramda';\n import { ChannelWrapper } from 'amqp-connection-manager';\n import { ConsumeMessage } from 'amqplib';\n+import { secureGitlabSystemHooks } from '@lagoon/commons/dist/gitlabApi';\n import { processProjects } from './webhooks/projects';\n import { processDataSync } from './webhooks/dataSync';\n import { processBackup } from './webhooks/backup';\n@@ -11,13 +13,14 @@ export async function processQueue (rabbitMsg: ConsumeMessage, channelWrapperWeb\n \n   const {\n     webhooktype,\n+    event,\n     giturl,\n   } = webhook;\n \n   // GitLab supports System Hooks which trigger on changes like creating new\n   // organizations or users. Since these don't have associated projects, they\n   // must be handled separately.\n-  if (webhooktype == 'gitlab' && !giturl) {\n+  if (webhooktype == 'gitlab' && R.contains(event, secureGitlabSystemHooks)) {\n     processDataSync(rabbitMsg, channelWrapperWebhooks);\n   } else if (webhooktype == 'resticbackup') {\n     processBackup(rabbitMsg, channelWrapperWebhooks);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1598195ac7bb771019ed677c151bcd9feaf81d02",
            "date": "2025-01-01T22:34:55Z",
            "author_login": "shreddedbacon"
          },
          {
            "sha": "5b51d0467559efe8a58770cd335535afaf5ecd54",
            "date": "2025-01-01T22:32:08Z",
            "author_login": "shreddedbacon"
          },
          {
            "sha": "b706c302e828c0e7359d256396b66205a37b71c6",
            "date": "2024-12-31T02:48:27Z",
            "author_login": "tobybellwood"
          },
          {
            "sha": "07d3e9ebd38da7dbccefb0345f54e1c22ef130fd",
            "date": "2024-12-30T00:46:08Z",
            "author_login": "tobybellwood"
          },
          {
            "sha": "1fdfc9a3392890c443020dec868a97189c5126ab",
            "date": "2024-12-29T23:49:28Z",
            "author_login": "tobybellwood"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": null,
    "description": "The GitLab Webhook Handler in amazee.io Lagoon before 1.12.3 has incorrect access control associated with project deletion.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-14T05:15:10.933",
    "last_modified": "2024-11-21T05:27:05.230",
    "fix_date": "2020-12-11T21:07:18Z"
  },
  "references": [
    {
      "url": "https://github.com/amazeeio/lagoon/commit/1140289bf9fa98b8602ab4662ae867b210d8476b",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/compare/v1.12.2...v1.12.3",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/tree/master/services/webhook-handler",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/tree/master/services/webhooks2tasks",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/commit/1140289bf9fa98b8602ab4662ae867b210d8476b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/compare/v1.12.2...v1.12.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/tree/master/services/webhook-handler",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/amazeeio/lagoon/tree/master/services/webhooks2tasks",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.514946",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lagoon",
    "owner": "amazeeio",
    "created_at": "2017-08-30T11:57:54Z",
    "updated_at": "2025-01-14T18:09:11Z",
    "pushed_at": "2025-01-10T04:26:26Z",
    "size": 78141,
    "stars": 566,
    "forks": 150,
    "open_issues": 190,
    "watchers": 566,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 932224,
      "Go": 240530,
      "JavaScript": 220678,
      "FreeMarker": 183587,
      "Shell": 97169,
      "Makefile": 50761,
      "Dockerfile": 36955,
      "CSS": 11374,
      "SCSS": 9108,
      "Java": 8894,
      "HCL": 7566,
      "Smarty": 2230,
      "Python": 1865,
      "PHP": 1299,
      "Fluent": 217,
      "HTML": 116
    },
    "commit_activity": {
      "total_commits_last_year": 644,
      "avg_commits_per_week": 12.384615384615385,
      "days_active_last_year": 172
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T22:07:01.808356"
  }
}