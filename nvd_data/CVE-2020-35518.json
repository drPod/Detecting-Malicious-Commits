{
  "cve_id": "CVE-2020-35518",
  "github_data": {
    "repository": "389ds/389-ds-base",
    "fix_commit": "b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
    "related_commits": [
      "b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
      "cc0f69283abc082488824702dae485b8eae938bc",
      "b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
      "cc0f69283abc082488824702dae485b8eae938bc"
    ],
    "patch_url": "https://github.com/389ds/389-ds-base/commit/b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32.patch",
    "fix_commit_details": {
      "sha": "b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
      "commit_date": "2021-02-09T19:02:59Z",
      "author": {
        "login": "mreynolds389",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Issue 4609 - CVE - info disclosure when authenticating",
        "length": 724,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 62,
        "additions": 49,
        "deletions": 13
      },
      "files": [
        {
          "filename": "dirsrvtests/tests/suites/basic/basic_test.py",
          "status": "modified",
          "additions": 42,
          "deletions": 9,
          "patch": "@@ -9,7 +9,7 @@\n \n from subprocess import check_output, PIPE, run\n from lib389 import DirSrv\n-from lib389.idm.user import UserAccounts\n+from lib389.idm.user import UserAccount, UserAccounts\n import pytest\n from lib389.tasks import *\n from lib389.utils import *\n@@ -1063,18 +1063,14 @@ def test_bind_invalid_entry(topology_st):\n     \"\"\"Test the failing bind does not return information about the entry\n \n     :id: 5cd9b083-eea6-426b-84ca-83c26fc49a6f\n-\n     :customerscenario: True\n-\n     :setup: Standalone instance\n-\n     :steps:\n-    1: bind as non existing entry\n-    2: check that bind info does not report 'No such entry'\n-\n+        1: bind as non existing entry\n+        2: check that bind info does not report 'No such entry'\n     :expectedresults:\n-    1: pass\n-    2: pass\n+        1: pass\n+        2: pass\n     \"\"\"\n \n     topology_st.standalone.restart()\n@@ -1096,6 +1092,43 @@ def test_bind_invalid_entry(topology_st):\n     topology_st.standalone.simple_bind_s(DN_DM, PW_DM)\n \n \n+def test_bind_entry_missing_passwd(topology_st):\n+    \"\"\"\n+    :id: af209149-8fb8-48cb-93ea-3e82dd7119d2\n+    :setup: Standalone Instance\n+    :steps:\n+        1. Bind as database entry that does not have userpassword set\n+        2. Bind as database entry that does not exist\n+        1. Bind as cn=config entry that does not have userpassword set\n+        2. Bind as cn=config entry that does not exist\n+    :expectedresults:\n+        1. Fails with error 49\n+        2. Fails with error 49\n+        3. Fails with error 49\n+        4. Fails with error 49\n+    \"\"\"\n+    user = UserAccount(topology_st.standalone, DEFAULT_SUFFIX)\n+    with pytest.raises(ldap.INVALID_CREDENTIALS):\n+        # Bind as the suffix root entry which does not have a userpassword\n+        user.bind(\"some_password\")\n+\n+    user = UserAccount(topology_st.standalone, \"cn=not here,\" + DEFAULT_SUFFIX)\n+    with pytest.raises(ldap.INVALID_CREDENTIALS):\n+        # Bind as the entry which does not exist\n+        user.bind(\"some_password\")\n+\n+    # Test cn=config since it has its own code path\n+    user = UserAccount(topology_st.standalone, \"cn=config\")\n+    with pytest.raises(ldap.INVALID_CREDENTIALS):\n+        # Bind as the config entry which does not have a userpassword\n+        user.bind(\"some_password\")\n+\n+    user = UserAccount(topology_st.standalone, \"cn=does not exist,cn=config\")\n+    with pytest.raises(ldap.INVALID_CREDENTIALS):\n+        # Bind as an entry under cn=config that does not exist\n+        user.bind(\"some_password\")\n+\n+\n @pytest.mark.bz1044135\n @pytest.mark.ds47319\n def test_connection_buffer_size(topology_st):"
        },
        {
          "filename": "ldap/servers/slapd/back-ldbm/ldbm_bind.c",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -76,8 +76,8 @@ ldbm_back_bind(Slapi_PBlock *pb)\n     case LDAP_AUTH_SIMPLE: {\n         Slapi_Value cv;\n         if (slapi_entry_attr_find(e->ep_entry, \"userpassword\", &attr) != 0) {\n-            slapi_send_ldap_result(pb, LDAP_INAPPROPRIATE_AUTH, NULL,\n-                                   NULL, 0, NULL);\n+            slapi_pblock_set(pb, SLAPI_PB_RESULT_TEXT, \"Entry does not have userpassword set\");\n+            slapi_send_ldap_result(pb, LDAP_INVALID_CREDENTIALS, NULL, NULL, 0, NULL);\n             CACHE_RETURN(&inst->inst_cache, &e);\n             rc = SLAPI_BIND_FAIL;\n             goto bail;"
        },
        {
          "filename": "ldap/servers/slapd/dse.c",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -1446,22 +1446,25 @@ dse_bind(Slapi_PBlock *pb) /* JCM There should only be one exit point from this\n \n     ec = dse_get_entry_copy(pdse, sdn, DSE_USE_LOCK);\n     if (ec == NULL) {\n-        slapi_send_ldap_result(pb, LDAP_NO_SUCH_OBJECT, NULL, NULL, 0, NULL);\n+        slapi_pblock_set(pb, SLAPI_PB_RESULT_TEXT, \"Entry does not exist\");\n+        slapi_send_ldap_result(pb, LDAP_INVALID_CREDENTIALS, NULL, NULL, 0, NULL);\n         return (SLAPI_BIND_FAIL);\n     }\n \n     switch (method) {\n     case LDAP_AUTH_SIMPLE: {\n         Slapi_Value cv;\n         if (slapi_entry_attr_find(ec, \"userpassword\", &attr) != 0) {\n-            slapi_send_ldap_result(pb, LDAP_INAPPROPRIATE_AUTH, NULL, NULL, 0, NULL);\n+            slapi_pblock_set(pb, SLAPI_PB_RESULT_TEXT, \"Entry does not have userpassword set\");\n+            slapi_send_ldap_result(pb, LDAP_INVALID_CREDENTIALS, NULL, NULL, 0, NULL);\n             slapi_entry_free(ec);\n             return SLAPI_BIND_FAIL;\n         }\n         bvals = attr_get_present_values(attr);\n \n         slapi_value_init_berval(&cv, cred);\n         if (slapi_pw_find_sv(bvals, &cv) != 0) {\n+            slapi_pblock_set(pb, SLAPI_PB_RESULT_TEXT, \"Invalid credentials\");\n             slapi_send_ldap_result(pb, LDAP_INVALID_CREDENTIALS, NULL, NULL, 0, NULL);\n             slapi_entry_free(ec);\n             value_done(&cv);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eed4305bb29f7887c7afceeb241bad80f3e905b4",
            "date": "2025-01-14T18:55:03Z",
            "author_login": "droideck"
          },
          {
            "sha": "e6ad63be9b1918ce8ab05f214c80696db99dbc8b",
            "date": "2025-01-14T17:12:56Z",
            "author_login": "tbordaz"
          },
          {
            "sha": "9e092353064d6c43dd8b528b0d05342db4a4b1ff",
            "date": "2024-12-18T21:50:46Z",
            "author_login": "mreynolds389"
          },
          {
            "sha": "2bb63629aae5ba989c76b41188e38e7195a5c676",
            "date": "2025-01-14T03:46:08Z",
            "author_login": "droideck"
          },
          {
            "sha": "4bd27ecc4e1d21c8af5ab8cad795d70477179a98",
            "date": "2025-01-13T17:03:07Z",
            "author_login": "progier389"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "When binding against a DN during authentication, the reply from 389-ds-base will be different whether the DN exists or not. This can be used by an unauthenticated attacker to check the existence of an entry in the LDAP database.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-26T17:15:12.280",
    "last_modified": "2024-11-21T05:27:28.920",
    "fix_date": "2021-02-09T19:02:59Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1905565",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/commit/b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/commit/cc0f69283abc082488824702dae485b8eae938bc",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/issues/4480",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1905565",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/commit/b6aae4d8e7c8a6ddd21646f94fef1bf7f22c3f32",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/commit/cc0f69283abc082488824702dae485b8eae938bc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/389ds/389-ds-base/issues/4480",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.498187",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "389-ds-base",
    "owner": "389ds",
    "created_at": "2020-09-12T12:54:14Z",
    "updated_at": "2025-01-14T18:55:08Z",
    "pushed_at": "2025-01-14T19:13:56Z",
    "size": 61723,
    "stars": 224,
    "forks": 96,
    "open_issues": 524,
    "watchers": 224,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "389-ds-base-1.2.11",
      "389-ds-base-1.3.2",
      "389-ds-base-1.3.3",
      "389-ds-base-1.3.4",
      "389-ds-base-1.3.5",
      "389-ds-base-1.3.6",
      "389-ds-base-1.3.7",
      "389-ds-base-1.3.8",
      "389-ds-base-1.3.9",
      "389-ds-base-1.3.10",
      "389-ds-base-1.3.11",
      "389-ds-base-1.4.0",
      "389-ds-base-1.4.1",
      "389-ds-base-1.4.2",
      "389-ds-base-1.4.3",
      "389-ds-base-1.4.4",
      "389-ds-base-2.0",
      "389-ds-base-2.1",
      "389-ds-base-2.2",
      "389-ds-base-2.3",
      "389-ds-base-2.4",
      "389-ds-base-2.5",
      "389-ds-base-2.6",
      "389-ds-base-3.0",
      "main"
    ],
    "languages": {
      "C": 15934832,
      "Python": 7344491,
      "JavaScript": 4455877,
      "C++": 451972,
      "Rust": 147166,
      "TypeScript": 117060,
      "Perl": 116277,
      "Makefile": 100659,
      "M4": 67591,
      "SCSS": 45164,
      "Shell": 42602,
      "Roff": 25186,
      "CSS": 20639,
      "Yacc": 20413,
      "HTML": 15278,
      "Lex": 6900,
      "Dockerfile": 4562,
      "Java": 2300
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T19:45:26.044618"
  }
}