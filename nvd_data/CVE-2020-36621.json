{
  "cve_id": "CVE-2020-36621",
  "github_data": {
    "repository": "chedabob/whatismyudid",
    "fix_commit": "bb33d4325fba80e7ea68b79121dba025caf6f45f",
    "related_commits": [
      "bb33d4325fba80e7ea68b79121dba025caf6f45f",
      "bb33d4325fba80e7ea68b79121dba025caf6f45f"
    ],
    "patch_url": "https://github.com/chedabob/whatismyudid/commit/bb33d4325fba80e7ea68b79121dba025caf6f45f.patch",
    "fix_commit_details": {
      "sha": "bb33d4325fba80e7ea68b79121dba025caf6f45f",
      "commit_date": "2020-09-30T22:03:58Z",
      "author": {
        "login": "mattmapadmi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: set cookie securely, and prevent XSS in the `/enrollment` route",
        "length": 68,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 29,
        "additions": 22,
        "deletions": 7
      },
      "files": [
        {
          "filename": "app.js",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -18,7 +18,6 @@ app.set('port', process.env.PORT || 3001);\n app.set('views', __dirname + '/views');\n app.set('view engine', 'pug');\n \n-app.use(express.urlencoded({extended: true})); \n app.use(cookieParser(process.env.COOKIE_KEY || 'f76210bc2acc4f54af5754e15b0aab05'));\n app.use(express.static(path.join(__dirname, 'public')));\n app.use(express.raw({"
        },
        {
          "filename": "routes/mobileconfig.js",
          "status": "modified",
          "additions": 22,
          "deletions": 6,
          "patch": "@@ -10,15 +10,20 @@ exports.enrollment = function(req, res){\n     var query = url_parts.query;\n     \n     var tudid = query.udid;\n-    if (tudid) // If it's in the query, store it and redirect (so the user doesn't see the UDID being sent in the URL)\n+    if (tudid && extractValidUdid(tudid)) // If it's in the query, store it and redirect (so the user doesn't see the UDID being sent in the URL)\n     {\n-        res.cookie('newudid', query.udid, { maxAge: 10 * 60 * 1000});     // Store for 10 minutes\n+        res.cookie('newudid', query.udid, \n+        { \n+            maxAge: 10 * 60 * 1000,\n+            httpOnly: true,\n+            secure: process.env.NODE_ENV === 'production'? true: false\n+        });\n         res.redirect('/enrollment');\n     }\n     else\n     {\n         var cookie = req.cookies.newudid;\n-        if (cookie) {\n+        if (cookie && extractValidUdid(cookie)) {\n             // Found the cookie, let's render it\n             res.render('udid', { udid: cookie, title: 'udid.fyi'});\n         }\n@@ -29,13 +34,24 @@ exports.enrollment = function(req, res){\n     }\n }\n exports.enroll = function(req, res){\n-    var match = req.body.toString().match(/(0000[\\d]{4}-00[A-Fa-f\\d]+)|([a-fA-F\\d]{40})/);\n+    var udid = extractValidUdid(req.body.toString())\n \n-    if (match && match.length > 0) {\n-        res.redirect(301,'/enrollment?udid=' + match[0]);\n+    if (udid) {\n+        res.redirect(301,'/enrollment?udid=' + udid);\n     }\n     else {\n         res.status(400)\n         res.send('Did not find a valid UDID in the body')\n     }\n };\n+\n+function extractValidUdid (udid) {\n+    const match = udid.match(/(0000[\\d]{4}-00[A-Fa-f\\d]+)|([a-fA-F\\d]{40})/);\n+\n+    if (match && match.length > 0) {\n+        return match[0]\n+    }\n+    else {\n+        return null\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "35edb584df49883d9ec8d7e2a7a6cd544491b849",
            "date": "2023-12-27T00:02:53Z",
            "author_login": "chedabob"
          },
          {
            "sha": "d81020162913a2e004e0a83d1a3c8c787d87d408",
            "date": "2023-12-26T23:42:46Z",
            "author_login": "chedabob"
          },
          {
            "sha": "3906e1c4262f38d6bb9ad385ccf4cd1778c36e31",
            "date": "2022-12-06T20:32:51Z",
            "author_login": "chedabob"
          },
          {
            "sha": "76ba2b0ae7a436601bf0f3c2730c12274dd1a591",
            "date": "2022-12-06T20:24:04Z",
            "author_login": "chedabob"
          },
          {
            "sha": "e4812e3428e0e49e0f7d4e590ea8042bb3b69f7f",
            "date": "2022-12-06T20:23:55Z",
            "author_login": "chedabob"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-707",
    "description": "A vulnerability, which was classified as problematic, has been found in chedabob whatismyudid. Affected by this issue is the function exports.enrollment of the file routes/mobileconfig.js. The manipulation leads to cross site scripting. The attack may be launched remotely. The name of the patch is bb33d4325fba80e7ea68b79121dba025caf6f45f. It is recommended to apply a patch to fix this issue. VDB-216470 is the identifier assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-21T19:15:11.987",
    "last_modified": "2024-11-21T05:29:54.777",
    "fix_date": "2020-09-30T22:03:58Z"
  },
  "references": [
    {
      "url": "https://github.com/chedabob/whatismyudid/commit/bb33d4325fba80e7ea68b79121dba025caf6f45f",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216470",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/chedabob/whatismyudid/commit/bb33d4325fba80e7ea68b79121dba025caf6f45f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216470",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.192510",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "whatismyudid",
    "owner": "chedabob",
    "created_at": "2013-08-01T20:33:32Z",
    "updated_at": "2024-06-26T06:48:24Z",
    "pushed_at": "2024-03-28T17:24:05Z",
    "size": 409,
    "stars": 24,
    "forks": 8,
    "open_issues": 1,
    "watchers": 24,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 3719,
      "Pug": 2694,
      "CSS": 1726,
      "Dockerfile": 683,
      "Shell": 450
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:23:55.006910"
  }
}