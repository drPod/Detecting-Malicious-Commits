{
  "cve_id": "CVE-2020-36622",
  "github_data": {
    "repository": "sah-comp/bienlein",
    "fix_commit": "d7836a4f2b241e4745ede194f0f6fb47199cab6b",
    "related_commits": [
      "d7836a4f2b241e4745ede194f0f6fb47199cab6b",
      "d7836a4f2b241e4745ede194f0f6fb47199cab6b"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "d7836a4f2b241e4745ede194f0f6fb47199cab6b",
      "commit_date": "2020-09-28T15:07:51Z",
      "author": {
        "login": "sah-comp",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Added CSRF prevention",
        "length": 21,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 479,
        "additions": 281,
        "deletions": 198
      },
      "files": [
        {
          "filename": "app/res/tpl/account/changepassword.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -21,7 +21,10 @@\n         class=\"panel panel-<?php echo $record->getMeta('type') ?> action-changepassword\"\n         method=\"POST\"\n         accept-charset=\"utf-8\"\n-        enctype=\"multipart/form-data\">        \n+        enctype=\"multipart/form-data\">\n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+\n         <!-- changepassword form -->\n         <fieldset>\n             <legend><?php echo I18n::__('account_legend_changepassword') ?></legend>"
        },
        {
          "filename": "app/res/tpl/account/index.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -22,14 +22,17 @@ class=\"panel panel-<?php echo $record->getMeta('type') ?> action-profile\"\n         method=\"POST\"\n         accept-charset=\"utf-8\"\n         enctype=\"multipart/form-data\">\n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+        \n         <div>\n             <img\n         \t\tsrc=\"<?php echo Gravatar::src($record->email, 72) ?>\"\n         \t\tclass=\"gravatar-account circular no-shadow\"\n         \t\twidth=\"72\"\n         \t\theight=\"72\"\n         \t\talt=\"<?php echo htmlspecialchars($record->getName()) ?>\" />\n-        </div>     \n+        </div>\n         <!-- account form -->\n         <fieldset>\n             <legend><?php echo I18n::__('account_legend') ?></legend>"
        },
        {
          "filename": "app/res/tpl/account/login.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -29,6 +29,9 @@ class=\"notification\">\n         class=\"panel login\"\n         method=\"POST\"\n         accept-charset=\"utf-8\">\n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+\n         <div>\n             <input type=\"hidden\" name=\"dialog[type]\" value=\"<?php echo $record->getMeta('type') ?>\" />\n             <input type=\"hidden\" name=\"dialog[id]\" value=\"<?php echo $record->getId() ?>\" />"
        },
        {
          "filename": "app/res/tpl/account/lostpassword.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -29,6 +29,9 @@ class=\"notification\">\n         class=\"panel lostpassword\"\n         method=\"POST\"\n         accept-charset=\"utf-8\">\n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+\n         <fieldset>\n             <legend><?php echo I18n::__('lostpassword_legend') ?></legend>\n             <div"
        },
        {
          "filename": "app/res/tpl/admin/index.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -19,6 +19,9 @@ class=\"panel panel-<?php echo $record->getMeta('type') ?> action-edit\"\n         method=\"POST\"\n         accept-charset=\"utf-8\"\n         enctype=\"multipart/form-data\">\n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+\n         <?php echo $form_details ?>\n         <div class=\"buttons\">\n             <input"
        },
        {
          "filename": "app/res/tpl/scaffold/form.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -22,11 +22,13 @@ class=\"panel panel-<?php echo $record->getMeta('type') ?> action-<?php echo $cur\n         method=\"POST\"\n         accept-charset=\"utf-8\"\n         enctype=\"multipart/form-data\">\n-        \n+\n+        <input type=\"hidden\" name=\"token\" value=\"<?php echo Model::getCSRFToken() ?>\" />\n+\n         <!-- form details -->\n         <?php echo $form_details ?>\n         <!-- end of form details -->\n-        \n+\n         <!-- Scaffold buttons -->\n         <div class=\"buttons\">\n             <select name=\"next_action\">"
        },
        {
          "filename": "src/Controller/Account.php",
          "status": "modified",
          "additions": 25,
          "deletions": 22,
          "patch": "@@ -35,22 +35,24 @@ public function index()\n         session_start();\n         Auth::check();\n         $this->template = 'account/index';\n-        \n+\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             Flight::get('user')->import(Flight::request()->data->dialog);\n             try {\n                 R::store(Flight::get('user'));\n                 Flight::get('user')->notify(I18n::__('account_edit_success'), 'success');\n                 $this->redirect('/account/');\n-            }\n-            catch (Exception $e) {\n+            } catch (Exception $e) {\n                 Flight::get('user')->notify(I18n::__('account_edit_failure'), 'error');\n-            }    \n+            }\n         }\n-        \n+\n         $this->render();\n     }\n-    \n+\n     /**\n      * Displays a page to change the password.\n      *\n@@ -62,8 +64,11 @@ public function changepassword()\n         session_start();\n         Auth::check();\n         $this->template = 'account/changepassword';\n-        \n+\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             if (Flight::get('user')->changePassword(\n                 Flight::request()->data->pw,\n                 Flight::request()->data->pw_new,\n@@ -73,35 +78,33 @@ public function changepassword()\n                     R::store(Flight::get('user'));\n                     Flight::get('user')->notify(I18n::__('account_changepassword_success'), 'success');\n                     $this->redirect('/account/');\n-                }\n-                catch (Exception $e) {\n+                } catch (Exception $e) {\n                     //Whoops, what nu?\n                 }\n-            }\n-            else {\n+            } else {\n                 Flight::get('user')->notify(I18n::__('account_changepassword_failure'), 'error');\n-            }    \n+            }\n         }\n-        \n+\n         $this->render();\n     }\n-    \n+\n     /**\n      * Renders the account page.\n      */\n     protected function render()\n     {\n-\t    Flight::render('shared/notification', array(), 'notification');\n-\t    //\n+        Flight::render('shared/notification', array(), 'notification');\n+        //\n         Flight::render('shared/navigation/account', array(), 'navigation_account');\n-\t\tFlight::render('shared/navigation/main', array(), 'navigation_main');\n+        Flight::render('shared/navigation/main', array(), 'navigation_main');\n         Flight::render('shared/navigation', array(), 'navigation');\n         Flight::render('account/toolbar', array(), 'toolbar');\n-\t\tFlight::render('shared/header', array(), 'header');\n-\t\tFlight::render('shared/footer', array(), 'footer');\n-\t\tFlight::render($this->template, array(\n-\t\t    'record' => Flight::get('user')\n-\t\t), 'content');\n+        Flight::render('shared/header', array(), 'header');\n+        Flight::render('shared/footer', array(), 'footer');\n+        Flight::render($this->template, array(\n+            'record' => Flight::get('user')\n+        ), 'content');\n         Flight::render('html5', array(\n             'title' => I18n::__(\"account_head_title\"),\n             'language' => Flight::get('language')"
        },
        {
          "filename": "src/Controller/Login.php",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -33,13 +33,16 @@ class Controller_Login extends Controller\n     public function index()\n     {\n         session_start();\n-        if ( ! isset($_SESSION['login_id'])) {\n+        if (! isset($_SESSION['login_id'])) {\n             $_SESSION['login_id'] = 0;\n         }\n         $login = R::load('login', $_SESSION['login_id']);\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             try {\n-                $login = R::graph( Flight::request()->data->dialog, TRUE );\n+                $login = R::graph(Flight::request()->data->dialog, true);\n                 if ($login->trial()) {\n                     //you must trial before store because of pw reset in update\n                     $_SESSION['user']['id'] = $login->user->getId();\n@@ -56,7 +59,7 @@ public function index()\n             }\n         }\n         // either no yet submitted or the credentials given failed\n-        if ( Flight::request()->query->goto == '' || Flight::request()->query->goto == '/login' ) {\n+        if (Flight::request()->query->goto == '' || Flight::request()->query->goto == '/login') {\n             $goto = '/cms';\n         } else {\n             $goto = Flight::request()->query->goto;"
        },
        {
          "filename": "src/Controller/Lostpassword.php",
          "status": "modified",
          "additions": 13,
          "deletions": 10,
          "patch": "@@ -23,12 +23,12 @@ class Controller_Lostpassword extends Controller\n      * @var string\n      */\n     public $template = 'account/lostpassword';\n-    \n+\n     /**\n      * Holds the username entered by the password seeking party.\n      */\n     public $uname = '';\n-    \n+\n     /**\n      * May hold a message (textile) to the user that want to re-enter a password.\n      */\n@@ -43,28 +43,31 @@ class Controller_Lostpassword extends Controller\n     public function index()\n     {\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             $this->uname = Flight::request()->data->dialog['uname'];\n-            if ( ! $user = R::findOne('user', ' email = ? LIMIT 1 ', array($this->uname))) {\n+            if (! $user = R::findOne('user', ' email = ? LIMIT 1 ', array($this->uname))) {\n                 $this->message = I18n::__('lostpassword_user_unknown');\n-            } elseif ( ! $user->requestPassword()) {\n+            } elseif (! $user->requestPassword()) {\n                 $this->message = I18n::__('lostpassword_email_failed');\n             } else {\n                 $this->redirect('login');\n             }\n         }\n-        \n+\n         $this->render();\n     }\n-    \n+\n     /**\n      * Renders the lostpassword page.\n      */\n     protected function render()\n     {\n-\t\tFlight::render($this->template, array(\n-\t\t    'uname' => $this->uname,\n-\t\t    'message' => $this->message\n-\t\t), 'content');\n+        Flight::render($this->template, array(\n+            'uname' => $this->uname,\n+            'message' => $this->message\n+        ), 'content');\n         Flight::render('html5', array(\n             'title' => I18n::__(\"lostpassword_head_title\"),\n             'language' => Flight::get('language'),"
        },
        {
          "filename": "src/Controller/Scaffold.php",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -488,6 +488,9 @@ public function index($layout, $page, $order, $dir)\n         //$this->template = \"model/{$this->type}/{$this->layout}\";\n         $this->template = \"scaffold/{$this->layout}\";\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             //clear filter?\n             if (Flight::request()->data->submit == I18n::__('filter_submit_clear')) {\n                 R::trash($this->filter);\n@@ -559,6 +562,9 @@ public function add($layout)\n             }\n         }\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             $this->record = R::graph(Flight::request()->data->dialog, true);\n             $this->setNextAction(Flight::request()->data->next_action);\n             if ($this->doRedbeanAction()) {\n@@ -605,6 +611,9 @@ public function edit($page, $order, $dir, $layout)\n             $this->template = \"scaffold/edit\";\n         }\n         if (Flight::request()->method == 'POST') {\n+            if (! Model::validateCSRFToken(Flight::request()->data->token)) {\n+                $this->redirect(\"/logout\");\n+            }\n             Permission::check(Flight::get('user'), $this->type, 'edit');//check for edit perm now\n             $this->record = R::graph(Flight::request()->data->dialog, true);\n             $this->setNextAction(Flight::request()->data->next_action);"
        },
        {
          "filename": "src/Model.php",
          "status": "modified",
          "additions": 33,
          "deletions": 0,
          "patch": "@@ -87,6 +87,39 @@ public function __construct()\n     {\n     }\n \n+    /**\n+     * Returns a \"random\" string to prevent CSRF.\n+     *\n+     * @return string\n+     */\n+    public static function getCSRFToken()\n+    {\n+        @session_start();\n+        if (empty($_SESSION['csrf_tokens'])) {\n+            $_SESSION['csrf_tokens'] = [];\n+        }\n+        $nonce = md5(uniqid(rand(), true));\n+        $_SESSION['csrf_tokens'][$nonce] = true;\n+        return $nonce;\n+    }\n+\n+    /**\n+     * Returns wether the CSRF token validates or not.\n+     *\n+     * @param string $token\n+     * @return bool\n+     */\n+    public static function validateCSRFToken($token)\n+    {\n+        @session_start();\n+        if (isset($_SESSION['csrf_tokens'][$token])) {\n+            unset($_SESSION['csrf_tokens'][$token]);\n+            error_log('Good user');\n+            return true;\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Returns an array with attributes for lists.\n      *"
        },
        {
          "filename": "src/Model/Criteria.php",
          "status": "modified",
          "additions": 174,
          "deletions": 159,
          "patch": "@@ -23,19 +23,19 @@ class Model_Criteria extends Model\n      * @var array\n      */\n     public $map = array(\n- \t\t'like' => '%1$s like ?',\n- \t\t'notlike' => '%1$s not like ?',\n- \t\t'eq' => '%1$s = ?',\n- \t\t'neq' => '%1$s != ?',\n- \t\t'bw' => '%1$s like ?',\n- \t\t'ew' => '%1$s like ?',\n- \t\t'lt' => '%1$s < ?',\n- \t\t'gt' => '%1$s > ?',\n- \t    'in' => '%1$s in (%2$s)'\n- \t\t//'between' => __('filter_op_between'),\n- \t\t//'istrue' => __('filter_op_istrue'),\n- \t\t//'isfalse' => __('filter_op_isfalse')\n- \t);\n+        'like' => '%1$s like ?',\n+        'notlike' => '%1$s not like ?',\n+        'eq' => '%1$s = ?',\n+        'neq' => '%1$s != ?',\n+        'bw' => '%1$s like ?',\n+        'ew' => '%1$s like ?',\n+        'lt' => '%1$s < ?',\n+        'gt' => '%1$s > ?',\n+        'in' => '%1$s in (%2$s)'\n+        //'between' => __('filter_op_between'),\n+        //'istrue' => __('filter_op_istrue'),\n+        //'isfalse' => __('filter_op_isfalse')\n+    );\n \n     /**\n      * Holds possible search operators depending on the filter tag type.\n@@ -58,120 +58,131 @@ class Model_Criteria extends Model\n         'bool' => array('eq')\n      );\n \n-     /**\n-      * Container for characters that have to be escaped for usage with SQL.\n-      *\n-      * @var array\n-      */\n-     public $pat = array('%', '_');\n-\n-     /**\n-      * Container for escaped charaters.\n-      *\n-      * @var array\n-      */\n-     public $rep = array('\\%', '\\_');\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToText($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToNumber($value)\n-     {\n-         return (float)str_replace(',', '.', $value);\n-         //return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToEmail($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToTextarea($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToIn($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToBool($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Prepares a value according to its tag and returns it.\n-      *\n-      * @param string the value to convert\n-      * @return mixed\n-      */\n-     public function convertToSelect($value)\n-     {\n-         return $value;\n-     }\n-     \n-     /**\n-      * Returns a mysql datetime string.\n-      *\n-      * @param string the value to convert\n-      * @return string\n-      */\n-     public function convertToDatetime($value)\n-     {\n-         return date('Y-m-d H:i:s', strtotime($value));\n-     }\n-     \n-     /**\n-      * Returns a mysql date string.\n-      *\n-      * @param string the value to convert\n-      * @return string\n-      */\n-     public function convertToDate($value)\n-     {\n-         return date('Y-m-d', strtotime($value));\n-     }\n-    \n+    /**\n+     * Container for characters that have to be escaped for usage with SQL.\n+     *\n+     * @var array\n+     */\n+    public $pat = array('%', '_');\n+\n+    /**\n+     * Container for escaped charaters.\n+     *\n+     * @var array\n+     */\n+    public $rep = array('\\%', '\\_');\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToText($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToNumber($value)\n+    {\n+        return (float)str_replace(',', '.', $value);\n+        //return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToEmail($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToTextarea($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToIn($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToBool($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Prepares a value according to its tag and returns it.\n+     *\n+     * @param string the value to convert\n+     * @return mixed\n+     */\n+    public function convertToSelect($value)\n+    {\n+        return $value;\n+    }\n+\n+    /**\n+     * Returns a mysql datetime string.\n+     *\n+     * @param string the value to convert\n+     * @return string\n+     */\n+    public function convertToDatetime($value)\n+    {\n+        return date('Y-m-d H:i:s', strtotime($value));\n+    }\n+\n+    /**\n+     * Returns a mysql date string.\n+     *\n+     * @param string the value to convert\n+     * @return string\n+     */\n+    public function convertToDate($value)\n+    {\n+        return date('Y-m-d', strtotime($value));\n+    }\n+\n+    /**\n+     * Returns a mysql time string.\n+     *\n+     * @param string the value to convert\n+     * @return string\n+     */\n+    public function convertToTime($value)\n+    {\n+        return date('H:i:s', strtotime($value));\n+    }\n+\n     /**\n      * Returns a string to use as part of a SQL query.\n      *\n@@ -183,12 +194,14 @@ public function convertToDate($value)\n      */\n     public function makeWherePart(Model_Filter $filter)\n     {\n-        if ( ! isset($this->map[$this->bean->op])) throw new Exception('Filter operator has no template');\n+        if (! isset($this->map[$this->bean->op])) {\n+            throw new Exception('Filter operator has no template');\n+        }\n         $template = $this->map[$this->bean->op];\n         $value = $this->mask_filter_value($filter);\n         return sprintf($template, $this->bean->attribute, $value);\n     }\n-    \n+\n     /**\n      * Masks the criterias value and stacks it into the filter values.\n      *\n@@ -199,46 +212,48 @@ public function makeWherePart(Model_Filter $filter)\n     protected function mask_filter_value(Model_Filter $filter)\n     {\n         $add_to_filter_values = true;\n-    \tswitch ($this->bean->op) {\n-    \t\tcase 'like':\n-    \t\t\t$value = '%'.str_replace($this->pat, $this->rep, $this->bean->value).'%';\n-    \t\t\tbreak;\n-    \t\tcase 'notlike':\n-    \t\t\t$value = '%'.str_replace($this->pat, $this->rep, $this->bean->value).'%';\n-    \t\t\tbreak;\n-    \t\tcase 'bw':\n-    \t\t\t$value = str_replace($this->pat, $this->rep, $this->bean->value).'%';\n-    \t\t\tbreak;\n-    \t\tcase 'ew':\n-    \t\t\t$value = '%'.str_replace($this->pat, $this->rep, $this->bean->value);\n-    \t\t\tbreak;\n-    \t\tcase 'in':\n-    \t\t    $_sharedSubName = 'shared'.ucfirst(strtolower($this->bean->substitute));\n-    \t\t    $ids = array_keys($this->bean->{$_sharedSubName});\n-    \t\t    $value = implode(', ', $ids);\n-    \t\t    $add_to_filter_values = false;\n-    \t\t    break;\n-    \t\tdefault:\n-    \t\t\t$value = $this->bean->value;\n-    \t}\n-    \tif ($add_to_filter_values) {\n-    \t    $converter = 'convertTo' . ucfirst(strtolower($this->bean->tag));\n-    \t    $filter->filter_values[] = $this->$converter($value);\n-    \t}\n-    \treturn $value;\n+        switch ($this->bean->op) {\n+            case 'like':\n+                $value = '%'.str_replace($this->pat, $this->rep, $this->bean->value).'%';\n+                break;\n+            case 'notlike':\n+                $value = '%'.str_replace($this->pat, $this->rep, $this->bean->value).'%';\n+                break;\n+            case 'bw':\n+                $value = str_replace($this->pat, $this->rep, $this->bean->value).'%';\n+                break;\n+            case 'ew':\n+                $value = '%'.str_replace($this->pat, $this->rep, $this->bean->value);\n+                break;\n+            case 'in':\n+                $_sharedSubName = 'shared'.ucfirst(strtolower($this->bean->substitute));\n+                $ids = array_keys($this->bean->{$_sharedSubName});\n+                $value = implode(', ', $ids);\n+                $add_to_filter_values = false;\n+                break;\n+            default:\n+                $value = $this->bean->value;\n+        }\n+        if ($add_to_filter_values) {\n+            $converter = 'convertTo' . ucfirst(strtolower($this->bean->tag));\n+            $filter->filter_values[] = $this->$converter($value);\n+        }\n+        return $value;\n     }\n-    \n+\n     /**\n      * Returns array with possible operators for the given tag type.\n      *\n      * @return array $operators\n      */\n     public function operators()\n     {\n-        if (isset($this->operators[$this->bean->tag])) return $this->operators[$this->bean->tag];\n+        if (isset($this->operators[$this->bean->tag])) {\n+            return $this->operators[$this->bean->tag];\n+        }\n         return array();\n     }\n-    \n+\n     /**\n      * Setup validators.\n      */"
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "34c62752ac77331861c6fc880fe7bb6a7919de69",
            "date": "2022-10-08T13:32:03Z",
            "author_login": "sah-comp"
          },
          {
            "sha": "8097a316d38e74006c5c5762423a622aa9de261e",
            "date": "2022-03-27T08:10:53Z",
            "author_login": "sah-comp"
          },
          {
            "sha": "4c3c4982439125522d20958e6ecf23d7746cc4c7",
            "date": "2021-11-12T13:41:59Z",
            "author_login": "sah-comp"
          },
          {
            "sha": "c641712e7eb293e118a8fc489fd2d449632f0d7b",
            "date": "2021-05-25T18:22:44Z",
            "author_login": "sah-comp"
          },
          {
            "sha": "d5e7ad215736b60fddcde671f7f945730e90c924",
            "date": "2021-05-25T18:20:45Z",
            "author_login": "sah-comp"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-863",
    "description": "A vulnerability was found in sah-comp bienlein and classified as problematic. This issue affects some unknown processing. The manipulation leads to cross-site request forgery. The attack may be initiated remotely. The name of the patch is d7836a4f2b241e4745ede194f0f6fb47199cab6b. It is recommended to apply a patch to fix this issue. The identifier VDB-216473 was assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-21T19:15:12.127",
    "last_modified": "2024-11-21T05:29:54.943",
    "fix_date": "2020-09-28T15:07:51Z"
  },
  "references": [
    {
      "url": "https://github.com/sah-comp/bienlein/commit/d7836a4f2b241e4745ede194f0f6fb47199cab6b",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216473",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/sah-comp/bienlein/commit/d7836a4f2b241e4745ede194f0f6fb47199cab6b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216473",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.192651",
    "processing_status": "enhanced"
  }
}