{
  "cve_id": "CVE-2020-36658",
  "github_data": {
    "repository": "LemonLDAPNG/Apache-Session-LDAP",
    "fix_commit": "490722b71eed1ed1ab33d58c78578f23e043561f",
    "related_commits": [
      "490722b71eed1ed1ab33d58c78578f23e043561f",
      "490722b71eed1ed1ab33d58c78578f23e043561f"
    ],
    "patch_url": "https://github.com/LemonLDAPNG/Apache-Session-LDAP/commit/490722b71eed1ed1ab33d58c78578f23e043561f.patch",
    "fix_commit_details": {
      "sha": "490722b71eed1ed1ab33d58c78578f23e043561f",
      "commit_date": "2020-09-04T09:19:28Z",
      "author": {
        "login": "maxbes",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add ldapVerify option for SSL cert validation",
        "length": 45,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 18,
        "additions": 15,
        "deletions": 3
      },
      "files": [
        {
          "filename": "lib/Apache/Session/LDAP.pm",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -44,6 +44,8 @@ Apache::Session::LDAP - An implementation of Apache::Session\n     ldapObjectClass      => 'applicationProcess',\n     ldapAttributeId      => 'cn',\n     ldapAttributeContent => 'description',\n+    ldapVerify           => 'require',\n+    ldapCAFile           => '/etc/ssl/certs/ca-certificates.crt',\n   };\n \n =head1 DESCRIPTION"
        },
        {
          "filename": "lib/Apache/Session/Store/LDAP.pm",
          "status": "modified",
          "additions": 13,
          "deletions": 3,
          "patch": "@@ -119,22 +119,32 @@ sub ldap {\n         push @servers, $server;\n     }\n \n+    # Compatibility\n+    my $caFile = $self->{args}->{ldapCAFile} || $self->{args}->{caFile};\n+    my $caPath = $self->{args}->{ldapCAPath} || $self->{args}->{caPath};\n+\n     # Connect\n     my $ldap = Net::LDAP->new(\n         \\@servers,\n         onerror => undef,\n+        verify  => $self->{args}->{ldapVerify} || \"require\",\n+        ( $caFile ? ( cafile => $caFile ) : () ),\n+        ( $caPath ? ( capath => $caPath ) : () ),\n+\n         (\n             $self->{args}->{ldapPort}\n             ? ( port => $self->{args}->{ldapPort} )\n             : ()\n         ),\n-    ) or die( 'Unable to connect to ' . join( ' ', @servers ) );\n+    ) or die( 'Unable to connect to ' . join( ' ', @servers ) . ': ' . $@ );\n \n     # Start TLS if needed\n+\n     if ($useTls) {\n         my %h = split( /[&=]/, $tlsParam );\n-        $h{cafile} = $self->{args}->{caFile} if ( $self->{args}->{caFile} );\n-        $h{capath} = $self->{args}->{caPath} if ( $self->{args}->{caPath} );\n+        $h{verify} ||= ( $self->{args}->{ldapVerify} || \"require\" );\n+        $h{cafile} ||= $caFile if ($caFile);\n+        $h{capath} ||= $caPath if ($caPath);\n         my $start_tls = $ldap->start_tls(%h);\n         if ( $start_tls->code ) {\n             $self->logError($start_tls);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bdb716659fb0fc7ba438ac18fab907403d09f08c",
            "date": "2020-09-06T13:01:22Z",
            "author_login": "coudot"
          },
          {
            "sha": "1a0bc87ad112b683f526d64dc64b6706fa126673",
            "date": "2020-09-06T12:52:42Z",
            "author_login": "coudot"
          },
          {
            "sha": "b5678db3908ddb19178a0844875cd5482a82fe7b",
            "date": "2020-09-06T12:52:03Z",
            "author_login": "coudot"
          },
          {
            "sha": "a1ac326e4ce45da0e1b2f084731d6df14e9344e0",
            "date": "2020-09-06T12:51:47Z",
            "author_login": "coudot"
          },
          {
            "sha": "c8f64a8b392e213bcd69b13d41e0613cd77b0121",
            "date": "2020-09-06T12:44:57Z",
            "author_login": "coudot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-295",
    "description": "In Apache::Session::LDAP before 0.5, validity of the X.509 certificate is not checked by default when connecting to remote LDAP backends, because the default configuration of the Net::LDAPS module for Perl is used. NOTE: this can, for example, be fixed in conjunction with the CVE-2020-16093 fix.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-01-27T05:15:12.973",
    "last_modified": "2024-11-21T05:30:02.127",
    "fix_date": "2020-09-04T09:19:28Z"
  },
  "references": [
    {
      "url": "https://github.com/LemonLDAPNG/Apache-Session-LDAP/commit/490722b71eed1ed1ab33d58c78578f23e043561f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/01/msg00024.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LemonLDAPNG/Apache-Session-LDAP/commit/490722b71eed1ed1ab33d58c78578f23e043561f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/01/msg00024.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.602225",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Apache-Session-LDAP",
    "owner": "LemonLDAPNG",
    "created_at": "2012-01-06T10:52:39Z",
    "updated_at": "2020-09-06T13:01:32Z",
    "pushed_at": "2020-09-06T13:11:17Z",
    "size": 22,
    "stars": 2,
    "forks": 2,
    "open_issues": 0,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Perl": 10285
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:56:00.208683"
  }
}