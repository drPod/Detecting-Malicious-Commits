{
  "cve_id": "CVE-2020-5216",
  "github_data": {
    "repository": "twitter/secure_headers",
    "fix_commit": "301695706f6a70517c2a90c6ef9b32178440a2d0",
    "related_commits": [
      "301695706f6a70517c2a90c6ef9b32178440a2d0",
      "301695706f6a70517c2a90c6ef9b32178440a2d0"
    ],
    "patch_url": "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0.patch",
    "fix_commit_details": {
      "sha": "301695706f6a70517c2a90c6ef9b32178440a2d0",
      "commit_date": "2020-01-21T23:03:11Z",
      "author": {
        "login": "oreoshake",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-w978-rmpf-qmwg",
        "length": 90,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 13,
        "additions": 9,
        "deletions": 4
      },
      "files": [
        {
          "filename": "lib/secure_headers/headers/content_security_policy.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -106,11 +106,11 @@ def build_source_list_directive(directive)\n       if source_list != OPT_OUT && source_list && source_list.any?\n         minified_source_list = minify_source_list(directive, source_list).join(\" \")\n \n-        if minified_source_list.include?(\";\")\n-          Kernel.warn(\"#{directive} contains a ; in '#{minified_source_list}' which will raise an error in future versions. It has been replaced with a blank space.\")\n+        if minified_source_list =~ /(\\n|;)/\n+          Kernel.warn(\"#{directive} contains a #{$1} in #{minified_source_list.inspect} which will raise an error in future versions. It has been replaced with a blank space.\")\n         end\n \n-        escaped_source_list = minified_source_list.gsub(\";\", \" \")\n+        escaped_source_list = minified_source_list.gsub(/[\\n;]/, \" \")\n         [symbol_to_hyphen_case(directive), escaped_source_list].join(\" \").strip\n       end\n     end"
        },
        {
          "filename": "spec/lib/secure_headers/headers/content_security_policy_spec.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -29,10 +29,15 @@ module SecureHeaders\n       end\n \n       it \"deprecates and escapes semicolons in directive source lists\" do\n-        expect(Kernel).to receive(:warn).with(\"frame_ancestors contains a ; in 'google.com;script-src *;.;' which will raise an error in future versions. It has been replaced with a blank space.\")\n+        expect(Kernel).to receive(:warn).with(%(frame_ancestors contains a ; in \"google.com;script-src *;.;\" which will raise an error in future versions. It has been replaced with a blank space.))\n         expect(ContentSecurityPolicy.new(frame_ancestors: %w(https://google.com;script-src https://*;.;)).value).to eq(\"frame-ancestors google.com script-src * .\")\n       end\n \n+      it \"deprecates and escapes semicolons in directive source lists\" do\n+        expect(Kernel).to receive(:warn).with(%(frame_ancestors contains a \\n in \"\\\\nfoo.com\\\\nhacked\" which will raise an error in future versions. It has been replaced with a blank space.))\n+        expect(ContentSecurityPolicy.new(frame_ancestors: [\"\\nfoo.com\\nhacked\"]).value).to eq(\"frame-ancestors  foo.com hacked\")\n+      end\n+\n       it \"discards 'none' values if any other source expressions are present\" do\n         csp = ContentSecurityPolicy.new(default_opts.merge(child_src: %w('self' 'none')))\n         expect(csp.value).not_to include(\"'none'\")"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8b1029ca6d9a424b903b5beebcd88cbdadf43f4b",
            "date": "2025-01-06T19:25:13Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "10e41fa6361d5674e914499e7903a32ef10834b9",
            "date": "2024-12-16T19:19:12Z",
            "author_login": "rzhade3"
          },
          {
            "sha": "5ff1d1a8b690ad0253bb233c8f549e61ee3816fd",
            "date": "2024-12-16T19:11:30Z",
            "author_login": "arashnd"
          },
          {
            "sha": "b91d1d91531a0e8a0e3a3da13c04598929581f84",
            "date": "2024-12-16T17:19:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6d583bd193e26bb9074157fbcdab8fa14b367e43",
            "date": "2024-12-16T17:19:28Z",
            "author_login": "rzhade3"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-113",
    "description": "In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-01-23T03:15:10.683",
    "last_modified": "2024-11-21T05:33:41.870",
    "fix_date": "2020-01-21T23:03:11Z"
  },
  "references": [
    {
      "url": "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/twitter/secure_headers/commit/301695706f6a70517c2a90c6ef9b32178440a2d0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mitigation",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:37.483401",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "secure_headers",
    "owner": "twitter",
    "created_at": "2012-12-12T01:41:57Z",
    "updated_at": "2025-01-06T19:25:17Z",
    "pushed_at": "2025-01-06T19:25:15Z",
    "size": 1691,
    "stars": 3163,
    "forks": 252,
    "open_issues": 27,
    "watchers": 3163,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Ruby": 161206
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:04:26.765064"
  }
}