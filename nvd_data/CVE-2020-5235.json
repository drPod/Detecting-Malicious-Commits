{
  "cve_id": "CVE-2020-5235",
  "github_data": {
    "repository": "nanopb/nanopb",
    "fix_commit": "45582f1f97f49e2abfdba1463d1e1027682d9856",
    "related_commits": [
      "45582f1f97f49e2abfdba1463d1e1027682d9856",
      "7b396821ddd06df8e39143f16e1dc0a4645b89a3",
      "aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2",
      "45582f1f97f49e2abfdba1463d1e1027682d9856",
      "7b396821ddd06df8e39143f16e1dc0a4645b89a3",
      "aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2"
    ],
    "patch_url": "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856.patch",
    "fix_commit_details": {
      "sha": "45582f1f97f49e2abfdba1463d1e1027682d9856",
      "commit_date": "2020-02-01T16:40:45Z",
      "author": {
        "login": "PetteriAimonen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix invalid free() after failed realloc() (GHSA-gcx3-7m76-287p)",
        "length": 63,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 6,
        "additions": 3,
        "deletions": 3
      },
      "files": [
        {
          "filename": "pb_decode.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -720,11 +720,11 @@ static bool checkreturn decode_pointer_field(pb_istream_t *stream, pb_wire_type_\n                 if (!check_wire_type(wire_type, field))\n                     PB_RETURN_ERROR(stream, \"wrong wire type\");\n \n-                (*size)++;\n-                if (!allocate_field(stream, field->pField, field->data_size, *size))\n+                if (!allocate_field(stream, field->pField, field->data_size, (size_t)(*size + 1)))\n                     return false;\n             \n-                field->pData = *(char**)field->pField + field->data_size * (*size - 1);\n+                field->pData = *(char**)field->pField + field->data_size * (*size);\n+                (*size)++;\n                 initialize_pointer_field(field->pData, field);\n                 return decode_basic_field(stream, field);\n             }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fc7d53c3fea3ce04af5b98234feaa1c7400f73d6",
            "date": "2025-01-10T19:21:07Z",
            "author_login": "PetteriAimonen"
          },
          {
            "sha": "3aeb5256ead42972676f45dc4ec10454c499d143",
            "date": "2025-01-10T14:42:43Z",
            "author_login": "weichslgartner"
          },
          {
            "sha": "19a41112601b58c0cf1f3e95618bd4b14f005720",
            "date": "2024-12-17T18:17:47Z",
            "author_login": "tpudlik"
          },
          {
            "sha": "31d424cab9e6b8ba1eef26a4cae56c5297c57335",
            "date": "2024-12-16T22:32:11Z",
            "author_login": "tpudlik"
          },
          {
            "sha": "fd299d8b6a34c54b1c76a823c7645155c50ff77d",
            "date": "2024-12-11T08:47:21Z",
            "author_login": "PetteriAimonen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
    "cwe_id": "CWE-125",
    "description": "There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-02-04T03:15:10.657",
    "last_modified": "2024-11-21T05:33:44.057",
    "fix_date": "2020-02-01T16:40:45Z"
  },
  "references": [
    {
      "url": "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:37.509699",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nanopb",
    "owner": "nanopb",
    "created_at": "2015-04-29T17:21:37Z",
    "updated_at": "2025-01-14T10:57:59Z",
    "pushed_at": "2025-01-11T07:18:36Z",
    "size": 4470,
    "stars": 4448,
    "forks": 872,
    "open_issues": 63,
    "watchers": 4448,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 510287,
      "Python": 237238,
      "C++": 52886,
      "CMake": 26668,
      "Shell": 10945,
      "Starlark": 10145,
      "Makefile": 1683,
      "Swift": 1485,
      "Batchfile": 957,
      "Dockerfile": 852,
      "Objective-C": 141,
      "MATLAB": 16
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "zlib"
    },
    "collected_at": "2025-01-14T15:04:26.765596"
  }
}