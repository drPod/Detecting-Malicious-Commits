{
  "cve_id": "CVE-2020-5255",
  "github_data": {
    "repository": "symfony/symfony",
    "fix_commit": "dca343442e6a954f96a2609e7b4e9c21ed6d74e6",
    "related_commits": [
      "dca343442e6a954f96a2609e7b4e9c21ed6d74e6",
      "dca343442e6a954f96a2609e7b4e9c21ed6d74e6"
    ],
    "patch_url": "https://github.com/symfony/symfony/commit/dca343442e6a954f96a2609e7b4e9c21ed6d74e6.patch",
    "fix_commit_details": {
      "sha": "dca343442e6a954f96a2609e7b4e9c21ed6d74e6",
      "commit_date": "2020-03-30T14:08:46Z",
      "author": {
        "login": "nicolas-grekas",
        "type": "User",
        "stats": {
          "total_commits": 16251,
          "average_weekly_commits": 20.70191082802548,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 533
        }
      },
      "commit_message": {
        "title": "security #cve-2020-5255 [HttpFoundation] Do not set the default Content-Type based on the Accept header (yceruto)",
        "length": 154,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 30,
        "additions": 26,
        "deletions": 4
      },
      "files": [
        {
          "filename": "src/Symfony/Component/ErrorHandler/ErrorRenderer/SerializerErrorRenderer.php",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -12,6 +12,7 @@\n namespace Symfony\\Component\\ErrorHandler\\ErrorRenderer;\n \n use Symfony\\Component\\ErrorHandler\\Exception\\FlattenException;\n+use Symfony\\Component\\HttpFoundation\\Request;\n use Symfony\\Component\\HttpFoundation\\RequestStack;\n use Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException;\n use Symfony\\Component\\Serializer\\SerializerInterface;\n@@ -30,6 +31,7 @@ class SerializerErrorRenderer implements ErrorRendererInterface\n \n     /**\n      * @param string|callable(FlattenException) $format The format as a string or a callable that should return it\n+     *                                                  formats not supported by Request::getMimeTypes() should be given as mime types\n      * @param bool|callable                     $debug  The debugging mode as a boolean or a callable that should return it\n      */\n     public function __construct(SerializerInterface $serializer, $format, ErrorRendererInterface $fallbackErrorRenderer = null, $debug = false)\n@@ -57,11 +59,16 @@ public function render(\\Throwable $exception): FlattenException\n \n         try {\n             $format = \\is_string($this->format) ? $this->format : ($this->format)($flattenException);\n+            $headers = [\n+                'Content-Type' => Request::getMimeTypes($format)[0] ?? $format,\n+                'Vary' => 'Accept',\n+            ];\n \n             return $flattenException->setAsString($this->serializer->serialize($flattenException, $format, [\n                 'exception' => $exception,\n                 'debug' => \\is_bool($this->debug) ? $this->debug : ($this->debug)($exception),\n-            ]));\n+            ]))\n+            ->setHeaders($flattenException->getHeaders() + $headers);\n         } catch (NotEncodableValueException $e) {\n             return $this->fallbackErrorRenderer->render($exception);\n         }"
        },
        {
          "filename": "src/Symfony/Component/HttpFoundation/Request.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -1590,7 +1590,9 @@ public function isNoCache()\n      * Gets the preferred format for the response by inspecting, in the following order:\n      *   * the request format set using setRequestFormat\n      *   * the values of the Accept HTTP header\n-     *   * the content type of the body of the request.\n+     *\n+     * Note that if you use this method, you should send the \"Vary: Accept\" header\n+     * in the response to prevent any issues with intermediary HTTP caches.\n      */\n     public function getPreferredFormat(?string $default = 'html'): ?string\n     {"
        },
        {
          "filename": "src/Symfony/Component/HttpFoundation/Response.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -275,7 +275,7 @@ public function prepare(Request $request)\n         } else {\n             // Content-type based on the Request\n             if (!$headers->has('Content-Type')) {\n-                $format = $request->getPreferredFormat(null);\n+                $format = $request->getRequestFormat(null);\n                 if (null !== $format && $mimeType = $request->getMimeType($format)) {\n                     $headers->set('Content-Type', $mimeType);\n                 }"
        },
        {
          "filename": "src/Symfony/Component/HttpFoundation/Tests/ResponseTest.php",
          "status": "modified",
          "additions": 14,
          "deletions": 1,
          "patch": "@@ -497,12 +497,25 @@ public function testPrepareDoesNothingIfRequestFormatIsNotDefined()\n         $this->assertEquals('text/html; charset=UTF-8', $response->headers->get('content-type'));\n     }\n \n+    /**\n+     * Same URL cannot produce different Content-Type based on the value of the Accept header,\n+     * unless explicitly stated in the response object.\n+     */\n+    public function testPrepareDoesNotSetContentTypeBasedOnRequestAcceptHeader()\n+    {\n+        $response = new Response('foo');\n+        $request = Request::create('/');\n+        $request->headers->set('Accept', 'application/json');\n+        $response->prepare($request);\n+\n+        $this->assertSame('text/html; charset=UTF-8', $response->headers->get('content-type'));\n+    }\n+\n     public function testPrepareSetContentType()\n     {\n         $response = new Response('foo');\n         $request = Request::create('/');\n         $request->setRequestFormat('json');\n-        $request->headers->remove('accept');\n \n         $response->prepare($request);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f6312d3f3313afc62c5b1e920b2cbfe62fcf3f8e",
            "date": "2025-01-13T09:20:08Z",
            "author_login": "nicolas-grekas"
          },
          {
            "sha": "7b338721ca42ba1d5544658b39359916715170f4",
            "date": "2025-01-12T22:16:37Z",
            "author_login": "derrabus"
          },
          {
            "sha": "1a76f128845de80fe6644c7de12e0dcdad8197f1",
            "date": "2025-01-12T20:19:12Z",
            "author_login": "derrabus"
          },
          {
            "sha": "0d0758e87be2e990d7744e4e66b59e6609a2b3c9",
            "date": "2025-01-12T17:25:07Z",
            "author_login": "fabpot"
          },
          {
            "sha": "946278f9f8cd1bc40c075d37b1d6c2a289c8eb4c",
            "date": "2025-01-12T12:57:08Z",
            "author_login": "alamirault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-435",
    "description": "In Symfony before versions 4.4.7 and 5.0.7, when a `Response` does not contain a `Content-Type` header, affected versions of Symfony can fallback to the format defined in the `Accept` header of the request, leading to a possible mismatch between the response&#39;s content and `Content-Type` header. When the response is cached, this can prevent the use of the website by other users. This has been patched in versions 4.4.7 and 5.0.7.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-03-30T20:15:19.570",
    "last_modified": "2024-11-21T05:33:46.550",
    "fix_date": "2020-03-30T14:08:46Z"
  },
  "references": [
    {
      "url": "https://github.com/symfony/symfony/commit/dca343442e6a954f96a2609e7b4e9c21ed6d74e6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-mcx4-f5f5-4859",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C36JLPHUPKDFAX6D5WYFC4ALO2K7RDUQ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://symfony.com/blog/cve-2020-5255-prevent-cache-poisoning-via-a-response-content-type-header",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/commit/dca343442e6a954f96a2609e7b4e9c21ed6d74e6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-mcx4-f5f5-4859",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C36JLPHUPKDFAX6D5WYFC4ALO2K7RDUQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://symfony.com/blog/cve-2020-5255-prevent-cache-poisoning-via-a-response-content-type-header",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:42.305175",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symfony",
    "owner": "symfony",
    "created_at": "2010-01-04T14:21:21Z",
    "updated_at": "2025-01-14T09:56:31Z",
    "pushed_at": "2025-01-13T13:22:56Z",
    "size": 290479,
    "stars": 29917,
    "forks": 9510,
    "open_issues": 879,
    "watchers": 29917,
    "has_security_policy": false,
    "default_branch": "7.3",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "5.4",
      "6.0",
      "6.1",
      "6.2",
      "6.3",
      "6.4",
      "7.0"
    ],
    "languages": {
      "PHP": 30007525,
      "Twig": 527335,
      "CSS": 56186,
      "JavaScript": 28225,
      "HTML": 16804,
      "Shell": 9654,
      "Makefile": 1612,
      "Hack": 26
    },
    "commit_activity": {
      "total_commits_last_year": 4163,
      "avg_commits_per_week": 80.0576923076923,
      "days_active_last_year": 343
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:44:47.171985"
  }
}