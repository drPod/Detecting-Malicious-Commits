{
  "cve_id": "CVE-2020-5270",
  "github_data": {
    "repository": "PrestaShop/PrestaShop",
    "fix_commit": "cd2219dca49965ae8421bb5a53fc301f3f23c458",
    "related_commits": [
      "cd2219dca49965ae8421bb5a53fc301f3f23c458",
      "cd2219dca49965ae8421bb5a53fc301f3f23c458"
    ],
    "patch_url": "https://github.com/PrestaShop/PrestaShop/commit/cd2219dca49965ae8421bb5a53fc301f3f23c458.patch",
    "fix_commit_details": {
      "sha": "cd2219dca49965ae8421bb5a53fc301f3f23c458",
      "commit_date": "2020-04-15T09:45:04Z",
      "author": {
        "login": "PierreRambaud",
        "type": "User",
        "stats": {
          "total_commits": 2723,
          "average_weekly_commits": 3.787204450625869,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 195
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-375w-q56h-h7qc",
        "length": 107,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 109,
        "additions": 88,
        "deletions": 21
      },
      "files": [
        {
          "filename": "src/PrestaShopBundle/EventListener/BackUrlRedirectResponseListener.php",
          "status": "modified",
          "additions": 19,
          "deletions": 2,
          "patch": "@@ -26,6 +26,8 @@\n \n namespace PrestaShopBundle\\EventListener;\n \n+use Employee;\n+use PrestaShop\\PrestaShop\\Adapter\\LegacyContext;\n use PrestaShop\\PrestaShop\\Core\\Util\\Url\\BackUrlProvider;\n use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n use Symfony\\Component\\HttpFoundation\\Request;\n@@ -41,17 +43,32 @@ final class BackUrlRedirectResponseListener\n      */\n     private $backUrlProvider;\n \n+    /**\n+     * @var int\n+     */\n+    private $employeeId;\n+\n     /**\n      * @param BackUrlProvider $backUrlProvider\n      */\n     public function __construct(\n-        BackUrlProvider $backUrlProvider\n-    ) {\n+        BackUrlProvider $backUrlProvider,\n+        LegacyContext $legacyContext\n+   ) {\n         $this->backUrlProvider = $backUrlProvider;\n+        $context = $legacyContext->getContext();\n+        if (null !== $context && $context->employee instanceof Employee) {\n+            $this->employeeId = $context->employee->id;\n+        }\n     }\n \n     public function onKernelResponse(FilterResponseEvent $event)\n     {\n+        // No need to continue because the employee is not connected\n+        if (empty($this->employeeId)) {\n+            return;\n+        }\n+\n         $currentRequest = $event->getRequest();\n         $originalResponse = $event->getResponse();\n "
        },
        {
          "filename": "src/PrestaShopBundle/Resources/config/services/bundle/event_listener.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -89,6 +89,7 @@ services:\n         class: PrestaShopBundle\\EventListener\\BackUrlRedirectResponseListener\n         arguments:\n           - '@prestashop.core.uti.back_url_provider'\n+          - \"@prestashop.adapter.legacy.context\"\n         tags:\n           - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }\n "
        },
        {
          "filename": "tests/Unit/PrestaShopBundle/EventListener/BackUrlRedirectResponseListenerTest.php",
          "status": "modified",
          "additions": 68,
          "deletions": 19,
          "patch": "@@ -26,7 +26,10 @@\n \n namespace Tests\\Unit\\PrestaShopBundle\\EventListener;\n \n+use Employee;\n+use Context;\n use PHPUnit\\Framework\\TestCase;\n+use PrestaShop\\PrestaShop\\Adapter\\LegacyContext;\n use PrestaShop\\PrestaShop\\Core\\Util\\Url\\BackUrlProvider;\n use PrestaShopBundle\\EventListener\\BackUrlRedirectResponseListener;\n use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n@@ -51,19 +54,47 @@ protected function setUp()\n         ;\n     }\n \n-    public function testItSetsResponseWithBackUrl()\n+    protected function getLegacyContextMock($isConnected = true)\n     {\n-        $expectedUrl = 'http://localhost';\n+        $legacyContextMock = $this->getMockBuilder(LegacyContext::class)\n+            ->setMethods(array(\n+                'getContext',\n+            ))\n+            ->getMock();\n+\n+        $employeeMock = $this->getMockBuilder(Employee::class)->getMock();\n+        $employeeMock->id = $isConnected ? 1 : null;\n+\n+        $contextMock = $this->getMockBuilder(Context::class)->getMock();\n+        $contextMock->employee = $employeeMock;\n+\n+        $legacyContextMock->expects($this->any())->method('getContext')->willReturn($contextMock);\n+\n+        return $legacyContextMock;\n+    }\n \n-        $backUrlProvider = $this\n+    protected function getBackUrlProviderMock($backUrl)\n+    {\n+        $backUrlProviderMock = $this\n             ->getMockBuilder(BackUrlProvider::class)\n             ->getMock()\n         ;\n \n-        $backUrlProvider\n+        $backUrlProviderMock\n             ->method('getBackUrl')\n-            ->willReturn($expectedUrl)\n+            ->willReturn($backUrl)\n         ;\n+        return $backUrlProviderMock;\n+    }\n+\n+    public function testItSetsResponseWithBackUrl()\n+    {\n+        $expectedUrl = 'http://localhost';\n+\n+        $legacyContextMock = $this->getLegacyContextMock();\n+        $backUrlProviderMock = $this->getBackUrlProviderMock(\n+            $expectedUrl\n+        );\n \n         $this->filterResponseEventMock\n             ->method('getResponse')\n@@ -75,7 +106,10 @@ public function testItSetsResponseWithBackUrl()\n             ->willReturn(new Request())\n         ;\n \n-        $responseListener = new BackUrlRedirectResponseListener($backUrlProvider);\n+        $responseListener = new BackUrlRedirectResponseListener(\n+            $backUrlProviderMock,\n+            $legacyContextMock\n+        );\n \n         $responseListener->onKernelResponse($this->filterResponseEventMock);\n \n@@ -87,19 +121,14 @@ public function testItSetsResponseWithBackUrl()\n \n     public function testWhenRequestAndResponseUrlsAreEqualItDoesNotModifyOriginalResponse()\n     {\n-        $requestAndResponseUrl = 'http://localhost';\n-\n-        $backUrlProvider = $this\n-            ->getMockBuilder(BackUrlProvider::class)\n-            ->getMock()\n-        ;\n+        $expectedUrl = 'http://localhost';\n \n-        $backUrlProvider\n-            ->method('getBackUrl')\n-            ->willReturn('http://localhost-not-called.dev')\n-        ;\n+        $legacyContextMock = $this->getLegacyContextMock();\n+        $backUrlProviderMock = $this->getBackUrlProviderMock(\n+            'http://localhost-not-called.dev'\n+        );\n \n-        $originalRedirectResponse = new RedirectResponse($requestAndResponseUrl);\n+        $originalRedirectResponse = new RedirectResponse($expectedUrl);\n \n         $this->filterResponseEventMock\n             ->method('getResponse')\n@@ -112,20 +141,40 @@ public function testWhenRequestAndResponseUrlsAreEqualItDoesNotModifyOriginalRes\n \n         $currentRequest\n             ->method('getRequestUri')\n-            ->willReturn($requestAndResponseUrl)\n+            ->willReturn($expectedUrl)\n         ;\n \n         $this->filterResponseEventMock\n             ->method('getRequest')\n             ->willReturn($currentRequest)\n         ;\n \n-        $responseListener = new BackUrlRedirectResponseListener($backUrlProvider);\n+        $responseListener = new BackUrlRedirectResponseListener(\n+            $backUrlProviderMock,\n+            $legacyContextMock\n+        );\n \n         $responseListener->onKernelResponse($this->filterResponseEventMock);\n \n         $actual = $this->filterResponseEventMock->getResponse();\n \n         $this->assertEquals($originalRedirectResponse, $actual);\n     }\n+\n+    public function testWhenEmployeeIsNotConnected()\n+    {\n+        $expectedUrl = 'http://localhost';\n+\n+        $legacyContextMock = $this->getLegacyContextMock(false);\n+        $backUrlProviderMock = $this->getBackUrlProviderMock(\n+            'http://localhost-not-called.dev'\n+        );\n+\n+        $responseListener = new BackUrlRedirectResponseListener(\n+            $backUrlProviderMock,\n+            $legacyContextMock\n+        );\n+\n+        $this->assertNull($responseListener->onKernelResponse($this->filterResponseEventMock));\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec433fcf5603cc11c33b8ce76940ffca39dfa7ab",
            "date": "2025-01-14T08:52:42Z",
            "author_login": "Progi1984"
          },
          {
            "sha": "2efb789589029b6a04a5a629ba45b71b8f37fd6c",
            "date": "2025-01-13T16:37:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "18e642c26a83c05e0a67b05c86385afd070b68fb",
            "date": "2025-01-13T16:11:19Z",
            "author_login": "Progi1984"
          },
          {
            "sha": "9641d8eca066dce510c61ff7298ee98a77f8bf3d",
            "date": "2025-01-13T16:08:47Z",
            "author_login": "Progi1984"
          },
          {
            "sha": "aca73a664e3f3b5873379124794b41d49741ab2e",
            "date": "2025-01-13T06:36:38Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-601",
    "description": "In PrestaShop between versions 1.7.6.0 and 1.7.6.5, there is an open redirection when using back parameter. The impacts can be many, and vary from the theft of information and credentials to the redirection to malicious websites containing attacker-controlled content, which in some cases even cause XSS attacks. So even though an open redirection might sound harmless at first, the impacts of it can be severe should it be exploitable. The problem is fixed in 1.7.6.5",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-04-20T17:15:15.507",
    "last_modified": "2024-11-21T05:33:48.463",
    "fix_date": "2020-04-15T09:45:04Z"
  },
  "references": [
    {
      "url": "https://github.com/PrestaShop/PrestaShop/commit/cd2219dca49965ae8421bb5a53fc301f3f23c458",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-375w-q56h-h7qc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrestaShop/PrestaShop/commit/cd2219dca49965ae8421bb5a53fc301f3f23c458",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-375w-q56h-h7qc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:44.947946",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "PrestaShop",
    "owner": "PrestaShop",
    "created_at": "2012-11-19T16:41:31Z",
    "updated_at": "2025-01-14T08:52:52Z",
    "pushed_at": "2025-01-14T09:09:53Z",
    "size": 763335,
    "stars": 8320,
    "forks": 4829,
    "open_issues": 2738,
    "watchers": 8320,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "1.7.7.x",
      "1.7.8.x",
      "8.0.x",
      "8.1.x",
      "8.2.x",
      "9.0.x",
      "develop"
    ],
    "languages": {
      "PHP": 29053069,
      "TypeScript": 9773631,
      "Gherkin": 2649810,
      "Twig": 2491625,
      "HTML": 1695839,
      "JavaScript": 1449413,
      "Smarty": 993383,
      "SCSS": 499157,
      "Vue": 331001,
      "CSS": 163083,
      "Less": 19680,
      "Shell": 15677,
      "Makefile": 1814,
      "Dockerfile": 1141
    },
    "commit_activity": {
      "total_commits_last_year": 3038,
      "avg_commits_per_week": 58.42307692307692,
      "days_active_last_year": 281
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:11:29.329599"
  }
}