{
  "cve_id": "CVE-2020-6017",
  "github_data": {
    "repository": "ValveSoftware/GameNetworkingSockets",
    "fix_commit": "e0c86dcb9139771db3db0cfdb1fb8bef0af19c43",
    "related_commits": [
      "e0c86dcb9139771db3db0cfdb1fb8bef0af19c43",
      "e0c86dcb9139771db3db0cfdb1fb8bef0af19c43"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e0c86dcb9139771db3db0cfdb1fb8bef0af19c43",
      "commit_date": "2020-09-03T18:01:54Z",
      "author": {
        "login": "zpostfacto",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Drop unreliable segments with weird offset/size.",
        "length": 122,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 33,
        "additions": 26,
        "deletions": 7
      },
      "files": [
        {
          "filename": "src/steamnetworkingsockets/clientlib/steamnetworkingsockets_snp.cpp",
          "status": "modified",
          "additions": 17,
          "deletions": 5,
          "patch": "@@ -234,7 +234,7 @@ int64 CSteamNetworkConnectionBase::SNP_SendMessage( CSteamNetworkingMessage *pSe\n \t}\n \n \t// Check if they try to send a really large message\n-\tif ( cbData > k_cbMaxUnreliableMsgSize && !( pSendMessage->m_nFlags & k_nSteamNetworkingSend_Reliable )  )\n+\tif ( cbData > k_cbMaxUnreliableMsgSizeSend && !( pSendMessage->m_nFlags & k_nSteamNetworkingSend_Reliable )  )\n \t{\n \t\tSpewWarningRateLimited( usecNow, \"Trying to send a very large (%d bytes) unreliable message.  Sending as reliable instead.\\n\", cbData );\n \t\tpSendMessage->m_nFlags |= k_nSteamNetworkingSend_Reliable;\n@@ -577,11 +577,23 @@ bool CSteamNetworkConnectionBase::ProcessPlainTextDataChunk( int usecTimeSinceLa\n \t\t\t// Decode size, locate segment data\n \t\t\t//\n \t\t\tREAD_SEGMENT_DATA_SIZE( unreliable )\n-\t\t\tAssert( cbSegmentSize > 0 ); // !TEST! Bogus assert, zero byte messages are OK.  Remove after testing\n \n-\t\t\t// Receive the segment\n-\t\t\tbool bLastSegmentInMessage = ( nFrameType & 0x20 ) != 0;\n-\t\t\tSNP_ReceiveUnreliableSegment( nCurMsgNum, nOffset, pSegmentData, cbSegmentSize, bLastSegmentInMessage, usecNow );\n+\t\t\t// Check if offset+size indicates a message larger than what we support.  (Also,\n+\t\t\t// protect against malicious sender sending *extremely* large offset causing overflow.)\n+\t\t\tif ( (int64)nOffset + cbSegmentSize > k_cbMaxUnreliableMsgSizeRecv || cbSegmentSize > k_cbMaxUnreliableSegmentSizeRecv )\n+\t\t\t{\n+\n+\t\t\t\t// Since this is unreliable data, we can just ignore the segment.\n+\t\t\t\tSpewWarningRateLimited( usecNow, \"[%s] Ignoring unreliable segment with invalid offset %u size %d\\n\",\n+\t\t\t\t\tGetDescription(), nOffset, cbSegmentSize );\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\n+\t\t\t\t// Receive the segment\n+\t\t\t\tbool bLastSegmentInMessage = ( nFrameType & 0x20 ) != 0;\n+\t\t\t\tSNP_ReceiveUnreliableSegment( nCurMsgNum, nOffset, pSegmentData, cbSegmentSize, bLastSegmentInMessage, usecNow );\n+\t\t\t}\n \t\t}\n \t\telse if ( ( nFrameType & 0xe0 ) == 0x40 )\n \t\t{"
        },
        {
          "filename": "src/steamnetworkingsockets/clientlib/steamnetworkingsockets_snp.h",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -90,7 +90,14 @@ constexpr int k_nMaxBufferedUnreliableSegments = 20;\n // If app tries to send a message larger than N bytes unreliably,\n // complain about it, and automatically convert to reliable.\n // About 15 segments.\n-constexpr int k_cbMaxUnreliableMsgSize = 15*1100;\n+constexpr int k_cbMaxUnreliableMsgSizeSend = 15*1100;\n+\n+// Max possible size of an unreliable segment we could receive.\n+constexpr int k_cbMaxUnreliableSegmentSizeRecv = k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv;\n+\n+// Largest possible total unreliable message we can receive, based on the constraints above\n+constexpr int k_cbMaxUnreliableMsgSizeRecv = k_nMaxBufferedUnreliableSegments*k_cbMaxUnreliableSegmentSizeRecv;\n+COMPILE_TIME_ASSERT( k_cbMaxUnreliableMsgSizeRecv > k_cbMaxUnreliableMsgSizeSend + 4096 ); // Postel's law; confirm how much slack we have here\n \n class CSteamNetworkConnectionBase;\n class CConnectionTransport;\n@@ -468,7 +475,7 @@ struct SSNPRecvUnreliableSegmentData\n {\n \tint m_cbSegSize = -1;\n \tbool m_bLast = false;\n-\tchar m_buf[ k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv ];\n+\tchar m_buf[ k_cbMaxUnreliableSegmentSizeRecv ];\n };\n \n struct SSNPPacketGap"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "725e273c7442bac7a8bc903c0b210b1c15c34d92",
            "date": "2022-12-29T11:23:57Z",
            "author_login": "LilyWangLL"
          },
          {
            "sha": "405e2bfc759d239024c07852d570bcf248ca5e57",
            "date": "2024-09-29T20:55:53Z",
            "author_login": "TTimo"
          },
          {
            "sha": "538ae81ec96e8612f5cbf173662fac2ad937449f",
            "date": "2024-09-29T20:33:45Z",
            "author_login": "TTimo"
          },
          {
            "sha": "8343dd9c4a57f0eb0ce1f24003a3461fb65cbf60",
            "date": "2024-09-22T22:14:15Z",
            "author_login": "TTimo"
          },
          {
            "sha": "e449ea68279bdde7b0fccf74122e1d665a0c783d",
            "date": "2024-09-29T20:14:54Z",
            "author_login": "TTimo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-120",
    "description": "Valve's Game Networking Sockets prior to version v1.2.0 improperly handles long unreliable segments in function SNP_ReceiveUnreliableSegment() when configured to support plain-text messages, leading to a Heap-Based Buffer Overflow and resulting in a memory corruption and possibly even a remote code execution.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-12-03T14:15:11.020",
    "last_modified": "2024-11-21T05:34:59.377",
    "fix_date": "2020-09-03T18:01:54Z"
  },
  "references": [
    {
      "url": "https://github.com/ValveSoftware/GameNetworkingSockets/commit/e0c86dcb9139771db3db0cfdb1fb8bef0af19c43",
      "source": "cve@checkpoint.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://research.checkpoint.com/2020/game-on-finding-vulnerabilities-in-valves-steam-sockets/",
      "source": "cve@checkpoint.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ValveSoftware/GameNetworkingSockets/commit/e0c86dcb9139771db3db0cfdb1fb8bef0af19c43",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://research.checkpoint.com/2020/game-on-finding-vulnerabilities-in-valves-steam-sockets/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.489197",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "GameNetworkingSockets",
    "owner": "ValveSoftware",
    "created_at": "2018-03-21T18:43:20Z",
    "updated_at": "2025-01-26T06:51:22Z",
    "pushed_at": "2024-09-30T16:34:18Z",
    "size": 15982,
    "stars": 8419,
    "forks": 632,
    "open_issues": 49,
    "watchers": 8419,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 2289979,
      "C": 64082,
      "CMake": 60298,
      "Python": 14633,
      "Shell": 2011
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-26T07:43:08.675971"
  }
}