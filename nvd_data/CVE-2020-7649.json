{
  "cve_id": "CVE-2020-7649",
  "github_data": {
    "repository": "snyk/broker",
    "fix_commit": "90e0bac07a800b7c4c6646097c9c89d6b878b429",
    "related_commits": [
      "90e0bac07a800b7c4c6646097c9c89d6b878b429",
      "90e0bac07a800b7c4c6646097c9c89d6b878b429"
    ],
    "patch_url": "https://github.com/snyk/broker/commit/90e0bac07a800b7c4c6646097c9c89d6b878b429.patch",
    "fix_commit_details": {
      "sha": "90e0bac07a800b7c4c6646097c9c89d6b878b429",
      "commit_date": "2020-03-18T16:25:45Z",
      "author": {
        "login": "iamtmrobinson",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: reject paths with directory traversal",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 32,
        "deletions": 8
      },
      "files": [
        {
          "filename": "lib/filters/index.js",
          "status": "modified",
          "additions": 13,
          "deletions": 7,
          "patch": "@@ -1,6 +1,7 @@\n const minimatch = require('minimatch');\n const pathRegexp = require('path-to-regexp');\n const qs = require('qs');\n+const path = require('path');\n const undefsafe = require('undefsafe');\n const replace = require('../replace-vars');\n const authHeader = require('../auth-header');\n@@ -32,7 +33,7 @@ module.exports = ruleSource => {\n   // array of entries with\n   const tests = rules.map(entry => {\n     const keys = [];\n-    let { method, origin, path, valid, stream } = entry;\n+    let { method, origin, path: entryPath, valid, stream } = entry;\n     method = (method || 'get').toLowerCase();\n     valid = valid || [];\n \n@@ -44,27 +45,32 @@ module.exports = ruleSource => {\n     const fromConfig = {};\n \n     // slightly bespoke version of replace-vars.js\n-    path = (path || '').replace(/(\\${.*?})/g, (_, match) => {\n+    entryPath = (entryPath || '').replace(/(\\${.*?})/g, (_, match) => {\n       const key = match.slice(2, -1); // ditch the wrappers\n       fromConfig[key] = config[key] || '';\n       return ':' + key;\n     });\n \n     origin = replace(origin, config);\n \n-    if (path[0] !== '/') {\n-      path = '/' + path;\n+    if (entryPath[0] !== '/') {\n+      entryPath = '/' + entryPath;\n     }\n \n-    logger.info({ method, path }, 'adding new filter rule');\n-    const regexp = pathRegexp(path, keys);\n+    logger.info({ method, path: entryPath }, 'adding new filter rule');\n+    const regexp = pathRegexp(entryPath, keys);\n \n     return (req) => {\n       // check the request method\n       if (req.method.toLowerCase() !== method && method !== 'any') {\n         return false;\n       }\n \n+      // Do not allow directory traversal\n+      if (path.normalize(req.url) !== req.url) {\n+        return false;\n+      }\n+\n       // Discard any fragments before further processing\n       const mainURI = req.url.split('#')[0];\n \n@@ -133,7 +139,7 @@ module.exports = ruleSource => {\n         }\n       }\n \n-      logger.debug({ path, origin, url, querystring }, 'rule matched');\n+      logger.debug({ path: entryPath, origin, url, querystring }, 'rule matched');\n \n       querystring = (querystring) ? `?${querystring}` : '';\n       return {"
        },
        {
          "filename": "test/fixtures/accept/github.json",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -8,6 +8,12 @@\n       \"method\": \"GET\",\n       \"path\": \"/repos/:name/:repo/contents/:path*/package.json\",\n       \"origin\": \"https://${GITHUB_TOKEN}@${GITHUB_API}\"\n+    },\n+    {\n+      \"//\": \"used to whitelist a folder\",\n+      \"method\": \"GET\",\n+      \"path\": \"/repos/:name/:repo/contents/:path*/docs/*\",\n+      \"origin\": \"https://${GITHUB_TOKEN}@${GITHUB_API}\"\n     } \n   ]\n }"
        },
        {
          "filename": "test/unit/filters.test.js",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -7,7 +7,7 @@ const jsonBuffer = (body) => Buffer.from(JSON.stringify(body));\n \n test('Filter on URL', t => {\n   t.test('for GitHub private filters', (t) => {\n-    t.plan(3);\n+    t.plan(4);\n     \n     const ruleSource = require(__dirname + '/../fixtures/accept/github.json');\n     const filter = Filters(ruleSource.private);\n@@ -39,6 +39,18 @@ test('Filter on URL', t => {\n       t.end();\n     });\n \n+    t.test('should block when path includes directory traversal', (t) => {\n+      filter({\n+        url: '/repos/angular/angular/contents/path/to/docs/../../sensitive/file.js',\n+        method: 'GET',\n+      }, (error, res) => {\n+        t.equal(error.message, 'blocked', 'has been blocked');\n+        t.equal(res, undefined, 'no follow allowed');\n+      });\n+\n+      t.end();\n+    });\n+\n     t.end();\n   });\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fb700220faa5cfa799fe4ac8ef1822bd8d06339b",
            "date": "2024-12-18T17:05:35Z",
            "author_login": "aarlaud"
          },
          {
            "sha": "c2ecde9f5b8350db9ffaa8a12919af63586de838",
            "date": "2024-12-18T16:51:27Z",
            "author_login": "aarlaud"
          },
          {
            "sha": "fb9a897068a7666483fa716178ee54fa1f3e0961",
            "date": "2024-12-18T16:37:18Z",
            "author_login": "aarlaud"
          },
          {
            "sha": "d1f8e65a31d4d519622c64a7dfb6965ff37c6ae7",
            "date": "2024-12-18T16:29:50Z",
            "author_login": "aarlaud"
          },
          {
            "sha": "ca6b19364b9b140840833a8e1ed81456233e1b6d",
            "date": "2024-12-17T10:43:13Z",
            "author_login": "pavel-snyk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "This affects the package snyk-broker before 4.73.0. It allows arbitrary file reads for users with access to Snyk's internal network via directory traversal.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-07-25T14:15:09.987",
    "last_modified": "2024-11-21T05:37:32.447",
    "fix_date": "2020-03-18T16:25:45Z"
  },
  "references": [
    {
      "url": "https://github.com/snyk/broker/commit/90e0bac07a800b7c4c6646097c9c89d6b878b429",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570608",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://updates.snyk.io/snyk-broker-security-fixes-152338",
      "source": "report@snyk.io",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/snyk/broker/commit/90e0bac07a800b7c4c6646097c9c89d6b878b429",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570608",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://updates.snyk.io/snyk-broker-security-fixes-152338",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:11.515905",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "broker",
    "owner": "snyk",
    "created_at": "2016-08-11T16:05:13Z",
    "updated_at": "2025-01-13T17:17:25Z",
    "pushed_at": "2025-01-10T17:38:15Z",
    "size": 4006,
    "stars": 105,
    "forks": 125,
    "open_issues": 4,
    "watchers": 105,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 677699,
      "Shell": 45970,
      "Dockerfile": 5109,
      "JavaScript": 467
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:48:26.288202"
  }
}