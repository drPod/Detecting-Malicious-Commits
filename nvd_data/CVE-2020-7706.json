{
  "cve_id": "CVE-2020-7706",
  "github_data": {
    "repository": "mattinsler/connie-lang",
    "fix_commit": "ef376d404c712dd28309ba07f28a8f87f24a015a",
    "related_commits": [
      "ef376d404c712dd28309ba07f28a8f87f24a015a",
      "ef376d404c712dd28309ba07f28a8f87f24a015a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "ef376d404c712dd28309ba07f28a8f87f24a015a",
      "commit_date": "2020-08-17T18:47:59Z",
      "author": {
        "login": "mattinsler",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "added security tests, changed to yarn, bump version",
        "length": 51,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 734,
        "additions": 519,
        "deletions": 215
      },
      "files": [
        {
          "filename": "lib/connie-lang.js",
          "status": "modified",
          "additions": 51,
          "deletions": 33,
          "patch": "@@ -1,11 +1,11 @@\n var vm = require('vm');\n var isPlainObject = require('lodash.isplainobject');\n \n-var getValue = function(obj, key) {\n+var getValue = function (obj, key) {\n   var o = obj;\n   var keys = Array.isArray(key) ? key : key.split('.');\n \n-  for (var x = 0; x < keys.length -1; ++x) {\n+  for (var x = 0; x < keys.length - 1; ++x) {\n     var k = keys[x];\n     if (!o[k]) return;\n     o = o[k];\n@@ -14,18 +14,22 @@ var getValue = function(obj, key) {\n   return o[keys[keys.length - 1]];\n };\n \n-var setValue = function(obj, key, value) {\n+var setValue = function (obj, key, value) {\n   var o = obj;\n   var keys = Array.isArray(key) ? key : key.split('.');\n \n   for (var x = 1; x < keys.length; ++x) {\n     var currentKey = keys[x];\n     var lastKey = keys[x - 1];\n-    if (typeof(currentKey) === 'number') {\n-      if (!o[lastKey]) { o[lastKey] = []; }\n+    if (typeof currentKey === 'number') {\n+      if (!o[lastKey]) {\n+        o[lastKey] = [];\n+      }\n       o = o[lastKey];\n-    } else if (typeof(currentKey) === 'string') {\n-      if (!o[lastKey]) { o[lastKey] = {}; }\n+    } else if (typeof currentKey === 'string') {\n+      if (!o[lastKey]) {\n+        o[lastKey] = {};\n+      }\n       o = o[lastKey];\n     } else {\n       throw new Error('Oopsy, key arrays should only be strings and numbers:', keys);\n@@ -36,63 +40,77 @@ var setValue = function(obj, key, value) {\n   return obj;\n };\n \n-\n var PARSE_RX = /([^\\}:]+)(:([^\\}]+))?/;\n \n var EnvVarInterpreter = {\n   type: '$',\n-  replace: function(value, context, parseContext) {\n+  replace: function (value, context, parseContext) {\n     var m = PARSE_RX.exec(parseContext.value);\n-    if (!m) { return value; }\n+    if (!m) {\n+      return value;\n+    }\n \n     var newValue = context.env[m[1]] || m[3] || '';\n     return value.slice(0, parseContext.start) + newValue + value.slice(parseContext.end);\n-  }\n+  },\n };\n \n var ReferenceInterpreter = {\n   type: '@',\n-  replace: function(value, context, parseContext) {\n+  replace: function (value, context, parseContext) {\n     var m = PARSE_RX.exec(parseContext.value);\n-    if (!m) { return value; }\n+    if (!m) {\n+      return value;\n+    }\n \n     var newValue = getValue(context.config, m[1]) || m[3];\n-    if (value === parseContext.match) { return newValue; }\n+    if (value === parseContext.match) {\n+      return newValue;\n+    }\n     return value.slice(0, parseContext.start) + newValue + value.slice(parseContext.end);\n-  }\n+  },\n };\n \n var Interpreters = [ReferenceInterpreter, EnvVarInterpreter];\n \n var ConnieLang = {\n   Interpreters: Interpreters,\n-  InterpretersByType: Interpreters.reduce(function(o, i) {o[i.type] = i; return o;}, {}),\n+  InterpretersByType: Interpreters.reduce(function (o, i) {\n+    o[i.type] = i;\n+    return o;\n+  }, {}),\n \n-  getEntries: function(config) {\n+  getEntries: function (config) {\n     var entries = [];\n \n-    var iter = function(value, prefix) {\n+    var iter = function (value, prefix) {\n       if (!prefix) prefix = [];\n \n       if (Array.isArray(value)) {\n-        value.forEach(function(arrValue, idx) {\n+        value.forEach(function (arrValue, idx) {\n           iter(arrValue, prefix.concat(idx));\n         });\n       } else if (isPlainObject(value)) {\n-        Object.keys(value).forEach(function(key) {\n+        var keys = Object.keys(value);\n+        if (keys.includes('__proto__') || keys.includes('constructor')) {\n+          return;\n+        }\n+        keys.forEach(function (key) {\n           iter(value[key], prefix.concat(key));\n         });\n       } else {\n-        entries.push({key: prefix, value: value});\n+        entries.push({ key: prefix, value: value });\n       }\n     };\n \n     iter(config);\n     return entries;\n   },\n \n-  firstInnermostInterpreterFromValue: function(value) {\n-    if (value === null || value === undefined) { return null; }\n+  firstInnermostInterpreterFromValue: function (value) {\n+    if (value === null || value === undefined) {\n+      return null;\n+    }\n \n     var start = -1;\n     var interpreterTypes = Object.keys(ConnieLang.InterpretersByType);\n@@ -109,9 +127,9 @@ var ConnieLang = {\n           value: value.slice(start + 2, idx),\n           start: start,\n           end: idx + 1,\n-          replaceInValue: function(value, context) {\n+          replaceInValue: function (value, context) {\n             return interpreter.replace(value, context, parseContext);\n-          }\n+          },\n         };\n \n         return parseContext;\n@@ -121,19 +139,19 @@ var ConnieLang = {\n     return null;\n   },\n \n-  parse: function(configObj, envObj) {\n+  parse: function (configObj, envObj) {\n     var context = {\n-      config: configObj,\n-      env: envObj || process.env\n+      config: Object.assign(Object.create(null), configObj),\n+      env: envObj || process.env,\n     };\n \n     var entries = ConnieLang.getEntries(context.config);\n \n     // iterate until no updates have been made\n-    var digest = function() {\n+    var digest = function () {\n       var updated = false;\n \n-      entries.forEach(function(e) {\n+      entries.forEach(function (e) {\n         var interpreter = ConnieLang.firstInnermostInterpreterFromValue(e.value, context);\n         if (!interpreter) return;\n \n@@ -147,15 +165,15 @@ var ConnieLang = {\n       return updated;\n     };\n \n-    while(digest()) ;\n+    while (digest());\n \n     var result = {};\n-    entries.forEach(function(e) {\n+    entries.forEach(function (e) {\n       setValue(result, e.key, e.value);\n     });\n \n     return result;\n-  }\n+  },\n };\n \n module.exports = ConnieLang;"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -1,7 +1,7 @@\n {\n   \"name\": \"connie-lang\",\n   \"description\": \"Configuration language for connie\",\n-  \"version\": \"0.1.0\",\n+  \"version\": \"0.1.1\",\n   \"homepage\": \"https://github.com/mattinsler/connie-lang\",\n   \"repository\": {\n     \"type\": \"git\",\n@@ -23,5 +23,8 @@\n   \"devDependencies\": {\n     \"mocha\": \"2.0.1\"\n   },\n-  \"keywords\": [\"configuration\", \"connie\"]\n-}\n+  \"keywords\": [\n+    \"configuration\",\n+    \"connie\"\n+  ]\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "test/connie-lang.security.test.js",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+var assert = require('assert');\n+var ConnieLang = require('../');\n+\n+describe('ConnieLang', function () {\n+  it('should not allow prototype pollution at the top level', function () {\n+    var obj = Object.create(null);\n+    obj['__proto__'] = { polluted: true };\n+    var config = ConnieLang.parse(obj);\n+    assert.deepEqual(config, {});\n+    assert.equal(Object.polluted, undefined);\n+  });\n+\n+  it('should not allow prototype pollution at a nested level', function () {\n+    var obj = Object.create(null);\n+    obj['__proto__'] = { polluted: true };\n+    var config = ConnieLang.parse({ foo: obj });\n+    assert.deepEqual(config, {});\n+    assert.equal(Object.polluted, undefined);\n+  });\n+});"
        },
        {
          "filename": "test/connie-lang.test.js",
          "status": "added",
          "additions": 193,
          "deletions": 0,
          "patch": "@@ -0,0 +1,193 @@\n+var assert = require('assert');\n+var ConnieLang = require('../');\n+\n+describe('ConnieLang', function () {\n+  describe('getEntries', function () {\n+    it('should return entries for nested objects', function () {\n+      var entries = ConnieLang.getEntries({\n+        foo: 'bar',\n+        bar: {\n+          baz: {\n+            a: {\n+              b: 'c',\n+              c: 'd',\n+              d: ['e', 'f', 'g'],\n+            },\n+          },\n+        },\n+      });\n+\n+      assert.deepEqual(entries, [\n+        { key: ['foo'], value: 'bar' },\n+        { key: ['bar', 'baz', 'a', 'b'], value: 'c' },\n+        { key: ['bar', 'baz', 'a', 'c'], value: 'd' },\n+        { key: ['bar', 'baz', 'a', 'd', 0], value: 'e' },\n+        { key: ['bar', 'baz', 'a', 'd', 1], value: 'f' },\n+        { key: ['bar', 'baz', 'a', 'd', 2], value: 'g' },\n+      ]);\n+    });\n+\n+    it('should return entries for an array', function () {\n+      var entries = ConnieLang.getEntries(['foo', { bar: 'baz' }]);\n+\n+      assert.deepEqual(entries, [\n+        { key: [0], value: 'foo' },\n+        { key: [1, 'bar'], value: 'baz' },\n+      ]);\n+    });\n+\n+    it('filters out entries that have __proto__ in the key path', function () {\n+      var obj = Object.create(null);\n+      obj['__proto__'] = { polluted: true };\n+      var entries = ConnieLang.getEntries(obj);\n+      assert.deepEqual(entries, []);\n+    });\n+\n+    it('filters out entries that have __proto__ in the deep key path', function () {\n+      var obj = Object.create(null);\n+      obj['__proto__'] = { polluted: true };\n+      var entries = ConnieLang.getEntries({ foo: obj });\n+      assert.deepEqual(entries, []);\n+    });\n+\n+    it('filters out entries that have constructor in the key path', function () {\n+      var entries = ConnieLang.getEntries({ constructor: { polluted: true } });\n+      assert.deepEqual(entries, []);\n+    });\n+\n+    it('filters out entries that have constructor in the deep key path', function () {\n+      var entries = ConnieLang.getEntries({ foo: { constructor: { polluted: true } } });\n+      assert.deepEqual(entries, []);\n+    });\n+  });\n+\n+  describe('firstInnermostInterpreterFromValue', function () {\n+    it('should return null when no interpreters are found', function () {\n+      var interpreter = ConnieLang.firstInnermostInterpreterFromValue('foobar');\n+      assert.equal(interpreter, null);\n+    });\n+\n+    it('should handle complex values', function () {\n+      var value = '${FOO_${PORT}} @{foo.bar}';\n+\n+      var interpreter = ConnieLang.firstInnermostInterpreterFromValue(value);\n+      assert.equal(interpreter.type, '$');\n+      assert.equal(interpreter.match, '${PORT}');\n+      assert.equal(interpreter.value, 'PORT');\n+      assert.equal(interpreter.start, 6);\n+      assert.equal(interpreter.end, 13);\n+    });\n+  });\n+\n+  describe('parse', function () {\n+    it('should parse environment variables correctly', function () {\n+      var config = ConnieLang.parse(\n+        {\n+          a: 'PORT',\n+          b: {\n+            c: {\n+              d: 'e',\n+              e: '${@{a}}',\n+            },\n+          },\n+        },\n+        {\n+          PORT: '3000',\n+        }\n+      );\n+\n+      assert.deepEqual(config, {\n+        a: 'PORT',\n+        b: {\n+          c: {\n+            d: 'e',\n+            e: '3000',\n+          },\n+        },\n+      });\n+    });\n+\n+    it('should parse inside of arrays', function () {\n+      var config = ConnieLang.parse(\n+        {\n+          bar: 'hey',\n+          arr: [{ foo: '@{bar}' }, { bar: '${FOOBAR:4}' }, '${PORT}'],\n+        },\n+        {\n+          PORT: '3000',\n+        }\n+      );\n+\n+      assert.deepEqual(config, {\n+        bar: 'hey',\n+        arr: [{ foo: 'hey' }, { bar: 4 }, '3000'],\n+      });\n+    });\n+\n+    it('should parse env inside of env', function () {\n+      var config = ConnieLang.parse(\n+        {\n+          a: '${FOO_${BAR}}',\n+          b: '${FOO_${BAZ}}',\n+        },\n+        {\n+          BAR: 'BAR',\n+          BAZ: 'BAZ',\n+          FOO_BAR: 'hello',\n+          FOO_BAZ: 'world',\n+        }\n+      );\n+\n+      assert.deepEqual(config, {\n+        a: 'hello',\n+        b: 'world',\n+      });\n+    });\n+\n+    it('should ignore null and undefined values', function () {\n+      var config = ConnieLang.parse({\n+        a: {\n+          b: ['foo', null, 4],\n+        },\n+        b: undefined,\n+      });\n+\n+      assert.deepEqual(config, {\n+        a: {\n+          b: ['foo', null, 4],\n+        },\n+        b: undefined,\n+      });\n+    });\n+\n+    it('should substitute a missing env var with an empty string', function () {\n+      var config = ConnieLang.parse({\n+        foo: '${HELLO}',\n+      });\n+\n+      assert.deepEqual(config, {\n+        foo: '',\n+      });\n+    });\n+\n+    it('should substitute a default value when env var does not exist', function () {\n+      var config = ConnieLang.parse({\n+        foo: '${HELLO:default}',\n+      });\n+\n+      assert.deepEqual(config, {\n+        foo: 'default',\n+      });\n+    });\n+\n+    it('should substitute a default value when ref does not exist', function () {\n+      var config = ConnieLang.parse({\n+        foo: '@{bar:default}',\n+      });\n+\n+      assert.deepEqual(config, {\n+        foo: 'default',\n+      });\n+    });\n+  });\n+});"
        },
        {
          "filename": "test/test-connie-lang.js",
          "status": "removed",
          "additions": 0,
          "deletions": 179,
          "patch": "@@ -1,179 +0,0 @@\n-var assert = require('assert');\n-var ConnieLang = require('../');\n-\n-describe('ConnieLang', function() {\n-  describe('getEntries', function() {\n-    it('should return entries for nested objects', function() {\n-      var entries = ConnieLang.getEntries({\n-        foo: 'bar',\n-        bar: {\n-          baz: {\n-            a: {\n-              b: 'c',\n-              c: 'd',\n-              d: ['e', 'f', 'g']\n-            }\n-          }\n-        }\n-      });\n-\n-      assert.deepEqual(entries, [\n-        {key: ['foo'], value: 'bar'},\n-        {key: ['bar', 'baz', 'a', 'b'], value: 'c'},\n-        {key: ['bar', 'baz', 'a', 'c'], value: 'd'},\n-        {key: ['bar', 'baz', 'a', 'd', 0], value: 'e'},\n-        {key: ['bar', 'baz', 'a', 'd', 1], value: 'f'},\n-        {key: ['bar', 'baz', 'a', 'd', 2], value: 'g'}\n-      ]);\n-    });\n-\n-    it('should return entries for an array', function() {\n-      var entries = ConnieLang.getEntries([\n-        'foo',\n-        {bar: 'baz'}\n-      ]);\n-\n-      assert.deepEqual(entries, [\n-        {key: [0], value: 'foo'},\n-        {key: [1, 'bar'], value: 'baz'}\n-      ]);\n-    });\n-  });\n-\n-  describe('firstInnermostInterpreterFromValue', function() {\n-    it('should return null when no interpreters are found', function() {\n-      var interpreter = ConnieLang.firstInnermostInterpreterFromValue('foobar');\n-      assert.equal(interpreter, null);\n-    });\n-\n-    it('should handle complex values', function() {\n-      var value = '${FOO_${PORT}} @{foo.bar}';\n-\n-      var interpreter = ConnieLang.firstInnermostInterpreterFromValue(value);\n-      assert.equal(interpreter.type, '$');\n-      assert.equal(interpreter.match, '${PORT}');\n-      assert.equal(interpreter.value, 'PORT');\n-      assert.equal(interpreter.start, 6);\n-      assert.equal(interpreter.end, 13);\n-    });\n-  });\n-\n-  describe('parse', function() {\n-    it('should parse environment variables correctly', function() {\n-      var config = ConnieLang.parse({\n-        a: 'PORT',\n-        b: {\n-          c: {\n-            d: 'e',\n-            e: '${@{a}}'\n-          }\n-        },\n-      }, {\n-        PORT: '3000'\n-      });\n-\n-      assert.deepEqual(config, {\n-        a: 'PORT',\n-        b: {\n-          c: {\n-            d: 'e',\n-            e: '3000'\n-          }\n-        }\n-      });\n-    });\n-\n-    it('should parse inside of arrays', function() {\n-      var config = ConnieLang.parse({\n-        bar: 'hey',\n-        arr: [\n-          {foo: '@{bar}'},\n-          {bar: '${FOOBAR:4}'},\n-          '${PORT}'\n-        ]\n-      }, {\n-        PORT: '3000'\n-      });\n-\n-      assert.deepEqual(config, {\n-        bar: 'hey',\n-        arr: [\n-          {foo: 'hey'},\n-          {bar: 4},\n-          '3000'\n-        ]\n-      });\n-    });\n-\n-    it('should parse env inside of env', function() {\n-      var config = ConnieLang.parse({\n-        a: '${FOO_${BAR}}',\n-        b: '${FOO_${BAZ}}'\n-      }, {\n-        BAR: 'BAR',\n-        BAZ: 'BAZ',\n-        FOO_BAR: 'hello',\n-        FOO_BAZ: 'world'\n-      });\n-\n-      assert.deepEqual(config, {\n-        a: 'hello',\n-        b: 'world'\n-      });\n-    });\n-\n-    it('should ignore null and undefined values', function() {\n-      var config = ConnieLang.parse({\n-        a: {\n-          b: [\n-            'foo',\n-            null,\n-            4\n-          ]\n-        },\n-        b: undefined\n-      });\n-\n-      assert.deepEqual(config, {\n-        a: {\n-          b: [\n-            'foo',\n-            null,\n-            4\n-          ]\n-        },\n-        b: undefined\n-      });\n-    });\n-\n-    it('should substitute a missing env var with an empty string', function() {\n-      var config = ConnieLang.parse({\n-        foo: '${HELLO}'\n-      });\n-\n-      assert.deepEqual(config, {\n-        foo: ''\n-      });\n-    });\n-\n-    it('should substitute a default value when env var does not exist', function() {\n-      var config = ConnieLang.parse({\n-        foo: '${HELLO:default}'\n-      });\n-\n-      assert.deepEqual(config, {\n-        foo: 'default'\n-      });\n-    });\n-\n-    it('should substitute a default value when ref does not exist', function() {\n-      var config = ConnieLang.parse({\n-        foo: '@{bar:default}',\n-      });\n-\n-      assert.deepEqual(config, {\n-        foo: 'default'\n-      });\n-    });\n-  });\n-});"
        },
        {
          "filename": "yarn.lock",
          "status": "added",
          "additions": 249,
          "deletions": 0,
          "patch": "@@ -0,0 +1,249 @@\n+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n+# yarn lockfile v1\n+\n+\n+commander@0.6.1:\n+  version \"0.6.1\"\n+  resolved \"https://registry.npmjs.org/commander/-/commander-0.6.1.tgz#fa68a14f6a945d54dbbe50d8cdb3320e9e3b1a06\"\n+  integrity sha1-+mihT2qUXVTbvlDYzbMyDp47GgY=\n+\n+commander@2.3.0:\n+  version \"2.3.0\"\n+  resolved \"https://registry.npmjs.org/commander/-/commander-2.3.0.tgz#fd430e889832ec353b9acd1de217c11cb3eef873\"\n+  integrity sha1-/UMOiJgy7DU7ms0d4hfBHLPu+HM=\n+\n+debug@2.0.0:\n+  version \"2.0.0\"\n+  resolved \"https://registry.npmjs.org/debug/-/debug-2.0.0.tgz#89bd9df6732b51256bc6705342bba02ed12131ef\"\n+  integrity sha1-ib2d9nMrUSVrxnBTQrugLtEhMe8=\n+  dependencies:\n+    ms \"0.6.2\"\n+\n+diff@1.0.8:\n+  version \"1.0.8\"\n+  resolved \"https://registry.npmjs.org/diff/-/diff-1.0.8.tgz#343276308ec991b7bc82267ed55bc1411f971666\"\n+  integrity sha1-NDJ2MI7Jkbe8giZ+1VvBQR+XFmY=\n+\n+escape-string-regexp@1.0.2:\n+  version \"1.0.2\"\n+  resolved \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.2.tgz#4dbc2fe674e71949caf3fb2695ce7f2dc1d9a8d1\"\n+  integrity sha1-Tbwv5nTnGUnK8/smlc5/LcHZqNE=\n+\n+glob@3.2.3:\n+  version \"3.2.3\"\n+  resolved \"https://registry.npmjs.org/glob/-/glob-3.2.3.tgz#e313eeb249c7affaa5c475286b0e115b59839467\"\n+  integrity sha1-4xPusknHr/qlxHUoaw4RW1mDlGc=\n+  dependencies:\n+    graceful-fs \"~2.0.0\"\n+    inherits \"2\"\n+    minimatch \"~0.2.11\"\n+\n+graceful-fs@~2.0.0:\n+  version \"2.0.3\"\n+  resolved \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-2.0.3.tgz#7cd2cdb228a4a3f36e95efa6cc142de7d1a136d0\"\n+  integrity sha1-fNLNsiiko/Nule+mzBQt59GhNtA=\n+\n+growl@1.8.1:\n+  version \"1.8.1\"\n+  resolved \"https://registry.npmjs.org/growl/-/growl-1.8.1.tgz#4b2dec8d907e93db336624dcec0183502f8c9428\"\n+  integrity sha1-Sy3sjZB+k9szZiTc7AGDUC+MlCg=\n+\n+inherits@2:\n+  version \"2.0.4\"\n+  resolved \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c\"\n+  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\n+\n+jade@0.26.3:\n+  version \"0.26.3\"\n+  resolved \"https://registry.npmjs.org/jade/-/jade-0.26.3.tgz#8f10d7977d8d79f2f6ff862a81b0513ccb25686c\"\n+  integrity sha1-jxDXl32NefL2/4YqgbBRPMslaGw=\n+  dependencies:\n+    commander \"0.6.1\"\n+    mkdirp \"0.3.0\"\n+\n+lodash._basebind@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._basebind/-/lodash._basebind-2.4.1.tgz#e940b9ebdd27c327e0a8dab1b55916c5341e9575\"\n+  integrity sha1-6UC5690nwyfgqNqxtVkWxTQelXU=\n+  dependencies:\n+    lodash._basecreate \"~2.4.1\"\n+    lodash._setbinddata \"~2.4.1\"\n+    lodash._slice \"~2.4.1\"\n+    lodash.isobject \"~2.4.1\"\n+\n+lodash._basecreate@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._basecreate/-/lodash._basecreate-2.4.1.tgz#f8e6f5b578a9e34e541179b56b8eeebf4a287e08\"\n+  integrity sha1-+Ob1tXip405UEXm1a47uv0oofgg=\n+  dependencies:\n+    lodash._isnative \"~2.4.1\"\n+    lodash.isobject \"~2.4.1\"\n+    lodash.noop \"~2.4.1\"\n+\n+lodash._basecreatecallback@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._basecreatecallback/-/lodash._basecreatecallback-2.4.1.tgz#7d0b267649cb29e7a139d0103b7c11fae84e4851\"\n+  integrity sha1-fQsmdknLKeehOdAQO3wR+uhOSFE=\n+  dependencies:\n+    lodash._setbinddata \"~2.4.1\"\n+    lodash.bind \"~2.4.1\"\n+    lodash.identity \"~2.4.1\"\n+    lodash.support \"~2.4.1\"\n+\n+lodash._basecreatewrapper@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._basecreatewrapper/-/lodash._basecreatewrapper-2.4.1.tgz#4d31f2e7de7e134fbf2803762b8150b32519666f\"\n+  integrity sha1-TTHy595+E0+/KAN2K4FQsyUZZm8=\n+  dependencies:\n+    lodash._basecreate \"~2.4.1\"\n+    lodash._setbinddata \"~2.4.1\"\n+    lodash._slice \"~2.4.1\"\n+    lodash.isobject \"~2.4.1\"\n+\n+lodash._createwrapper@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._createwrapper/-/lodash._createwrapper-2.4.1.tgz#51d6957973da4ed556e37290d8c1a18c53de1607\"\n+  integrity sha1-UdaVeXPaTtVW43KQ2MGhjFPeFgc=\n+  dependencies:\n+    lodash._basebind \"~2.4.1\"\n+    lodash._basecreatewrapper \"~2.4.1\"\n+    lodash._slice \"~2.4.1\"\n+    lodash.isfunction \"~2.4.1\"\n+\n+lodash._isnative@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._isnative/-/lodash._isnative-2.4.1.tgz#3ea6404b784a7be836c7b57580e1cdf79b14832c\"\n+  integrity sha1-PqZAS3hKe+g2x7V1gOHN95sUgyw=\n+\n+lodash._objecttypes@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._objecttypes/-/lodash._objecttypes-2.4.1.tgz#7c0b7f69d98a1f76529f890b0cdb1b4dfec11c11\"\n+  integrity sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE=\n+\n+lodash._setbinddata@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._setbinddata/-/lodash._setbinddata-2.4.1.tgz#f7c200cd1b92ef236b399eecf73c648d17aa94d2\"\n+  integrity sha1-98IAzRuS7yNrOZ7s9zxkjReqlNI=\n+  dependencies:\n+    lodash._isnative \"~2.4.1\"\n+    lodash.noop \"~2.4.1\"\n+\n+lodash._shimisplainobject@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._shimisplainobject/-/lodash._shimisplainobject-2.4.1.tgz#01ec93b2ee63e59f1aa83899ac6fa0905ac7596f\"\n+  integrity sha1-AeyTsu5j5Z8aqDiZrG+gkFrHWW8=\n+  dependencies:\n+    lodash.forin \"~2.4.1\"\n+    lodash.isfunction \"~2.4.1\"\n+\n+lodash._slice@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash._slice/-/lodash._slice-2.4.1.tgz#745cf41a53597b18f688898544405efa2b06d90f\"\n+  integrity sha1-dFz0GlNZexj2iImFREBe+isG2Q8=\n+\n+lodash.bind@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.bind/-/lodash.bind-2.4.1.tgz#5d19fa005c8c4d236faf4742c7b7a1fcabe29267\"\n+  integrity sha1-XRn6AFyMTSNvr0dCx7eh/Kvikmc=\n+  dependencies:\n+    lodash._createwrapper \"~2.4.1\"\n+    lodash._slice \"~2.4.1\"\n+\n+lodash.forin@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.forin/-/lodash.forin-2.4.1.tgz#8089eaed7d25b08672b7c66fd07ac55d062320eb\"\n+  integrity sha1-gInq7X0lsIZyt8Zv0HrFXQYjIOs=\n+  dependencies:\n+    lodash._basecreatecallback \"~2.4.1\"\n+    lodash._objecttypes \"~2.4.1\"\n+\n+lodash.identity@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.identity/-/lodash.identity-2.4.1.tgz#6694cffa65fef931f7c31ce86c74597cf560f4f1\"\n+  integrity sha1-ZpTP+mX++TH3wxzobHRZfPVg9PE=\n+\n+lodash.isfunction@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.isfunction/-/lodash.isfunction-2.4.1.tgz#2cfd575c73e498ab57e319b77fa02adef13a94d1\"\n+  integrity sha1-LP1XXHPkmKtX4xm3f6Aq3vE6lNE=\n+\n+lodash.isobject@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz#5a2e47fe69953f1ee631a7eba1fe64d2d06558f5\"\n+  integrity sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=\n+  dependencies:\n+    lodash._objecttypes \"~2.4.1\"\n+\n+lodash.isplainobject@2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-2.4.1.tgz#ac7385e2ea9ac0321f30dc3b8032a6d2231a8011\"\n+  integrity sha1-rHOF4uqawDIfMNw7gDKm0iMagBE=\n+  dependencies:\n+    lodash._isnative \"~2.4.1\"\n+    lodash._shimisplainobject \"~2.4.1\"\n+\n+lodash.noop@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.noop/-/lodash.noop-2.4.1.tgz#4fb54f816652e5ae10e8f72f717a388c7326538a\"\n+  integrity sha1-T7VPgWZS5a4Q6PcvcXo4jHMmU4o=\n+\n+lodash.support@~2.4.1:\n+  version \"2.4.1\"\n+  resolved \"https://registry.npmjs.org/lodash.support/-/lodash.support-2.4.1.tgz#320e0b67031673c28d7a2bb5d9e0331a45240515\"\n+  integrity sha1-Mg4LZwMWc8KNeiu12eAzGkUkBRU=\n+  dependencies:\n+    lodash._isnative \"~2.4.1\"\n+\n+lru-cache@2:\n+  version \"2.7.3\"\n+  resolved \"https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz#6d4524e8b955f95d4f5b58851ce21dd72fb4e952\"\n+  integrity sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=\n+\n+minimatch@~0.2.11:\n+  version \"0.2.14\"\n+  resolved \"https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz#c74e780574f63c6f9a090e90efbe6ef53a6a756a\"\n+  integrity sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=\n+  dependencies:\n+    lru-cache \"2\"\n+    sigmund \"~1.0.0\"\n+\n+minimist@0.0.8:\n+  version \"0.0.8\"\n+  resolved \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz#857fcabfc3397d2625b8228262e86aa7a011b05d\"\n+  integrity sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\n+\n+mkdirp@0.3.0:\n+  version \"0.3.0\"\n+  resolved \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz#1bbf5ab1ba827af23575143490426455f481fe1e\"\n+  integrity sha1-G79asbqCevI1dRQ0kEJkVfSB/h4=\n+\n+mkdirp@0.5.0:\n+  version \"0.5.0\"\n+  resolved \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.0.tgz#1d73076a6df986cd9344e15e71fcc05a4c9abf12\"\n+  integrity sha1-HXMHam35hs2TROFecfzAWkyavxI=\n+  dependencies:\n+    minimist \"0.0.8\"\n+\n+mocha@2.0.1:\n+  version \"2.0.1\"\n+  resolved \"https://registry.npmjs.org/mocha/-/mocha-2.0.1.tgz#5a16e88b856d0c4145d8c6888c27ebd4fab13e90\"\n+  integrity sha1-Whboi4VtDEFF2MaIjCfr1PqxPpA=\n+  dependencies:\n+    commander \"2.3.0\"\n+    debug \"2.0.0\"\n+    diff \"1.0.8\"\n+    escape-string-regexp \"1.0.2\"\n+    glob \"3.2.3\"\n+    growl \"1.8.1\"\n+    jade \"0.26.3\"\n+    mkdirp \"0.5.0\"\n+\n+ms@0.6.2:\n+  version \"0.6.2\"\n+  resolved \"https://registry.npmjs.org/ms/-/ms-0.6.2.tgz#d89c2124c6fdc1353d65a8b77bf1aac4b193708c\"\n+  integrity sha1-2JwhJMb9wTU9Zai3e/GqxLGTcIw=\n+\n+sigmund@~1.0.0:\n+  version \"1.0.1\"\n+  resolved \"https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz#3ff21f198cad2175f9f3b781853fd94d0d19b590\"\n+  integrity sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "87c720deb45d25a9d3cc2a055dd364b3481ee9e7",
            "date": "2020-08-17T18:49:56Z",
            "author_login": "mattinsler"
          },
          {
            "sha": "ef376d404c712dd28309ba07f28a8f87f24a015a",
            "date": "2020-08-17T18:47:59Z",
            "author_login": "mattinsler"
          },
          {
            "sha": "65d08437978dbdc7513df908c5a03068bc39bf16",
            "date": "2016-05-09T05:13:41Z",
            "author_login": "mattinsler"
          },
          {
            "sha": "1a99afa35073a05a43036efec2b141e3c42748b3",
            "date": "2015-09-30T20:03:13Z",
            "author_login": "mattinsler"
          },
          {
            "sha": "13d1fba00b8ba797d2445b47df0a1c0e18308d01",
            "date": "2015-01-16T09:41:19Z",
            "author_login": "mattinsler"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-1321",
    "description": "The package connie-lang before 0.1.1 are vulnerable to Prototype Pollution in the configuration language library used by connie.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-08-18T10:15:13.343",
    "last_modified": "2024-11-21T05:37:38.977",
    "fix_date": "2020-08-17T18:47:59Z"
  },
  "references": [
    {
      "url": "https://github.com/mattinsler/connie-lang/commit/ef376d404c712dd28309ba07f28a8f87f24a015a",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-CONNIELANG-598853",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mattinsler/connie-lang/commit/ef376d404c712dd28309ba07f28a8f87f24a015a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-CONNIELANG-598853",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:03.797550",
    "processing_status": "enhanced"
  }
}