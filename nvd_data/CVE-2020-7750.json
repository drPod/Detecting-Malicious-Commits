{
  "cve_id": "CVE-2020-7750",
  "github_data": {
    "repository": "LLK/scratch-svg-renderer",
    "fix_commit": "9ebf57588aa596c4fa3bb64209e10ade395aee90",
    "related_commits": [
      "9ebf57588aa596c4fa3bb64209e10ade395aee90",
      "9ebf57588aa596c4fa3bb64209e10ade395aee90"
    ],
    "patch_url": "https://github.com/LLK/scratch-svg-renderer/commit/9ebf57588aa596c4fa3bb64209e10ade395aee90.patch",
    "fix_commit_details": {
      "sha": "9ebf57588aa596c4fa3bb64209e10ade395aee90",
      "commit_date": "2020-10-15T19:40:59Z",
      "author": {
        "login": "picklesrus",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #179 from LLK/hotfix/purify-just-in-time",
        "length": 101,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 92,
        "additions": 73,
        "deletions": 19
      },
      "files": [
        {
          "filename": ".travis.yml",
          "status": "modified",
          "additions": 33,
          "deletions": 10,
          "patch": "@@ -3,7 +3,10 @@ node_js:\n   - 6\n   - node\n env:\n-  - NODE_ENV=production\n+  global:\n+    - NODE_ENV=production\n+    - NPM_TAG=latest\n+    - RELEASE_TIMESTAMP=\"$(date +'%Y%m%d%H%M%S')\"\n sudo: false\n cache:\n   directories:\n@@ -21,16 +24,36 @@ jobs:\n       node_js: 6\n       script: npm run build\n       before_deploy:\n-      - VPKG=$($(npm bin)/json -f package.json version)\n-      - export VERSION=${VPKG}-prerelease.$(date +%Y%m%d%H%M%S)\n-      - npm --no-git-tag-version version $VERSION\n-      - git config --global user.email \"$(git log --pretty=format:\"%ae\" -n1)\"\n-      - git config --global user.name \"$(git log --pretty=format:\"%an\" -n1)\"\n+      - >\n+        if [ -z \"$BEFORE_DEPLOY_RAN\" ]; then\n+          VPKG=$($(npm bin)/json -f package.json version)\n+          export RELEASE_VERSION=${VPKG}-prerelease.${RELEASE_TIMESTAMP}\n+          npm --no-git-tag-version version $RELEASE_VERSION\n+          if [[ \"$TRAVIS_BRANCH\" == hotfix/* ]]; then # double brackets are important for matching the wildcard\n+            export NPM_TAG=hotfix\n+          fi\n+          git config --global user.email \"$(git log --pretty=format:\"%ae\" -n1)\"\n+          git config --global user.name \"$(git log --pretty=format:\"%an\" -n1)\"\n+          export BEFORE_DEPLOY_RAN=true\n+        fi\n       deploy:\n-        provider: npm\n+      - provider: npm\n+        on:\n+          branch:\n+          - master\n+          - develop\n+          - hotfix/*\n+          condition: $TRAVIS_EVENT_TYPE != cron\n         skip_cleanup: true\n-        \"on\":\n-          all_branches: true\n-          condition: $RELEASE_BRANCHES =~ $TRAVIS_BRANCH\n         email: $NPM_EMAIL\n         api_key: $NPM_TOKEN\n+        tag: $NPM_TAG\n+      - provider: script\n+        on:\n+          branch:\n+          - master\n+          - develop\n+          - hotfix/*\n+          condition: $TRAVIS_EVENT_TYPE != cron\n+        skip_cleanup: true\n+        script: if npm info | grep -q $RELEASE_VERSION; then git tag $RELEASE_VERSION && git push https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git $RELEASE_VERSION; fi"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -22,6 +22,7 @@\n   \"dependencies\": {\n     \"base64-js\": \"1.2.1\",\n     \"base64-loader\": \"1.0.0\",\n+    \"dompurify\": \"2.1.1\",\n     \"minilog\": \"3.1.0\",\n     \"transformation-matrix\": \"1.15.0\",\n     \"scratch-render-fonts\": \"1.0.0-prerelease.20200507182347\""
        },
        {
          "filename": "src/playground/index.html",
          "status": "modified",
          "additions": 19,
          "deletions": 2,
          "patch": "@@ -27,6 +27,10 @@\n     </p>\n     <p>\n         <input type=\"button\" id=\"trigger-render\" value=\"Render\">\n+        <label for=\"shouldRenderReference\">\n+          <input type=\"checkbox\" id=\"shouldRenderReference\" checked />\n+          Render Reference?\n+        </label>\n     </p>\n \n     <div class=\"columns\">\n@@ -39,6 +43,17 @@\n             <span id=\"reference\"></span>\n        </div>\n      </div>\n+    <div class=\"columns\">\n+        <div class=\"column\">\n+            <div>Rendered Content</div>\n+            <textarea id=\"renderedContent\" wrap=\"off\" cols=\"50\" rows=\"50\"></textarea>\n+       </div>\n+       <div class=\"column\">\n+            <div>Reference</div>\n+            <span id=\"reference\"></span>\n+            <textarea id=\"referenceContent\" wrap=\"off\" cols=\"50\" rows=\"50\"></textarea>\n+       </div>\n+     </div>\n \n     <script src=\"scratch-svg-renderer.js\"></script>\n     <script>\n@@ -59,7 +74,8 @@\n \n         function renderSVGString(str) {\n             renderer.fromString(str);\n-            renderer._draw(parseFloat(scaleSlider.value));\n+            renderer._draw(parseFloat(scaleSlider.value), ()=>{});\n+            renderedContent.value = renderer.toString(true);\n         }\n \n         function updateReferenceImage() {\n@@ -92,7 +108,8 @@\n \n         function renderLoadedString() {\n             renderSVGString(loadedSVGString);\n-            updateReferenceImage();\n+            referenceContent.value = loadedSVGString;\n+            shouldRenderReference.checked && updateReferenceImage();\n         }\n \n         function scaleSliderChanged() {"
        },
        {
          "filename": "src/svg-renderer.js",
          "status": "modified",
          "additions": 20,
          "deletions": 7,
          "patch": "@@ -1,3 +1,4 @@\n+const DOMPurify = require('dompurify');\n const inlineSvgFonts = require('./font-inliner');\n const SvgElement = require('./svg-element');\n const convertFonts = require('./font-converter');\n@@ -363,19 +364,31 @@ class SvgRenderer {\n         // which returns the full bounding-box of all drawn SVG\n         // elements, similar to how Scratch 2.0 did measurement.\n         const svgSpot = document.createElement('span');\n-        // Clone the svg tag. This tag becomes unusable/undrawable in browsers\n-        // once it's appended to the page, perhaps for security reasons?\n-        const tempTag = this._svgTag.cloneNode(/* deep */ true);\n+        // Since we're adding user-provided SVG to document.body,\n+        // sanitizing is required. This should not affect bounding box calculation.\n+        // outerHTML is attribute of Element (and not HTMLElement), so use it instead of\n+        // calling serializer or toString()\n+        // NOTE: this._svgTag remains untouched!\n+        const rawValue = this._svgTag.outerHTML;\n+        const sanitizedValue = DOMPurify.sanitize(rawValue, {\n+            // Use SVG profile (no HTML elements)\n+            USE_PROFILES: {svg: true},\n+            // Remove some tags that Scratch does not use.\n+            FORBID_TAGS: ['a', 'audio', 'canvas', 'video'],\n+            // Allow data URI in image tags (e.g. SVGs converted from bitmap)\n+            ADD_DATA_URI_TAGS: ['image']\n+        });\n         let bbox;\n         try {\n-            svgSpot.appendChild(tempTag);\n+            // Insert sanitized value.\n+            svgSpot.innerHTML = sanitizedValue;\n             document.body.appendChild(svgSpot);\n-            // Take the bounding box.\n-            bbox = tempTag.getBBox();\n+            // Take the bounding box. We have to get elements via svgSpot\n+            // because we added it via innerHTML.\n+            bbox = svgSpot.children[0].getBBox();\n         } finally {\n             // Always destroy the element, even if, for example, getBBox throws.\n             document.body.removeChild(svgSpot);\n-            svgSpot.removeChild(tempTag);\n         }\n \n         // Enlarge the bbox from the largest found stroke width"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2470f679bbc189c633e583e052ce14ac13a079a0",
            "date": "2025-01-14T22:18:17Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "0c7fcefdf1e9c876cedb6ac0333d8baa4ad1a86c",
            "date": "2025-01-14T15:34:07Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "f26940f3873a2ebe50935104585fbce07e32ce11",
            "date": "2025-01-14T00:43:58Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "ab823eaa095523767d9ceb8d044f3a069ec2e9bd",
            "date": "2025-01-13T20:41:40Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "0f1690c05b6d542f72b8aac74a99c8f1eba52002",
            "date": "2025-01-12T10:41:15Z",
            "author_login": "semantic-release-bot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "This affects the package scratch-svg-renderer before 0.2.0-prerelease.20201019174008. The loadString function does not escape SVG properly, which can be used to inject arbitrary elements into the DOM via the _transformMeasurements function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-10-21T17:15:13.343",
    "last_modified": "2024-11-21T05:37:43.953",
    "fix_date": "2020-10-15T19:40:59Z"
  },
  "references": [
    {
      "url": "https://github.com/LLK/scratch-svg-renderer/commit/9ebf57588aa596c4fa3bb64209e10ade395aee90",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-SCRATCHSVGRENDERER-1020497",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LLK/scratch-svg-renderer/commit/9ebf57588aa596c4fa3bb64209e10ade395aee90",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-SCRATCHSVGRENDERER-1020497",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:06.187832",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "scratch-svg-renderer",
    "owner": "LLK",
    "created_at": "2018-01-12T17:13:37Z",
    "updated_at": "2025-01-14T00:44:02Z",
    "pushed_at": "2025-01-14T15:34:14Z",
    "size": 4671,
    "stars": 42,
    "forks": 85,
    "open_issues": 60,
    "watchers": 42,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "JavaScript": 123914,
      "HTML": 50907,
      "Shell": 93
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T15:52:22.607740"
  }
}