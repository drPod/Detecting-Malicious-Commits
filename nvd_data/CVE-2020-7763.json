{
  "cve_id": "CVE-2020-7763",
  "github_data": {
    "repository": "pofider/phantom-html-to-pdf",
    "fix_commit": "b5d2da2639a49a95e0bdb3bc0c987cb6406b8259",
    "related_commits": [
      "b5d2da2639a49a95e0bdb3bc0c987cb6406b8259",
      "b5d2da2639a49a95e0bdb3bc0c987cb6406b8259"
    ],
    "patch_url": "https://github.com/pofider/phantom-html-to-pdf/commit/b5d2da2639a49a95e0bdb3bc0c987cb6406b8259.patch",
    "fix_commit_details": {
      "sha": "b5d2da2639a49a95e0bdb3bc0c987cb6406b8259",
      "commit_date": "2020-11-02T14:51:26Z",
      "author": {
        "login": "pofider",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix access to files without protocol",
        "length": 36,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 65,
        "additions": 40,
        "deletions": 25
      },
      "files": [
        {
          "filename": "lib/scripts/conversionScriptPart.js",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -19,19 +19,19 @@ page.onResourceRequested = function (request, networkRequest) {\n     console.log('Request ' + request.url);\n     if (request.url.lastIndexOf(body.url, 0) === 0) {\n         return;\n-    }\n-\n-    //potentially dangerous request\n-    if (request.url.lastIndexOf(\"file:///\", 0) === 0 && !body.allowLocalFilesAccess) {\n-        networkRequest.abort();\n-        return;\n-    }\n+    }   \n \n     //to support cdn like format //cdn.jquery...\n     if (request.url.lastIndexOf(\"file://\", 0) === 0 && request.url.lastIndexOf(\"file:///\", 0) !== 0) {\n         networkRequest.changeUrl(request.url.replace(\"file://\", \"http://\"));\n     }\n \n+     //potentially dangerous request\n+     if (request.url.lastIndexOf(\"http://\", 0) !== 0 && request.url.lastIndexOf(\"https://\", 0) && !body.allowLocalFilesAccess) {\n+        networkRequest.abort();\n+        return;\n+    }\n+\n     if (body.waitForJS && request.url.lastIndexOf(\"http://intruct-javascript-ending\", 0) === 0) {\n         pageJSisDone = true;\n     }"
        },
        {
          "filename": "test/test.js",
          "status": "modified",
          "additions": 33,
          "deletions": 18,
          "patch": "@@ -1,6 +1,6 @@\n-var should = require(\"should\"),\n+var should = require(\"should\"),   \n     path = require(\"path\"),\n-    fs = require(\"fs\"),\n+    fs = require(\"fs\"),    \n     phantomjs = require(\"phantomjs\"),\n     phantomjs2 = require(\"phantomjs-prebuilt\")\n     tmpDir = path.join(__dirname, \"temp\"),\n@@ -95,21 +95,7 @@ describe(\"phantom html to pdf\", function () {\n                     done();\n                 });\n             });\n-        });\n-\n-        it('should create a pdf file ignoring ssl errors', function(done) {\n-            conversion({\n-                url: 'https://sygris.com'\n-            }, function(err, res) {\n-                if (err) {\n-                    return done(err);\n-                }\n-\n-                res.numberOfPages.should.be.eql(1);\n-                res.stream.should.have.property(\"readable\");\n-                done();\n-            });\n-        });\n+        });       \n \n         it('should wait for page js execution', function(done) {\n             conversion({\n@@ -201,7 +187,7 @@ describe(\"phantom html to pdf\", function () {\n                     return done(err);\n                 }\n \n-                JSON.stringify(res.logs).should.containEql('foo');\n+                ;\n                 done();\n             });\n         });\n@@ -261,6 +247,35 @@ describe(\"phantom html to pdf\", function () {\n                 done();\n             })\n         });\n+\n+        it('should reject local files', function(done) {\n+            conversion({\n+                html: `<script>\n+                document.write(window.location='${__filename.replace(/\\\\/g, '/')}')                \n+              </script>`\n+            }, function(err, res) {\n+                if (err) {\n+                    return done(err);\n+                }\n+                JSON.stringify(res.logs).should.containEql('Unable to load resource')\n+                done()\n+            });\n+        });\n+\n+        it('should allow local files when allowLocalFilesAccess', function(done) {\n+            conversion({\n+                allowLocalFilesAccess: true,\n+                html: `<script>\n+                document.write(window.location='${__filename.replace(/\\\\/g, '/')}')                \n+              </script>`\n+            }, function(err, res) {\n+                if (err) {\n+                    return done(err);\n+                }\n+                JSON.stringify(res.logs).should.not.containEql('Unable to load resource')\n+                done()\n+            });\n+        });\n     }\n \n     rmDir = function (dirPath) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f7283ce6344e6e22da9ec4ee35aa2ea7ed25743c",
            "date": "2023-07-20T10:51:00Z",
            "author_login": "pofider"
          },
          {
            "sha": "49ecac574f14e4f9174e8b6d71d8853e523f7ba0",
            "date": "2023-07-20T10:50:34Z",
            "author_login": "pofider"
          },
          {
            "sha": "2515ef1e08a012f2a98ee3e796cd573c59a40a13",
            "date": "2023-06-28T22:22:09Z",
            "author_login": "pofider"
          },
          {
            "sha": "1d0d99d1f5ba9aa96348fba515d2216dd48b9ea1",
            "date": "2023-06-28T22:21:11Z",
            "author_login": "pofider"
          },
          {
            "sha": "c013c54c30871484684e4468389b05f43445374a",
            "date": "2023-06-27T21:20:42Z",
            "author_login": "pofider"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "This affects the package phantom-html-to-pdf before 0.6.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-05T14:15:12.097",
    "last_modified": "2024-11-21T05:37:45.423",
    "fix_date": "2020-11-02T14:51:26Z"
  },
  "references": [
    {
      "url": "https://github.com/pofider/phantom-html-to-pdf/commit/b5d2da2639a49a95e0bdb3bc0c987cb6406b8259",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-PHANTOMHTMLTOPDF-1023598",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pofider/phantom-html-to-pdf/commit/b5d2da2639a49a95e0bdb3bc0c987cb6406b8259",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-PHANTOMHTMLTOPDF-1023598",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.447819",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "phantom-html-to-pdf",
    "owner": "pofider",
    "created_at": "2015-03-05T20:21:17Z",
    "updated_at": "2024-09-15T07:22:20Z",
    "pushed_at": "2023-07-20T10:52:33Z",
    "size": 248,
    "stars": 159,
    "forks": 33,
    "open_issues": 22,
    "watchers": 159,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 34861
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:30:23.887949"
  }
}