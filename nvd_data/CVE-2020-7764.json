{
  "cve_id": "CVE-2020-7764",
  "github_data": {
    "repository": "delvedor/find-my-way",
    "fix_commit": "ab408354690e6b9cf3c4724befb3b3fa4bb90aac",
    "related_commits": [
      "ab408354690e6b9cf3c4724befb3b3fa4bb90aac",
      "ab408354690e6b9cf3c4724befb3b3fa4bb90aac"
    ],
    "patch_url": "https://github.com/delvedor/find-my-way/commit/ab408354690e6b9cf3c4724befb3b3fa4bb90aac.patch",
    "fix_commit_details": {
      "sha": "ab408354690e6b9cf3c4724befb3b3fa4bb90aac",
      "commit_date": "2020-11-06T17:30:04Z",
      "author": {
        "login": "delvedor",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Enable versioning on demand (#172)",
        "length": 34,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 53,
        "additions": 47,
        "deletions": 6
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -144,7 +144,9 @@ router.on('GET', '/example', (req, res, params, store) => {\n \n ##### Versioned routes\n \n-If needed you can provide a `version` option, which will allow you to declare multiple versions of the same route.\n+If needed you can provide a `version` option, which will allow you to declare multiple versions of the same route. If you never configure a versioned route, the `'Accept-Version'` header will be ignored.\n+\n+Remember to set a [Vary](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary) header in your responses with the value you are using for deifning the versioning (e.g.: 'Accept-Version'), to prevent cache poisoning attacks. You can also configure this as part your Proxy/CDN.\n \n ###### default\n <a name=\"semver\"></a>"
        },
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -51,7 +51,7 @@ function Router (opts) {\n   this.ignoreTrailingSlash = opts.ignoreTrailingSlash || false\n   this.maxParamLength = opts.maxParamLength || 100\n   this.allowUnsafeRegex = opts.allowUnsafeRegex || false\n-  this.versioning = opts.versioning || acceptVersionStrategy\n+  this.versioning = opts.versioning || acceptVersionStrategy(false)\n   this.trees = {}\n   this.routes = []\n }\n@@ -111,6 +111,9 @@ Router.prototype._on = function _on (method, path, opts, handler, store) {\n   })\n \n   const version = opts.version\n+  if (version != null && this.versioning.disabled) {\n+    this.versioning = acceptVersionStrategy(true)\n+  }\n \n   for (var i = 0, len = path.length; i < len; i++) {\n     // search for parametric or wildcard routes"
        },
        {
          "filename": "lib/accept-version.js",
          "status": "modified",
          "additions": 15,
          "deletions": 4,
          "patch": "@@ -2,9 +2,20 @@\n \n const SemVerStore = require('semver-store')\n \n-module.exports = {\n-  storage: SemVerStore,\n-  deriveVersion: function (req, ctx) {\n-    return req.headers['accept-version']\n+function build (enabled) {\n+  if (enabled) {\n+    return {\n+      storage: SemVerStore,\n+      deriveVersion: function (req, ctx) {\n+        return req.headers['accept-version']\n+      }\n+    }\n+  }\n+  return {\n+    storage: SemVerStore,\n+    deriveVersion: function (req, ctx) {},\n+    disabled: true\n   }\n }\n+\n+module.exports = build"
        },
        {
          "filename": "test/version.default-versioning.test.js",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -240,3 +240,28 @@ test('It should throw if you declare multiple times the same route', t => {\n     t.is(err.message, 'Method \\'GET\\' already declared for route \\'/\\' version \\'1.2.3\\'')\n   }\n })\n+\n+test('Versioning won\\'t work if there are no versioned routes', t => {\n+  t.plan(2)\n+\n+  const findMyWay = FindMyWay({\n+    defaultRoute: (req, res) => {\n+      t.fail('We should not be here')\n+    }\n+  })\n+\n+  findMyWay.on('GET', '/', (req, res) => {\n+    t.pass('Yeah!')\n+  })\n+\n+  findMyWay.lookup({\n+    method: 'GET',\n+    url: '/',\n+    headers: { 'accept-version': '2.x' }\n+  }, null)\n+\n+  findMyWay.lookup({\n+    method: 'GET',\n+    url: '/'\n+  }, null)\n+})"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5636a3b734b784093cf85bef582a9328b3c04d9d",
            "date": "2025-01-01T14:56:08Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "09d09c73e9ff7351951a44bfb344cd7eaf01f8bc",
            "date": "2024-12-23T15:05:19Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4a2e5a7ae905f6e0beb31ddefba098f2d267b236",
            "date": "2024-12-18T08:11:32Z",
            "author_login": "gurgunday"
          },
          {
            "sha": "1e3fd64889035550243c840ed0895fbab4913a33",
            "date": "2024-12-18T08:11:19Z",
            "author_login": "gurgunday"
          },
          {
            "sha": "aa96bdbfae15f37c8aa3977c83952825bd5211d0",
            "date": "2024-12-14T15:39:06Z",
            "author_login": "ilteoood"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-444",
    "description": "This affects the package find-my-way before 2.2.5, from 3.0.0 and before 3.0.5. It accepts the Accept-Version' header by default, and if versioned routes are not being used, this could lead to a denial of service. Accept-Version can be used as an unkeyed header in a cache poisoning attack.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2020-11-08T16:15:12.183",
    "last_modified": "2024-11-21T05:37:45.537",
    "fix_date": "2020-11-06T17:30:04Z"
  },
  "references": [
    {
      "url": "https://github.com/delvedor/find-my-way/commit/ab408354690e6b9cf3c4724befb3b3fa4bb90aac",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-FINDMYWAY-1038269",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/delvedor/find-my-way/commit/ab408354690e6b9cf3c4724befb3b3fa4bb90aac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-FINDMYWAY-1038269",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.452872",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "find-my-way",
    "owner": "delvedor",
    "created_at": "2017-04-16T19:55:51Z",
    "updated_at": "2025-01-09T15:19:43Z",
    "pushed_at": "2025-01-01T14:56:15Z",
    "size": 532,
    "stars": 1511,
    "forks": 141,
    "open_issues": 15,
    "watchers": 1511,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 345111,
      "TypeScript": 6785
    },
    "commit_activity": {
      "total_commits_last_year": 22,
      "avg_commits_per_week": 0.4230769230769231,
      "days_active_last_year": 11
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:55:19.485418"
  }
}