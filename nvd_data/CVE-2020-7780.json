{
  "cve_id": "CVE-2020-7780",
  "github_data": {
    "repository": "softwaremill/akka-http-session",
    "fix_commit": "57f11663eecb84be03383d164f655b9c5f953b41",
    "related_commits": [
      "57f11663eecb84be03383d164f655b9c5f953b41",
      "57f11663eecb84be03383d164f655b9c5f953b41"
    ],
    "patch_url": "https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41.patch",
    "fix_commit_details": {
      "sha": "57f11663eecb84be03383d164f655b9c5f953b41",
      "commit_date": "2020-03-11T17:09:06Z",
      "author": {
        "login": "kijanowski",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix CSRF protection bypass #74",
        "length": 30,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 43,
        "additions": 42,
        "deletions": 1
      },
      "files": [
        {
          "filename": "core/src/main/scala/com/softwaremill/session/CsrfDirectives.scala",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -23,7 +23,7 @@ trait CsrfDirectives {\n         // that the token matches.\n         get.recover { _ =>\n           submittedCsrfToken(checkMode).flatMap { submitted =>\n-            if (submitted == cookie) {\n+            if (submitted == cookie && !cookie.isEmpty) {\n               pass\n             } else {\n               reject(checkMode.csrfManager.tokenInvalidRejection).toDirective[Unit]"
        },
        {
          "filename": "core/src/test/scala/com/softwaremill/session/CsrfDirectivesTest.scala",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -81,6 +81,20 @@ class CsrfDirectivesTest extends FlatSpec with ScalatestRouteTest with Matchers\n     }\n   }\n \n+  it should \"reject requests if the csrf cookie and the header are empty\" in {\n+    Get(\"/site\") ~> routes ~> check {\n+      responseAs[String] should be(\"ok\")\n+\n+      Post(\"/transfer_money\") ~>\n+        addHeader(Cookie(cookieName, \"\")) ~>\n+        addHeader(sessionConfig.csrfSubmittedName, \"\") ~>\n+        routes ~>\n+        check {\n+          rejections should be(List(AuthorizationFailedRejection))\n+        }\n+    }\n+  }\n+\n   it should \"accept requests if the csrf cookie matches the header value\" in {\n     Get(\"/site\") ~> routes ~> check {\n       responseAs[String] should be(\"ok\")"
        },
        {
          "filename": "javaTests/src/test/java/com/softwaremill/session/javadsl/CsrfDirectivesTest.java",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -135,6 +135,33 @@ public void shouldRejectRequestsIfTheCsrfCookieIsNotSet() {\n \n     }\n \n+    @Test\n+    public void shouldRejectRequestsIfTheCsrfCookieAndTheHeaderAreEmpty() {\n+        // given\n+        final Route route = createCsrfRouteWithCheckHeaderMode();\n+\n+        // when\n+        TestRouteResult testRouteResult = testRoute(route)\n+          .run(HttpRequest.GET(\"/site\"));\n+\n+        // then\n+        testRouteResult\n+          .assertStatusCode(StatusCodes.OK);\n+\n+        /* second request */\n+        // when\n+        TestRouteResult testRouteResult2 = testRoute(route)\n+          .run(HttpRequest.POST(\"/transfer_money\")\n+            .addHeader(Cookie.create(csrfCookieName, \"\"))\n+            .addHeader(RawHeader.create(csrfSubmittedName, \"\"))\n+          );\n+\n+        // then\n+        testRouteResult2\n+          .assertStatusCode(StatusCodes.FORBIDDEN);\n+\n+    }\n+\n     @Test\n     public void shouldAcceptRequestsIfTheCsrfCookieMatchesTheHeaderValue() {\n         // given"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f015a450192110397103be7be909c0216e3acedd",
            "date": "2023-08-29T17:17:55Z",
            "author_login": "adamw"
          },
          {
            "sha": "39f32fb7f7aa7500332e8e6f7481e963dd027901",
            "date": "2023-08-29T17:17:49Z",
            "author_login": "adamw"
          },
          {
            "sha": "633412a4f5294b5bc19fd7940b66844a18b48a04",
            "date": "2023-08-29T17:12:45Z",
            "author_login": "adamw"
          },
          {
            "sha": "12e10c6d87a3e9b9d0da6602a44f22bdcef8f541",
            "date": "2023-08-29T16:37:53Z",
            "author_login": "adamw"
          },
          {
            "sha": "426c24fecf4ac0ff3461f925f8f5f1131fc71813",
            "date": "2023-08-23T09:11:35Z",
            "author_login": "pjfanning"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-352",
    "description": "This affects the package com.softwaremill.akka-http-session:core_2.13 before 0.5.11; the package com.softwaremill.akka-http-session:core_2.12 before 0.5.11; the package com.softwaremill.akka-http-session:core_2.11 before 0.5.11. For older versions, endpoints protected by randomTokenCsrfProtection could be bypassed with an empty X-XSRF-TOKEN header and an empty XSRF-TOKEN cookie.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-11-27T17:15:12.093",
    "last_modified": "2024-11-21T05:37:47.473",
    "fix_date": "2020-03-11T17:09:06Z"
  },
  "references": [
    {
      "url": "https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/softwaremill/akka-http-session/issues/74",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/softwaremill/akka-http-session/issues/77",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1045352",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046654",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046655",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/softwaremill/akka-http-session/issues/74",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/softwaremill/akka-http-session/issues/77",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1045352",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046654",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046655",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:08.479057",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "akka-http-session",
    "owner": "softwaremill",
    "created_at": "2015-06-30T13:40:05Z",
    "updated_at": "2024-10-03T11:55:49Z",
    "pushed_at": "2023-08-29T17:18:02Z",
    "size": 809,
    "stars": 440,
    "forks": 58,
    "open_issues": 11,
    "watchers": 440,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Scala": 260894,
      "Java": 241179,
      "JavaScript": 8544,
      "HTML": 4699
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:34:53.169793"
  }
}