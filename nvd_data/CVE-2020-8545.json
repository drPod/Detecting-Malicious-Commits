{
  "cve_id": "CVE-2020-8545",
  "github_data": {
    "repository": "CIRCL/AIL-framework",
    "fix_commit": "e808840f957c810b8e3944cba808716dc722581b",
    "related_commits": [
      "e808840f957c810b8e3944cba808716dc722581b",
      "e808840f957c810b8e3944cba808716dc722581b"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e808840f957c810b8e3944cba808716dc722581b",
      "commit_date": "2020-02-03T09:32:20Z",
      "author": {
        "login": "Terrtia",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: [Global: filename provided by all feeders] avoid path tranversal",
        "length": 69,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 54,
        "additions": 31,
        "deletions": 23
      },
      "files": [
        {
          "filename": "bin/Global.py",
          "status": "modified",
          "additions": 31,
          "deletions": 23,
          "patch": "@@ -45,8 +45,10 @@ def rreplace(s, old, new, occurrence):\n \n     p = Process(config_section)\n \n+    # get and sanityze PASTE DIRECTORY\n     PASTES_FOLDER = os.path.join(os.environ['AIL_HOME'], p.config.get(\"Directories\", \"pastes\"))\n     PASTES_FOLDERS = PASTES_FOLDER + '/'\n+    PASTES_FOLDERS = os.path.join(os.path.realpath(PASTES_FOLDERS), '')\n \n     # LOGGING #\n     publisher.info(\"Feed Script started to receive & publish.\")\n@@ -75,40 +77,46 @@ def rreplace(s, old, new, occurrence):\n             time.sleep(1)\n             continue\n \n+        # remove PASTES_FOLDER from item path (crawled item + submited)\n+        if PASTES_FOLDERS in paste:\n+            paste = paste.replace(PASTES_FOLDERS, '', 1)\n+\n         file_name_paste = paste.split('/')[-1]\n         if len(file_name_paste)>255:\n             new_file_name_paste = '{}{}.gz'.format(file_name_paste[:215], str(uuid.uuid4()))\n             paste = rreplace(paste, file_name_paste, new_file_name_paste, 1)\n \n         # Creating the full filepath\n         filename = os.path.join(PASTES_FOLDER, paste)\n+        filename = os.path.realpath(filename)\n \n-        dirname = os.path.dirname(filename)\n-        if not os.path.exists(dirname):\n-            os.makedirs(dirname)\n-\n-        decoded = base64.standard_b64decode(gzip64encoded)\n+        # incorrect filename\n+        if not os.path.commonprefix([filename, PASTES_FOLDER]) == PASTES_FOLDER:\n+            print('Path traversal detected {}'.format(filename))\n+            publisher.warning('Global; Path traversal detected')\n+        else:\n+            dirname = os.path.dirname(filename)\n+            if not os.path.exists(dirname):\n+                os.makedirs(dirname)\n \n-        with open(filename, 'wb') as f:\n-            f.write(decoded)\n-        '''try:\n-            decoded2 = gunzip_bytes_obj(decoded)\n-        except:\n-            decoded2 =''\n+            decoded = base64.standard_b64decode(gzip64encoded)\n \n-        type = magic.from_buffer(decoded2, mime=True)\n+            with open(filename, 'wb') as f:\n+                f.write(decoded)\n+            '''try:\n+                decoded2 = gunzip_bytes_obj(decoded)\n+            except:\n+                decoded2 =''\n \n-        if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n+            type = magic.from_buffer(decoded2, mime=True)\n \n-            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n-            print(filename)\n-            print(type)\n-            print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n-        '''\n+            if type!= 'text/x-c++' and type!= 'text/html' and type!= 'text/x-c' and type!= 'text/x-python' and type!= 'text/x-php' and type!= 'application/xml' and type!= 'text/x-shellscript' and type!= 'text/plain' and type!= 'text/x-diff' and type!= 'text/x-ruby':\n \n-        # remove PASTES_FOLDER from item path (crawled item + submited)\n-        if PASTES_FOLDERS in paste:\n-            paste = paste.replace(PASTES_FOLDERS, '', 1)\n+                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n+                print(filename)\n+                print(type)\n+                print('-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n+            '''\n \n-        p.populate_set_out(paste)\n-        processed_paste+=1\n+            p.populate_set_out(paste)\n+            processed_paste+=1"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bc837262126d85b1228ade6036d20949ada77871",
            "date": "2025-01-24T13:38:23Z",
            "author_login": "Terrtia"
          },
          {
            "sha": "8cd161568da72f59ab1db6ad1fb8e59d17c1b3e4",
            "date": "2025-01-24T12:54:19Z",
            "author_login": "Terrtia"
          },
          {
            "sha": "bc235187132188f87dec3332b187aa67bf205a6c",
            "date": "2025-01-24T10:24:27Z",
            "author_login": "Terrtia"
          },
          {
            "sha": "f27acbf1859f7bcaa19a5c1f8dc351d267b87356",
            "date": "2025-01-24T09:38:39Z",
            "author_login": "Terrtia"
          },
          {
            "sha": "440c84e7fb6c919e8a0feb5f8beee9d64c06cd45",
            "date": "2025-01-24T09:38:18Z",
            "author_login": "Terrtia"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Global.py in AIL framework 2.8 allows path traversal.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2020-02-03T16:15:11.997",
    "last_modified": "2024-11-21T05:39:00.483",
    "fix_date": "2020-02-03T09:32:20Z"
  },
  "references": [
    {
      "url": "https://github.com/CIRCL/AIL-framework/commit/e808840f957c810b8e3944cba808716dc722581b",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CIRCL/AIL-framework/commit/e808840f957c810b8e3944cba808716dc722581b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:00:37.508599",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "AIL-framework",
    "owner": "CIRCL",
    "created_at": "2014-08-05T12:18:22Z",
    "updated_at": "2025-01-24T13:38:44Z",
    "pushed_at": "2025-01-24T13:38:40Z",
    "size": 101129,
    "stars": 1308,
    "forks": 282,
    "open_issues": 103,
    "watchers": 1308,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 1557511,
      "HTML": 1287624,
      "JavaScript": 578175,
      "Shell": 74626,
      "CSS": 33949,
      "Dockerfile": 1278,
      "YARA": 217
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T08:22:55.244021"
  }
}