{
  "cve_id": "CVE-2021-20304",
  "github_data": {
    "repository": "AcademySoftwareFoundation/openexr",
    "fix_commit": "51a92d67f53c08230734e74564c807043cbfe41e",
    "related_commits": [
      "51a92d67f53c08230734e74564c807043cbfe41e",
      "51a92d67f53c08230734e74564c807043cbfe41e"
    ],
    "patch_url": "https://github.com/AcademySoftwareFoundation/openexr/commit/51a92d67f53c08230734e74564c807043cbfe41e.patch",
    "fix_commit_details": {
      "sha": "51a92d67f53c08230734e74564c807043cbfe41e",
      "commit_date": "2020-10-12T19:03:57Z",
      "author": {
        "login": "peterhillman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "check for valid Huf code lengths (#849)",
        "length": 169,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 153,
        "additions": 89,
        "deletions": 64
      },
      "files": [
        {
          "filename": "OpenEXR/IlmImf/ImfHuf.cpp",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -910,6 +910,11 @@ hufDecode\n \t\t//\n \n \t\tlc -= pl.len;\n+\n+\t\tif ( lc < 0 )\n+\t\t{\n+\t\t\tinvalidCode(); // code length too long\n+\t\t}\n \t\tgetCode (pl.lit, rlc, c, lc, in, out, outb, oe);\n \t    }\n \t    else\n@@ -967,6 +972,10 @@ hufDecode\n \tif (pl.len)\n \t{\n \t    lc -= pl.len;\n+            if ( lc < 0 )\n+            {\n+   \t        invalidCode(); // code length too long\n+            }\n \t    getCode (pl.lit, rlc, c, lc, in, out, outb, oe);\n \t}\n \telse"
        },
        {
          "filename": "OpenEXR/IlmImfTest/testHuf.cpp",
          "status": "modified",
          "additions": 80,
          "deletions": 64,
          "patch": "@@ -245,70 +245,86 @@ testHuf (const std::string&)\n \n \tIMATH_NAMESPACE::Rand48 rand48 (0);\n \n-\tconst int N = 1000000;\n-\tArray <unsigned short> raw (N);\n-\n-\tfill1 (raw, N, 1, rand48);\t  // test various symbol distributions\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill1 (raw, N, 10, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill1 (raw, N, 100, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill1 (raw, N, 1000, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\n-\tfill2 (raw, N, 1, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill2 (raw, N, 10, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill2 (raw, N, 100, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill2 (raw, N, 1000, rand48);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\n-\tfill3 (raw, N, 0);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill3 (raw, N, 1);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill3 (raw, N, USHRT_MAX - 1);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\tfill3 (raw, N, USHRT_MAX);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\n-\tfill4 (raw, USHRT_MAX + 1);\n-        compressVerify(raw, USHRT_MAX + 1, HUF_COMPRESS_DEK_HASH_FOR_FILL4_USHRT_MAX_PLUS_ONE);\n-\tcompressUncompress (raw, USHRT_MAX + 1);\n-\tcompressUncompressSubset (raw, USHRT_MAX + 1);\n-\tfill4 (raw, N);\n-        compressVerify(raw, N, HUF_COMPRESS_DEK_HASH_FOR_FILL4_N);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n-\n-\tfill4 (raw, 0);\n-\tcompressUncompress (raw, 0);\t// test small input data sets\n-\tfill4 (raw, 1);\n-\tcompressUncompress (raw, 1);\n-\tfill4 (raw, 2);\n-\tcompressUncompress (raw, 2);\n-\tfill4 (raw, 3);\n-\tcompressUncompress (raw, 3);\n-\n-\tfill5 (raw, N);\t\t\t// test run-length coding of code table\n-        compressVerify(raw, N, HUF_COMPRESS_DEK_HASH_FOR_FILL5_N);\n-\tcompressUncompress (raw, N);\n-\tcompressUncompressSubset (raw, N);\n+        //\n+        // FastHufDecoder is used for more than 128 bits, so first test with fewer than 128 bits,\n+        // then test FastHufDecoder\n+        //\n+        for (int pass = 0 ; pass < 2 ; ++pass)\n+        {\n+\n+            int N = pass==0 ? 12 : 1000000;\n+            Array <unsigned short> raw (N);\n+\n+            fill1 (raw, N, 1, rand48);\t  // test various symbol distributions\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill1 (raw, N, 10, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill1 (raw, N, 100, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill1 (raw, N, 1000, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+\n+            fill2 (raw, N, 1, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill2 (raw, N, 10, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill2 (raw, N, 100, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill2 (raw, N, 1000, rand48);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+\n+            fill3 (raw, N, 0);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill3 (raw, N, 1);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill3 (raw, N, USHRT_MAX - 1);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+            fill3 (raw, N, USHRT_MAX);\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+\n+            if (pass==1)\n+            {\n+                fill4 (raw, USHRT_MAX + 1);\n+                compressVerify(raw, USHRT_MAX + 1, HUF_COMPRESS_DEK_HASH_FOR_FILL4_USHRT_MAX_PLUS_ONE);\n+\n+                compressUncompress (raw, USHRT_MAX + 1);\n+                compressUncompressSubset (raw, USHRT_MAX + 1);\n+                fill4 (raw, N);\n+                compressVerify(raw, N, HUF_COMPRESS_DEK_HASH_FOR_FILL4_N);\n+            }\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+\n+            fill4 (raw, 0);\n+            compressUncompress (raw, 0);\t// test small input data sets\n+            fill4 (raw, 1);\n+            compressUncompress (raw, 1);\n+            fill4 (raw, 2);\n+            compressUncompress (raw, 2);\n+            fill4 (raw, 3);\n+            compressUncompress (raw, 3);\n+\n+            fill5 (raw, N);\t\t\t// test run-length coding of code table\n+            if (pass==1)\n+            {\n+                compressVerify(raw, N, HUF_COMPRESS_DEK_HASH_FOR_FILL5_N);\n+            }\n+            compressUncompress (raw, N);\n+            compressUncompressSubset (raw, N);\n+\n+        }\n \n \tcout << \"ok\\n\" << endl;\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8bc3faebc66b92805f7309fa7a2f46a66e5cc5c9",
            "date": "2025-01-01T04:48:38Z",
            "author_login": "kdt3rd"
          },
          {
            "sha": "ad85f1a2677f92e381da1bdbd390eb6b2da4d7ae",
            "date": "2025-01-01T03:09:22Z",
            "author_login": "kdt3rd"
          },
          {
            "sha": "22cbb7966fa16dae2a1dde14c3a7d9966661516c",
            "date": "2025-01-01T02:41:39Z",
            "author_login": "kdt3rd"
          },
          {
            "sha": "a8dc4f9acf66b0add2a7333d32066405140e4d21",
            "date": "2024-12-19T01:59:10Z",
            "author_login": "cary-ilm"
          },
          {
            "sha": "82391c9cf540584cc91233d6d43f82587bd58b01",
            "date": "2024-12-19T01:32:20Z",
            "author_login": "cary-ilm"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-190",
    "description": "A flaw was found in OpenEXR's hufDecode functionality. This flaw allows an attacker who can pass a crafted file to be processed by OpenEXR, to trigger an undefined right shift error. The highest threat from this vulnerability is to system availability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-23T16:15:09.087",
    "last_modified": "2024-11-21T05:46:19.143",
    "fix_date": "2020-10-12T19:03:57Z"
  },
  "references": [
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-20304",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26229",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1939157",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/AcademySoftwareFoundation/openexr/commit/51a92d67f53c08230734e74564c807043cbfe41e",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/AcademySoftwareFoundation/openexr/pull/849",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-31",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-20304",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26229",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1939157",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/AcademySoftwareFoundation/openexr/commit/51a92d67f53c08230734e74564c807043cbfe41e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/AcademySoftwareFoundation/openexr/pull/849",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-31",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.284150",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openexr",
    "owner": "AcademySoftwareFoundation",
    "created_at": "2012-02-24T06:30:00Z",
    "updated_at": "2025-01-11T15:43:07Z",
    "pushed_at": "2025-01-01T04:48:38Z",
    "size": 58179,
    "stars": 1651,
    "forks": 627,
    "open_issues": 190,
    "watchers": 1651,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "RB-2.2",
      "RB-2.3",
      "RB-2.4",
      "RB-2.5",
      "RB-3.0",
      "RB-3.1",
      "RB-3.2",
      "RB-3.3",
      "cary-ilm-patch-1",
      "dependabot/github_actions/actions/upload-artifact-4",
      "jmertic-patch-1",
      "lg-warnings",
      "main",
      "pypi",
      "release",
      "snyk-fix-cbc152e9559a71f1476dd3d1e82c5fbf",
      "staging/cpp_core_rewrite",
      "website",
      "website-preview"
    ],
    "languages": {
      "C": 7777035,
      "C++": 3788967,
      "Python": 151678,
      "CMake": 87057,
      "M4": 26297,
      "Starlark": 23438,
      "Shell": 19329,
      "Batchfile": 6522,
      "HTML": 572
    },
    "commit_activity": {
      "total_commits_last_year": 296,
      "avg_commits_per_week": 5.6923076923076925,
      "days_active_last_year": 104
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:27:39.723784"
  }
}