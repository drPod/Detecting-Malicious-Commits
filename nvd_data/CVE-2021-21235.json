{
  "cve_id": "CVE-2021-21235",
  "github_data": {
    "repository": "kamadak/exif-rs",
    "fix_commit": "f21df24616ea611c5d5d0e0e2f8042eb74d5ff48",
    "related_commits": [
      "f21df24616ea611c5d5d0e0e2f8042eb74d5ff48",
      "f21df24616ea611c5d5d0e0e2f8042eb74d5ff48"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f21df24616ea611c5d5d0e0e2f8042eb74d5ff48",
      "commit_date": "2021-01-04T02:06:15Z",
      "author": {
        "login": "kamadak",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix an infinite loop in reading PNG files.",
        "length": 42,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 13,
        "additions": 13,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/util.rs",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -56,6 +56,9 @@ impl<T> BufReadExt for T where T: io::BufRead {\n     fn discard_exact(&mut self, mut len: usize) -> io::Result<()> {\n         while len > 0 {\n             let consume_len = match self.fill_buf() {\n+                Ok(buf) if buf.is_empty() =>\n+                    return Err(io::Error::new(\n+                        io::ErrorKind::UnexpectedEof, \"unexpected EOF\")),\n                 Ok(buf) => buf.len().min(len),\n                 Err(e) if e.kind() == io::ErrorKind::Interrupted => continue,\n                 Err(e) => return Err(e),\n@@ -99,6 +102,16 @@ mod tests {\n     use std::io::Read;\n     use super::*;\n \n+    #[test]\n+    fn discard_exact() {\n+        let mut buf = b\"abc\".as_ref();\n+        buf.discard_exact(1).unwrap();\n+        assert_eq!(buf, b\"bc\");\n+        buf.discard_exact(2).unwrap();\n+        assert_eq!(buf, b\"\");\n+        buf.discard_exact(1).unwrap_err();\n+    }\n+\n     #[test]\n     fn read8_len() {\n         let mut reader = Cursor::new([]);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa74a75a7e182f41d4e6d2728f74a4485fb79c95",
            "date": "2025-01-01T14:58:42Z",
            "author_login": "kamadak"
          },
          {
            "sha": "7be86470130419e65c587e3209b0a795eeb4ba3d",
            "date": "2024-11-02T13:55:00Z",
            "author_login": "kamadak"
          },
          {
            "sha": "71c3a816aa1e10ceffc1f806090984550b9da0ca",
            "date": "2024-11-29T19:22:30Z",
            "author_login": "jayvdb"
          },
          {
            "sha": "0eb29325fd1a1604323d1d17b39238789d616584",
            "date": "2024-11-23T11:36:17Z",
            "author_login": "kamadak"
          },
          {
            "sha": "52b53a236b95b364c70d020b420148e0e25de4af",
            "date": "2024-11-06T15:18:46Z",
            "author_login": "kamadak"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "kamadak-exif is an exif parsing library written in pure Rust. In kamadak-exif version 0.5.2, there is an infinite loop in parsing crafted PNG files. Specifically, reader::read_from_container can cause an infinite loop when a crafted PNG file is given. This is fixed in version 0.5.3. No workaround is available. Applications that do not pass files with the PNG signature to Reader::read_from_container are not affected.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-01-06T02:15:12.967",
    "last_modified": "2024-11-21T05:47:50.050",
    "fix_date": "2021-01-04T02:06:15Z"
  },
  "references": [
    {
      "url": "https://crates.io/crates/kamadak-exif",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kamadak/exif-rs/commit/f21df24616ea611c5d5d0e0e2f8042eb74d5ff48",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kamadak/exif-rs/security/advisories/GHSA-px9g-8hgv-jvg2",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://crates.io/crates/kamadak-exif",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kamadak/exif-rs/commit/f21df24616ea611c5d5d0e0e2f8042eb74d5ff48",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kamadak/exif-rs/security/advisories/GHSA-px9g-8hgv-jvg2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:10.566157",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "exif-rs",
    "owner": "kamadak",
    "created_at": "2016-12-30T14:51:30Z",
    "updated_at": "2025-01-21T10:13:52Z",
    "pushed_at": "2025-01-02T08:38:31Z",
    "size": 285,
    "stars": 210,
    "forks": 48,
    "open_issues": 18,
    "watchers": 210,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Rust": 246623
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-26T08:22:45.216480"
  }
}