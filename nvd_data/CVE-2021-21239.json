{
  "cve_id": "CVE-2021-21239",
  "github_data": {
    "repository": "IdentityPython/pysaml2",
    "fix_commit": "46578df0695269a16f1c94171f1429873f90ed99",
    "related_commits": [
      "46578df0695269a16f1c94171f1429873f90ed99",
      "46578df0695269a16f1c94171f1429873f90ed99"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "46578df0695269a16f1c94171f1429873f90ed99",
      "commit_date": "2021-01-20T12:33:19Z",
      "author": {
        "login": "c00kiemon5ter",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-5p3x-r448-pc62",
        "length": 106,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 227,
        "additions": 227,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/saml2/sigver.py",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -869,6 +869,7 @@ def validate_signature(self, signedtext, cert_file, cert_type, node_name, node_i\n             self.xmlsec,\n             '--verify',\n             '--enabled-reference-uris', 'empty,same-doc',\n+            '--enabled-key-data', 'raw-x509-cert',\n             '--pubkey-cert-{type}'.format(type=cert_type), cert_file,\n             '--id-attr:ID', node_name,\n         ]"
        },
        {
          "filename": "tests/test_xmlsec1_key_data.py",
          "status": "added",
          "additions": 81,
          "deletions": 0,
          "patch": "@@ -0,0 +1,81 @@\n+from datetime import datetime\n+from dateutil import parser\n+from unittest.mock import Mock\n+from unittest.mock import patch\n+\n+from pytest import raises\n+\n+from saml2.config import config_factory\n+from saml2.response import authn_response\n+from saml2.sigver import SignatureError\n+\n+from pathutils import dotname\n+from pathutils import full_path\n+\n+\n+SIGNED_RESPONSE_HMAC = full_path(\"xmlsec1-keydata/signed-response-with-hmac.xml\")\n+SIGNED_ASSERTION_HMAC = full_path(\"xmlsec1-keydata/signed-assertion-with-hmac.xml\")\n+SIGNED_ASSERTION_RANDOM_EMBEDDED_CERT = full_path(\"xmlsec1-keydata/signed-assertion-random-embedded-cert.xml\")\n+\n+\n+class TestAuthnResponse:\n+    @patch('saml2.response.validate_on_or_after', return_value=True)\n+    def test_signed_response_with_hmac_should_fail(self, mock_validate_on_or_after):\n+        conf = config_factory(\"sp\", dotname(\"server_conf\"))\n+        ar = authn_response(conf, return_addrs=\"https://example.org/acs/post\")\n+        ar.issue_instant_ok = Mock(return_value=True)\n+\n+        with open(SIGNED_RESPONSE_HMAC) as fp:\n+            xml_response = fp.read()\n+\n+        ar.outstanding_queries = {\"id-abc\": \"http://localhost:8088/sso\"}\n+        ar.timeslack = 10000\n+\n+        # .loads checks the response signature\n+        with raises(SignatureError):\n+            ar.loads(xml_response, decode=False)\n+\n+        assert ar.ava is None\n+        assert ar.name_id is None\n+\n+    @patch('saml2.response.validate_on_or_after', return_value=True)\n+    def test_signed_assertion_with_hmac_should_fail(self, mock_validate_on_or_after):\n+        conf = config_factory(\"sp\", dotname(\"server_conf\"))\n+        ar = authn_response(conf, return_addrs=\"https://example.org/acs/post\")\n+        ar.issue_instant_ok = Mock(return_value=True)\n+\n+        with open(SIGNED_ASSERTION_HMAC) as fp:\n+            xml_response = fp.read()\n+\n+        ar.outstanding_queries = {\"id-abc\": \"http://localhost:8088/sso\"}\n+        ar.timeslack = 10000\n+\n+        # .loads does not check the assertion, only the response signature\n+        # use .verify to verify the contents of the response\n+        assert ar.loads(xml_response, decode=False)\n+        with raises(SignatureError):\n+            ar.verify()\n+\n+        assert ar.ava is None\n+        assert ar.name_id is None\n+\n+    @patch('saml2.response.validate_on_or_after', return_value=True)\n+    def test_signed_assertion_with_random_embedded_cert_should_be_ignored(self, mock_validate_on_or_after):\n+        \"\"\"\n+        if the embedded cert is not ignored then verification will fail\n+        \"\"\"\n+\n+        conf = config_factory(\"sp\", dotname(\"server_conf\"))\n+        ar = authn_response(conf, return_addrs=\"https://51.15.251.81.xip.io/acs/post\")\n+        ar.issue_instant_ok = Mock(return_value=True)\n+\n+        with open(SIGNED_ASSERTION_RANDOM_EMBEDDED_CERT) as fp:\n+            xml_response = fp.read()\n+\n+        ar.outstanding_queries = {\"id-abc\": \"http://localhost:8088/sso\"}\n+        ar.timeslack = 10000\n+\n+        # .loads does not check the assertion, only the response signature\n+        # use .verify to verify the contents of the response\n+        assert ar.loads(xml_response, decode=False)\n+        assert ar.verify()"
        },
        {
          "filename": "tests/xmlsec1-keydata/signed-assertion-random-embedded-cert.xml",
          "status": "added",
          "additions": 47,
          "deletions": 0,
          "patch": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\"?>\n+<samlp:Response xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"the-response-id\" IssueInstant=\"2020-12-04T07:48:09.700Z\" InResponseTo=\"id-abc\" Destination=\"https://51.15.251.81.xip.io/acs/post\">\n+    <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+    <samlp:Status>\n+        <samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>\n+    </samlp:Status>\n+    <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"the-assertion-id\" IssueInstant=\"2020-12-04T07:48:09.600Z\">\n+        <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+        <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n+            <ds:SignedInfo>\n+                <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+                <ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/>\n+                <ds:Reference URI=\"#the-assertion-id\">\n+                    <ds:Transforms>\n+                        <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\n+                        <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+                    </ds:Transforms>\n+                    <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>\n+                    <ds:DigestValue>NHB0WhPWj5OyRz9N52fZrEBWK3dXT2pVVT54f4kg1tM=</ds:DigestValue>\n+                </ds:Reference>\n+            </ds:SignedInfo>\n+            <ds:SignatureValue>Mo4ZheAEDvdPQwWvT5SOYZZ2IBELwtmBpdsn+Th+IvsanychWQ6JHYKTI8hl+3DigbqQwdsqet8n9sfdvr+D+Q7XozjVaFPdzUGC9d96Mn/vrc+JIP/ESoDjDUQEsoSBhUFlrbu7tPJDJehPgd/maIwd/GqEHWXFlm1ZWVCmaH8=</ds:SignatureValue>\n+            <ds:KeyInfo>\n+                <ds:X509Data>\n+                    <ds:X509Certificate>MIIFLDCCBBSgAwIBAgISA3UxXAgBWRS1D74GOLiAjky6MA0GCSqGSIb3DQEBCwUAMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQDEwJSMzAeFw0yMTAxMTcyMDIxNTNaFw0yMTA0MTcyMDIxNTNaMB4xHDAaBgNVBAMTEzUxLjE1LjI1MS44MS54aXAuaW8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkjSN9vZDOwE1m7g1vyiwBsKBKNItyy05BcHUkM8fabBcsavugT8uE4wYz5aeZrnKb5dbDLHaZe6Dl5GHgRO8s7REwSJ/BHT3/eMaEakLwIGE5/6QSWuBjOawPfmYarW5IqoITjSt/o/jxu3haouqbr7XYf1WOuZmc6iwGnEgm0+cVB4CA0VGnnLYfsjp9iMt3pFI8a8ipdwp5lfzZU+j8JMVEn6SZhNjjTAjcakBQmZv4Q5/yU6yqfGjG47DO62xB/PPbDy78hDorER2v8UkoDTGV4aZrZaNltHBUxNohIiQnkhuakMmbf0NhA2ExBJw6KTCCxfYkyUX3CgYzaAnxAgMBAAGjggJOMIICSjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFHD7gcF0sNITPqhwcUlFyOBrkxRFMB8GA1UdIwQYMBaAFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5sZW5jci5vcmcvMB4GA1UdEQQXMBWCEzUxLjE1LjI1MS44MS54aXAuaW8wTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEEBgorBgEEAdZ5AgQCBIH1BIHyAPAAdQBc3EOS/uarRUSxXprUVuYQN/vV+kfcoXOUsl7m9scOygAAAXcSOcqvAAAEAwBGMEQCIFhvPWYY+2VO55bHO1Sa9zJQk7B1kvCi7sfDCxAYp7mEAiBTKx6XD0GkfNGhji0LGuelvfD7gZOUSzURlJW1ahYcgQB3APZclC/RdzAiFFQYCDCUVo7jTRMZM7/fDC8gC8xO8WTjAAABdxI5yq4AAAQDAEgwRgIhAONNwcNZ66IxsWcUNDS0B9KV8Kk4VS9b/wUFNBHAQl3SAiEAxO5GwgaK3glL/6L/J7qpiedJBAs3h5406MWC0v4uYZ8wDQYJKoZIhvcNAQELBQADggEBAAZgbgfOb4+uI9kMGF4fMiompHeUFDXGyIND6y4FsfWHJG4Fn3aG+VQN/UtHeO8UusjS13/2yw3O+PeNTstBl+q6Ssega8zTYx2j3h3RFqM9JR8SWa83B0UTgyaxX3PTmfegV4/RZxC7KQ8pqjcLwKJSTgZF6W40Jo16tKVoi0VQY/2Gre6E9D1tPVw//mDGJST/5IcbFvtr79uft76IA+T674qNgAriBKxWncSbGzE42w2QsYsGMHHJn3vKbNl7alll9eJBqvdi1Q7ay86oI7NDQ0PPwjnB0/i4BOO0qQBcBSUIPPEChcrooEqN9PwM20aoyIjje0rtDGSxnEQRrg0=</ds:X509Certificate>\n+                    <ds:X509Certificate>MIIEZTCCA02gAwIBAgIQQAF1BIMUpMghjISpDBbN3zANBgkqhkiG9w0BAQsFADA/MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENBIFgzMB4XDTIwMTAwNzE5MjE0MFoXDTIxMDkyOTE5MjE0MFowMjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxCzAJBgNVBAMTAlIzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuwIVKMz2oJTTDxLsjVWSw/iC8ZmmekKIp10mqrUrucVMsa+Oa/l1yKPXD0eUFFU1V4yeqKI5GfWCPEKpTm71O8Mu243AsFzzWTjn7c9p8FoLG77AlCQlh/o3cbMT5xys4Zvv2+Q7RVJFlqnBU840yFLuta7tj95gcOKlVKu2bQ6XpUA0ayvTvGbrZjR8+muLj1cpmfgwF126cm/7gcWt0oZYPRfH5wm78Sv3htzB2nFd1EbjzK0lwYi8YGd1ZrPxGPeiXOZT/zqItkel/xMY6pgJdz+dU/nPAeX1pnAXFK9jpP+Zs5Od3FOnBv5IhR2haa4ldbsTzFID9e1RoYvbFQIDAQABo4IBaDCCAWQwEgYDVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEBATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQub3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9EU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjANBgkqhkiG9w0BAQsFAAOCAQEA2UzgyfWEiDcx27sT4rP8i2tiEmxYt0l+PAK3qB8oYevO4C5z70kHejWEHx2taPDY/laBL21/WKZuNTYQHHPD5b1tXgHXbnL7KqC401dk5VvCadTQsvd8S8MXjohyc9z9/G2948kLjmE6Flh9dDYrVYA9x2O+hEPGOaEOa1eePynBgPayvUfLqjBstzLhWVQLGAkXXmNs+5ZnPBxzDJOLxhF2JIbeQAcH5H0tZrUlo5ZYyOqA7s9pO5b85o3AM/OJ+CktFBQtfvBhcJVd9wvlwPsk+uyOy2HI7mNxKKgsBTt375teA2TwUdHkhVNcsAKX1H7GNNLOEADksd86wuoXvg==</ds:X509Certificate>\n+                </ds:X509Data>\n+            </ds:KeyInfo>\n+        </ds:Signature>\n+        <saml:Subject>\n+            <saml:NameID Format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\">attack-name-id</saml:NameID>\n+            <saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\">\n+                <saml:SubjectConfirmationData NotOnOrAfter=\"2020-12-04T07:58:09.600Z\" Recipient=\"https://51.15.251.81.xip.io/acs/post\" InResponseTo=\"id-abc\"/>\n+            </saml:SubjectConfirmation>\n+        </saml:Subject>\n+        <saml:Conditions NotBefore=\"2020-12-04T07:48:09.600Z\" NotOnOrAfter=\"2020-12-04T07:58:09.600Z\">\n+            <saml:AudienceRestriction>\n+                <saml:Audience>urn:mace:example.com:saml:roland:sp</saml:Audience>\n+            </saml:AudienceRestriction>\n+        </saml:Conditions>\n+        <saml:AuthnStatement AuthnInstant=\"2020-12-04T07:48:09.600Z\" SessionNotOnOrAfter=\"2020-12-04T07:58:09.600Z\" SessionIndex=\"_samling_8227405_474676521\">\n+            <saml:AuthnContext>\n+                <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified</saml:AuthnContextClassRef>\n+            </saml:AuthnContext>\n+        </saml:AuthnStatement>\n+    </saml:Assertion>\n+</samlp:Response>"
        },
        {
          "filename": "tests/xmlsec1-keydata/signed-assertion-with-hmac.xml",
          "status": "added",
          "additions": 49,
          "deletions": 0,
          "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\"?>\n+<samlp:Response xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"theresponse\" IssueInstant=\"2020-12-04T07:48:09.700Z\" InResponseTo=\"id-abc\" Destination=\"https://example.org/acs/post\">\n+    <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+    <samlp:Status>\n+        <samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>\n+    </samlp:Status>\n+    <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"theassertion\" IssueInstant=\"2020-12-04T07:48:09.600Z\">\n+        <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+        <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n+            <ds:SignedInfo>\n+                <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+                <ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\"/>\n+                <ds:Reference URI=\"#theassertion\">\n+                    <ds:Transforms>\n+                        <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\n+                        <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+                    </ds:Transforms>\n+                    <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>\n+                    <ds:DigestValue>3eSifM9ENDpX4ore08DbmBaW3WrqLZMv57QMk0ACEPk=</ds:DigestValue>\n+                </ds:Reference>\n+            </ds:SignedInfo>\n+            <ds:SignatureValue>8v8fec9UyJ5g/GcZmkrG3gQT/eI=</ds:SignatureValue>\n+            <ds:KeyInfo>\n+                <ds:KeyValue>\n+                    <HMACKeyValue xmlns=\"http://www.aleksey.com/xmlsec/2002\">Rk9PCg==</HMACKeyValue>\n+                </ds:KeyValue>\n+                <ds:X509Data>\n+                    <ds:X509Certificate>MIICXgIBAAKBgQDJg2cms7MqjniT8Fi/XkNHZNPbNVQyMUMXE9tXOdqwYCA1cc8vQdzkihscQMXy3iPw2cMggBu6gjMTOSOxECkuvX5ZCclKr8pXAJM5cY6gVOaVO2PdTZcvDBKGbiaNefiEw5hnoZomqZGp8wHNLAUkwtH9vjqqvxyS/vclc6k2ewIDAQABAoGBAKD2emW6ssmyhfQ9ztYFuJ4FlwiJf5icKuf7L4BsMRgjoHawUvt/k69l9aPKxZNrB7BycV+7lOqU57FaOf1MWGeWzsU5bYUVpFzOVwsY4umtsO78QGKLZe+91Z+ktOlmL3scAymAgE88Jmr0g8FC46Vv4Sam7zMCtmOvA9fYog1ZAkEA8lAe+XihSuZI6IZcdRdB6QJ5cgAJoZdWKKtUovb5Ah2w4D/ebkfpsQJK44aSR5GbnrnqSaMeLJMRz++Td0edHwJBANTlUBzoo3ihcBOZ0VzGYgDIG8foCTEf3jDBYNYaY9RH/c4P50GkDa4PBqtf1f+VORwAsC2NTeY6HUEWMpvfXyUCQQChQ3FZ1k6B6oDbP5CI3NGgoWTx2dSPFojgyCWrz3IpVllA5UDDZFjC1SPCCO2Rc/Z9zH2ARG7we3B/UpJx79dBAkEAiPc6sk6NFQevpjyYcDqFRIF5NgQ3Ha6l8PIITdZOkXz7cX3Txuw3jNrH7KtMbxDe3AApWDUHf+21cnFIf/WWLQJAeG0KKBfZw1iRu9vlcYakGWRUSga78QDy08uHDtxQLXxOfSvm/y8N1KrEsXf/cJzHUGQJrqk8nLzR5mTRqnAZWA==</ds:X509Certificate>\n+                </ds:X509Data>\n+            </ds:KeyInfo>\n+        </ds:Signature>\n+        <saml:Subject>\n+            <saml:NameID Format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\">attack-name-id</saml:NameID>\n+            <saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\">\n+                <saml:SubjectConfirmationData NotOnOrAfter=\"2020-12-04T07:58:09.600Z\" Recipient=\"https://example.org/acs/post\" InResponseTo=\"id-abc\"/>\n+            </saml:SubjectConfirmation>\n+        </saml:Subject>\n+        <saml:Conditions NotBefore=\"2020-12-04T07:48:09.600Z\" NotOnOrAfter=\"2020-12-04T07:58:09.600Z\">\n+            <saml:AudienceRestriction>\n+                <saml:Audience>https://example.org/sp.xml</saml:Audience>\n+            </saml:AudienceRestriction>\n+        </saml:Conditions>\n+        <saml:AuthnStatement AuthnInstant=\"2020-12-04T07:48:09.600Z\" SessionNotOnOrAfter=\"2020-12-04T07:58:09.600Z\" SessionIndex=\"_samling_8227405_474676521\">\n+            <saml:AuthnContext>\n+                <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified</saml:AuthnContextClassRef>\n+            </saml:AuthnContext>\n+        </saml:AuthnStatement>\n+    </saml:Assertion>\n+</samlp:Response>"
        },
        {
          "filename": "tests/xmlsec1-keydata/signed-response-with-hmac.xml",
          "status": "added",
          "additions": 49,
          "deletions": 0,
          "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\"?>\n+<samlp:Response xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"theresponse\" IssueInstant=\"2020-12-04T07:48:09.700Z\" InResponseTo=\"id-abc\" Destination=\"https://example.org/acs/post\">\n+    <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+    <ds:Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n+        <ds:SignedInfo>\n+            <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+            <ds:SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\"/>\n+            <ds:Reference URI=\"#theresponse\">\n+                <ds:Transforms>\n+                    <ds:Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>\n+                    <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n+                </ds:Transforms>\n+                <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>\n+                <ds:DigestValue>/tLLJtWfBNGVGkPWs09wGxvKL/rPVWt5maNs9DWbHfQ=</ds:DigestValue>\n+            </ds:Reference>\n+        </ds:SignedInfo>\n+        <ds:SignatureValue>iInSCge8AdweKTwZ9Z8P6e8Kb24=</ds:SignatureValue>\n+        <ds:KeyInfo>\n+            <ds:KeyValue>\n+                <HMACKeyValue xmlns=\"http://www.aleksey.com/xmlsec/2002\">Rk9PCg==</HMACKeyValue>\n+            </ds:KeyValue>\n+            <ds:X509Data>\n+                <ds:X509Certificate>MIICXgIBAAKBgQDJg2cms7MqjniT8Fi/XkNHZNPbNVQyMUMXE9tXOdqwYCA1cc8vQdzkihscQMXy3iPw2cMggBu6gjMTOSOxECkuvX5ZCclKr8pXAJM5cY6gVOaVO2PdTZcvDBKGbiaNefiEw5hnoZomqZGp8wHNLAUkwtH9vjqqvxyS/vclc6k2ewIDAQABAoGBAKD2emW6ssmyhfQ9ztYFuJ4FlwiJf5icKuf7L4BsMRgjoHawUvt/k69l9aPKxZNrB7BycV+7lOqU57FaOf1MWGeWzsU5bYUVpFzOVwsY4umtsO78QGKLZe+91Z+ktOlmL3scAymAgE88Jmr0g8FC46Vv4Sam7zMCtmOvA9fYog1ZAkEA8lAe+XihSuZI6IZcdRdB6QJ5cgAJoZdWKKtUovb5Ah2w4D/ebkfpsQJK44aSR5GbnrnqSaMeLJMRz++Td0edHwJBANTlUBzoo3ihcBOZ0VzGYgDIG8foCTEf3jDBYNYaY9RH/c4P50GkDa4PBqtf1f+VORwAsC2NTeY6HUEWMpvfXyUCQQChQ3FZ1k6B6oDbP5CI3NGgoWTx2dSPFojgyCWrz3IpVllA5UDDZFjC1SPCCO2Rc/Z9zH2ARG7we3B/UpJx79dBAkEAiPc6sk6NFQevpjyYcDqFRIF5NgQ3Ha6l8PIITdZOkXz7cX3Txuw3jNrH7KtMbxDe3AApWDUHf+21cnFIf/WWLQJAeG0KKBfZw1iRu9vlcYakGWRUSga78QDy08uHDtxQLXxOfSvm/y8N1KrEsXf/cJzHUGQJrqk8nLzR5mTRqnAZWA==</ds:X509Certificate>\n+            </ds:X509Data>\n+        </ds:KeyInfo>\n+    </ds:Signature>\n+    <samlp:Status>\n+        <samlp:StatusCode Value=\"urn:oasis:names:tc:SAML:2.0:status:Success\"/>\n+    </samlp:Status>\n+    <saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" Version=\"2.0\" ID=\"theassertion\" IssueInstant=\"2020-12-04T07:48:09.600Z\">\n+        <saml:Issuer>urn:mace:example.com:saml:roland:idp</saml:Issuer>\n+        <saml:Subject>\n+            <saml:NameID Format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\">attack-name-id</saml:NameID>\n+            <saml:SubjectConfirmation Method=\"urn:oasis:names:tc:SAML:2.0:cm:bearer\">\n+                <saml:SubjectConfirmationData NotOnOrAfter=\"2020-12-04T07:58:09.600Z\" Recipient=\"https://example.org/acs/post\" InResponseTo=\"id-abc\"/>\n+            </saml:SubjectConfirmation>\n+        </saml:Subject>\n+        <saml:Conditions NotBefore=\"2020-12-04T07:48:09.600Z\" NotOnOrAfter=\"2020-12-04T07:58:09.600Z\">\n+            <saml:AudienceRestriction>\n+                <saml:Audience>https://example.org/sp.xml</saml:Audience>\n+            </saml:AudienceRestriction>\n+        </saml:Conditions>\n+        <saml:AuthnStatement AuthnInstant=\"2020-12-04T07:48:09.600Z\" SessionNotOnOrAfter=\"2020-12-04T07:58:09.600Z\" SessionIndex=\"_samling_8227405_474676521\">\n+            <saml:AuthnContext>\n+                <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified</saml:AuthnContextClassRef>\n+            </saml:AuthnContext>\n+        </saml:AuthnStatement>\n+    </saml:Assertion>\n+</samlp:Response>"
        }
      ],
      "file_patterns": {
        "security_files": 4,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7cb4f09dce87a7e8098b9c7552ebab8bc77bc896",
            "date": "2024-04-24T13:26:12Z",
            "author_login": "tmyjoe"
          },
          {
            "sha": "c8f595f6be7079aed498a7dd7d0c44717e8cd32f",
            "date": "2024-04-05T12:48:21Z",
            "author_login": "johanlundberg"
          },
          {
            "sha": "3daa066703f5ec433aeb9714a847330c540fc5d4",
            "date": "2024-01-30T13:06:56Z",
            "author_login": "c00kiemon5ter"
          },
          {
            "sha": "5b091317a70872aaf5b379301e8895a95ada17c1",
            "date": "2024-01-30T11:50:41Z",
            "author_login": "c00kiemon5ter"
          },
          {
            "sha": "aed3012249158572712450c9f03f89b2d9c5c1c8",
            "date": "2024-01-30T11:44:46Z",
            "author_login": "c00kiemon5ter"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-347",
    "description": "PySAML2 is a pure python implementation of SAML Version 2 Standard. PySAML2 before 6.5.0 has an improper verification of cryptographic signature vulnerability. Users of pysaml2 that use the default CryptoBackendXmlSec1 backend and need to verify signed SAML documents are impacted. PySAML2 does not ensure that a signed SAML document is correctly signed. The default CryptoBackendXmlSec1 backend is using the xmlsec1 binary to verify the signature of signed SAML documents, but by default xmlsec1 accepts any type of key found within the given document. xmlsec1 needs to be configured explicitly to only use only _x509 certificates_ for the verification process of the SAML document signature. This is fixed in PySAML2 6.5.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-01-21T15:15:14.423",
    "last_modified": "2024-11-21T05:47:50.527",
    "fix_date": "2021-01-20T12:33:19Z"
  },
  "references": [
    {
      "url": "https://github.com/IdentityPython/pysaml2/commit/46578df0695269a16f1c94171f1429873f90ed99",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/IdentityPython/pysaml2/releases/tag/v6.5.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/IdentityPython/pysaml2/security/advisories/GHSA-5p3x-r448-pc62",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/02/msg00038.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/pysaml2",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aleksey.com/pipermail/xmlsec/2013/009717.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/IdentityPython/pysaml2/commit/46578df0695269a16f1c94171f1429873f90ed99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/IdentityPython/pysaml2/releases/tag/v6.5.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/IdentityPython/pysaml2/security/advisories/GHSA-5p3x-r448-pc62",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/02/msg00038.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pypi.org/project/pysaml2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.aleksey.com/pipermail/xmlsec/2013/009717.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.160663",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pysaml2",
    "owner": "IdentityPython",
    "created_at": "2012-05-23T21:12:14Z",
    "updated_at": "2025-01-16T06:25:50Z",
    "pushed_at": "2024-08-16T16:34:15Z",
    "size": 16380,
    "stars": 570,
    "forks": 426,
    "open_issues": 118,
    "watchers": 570,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 3261246,
      "Mako": 3703,
      "Shell": 2369,
      "Lua": 916,
      "CSS": 46
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:44:47.923667"
  }
}