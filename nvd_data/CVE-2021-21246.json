{
  "cve_id": "CVE-2021-21246",
  "github_data": {
    "repository": "theonedev/onedev",
    "fix_commit": "a4491e5f79dc6cc96eac20972eedc8905ddf6089",
    "related_commits": [
      "a4491e5f79dc6cc96eac20972eedc8905ddf6089",
      "a4491e5f79dc6cc96eac20972eedc8905ddf6089"
    ],
    "patch_url": "https://github.com/theonedev/onedev/commit/a4491e5f79dc6cc96eac20972eedc8905ddf6089.patch",
    "fix_commit_details": {
      "sha": "a4491e5f79dc6cc96eac20972eedc8905ddf6089",
      "commit_date": "2020-11-20T02:23:30Z",
      "author": {
        "login": "robinshine",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix the issue that user access token can be leaked via restful api",
        "length": 66,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 73,
        "additions": 2,
        "deletions": 71
      },
      "files": [
        {
          "filename": "server-core/src/main/java/io/onedev/server/model/User.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -112,13 +112,15 @@ protected Stack<User> initialValue() {\n \n \tprivate String fullName;\n \t\n+\t@JsonView(DefaultView.class)\n \t@Embedded\n \tprivate SsoInfo ssoInfo = new SsoInfo();\n \t\n \t@Column(unique=true, nullable=false)\n \tprivate String email;\n \t\n \t@Column(unique=true, nullable=false)\n+\t@JsonView(DefaultView.class)\n \tprivate String accessToken = RandomStringUtils.randomAlphanumeric(ACCESS_TOKEN_LEN);\n \t\n \t@OneToMany(mappedBy=\"user\", cascade=CascadeType.REMOVE)"
        },
        {
          "filename": "server-core/src/main/java/io/onedev/server/rest/UserResource.java",
          "status": "removed",
          "additions": 0,
          "deletions": 71,
          "patch": "@@ -1,71 +0,0 @@\n-package io.onedev.server.rest;\n-\n-import java.util.Collection;\n-\n-import javax.inject.Inject;\n-import javax.inject.Singleton;\n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.QueryParam;\n-import javax.ws.rs.core.Context;\n-import javax.ws.rs.core.MediaType;\n-import javax.ws.rs.core.Response;\n-import javax.ws.rs.core.UriInfo;\n-\n-import org.apache.shiro.authz.UnauthorizedException;\n-import org.hibernate.criterion.Restrictions;\n-import org.hibernate.validator.constraints.Email;\n-\n-import io.onedev.server.entitymanager.UserManager;\n-import io.onedev.server.model.User;\n-import io.onedev.server.persistence.dao.EntityCriteria;\n-import io.onedev.server.rest.jersey.ValidQueryParams;\n-import io.onedev.server.security.SecurityUtils;\n-\n-@Path(\"/users\")\n-@Consumes(MediaType.WILDCARD)\n-@Produces(MediaType.APPLICATION_JSON)\n-@Singleton\n-public class UserResource {\n-\n-\tprivate final UserManager userManager;\n-\t\n-\t@Inject\n-\tpublic UserResource(UserManager userManager) {\n-\t\tthis.userManager = userManager;\n-\t}\n-\t\n-\t@ValidQueryParams\n-\t@GET\n-\tpublic Response query(@QueryParam(\"name\") String name, @Email @QueryParam(\"email\") String email, \n-\t\t\t@QueryParam(\"offset\") Integer offset, @QueryParam(\"count\") Integer count, @Context UriInfo uriInfo) {\n-    \tif (!SecurityUtils.isAdministrator())\n-    \t\tthrow new UnauthorizedException(\"Unauthorized access to user profiles\");\n-    \t\n-    \tEntityCriteria<User> criteria = EntityCriteria.of(User.class);\n-    \tif (name != null)\n-    \t\tcriteria.add(Restrictions.eq(\"name\", name));\n-\t\tif (email != null)\n-\t\t\tcriteria.add(Restrictions.eq(\"email\", email));\n-\t\t\n-    \tif (offset == null)\n-    \t\toffset = 0;\n-    \t\n-    \tif (count == null || count > RestConstants.PAGE_SIZE) \n-    \t\tcount = RestConstants.PAGE_SIZE;\n-\n-    \tCollection<User> users = userManager.query(criteria, offset, count);\n-\t\t\n-\t\treturn Response.ok(users, RestConstants.JSON_UTF8).build();\n-\t}\n-\t\n-    @GET\n-    @Path(\"/{userId}\")\n-    public User get(@PathParam(\"userId\") Long userId) {\n-    \treturn userManager.load(userId);\n-    }\n-    \n-}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "10e2c31d03935064a014dfb1464fa7bc146be9e0",
            "date": "2025-01-11T23:54:45Z",
            "author_login": "robinshine"
          },
          {
            "sha": "715386eb735489c08616f9e1c3dc56f58a5457c3",
            "date": "2025-01-11T01:12:03Z",
            "author_login": "robinshine"
          },
          {
            "sha": "be37d8fc32b9c3c4d7b11d3af8051be8911ee390",
            "date": "2025-01-09T14:35:55Z",
            "author_login": "robinshine"
          },
          {
            "sha": "f61d99124dd571668a8836354672903717ced5ca",
            "date": "2025-01-06T03:25:54Z",
            "author_login": "sususweet"
          },
          {
            "sha": "4c37f0dd4e0336e64f22fa04929d67188ee70bd4",
            "date": "2025-01-06T02:48:57Z",
            "author_login": "sususweet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-862",
    "description": "OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, the REST UserResource endpoint performs a security check to make sure that only administrators can list user details. However for the `/users/{id}` endpoint there are no security checks enforced so it is possible to retrieve arbitrary user details including their Access Tokens! These access tokens can be used to access the API or clone code in the build spec via the HTTP(S) protocol. It has permissions to all projects accessible by the user account. This issue may lead to `Sensitive data leak` and leak the Access Token which can be used to impersonate the administrator or any other users. This issue was addressed in 4.0.3 by removing user info from restful api.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-01-15T21:15:13.490",
    "last_modified": "2024-11-21T05:47:51.363",
    "fix_date": "2020-11-20T02:23:30Z"
  },
  "references": [
    {
      "url": "https://github.com/theonedev/onedev/commit/a4491e5f79dc6cc96eac20972eedc8905ddf6089",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theonedev/onedev/security/advisories/GHSA-66v7-gg85-f4gx",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theonedev/onedev/commit/a4491e5f79dc6cc96eac20972eedc8905ddf6089",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/theonedev/onedev/security/advisories/GHSA-66v7-gg85-f4gx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.152106",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "onedev",
    "owner": "theonedev",
    "created_at": "2018-11-06T02:57:01Z",
    "updated_at": "2025-01-14T10:30:38Z",
    "pushed_at": "2025-01-11T23:54:59Z",
    "size": 226316,
    "stars": 13579,
    "forks": 872,
    "open_issues": 0,
    "watchers": 13579,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Java": 11067283,
      "JavaScript": 730260,
      "HTML": 381307,
      "CSS": 180682,
      "Shell": 116784,
      "ANTLR": 46591,
      "Smarty": 17174,
      "Python": 5761,
      "Mustache": 3983,
      "Dockerfile": 125
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:48:17.966345"
  }
}