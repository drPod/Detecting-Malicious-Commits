{
  "cve_id": "CVE-2021-21305",
  "github_data": {
    "repository": "carrierwaveuploader/carrierwave",
    "fix_commit": "387116f5c72efa42bc3938d946b4c8d2f22181b7",
    "related_commits": [
      "387116f5c72efa42bc3938d946b4c8d2f22181b7",
      "387116f5c72efa42bc3938d946b4c8d2f22181b7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "387116f5c72efa42bc3938d946b4c8d2f22181b7",
      "commit_date": "2021-02-07T06:26:22Z",
      "author": {
        "login": "mshibuya",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix Code Injection vulnerability in CarrierWave::RMagick",
        "length": 154,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 46,
        "additions": 42,
        "deletions": 4
      },
      "files": [
        {
          "filename": "lib/carrierwave/processing/rmagick.rb",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -378,9 +378,15 @@ def manipulate!(options={}, &block)\n \n     def create_info_block(options)\n       return nil unless options\n-      assignments = options.map { |k, v| \"img.#{k} = #{v}\" }\n-      code = \"lambda { |img| \" + assignments.join(\";\") + \"}\"\n-      eval code\n+      proc do |img|\n+        options.each do |k, v|\n+          if v.is_a?(String) && (matches = v.match(/^[\"'](.+)[\"']/))\n+            ActiveSupport::Deprecation.warn \"Passing quoted strings like #{v} to #manipulate! is deprecated, pass them without quoting.\"\n+            v = matches[1]\n+          end\n+          img.public_send(:\"#{k}=\", v)\n+        end\n+      end\n     end\n \n     def destroy_image(image)"
        },
        {
          "filename": "spec/processing/rmagick_spec.rb",
          "status": "modified",
          "additions": 33,
          "deletions": 1,
          "patch": "@@ -208,9 +208,41 @@\n \n       instance.manipulate! :read => {\n           :density => 10,\n-          :size => %{\"200x200\"}\n+          :size => \"200x200\"\n         }\n     end\n+\n+    it 'shows deprecation but still accepts strings enclosed with double quotes' do\n+      expect_any_instance_of(::Magick::Image::Info).to receive(:size=).once.with(\"200x200\")\n+      expect(ActiveSupport::Deprecation).to receive(:warn).with(any_args)\n+      instance.manipulate! :read => {:size => %{\"200x200\"}}\n+    end\n+\n+    it 'shows deprecation but still accepts strings enclosed with single quotes' do\n+      expect_any_instance_of(::Magick::Image::Info).to receive(:size=).once.with(\"200x200\")\n+      expect(ActiveSupport::Deprecation).to receive(:warn).with(any_args)\n+      instance.manipulate! :read => {:size => %{'200x200'}}\n+    end\n+\n+    it 'does not allow arbitrary code execution' do\n+      expect_any_instance_of(Kernel).not_to receive(:puts)\n+      expect do\n+        instance.manipulate! :read => {\n+            :density => \"1 }; raise; {\"\n+        }\n+      end.to raise_error ArgumentError, /invalid density geometry/\n+    end\n+\n+    it 'does not allow invocation of non-public methods' do\n+      module Kernel\n+        private def foo=(value); raise; end\n+      end\n+      expect do\n+        instance.manipulate! :read => {\n+            :foo => \"1\"\n+        }\n+      end.to raise_error NoMethodError, /private method `foo=' called/\n+    end\n   end\n \n   describe \"#width and #height\" do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "550e423fbd5cd45cac262e2c5d13bfe778be5093",
            "date": "2025-01-12T08:36:22Z",
            "author_login": "mshibuya"
          },
          {
            "sha": "23bfc39b1ee5b64f1f92fc238d08308cb9a84b37",
            "date": "2025-01-11T06:20:37Z",
            "author_login": "mshibuya"
          },
          {
            "sha": "ee241333c91c2f4898e936403dd2d987603b64f8",
            "date": "2025-01-11T05:33:51Z",
            "author_login": "mshibuya"
          },
          {
            "sha": "08a36988fc6d615b5c947e30b8d6f344e289a2e1",
            "date": "2025-01-11T05:21:46Z",
            "author_login": "mshibuya"
          },
          {
            "sha": "b4d43c328e41c2fb4f5c217ac5b3a8a4f7288f60",
            "date": "2025-01-11T05:17:05Z",
            "author_login": "mshibuya"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L",
    "cwe_id": "CWE-74",
    "description": "CarrierWave is an open-source RubyGem which provides a simple and flexible way to upload files from Ruby applications. In CarrierWave before versions 1.3.2 and 2.1.1, there is a code injection vulnerability. The \"#manipulate!\" method inappropriately evals the content of mutation option(:read/:write), allowing attackers to craft a string that can be executed as a Ruby code. If an application developer supplies untrusted inputs to the option, it will lead to remote code execution(RCE). This is fixed in versions 1.3.2 and 2.1.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-02-08T20:15:12.527",
    "last_modified": "2024-11-21T05:47:59.093",
    "fix_date": "2021-02-07T06:26:22Z"
  },
  "references": [
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/blob/master/CHANGELOG.md#132---2021-02-08",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/blob/master/CHANGELOG.md#211---2021-02-08",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/commit/387116f5c72efa42bc3938d946b4c8d2f22181b7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-cf3w-g86h-35x4",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://rubygems.org/gems/carrierwave",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/blob/master/CHANGELOG.md#132---2021-02-08",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/blob/master/CHANGELOG.md#211---2021-02-08",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/commit/387116f5c72efa42bc3938d946b4c8d2f22181b7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-cf3w-g86h-35x4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://rubygems.org/gems/carrierwave",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.188984",
    "processing_status": "enhanced"
  }
}