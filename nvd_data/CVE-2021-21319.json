{
  "cve_id": "CVE-2021-21319",
  "github_data": {
    "repository": "galette/galette",
    "fix_commit": "514418da973ae5b84bf97f94bd288a41e8e3f0a6",
    "related_commits": [
      "514418da973ae5b84bf97f94bd288a41e8e3f0a6",
      "8f3bdd9f7d0708466e011253064a867ca2b271a5",
      "f54b2570615d38d0302e937079233e52c2d80995",
      "514418da973ae5b84bf97f94bd288a41e8e3f0a6",
      "8f3bdd9f7d0708466e011253064a867ca2b271a5",
      "f54b2570615d38d0302e937079233e52c2d80995"
    ],
    "patch_url": "https://github.com/galette/galette/commit/514418da973ae5b84bf97f94bd288a41e8e3f0a6.patch",
    "fix_commit_details": {
      "sha": "514418da973ae5b84bf97f94bd288a41e8e3f0a6",
      "commit_date": "2021-02-11T05:55:29Z",
      "author": {
        "login": "trasher",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevent some possible XSS",
        "length": 57,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 51,
        "additions": 27,
        "deletions": 24
      },
      "files": [
        {
          "filename": "galette/lib/Galette/Controllers/AuthController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -305,7 +305,7 @@ public function retrievePassword(Request $request, Response $response, int $id_a\n             $login_adh = $adh->login;\n         } else {\n             $post = $request->getParsedBody();\n-            $login_adh = $post['login'];\n+            $login_adh = htmlspecialchars($post['login'], ENT_QUOTES);\n             $adh = new Adherent($this->zdb, $login_adh);\n         }\n "
        },
        {
          "filename": "galette/lib/Galette/Controllers/Crud/MembersController.php",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -397,7 +397,7 @@ public function filterPublicList(Request $request, Response $response, string $t\n         } else {\n             //number of rows to show\n             if (isset($post['nbshow'])) {\n-                $filters->show = $post['nbshow'];\n+                $filters->show = (int)$post['nbshow'];\n             }\n         }\n \n@@ -654,7 +654,7 @@ public function filter(Request $request, Response $response): Response\n             }\n             //number of rows to show\n             if (isset($post['nbshow'])) {\n-                $filters->show = $post['nbshow'];\n+                $filters->show = (int)$post['nbshow'];\n             }\n \n             if (isset($post['advanced_filtering'])) {\n@@ -674,7 +674,7 @@ public function filter(Request $request, Response $response): Response\n                                     trim($f) !== ''\n                                     && trim($post['free_text'][$i]) !== ''\n                                 ) {\n-                                    $fs_search = $post['free_text'][$i];\n+                                    $fs_search = htmlspecialchars($post['free_text'][$i], ENT_QUOTES);\n                                     $log_op\n                                         = (int)$post['free_logical_operator'][$i];\n                                     $qry_op\n@@ -871,7 +871,7 @@ public function ajaxList(Request $request, Response $response, string $option =\n \n         //numbers of rows to display\n         if (isset($post['nbshow']) && is_numeric($post['nbshow'])) {\n-            $filters->show = $post['nbshow'];\n+            $filters->show = (int)$post['nbshow'];\n         }\n \n         $members = new Members($filters);\n@@ -966,11 +966,11 @@ public function ajaxList(Request $request, Response $response, string $option =\n         }\n \n         if (isset($post['gid'])) {\n-            $params['the_id'] = $post['gid'];\n+            $params['the_id'] = (int)$post['gid'];\n         }\n \n         if (isset($post['id_adh'])) {\n-            $params['excluded'] = $post['id_adh'];\n+            $params['excluded'] = (int)$post['id_adh'];\n         }\n \n         // display page"
        },
        {
          "filename": "galette/lib/Galette/Controllers/DynamicTranslationsController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -170,6 +170,7 @@ public function dynamicTranslations(Request $request, Response $response, string\n     public function doDynamicTranslations(Request $request, Response $response): Response\n     {\n         $post = $request->getParsedBody();\n+        $post['text_orig'] = htmlspecialchars($post['text_orig'], ENT_QUOTES);\n         $error_detected = [];\n \n         if (isset($post['trans']) && isset($post['text_orig'])) {"
        },
        {
          "filename": "galette/lib/Galette/Controllers/GaletteController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -540,7 +540,7 @@ public function storeCoreFieldsConfig(Request $request, Response $response): Res\n \n             $res[$current_cat][] = array(\n                 'field_id'  =>  $field,\n-                'label'     =>  $post[$field . '_label'],\n+                'label'     =>  htmlspecialchars($post[$field . '_label'], ENT_QUOTES),\n                 'category'  =>  $post[$field . '_category'],\n                 'visible'   =>  $post[$field . '_visible'],\n                 'required'  =>  $required"
        },
        {
          "filename": "galette/lib/Galette/Controllers/HistoryController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -141,7 +141,7 @@ public function historyFilter(Request $request, Response $response): Response\n             if (\n                 (isset($post['nbshow']) && is_numeric($post['nbshow']))\n             ) {\n-                $filters->show = $post['nbshow'];\n+                $filters->show = (int)$post['nbshow'];\n             }\n \n             if (isset($post['end_date_filter']) || isset($post['start_date_filter'])) {"
        },
        {
          "filename": "galette/lib/Galette/Controllers/PdfController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -580,7 +580,7 @@ public function storeModels(Request $request, Response $response): Response\n             $type = (int)$post['model_type'];\n             $class = PdfModel::getTypeClass($type);\n             if (isset($post[PdfModel::PK])) {\n-                $model = new $class($this->zdb, $this->preferences, (int)$_POST[PdfModel::PK]);\n+                $model = new $class($this->zdb, $this->preferences, (int)$post[PdfModel::PK]);\n             } else {\n                 $model = new $class($this->zdb, $this->preferences);\n             }"
        },
        {
          "filename": "galette/lib/Galette/Controllers/PluginsController.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -203,8 +203,8 @@ public function initPluginDb(Request $request, Response $response, string $id):\n             $install->atPreviousStep();\n         } elseif (isset($post['install_prefs_ok'])) {\n             $install->atEndStep();\n-        } elseif (isset($_POST['previous_version'])) {\n-            $install->setInstalledVersion($_POST['previous_version']);\n+        } elseif (isset($post['previous_version'])) {\n+            $install->setInstalledVersion($post['previous_version']);\n             $install->atDbUpgradeStep();\n         } elseif (isset($post['install_dbperms_ok'])) {\n             if ($install->isInstall()) {\n@@ -286,7 +286,7 @@ public function initPluginDb(Request $request, Response $response, string $id):\n                     $update_scripts = Install::getUpdateScripts(\n                         $plugin['root'],\n                         TYPE_DB,\n-                        $_POST['previous_version']\n+                        $post['previous_version']\n                     );\n                 } else {\n                     $update_scripts['current'] = TYPE_DB . '.sql';"
        },
        {
          "filename": "galette/lib/Galette/Entity/Adherent.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -889,7 +889,7 @@ public static function getNameWithCase($name, $surname, $title = false, $id = fa\n         if ($id !== false || $nick !== false) {\n             $str .= ')';\n         }\n-        return $str;\n+        return strip_tags($str);\n     }\n \n     /**\n@@ -1679,7 +1679,7 @@ public function __get($name)\n                         if ($this->_address_continuation !== '' && $this->_address_continuation !== null) {\n                             $address .= \"\\n\" . $this->_address_continuation;\n                         }\n-                        return $address;\n+                        return htmlspecialchars($address, ENT_QUOTES);\n                         break;\n                     case 'sname':\n                         return $this->getNameWithCase($this->_name, $this->_surname);"
        },
        {
          "filename": "galette/templates/default/gestion_adherents.tpl",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -221,16 +221,18 @@ We have to use a template file, so Smarty will do its work (like replacing varia\n                         <img src=\"{base_url}/{$template_subdir}images/icon-empty.png\" alt=\"\" width=\"16\" height=\"16\"/>\n             {/if}\n                         {assign var=\"mid\" value=$member->id}\n-                        <a href=\"{path_for name=\"member\" data=[\"id\" => $member->id]}\">{$member->sname}{if $member->company_name} ({$member->company_name}){/if}</a>\n+                        <a href=\"{path_for name=\"member\" data=[\"id\" => $member->id]}\">{$member->sname}{if $member->company_name} ({$member->company_name|escape}){/if}</a>\n                     </td>\n         {else}\n             {assign var=\"lrclass\" value=$rclass}\n             {assign var=\"propname\" value=$column->propname}\n-            {assign var=value value=$member->$propname}\n+            {assign var=value value=$member->$propname|escape}\n \n-            {if $column->field_id eq 'pseudo_adh'}\n+            {if $column->field_id eq 'nom_adh'}\n+                {assign var=\"value\" value=$member->sfullname}\n+            {elseif $column->field_id eq 'pseudo_adh'}\n                 {assign var=\"lrclass\" value=\"$rclass nowrap\"}\n-                {assign var=value value=$member->$propname|htmlspecialchars}\n+                {assign var=value value=$member->$propname|escape}\n             {elseif $column->field_id eq 'tel_adh' or $column->field_id eq 'gsm_adh'}\n                 {assign var=\"lrclass\" value=\"$rclass nowrap\"}\n             {elseif $column->field_id eq 'id_statut'}"
        },
        {
          "filename": "galette/templates/default/history.tpl",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -26,7 +26,7 @@\n             <select name=\"action_filter\" id=\"action_filter\">\n                 <option value=\"0\">{_T string=\"Select an action\"}</option>\n         {foreach from=$actions item=$action}\n-                <option value=\"{$action}\"{if $history->filters->action_filter eq $action} selected=\"selected\"{/if}>{$action}</option>\n+                <option value=\"{$action|escape}\"{if $history->filters->action_filter eq $action} selected=\"selected\"{/if}>{$action|escape}</option>\n         {/foreach}\n             </select>\n     {/if}\n@@ -126,9 +126,9 @@\n                     <td class=\"nowrap\" data-title=\"{_T string=\"Date\"}\">{$log.date_log|date_format:\"%a %d/%m/%Y - %R\"}</td>\n                     <td class=\"nowrap\" data-title=\"{_T string=\"IP\"}\">{$log.ip_log}</td>\n                     <td data-title=\"{_T string=\"User\"}\">{$log.adh_log}</td>\n-                    <td data-title=\"{_T string=\"Action\"}\">{$log.action_log}</td>\n+                    <td data-title=\"{_T string=\"Action\"}\">{$log.action_log|escape}</td>\n                     <td data-title=\"{_T string=\"Description\"}\">\n-                        {$log.text_log}\n+                        {$log.text_log|escape}\n         {if $log.sql_log}\n                         <span class=\"sql_log\">{$log.sql_log|escape:\"htmlall\"}</span>\n         {/if}"
        },
        {
          "filename": "galette/templates/default/voir_adherent.tpl",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -93,7 +93,7 @@\n             <li>\n                 <a\n                     href=\"{path_for name=\"duplicateMember\" data=[\"id_adh\" => $member->id]}\"\n-                    title=\"{_T string=\"Create a new member with %name information.\" pattern=\"/%name/\" replace=$member->sname}\"\n+                    title=\"{_T string=\"Create a new member with %name information.\" pattern=\"/%name/\" replace=$member->sfullname}\"\n                     class=\"button bigbutton tooltip\"\n                 >\n                     <i class=\"fas fa-clone fa-fw fa-2x\" aria-hidden=\"true\"></i>\n@@ -143,7 +143,7 @@ We have to use a template file, so Smarty will do its work (like replacing varia\n         {assign var=\"value\" value=$member->$propname|escape}\n \n         {if $element->field_id eq 'nom_adh'}\n-            {assign var=\"value\" value=$member->sfullname|escape}\n+            {assign var=\"value\" value=$member->sfullname}\n         {elseif $element->field_id eq 'pref_lang'}\n             {assign var=\"value\" value=$pref_lang}\n         {elseif $element->field_id eq 'adresse_adh'}"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f0a2e87ac6ec2aed4fa0ae5cb056feacc9313b3f",
            "date": "2025-01-12T09:01:14Z",
            "author_login": "pp-r"
          },
          {
            "sha": "61c8b6c9f722df79f33e23a03b6e4f28ea722200",
            "date": "2025-01-12T07:53:48Z",
            "author_login": "trasher"
          },
          {
            "sha": "2e2900cb3ccbb5fa4a10a18f0f6442dae0a6ad3c",
            "date": "2025-01-12T07:53:33Z",
            "author_login": "trasher"
          },
          {
            "sha": "c103babdfa87fb919e8586624aa820061a073947",
            "date": "2025-01-12T07:40:36Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "3a863ad6a91708da03772dee847dfc20fd8eb6e6",
            "date": "2025-01-11T10:52:45Z",
            "author_login": "trasher"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-79",
    "description": "Galette is a membership management web application geared towards non profit organizations. In versions prior to 0.9.5, malicious javascript code can be stored to be displayed later on self subscription page. The self subscription feature can be disabled as a workaround (this is the default state). Malicious javascript code can be executed (not stored) on login and retrieve password pages. This issue is patched in version 0.9.5.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-25T16:15:08.020",
    "last_modified": "2024-11-21T05:48:00.793",
    "fix_date": "2021-02-11T05:55:29Z"
  },
  "references": [
    {
      "url": "https://bugs.galette.eu/issues/1535",
      "source": "security-advisories@github.com",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/514418da973ae5b84bf97f94bd288a41e8e3f0a6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/8f3bdd9f7d0708466e011253064a867ca2b271a5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/f54b2570615d38d0302e937079233e52c2d80995",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/security/advisories/GHSA-vjc9-mj44-x59q",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.galette.eu/issues/1535",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/514418da973ae5b84bf97f94bd288a41e8e3f0a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/8f3bdd9f7d0708466e011253064a867ca2b271a5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/commit/f54b2570615d38d0302e937079233e52c2d80995",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galette/galette/security/advisories/GHSA-vjc9-mj44-x59q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.847172",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "galette",
    "owner": "galette",
    "created_at": "2013-01-14T22:48:07Z",
    "updated_at": "2025-01-12T10:55:09Z",
    "pushed_at": "2025-01-13T06:27:54Z",
    "size": 91396,
    "stars": 55,
    "forks": 32,
    "open_issues": 3,
    "watchers": 55,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "PHP": 2882924,
      "Twig": 881357,
      "CSS": 72148,
      "Python": 24966,
      "JavaScript": 16960,
      "Makefile": 2637,
      "HTML": 2127,
      "Batchfile": 794,
      "Smarty": 368,
      "Shell": 187
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:04:00.923115"
  }
}