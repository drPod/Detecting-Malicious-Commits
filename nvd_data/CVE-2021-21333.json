{
  "cve_id": "CVE-2021-21333",
  "github_data": {
    "repository": "matrix-org/synapse",
    "fix_commit": "e54746bdf7d5c831eabe4dcea76a7626f1de73df",
    "related_commits": [
      "e54746bdf7d5c831eabe4dcea76a7626f1de73df",
      "e54746bdf7d5c831eabe4dcea76a7626f1de73df"
    ],
    "patch_url": "https://github.com/matrix-org/synapse/commit/e54746bdf7d5c831eabe4dcea76a7626f1de73df.patch",
    "fix_commit_details": {
      "sha": "e54746bdf7d5c831eabe4dcea76a7626f1de73df",
      "commit_date": "2021-01-27T15:59:50Z",
      "author": {
        "login": "clokep",
        "type": "User",
        "stats": {
          "total_commits": 1430,
          "average_weekly_commits": 2.623853211009174,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 192
        }
      },
      "commit_message": {
        "title": "Clean-up the template loading code. (#9200)",
        "length": 182,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 134,
        "additions": 96,
        "deletions": 38
      },
      "files": [
        {
          "filename": "UPGRADE.rst",
          "status": "modified",
          "additions": 37,
          "deletions": 0,
          "patch": "@@ -85,6 +85,43 @@ for example:\n      wget https://packages.matrix.org/debian/pool/main/m/matrix-synapse-py3/matrix-synapse-py3_1.3.0+stretch1_amd64.deb\n      dpkg -i matrix-synapse-py3_1.3.0+stretch1_amd64.deb\n \n+Upgrading to v1.27.0\n+====================\n+\n+Changes to HTML templates\n+-------------------------\n+\n+The HTML templates for SSO and email notifications now have `Jinja2's autoescape <https://jinja.palletsprojects.com/en/2.11.x/api/#autoescaping>`_\n+enabled for files ending in ``.html``, ``.htm``, and ``.xml``. If you hae customised\n+these templates and see issues when viewing them you might need to update them.\n+It is expected that most configurations will need no changes.\n+\n+If you have customised the templates *names* for these templates it is recommended\n+to verify they end in ``.html`` to ensure autoescape is enabled.\n+\n+The above applies to the following templates:\n+\n+* ``add_threepid.html``\n+* ``add_threepid_failure.html``\n+* ``add_threepid_success.html``\n+* ``notice_expiry.html``\n+* ``notice_expiry.html``\n+* ``notif_mail.html`` (which, by default, includes ``room.html`` and ``notif.html``)\n+* ``password_reset.html``\n+* ``password_reset_confirmation.html``\n+* ``password_reset_failure.html``\n+* ``password_reset_success.html``\n+* ``registration.html``\n+* ``registration_failure.html``\n+* ``registration_success.html``\n+* ``sso_account_deactivated.html``\n+* ``sso_auth_bad_user.html``\n+* ``sso_auth_confirm.html``\n+* ``sso_auth_success.html``\n+* ``sso_error.html``\n+* ``sso_login_idp_picker.html``\n+* ``sso_redirect_confirm.html``\n+\n Upgrading to v1.26.0\n ====================\n "
        },
        {
          "filename": "changelog.d/9200.misc",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+Clean-up template loading code."
        },
        {
          "filename": "synapse/config/_base.py",
          "status": "modified",
          "additions": 26,
          "deletions": 16,
          "patch": "@@ -203,36 +203,50 @@ def read_file(cls, file_path, config_name):\n         with open(file_path) as file_stream:\n             return file_stream.read()\n \n+    def read_template(self, filename: str) -> jinja2.Template:\n+        \"\"\"Load a template file from disk.\n+\n+        This function will attempt to load the given template from the default Synapse\n+        template directory.\n+\n+        Files read are treated as Jinja templates. The templates is not rendered yet\n+        and has autoescape enabled.\n+\n+        Args:\n+            filename: A template filename to read.\n+\n+        Raises:\n+            ConfigError: if the file's path is incorrect or otherwise cannot be read.\n+\n+        Returns:\n+            A jinja2 template.\n+        \"\"\"\n+        return self.read_templates([filename])[0]\n+\n     def read_templates(\n-        self,\n-        filenames: List[str],\n-        custom_template_directory: Optional[str] = None,\n-        autoescape: bool = False,\n+        self, filenames: List[str], custom_template_directory: Optional[str] = None,\n     ) -> List[jinja2.Template]:\n         \"\"\"Load a list of template files from disk using the given variables.\n \n         This function will attempt to load the given templates from the default Synapse\n         template directory. If `custom_template_directory` is supplied, that directory\n         is tried first.\n \n-        Files read are treated as Jinja templates. These templates are not rendered yet.\n+        Files read are treated as Jinja templates. The templates are not rendered yet\n+        and have autoescape enabled.\n \n         Args:\n             filenames: A list of template filenames to read.\n \n             custom_template_directory: A directory to try to look for the templates\n                 before using the default Synapse template directory instead.\n \n-            autoescape: Whether to autoescape variables before inserting them into the\n-                template.\n-\n         Raises:\n             ConfigError: if the file's path is incorrect or otherwise cannot be read.\n \n         Returns:\n             A list of jinja2 templates.\n         \"\"\"\n-        templates = []\n         search_directories = [self.default_template_dir]\n \n         # The loader will first look in the custom template directory (if specified) for the\n@@ -249,7 +263,7 @@ def read_templates(\n             search_directories.insert(0, custom_template_directory)\n \n         loader = jinja2.FileSystemLoader(search_directories)\n-        env = jinja2.Environment(loader=loader, autoescape=autoescape)\n+        env = jinja2.Environment(loader=loader, autoescape=jinja2.select_autoescape(),)\n \n         # Update the environment with our custom filters\n         env.filters.update(\n@@ -259,12 +273,8 @@ def read_templates(\n             }\n         )\n \n-        for filename in filenames:\n-            # Load the template\n-            template = env.get_template(filename)\n-            templates.append(template)\n-\n-        return templates\n+        # Load the templates\n+        return [env.get_template(filename) for filename in filenames]\n \n \n def _format_ts_filter(value: int, format: str):"
        },
        {
          "filename": "synapse/config/captcha.py",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -28,9 +28,7 @@ def read_config(self, config, **kwargs):\n             \"recaptcha_siteverify_api\",\n             \"https://www.recaptcha.net/recaptcha/api/siteverify\",\n         )\n-        self.recaptcha_template = self.read_templates(\n-            [\"recaptcha.html\"], autoescape=True\n-        )[0]\n+        self.recaptcha_template = self.read_template(\"recaptcha.html\")\n \n     def generate_config_section(self, **kwargs):\n         return \"\"\"\\"
        },
        {
          "filename": "synapse/config/consent_config.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -89,7 +89,7 @@ def __init__(self, *args):\n \n     def read_config(self, config, **kwargs):\n         consent_config = config.get(\"user_consent\")\n-        self.terms_template = self.read_templates([\"terms.html\"], autoescape=True)[0]\n+        self.terms_template = self.read_template(\"terms.html\")\n \n         if consent_config is None:\n             return"
        },
        {
          "filename": "synapse/config/registration.py",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -176,9 +176,7 @@ def read_config(self, config, **kwargs):\n         self.session_lifetime = session_lifetime\n \n         # The success template used during fallback auth.\n-        self.fallback_success_template = self.read_templates(\n-            [\"auth_success.html\"], autoescape=True\n-        )[0]\n+        self.fallback_success_template = self.read_template(\"auth_success.html\")\n \n     def generate_config_section(self, generate_secrets=False, **kwargs):\n         if generate_secrets:"
        },
        {
          "filename": "synapse/push/mailer.py",
          "status": "modified",
          "additions": 16,
          "deletions": 2,
          "patch": "@@ -668,6 +668,15 @@ def make_unsubscribe_link(\n \n \n def safe_markup(raw_html: str) -> jinja2.Markup:\n+    \"\"\"\n+    Sanitise a raw HTML string to a set of allowed tags and attributes, and linkify any bare URLs.\n+\n+    Args\n+        raw_html: Unsafe HTML.\n+\n+    Returns:\n+        A Markup object ready to safely use in a Jinja template.\n+    \"\"\"\n     return jinja2.Markup(\n         bleach.linkify(\n             bleach.clean(\n@@ -684,8 +693,13 @@ def safe_markup(raw_html: str) -> jinja2.Markup:\n \n def safe_text(raw_text: str) -> jinja2.Markup:\n     \"\"\"\n-    Process text: treat it as HTML but escape any tags (ie. just escape the\n-    HTML) then linkify it.\n+    Sanitise text (escape any HTML tags), and then linkify any bare URLs.\n+\n+    Args\n+        raw_text: Unsafe text which might include HTML markup.\n+\n+    Returns:\n+        A Markup object ready to safely use in a Jinja template.\n     \"\"\"\n     return jinja2.Markup(\n         bleach.linkify(bleach.clean(raw_text, tags=[], attributes={}, strip=False))"
        },
        {
          "filename": "synapse/res/templates/sso_auth_bad_user.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@\n     <body>\n         <div>\n             <p>\n-                We were unable to validate your <tt>{{server_name | e}}</tt> account via\n+                We were unable to validate your <tt>{{ server_name }}</tt> account via\n                 single-sign-on (SSO), because the SSO Identity Provider returned\n                 different details than when you logged in.\n             </p>"
        },
        {
          "filename": "synapse/res/templates/sso_auth_confirm.html",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -5,8 +5,8 @@\n     <body>\n         <div>\n             <p>\n-                A client is trying to {{ description | e }}. To confirm this action,\n-                <a href=\"{{ redirect_url | e }}\">re-authenticate with single sign-on</a>.\n+                A client is trying to {{ description }}. To confirm this action,\n+                <a href=\"{{ redirect_url }}\">re-authenticate with single sign-on</a>.\n                 If you did not expect this, your account may be compromised!\n             </p>\n         </div>"
        },
        {
          "filename": "synapse/res/templates/sso_error.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -12,7 +12,7 @@\n     <p>\n         There was an error during authentication:\n     </p>\n-    <div id=\"errormsg\" style=\"margin:20px 80px\">{{ error_description | e }}</div>\n+    <div id=\"errormsg\" style=\"margin:20px 80px\">{{ error_description }}</div>\n     <p>\n         If you are seeing this page after clicking a link sent to you via email, make\n         sure you only click the confirmation link once, and that you open the"
        },
        {
          "filename": "synapse/res/templates/sso_login_idp_picker.html",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -3,22 +3,22 @@\n     <head>\n         <meta charset=\"UTF-8\">\n         <link rel=\"stylesheet\" href=\"/_matrix/static/client/login/style.css\">\n-        <title>{{server_name | e}} Login</title>\n+        <title>{{ server_name }} Login</title>\n     </head>\n     <body>\n         <div id=\"container\">\n-            <h1 id=\"title\">{{server_name | e}} Login</h1>\n+            <h1 id=\"title\">{{ server_name }} Login</h1>\n             <div class=\"login_flow\">\n                 <p>Choose one of the following identity providers:</p>\n             <form>\n-                <input type=\"hidden\" name=\"redirectUrl\" value=\"{{redirect_url | e}}\">\n+                <input type=\"hidden\" name=\"redirectUrl\" value=\"{{ redirect_url }}\">\n                 <ul class=\"radiobuttons\">\n {% for p in providers %}\n                     <li>\n-                        <input type=\"radio\" name=\"idp\" id=\"prov{{loop.index}}\" value=\"{{p.idp_id}}\">\n-                        <label for=\"prov{{loop.index}}\">{{p.idp_name | e}}</label>\n+                        <input type=\"radio\" name=\"idp\" id=\"prov{{ loop.index }}\" value=\"{{ p.idp_id }}\">\n+                        <label for=\"prov{{ loop.index }}\">{{ p.idp_name }}</label>\n {% if p.idp_icon %}\n-                        <img src=\"{{p.idp_icon | mxc_to_http(32, 32)}}\"/>\n+                        <img src=\"{{ p.idp_icon | mxc_to_http(32, 32) }}\"/>\n {% endif %}\n                     </li>\n {% endfor %}"
        },
        {
          "filename": "synapse/res/templates/sso_redirect_confirm.html",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -5,10 +5,10 @@\n     <title>SSO redirect confirmation</title>\n </head>\n     <body>\n-        <p>The application at <span style=\"font-weight:bold\">{{ display_url | e }}</span> is requesting full access to your <span style=\"font-weight:bold\">{{ server_name }}</span> Matrix account.</p>\n+        <p>The application at <span style=\"font-weight:bold\">{{ display_url }}</span> is requesting full access to your <span style=\"font-weight:bold\">{{ server_name }}</span> Matrix account.</p>\n         <p>If you don't recognise this address, you should ignore this and close this tab.</p>\n         <p>\n-            <a href=\"{{ redirect_url | e }}\">I trust this address</a>\n+            <a href=\"{{ redirect_url }}\">I trust this address</a>\n         </p>\n     </body>\n-</html>\n\\ No newline at end of file\n+</html>"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 4,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be65a8ec0195955c15fdb179c9158b187638e39a",
            "date": "2023-12-13T14:50:56Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "66fc265578f4501307edcac2514892ecdf791fc9",
            "date": "2023-12-13T14:47:34Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "025951bc3b6ddc0a6487ac045cc00a35a9d7eaaa",
            "date": "2023-12-13T14:46:11Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "70c020b532821f898aaa07c35c5d5ab59055ae1c",
            "date": "2023-12-12T20:32:48Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "e1f8440c8959719a417fbf1bdda11406cfdf523d",
            "date": "2023-11-21T19:26:47Z",
            "author_login": "clokep"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N",
    "cwe_id": "CWE-74",
    "description": "Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.27.0, the notification emails sent for notifications for missed messages or for an expiring account are subject to HTML injection. In the case of the notification for missed messages, this could allow an attacker to insert forged content into the email. The account expiry feature is not enabled by default and the HTML injection is not controllable by an attacker. This is fixed in version 1.27.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-03-26T20:15:11.953",
    "last_modified": "2024-11-21T05:48:02.577",
    "fix_date": "2021-01-27T15:59:50Z"
  },
  "references": [
    {
      "url": "https://github.com/matrix-org/synapse/commit/e54746bdf7d5c831eabe4dcea76a7626f1de73df",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/pull/9200",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/releases/tag/v1.27.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/security/advisories/GHSA-c5f8-35qr-q4fm",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TNNAJOZNMVMXM6AS7RFFKB4QLUJ4IFEY/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/matrix-org/synapse/commit/e54746bdf7d5c831eabe4dcea76a7626f1de73df",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/pull/9200",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/releases/tag/v1.27.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/security/advisories/GHSA-c5f8-35qr-q4fm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TNNAJOZNMVMXM6AS7RFFKB4QLUJ4IFEY/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.499149",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "synapse",
    "owner": "matrix-org",
    "created_at": "2014-08-11T15:51:42Z",
    "updated_at": "2025-01-14T04:04:49Z",
    "pushed_at": "2024-04-26T15:47:23Z",
    "size": 429495,
    "stars": 11851,
    "forks": 2122,
    "open_issues": 1529,
    "watchers": 11851,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Python": 11907179,
      "Rust": 95720,
      "HTML": 64571,
      "Shell": 59187,
      "Perl": 28191,
      "Nix": 12267,
      "Dockerfile": 12096,
      "JavaScript": 11988,
      "Jinja": 7942,
      "CSS": 6211,
      "Makefile": 634,
      "Gherkin": 308,
      "Lua": 241
    },
    "commit_activity": {
      "total_commits_last_year": 1,
      "avg_commits_per_week": 0.019230769230769232,
      "days_active_last_year": 1
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:52:33.725944"
  }
}