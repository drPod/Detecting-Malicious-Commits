{
  "cve_id": "CVE-2021-21367",
  "github_data": {
    "repository": "elementary/switchboard-plug-bluetooth",
    "fix_commit": "86500e645a907538abafe5225b67cc12c03e7645",
    "related_commits": [
      "86500e645a907538abafe5225b67cc12c03e7645",
      "86500e645a907538abafe5225b67cc12c03e7645"
    ],
    "patch_url": "https://github.com/elementary/switchboard-plug-bluetooth/commit/86500e645a907538abafe5225b67cc12c03e7645.patch",
    "fix_commit_details": {
      "sha": "86500e645a907538abafe5225b67cc12c03e7645",
      "commit_date": "2021-03-09T17:24:07Z",
      "author": {
        "login": "davidmhewitt",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-5p3g-j69g-w2mq",
        "length": 187,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 122,
        "additions": 89,
        "deletions": 33
      },
      "files": [
        {
          "filename": "src/PairDialog.vala",
          "status": "modified",
          "additions": 5,
          "deletions": 18,
          "patch": "@@ -26,6 +26,7 @@ public class PairDialog : Granite.MessageDialog {\n     public ObjectPath object_path { get; construct; }\n     public AuthType auth_type { get; construct; }\n     public string passkey { get; construct; }\n+    public bool cancelled { get; set; }\n \n     // Un-used default constructor\n     private PairDialog () {\n@@ -93,13 +94,17 @@ public class PairDialog : Granite.MessageDialog {\n             case AuthType.REQUEST_CONFIRMATION:\n                 badge_icon = new ThemedIcon (\"dialog-password\");\n                 secondary_text = _(\"Make sure the code displayed on \u201c%s\u201d matches the one below.\").printf (device_name);\n+\n+                var confirm_button = add_button (_(\"Pair\"), Gtk.ResponseType.ACCEPT);\n+                confirm_button.get_style_context ().add_class (Gtk.STYLE_CLASS_SUGGESTED_ACTION);\n                 break;\n             case AuthType.DISPLAY_PASSKEY:\n                 badge_icon = new ThemedIcon (\"dialog-password\");\n                 secondary_text = _(\"\u201c%s\u201d would like to pair with this device. Make sure the code displayed on \u201c%s\u201d matches the one below.\").printf (device_name, device_name);\n \n                 var confirm_button = add_button (_(\"Pair\"), Gtk.ResponseType.ACCEPT);\n                 confirm_button.get_style_context ().add_class (Gtk.STYLE_CLASS_SUGGESTED_ACTION);\n+                break;\n             case AuthType.DISPLAY_PIN_CODE:\n                 badge_icon = new ThemedIcon (\"dialog-password\");\n                 secondary_text = _(\"Type the code displayed below on \u201c%s\u201d, followed by Enter.\").printf (device_name);\n@@ -122,23 +127,5 @@ public class PairDialog : Granite.MessageDialog {\n         }\n \n         modal = true;\n-\n-        response.connect ((response_id) => {\n-            switch (response_id) {\n-                case Gtk.ResponseType.ACCEPT:\n-                    device.pair.begin ();\n-                    break;\n-                case Gtk.ResponseType.CANCEL:\n-                    destroy ();\n-                    break;\n-            }\n-        });\n-\n-        ((DBusProxy)device).g_properties_changed.connect ((changed, invalid) => {\n-            var paired = changed.lookup_value (\"Paired\", new VariantType (\"b\"));\n-            if (paired != null && device.paired) {\n-                destroy ();\n-            }\n-        });\n     }\n }"
        },
        {
          "filename": "src/Services/Agent.vala",
          "status": "modified",
          "additions": 84,
          "deletions": 15,
          "patch": "@@ -28,6 +28,8 @@ public class Bluetooth.Services.Agent : Object {\n     private const string PATH = \"/org/bluez/agent/elementary\";\n     Gtk.Window? main_window;\n \n+    private PairDialog pair_dialog;\n+\n     [DBus (visible=false)]\n     public Agent (Gtk.Window? main_window) {\n         this.main_window = main_window;\n@@ -60,37 +62,104 @@ public class Bluetooth.Services.Agent : Object {\n         unregistered ();\n     }\n \n-    public string request_pin_code (ObjectPath device) throws Error, BluezError {\n-        return \"\";\n+    public async string request_pin_code (ObjectPath device) throws Error, BluezError {\n+        throw new BluezError.REJECTED (\"Pairing method not supported\");\n     }\n \n-    public void display_pin_code (ObjectPath device, string pincode) throws Error, BluezError {\n-        var pair_dialog = new PairDialog.display_pin_code (device, pincode, main_window);\n+    // Called to display a pin code on-screen that needs to be entered on the other device. Can return\n+    // instantly\n+    public async void display_pin_code (ObjectPath device, string pincode) throws Error, BluezError {\n+        pair_dialog = new PairDialog.display_pin_code (device, pincode, main_window);\n         pair_dialog.present ();\n     }\n \n-    public uint32 request_passkey (ObjectPath device) throws Error, BluezError {\n-        return 0;\n+    public async uint32 request_passkey (ObjectPath device) throws Error, BluezError {\n+        throw new BluezError.REJECTED (\"Pairing method not supported\");\n     }\n \n-    public void display_passkey (ObjectPath device, uint32 passkey, uint16 entered) throws Error {\n-        var pair_dialog = new PairDialog.display_passkey (device, passkey, entered, main_window);\n+    // Called to display a passkey on-screen that needs to be entered on the other device. Can return\n+    // instantly\n+    public async void display_passkey (ObjectPath device, uint32 passkey, uint16 entered) throws Error {\n+        pair_dialog = new PairDialog.display_passkey (device, passkey, entered, main_window);\n         pair_dialog.present ();\n     }\n \n-    public void request_confirmation (ObjectPath device, uint32 passkey) throws Error, BluezError {\n-        var pair_dialog = new PairDialog.request_confirmation (device, passkey, main_window);\n-        pair_dialog.present ();\n+    // Called to request confirmation from the user that they want to pair with the given device and that\n+    // the passkey matches. **MUST** throw BluezError if pairing is to be rejected. This is handled in\n+    // `check_pairing_response`. If the method returns without an error, pairing is authorized\n+    public async void request_confirmation (ObjectPath device, uint32 passkey) throws Error, BluezError {\n+        pair_dialog = new PairDialog.request_confirmation (device, passkey, main_window);\n+        yield check_pairing_response (pair_dialog);\n     }\n \n-    public void request_authorization (ObjectPath device) throws Error, BluezError {\n-        var pair_dialog = new PairDialog.request_authorization (device, main_window);\n-        pair_dialog.present ();\n+    // Called to request confirmation from the user that they want to pair with the given device\n+    // **MUST** throw BluezError if pairing is to be rejected. This is handled in `check_pairing_response`\n+    // If the method returns without an error, pairing is authorized\n+    public async void request_authorization (ObjectPath device) throws Error, BluezError {\n+        pair_dialog = new PairDialog.request_authorization (device, main_window);\n+        yield check_pairing_response (pair_dialog);\n     }\n \n-    public void authorize_service (ObjectPath device, string uuid) throws Error, BluezError {\n+    // Called to authorize the use of a specific service (Audio/HID/etc), so we restrict this to paired\n+    // devices only\n+    public void authorize_service (ObjectPath device_path, string uuid) throws Error, BluezError {\n+        var device = get_device_from_object_path (device_path);\n+\n+        bool paired = device.paired;\n+        bool trusted = device.trusted;\n+\n+        // Shouldn't really happen as trusted devices should be automatically authorized, but lets handle it anyway\n+        if (paired && trusted) {\n+            // allow\n+            return;\n+        }\n+\n+        // A device that has been paired, but not yet trusted, trust it and allow it to access\n+        // services\n+        if (paired && !trusted) {\n+            device.trusted = true;\n+            // allow\n+            return;\n+        }\n+\n+        // Reject everything else\n+        throw new BluezError.REJECTED (\"Rejecting service auth, not paired or trusted\");\n     }\n \n     public void cancel () throws Error {\n+        if (pair_dialog != null) {\n+            pair_dialog.cancelled = true;\n+            pair_dialog.destroy ();\n+        }\n+    }\n+\n+    private async void check_pairing_response (PairDialog dialog) throws BluezError {\n+        SourceFunc callback = check_pairing_response.callback;\n+        BluezError? error = null;\n+\n+        dialog.response.connect ((response) => {\n+            if (response != Gtk.ResponseType.ACCEPT || dialog.cancelled) {\n+                if (dialog.cancelled) {\n+                    error = new BluezError.CANCELED (\"Pairing cancelled\");\n+                } else {\n+                    error = new BluezError.REJECTED (\"Pairing rejected\");\n+                }\n+            }\n+\n+            Idle.add ((owned)callback);\n+            dialog.destroy ();\n+        });\n+\n+        dialog.present ();\n+\n+        yield;\n+\n+        if (error != null) {\n+            throw error;\n+        }\n+    }\n+\n+    private Device get_device_from_object_path (ObjectPath object_path) throws GLib.Error {\n+        return Bus.get_proxy_sync<Device> (BusType.SYSTEM, \"org.bluez\", object_path, DBusProxyFlags.GET_INVALIDATED_PROPERTIES);\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f19ddc73d52c315264468fe6b01165295e662488",
            "date": "2024-12-11T22:34:30Z",
            "author_login": "ryonakano"
          },
          {
            "sha": "ba03838c54ac75363e5bcd0cf846f4a25dabcd5e",
            "date": "2024-11-29T15:34:48Z",
            "author_login": "GuilhermeIsNotUnix"
          },
          {
            "sha": "547c5da51b7a985ba98f328761d4436ab9cabec1",
            "date": "2024-11-27T12:26:02Z",
            "author_login": "hugok79"
          },
          {
            "sha": "b706a97db167d62c264de4f9c6a2a5efc7f020cb",
            "date": "2024-10-23T15:48:29Z",
            "author_login": "danirabbit"
          },
          {
            "sha": "8a6bdfdd72e75071e1363544035319415da8d86b",
            "date": "2024-10-22T21:17:21Z",
            "author_login": "danirabbit"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:L",
    "cwe_id": "CWE-863",
    "description": "Switchboard Bluetooth Plug for elementary OS from version 2.3.0 and before version version 2.3.5 has an incorrect authorization vulnerability. When the Bluetooth plug is running (in discoverable mode), Bluetooth service requests and pairing requests are automatically accepted, allowing physically proximate attackers to pair with a device running an affected version of switchboard-plug-bluetooth without the active consent of the user. By default, elementary OS doesn't expose any services via Bluetooth that allow information to be extracted by paired Bluetooth devices. However, if such services (i.e. contact list sharing software) have been installed, it's possible that attackers have been able to extract data from such services without authorization. If no such services have been installed, attackers are only able to pair with a device running an affected version without authorization and then play audio out of the device or possibly present a HID device (keyboard, mouse, etc...) to control the device. As such, users should check the list of trusted/paired devices and remove any that are not 100% confirmed to be genuine. This is fixed in version 2.3.5. To reduce the likelihood of this vulnerability on an unpatched version, only open the Bluetooth plug for short intervals when absolutely necessary and preferably not in crowded public areas. To mitigate the risk entirely with unpatched versions, do not open the Bluetooth plug within switchboard at all, and use a different method for pairing devices if necessary (e.g. `bluetoothctl` CLI).",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-12T17:15:12.753",
    "last_modified": "2024-11-21T05:48:12.617",
    "fix_date": "2021-03-09T17:24:07Z"
  },
  "references": [
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/commit/86500e645a907538abafe5225b67cc12c03e7645",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/releases/tag/2.3.5",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/security/advisories/GHSA-5p3g-j69g-w2mq",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AV7WKO5SZHTF3QEMX4WZ576HRECIG6VQ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O7TCGM4B45VLUJDCE5PHFYA5KBNHD4RA/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SWUPPVFG76PXQA3AHSGKYPRMVZ5AYHZI/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/commit/86500e645a907538abafe5225b67cc12c03e7645",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/releases/tag/2.3.5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elementary/switchboard-plug-bluetooth/security/advisories/GHSA-5p3g-j69g-w2mq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AV7WKO5SZHTF3QEMX4WZ576HRECIG6VQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O7TCGM4B45VLUJDCE5PHFYA5KBNHD4RA/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SWUPPVFG76PXQA3AHSGKYPRMVZ5AYHZI/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.837675",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "switchboard-plug-bluetooth",
    "owner": "elementary",
    "created_at": "2017-04-10T02:13:16Z",
    "updated_at": "2024-12-12T05:37:05Z",
    "pushed_at": "2024-12-12T05:37:00Z",
    "size": 3342,
    "stars": 24,
    "forks": 11,
    "open_issues": 64,
    "watchers": 24,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "juno",
      "main"
    ],
    "languages": {
      "Vala": 51838,
      "Meson": 2156
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T17:18:07.651788"
  }
}