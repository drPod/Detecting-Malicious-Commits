{
  "cve_id": "CVE-2021-21385",
  "github_data": {
    "repository": "openMF/mifos-mobile",
    "fix_commit": "e505f62b92b19292bfdabd6e996ab76abfeaa90d",
    "related_commits": [
      "e505f62b92b19292bfdabd6e996ab76abfeaa90d",
      "e505f62b92b19292bfdabd6e996ab76abfeaa90d"
    ],
    "patch_url": "https://github.com/openMF/mifos-mobile/commit/e505f62b92b19292bfdabd6e996ab76abfeaa90d.patch",
    "fix_commit_details": {
      "sha": "e505f62b92b19292bfdabd6e996ab76abfeaa90d",
      "commit_date": "2021-03-14T17:02:19Z",
      "author": {
        "login": "vorburger",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-9657-33wf-rmvx",
        "length": 93,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 45,
        "additions": 0,
        "deletions": 45
      },
      "files": [
        {
          "filename": "app/src/main/java/org/mifos/mobile/api/SelfServiceOkHttpClient.kt",
          "status": "modified",
          "additions": 0,
          "deletions": 45,
          "patch": "@@ -20,51 +20,6 @@ class SelfServiceOkHttpClient(private val tenant: String?, private val authToken\n     val mifosOkHttpClient: OkHttpClient\n         get() {\n             val builder = OkHttpClient.Builder()\n-            try {\n-                // Create a trust manager that does not validate certificate chains\n-                val trustAllCerts = arrayOf<TrustManager>(\n-                        object : X509TrustManager {\n-                            @Throws(CertificateException::class)\n-                            override fun checkClientTrusted(\n-                                    chain: Array<X509Certificate>,\n-                                    authType: String\n-                            ) {\n-                            }\n-\n-                            @Throws(CertificateException::class)\n-                            override fun checkServerTrusted(\n-                                    chain: Array<X509Certificate>,\n-                                    authType: String\n-                            ) {\n-                            }\n-\n-                            override fun getAcceptedIssuers(): Array<X509Certificate?> {\n-                                return arrayOfNulls(0)\n-                            }\n-                        }\n-                )\n-\n-                // Install the all-trusting trust manager\n-                val sslContext = SSLContext.getInstance(\"SSL\")\n-                sslContext.init(null, trustAllCerts, SecureRandom())\n-                // Create an ssl socket factory with our all-trusting manager\n-                val sslSocketFactory = sslContext.socketFactory\n-\n-                //Enable Full Body Logging\n-                val logger = HttpLoggingInterceptor()\n-                logger.level = HttpLoggingInterceptor.Level.BODY\n-                val trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())\n-                trustManagerFactory.init(null as KeyStore?)\n-                val trustManagers = trustManagerFactory.trustManagers\n-                check(!(trustManagers.size != 1 || trustManagers[0] !is X509TrustManager)) { \"Unexpected default trust managers:\" + Arrays.toString(trustManagers) }\n-                val trustManager = trustManagers[0] as X509TrustManager\n-\n-                //Set SSL certificate to OkHttpClient Builder\n-                builder.sslSocketFactory(sslSocketFactory, trustManager)\n-                builder.hostnameVerifier { _, _ -> true }\n-            } catch (e: Exception) {\n-                throw RuntimeException(e)\n-            }\n \n             //Enable Full Body Logging\n             val logger = HttpLoggingInterceptor()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "31b92dee50a62f85a41248e017b5f47f54772a1f",
            "date": "2025-01-12T21:27:39Z",
            "author_login": "niyajali"
          },
          {
            "sha": "3f3c22bcf4056da899a15f6b342a63fdc45a795c",
            "date": "2025-01-12T21:10:09Z",
            "author_login": "niyajali"
          },
          {
            "sha": "a286500bc56985b5c0db8a0a825d29c33d13ee7f",
            "date": "2025-01-12T15:30:08Z",
            "author_login": "niyajali"
          },
          {
            "sha": "466b24514c3e7953f9c68581a9f975db23097f46",
            "date": "2025-01-11T19:58:54Z",
            "author_login": "niyajali"
          },
          {
            "sha": "d3d673ffda6f994c7aeb4495b70e3aab201ca7e6",
            "date": "2025-01-09T18:46:04Z",
            "author_login": "Nagarjuna0033"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-295",
    "description": "Mifos-Mobile Android Application for MifosX is an Android Application built on top of the MifosX Self-Service platform. Mifos-Mobile before commit e505f62 disables HTTPS hostname verification of its HTTP client. Additionally it accepted any self-signed certificate as valid. Hostname verification is an important part when using HTTPS to ensure that the presented certificate is valid for the host. Disabling it can allow for man-in-the-middle attacks. Accepting any certificate, even self-signed ones allows man-in-the-middle attacks. This problem is fixed in mifos-mobile commit e505f62.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-24T21:15:15.070",
    "last_modified": "2024-11-21T05:48:14.983",
    "fix_date": "2021-03-14T17:02:19Z"
  },
  "references": [
    {
      "url": "https://github.com/openMF/mifos-mobile/commit/e505f62b92b19292bfdabd6e996ab76abfeaa90d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openMF/mifos-mobile/security/advisories/GHSA-9657-33wf-rmvx",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://openmf.github.io/mobileapps.github.io/",
      "source": "security-advisories@github.com",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openMF/mifos-mobile/commit/e505f62b92b19292bfdabd6e996ab76abfeaa90d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openMF/mifos-mobile/security/advisories/GHSA-9657-33wf-rmvx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://openmf.github.io/mobileapps.github.io/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.861224",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mifos-mobile",
    "owner": "openMF",
    "created_at": "2016-05-24T21:51:53Z",
    "updated_at": "2025-01-12T21:27:43Z",
    "pushed_at": "2025-01-14T10:53:50Z",
    "size": 73219,
    "stars": 297,
    "forks": 708,
    "open_issues": 137,
    "watchers": 297,
    "has_security_policy": false,
    "default_branch": "development",
    "protected_branches": [
      "development",
      "kmp-impl",
      "master"
    ],
    "languages": {
      "Kotlin": 1544104,
      "Shell": 9816,
      "Batchfile": 735,
      "Swift": 466,
      "Ruby": 177
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mpl-2.0"
    },
    "collected_at": "2025-01-14T13:30:27.093765"
  }
}