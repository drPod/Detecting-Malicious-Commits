{
  "cve_id": "CVE-2021-21424",
  "github_data": {
    "repository": "symfony/symfony",
    "fix_commit": "2a581d22cc621b33d5464ed65c4bc2057f72f011",
    "related_commits": [
      "2a581d22cc621b33d5464ed65c4bc2057f72f011",
      "2a581d22cc621b33d5464ed65c4bc2057f72f011"
    ],
    "patch_url": "https://github.com/symfony/symfony/commit/2a581d22cc621b33d5464ed65c4bc2057f72f011.patch",
    "fix_commit_details": {
      "sha": "2a581d22cc621b33d5464ed65c4bc2057f72f011",
      "commit_date": "2021-05-12T12:32:10Z",
      "author": {
        "login": "nicolas-grekas",
        "type": "User",
        "stats": {
          "total_commits": 16251,
          "average_weekly_commits": 20.70191082802548,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 533
        }
      },
      "commit_message": {
        "title": "security #cve-2021-21424 [Security][Guard] Prevent user enumeration (chalasr)",
        "length": 118,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 78,
        "additions": 71,
        "deletions": 7
      },
      "files": [
        {
          "filename": "src/Symfony/Bundle/SecurityBundle/Resources/config/guard.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -17,7 +17,7 @@\n                 <argument type=\"service\" id=\"security.authentication.session_strategy\" />\n             </call>\n         </service>\n-        \n+\n         <service id=\"Symfony\\Component\\Security\\Guard\\GuardAuthenticatorHandler\" alias=\"security.authentication.guard_handler\" />\n \n         <!-- See GuardAuthenticationFactory -->\n@@ -41,6 +41,7 @@\n             <argument /> <!-- Provider-shared Key -->\n             <argument /> <!-- Authenticator -->\n             <argument type=\"service\" id=\"logger\" on-invalid=\"null\" />\n+            <argument>%security.authentication.hide_user_not_found%</argument>\n         </service>\n     </services>\n </container>"
        },
        {
          "filename": "src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -13,6 +13,7 @@\n \n use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n use Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n+use Symfony\\Component\\Security\\Core\\Exception\\AccountStatusException;\n use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\n use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationServiceException;\n use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;\n@@ -83,7 +84,7 @@ public function authenticate(TokenInterface $token)\n             $this->userChecker->checkPreAuth($user);\n             $this->checkAuthentication($user, $token);\n             $this->userChecker->checkPostAuth($user);\n-        } catch (BadCredentialsException $e) {\n+        } catch (AccountStatusException $e) {\n             if ($this->hideUserNotFoundExceptions) {\n                 throw new BadCredentialsException('Bad credentials.', 0, $e);\n             }"
        },
        {
          "filename": "src/Symfony/Component/Security/Core/Tests/Authentication/Provider/UserAuthenticationProviderTest.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -79,7 +79,7 @@ public function testAuthenticateWhenProviderDoesNotReturnAnUserInterface()\n \n     public function testAuthenticateWhenPreChecksFails()\n     {\n-        $this->expectException('Symfony\\Component\\Security\\Core\\Exception\\CredentialsExpiredException');\n+        $this->expectException(BadCredentialsException::class);\n         $userChecker = $this->getMockBuilder('Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface')->getMock();\n         $userChecker->expects($this->once())\n                     ->method('checkPreAuth')\n@@ -97,7 +97,7 @@ public function testAuthenticateWhenPreChecksFails()\n \n     public function testAuthenticateWhenPostChecksFails()\n     {\n-        $this->expectException('Symfony\\Component\\Security\\Core\\Exception\\AccountExpiredException');\n+        $this->expectException(BadCredentialsException::class);\n         $userChecker = $this->getMockBuilder('Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface')->getMock();\n         $userChecker->expects($this->once())\n                     ->method('checkPostAuth')\n@@ -116,15 +116,15 @@ public function testAuthenticateWhenPostChecksFails()\n     public function testAuthenticateWhenPostCheckAuthenticationFails()\n     {\n         $this->expectException('Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException');\n-        $this->expectExceptionMessage('Bad credentials');\n+        $this->expectExceptionMessage('Bad credentials.');\n         $provider = $this->getProvider();\n         $provider->expects($this->once())\n                  ->method('retrieveUser')\n                  ->willReturn($this->getMockBuilder('Symfony\\Component\\Security\\Core\\User\\UserInterface')->getMock())\n         ;\n         $provider->expects($this->once())\n                  ->method('checkAuthentication')\n-                 ->willThrowException(new BadCredentialsException())\n+                 ->willThrowException(new CredentialsExpiredException())\n         ;\n \n         $provider->authenticate($this->getSupportedToken());"
        },
        {
          "filename": "src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -17,7 +17,10 @@\n use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;\n use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface;\n use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n+use Symfony\\Component\\Security\\Core\\Exception\\AccountStatusException;\n use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\n+use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;\n+use Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException;\n use Symfony\\Component\\Security\\Guard\\AbstractGuardAuthenticator;\n use Symfony\\Component\\Security\\Guard\\AuthenticatorInterface;\n use Symfony\\Component\\Security\\Guard\\GuardAuthenticatorHandler;\n@@ -40,6 +43,7 @@ class GuardAuthenticationListener implements ListenerInterface\n     private $guardAuthenticators;\n     private $logger;\n     private $rememberMeServices;\n+    private $hideUserNotFoundExceptions;\n \n     /**\n      * @param GuardAuthenticatorHandler         $guardHandler          The Guard handler\n@@ -48,7 +52,7 @@ class GuardAuthenticationListener implements ListenerInterface\n      * @param iterable|AuthenticatorInterface[] $guardAuthenticators   The authenticators, with keys that match what's passed to GuardAuthenticationProvider\n      * @param LoggerInterface                   $logger                A LoggerInterface instance\n      */\n-    public function __construct(GuardAuthenticatorHandler $guardHandler, AuthenticationManagerInterface $authenticationManager, $providerKey, $guardAuthenticators, LoggerInterface $logger = null)\n+    public function __construct(GuardAuthenticatorHandler $guardHandler, AuthenticationManagerInterface $authenticationManager, $providerKey, $guardAuthenticators, LoggerInterface $logger = null, $hideUserNotFoundExceptions = true)\n     {\n         if (empty($providerKey)) {\n             throw new \\InvalidArgumentException('$providerKey must not be empty.');\n@@ -59,6 +63,7 @@ public function __construct(GuardAuthenticatorHandler $guardHandler, Authenticat\n         $this->providerKey = $providerKey;\n         $this->guardAuthenticators = $guardAuthenticators;\n         $this->logger = $logger;\n+        $this->hideUserNotFoundExceptions = $hideUserNotFoundExceptions;\n     }\n \n     /**\n@@ -163,6 +168,12 @@ private function executeGuardAuthenticator($uniqueGuardKey, GuardAuthenticatorIn\n                 $this->logger->info('Guard authentication failed.', ['exception' => $e, 'authenticator' => \\get_class($guardAuthenticator)]);\n             }\n \n+            // Avoid leaking error details in case of invalid user (e.g. user not found or invalid account status)\n+            // to prevent user enumeration via response content\n+            if ($this->hideUserNotFoundExceptions && ($e instanceof UsernameNotFoundException || $e instanceof AccountStatusException)) {\n+                $e = new BadCredentialsException('Bad credentials.', 0, $e);\n+            }\n+\n             $response = $this->guardHandler->handleAuthenticationFailure($e, $request, $guardAuthenticator, $this->providerKey);\n \n             if ($response instanceof Response) {"
        },
        {
          "filename": "src/Symfony/Component/Security/Guard/Tests/Firewall/GuardAuthenticationListenerTest.php",
          "status": "modified",
          "additions": 51,
          "deletions": 0,
          "patch": "@@ -16,6 +16,9 @@\n use Symfony\\Component\\HttpFoundation\\Response;\n use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\n+use Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException;\n+use Symfony\\Component\\Security\\Core\\Exception\\LockedException;\n+use Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException;\n use Symfony\\Component\\Security\\Guard\\AbstractGuardAuthenticator;\n use Symfony\\Component\\Security\\Guard\\AuthenticatorInterface;\n use Symfony\\Component\\Security\\Guard\\Firewall\\GuardAuthenticationListener;\n@@ -208,6 +211,54 @@ public function testHandleCatchesAuthenticationException()\n         $listener->handle($this->event);\n     }\n \n+    /**\n+     * @dataProvider exceptionsToHide\n+     */\n+    public function testHandleHidesInvalidUserExceptions(AuthenticationException $exceptionToHide)\n+    {\n+        $authenticator = $this->createMock(AuthenticatorInterface::class);\n+        $providerKey = 'my_firewall2';\n+\n+        $authenticator\n+            ->expects($this->once())\n+            ->method('supports')\n+            ->willReturn(true);\n+        $authenticator\n+            ->expects($this->once())\n+            ->method('getCredentials')\n+            ->willReturn(['username' => 'robin', 'password' => 'hood']);\n+\n+        $this->authenticationManager\n+            ->expects($this->once())\n+            ->method('authenticate')\n+            ->willThrowException($exceptionToHide);\n+\n+        $this->guardAuthenticatorHandler\n+            ->expects($this->once())\n+            ->method('handleAuthenticationFailure')\n+            ->with($this->callback(function ($e) use ($exceptionToHide) {\n+                return $e instanceof BadCredentialsException && $exceptionToHide === $e->getPrevious();\n+            }), $this->request, $authenticator, $providerKey);\n+\n+        $listener = new GuardAuthenticationListener(\n+            $this->guardAuthenticatorHandler,\n+            $this->authenticationManager,\n+            $providerKey,\n+            [$authenticator],\n+            $this->logger\n+        );\n+\n+        $listener->handle($this->event);\n+    }\n+\n+    public function exceptionsToHide()\n+    {\n+        return [\n+            [new UsernameNotFoundException()],\n+            [new LockedException()],\n+        ];\n+    }\n+\n     /**\n      * @group legacy\n      */"
        }
      ],
      "file_patterns": {
        "security_files": 5,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f6312d3f3313afc62c5b1e920b2cbfe62fcf3f8e",
            "date": "2025-01-13T09:20:08Z",
            "author_login": "nicolas-grekas"
          },
          {
            "sha": "7b338721ca42ba1d5544658b39359916715170f4",
            "date": "2025-01-12T22:16:37Z",
            "author_login": "derrabus"
          },
          {
            "sha": "1a76f128845de80fe6644c7de12e0dcdad8197f1",
            "date": "2025-01-12T20:19:12Z",
            "author_login": "derrabus"
          },
          {
            "sha": "0d0758e87be2e990d7744e4e66b59e6609a2b3c9",
            "date": "2025-01-12T17:25:07Z",
            "author_login": "fabpot"
          },
          {
            "sha": "946278f9f8cd1bc40c075d37b1d6c2a289c8eb4c",
            "date": "2025-01-12T12:57:08Z",
            "author_login": "alamirault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The ability to enumerate users was possible without relevant permissions due to different handling depending on whether the user existed or not when attempting to use the switch users functionality. We now ensure that 403s are returned whether the user exists or not if a user cannot switch to a user or if the user does not exist. The patch for this issue is available for branch 3.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-13T16:15:07.777",
    "last_modified": "2024-11-21T05:48:20.027",
    "fix_date": "2021-05-12T12:32:10Z"
  },
  "references": [
    {
      "url": "https://github.com/symfony/symfony/commit/2a581d22cc621b33d5464ed65c4bc2057f72f011",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-5pv8-ppvj-4h68",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/07/msg00014.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KENRNLB3FYXYGDWRBH2PDBOZZKOD7VY4/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RH7TMM5CHQYBFFGXWRPJDPB3SKCZXI2M/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UC7BND775DVZDQT3RMGD2HVB2PKLJDJW/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VRUS2H2SSOQWNLBD35SKIWIDQEMV2PD3/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/symfony/symfony/commit/2a581d22cc621b33d5464ed65c4bc2057f72f011",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-5pv8-ppvj-4h68",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/07/msg00014.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KENRNLB3FYXYGDWRBH2PDBOZZKOD7VY4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RH7TMM5CHQYBFFGXWRPJDPB3SKCZXI2M/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UC7BND775DVZDQT3RMGD2HVB2PKLJDJW/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VRUS2H2SSOQWNLBD35SKIWIDQEMV2PD3/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.079735",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symfony",
    "owner": "symfony",
    "created_at": "2010-01-04T14:21:21Z",
    "updated_at": "2025-01-14T09:56:31Z",
    "pushed_at": "2025-01-13T13:22:56Z",
    "size": 290479,
    "stars": 29917,
    "forks": 9510,
    "open_issues": 879,
    "watchers": 29917,
    "has_security_policy": false,
    "default_branch": "7.3",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "5.4",
      "6.0",
      "6.1",
      "6.2",
      "6.3",
      "6.4",
      "7.0"
    ],
    "languages": {
      "PHP": 30007525,
      "Twig": 527335,
      "CSS": 56186,
      "JavaScript": 28225,
      "HTML": 16804,
      "Shell": 9654,
      "Makefile": 1612,
      "Hack": 26
    },
    "commit_activity": {
      "total_commits_last_year": 4163,
      "avg_commits_per_week": 80.0576923076923,
      "days_active_last_year": 343
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:44:47.171985"
  }
}