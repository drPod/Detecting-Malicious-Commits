{
  "cve_id": "CVE-2021-22540",
  "github_data": {
    "repository": "dart-lang/sdk",
    "fix_commit": "ce5a1c2392debce967415d4c09359ff2555e3588",
    "related_commits": [
      "ce5a1c2392debce967415d4c09359ff2555e3588",
      "ce5a1c2392debce967415d4c09359ff2555e3588"
    ],
    "patch_url": "https://github.com/dart-lang/sdk/commit/ce5a1c2392debce967415d4c09359ff2555e3588.patch",
    "fix_commit_details": {
      "sha": "ce5a1c2392debce967415d4c09359ff2555e3588",
      "commit_date": "2021-04-13T23:29:08Z",
      "author": {
        "login": "srujzs",
        "type": "User",
        "stats": {
          "total_commits": 478,
          "average_weekly_commits": 0.6887608069164265,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 162
        }
      },
      "commit_message": {
        "title": "[dart:html] Fix sanitization for HTML templates",
        "length": 325,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 60,
        "additions": 44,
        "deletions": 16
      },
      "files": [
        {
          "filename": "sdk/lib/html/dart2js/html_dart2js.dart",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -40994,8 +40994,8 @@ class _ThrowsNodeValidator implements NodeValidator {\n class _ValidatingTreeSanitizer implements NodeTreeSanitizer {\n   NodeValidator validator;\n \n-  /// Did we modify the tree by removing anything.\n-  bool modifiedTree = false;\n+  /// Number of tree modifications this instance has made.\n+  int numTreeModifications = 0;\n   _ValidatingTreeSanitizer(this.validator) {}\n \n   void sanitizeTree(Node node) {\n@@ -41026,20 +41026,20 @@ class _ValidatingTreeSanitizer implements NodeTreeSanitizer {\n       }\n     }\n \n-    modifiedTree = false;\n-    walk(node, null);\n-    while (modifiedTree) {\n-      modifiedTree = false;\n+    // Walk the tree until no new modifications are added to the tree.\n+    var previousTreeModifications;\n+    do {\n+      previousTreeModifications = numTreeModifications;\n       walk(node, null);\n-    }\n+    } while (previousTreeModifications != numTreeModifications);\n   }\n \n   /// Aggressively try to remove node.\n   void _removeNode(Node node, Node? parent) {\n     // If we have the parent, it's presumably already passed more sanitization\n     // or is the fragment, so ask it to remove the child. And if that fails\n     // try to set the outer html.\n-    modifiedTree = true;\n+    numTreeModifications++;\n     if (parent == null || parent != node.parentNode) {\n       node.remove();\n     } else {"
        },
        {
          "filename": "tests/lib/html/node_validator_important_if_you_suppress_make_the_bug_critical_test.dart",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -453,6 +453,20 @@ main() {\n             \"<input id='bad' onmouseover='alert(1)'>\",\n         \"\");\n \n+    // Walking templates triggers a recursive sanitization call, which shouldn't\n+    // invalidate the information collected from the previous visit of the later\n+    // nodes in the walk.\n+    testHtml(\n+        'DOM clobbering with recursive sanitize call using templates',\n+        validator,\n+        \"<form><div>\"\n+            \"<input id=childNodes />\"\n+            \"<template></template>\"\n+            \"<input id=childNodes name=lastChild />\"\n+            \"<img id=exploitImg src=0 onerror='alert(1)' />\"\n+            \"</div></form>\",\n+        \"\");\n+\n     test('tagName makes containing form invalid', () {\n       var fragment = document.body!.createFragment(\n           \"<form onmouseover='alert(2)'><input name='tagName'>\","
        },
        {
          "filename": "tests/lib_2/html/node_validator_important_if_you_suppress_make_the_bug_critical_test.dart",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -478,6 +478,20 @@ main() {\n         \"<input id='bad' onmouseover='alert(1)'>\",\n         \"\");\n \n+    // Walking templates triggers a recursive sanitization call, which shouldn't\n+    // invalidate the information collected from the previous visit of the later\n+    // nodes in the walk.\n+    testHtml(\n+        'DOM clobbering with recursive sanitize call using templates',\n+        validator,\n+        \"<form><div>\"\n+          \"<input id=childNodes />\"\n+          \"<template></template>\"\n+          \"<input id=childNodes name=lastChild />\"\n+          \"<img id=exploitImg src=0 onerror='alert(1)' />\"\n+          \"</div></form>\",\n+        \"\");\n+\n     test('tagName makes containing form invalid', () {\n       var fragment = document.body.createFragment(\n           \"<form onmouseover='alert(2)'><input name='tagName'>\","
        },
        {
          "filename": "tools/dom/src/Validators.dart",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -158,8 +158,8 @@ class _ThrowsNodeValidator implements NodeValidator {\n class _ValidatingTreeSanitizer implements NodeTreeSanitizer {\n   NodeValidator validator;\n \n-  /// Did we modify the tree by removing anything.\n-  bool modifiedTree = false;\n+  /// Number of tree modifications this instance has made.\n+  int numTreeModifications = 0;\n   _ValidatingTreeSanitizer(this.validator) {}\n \n   void sanitizeTree(Node node) {\n@@ -190,20 +190,20 @@ class _ValidatingTreeSanitizer implements NodeTreeSanitizer {\n       }\n     }\n \n-    modifiedTree = false;\n-    walk(node, null);\n-    while (modifiedTree) {\n-      modifiedTree = false;\n+    // Walk the tree until no new modifications are added to the tree.\n+    var previousTreeModifications;\n+    do {\n+      previousTreeModifications = numTreeModifications;\n       walk(node, null);\n-    }\n+    } while (previousTreeModifications != numTreeModifications);\n   }\n \n   /// Aggressively try to remove node.\n   void _removeNode(Node node, Node? parent) {\n     // If we have the parent, it's presumably already passed more sanitization\n     // or is the fragment, so ask it to remove the child. And if that fails\n     // try to set the outer html.\n-    modifiedTree = true;\n+    numTreeModifications++;\n     if (parent == null || parent != node.parentNode) {\n       node.remove();\n     } else {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b5232ac632e26ffc4b4ca3d20afd51d337dbb39b",
            "date": "2025-01-14T19:06:10Z",
            "author_login": "Markzipan"
          },
          {
            "sha": "330cc916c6b5ecc76d52dc3daf1aea97184a363b",
            "date": "2025-01-14T18:31:26Z",
            "author_login": "stereotype441"
          },
          {
            "sha": "eafaa1173823e238eff5c9508a2e326da604ab7b",
            "date": "2025-01-14T18:27:18Z",
            "author_login": "scheglov"
          },
          {
            "sha": "6aeb1bffc1b3f1bd126d3904a2da7b1bdf42d004",
            "date": "2025-01-14T18:03:08Z",
            "author_login": "stereotype441"
          },
          {
            "sha": "52cc62938cb93ef747c57d66f19db06260145402",
            "date": "2025-01-14T17:54:23Z",
            "author_login": "rmacnak-google"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Bad validation logic in the Dart SDK versions prior to 2.12.3 allow an attacker to use an XSS attack via DOM clobbering. The validation logic in dart:html for creating DOM nodes from text did not sanitize properly when it came across template tags.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-22T15:15:07.930",
    "last_modified": "2024-11-21T05:50:18.160",
    "fix_date": "2021-04-13T23:29:08Z"
  },
  "references": [
    {
      "url": "https://github.com/dart-lang/sdk/commit/ce5a1c2392debce967415d4c09359ff2555e3588",
      "source": "cve-coordination@google.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dart-lang/sdk/security/advisories/GHSA-3rfv-4jvg-9522",
      "source": "cve-coordination@google.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/dart-lang/sdk/commit/ce5a1c2392debce967415d4c09359ff2555e3588",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dart-lang/sdk/security/advisories/GHSA-3rfv-4jvg-9522",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.549827",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sdk",
    "owner": "dart-lang",
    "created_at": "2015-05-16T14:14:58Z",
    "updated_at": "2025-01-14T14:41:25Z",
    "pushed_at": "2025-01-14T14:41:19Z",
    "size": 1476140,
    "stars": 10381,
    "forks": 1603,
    "open_issues": 8145,
    "watchers": 10381,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "beta",
      "dev",
      "main",
      "master",
      "stable"
    ],
    "languages": {
      "Dart": 145669978,
      "C++": 23871549,
      "C": 1579300,
      "Python": 1290938,
      "HTML": 702875,
      "Java": 589555,
      "JavaScript": 277923,
      "Shell": 107149,
      "GAP": 97087,
      "CSS": 76022,
      "ANTLR": 48460,
      "TeX": 37865,
      "SCSS": 22311,
      "Makefile": 10867,
      "Assembly": 8350,
      "Batchfile": 4772,
      "CMake": 1598,
      "Objective-C++": 854,
      "Dockerfile": 499
    },
    "commit_activity": {
      "total_commits_last_year": 5883,
      "avg_commits_per_week": 113.13461538461539,
      "days_active_last_year": 304
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T14:47:50.604306"
  }
}