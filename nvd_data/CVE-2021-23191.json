{
  "cve_id": "CVE-2021-23191",
  "github_data": {
    "repository": "michaelrsweet/htmldoc",
    "fix_commit": "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
    "related_commits": [
      "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
      "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc"
    ],
    "patch_url": "https://github.com/michaelrsweet/htmldoc/commit/369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc.patch",
    "fix_commit_details": {
      "sha": "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
      "commit_date": "2021-04-01T13:37:58Z",
      "author": {
        "login": "michaelrsweet",
        "type": "User",
        "stats": {
          "total_commits": 1052,
          "average_weekly_commits": 0.7763837638376384,
          "total_additions": 876906,
          "total_deletions": 718831,
          "weeks_active": 267
        }
      },
      "commit_message": {
        "title": "Fix JPEG error handling (Issue #415)",
        "length": 36,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 53,
        "additions": 45,
        "deletions": 8
      },
      "files": [
        {
          "filename": "CHANGES.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n # Changes in HTMLDOC v1.9.12\n \n - Fixed a crash bug with \"data:\" URIs and EPUB output (Issue #410)\n+- Fixed JPEG error handling (Issue #415)\n - Fixed crash bugs with bogus table attributes (Issue #416, Issue #417)\n - Fixed a crash bug with malformed URIs (Issue #418)\n - Fixed a crash bug with malformed GIF files (Issue #423)"
        },
        {
          "filename": "htmldoc/file.c",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -1010,8 +1010,15 @@ file_rlookup(const char *filename)\t/* I - Filename */\n \n \n   for (i = web_files, wc = web_cache; i > 0; i --, wc ++)\n+  {\n     if (!strcmp(wc->name, filename))\n-      return (wc->url);\n+    {\n+      if (!strncmp(wc->url, \"data:\", 5))\n+        return (\"data URL\");\n+      else\n+        return (wc->url);\n+    }\n+  }\n \n   return (filename);\n }"
        },
        {
          "filename": "htmldoc/image.cxx",
          "status": "modified",
          "additions": 31,
          "deletions": 7,
          "patch": "@@ -1336,6 +1336,15 @@ image_load_gif(image_t *img,\t/* I - Image pointer */\n }\n \n \n+typedef struct hd_jpeg_err_s\t// JPEG error manager extension\n+{\n+  struct jpeg_error_mgr\tjerr;\t// JPEG error manager information\n+  jmp_buf\tretbuf;\t\t// setjmp() return buffer\n+  char\t\tmessage[JMSG_LENGTH_MAX];\n+\t\t\t\t// Last error message\n+} hd_jpeg_err_t;\n+\n+\n /*\n  * 'image_load_jpeg()' - Load a JPEG image file.\n  */\n@@ -1347,14 +1356,21 @@ image_load_jpeg(image_t *img,\t/* I - Image pointer */\n                 int     load_data)/* I - 1 = load image data, 0 = just info */\n {\n   struct jpeg_decompress_struct\tcinfo;\t\t/* Decompressor info */\n-  struct jpeg_error_mgr\t\tjerr;\t\t/* Error handler info */\n-  JSAMPROW\t\t\trow;\t\t/* Sample row pointer */\n+  hd_jpeg_err_t\t\t\tjerr;\t\t// JPEG error handler\n+JSAMPROW\t\t\trow;\t\t/* Sample row pointer */\n \n \n-  jpeg_std_error(&jerr);\n-  jerr.error_exit = jpeg_error_handler;\n+  jpeg_std_error(&jerr.jerr);\n+  jerr.jerr.error_exit = jpeg_error_handler;\n \n-  cinfo.err = &jerr;\n+  if (setjmp(jerr.retbuf))\n+  {\n+    progress_error(HD_ERROR_BAD_FORMAT, \"%s (%s)\", jerr.message,  file_rlookup(img->filename));\n+    jpeg_destroy_decompress(&cinfo);\n+    return (-1);\n+  }\n+\n+  cinfo.err = (struct jpeg_error_mgr *)&jerr;\n   jpeg_create_decompress(&cinfo);\n   jpeg_stdio_src(&cinfo, fp);\n   jpeg_read_header(&cinfo, (boolean)1);\n@@ -1797,9 +1813,17 @@ image_unload(image_t *img)\t// I - Image\n  */\n \n static void\n-jpeg_error_handler(j_common_ptr)\n+jpeg_error_handler(j_common_ptr p)\t// Common JPEG data\n {\n-  return;\n+  hd_jpeg_err_t\t*jerr = (hd_jpeg_err_t *)p->err;\n+\t\t\t\t\t// JPEG error handler\n+\n+\n+  // Save the error message in the string buffer...\n+  (jerr->jerr.format_message)(p, jerr->message);\n+\n+  // Return to the point we called setjmp()...\n+  longjmp(jerr->retbuf, 1);\n }\n \n "
        },
        {
          "filename": "htmldoc/ps-pdf.cxx",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1404,6 +1404,8 @@ pspdf_prepare_page(int page)\t\t/* I - Page number */\n \n \n   DEBUG_printf((\"pspdf_prepare_page(%d)\\n\", page));\n+  if (page < 0 || page >= num_pages)\n+    return;\n \n  /*\n   * Make a page number; use roman numerals for the table of contents\n@@ -12285,6 +12287,9 @@ write_trailer(FILE  *out,\t\t/* I - Output file */\n \n       for (j = 1; j <= TocDocCount; j ++)\n       {\n+        if (chapter_starts[j] < 0)\n+          continue;\n+\n         page  = pages + chapter_starts[j];\n \tstart = chapter_starts[j] - chapter_starts[1] + 1;\n \ttype  = 'D';"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7a849610e867810c6db9ec35a47b97b959e1b508",
            "date": "2024-12-09T16:25:48Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "093754872517e00ff17c1efc298450b7eebd9a6f",
            "date": "2024-12-05T19:14:05Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "b4ded8ad8e49d9d5ade57062068810ab04784eea",
            "date": "2024-12-05T19:06:09Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "f6fb9e4b4621d30d351f4847d1b6fe7b24b75441",
            "date": "2024-11-29T15:37:20Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "d06f5861a4084e113360a1decd9300416d000e8f",
            "date": "2024-11-27T23:27:01Z",
            "author_login": "michaelrsweet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-476",
    "description": "A security issue was found in htmldoc v1.9.12 and before. A NULL pointer dereference in the function image_load_jpeg() in image.cxx may result in denial of service.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-02T23:15:08.347",
    "last_modified": "2024-11-21T05:51:20.920",
    "fix_date": "2021-04-01T13:37:58Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1967022",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/htmldoc/commit/369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/htmldoc/issues/415",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://ubuntu.com/security/CVE-2021-23191",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1967022",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/htmldoc/commit/369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/htmldoc/issues/415",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://ubuntu.com/security/CVE-2021-23191",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.768752",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "htmldoc",
    "owner": "michaelrsweet",
    "created_at": "2017-02-25T01:25:32Z",
    "updated_at": "2025-01-07T23:39:07Z",
    "pushed_at": "2024-12-09T16:26:37Z",
    "size": 24847,
    "stars": 214,
    "forks": 46,
    "open_issues": 14,
    "watchers": 214,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C++": 824910,
      "C": 199319,
      "HTML": 48239,
      "M4": 11310,
      "Makefile": 8658,
      "PostScript": 7914,
      "Shell": 7446,
      "Java": 2899,
      "PHP": 1544,
      "Batchfile": 699,
      "Python": 431,
      "Perl": 367
    },
    "commit_activity": {
      "total_commits_last_year": 31,
      "avg_commits_per_week": 0.5961538461538461,
      "days_active_last_year": 11
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:04:25.166538"
  }
}