{
  "cve_id": "CVE-2021-23342",
  "github_data": {
    "repository": "docsifyjs/docsify",
    "fix_commit": "ff2a66f12752471277fe81a64ad6c4b2c08111fe",
    "related_commits": [
      "ff2a66f12752471277fe81a64ad6c4b2c08111fe",
      "ff2a66f12752471277fe81a64ad6c4b2c08111fe"
    ],
    "patch_url": "https://github.com/docsifyjs/docsify/commit/ff2a66f12752471277fe81a64ad6c4b2c08111fe.patch",
    "fix_commit_details": {
      "sha": "ff2a66f12752471277fe81a64ad6c4b2c08111fe",
      "commit_date": "2021-02-18T12:06:44Z",
      "author": {
        "login": "jhildenbiddle",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: isExternal check with malformed URL + tests (#1510)",
        "length": 99,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 34,
        "additions": 33,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/core/fetch/index.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -22,7 +22,7 @@ function loadNested(path, qs, file, next, vm, first) {\n \n function isExternal(url) {\n   let match = url.match(\n-    /^([^:/?#]+:)?(?:\\/\\/([^/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/\n+    /^([^:/?#]+:)?(?:\\/{2,}([^/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/\n   );\n   if (\n     typeof match[1] === 'string' &&"
        },
        {
          "filename": "test/e2e/security.test.js",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -0,0 +1,32 @@\n+const docsifyInit = require('../helpers/docsify-init');\n+\n+describe(`Security`, function() {\n+  const sharedOptions = {\n+    markdown: {\n+      homepage: '# Hello World',\n+    },\n+    routes: {\n+      'test.md': '# Test Page',\n+    },\n+  };\n+\n+  describe(`Cross Site Scripting (XSS)`, function() {\n+    const slashStrings = ['//', '///'];\n+\n+    for (const slashString of slashStrings) {\n+      const hash = `#${slashString}domain.com/file.md`;\n+\n+      test(`should not load remote content from hash (${hash})`, async () => {\n+        await docsifyInit(sharedOptions);\n+        await expect(page).toHaveText('#main', 'Hello World');\n+        await page.evaluate(() => (location.hash = '#/test'));\n+        await expect(page).toHaveText('#main', 'Test Page');\n+        await page.evaluate(newHash => {\n+          location.hash = newHash;\n+        }, hash);\n+        await expect(page).toHaveText('#main', 'Hello World');\n+        expect(page.url()).toMatch(/#\\/$/);\n+      });\n+    }\n+  });\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "561c777df898a71f8b44b25e5946b56eb1d2c106",
            "date": "2025-01-08T02:15:05Z",
            "author_login": "sy-records"
          },
          {
            "sha": "a73e07eac06a70f63896e2bb7f0c205534dc21c8",
            "date": "2025-01-06T03:43:40Z",
            "author_login": "sy-records"
          },
          {
            "sha": "58268632c8ebc2855c38305a05b8326727e388c1",
            "date": "2025-01-05T07:23:17Z",
            "author_login": "sy-records"
          },
          {
            "sha": "c18df4c46bcec76dbc16507e8135b929af8fb7f8",
            "date": "2025-01-02T02:21:09Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "32fff4a99a46599e7d7289b18a63b51bc47404c2",
            "date": "2024-12-16T06:06:11Z",
            "author_login": "ezeamaka2"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "This affects the package docsify before 4.12.0. It is possible to bypass the remediation done by CVE-2020-7680 and execute malicious JavaScript through the following methods 1) When parsing HTML from remote URLs, the HTML code on the main page is sanitized, but this sanitization is not taking place in the sidebar. 2) The isURL external check can be bypassed by inserting more \u201c////\u201d characters",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-02-19T17:15:13.717",
    "last_modified": "2024-11-21T05:51:32.403",
    "fix_date": "2021-02-18T12:06:44Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/161495/docsify-4.11.6-Cross-Site-Scripting.html",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2021/Feb/71",
      "source": "report@snyk.io",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/docsifyjs/docsify/commit/ff2a66f12752471277fe81a64ad6c4b2c08111fe",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1076593",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-DOCSIFY-1066017",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/161495/docsify-4.11.6-Cross-Site-Scripting.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2021/Feb/71",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/docsifyjs/docsify/commit/ff2a66f12752471277fe81a64ad6c4b2c08111fe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1076593",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-DOCSIFY-1066017",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.797542",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "docsify",
    "owner": "docsifyjs",
    "created_at": "2016-11-20T07:55:43Z",
    "updated_at": "2025-01-14T12:43:13Z",
    "pushed_at": "2025-01-14T06:18:21Z",
    "size": 30219,
    "stars": 28528,
    "forks": 5704,
    "open_issues": 183,
    "watchers": 28528,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "main",
      "master"
    ],
    "languages": {
      "JavaScript": 361604,
      "CSS": 52665,
      "Shell": 883,
      "Dockerfile": 188
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:56:35.882952"
  }
}