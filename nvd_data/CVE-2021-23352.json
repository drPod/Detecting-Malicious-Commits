{
  "cve_id": "CVE-2021-23352",
  "github_data": {
    "repository": "pahen/madge",
    "fix_commit": "da5cbc9ab30372d687fa7c324b22af7ffa5c6332",
    "related_commits": [
      "da5cbc9ab30372d687fa7c324b22af7ffa5c6332",
      "da5cbc9ab30372d687fa7c324b22af7ffa5c6332"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "da5cbc9ab30372d687fa7c324b22af7ffa5c6332",
      "commit_date": "2021-03-05T14:42:51Z",
      "author": {
        "login": "pahen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix potential command injection vulnerability",
        "length": 45,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 9,
        "deletions": 14
      },
      "files": [
        {
          "filename": "lib/graph.js",
          "status": "modified",
          "additions": 8,
          "deletions": 13,
          "patch": "@@ -4,7 +4,7 @@ const path = require('path');\n const {promisify} = require('util');\n const graphviz = require('graphviz');\n \n-const exec = promisify(require('child_process').exec);\n+const exec = promisify(require('child_process').execFile);\n const writeFile = promisify(require('fs').writeFile);\n \n /**\n@@ -22,19 +22,14 @@ function setNodeColor(node, color) {\n  * @param  {Object} config\n  * @return {Promise}\n  */\n-function checkGraphvizInstalled(config) {\n-\tif (config.graphVizPath) {\n-\t\tconst cmd = path.join(config.graphVizPath, 'gvpr -V');\n-\t\treturn exec(cmd)\n-\t\t\t.catch(() => {\n-\t\t\t\tthrow new Error('Could not execute ' + cmd);\n-\t\t\t});\n-\t}\n+async function checkGraphvizInstalled(config) {\n+\tconst cmd = config.graphVizPath ? path.join(config.graphVizPath, 'gvpr') : 'gvpr';\n \n-\treturn exec('gvpr -V')\n-\t\t.catch((error) => {\n-\t\t\tthrow new Error('Graphviz could not be found. Ensure that \"gvpr\" is in your $PATH.\\n' + error);\n-\t\t});\n+\ttry {\n+\t\tawait exec(cmd, ['-V']);\n+\t} catch (err) {\n+\t\tthrow new Error(`Graphviz could not be found. Ensure that \"gvpr\" is in your $PATH. ${err}`);\n+\t}\n }\n \n /**"
        },
        {
          "filename": "test/api.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -313,7 +313,7 @@ describe('API', () => {\n \t\t\tmadge(__dirname + '/cjs/a.js', {graphVizPath: '/invalid/path'})\n \t\t\t\t.then((res) => res.image('image.png'))\n \t\t\t\t.catch((err) => {\n-\t\t\t\t\terr.message.should.match(/Could not execute .*gvpr \\-V/);\n+\t\t\t\t\terr.message.should.eql('Graphviz could not be found. Ensure that \"gvpr\" is in your $PATH. Error: spawn /invalid/path/gvpr ENOENT');\n \t\t\t\t\tdone();\n \t\t\t\t});\n \t\t});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "456057b85c2d063dad9c10147d7686ded4fc5ce5",
            "date": "2024-08-05T07:49:37Z",
            "author_login": "pahen"
          },
          {
            "sha": "6e0acb27b68b305b93b85d3fe82c4b11efa0a118",
            "date": "2024-06-13T10:35:42Z",
            "author_login": "PabloLION"
          },
          {
            "sha": "238958cab5b6dfe50f5d420e2a9cdb77dd91aa77",
            "date": "2024-06-13T08:43:38Z",
            "author_login": "vikingair"
          },
          {
            "sha": "09f4e5158eede7a62d60da38b0676b023159dc65",
            "date": "2024-05-30T12:49:23Z",
            "author_login": "vikingair"
          },
          {
            "sha": "e1a45ba2951a32822545db2813a25fce51178115",
            "date": "2024-05-30T12:35:57Z",
            "author_login": "vikingair"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L",
    "cwe_id": "CWE-89",
    "description": "This affects the package madge before 4.0.1. It is possible to specify a custom Graphviz path via the graphVizPath option parameter which when the .image(), .svg() or .dot() functions are called, is executed by the childprocess.exec function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-09T19:15:12.860",
    "last_modified": "2024-11-21T05:51:33.480",
    "fix_date": "2021-03-05T14:42:51Z"
  },
  "references": [
    {
      "url": "https://github.com/pahen/madge/blob/master/lib/graph.js%23L27",
      "source": "report@snyk.io",
      "tags": [
        "Broken Link",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pahen/madge/commit/da5cbc9ab30372d687fa7c324b22af7ffa5c6332",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-MADGE-1082875",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pahen/madge/blob/master/lib/graph.js%23L27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pahen/madge/commit/da5cbc9ab30372d687fa7c324b22af7ffa5c6332",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-MADGE-1082875",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.829174",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "madge",
    "owner": "pahen",
    "created_at": "2012-05-20T11:01:26Z",
    "updated_at": "2025-01-25T20:05:13Z",
    "pushed_at": "2024-09-12T01:11:30Z",
    "size": 1432,
    "stars": 9216,
    "forks": 327,
    "open_issues": 110,
    "watchers": 9216,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "JavaScript": 49689,
      "Shell": 1201,
      "TypeScript": 1143,
      "Vue": 842
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:42:50.819725"
  }
}