{
  "cve_id": "CVE-2021-23433",
  "github_data": {
    "repository": "algolia/algoliasearch-helper-js",
    "fix_commit": "4ff542b70b92a6b81cce8b9255700b0bc0817edd",
    "related_commits": [
      "4ff542b70b92a6b81cce8b9255700b0bc0817edd",
      "4ff542b70b92a6b81cce8b9255700b0bc0817edd"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "4ff542b70b92a6b81cce8b9255700b0bc0817edd",
      "commit_date": "2021-10-19T14:00:44Z",
      "author": {
        "login": "Haroenv",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(SearchParameters): ignore invalid parameters (#880)",
        "length": 211,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 34,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/functions/merge.js",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -21,7 +21,10 @@ function _merge(target, source) {\n   }\n \n   for (var key in source) {\n-    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n+    if (\n+      !Object.prototype.hasOwnProperty.call(source, key) ||\n+      key === '__proto__'\n+    ) {\n       continue;\n     }\n \n@@ -32,7 +35,10 @@ function _merge(target, source) {\n       continue;\n     }\n \n-    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n+    if (\n+      isObjectOrArrayOrFunction(targetVal) &&\n+      isObjectOrArrayOrFunction(sourceVal)\n+    ) {\n       target[key] = _merge(targetVal, sourceVal);\n     } else {\n       target[key] = clone(sourceVal);"
        },
        {
          "filename": "test/spec/functions/defaultsPure.js",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -92,3 +92,16 @@ it('should keep the keys order when adding facet refinements', function() {\n   );\n   expect(Object.keys(actual)).toEqual(['facet1', 'facet2']);\n });\n+\n+it('does not pollute the prototype', () => {\n+  var payload = JSON.parse('{\"__proto__\": {\"polluted\": \"vulnerable to PP\"}}');\n+  var subject = {};\n+\n+  expect(subject.polluted).toBe(undefined);\n+\n+  const out = defaults({}, payload);\n+\n+  expect(out).toEqual({});\n+\n+  expect({}.polluted).toBe(undefined);\n+});"
        },
        {
          "filename": "test/spec/functions/intersection.js",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -18,4 +18,3 @@ test('it should not produce duplicate primitive values', function() {\n     '2'\n   ]);\n });\n-"
        },
        {
          "filename": "test/spec/functions/merge.js",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -170,3 +170,16 @@ it('should not convert strings to arrays when merging arrays of `source`', funct\n \n   expect(actual).toStrictEqual({a: ['x', 'y', 'z']});\n });\n+\n+it('does not pollute the prototype', () => {\n+  var payload = JSON.parse('{\"__proto__\": {\"polluted\": \"vulnerable to PP\"}}');\n+  var subject = {};\n+\n+  expect(subject.polluted).toBe(undefined);\n+\n+  const out = merge({}, payload);\n+\n+  expect(out).toEqual({});\n+\n+  expect({}.polluted).toBe(undefined);\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4b2f93c777fa7b7c0d7e294d057f62e6ab66b1bb",
            "date": "2023-07-11T15:24:35Z",
            "author_login": "dhayab"
          },
          {
            "sha": "881b1c0a6714a1422af1ea52068474e857dac70b",
            "date": "2023-06-21T08:47:15Z",
            "author_login": "Haroenv"
          },
          {
            "sha": "deb5dafbe7ffb2c53d7c227ae236592ec9a9e02d",
            "date": "2023-06-19T15:54:13Z",
            "author_login": "aymeric-giraudet"
          },
          {
            "sha": "d92f194463479cb40287964b72922bbb1bf91e3a",
            "date": "2023-06-19T08:49:04Z",
            "author_login": "Haroenv"
          },
          {
            "sha": "cc83731fc794a45d05b915e7419c59f25eb812c5",
            "date": "2023-06-16T15:02:08Z",
            "author_login": "Haroenv"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-1321",
    "description": "The package algoliasearch-helper before 3.6.2 are vulnerable to Prototype Pollution due to use of the merge function in src/SearchParameters/index.jsSearchParameters._parseNumbers without any protection against prototype properties. Note that this vulnerability is only exploitable if the implementation allows users to define arbitrary search patterns.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-11-19T20:15:17.903",
    "last_modified": "2024-11-21T05:51:45.037",
    "fix_date": "2021-10-19T14:00:44Z"
  },
  "references": [
    {
      "url": "https://github.com/algolia/algoliasearch-helper-js/blob/3.5.5/src/SearchParameters/index.js%23L291",
      "source": "report@snyk.io",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/algolia/algoliasearch-helper-js/commit/4ff542b70b92a6b81cce8b9255700b0bc0817edd",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-ALGOLIASEARCHHELPER-1570421",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/algolia/algoliasearch-helper-js/blob/3.5.5/src/SearchParameters/index.js%23L291",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/algolia/algoliasearch-helper-js/commit/4ff542b70b92a6b81cce8b9255700b0bc0817edd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-ALGOLIASEARCHHELPER-1570421",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.799639",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "algoliasearch-helper-js",
    "owner": "algolia",
    "created_at": "2015-03-20T08:57:27Z",
    "updated_at": "2024-12-27T15:23:00Z",
    "pushed_at": "2023-07-11T15:45:10Z",
    "size": 8611,
    "stars": 173,
    "forks": 46,
    "open_issues": 0,
    "watchers": 173,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 532027,
      "SCSS": 38548,
      "Pug": 11875,
      "Handlebars": 3916,
      "HTML": 2036,
      "Shell": 1604,
      "TypeScript": 376
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:50:21.936962"
  }
}