{
  "cve_id": "CVE-2021-23490",
  "github_data": {
    "repository": "thlorenz/parse-link-header",
    "fix_commit": "72f05c717b3f129c5331a07bf300ed8886eb8ae1",
    "related_commits": [
      "72f05c717b3f129c5331a07bf300ed8886eb8ae1",
      "72f05c717b3f129c5331a07bf300ed8886eb8ae1"
    ],
    "patch_url": "https://github.com/thlorenz/parse-link-header/commit/72f05c717b3f129c5331a07bf300ed8886eb8ae1.patch",
    "fix_commit_details": {
      "sha": "72f05c717b3f129c5331a07bf300ed8886eb8ae1",
      "commit_date": "2021-12-16T15:32:52Z",
      "author": {
        "login": "assaf-benjosef",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Limit linkHeader length, throw error if exceeds (#25)",
        "length": 139,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 43,
        "deletions": 1
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -46,6 +46,14 @@ console.log(parsed);\n Parses the given link header containing [web links](http://tools.ietf.org/html/rfc5988) and returns an object keyed by\n the `rel` property that contains information about each link.\n \n+### Environmental Variables\n+\n+To avoid redundantly parsing of extremely long (invalid) input, the package uses 2 env variabes:\n+\n+`PARSE_LINK_HEADER_MAXLEN` - Sets the number of characters the input should be limited to - longer inputs will not be handled. Defaults to `2000`.\n+\n+`PARSE_LINK_HEADER_THROW_ON_MAXLEN_EXCEEDED` - Defines behavior for when the `PARSE_LINK_HEADER_MAXLEN` parameter is exceeded. if defined, an error will be thrown; if it's `null`, the function fails silently by returning `null`. Defaults to `null`.\n+\n ### Formatting a link header\n \n The purpose of this module is to parse the link header information. To format an object generated by this module back to the link header string, use the [format-link-header](https://github.com/jonathansamines/format-link-header) module."
        },
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 17,
          "deletions": 1,
          "patch": "@@ -4,6 +4,9 @@ var qs = require('querystring')\n   , url = require('url')\n   , xtend = require('xtend');\n \n+const PARSE_LINK_HEADER_MAXLEN = parseInt(process.env.PARSE_LINK_HEADER_MAXLEN) || 2000;\n+const PARSE_LINK_HEADER_THROW_ON_MAXLEN_EXCEEDED = process.env.PARSE_LINK_HEADER_THROW_ON_MAXLEN_EXCEEDED != null\n+\n function hasRel(x) {\n   return x && x.rel;\n }\n@@ -46,8 +49,21 @@ function parseLink(link) {\n   }\n }\n \n+function checkHeader(linkHeader){\n+  if (!linkHeader) return false;\n+\n+  if (linkHeader.length > PARSE_LINK_HEADER_MAXLEN) {\n+    if (PARSE_LINK_HEADER_THROW_ON_MAXLEN_EXCEEDED) {\n+      throw new Error('Input string too long, it should be under ' + PARSE_LINK_HEADER_MAXLEN + ' characters.');\n+    } else {\n+        return false;\n+      }\n+  }\n+  return true;\n+}\n+\n module.exports = function (linkHeader) {\n-  if (!linkHeader) return null;\n+  if (!checkHeader(linkHeader)) return null;\n \n   return linkHeader.split(/,\\s*</)\n    .map(parseLink)"
        },
        {
          "filename": "test/parse-link-header.js",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -186,3 +186,21 @@ test('parsing a proper link header with matrix parameters', function (t) {\n   )\n   t.end()\n })\n+\n+test('parsing an extremely long link header', function (t) {\n+  function payload (n) {\n+    var ret = \"\"\n+    for (var i = 0; i < n; i++) {\n+      ret += \" \"\n+    }\n+    return ret\n+    }\n+  var linkHeader = '; rel=\"' + payload(10000) + '\",'\n+\n+  t.equal(\n+      parse(linkHeader)\n+    , null\n+    , 'correctly returns null when dealing with an extremely long link header'\n+  )\n+  t.end()\n+})"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f380d3f99de4a5411b2d7f8da6069bb7529cbf4a",
            "date": "2022-05-26T18:54:23Z",
            "author_login": "HonkingGoose"
          },
          {
            "sha": "a7d59b6b44819a261c936b2374b792aa10ce3f2e",
            "date": "2021-12-16T15:34:45Z",
            "author_login": "thlorenz"
          },
          {
            "sha": "72f05c717b3f129c5331a07bf300ed8886eb8ae1",
            "date": "2021-12-16T15:32:52Z",
            "author_login": "assaf-benjosef"
          },
          {
            "sha": "8521bd7a1256c1c3875e13d88be9dbfa7640663e",
            "date": "2020-12-04T15:01:03Z",
            "author_login": "arku"
          },
          {
            "sha": "38d795b69bf995a158f14a508b1d401a494be282",
            "date": "2017-06-05T20:27:08Z",
            "author_login": "thlorenz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-1333",
    "description": "The package parse-link-header before 2.0.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the checkHeader function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-24T20:15:08.013",
    "last_modified": "2024-11-21T05:51:48.113",
    "fix_date": "2021-12-16T15:32:52Z"
  },
  "references": [
    {
      "url": "https://github.com/thlorenz/parse-link-header/commit/72f05c717b3f129c5331a07bf300ed8886eb8ae1",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2321973",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-PARSELINKHEADER-1582783",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thlorenz/parse-link-header/commit/72f05c717b3f129c5331a07bf300ed8886eb8ae1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2321973",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-PARSELINKHEADER-1582783",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.025892",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-link-header",
    "owner": "thlorenz",
    "created_at": "2013-06-07T11:01:54Z",
    "updated_at": "2024-11-30T00:48:28Z",
    "pushed_at": "2023-02-09T19:41:22Z",
    "size": 20,
    "stars": 301,
    "forks": 27,
    "open_issues": 7,
    "watchers": 301,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 8162
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:43:46.443755"
  }
}