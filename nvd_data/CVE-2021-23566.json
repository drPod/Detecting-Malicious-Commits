{
  "cve_id": "CVE-2021-23566",
  "github_data": {
    "repository": "ai/nanoid",
    "fix_commit": "2b7bd9332bc49b6330c7ddb08e5c661833db2575",
    "related_commits": [
      "2b7bd9332bc49b6330c7ddb08e5c661833db2575",
      "2b7bd9332bc49b6330c7ddb08e5c661833db2575"
    ],
    "patch_url": "https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575.patch",
    "fix_commit_details": {
      "sha": "2b7bd9332bc49b6330c7ddb08e5c661833db2575",
      "commit_date": "2022-01-11T13:36:07Z",
      "author": {
        "login": "artalar",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix collision by proxy number (#328)",
        "length": 36,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 42,
        "additions": 40,
        "deletions": 2
      },
      "files": [
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -23,7 +23,8 @@ let fillPool = bytes => {\n }\n \n let random = bytes => {\n-  fillPool(bytes)\n+  // `-=` convert `bytes` to number to prevent `valueOf` abusing\n+  fillPool((bytes -= 0))\n   return pool.subarray(poolOffset - bytes, poolOffset)\n }\n \n@@ -65,7 +66,8 @@ let customRandom = (alphabet, size, getRandom) => {\n let customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n \n let nanoid = (size = 21) => {\n-  fillPool(size)\n+  // `-=` convert `size` to number to prevent `valueOf` abusing\n+  fillPool((size -= 0))\n   let id = ''\n   // We are reading directly from the random pool to avoid creating new array\n   for (let i = poolOffset - size; i < poolOffset; i++) {"
        },
        {
          "filename": "test/index.test.js",
          "status": "modified",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -151,5 +151,41 @@ for (let type of ['node', 'browser']) {\n         }\n       })\n     })\n+\n+    if (type === 'node') {\n+      describe('proxy number', () => {\n+        it('prevent collision', () => {\n+          let makeProxyNumberToReproducePreviousID = () => {\n+            let step = 0\n+            return {\n+              valueOf() {\n+                // \"if (!pool || pool.length < bytes) {\"\n+                if (step === 0) {\n+                  step++\n+                  return 0\n+                }\n+                // \"} else if (poolOffset + bytes > pool.length) {\"\n+                if (step === 1) {\n+                  step++\n+                  return -Infinity\n+                }\n+                // \"poolOffset += bytes\"\n+                if (step === 2) {\n+                  step++\n+                  return 0\n+                }\n+\n+                return 21\n+              }\n+            }\n+          }\n+\n+          let ID1 = nanoid()\n+          let ID2 = nanoid(makeProxyNumberToReproducePreviousID())\n+\n+          expect(ID1).not.toBe(ID2)\n+        })\n+      })\n+    }\n   })\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "80e803c498b53539350040415445af4c2b066126",
            "date": "2025-01-14T08:29:15Z",
            "author_login": "minizilla"
          },
          {
            "sha": "90bb934e4eff954087d5f5493dcce87d1a577bf3",
            "date": "2025-01-08T20:21:41Z",
            "author_login": "ai"
          },
          {
            "sha": "9dcbd555cdd078c10b24ea05de466cc5bf81c1de",
            "date": "2025-01-08T20:06:19Z",
            "author_login": "ai"
          },
          {
            "sha": "56812196ee0c7c9f4e7941bdc56c07ed0aaf9461",
            "date": "2025-01-08T19:59:23Z",
            "author_login": "YitzchakMeltz"
          },
          {
            "sha": "078b605f7e861187a3714c5d9b26f6e252638205",
            "date": "2024-12-09T11:32:02Z",
            "author_login": "lukateras"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.0,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-704",
    "description": "The package nanoid from 3.0.0 and before 3.1.31 are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-14T20:15:10.093",
    "last_modified": "2024-11-21T05:51:50.010",
    "fix_date": "2022-01-11T13:36:07Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/artalar/bc6d1eb9a3477d15d2772e876169a444",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ai/nanoid/pull/328",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2332550",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-NANOID-2332193",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gist.github.com/artalar/bc6d1eb9a3477d15d2772e876169a444",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ai/nanoid/pull/328",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2332550",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-NANOID-2332193",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.029388",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nanoid",
    "owner": "ai",
    "created_at": "2017-08-05T05:24:35Z",
    "updated_at": "2025-01-14T15:17:34Z",
    "pushed_at": "2025-01-14T08:29:15Z",
    "size": 5090,
    "stars": 24959,
    "forks": 807,
    "open_issues": 9,
    "watchers": 24959,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 24087,
      "HTML": 920
    },
    "commit_activity": {
      "total_commits_last_year": 72,
      "avg_commits_per_week": 1.3846153846153846,
      "days_active_last_year": 26
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:25:02.924875"
  }
}