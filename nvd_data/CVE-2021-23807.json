{
  "cve_id": "CVE-2021-23807",
  "github_data": {
    "repository": "janl/node-jsonpointer",
    "fix_commit": "a0345f3550cd9c4d89f33b126390202b89510ad4",
    "related_commits": [
      "a0345f3550cd9c4d89f33b126390202b89510ad4",
      "a0345f3550cd9c4d89f33b126390202b89510ad4"
    ],
    "patch_url": "https://github.com/janl/node-jsonpointer/commit/a0345f3550cd9c4d89f33b126390202b89510ad4.patch",
    "fix_commit_details": {
      "sha": "a0345f3550cd9c4d89f33b126390202b89510ad4",
      "commit_date": "2021-10-31T17:11:00Z",
      "author": {
        "login": "janl",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #51 from dellalibera/fix-prototype-pollution",
        "length": 88,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 34,
        "additions": 31,
        "deletions": 3
      },
      "files": [
        {
          "filename": "jsonpointer.js",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -17,10 +17,9 @@ function setter (obj, pointer, value) {\n   var part\n   var hasNextPart\n \n-  if (pointer[1] === 'constructor' && pointer[2] === 'prototype') return obj\n-  if (pointer[1] === '__proto__') return obj\n-\n   for (var p = 1, len = pointer.length; p < len;) {\n+    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n+\n     part = untilde(pointer[p++])\n     hasNextPart = len > p\n \n@@ -53,6 +52,11 @@ function compilePointer (pointer) {\n     if (pointer[0] === '') return pointer\n     throw new Error('Invalid JSON pointer.')\n   } else if (Array.isArray(pointer)) {\n+    for (const part of pointer) {\n+      if (typeof part !== 'string' && typeof part !== 'number') {\n+        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n+      }\n+    }\n     return pointer\n   }\n "
        },
        {
          "filename": "test.js",
          "status": "modified",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -136,4 +136,28 @@ var c = {}\n jsonpointer.set({}, '/__proto__/boo', 'polluted')\n assert(!c.boo, 'should not boo')\n \n+var d = {}\n+jsonpointer.set({}, '/foo/__proto__/boo', 'polluted')\n+assert(!d.boo, 'should not boo')\n+\n+jsonpointer.set({}, '/foo/__proto__/__proto__/boo', 'polluted')\n+assert(!d.boo, 'should not boo')\n+\n+var e = {}\n+jsonpointer.set({}, '/foo/constructor/prototype/boo', 'polluted')\n+assert(!e.boo, 'should not boo')\n+\n+jsonpointer.set({}, '/foo/constructor/constructor/prototype/boo', 'polluted')\n+assert(!e.boo, 'should not boo')\n+\n+assert.throws(function () { jsonpointer.set({}, [['__proto__'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [[['__proto__']], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['__proto__'], ['__proto__'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [[['__proto__']], [['__proto__']], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['__proto__'], ['__proto__'], ['__proto__'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['foo'], ['__proto__'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['foo'], ['__proto__'], ['__proto__'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['constructor'], ['prototype'], 'boo'], 'polluted')}, validateError)\n+assert.throws(function () { jsonpointer.set({}, [['constructor'], ['constructor'], ['prototype'], 'boo'], 'polluted')}, validateError)\n+\n console.log('All tests pass.')"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4a253c0d8f0d4d7f4c01f566bf8bf16f775dcdca",
            "date": "2022-01-21T23:50:13Z",
            "author_login": "marcbachmann"
          },
          {
            "sha": "bad49837fe07c0cecf67fc06cb1e255af55ce2b8",
            "date": "2020-07-15T15:49:11Z",
            "author_login": "reckter"
          },
          {
            "sha": "a5706e821c9b1d9d821c79ab00140c25c7cafe08",
            "date": "2022-01-21T23:33:39Z",
            "author_login": "marcbachmann"
          },
          {
            "sha": "b8e1e6af389e4708eab17d6ac3dd0a2d230328bb",
            "date": "2021-11-09T10:55:32Z",
            "author_login": "haakemon"
          },
          {
            "sha": "c4de620803e9080bc291ba42528aa8759683ba73",
            "date": "2021-11-01T07:28:06Z",
            "author_login": "janl"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-843",
    "description": "This affects the package jsonpointer before 5.0.0. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-11-03T18:15:08.230",
    "last_modified": "2024-11-21T05:51:53.750",
    "fix_date": "2021-10-31T17:11:00Z"
  },
  "references": [
    {
      "url": "https://github.com/janl/node-jsonpointer/commit/a0345f3550cd9c4d89f33b126390202b89510ad4",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/janl/node-jsonpointer/pull/51",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1910273",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Mitigation",
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577288",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Mitigation",
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/janl/node-jsonpointer/commit/a0345f3550cd9c4d89f33b126390202b89510ad4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/janl/node-jsonpointer/pull/51",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1910273",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mitigation",
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577288",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mitigation",
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.867375",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "node-jsonpointer",
    "owner": "janl",
    "created_at": "2011-07-13T22:20:18Z",
    "updated_at": "2024-08-21T03:31:33Z",
    "pushed_at": "2022-12-08T06:36:05Z",
    "size": 578,
    "stars": 196,
    "forks": 28,
    "open_issues": 5,
    "watchers": 196,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 9877
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:17:59.327576"
  }
}