{
  "cve_id": "CVE-2021-25935",
  "github_data": {
    "repository": "OpenNMS/opennms",
    "fix_commit": "101e3aa06ec9a1f8f266335fc6f5685c062c6117",
    "related_commits": [
      "101e3aa06ec9a1f8f266335fc6f5685c062c6117",
      "eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c",
      "101e3aa06ec9a1f8f266335fc6f5685c062c6117",
      "eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c"
    ],
    "patch_url": "https://github.com/OpenNMS/opennms/commit/101e3aa06ec9a1f8f266335fc6f5685c062c6117.patch",
    "fix_commit_details": {
      "sha": "101e3aa06ec9a1f8f266335fc6f5685c062c6117",
      "commit_date": "2021-03-05T07:25:54Z",
      "author": {
        "login": "christianpape",
        "type": "User",
        "stats": {
          "total_commits": 1242,
          "average_weekly_commits": 1.1640112464854733,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 367
        }
      },
      "commit_message": {
        "title": "NMS-13126: Escape foreignSource and nodeLabel string in requisition UI",
        "length": 70,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 57,
        "additions": 31,
        "deletions": 26
      },
      "files": [
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/controllers/ForeignSource.js",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -454,7 +454,7 @@ require('../services/Requisitions');\n       RequisitionsService.startTiming();\n       RequisitionsService.saveForeignSourceDefinition($scope.foreignSourceDef).then(\n         function() { // success\n-          growl.success('The definition for the requisition ' + $scope.foreignSource + ' has been saved.');\n+          growl.success('The definition for the requisition ' + _.escape($scope.foreignSource) + ' has been saved.');\n           form.$dirty = false;\n         },\n         $scope.errorHandler\n@@ -474,7 +474,7 @@ require('../services/Requisitions');\n           RequisitionsService.startTiming();\n           RequisitionsService.deleteForeignSourceDefinition($scope.foreignSource).then(\n             function() { // success\n-              growl.success('The foreign source definition for ' + $scope.foreignSource + 'has been reseted.');\n+              growl.success('The foreign source definition for ' + _.escape($scope.foreignSource) + 'has been reseted.');\n               $scope.initialize();\n             },\n             $scope.errorHandler\n@@ -517,7 +517,7 @@ require('../services/Requisitions');\n     * @methodOf ForeignSourceController\n     */\n     $scope.initialize = function() {\n-      growl.success('Retrieving definition for requisition ' + $scope.foreignSource + '...');\n+      growl.success('Retrieving definition for requisition ' + _.escape($scope.foreignSource) + '...');\n       RequisitionsService.getForeignSourceDefinition($scope.foreignSource).then(\n         function(foreignSourceDef) { // success\n           $scope.foreignSourceDef = foreignSourceDef;"
        },
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/controllers/Node.js",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -326,7 +326,7 @@ const RequisitionMetaDataEntry = require('../model/RequisitionMetaDataEntry');\n               $scope.goBack();\n               // If node was just created, it has no label yet\n               if (node.nodeLabel) {\n-                growl.success('The node ' + node.nodeLabel + ' has been deleted.');\n+                growl.success('The node ' + _.escape(node.nodeLabel) + ' has been deleted.');\n               } else {\n                 growl.success('The node has been deleted.');\n               }\n@@ -497,7 +497,7 @@ const RequisitionMetaDataEntry = require('../model/RequisitionMetaDataEntry');\n       RequisitionsService.startTiming();\n       RequisitionsService.saveNode($scope.node).then(\n         function() { // success\n-          growl.success('The node ' + $scope.node.nodeLabel + ' has been saved.');\n+          growl.success('The node ' + _.escape($scope.node.nodeLabel) + ' has been saved.');\n           $scope.foreignId = $scope.node.foreignId;\n           form.$dirty = false;\n         },\n@@ -513,7 +513,7 @@ const RequisitionMetaDataEntry = require('../model/RequisitionMetaDataEntry');\n     * @methodOf NodeController\n     */\n     $scope.refresh = function() {\n-      growl.success('Retrieving node ' + $scope.foreignId + ' from requisition ' + $scope.foreignSource + '...');\n+      growl.success('Retrieving node ' + _.escape($scope.foreignId) + ' from requisition ' + _.escape($scope.foreignSource) + '...');\n       RequisitionsService.getNode($scope.foreignSource, $scope.foreignId).then(\n         function(node) { // success\n           $scope.node = node;"
        },
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/controllers/QuickAddNode.js",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -111,8 +111,8 @@ const QuickNode = require('../model/QuickNode');\n     */\n     $scope.provision = function() {\n       $scope.isSaving = true;\n-      growl.info($sanitize('The node ' + $scope.node.nodeLabel + ' is being added to requisition ' + $scope.node.foreignSource + '. Please wait...'));\n-      var successMessage = $sanitize('The node ' + $scope.node.nodeLabel + ' has been added to requisition ' + $scope.node.foreignSource);\n+      growl.info('The node ' + _.escape($scope.node.nodeLabel) + ' is being added to requisition ' + _.escape($scope.node.foreignSource) + '. Please wait...');\n+      var successMessage = 'The node ' + _.escape($scope.node.nodeLabel) + ' has been added to requisition ' + _.escape($scope.node.foreignSource);\n       RequisitionsService.quickAddNode($scope.node).then(\n         function() { // success\n           $scope.reset();\n@@ -238,7 +238,7 @@ const QuickNode = require('../model/QuickNode');\n             function() { // success\n               RequisitionsService.synchronizeRequisition(foreignSource, false).then(\n                 function() {\n-                  growl.success('The requisition ' + foreignSource + ' has been created and synchronized.');\n+                  growl.success('The requisition ' + _.escape(foreignSource) + ' has been created and synchronized.');\n                   $scope.foreignSources.push(foreignSource);\n                 },\n                 $scope.errorHandler"
        },
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/controllers/Requisition.js",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -200,7 +200,7 @@ require('../services/Synchronize');\n     * @param {object} The node's object to delete\n     */\n     $scope.deleteNode = function(node) {\n-      bootbox.confirm('Are you sure you want to remove the node ' + node.nodeLabel + '?', function(ok) {\n+      bootbox.confirm('Are you sure you want to remove the node ' + _.escape(node.nodeLabel) + '?', function(ok) {\n         if (ok) {\n           RequisitionsService.startTiming();\n           RequisitionsService.deleteNode(node).then(\n@@ -214,7 +214,7 @@ require('../services/Synchronize');\n               if (index > -1) {\n                 $scope.filteredNodes.splice(index,1);\n               }\n-              growl.success('The node ' + node.nodeLabel + ' has been deleted.');\n+              growl.success('The node ' + _.escape(node.nodeLabel) + ' has been deleted.');\n             },\n             $scope.errorHandler\n           );\n@@ -295,7 +295,7 @@ require('../services/Synchronize');\n       if (value) {\n         $scope.pageSize = value;\n       }\n-      growl.success('Retrieving requisition ' + $scope.foreignSource + '...');\n+      growl.success('Retrieving requisition ' + _.escape($scope.foreignSource) + '...');\n       RequisitionsService.getRequisition($scope.foreignSource).then(\n         function(requisition) { // success\n           $scope.requisition = requisition;"
        },
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/controllers/Requisitions.js",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -172,14 +172,14 @@ require('../services/Synchronize');\n         }\n       });\n       modalInstance.result.then(function(targetForeignSource) {\n-        bootbox.confirm('This action will override the existing foreign source definition for the requisition named ' + targetForeignSource + ', using ' + foreignSource + ' as a template. Are you sure you want to continue ? This cannot be undone.', function(ok) {\n+        bootbox.confirm('This action will override the existing foreign source definition for the requisition named ' + _.escape(targetForeignSource) + ', using ' + _.escape(foreignSource) + ' as a template. Are you sure you want to continue ? This cannot be undone.', function(ok) {\n           if (!ok) {\n             return;\n           }\n           RequisitionsService.startTiming();\n           RequisitionsService.cloneForeignSourceDefinition(foreignSource, targetForeignSource).then(\n             function() { // success\n-              growl.success('The foreign source definition for ' + foreignSource + ' has been cloned to ' + targetForeignSource);\n+              growl.success('The foreign source definition for ' + _.escape(foreignSource) + ' has been cloned to ' + _.escape(targetForeignSource));\n             },\n             $scope.errorHandler\n           );\n@@ -201,18 +201,18 @@ require('../services/Synchronize');\n         if (foreignSource) {\n           // Validate Requisition\n           if (foreignSource.match(/[/\\\\?:&*'\"]/)) {\n-            bootbox.alert('Cannot add the requisition ' + foreignSource + ' because the following characters are invalid:<br/>:, /, \\\\, ?, &, *, \\', \"');\n+            bootbox.alert('Cannot add the requisition ' + _.escape(foreignSource) + ' because the following characters are invalid:<br/>:, /, \\\\, ?, &, *, \\', \"');\n             return;\n           }\n           var r = $scope.requisitionsData.getRequisition(foreignSource);\n           if (r) {\n-            bootbox.alert('Cannot add the requisition ' + foreignSource+ ' because there is already a requisition with that name');\n+            bootbox.alert('Cannot add the requisition ' + _.escape(foreignSource) + ' because there is already a requisition with that name');\n             return;\n           }\n           // Create Requisition\n           RequisitionsService.addRequisition(foreignSource).then(\n             function(r) { // success\n-              growl.success('The requisition ' + r.foreignSource + ' has been created.');\n+              growl.success('The requisition ' + _.escape(r.foreignSource) + ' has been created.');\n             },\n             $scope.errorHandler\n           );\n@@ -271,7 +271,7 @@ require('../services/Synchronize');\n       RequisitionsService.startTiming();\n       RequisitionsService.updateDeployedStatsForRequisition(requisition).then(\n         function() { // success\n-          growl.success('The deployed statistics for ' + requisition.foreignSource + ' has been updated.');\n+          growl.success('The deployed statistics for ' + _.escape(requisition.foreignSource) + ' has been updated.');\n         },\n         $scope.errorHandler\n       );\n@@ -286,12 +286,12 @@ require('../services/Synchronize');\n     * @param {string} foreignSource The name of the requisition\n     */\n     $scope.removeAllNodes = function(foreignSource) {\n-      bootbox.confirm('Are you sure you want to remove all the nodes from ' + foreignSource + '?', function(ok) {\n+      bootbox.confirm('Are you sure you want to remove all the nodes from ' + _.escape(foreignSource) + '?', function(ok) {\n         if (ok) {\n           RequisitionsService.startTiming();\n           RequisitionsService.removeAllNodesFromRequisition(foreignSource).then(\n             function() { // success\n-              growl.success('All the nodes from ' + foreignSource + ' have been removed, and the requisition has been synchronized.');\n+              growl.success('All the nodes from ' + _.escape(foreignSource) + ' have been removed, and the requisition has been synchronized.');\n               var req = $scope.requisitionsData.getRequisition(foreignSource);\n               req.reset();\n             },\n@@ -310,12 +310,12 @@ require('../services/Synchronize');\n     * @param {string} foreignSource The name of the requisition\n     */\n     $scope.delete = function(foreignSource) {\n-      bootbox.confirm('Are you sure you want to remove the requisition ' + foreignSource + '?', function(ok) {\n+      bootbox.confirm('Are you sure you want to remove the requisition ' + _.escape(foreignSource) + '?', function(ok) {\n         if (ok) {\n           RequisitionsService.startTiming();\n           RequisitionsService.deleteRequisition(foreignSource).then(\n             function() { // success\n-              growl.success('The requisition ' + foreignSource + ' has been deleted.');\n+              growl.success('The requisition ' + _.escape(foreignSource) + ' has been deleted.');\n             },\n             $scope.errorHandler\n           );"
        },
        {
          "filename": "core/web-assets/src/main/assets/js/apps/onms-requisitions/lib/scripts/services/Synchronize.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -46,14 +46,14 @@ require('./Requisitions');\n           RequisitionsService.startTiming();\n           RequisitionsService.synchronizeRequisition(requisition.foreignSource, rescanExisting).then(\n             function() { // success\n-              growl.success('The import operation has been started for ' + requisition.foreignSource + ' (rescanExisting? ' + rescanExisting + ')<br/>Use <b>refresh</b> to update the deployed statistics');\n+              growl.success('The import operation has been started for ' + _.escape(requisition.foreignSource) + ' (rescanExisting? ' + rescanExisting + ')<br/>Use <b>refresh</b> to update the deployed statistics');\n               requisition.setDeployed(true);\n             },\n             errorHandler\n           );\n         };\n         bootbox.prompt({\n-            title: 'Synchronize Requisition  ' +  requisition.foreignSource,\n+            title: 'Synchronize Requisition  ' +  _.escape(requisition.foreignSource),\n             message: '<p><b>Choose a scan option: </b></p>',\n             inputType: 'radio',\n             inputOptions: ["
        },
        {
          "filename": "core/web-assets/src/test/javascript/ng-requisitions/controllers/ForeignSource.test.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -6,6 +6,7 @@\n 'use strict';\n \n const angular = require('angular-js');\n+const _ = require('underscore-js');\n require('angular-mocks');\n require('../../../../../src/main/assets/js/apps/onms-requisitions/requisitions');\n "
        },
        {
          "filename": "core/web-assets/src/test/javascript/ng-requisitions/controllers/Node.test.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n 'use strict';\n \n const angular = require('angular-js');\n+const _ = require('underscore-js');\n require('angular-mocks');\n require('../../../../../src/main/assets/js/apps/onms-requisitions/requisitions');\n "
        },
        {
          "filename": "core/web-assets/src/test/javascript/ng-requisitions/controllers/Requisition.test.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n 'use strict';\n \n const angular = require('angular-js');\n+const _ = require('underscore-js');\n require('angular-mocks');\n require('../../../../../src/main/assets/js/apps/onms-requisitions/requisitions');\n "
        },
        {
          "filename": "core/web-assets/src/test/javascript/ng-requisitions/controllers/Requisitions.test.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n 'use strict';\n \n const angular = require('angular-js');\n+const _ = require('underscore-js');\n require('angular-mocks');\n require('../../../../../src/main/assets/js/apps/onms-requisitions/requisitions');\n "
        },
        {
          "filename": "opennms-webapp/src/main/webapp/WEB-INF/tags/element/nodelist.tag",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -3,6 +3,7 @@\n <%@ attribute name=\"isMaclikeSearch\"  type=\"java.lang.Boolean\" rtexprvalue=\"true\" required=\"true\" %>\n \n <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n+<%@taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n \n <ul class=\"list-unstyled mb-0\">\n   <c:forEach var=\"nodeModel\" items=\"${nodes}\">\n@@ -12,7 +13,7 @@\n     <li>\n       <c:choose>\n         <c:when test=\"${!empty nodeModel.node.foreignSource}\">\n-          <div class=\"NLnode\"><a href=\"${nodeLink}\">${nodeModel.node.label}</a>&nbsp;&nbsp;<span class=\"NLdbid label label-default\" title=\"Database ID: ${nodeModel.node.id}\"><i class=\"fa fa-database\"></i>&nbsp;${nodeModel.node.id}</span>&nbsp;<span class=\"NLfs label label-default\" title=\"Requisition: ${nodeModel.node.foreignSource}\"><i class=\"fa fa-list-alt\"></i>&nbsp;${nodeModel.node.foreignSource}</span>&nbsp;<span class=\"NLfid label label-default\" title=\"Foreign ID: ${nodeModel.node.foreignId}\"><i class=\"fa fa-qrcode\"></i>&nbsp;${nodeModel.node.foreignId}</span>&nbsp;<span class=\"NLloc label label-default\" title=\"Location: ${nodeModel.node.location.locationName}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${nodeModel.node.location.locationName}</span><c:if test=\"${nodeModel.node.hasIngressFlows && nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: ingress/egress flow data available\"><i class=\"fa fa-exchange\"></i>&nbsp;ingress/egress flow data</span></c:if><c:if test=\"${nodeModel.node.hasIngressFlows && !nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: ingress flow data available\"><i class=\"fa fa-long-arrow-left\"></i>&nbsp;ingress flow data</span></c:if><c:if test=\"${!nodeModel.node.hasIngressFlows && nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: egress flow data available\"><i class=\"fa fa-long-arrow-right\"></i>&nbsp;egress flow data</span></c:if></div>\n+          <div class=\"NLnode\"><a href=\"${nodeLink}\">${nodeModel.node.label}</a>&nbsp;&nbsp;<span class=\"NLdbid label label-default\" title=\"Database ID: ${nodeModel.node.id}\"><i class=\"fa fa-database\"></i>&nbsp;${nodeModel.node.id}</span>&nbsp;<span class=\"NLfs label label-default\" title=\"Requisition: ${fn:escapeXml(nodeModel.node.foreignSource)}\"><i class=\"fa fa-list-alt\"></i>&nbsp;${fn:escapeXml(nodeModel.node.foreignSource)}</span>&nbsp;<span class=\"NLfid label label-default\" title=\"Foreign ID: ${nodeModel.node.foreignId}\"><i class=\"fa fa-qrcode\"></i>&nbsp;${nodeModel.node.foreignId}</span>&nbsp;<span class=\"NLloc label label-default\" title=\"Location: ${nodeModel.node.location.locationName}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${nodeModel.node.location.locationName}</span><c:if test=\"${nodeModel.node.hasIngressFlows && nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: ingress/egress flow data available\"><i class=\"fa fa-exchange\"></i>&nbsp;ingress/egress flow data</span></c:if><c:if test=\"${nodeModel.node.hasIngressFlows && !nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: ingress flow data available\"><i class=\"fa fa-long-arrow-left\"></i>&nbsp;ingress flow data</span></c:if><c:if test=\"${!nodeModel.node.hasIngressFlows && nodeModel.node.hasEgressFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: egress flow data available\"><i class=\"fa fa-long-arrow-right\"></i>&nbsp;egress flow data</span></c:if></div>\n         </c:when>\n         <c:otherwise>\n           <div class=\"NLnode\"><a href=\"${nodeLink}\">${nodeModel.node.label}</a>&nbsp;&nbsp;<span class=\"NLdbid label label-default\" title=\"Database ID: ${nodeModel.node.id}\"><i class=\"fa fa-database\"></i>&nbsp;${nodeModel.node.id}</span>&nbsp;<span class=\"NLloc label label-default\" title=\"Location: ${nodeModel.node.location.locationName}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${nodeModel.node.location.locationName}</span> <c:if test=\"${nodeModel.node.hasFlows}\"><span class=\"NLflows label label-default\" title=\"Flows: flow data available\"><i class=\"fa fa-exchange\"></i>&nbsp;flow data</span></c:if></div>"
        },
        {
          "filename": "opennms-webapp/src/main/webapp/element/node.jsp",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -311,7 +311,7 @@ function confirmAssetEdit() {\n \n <h5>\n   <c:if test=\"${model.foreignSource != null}\">\n-    <div class=\"NPnode\">Node: <strong>${model.label}</strong>&nbsp;&nbsp;&nbsp;<span class=\"NPdbid badge badge-secondary \" title=\"Database ID: ${model.id}\"><i class=\"fa fa-database\"></i>&nbsp;${model.id}</span>&nbsp;<span class=\"NPfs badge badge-secondary \" title=\"Requisition: ${model.foreignSource}\"><i class=\"fa fa-list-alt\"></i>&nbsp;${model.foreignSource}</span>&nbsp;<span class=\"NPfid badge badge-secondary \" title=\"Foreign ID: ${model.foreignId}\"><i class=\"fa fa-qrcode\"></i>&nbsp;${model.foreignId}</span>&nbsp;<span class=\"NPloc badge badge-secondary \" title=\"Location: ${model.location}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${model.location}</span> <c:if test=\"${model.node.hasFlows}\"><span class=\"NPflows badge badge-secondary \" title=\"Flows: flow data available\"><i class=\"fa fa-exchange\"></i> flow data</span></c:if></div>\n+    <div class=\"NPnode\">Node: <strong>${model.label}</strong>&nbsp;&nbsp;&nbsp;<span class=\"NPdbid badge badge-secondary \" title=\"Database ID: ${model.id}\"><i class=\"fa fa-database\"></i>&nbsp;${model.id}</span>&nbsp;<span class=\"NPfs badge badge-secondary \" title=\"Requisition: ${fn:escapeXml(model.foreignSource)}\"><i class=\"fa fa-list-alt\"></i>&nbsp;${fn:escapeXml(model.foreignSource)}</span>&nbsp;<span class=\"NPfid badge badge-secondary \" title=\"Foreign ID: ${model.foreignId}\"><i class=\"fa fa-qrcode\"></i>&nbsp;${model.foreignId}</span>&nbsp;<span class=\"NPloc badge badge-secondary \" title=\"Location: ${model.location}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${model.location}</span> <c:if test=\"${model.node.hasFlows}\"><span class=\"NPflows badge badge-secondary \" title=\"Flows: flow data available\"><i class=\"fa fa-exchange\"></i> flow data</span></c:if></div>\n   </c:if>\n   <c:if test=\"${model.foreignSource == null}\">\n     <div class=\"NPnode\">Node: <strong>${model.label}</strong>&nbsp;&nbsp;&nbsp;<span class=\"NPdbid badge badge-secondary \" title=\"Database ID: ${model.id}\"><i class=\"fa fa-database\"></i>&nbsp;${model.id}</span>&nbsp;<span class=\"NPloc badge badge-secondary \" title=\"Location: ${model.location}\"><i class=\"fa fa-map-marker\"></i>&nbsp;${model.location}</span> <c:if test=\"${model.node.hasFlows}\"><span class=\"NPflows badge badge-secondary \" title=\"Flows: flow data available\"><i class=\"fa fa-exchange\"></i> flow data</span></c:if></div>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 5,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa0a6c01745db1fb97c4e136e7b66f8223fd9023",
            "date": "2025-01-09T20:52:26Z",
            "author_login": "opennms-bamboo"
          },
          {
            "sha": "14ede259455c439c9f3ea8aa76726968661240c8",
            "date": "2025-01-09T18:30:16Z",
            "author_login": "opennms-bamboo"
          },
          {
            "sha": "9843579bedf5627bc55bd455903351be4c681713",
            "date": "2025-01-09T17:00:12Z",
            "author_login": "mershad-manesh"
          },
          {
            "sha": "d5aa086a8545ef95b5fef24a34c5468fe83e4c21",
            "date": "2025-01-08T18:38:01Z",
            "author_login": "mershad-manesh"
          },
          {
            "sha": "1f6ecf40b935a1067adf9068b10d6fd095eee915",
            "date": "2025-01-08T14:24:56Z",
            "author_login": "opennms-bamboo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "In OpenNMS Horizon, versions opennms-17.0.0-1 through opennms-27.1.0-1; OpenNMS Meridian, versions meridian-foundation-2015.1.0-1 through meridian-foundation-2019.1.18-1; meridian-foundation-2020.1.0-1 through meridian-foundation-2020.1.7-1 are vulnerable to Stored Cross-Site Scripting, since the function `add()` performs improper validation checks on the input sent to the `foreign-source` parameter. Due to this flaw an attacker could bypass the existing regex validation and inject an arbitrary script which will be stored in the database.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-25T19:15:07.657",
    "last_modified": "2024-11-21T05:55:38.273",
    "fix_date": "2021-03-05T07:25:54Z"
  },
  "references": [
    {
      "url": "https://github.com/OpenNMS/opennms/commit/101e3aa06ec9a1f8f266335fc6f5685c062c6117",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenNMS/opennms/commit/eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25935",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenNMS/opennms/commit/101e3aa06ec9a1f8f266335fc6f5685c062c6117",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenNMS/opennms/commit/eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25935",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.120617",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "opennms",
    "owner": "OpenNMS",
    "created_at": "2013-04-11T18:22:33Z",
    "updated_at": "2025-01-14T07:56:39Z",
    "pushed_at": "2025-01-14T11:15:07Z",
    "size": 804409,
    "stars": 1002,
    "forks": 588,
    "open_issues": 62,
    "watchers": 1002,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "1.6",
      "1.8",
      "1.10",
      "1.12"
    ],
    "languages": {
      "Java": 60412677,
      "JavaScript": 3887957,
      "TypeScript": 374916,
      "HTML": 360783,
      "Vue": 352190,
      "Shell": 341289,
      "CSS": 133110,
      "Perl": 73669,
      "Python": 72357,
      "XSLT": 60925,
      "Groovy": 53961,
      "SCSS": 51003,
      "FreeMarker": 41468,
      "M4": 31931,
      "Makefile": 24635,
      "Dockerfile": 16707,
      "C++": 9187,
      "Batchfile": 8017,
      "PLpgSQL": 7633,
      "Smarty": 6633,
      "Jinja": 5483,
      "C": 4048,
      "R": 1375,
      "Clojure": 941,
      "CMake": 898
    },
    "commit_activity": {
      "total_commits_last_year": 874,
      "avg_commits_per_week": 16.807692307692307,
      "days_active_last_year": 181
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:59:41.732233"
  }
}