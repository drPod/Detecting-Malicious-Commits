{
  "cve_id": "CVE-2021-25962",
  "github_data": {
    "repository": "shuup/shuup",
    "fix_commit": "0a2db392e8518410c282412561461cd8797eea51",
    "related_commits": [
      "0a2db392e8518410c282412561461cd8797eea51",
      "0a2db392e8518410c282412561461cd8797eea51"
    ],
    "patch_url": "https://github.com/shuup/shuup/commit/0a2db392e8518410c282412561461cd8797eea51.patch",
    "fix_commit_details": {
      "sha": "0a2db392e8518410c282412561461cd8797eea51",
      "commit_date": "2021-07-07T17:05:24Z",
      "author": {
        "login": "chessbr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Reports: clean malicius content from the HTML and CSV exporters",
        "length": 63,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 19,
        "additions": 14,
        "deletions": 5
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -14,6 +14,7 @@ List all changes after the last release here (newer on top). Each change on a se\n \n ### Changed\n \n+- Reports: clean malicius content from the HTML and CSV exporters\n - Reports: prevent formulas from being exported in excel writer\n - Tests: log errors into a log file\n - Admin: hide email template button based on permission"
        },
        {
          "filename": "shuup/reports/writer.py",
          "status": "modified",
          "additions": 13,
          "deletions": 5,
          "patch": "@@ -5,6 +5,7 @@\n #\n # This source code is licensed under the OSL-3.0 license found in the\n # LICENSE file in the root directory of this source tree.\n+import bleach\n import csv\n import six\n from babel.dates import format_datetime\n@@ -154,6 +155,13 @@ def format_data(data, format_iso_dates=False, format_money_values=False):\n     return data\n \n \n+def remove_unsafe_chars(data):\n+    if isinstance(data, str):\n+        return \"\".join([char for char in data if char not in (\"=\", \"+\", \"-\")])\n+\n+    return data\n+\n+\n class CSVReportWriter(ReportWriter):\n     content_type = \"text/csv\"\n     extension = \".csv\"\n@@ -170,12 +178,12 @@ def write_data_table(self, report, report_data, has_totals=True):\n         self.data.append([c[\"title\"] for c in report.schema])\n         for datum in report_data:\n             datum = report.read_datum(datum)\n-            self.data.append([format_data(data, format_iso_dates=True) for data in datum])\n+            self.data.append([format_data(remove_unsafe_chars(data), format_iso_dates=True) for data in datum])\n \n         if has_totals:\n             for datum in report.get_totals(report_data):\n                 datum = report.read_datum(datum)\n-                self.data.append([format_data(data) for data in datum])\n+                self.data.append([format_data(remove_unsafe_chars(data)) for data in datum])\n \n     def get_rendered_output(self):\n         f = StringIO()\n@@ -206,13 +214,13 @@ def write_data_table(self, report, report_data, has_totals=True):\n         self.worksheet.append([c[\"title\"] for c in report.schema])\n         for datum in report_data:\n             datum = report.read_datum(datum)\n-            self.worksheet.append([format_data(data) for data in datum])\n+            self.worksheet.append([format_data(remove_unsafe_chars(data)) for data in datum])\n             self._convert_row_to_string()\n \n         if has_totals:\n             for datum in report.get_totals(report_data):\n                 datum = report.read_datum(datum)\n-                self.worksheet.append([format_data(data) for data in datum])\n+                self.worksheet.append([format_data(remove_unsafe_chars(data)) for data in datum])\n                 self._convert_row_to_string()\n \n     def write_page_heading(self, text):\n@@ -264,7 +272,7 @@ def _w_raw(self, content):\n         self.output.append(mark_safe(content))\n \n     def _w(self, content):\n-        self.output.append(format_data(content, format_money_values=True))\n+        self.output.append(bleach.clean(str(format_data(content, format_money_values=True)), strip=True))\n \n     def _w_tag(self, tag, content):\n         self._w_raw(\"<%s>\" % tag)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "25f78cfe370109b9885b903e503faac295c7b7f2",
            "date": "2021-08-18T22:32:03Z",
            "author_login": "chessbr"
          },
          {
            "sha": "546a5666f400e855f3f0b7a12ad4cabc4b201cf4",
            "date": "2021-08-18T19:37:32Z",
            "author_login": "chessbr"
          },
          {
            "sha": "8aaa23ac9a0732ca4da310865b7fc767041c5ba3",
            "date": "2021-08-18T12:24:50Z",
            "author_login": "chessbr"
          },
          {
            "sha": "9cfc9a957475c8139507b024fc8184e5bc194571",
            "date": "2021-08-17T18:28:47Z",
            "author_login": "chessbr"
          },
          {
            "sha": "3cfdac7d0d3d40c7b770b97a833a8c94cd97d0b6",
            "date": "2021-08-17T13:28:21Z",
            "author_login": "chessbr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-1236",
    "description": "\u201cShuup\u201d application in versions 0.4.2 to 2.10.8 is affected by the \u201cFormula Injection\u201d vulnerability. A customer can inject payloads in the name input field in the billing address while buying a product. When a store administrator accesses the reports page to export the data as an Excel file and opens it, the payload gets executed.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-29T14:15:08.070",
    "last_modified": "2024-11-21T05:55:41.060",
    "fix_date": "2021-07-07T17:05:24Z"
  },
  "references": [
    {
      "url": "https://github.com/shuup/shuup/commit/0a2db392e8518410c282412561461cd8797eea51",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25962",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shuup/shuup/commit/0a2db392e8518410c282412561461cd8797eea51",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25962",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.795067",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "shuup",
    "owner": "shuup",
    "created_at": "2015-06-03T12:53:21Z",
    "updated_at": "2025-01-14T14:26:03Z",
    "pushed_at": "2024-03-13T23:45:42Z",
    "size": 30596,
    "stars": 2268,
    "forks": 1111,
    "open_issues": 178,
    "watchers": 2268,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 6452519,
      "Jinja": 686415,
      "JavaScript": 377938,
      "SCSS": 139197,
      "Less": 126515,
      "CSS": 1746,
      "Dockerfile": 1228,
      "HTML": 464
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:41:59.883538"
  }
}