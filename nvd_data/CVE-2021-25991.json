{
  "cve_id": "CVE-2021-25991",
  "github_data": {
    "repository": "ifmeorg/ifme",
    "fix_commit": "d1f570c458d41667df801fc9c40a18b181a2d923",
    "related_commits": [
      "d1f570c458d41667df801fc9c40a18b181a2d923",
      "d1f570c458d41667df801fc9c40a18b181a2d923"
    ],
    "patch_url": "https://github.com/ifmeorg/ifme/commit/d1f570c458d41667df801fc9c40a18b181a2d923.patch",
    "fix_commit_details": {
      "sha": "d1f570c458d41667df801fc9c40a18b181a2d923",
      "commit_date": "2021-11-19T04:37:27Z",
      "author": {
        "login": "julianguyen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[#2052] Fix improper access control leads to admin self-banning",
        "length": 63,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 141,
        "additions": 103,
        "deletions": 38
      },
      "files": [
        {
          "filename": "app/controllers/notifications_controller.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -47,7 +47,9 @@ def render_notification(notification)\n     uniqueid = notification[:uniqueid]\n     data = convert_to_hash(notification[:data])\n     # In case data[:name] is invalid\n-    data[:email] = User.find(data[:user_id]).email\n+    if data[:user_id]\n+      data[:email] = User.find(data[:user_id]).email\n+    end\n     case data[:type]\n     when /comment/ then comment_link(uniqueid, data)\n     when /accepted_ally_request/ then accepted_ally_link(uniqueid, data)"
        },
        {
          "filename": "app/helpers/comments_helper.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -42,6 +42,7 @@ def comment_hash(comment, user)\n       commentByUid: user.uid,\n       commentByName: user.name,\n       commentByAvatar: user.avatar.url,\n+      commentByAdmin: user.admin?,\n       comment: sanitize(comment.comment),\n       viewers: CommentViewersService.viewers(comment, current_user),\n       createdAt: created_at(comment.created_at),"
        },
        {
          "filename": "app/views/allies/index.html.erb",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -56,9 +56,11 @@\n           <div>\n             <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: ally.id), method: :post, data: { confirm: t('common.actions.confirm') } %>\n           </div>\n-          <div>\n-            <%= link_to t('common.actions.report'), new_report_path(uid: ally.uid) %>\n-          </div>\n+          <% if !ally.admin? && ally != current_user %>\n+            <div>\n+              <%= link_to t('common.actions.report'), new_report_path(uid: ally.uid) %>\n+            </div>\n+          <% end %>\n         </div>\n       <% end %>\n     </div>"
        },
        {
          "filename": "app/views/profile/index.html.erb",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -26,9 +26,11 @@\n         <div>\n           <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: @profile.id), method: :post, data: { confirm: t('common.actions.confirm') } %>\n         </div>\n-        <div>\n-          <%= link_to t('common.actions.report'), new_report_path(uid: @profile.uid) %>\n-        </div>\n+        <% if !@profile.admin? && @profile != current_user %>\n+          <div>\n+            <%= link_to t('common.actions.report'), new_report_path(uid: @profile.uid) %>\n+          </div>\n+        <% end %>\n       <% elsif current_user.allies_by_status(:pending_from_user).include? @profile %>\n         <div>\n           <%= link_to t('allies.accept'), add_allies_path(ally_id: @profile.id), method: :post %> | <%= link_to t('allies.reject'), remove_allies_path(ally_id: @profile.id), method: :post, data: { confirm: t('common.actions.confirm') } %>\n@@ -39,7 +41,7 @@\n         </div>\n       <% end %>\n     <% end %>\n-    <% if current_user.admin? %>\n+    <% if @profile != current_user && current_user.admin? %>\n       <% if @profile.banned? %>\n         <div>\n           <%= link_to t('reports.remove_ban'), remove_ban_profile_index_path(user_id: @profile.id), method: :post %>"
        },
        {
          "filename": "app/views/search/index.html.erb",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -15,9 +15,11 @@\n             <div>\n               <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: user.id), method: :post, data: { confirm: t('common.actions.confirm') } %>\n             </div>\n-            <div>\n-              <%= link_to t('common.actions.report'), new_report_path(uid: user.uid) %>\n-            </div>\n+            <% if !user.admin? && user != current_user %>\n+              <div>\n+                <%= link_to t('common.actions.report'), new_report_path(uid: user.uid) %>\n+              </div>\n+            <% end %>\n           <% else %>\n             <%= link_to t('allies.add_ally'), add_allies_path(ally_id: user.id), method: :post %>\n           <% end %>"
        },
        {
          "filename": "client/app/widgets/Comments/__tests__/Comments.spec.jsx",
          "status": "modified",
          "additions": 68,
          "deletions": 26,
          "patch": "@@ -64,50 +64,92 @@ const value = 'Hey';\n \n const id = 1;\n \n-const comment = {\n+const getComment = ({ commentByAdmin } = {}) => ({\n   comment: value,\n-  currentUserId: 'some-uid',\n+  currentUserUid: 'some-uid',\n   commentByAvatar: null,\n+  commentByAdmin: Boolean(commentByAdmin),\n   commentByName: 'Kind Human',\n   commentByUid: 'uid',\n   createdAt: 'Created less than a minute ago',\n   deleteAction: '/comments/delete?comment_id=1',\n   id,\n   viewers: 'Visible only between you and Lane Kim',\n-};\n-\n-const component = <Comments formProps={formProps} />;\n+});\n \n describe('Comments', () => {\n-  beforeEach(() => {\n-    jest.spyOn(axios, 'post').mockResolvedValue({\n-      data: { comment },\n+  describe('when written by a non-admin user', () => {\n+    it('renders correctly with a report link', () => {\n+      render(<Comments formProps={formProps} comments={[getComment()]} />);\n+      expect(screen.getByRole('textbox')).toBeInTheDocument();\n+      expect(screen.getByRole('article')).toBeInTheDocument();\n+      expect(\n+        screen.getByRole('button', { name: 'Submit' }),\n+      ).toBeInTheDocument();\n+      expect(screen.getByRole('link', { name: 'Report' })).toBeInTheDocument();\n     });\n-    jest.spyOn(axios, 'delete').mockResolvedValue({\n-      data: { id },\n+\n+    it('add and delete a comment', async () => {\n+      jest.spyOn(axios, 'post').mockResolvedValue({\n+        data: { comment: getComment() },\n+      });\n+      jest.spyOn(axios, 'delete').mockResolvedValue({\n+        data: { id },\n+      });\n+      render(<Comments formProps={formProps} />);\n+      expect(screen.queryByRole('article')).not.toBeInTheDocument();\n+\n+      userEvent.type(screen.getByRole('textbox'));\n+      userEvent.selectOptions(screen.getByRole('combobox'), 'private');\n+      userEvent.click(screen.getByRole('button', { name: 'Submit' }));\n+\n+      await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());\n+      expect(screen.getByRole('article')).toHaveTextContent('Hey');\n+\n+      userEvent.click(screen.getByRole('link', { name: 'Delete' }));\n+\n+      await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());\n     });\n   });\n \n-  it('renders correctly', () => {\n-    render(component);\n-    expect(screen.getByRole('textbox')).toBeInTheDocument();\n-    expect(screen.queryByRole('article')).not.toBeInTheDocument();\n-    expect(screen.getByRole('button', { name: 'Submit' })).toBeInTheDocument();\n-  });\n+  describe('when written by an admin user', () => {\n+    it('renders correctly without a report link', () => {\n+      render(\n+        <Comments\n+          formProps={formProps}\n+          comments={[getComment({ commentByAdmin: true })]}\n+        />,\n+      );\n+      expect(screen.getByRole('textbox')).toBeInTheDocument();\n+      expect(screen.getByRole('article')).toBeInTheDocument();\n+      expect(\n+        screen.getByRole('button', { name: 'Submit' }),\n+      ).toBeInTheDocument();\n+      expect(\n+        screen.queryByRole('link', { name: 'Report' }),\n+      ).not.toBeInTheDocument();\n+    });\n \n-  it('add and delete a comment', async () => {\n-    render(component);\n-    expect(screen.queryByRole('article')).not.toBeInTheDocument();\n+    it('add and delete a comment', async () => {\n+      jest.spyOn(axios, 'post').mockResolvedValue({\n+        data: { comment: getComment({ commentByAdmin: true }) },\n+      });\n+      jest.spyOn(axios, 'delete').mockResolvedValue({\n+        data: { id },\n+      });\n+      render(<Comments formProps={formProps} />);\n+      expect(screen.queryByRole('article')).not.toBeInTheDocument();\n \n-    userEvent.type(screen.getByRole('textbox'));\n-    userEvent.selectOptions(screen.getByRole('combobox'), 'private');\n-    userEvent.click(screen.getByRole('button', { name: 'Submit' }));\n+      userEvent.type(screen.getByRole('textbox'));\n+      userEvent.selectOptions(screen.getByRole('combobox'), 'private');\n+      userEvent.click(screen.getByRole('button', { name: 'Submit' }));\n \n-    await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());\n-    expect(screen.getByRole('article')).toHaveTextContent('Hey');\n+      await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());\n+      expect(screen.getByRole('article')).toHaveTextContent('Hey');\n \n-    userEvent.click(screen.getByRole('link', { name: 'Delete' }));\n+      userEvent.click(screen.getByRole('link', { name: 'Delete' }));\n \n-    await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());\n+      await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());\n+    });\n   });\n });"
        },
        {
          "filename": "client/app/widgets/Comments/index.jsx",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -24,6 +24,7 @@ type Comment = {\n   commentByUid: string,\n   commentByName: string,\n   commentByAvatar?: string,\n+  commentByAdmin: Boolean,\n   comment: any,\n   viewers?: string,\n   createdAt: string,\n@@ -68,9 +69,10 @@ export const Comments = ({ comments, formProps }: Props) => {\n     currentUserUid: string,\n     uid: string,\n     id: number,\n+    commentByAdmin: Boolean,\n   ) => {\n     const actions = {};\n-    if (currentUserUid !== uid) {\n+    if (currentUserUid !== uid && !commentByAdmin) {\n       actions.report = reportAction(uid, id);\n     }\n     if (viewers) {\n@@ -94,6 +96,7 @@ export const Comments = ({ comments, formProps }: Props) => {\n       commentByUid,\n       commentByName,\n       commentByAvatar,\n+      commentByAdmin,\n       comment,\n       viewers,\n       createdAt,\n@@ -113,6 +116,7 @@ export const Comments = ({ comments, formProps }: Props) => {\n               currentUserUid,\n               commentByUid,\n               id,\n+              commentByAdmin,\n             )}\n             hasStory\n           />"
        },
        {
          "filename": "spec/helpers/comments_helper_spec.rb",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -32,6 +32,7 @@\n                                                                                           commentByUid: user1.uid,\n                                                                                           commentByName: user1.name,\n                                                                                           commentByAvatar: user1.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,\n@@ -47,6 +48,7 @@\n                                                                                           commentByUid: user1.uid,\n                                                                                           commentByName: user1.name,\n                                                                                           commentByAvatar: user1.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: \"Visible only between you and #{user2.name}\",\n@@ -68,6 +70,7 @@\n                                                                                           commentByUid: user2.uid,\n                                                                                           commentByName: user2.name,\n                                                                                           commentByAvatar: user2.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,\n@@ -83,6 +86,7 @@\n                                                                                           commentByUid: user2.uid,\n                                                                                           commentByName: user2.name,\n                                                                                           commentByAvatar: user2.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: \"Visible only between you and #{user1.name}\",\n@@ -108,6 +112,7 @@\n                                                                                           commentByUid: user1.uid,\n                                                                                           commentByName: user1.name,\n                                                                                           commentByAvatar: user1.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,\n@@ -123,6 +128,7 @@\n                                                                                           commentByUid: user1.uid,\n                                                                                           commentByName: user1.name,\n                                                                                           commentByAvatar: user1.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: \"Visible only between you and #{user2.name}\",\n@@ -144,6 +150,7 @@\n                                                                                           commentByUid: user2.uid,\n                                                                                           commentByName: user2.name,\n                                                                                           commentByAvatar: user2.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,\n@@ -159,6 +166,7 @@\n                                                                                           commentByUid: user2.uid,\n                                                                                           commentByName: user2.name,\n                                                                                           commentByAvatar: user2.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: \"Visible only between you and #{user1.name}\",\n@@ -186,6 +194,7 @@\n                                                                                           commentByUid: user1.uid,\n                                                                                           commentByName: user1.name,\n                                                                                           commentByAvatar: user1.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,\n@@ -204,6 +213,7 @@\n                                                                                           commentByUid: user2.uid,\n                                                                                           commentByName: user2.name,\n                                                                                           commentByAvatar: user2.avatar.url,\n+                                                                                          commentByAdmin: false,\n                                                                                           comment: comment,\n                                                                                           createdAt: created_at,\n                                                                                           viewers: nil,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 8,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "85f0149c027ed5441305423956655f733daf20f3",
            "date": "2025-01-05T01:38:17Z",
            "author_login": "julianguyen"
          },
          {
            "sha": "3034e96225f095a01dfdcd3ab961aef960ff614e",
            "date": "2024-12-11T01:51:52Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "dc27b421f360cdf39e019bdfdce2d96225d69e90",
            "date": "2024-12-11T00:58:29Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "3cd19128ce5520a43a83ec485866e561d4f24383",
            "date": "2024-12-09T07:28:29Z",
            "author_login": "julianguyen"
          },
          {
            "sha": "3c6c6de6648b5069e456865044950d7fa0542f43",
            "date": "2024-12-09T03:32:18Z",
            "author_login": "julianguyen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-284",
    "description": "In Ifme, versions v5.0.0 to v7.32 are vulnerable against an improper access control, which makes it possible for admins to ban themselves leading to their deactivation from Ifme account and complete loss of admin access to Ifme.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-29T09:15:09.467",
    "last_modified": "2024-11-21T05:55:44.977",
    "fix_date": "2021-11-19T04:37:27Z"
  },
  "references": [
    {
      "url": "https://github.com/ifmeorg/ifme/commit/d1f570c458d41667df801fc9c40a18b181a2d923",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25991",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ifmeorg/ifme/commit/d1f570c458d41667df801fc9c40a18b181a2d923",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25991",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.034725",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ifme",
    "owner": "ifmeorg",
    "created_at": "2014-04-19T06:58:25Z",
    "updated_at": "2025-01-12T12:04:33Z",
    "pushed_at": "2025-01-05T01:39:03Z",
    "size": 86066,
    "stars": 1499,
    "forks": 753,
    "open_issues": 33,
    "watchers": 1499,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Ruby": 858246,
      "JavaScript": 351103,
      "HTML": 86355,
      "SCSS": 84697,
      "Shell": 2659,
      "Dockerfile": 803,
      "Procfile": 50
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:43:49.883549"
  }
}