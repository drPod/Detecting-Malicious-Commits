{
  "cve_id": "CVE-2021-27191",
  "github_data": {
    "repository": "JoeScho/get-ip-range",
    "fix_commit": "98ca22b815c77273cbab259811ab0976118e13b6",
    "related_commits": [
      "98ca22b815c77273cbab259811ab0976118e13b6",
      "98ca22b815c77273cbab259811ab0976118e13b6"
    ],
    "patch_url": "https://github.com/JoeScho/get-ip-range/commit/98ca22b815c77273cbab259811ab0976118e13b6.patch",
    "fix_commit_details": {
      "sha": "98ca22b815c77273cbab259811ab0976118e13b6",
      "commit_date": "2021-02-10T22:48:28Z",
      "author": {
        "login": "JoeScho",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "limit total IPs in range to avoid DoS",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 24,
        "additions": 24,
        "deletions": 0
      },
      "files": [
        {
          "filename": "index.test.ts",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -91,4 +91,16 @@ describe('for two IP addresses', () => {\n   it('should support hyphenated range in IPv5', () => {\n     expect(getIPRange('::ffff:102:304-::ffff:102:307')).toEqual(successResponsev6);\n   });\n+\n+  it('should throw if the range is greater than 10000 default', () => {\n+    const throwFn = () => getIPRange('128.0.0.0/1');\n+    expect(throwFn).toThrow('Too many IPs in range. Total number: 2147483647. Max count is 10000, to increase, set the limit with the MAX_RANGE environment variable');\n+  });\n+\n+  it('should throw if the range is greater than process.env.MAX_RANGE', () => {\n+    process.env.MAX_RANGE = '5000';\n+\n+    const throwFn = () => getIPRange('128.0.0.0/1');\n+    expect(throwFn).toThrow('Too many IPs in range. Total number: 2147483647. Max count is 5000, to increase, set the limit with the MAX_RANGE environment variable');\n+  });\n });"
        },
        {
          "filename": "index.ts",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -2,6 +2,9 @@ import { toLong, fromLong } from 'ip';\n // @ts-ignore\n import { Address4, Address6 } from 'ip-address';\n \n+// Set default max range\n+let maxRange = 10000;\n+\n const getIPv4 = (ip: string): Address4 | null => {\n   try {\n     return new Address4(ip);\n@@ -24,6 +27,13 @@ const getRangev4 = (ip1: string, ip2: string) => {\n   let firstAddressLong = toLong(ip1);\n   const lastAddressLong = toLong(ip2);\n \n+  const totalIPs = lastAddressLong - firstAddressLong;\n+\n+  // Prevent DoS\n+  if (totalIPs > maxRange) {\n+    throw new Error(`Too many IPs in range. Total number: ${totalIPs}. Max count is ${maxRange}, to increase, set the limit with the MAX_RANGE environment variable`)\n+  }\n+\n   for (firstAddressLong; firstAddressLong <= lastAddressLong; firstAddressLong++)\n     ips.push(fromLong(firstAddressLong));\n \n@@ -48,6 +58,8 @@ const isCIDR = (ipCIDR: Address4 | Address6): boolean => Boolean(ipCIDR.parsedSu\n const isRange = (ipRange: string): boolean => ipRange.indexOf('-') !== -1;\n \n const getIPRange = (ip1: string, ip2?: string): Array<string> => {\n+  maxRange = parseInt(process.env.MAX_RANGE || '10000');\n+\n   const ip1v4 = getIPv4(ip1);\n   const ip1v6 = getIPv6(ip1);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3c11c6c08f73858ecde6d1d9e484d40d46d39ea0",
            "date": "2021-02-26T12:01:37Z",
            "author_login": "JoeScho"
          },
          {
            "sha": "37b66153e09fa10e98525c98b3f53db9e4138587",
            "date": "2021-02-26T11:59:01Z",
            "author_login": "JoeScho"
          },
          {
            "sha": "8ce42fb5f8fba828ba3a3dc3f171109b9172def6",
            "date": "2021-02-26T11:48:33Z",
            "author_login": "JoeScho"
          },
          {
            "sha": "f0c52a92c0a93c09f768be3c1bfae97077622730",
            "date": "2021-02-26T11:47:54Z",
            "author_login": "JoeScho"
          },
          {
            "sha": "36be08ceea44bcd8f3844f7278a042ddf198ddba",
            "date": "2021-02-26T11:47:30Z",
            "author_login": "JoeScho"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": null,
    "description": "The get-ip-range package before 4.0.0 for Node.js is vulnerable to denial of service (DoS) if the range is untrusted input. An attacker could send a large range (such as 128.0.0.0/1) that causes resource exhaustion.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-02-11T18:15:18.347",
    "last_modified": "2024-11-21T05:57:31.823",
    "fix_date": "2021-02-10T22:48:28Z"
  },
  "references": [
    {
      "url": "https://advisory.checkmarx.net/advisory/CX-2021-4304",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/JoeScho/get-ip-range/commit/98ca22b815c77273cbab259811ab0976118e13b6",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210319-0002/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/get-ip-range",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://advisory.checkmarx.net/advisory/CX-2021-4304",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/JoeScho/get-ip-range/commit/98ca22b815c77273cbab259811ab0976118e13b6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210319-0002/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/package/get-ip-range",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:13.196888",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "get-ip-range",
    "owner": "JoeScho",
    "created_at": "2017-08-31T15:56:14Z",
    "updated_at": "2024-07-23T17:38:45Z",
    "pushed_at": "2024-09-06T07:29:00Z",
    "size": 858,
    "stars": 11,
    "forks": 10,
    "open_issues": 19,
    "watchers": 11,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 6722,
      "JavaScript": 69
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "isc"
    },
    "collected_at": "2025-01-14T21:23:16.765896"
  }
}