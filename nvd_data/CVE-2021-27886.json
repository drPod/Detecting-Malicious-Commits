{
  "cve_id": "CVE-2021-27886",
  "github_data": {
    "repository": "rakibtg/docker-web-gui",
    "fix_commit": "79cdc41809f2030fce21a1109898bd79e4190661",
    "related_commits": [
      "79cdc41809f2030fce21a1109898bd79e4190661",
      "79cdc41809f2030fce21a1109898bd79e4190661"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "79cdc41809f2030fce21a1109898bd79e4190661",
      "commit_date": "2021-02-28T11:16:54Z",
      "author": {
        "login": "rakibtg",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed security issue with terminal by introducing controlled method that execute queries",
        "length": 88,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 82,
        "additions": 75,
        "deletions": 7
      },
      "files": [
        {
          "filename": "backend/utilities/terminal.js",
          "status": "modified",
          "additions": 75,
          "deletions": 7,
          "patch": "@@ -1,8 +1,76 @@\n-const child_process = require( 'child_process' )\n+const child_process = require(\"child_process\");\n \n-exports.Terminal = command => new Promise((resolve, reject) => {\n-  child_process.exec(command, {maxBuffer : 1500 * 1024}, function(error, stdout, stderr) {\n-    if( !!error ) reject( error )\n-    else resolve( stdout || stderr )\n-  })\n-})\n\\ No newline at end of file\n+const isValidId = (id) => /^[0-9a-zA-Z]+$/.test(id.trim());\n+const isValidString = (id) => /^[a-zA-Z]+$/.test(id.trim());\n+\n+const Terminal = (command) =>\n+  new Promise((resolve, reject) => {\n+    child_process.exec(\n+      command,\n+      { maxBuffer: 1500 * 1024 },\n+      function (error, stdout, stderr) {\n+        if (!!error) reject(error);\n+        else resolve(stdout || stderr);\n+      }\n+    );\n+  });\n+\n+exports.safeTerminal = {\n+  installModules: async (backendPath) => {\n+    await Terminal(`cd ${backendPath} && npm install`);\n+  },\n+  serve: async (backendPath) => {\n+    await Terminal(`cd ${backendPath} && node index.js`);\n+  },\n+  allContainers: () => Terminal(`docker ps -q -a`),\n+  inspectContainer: async (id) => {\n+    if (isValidId(id)) {\n+      return Terminal(`docker container inspect ${id}`);\n+    } else {\n+      throw new Error(\"The container id is invalid\");\n+    }\n+  },\n+  generic: async (task, id) => {\n+    if (!isValidString(task)) {\n+      throw new Error(\"The task command is invalid.\");\n+    }\n+    if (!isValidId(id)) {\n+      throw new Error(\"The container id is invalid\");\n+    }\n+    return Terminal(`docker container ${task} ${id}`);\n+  },\n+  logs: async (id) => {\n+    if (!isValidId(id)) {\n+      throw new Error(\"The container id is invalid\");\n+    }\n+    return Terminal(`docker container logs ${id} --tail 1500`);\n+  },\n+  stats: () =>\n+    Terminal(\n+      `docker container stats --no-stream --format '{\"id\": \"{{.ID}}\", \"cpu_percentage\": \"{{.CPUPerc}}\", \"memory_usage\": \"{{.MemUsage}}\", \"network_io\": \"{{.NetIO}}\"}'`\n+    ),\n+  prune: (pruneType) => {\n+    if (!isValidString(pruneType)) {\n+      throw new Error(\"The entity type is not valid\");\n+    }\n+    return Terminal(`docker ${pruneType} prune -f`);\n+  },\n+  containerLs: () => Terminal(`docker container ls --format '{{json .}}'`),\n+  formattedImages: () =>\n+    Terminal(\n+      `docker images --format '{\"ID\": \"{{.ID}}\", \"Tag\": \"{{.Tag}}\", \"CreatedSince\": \"{{.CreatedSince}}\", \"Size\": \"{{.Size}}\", \"VirtualSize\": \"{{.VirtualSize}}\", \"Repository\": \"{{.Repository}}\"}'`\n+    ),\n+  singleImage: (task, id) => {\n+    if (!isValidString(task)) {\n+      throw new Error(\"The task command is invalid.\");\n+    }\n+    if (!isValidId(id)) {\n+      throw new Error(\"The image id is invalid\");\n+    }\n+    if (task == \"run\") {\n+      return Terminal(`docker ${task} ${id}`);\n+    } else {\n+      return Terminal(`docker image ${task} ${id}`);\n+    }\n+  },\n+};"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a8098abf8e0333a3cd081263cc4d9534743dab10",
            "date": "2024-11-25T18:29:00Z",
            "author_login": "rakibtg"
          },
          {
            "sha": "555c1bf131e1864f7093acae0bcf5a67aa9b28c9",
            "date": "2024-11-24T18:47:53Z",
            "author_login": "rakibtg"
          },
          {
            "sha": "4051259e732e694887001b4164a3ca977513b7d3",
            "date": "2024-11-12T08:33:45Z",
            "author_login": "ruhulfbr"
          },
          {
            "sha": "85c9717f4c8b1d58ca4eba232c9629125e411079",
            "date": "2024-11-11T10:37:21Z",
            "author_login": "ruhulfbr"
          },
          {
            "sha": "a9dfa39203bfc7c147d2f6e69af640213523a496",
            "date": "2024-08-24T23:49:56Z",
            "author_login": "rakibtg"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "rakibtg Docker Dashboard before 2021-02-28 allows command injection in backend/utilities/terminal.js via shell metacharacters in the command parameter of an API request. NOTE: this is NOT a Docker, Inc. product.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-02T00:15:18.097",
    "last_modified": "2024-11-21T05:58:41.943",
    "fix_date": "2021-02-28T11:16:54Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/163416/Docker-Dashboard-Remote-Command-Execution.html",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/rakibtg/docker-web-gui/commit/79cdc41809f2030fce21a1109898bd79e4190661",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rakibtg/docker-web-gui/issues/23",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.docker.com/legal/trademark-guidelines",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/163416/Docker-Dashboard-Remote-Command-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/rakibtg/docker-web-gui/commit/79cdc41809f2030fce21a1109898bd79e4190661",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rakibtg/docker-web-gui/issues/23",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.docker.com/legal/trademark-guidelines",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.815121",
    "processing_status": "enhanced"
  }
}