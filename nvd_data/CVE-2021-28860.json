{
  "cve_id": "CVE-2021-28860",
  "github_data": {
    "repository": "adaltas/node-mixme",
    "fix_commit": "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
    "related_commits": [
      "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
      "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028"
    ],
    "patch_url": "https://github.com/adaltas/node-mixme/commit/cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028.patch",
    "fix_commit_details": {
      "sha": "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
      "commit_date": "2021-04-25T21:39:08Z",
      "author": {
        "login": "wdavidw",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: dont pollute object proto #1",
        "length": 33,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 34,
        "deletions": 2
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,6 +1,11 @@\n \n # Changelog\n \n+## Trunk\n+\n+* fix: dont pollute object proto #1\n+* chore: latest dependencies\n+\n ## Version 0.5.0\n \n * feat: support object with null prototype"
        },
        {
          "filename": "dist/mixme.cjs.js",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -19,7 +19,7 @@ function _typeof(obj) {\n }\n \n // Generated by CoffeeScript 2.5.1\n-var _snake_case;\n+var _snake_case; exports.clone = void 0; exports.compare = void 0; exports.is_object = void 0; exports.is_object_literal = void 0; exports.merge = void 0; exports.mutate = void 0; exports.snake_case = void 0;\n \n exports.merge = function merge() {\n   return exports.mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));\n@@ -50,6 +50,10 @@ exports.mutate = function mutate() {\n       }\n \n       for (name in source) {\n+        if (name === '__proto__') {\n+          continue;\n+        }\n+\n         target[name] = exports.mutate(target[name], source[name]);\n       }\n     } else if (Array.isArray(source)) {"
        },
        {
          "filename": "dist/mixme.esm.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -46,6 +46,10 @@ _mutate = function mutate() {\n       }\n \n       for (name in source) {\n+        if (name === '__proto__') {\n+          continue;\n+        }\n+\n         target[name] = _mutate(target[name], source[name]);\n       }\n     } else if (Array.isArray(source)) {"
        },
        {
          "filename": "dist/mixme.umd.js",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -21,7 +21,7 @@\n   }\n \n   // Generated by CoffeeScript 2.5.1\n-  var _snake_case;\n+  var _snake_case; exports.clone = void 0; exports.compare = void 0; exports.is_object = void 0; exports.is_object_literal = void 0; exports.merge = void 0; exports.mutate = void 0; exports.snake_case = void 0;\n \n   exports.merge = function merge() {\n     return exports.mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));\n@@ -52,6 +52,10 @@\n         }\n \n         for (name in source) {\n+          if (name === '__proto__') {\n+            continue;\n+          }\n+\n           target[name] = exports.mutate(target[name], source[name]);\n         }\n       } else if (Array.isArray(source)) {"
        },
        {
          "filename": "lib/index.js",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -27,6 +27,9 @@ mutate = function() {\n         target = {};\n       }\n       for (name in source) {\n+        if (name === '__proto__') {\n+          continue;\n+        }\n         target[name] = mutate(target[name], source[name]);\n       }\n     } else if (Array.isArray(source)) {"
        },
        {
          "filename": "src/index.coffee",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -19,6 +19,7 @@ mutate = ->\n     if is_object_literal source\n       target = {} unless is_object_literal target\n       for name of source\n+        continue if name is '__proto__'\n         target[name] = mutate target[name], source[name]\n     else if Array.isArray source\n       target = for v in source"
        },
        {
          "filename": "test/merge.coffee",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -25,3 +25,8 @@ describe 'mixme.merge', ->\n     .should.eql a: 1, b: 2, c: 0\n     obj2\n     .should.eql a: 1, c: 3, d: 4\n+\n+  it 'dont merge proto', ->\n+    merge {}, JSON.parse '{\"__proto__\": {\"polluted\": \"ohno\"}}'\n+    obj = Object.create {}\n+    should(obj.polluted).be.Undefined()"
        },
        {
          "filename": "test/mutate.coffee",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -23,6 +23,12 @@ describe 'mutate', ->\n       {...obj1}\n       .should.eql { a: 'a value', b: 'b new', c: { d: 'd new', f: 'f value'}}\n \n+    it 'dont merge proto', ->\n+      src = {}\n+      mutate src, JSON.parse '{\"__proto__\": {\"polluted\": \"ohno\"}}'\n+      obj = Object.create {}\n+      should(obj.polluted).be.Undefined()\n+\n   describe '2nd arg not object', ->\n     \n     it 'object with string', ->"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5170ab694c49c6e99fb6f7ca9d86278901d73a3c",
            "date": "2024-07-31T17:07:50Z",
            "author_login": "wdavidw"
          },
          {
            "sha": "31baaa60c3fcac2029ee28954c1768f7a87739eb",
            "date": "2024-07-31T16:36:47Z",
            "author_login": "wdavidw"
          },
          {
            "sha": "c76cbcdc2c3ef6c12e1df19de511af8a4c7ff3b4",
            "date": "2024-07-31T16:31:01Z",
            "author_login": "wdavidw"
          },
          {
            "sha": "614740b81f3e84e040a431d83c54a5e7800b1235",
            "date": "2024-07-31T16:26:38Z",
            "author_login": "wdavidw"
          },
          {
            "sha": "063cb1c9c98f284be6906bb02c456af68717317c",
            "date": "2024-07-31T16:12:59Z",
            "author_login": "wdavidw"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
    "cwe_id": "CWE-1321",
    "description": "In Node.js mixme, prior to v0.5.1, an attacker can add or alter properties of an object via '__proto__' through the mutate() and merge() functions. The polluted attribute will be directly assigned to every object in the program. This will put the availability of the program at risk causing a potential denial of service (DoS).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-03T12:15:07.467",
    "last_modified": "2024-11-21T06:00:20.460",
    "fix_date": "2021-04-25T21:39:08Z"
  },
  "references": [
    {
      "url": "http://nodejs.com",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "URL Repurposed"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/commit/cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/issues/1",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/security/advisories/GHSA-79jw-6wg7-r9g4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210618-0005/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/~david",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://nodejs.com",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "URL Repurposed"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/commit/cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/issues/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/adaltas/node-mixme/security/advisories/GHSA-79jw-6wg7-r9g4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210618-0005/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.npmjs.com/~david",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.060985",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "node-mixme",
    "owner": "adaltas",
    "created_at": "2018-03-25T21:26:53Z",
    "updated_at": "2024-07-31T17:08:16Z",
    "pushed_at": "2024-07-31T17:08:10Z",
    "size": 75,
    "stars": 3,
    "forks": 2,
    "open_issues": 1,
    "watchers": 3,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 10568,
      "JavaScript": 5790
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:54:21.884783"
  }
}