{
  "cve_id": "CVE-2021-28961",
  "github_data": {
    "repository": "openwrt/luci",
    "fix_commit": "9df7ea4d66644df69fcea18b36bc465912ffc",
    "related_commits": [
      "9df7ea4d66644df69fcea18b36bc465912ffc",
      "9df7ea4d66644df69fcea18b36bc465912ffc"
    ],
    "patch_url": "https://github.com/openwrt/luci/commit/9df7ea4d66644df69fcea18b36bc465912ffc.patch",
    "fix_commit_details": {
      "sha": "9df7ea4d66644df69fcea18b36bc465912ffc",
      "commit_date": "2021-02-17T17:18:14Z",
      "author": {
        "login": "jow-",
        "type": "User",
        "stats": {
          "total_commits": 5956,
          "average_weekly_commits": 6.76049943246311,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 602
        }
      },
      "commit_message": {
        "title": "luci-app-ddns: fix multiple authenticated RCEs",
        "length": 323,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 10,
        "deletions": 10
      },
      "files": [
        {
          "filename": "applications/luci-app-ddns/luasrc/model/cbi/ddns/detail.lua",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -105,22 +105,22 @@ local function _verify_ip_source()\n \t\t_arg = (_ipv6 == \"1\")\n \t\t\tand ipn6:formvalue(section)\n \t\t\tor  ipn4:formvalue(section)\n-\t\tcommand = command .. [[n ]] .. _arg\n+\t\tcommand = command .. [[n ]] .. UTIL.shellquote(_arg)\n \telseif _source == \"web\" then\n \t\t_arg = (_ipv6 == \"1\")\n \t\t\tand iurl6:formvalue(section)\n \t\t\tor  iurl4:formvalue(section)\n-\t\tcommand = command .. [[u ]] .. _arg\n+\t\tcommand = command .. [[u ]] .. UTIL.shellquote(_arg)\n \n \t\t-- proxy only needed for checking url\n \t\t_arg = (pxy) and pxy:formvalue(section) or \"\"\n \t\tif (_arg and #_arg > 0) then\n-\t\t\tcommand = command .. [[ -p ]] .. _arg\n+\t\t\tcommand = command .. [[ -p ]] .. UTIL.shellquote(_arg)\n \t\tend\n \telseif _source == \"interface\" then\n-\t\tcommand = command .. [[i ]] .. ipi:formvalue(section)\n+\t\tcommand = command .. [[i ]] .. UTIL.shellquote(ipi:formvalue(section))\n \telseif _source == \"script\" then\n-\t\tcommand = command .. [[s ]] .. ips:formvalue(section)\n+\t\tcommand = command .. [[s ]] .. UTIL.shellquote(ips:formvalue(section))\n \tend\n \tcommand = command .. [[ -- get_local_ip]]\n \treturn (SYS.call(command) == 0)\n@@ -436,7 +436,7 @@ function uurl.validate(self, value)\n \t\treturn nil, err_tab_basic(self) .. \"<QUERY> \" .. translate(\"missing / required\")\n \telseif not url.host then\n \t\treturn nil, err_tab_basic(self) .. \"<HOST> \" .. translate(\"missing / required\")\n-\telseif SYS.call([[nslookup ]] .. url.host .. [[ >/dev/null 2>&1]]) ~= 0 then\n+\telseif SYS.call([[nslookup ]] .. UTIL.shellquote(url.host) .. [[ >/dev/null 2>&1]]) ~= 0 then\n \t\treturn nil, err_tab_basic(self) .. translate(\"can not resolve host: \") .. url.host\n \tend\n \n@@ -864,7 +864,7 @@ function iurl4.validate(self, value)\n \t\treturn nil, err_tab_adv(self) .. translate(\"must start with 'http://'\")\n \telseif not url.host then\n \t\treturn nil, err_tab_adv(self) .. \"<HOST> \" .. translate(\"missing / required\")\n-\telseif SYS.call([[nslookup ]] .. url.host .. [[>/dev/null 2>&1]]) ~= 0 then\n+\telseif SYS.call([[nslookup ]] .. UTIL.shellquote(url.host) .. [[>/dev/null 2>&1]]) ~= 0 then\n \t\treturn nil, err_tab_adv(self) .. translate(\"can not resolve host: \") .. url.host\n \telse\n \t\treturn value\n@@ -915,7 +915,7 @@ function iurl6.validate(self, value)\n \t\treturn nil, err_tab_adv(self) .. translate(\"must start with 'http://'\")\n \telseif not url.host then\n \t\treturn nil, err_tab_adv(self) .. \"<HOST> \" .. translate(\"missing / required\")\n-\telseif SYS.call([[nslookup ]] .. url.host .. [[>/dev/null 2>&1]]) ~= 0 then\n+\telseif SYS.call([[nslookup ]] .. UTIL.shellquote(url.host) .. [[>/dev/null 2>&1]]) ~= 0 then\n \t\treturn nil, err_tab_adv(self) .. translate(\"can not resolve host: \") .. url.host\n \telse\n \t\treturn value\n@@ -1180,7 +1180,7 @@ if has_dnsserver or ( ( m:get(section, \"dns_server\") or \"\" ) ~= \"\" ) then\n \t\t\tlocal command = CTRL.luci_helper .. [[ -]]\n \t\t\tif (ipv6 == 1)  then command = command .. [[6]] end\n \t\t\tif (force == 1) then command = command .. [[f]] end\n-\t\t\tcommand = command .. [[d ]] .. value .. [[ -- verify_dns]]\n+\t\t\tcommand = command .. [[d ]] .. UTIL.shellquote(value) .. [[ -- verify_dns]]\n \n \t\t\tlocal ret = SYS.call(command)\n \t\t\tif     ret == 0 then return value\t-- everything OK\n@@ -1256,7 +1256,7 @@ if has_proxy or ( ( m:get(section, \"proxy\") or \"\" ) ~= \"\" ) then\n \t\t\tlocal command = CTRL.luci_helper .. [[ -]]\n \t\t\tif (ipv6 == 1)  then command = command .. [[6]] end\n \t\t\tif (force == 1) then command = command .. [[f]] end\n-\t\t\tcommand = command .. [[p ]] .. value .. [[ -- verify_proxy]]\n+\t\t\tcommand = command .. [[p ]] .. UTIL.shellquote(value) .. [[ -- verify_proxy]]\n \t\t\tlocal ret = SYS.call(command)\n \t\t\tif     ret == 0 then return value\n \t\t\telseif ret == 2 then return nil, err_tab_adv(self) .. translate(\"nslookup can not resolve host\")"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7046a1cac1425477196a0d49c3fc64ebfcf9a238",
            "date": "2025-01-14T15:16:56Z",
            "author_login": "systemcrash"
          },
          {
            "sha": "b85628e16cd83a666bb97e57d35ce439546d394e",
            "date": "2025-01-14T02:10:15Z",
            "author_login": "systemcrash"
          },
          {
            "sha": "bd39c6394583c23d1529b10e9bd86c076862fa68",
            "date": "2025-01-14T01:54:45Z",
            "author_login": "systemcrash"
          },
          {
            "sha": "e91e147714841ff9ca27c9e853fb0e6124c9a16c",
            "date": "2025-01-11T15:11:23Z",
            "author_login": "adelton"
          },
          {
            "sha": "c50ff5e2a331a0384d69b8d5ea10186099a34d10",
            "date": "2025-01-09T21:57:23Z",
            "author_login": "adelton"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "applications/luci-app-ddns/luasrc/model/cbi/ddns/detail.lua in the DDNS package for OpenWrt 19.07 allows remote authenticated users to inject arbitrary commands via POST requests.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-21T06:15:12.357",
    "last_modified": "2024-11-21T06:00:27.127",
    "fix_date": "2021-02-17T17:18:14Z"
  },
  "references": [
    {
      "url": "https://github.com/openwrt/luci/commit/9df7ea4d66644df69fcea18b36bc465912ffc",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://openwrt.org/advisory/2021-08-01-3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/openwrt/luci/commit/9df7ea4d66644df69fcea18b36bc465912ffc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://openwrt.org/advisory/2021-08-01-3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:16.849493",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "luci",
    "owner": "openwrt",
    "created_at": "2014-10-09T16:02:20Z",
    "updated_at": "2025-01-14T15:18:35Z",
    "pushed_at": "2025-01-14T16:20:22Z",
    "size": 447344,
    "stars": 6550,
    "forks": 2585,
    "open_issues": 282,
    "watchers": 6550,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "for-15.05",
      "lede-17.01",
      "luci-0.8",
      "luci-0.9",
      "luci-0.10",
      "luci-0.11",
      "luci-0.12",
      "master",
      "openwrt-18.06",
      "openwrt-19.07",
      "openwrt-21.02",
      "openwrt-22.03",
      "openwrt-23.05",
      "openwrt-24.10"
    ],
    "languages": {
      "JavaScript": 3076626,
      "C": 1710331,
      "Lua": 809153,
      "HTML": 392684,
      "CSS": 210422,
      "Makefile": 153590,
      "Shell": 105267,
      "UnrealScript": 81556,
      "Perl": 58132,
      "Java": 49574,
      "C#": 42820,
      "Visual Basic .NET": 33030,
      "Yacc": 17409,
      "Lex": 7173,
      "CMake": 1240,
      "Python": 1165
    },
    "commit_activity": {
      "total_commits_last_year": 1538,
      "avg_commits_per_week": 29.576923076923077,
      "days_active_last_year": 273
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T16:21:21.487933"
  }
}