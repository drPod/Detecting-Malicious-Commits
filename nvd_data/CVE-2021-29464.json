{
  "cve_id": "CVE-2021-29464",
  "github_data": {
    "repository": "Exiv2/exiv2",
    "fix_commit": "f9308839198aca5e68a65194f151a1de92398f54",
    "related_commits": [
      "f9308839198aca5e68a65194f151a1de92398f54",
      "f9308839198aca5e68a65194f151a1de92398f54"
    ],
    "patch_url": "https://github.com/Exiv2/exiv2/commit/f9308839198aca5e68a65194f151a1de92398f54.patch",
    "fix_commit_details": {
      "sha": "f9308839198aca5e68a65194f151a1de92398f54",
      "commit_date": "2021-04-20T11:04:13Z",
      "author": {
        "login": "kevinbackhouse",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Better bounds checking in Jp2Image::encodeJp2Header()",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 14,
        "additions": 9,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/jp2image.cpp",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -646,11 +646,11 @@ static void boxes_check(size_t b,size_t m)\n     void Jp2Image::encodeJp2Header(const DataBuf& boxBuf,DataBuf& outBuf)\n     {\n         DataBuf output(boxBuf.size_ + iccProfile_.size_ + 100); // allocate sufficient space\n-        int     outlen = sizeof(Jp2BoxHeader) ; // now many bytes have we written to output?\n-        int      inlen = sizeof(Jp2BoxHeader) ; // how many bytes have we read from boxBuf?\n+        long    outlen = sizeof(Jp2BoxHeader) ; // now many bytes have we written to output?\n+        long    inlen = sizeof(Jp2BoxHeader) ; // how many bytes have we read from boxBuf?\n         Jp2BoxHeader* pBox   = (Jp2BoxHeader*) boxBuf.pData_;\n-        int32_t       length = getLong((byte*)&pBox->length, bigEndian);\n-        int32_t       count  = sizeof (Jp2BoxHeader);\n+        uint32_t      length = getLong((byte*)&pBox->length, bigEndian);\n+        uint32_t      count  = sizeof (Jp2BoxHeader);\n         char*         p      = (char*) boxBuf.pData_;\n         bool          bWroteColor = false ;\n \n@@ -667,6 +667,7 @@ static void boxes_check(size_t b,size_t m)\n #ifdef EXIV2_DEBUG_MESSAGES\n                 std::cout << \"Jp2Image::encodeJp2Header subbox: \"<< toAscii(subBox.type) << \" length = \" << subBox.length << std::endl;\n #endif\n+                enforce(subBox.length <= length - count, Exiv2::kerCorruptedMetadata);\n                 count        += subBox.length;\n                 newBox.type   = subBox.type;\n             } else {\n@@ -675,13 +676,14 @@ static void boxes_check(size_t b,size_t m)\n                 count = length;\n             }\n \n-            int32_t newlen = subBox.length;\n+            uint32_t newlen = subBox.length;\n             if ( newBox.type == kJp2BoxTypeColorHeader ) {\n                 bWroteColor = true ;\n                 if ( ! iccProfileDefined() ) {\n                     const char* pad   = \"\\x01\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x05\\x1cuuid\";\n                     uint32_t    psize = 15;\n                     newlen            = sizeof(newBox) + psize ;\n+                    enforce(newlen <= output.size_ - outlen, Exiv2::kerCorruptedMetadata);\n                     ul2Data((byte*)&newBox.length,psize      ,bigEndian);\n                     ul2Data((byte*)&newBox.type  ,newBox.type,bigEndian);\n                     ::memcpy(output.pData_+outlen                     ,&newBox            ,sizeof(newBox));\n@@ -690,13 +692,15 @@ static void boxes_check(size_t b,size_t m)\n                     const char* pad   = \"\\x02\\x00\\x00\";\n                     uint32_t    psize = 3;\n                     newlen            = sizeof(newBox) + psize + iccProfile_.size_;\n+                    enforce(newlen <= output.size_ - outlen, Exiv2::kerCorruptedMetadata);\n                     ul2Data((byte*)&newBox.length,newlen,bigEndian);\n                     ul2Data((byte*)&newBox.type,newBox.type,bigEndian);\n                     ::memcpy(output.pData_+outlen                     ,&newBox            ,sizeof(newBox)  );\n                     ::memcpy(output.pData_+outlen+sizeof(newBox)      , pad               ,psize           );\n                     ::memcpy(output.pData_+outlen+sizeof(newBox)+psize,iccProfile_.pData_,iccProfile_.size_);\n                 }\n             } else {\n+                enforce(newlen <= output.size_ - outlen, Exiv2::kerCorruptedMetadata);\n                 ::memcpy(output.pData_+outlen,boxBuf.pData_+inlen,subBox.length);\n             }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a1b65bbddb1b10c4525b267af7f806408afd8b09",
            "date": "2025-01-13T18:45:29Z",
            "author_login": "kamiccolo"
          },
          {
            "sha": "cf64c2cca727195b5ee27f3438916dec3830a0d4",
            "date": "2025-01-12T05:43:43Z",
            "author_login": "neheb"
          },
          {
            "sha": "289eb76313f866aad94cc0cdf187a86be41b2046",
            "date": "2023-11-26T20:48:52Z",
            "author_login": "neheb"
          },
          {
            "sha": "9635d6fbbe19ab5f09649056b1cd6631396ddef2",
            "date": "2025-01-07T22:09:12Z",
            "author_login": "neheb"
          },
          {
            "sha": "0c7b34b1baf9673da86f109ec50cb4eeb36f4e99",
            "date": "2025-01-07T03:44:17Z",
            "author_login": "neheb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.3,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-122",
    "description": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A heap buffer overflow was found in Exiv2 versions v0.27.3 and earlier. The heap overflow is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to gain code execution, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `insert`. The bug is fixed in version v0.27.4.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-30T19:15:07.187",
    "last_modified": "2024-11-21T06:01:10.107",
    "fix_date": "2021-04-20T11:04:13Z"
  },
  "references": [
    {
      "url": "https://github.com/Exiv2/exiv2/commit/f9308839198aca5e68a65194f151a1de92398f54",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Exiv2/exiv2/security/advisories/GHSA-jgm9-5fw5-pw9p",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K3HKXR6JOVKMBE4HY4FDXNVZGNCQG6T3/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NDMZTVQAZSMLPTDVDYLBHAAF7I5QXVYQ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202312-06",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Exiv2/exiv2/commit/f9308839198aca5e68a65194f151a1de92398f54",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Exiv2/exiv2/security/advisories/GHSA-jgm9-5fw5-pw9p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K3HKXR6JOVKMBE4HY4FDXNVZGNCQG6T3/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NDMZTVQAZSMLPTDVDYLBHAAF7I5QXVYQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202312-06",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.060161",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "exiv2",
    "owner": "Exiv2",
    "created_at": "2017-04-27T17:25:13Z",
    "updated_at": "2025-01-13T23:55:45Z",
    "pushed_at": "2025-01-14T10:46:44Z",
    "size": 127560,
    "stars": 962,
    "forks": 285,
    "open_issues": 173,
    "watchers": 962,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0.25",
      "0.26",
      "0.27-maintenance",
      "0.28.x",
      "main",
      "old-master"
    ],
    "languages": {
      "C++": 4307014,
      "Python": 937259,
      "CMake": 69364,
      "C": 36920,
      "Meson": 13972,
      "Shell": 8085,
      "Batchfile": 914,
      "CodeQL": 599,
      "QMake": 392,
      "sed": 370
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:14:17.965961"
  }
}