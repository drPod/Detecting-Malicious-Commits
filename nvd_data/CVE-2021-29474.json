{
  "cve_id": "CVE-2021-29474",
  "github_data": {
    "repository": "hedgedoc/hedgedoc",
    "fix_commit": null,
    "related_commits": [],
    "patch_url": null
  },
  "vulnerability_details": {
    "cvss_score": 4.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-20",
    "description": "HedgeDoc (formerly known as CodiMD) is an open-source collaborative markdown editor. An attacker can read arbitrary `.md` files from the server's filesystem due to an improper input validation, which results in the ability to perform a relative path traversal. To verify if you are affected, you can try to open the following URL: `http://localhost:3000/..%2F..%2FREADME#` (replace `http://localhost:3000` with your instance's base-URL e.g. `https://demo.hedgedoc.org/..%2F..%2FREADME#`). If you see a README page being rendered, you run an affected version. The attack works due the fact that the internal router passes the url-encoded alias to the `noteController.showNote`-function. This function passes the input directly to findNote() utility function, that will pass it on the the parseNoteId()-function, that tries to make sense out of the noteId/alias and check if a note already exists and if so, if a corresponding file on disk was updated. If no note exists the note creation-function is called, which pass this unvalidated alias, with a `.md` appended, into a path.join()-function which is read from the filesystem in the follow up routine and provides the pre-filled content of the new note. This allows an attacker to not only read arbitrary `.md` files from the filesystem, but also observes changes to them. The usefulness of this attack can be considered limited, since mainly markdown files are use the file-ending `.md` and all markdown files contained in the hedgedoc project, like the README, are public anyway. If other protections such as a chroot or container or proper file permissions are in place, this attack's usefulness is rather limited. On a reverse-proxy level one can force a URL-decode, which will prevent this attack because the router will not accept such a path.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-26T22:15:08.900",
    "last_modified": "2024-11-21T06:01:11.913",
    "fix_date": null
  },
  "references": [
    {
      "url": "https://github.com/hedgedoc/hedgedoc/security/advisories/GHSA-p528-555r-pf87",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/hedgedoc/hedgedoc/security/advisories/GHSA-p528-555r-pf87",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.559149",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "hedgedoc",
    "owner": "hedgedoc",
    "created_at": "2019-03-27T12:14:01Z",
    "updated_at": "2025-01-14T14:11:42Z",
    "pushed_at": "2025-01-11T01:55:49Z",
    "size": 104589,
    "stars": 5376,
    "forks": 412,
    "open_issues": 251,
    "watchers": 5376,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "TypeScript": 2960544,
      "SCSS": 99279,
      "JavaScript": 13932,
      "Dockerfile": 4079,
      "Shell": 3027,
      "CSS": 1071
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T15:20:25.967381"
  }
}