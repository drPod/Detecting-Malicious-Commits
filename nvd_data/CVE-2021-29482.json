{
  "cve_id": "CVE-2021-29482",
  "github_data": {
    "repository": "ulikunitz/xz",
    "fix_commit": "69c6093c7b2397b923acf82cb378f55ab2652b9b",
    "related_commits": [
      "69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "69c6093c7b2397b923acf82cb378f55ab2652b9b"
    ],
    "patch_url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b.patch",
    "fix_commit_details": {
      "sha": "69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "commit_date": "2020-08-19T16:04:10Z",
      "author": {
        "login": "ulikunitz",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "xz: fix a security issue for readUvarint",
        "length": 507,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 17,
        "deletions": 1
      },
      "files": [
        {
          "filename": "bits.go",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -54,6 +54,8 @@ var errOverflowU64 = errors.New(\"xz: uvarint overflows 64-bit unsigned integer\")\n \n // readUvarint reads a uvarint from the given byte reader.\n func readUvarint(r io.ByteReader) (x uint64, n int, err error) {\n+\tconst maxUvarintLen = 10\n+\n \tvar s uint\n \ti := 0\n \tfor {\n@@ -62,8 +64,11 @@ func readUvarint(r io.ByteReader) (x uint64, n int, err error) {\n \t\t\treturn x, i, err\n \t\t}\n \t\ti++\n+\t\tif i > maxUvarintLen {\n+\t\t\treturn x, i, errOverflowU64\n+\t\t}\n \t\tif b < 0x80 {\n-\t\t\tif i > 10 || i == 10 && b > 1 {\n+\t\t\tif i == maxUvarintLen && b > 1 {\n \t\t\t\treturn x, i, errOverflowU64\n \t\t\t}\n \t\t\treturn x | uint64(b)<<s, i, nil"
        },
        {
          "filename": "bits_test.go",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -31,3 +31,14 @@ func TestUvarint(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+func TestUvarIntCVE_2020_16845(t *testing.T) {\n+\tvar a = []byte{0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n+\t\t0x88, 0x89, 0x8a, 0x8b}\n+\n+\tr := bytes.NewReader(a)\n+\t_, _, err := readUvarint(r)\n+\tif err != errOverflowU64 {\n+\t\tt.Fatalf(\"readUvarint overflow not detected\")\n+\t}\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4f11dce79b9977ec2976a978d6c594ea1c23cf29",
            "date": "2024-04-03T18:46:24Z",
            "author_login": "ulikunitz"
          },
          {
            "sha": "f56ebbfaa2400067dcda8ade26ce912c2873ca08",
            "date": "2022-12-13T19:12:06Z",
            "author_login": "ulikunitz"
          },
          {
            "sha": "9d122a61c181b044e6b8b9c09979dfe7c513e2db",
            "date": "2022-12-12T20:10:11Z",
            "author_login": "ulikunitz"
          },
          {
            "sha": "4ce6f08566c86bf66a9bc1c2f811336ae2e462c0",
            "date": "2022-12-12T19:41:07Z",
            "author_login": "ulikunitz"
          },
          {
            "sha": "0b7c695d23f84aa7e968bbcaa1980847683d909a",
            "date": "2022-12-10T18:35:37Z",
            "author_login": "ulikunitz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-28T19:15:08.587",
    "last_modified": "2024-11-21T06:01:13.820",
    "fix_date": "2020-08-19T16:04:10Z"
  },
  "references": [
    {
      "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.052016",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xz",
    "owner": "ulikunitz",
    "created_at": "2014-08-15T19:41:21Z",
    "updated_at": "2025-01-10T09:59:44Z",
    "pushed_at": "2024-09-21T10:14:30Z",
    "size": 10509,
    "stars": 489,
    "forks": 44,
    "open_issues": 17,
    "watchers": 489,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 1310083,
      "Shell": 160
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:40:44.708346"
  }
}