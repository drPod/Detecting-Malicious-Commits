{
  "cve_id": "CVE-2021-29482",
  "github_data": {
    "repository": "ulikunitz/xz",
    "fix_commit": "69c6093c7b2397b923acf82cb378f55ab2652b9b",
    "related_commits": [
      "69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "69c6093c7b2397b923acf82cb378f55ab2652b9b"
    ],
    "patch_url": null
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-28T19:15:08.587",
    "last_modified": "2024-11-21T06:01:13.820",
    "fix_date": null
  },
  "references": [
    {
      "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.052016",
    "processing_status": "raw"
  }
}