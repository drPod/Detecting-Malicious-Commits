{
  "cve_id": "CVE-2021-29642",
  "github_data": {
    "repository": "lostintangent/gistpad",
    "fix_commit": "230b05e8dea8d7ac5aae998bbe0a591d7f081b70",
    "related_commits": [
      "230b05e8dea8d7ac5aae998bbe0a591d7f081b70",
      "230b05e8dea8d7ac5aae998bbe0a591d7f081b70"
    ],
    "patch_url": "https://github.com/lostintangent/gistpad/commit/230b05e8dea8d7ac5aae998bbe0a591d7f081b70.patch",
    "fix_commit_details": {
      "sha": "230b05e8dea8d7ac5aae998bbe0a591d7f081b70",
      "commit_date": "2021-03-30T02:00:26Z",
      "author": {
        "login": "lostintangent",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Removing API URL setting",
        "length": 24,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 71,
        "additions": 29,
        "deletions": 42
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,3 +1,7 @@\n+## v0.2.7 (03/29/21)\n+\n+- Removed the `GistPad > Api Url` setting, since it was no longer supported after GistPad moved over to using VS Code's native authentication.\n+\n ## v0.2.6 (03/21/21)\n \n - Removed all bundled extensions, to keep GistPad as small as possible"
        },
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 10,
          "deletions": 12,
          "patch": "@@ -285,34 +285,32 @@ In addition to the `Gists` view, this extension also provides the following comm\n \n ## Configuration Settings\n \n-- `Gistpad: Api Url` - Specifies the GitHub API server to use. By default, this points at GitHub.com (`https://api.github.com`), but if you're using GitHub Enterprise, then you need to set this to the v3 API URL of your GitHub server. This should be something like `https://[YOUR_HOST]/api/v3`.\n+- `Gistpad: Tree Icons` - Specifies whether to show the gist type icons in the gists tree.\n \n-* `Gistpad: Tree Icons` - Specifies whether to show the gist type icons in the gists tree.\n-\n-* `GistPad > Comments: Show Thread` - Specifies when to show the comment thread UI whenever you open a Gist file. Can be set to one of the following values:\n+- `GistPad > Comments: Show Thread` - Specifies when to show the comment thread UI whenever you open a Gist file. Can be set to one of the following values:\n \n   - `always`: Always display the comment thread whenever you open a Gist file. You can manually collapse it as needed.\n   - `never`: Never automatically open the comment thread when you open a Gist file. You can manually expand it as needed.\n   - `whenNotEmpty` _(default)_: Automatically display the comment thread whenever there are actually comments in a Gist file. Otherwise, leave it collapsed.\n \n-* `Gistpad > Images: Paste Format`: Specifies the markup format to use when pasting an image into a gist file. Can be set to one of the following values:\n+- `Gistpad > Images: Paste Format`: Specifies the markup format to use when pasting an image into a gist file. Can be set to one of the following values:\n \n   - `markdown` _(default)_: Pastes the image reference using `Markdown` format (e.g. `![image](link)`).\n   - `html`: Pastes the image reference using `HTML` format (e.g. `<img src=\"link\" />`). Note, when you paste an image into an HTML file, it will always use this format type, regardless what the setting is.\n \n-* `Gistpad > Images: Paste Type`: Specifies the method to use when pasting an image into a gist file. Can be set to one of the following values:\n+- `Gistpad > Images: Paste Type`: Specifies the method to use when pasting an image into a gist file. Can be set to one of the following values:\n \n   - `file` _(default)_: The pasted image is uploaded as a `.png` to the gist, and a reference is added to file it's pasted into.\n   - `base64`: The pasted image is base64-encoded and then embedded into the gist file.\n \n-* `Gistpad > Images: Upload Directory Name`: Specifies the name of the directory to upload images to. Defaults to `images`.\n+- `Gistpad > Images: Upload Directory Name`: Specifies the name of the directory to upload images to. Defaults to `images`.\n \n-* `GistPad > Scratch Notes: Directory Format` - Specifies the [moment.js](https://momentjs.com/) format string to use when generating directories for new scratch notes. Defaults to `LL` (e.g. `March 6, 2020`).\n+- `GistPad > Scratch Notes: Directory Format` - Specifies the [moment.js](https://momentjs.com/) format string to use when generating directories for new scratch notes. Defaults to `LL` (e.g. `March 6, 2020`).\n \n-* `GistPad > Scratch Notes: File Extension` - Specifies the file extension to use when generating new scratch notes. Defaults to `.md`.\n+- `GistPad > Scratch Notes: File Extension` - Specifies the file extension to use when generating new scratch notes. Defaults to `.md`.\n \n-* `GistPad > Scratch Notes: File Format` - Specifies the [moment.js](https://momentjs.com/) format string to use when generating new scratch notes. Defaults to `LT` (e.g. `2:52 PM`).\n+- `GistPad > Scratch Notes: File Format` - Specifies the [moment.js](https://momentjs.com/) format string to use when generating new scratch notes. Defaults to `LT` (e.g. `2:52 PM`).\n \n-* `GistPad > Scratch Notes: Show` - Specifies whether or not to display the scratch notes node in the gists tree view. Defaults to `true`.\n+- `GistPad > Scratch Notes: Show` - Specifies whether or not to display the scratch notes node in the gists tree view. Defaults to `true`.\n \n-* `GistPad > Showcase URL` - Specifies the URL to use when displaying the showcase entry. This allows teams/classrooms/etc. to create their own showcase and share it amongst themselves.\n+- `GistPad > Showcase URL` - Specifies the URL to use when displaying the showcase entry. This allows teams/classrooms/etc. to create their own showcase and share it amongst themselves."
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 6,
          "patch": "@@ -3,7 +3,7 @@\n   \"displayName\": \"GistPad\",\n   \"description\": \"Manage your code snippets and developer notes using GitHub Gists and repositories.\",\n   \"publisher\": \"vsls-contrib\",\n-  \"version\": \"0.2.6\",\n+  \"version\": \"0.2.7\",\n   \"extensionKind\": [\n     \"ui\",\n     \"workspace\"\n@@ -42,11 +42,6 @@\n       \"type\": \"object\",\n       \"title\": \"GistPad\",\n       \"properties\": {\n-        \"gistpad.apiUrl\": {\n-          \"default\": \"https://api.github.com\",\n-          \"type\": \"string\",\n-          \"description\": \"Specifies the GitHub server's API URL. By default, this points to GitHub.com, but it can be used to point at a GitHub Enterprise instance.\"\n-        },\n         \"gistpad.treeIcons\": {\n           \"default\": \"true\",\n           \"type\": \"boolean\","
        },
        {
          "filename": "src/config.ts",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -3,7 +3,6 @@ import * as vscode from \"vscode\";\n const CONFIG_SECTION = \"gistpad\";\n \n export function get(key: \"treeIcons\"): boolean;\n-export function get(key: \"apiUrl\"): string;\n export function get(key: \"images.markdownPasteFormat\"): \"markdown\" | \"html\";\n export function get(key: \"images.pasteType\"): \"file\" | \"base64\";\n export function get(key: \"images.directoryName\"): string;"
        },
        {
          "filename": "src/repos/wiki/commands.ts",
          "status": "modified",
          "additions": 12,
          "deletions": 11,
          "patch": "@@ -43,26 +43,27 @@ export function registerCommands(context: ExtensionContext) {\n       async (node?: RepositoryNode | RepositoryFileNode) => {\n         const repoName = node?.repo.name || store.wiki!.name;\n \n-        const input = await window.createInputBox();\n+        const input = window.createInputBox();\n         input.title = `Add wiki page (${repoName})`;\n-        input.prompt =  \"Enter the name of the new page you'd like to create\";\n+        input.prompt = \"Enter the name of the new page you'd like to create\";\n \n         input.onDidAccept(async () => {\n           input.hide();\n-          \n+\n           if (input.value) {\n             const path = getPageFilePath(input.value);\n             const filePath =\n               node instanceof RepositoryFileNode\n                 ? `${node.file.path}/${path}`\n                 : path;\n-  \n-            \n-            await withProgress(\"Adding new page...\", async () => createWikiPage(input.value, repoName, filePath));\n+\n+            await withProgress(\"Adding new page...\", async () =>\n+              createWikiPage(input.value, repoName, filePath)\n+            );\n             openRepoDocument(repoName, filePath);\n           }\n-        })\n-        \n+        });\n+\n         input.show();\n       }\n     )\n@@ -87,9 +88,9 @@ export function registerCommands(context: ExtensionContext) {\n         const [, file] = RepoFileSystemProvider.getRepoInfo(uri)!;\n \n         if (!file) {\n-          await withProgress(\"Adding new page...\", async () => {\n-            return createWikiPage(pageTitle, repoName, filePath);\n-          });\n+          await withProgress(\"Adding new page...\", async () =>\n+            createWikiPage(pageTitle, repoName, filePath)\n+          );\n         }\n \n         openRepoDocument(repoName, filePath);"
        },
        {
          "filename": "src/store/actions.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 8,
          "patch": "@@ -26,14 +26,7 @@ const Gists = require(\"gists\");\n \n export async function getApi(constructor = Gists) {\n   const token = await getToken();\n-  const apiurl = config.get(\"apiUrl\");\n-\n-  if (!apiurl) {\n-    const message = \"No API URL is set.\";\n-    throw new Error(message);\n-  }\n-\n-  return new constructor({ apiurl, token });\n+  return new constructor({ token });\n }\n \n export async function duplicateGist("
        },
        {
          "filename": "src/store/auth.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 4,
          "patch": "@@ -5,7 +5,6 @@ import {\n   window\n } from \"vscode\";\n import { store } from \".\";\n-import * as config from \"../config\";\n import { EXTENSION_NAME } from \"../constants\";\n import { refreshGists } from \"./actions\";\n const GitHub = require(\"github-base\");\n@@ -27,9 +26,7 @@ const DELETE_REPO_SCOPE = \"delete_repo\";\n // TODO: Replace github-base with octokit\n export async function getApi(newToken?: string) {\n   const token = newToken || (await getToken());\n-  const apiurl = config.get(\"apiUrl\");\n-\n-  return new GitHub({ apiurl, token });\n+  return new GitHub({ token });\n }\n \n const TOKEN_RESPONSE = \"Sign in\";"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3adc6918406f46cefa48a489eda5c76ab6172973",
            "date": "2024-11-24T05:40:45Z",
            "author_login": "Daryl-Horton"
          },
          {
            "sha": "95986930c35945f4b6ea5485ec120c0c5034d175",
            "date": "2023-11-19T22:10:17Z",
            "author_login": "lostintangent"
          },
          {
            "sha": "9217a6ae2c8c0c8c739656f24accf4d132de88e9",
            "date": "2023-11-19T21:18:46Z",
            "author_login": "lostintangent"
          },
          {
            "sha": "244d66b41e50d12b68b2b284dbf4ac1124a0d7d5",
            "date": "2023-11-04T00:57:17Z",
            "author_login": "aaronsteers"
          },
          {
            "sha": "317c0e39a2637a785c19be3b6607b33ebf8f1cb5",
            "date": "2022-11-22T17:22:18Z",
            "author_login": "lostintangent"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-863",
    "description": "GistPad before 0.2.7 allows a crafted workspace folder to change the URL for the Gist API, which leads to leakage of GitHub access tokens.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-03-30T19:15:15.863",
    "last_modified": "2024-11-21T06:01:32.623",
    "fix_date": "2021-03-30T02:00:26Z"
  },
  "references": [
    {
      "url": "https://github.com/lostintangent/gistpad/commit/230b05e8dea8d7ac5aae998bbe0a591d7f081b70",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuln.ryotak.me/advisories/7",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/lostintangent/gistpad/commit/230b05e8dea8d7ac5aae998bbe0a591d7f081b70",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuln.ryotak.me/advisories/7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.504263",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gistpad",
    "owner": "lostintangent",
    "created_at": "2019-11-24T06:03:36Z",
    "updated_at": "2025-01-08T00:02:09Z",
    "pushed_at": "2024-11-24T05:40:45Z",
    "size": 9303,
    "stars": 957,
    "forks": 64,
    "open_issues": 40,
    "watchers": 957,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 224104,
      "JavaScript": 2071,
      "AppleScript": 770,
      "PowerShell": 628,
      "Shell": 492
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:57:15.164429"
  }
}