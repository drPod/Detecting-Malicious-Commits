{
  "cve_id": "CVE-2021-30045",
  "github_data": {
    "repository": "SerenityOS/serenity",
    "fix_commit": "4317db7498eaa5a37068052bb0310fbc6a5f78e4",
    "related_commits": [
      "4317db7498eaa5a37068052bb0310fbc6a5f78e4",
      "4317db7498eaa5a37068052bb0310fbc6a5f78e4"
    ],
    "patch_url": "https://github.com/SerenityOS/serenity/commit/4317db7498eaa5a37068052bb0310fbc6a5f78e4.patch",
    "fix_commit_details": {
      "sha": "4317db7498eaa5a37068052bb0310fbc6a5f78e4",
      "commit_date": "2021-03-27T14:28:22Z",
      "author": {
        "login": "IdanHo",
        "type": "User",
        "stats": {
          "total_commits": 1381,
          "average_weekly_commits": 4.210365853658536,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 100
        }
      },
      "commit_message": {
        "title": "LibArchive: Make bounds checks stricter in the Zip parser",
        "length": 238,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 12,
        "additions": 9,
        "deletions": 3
      },
      "files": [
        {
          "filename": "Userland/Libraries/LibArchive/Zip.h",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -52,11 +52,13 @@ struct [[gnu::packed]] EndOfCentralDirectory {\n     bool read(ReadonlyBytes buffer)\n     {\n         auto fields_size = sizeof(EndOfCentralDirectory) - sizeof(u8*);\n-        if (buffer.size() < fields_size)\n+        if (buffer.size() < sizeof(end_of_central_directory_signature) + fields_size)\n             return false;\n         if (memcmp(buffer.data(), end_of_central_directory_signature, sizeof(end_of_central_directory_signature)) != 0)\n             return false;\n         memcpy(reinterpret_cast<void*>(&disk_number), buffer.data() + sizeof(end_of_central_directory_signature), fields_size);\n+        if (buffer.size() < sizeof(end_of_central_directory_signature) + fields_size + comment_length)\n+            return false;\n         comment = buffer.data() + sizeof(end_of_central_directory_signature) + fields_size;\n         return true;\n     }\n@@ -101,11 +103,13 @@ struct [[gnu::packed]] CentralDirectoryRecord {\n     bool read(ReadonlyBytes buffer)\n     {\n         auto fields_size = sizeof(CentralDirectoryRecord) - (sizeof(u8*) * 3);\n-        if (buffer.size() < fields_size)\n+        if (buffer.size() < sizeof(central_directory_record_signature) + fields_size)\n             return false;\n         if (memcmp(buffer.data(), central_directory_record_signature, sizeof(central_directory_record_signature)) != 0)\n             return false;\n         memcpy(reinterpret_cast<void*>(&made_by_version), buffer.data() + sizeof(central_directory_record_signature), fields_size);\n+        if (buffer.size() < sizeof(end_of_central_directory_signature) + fields_size + comment_length + name_length + extra_data_length)\n+            return false;\n         name = buffer.data() + sizeof(central_directory_record_signature) + fields_size;\n         extra_data = name + name_length;\n         comment = extra_data + extra_data_length;\n@@ -165,11 +169,13 @@ struct [[gnu::packed]] LocalFileHeader {\n     bool read(ReadonlyBytes buffer)\n     {\n         auto fields_size = sizeof(LocalFileHeader) - (sizeof(u8*) * 3);\n-        if (buffer.size() < fields_size)\n+        if (buffer.size() < sizeof(local_file_header_signature) + fields_size)\n             return false;\n         if (memcmp(buffer.data(), local_file_header_signature, sizeof(local_file_header_signature)) != 0)\n             return false;\n         memcpy(reinterpret_cast<void*>(&minimum_version), buffer.data() + sizeof(local_file_header_signature), fields_size);\n+        if (buffer.size() < sizeof(end_of_central_directory_signature) + fields_size + name_length + extra_data_length + compressed_size)\n+            return false;\n         name = buffer.data() + sizeof(local_file_header_signature) + fields_size;\n         extra_data = name + name_length;\n         compressed_data = extra_data + extra_data_length;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6127f031081827bae32076085d105bc7b10671ca",
            "date": "2025-01-12T16:37:48Z",
            "author_login": "spholz"
          },
          {
            "sha": "60bb8edd7bb28ce378c9c723c29d75cc9fcd3bbe",
            "date": "2025-01-10T19:10:42Z",
            "author_login": "spholz"
          },
          {
            "sha": "980bc4ddf013acb72b3a8861ad51727054c2f879",
            "date": "2025-01-10T19:17:58Z",
            "author_login": "spholz"
          },
          {
            "sha": "e88594005bbe474291870c1cf9ed87dc0d8b72cd",
            "date": "2025-01-13T14:33:56Z",
            "author_login": "spholz"
          },
          {
            "sha": "0d11e70cfeb0a77fcc4cb351d5af5e81209ed1fd",
            "date": "2025-01-10T17:53:29Z",
            "author_login": "spholz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-120",
    "description": "SerenityOS 2021-03-27 contains a buffer overflow vulnerability in the EndOfCentralDirectory::read() function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-04-06T13:15:14.543",
    "last_modified": "2024-11-21T06:03:15.407",
    "fix_date": "2021-03-27T14:28:22Z"
  },
  "references": [
    {
      "url": "https://github.com/SerenityOS/serenity/commit/4317db7498eaa5a37068052bb0310fbc6a5f78e4",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/SerenityOS/serenity/issues/5975",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/SerenityOS/serenity/pull/5977",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/SerenityOS/serenity/commit/4317db7498eaa5a37068052bb0310fbc6a5f78e4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/SerenityOS/serenity/issues/5975",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/SerenityOS/serenity/pull/5977",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:33.516298",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "serenity",
    "owner": "SerenityOS",
    "created_at": "2018-12-02T19:28:41Z",
    "updated_at": "2025-01-14T10:21:35Z",
    "pushed_at": "2025-01-13T23:16:43Z",
    "size": 235144,
    "stars": 30959,
    "forks": 3205,
    "open_issues": 733,
    "watchers": 30959,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C++": 45614077,
      "JavaScript": 2388122,
      "HTML": 1772086,
      "CMake": 436652,
      "Shell": 419673,
      "C": 413743,
      "Objective-C++": 237909,
      "Game Maker Language": 227939,
      "Python": 206707,
      "Assembly": 55972,
      "CSS": 31427,
      "Objective-C": 13832,
      "Dockerfile": 2690,
      "Nix": 1940,
      "Zig": 1475,
      "Lua": 1121,
      "GLSL": 533,
      "Makefile": 219,
      "NASL": 197
    },
    "commit_activity": {
      "total_commits_last_year": 6164,
      "avg_commits_per_week": 118.53846153846153,
      "days_active_last_year": 356
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-14T14:51:53.328396"
  }
}