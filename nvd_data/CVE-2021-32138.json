{
  "cve_id": "CVE-2021-32138",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "289ffce3e0d224d314f5f92a744d5fe35999f20b",
    "related_commits": [
      "289ffce3e0d224d314f5f92a744d5fe35999f20b",
      "289ffce3e0d224d314f5f92a744d5fe35999f20b"
    ],
    "patch_url": "https://github.com/gpac/gpac/commit/289ffce3e0d224d314f5f92a744d5fe35999f20b.patch",
    "fix_commit_details": {
      "sha": "289ffce3e0d224d314f5f92a744d5fe35999f20b",
      "commit_date": "2021-04-30T08:47:35Z",
      "author": {
        "login": "jeanlf",
        "type": "User",
        "stats": {
          "total_commits": 11740,
          "average_weekly_commits": 11.521099116781159,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 832
        }
      },
      "commit_message": {
        "title": "fixed #1767 (fuzz)",
        "length": 18,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 18,
        "deletions": 14
      },
      "files": [
        {
          "filename": "applications/mp4box/filedump.c",
          "status": "modified",
          "additions": 18,
          "deletions": 14,
          "patch": "@@ -2880,23 +2880,27 @@ void DumpTrackInfo(GF_ISOFile *file, GF_ISOTrackID trackID, Bool full_dump, Bool\n \t\tfprintf(stderr, \"\\tAOM AV1 stream - Resolution %d x %d\\n\", w, h);\n \n \t\tav1c = gf_isom_av1_config_get(file, trackNum, 1);\n-\t\tfprintf(stderr, \"\\tversion=%u, profile=%u, level_idx0=%u, tier=%u\\n\", (u32)av1c->version, (u32)av1c->seq_profile, (u32)av1c->seq_level_idx_0, (u32)av1c->seq_tier_0);\n-\t\tfprintf(stderr, \"\\thigh_bitdepth=%u, twelve_bit=%u, monochrome=%u\\n\", (u32)av1c->high_bitdepth, (u32)av1c->twelve_bit, (u32)av1c->monochrome);\n-\t\tfprintf(stderr, \"\\tchroma: subsampling_x=%u, subsampling_y=%u, sample_position=%u\\n\", (u32)av1c->chroma_subsampling_x, (u32)av1c->chroma_subsampling_y, (u32)av1c->chroma_sample_position);\n+\t\tif (!av1c) {\n+\t\t\tfprintf(stderr, \"\\tCorrupted av1 config\\n\");\n+\t\t} else {\n+\t\t\tfprintf(stderr, \"\\tversion=%u, profile=%u, level_idx0=%u, tier=%u\\n\", (u32)av1c->version, (u32)av1c->seq_profile, (u32)av1c->seq_level_idx_0, (u32)av1c->seq_tier_0);\n+\t\t\tfprintf(stderr, \"\\thigh_bitdepth=%u, twelve_bit=%u, monochrome=%u\\n\", (u32)av1c->high_bitdepth, (u32)av1c->twelve_bit, (u32)av1c->monochrome);\n+\t\t\tfprintf(stderr, \"\\tchroma: subsampling_x=%u, subsampling_y=%u, sample_position=%u\\n\", (u32)av1c->chroma_subsampling_x, (u32)av1c->chroma_subsampling_y, (u32)av1c->chroma_sample_position);\n \n-\t\tif (av1c->initial_presentation_delay_present)\n-\t\t\tfprintf(stderr, \"\\tInitial presentation delay %u\\n\", (u32) av1c->initial_presentation_delay_minus_one+1);\n+\t\t\tif (av1c->initial_presentation_delay_present)\n+\t\t\t\tfprintf(stderr, \"\\tInitial presentation delay %u\\n\", (u32) av1c->initial_presentation_delay_minus_one+1);\n \n-\t\tcount = gf_list_count(av1c->obu_array);\n-\t\tfor (i=0; i<count; i++) {\n-\t\t\tu8 hash[20];\n-\t\t\tGF_AV1_OBUArrayEntry *obu = gf_list_get(av1c->obu_array, i);\n-\t\t\tgf_sha1_csum((u8*)obu->obu, (u32)obu->obu_length, hash);\n-\t\t\tfprintf(stderr, \"\\tOBU#%d %s hash: \", i+1, gf_av1_get_obu_name(obu->obu_type) );\n-\t\t\tfor (j=0; j<20; j++) fprintf(stderr, \"%02X\", hash[j]);\n-\t\t\tfprintf(stderr, \"\\n\");\n+\t\t\tcount = gf_list_count(av1c->obu_array);\n+\t\t\tfor (i=0; i<count; i++) {\n+\t\t\t\tu8 hash[20];\n+\t\t\t\tGF_AV1_OBUArrayEntry *obu = gf_list_get(av1c->obu_array, i);\n+\t\t\t\tgf_sha1_csum((u8*)obu->obu, (u32)obu->obu_length, hash);\n+\t\t\t\tfprintf(stderr, \"\\tOBU#%d %s hash: \", i+1, gf_av1_get_obu_name(obu->obu_type) );\n+\t\t\t\tfor (j=0; j<20; j++) fprintf(stderr, \"%02X\", hash[j]);\n+\t\t\t\tfprintf(stderr, \"\\n\");\n+\t\t\t}\n+\t\t\tgf_odf_av1_cfg_del(av1c);\n \t\t}\n-\t\tgf_odf_av1_cfg_del(av1c);\n \t} else if (msub_type == GF_ISOM_SUBTYPE_3GP_H263) {\n \t\tu32 w, h;\n \t\tgf_isom_get_visual_info(file, trackNum, 1, &w, &h);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e075efa1bd0984e0e87f6752f1e5b991ba3a7cf7",
            "date": "2025-01-14T15:00:34Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "7af1bfcdc25dd74e158437abd13858281ae1bea0",
            "date": "2025-01-14T12:33:00Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "08572e41a7eae3d7e4329bf88a455ba6cb209936",
            "date": "2025-01-14T12:18:43Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5f2c53efbc58ecfb01885c73b9507413efde6c81",
            "date": "2025-01-14T11:46:01Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "f2082beb80c470f4eaf2bb0421b56e8adcde303a",
            "date": "2025-01-14T11:45:02Z",
            "author_login": "aureliendavid"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-476",
    "description": "The DumpTrackInfo function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-13T20:15:08.343",
    "last_modified": "2024-11-21T06:06:52.280",
    "fix_date": "2021-04-30T08:47:35Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/289ffce3e0d224d314f5f92a744d5fe35999f20b",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1767",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/commit/289ffce3e0d224d314f5f92a744d5fe35999f20b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1767",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.751160",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-14T12:51:06Z",
    "pushed_at": "2025-01-14T12:51:01Z",
    "size": 148655,
    "stars": 2857,
    "forks": 539,
    "open_issues": 84,
    "watchers": 2857,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29230795,
      "JavaScript": 1164507,
      "C++": 591365,
      "Roff": 570792,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1273,
      "avg_commits_per_week": 24.48076923076923,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:56:58.367536"
  }
}