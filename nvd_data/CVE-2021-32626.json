{
  "cve_id": "CVE-2021-32626",
  "github_data": {
    "repository": "redis/redis",
    "fix_commit": "666ed7facf4524bf6d19b11b20faa2cf93fdf591",
    "related_commits": [
      "666ed7facf4524bf6d19b11b20faa2cf93fdf591",
      "666ed7facf4524bf6d19b11b20faa2cf93fdf591"
    ],
    "patch_url": "https://github.com/redis/redis/commit/666ed7facf4524bf6d19b11b20faa2cf93fdf591.patch",
    "fix_commit_details": {
      "sha": "666ed7facf4524bf6d19b11b20faa2cf93fdf591",
      "commit_date": "2021-06-13T11:27:18Z",
      "author": {
        "login": "MeirShpilraien",
        "type": "User",
        "stats": {
          "total_commits": 84,
          "average_weekly_commits": 0.1016949152542373,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 56
        }
      },
      "commit_message": {
        "title": "Fix invalid memory write on lua stack overflow {CVE-2021-32626}",
        "length": 1443,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 41,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/scripting.c",
          "status": "modified",
          "additions": 41,
          "deletions": 0,
          "patch": "@@ -128,6 +128,16 @@ void sha1hex(char *digest, char *script, size_t len) {\n  */\n \n char *redisProtocolToLuaType(lua_State *lua, char* reply) {\n+\n+    if (!lua_checkstack(lua, 5)) {\n+        /*\n+         * Increase the Lua stack if needed, to make sure there is enough room\n+         * to push 5 elements to the stack. On failure, exit with panic.\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Notice that we need, in the worst case, 5 elements because redisProtocolToLuaType_Aggregate\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* might push 5 elements to the Lua stack.*/\n+        serverPanic(\"lua stack limit reach when parsing redis.call reply\");\n+    }\n+\n     char *p = reply;\n \n     switch(*p) {\n@@ -220,6 +230,11 @@ char *redisProtocolToLuaType_Aggregate(lua_State *lua, char *reply, int atype) {\n             if (atype == '%') {\n                 p = redisProtocolToLuaType(lua,p);\n             } else {\n+                if (!lua_checkstack(lua, 1)) {\n+                    /* Notice that here we need to check the stack again because the recursive\n+                     * call to redisProtocolToLuaType might have use the room allocated in the stack */\n+                    serverPanic(\"lua stack limit reach when parsing redis.call reply\");\n+                }\n                 lua_pushboolean(lua,1);\n             }\n             lua_settable(lua,-3);\n@@ -339,6 +354,17 @@ void luaSortArray(lua_State *lua) {\n /* Reply to client 'c' converting the top element in the Lua stack to a\n  * Redis reply. As a side effect the element is consumed from the stack.  */\n void luaReplyToRedisReply(client *c, lua_State *lua) {\n+\n+    if (!lua_checkstack(lua, 4)) {\n+        /* Increase the Lua stack if needed to make sure there is enough room\n+         * to push 4 elements to the stack. On failure, return error.\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Notice that we need, in the worst case, 4 elements because returning a map might\n+         * require push 4 elements to the Lua stack.*/\n+        addReplyErrorFormat(c, \"reached lua stack limit\");\n+        lua_pop(lua,1); // pop the element from the stack\n+        return;\n+    }\n+\n     int t = lua_type(lua,-1);\n \n     switch(t) {\n@@ -362,6 +388,7 @@ void luaReplyToRedisReply(client *c, lua_State *lua) {\n          * field. */\n \n         /* Handle error reply. */\n+        // we took care of the stack size on function start\n         lua_pushstring(lua,\"err\");\n         lua_gettable(lua,-2);\n         t = lua_type(lua,-1);\n@@ -407,6 +434,7 @@ void luaReplyToRedisReply(client *c, lua_State *lua) {\n         if (t == LUA_TTABLE) {\n             int maplen = 0;\n             void *replylen = addReplyDeferredLen(c);\n+            /* we took care of the stack size on function start */\n             lua_pushnil(lua); /* Use nil to start iteration. */\n             while (lua_next(lua,-2)) {\n                 /* Stack now: table, key, value */\n@@ -429,6 +457,7 @@ void luaReplyToRedisReply(client *c, lua_State *lua) {\n         if (t == LUA_TTABLE) {\n             int setlen = 0;\n             void *replylen = addReplyDeferredLen(c);\n+            /* we took care of the stack size on function start */\n             lua_pushnil(lua); /* Use nil to start iteration. */\n             while (lua_next(lua,-2)) {\n                 /* Stack now: table, key, true */\n@@ -448,6 +477,7 @@ void luaReplyToRedisReply(client *c, lua_State *lua) {\n         void *replylen = addReplyDeferredLen(c);\n         int j = 1, mbulklen = 0;\n         while(1) {\n+            /* we took care of the stack size on function start */\n             lua_pushnumber(lua,j++);\n             lua_gettable(lua,-2);\n             t = lua_type(lua,-1);\n@@ -2506,6 +2536,17 @@ void ldbEval(lua_State *lua, sds *argv, int argc) {\n void ldbRedis(lua_State *lua, sds *argv, int argc) {\n     int j, saved_rc = server.lua_replicate_commands;\n \n+    if (!lua_checkstack(lua, argc + 1)) {\n+        /* Increase the Lua stack if needed to make sure there is enough room\n+         * to push 'argc + 1' elements to the stack. On failure, return error.\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Notice that we need, in worst case, 'argc + 1' elements because we push all the arguments\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* given by the user (without the first argument) and we also push the 'redis' global table and\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* 'redis.call' function so:\n+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* (1 (redis table)) + (1 (redis.call function)) + (argc - 1 (all arguments without the first)) = argc + 1*/\n+        ldbLogRedisReply(\"max lua stack reached\");\n+        return;\n+    }\n+\n     lua_getglobal(lua,\"redis\");\n     lua_pushstring(lua,\"call\");\n     lua_gettable(lua,-2);       /* Stack: redis, redis.call */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f65806b5b0f21b96e9c688ce7d2d00062203a51",
            "date": "2025-01-14T09:30:18Z",
            "author_login": "sundb"
          },
          {
            "sha": "5b8b58e472fc567337429f63e93927f86db7f838",
            "date": "2025-01-14T07:51:05Z",
            "author_login": "ShooterIT"
          },
          {
            "sha": "342ee426ad0d0731b2272553bd4db2cd78e24772",
            "date": "2024-12-15T19:41:45Z",
            "author_login": "YaacovHazan"
          },
          {
            "sha": "4a95b3005a140165bbb9df373ba61f775c936554",
            "date": "2024-12-15T09:27:48Z",
            "author_login": "YaacovHazan"
          },
          {
            "sha": "73a9b916c9f42f2e07b9338a975f9a473ad0cd9b",
            "date": "2025-01-13T12:09:52Z",
            "author_login": "tezc"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-122",
    "description": "Redis is an open source, in-memory database that persists on disk. In affected versions specially crafted Lua scripts executing in Redis can cause the heap-based Lua stack to be overflowed, due to incomplete checks for this condition. This can result with heap corruption and potentially remote code execution. This problem exists in all versions of Redis with Lua scripting support, starting from 2.6. The problem is fixed in versions 6.2.6, 6.0.16 and 5.0.14. For users unable to update an additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-10-04T18:15:08.140",
    "last_modified": "2024-11-21T06:07:24.403",
    "fix_date": "2021-06-13T11:27:18Z"
  },
  "references": [
    {
      "url": "https://github.com/redis/redis/commit/666ed7facf4524bf6d19b11b20faa2cf93fdf591",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/redis/redis/security/advisories/GHSA-p486-xggp-782c",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r75490c61c2cb7b6ae2c81238fd52ae13636c60435abcd732d41531a0%40%3Ccommits.druid.apache.org%3E",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HTYQ5ZF37HNGTZWVNJD3VXP7I6MEEF42/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VL5KXFN3ATM7IIM7Q4O4PWTSRGZ5744Z/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WR5WKJWXD4D6S3DJCZ56V74ESLTDQRAB/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202209-17",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20211104-0003/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2021/dsa-5001",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/redis/redis/commit/666ed7facf4524bf6d19b11b20faa2cf93fdf591",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/redis/redis/security/advisories/GHSA-p486-xggp-782c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.apache.org/thread.html/r75490c61c2cb7b6ae2c81238fd52ae13636c60435abcd732d41531a0%40%3Ccommits.druid.apache.org%3E",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HTYQ5ZF37HNGTZWVNJD3VXP7I6MEEF42/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VL5KXFN3ATM7IIM7Q4O4PWTSRGZ5744Z/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WR5WKJWXD4D6S3DJCZ56V74ESLTDQRAB/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202209-17",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20211104-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2021/dsa-5001",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.806899",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "redis",
    "owner": "redis",
    "created_at": "2009-03-21T22:32:25Z",
    "updated_at": "2025-01-14T13:39:40Z",
    "pushed_at": "2025-01-14T13:24:52Z",
    "size": 142912,
    "stars": 67707,
    "forks": 23864,
    "open_issues": 2530,
    "watchers": 67707,
    "has_security_policy": false,
    "default_branch": "unstable",
    "protected_branches": [
      "2.2",
      "2.4",
      "2.6",
      "2.8",
      "3.0",
      "3.2",
      "4.0",
      "5.0",
      "6.0",
      "6.2",
      "7.0",
      "7.2",
      "7.4",
      "8.0",
      "LiorKogan-patch-1",
      "LiorKogan-patch-2",
      "acl-api-pr",
      "acl-log",
      "antiaffinity",
      "aofrdb",
      "argv-accounting",
      "arm",
      "client-unblock",
      "conduct",
      "cow-pipe",
      "csc2",
      "current-client-fix",
      "dict-clustered-entries",
      "dict-split-by-slot"
    ],
    "languages": {
      "C": 6937367,
      "Tcl": 2354158,
      "Python": 40222,
      "Makefile": 26062,
      "Shell": 23597,
      "Ruby": 23260,
      "C++": 5987,
      "Smarty": 1047,
      "JavaScript": 953
    },
    "commit_activity": {
      "total_commits_last_year": 425,
      "avg_commits_per_week": 8.173076923076923,
      "days_active_last_year": 171
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:05:59.165273"
  }
}