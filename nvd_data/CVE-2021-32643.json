{
  "cve_id": "CVE-2021-32643",
  "github_data": {
    "repository": "http4s/http4s",
    "fix_commit": "52e1890665410b4385e37b96bc49c5e3c708e4e9",
    "related_commits": [
      "52e1890665410b4385e37b96bc49c5e3c708e4e9",
      "52e1890665410b4385e37b96bc49c5e3c708e4e9"
    ],
    "patch_url": "https://github.com/http4s/http4s/commit/52e1890665410b4385e37b96bc49c5e3c708e4e9.patch",
    "fix_commit_details": {
      "sha": "52e1890665410b4385e37b96bc49c5e3c708e4e9",
      "commit_date": "2021-05-26T04:38:03Z",
      "author": {
        "login": "rossabaker",
        "type": "User",
        "stats": {
          "total_commits": 7497,
          "average_weekly_commits": 11.976038338658148,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 450
        }
      },
      "commit_message": {
        "title": "Fix directory leak in StaticFile.fromUrl",
        "length": 40,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 16,
        "deletions": 2
      },
      "files": [
        {
          "filename": "core/src/main/scala/org/http4s/StaticFile.scala",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -80,7 +80,7 @@ object StaticFile {\n     val fileUrl = url.getFile()\n     val file = new File(fileUrl)\n     OptionT.apply(F.defer {\n-      if (file.isDirectory())\n+      if (url.getProtocol === \"file\" && file.isDirectory)\n         F.pure(None)\n       else {\n         val urlConn = url.openConnection"
        },
        {
          "filename": "tests/src/test/scala/org/http4s/StaticFileSuite.scala",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -277,14 +277,28 @@ class StaticFileSuite extends Http4sSuite {\n     len.assertEquals(Some(24005L))\n   }\n \n-  test(\"return none from a URL that is a directory\") {\n+  test(\"return none from a file URL that is a directory\") {\n     // val url = getClass.getResource(\"/foo\")\n     StaticFile\n       .fromURL[IO](getClass.getResource(\"/foo\"), testBlocker)\n       .value\n       .assertEquals(None)\n   }\n \n+  test(\"not return none from an HTTP URL whose path is a directory\") {\n+    // We need a universal directory that also exists as a resource on\n+    // a server.  Creating a temp directory would be better, but then\n+    // we need an HTTP server that responds to a wildcard path.\n+    //\n+    // Or we can be lazy and just use `/`.\n+    assume(new File(\"/\").isDirectory, \"/ is not a directory\")\n+    StaticFile\n+      .fromURL[IO](new URL(\"https://github.com//\"), testBlocker)\n+      .value\n+      .map(_.fold(Status.NotFound)(_.status))\n+      .assertEquals(Status.Ok)\n+  }\n+\n   test(\"return none from a URL that points to a resource that does not exist\") {\n     StaticFile\n       .fromURL[IO](new URL(\"https://github.com/http4s/http4s/fooz\"), testBlocker)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3aace932e204b9743e2126ef5530df6d8af82d54",
            "date": "2025-01-07T09:14:14Z",
            "author_login": "danicheg"
          },
          {
            "sha": "76097664f2ea7270adde97bce8acd13b5699c43a",
            "date": "2025-01-07T07:52:33Z",
            "author_login": "http4s-steward[bot]"
          },
          {
            "sha": "ca015bcb4057cb1aa9ad1a6c96a1be16f61b6687",
            "date": "2025-01-07T06:18:09Z",
            "author_login": "danicheg"
          },
          {
            "sha": "0402f32f25e26f8f762aba4edf932707fed33caa",
            "date": "2025-01-05T16:11:33Z",
            "author_login": "http4s-steward[bot]"
          },
          {
            "sha": "ff1de6870bdf4fde47d70c6ecfa2a7d281251899",
            "date": "2025-01-02T17:30:09Z",
            "author_login": "rossabaker"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Http4s is a Scala interface for HTTP services. `StaticFile.fromUrl` can leak the presence of a directory on a server when the `URL` scheme is not `file://`, and the URL points to a fetchable resource under its scheme and authority. The function returns `F[None]`, indicating no resource, if `url.getFile` is a directory, without first checking the scheme or authority of the URL. If a URL connection to the scheme and URL would return a stream, and the path in the URL exists as a directory on the server, the presence of the directory on the server could be inferred from the 404 response. The contents and other metadata about the directory are not exposed. This affects http4s versions: 0.21.7 through 0.21.23, 0.22.0-M1 through 0.22.0-M8, 0.23.0-M1, and 1.0.0-M1 through 1.0.0-M22. The [patch](https://github.com/http4s/http4s/commit/52e1890665410b4385e37b96bc49c5e3c708e4e9) is available in the following versions: v0.21.24, v0.22.0-M9, v0.23.0-M2, v1.0.0-M23. As a workaround users can avoid calling `StaticFile.fromUrl` with non-file URLs.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-27T18:15:07.903",
    "last_modified": "2024-11-21T06:07:26.607",
    "fix_date": "2021-05-26T04:38:03Z"
  },
  "references": [
    {
      "url": "https://github.com/http4s/http4s/commit/52e1890665410b4385e37b96bc49c5e3c708e4e9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/http4s/http4s/security/advisories/GHSA-6h7w-fc84-x7p6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://mvnrepository.com/artifact/org.http4s/http4s-core",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/http4s/http4s/commit/52e1890665410b4385e37b96bc49c5e3c708e4e9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/http4s/http4s/security/advisories/GHSA-6h7w-fc84-x7p6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://mvnrepository.com/artifact/org.http4s/http4s-core",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.126802",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "http4s",
    "owner": "http4s",
    "created_at": "2012-03-12T04:41:20Z",
    "updated_at": "2025-01-07T09:14:19Z",
    "pushed_at": "2025-01-14T12:19:22Z",
    "size": 96040,
    "stars": 2559,
    "forks": 791,
    "open_issues": 335,
    "watchers": 2559,
    "has_security_policy": false,
    "default_branch": "series/0.23",
    "protected_branches": [
      "main",
      "release-0.15.x",
      "release-0.16.x",
      "release-0.17.x",
      "release-0.18.x",
      "series/0.20",
      "series/0.21",
      "series/0.22",
      "series/0.23"
    ],
    "languages": {
      "Scala": 3083537,
      "Nix": 1141,
      "HTML": 19,
      "Shell": 10
    },
    "commit_activity": {
      "total_commits_last_year": 538,
      "avg_commits_per_week": 10.346153846153847,
      "days_active_last_year": 175
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:42:45.569693"
  }
}