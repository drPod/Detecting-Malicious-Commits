{
  "cve_id": "CVE-2021-32662",
  "github_data": {
    "repository": "backstage/backstage",
    "fix_commit": "8cefadca04cbf01d0394b0cb1983247e5f1d6208",
    "related_commits": [
      "8cefadca04cbf01d0394b0cb1983247e5f1d6208",
      "8cefadca04cbf01d0394b0cb1983247e5f1d6208"
    ],
    "patch_url": "https://github.com/backstage/backstage/commit/8cefadca04cbf01d0394b0cb1983247e5f1d6208.patch",
    "fix_commit_details": {
      "sha": "8cefadca04cbf01d0394b0cb1983247e5f1d6208",
      "commit_date": "2021-05-20T12:03:42Z",
      "author": {
        "login": "Xantier",
        "type": "User",
        "stats": {
          "total_commits": 123,
          "average_weekly_commits": 0.47307692307692306,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 40
        }
      },
      "commit_message": {
        "title": "Add validation to prevent docs_dir from being an absolute path",
        "length": 375,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 67,
        "additions": 66,
        "deletions": 1
      },
      "files": [
        {
          "filename": ".changeset/gold-kings-jog.md",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+---\n+'@backstage/techdocs-common': patch\n+---\n+\n+Adding validation to mkdocs.yml parsing to prevent directory tree traversing"
        },
        {
          "filename": "packages/techdocs-common/src/stages/generate/__fixtures__/mkdocs_invalid_doc_dir.yml",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+site_name: Test site name\n+site_description: Test site description\n+docs_dir: /etc"
        },
        {
          "filename": "packages/techdocs-common/src/stages/generate/helpers.test.ts",
          "status": "modified",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -27,6 +27,7 @@ import {\n   isValidRepoUrlForMkdocs,\n   patchMkdocsYmlPreBuild,\n   storeEtagMetadata,\n+  validateMkdocsYaml,\n } from './helpers';\n \n const mockEntity = {\n@@ -43,6 +44,9 @@ const mkdocsYml = fs.readFileSync(\n const mkdocsYmlWithRepoUrl = fs.readFileSync(\n   resolvePath(__filename, '../__fixtures__/mkdocs_with_repo_url.yml'),\n );\n+const mkdocsYmlWithInvalidDocDir = fs.readFileSync(\n+  resolvePath(__filename, '../__fixtures__/mkdocs_invalid_doc_dir.yml'),\n+);\n const mockLogger = getVoidLogger();\n const rootDir = os.platform() === 'win32' ? 'C:\\\\rootDir' : '/rootDir';\n \n@@ -300,4 +304,28 @@ describe('helpers', () => {\n       expect(json.etag).toBe('etag123abc');\n     });\n   });\n+\n+  describe('validateMkdocsYaml', () => {\n+    beforeEach(() => {\n+      mockFs({\n+        '/mkdocs.yml': mkdocsYml,\n+        '/mkdocs_with_repo_url.yml': mkdocsYmlWithRepoUrl,\n+        '/mkdocs_invalid_doc_dir.yml': mkdocsYmlWithInvalidDocDir,\n+      });\n+    });\n+\n+    afterEach(() => {\n+      mockFs.restore();\n+    });\n+\n+    it('should return true on when no docs_dir present', async () => {\n+      await expect(validateMkdocsYaml('/mkdocs.yml')).resolves.toBeUndefined();\n+    });\n+\n+    it('should return false on absolute doc_dir path', async () => {\n+      await expect(\n+        validateMkdocsYaml('/mkdocs_invalid_doc_dir.yml'),\n+      ).rejects.toThrow();\n+    });\n+  });\n });"
        },
        {
          "filename": "packages/techdocs-common/src/stages/generate/helpers.ts",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -16,6 +16,7 @@\n \n import { Entity } from '@backstage/catalog-model';\n import { spawn } from 'child_process';\n+import { isAbsolute, normalize } from 'path';\n import fs from 'fs-extra';\n import yaml from 'js-yaml';\n import { PassThrough, Writable } from 'stream';\n@@ -138,6 +139,30 @@ export const getRepoUrlFromLocationAnnotation = (\n   return undefined;\n };\n \n+/**\n+ * Validating mkdocs config file for incorrect/insecure values\n+ * Throws on invalid configs\n+ *\n+ * @param {string} mkdocsYmlPath Absolute path to mkdocs.yml or equivalent of a docs site\n+ */\n+export const validateMkdocsYaml = async (mkdocsYmlPath: string) => {\n+  let mkdocsYmlFileString;\n+  try {\n+    mkdocsYmlFileString = await fs.readFile(mkdocsYmlPath, 'utf8');\n+  } catch (error) {\n+    throw new Error(\n+      `Could not read MkDocs YAML config file ${mkdocsYmlPath} before for validation: ${error.message}`,\n+    );\n+  }\n+\n+  const mkdocsYml: any = yaml.load(mkdocsYmlFileString);\n+  if (mkdocsYml.docs_dir && isAbsolute(normalize(mkdocsYml.docs_dir))) {\n+    throw new Error(\n+      \"docs_dir configuration value in mkdocs can't be an absolute directory path for security reasons. Use relative paths instead which are resolved relative to your mkdocs.yml file location.\",\n+    );\n+  }\n+};\n+\n /**\n  * Update the mkdocs.yml file before TechDocs generator uses it to generate docs site.\n  *"
        },
        {
          "filename": "packages/techdocs-common/src/stages/generate/techdocs.ts",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -24,6 +24,7 @@ import {\n   patchMkdocsYmlPreBuild,\n   runCommand,\n   storeEtagMetadata,\n+  validateMkdocsYaml,\n } from './helpers';\n import { GeneratorBase, GeneratorRunOptions } from './types';\n \n@@ -79,14 +80,17 @@ export class TechdocsGenerator implements GeneratorBase {\n     // TODO: In future mkdocs.yml can be mkdocs.yaml. So, use a config variable here to find out\n     // the correct file name.\n     // Do some updates to mkdocs.yml before generating docs e.g. adding repo_url\n+    const mkdocsYmlPath = path.join(inputDir, 'mkdocs.yml');\n     if (parsedLocationAnnotation) {\n       await patchMkdocsYmlPreBuild(\n-        path.join(inputDir, 'mkdocs.yml'),\n+        mkdocsYmlPath,\n         this.logger,\n         parsedLocationAnnotation,\n       );\n     }\n \n+    await validateMkdocsYaml(mkdocsYmlPath);\n+\n     // Directories to bind on container\n     const mountDirs = {\n       [inputDir]: '/input',"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f0faf9606ab91357c5c5b93cbe0e9e430224c71d",
            "date": "2025-01-14T13:26:18Z",
            "author_login": "Rugvip"
          },
          {
            "sha": "d49dcceea0dc7c7724b24a39129aa81946924bac",
            "date": "2025-01-14T13:23:56Z",
            "author_login": "Rugvip"
          },
          {
            "sha": "df0891d1d941d0e3fa4dd301bed33e3bfbe542a5",
            "date": "2025-01-14T11:00:23Z",
            "author_login": "Rugvip"
          },
          {
            "sha": "43f666371b2b5cf79bd22a4284b75344fc5aa655",
            "date": "2025-01-14T12:23:31Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "28705fb8f633091eada95acf268e8d75569737a3",
            "date": "2025-01-14T12:18:07Z",
            "author_login": "freben"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Backstage is an open platform for building developer portals, and techdocs-common contains common functionalities for Backstage's TechDocs. In `@backstage/techdocs-common` versions prior to 0.6.3, a malicious actor could read sensitive files from the environment where TechDocs documentation is built and published by setting a particular path for `docs_dir` in `mkdocs.yml`. These files would then be available over the TechDocs backend API. This vulnerability is mitigated by the fact that an attacker would need access to modify the `mkdocs.yml` in the documentation source code, and would also need access to the TechDocs backend API. The vulnerability is patched in the `0.6.3` release of `@backstage/techdocs-common`.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-03T22:15:07.873",
    "last_modified": "2024-11-21T06:07:28.987",
    "fix_date": "2021-05-20T12:03:42Z"
  },
  "references": [
    {
      "url": "https://github.com/backstage/backstage/commit/8cefadca04cbf01d0394b0cb1983247e5f1d6208",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backstage/backstage/releases/tag/release-2021-05-27",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backstage/backstage/security/advisories/GHSA-pgf8-28gg-vpr6",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backstage/backstage/commit/8cefadca04cbf01d0394b0cb1983247e5f1d6208",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backstage/backstage/releases/tag/release-2021-05-27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/backstage/backstage/security/advisories/GHSA-pgf8-28gg-vpr6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.139265",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "backstage",
    "owner": "backstage",
    "created_at": "2020-01-24T22:39:49Z",
    "updated_at": "2025-01-14T13:31:26Z",
    "pushed_at": "2025-01-14T13:31:36Z",
    "size": 10047272,
    "stars": 29010,
    "forks": 6175,
    "open_issues": 474,
    "watchers": 29010,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 19535758,
      "MDX": 476489,
      "JavaScript": 394933,
      "CSS": 289673,
      "Handlebars": 44288,
      "Mustache": 22733,
      "SCSS": 11090,
      "Dockerfile": 10872,
      "HTML": 10780,
      "Shell": 5657,
      "Makefile": 5185,
      "HCL": 1581,
      "PowerShell": 698
    },
    "commit_activity": {
      "total_commits_last_year": 13511,
      "avg_commits_per_week": 259.8269230769231,
      "days_active_last_year": 353
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:37:54.205572"
  }
}