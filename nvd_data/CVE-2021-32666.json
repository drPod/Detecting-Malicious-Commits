{
  "cve_id": "CVE-2021-32666",
  "github_data": {
    "repository": "wireapp/wire-ios",
    "fix_commit": "35af3f632085f51a2ce7f608fdaeffd1a69ad89f",
    "related_commits": [
      "35af3f632085f51a2ce7f608fdaeffd1a69ad89f",
      "35af3f632085f51a2ce7f608fdaeffd1a69ad89f"
    ],
    "patch_url": "https://github.com/wireapp/wire-ios/commit/35af3f632085f51a2ce7f608fdaeffd1a69ad89f.patch",
    "fix_commit_details": {
      "sha": "35af3f632085f51a2ce7f608fdaeffd1a69ad89f",
      "commit_date": "2021-05-07T12:24:03Z",
      "author": {
        "login": "typfel",
        "type": "User",
        "stats": {
          "total_commits": 2349,
          "average_weekly_commits": 5.073434125269978,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 276
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-789p-78mj-hfmc",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 27,
        "additions": 24,
        "deletions": 3
      },
      "files": [
        {
          "filename": "Source/Model/User/ZMUser.swift",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -250,20 +250,28 @@ extension ZMUser {\n     \n     public static var previewImageDownloadFilter: NSPredicate {\n         let assetIdExists = NSPredicate(format: \"(%K != nil)\", ZMUser.previewProfileAssetIdentifierKey)\n+        let assetIdIsValid = NSPredicate { (user, _) -> Bool in\n+            guard let user = user as? ZMUser else { return false }\n+            return user.previewProfileAssetIdentifier?.isValidAssetID ?? false\n+        }\n         let notCached = NSPredicate() { (user, _) -> Bool in\n             guard let user = user as? ZMUser else { return false }\n             return user.imageSmallProfileData == nil\n         }\n-        return NSCompoundPredicate(andPredicateWithSubpredicates: [assetIdExists, notCached])\n+        return NSCompoundPredicate(andPredicateWithSubpredicates: [assetIdExists, assetIdIsValid, notCached])\n     }\n-    \n+\n     public static var completeImageDownloadFilter: NSPredicate {\n         let assetIdExists = NSPredicate(format: \"(%K != nil)\", ZMUser.completeProfileAssetIdentifierKey)\n+        let assetIdIsValid = NSPredicate { (user, _) -> Bool in\n+            guard let user = user as? ZMUser else { return false }\n+            return user.completeProfileAssetIdentifier?.isValidAssetID ?? false\n+        }\n         let notCached = NSPredicate() { (user, _) -> Bool in\n             guard let user = user as? ZMUser else { return false }\n             return user.imageMediumData == nil\n         }\n-        return NSCompoundPredicate(andPredicateWithSubpredicates: [assetIdExists, notCached])\n+        return NSCompoundPredicate(andPredicateWithSubpredicates: [assetIdExists, assetIdIsValid, notCached])\n     }\n     \n     public func updateAndSyncProfileAssetIdentifiers(previewIdentifier: String, completeIdentifier: String) {"
        },
        {
          "filename": "Tests/Source/Model/User/ZMUserTests+Swift.swift",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -223,6 +223,19 @@ extension ZMUserTests_Swift {\n             XCTAssertFalse(predicate.evaluate(with: user))\n         }\n     }\n+\n+    func testThatCompleteImageDownloadFilterDoesNotPickUpUsersWithInvalidAssetId() {\n+        syncMOC.performGroupedBlockAndWait {\n+            // GIVEN\n+            let predicate = ZMUser.completeImageDownloadFilter\n+            let user = ZMUser(remoteID: UUID.create(), createIfNeeded: true, in: self.syncMOC)\n+            user?.completeProfileAssetIdentifier = \"not+valid+id\"\n+            user?.setImage(data: \"foo\".data(using: .utf8), size: .complete)\n+\n+            // THEN\n+            XCTAssertFalse(predicate.evaluate(with: user))\n+        }\n+    }\n     \n     func testThatPreviewImageDownloadFilterDoesNotPickUpUsersWithCachedImages() {\n         syncMOC.performGroupedBlockAndWait {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "480e9f2cd7dafb8b0fc6359689f4cff7a2a5293c",
            "date": "2025-01-14T11:23:53Z",
            "author_login": "netbe"
          },
          {
            "sha": "76cbca64ffed45db88600cbb0ae3b706aebdd4db",
            "date": "2025-01-10T09:26:16Z",
            "author_login": "caldrian"
          },
          {
            "sha": "db1b5e9da1d5803eacefea197889bd9d57409253",
            "date": "2025-01-10T09:14:17Z",
            "author_login": "caldrian"
          },
          {
            "sha": "c1d77fe5e9a0e10902f06bdd3d6655d1966db9f5",
            "date": "2025-01-10T09:06:29Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "a38e7d343b260bd1451686c4449ab44db582a556",
            "date": "2025-01-10T08:16:37Z",
            "author_login": "johnxnguyen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-20",
    "description": "wire-ios is the iOS version of Wire, an open-source secure messaging app. In wire-ios versions 3.8.0 and prior, a vulnerability exists that can cause a denial of service between users. If a user has an invalid assetID for their profile picture and it contains the \" character, it will cause the iOS client to crash. The vulnerability is patched in wire-ios version 3.8.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-03T22:15:08.067",
    "last_modified": "2024-11-21T06:07:29.430",
    "fix_date": "2021-05-07T12:24:03Z"
  },
  "references": [
    {
      "url": "https://github.com/wireapp/wire-ios-data-model/commit/35af3f632085f51a2ce7f608fdaeffd1a69ad89f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wireapp/wire-ios/security/advisories/GHSA-2x9x-vh27-h4rv",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wireapp/wire-ios-data-model/commit/35af3f632085f51a2ce7f608fdaeffd1a69ad89f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wireapp/wire-ios/security/advisories/GHSA-2x9x-vh27-h4rv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.139417",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wire-ios",
    "owner": "wireapp",
    "created_at": "2022-12-22T10:26:59Z",
    "updated_at": "2025-01-14T11:54:19Z",
    "pushed_at": "2025-01-14T11:55:23Z",
    "size": 1664518,
    "stars": 74,
    "forks": 15,
    "open_issues": 28,
    "watchers": 74,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "chore/add-sz-app",
      "develop",
      "epic/prepare-for-universal-backups-WPB-14616"
    ],
    "languages": {
      "Swift": 21138814,
      "Objective-C": 3355652,
      "Ruby": 40970,
      "C": 25452,
      "Shell": 19696,
      "Python": 853
    },
    "commit_activity": {
      "total_commits_last_year": 1669,
      "avg_commits_per_week": 32.09615384615385,
      "days_active_last_year": 237
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:37:27.324669"
  }
}