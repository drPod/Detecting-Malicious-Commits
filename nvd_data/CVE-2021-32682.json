{
  "cve_id": "CVE-2021-32682",
  "github_data": {
    "repository": "Studio-42/elFinder",
    "fix_commit": "a106c350b7dfe666a81d6b576816db9fe0899b17",
    "related_commits": [
      "a106c350b7dfe666a81d6b576816db9fe0899b17",
      "a106c350b7dfe666a81d6b576816db9fe0899b17"
    ],
    "patch_url": "https://github.com/Studio-42/elFinder/commit/a106c350b7dfe666a81d6b576816db9fe0899b17.patch",
    "fix_commit_details": {
      "sha": "a106c350b7dfe666a81d6b576816db9fe0899b17",
      "commit_date": "2021-06-13T14:38:02Z",
      "author": {
        "login": "nao-pon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-wph3-44rj-92pr",
        "length": 346,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 272,
        "additions": 195,
        "deletions": 77
      },
      "files": [
        {
          "filename": "php/elFinder.class.php",
          "status": "modified",
          "additions": 153,
          "deletions": 60,
          "patch": "@@ -419,6 +419,21 @@ class elFinder\n      */\n     protected $removeContentSaveIds = array();\n \n+    /**\n+     * LAN class allowed when uploading via URL\n+     * \n+     * Array keys are 'local', 'private_a', 'private_b', 'private_c' and 'link'\n+     * \n+     * local:     127.0.0.0/8\n+     * private_a: 10.0.0.0/8\n+     * private_b: 172.16.0.0/12\n+     * private_c: 192.168.0.0/16\n+     * link:      169.254.0.0/16\n+     *\n+     * @var        array\n+     */\n+    protected $uploadAllowedLanIpClasses = array();\n+\n     /**\n      * Flag of throw Error on exec()\n      *\n@@ -713,6 +728,10 @@ public function __construct($opts)\n             $this->itemLockExpire = intval($opts['itemLockExpire']);\n         }\n \n+        if (!empty($opts['uploadAllowedLanIpClasses'])) {\n+            $this->uploadAllowedLanIpClasses = array_flip($opts['uploadAllowedLanIpClasses']);\n+        }\n+\n         // deprecated settings\n         $this->netVolumesSessionKey = !empty($opts['netVolumesSessionKey']) ? $opts['netVolumesSessionKey'] : 'elFinderNetVolumes';\n         self::$sessionCacheKey = !empty($opts['sessionCacheKey']) ? $opts['sessionCacheKey'] : 'elFinderCaches';\n@@ -2524,16 +2543,87 @@ protected function abort($args = array())\n         }\n         $flagFile = elFinder::$connectionFlagsPath . DIRECTORY_SEPARATOR . 'elfreq%s';\n         if (!empty($args['makeFile'])) {\n-            self::$abortCheckFile = sprintf($flagFile, $args['makeFile']);\n+            self::$abortCheckFile = sprintf($flagFile, self::filenameDecontaminate($args['makeFile']));\n             touch(self::$abortCheckFile);\n             $GLOBALS['elFinderTempFiles'][self::$abortCheckFile] = true;\n             return;\n         }\n \n-        $file = !empty($args['id']) ? sprintf($flagFile, $args['id']) : self::$abortCheckFile;\n+        $file = !empty($args['id']) ? sprintf($flagFile, self::filenameDecontaminate($args['id'])) : self::$abortCheckFile;\n         $file && is_file($file) && unlink($file);\n     }\n \n+    /**\n+     * Validate an URL to prevent SSRF attacks.\n+     *\n+     * To prevent any risk of DNS rebinding, always use the IP address resolved by\n+     * this method, as returned in the array entry `ip`.\n+     *\n+     * @param string $url\n+     *\n+     * @return false|array\n+     */\n+    protected function validate_address($url)\n+    {\n+        $info = parse_url($url);\n+        $host = trim(strtolower($info['host']), '.');\n+        // do not support IPv6 address\n+        if (preg_match('/^\\[.*\\]$/', $host)) {\n+            return false;\n+        }\n+        // do not support non dot host\n+        if (strpos($host, '.') === false) {\n+            return false;\n+        }\n+        // do not support URL-encoded host\n+        if (strpos($host, '%') !== false) {\n+            return false;\n+        }\n+        // disallow including \"localhost\" and \"localdomain\"\n+        if (preg_match('/\\b(?:localhost|localdomain)\\b/', $host)) {\n+            return false;\n+        }\n+        // check IPv4 local loopback, private network and link local\n+        $ip = gethostbyname($host);\n+        if (preg_match('/^0x[0-9a-f]+|[0-9]+(?:\\.(?:0x[0-9a-f]+|[0-9]+)){1,3}$/', $ip, $m)) {\n+            $long = (int)sprintf('%u', ip2long($ip));\n+            if (!$long) {\n+                return false;\n+            }\n+            $local = (int)sprintf('%u', ip2long('127.255.255.255')) >> 24;\n+            $prv1  = (int)sprintf('%u', ip2long('10.255.255.255')) >> 24;\n+            $prv2  = (int)sprintf('%u', ip2long('172.31.255.255')) >> 20;\n+            $prv3  = (int)sprintf('%u', ip2long('192.168.255.255')) >> 16;\n+            $link  = (int)sprintf('%u', ip2long('169.254.255.255')) >> 16;\n+\n+            if (!isset($this->uploadAllowedLanIpClasses['local']) && $long >> 24 === $local) {\n+                return false;\n+            }\n+            if (!isset($this->uploadAllowedLanIpClasses['private_a']) && $long >> 24 === $prv1) {\n+                return false;\n+            }\n+            if (!isset($this->uploadAllowedLanIpClasses['private_b']) && $long >> 20 === $prv2) {\n+                return false;\n+            }\n+            if (!isset($this->uploadAllowedLanIpClasses['private_c']) && $long >> 16 === $prv3) {\n+                return false;\n+            }\n+            if (!isset($this->uploadAllowedLanIpClasses['link']) && $long >> 16 === $link) {\n+                return false;\n+            }\n+            $info['ip'] = long2ip($long);\n+            if (!isset($info['port'])) {\n+                $info['port'] = $info['scheme'] === 'https' ? 443 : 80;\n+            }\n+            if (!isset($info['path'])) {\n+                $info['path'] = '/';\n+            }\n+            return $info;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n     /**\n      * Get remote contents\n      *\n@@ -2552,54 +2642,20 @@ protected function abort($args = array())\n     protected function get_remote_contents(&$url, $timeout = 30, $redirect_max = 5, $ua = 'Mozilla/5.0', $fp = null)\n     {\n         if (preg_match('~^(?:ht|f)tps?://[-_.!\\~*\\'()a-z0-9;/?:\\@&=+\\$,%#\\*\\[\\]]+~i', $url)) {\n-            $info = parse_url($url);\n-            $host = trim(strtolower($info['host']), '.');\n-            // do not support IPv6 address\n-            if (preg_match('/^\\[.*\\]$/', $host)) {\n-                return false;\n-            }\n-            // do not support non dot host\n-            if (strpos($host, '.') === false) {\n-                return false;\n-            }\n-            // do not support URL-encoded host\n-            if (strpos($host, '%') !== false) {\n+            $info = $this->validate_address($url);\n+            if ($info === false) {\n                 return false;\n             }\n-            // disallow including \"localhost\" and \"localdomain\"\n-            if (preg_match('/\\b(?:localhost|localdomain)\\b/', $host)) {\n-                return false;\n-            }\n-            // wildcard DNS (e.g xip.io)\n-            if (preg_match('/0x[0-9a-f]+|[0-9]+(?:\\.(?:0x[0-9a-f]+|[0-9]+)){1,3}/', $host)) {\n-                $host = gethostbyname($host);\n-            }\n-            // check IPv4 local loopback, private network and link local\n-            if (preg_match('/^0x[0-9a-f]+|[0-9]+(?:\\.(?:0x[0-9a-f]+|[0-9]+)){1,3}$/', $host, $m)) {\n-                $long = (int)sprintf('%u', ip2long($host));\n-                if (!$long) {\n-                    return false;\n-                }\n-                $local = (int)sprintf('%u', ip2long('127.255.255.255')) >> 24;\n-                $prv1 = (int)sprintf('%u', ip2long('10.255.255.255')) >> 24;\n-                $prv2 = (int)sprintf('%u', ip2long('172.31.255.255')) >> 20;\n-                $prv3 = (int)sprintf('%u', ip2long('192.168.255.255')) >> 16;\n-                $link = (int)sprintf('%u', ip2long('169.254.255.255')) >> 16;\n-\n-                if ($long >> 24 === $local || $long >> 24 === $prv1 || $long >> 20 === $prv2 || $long >> 16 === $prv3 || $long >> 16 === $link) {\n-                    return false;\n-                }\n-            }\n             // dose not support 'user' and 'pass' for security reasons\n-            $url = $info['scheme'].'://'.$host.(!empty($info['port'])? (':'.$info['port']) : '').$info['path'].(!empty($info['query'])? ('?'.$info['query']) : '').(!empty($info['fragment'])? ('#'.$info['fragment']) : '');\n+            $url = $info['scheme'].'://'.$info['host'].(!empty($info['port'])? (':'.$info['port']) : '').$info['path'].(!empty($info['query'])? ('?'.$info['query']) : '').(!empty($info['fragment'])? ('#'.$info['fragment']) : '');\n             // check by URL upload filter\n             if ($this->urlUploadFilter && is_callable($this->urlUploadFilter)) {\n                 if (!call_user_func_array($this->urlUploadFilter, array($url, $this))) {\n                     return false;\n                 }\n             }\n-            $method = (function_exists('curl_exec') && !ini_get('safe_mode') && !ini_get('open_basedir')) ? 'curl_get_contents' : 'fsock_get_contents';\n-            return $this->$method($url, $timeout, $redirect_max, $ua, $fp);\n+            $method = (function_exists('curl_exec')) ? 'curl_get_contents' : 'fsock_get_contents';\n+            return $this->$method($url, $timeout, $redirect_max, $ua, $fp, $info);\n         }\n         return false;\n     }\n@@ -2619,8 +2675,11 @@ protected function get_remote_contents(&$url, $timeout = 30, $redirect_max = 5,\n      * @retval false  error\n      * @author Naoki Sawada\n      **/\n-    protected function curl_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp)\n+    protected function curl_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp, $info)\n     {\n+        if ($redirect_max == 0) {\n+            return false;\n+        }\n         $ch = curl_init();\n         curl_setopt($ch, CURLOPT_URL, $url);\n         curl_setopt($ch, CURLOPT_HEADER, false);\n@@ -2633,11 +2692,19 @@ protected function curl_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp\n         curl_setopt($ch, CURLOPT_LOW_SPEED_LIMIT, 1);\n         curl_setopt($ch, CURLOPT_LOW_SPEED_TIME, $timeout);\n         curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n-        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\n-        curl_setopt($ch, CURLOPT_MAXREDIRS, $redirect_max);\n+        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, false);\n         curl_setopt($ch, CURLOPT_USERAGENT, $ua);\n+        curl_setopt($ch, CURLOPT_RESOLVE, [$info['host'] . ':' . $info['port'] . ':' . $info['ip']]);\n         $result = curl_exec($ch);\n-        $url = curl_getinfo($ch, CURLINFO_EFFECTIVE_URL);\n+        $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n+        if ($http_code == 301 || $http_code == 302) {\n+            $new_url = curl_getinfo($ch, CURLINFO_REDIRECT_URL);\n+            $info = $this->validate_address($new_url);\n+            if ($info === false) {\n+                return false;\n+            }\n+            return $this->curl_get_contents($new_url, $timeout, $redirect_max - 1, $ua, $outfp, $info);\n+        }\n         curl_close($ch);\n         return $outfp ? $outfp : $result;\n     }\n@@ -2658,7 +2725,7 @@ protected function curl_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp\n      * @throws elFinderAbortException\n      * @author Naoki Sawada\n      */\n-    protected function fsock_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp)\n+    protected function fsock_get_contents(&$url, $timeout, $redirect_max, $ua, $outfp, $info)\n     {\n         $connect_timeout = 3;\n         $connect_try = 3;\n@@ -2669,22 +2736,15 @@ protected function fsock_get_contents(&$url, $timeout, $redirect_max, $ua, $outf\n         $getSize = null;\n         $headers = '';\n \n-        $arr = parse_url($url);\n-        if (!$arr) {\n-            // Bad request\n-            return false;\n-        }\n+        $arr = $info;\n         if ($arr['scheme'] === 'https') {\n             $ssl = 'ssl://';\n         }\n \n         // query\n         $arr['query'] = isset($arr['query']) ? '?' . $arr['query'] : '';\n-        // port\n-        $port = isset($arr['port']) ? $arr['port'] : '';\n-        $arr['port'] = $port ? $port : ($ssl ? 443 : 80);\n \n-        $url_base = $arr['scheme'] . '://' . $arr['host'] . ($port ? (':' . $port) : '');\n+        $url_base = $arr['scheme'] . '://' . $info['host'] . ':' . $info['port'];\n         $url_path = isset($arr['path']) ? $arr['path'] : '/';\n         $uri = $url_path . $arr['query'];\n \n@@ -2765,7 +2825,11 @@ protected function fsock_get_contents(&$url, $timeout, $redirect_max, $ua, $outf\n                         sleep(1);\n                     }\n                     fclose($fp);\n-                    return $this->fsock_get_contents($url, $timeout, $redirect_max, $ua, $outfp);\n+                    $info = $this->validate_address($url);\n+                    if ($info === false) {\n+                        return false;\n+                    }\n+                    return $this->fsock_get_contents($url, $timeout, $redirect_max, $ua, $outfp, $info);\n                 }\n                 break;\n             case 200:\n@@ -3831,7 +3895,8 @@ protected function archive($args)\n         $targets = isset($args['targets']) && is_array($args['targets']) ? $args['targets'] : array();\n         $name = isset($args['name']) ? $args['name'] : '';\n \n-        if (($volume = $this->volume($targets[0])) == false) {\n+        $targets = array_filter($targets, array($this, 'volume'));\n+        if (!$targets || ($volume = $this->volume($targets[0])) === false) {\n             return $this->error(self::ERROR_ARCHIVE, self::ERROR_TRGDIR_NOT_FOUND);\n         }\n \n@@ -4339,7 +4404,7 @@ protected function itemLocked($hash)\n         if (!elFinder::$commonTempPath) {\n             return false;\n         }\n-        $lock = elFinder::$commonTempPath . DIRECTORY_SEPARATOR . $hash . '.lock';\n+        $lock = elFinder::$commonTempPath . DIRECTORY_SEPARATOR . self::filenameDecontaminate($hash) . '.lock';\n         if (file_exists($lock)) {\n             if (filemtime($lock) + $this->itemLockExpire < time()) {\n                 unlink($lock);\n@@ -4368,7 +4433,7 @@ protected function itemLock($hashes, $autoUnlock = true)\n             $hashes = array($hashes);\n         }\n         foreach ($hashes as $hash) {\n-            $lock = elFinder::$commonTempPath . DIRECTORY_SEPARATOR . $hash . '.lock';\n+            $lock = elFinder::$commonTempPath . DIRECTORY_SEPARATOR . self::filenameDecontaminate($hash) . '.lock';\n             if ($this->itemLocked($hash)) {\n                 $cnt = file_get_contents($lock) + 1;\n             } else {\n@@ -4519,6 +4584,16 @@ public static function getApiFullVersion()\n         return (string)self::$ApiVersion . '.' . (string)self::$ApiRevision;\n     }\n \n+    /**\n+     * Return self::$commonTempPath\n+     *\n+     * @return     string  The common temporary path.\n+     */\n+    public static function getCommonTempPath()\n+    {\n+        return self::$commonTempPath;\n+    }\n+\n     /**\n      * Return Is Animation Gif\n      *\n@@ -5104,6 +5179,24 @@ public static function expandMemoryForGD($imgInfos)\n         }\n     }\n \n+    /**\n+     * Decontaminate of filename\n+     *\n+     * @param      String  $name   The name\n+     *\n+     * @return     String  Decontaminated filename\n+     */\n+    public static function filenameDecontaminate($name)\n+    {\n+        // Directory traversal defense\n+        if (DIRECTORY_SEPARATOR === '\\\\') {\n+            $name = str_replace('\\\\', '/', $name);\n+        }\n+        $parts = explode('/', trim($name, '/'));\n+        $name = array_pop($parts); \n+        return $name;\n+    }\n+\n     /**\n      * Execute shell command\n      *\n@@ -5279,4 +5372,4 @@ class elFinderAbortException extends Exception\n \n class elFinderTriggerException extends Exception\n {\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "php/elFinderVolumeDriver.class.php",
          "status": "modified",
          "additions": 13,
          "deletions": 7,
          "patch": "@@ -5451,7 +5451,7 @@ protected function remove($path, $force = false)\n         $stat = $this->stat($path);\n \n         if (empty($stat)) {\n-            return $this->setError(elFinder::ERROR_RM, $path, elFinder::ERROR_FILE_NOT_FOUND);\n+            return $this->setError(elFinder::ERROR_RM, $this->relpathCE($path), elFinder::ERROR_FILE_NOT_FOUND);\n         }\n \n         $stat['realpath'] = $path;\n@@ -6727,7 +6727,7 @@ protected function getArchivers($use_cache = true)\n             unset($o);\n             $this->procExec(ELFINDER_RAR_PATH, $o, $c);\n             if ($c == 0 || $c == 7) {\n-                $arcs['create']['application/x-rar'] = array('cmd' => ELFINDER_RAR_PATH, 'argc' => 'a -inul' . (defined('ELFINDER_RAR_MA4') && ELFINDER_RAR_MA4? ' -ma4' : ''), 'ext' => 'rar');\n+                $arcs['create']['application/x-rar'] = array('cmd' => ELFINDER_RAR_PATH, 'argc' => 'a -inul' . (defined('ELFINDER_RAR_MA4') && ELFINDER_RAR_MA4? ' -ma4' : '') . ' --', 'ext' => 'rar');\n             }\n             unset($o);\n             $this->procExec(ELFINDER_UNRAR_PATH, $o, $c);\n@@ -6737,17 +6737,17 @@ protected function getArchivers($use_cache = true)\n             unset($o);\n             $this->procExec(ELFINDER_7Z_PATH, $o, $c);\n             if ($c == 0) {\n-                $arcs['create']['application/x-7z-compressed'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a', 'ext' => '7z');\n+                $arcs['create']['application/x-7z-compressed'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a --', 'ext' => '7z');\n                 $arcs['extract']['application/x-7z-compressed'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'x -y', 'ext' => '7z', 'toSpec' => '-o', 'getsize' => array('argc' => 'l', 'regex' => '/^.+(?:\\r\\n|\\n|\\r)[^\\r\\n0-9]+([0-9]+)[^\\r\\n]+$/s', 'replace' => '$1'));\n \n                 if (empty($arcs['create']['application/zip'])) {\n-                    $arcs['create']['application/zip'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a -tzip', 'ext' => 'zip');\n+                    $arcs['create']['application/zip'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a -tzip --', 'ext' => 'zip');\n                 }\n                 if (empty($arcs['extract']['application/zip'])) {\n                     $arcs['extract']['application/zip'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'x -tzip -y', 'ext' => 'zip', 'toSpec' => '-o', 'getsize' => array('argc' => 'l', 'regex' => '/^.+(?:\\r\\n|\\n|\\r)[^\\r\\n0-9]+([0-9]+)[^\\r\\n]+$/s', 'replace' => '$1'));\n                 }\n                 if (empty($arcs['create']['application/x-tar'])) {\n-                    $arcs['create']['application/x-tar'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a -ttar', 'ext' => 'tar');\n+                    $arcs['create']['application/x-tar'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'a -ttar --', 'ext' => 'tar');\n                 }\n                 if (empty($arcs['extract']['application/x-tar'])) {\n                     $arcs['extract']['application/x-tar'] = array('cmd' => ELFINDER_7Z_PATH, 'argc' => 'x -ttar -y', 'ext' => 'tar', 'toSpec' => '-o', 'getsize' => array('argc' => 'l', 'regex' => '/^.+(?:\\r\\n|\\n|\\r)[^\\r\\n0-9]+([0-9]+)[^\\r\\n]+$/s', 'replace' => '$1'));\n@@ -6872,8 +6872,14 @@ protected function makeArchive($dir, $files, $name, $arc)\n                     $files[$i] = '.' . DIRECTORY_SEPARATOR . basename($file);\n                 }\n                 $files = array_map('escapeshellarg', $files);\n-\n-                $cmd = $arc['cmd'] . ' ' . $arc['argc'] . ' ' . escapeshellarg($name) . ' ' . implode(' ', $files);\n+                $prefix = $switch = '';\n+                // The zip command accepts the \"-\" at the beginning of the file name as a command switch,\n+                // and can't use '--' before archive name, so add \"./\" to name for security reasons.\n+                if ($arc['ext'] === 'zip' && strpos($arc['argc'], '-tzip') === false) {\n+                    $prefix = './';\n+                    $switch = '-- ';\n+                }\n+                $cmd = $arc['cmd'] . ' ' . $arc['argc'] . ' ' . $prefix . escapeshellarg($name) . ' ' . $switch . implode(' ', $files);\n                 $err_out = '';\n                 $this->procExec($cmd, $o, $c, $err_out, $dir);\n                 chdir($cwd);"
        },
        {
          "filename": "php/elFinderVolumeLocalFileSystem.class.php",
          "status": "modified",
          "additions": 24,
          "deletions": 5,
          "patch": "@@ -75,7 +75,6 @@ public function __construct()\n         $this->options['alias'] = '';              // alias to replace root dir name\n         $this->options['dirMode'] = 0755;            // new dirs mode\n         $this->options['fileMode'] = 0644;            // new files mode\n-        $this->options['quarantine'] = '.quarantine'; // quarantine folder name - required to check archive (must be hidden)\n         $this->options['rootCssClass'] = 'elfinder-navbar-root-local';\n         $this->options['followSymLinks'] = true;\n         $this->options['detectDirIcon'] = '';         // file name that is detected as a folder icon e.g. '.diricon.png'\n@@ -172,14 +171,20 @@ protected function configure()\n             }\n         }\n         // check quarantine path\n+        $_quarantine = '';\n         if (!empty($this->options['quarantine'])) {\n             if (strpos($this->options['quarantine'], DIRECTORY_SEPARATOR) === false) {\n-                $hiddens['quarantine'] = $this->options['quarantine'];\n-                $this->options['quarantine'] = $this->_abspath($this->options['quarantine']);\n+                //$hiddens['quarantine'] = $this->options['quarantine'];\n+                //$this->options['quarantine'] = $this->_abspath($this->options['quarantine']);\n+                $_quarantine = $this->_abspath($this->options['quarantine']);\n+                $this->options['quarantine'] = '';\n             } else {\n                 $this->options['quarantine'] = $this->_normpath($this->options['quarantine']);\n             }\n+        } else {\n+            $_quarantine = $this->_abspath('.quarantine');\n         }\n+        is_dir($_quarantine) && self::localRmdirRecursive($_quarantine);\n \n         parent::configure();\n \n@@ -223,6 +228,8 @@ protected function configure()\n                     unset($hiddens['quarantine']);\n                 }\n             }\n+        } else if ($_path = elFinder::getCommonTempPath()) {\n+            $this->quarantine = $_path;\n         }\n \n         if (!$this->quarantine) {\n@@ -346,7 +353,20 @@ protected function _basename($path)\n      **/\n     protected function _joinPath($dir, $name)\n     {\n-        return rtrim($dir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $name;\n+        $dir = rtrim($dir, DIRECTORY_SEPARATOR);\n+        $path = realpath($dir . DIRECTORY_SEPARATOR . $name);\n+        // realpath() returns FALSE if the file does not exist\n+        if ($path === false || strpos($path, $this->root) !== 0) {\n+            if (DIRECTORY_SEPARATOR !== '/') {\n+                $name = str_replace('/', DIRECTORY_SEPARATOR, $name);\n+            }\n+            // Directory traversal measures\n+            if (strpos($name, '..' . DIRECTORY_SEPARATOR) !== false) {\n+                $name = basename($name);\n+            }\n+            $path = $dir . DIRECTORY_SEPARATOR . $name;\n+        }\n+        return $path; \n     }\n \n     /**\n@@ -1439,4 +1459,3 @@ protected function localFileSystemSymlink($target, $link)\n         return $res;\n     }\n } // END class \n-"
        },
        {
          "filename": "php/elFinderVolumeSFTPphpseclib.class.php",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -581,7 +581,7 @@ protected function _fclose($fp, $path = '')\n      **/\n     protected function _mkdir($path, $name)\n     {\n-        $path = $this->_joinPath($path, $name);\n+        $path = $this->_joinPath($path, $this->_basename($name));\n         if ($this->connect->mkdir($path) === false) {\n             return false;\n         }\n@@ -601,7 +601,7 @@ protected function _mkdir($path, $name)\n      **/\n     protected function _mkfile($path, $name)\n     {\n-        $path = $this->_joinPath($path, $name);\n+        $path = $this->_joinPath($path, $this->_basename($name));\n         return $this->connect->put($path, '') ? $path : false;\n /*\n         if ($this->tmp) {\n@@ -630,7 +630,7 @@ protected function _copy($source, $targetDir, $name)\n     {\n         $res = false;\n \n-        $target = $this->_joinPath($targetDir, $name);\n+        $target = $this->_joinPath($targetDir, $this->_basename($name));\n         if ($this->tmp) {\n             $local = $this->getTempFile();\n \n@@ -661,7 +661,7 @@ protected function _copy($source, $targetDir, $name)\n      */\n     protected function _move($source, $targetDir, $name)\n     {\n-        $target = $this->_joinPath($targetDir, $name);\n+        $target = $this->_joinPath($targetDir, $this->_basename($name));\n         return $this->connect->rename($source, $target) ? $target : false;\n     }\n \n@@ -706,7 +706,7 @@ protected function _rmdir($path)\n     protected function _save($fp, $dir, $name, $stat)\n     {\n         //TODO optionally encrypt $fp before uploading if mime is not already encrypted type\n-        $path = $this->_joinPath($dir, $name);\n+        $path = $this->_joinPath($dir, $this->_basename($name));\n         return $this->connect->put($path, $fp)\n             ? $path\n             : false;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7544918a2ba656a4fe72a6fc8bb502d39f601cda",
            "date": "2024-12-05T12:55:50Z",
            "author_login": "nao-pon"
          },
          {
            "sha": "7084b550a7ed2b25a667ca308ae368bcef64f214",
            "date": "2024-12-03T15:45:25Z",
            "author_login": "nao-pon"
          },
          {
            "sha": "6bd50c285c29d29ece5f026f04b4e5cadb826e42",
            "date": "2024-12-03T15:41:19Z",
            "author_login": "nao-pon"
          },
          {
            "sha": "e111f903acd6b0e3f111761acd7f73bd38b0c7d1",
            "date": "2024-12-03T15:35:45Z",
            "author_login": "blutorange"
          },
          {
            "sha": "136bf428d6043b83ff8563eb216a532e5482a47f",
            "date": "2024-12-03T14:09:34Z",
            "author_login": "nao-pon"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "elFinder is an open-source file manager for web, written in JavaScript using jQuery UI. Several vulnerabilities affect elFinder 2.1.58. These vulnerabilities can allow an attacker to execute arbitrary code and commands on the server hosting the elFinder PHP connector, even with minimal configuration. The issues were patched in version 2.1.59. As a workaround, ensure the connector is not exposed without authentication.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-14T17:15:07.643",
    "last_modified": "2024-11-21T06:07:31.390",
    "fix_date": "2021-06-13T14:38:02Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/164173/elFinder-Archive-Command-Injection.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blog.sonarsource.com/elfinder-case-study-of-web-file-manager-vulnerabilities/",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Studio-42/elFinder/commit/a106c350b7dfe666a81d6b576816db9fe0899b17",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Studio-42/elFinder/security/advisories/GHSA-wph3-44rj-92pr",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/164173/elFinder-Archive-Command-Injection.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://blog.sonarsource.com/elfinder-case-study-of-web-file-manager-vulnerabilities/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Studio-42/elFinder/commit/a106c350b7dfe666a81d6b576816db9fe0899b17",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Studio-42/elFinder/security/advisories/GHSA-wph3-44rj-92pr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.732185",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "elFinder",
    "owner": "Studio-42",
    "created_at": "2010-11-19T18:05:06Z",
    "updated_at": "2025-01-14T11:20:45Z",
    "pushed_at": "2024-12-05T13:15:29Z",
    "size": 41654,
    "stars": 4661,
    "forks": 1421,
    "open_issues": 10,
    "watchers": 4661,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 2298493,
      "PHP": 999517,
      "CSS": 135750,
      "HTML": 25573
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:06:45.008490"
  }
}