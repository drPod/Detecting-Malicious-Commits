{
  "cve_id": "CVE-2021-32697",
  "github_data": {
    "repository": "neos/form",
    "fix_commit": "049d415295be8d4a0478ccba97dba1bb81649567",
    "related_commits": [
      "049d415295be8d4a0478ccba97dba1bb81649567",
      "69de4219b1f58157e2be6b05811463875d75c246",
      "049d415295be8d4a0478ccba97dba1bb81649567",
      "69de4219b1f58157e2be6b05811463875d75c246"
    ],
    "patch_url": "https://github.com/neos/form/commit/049d415295be8d4a0478ccba97dba1bb81649567.patch",
    "fix_commit_details": {
      "sha": "049d415295be8d4a0478ccba97dba1bb81649567",
      "commit_date": "2013-10-23T18:36:24Z",
      "author": {
        "login": "skurfuerst",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[BUGFIX] fix reconstituting a form from its internal state",
        "length": 267,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 51,
        "additions": 49,
        "deletions": 2
      },
      "files": [
        {
          "filename": "Classes/TYPO3/Form/Core/Runtime/FormRuntime.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -146,7 +146,7 @@ public function initializeObject() {\n \t\t$this->initializeFormStateFromRequest();\n \t\t$this->initializeCurrentPageFromRequest();\n \n-\t\tif (!$this->isFirstRequest()) {\n+\t\tif (!$this->isFirstRequest() && $this->getRequest()->getHttpRequest()->getMethod() === 'POST') {\n \t\t\t$this->processSubmittedFormValues();\n \t\t}\n \t}"
        },
        {
          "filename": "Tests/Functional/SimpleFormTest.php",
          "status": "modified",
          "additions": 48,
          "deletions": 1,
          "patch": "@@ -64,7 +64,7 @@ public function goingForthAndBackStoresFormValuesOfSecondPageAndTriggersValidati\n \t\t$form['--three-page-form-with-validation']['text2-1']->setValue('My Text on the second page');\n \t\t$this->gotoPreviousFormPage($form);\n \t\t$this->gotoNextFormPage($this->browser->getForm());\n-\t\t$r = $this->gotoNextFormPage($this->browser->getForm());\n+\t\t$this->gotoNextFormPage($this->browser->getForm());\n \n \t\t$this->assertSame(' error', $this->browser->getCrawler()->filterXPath('//*[contains(@class,\"error\")]//input[@id=\"three-page-form-with-validation-text2-1\"]')->attr('class'));\n \t\t$form = $this->browser->getForm();\n@@ -75,4 +75,51 @@ public function goingForthAndBackStoresFormValuesOfSecondPageAndTriggersValidati\n \t\t$this->assertSame('', $form['--three-page-form-with-validation']['text3-1']->getValue());\n \t}\n \n+\n+\t/**\n+\t * This is an edge-case which occurs if somebody makes the formState persistent, which can happen when subclassing the FormRuntime.\n+\t *\n+\t * The goal is to build a GET request *only* containing the form state, and nothing else. Furthermore, we need to make sure\n+\t * that we do NOT send any of the parameters with the form; as we only want the form state to be applied.\n+\t *\n+\t * So, if the form state contains some values, we want to be sure these values are re-displayed.\n+\t *\n+\t * @test\n+\t */\n+\tpublic function goingForthAndBackStoresFormValuesOfSecondPageEvenWhenSecondPageIsManuallyCalledAsGetRequest() {\n+\t\t// 1. TEST SETUP: FORM STATE PREPARATION\n+\t\t// - go to the 2nd page of the form, and fill in text2-1.\n+\t\t$this->browser->request('http://localhost/test/form/simpleform/ThreePageFormWithValidation');\n+\n+\t\t$this->gotoNextFormPage($this->browser->getForm());\n+\n+\t\t$form = $this->browser->getForm();\n+\t\t$form['--three-page-form-with-validation']['text2-1']->setValue('My Text on the second page');\n+\n+\t\t// - then, go back and forth, in order to get an *up-to-date* form state having the right values inside.\n+\t\t$this->gotoPreviousFormPage($form);\n+\t\t$this->gotoNextFormPage($this->browser->getForm());\n+\n+\t\t// 2. TEST SETUP: BUILD GET REQUEST ONLY CONTAINING FORM STATE\n+\t\t$form = $this->browser->getForm();\n+\t\t\\TYPO3\\Flow\\Reflection\\ObjectAccess::setProperty($form, 'method', 'GET', TRUE);\n+\n+\t\t// we want to stay on the current page, that's why we send __currentPage = 1. (== 2nd page of the form)\n+\t\t$doc = new \\DOMDocument();\n+\t\t$doc->loadXML('<input type=\"hidden\" name=\"--three-page-form-with-validation[__currentPage]\" value=\"1\" />');\n+\t\t$node = $doc->getElementsByTagName('input')->item(0);\n+\t\t$form->set(new InputFormField($node));\n+\n+\t\t// We do *not* send any form content with us, as we want to test these are properly reconstituted from the form state.\n+\t\t$form->offsetUnset('--three-page-form-with-validation[text2-1]');\n+\n+\t\t// 3. TEST RUN\n+\t\t// submit the GET request ONLY containing formState.\n+\t\t$this->browser->submit($form);\n+\n+\t\t// now, make sure the text2-1 (which has been persisted in the form state) gets reconstituted and shown properly.\n+\t\t$form = $this->browser->getForm();\n+\t\t$this->assertSame('My Text on the second page', $form['--three-page-form-with-validation']['text2-1']->getValue());\n+\t}\n+\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ee629a86a1006f744c6e9ce62c20078b7594e3fa",
            "date": "2024-12-11T21:28:51Z",
            "author_login": "kdambekalns"
          },
          {
            "sha": "d6674ea404f1e23b5f05e512ab6c89d720d92015",
            "date": "2024-01-18T11:32:14Z",
            "author_login": "bwaidelich"
          },
          {
            "sha": "027ebac13b3c40ea0de290fec6a22306c566ad18",
            "date": "2024-01-18T10:41:48Z",
            "author_login": "mhsdesign"
          },
          {
            "sha": "ee78ec473f62b06eb27e9093cbb321cca671df96",
            "date": "2023-11-29T08:23:20Z",
            "author_login": "kitsunet"
          },
          {
            "sha": "ee13e7b4cdddc5bf1de8be9af93a505fcb224a28",
            "date": "2023-11-29T07:24:01Z",
            "author_login": "kitsunet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-20",
    "description": "neos/forms is an open source framework to build web forms. By crafting a special `GET` request containing a valid form state, a form can be submitted without invoking any validators. Form state is secured with an HMAC that is still verified. That means that this issue can only be exploited if Form Finishers cause side effects even if no form values have been sent. Form Finishers can be adjusted in a way that they only execute an action if the submitted form contains some expected data. Alternatively a custom Finisher can be added as first finisher. This regression was introduced with https://github.com/neos/form/commit/049d415295be8d4a0478ccba97dba1bb81649567",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-21T19:15:08.073",
    "last_modified": "2024-11-21T06:07:33.163",
    "fix_date": "2013-10-23T18:36:24Z"
  },
  "references": [
    {
      "url": "https://github.com/neos/form-ghsa-m5vx-8chx-qvmm/pull/1",
      "source": "security-advisories@github.com",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/neos/form/commit/049d415295be8d4a0478ccba97dba1bb81649567",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/commit/69de4219b1f58157e2be6b05811463875d75c246",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/releases/tag/5.1.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/security/advisories/GHSA-m5vx-8chx-qvmm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form-ghsa-m5vx-8chx-qvmm/pull/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/neos/form/commit/049d415295be8d4a0478ccba97dba1bb81649567",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/commit/69de4219b1f58157e2be6b05811463875d75c246",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/releases/tag/5.1.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/neos/form/security/advisories/GHSA-m5vx-8chx-qvmm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.746402",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "form",
    "owner": "neos",
    "created_at": "2015-08-25T06:04:44Z",
    "updated_at": "2024-12-11T21:28:56Z",
    "pushed_at": "2024-12-11T21:28:51Z",
    "size": 1342,
    "stars": 16,
    "forks": 36,
    "open_issues": 6,
    "watchers": 16,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "1.2",
      "2.0",
      "4.1",
      "4.2",
      "4.3",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "master"
    ],
    "languages": {
      "PHP": 342352,
      "HTML": 16500,
      "Shell": 37
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:24:41.649635"
  }
}