{
  "cve_id": "CVE-2021-32717",
  "github_data": {
    "repository": "shopware/platform",
    "fix_commit": "ba52f683372b8417a00e9014f481ed3d539f34b3",
    "related_commits": [
      "ba52f683372b8417a00e9014f481ed3d539f34b3",
      "ba52f683372b8417a00e9014f481ed3d539f34b3"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "ba52f683372b8417a00e9014f481ed3d539f34b3",
      "commit_date": "2021-05-18T11:29:04Z",
      "author": {
        "login": "dneustadt",
        "type": "User",
        "stats": {
          "total_commits": 248,
          "average_weekly_commits": 0.6342710997442456,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 75
        }
      },
      "commit_message": {
        "title": "NEXT-14744 - fix visibility setting in s3 storage fs",
        "length": 52,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 135,
        "additions": 135,
        "deletions": 0
      },
      "files": [
        {
          "filename": "changelog/_unreleased/2021-05-10-fix-visibility-setting-in-s3-storage-fs.md",
          "status": "added",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -0,0 +1,10 @@\n+---\n+title: fix visibility setting in s3 storage fs\n+issue: NEXT-14744\n+author: d.neustadt\n+author_email: d.neustadt@shopware.com \n+author_github: dneustadt\n+---\n+# Core\n+* Changed setting of visibility from fallback config to nested `options` parameter as per documentation\n+* Added `s3:set-visibility` CLI command for retroactively setting visibility of already stored objects"
        },
        {
          "filename": "src/Core/Framework/Adapter/Command/S3FilesystemVisibilityCommand.php",
          "status": "added",
          "additions": 112,
          "deletions": 0,
          "patch": "@@ -0,0 +1,112 @@\n+<?php declare(strict_types=1);\n+\n+namespace Shopware\\Core\\Framework\\Adapter\\Command;\n+\n+use League\\Flysystem\\FilesystemInterface;\n+use Shopware\\Core\\Framework\\Adapter\\Console\\ShopwareStyle;\n+use Symfony\\Component\\Console\\Command\\Command;\n+use Symfony\\Component\\Console\\Helper\\ProgressBar;\n+use Symfony\\Component\\Console\\Input\\InputInterface;\n+use Symfony\\Component\\Console\\Output\\OutputInterface;\n+\n+class S3FilesystemVisibilityCommand extends Command\n+{\n+    protected static $defaultName = 's3:set-visibility';\n+\n+    /**\n+     * @var FilesystemInterface\n+     */\n+    private $filesystemPrivate;\n+\n+    /**\n+     * @var FilesystemInterface\n+     */\n+    private $filesystemPublic;\n+\n+    /**\n+     * @var FilesystemInterface\n+     */\n+    private $filesystemTheme;\n+\n+    /**\n+     * @var FilesystemInterface\n+     */\n+    private $filesystemSitemap;\n+\n+    /**\n+     * @var FilesystemInterface\n+     */\n+    private $filesystemAsset;\n+\n+    public function __construct(\n+        FilesystemInterface $filesystemPrivate,\n+        FilesystemInterface $filesystemPublic,\n+        FilesystemInterface $filesystemTheme,\n+        FilesystemInterface $filesystemSitemap,\n+        FilesystemInterface $filesystemAsset\n+    ) {\n+        parent::__construct();\n+        $this->filesystemPrivate = $filesystemPrivate;\n+        $this->filesystemPublic = $filesystemPublic;\n+        $this->filesystemTheme = $filesystemTheme;\n+        $this->filesystemSitemap = $filesystemSitemap;\n+        $this->filesystemAsset = $filesystemAsset;\n+    }\n+\n+    /**\n+     * {@inheritdoc}\n+     */\n+    protected function configure(): void\n+    {\n+        $this\n+            ->setDescription('Sets visibility for all objects in corresponding bucket of S3 storage.');\n+    }\n+\n+    protected function execute(InputInterface $input, OutputInterface $output): int\n+    {\n+        $style = new ShopwareStyle($input, $output);\n+\n+        $style->warning('If both private and public objects are stored in the same bucket, this command will set all of them public.');\n+        $continue = $style->confirm('Continue?');\n+\n+        if (!$continue) {\n+            return 0;\n+        }\n+\n+        $style->comment('Setting visibility to private in private bucket.');\n+        $this->setVisibility($this->filesystemPrivate, $style, 'private');\n+        $style->comment('Setting visibility to public in public bucket.');\n+        $this->setVisibility($this->filesystemPublic, $style, 'public');\n+        $style->comment('Setting visibility to public in theme bucket.');\n+        $this->setVisibility($this->filesystemTheme, $style, 'public');\n+        $style->comment('Setting visibility to public in sitemap bucket.');\n+        $this->setVisibility($this->filesystemSitemap, $style, 'public');\n+        $style->comment('Setting visibility to public in asset bucket.');\n+        $this->setVisibility($this->filesystemAsset, $style, 'public');\n+\n+        $style->info('Finished setting visibility of objects in all pre-defined buckets.');\n+\n+        return 0;\n+    }\n+\n+    private function setVisibility(FilesystemInterface $filesystem, ShopwareStyle $style, string $visibility): void\n+    {\n+        $files = array_filter($filesystem->listContents('/', true), function (array $object): bool {\n+            return $object['type'] === 'file';\n+        });\n+        ProgressBar::setFormatDefinition('custom', '[%bar%] %current%/%max% -- %message%');\n+        $progressBar = new ProgressBar($style, \\count($files));\n+        $progressBar->setFormat('custom');\n+\n+        foreach ($files as $file) {\n+            if ($file['type'] === 'file') {\n+                $filesystem->setVisibility($file['path'], $visibility);\n+\n+                $progressBar->advance();\n+                $progressBar->setMessage($file['path']);\n+            }\n+        }\n+\n+        $progressBar->finish();\n+    }\n+}"
        },
        {
          "filename": "src/Core/Framework/Adapter/Filesystem/FilesystemFactory.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -41,6 +41,10 @@ public function factory(array $config): FilesystemInterface\n         $config = $this->resolveFilesystemConfig($config);\n         $factory = $this->findAdapterFactory($config['type']);\n \n+        if (isset($config['config']['options']['visibility'])) {\n+            $config['visibility'] = $config['config']['options']['visibility'];\n+        }\n+\n         $filesystem = new LeagueFilesystem(\n             $factory->create($config['config']),\n             ['visibility' => $config['visibility']]"
        },
        {
          "filename": "src/Core/Framework/DependencyInjection/services.xml",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -593,6 +593,15 @@ base-uri 'self';\n             <tag name=\"console.command\" command=\"administration:dump:features\"/>\n         </service>\n \n+        <service id=\"Shopware\\Core\\Framework\\Adapter\\Command\\S3FilesystemVisibilityCommand\">\n+            <argument type=\"service\" id=\"shopware.filesystem.private\"/>\n+            <argument type=\"service\" id=\"shopware.filesystem.public\"/>\n+            <argument type=\"service\" id=\"shopware.filesystem.theme\"/>\n+            <argument type=\"service\" id=\"shopware.filesystem.sitemap\"/>\n+            <argument type=\"service\" id=\"shopware.filesystem.asset\"/>\n+            <tag name=\"console.command\"/>\n+        </service>\n+\n         <service id=\"Shopware\\Core\\Framework\\Adapter\\Cache\\CacheInvalidationSubscriber\">\n             <argument type=\"service\" id=\"Shopware\\Core\\Framework\\Adapter\\Cache\\CacheInvalidator\"/>\n             <argument type=\"service\" id=\"Doctrine\\DBAL\\Connection\"/>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "67eb7cefa620c48b2a5a876872ecebaf7a8fbc64",
            "date": "2025-01-25T02:10:10Z",
            "author_login": "vanpham-sw"
          },
          {
            "sha": "c70ce911e1fd08d78920e928caf740a4523023d8",
            "date": "2025-01-24T17:01:00Z",
            "author_login": "shyim"
          },
          {
            "sha": "e0328f680fcc893e3ecf9cf8780dfbb1826d0aac",
            "date": "2025-01-24T15:53:01Z",
            "author_login": "yusufttur"
          },
          {
            "sha": "254c9ecc06d53c8edf2ce4531d9823acf0d74d2f",
            "date": "2025-01-24T15:38:47Z",
            "author_login": "MalteJanz"
          },
          {
            "sha": "57f7bae173eb0439fc2477d380a3c5033f29b90c",
            "date": "2025-01-24T13:03:57Z",
            "author_login": "yusufttur"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Shopware is an open source eCommerce platform. In versions prior to 6.4.1.1 private files publicly accessible with Cloud Storage providers when the hashed URL is known. Users are recommend to first change their configuration to set the correct visibility according to the documentation. The visibility must be at the same level as `type`. When the Storage is saved on Amazon AWS we recommending disabling public access to the bucket containing the private files: https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html. Otherwise, update to Shopware 6.4.1.1 or install or update the Security plugin (https://store.shopware.com/en/detail/index/sArticle/518463/number/Swag136939272659) and run the command `./bin/console s3:set-visibility` to correct your cloud file visibilities.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-24T21:15:08.097",
    "last_modified": "2024-11-21T06:07:35.447",
    "fix_date": "2021-05-18T11:29:04Z"
  },
  "references": [
    {
      "url": "https://docs.shopware.com/en/shopware-6-en/security-updates/security-update-06-2021",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/commit/ba52f683372b8417a00e9014f481ed3d539f34b3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/security/advisories/GHSA-vrf2-xghr-j52v",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://docs.shopware.com/en/shopware-6-en/security-updates/security-update-06-2021",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/commit/ba52f683372b8417a00e9014f481ed3d539f34b3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/security/advisories/GHSA-vrf2-xghr-j52v",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.759673",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "shopware",
    "owner": "shopware",
    "created_at": "2018-05-03T13:00:31Z",
    "updated_at": "2025-01-25T21:17:49Z",
    "pushed_at": "2025-01-25T02:10:12Z",
    "size": 294181,
    "stars": 2910,
    "forks": 1043,
    "open_issues": 933,
    "watchers": 2910,
    "has_security_policy": false,
    "default_branch": "trunk",
    "protected_branches": [
      "6.4",
      "6.5.x"
    ],
    "languages": {
      "PHP": 33684091,
      "JavaScript": 12876691,
      "Twig": 5783544,
      "TypeScript": 1872897,
      "SCSS": 1036156,
      "CSS": 135217,
      "Vue": 32178,
      "Shell": 30871,
      "HTML": 26015,
      "Nix": 4972,
      "Groovy": 3900,
      "Dockerfile": 2862,
      "Smarty": 1216
    },
    "commit_activity": {
      "total_commits_last_year": 4136,
      "avg_commits_per_week": 79.53846153846153,
      "days_active_last_year": 283
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:34:02.379998"
  }
}