{
  "cve_id": "CVE-2021-32791",
  "github_data": {
    "repository": "zmartzone/mod_auth_openidc",
    "fix_commit": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "related_commits": [
      "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
      "375407c16c61a70b56fdbe13b0d2c8f11398e92c"
    ],
    "patch_url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c.patch",
    "fix_commit_details": {
      "sha": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
      "commit_date": "2021-06-10T13:32:48Z",
      "author": {
        "login": "zandbelt",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "use encrypted JWTs for storing encrypted cache contents",
        "length": 182,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 480,
        "additions": 103,
        "deletions": 377
      },
      "files": [
        {
          "filename": ".gitignore",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -24,3 +24,5 @@\n /Dockerfile-*\n /*.rpm\n \n+/config.guess~\n+/config.sub~"
        },
        {
          "filename": "ChangeLog",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,3 +1,7 @@\n+06/10/2021\n+- use encrypted JWTs for storing encrypted cache contents and avoid using static AAD/IV; thanks @niebardzo\n+- bump to 2.4.9-dev\n+\n 06/04/2021\n - fix a problem where the host and port are calculated incorrectly, when you use literal ipv6 address.\n "
        },
        {
          "filename": "Dockerfile",
          "status": "modified",
          "additions": 8,
          "deletions": 3,
          "patch": "@@ -1,13 +1,14 @@\n FROM ubuntu:bionic\n MAINTAINER hans.zandbelt@zmartzone.eu\n \n+ENV DEBIAN_FRONTEND noninteractive\n+\n RUN apt-get update && apt-get install -y pkg-config make gcc gdb lcov valgrind vim curl iputils-ping wget\n RUN apt-get update && apt-get install -y autoconf automake libtool\n RUN apt-get update && apt-get install -y libssl-dev libjansson-dev libcurl4-openssl-dev check\n-#RUN apt-get update && apt-get install -y libcjose-dev\n RUN apt-get update && apt-get install -y apache2 apache2-dev\n-\n RUN apt-get update && apt-get install -y libpcre3-dev zlib1g-dev\n+RUN apt-get update && apt-get install -y libapache2-mod-php \n \n RUN wget https://mod-auth-openidc.org/download/libcjose0_0.6.1.5-1~bionic+1_amd64.deb\n RUN wget https://mod-auth-openidc.org/download/libcjose-dev_0.6.1.5-1~bionic+1_amd64.deb\n@@ -35,4 +36,8 @@ ADD openidc.conf /etc/apache2/conf-available\n RUN a2enconf openidc\n RUN /usr/sbin/apache2ctl start\n \n-# docker run -p 443:443 -it 749d1204d189 /bin/bash -c \"source /etc/apache2/envvars && valgrind --leak-check=full /usr/sbin/apache2 -X\"\n+RUN mkdir -p /var/www/html/protected\n+RUN echo \"<html><body><h1>Hello, <?php echo($_SERVER['REMOTE_USER']) ?></h1><pre><?php print_r(array_map(\\\"htmlentities\\\", apache_request_headers())); ?></pre><a href=\\\"/protected/?logout=https%3A%2F%2Flocalhost.zmartzone.eu%2Floggedout.html\\\">Logout</a></body></html>\" >  /var/www/html/protected/index.php\n+RUN mkdir -p /var/www/html/api && cp /var/www/html/protected/index.php /var/www/html/api\n+\n+# docker run -p 443:443 -it mod_auth_openidc /bin/bash -c \"source /etc/apache2/envvars && valgrind --leak-check=full /usr/sbin/apache2 -X\""
        },
        {
          "filename": "configure.ac",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,4 +1,4 @@\n-AC_INIT([mod_auth_openidc],[2.4.8.4],[hans.zandbelt@zmartzone.eu])\n+AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])\n \n AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())\n "
        },
        {
          "filename": "openidc.conf",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -24,6 +24,8 @@ OIDCCryptoPassphrase blabla1234\n \n OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session\n \n+OIDCScope \"openid email profile\"\n+\n <Location /protected>\n   AuthType openid-connect\n   Require valid-user"
        },
        {
          "filename": "src/cache/common.c",
          "status": "modified",
          "additions": 31,
          "deletions": 301,
          "patch": "@@ -244,325 +244,59 @@ apr_byte_t oidc_cache_mutex_destroy(server_rec *s, oidc_cache_mutex_t *m) {\n \treturn rv;\n }\n \n-#define oidc_cache_crypto_openssl_error(r, fmt, ...) \\\n-\t\toidc_error(r, \"%s: %s\", apr_psprintf(r->pool, fmt, ##__VA_ARGS__), ERR_error_string(ERR_get_error(), NULL))\n-\n-#define OIDC_CACHE_CIPHER\t\t\t\t\t\t\tEVP_aes_256_gcm()\n-#define OIDC_CACHE_TAG_LEN\t\t\t\t\t\t\t16\n-\n-#if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))\n-#define OIDC_CACHE_CRYPTO_GET_TAG\t\t\t\t\tEVP_CTRL_AEAD_GET_TAG\n-#define OIDC_CACHE_CRYPTO_SET_TAG\t\t\t\t\tEVP_CTRL_AEAD_SET_TAG\n-#define OIDC_CACHE_CRYPTO_SET_IVLEN\t\t\t\t\tEVP_CTRL_AEAD_SET_IVLEN\n-#else\n-#define OIDC_CACHE_CRYPTO_GET_TAG\t\t\t\t\tEVP_CTRL_GCM_GET_TAG\n-#define OIDC_CACHE_CRYPTO_SET_TAG\t\t\t\t\tEVP_CTRL_GCM_SET_TAG\n-#define OIDC_CACHE_CRYPTO_SET_IVLEN\t\t\t\t\tEVP_CTRL_GCM_SET_IVLEN\n-#endif\n-\n-/*\n- * AES GCM encrypt\n- */\n-static int oidc_cache_crypto_encrypt_impl(request_rec *r,\n-\t\tunsigned char *plaintext, int plaintext_len, const unsigned char *aad,\n-\t\tint aad_len, unsigned char *key, const unsigned char *iv, int iv_len,\n-\t\tunsigned char *ciphertext, const unsigned char *tag, int tag_len) {\n-\tEVP_CIPHER_CTX *ctx;\n-\n-\tint len;\n-\n-\tint ciphertext_len;\n-\n-\t/* create and initialize the context */\n-\tif (!(ctx = EVP_CIPHER_CTX_new())) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* initialize the encryption cipher */\n-\tif (!EVP_EncryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* set IV length */\n-\tif (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* initialize key and IV */\n-\tif (!EVP_EncryptInit_ex(ctx, NULL, NULL, key, iv)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* provide AAD data */\n-\tif (!EVP_EncryptUpdate(ctx, NULL, &len, aad, aad_len)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",\n-\t\t\t\taad_len);\n-\t\treturn -1;\n-\t}\n-\n-\t/* provide the message to be encrypted and obtain the encrypted output */\n-\tif (!EVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_EncryptUpdate ciphertext\");\n-\t\treturn -1;\n-\t}\n-\tciphertext_len = len;\n-\n-\t/*\n-\t * finalize the encryption; normally ciphertext bytes may be written at\n-\t * this stage, but this does not occur in GCM mode\n-\t */\n-\tif (!EVP_EncryptFinal_ex(ctx, ciphertext + len, &len)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_EncryptFinal_ex\");\n-\t\treturn -1;\n-\t}\n-\tciphertext_len += len;\n-\n-\t/* get the tag */\n-\tif (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_GET_TAG, tag_len,\n-\t\t\t(void *) tag)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* clean up */\n-\tEVP_CIPHER_CTX_free(ctx);\n-\n-\treturn ciphertext_len;\n-}\n+#define OIDC_CACHE_CRYPTO_JSON_KEY \"c\"\n \n /*\n- * AES GCM decrypt\n+ * AES GCM encrypt using the crypto passphrase as symmetric key\n  */\n-static int oidc_cache_crypto_decrypt_impl(request_rec *r,\n-\t\tunsigned char *ciphertext, int ciphertext_len, const unsigned char *aad,\n-\t\tint aad_len, const unsigned char *tag, int tag_len, unsigned char *key,\n-\t\tconst unsigned char *iv, int iv_len, unsigned char *plaintext) {\n-\tEVP_CIPHER_CTX *ctx;\n-\tint len;\n-\tint plaintext_len;\n-\tint ret;\n-\n-\t/* create and initialize the context */\n-\tif (!(ctx = EVP_CIPHER_CTX_new())) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");\n-\t\treturn -1;\n-\t}\n+static apr_byte_t oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext, const char *key,\n+\t\tchar **result) {\n+\tapr_byte_t rv = FALSE;\n+\tjson_t *json = NULL;\n \n-\t/* initialize the decryption cipher */\n-\tif (!EVP_DecryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");\n-\t\treturn -1;\n-\t}\n+\tjson = json_object();\n+\tjson_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));\n \n-\t/* set IV length */\n-\tif (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* initialize key and IV */\n-\tif (!EVP_DecryptInit_ex(ctx, NULL, NULL, key, iv)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");\n-\t\treturn -1;\n-\t}\n-\n-\t/* provide AAD data */\n-\tif (!EVP_DecryptUpdate(ctx, NULL, &len, aad, aad_len)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",\n-\t\t\t\taad_len);\n-\t\treturn -1;\n-\t}\n-\n-\t/* provide the message to be decrypted and obtain the plaintext output */\n-\tif (!EVP_DecryptUpdate(ctx, plaintext, &len, ciphertext, ciphertext_len)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate ciphertext\");\n-\t\treturn -1;\n-\t}\n-\tplaintext_len = len;\n-\n-\t/* set expected tag value; works in OpenSSL 1.0.1d and later */\n-\tif (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_TAG, tag_len,\n-\t\t\t(void *) tag)) {\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");\n-\t\treturn -1;\n-\t}\n+\trv = oidc_util_jwt_create(r, (const char*) key, json, result);\n \n-\t/*\n-\t * finalize the decryption; a positive return value indicates success,\n-\t * anything else is a failure - the plaintext is not trustworthy\n-\t */\n-\tret = EVP_DecryptFinal_ex(ctx, plaintext + len, &len);\n+\tif (json)\n+\t\tjson_decref(json);\n \n-\t/* clean up */\n-\tEVP_CIPHER_CTX_free(ctx);\n-\n-\tif (ret > 0) {\n-\t\t/* success */\n-\t\tplaintext_len += len;\n-\t\treturn plaintext_len;\n-\t} else {\n-\t\t/* verify failed */\n-\t\toidc_cache_crypto_openssl_error(r, \"EVP_DecryptFinal_ex\");\n-\t\treturn -1;\n-\t}\n-}\n-\n-/*\n- * static AAD value for encryption/decryption\n- */\n-static const unsigned char OIDC_CACHE_CRYPTO_GCM_AAD[] = { 0x4d, 0x23, 0xc3,\n-\t\t0xce, 0xc3, 0x34, 0xb4, 0x9b, 0xdb, 0x37, 0x0c, 0x43, 0x7f, 0xec, 0x78,\n-\t\t0xde };\n-\n-/*\n- * static IV value for encryption/decryption\n- */\n-static const unsigned char OIDC_CACHE_CRYPTO_GCM_IV[] = { 0x00, 0x01, 0x02,\n-\t\t0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,\n-\t\t0x0f };\n-\n-/*\n- * AES GCM encrypt using the static AAD and IV\n- */\n-static int oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext,\n-\t\tunsigned char *key, char **result) {\n-\tchar *encoded = NULL, *p = NULL, *e_tag = NULL;\n-\tunsigned char *ciphertext = NULL;\n-\tint plaintext_len, ciphertext_len, encoded_len, e_tag_len;\n-\tunsigned char tag[OIDC_CACHE_TAG_LEN];\n-\n-\t/* allocate space for the ciphertext */\n-\tplaintext_len = strlen(plaintext) + 1;\n-\tciphertext = apr_pcalloc(r->pool,\n-\t\t\t(plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));\n-\n-\tciphertext_len = oidc_cache_crypto_encrypt_impl(r,\n-\t\t\t(unsigned char *) plaintext, plaintext_len,\n-\t\t\tOIDC_CACHE_CRYPTO_GCM_AAD, sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), key,\n-\t\t\tOIDC_CACHE_CRYPTO_GCM_IV, sizeof(OIDC_CACHE_CRYPTO_GCM_IV),\n-\t\t\tciphertext, tag, sizeof(tag));\n-\n-\t/* base64url encode the resulting ciphertext */\n-\tencoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,\n-\t\t\tciphertext_len, 1);\n-\tif (encoded_len > 0) {\n-\t\tp = encoded;\n-\n-\t\t/* base64url encode the tag */\n-\t\te_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,\n-\t\t\t\tOIDC_CACHE_TAG_LEN, 1);\n-\n-\t\t/* now allocated space for the concatenated base64url encoded ciphertext and tag */\n-\t\tencoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);\n-\t\tmemcpy(encoded, p, encoded_len);\n-\t\tp = encoded + encoded_len;\n-\t\t*p = OIDC_CHAR_DOT;\n-\t\tp++;\n-\n-\t\t/* append the tag in the buffer */\n-\t\tmemcpy(p, e_tag, e_tag_len);\n-\t\tencoded_len += e_tag_len + 1;\n-\n-\t\t/* make sure the result is \\0 terminated */\n-\t\tencoded[encoded_len] = '\\0';\n-\n-\t\t*result = encoded;\n-\t}\n-\n-\treturn encoded_len;\n+\treturn rv;\n }\n \n /*\n- * AES GCM decrypt using the static AAD and IV\n+ * AES GCM decrypt using the crypto passphrase as symmetric key\n  */\n-static int oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,\n-\t\tunsigned char *key, unsigned char **plaintext) {\n-\n-\tint len = -1;\n+static apr_byte_t oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,\n+\t\tconst char *key, char **plaintext) {\n \n-\t/* grab the base64url-encoded tag after the \".\" */\n-\tchar *encoded_tag = strstr(cache_value, \".\");\n-\tif (encoded_tag == NULL) {\n-\t\toidc_error(r,\n-\t\t\t\t\"corrupted cache value: no tag separator found in encrypted value\");\n-\t\treturn FALSE;\n-\t}\n+\tapr_byte_t rv = FALSE;\n+\tjson_t *json = NULL;\n \n-\t/* make sure we don't modify the original string since it may be just a pointer into the cache (shm) */\n-\tcache_value = apr_pstrmemdup(r->pool, cache_value,\n-\t\t\tstrlen(cache_value) - strlen(encoded_tag));\n-\tencoded_tag++;\n+\trv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);\n+\tif (rv == FALSE)\n+\t\tgoto end;\n \n-\t/* base64url decode the ciphertext */\n-\tchar *d_bytes = NULL;\n-\tint d_len = oidc_base64url_decode(r->pool, &d_bytes, cache_value);\n+\trv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);\n \n-\t/* base64url decode the tag */\n-\tchar *t_bytes = NULL;\n-\tint t_len = oidc_base64url_decode(r->pool, &t_bytes, encoded_tag);\n+\tend:\n \n-\t/* see if we're still good to go */\n-\tif ((d_len > 0) && (t_len > 0)) {\n+\tif (json)\n+\t\tjson_decref(json);\n \n-\t\t/* allocated space for the plaintext */\n-\t\t*plaintext = apr_pcalloc(r->pool,\n-\t\t\t\t(d_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER) - 1));\n-\n-\t\t/* decrypt the ciphertext providing the tag value */\n-\n-\t\tlen = oidc_cache_crypto_decrypt_impl(r, (unsigned char *) d_bytes,\n-\t\t\t\td_len, OIDC_CACHE_CRYPTO_GCM_AAD,\n-\t\t\t\tsizeof(OIDC_CACHE_CRYPTO_GCM_AAD), (unsigned char *) t_bytes,\n-\t\t\t\tt_len, key, OIDC_CACHE_CRYPTO_GCM_IV,\n-\t\t\t\tsizeof(OIDC_CACHE_CRYPTO_GCM_IV), *plaintext);\n-\n-\t\t/* check the result and make sure it is \\0 terminated */\n-\t\tif (len > -1) {\n-\t\t\t(*plaintext)[len] = '\\0';\n-\t\t} else {\n-\t\t\t*plaintext = NULL;\n-\t\t}\n-\n-\t}\n-\n-\treturn len;\n-}\n-\n-/*\n- * hash the crypto passhphrase so it has enough key length for AES GCM 256\n- */\n-static unsigned char *oidc_cache_hash_passphrase(request_rec *r,\n-\t\tconst char *passphrase) {\n-\n-\tunsigned char *key = NULL;\n-\tunsigned int key_len = 0;\n-\toidc_jose_error_t err;\n-\n-\tif (oidc_jose_hash_bytes(r->pool, OIDC_JOSE_ALG_SHA256,\n-\t\t\t(const unsigned char *) passphrase, strlen(passphrase), &key,\n-\t\t\t&key_len, &err) == FALSE) {\n-\t\toidc_error(r, \"oidc_jose_hash_bytes returned an error: %s\", err.text);\n-\t\treturn NULL;\n-\t}\n-\n-\treturn key;\n+\treturn rv;\n }\n \n /*\n  * hash a cache key and a crypto passphrase so the result is suitable as an randomized cache key\n  */\n-static char *oidc_cache_get_hashed_key(request_rec *r, const char *passphrase,\n-\t\tconst char *key) {\n+static char* oidc_cache_get_hashed_key(request_rec *r, const char *passphrase, const char *key) {\n \tchar *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);\n \tchar *output = NULL;\n-\tif (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256,\n-\t\t\tinput, &output) == FALSE) {\n-\t\toidc_error(r,\n-\t\t\t\t\"oidc_util_hash_string_and_base64url_encode returned an error\");\n+\tif (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256, input, &output)\n+\t\t\t== FALSE) {\n+\t\toidc_error(r, \"oidc_util_hash_string_and_base64url_encode returned an error\");\n \t\treturn NULL;\n \t}\n \treturn output;\n@@ -604,9 +338,7 @@ apr_byte_t oidc_cache_get(request_rec *r, const char *section, const char *key,\n \t\tgoto out;\n \t}\n \n-\trc = (oidc_cache_crypto_decrypt(r, cache_value,\n-\t\t\toidc_cache_hash_passphrase(r, cfg->crypto_passphrase),\n-\t\t\t(unsigned char **) value) > 0);\n+\trc = oidc_cache_crypto_decrypt(r, cache_value, cfg->crypto_passphrase, value);\n \n out:\n \t/* log the result */\n@@ -650,9 +382,7 @@ apr_byte_t oidc_cache_set(request_rec *r, const char *section, const char *key,\n \t\t\tgoto out;\n \n \t\tif (value != NULL) {\n-\t\t\tif (oidc_cache_crypto_encrypt(r, value,\n-\t\t\t\t\toidc_cache_hash_passphrase(r, cfg->crypto_passphrase),\n-\t\t\t\t\t&encoded) <= 0)\n+\t\t\tif (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)\n \t\t\t\tgoto out;\n \t\t\tvalue = encoded;\n \t\t}"
        },
        {
          "filename": "test/mod_auth_openidc.jmx",
          "status": "modified",
          "additions": 55,
          "deletions": 72,
          "patch": "@@ -1,14 +1,14 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1.20170220\">\n+<jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">\n   <hashTree>\n     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">\n       <stringProp name=\"TestPlan.comments\"></stringProp>\n       <boolProp name=\"TestPlan.functional_mode\">false</boolProp>\n       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>\n       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">\n         <collectionProp name=\"Arguments.arguments\">\n-          <elementProp name=\"X_APP_SERVER\" elementType=\"Argument\">\n-            <stringProp name=\"Argument.name\">X_APP_SERVER</stringProp>\n+          <elementProp name=\"APP_SERVER\" elementType=\"Argument\">\n+            <stringProp name=\"Argument.name\">APP_SERVER</stringProp>\n             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>\n             <stringProp name=\"Argument.metadata\">=</stringProp>\n           </elementProp>\n@@ -57,7 +57,7 @@\n           </elementProp>\n           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">\n             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>\n-            <stringProp name=\"Argument.value\">/protected/api/index.php</stringProp>\n+            <stringProp name=\"Argument.value\">/api/index.php</stringProp>\n             <stringProp name=\"Argument.metadata\">=</stringProp>\n           </elementProp>\n         </collectionProp>\n@@ -94,8 +94,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>\n@@ -104,9 +102,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">\n@@ -125,8 +124,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>\n@@ -135,9 +132,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">\n@@ -164,8 +162,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>\n@@ -174,9 +170,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">\n@@ -226,8 +223,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>\n@@ -236,9 +231,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">\n@@ -257,8 +253,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>\n@@ -267,9 +261,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">\n@@ -321,8 +316,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>\n@@ -331,9 +324,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">\n@@ -367,8 +361,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>\n@@ -377,9 +369,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">\n@@ -441,8 +434,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>\n@@ -451,9 +442,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">\n@@ -472,8 +464,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>\n@@ -482,9 +472,10 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">\n@@ -517,8 +508,6 @@\n             </elementProp>\n             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>\n             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>\n-            <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-            <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>\n@@ -527,9 +516,10 @@\n             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-            <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n-            <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+            <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>\n+            <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+            <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           </HTTPSamplerProxy>\n           <hashTree>\n             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">\n@@ -539,6 +529,7 @@\n               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>\n               <boolProp name=\"Assertion.assume_success\">false</boolProp>\n               <intProp name=\"Assertion.test_type\">2</intProp>\n+              <stringProp name=\"Assertion.custom_message\"></stringProp>\n             </ResponseAssertion>\n             <hashTree/>\n             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">\n@@ -548,6 +539,7 @@\n               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>\n               <boolProp name=\"Assertion.assume_success\">false</boolProp>\n               <intProp name=\"Assertion.test_type\">6</intProp>\n+              <stringProp name=\"Assertion.custom_message\"></stringProp>\n             </ResponseAssertion>\n             <hashTree/>\n           </hashTree>\n@@ -567,18 +559,17 @@\n           <stringProp name=\"shareMode\">shareMode.all</stringProp>\n           <boolProp name=\"stopThread\">false</boolProp>\n           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>\n+          <boolProp name=\"ignoreFirstLine\">false</boolProp>\n         </CSVDataSet>\n         <hashTree/>\n-        <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">\n-          <stringProp name=\"filename\">hosts.txt</stringProp>\n-          <stringProp name=\"fileEncoding\"></stringProp>\n-          <stringProp name=\"variableNames\">APP_SERVER</stringProp>\n-          <stringProp name=\"delimiter\">,</stringProp>\n-          <boolProp name=\"quotedData\">false</boolProp>\n-          <boolProp name=\"recycle\">true</boolProp>\n-          <boolProp name=\"stopThread\">false</boolProp>\n-          <stringProp name=\"shareMode\">shareMode.all</stringProp>\n-        </CSVDataSet>\n+        <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">\n+          <collectionProp name=\"HeaderManager.headers\">\n+            <elementProp name=\"\" elementType=\"Header\">\n+              <stringProp name=\"Header.name\">Accept</stringProp>\n+              <stringProp name=\"Header.value\">*/*</stringProp>\n+            </elementProp>\n+          </collectionProp>\n+        </HeaderManager>\n         <hashTree/>\n       </hashTree>\n       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">\n@@ -631,8 +622,6 @@\n           </elementProp>\n           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>\n           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>\n-          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>\n@@ -641,8 +630,9 @@\n           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-          <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+          <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+          <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree>\n           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">\n@@ -661,6 +651,10 @@\n               <stringProp name=\"Header.name\">Authorization</stringProp>\n               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>\n             </elementProp>\n+            <elementProp name=\"\" elementType=\"Header\">\n+              <stringProp name=\"Header.name\">Accept</stringProp>\n+              <stringProp name=\"Header.value\">application/json</stringProp>\n+            </elementProp>\n           </collectionProp>\n         </HeaderManager>\n         <hashTree/>\n@@ -675,8 +669,6 @@\n             </elementProp>\n             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>\n             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>\n-            <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n-            <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>\n             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>\n             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>\n@@ -685,32 +677,23 @@\n             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>\n             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>\n             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>\n-            <boolProp name=\"HTTPSampler.monitor\">false</boolProp>\n             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>\n+            <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>\n+            <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>\n           </HTTPSamplerProxy>\n           <hashTree>\n             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">\n               <collectionProp name=\"Asserion.test_strings\">\n                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>\n               </collectionProp>\n-              <stringProp name=\"Assertion.test_field\">Assertion.response_data_as_document</stringProp>\n+              <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>\n               <boolProp name=\"Assertion.assume_success\">false</boolProp>\n               <intProp name=\"Assertion.test_type\">2</intProp>\n+              <stringProp name=\"Assertion.custom_message\"></stringProp>\n             </ResponseAssertion>\n             <hashTree/>\n           </hashTree>\n         </hashTree>\n-        <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">\n-          <stringProp name=\"filename\">hosts.txt</stringProp>\n-          <stringProp name=\"fileEncoding\"></stringProp>\n-          <stringProp name=\"variableNames\">APP_SERVER</stringProp>\n-          <stringProp name=\"delimiter\">,</stringProp>\n-          <boolProp name=\"quotedData\">false</boolProp>\n-          <boolProp name=\"recycle\">true</boolProp>\n-          <boolProp name=\"stopThread\">false</boolProp>\n-          <stringProp name=\"shareMode\">shareMode.all</stringProp>\n-        </CSVDataSet>\n-        <hashTree/>\n       </hashTree>\n       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">\n         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4d4b8e0c42b4edc3a3a343103a4f5393a3187868",
            "date": "2025-01-02T11:11:02Z",
            "author_login": "zandbelt"
          },
          {
            "sha": "afa23358b3c52c448f0d6a7d0853deec26042425",
            "date": "2025-01-02T10:48:45Z",
            "author_login": "ahus1"
          },
          {
            "sha": "1a9d3489bca4fb6eb146d5c14042431f6bb4952f",
            "date": "2025-01-02T10:11:08Z",
            "author_login": "zandbelt"
          },
          {
            "sha": "a2b1e662721757802a07c3797c3b40e389c42d1b",
            "date": "2025-01-02T10:07:28Z",
            "author_login": "zandbelt"
          },
          {
            "sha": "127e1706f836946d181366523fab89b2a79f9016",
            "date": "2024-12-17T08:06:04Z",
            "author_login": "zandbelt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-323",
    "description": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-07-26T17:15:08.100",
    "last_modified": "2024-11-21T06:07:44.937",
    "fix_date": "2021-06-10T13:32:48Z"
  },
  "references": [
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/releases/tag/v2.4.9",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/security/advisories/GHSA-px3c-6x7j-3r9r",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/04/msg00034.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FZVF6BSJLRQZ7PFFR4X5JSU6KUJYNOCU/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QXAWKPT5LXZSUTFSJ6IWSZC7RMYYQXQD/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/releases/tag/v2.4.9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zmartzone/mod_auth_openidc/security/advisories/GHSA-px3c-6x7j-3r9r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/04/msg00034.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FZVF6BSJLRQZ7PFFR4X5JSU6KUJYNOCU/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QXAWKPT5LXZSUTFSJ6IWSZC7RMYYQXQD/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:02.340685",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mod_auth_openidc",
    "owner": "zmartzone",
    "created_at": "2014-03-27T18:54:06Z",
    "updated_at": "2025-01-11T00:58:38Z",
    "pushed_at": "2025-01-02T11:11:02Z",
    "size": 6185,
    "stars": 1003,
    "forks": 327,
    "open_issues": 0,
    "watchers": 1003,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1219433,
      "M4": 5581,
      "Makefile": 3452,
      "Shell": 62
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:04:46.206694"
  }
}