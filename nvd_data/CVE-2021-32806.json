{
  "cve_id": "CVE-2021-32806",
  "github_data": {
    "repository": "plone/Products.isurlinportal",
    "fix_commit": "d4fd34990d18adf05a10dc5e2bb4b066798280ba",
    "related_commits": [
      "d4fd34990d18adf05a10dc5e2bb4b066798280ba",
      "d4fd34990d18adf05a10dc5e2bb4b066798280ba"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "d4fd34990d18adf05a10dc5e2bb4b066798280ba",
      "commit_date": "2021-07-31T12:33:49Z",
      "author": {
        "login": "mauritsvanrees",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-q3m9-9fj2-mfwr",
        "length": 117,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 24,
        "additions": 24,
        "deletions": 0
      },
      "files": [
        {
          "filename": "Products/isurlinportal/__init__.py",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -131,6 +131,12 @@ def isURLInPortal(self, url, context=None):\n         # and redirecting to 'mailto:' or 'ftp:' is silly.\n         return False\n \n+    if schema and not u_host:\n+        # Example: https:example.org\n+        # When we redirect to this, some browsers fail, others happily go to example.org.\n+        # In any case, this is not in the portal.\n+        return False\n+\n     # Someone may be doing tricks with escaped html code.\n     unescaped_url = unescape(url)\n     if unescaped_url != url:"
        },
        {
          "filename": "Products/isurlinportal/tests.py",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -167,6 +167,11 @@ def test_data_not_in_portal(self):\n             iURLiP(\"data:text/html%3bbase64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K\")\n         )\n \n+    def test_ftp_not_in_portal(self):\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP(\"ftp://ftp.example.org\"))\n+\n     def test_double_slash(self):\n         # I wondered if this might be a problem after reading\n         # https://bugs.python.org/issue23505\n@@ -204,3 +209,10 @@ def test_whitespace(self):\n         self.assertFalse(iURLiP(\"foo\\t\"))\n         self.assertFalse(iURLiP(\" foo\"))\n         self.assertFalse(iURLiP(\"foo \"))\n+\n+    def test_without_slashes(self):\n+        # This does not work in all browsers.\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP(\"http:example.org\"))\n+        self.assertFalse(iURLiP(\"https:example.org\"))"
        },
        {
          "filename": "news/1.feature",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+Treat urls like ``https:example.org`` without slashes as outside the portal.\n+Some browsers would redirect to example.org, some would redirect to a non-existing local page.\n+We never want this, because this is likely a hack attempt.\n+This vulnerability was discovered and reported by Yuji Tounai of Mitsui Bussan Secure Directions, Inc.\n+See `security advisory 1 <https://github.com/plone/Products.isurlinportal/security/advisories/GHSA-q3m9-9fj2-mfwr>`_.\n+[maurits]"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dad477b25fcb642249616aeba68fd3feaf94da7e",
            "date": "2025-01-07T18:58:31Z",
            "author_login": "gforcada"
          },
          {
            "sha": "f5cf0e5305df97cc7755a36dbd11808a4172fb0d",
            "date": "2025-01-06T20:54:34Z",
            "author_login": "pre-commit-ci[bot]"
          },
          {
            "sha": "128e33e5ce77dc749ca66d9827ba652037497a00",
            "date": "2024-11-06T15:11:03Z",
            "author_login": "gforcada"
          },
          {
            "sha": "86e6e4e304bb2e036817be69108be14e17efa60b",
            "date": "2024-11-04T20:36:52Z",
            "author_login": "pre-commit-ci[bot]"
          },
          {
            "sha": "fd7cb2cf8382bc27e99ca7d37dc512764cc6de92",
            "date": "2024-10-08T06:19:32Z",
            "author_login": "ale-rt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-601",
    "description": "Products.isurlinportal is a replacement for isURLInPortal method in Plone. Versions of Products.isurlinportal prior to 1.2.0 have an Open Redirect vulnerability. Various parts of Plone use the 'is url in portal' check for security, mostly to see if it is safe to redirect to a url. A url like `https://example.org` is not in the portal. The url `https:example.org` without slashes is considered to be in the portal. When redirecting, some browsers go to `https://example.org`, others give an error. Attackers may use this to redirect victims to their site, especially as part of a phishing attack. The problem has been patched in Products.isurlinportal 1.2.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-08-02T19:15:08.133",
    "last_modified": "2024-11-21T06:07:47.067",
    "fix_date": "2021-07-31T12:33:49Z"
  },
  "references": [
    {
      "url": "http://jvn.jp/en/jp/JVN50804280/index.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plone/Products.isurlinportal/commit/d4fd34990d18adf05a10dc5e2bb4b066798280ba",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plone/Products.isurlinportal/security/advisories/GHSA-q3m9-9fj2-mfwr",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://jvn.jp/en/jp/JVN50804280/index.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plone/Products.isurlinportal/commit/d4fd34990d18adf05a10dc5e2bb4b066798280ba",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plone/Products.isurlinportal/security/advisories/GHSA-q3m9-9fj2-mfwr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:02.352870",
    "processing_status": "enhanced"
  }
}