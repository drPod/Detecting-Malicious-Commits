{
  "cve_id": "CVE-2021-32925",
  "github_data": {
    "repository": "chamilo/chamilo-lms",
    "fix_commit": "e71437c8de809044ba3ae1b181d70857c050a3e9",
    "related_commits": [
      "e71437c8de809044ba3ae1b181d70857c050a3e9",
      "e71437c8de809044ba3ae1b181d70857c050a3e9"
    ],
    "patch_url": "https://github.com/chamilo/chamilo-lms/commit/e71437c8de809044ba3ae1b181d70857c050a3e9.patch",
    "fix_commit_details": {
      "sha": "e71437c8de809044ba3ae1b181d70857c050a3e9",
      "commit_date": "2021-05-12T12:22:31Z",
      "author": {
        "login": "jmontoyaa",
        "type": "User",
        "stats": {
          "total_commits": 22420,
          "average_weekly_commits": 23.550420168067227,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 631
        }
      },
      "commit_message": {
        "title": "Fix XML import user_import.php results page",
        "length": 135,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 71,
        "additions": 51,
        "deletions": 20
      },
      "files": [
        {
          "filename": "main/admin/user_import.php",
          "status": "modified",
          "additions": 28,
          "deletions": 12,
          "patch": "@@ -1,4 +1,5 @@\n <?php\n+\n /* For licensing terms, see /license.txt */\n \n use Chamilo\\CoreBundle\\Entity\\ExtraFieldOptions;\n@@ -13,7 +14,6 @@\n // Set this option to true to enforce strict purification for usenames.\n $purification_option_for_usernames = false;\n $userId = api_get_user_id();\n-\n api_protect_admin_script(true, null);\n api_protect_limit_for_session_admin();\n set_time_limit(0);\n@@ -220,7 +220,6 @@ function save_data($users, $sendMail = false)\n     if (!isset($inserted_in_course)) {\n         $inserted_in_course = [];\n     }\n-\n     $usergroup = new UserGroup();\n     if (is_array($users)) {\n         $efo = new ExtraFieldOption('user');\n@@ -433,10 +432,9 @@ function parse_csv_data($users, $fileName, $sendEmail = 0, $checkUniqueEmail = t\n  *\n  * @return array All user information read from the file\n  */\n-function parse_xml_data($file)\n+function parse_xml_data($file, $sendEmail = 0, $checkUniqueEmail = true)\n {\n-    $crawler = new \\Symfony\\Component\\DomCrawler\\Crawler();\n-    $crawler->addXmlContent(file_get_contents($file));\n+    $crawler = Import::xml($file);\n     $crawler = $crawler->filter('Contacts > Contact ');\n     $array = [];\n     foreach ($crawler as $domElement) {\n@@ -451,6 +449,16 @@ function parse_xml_data($file)\n         }\n     }\n \n+    Session::write(\n+        'user_import_data_'.api_get_user_id(),\n+        [\n+            'check_unique_email' => $checkUniqueEmail,\n+            'send_email' => $sendEmail,\n+            'date' => api_get_utc_datetime(),\n+            'log_messages' => '',\n+        ]\n+    );\n+\n     return $array;\n }\n \n@@ -548,7 +556,11 @@ function processUsers(&$users, $sendMail)\n             $users = validate_data($users, $checkUniqueEmail);\n             $error_kind_file = false;\n         } elseif (strcmp($file_type, 'xml') === 0 && $ext_import_file == $allowed_file_mimetype[1]) {\n-            $users = parse_xml_data($_FILES['import_file']['tmp_name']);\n+            $users = parse_xml_data(\n+                $_FILES['import_file']['tmp_name'],\n+                $sendMail,\n+                $checkUniqueEmail\n+            );\n             $users = validate_data($users, $checkUniqueEmail);\n             $error_kind_file = false;\n         }\n@@ -590,15 +602,17 @@ function processUsers(&$users, $sendMail)\n $formContinue = false;\n $resumeStop = true;\n if (!empty($importData)) {\n-    $isResume = $importData['resume'];\n+    $isResume = $importData['resume'] ?? false;\n \n     $formContinue = new FormValidator('user_import_continue', 'post', api_get_self());\n     $label = get_lang('Results');\n     if ($isResume) {\n         $label = get_lang('ContinueLastImport');\n     }\n     $formContinue->addHeader($label);\n-    $formContinue->addLabel(get_lang('File'), $importData['filename']);\n+    if (isset($importData['filename'])) {\n+        $formContinue->addLabel(get_lang('File'), $importData['filename'] ?? '');\n+    }\n \n     $resumeStop = true;\n     if ($isResume) {\n@@ -614,10 +628,12 @@ function processUsers(&$users, $sendMail)\n             $importData['counter'].' / '.count($importData['complete_list'])\n         );\n     } else {\n-        $formContinue->addLabel(\n-            get_lang('Users'),\n-            count($importData['complete_list'])\n-        );\n+        if (!empty($importData['complete_list'])) {\n+            $formContinue->addLabel(\n+                get_lang('Users'),\n+                count($importData['complete_list'])\n+            );\n+        }\n     }\n \n     $formContinue->addLabel("
        },
        {
          "filename": "main/admin/user_update_import.php",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -256,8 +256,7 @@ function parse_csv_data($file)\n \n function parse_xml_data($file)\n {\n-    $crawler = new Crawler();\n-    $crawler->addXmlContent(file_get_contents($file));\n+    $crawler = Import::xml($file);\n     $crawler = $crawler->filter('Contacts > Contact ');\n     $array = [];\n     foreach ($crawler as $domElement) {"
        },
        {
          "filename": "main/inc/lib/import.lib.php",
          "status": "modified",
          "additions": 18,
          "deletions": 2,
          "patch": "@@ -1,8 +1,10 @@\n <?php\n+\n /* For licensing terms, see /license.txt */\n \n use Ddeboer\\DataImport\\Reader\\ExcelReader;\n use League\\Csv\\Reader;\n+use Symfony\\Component\\DomCrawler\\Crawler;\n \n /**\n  * Class Import\n@@ -79,8 +81,22 @@ public static function xlsToArray($filename)\n         }\n \n         $file = new \\SplFileObject($filename);\n-        $reader = new ExcelReader($file, 0);\n \n-        return $reader;\n+        return new ExcelReader($file, 0);\n+    }\n+\n+    /**\n+     * @param string $file\n+     *\n+     * @return Crawler\n+     */\n+    public static function xml($file)\n+    {\n+        @libxml_disable_entity_loader(true);\n+\n+        $crawler = new Crawler();\n+        $crawler->addXmlContent(file_get_contents($file));\n+\n+        return $crawler;\n     }\n }"
        },
        {
          "filename": "main/inc/lib/myspace.lib.php",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -3727,8 +3727,7 @@ public function parse_csv_data($file)\n      */\n     public static function parse_xml_data($file)\n     {\n-        $crawler = new \\Symfony\\Component\\DomCrawler\\Crawler();\n-        $crawler->addXmlContent(file_get_contents($file));\n+        $crawler = Import::xml($file);\n         $crawler = $crawler->filter('Contacts > Contact ');\n         $array = [];\n         foreach ($crawler as $domElement) {"
        },
        {
          "filename": "main/lp/scorm.class.php",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -95,8 +95,9 @@ public function parse_manifest($file = '')\n             // UTF-8 is supported by DOMDocument class, this is for sure.\n             $xml = api_utf8_encode_xml($xml, $this->manifest_encoding);\n \n-            $crawler = new Crawler();\n-            $crawler->addXmlContent($xml);\n+            /*$crawler = new Crawler();\n+            $crawler->addXmlContent($xml);*/\n+            $crawler = Import::xml($xml);\n \n             $xmlErrors = libxml_get_errors();\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4748473a31e04188cfa75d9e6f15e34728bd5c0a",
            "date": "2025-01-14T17:05:51Z",
            "author_login": "AngelFQC"
          },
          {
            "sha": "a610fd6c7f8fb688902e0e3aa09f25ee3a4abd5a",
            "date": "2025-01-14T14:19:19Z",
            "author_login": "AngelFQC"
          },
          {
            "sha": "3685210cf48d1dab3614fa6763241734b096aa5e",
            "date": "2025-01-14T02:31:26Z",
            "author_login": "christianbeeznest"
          },
          {
            "sha": "8004a7f87a6794477177b8f8efd49443e7edfc80",
            "date": "2025-01-14T02:28:56Z",
            "author_login": "christianbeeznest"
          },
          {
            "sha": "a94122c0f4a42c04ef2d75f538813d4d6a86ff8e",
            "date": "2025-01-14T00:35:06Z",
            "author_login": "AngelFQC"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-611",
    "description": "admin/user_import.php in Chamilo 1.11.x reads XML data without disabling the ability to load external entities.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-13T18:15:11.597",
    "last_modified": "2024-11-21T06:07:56.310",
    "fix_date": "2021-05-12T12:22:31Z"
  },
  "references": [
    {
      "url": "https://github.com/andrejspuler/writeups/blob/main/chamilo-lms/README.md#authenticated-rcelfi-in-user-import-via-xml-external-entity---cve-2021-32925",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/chamilo/chamilo-lms/commit/e71437c8de809044ba3ae1b181d70857c050a3e9",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://support.chamilo.org/projects/1/wiki/Security_issues#Issue-58-2021-05-12-High-impact-very-low-risk-LFIRCE-vulnerability-in-users-import",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.php.net/manual/en/function.libxml-disable-entity-loader.php",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/andrejspuler/writeups/blob/main/chamilo-lms/README.md#authenticated-rcelfi-in-user-import-via-xml-external-entity---cve-2021-32925",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/chamilo/chamilo-lms/commit/e71437c8de809044ba3ae1b181d70857c050a3e9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://support.chamilo.org/projects/1/wiki/Security_issues#Issue-58-2021-05-12-High-impact-very-low-risk-LFIRCE-vulnerability-in-users-import",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.php.net/manual/en/function.libxml-disable-entity-loader.php",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.080163",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "chamilo-lms",
    "owner": "chamilo",
    "created_at": "2013-03-29T17:31:19Z",
    "updated_at": "2025-01-14T02:31:31Z",
    "pushed_at": "2025-01-14T02:56:11Z",
    "size": 1040139,
    "stars": 821,
    "forks": 487,
    "open_issues": 597,
    "watchers": 821,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 23541033,
      "JavaScript": 5402484,
      "Twig": 920238,
      "Vue": 772691,
      "Java": 354427,
      "CSS": 323413,
      "Smarty": 242707,
      "SCSS": 160320,
      "Gherkin": 121146,
      "HTML": 28008,
      "Shell": 1913,
      "TypeScript": 156
    },
    "commit_activity": {
      "total_commits_last_year": 2363,
      "avg_commits_per_week": 45.44230769230769,
      "days_active_last_year": 296
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:36:45.089244"
  }
}