{
  "cve_id": "CVE-2021-33361",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f",
    "related_commits": [
      "a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f",
      "a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f"
    ],
    "patch_url": "https://github.com/gpac/gpac/commit/a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f.patch",
    "fix_commit_details": {
      "sha": "a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f",
      "commit_date": "2021-05-10T09:14:03Z",
      "author": {
        "login": "jeanlf",
        "type": "User",
        "stats": {
          "total_commits": 11740,
          "average_weekly_commits": 11.521099116781159,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 832
        }
      },
      "commit_message": {
        "title": "fixed #1782 (fuzz)",
        "length": 18,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 15,
        "additions": 11,
        "deletions": 4
      },
      "files": [
        {
          "filename": "applications/mp4box/main.c",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -5439,6 +5439,14 @@ static u32 mp4box_cleanup(u32 ret_code) {\n \t}\n \tif (logfile) gf_fclose(logfile);\n \tgf_sys_close();\n+\n+#ifdef GPAC_MEMORY_TRACKING\n+\tif (mem_track && (gf_memory_size() || gf_file_handles_count() )) {\n+\t\tgf_log_set_tool_level(GF_LOG_MEMORY, GF_LOG_INFO);\n+\t\tgf_memory_print();\n+\t}\n+#endif\n+\n \treturn ret_code;\n }\n "
        },
        {
          "filename": "src/isomedia/box_code_adobe.c",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -408,6 +408,7 @@ GF_Err afra_box_read(GF_Box *s, GF_BitStream *bs)\n \tfor (i=0; i<ptr->entry_count; i++) {\n \t\tGF_AfraEntry *ae = gf_malloc(sizeof(GF_AfraEntry));\n \t\tif (!ae) return GF_OUT_OF_MEM;\n+\t\tgf_list_insert(ptr->local_access_entries, ae, i);\n \n \t\tISOM_DECREASE_SIZE(ptr, 8)\n \t\tae->time = gf_bs_read_u64(bs);\n@@ -418,8 +419,6 @@ GF_Err afra_box_read(GF_Box *s, GF_BitStream *bs)\n \t\t\tISOM_DECREASE_SIZE(ptr, 4)\n \t\t\tae->offset = gf_bs_read_u32(bs);\n \t\t}\n-\n-\t\tgf_list_insert(ptr->local_access_entries, ae, i);\n \t}\n \n \tif (ptr->global_entries) {\n@@ -428,6 +427,8 @@ GF_Err afra_box_read(GF_Box *s, GF_BitStream *bs)\n \t\tfor (i=0; i<ptr->global_entry_count; i++) {\n \t\t\tGF_GlobalAfraEntry *ae = gf_malloc(sizeof(GF_GlobalAfraEntry));\n \t\t\tif (!ae) return GF_OUT_OF_MEM;\n+\t\t\tgf_list_insert(ptr->global_access_entries, ae, i);\n+\n \t\t\tISOM_DECREASE_SIZE(ptr, 8)\n \t\t\tae->time = gf_bs_read_u64(bs);\n \t\t\tif (ptr->long_ids) {\n@@ -448,8 +449,6 @@ GF_Err afra_box_read(GF_Box *s, GF_BitStream *bs)\n \t\t\t\tae->afra_offset = gf_bs_read_u32(bs);\n \t\t\t\tae->offset_from_afra = gf_bs_read_u32(bs);\n \t\t\t}\n-\n-\t\t\tgf_list_insert(ptr->global_access_entries, ae, i);\n \t\t}\n \t}\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e075efa1bd0984e0e87f6752f1e5b991ba3a7cf7",
            "date": "2025-01-14T15:00:34Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "7af1bfcdc25dd74e158437abd13858281ae1bea0",
            "date": "2025-01-14T12:33:00Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "08572e41a7eae3d7e4329bf88a455ba6cb209936",
            "date": "2025-01-14T12:18:43Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5f2c53efbc58ecfb01885c73b9507413efde6c81",
            "date": "2025-01-14T11:46:01Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "f2082beb80c470f4eaf2bb0421b56e8adcde303a",
            "date": "2025-01-14T11:45:02Z",
            "author_login": "aureliendavid"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-401",
    "description": "Memory leak in the afra_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-13T20:15:08.510",
    "last_modified": "2024-11-21T06:08:45.773",
    "fix_date": "2021-05-10T09:14:03Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1782",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/gpac/gpac/commit/a51f951b878c2b73c1d8e2f1518c7cdc5fb82c3f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1782",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.751449",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-14T12:51:06Z",
    "pushed_at": "2025-01-14T12:51:01Z",
    "size": 148655,
    "stars": 2857,
    "forks": 539,
    "open_issues": 84,
    "watchers": 2857,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29230795,
      "JavaScript": 1164507,
      "C++": 591365,
      "Roff": 570792,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1273,
      "avg_commits_per_week": 24.48076923076923,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:56:58.367536"
  }
}