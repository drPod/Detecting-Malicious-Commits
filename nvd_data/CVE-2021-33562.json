{
  "cve_id": "CVE-2021-33562",
  "github_data": {
    "repository": "shopizer-ecommerce/shopizer",
    "fix_commit": "197f8c78c8f673b957e41ca2c823afc654c19271",
    "related_commits": [
      "197f8c78c8f673b957e41ca2c823afc654c19271",
      "197f8c78c8f673b957e41ca2c823afc654c19271"
    ],
    "patch_url": "https://github.com/shopizer-ecommerce/shopizer/commit/197f8c78c8f673b957e41ca2c823afc654c19271.patch",
    "fix_commit_details": {
      "sha": "197f8c78c8f673b957e41ca2c823afc654c19271",
      "commit_date": "2020-12-24T04:10:53Z",
      "author": {
        "login": "shopizer-ecommerce",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "xss robustness",
        "length": 14,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 65,
        "additions": 18,
        "deletions": 47
      },
      "files": [
        {
          "filename": "sm-shop/SALESMANAGER.h2.db",
          "status": "modified",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "sm-shop/files/store/DownlaodRepository.dat",
          "status": "modified",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/application/config/ShopApplicationConfiguration.java",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -78,7 +78,7 @@ public TilesViewResolver tilesViewResolver() {\n   }\n   \n \n-/*  @Bean\n+  @Bean\n   public FilterRegistrationBean<XssFilter> croseSiteFilter(){\n       FilterRegistrationBean<XssFilter> registrationBean \n         = new FilterRegistrationBean<>();\n@@ -87,7 +87,7 @@ public FilterRegistrationBean<XssFilter> croseSiteFilter(){\n       registrationBean.addUrlPatterns(\"/*\");\n           \n       return registrationBean;    \n-  }*/\n+  }\n \n   @Override\n   public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {"
        },
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/filter/XssFilter.java",
          "status": "modified",
          "additions": 5,
          "deletions": 38,
          "patch": "@@ -16,8 +16,8 @@\n import org.springframework.stereotype.Component;\n \n \n-//@Component\n-//@Order(5) //after other defined filters\n+@Component\n+@Order(0)\n public class XssFilter implements Filter {\n \n \t /**\n@@ -30,49 +30,16 @@ public void init(FilterConfig filterConfig) throws ServletException {\n \t  LOGGER.debug(\"(XssFilter) initialize\");\n \t }\n \n-/*\t @Override\n-\t public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n-\t   throws IOException, ServletException {\n-\t  XssHttpServletRequestWrapper xssRequest =\n-\t    new XssHttpServletRequestWrapper((HttpServletRequest) request);\n-\t  chain.doFilter(xssRequest, response);\n-\t }*/\n-\t \n-\n-/*\t protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,\n-\t \t\tFilterChain filterChain) throws ServletException, IOException {\n-\n-\t \tfilterChain.doFilter(new XssHttpServletRequestWrapper(request) {\n-\n-\n-\t \t}, new HttpServletResponseWrapper(response));\n-\t }*/\n \t \n \t @Override\n \t public void doFilter(ServletRequest srequest, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n \n-/*\t \t\tHttpServletRequest request = (HttpServletRequest) srequest;\n-\t \t\t//final String realIp = request.getHeader(X_FORWARDED_FOR);\n+\t \t\tHttpServletRequest request = (HttpServletRequest) srequest;\n+\t \t\tfilterChain.doFilter(new XssHttpServletRequestWrapper(request) {}, response);\n \n-\t \t\t//if (realIp != null) {\n-\t \t\t\tfilterChain.doFilter(new XssHttpServletRequestWrapper(request) {\n-\t \t\t\t\t*//**\n-\t \t\t\t\tpublic String getRemoteAddr() {\n-\t \t\t\t\t\treturn realIp;\n-\t \t\t\t\t}\n-\n-\t \t\t\t\tpublic String getRemoteHost() {\n-\t \t\t\t\t\treturn realIp;\n-\t \t\t\t\t}\n-\t \t\t\t\t**//*\n-\t \t\t\t}, response);\n-\n-\t \t\t\treturn;\n-\t \t\t//}\n+\t }\n \n-*/\n \n-\t }\n \n \t @Override\n \t public void destroy() {"
        },
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/filter/XssHttpServletRequestWrapper.java",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -1,5 +1,7 @@\n package com.salesmanager.shop.filter;\n \n+import java.util.Enumeration;\n+\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletRequestWrapper;\n \n@@ -13,18 +15,17 @@\n public class XssHttpServletRequestWrapper extends HttpServletRequestWrapper {\n \n \tpublic XssHttpServletRequestWrapper(HttpServletRequest request) {\n-\t\tsuper(request);\n+\t\tsuper(request);\t\n+\t\t\n \t}\n \t\n \n \t \n \t @Override\n \t    public String getHeader(String name) {\n-\t        //logger.info(\"Ineader .. parameter .......\");\n \t        String value = super.getHeader(name);\n \t        if (value == null)\n \t            return null;\n-\t        //logger.info(\"Ineader RequestWrapper ........... value ....\");\n \t        return cleanXSS(value);\n \t    }\n \t "
        },
        {
          "filename": "sm-shop/src/main/java/com/salesmanager/shop/store/controller/category/ShoppingCategoryController.java",
          "status": "modified",
          "additions": 7,
          "deletions": 4,
          "patch": "@@ -23,6 +23,7 @@\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.ResponseBody;\n+import org.springframework.web.util.HtmlUtils;\n \n import com.salesmanager.core.business.services.catalog.category.CategoryService;\n import com.salesmanager.core.business.services.catalog.product.PricingService;\n@@ -112,9 +113,7 @@ public class ShoppingCategoryController {\n \t */\n \t@RequestMapping(\"/shop/category/{friendlyUrl}.html/ref={ref}\")\n \tpublic String displayCategoryWithReference(@PathVariable final String friendlyUrl, @PathVariable final String ref, Model model, HttpServletRequest request, HttpServletResponse response, Locale locale) throws Exception {\n-\t\t\n-\t\t\n-\t\t\n+\n \t\treturn this.displayCategory(friendlyUrl,ref,model,request,response,locale);\n \t}\n \t\n@@ -141,7 +140,11 @@ private String displayCategory(final String friendlyUrl, final String ref, Model\n \t\tMerchantStore store = (MerchantStore)request.getAttribute(Constants.MERCHANT_STORE);\n \t\t\n \t\t//set ref as request attribute\n-\t\trequest.setAttribute(\"ref\", ref);\n+\t\tString encoded = HtmlUtils.htmlEscape(ref);\n+\t\tif(!encoded.equals(ref)) {//possible xss\n+\t\t\tthrow new Exception(\"Wrong input\");\n+\t\t}\n+\t\trequest.setAttribute(\"ref\", encoded);\n \n \t\t//get category\n \t\tCategory category = categoryService.getBySeUrl(store, friendlyUrl);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "42e5937f6b39d0227de5b4e65b610cdc53b2ade2",
            "date": "2024-08-10T14:38:29Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "e4d85b191b359742edae5d5d23c4d704b0731d9a",
            "date": "2024-08-10T14:38:14Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "8227a6b64996f232bcf2153da146f7b72a255a4e",
            "date": "2024-08-10T14:37:13Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "054a3bde1ea8894d13b0a8fb4e28f9db17262224",
            "date": "2023-04-26T02:47:50Z",
            "author_login": "shopizer-ecommerce"
          },
          {
            "sha": "1e495f7893a5b3b270de23358787c9635bf4ad41",
            "date": "2023-04-26T02:37:12Z",
            "author_login": "shopizer-ecommerce"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "A reflected cross-site scripting (XSS) vulnerability in Shopizer before 2.17.0 allows remote attackers to inject arbitrary web script or HTML via the ref parameter to a page about an arbitrary product, e.g., a product/insert-product-name-here.html/ref= URL.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-05-24T23:15:08.787",
    "last_modified": "2024-11-21T06:09:06.157",
    "fix_date": "2020-12-24T04:10:53Z"
  },
  "references": [
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/197f8c78c8f673b957e41ca2c823afc654c19271",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/compare/2.16.0...2.17.0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/49901",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/commit/197f8c78c8f673b957e41ca2c823afc654c19271",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopizer-ecommerce/shopizer/compare/2.16.0...2.17.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.exploit-db.com/exploits/49901",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:57.118314",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "shopizer",
    "owner": "shopizer-ecommerce",
    "created_at": "2012-11-21T03:42:39Z",
    "updated_at": "2025-01-14T02:06:42Z",
    "pushed_at": "2024-12-19T17:37:24Z",
    "size": 566471,
    "stars": 3612,
    "forks": 3018,
    "open_issues": 555,
    "watchers": 3612,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Java": 3638347,
      "FreeMarker": 111592,
      "Dockerfile": 203
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:04:13.648803"
  }
}