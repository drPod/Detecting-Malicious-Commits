{
  "cve_id": "CVE-2021-33571",
  "github_data": {
    "repository": "django/django",
    "fix_commit": "203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
    "related_commits": [
      "203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
      "9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d",
      "f27c38ab5d90f68c9dd60cabef248a570c0be8fc",
      "203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
      "9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d",
      "f27c38ab5d90f68c9dd60cabef248a570c0be8fc"
    ],
    "patch_url": "https://github.com/django/django/commit/203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e.patch",
    "fix_commit_details": {
      "sha": "203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
      "commit_date": "2021-05-24T07:55:14Z",
      "author": {
        "login": "felixxm",
        "type": "User",
        "stats": {
          "total_commits": 1681,
          "average_weekly_commits": 1.6496565260058882,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 408
        }
      },
      "commit_message": {
        "title": "[3.1.x] Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.",
        "length": 271,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 74,
        "additions": 73,
        "deletions": 1
      },
      "files": [
        {
          "filename": "django/core/validators.py",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -64,7 +64,7 @@ class URLValidator(RegexValidator):\n     ul = '\\u00a1-\\uffff'  # Unicode letters range (must not be a raw string).\n \n     # IP patterns\n-    ipv4_re = r'(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}'\n+    ipv4_re = r'(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}'\n     ipv6_re = r'\\[[0-9a-f:.]+\\]'  # (simple regex, validated later)\n \n     # Host patterns\n@@ -247,6 +247,18 @@ def validate_ipv4_address(value):\n         ipaddress.IPv4Address(value)\n     except ValueError:\n         raise ValidationError(_('Enter a valid IPv4 address.'), code='invalid')\n+    else:\n+        # Leading zeros are forbidden to avoid ambiguity with the octal\n+        # notation. This restriction is included in Python 3.9.5+.\n+        # TODO: Remove when dropping support for PY39.\n+        if any(\n+            octet != '0' and octet[0] == '0'\n+            for octet in value.split('.')\n+        ):\n+            raise ValidationError(\n+                _('Enter a valid IPv4 address.'),\n+                code='invalid',\n+            )\n \n \n def validate_ipv6_address(value):"
        },
        {
          "filename": "docs/releases/2.2.24.txt",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -17,3 +17,16 @@ the existence but also the file contents would have been exposed.\n \n As a mitigation, path sanitation is now applied and only files within the\n template root directories can be loaded.\n+\n+CVE-2021-33571: Possible indeterminate SSRF, RFI, and LFI attacks since validators accepted leading zeros in IPv4 addresses\n+===========================================================================================================================\n+\n+:class:`~django.core.validators.URLValidator`,\n+:func:`~django.core.validators.validate_ipv4_address`, and\n+:func:`~django.core.validators.validate_ipv46_address` didn't prohibit leading\n+zeros in octal literals. If you used such values you could suffer from\n+indeterminate SSRF, RFI, and LFI attacks.\n+\n+:func:`~django.core.validators.validate_ipv4_address` and\n+:func:`~django.core.validators.validate_ipv46_address` validators were not\n+affected on Python 3.9.5+."
        },
        {
          "filename": "docs/releases/3.1.12.txt",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -17,3 +17,16 @@ the existence but also the file contents would have been exposed.\n \n As a mitigation, path sanitation is now applied and only files within the\n template root directories can be loaded.\n+\n+CVE-2021-33571: Possible indeterminate SSRF, RFI, and LFI attacks since validators accepted leading zeros in IPv4 addresses\n+===========================================================================================================================\n+\n+:class:`~django.core.validators.URLValidator`,\n+:func:`~django.core.validators.validate_ipv4_address`, and\n+:func:`~django.core.validators.validate_ipv46_address` didn't prohibit leading\n+zeros in octal literals. If you used such values you could suffer from\n+indeterminate SSRF, RFI, and LFI attacks.\n+\n+:func:`~django.core.validators.validate_ipv4_address` and\n+:func:`~django.core.validators.validate_ipv46_address` validators were not\n+affected on Python 3.9.5+."
        },
        {
          "filename": "tests/validators/invalid_urls.txt",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -46,6 +46,14 @@ http://1.1.1.1.1\n http://123.123.123\n http://3628126748\n http://123\n+http://000.000.000.000\n+http://016.016.016.016\n+http://192.168.000.001\n+http://01.2.3.4\n+http://01.2.3.4\n+http://1.02.3.4\n+http://1.2.03.4\n+http://1.2.3.04\n http://.www.foo.bar/\n http://.www.foo.bar./\n http://[::1:2::3]:8080/"
        },
        {
          "filename": "tests/validators/tests.py",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -135,6 +135,16 @@\n     (validate_ipv4_address, '1.1.1.1\\n', ValidationError),\n     (validate_ipv4_address, '\u0667.2\u0665.3\u0663.243', ValidationError),\n \n+    # Leading zeros are forbidden to avoid ambiguity with the octal notation.\n+    (validate_ipv4_address, '000.000.000.000', ValidationError),\n+    (validate_ipv4_address, '016.016.016.016', ValidationError),\n+    (validate_ipv4_address, '192.168.000.001', ValidationError),\n+    (validate_ipv4_address, '01.2.3.4', ValidationError),\n+    (validate_ipv4_address, '01.2.3.4', ValidationError),\n+    (validate_ipv4_address, '1.02.3.4', ValidationError),\n+    (validate_ipv4_address, '1.2.03.4', ValidationError),\n+    (validate_ipv4_address, '1.2.3.04', ValidationError),\n+\n     # validate_ipv6_address uses django.utils.ipv6, which\n     # is tested in much greater detail in its own testcase\n     (validate_ipv6_address, 'fe80::1', None),\n@@ -160,6 +170,16 @@\n     (validate_ipv46_address, '::zzz', ValidationError),\n     (validate_ipv46_address, '12345::', ValidationError),\n \n+    # Leading zeros are forbidden to avoid ambiguity with the octal notation.\n+    (validate_ipv46_address, '000.000.000.000', ValidationError),\n+    (validate_ipv46_address, '016.016.016.016', ValidationError),\n+    (validate_ipv46_address, '192.168.000.001', ValidationError),\n+    (validate_ipv46_address, '01.2.3.4', ValidationError),\n+    (validate_ipv46_address, '01.2.3.4', ValidationError),\n+    (validate_ipv46_address, '1.02.3.4', ValidationError),\n+    (validate_ipv46_address, '1.2.03.4', ValidationError),\n+    (validate_ipv46_address, '1.2.3.04', ValidationError),\n+\n     (validate_comma_separated_integer_list, '1', None),\n     (validate_comma_separated_integer_list, '12', None),\n     (validate_comma_separated_integer_list, '1,2', None),"
        },
        {
          "filename": "tests/validators/valid_urls.txt",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -67,6 +67,12 @@ http://0.0.0.0/\n http://255.255.255.255\n http://224.0.0.0\n http://224.1.1.1\n+http://111.112.113.114/\n+http://88.88.88.88/\n+http://11.12.13.14/\n+http://10.20.30.40/\n+http://1.2.3.4/\n+http://127.0.01.09.home.lan\n http://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.example.com\n http://example.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com\n http://example.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b721f127603516c75ebda6912046ff5f0694e150",
            "date": "2024-10-11T11:44:12Z",
            "author_login": "sarahboyce"
          },
          {
            "sha": "d206d4c200d71c0847e7f6720d88c587e7b46843",
            "date": "2025-01-01T20:27:52Z",
            "author_login": "jacobtylerwalls"
          },
          {
            "sha": "f07360e8087d3b403d1d12ff696da3138116055a",
            "date": "2025-01-14T03:04:33Z",
            "author_login": "charettes"
          },
          {
            "sha": "161e79d277ffe8b79b15ad51cb0d23de54270202",
            "date": "2025-01-13T18:55:41Z",
            "author_login": "charettes"
          },
          {
            "sha": "4bfec242b488b174f7d386ab5bbd3363751cdb93",
            "date": "2025-01-13T18:53:57Z",
            "author_login": "charettes"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-918",
    "description": "In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-06-08T18:15:08.517",
    "last_modified": "2024-11-21T06:09:06.823",
    "fix_date": "2021-05-24T07:55:14Z"
  },
  "references": [
    {
      "url": "https://docs.djangoproject.com/en/3.2/releases/security/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/django/django/commit/203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/f27c38ab5d90f68c9dd60cabef248a570c0be8fc",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://groups.google.com/g/django-announce/c/sPyjSKMi8Eo",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210727-0004/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://docs.djangoproject.com/en/3.2/releases/security/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/django/django/commit/203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/f27c38ab5d90f68c9dd60cabef248a570c0be8fc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://groups.google.com/g/django-announce/c/sPyjSKMi8Eo",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20210727-0004/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.718556",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "django",
    "owner": "django",
    "created_at": "2012-04-28T02:47:18Z",
    "updated_at": "2025-01-14T13:27:58Z",
    "pushed_at": "2025-01-14T11:34:55Z",
    "size": 264981,
    "stars": 81851,
    "forks": 32045,
    "open_issues": 301,
    "watchers": 81851,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable/0.90.x",
      "stable/0.91.x",
      "stable/0.95.x",
      "stable/0.96.x",
      "stable/1.0.x",
      "stable/1.1.x",
      "stable/1.2.x",
      "stable/1.3.x",
      "stable/1.4.x",
      "stable/1.5.x",
      "stable/1.6.x",
      "stable/1.7.x",
      "stable/1.8.x",
      "stable/1.9.x",
      "stable/1.10.x",
      "stable/1.11.x",
      "stable/2.0.x",
      "stable/2.1.x",
      "stable/2.2.x",
      "stable/3.0.x",
      "stable/3.1.x",
      "stable/3.2.x",
      "stable/4.0.x",
      "stable/4.1.x",
      "stable/4.2.x",
      "stable/5.0.x",
      "stable/5.1.x"
    ],
    "languages": {
      "Python": 17607947,
      "HTML": 250858,
      "JavaScript": 158876,
      "CSS": 92030,
      "Smarty": 392,
      "Procfile": 47
    },
    "commit_activity": {
      "total_commits_last_year": 938,
      "avg_commits_per_week": 18.03846153846154,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:28:27.491590"
  }
}