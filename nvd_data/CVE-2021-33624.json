{
  "cve_id": "CVE-2021-33624",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "9183671af6dbf60a1219371d4ed73e23f43b49db",
    "related_commits": [
      "9183671af6dbf60a1219371d4ed73e23f43b49db",
      "9183671af6dbf60a1219371d4ed73e23f43b49db"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9183671af6dbf60a1219371d4ed73e23f43b49db",
      "commit_date": "2021-05-28T15:47:32Z",
      "author": {
        "login": "borkmann",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "bpf: Fix leakage under speculation on mispredicted branches",
        "length": 6356,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 40,
        "deletions": 4
      },
      "files": [
        {
          "filename": "kernel/bpf/verifier.c",
          "status": "modified",
          "additions": 40,
          "deletions": 4,
          "patch": "@@ -6483,6 +6483,27 @@ struct bpf_sanitize_info {\n \tbool mask_to_left;\n };\n \n+static struct bpf_verifier_state *\n+sanitize_speculative_path(struct bpf_verifier_env *env,\n+\t\t\t  const struct bpf_insn *insn,\n+\t\t\t  u32 next_idx, u32 curr_idx)\n+{\n+\tstruct bpf_verifier_state *branch;\n+\tstruct bpf_reg_state *regs;\n+\n+\tbranch = push_stack(env, next_idx, curr_idx, true);\n+\tif (branch && insn) {\n+\t\tregs = branch->frame[branch->curframe]->regs;\n+\t\tif (BPF_SRC(insn->code) == BPF_K) {\n+\t\t\tmark_reg_unknown(env, regs, insn->dst_reg);\n+\t\t} else if (BPF_SRC(insn->code) == BPF_X) {\n+\t\t\tmark_reg_unknown(env, regs, insn->dst_reg);\n+\t\t\tmark_reg_unknown(env, regs, insn->src_reg);\n+\t\t}\n+\t}\n+\treturn branch;\n+}\n+\n static int sanitize_ptr_alu(struct bpf_verifier_env *env,\n \t\t\t    struct bpf_insn *insn,\n \t\t\t    const struct bpf_reg_state *ptr_reg,\n@@ -6566,7 +6587,8 @@ static int sanitize_ptr_alu(struct bpf_verifier_env *env,\n \t\ttmp = *dst_reg;\n \t\t*dst_reg = *ptr_reg;\n \t}\n-\tret = push_stack(env, env->insn_idx + 1, env->insn_idx, true);\n+\tret = sanitize_speculative_path(env, NULL, env->insn_idx + 1,\n+\t\t\t\t\tenv->insn_idx);\n \tif (!ptr_is_dst_reg && ret)\n \t\t*dst_reg = tmp;\n \treturn !ret ? REASON_STACK : 0;\n@@ -8763,14 +8785,28 @@ static int check_cond_jmp_op(struct bpf_verifier_env *env,\n \t\tif (err)\n \t\t\treturn err;\n \t}\n+\n \tif (pred == 1) {\n-\t\t/* only follow the goto, ignore fall-through */\n+\t\t/* Only follow the goto, ignore fall-through. If needed, push\n+\t\t * the fall-through branch for simulation under speculative\n+\t\t * execution.\n+\t\t */\n+\t\tif (!env->bypass_spec_v1 &&\n+\t\t    !sanitize_speculative_path(env, insn, *insn_idx + 1,\n+\t\t\t\t\t       *insn_idx))\n+\t\t\treturn -EFAULT;\n \t\t*insn_idx += insn->off;\n \t\treturn 0;\n \t} else if (pred == 0) {\n-\t\t/* only follow fall-through branch, since\n-\t\t * that's where the program will go\n+\t\t/* Only follow the fall-through branch, since that's where the\n+\t\t * program will go. If needed, push the goto branch for\n+\t\t * simulation under speculative execution.\n \t\t */\n+\t\tif (!env->bypass_spec_v1 &&\n+\t\t    !sanitize_speculative_path(env, insn,\n+\t\t\t\t\t       *insn_idx + insn->off + 1,\n+\t\t\t\t\t       *insn_idx))\n+\t\t\treturn -EFAULT;\n \t\treturn 0;\n \t}\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.7,
    "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-843",
    "description": "In kernel/bpf/verifier.c in the Linux kernel before 5.12.13, a branch can be mispredicted (e.g., because of type confusion) and consequently an unprivileged BPF program can read arbitrary memory locations via a side-channel attack, aka CID-9183671af6db.",
    "attack_vector": "LOCAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-06-23T16:15:07.957",
    "last_modified": "2024-11-21T06:09:13.043",
    "fix_date": "2021-05-28T15:47:32Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/06/21/1",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/9183671af6dbf60a1219371d4ed73e23f43b49db",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00010.html",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.usenix.org/conference/usenixsecurity21/presentation/kirzner",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/06/21/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/9183671af6dbf60a1219371d4ed73e23f43b49db",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00010.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.usenix.org/conference/usenixsecurity21/presentation/kirzner",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.752902",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}