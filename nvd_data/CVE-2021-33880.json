{
  "cve_id": "CVE-2021-33880",
  "github_data": {
    "repository": "aaugustin/websockets",
    "fix_commit": "547a26b685d08cac0aa64e5e65f7867ac0ea9bc0",
    "related_commits": [
      "547a26b685d08cac0aa64e5e65f7867ac0ea9bc0",
      "547a26b685d08cac0aa64e5e65f7867ac0ea9bc0"
    ],
    "patch_url": "https://github.com/aaugustin/websockets/commit/547a26b685d08cac0aa64e5e65f7867ac0ea9bc0.patch",
    "fix_commit_details": {
      "sha": "547a26b685d08cac0aa64e5e65f7867ac0ea9bc0",
      "commit_date": "2021-05-23T16:51:27Z",
      "author": {
        "login": "aaugustin",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Use constant-time comparison for passwords.",
        "length": 79,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 45,
        "additions": 30,
        "deletions": 15
      },
      "files": [
        {
          "filename": "docs/changelog.rst",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -30,6 +30,12 @@ They may change at any time.\n \n *In development*\n \n+.. note::\n+\n+    **Version 9.1 fixes a security issue introduced in version 8.0.**\n+\n+    Version 8.0 was vulnerable to timing attacks on HTTP Basic Auth passwords.\n+\n 9.0.2\n .....\n "
        },
        {
          "filename": "src/websockets/legacy/auth.py",
          "status": "modified",
          "additions": 15,
          "deletions": 13,
          "patch": "@@ -6,6 +6,7 @@\n \n \n import functools\n+import hmac\n import http\n from typing import Any, Awaitable, Callable, Iterable, Optional, Tuple, Union, cast\n \n@@ -132,24 +133,23 @@ def basic_auth_protocol_factory(\n \n     if credentials is not None:\n         if is_credentials(credentials):\n-\n-            async def check_credentials(username: str, password: str) -> bool:\n-                return (username, password) == credentials\n-\n+            credentials_list = [cast(Credentials, credentials)]\n         elif isinstance(credentials, Iterable):\n             credentials_list = list(credentials)\n-            if all(is_credentials(item) for item in credentials_list):\n-                credentials_dict = dict(credentials_list)\n-\n-                async def check_credentials(username: str, password: str) -> bool:\n-                    return credentials_dict.get(username) == password\n-\n-            else:\n+            if not all(is_credentials(item) for item in credentials_list):\n                 raise TypeError(f\"invalid credentials argument: {credentials}\")\n-\n         else:\n             raise TypeError(f\"invalid credentials argument: {credentials}\")\n \n+        credentials_dict = dict(credentials_list)\n+\n+        async def check_credentials(username: str, password: str) -> bool:\n+            try:\n+                expected_password = credentials_dict[username]\n+            except KeyError:\n+                return False\n+            return hmac.compare_digest(expected_password, password)\n+\n     if create_protocol is None:\n         # Not sure why mypy cannot figure this out.\n         create_protocol = cast(\n@@ -158,5 +158,7 @@ async def check_credentials(username: str, password: str) -> bool:\n         )\n \n     return functools.partial(\n-        create_protocol, realm=realm, check_credentials=check_credentials\n+        create_protocol,\n+        realm=realm,\n+        check_credentials=check_credentials,\n     )"
        },
        {
          "filename": "tests/legacy/test_auth.py",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -1,3 +1,4 @@\n+import hmac\n import unittest\n import urllib.error\n \n@@ -76,7 +77,7 @@ def test_basic_auth_bad_multiple_credentials(self):\n         )\n \n     async def check_credentials(username, password):\n-        return password == \"iloveyou\"\n+        return hmac.compare_digest(password, \"iloveyou\")\n \n     create_protocol_check_credentials = basic_auth_protocol_factory(\n         realm=\"auth-tests\",\n@@ -140,7 +141,13 @@ def test_basic_auth_unsupported_credentials_details(self):\n         self.assertEqual(raised.exception.read().decode(), \"Unsupported credentials\\n\")\n \n     @with_server(create_protocol=create_protocol)\n-    def test_basic_auth_invalid_credentials(self):\n+    def test_basic_auth_invalid_username(self):\n+        with self.assertRaises(InvalidStatusCode) as raised:\n+            self.start_client(user_info=(\"goodbye\", \"iloveyou\"))\n+        self.assertEqual(raised.exception.status_code, 401)\n+\n+    @with_server(create_protocol=create_protocol)\n+    def test_basic_auth_invalid_password(self):\n         with self.assertRaises(InvalidStatusCode) as raised:\n             self.start_client(user_info=(\"hello\", \"ihateyou\"))\n         self.assertEqual(raised.exception.status_code, 401)"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e7a098e1a0d5dffcac5f0600703c4ec2de0be48a",
            "date": "2025-01-12T08:00:51Z",
            "author_login": "aaugustin"
          },
          {
            "sha": "031ec31b70adc527836c5565a7809724fb888c9c",
            "date": "2025-01-11T09:11:59Z",
            "author_login": "aaugustin"
          },
          {
            "sha": "6317c00cc5af245116781ddfde518ec004de672e",
            "date": "2025-01-10T21:47:36Z",
            "author_login": "mattyoungberg"
          },
          {
            "sha": "b1e88fcb77f6b74b2eab6a11a4ee53e4f04937ac",
            "date": "2024-11-30T06:42:21Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "668e56cf5d405d5f418d97d183e76fc36d21f857",
            "date": "2025-01-10T21:26:15Z",
            "author_login": "aaugustin"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-203",
    "description": "The aaugustin websockets library before 9.1 for Python has an Observable Timing Discrepancy on servers when HTTP Basic Authentication is enabled with basic_auth_protocol_factory(credentials=...). An attacker may be able to guess a password via a timing attack.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-06-06T15:15:07.407",
    "last_modified": "2024-11-21T06:09:42.373",
    "fix_date": "2021-05-23T16:51:27Z"
  },
  "references": [
    {
      "url": "https://github.com/aaugustin/websockets/commit/547a26b685d08cac0aa64e5e65f7867ac0ea9bc0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/aaugustin/websockets/commit/547a26b685d08cac0aa64e5e65f7867ac0ea9bc0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpuapr2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.714610",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "websockets",
    "owner": "aaugustin",
    "created_at": "2013-03-30T08:59:30Z",
    "updated_at": "2025-01-14T00:44:44Z",
    "pushed_at": "2025-01-12T08:15:08Z",
    "size": 3733,
    "stars": 5271,
    "forks": 526,
    "open_issues": 21,
    "watchers": 5271,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 1305331,
      "JavaScript": 13392,
      "HTML": 6657,
      "C": 5767,
      "CSS": 2932,
      "Makefile": 774,
      "Dockerfile": 92,
      "Procfile": 57
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T20:35:14.124487"
  }
}