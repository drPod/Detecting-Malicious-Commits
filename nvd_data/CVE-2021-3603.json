{
  "cve_id": "CVE-2021-3603",
  "github_data": {
    "repository": "PHPMailer/PHPMailer",
    "fix_commit": "45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3",
    "related_commits": [
      "45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3",
      "45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3"
    ],
    "patch_url": "https://github.com/PHPMailer/PHPMailer/commit/45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3.patch",
    "fix_commit_details": {
      "sha": "45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3",
      "commit_date": "2021-06-15T15:37:24Z",
      "author": {
        "login": "Synchro",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Deny string-based callables altogether",
        "length": 38,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 17,
        "additions": 7,
        "deletions": 10
      },
      "files": [
        {
          "filename": "SECURITY.md",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@\n \n Please disclose any security issues or vulnerabilities found through [Tidelift's coordinated disclosure system](https://tidelift.com/security) or to the maintainers privately.\n \n-PHPMailer 6.4.1 and earlier contain a vulnerability that can result in untrusted code being called (if such code is injected into the host project's scope by other means). If the `$patternselect` parameter to `validateAddress()` is set to `'php'` (the default, defined by `static::$validator`), and the global namespace contains a function called `php`, it will be called in preference to the built-in validator of the same name. This is patched in PHPMailer 6.5.0 by denying the use of callables with the same names as built-in validators. Reported by [Vikrant Singh Chauhan](mailto:vi@hackberry.xyz) via [huntr.dev](https://www.huntr.dev/). Recorded as [CVE-2021-3603](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-3603).\n+PHPMailer 6.4.1 and earlier contain a vulnerability that can result in untrusted code being called (if such code is injected into the host project's scope by other means). If the `$patternselect` parameter to `validateAddress()` is set to `'php'` (the default, defined by `static::$validator`), and the global namespace contains a function called `php`, it will be called in preference to the built-in validator of the same name. This is patched in PHPMailer 6.5.0 by denying the use of simple strings as validator function names, which is a very minor BC break. Reported by [Vikrant Singh Chauhan](mailto:vi@hackberry.xyz) via [huntr.dev](https://www.huntr.dev/). Recorded as [CVE-2021-3603](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-3603).\n \n PHPMailer versions between 6.1.8 and 6.4.0 contain a regression of the earlier CVE-2018-19296 object injection vulnerability as a result of [a fix for Windows UNC paths in 6.1.8](https://github.com/PHPMailer/PHPMailer/commit/e2e07a355ee8ff36aba21d0242c5950c56e4c6f9). Recorded as [CVE-2020-36326](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-36326). Reported by Fariskhi Vidyan via Tidelift. 6.4.1 fixes this issue, and also enforces stricter checks for URL schemes in local path contexts.\n "
        },
        {
          "filename": "src/PHPMailer.php",
          "status": "modified",
          "additions": 2,
          "deletions": 6,
          "patch": "@@ -1337,12 +1337,8 @@ public static function validateAddress($address, $patternselect = null)\n         if (null === $patternselect) {\n             $patternselect = static::$validator;\n         }\n-        //Don't allow overriding built-in validators with callables\n-        if (\n-            is_callable($patternselect) &&\n-            //It's callable and not a string, or it's a string callable that's not a built-in pattern\n-            (!is_string($patternselect) || !in_array(strtolower($patternselect), ['php', 'pcre', 'pcre8', 'html5']))\n-        ) {\n+        //Don't allow strings as callables, see SECURITY.md and CVE-2021-3603\n+        if (is_callable($patternselect) && !is_string($patternselect)) {\n             return call_user_func($patternselect, $address);\n         }\n         //Reject line breaks in addresses; it's valid RFC5322, but not RFC5321"
        },
        {
          "filename": "test/PHPMailerTest.php",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -733,13 +733,14 @@ function ($address) {\n             'PHP validator not behaving as expected'\n         );\n \n-        //Test denying override of built-in validator names\n+        //Test denying function name callables as validators\n         //See SECURITY.md and CVE-2021-3603\n         //If a `php` function defined in validators.php successfully overrides this built-in validator name,\n         //this would return false \u2013 and we don't want to allow that\n         self::assertTrue(PHPMailer::validateAddress('test@example.com', 'php'));\n-        //Check a non-matching validator function, which should be permitted, and return false in this case\n-        self::assertFalse(PHPMailer::validateAddress('test@example.com', 'phpx'));\n+        //Check that a non-existent validator name falls back to a built-in validator\n+        //and does not call a global function with that name\n+        self::assertTrue(PHPMailer::validateAddress('test@example.com', 'phpx'));\n     }\n \n     /**"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2f5c94fe7493efc213f643c23b1b1c249d40f47e",
            "date": "2024-11-24T18:04:13Z",
            "author_login": "Synchro"
          },
          {
            "sha": "2c73ad9dd58188850334ae7b955cacc8b8bc9d22",
            "date": "2024-11-22T05:36:49Z",
            "author_login": "Synchro"
          },
          {
            "sha": "7e2e8d53e65928525c5ed8cb309f6bfc087ab80f",
            "date": "2024-11-22T04:02:58Z",
            "author_login": "Synchro"
          },
          {
            "sha": "7c786ca890411439aed96f22e8c4fb3cdc9ef106",
            "date": "2024-11-22T00:58:32Z",
            "author_login": "jrfnl"
          },
          {
            "sha": "561609ac2ebae1b3ec1b636a38bf174d8de12955",
            "date": "2024-11-18T15:50:36Z",
            "author_login": "Synchro"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-829",
    "description": "PHPMailer 6.4.1 and earlier contain a vulnerability that can result in untrusted code being called (if such code is injected into the host project's scope by other means). If the $patternselect parameter to validateAddress() is set to 'php' (the default, defined by PHPMailer::$validator), and the global namespace contains a function called php, it will be called in preference to the built-in validator of the same name. Mitigated in PHPMailer 6.5.0 by denying the use of simple strings as validator function names.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-06-17T12:15:08.150",
    "last_modified": "2024-11-21T06:21:57.330",
    "fix_date": "2021-06-15T15:37:24Z"
  },
  "references": [
    {
      "url": "https://github.com/PHPMailer/PHPMailer/commit/45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YRMWGA4VTMXFB22KICMB7YMFZNFV3EJ/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FJYSOFCUBS67J3TKR74SD3C454N7VTYM/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://www.huntr.dev/bounties/1-PHPMailer/PHPMailer/",
      "source": "security@huntr.dev",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/PHPMailer/PHPMailer/commit/45f3c18dc6a2de1cb1bf49b9b249a9ee36a5f7f3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YRMWGA4VTMXFB22KICMB7YMFZNFV3EJ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FJYSOFCUBS67J3TKR74SD3C454N7VTYM/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.huntr.dev/bounties/1-PHPMailer/PHPMailer/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.738740",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "PHPMailer",
    "owner": "PHPMailer",
    "created_at": "2011-08-23T07:57:17Z",
    "updated_at": "2025-01-14T09:30:10Z",
    "pushed_at": "2024-11-24T18:05:53Z",
    "size": 20479,
    "stars": 21184,
    "forks": 9750,
    "open_issues": 46,
    "watchers": 21184,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 686767,
      "Shell": 3851
    },
    "commit_activity": {
      "total_commits_last_year": 54,
      "avg_commits_per_week": 1.0384615384615385,
      "days_active_last_year": 28
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:54:36.768494"
  }
}