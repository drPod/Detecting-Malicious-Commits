{
  "cve_id": "CVE-2021-36082",
  "github_data": {
    "repository": "ntop/nDPI",
    "fix_commit": "1ec621c85b9411cc611652fd57a892cfef478af3",
    "related_commits": [
      "1ec621c85b9411cc611652fd57a892cfef478af3",
      "1ec621c85b9411cc611652fd57a892cfef478af3"
    ],
    "patch_url": "https://github.com/ntop/nDPI/commit/1ec621c85b9411cc611652fd57a892cfef478af3.patch",
    "fix_commit_details": {
      "sha": "1ec621c85b9411cc611652fd57a892cfef478af3",
      "commit_date": "2021-05-15T17:53:46Z",
      "author": {
        "login": "lucaderi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Added further checks",
        "length": 20,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 46,
        "additions": 24,
        "deletions": 22
      },
      "files": [
        {
          "filename": "src/lib/protocols/netbios.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@ struct netbios_header {\n int ndpi_netbios_name_interpret(char *in, size_t in_len, char *out, u_int out_len) {\n   u_int ret = 0, len, idx = in_len, out_idx = 0;\n \n-  len = (*in++)/2;\n+  len = (*in++)/2, in_len--;\n   out_len--;\n   out[out_idx] = 0;\n "
        },
        {
          "filename": "src/lib/protocols/tls.c",
          "status": "modified",
          "additions": 23,
          "deletions": 21,
          "patch": "@@ -1369,34 +1369,36 @@ int processClientServerHello(struct ndpi_detection_module_struct *ndpi_struct,\n \ti += 4 + extension_len, offset += 4 + extension_len;\n       } /* for */\n \n-      ja3_str_len = snprintf(ja3_str, sizeof(ja3_str), \"%u,\", ja3.server.tls_handshake_version);\n+      ja3_str_len = snprintf(ja3_str, JA3_STR_LEN, \"%u,\", ja3.server.tls_handshake_version);\n \n-      for(i=0; i<ja3.server.num_cipher; i++) {\n-\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.cipher[i]);\n+      for(i=0; (i<ja3.server.num_cipher) && (JA3_STR_LEN > ja3_str_len); i++) {\n+\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.cipher[i]);\n \n \tif(rc <= 0) break; else ja3_str_len += rc;\n       }\n \n-      rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",\");\n-      if(rc > 0 && ja3_str_len + rc < JA3_STR_LEN) ja3_str_len += rc;\n-\n+      if(JA3_STR_LEN > ja3_str_len) {\n+\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");\n+\tif(rc > 0 && ja3_str_len + rc < JA3_STR_LEN) ja3_str_len += rc;\n+      }\n+      \n       /* ********** */\n \n-      for(i=0; i<ja3.server.num_tls_extension; i++) {\n-\tint rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.tls_extension[i]);\n+      for(i=0; (i<ja3.server.num_tls_extension) && (JA3_STR_LEN > ja3_str_len); i++) {\n+\tint rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\", (i > 0) ? \"-\" : \"\", ja3.server.tls_extension[i]);\n \n \tif(rc <= 0) break; else ja3_str_len += rc;\n       }\n \n       if(ndpi_struct->enable_ja3_plus) {\n-\tfor(i=0; i<ja3.server.num_elliptic_curve_point_format; i++) {\n-\t  rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\",\n+\tfor(i=0; (i<ja3.server.num_elliptic_curve_point_format) && (JA3_STR_LEN > ja3_str_len); i++) {\n+\t  rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\",\n \t\t\t(i > 0) ? \"-\" : \"\", ja3.server.elliptic_curve_point_format[i]);\n \t  if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;\n \t}\n \n-\tif(ja3.server.alpn[0] != '\\0') {\n-\t  rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",%s\", ja3.server.alpn);\n+\tif((ja3.server.alpn[0] != '\\0') && (JA3_STR_LEN > ja3_str_len)) {\n+\t  rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",%s\", ja3.server.alpn);\n \t  if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;\n \t}\n \n@@ -1982,47 +1984,47 @@ int processClientServerHello(struct ndpi_detection_module_struct *ndpi_struct,\n \t      int rc;\n \n \t    compute_ja3c:\n-\t      ja3_str_len = snprintf(ja3_str, sizeof(ja3_str), \"%u,\", ja3.client.tls_handshake_version);\n+\t      ja3_str_len = snprintf(ja3_str, JA3_STR_LEN, \"%u,\", ja3.client.tls_handshake_version);\n \n \t      for(i=0; i<ja3.client.num_cipher; i++) {\n-\t\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\",\n+\t\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\",\n \t\t\t      (i > 0) ? \"-\" : \"\", ja3.client.cipher[i]);\n \t\tif((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;\n \t      }\n \n-\t      rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",\");\n+\t      rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");\n \t      if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;\n \n \t      /* ********** */\n \n \t      for(i=0; i<ja3.client.num_tls_extension; i++) {\n-\t\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\",\n+\t\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\",\n \t\t\t      (i > 0) ? \"-\" : \"\", ja3.client.tls_extension[i]);\n \t\tif((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;\n \t      }\n \n-\t      rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",\");\n+\t      rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");\n \t      if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;\n \n \t      /* ********** */\n \n \t      for(i=0; i<ja3.client.num_elliptic_curve; i++) {\n-\t\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\",\n+\t\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\",\n \t\t\t      (i > 0) ? \"-\" : \"\", ja3.client.elliptic_curve[i]);\n \t\tif((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;\n \t      }\n \n-\t      rc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \",\");\n+\t      rc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \",\");\n \t      if((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;\n \n \t      for(i=0; i<ja3.client.num_elliptic_curve_point_format; i++) {\n-\t\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len, \"%s%u\",\n+\t\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len, \"%s%u\",\n \t\t\t      (i > 0) ? \"-\" : \"\", ja3.client.elliptic_curve_point_format[i]);\n \t\tif((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc; else break;\n \t      }\n \n \t      if(ndpi_struct->enable_ja3_plus) {\n-\t\trc = snprintf(&ja3_str[ja3_str_len], sizeof(ja3_str)-ja3_str_len,\n+\t\trc = snprintf(&ja3_str[ja3_str_len], JA3_STR_LEN-ja3_str_len,\n \t\t\t      \",%s,%s,%s\", ja3.client.signature_algorithms, ja3.client.supported_versions, ja3.client.alpn);\n \t\tif((rc > 0) && (ja3_str_len + rc < JA3_STR_LEN)) ja3_str_len += rc;\n \t      }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "252be78acce7d286f3a40924b98abcf8ecb72f79",
            "date": "2025-01-14T16:33:34Z",
            "author_login": "IvanNardi"
          },
          {
            "sha": "af011e338e20ad065de958f00624b6b341579d81",
            "date": "2025-01-14T14:02:20Z",
            "author_login": "IvanNardi"
          },
          {
            "sha": "63a3547f998bfbe52c2bc8a540e0f33d37f3ad88",
            "date": "2025-01-14T11:05:03Z",
            "author_login": "IvanNardi"
          },
          {
            "sha": "69a4f8120a3e335074fcc33f81e1d82dc0a88791",
            "date": "2025-01-13T19:38:37Z",
            "author_login": "lucaderi"
          },
          {
            "sha": "243b79544fb8525394c880d6f242ceb72ce1d9b0",
            "date": "2025-01-13T19:14:14Z",
            "author_login": "lucaderi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-787",
    "description": "ntop nDPI 3.4 has a stack-based buffer overflow in processClientServerHello.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-07-01T03:15:08.653",
    "last_modified": "2024-11-21T06:13:06.813",
    "fix_date": "2021-05-15T17:53:46Z"
  },
  "references": [
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30393",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/ndpi/OSV-2021-304.yaml",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ntop/nDPI/commit/1ec621c85b9411cc611652fd57a892cfef478af3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30393",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/ndpi/OSV-2021-304.yaml",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ntop/nDPI/commit/1ec621c85b9411cc611652fd57a892cfef478af3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:01:59.768607",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nDPI",
    "owner": "ntop",
    "created_at": "2015-04-19T04:56:52Z",
    "updated_at": "2025-01-14T11:05:08Z",
    "pushed_at": "2025-01-14T11:05:03Z",
    "size": 239718,
    "stars": 3903,
    "forks": 907,
    "open_issues": 74,
    "watchers": 3903,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev"
    ],
    "languages": {
      "C": 5715374,
      "Lua": 166102,
      "C++": 121071,
      "Makefile": 71493,
      "Shell": 57930,
      "M4": 43358,
      "Python": 41148,
      "Ruby": 1119
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T13:05:33.168001"
  }
}