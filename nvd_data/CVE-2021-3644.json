{
  "cve_id": "CVE-2021-3644",
  "github_data": {
    "repository": "wildfly/wildfly-core",
    "fix_commit": "06dd9884f6ba50470b1fb5a35198a8784f037714",
    "related_commits": [
      "06dd9884f6ba50470b1fb5a35198a8784f037714",
      "6d8db43cd43b5994b7a14003db978064e086090b",
      "06dd9884f6ba50470b1fb5a35198a8784f037714",
      "6d8db43cd43b5994b7a14003db978064e086090b"
    ],
    "patch_url": "https://github.com/wildfly/wildfly-core/commit/06dd9884f6ba50470b1fb5a35198a8784f037714.patch",
    "fix_commit_details": {
      "sha": "06dd9884f6ba50470b1fb5a35198a8784f037714",
      "commit_date": "2021-07-16T07:00:03Z",
      "author": {
        "login": "jmesnil",
        "type": "User",
        "stats": {
          "total_commits": 1575,
          "average_weekly_commits": 2.0588235294117645,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 242
        }
      },
      "commit_message": {
        "title": "Merge pull request #4669 from darranl/WFCORE-5511/16.x",
        "length": 145,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 25,
        "additions": 17,
        "deletions": 8
      },
      "files": [
        {
          "filename": "controller/src/main/java/org/jboss/as/controller/access/constraint/SensitiveVaultExpressionConstraint.java",
          "status": "modified",
          "additions": 5,
          "deletions": 8,
          "patch": "@@ -22,8 +22,8 @@\n \n package org.jboss.as.controller.access.constraint;\n \n-import org.jboss.as.controller.ExpressionResolver;\n-import org.jboss.as.controller.VaultReader;\n+import java.util.regex.Pattern;\n+\n import org.jboss.as.controller.access.Action;\n import org.jboss.as.controller.access.JmxAction;\n import org.jboss.as.controller.access.JmxTarget;\n@@ -45,6 +45,8 @@ public class SensitiveVaultExpressionConstraint extends AllowAllowNotConstraint\n \n     public static final ConstraintFactory FACTORY = new Factory();\n \n+    private static final Pattern VAULT_EXPRESSION_PATTERN = Pattern.compile(\".*\\\\$\\\\{VAULT::.*::.*::.*}.*\");\n+\n     private static final SensitiveVaultExpressionConstraint SENSITIVE = new SensitiveVaultExpressionConstraint(true);\n     private static final SensitiveVaultExpressionConstraint NOT_SENSITIVE = new SensitiveVaultExpressionConstraint(false);\n     private static final SensitiveVaultExpressionConstraint ALLOWS = new SensitiveVaultExpressionConstraint(true, true);\n@@ -123,12 +125,7 @@ private boolean isSensitiveValue(ModelNode value) {\n             if (value.getType() == ModelType.EXPRESSION\n                     || value.getType() == ModelType.STRING) {\n                 String valueString = value.asString();\n-                if (ExpressionResolver.EXPRESSION_PATTERN.matcher(valueString).matches()) {\n-                    int start = valueString.indexOf(\"${\") + 2;\n-                    int end = valueString.indexOf(\"}\", start);\n-                    valueString = valueString.substring(start, end);\n-                    return VaultReader.STANDARD_VAULT_PATTERN.matcher(valueString).matches();\n-                }\n+                return VAULT_EXPRESSION_PATTERN.matcher(valueString).matches();\n             }\n             return false;\n         }"
        },
        {
          "filename": "testsuite/rbac/src/test/java/org/jboss/as/test/integration/mgmt/access/VaultExpressionSensitivityTestCase.java",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -226,6 +226,18 @@ public void testReadNonSensitiveWriteNonSensitive() throws Exception {\n         }\n     }\n \n+    /*\n+     * Test if the Monitor role can smuggle a vault expression to retrieve the value from the vault.\n+     */\n+    @Test\n+    public void testHiddenExpression() throws Exception {\n+        ModelControllerClient client = getClientForUser(RbacUtil.MAINTAINER_USER);\n+\n+        ModelNode operation = createOpNode(\"subsystem=logging/logger=vault-test\", ADD);\n+        operation.get(\"level\").set(\"${someproperty:XXX} \" + vaultPassword);\n+        RbacUtil.executeOperation(client, operation, Outcome.UNAUTHORIZED);\n+    }\n+\n     private void test(String userName, boolean canRead, boolean canWrite) throws Exception {\n         ModelControllerClient client = getClientForUser(userName);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "55e18a04f9c274f77ec515af6f9d78caf29aa6db",
            "date": "2025-01-08T23:39:36Z",
            "author_login": "bstansberry"
          },
          {
            "sha": "61c0695abf2c5a61359de57e8db8a519eede3800",
            "date": "2025-01-08T23:38:20Z",
            "author_login": "bstansberry"
          },
          {
            "sha": "e84a53f51183ecf03b2bb52e835a661da309c668",
            "date": "2025-01-07T17:10:39Z",
            "author_login": "ropalka"
          },
          {
            "sha": "35a4c18c57066750b0d80cbb7343562d46cd9a54",
            "date": "2025-01-06T23:28:28Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "1983240e046fe82ddd5434f40952e3c49c78e432",
            "date": "2024-12-23T21:42:33Z",
            "author_login": "yersan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-200",
    "description": "A flaw was found in wildfly-core in all versions. If a vault expression is in the form of a single attribute that contains multiple expressions, a user who was granted access to the management interface can potentially access a vault expression they should not be able to access and possibly retrieve the item which was stored in the vault. The highest threat from this vulnerability is data confidentiality and integrity.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-08-26T16:15:09.163",
    "last_modified": "2024-11-21T06:22:03.773",
    "fix_date": "2021-07-16T07:00:03Z"
  },
  "references": [
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3644",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1976052",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/commit/06dd9884f6ba50470b1fb5a35198a8784f037714",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/commit/6d8db43cd43b5994b7a14003db978064e086090b",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/pull/4668",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.redhat.com/browse/WFCORE-5511",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3644",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1976052",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/commit/06dd9884f6ba50470b1fb5a35198a8784f037714",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/commit/6d8db43cd43b5994b7a14003db978064e086090b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wildfly/wildfly-core/pull/4668",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.redhat.com/browse/WFCORE-5511",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.024827",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wildfly-core",
    "owner": "wildfly",
    "created_at": "2014-07-01T16:33:34Z",
    "updated_at": "2025-01-13T10:31:45Z",
    "pushed_at": "2025-01-13T23:22:43Z",
    "size": 106007,
    "stars": 185,
    "forks": 466,
    "open_issues": 33,
    "watchers": 185,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.x",
      "2.x",
      "3.x",
      "9.x",
      "11.0.x",
      "main"
    ],
    "languages": {
      "Java": 32550118,
      "Shell": 68711,
      "Batchfile": 60330,
      "HTML": 55165,
      "PowerShell": 38569,
      "XSLT": 37836,
      "CSS": 1271,
      "C#": 323
    },
    "commit_activity": {
      "total_commits_last_year": 847,
      "avg_commits_per_week": 16.28846153846154,
      "days_active_last_year": 222
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T15:48:35.333416"
  }
}