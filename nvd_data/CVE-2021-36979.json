{
  "cve_id": "CVE-2021-36979",
  "github_data": {
    "repository": "unicorn-engine/unicorn",
    "fix_commit": "bf1713d9e011b55ca1f502a6779fc4722b4bb077",
    "related_commits": [
      "bf1713d9e011b55ca1f502a6779fc4722b4bb077",
      "bf1713d9e011b55ca1f502a6779fc4722b4bb077"
    ],
    "patch_url": "https://github.com/unicorn-engine/unicorn/commit/bf1713d9e011b55ca1f502a6779fc4722b4bb077.patch",
    "fix_commit_details": {
      "sha": "bf1713d9e011b55ca1f502a6779fc4722b4bb077",
      "commit_date": "2021-03-30T04:06:26Z",
      "author": {
        "login": "wtdcode",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add arm ite blocks samples from #853 (#1381)",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 68,
        "additions": 67,
        "deletions": 1
      },
      "files": [
        {
          "filename": "samples/sample_arm.c",
          "status": "modified",
          "additions": 67,
          "deletions": 1,
          "patch": "@@ -11,6 +11,8 @@\n #define ARM_CODE \"\\x37\\x00\\xa0\\xe3\\x03\\x10\\x42\\xe0\" // mov r0, #0x37; sub r1, r2, r3\n #define THUMB_CODE \"\\x83\\xb0\" // sub    sp, #0xc\n \n+#define ARM_THUM_COND_CODE \"\\x9a\\x42\\x14\\xbf\\x68\\x22\\x4d\\x22\" // 'cmp r2, r3\\nit ne\\nmov r2, #0x68\\nmov r2, #0x4d'\n+\n // memory address where emulation starts\n #define ADDRESS 0x10000\n \n@@ -130,6 +132,69 @@ static void test_thumb(void)\n     uc_close(uc);\n }\n \n+static void test_thumb_ite() {\n+    uc_engine *uc;\n+    uc_err err;\n+\n+    uint32_t sp = 0x1234;\n+    uint32_t r2 = 0, r3 = 1;\n+    uint32_t step_r2, step_r3;\n+\n+    int i, addr=ADDRESS;\n+\n+    printf(\"Emulate a THUMB ITE block as a whole or per instruction.\\n\");\n+    err = uc_open(UC_ARCH_ARM, UC_MODE_THUMB, &uc);\n+    if (err) {\n+        printf(\"Failed on uc_open() with error returned: %u (%s)\\n\",\n+                err, uc_strerror(err));\n+        return;\n+    }\n+\n+    uc_mem_map(uc, ADDRESS, 2 * 1024 * 1024, UC_PROT_ALL);\n+\n+    uc_mem_write(uc, ADDRESS, ARM_THUM_COND_CODE, sizeof(ARM_THUM_COND_CODE) - 1);\n+\n+    uc_reg_write(uc, UC_ARM_REG_SP, &sp);\n+\n+    uc_reg_write(uc, UC_ARM_REG_R2, &r2);\n+    uc_reg_write(uc, UC_ARM_REG_R3, &r3);\n+\n+    // Run once.\n+    printf(\"Running the entire binary.\\n\");\n+    err = uc_emu_start(uc, ADDRESS | 1, ADDRESS + sizeof(ARM_THUM_COND_CODE) - 1, 0, 0);\n+    if (err) {\n+        printf(\"Failed on uc_emu_start() with error returned: %u\\n\", err);\n+    }\n+    uc_reg_read(uc, UC_ARM_REG_R2, &r2);\n+    uc_reg_read(uc, UC_ARM_REG_R3, &r3);\n+\n+    printf(\">>> R2: %d\\n\", r2);\n+    printf(\">>> R3: %d\\n\\n\", r3);\n+\n+    // Step each instruction.\n+    printf(\"Running the binary one instruction at a time.\\n\");\n+    for (i = 0; i < sizeof(ARM_THUM_COND_CODE) / 2; i++) {\n+        err = uc_emu_start(uc, addr | 1, ADDRESS + sizeof(ARM_THUM_COND_CODE) - 1, 0, 1);\n+        if (err) {\n+            printf(\"Failed on uc_emu_start() with error returned: %u\\n\", err);\n+        }\n+        uc_reg_read(uc, UC_ARM_REG_PC, &addr);\n+    }\n+\n+    uc_reg_read(uc, UC_ARM_REG_R2, &step_r2);\n+    uc_reg_read(uc, UC_ARM_REG_R3, &step_r3);\n+\n+    printf(\">>> R2: %d\\n\", step_r2);\n+    printf(\">>> R3: %d\\n\\n\", step_r3);\n+\n+    if (step_r2 != r2 || step_r3 != r3) {\n+        printf(\"Failed with ARM ITE blocks stepping!\\n\");\n+    }\n+\n+    uc_close(uc);\n+}\n+\n+\n int main(int argc, char **argv, char **envp)\n {\n     // dynamically load shared library\n@@ -146,7 +211,8 @@ int main(int argc, char **argv, char **envp)\n     test_arm();\n     printf(\"==========================\\n\");\n     test_thumb();\n-\n+    printf(\"==========================\\n\");\n+    test_thumb_ite();\n     // dynamically free shared library\n #ifdef DYNLOAD\n     uc_dyn_free();"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d568885d64c89db5b9a722f0c1bef05aa92f84ca",
            "date": "2024-09-26T11:15:03Z",
            "author_login": "wtdcode"
          },
          {
            "sha": "050f2fbcaf4196b1fe2d39078a6d3fd27f403d56",
            "date": "2024-09-26T11:13:57Z",
            "author_login": "wtdcode"
          },
          {
            "sha": "9e0addd682df9a508d4ca3869e603ea0ea140961",
            "date": "2024-09-26T11:11:53Z",
            "author_login": "wtdcode"
          },
          {
            "sha": "2ccdc0823775d836a87dc91f76ff9f55e6c8253e",
            "date": "2024-09-26T10:47:20Z",
            "author_login": "wtdcode"
          },
          {
            "sha": "867770c7efb7a7b8d57453b0a182ce184b14770b",
            "date": "2024-09-26T10:44:51Z",
            "author_login": "wtdcode"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-787",
    "description": "Unicorn Engine 1.0.2 has an out-of-bounds write in tb_flush_armeb (called from cpu_arm_exec_armeb and tcg_cpu_exec_armeb).",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-07-20T07:15:08.073",
    "last_modified": "2024-11-21T06:14:25.910",
    "fix_date": "2021-03-30T04:06:26Z"
  },
  "references": [
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30391",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/unicorn/OSV-2020-2305.yaml",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/unicorn-engine/unicorn/commit/bf1713d9e011b55ca1f502a6779fc4722b4bb077",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MZ6LOCJXHQVU6SCJLFDJINBOVJYYENLX/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30391",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/google/oss-fuzz-vulns/blob/main/vulns/unicorn/OSV-2020-2305.yaml",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/unicorn-engine/unicorn/commit/bf1713d9e011b55ca1f502a6779fc4722b4bb077",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MZ6LOCJXHQVU6SCJLFDJINBOVJYYENLX/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:02.317784",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "unicorn",
    "owner": "unicorn-engine",
    "created_at": "2015-08-20T16:35:45Z",
    "updated_at": "2025-01-14T15:08:14Z",
    "pushed_at": "2025-01-14T00:47:55Z",
    "size": 16548,
    "stars": 7790,
    "forks": 1361,
    "open_issues": 121,
    "watchers": 7790,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 16868670,
      "Java": 513517,
      "Python": 389911,
      "Pascal": 154018,
      "F#": 145529,
      "Shell": 141870,
      "Rust": 140122,
      "Visual Basic 6.0": 127689,
      "Ruby": 124279,
      "Zig": 110533,
      "Haskell": 105350,
      "Go": 103478,
      "C++": 80861,
      "CMake": 54607,
      "Objective-C": 48840,
      "Makefile": 23244,
      "C#": 18588,
      "Assembly": 2160,
      "Batchfile": 38
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T15:48:09.565870"
  }
}