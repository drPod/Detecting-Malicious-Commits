{
  "cve_id": "CVE-2021-3729",
  "github_data": {
    "repository": "firefly-iii/firefly-iii",
    "fix_commit": "06d319cd71b7787aa919b3ba1ccf51e4ade67712",
    "related_commits": [
      "06d319cd71b7787aa919b3ba1ccf51e4ade67712",
      "06d319cd71b7787aa919b3ba1ccf51e4ade67712"
    ],
    "patch_url": "https://github.com/firefly-iii/firefly-iii/commit/06d319cd71b7787aa919b3ba1ccf51e4ade67712.patch",
    "fix_commit_details": {
      "sha": "06d319cd71b7787aa919b3ba1ccf51e4ade67712",
      "commit_date": "2021-08-20T07:51:00Z",
      "author": {
        "login": "JC5",
        "type": "User",
        "stats": {
          "total_commits": 18382,
          "average_weekly_commits": 33.30072463768116,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "Fix https://huntr.dev/bounties/d32f3d5a-0738-41ba-89de-34f2a772de76/",
        "length": 68,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 189,
        "additions": 125,
        "deletions": 64
      },
      "files": [
        {
          "filename": "app/Http/Controllers/CurrencyController.php",
          "status": "modified",
          "additions": 49,
          "deletions": 37,
          "patch": "@@ -21,6 +21,7 @@\n declare(strict_types=1);\n \n namespace FireflyIII\\Http\\Controllers;\n+\n use FireflyIII\\Exceptions\\FireflyException;\n use FireflyIII\\Http\\Requests\\CurrencyFormRequest;\n use FireflyIII\\Models\\TransactionCurrency;\n@@ -41,7 +42,7 @@\n class CurrencyController extends Controller\n {\n     protected CurrencyRepositoryInterface $repository;\n-    protected UserRepositoryInterface $userRepository;\n+    protected UserRepositoryInterface     $userRepository;\n \n     /**\n      * CurrencyController constructor.\n@@ -54,7 +55,7 @@ public function __construct()\n \n         $this->middleware(\n             function ($request, $next) {\n-                app('view')->share('title', (string) trans('firefly.currencies'));\n+                app('view')->share('title', (string)trans('firefly.currencies'));\n                 app('view')->share('mainTitleIcon', 'fa-usd');\n                 $this->repository     = app(CurrencyRepositoryInterface::class);\n                 $this->userRepository = app(UserRepositoryInterface::class);\n@@ -63,6 +64,7 @@ function ($request, $next) {\n             }\n         );\n     }\n+\n     /**\n      * Create a currency.\n      *\n@@ -75,13 +77,13 @@ public function create(Request $request)\n         /** @var User $user */\n         $user = auth()->user();\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n \n             return redirect(route('currencies.index'));\n         }\n \n         $subTitleIcon = 'fa-plus';\n-        $subTitle     = (string) trans('firefly.create_currency');\n+        $subTitle     = (string)trans('firefly.create_currency');\n \n         // put previous url in session if not redirect from store (not \"create another\").\n         if (true !== session('currencies.create.fromStore')) {\n@@ -102,15 +104,23 @@ public function create(Request $request)\n      *\n      * @return RedirectResponse|Redirector\n      */\n-    public function defaultCurrency(Request $request, TransactionCurrency $currency)\n+    public function defaultCurrency(Request $request)\n     {\n-        app('preferences')->set('currencyPreference', $currency->code);\n-        app('preferences')->mark();\n-\n-        Log::channel('audit')->info(sprintf('Make %s the default currency.', $currency->code));\n-\n-        $this->repository->enable($currency);\n-        $request->session()->flash('success', (string) trans('firefly.new_default_currency', ['name' => $currency->name]));\n+        $currencyId = (int)$request->get('id');\n+        if ($currencyId > 0) {\n+            // valid currency?\n+            $currency = $this->repository->find($currencyId);\n+            if (null !== $currency) {\n+                app('preferences')->set('currencyPreference', $currency->code);\n+                app('preferences')->mark();\n+                Log::channel('audit')->info(sprintf('Make %s the default currency.', $currency->code));\n+\n+                $this->repository->enable($currency);\n+                $request->session()->flash('success', (string)trans('firefly.new_default_currency', ['name' => $currency->name]));\n+\n+                return redirect(route('currencies.index'));\n+            }\n+        }\n \n         return redirect(route('currencies.index'));\n     }\n@@ -129,7 +139,7 @@ public function delete(Request $request, TransactionCurrency $currency)\n         $user = auth()->user();\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n             Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but is not site owner.', $currency->code));\n \n             return redirect(route('currencies.index'));\n@@ -138,7 +148,7 @@ public function delete(Request $request, TransactionCurrency $currency)\n \n         if ($this->repository->currencyInUse($currency)) {\n             $location = $this->repository->currencyInUseAt($currency);\n-            $message  = (string) trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n+            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n             $request->session()->flash('error', $message);\n             Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but currency is in use.', $currency->code));\n \n@@ -147,7 +157,7 @@ public function delete(Request $request, TransactionCurrency $currency)\n \n         // put previous url in session\n         $this->rememberPreviousUri('currencies.delete.uri');\n-        $subTitle = (string) trans('form.delete_currency', ['name' => $currency->name]);\n+        $subTitle = (string)trans('form.delete_currency', ['name' => $currency->name]);\n         Log::channel('audit')->info(sprintf('Visit page to delete currency %s.', $currency->code));\n \n         return prefixView('currencies.delete', compact('currency', 'subTitle'));\n@@ -167,22 +177,22 @@ public function destroy(Request $request, TransactionCurrency $currency)\n         $user = auth()->user();\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n             Log::channel('audit')->info(sprintf('Tried to delete currency %s but is not site owner.', $currency->code));\n \n             return redirect(route('currencies.index'));\n \n         }\n \n         if ($this->repository->currencyInUse($currency)) {\n-            $request->session()->flash('error', (string) trans('firefly.cannot_delete_currency', ['name' => e($currency->name)]));\n+            $request->session()->flash('error', (string)trans('firefly.cannot_delete_currency', ['name' => e($currency->name)]));\n             Log::channel('audit')->info(sprintf('Tried to delete currency %s but is in use.', $currency->code));\n \n             return redirect(route('currencies.index'));\n         }\n \n         if ($this->repository->isFallbackCurrency($currency)) {\n-            $request->session()->flash('error', (string) trans('firefly.cannot_delete_fallback_currency', ['name' => e($currency->name)]));\n+            $request->session()->flash('error', (string)trans('firefly.cannot_delete_fallback_currency', ['name' => e($currency->name)]));\n             Log::channel('audit')->info(sprintf('Tried to delete currency %s but is FALLBACK.', $currency->code));\n \n             return redirect(route('currencies.index'));\n@@ -191,7 +201,7 @@ public function destroy(Request $request, TransactionCurrency $currency)\n         Log::channel('audit')->info(sprintf('Deleted currency %s.', $currency->code));\n         $this->repository->destroy($currency);\n \n-        $request->session()->flash('success', (string) trans('firefly.deleted_currency', ['name' => $currency->name]));\n+        $request->session()->flash('success', (string)trans('firefly.deleted_currency', ['name' => $currency->name]));\n \n         return redirect($this->getPreviousUri('currencies.delete.uri'));\n     }\n@@ -200,8 +210,8 @@ public function destroy(Request $request, TransactionCurrency $currency)\n      * @param Request             $request\n      * @param TransactionCurrency $currency\n      *\n-     * @throws FireflyException\n      * @return RedirectResponse|Redirector\n+     * @throws FireflyException\n      */\n     public function disableCurrency(Request $request, TransactionCurrency $currency)\n     {\n@@ -211,7 +221,7 @@ public function disableCurrency(Request $request, TransactionCurrency $currency)\n         $user = auth()->user();\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n             Log::channel('audit')->info(sprintf('Tried to disable currency %s but is not site owner.', $currency->code));\n \n             return redirect(route('currencies.index'));\n@@ -221,7 +231,7 @@ public function disableCurrency(Request $request, TransactionCurrency $currency)\n         if ($this->repository->currencyInUse($currency)) {\n \n             $location = $this->repository->currencyInUseAt($currency);\n-            $message  = (string) trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n+            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n \n             $request->session()->flash('error', $message);\n             Log::channel('audit')->info(sprintf('Tried to disable currency %s but is in use.', $currency->code));\n@@ -245,10 +255,10 @@ public function disableCurrency(Request $request, TransactionCurrency $currency)\n         }\n \n         if ('EUR' === $currency->code) {\n-            session()->flash('warning', (string) trans('firefly.disable_EUR_side_effects'));\n+            session()->flash('warning', (string)trans('firefly.disable_EUR_side_effects'));\n         }\n \n-        session()->flash('success', (string) trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n+        session()->flash('success', (string)trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n \n         return redirect(route('currencies.index'));\n     }\n@@ -267,21 +277,21 @@ public function edit(Request $request, TransactionCurrency $currency)\n         $user = auth()->user();\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n             Log::channel('audit')->info(sprintf('Tried to edit currency %s but is not owner.', $currency->code));\n \n             return redirect(route('currencies.index'));\n \n         }\n \n         $subTitleIcon     = 'fa-pencil';\n-        $subTitle         = (string) trans('breadcrumbs.edit_currency', ['name' => $currency->name]);\n+        $subTitle         = (string)trans('breadcrumbs.edit_currency', ['name' => $currency->name]);\n         $currency->symbol = htmlentities($currency->symbol);\n \n         // code to handle active-checkboxes\n         $hasOldInput = null !== $request->old('_token');\n         $preFilled   = [\n-            'enabled' => $hasOldInput ? (bool) $request->old('enabled') : $currency->enabled,\n+            'enabled' => $hasOldInput ? (bool)$request->old('enabled') : $currency->enabled,\n         ];\n \n         $request->session()->flash('preFilled', $preFilled);\n@@ -306,7 +316,7 @@ public function enableCurrency(TransactionCurrency $currency)\n         app('preferences')->mark();\n \n         $this->repository->enable($currency);\n-        session()->flash('success', (string) trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n+        session()->flash('success', (string)trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n         Log::channel('audit')->info(sprintf('Enabled currency %s.', $currency->code));\n \n         return redirect(route('currencies.index'));\n@@ -323,8 +333,8 @@ public function index(Request $request)\n     {\n         /** @var User $user */\n         $user       = auth()->user();\n-        $page       = 0 === (int) $request->get('page') ? 1 : (int) $request->get('page');\n-        $pageSize   = (int) app('preferences')->get('listPageSize', 50)->data;\n+        $page       = 0 === (int)$request->get('page') ? 1 : (int)$request->get('page');\n+        $pageSize   = (int)app('preferences')->get('listPageSize', 50)->data;\n         $collection = $this->repository->getAll();\n         $total      = $collection->count();\n         $collection = $collection->slice(($page - 1) * $pageSize, $pageSize);\n@@ -334,12 +344,13 @@ public function index(Request $request)\n         $defaultCurrency = $this->repository->getCurrencyByPreference(app('preferences')->get('currencyPreference', config('firefly.default_currency', 'EUR')));\n         $isOwner         = true;\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n-            $request->session()->flash('info', (string) trans('firefly.ask_site_owner', ['owner' => config('firefly.site_owner')]));\n+            $request->session()->flash('info', (string)trans('firefly.ask_site_owner', ['owner' => config('firefly.site_owner')]));\n             $isOwner = false;\n         }\n \n         return prefixView('currencies.index', compact('currencies', 'defaultCurrency', 'isOwner'));\n     }\n+\n     /**\n      * Store new currency.\n      *\n@@ -367,15 +378,15 @@ public function store(CurrencyFormRequest $request)\n         } catch (FireflyException $e) {\n             Log::error($e->getMessage());\n             Log::channel('audit')->info('Could not store (POST) currency without admin rights.', $data);\n-            $request->session()->flash('error', (string) trans('firefly.could_not_store_currency'));\n+            $request->session()->flash('error', (string)trans('firefly.could_not_store_currency'));\n             $currency = null;\n         }\n         $redirect = redirect($this->getPreviousUri('currencies.create.uri'));\n \n         if (null !== $currency) {\n-            $request->session()->flash('success', (string) trans('firefly.created_currency', ['name' => $currency->name]));\n+            $request->session()->flash('success', (string)trans('firefly.created_currency', ['name' => $currency->name]));\n             Log::channel('audit')->info('Created (POST) currency.', $data);\n-            if (1 === (int) $request->get('create_another')) {\n+            if (1 === (int)$request->get('create_another')) {\n \n                 $request->session()->put('currencies.create.fromStore', true);\n \n@@ -386,6 +397,7 @@ public function store(CurrencyFormRequest $request)\n \n         return $redirect;\n     }\n+\n     /**\n      * Updates a currency.\n      *\n@@ -405,18 +417,18 @@ public function update(CurrencyFormRequest $request, TransactionCurrency $curren\n         }\n         if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string) trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n             Log::channel('audit')->info('Tried to update (POST) currency without admin rights.', $data);\n \n             return redirect(route('currencies.index'));\n \n         }\n         $currency = $this->repository->update($currency, $data);\n         Log::channel('audit')->info('Updated (POST) currency.', $data);\n-        $request->session()->flash('success', (string) trans('firefly.updated_currency', ['name' => $currency->name]));\n+        $request->session()->flash('success', (string)trans('firefly.updated_currency', ['name' => $currency->name]));\n         app('preferences')->mark();\n \n-        if (1 === (int) $request->get('return_to_edit')) {\n+        if (1 === (int)$request->get('return_to_edit')) {\n \n             $request->session()->put('currencies.edit.fromUpdate', true);\n "
        },
        {
          "filename": "public/v1/js/ff/currencies/index.js",
          "status": "added",
          "additions": 43,
          "deletions": 0,
          "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * index.js\n+ * Copyright (c) 2019 james@firefly-iii.org\n+ *\n+ * This file is part of Firefly III (https://github.com/firefly-iii).\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+/**\n+ *\n+ */\n+$(function () {\n+    \"use strict\";\n+    $('.make_default').on('click', setDefaultCurrency);\n+\n+});\n+\n+function setDefaultCurrency(e) {\n+    var button = $(e.currentTarget);\n+    var currencyId = parseInt(button.data('id'));\n+\n+    $.post(makeDefaultUrl, {\n+        _token: token,\n+        id: currencyId\n+    }).done(function (data) {\n+        // lame but it works\n+        location.reload();\n+    }).fail(function () {\n+        console.error('I failed :(');\n+    });\n+}"
        },
        {
          "filename": "resources/views/v1/currencies/index.twig",
          "status": "modified",
          "additions": 32,
          "deletions": 26,
          "patch": "@@ -10,7 +10,7 @@\n             <div class=\"box\">\n                 <div class=\"box-header with-border\">\n                     <h3 class=\"box-title\">{{ 'currencies'|_ }}</h3>\n-                        <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n+                    <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n                 </div>\n                 <div class=\"box-body\">\n                     <p class=\"text-info\">\n@@ -40,46 +40,46 @@\n                                     {% if isOwner %}\n                                         <td>\n                                             <div class=\"btn-group btn-group-xs\">\n-                                                <a class=\"btn btn-default\" href=\"{{ route('currencies.edit',currency.id) }}\"><span class=\"fa fa-fw fa-pencil\"></span></a>\n-                                                <a class=\"btn btn-danger\" href=\"{{ route('currencies.delete',currency.id) }}\"><span class=\"fa fa-fw fa-trash\"></span></a>\n+                                                <a class=\"btn btn-default\" href=\"{{ route('currencies.edit',currency.id) }}\"><span\n+                                                            class=\"fa fa-fw fa-pencil\"></span></a>\n+                                                <a class=\"btn btn-danger\" href=\"{{ route('currencies.delete',currency.id) }}\"><span\n+                                                            class=\"fa fa-fw fa-trash\"></span></a>\n                                             </div>\n                                         </td>\n                                     {% endif %}\n                                     <td>\n                                         {% if currency.enabled == false %}\n-                                            <span class=\"text-muted\">\n+                                        <span class=\"text-muted\">\n                                         {% endif %}\n-                                        {{ currency.name }} ({{ currency.code }}) ({{ currency.symbol|raw }})\n+                                            {{ currency.name }} ({{ currency.code }}) ({{ currency.symbol|raw }})\n                                         {% if currency.id == defaultCurrency.id %}\n-                                        <span class=\"label label-success\" id=\"default-currency\">{{ 'default_currency'|_ }}</span>\n+                                            <span class=\"label label-success\" id=\"default-currency\">{{ 'default_currency'|_ }}</span>\n                                         {% endif %}\n-                                        {% if currency.enabled == false %}\n+                                            {% if currency.enabled == false %}\n                                         </span>\n-                                        <br><small class=\"text-danger\">{{ 'currency_is_disabled'|_ }}</small>\n+                                    <br><small class=\"text-danger\">{{ 'currency_is_disabled'|_ }}</small>\n                                         {% endif %}\n                                     </td>\n \n                                     <td>{{ currency.decimal_places }}</td>\n                                     <td class=\"buttons\">\n                                         <div class=\"btn-group\">\n-                                        {% if currency.id != defaultCurrency.id %}\n-                                            <a class=\"btn btn-default\"\n-                                               href=\"{{ route('currencies.default',currency.id) }}\">\n-                                                <span class=\"fa fa-fw fa-star\"></span>\n-                                                {{ 'make_default_currency'|_ }}</a>\n-                                        {% endif %}\n-                                        {% if currency.enabled %}\n-                                            <a class=\"btn btn-default\"\n-                                               href=\"{{ route('currencies.disable',currency.id) }}\">\n-                                                <span class=\"fa fa-fw fa-square-o\"></span>\n-                                                {{ 'disable_currency'|_ }}</a>\n-                                        {% endif %}\n-                                        {% if not currency.enabled %}\n-                                            <a class=\"btn btn-default\"\n-                                               href=\"{{ route('currencies.enable',currency.id) }}\">\n-                                                <span class=\"fa fa-fw fa-check-square-o\"></span>\n-                                                {{ 'enable_currency'|_ }}</a>\n-                                        {% endif %}\n+                                            {% if currency.id != defaultCurrency.id %}\n+                                                <button data-id=\"{{ currency.id }}\" class=\"make_default btn btn-default\"><span\n+                                                            class=\"fa fa-fw fa-star\"></span> {{ 'make_default_currency'|_ }}</button>\n+                                            {% endif %}\n+                                            {% if currency.enabled %}\n+                                                <a class=\"btn btn-default\"\n+                                                   href=\"{{ route('currencies.disable',currency.id) }}\">\n+                                                    <span class=\"fa fa-fw fa-square-o\"></span>\n+                                                    {{ 'disable_currency'|_ }}</a>\n+                                            {% endif %}\n+                                            {% if not currency.enabled %}\n+                                                <a class=\"btn btn-default\"\n+                                                   href=\"{{ route('currencies.enable',currency.id) }}\">\n+                                                    <span class=\"fa fa-fw fa-check-square-o\"></span>\n+                                                    {{ 'enable_currency'|_ }}</a>\n+                                            {% endif %}\n                                         </div>\n                                     </td>\n                                 </tr>\n@@ -98,3 +98,9 @@\n         </div>\n     </div>\n {% endblock %}\n+{% block scripts %}\n+    <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n+        var makeDefaultUrl = \"{{ route('currencies.default') }}\";\n+    </script>\n+    <script type=\"text/javascript\" src=\"v1/js/ff/currencies/index.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n+{% endblock %}\n\\ No newline at end of file"
        },
        {
          "filename": "routes/web.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -330,7 +330,7 @@ static function () {\n         Route::get('create', ['uses' => 'CurrencyController@create', 'as' => 'create']);\n         Route::get('edit/{currency}', ['uses' => 'CurrencyController@edit', 'as' => 'edit']);\n         Route::get('delete/{currency}', ['uses' => 'CurrencyController@delete', 'as' => 'delete']);\n-        Route::get('default/{currency}', ['uses' => 'CurrencyController@defaultCurrency', 'as' => 'default']);\n+        Route::post('default', ['uses' => 'CurrencyController@defaultCurrency', 'as' => 'default']);\n         Route::get('enable/{currency}', ['uses' => 'CurrencyController@enableCurrency', 'as' => 'enable']);\n         Route::get('disable/{currency}', ['uses' => 'CurrencyController@disableCurrency', 'as' => 'disable']);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "63b34c1853b69e25047f160ef122c9a0114a2f96",
            "date": "2025-01-11T09:05:51Z",
            "author_login": "JC5"
          },
          {
            "sha": "ae80fd8578a28733b75217a2030a5b4302e78d6b",
            "date": "2025-01-03T03:51:42Z",
            "author_login": "JC5"
          },
          {
            "sha": "c17f2efca6a2f831f5e3581674a87e1799f79267",
            "date": "2025-01-03T03:36:41Z",
            "author_login": "JC5"
          },
          {
            "sha": "4a185639b98ac8328059f12e86f3762b62aec3a1",
            "date": "2025-01-03T03:32:51Z",
            "author_login": "JC5"
          },
          {
            "sha": "fb30f7ec8f5e09768861a25de90e7c0c84b95eac",
            "date": "2025-01-02T18:10:39Z",
            "author_login": "JC5"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-352",
    "description": "firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF)",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-08-23T13:15:07.897",
    "last_modified": "2024-11-21T06:22:16.077",
    "fix_date": "2021-08-20T07:51:00Z"
  },
  "references": [
    {
      "url": "https://github.com/firefly-iii/firefly-iii/commit/06d319cd71b7787aa919b3ba1ccf51e4ade67712",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d32f3d5a-0738-41ba-89de-34f2a772de76",
      "source": "security@huntr.dev",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/firefly-iii/firefly-iii/commit/06d319cd71b7787aa919b3ba1ccf51e4ade67712",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d32f3d5a-0738-41ba-89de-34f2a772de76",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.099988",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "firefly-iii",
    "owner": "firefly-iii",
    "created_at": "2014-06-28T07:37:32Z",
    "updated_at": "2025-01-14T10:07:09Z",
    "pushed_at": "2025-01-13T10:32:55Z",
    "size": 302492,
    "stars": 17005,
    "forks": 1540,
    "open_issues": 139,
    "watchers": 17005,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "PHP": 6786878,
      "JavaScript": 2763201,
      "Twig": 936450,
      "Vue": 265560,
      "Blade": 209041,
      "CSS": 207462,
      "SCSS": 5577,
      "Shell": 5223,
      "Standard ML": 866,
      "Procfile": 59
    },
    "commit_activity": {
      "total_commits_last_year": 1180,
      "avg_commits_per_week": 22.692307692307693,
      "days_active_last_year": 227
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:03:09.645260"
  }
}