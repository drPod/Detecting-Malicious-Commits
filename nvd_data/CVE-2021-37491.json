{
  "cve_id": "CVE-2021-37491",
  "github_data": {
    "repository": "dogecoin/dogecoin",
    "fix_commit": "2fb9c1e6681370478e24a19172ed6d78d95d50d3",
    "related_commits": [
      "2fb9c1e6681370478e24a19172ed6d78d95d50d3",
      "2fb9c1e6681370478e24a19172ed6d78d95d50d3"
    ],
    "patch_url": "https://github.com/dogecoin/dogecoin/commit/2fb9c1e6681370478e24a19172ed6d78d95d50d3.patch",
    "fix_commit_details": {
      "sha": "2fb9c1e6681370478e24a19172ed6d78d95d50d3",
      "commit_date": "2018-03-15T20:18:48Z",
      "author": {
        "login": "instagibbs",
        "type": "User",
        "stats": {
          "total_commits": 10,
          "average_weekly_commits": 0.01443001443001443,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 5
        }
      },
      "commit_message": {
        "title": "shuffle selected coins before transaction finalization",
        "length": 54,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 37,
        "additions": 23,
        "deletions": 14
      },
      "files": [
        {
          "filename": "src/wallet/wallet.cpp",
          "status": "modified",
          "additions": 23,
          "deletions": 14,
          "patch": "@@ -2889,20 +2889,11 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n                     nChangePosInOut = -1;\n                 }\n \n-                // Fill vin\n+                // Dummy fill vin for maximum size estimation\n                 //\n-                // Note how the sequence number is set to non-maxint so that\n-                // the nLockTime set above actually works.\n-                //\n-                // BIP125 defines opt-in RBF as any nSequence < maxint-1, so\n-                // we use the highest possible value in that range (maxint-2)\n-                // to avoid conflicting with other possible uses of nSequence,\n-                // and in the spirit of \"smallest possible change from prior\n-                // behavior.\"\n-                const uint32_t nSequence = coin_control.signalRbf ? MAX_BIP125_RBF_SEQUENCE : (CTxIn::SEQUENCE_FINAL - 1);\n-                for (const auto& coin : setCoins)\n-                    txNew.vin.push_back(CTxIn(coin.outpoint,CScript(),\n-                                              nSequence));\n+                for (const auto& coin : setCoins) {\n+                    txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n+                }\n \n                 nBytes = CalculateMaximumSignedTxSize(txNew, this);\n                 if (nBytes < 0) {\n@@ -2992,11 +2983,29 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n \n         if (nChangePosInOut == -1) reservekey.ReturnKey(); // Return any reserved key if we don't have change\n \n+        // Shuffle selected coins and fill in final vin\n+        txNew.vin.clear();\n+        std::vector<CInputCoin> selected_coins(setCoins.begin(), setCoins.end());\n+        std::shuffle(selected_coins.begin(), selected_coins.end(), FastRandomContext());\n+\n+        // Note how the sequence number is set to non-maxint so that\n+        // the nLockTime set above actually works.\n+        //\n+        // BIP125 defines opt-in RBF as any nSequence < maxint-1, so\n+        // we use the highest possible value in that range (maxint-2)\n+        // to avoid conflicting with other possible uses of nSequence,\n+        // and in the spirit of \"smallest possible change from prior\n+        // behavior.\"\n+        const uint32_t nSequence = coin_control.signalRbf ? MAX_BIP125_RBF_SEQUENCE : (CTxIn::SEQUENCE_FINAL - 1);\n+        for (const auto& coin : selected_coins) {\n+            txNew.vin.push_back(CTxIn(coin.outpoint, CScript(), nSequence));\n+        }\n+\n         if (sign)\n         {\n             CTransaction txNewConst(txNew);\n             int nIn = 0;\n-            for (const auto& coin : setCoins)\n+            for (const auto& coin : selected_coins)\n             {\n                 const CScript& scriptPubKey = coin.txout.scriptPubKey;\n                 SignatureData sigdata;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3875eaf9cc5e3e35a1a4982005c057b735bf0882",
            "date": "2025-01-06T22:20:57Z",
            "author_login": "patricklodder"
          },
          {
            "sha": "e34cd76e1f5ce27df0191927731ea19206af528d",
            "date": "2025-01-01T07:59:41Z",
            "author_login": "oliveredget"
          },
          {
            "sha": "6144c75abe9802186ae1ba038513eadef8f22363",
            "date": "2025-01-01T07:59:35Z",
            "author_login": "oliveredget"
          },
          {
            "sha": "b8e2670cd0b8698f89f057ad71014caf26cb1c35",
            "date": "2025-01-01T07:59:29Z",
            "author_login": "oliveredget"
          },
          {
            "sha": "bb213aaf8d6647d518ddd5a4fb3a37f34694feb4",
            "date": "2025-01-01T07:59:21Z",
            "author_login": "oliveredget"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": null,
    "description": "An issue discovered in src/wallet/wallet.cpp in Dogecoin Project Dogecoin Core 1.14.3 and earlier allows attackers to view sensitive information via CWallet::CreateTransaction() function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-07T14:15:08.557",
    "last_modified": "2024-11-21T06:15:15.793",
    "fix_date": "2018-03-15T20:18:48Z"
  },
  "references": [
    {
      "url": "http://dogecoin.com",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/VPRLab/BlkVulnReport/blob/main/NDSS23_BlockScope.pdf",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Technical Description"
      ]
    },
    {
      "url": "https://github.com/bitcoin/bitcoin/commit/2fb9c1e6681370478e24a19172ed6d78d95d50d3",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dogecoin/dogecoin/blob/master/src/wallet/wallet.cpp#L2628-L2640",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/dogecoin/dogecoin/issues/2279",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "http://dogecoin.com",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/VPRLab/BlkVulnReport/blob/main/NDSS23_BlockScope.pdf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Technical Description"
      ]
    },
    {
      "url": "https://github.com/bitcoin/bitcoin/commit/2fb9c1e6681370478e24a19172ed6d78d95d50d3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dogecoin/dogecoin/blob/master/src/wallet/wallet.cpp#L2628-L2640",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/dogecoin/dogecoin/issues/2279",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.998310",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dogecoin",
    "owner": "dogecoin",
    "created_at": "2013-12-06T11:38:05Z",
    "updated_at": "2025-01-14T17:24:37Z",
    "pushed_at": "2025-01-06T22:20:57Z",
    "size": 195448,
    "stars": 14844,
    "forks": 2931,
    "open_issues": 238,
    "watchers": 14844,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "1.4-archive",
      "1.6-archive",
      "1.7-archive",
      "1.8-archive",
      "1.10-archive",
      "1.14-maint",
      "1.21-dev",
      "master"
    ],
    "languages": {
      "C++": 5335048,
      "Python": 1280415,
      "C": 1262006,
      "M4": 219771,
      "Makefile": 105748,
      "Shell": 55865,
      "Sage": 41479,
      "Assembly": 28178,
      "HTML": 20943,
      "CMake": 14198,
      "Objective-C++": 7103,
      "Dockerfile": 1093,
      "QMake": 825,
      "Nix": 234
    },
    "commit_activity": {
      "total_commits_last_year": 201,
      "avg_commits_per_week": 3.8653846153846154,
      "days_active_last_year": 92
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:35:51.885347"
  }
}