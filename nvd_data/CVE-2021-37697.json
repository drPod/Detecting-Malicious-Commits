{
  "cve_id": "CVE-2021-37697",
  "github_data": {
    "repository": "tmercswims/tmerc-cogs",
    "fix_commit": "d63c49b4cfc30c795336e4fff08cba3795e0fcc0",
    "related_commits": [
      "d63c49b4cfc30c795336e4fff08cba3795e0fcc0",
      "d63c49b4cfc30c795336e4fff08cba3795e0fcc0"
    ],
    "patch_url": "https://github.com/tmercswims/tmerc-cogs/commit/d63c49b4cfc30c795336e4fff08cba3795e0fcc0.patch",
    "fix_commit_details": {
      "sha": "d63c49b4cfc30c795336e4fff08cba3795e0fcc0",
      "commit_date": "2021-08-11T03:28:01Z",
      "author": {
        "login": "tmercswims",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(Welcome): only allow use of safe model attributes",
        "length": 53,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 62,
        "additions": 61,
        "deletions": 1
      },
      "files": [
        {
          "filename": "welcome/safemodels.py",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+import discord\n+\n+\n+class SafeMember:\n+    def __init__(self, member: discord.Member) -> None:\n+        self.name = str(member.name)\n+        self.display_name = str(member.display_name)\n+        self.nick = str(member.nick)\n+        self.id = str(member.id)\n+        self.mention = str(member.mention)\n+        self.discriminator = str(member.discriminator)\n+        self.color = str(member.color)\n+        self.colour = str(member.colour)\n+        self.created_at = str(member.created_at)\n+        self.joined_at = str(member.joined_at)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def __getattr__(self, name):\n+        return self\n+\n+\n+class SafeRole:\n+    def __init__(self, role: discord.Role) -> None:\n+        self.name = str(role.name)\n+        self.id = str(role.id)\n+        self.mention = str(role.mention)\n+        self.color = str(role.color)\n+        self.colour = str(role.colour)\n+        self.position = str(role.position)\n+        self.created_at = str(role.created_at)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def __getattr__(self, name):\n+        return self\n+\n+\n+class SafeGuild:\n+    def __init__(self, guild: discord.Guild) -> None:\n+        self.name = str(guild.name)\n+        self.id = str(guild.id)\n+        self.description = str(guild.description)\n+        self.created_at = str(guild.created_at)\n+\n+    def __str__(self):\n+        return self.name\n+\n+    def __getattr__(self, name):\n+        return self"
        },
        {
          "filename": "welcome/welcome.py",
          "status": "modified",
          "additions": 9,
          "deletions": 1,
          "patch": "@@ -10,6 +10,7 @@\n \n from .enums import WhisperType\n from .errors import WhisperError\n+from .safemodels import SafeGuild, SafeMember\n \n __author__ = \"tmerc\"\n \n@@ -791,7 +792,14 @@ async def __send_notice(\n \n         try:\n             return await channel.send(\n-                format_str.format(member=user, server=guild, bot=user, count=count or \"\", plural=plural, roles=role_str)\n+                format_str.format(\n+                    member=SafeMember(user),\n+                    server=SafeGuild(guild),\n+                    bot=SafeMember(user),\n+                    count=count or \"\",\n+                    plural=plural,\n+                    roles=role_str,\n+                )\n             )\n         except discord.Forbidden:\n             log.error("
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6e165d94300186b8dc354bba74a57ffd16ded101",
            "date": "2024-06-18T06:32:10Z",
            "author_login": "tmercswims"
          },
          {
            "sha": "3343d644229b465f767c2855e92d18494e2adc89",
            "date": "2024-06-18T06:26:14Z",
            "author_login": "tmercswims"
          },
          {
            "sha": "304c365425ecfb862590159231fb462d2539d514",
            "date": "2024-06-17T00:45:35Z",
            "author_login": "tmercswims"
          },
          {
            "sha": "8948fc8590aa2f75b69d8d7c4d9233d23d1842ac",
            "date": "2024-06-17T00:45:07Z",
            "author_login": "tmercswims"
          },
          {
            "sha": "d9f3cbdd0b72246ee9fcd126022636baeaac28ab",
            "date": "2024-06-17T00:43:53Z",
            "author_login": "tmercswims"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N",
    "cwe_id": "CWE-306",
    "description": "tmerc-cogs are a collection of open source plugins for the Red Discord bot. A vulnerability has been found in the code that allows any user to access sensitive information by crafting a specific membership event message. Issue is patched in commit d63c49b4cfc30c795336e4fff08cba3795e0fcc0. As a workaround users may unload the Welcome cog.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-08-11T23:15:08.107",
    "last_modified": "2024-11-21T06:15:43.800",
    "fix_date": "2021-08-11T03:28:01Z"
  },
  "references": [
    {
      "url": "https://github.com/tmercswims/tmerc-cogs/commit/d63c49b4cfc30c795336e4fff08cba3795e0fcc0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-77xv-8c2x-j96j",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tmercswims/tmerc-cogs/commit/d63c49b4cfc30c795336e4fff08cba3795e0fcc0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-77xv-8c2x-j96j",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.065619",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tmerc-cogs",
    "owner": "tmercswims",
    "created_at": "2016-08-10T07:10:42Z",
    "updated_at": "2024-11-12T02:07:30Z",
    "pushed_at": "2024-06-18T06:32:25Z",
    "size": 1967,
    "stars": 36,
    "forks": 28,
    "open_issues": 9,
    "watchers": 36,
    "has_security_policy": false,
    "default_branch": "v3",
    "protected_branches": [
      "v3"
    ],
    "languages": {
      "Python": 74595,
      "PowerShell": 614,
      "Batchfile": 461,
      "Shell": 437,
      "Makefile": 66
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:15:13.165793"
  }
}