{
  "cve_id": "CVE-2021-37703",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "aed65ec16d38886d7be7209d8c02df4ffd4937a4",
    "related_commits": [
      "aed65ec16d38886d7be7209d8c02df4ffd4937a4",
      "aed65ec16d38886d7be7209d8c02df4ffd4937a4"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/aed65ec16d38886d7be7209d8c02df4ffd4937a4.patch",
    "fix_commit_details": {
      "sha": "aed65ec16d38886d7be7209d8c02df4ffd4937a4",
      "commit_date": "2021-08-11T03:01:13Z",
      "author": {
        "login": "tgxworld",
        "type": "User",
        "stats": {
          "total_commits": 4679,
          "average_weekly_commits": 6.7518037518037515,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 404
        }
      },
      "commit_message": {
        "title": "SECURITY: User's read state for topic is leaked to unauthorized clients.",
        "length": 178,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 71,
        "additions": 62,
        "deletions": 9
      },
      "files": [
        {
          "filename": "app/models/topic_tracking_state.rb",
          "status": "modified",
          "additions": 17,
          "deletions": 8,
          "patch": "@@ -145,6 +145,15 @@ def self.publish_unread(post)\n     return unless post.topic.regular?\n     # TODO at high scale we are going to have to defer this,\n     #   perhaps cut down to users that are around in the last 7 days as well\n+    tags = nil\n+    tag_ids = nil\n+    if include_tags_in_report?\n+      tag_ids, tags = post.topic.tags.pluck(:id, :name).transpose\n+    end\n+\n+    scope = TopicUser\n+      .tracking(post.topic_id)\n+      .includes(user: :user_stat)\n \n     group_ids =\n       if post.post_type == Post.types[:whisper]\n@@ -153,15 +162,13 @@ def self.publish_unread(post)\n         post.topic.category && post.topic.category.secure_group_ids\n       end\n \n-    tags = nil\n-    tag_ids = nil\n-    if include_tags_in_report?\n-      tag_ids, tags = post.topic.tags.pluck(:id, :name).transpose\n+    if group_ids.present?\n+      scope = scope\n+        .joins(\"INNER JOIN group_users gu ON gu.user_id = topic_users.user_id\")\n+        .where(\"gu.group_id IN (?)\", group_ids)\n     end\n \n-    TopicUser\n-      .tracking(post.topic_id)\n-      .includes(user: :user_stat)\n+    scope\n       .select([:user_id, :last_read_post_number, :notification_level])\n       .each do |tu|\n \n@@ -188,7 +195,9 @@ def self.publish_unread(post)\n         payload: payload\n       }\n \n-      MessageBus.publish(self.unread_channel_key(tu.user_id), message.as_json, group_ids: group_ids)\n+      MessageBus.publish(self.unread_channel_key(tu.user_id), message.as_json,\n+        user_ids: [tu.user_id]\n+      )\n     end\n \n   end"
        },
        {
          "filename": "spec/components/post_creator_spec.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -137,7 +137,8 @@\n         Jobs.run_immediately!\n         UserActionManager.enable\n \n-        admin = Fabricate(:admin)\n+        admin = Fabricate(:user)\n+        admin.grant_admin!\n \n         cat = Fabricate(:category)\n         cat.set_permissions(admins: :full)"
        },
        {
          "filename": "spec/models/topic_tracking_state_spec.rb",
          "status": "modified",
          "additions": 43,
          "deletions": 0,
          "patch": "@@ -48,11 +48,54 @@\n \n       data = message.data\n \n+      expect(message.user_ids).to contain_exactly(post.user.id)\n+      expect(message.group_ids).to eq(nil)\n       expect(data[\"topic_id\"]).to eq(topic.id)\n       expect(data[\"message_type\"]).to eq(described_class::UNREAD_MESSAGE_TYPE)\n       expect(data[\"payload\"][\"archetype\"]).to eq(Archetype.default)\n     end\n \n+    it \"does not publish whisper post to non-staff users\" do\n+      post.update!(post_type: Post.types[:whisper])\n+\n+      messages = MessageBus.track_publish(described_class.unread_channel_key(post.user_id)) do\n+        TopicTrackingState.publish_unread(post)\n+      end\n+\n+      expect(messages).to eq([])\n+\n+      post.user.grant_admin!\n+\n+      message = MessageBus.track_publish(described_class.unread_channel_key(post.user_id)) do\n+        TopicTrackingState.publish_unread(post)\n+      end.first\n+\n+      expect(message.user_ids).to contain_exactly(post.user_id)\n+      expect(message.group_ids).to eq(nil)\n+    end\n+\n+    it \"correctly publishes unread for a post in a restricted category\" do\n+      group = Fabricate(:group)\n+      category = Fabricate(:private_category, group: group)\n+\n+      post.topic.update!(category: category)\n+\n+      messages = MessageBus.track_publish(described_class.unread_channel_key(post.user_id)) do\n+        TopicTrackingState.publish_unread(post)\n+      end\n+\n+      expect(messages).to eq([])\n+\n+      group.add(post.user)\n+\n+      message = MessageBus.track_publish(described_class.unread_channel_key(post.user_id)) do\n+        TopicTrackingState.publish_unread(post)\n+      end.first\n+\n+      expect(message.user_ids).to contain_exactly(post.user_id)\n+      expect(message.group_ids).to eq(nil)\n+    end\n+\n     describe 'for a private message' do\n       before do\n         TopicUser.change("
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          },
          {
            "sha": "7330cfa76a6e6ab7bf90702fb1db5e1a37a2eca1",
            "date": "2025-01-14T13:28:16Z",
            "author_login": "awesomerobot"
          },
          {
            "sha": "f8c493f3c4ee5e38dff460288996c780a6458e29",
            "date": "2025-01-14T12:47:05Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6cb8b576d0c7902b99cbb39bc7aaa473d454118a",
            "date": "2025-01-14T12:46:14Z",
            "author_login": "CvX"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Discourse is an open-source platform for community discussion. In Discourse before versions 2.7.8 and 2.8.0.beta5, a user's read state for a topic such as the last read post number and the notification level is exposed.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-08-13T16:15:07.827",
    "last_modified": "2024-11-21T06:15:44.747",
    "fix_date": "2021-08-11T03:01:13Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/aed65ec16d38886d7be7209d8c02df4ffd4937a4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-gq2h-qhg2-phf9",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/aed65ec16d38886d7be7209d8c02df4ffd4937a4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-gq2h-qhg2-phf9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.081527",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}