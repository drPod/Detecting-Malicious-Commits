{
  "cve_id": "CVE-2021-3818",
  "github_data": {
    "repository": "getgrav/grav",
    "fix_commit": "c51fb1779b83f620c0b6f3548d4a96322b55df07",
    "related_commits": [
      "c51fb1779b83f620c0b6f3548d4a96322b55df07",
      "c51fb1779b83f620c0b6f3548d4a96322b55df07"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c51fb1779b83f620c0b6f3548d4a96322b55df07",
      "commit_date": "2021-09-14T15:28:07Z",
      "author": {
        "login": "mahagr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed `Session::setFlashCookieObject()` to use the same options as the main session cookie",
        "length": 90,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 47,
        "additions": 25,
        "deletions": 22
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -13,6 +13,7 @@\n     * Fixed validation of `number` type [#3433](https://github.com/getgrav/grav/issues/3433)\n     * Fixed excessive `security.yaml` file creation [#3432](https://github.com/getgrav/grav/issues/3432)\n     * Fixed incorrect port :0 with nginx unix socket setup [#3439](https://github.com/getgrav/grav/issues/3439)\n+    * Fixed `Session::setFlashCookieObject()` to use the same options as the main session cookie\n \n # v1.7.20\n ## 09/01/2021"
        },
        {
          "filename": "system/src/Grav/Common/Session.php",
          "status": "modified",
          "additions": 8,
          "deletions": 4,
          "patch": "@@ -12,6 +12,7 @@\n use Grav\\Common\\Form\\FormFlash;\n use Grav\\Events\\SessionStartEvent;\n use Grav\\Plugin\\Form\\Forms;\n+use JsonException;\n use function is_string;\n \n /**\n@@ -148,10 +149,11 @@ public function getFlashObject($name)\n      * @param mixed $object\n      * @param int $time\n      * @return $this\n+     * @throws JsonException\n      */\n     public function setFlashCookieObject($name, $object, $time = 60)\n     {\n-        setcookie($name, json_encode($object), time() + $time, '/');\n+        setcookie($name, json_encode($object, JSON_THROW_ON_ERROR), $this->getCookieOptions($time));\n \n         return $this;\n     }\n@@ -161,13 +163,15 @@ public function setFlashCookieObject($name, $object, $time = 60)\n      *\n      * @param string $name\n      * @return mixed|null\n+     * @throws JsonException\n      */\n     public function getFlashCookieObject($name)\n     {\n         if (isset($_COOKIE[$name])) {\n-            $object = json_decode($_COOKIE[$name], false);\n-            setcookie($name, '', time() - 3600, '/');\n-            return $object;\n+            $cookie = $_COOKIE[$name];\n+            setcookie($name, '', $this->getCookieOptions(-42000));\n+\n+            return json_decode($cookie, false, 512, JSON_THROW_ON_ERROR);\n         }\n \n         return null;"
        },
        {
          "filename": "system/src/Grav/Framework/Session/Session.php",
          "status": "modified",
          "additions": 16,
          "deletions": 18,
          "patch": "@@ -338,23 +338,12 @@ public function invalidate()\n     {\n         $name = $this->getName();\n         if (null !== $name) {\n-            $params = session_get_cookie_params();\n-\n-            $cookie_options = array (\n-                'expires'  => time() - 42000,\n-                'path'     => $params['path'],\n-                'domain'   => $params['domain'],\n-                'secure'   => $params['secure'],\n-                'httponly' => $params['httponly'],\n-                'samesite' => $params['samesite']\n-            );\n-\n             $this->removeCookie();\n \n             setcookie(\n                 session_name(),\n                 '',\n-                $cookie_options\n+                $this->getCookieOptions(-42000)\n             );\n         }\n \n@@ -463,27 +452,36 @@ protected function onSessionStart(): void\n     }\n \n     /**\n-     * @return void\n+     * Store something in cookie temporarily.\n+     *\n+     * @param int|null $lifetime\n+     * @return array\n      */\n-    protected function setCookie(): void\n+    public function getCookieOptions(int $lifetime = null): array\n     {\n         $params = session_get_cookie_params();\n \n-        $cookie_options = array (\n-            'expires'  => time() + $params['lifetime'],\n+        return [\n+            'expires'  => time() + ($lifetime ?? $params['lifetime']),\n             'path'     => $params['path'],\n             'domain'   => $params['domain'],\n             'secure'   => $params['secure'],\n             'httponly' => $params['httponly'],\n             'samesite' => $params['samesite']\n-        );\n+        ];\n+    }\n \n+    /**\n+     * @return void\n+     */\n+    protected function setCookie(): void\n+    {\n         $this->removeCookie();\n \n         setcookie(\n             session_name(),\n             session_id(),\n-            $cookie_options\n+            $this->getCookieOptions()\n         );\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "08d74df6e39081cca28cbd1e1430b53a574aa4b9",
            "date": "2025-01-24T22:23:06Z",
            "author_login": "rhukster"
          },
          {
            "sha": "2620e836d4ac0ad495173efdfe98d0a2db94f92c",
            "date": "2025-01-18T12:39:11Z",
            "author_login": "odolbeau"
          },
          {
            "sha": "7e723eb7f57414e8236ccd08804895d75a827990",
            "date": "2025-01-13T12:30:17Z",
            "author_login": "rhukster"
          },
          {
            "sha": "1d1d8da431ec0f63b38685ef0e911603dcf7a804",
            "date": "2025-01-07T13:53:09Z",
            "author_login": "Rotzbua"
          },
          {
            "sha": "4097d85daa4597acef44451416d42a8c671f5226",
            "date": "2025-01-06T14:14:42Z",
            "author_login": "rhukster"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-565",
    "description": "grav is vulnerable to Reliance on Cookies without Validation and Integrity Checking",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-27T13:15:07.777",
    "last_modified": "2024-11-21T06:22:31.747",
    "fix_date": "2021-09-14T15:28:07Z"
  },
  "references": [
    {
      "url": "https://github.com/getgrav/grav/commit/c51fb1779b83f620c0b6f3548d4a96322b55df07",
      "source": "security@huntr.dev",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c2bc65af-7b93-4020-886e-8cdaeb0a58ea",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/commit/c51fb1779b83f620c0b6f3548d4a96322b55df07",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c2bc65af-7b93-4020-886e-8cdaeb0a58ea",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.788617",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "grav",
    "owner": "getgrav",
    "created_at": "2014-08-02T18:29:10Z",
    "updated_at": "2025-01-26T02:39:23Z",
    "pushed_at": "2025-01-24T22:23:11Z",
    "size": 29229,
    "stars": 14667,
    "forks": 1418,
    "open_issues": 431,
    "watchers": 14667,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "PHP": 2924877,
      "CSS": 8627,
      "Twig": 1772,
      "JavaScript": 1393,
      "Logos": 908
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:06:36.704233"
  }
}