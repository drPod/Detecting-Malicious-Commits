{
  "cve_id": "CVE-2021-3819",
  "github_data": {
    "repository": "firefly-iii/firefly-iii",
    "fix_commit": "578f350498b75f31d321c78a608c7f7b3b7b07e9",
    "related_commits": [
      "578f350498b75f31d321c78a608c7f7b3b7b07e9",
      "578f350498b75f31d321c78a608c7f7b3b7b07e9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "578f350498b75f31d321c78a608c7f7b3b7b07e9",
      "commit_date": "2021-09-20T04:39:10Z",
      "author": {
        "login": "JC5",
        "type": "User",
        "stats": {
          "total_commits": 18461,
          "average_weekly_commits": 33.32310469314079,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 548
        }
      },
      "commit_message": {
        "title": "Convert GET routes to POST.",
        "length": 27,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 238,
        "additions": 167,
        "deletions": 71
      },
      "files": [
        {
          "filename": "app/Http/Controllers/CurrencyController.php",
          "status": "modified",
          "additions": 53,
          "deletions": 39,
          "patch": "@@ -213,52 +213,59 @@ public function destroy(Request $request, TransactionCurrency $currency)\n      * @return RedirectResponse|Redirector\n      * @throws FireflyException\n      */\n-    public function disableCurrency(Request $request, TransactionCurrency $currency)\n+    public function disableCurrency(Request $request)\n     {\n-        app('preferences')->mark();\n+        $currencyId = (int)$request->get('id');\n+        if ($currencyId > 0) {\n+            // valid currency?\n+            $currency = $this->repository->find($currencyId);\n+            if (null !== $currency) {\n+                app('preferences')->mark();\n \n-        /** @var User $user */\n-        $user = auth()->user();\n-        if (!$this->userRepository->hasRole($user, 'owner')) {\n+                /** @var User $user */\n+                $user = auth()->user();\n+                if (!$this->userRepository->hasRole($user, 'owner')) {\n \n-            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n-            Log::channel('audit')->info(sprintf('Tried to disable currency %s but is not site owner.', $currency->code));\n+                    $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n+                    Log::channel('audit')->info(sprintf('Tried to disable currency %s but is not site owner.', $currency->code));\n \n-            return redirect(route('currencies.index'));\n+                    return redirect(route('currencies.index'));\n \n-        }\n+                }\n \n-        if ($this->repository->currencyInUse($currency)) {\n+                if ($this->repository->currencyInUse($currency)) {\n \n-            $location = $this->repository->currencyInUseAt($currency);\n-            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n+                    $location = $this->repository->currencyInUseAt($currency);\n+                    $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n \n-            $request->session()->flash('error', $message);\n-            Log::channel('audit')->info(sprintf('Tried to disable currency %s but is in use.', $currency->code));\n+                    $request->session()->flash('error', $message);\n+                    Log::channel('audit')->info(sprintf('Tried to disable currency %s but is in use.', $currency->code));\n \n-            return redirect(route('currencies.index'));\n-        }\n+                    return redirect(route('currencies.index'));\n+                }\n \n-        $this->repository->disable($currency);\n-        Log::channel('audit')->info(sprintf('Disabled currency %s.', $currency->code));\n-        // if no currencies are enabled, enable the first one in the DB (usually the EUR)\n-        if (0 === $this->repository->get()->count()) {\n-            /** @var TransactionCurrency $first */\n-            $first = $this->repository->getAll()->first();\n-            if (null === $first) {\n-                throw new FireflyException('No currencies found.');\n-            }\n-            Log::channel('audit')->info(sprintf('Auto-enabled currency %s.', $first->code));\n-            $this->repository->enable($first);\n-            app('preferences')->set('currencyPreference', $first->code);\n-            app('preferences')->mark();\n-        }\n+                $this->repository->disable($currency);\n+                Log::channel('audit')->info(sprintf('Disabled currency %s.', $currency->code));\n+                // if no currencies are enabled, enable the first one in the DB (usually the EUR)\n+                if (0 === $this->repository->get()->count()) {\n+                    /** @var TransactionCurrency $first */\n+                    $first = $this->repository->getAll()->first();\n+                    if (null === $first) {\n+                        throw new FireflyException('No currencies found.');\n+                    }\n+                    Log::channel('audit')->info(sprintf('Auto-enabled currency %s.', $first->code));\n+                    $this->repository->enable($first);\n+                    app('preferences')->set('currencyPreference', $first->code);\n+                    app('preferences')->mark();\n+                }\n \n-        if ('EUR' === $currency->code) {\n-            session()->flash('warning', (string)trans('firefly.disable_EUR_side_effects'));\n-        }\n+                if ('EUR' === $currency->code) {\n+                    session()->flash('warning', (string)trans('firefly.disable_EUR_side_effects'));\n+                }\n \n-        session()->flash('success', (string)trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n+                session()->flash('success', (string)trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n+            }\n+        }\n \n         return redirect(route('currencies.index'));\n     }\n@@ -311,13 +318,20 @@ public function edit(Request $request, TransactionCurrency $currency)\n      *\n      * @return RedirectResponse|Redirector\n      */\n-    public function enableCurrency(TransactionCurrency $currency)\n+    public function enableCurrency(Request $request)\n     {\n-        app('preferences')->mark();\n+        $currencyId = (int)$request->get('id');\n+        if ($currencyId > 0) {\n+            // valid currency?\n+            $currency = $this->repository->find($currencyId);\n+            if (null !== $currency) {\n+                app('preferences')->mark();\n \n-        $this->repository->enable($currency);\n-        session()->flash('success', (string)trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n-        Log::channel('audit')->info(sprintf('Enabled currency %s.', $currency->code));\n+                $this->repository->enable($currency);\n+                session()->flash('success', (string)trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n+                Log::channel('audit')->info(sprintf('Enabled currency %s.', $currency->code));\n+            }\n+        }\n \n         return redirect(route('currencies.index'));\n     }"
        },
        {
          "filename": "app/Http/Controllers/Transaction/CreateController.php",
          "status": "modified",
          "additions": 28,
          "deletions": 17,
          "patch": "@@ -28,17 +28,20 @@\n use FireflyIII\\Http\\Controllers\\Controller;\n use FireflyIII\\Models\\TransactionGroup;\n use FireflyIII\\Repositories\\Account\\AccountRepositoryInterface;\n+use FireflyIII\\Repositories\\TransactionGroup\\TransactionGroupRepositoryInterface;\n use FireflyIII\\Services\\Internal\\Update\\GroupCloneService;\n use Illuminate\\Contracts\\View\\Factory;\n use Illuminate\\Contracts\\View\\View;\n-use Illuminate\\Http\\RedirectResponse;\n-use Illuminate\\Routing\\Redirector;\n+use Illuminate\\Http\\JsonResponse;\n+use Illuminate\\Http\\Request;\n \n /**\n  * Class CreateController\n  */\n class CreateController extends Controller\n {\n+    private TransactionGroupRepositoryInterface $repository;\n+\n     /**\n      * CreateController constructor.\n      *\n@@ -49,38 +52,46 @@ public function __construct()\n         parent::__construct();\n \n         $this->middleware(\n-            static function ($request, $next) {\n+            function ($request, $next) {\n                 app('view')->share('title', (string)trans('firefly.transactions'));\n                 app('view')->share('mainTitleIcon', 'fa-exchange');\n+                $this->repository = app(TransactionGroupRepositoryInterface::class);\n \n                 return $next($request);\n             }\n         );\n     }\n \n     /**\n-     * @param TransactionGroup $group\n+     * @param Request $request\n      *\n-     * @return RedirectResponse|Redirector\n+     * @return JsonResponse\n      */\n-    public function cloneGroup(TransactionGroup $group)\n+    public function cloneGroup(Request $request): JsonResponse\n     {\n+        $groupId = (int)$request->get('id');\n+        if (0 !== $groupId) {\n+            $group = $this->repository->find($groupId);\n+            if (null !== $group) {\n+                /** @var GroupCloneService $service */\n+                $service  = app(GroupCloneService::class);\n+                $newGroup = $service->cloneGroup($group);\n \n-        /** @var GroupCloneService $service */\n-        $service  = app(GroupCloneService::class);\n-        $newGroup = $service->cloneGroup($group);\n+                // event!\n+                event(new StoredTransactionGroup($newGroup));\n \n-        // event!\n-        event(new StoredTransactionGroup($newGroup));\n+                app('preferences')->mark();\n \n-        app('preferences')->mark();\n+                $title = $newGroup->title ?? $newGroup->transactionJournals->first()->description;\n+                $link  = route('transactions.show', [$newGroup->id]);\n+                session()->flash('success', trans('firefly.stored_journal', ['description' => $title]));\n+                session()->flash('success_url', $link);\n \n-        $title = $newGroup->title ?? $newGroup->transactionJournals->first()->description;\n-        $link  = route('transactions.show', [$newGroup->id]);\n-        session()->flash('success', trans('firefly.stored_journal', ['description' => $title]));\n-        session()->flash('success_url', $link);\n+                return response()->json(['redirect' => route('transactions.show', [$newGroup->id])]);\n+            }\n+        }\n \n-        return redirect(route('transactions.show', [$newGroup->id]));\n+        return response()->json(['redirect' => route('transactions.show', [$groupId])]);\n     }\n \n     /**"
        },
        {
          "filename": "public/v1/js/ff/currencies/index.js",
          "status": "modified",
          "additions": 35,
          "deletions": 0,
          "patch": "@@ -25,6 +25,8 @@ $(function () {\n     \"use strict\";\n     $('.make_default').on('click', setDefaultCurrency);\n \n+    $('.enable-currency').on('click', enableCurrency);\n+    $('.disable-currency').on('click', disableCurrency);\n });\n \n function setDefaultCurrency(e) {\n@@ -40,4 +42,37 @@ function setDefaultCurrency(e) {\n     }).fail(function () {\n         console.error('I failed :(');\n     });\n+    return false;\n+}\n+\n+function enableCurrency(e) {\n+    var button = $(e.currentTarget);\n+    var currencyId = parseInt(button.data('id'));\n+\n+    $.post(enableCurrencyUrl, {\n+        _token: token,\n+        id: currencyId\n+    }).done(function (data) {\n+        // lame but it works\n+        location.reload();\n+    }).fail(function () {\n+        console.error('I failed :(');\n+    });\n+    return false;\n+}\n+\n+function disableCurrency(e) {\n+    var button = $(e.currentTarget);\n+    var currencyId = parseInt(button.data('id'));\n+\n+    $.post(disableCurrencyUrl, {\n+        _token: token,\n+        id: currencyId\n+    }).done(function (data) {\n+        // lame but it works\n+        location.reload();\n+    }).fail(function () {\n+        console.error('I failed :(');\n+    });\n+    return false;\n }"
        },
        {
          "filename": "public/v1/js/ff/list/groups.js",
          "status": "modified",
          "additions": 17,
          "deletions": 1,
          "patch": "@@ -23,6 +23,7 @@ var count = 0;\n $(document).ready(function () {\n     updateListButtons();\n     addSort();\n+    $('.clone-transaction').click(cloneTransaction);\n });\n \n var fixHelper = function (e, tr) {\n@@ -206,4 +207,19 @@ function updateActionButtons() {\n     if (0 === count) {\n         $('.action-menu').hide();\n     }\n-}\n\\ No newline at end of file\n+}\n+function cloneTransaction(e) {\n+    var button = $(e.currentTarget);\n+    var groupId = parseInt(button.data('id'));\n+\n+    $.post(cloneGroupUrl, {\n+        _token: token,\n+        id: groupId\n+    }).done(function (data) {\n+        // lame but it works\n+        location.href = data.redirect;\n+    }).fail(function () {\n+        console.error('I failed :(');\n+    });\n+    return false;\n+}"
        },
        {
          "filename": "public/v1/js/ff/transactions/show.js",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -23,6 +23,7 @@\n $(function () {\n     \"use strict\";\n     $('.link-modal').click(getLinkModal);\n+    $('.clone-transaction').click(cloneTransaction);\n     $('#linkJournalModal').on('shown.bs.modal', function () {\n         makeAutoComplete();\n     })\n@@ -80,3 +81,19 @@ function selectedJournal(event, journal) {\n     $('#selected-journal').html('<a href=\"' + groupURI.replace('%GROUP%', journal.transaction_group_id) + '\">' + journal.description + '</a>').show();\n     $('input[name=\"opposing\"]').val(journal.id);\n }\n+\n+function cloneTransaction(e) {\n+    var button = $(e.currentTarget);\n+    var groupId = parseInt(button.data('id'));\n+\n+    $.post(cloneGroupUrl, {\n+        _token: token,\n+        id: groupId\n+    }).done(function (data) {\n+        // lame but it works\n+        location.href = data.redirect;\n+    }).fail(function () {\n+        console.error('I failed :(');\n+    });\n+    return false;\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "resources/views/v1/currencies/index.twig",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -69,14 +69,14 @@\n                                                             class=\"fa fa-fw fa-star\"></span> {{ 'make_default_currency'|_ }}</button>\n                                             {% endif %}\n                                             {% if currency.enabled %}\n-                                                <a class=\"btn btn-default\"\n-                                                   href=\"{{ route('currencies.disable',currency.id) }}\">\n+                                                <a class=\"btn btn-default disable-currency\" data-id=\"{{ currency.id }}\"\n+                                                   href=\"#\">\n                                                     <span class=\"fa fa-fw fa-square-o\"></span>\n                                                     {{ 'disable_currency'|_ }}</a>\n                                             {% endif %}\n                                             {% if not currency.enabled %}\n-                                                <a class=\"btn btn-default\"\n-                                                   href=\"{{ route('currencies.enable',currency.id) }}\">\n+                                                <a class=\"btn btn-default enable-currency\" data-id=\"{{ currency.id }}\"\n+                                                   href=\"#\">\n                                                     <span class=\"fa fa-fw fa-check-square-o\"></span>\n                                                     {{ 'enable_currency'|_ }}</a>\n                                             {% endif %}\n@@ -101,6 +101,8 @@\n {% block scripts %}\n     <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n         var makeDefaultUrl = \"{{ route('currencies.default') }}\";\n+        var disableCurrencyUrl = \"{{ route('currencies.disable') }}\";\n+        var enableCurrencyUrl = \"{{ route('currencies.enable') }}\";\n     </script>\n     <script type=\"text/javascript\" src=\"v1/js/ff/currencies/index.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n {% endblock %}"
        },
        {
          "filename": "resources/views/v1/list/groups.twig",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -85,7 +85,7 @@\n                                             class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                             <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                             class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n-                            <li><a href=\"{{ route('transactions.clone', [group.id]) }}\"><span\n+                            <li><a href=\"#\" data-id=\"{{ group.id }}\" class=\"clone-transaction\"><span\n                                             class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                         </ul>\n                     </div>\n@@ -249,7 +249,7 @@\n                                                 class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                                 <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                                 class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n-                                <li><a href=\"{{ route('transactions.clone', [group.id]) }}\"><span\n+                                <li><a href=\"#\" data-id=\"{{ group.id }}\" class=\"clone-transaction\"><span\n                                                 class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                                 <li>\n                                     <a href=\"{{ route('rules.create-from-journal', [transaction.transaction_journal_id]) }}\"><span\n@@ -309,3 +309,6 @@\n     </tr>\n     </tfoot>\n </table>\n+<script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n+    var cloneGroupUrl = '{{ route('transactions.clone') }}';\n+</script>"
        },
        {
          "filename": "resources/views/v1/transactions/show.twig",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -35,9 +35,8 @@\n \n                             {#  clone #}\n                             {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n-                                <!-- since 5.1.0 -->\n                                 <li role=\"separator\" class=\"divider\"></li>\n-                                <li><a href=\"{{ route('transactions.clone', [transactionGroup.id]) }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n+                                <li><a href=\"#\" class=\"clone-transaction\" data-id=\"{{ transactionGroup.id }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                             {% endif %}\n \n                         </ul>\n@@ -208,9 +207,8 @@\n \n                                 {#  clone #}\n                                 {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n-                                    <!-- since 5.1.0 -->\n                                     <li role=\"separator\" class=\"divider\"></li>\n-                                    <li><a href=\"{{ route('transactions.clone', [transactionGroup.id]) }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n+                                    <li><a href=\"#\" data-id=\"{{ transactionGroup.id }}\" class=\"clone-transaction\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                                 {% endif %}\n \n                                 <li><a href=\"#\" class=\"link-modal\" data-journal=\"{{ journal.transaction_journal_id }}\"><span class=\"fa fa-fw fa-link\"></span>{{ 'link_transaction'|_ }}</a></li>\n@@ -219,7 +217,6 @@\n                                 <li><a href=\"{{ route('recurring.create-from-journal', [journal.transaction_journal_id]) }}\"><span class=\"fa fa-fw fa-paint-brush\"></span>{{ 'create_recurring_from_transaction'|_ }}</a></li>\n                             </ul>\n                         </div>\n-\n                     </div>\n                     <div class=\"box-body no-padding\">\n                         <table class=\"table\">\n@@ -425,6 +422,7 @@\n         var modalDialogURI = '{{ route('transactions.link.modal', ['%JOURNAL%']) }}';\n         var acURI = '{{ route('api.v1.autocomplete.transactions-with-id') }}';\n         var groupURI = '{{ route('transactions.show',['%GROUP%']) }}';\n+        var cloneGroupUrl = '{{ route('transactions.clone') }}';\n     </script>\n     <script type=\"text/javascript\" src=\"v1/js/lib/typeahead/typeahead.bundle.min.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n     <script type=\"text/javascript\" src=\"v1/js/ff/transactions/show.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>"
        },
        {
          "filename": "routes/web.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -338,8 +338,8 @@ static function () {\n         Route::get('edit/{currency}', ['uses' => 'CurrencyController@edit', 'as' => 'edit']);\n         Route::get('delete/{currency}', ['uses' => 'CurrencyController@delete', 'as' => 'delete']);\n         Route::post('default', ['uses' => 'CurrencyController@defaultCurrency', 'as' => 'default']);\n-        Route::get('enable/{currency}', ['uses' => 'CurrencyController@enableCurrency', 'as' => 'enable']);\n-        Route::get('disable/{currency}', ['uses' => 'CurrencyController@disableCurrency', 'as' => 'disable']);\n+        Route::post('enable', ['uses' => 'CurrencyController@enableCurrency', 'as' => 'enable']);\n+        Route::post('disable', ['uses' => 'CurrencyController@disableCurrency', 'as' => 'disable']);\n \n         Route::post('store', ['uses' => 'CurrencyController@store', 'as' => 'store']);\n         Route::post('update/{currency}', ['uses' => 'CurrencyController@update', 'as' => 'update']);\n@@ -1012,7 +1012,7 @@ static function () {\n         Route::post('store', ['uses' => 'Transaction\\CreateController@store', 'as' => 'store']);\n \n         // clone group\n-        Route::get('clone/{transactionGroup}', ['uses' => 'Transaction\\CreateController@cloneGroup', 'as' => 'clone']);\n+        Route::post('clone', ['uses' => 'Transaction\\CreateController@cloneGroup', 'as' => 'clone']);\n \n         // edit group\n         Route::get('edit/{transactionGroup}', ['uses' => 'Transaction\\EditController@edit', 'as' => 'edit']);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 9,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a9805b144ac95324acb0d413100c6f28cabe1836",
            "date": "2025-01-22T03:37:48Z",
            "author_login": "JC5"
          },
          {
            "sha": "e1b8b9b3ae7d8a23ab7f979e4c7f0ebf25eb4f89",
            "date": "2025-01-21T21:02:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b2516ca1b41adb292eab73818e8442d51b68f7fe",
            "date": "2025-01-19T18:12:01Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "053b46ae63ab0ec38b4b62360e50717fe4aa04b5",
            "date": "2025-01-19T18:07:19Z",
            "author_login": "JC5"
          },
          {
            "sha": "6e836aceec1e85711bf8dc6c6d9c1b4157a9e35c",
            "date": "2025-01-19T17:55:03Z",
            "author_login": "JC5"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-352",
    "description": "firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF)",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-27T13:15:07.830",
    "last_modified": "2024-11-21T06:22:31.893",
    "fix_date": "2021-09-20T04:39:10Z"
  },
  "references": [
    {
      "url": "https://github.com/firefly-iii/firefly-iii/commit/578f350498b75f31d321c78a608c7f7b3b7b07e9",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/da82f7b6-4ffc-4109-87a4-a2a790bd44e5",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/firefly-iii/firefly-iii/commit/578f350498b75f31d321c78a608c7f7b3b7b07e9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/da82f7b6-4ffc-4109-87a4-a2a790bd44e5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.788752",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "firefly-iii",
    "owner": "firefly-iii",
    "created_at": "2014-06-28T07:37:32Z",
    "updated_at": "2025-01-26T07:01:51Z",
    "pushed_at": "2025-01-26T06:44:44Z",
    "size": 303081,
    "stars": 17115,
    "forks": 1549,
    "open_issues": 140,
    "watchers": 17115,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "PHP": 6844092,
      "JavaScript": 2766006,
      "Twig": 936859,
      "Vue": 283926,
      "Blade": 209044,
      "CSS": 207533,
      "SCSS": 5577,
      "Shell": 5226,
      "Standard ML": 866,
      "Procfile": 59
    },
    "commit_activity": {
      "total_commits_last_year": 1222,
      "avg_commits_per_week": 23.5,
      "days_active_last_year": 228
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:48:26.086112"
  }
}