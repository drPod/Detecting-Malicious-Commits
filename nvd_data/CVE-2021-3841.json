{
  "cve_id": "CVE-2021-3841",
  "github_data": {
    "repository": "sylius/sylius",
    "fix_commit": "3da169e0c23e752974d74223cc536c29a2a82edc",
    "related_commits": [
      "3da169e0c23e752974d74223cc536c29a2a82edc"
    ],
    "patch_url": "https://github.com/sylius/sylius/commit/3da169e0c23e752974d74223cc536c29a2a82edc.patch",
    "fix_commit_details": {
      "sha": "3da169e0c23e752974d74223cc536c29a2a82edc",
      "commit_date": "2022-03-14T14:03:56Z",
      "author": {
        "login": "Zales0123",
        "type": "User",
        "stats": {
          "total_commits": 2429,
          "average_weekly_commits": 3.5825958702064895,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 302
        }
      },
      "commit_message": {
        "title": "bug #13765 [Security] Fixes for SVG XSS, wrong cache for logged in users and clickjacking (ernestWarwas, lchrusciel, GSadee, Zales0123, Rafikooo)",
        "length": 2682,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 772,
        "additions": 764,
        "deletions": 8
      },
      "files": [
        {
          "filename": "composer.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -35,6 +35,7 @@\n         \"doctrine/migrations\": \"^3.0\",\n         \"doctrine/orm\": \"^2.7\",\n         \"egulias/email-validator\": \"^2.1\",\n+        \"enshrined/svg-sanitize\": \"^0.15.4\",\n         \"fakerphp/faker\": \"^1.9\",\n         \"friendsofphp/proxy-manager-lts\": \"^1.0\",\n         \"friendsofsymfony/oauth-server-bundle\": \">2.0.0-alpha.0 ^2.0@dev\","
        },
        {
          "filename": "features/account/customer_account/securing_access_to_account_after_using_back_button_after_logging_out.feature",
          "status": "added",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -0,0 +1,17 @@\n+@customer_account\n+Feature: Securing access to the account after using the back button after logging out\n+    In order to have my personal information secured\n+    As a Customer\n+    I want to be unable to access to the account by using the back button after logging out\n+\n+    Background:\n+        Given the store operates on a single channel in \"United States\"\n+        And I am a logged in customer\n+        And I am browsing my orders\n+\n+    @ui @javascript @no-api\n+    Scenario: Securing access to the account after using the back button after logging out\n+        When I log out\n+        And I go back one page in the browser\n+        Then I should not see my orders\n+        And I should be on the login page"
        },
        {
          "filename": "features/admin/securing_access_to_account_after_using_back_button_after_logging_out.feature",
          "status": "added",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -0,0 +1,17 @@\n+@admin_dashboard\n+Feature: Securing access to the administration panel after using the back button after logging out\n+    In order to have administration panel secured\n+    As an Administrator\n+    I want to be unable to access to the administration panel by using the back button after logging out\n+\n+    Background:\n+        Given the store operates on a single channel in \"United States\"\n+        And I am logged in as an administrator\n+        And I am on the administration dashboard\n+\n+    @ui @javascript @no-api\n+    Scenario: Securing access to administration dashboard after using the back button after logging out\n+        When I log out\n+        And I go back one page in the browser\n+        Then I should not see the administration dashboard\n+        And I should be on the login page"
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/Admin/DashboardContext.php",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -30,9 +30,10 @@ public function __construct(DashboardPageInterface $dashboardPage)\n     }\n \n     /**\n+     * @Given I am on the administration dashboard\n      * @When I (try to )open administration dashboard\n      */\n-    public function iOpenAdministrationDashboard()\n+    public function iOpenAdministrationDashboard(): void\n     {\n         try {\n             $this->dashboardPage->open();\n@@ -56,6 +57,14 @@ public function iChooseChannel($channelName)\n         $this->dashboardPage->chooseChannel($channelName);\n     }\n \n+    /**\n+     * @When I log out\n+     */\n+    public function iLogOut(): void\n+    {\n+        $this->dashboardPage->logOut();\n+    }\n+\n     /**\n      * @Then I should see :number new orders\n      */\n@@ -103,4 +112,12 @@ public function iShouldSeeNewOrdersInTheList($number)\n     {\n         Assert::same($this->dashboardPage->getNumberOfNewOrdersInTheList(), (int) $number);\n     }\n+\n+    /**\n+     * @Then I should not see the administration dashboard\n+     */\n+    public function iShouldNotSeeTheAdministrationDashboard(): void\n+    {\n+        Assert::false($this->dashboardPage->isOpen());\n+    }\n }"
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/Admin/LoginContext.php",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -141,4 +141,12 @@ private function logInAgain($username, $password)\n         $this->loginPage->specifyPassword($password);\n         $this->loginPage->logIn();\n     }\n+\n+    /**\n+     * @Then I should be on the login page\n+     */\n+    public function iShouldBeOnTheLoginPage(): void\n+    {\n+        Assert::true($this->loginPage->isOpen());\n+    }\n }"
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/BrowserContext.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -0,0 +1,36 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Behat\\Context\\Ui;\n+\n+use Behat\\Behat\\Context\\Context;\n+use Sylius\\Behat\\Element\\BrowserElementInterface;\n+\n+final class BrowserContext implements Context\n+{\n+    /** @var BrowserElementInterface */\n+    private $browserElement;\n+\n+    public function __construct(BrowserElementInterface $browserElement)\n+    {\n+        $this->browserElement = $browserElement;\n+    }\n+\n+    /**\n+     * @When I go back one page in the browser\n+     */\n+    public function iGoBackOnePageInTheBrowser(): void\n+    {\n+        $this->browserElement->goBack();\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/Shop/AccountContext.php",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -263,9 +263,10 @@ public function iShouldBeNotifiedThatThePasswordShouldBeAtLeastCharactersLong()\n     }\n \n     /**\n+     * @Given I am browsing my orders\n      * @When I browse my orders\n      */\n-    public function iBrowseMyOrders()\n+    public function iBrowseMyOrders(): void\n     {\n         $this->orderIndexPage->open();\n     }\n@@ -531,4 +532,20 @@ public function iShouldNotBeLoggedIn(): void\n \n         throw new \\InvalidArgumentException('Dashboard has been openned, but it shouldn\\'t as customer should not be logged in');\n     }\n+\n+    /**\n+     * @Then I should not see my orders\n+     */\n+    public function iShouldNotSeeMyOrders(): void\n+    {\n+        Assert::false($this->orderIndexPage->isOpen());\n+    }\n+\n+    /**\n+     * @Then I should be on the login page\n+     */\n+    public function iShouldBeOnTheLoginPage(): void\n+    {\n+        Assert::true($this->loginPage->isOpen());\n+    }\n }"
        },
        {
          "filename": "src/Sylius/Behat/Element/BrowserElement.php",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Behat\\Element;\n+\n+use FriendsOfBehat\\PageObjectExtension\\Element\\Element;\n+\n+final class BrowserElement extends Element implements BrowserElementInterface\n+{\n+    public function goBack(): void\n+    {\n+        $this->getDriver()->back();\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Behat/Element/BrowserElementInterface.php",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Behat\\Element;\n+\n+interface BrowserElementInterface\n+{\n+    public function goBack(): void;\n+}"
        },
        {
          "filename": "src/Sylius/Behat/Resources/config/services/contexts/ui.xml",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -299,6 +299,10 @@\n             <tag name=\"fob.context_service\" />\n         </service>\n \n+        <service id=\"sylius.behat.context.ui.browser\" class=\"Sylius\\Behat\\Context\\Ui\\BrowserContext\">\n+            <argument type=\"service\" id=\"sylius.behat.element.browser\" />\n+        </service>\n+\n         <service id=\"sylius.behat.context.ui.channel\" class=\"Sylius\\Behat\\Context\\Ui\\ChannelContext\">\n             <argument type=\"service\" id=\"sylius.behat.shared_storage\" />\n             <argument type=\"service\" id=\"sylius.behat.channel_context_setter\" />"
        },
        {
          "filename": "src/Sylius/Behat/Resources/config/services/elements.xml",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -20,10 +20,13 @@\n         <import resource=\"elements/shop.xml\" />\n         <import resource=\"elements/product.xml\" />\n     </imports>\n+\n     <services>\n         <service id=\"sylius.behat.element\" class=\"FriendsOfBehat\\PageObjectExtension\\Element\\Element\" abstract=\"true\" public=\"false\">\n             <argument type=\"service\" id=\"behat.mink.default_session\" />\n             <argument type=\"service\" id=\"behat.mink.parameters\" />\n         </service>\n+\n+        <service id=\"sylius.behat.element.browser\" class=\"Sylius\\Behat\\Element\\BrowserElement\" parent=\"sylius.behat.element\" public=\"false\" />\n     </services>\n </container>"
        },
        {
          "filename": "src/Sylius/Behat/Resources/config/suites/ui/account/customer.yml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -33,6 +33,7 @@ default:\n                 - sylius.behat.context.setup.user\n                 - sylius.behat.context.setup.zone\n \n+                - sylius.behat.context.ui.browser\n                 - sylius.behat.context.ui.channel\n                 - sylius.behat.context.ui.email\n                 - sylius.behat.context.ui.shop.account\n@@ -44,6 +45,7 @@ default:\n                 - sylius.behat.context.ui.shop.checkout.shipping\n                 - sylius.behat.context.ui.shop.currency\n                 - sylius.behat.context.ui.shop.homepage\n+                - sylius.behat.context.ui.user\n \n             filters:\n                 tags: \"@customer_account&&@ui\""
        },
        {
          "filename": "src/Sylius/Behat/Resources/config/suites/ui/admin/dashboard.yml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -26,7 +26,9 @@ default:\n                 - sylius.behat.context.transform.shared_storage\n \n                 - sylius.behat.context.ui.admin.dashboard\n+                - sylius.behat.context.ui.admin.login\n                 - sylius.behat.context.ui.admin.notification\n+                - sylius.behat.context.ui.browser\n \n             filters:\n                 tags: \"@admin_dashboard&&@ui\""
        },
        {
          "filename": "src/Sylius/Bundle/AdminBundle/EventListener/AdminSectionCacheControlSubscriber.php",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Bundle\\AdminBundle\\EventListener;\n+\n+use Sylius\\Bundle\\AdminBundle\\SectionResolver\\AdminSection;\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionProviderInterface;\n+use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+\n+final class AdminSectionCacheControlSubscriber implements EventSubscriberInterface\n+{\n+    /** @var SectionProviderInterface */\n+    private $sectionProvider;\n+\n+    public function __construct(SectionProviderInterface $sectionProvider)\n+    {\n+        $this->sectionProvider = $sectionProvider;\n+    }\n+\n+    public static function getSubscribedEvents(): array\n+    {\n+        return [\n+            KernelEvents::RESPONSE => 'setCacheControlDirectives',\n+        ];\n+    }\n+\n+    public function setCacheControlDirectives(ResponseEvent $event): void\n+    {\n+        if (!$this->sectionProvider->getSection() instanceof AdminSection) {\n+            return;\n+        }\n+\n+        $response = $event->getResponse();\n+\n+        $response->headers->addCacheControlDirective('no-cache', true);\n+        $response->headers->addCacheControlDirective('max-age', '0');\n+        $response->headers->addCacheControlDirective('must-revalidate', true);\n+        $response->headers->addCacheControlDirective('no-store', true);\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/AdminBundle/Resources/config/services/listener.xml",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -25,5 +25,10 @@\n             <argument type=\"service\" id=\"session\" />\n             <tag name=\"kernel.event_subscriber\" event=\"kernel.exception\" />\n         </service>\n+\n+        <service id=\"sylius.event_subscriber.admin_cache_control_subscriber\" class=\"Sylius\\Bundle\\AdminBundle\\EventListener\\AdminSectionCacheControlSubscriber\">\n+            <argument type=\"service\" id=\"sylius.section_resolver.uri_based_section_resolver\" />\n+            <tag name=\"kernel.event_subscriber\" event=\"kernel.response\" />\n+        </service>\n     </services>\n </container>"
        },
        {
          "filename": "src/Sylius/Bundle/AdminBundle/spec/EventListener/AdminSectionCacheControlSubscriberSpec.php",
          "status": "added",
          "additions": 93,
          "deletions": 0,
          "patch": "@@ -0,0 +1,93 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace spec\\Sylius\\Bundle\\AdminBundle\\EventListener;\n+\n+use PhpSpec\\ObjectBehavior;\n+use Sylius\\Bundle\\AdminBundle\\SectionResolver\\AdminSection;\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionInterface;\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionProviderInterface;\n+use Symfony\\Component\\HttpFoundation\\Request;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use Symfony\\Component\\HttpFoundation\\ResponseHeaderBag;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\HttpKernelInterface;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+use Symfony\\Component\\HttpKernel\\KernelInterface;\n+\n+final class AdminSectionCacheControlSubscriberSpec extends ObjectBehavior\n+{\n+    function let(SectionProviderInterface $sectionProvider): void\n+    {\n+        $this->beConstructedWith($sectionProvider);\n+    }\n+\n+    function it_subscribes_to_kernel_response_event(): void\n+    {\n+        $this::getSubscribedEvents()->shouldReturn([KernelEvents::RESPONSE => 'setCacheControlDirectives']);\n+    }\n+\n+    function it_adds_cache_control_directives_to_admin_requests(\n+        SectionProviderInterface $sectionProvider,\n+        HttpKernelInterface $kernel,\n+        Request $request,\n+        Response $response,\n+        ResponseHeaderBag $responseHeaderBag,\n+        AdminSection $adminSection\n+    ): void {\n+        $sectionProvider->getSection()->willReturn($adminSection);\n+\n+        $response->headers = $responseHeaderBag->getWrappedObject();\n+\n+        $event = new ResponseEvent(\n+            $kernel->getWrappedObject(),\n+            $request->getWrappedObject(),\n+            KernelInterface::MASTER_REQUEST,\n+            $response->getWrappedObject()\n+        );\n+\n+        $responseHeaderBag->addCacheControlDirective('no-cache', true)->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('max-age', '0')->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('must-revalidate', true)->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('no-store', true)->shouldBeCalled();\n+\n+        $this->setCacheControlDirectives($event);\n+    }\n+\n+    function it_does_nothing_if_section_is_different_than_admin(\n+        SectionProviderInterface $sectionProvider,\n+        HttpKernelInterface $kernel,\n+        Request $request,\n+        Response $response,\n+        ResponseHeaderBag $responseHeaderBag,\n+        SectionInterface $section\n+    ): void {\n+        $sectionProvider->getSection()->willReturn($section);\n+\n+        $response->headers = $responseHeaderBag->getWrappedObject();\n+\n+        $event = new ResponseEvent(\n+            $kernel->getWrappedObject(),\n+            $request->getWrappedObject(),\n+            KernelInterface::MASTER_REQUEST,\n+            $response->getWrappedObject()\n+        );\n+\n+        $responseHeaderBag->addCacheControlDirective('no-cache', true)->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('max-age', '0')->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('must-revalidate', true)->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('no-store', true)->shouldNotBeCalled();\n+\n+        $this->setCacheControlDirectives($event);\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/ApiBundle/composer.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -26,6 +26,7 @@\n         \"php\": \"^7.3\",\n         \"api-platform/core\": \"^2.5\",\n         \"doctrine/dbal\": \"^2.7\",\n+        \"enshrined/svg-sanitize\": \"^0.15.4\",\n         \"lexik/jwt-authentication-bundle\": \"^2.6\",\n         \"sylius/core-bundle\": \"^1.7\",\n         \"symfony/messenger\": \"^4.4 || ^5.2\""
        },
        {
          "filename": "src/Sylius/Bundle/CoreBundle/EventListener/XFrameOptionsSubscriber.php",
          "status": "added",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -0,0 +1,48 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Bundle\\CoreBundle\\EventListener;\n+\n+use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+\n+final class XFrameOptionsSubscriber implements EventSubscriberInterface\n+{\n+    public static function getSubscribedEvents(): array\n+    {\n+        return [\n+            KernelEvents::RESPONSE => 'onKernelResponse',\n+        ];\n+    }\n+\n+    public function onKernelResponse(ResponseEvent $event): void\n+    {\n+        if (!$this->isMainRequest($event)) {\n+            return;\n+        }\n+\n+        $response = $event->getResponse();\n+\n+        $response->headers->set('X-Frame-Options', 'sameorigin');\n+    }\n+\n+    private function isMainRequest(ResponseEvent $event): bool\n+    {\n+        if (\\method_exists($event, 'isMainRequest')) {\n+            return $event->isMainRequest();\n+        }\n+\n+        return $event->isMasterRequest();\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/CoreBundle/Resources/config/services/listeners.xml",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -95,6 +95,10 @@\n             <argument type=\"service\" id=\"Sylius\\Bundle\\CoreBundle\\EventListener\\LocaleAwareListener.inner\" />\n         </service>\n \n+        <service id=\"Sylius\\Bundle\\CoreBundle\\EventListener\\XFrameOptionsSubscriber\">\n+            <tag name=\"kernel.event_subscriber\" />\n+        </service>\n+\n         <service id=\"sylius.listener.taxon_deletion\" class=\"Sylius\\Bundle\\CoreBundle\\EventListener\\TaxonDeletionListener\">\n             <argument type=\"service\" id=\"session\" />\n             <argument type=\"service\" id=\"sylius.repository.channel\" />"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/EventListener/ShopCustomerAccountSubSectionCacheControlSubscriber.php",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Bundle\\ShopBundle\\EventListener;\n+\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionProviderInterface;\n+use Sylius\\Bundle\\ShopBundle\\SectionResolver\\ShopCustomerAccountSubSection;\n+use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+\n+final class ShopCustomerAccountSubSectionCacheControlSubscriber implements EventSubscriberInterface\n+{\n+    /** @var SectionProviderInterface */\n+    private $sectionProvider;\n+\n+    public function __construct(SectionProviderInterface $sectionProvider)\n+    {\n+        $this->sectionProvider = $sectionProvider;\n+    }\n+\n+    public static function getSubscribedEvents(): array\n+    {\n+        return [\n+            KernelEvents::RESPONSE => 'setCacheControlDirectives',\n+        ];\n+    }\n+\n+    public function setCacheControlDirectives(ResponseEvent $event): void\n+    {\n+        if (!$this->sectionProvider->getSection() instanceof ShopCustomerAccountSubSection) {\n+            return;\n+        }\n+\n+        $response = $event->getResponse();\n+\n+        $response->headers->addCacheControlDirective('no-cache', true);\n+        $response->headers->addCacheControlDirective('max-age', '0');\n+        $response->headers->addCacheControlDirective('must-revalidate', true);\n+        $response->headers->addCacheControlDirective('no-store', true);\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/Resources/config/services.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -30,6 +30,7 @@\n         </service>\n \n         <service id=\"sylius.section_resolver.shop_uri_based_section_resolver\" class=\"Sylius\\Bundle\\ShopBundle\\SectionResolver\\ShopUriBasedSectionResolver\">\n+            <argument>account</argument>\n             <tag name=\"sylius.uri_based_section_resolver\" priority=\"-10\" />\n         </service>\n "
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/Resources/config/services/listeners.xml",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -25,6 +25,11 @@\n             <tag name=\"kernel.event_listener\" event=\"sylius.customer.post_update\" method=\"sendVerificationEmail\" />\n         </service>\n \n+        <service id=\"sylius.listener.shop_customer_account_sub_section_cache_control_subscriber\" class=\"Sylius\\Bundle\\ShopBundle\\EventListener\\ShopCustomerAccountSubSectionCacheControlSubscriber\">\n+            <argument type=\"service\" id=\"sylius.section_resolver.uri_based_section_resolver\" />\n+            <tag name=\"kernel.event_subscriber\" event=\"kernel.response\" />\n+        </service>\n+\n         <service id=\"sylius.listener.order_customer_ip\" class=\"Sylius\\Bundle\\ShopBundle\\EventListener\\OrderCustomerIpListener\">\n             <argument type=\"service\" id=\"sylius.customer_ip_assigner\" />\n             <argument type=\"service\" id=\"request_stack\" />"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/SectionResolver/ShopCustomerAccountSubSection.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Bundle\\ShopBundle\\SectionResolver;\n+\n+class ShopCustomerAccountSubSection extends ShopSection\n+{\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/SectionResolver/ShopUriBasedSectionResolver.php",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -18,8 +18,20 @@\n \n final class ShopUriBasedSectionResolver implements UriBasedSectionResolverInterface\n {\n+    /** @var string */\n+    private $shopCustomerAccountUri;\n+\n+    public function __construct(string $shopCustomerAccountUri = 'account')\n+    {\n+        $this->shopCustomerAccountUri = $shopCustomerAccountUri;\n+    }\n+\n     public function getSection(string $uri): SectionInterface\n     {\n+        if (strpos($uri, $this->shopCustomerAccountUri) !== false) {\n+            return new ShopCustomerAccountSubSection();\n+        }\n+\n         return new ShopSection();\n     }\n }"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/spec/EventListener/ShopCustomerAccountSubSectionCacheControlSubscriberSpec.php",
          "status": "added",
          "additions": 93,
          "deletions": 0,
          "patch": "@@ -0,0 +1,93 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace spec\\Sylius\\Bundle\\ShopBundle\\EventListener;\n+\n+use PhpSpec\\ObjectBehavior;\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionInterface;\n+use Sylius\\Bundle\\CoreBundle\\SectionResolver\\SectionProviderInterface;\n+use Sylius\\Bundle\\ShopBundle\\SectionResolver\\ShopCustomerAccountSubSection;\n+use Symfony\\Component\\HttpFoundation\\Request;\n+use Symfony\\Component\\HttpFoundation\\Response;\n+use Symfony\\Component\\HttpFoundation\\ResponseHeaderBag;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\HttpKernelInterface;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+use Symfony\\Component\\HttpKernel\\KernelInterface;\n+\n+final class ShopCustomerAccountSubSectionCacheControlSubscriberSpec extends ObjectBehavior\n+{\n+    function let(SectionProviderInterface $sectionProvider): void\n+    {\n+        $this->beConstructedWith($sectionProvider);\n+    }\n+\n+    function it_subscribes_to_kernel_response_event()\n+    {\n+        $this::getSubscribedEvents()->shouldReturn([KernelEvents::RESPONSE => 'setCacheControlDirectives']);\n+    }\n+\n+    function it_adds_cache_control_directives_to_customer_account_requests(\n+        SectionProviderInterface $sectionProvider,\n+        HttpKernelInterface $kernel,\n+        Request $request,\n+        Response $response,\n+        ResponseHeaderBag $responseHeaderBag,\n+        ShopCustomerAccountSubSection $customerAccountSubSection\n+    ): void {\n+        $sectionProvider->getSection()->willReturn($customerAccountSubSection);\n+\n+        $response->headers = $responseHeaderBag->getWrappedObject();\n+\n+        $event = new ResponseEvent(\n+            $kernel->getWrappedObject(),\n+            $request->getWrappedObject(),\n+            KernelInterface::MASTER_REQUEST,\n+            $response->getWrappedObject()\n+        );\n+\n+        $responseHeaderBag->addCacheControlDirective('no-cache', true)->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('max-age', '0')->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('must-revalidate', true)->shouldBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('no-store', true)->shouldBeCalled();\n+\n+        $this->setCacheControlDirectives($event);\n+    }\n+\n+    function it_does_nothing_if_section_is_different_than_customer_account(\n+        SectionProviderInterface $sectionProvider,\n+        HttpKernelInterface $kernel,\n+        Request $request,\n+        Response $response,\n+        ResponseHeaderBag $responseHeaderBag,\n+        SectionInterface $section\n+    ): void {\n+        $sectionProvider->getSection()->willReturn($section);\n+\n+        $response->headers = $responseHeaderBag->getWrappedObject();\n+\n+        $event = new ResponseEvent(\n+            $kernel->getWrappedObject(),\n+            $request->getWrappedObject(),\n+            KernelInterface::MASTER_REQUEST,\n+            $response->getWrappedObject()\n+        );\n+\n+        $responseHeaderBag->addCacheControlDirective('no-cache', true)->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('max-age', '0')->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('must-revalidate', true)->shouldNotBeCalled();\n+        $responseHeaderBag->addCacheControlDirective('no-store', true)->shouldNotBeCalled();\n+\n+        $this->setCacheControlDirectives($event);\n+    }\n+}"
        },
        {
          "filename": "src/Sylius/Bundle/ShopBundle/spec/SectionResolver/ShopUriBasedSectionResolverSpec.php",
          "status": "modified",
          "additions": 27,
          "deletions": 1,
          "patch": "@@ -15,6 +15,7 @@\n \n use PhpSpec\\ObjectBehavior;\n use Sylius\\Bundle\\CoreBundle\\SectionResolver\\UriBasedSectionResolverInterface;\n+use Sylius\\Bundle\\ShopBundle\\SectionResolver\\ShopCustomerAccountSubSection;\n use Sylius\\Bundle\\ShopBundle\\SectionResolver\\ShopSection;\n \n final class ShopUriBasedSectionResolverSpec extends ObjectBehavior\n@@ -24,7 +25,7 @@ function it_it_uri_based_section_resolver(): void\n         $this->shouldImplement(UriBasedSectionResolverInterface::class);\n     }\n \n-    function it_always_returns_shop(): void\n+    function it_returns_shop_by_default(): void\n     {\n         $this->getSection('/api/something')->shouldBeLike(new ShopSection());\n         $this->getSection('/api')->shouldBeLike(new ShopSection());\n@@ -33,4 +34,29 @@ function it_always_returns_shop(): void\n         $this->getSection('/admin/asd')->shouldBeLike(new ShopSection());\n         $this->getSection('/en_US/api')->shouldBeLike(new ShopSection());\n     }\n+\n+    function it_uses_account_prefix_for_customer_account_subsection_by_default(): void\n+    {\n+        $this->getSection('/account')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/api/account')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/en_US/account')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/account/random')->shouldBeLike(new ShopCustomerAccountSubSection());\n+    }\n+\n+    function it_may_have_account_prefix_customized(): void\n+    {\n+        $this->beConstructedWith('konto');\n+\n+        $this->getSection('/konto')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/konto')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/api/konto')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/en_US/konto')->shouldBeLike(new ShopCustomerAccountSubSection());\n+        $this->getSection('/konto/random')->shouldBeLike(new ShopCustomerAccountSubSection());\n+\n+        $this->getSection('/account')->shouldBeLike(new ShopSection());\n+        $this->getSection('/account')->shouldBeLike(new ShopSection());\n+        $this->getSection('/api/account')->shouldBeLike(new ShopSection());\n+        $this->getSection('/en_US/account')->shouldBeLike(new ShopSection());\n+        $this->getSection('/account/random')->shouldBeLike(new ShopSection());\n+    }\n }"
        },
        {
          "filename": "src/Sylius/Component/Core/Uploader/ImageUploader.php",
          "status": "modified",
          "additions": 21,
          "deletions": 5,
          "patch": "@@ -13,6 +13,7 @@\n \n namespace Sylius\\Component\\Core\\Uploader;\n \n+use enshrined\\svgSanitize\\Sanitizer;\n use Gaufrette\\Filesystem;\n use Sylius\\Component\\Core\\Generator\\ImagePathGeneratorInterface;\n use Sylius\\Component\\Core\\Generator\\UploadedImagePathGenerator;\n@@ -22,12 +23,18 @@\n \n class ImageUploader implements ImageUploaderInterface\n {\n+    private const MIME_SVG_XML = 'image/svg+xml';\n+    private const MIME_SVG = 'image/svg';\n+\n     /** @var Filesystem */\n     protected $filesystem;\n \n     /** @var ImagePathGeneratorInterface */\n     protected $imagePathGenerator;\n \n+    /** @var Sanitizer */\n+    protected $sanitizer;\n+\n     public function __construct(\n         Filesystem $filesystem,\n         ?ImagePathGeneratorInterface $imagePathGenerator = null\n@@ -41,6 +48,7 @@ public function __construct(\n         }\n \n         $this->imagePathGenerator = $imagePathGenerator ?? new UploadedImagePathGenerator();\n+        $this->sanitizer = new Sanitizer();\n     }\n \n     public function upload(ImageInterface $image): void\n@@ -49,11 +57,13 @@ public function upload(ImageInterface $image): void\n             return;\n         }\n \n+        /** @var File $file */\n         $file = $image->getFile();\n \n-        /** @var File $file */\n         Assert::isInstanceOf($file, File::class);\n \n+        $fileContent = $this->sanitizeContent(file_get_contents($file->getPathname()), $file->getMimeType());\n+\n         if (null !== $image->getPath() && $this->has($image->getPath())) {\n             $this->remove($image->getPath());\n         }\n@@ -64,10 +74,7 @@ public function upload(ImageInterface $image): void\n \n         $image->setPath($path);\n \n-        $this->filesystem->write(\n-            $image->getPath(),\n-            file_get_contents($image->getFile()->getPathname())\n-        );\n+        $this->filesystem->write($image->getPath(), $fileContent);\n     }\n \n     public function remove(string $path): bool\n@@ -79,6 +86,15 @@ public function remove(string $path): bool\n         return false;\n     }\n \n+    protected function sanitizeContent(string $fileContent, string $mimeType): string\n+    {\n+        if (self::MIME_SVG_XML === $mimeType || self::MIME_SVG === $mimeType) {\n+            $fileContent = $this->sanitizer->sanitize($fileContent);\n+        }\n+\n+        return $fileContent;\n+    }\n+\n     private function has(string $path): bool\n     {\n         return $this->filesystem->has($path);"
        },
        {
          "filename": "src/Sylius/Component/Core/composer.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -27,6 +27,7 @@\n     ],\n     \"require\": {\n         \"php\": \"^7.3\",\n+        \"enshrined/svg-sanitize\": \"^0.15.4\",\n         \"knplabs/gaufrette\": \"^0.8\",\n         \"payum/payum\": \"^1.6\",\n         \"php-http/guzzle6-adapter\": \"^2.0\","
        },
        {
          "filename": "symfony.lock",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -155,6 +155,9 @@\n     \"egulias/email-validator\": {\n         \"version\": \"2.1.19\"\n     },\n+    \"enshrined/svg-sanitize\": {\n+        \"version\": \"0.15.4\"\n+    },\n     \"fakerphp/faker\": {\n         \"version\": \"v1.12.0\"\n     },"
        },
        {
          "filename": "tests/Controller/XFrameOptionsTest.php",
          "status": "added",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -0,0 +1,29 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Tests\\Controller;\n+\n+use ApiTestCase\\JsonApiTestCase;\n+\n+final class XFrameOptionsTest extends JsonApiTestCase\n+{\n+    /** @test */\n+    public function it_sets_frame_options_header(): void\n+    {\n+        $this->client->request('GET', '/');\n+\n+        $response = $this->client->getResponse();\n+\n+        $this->assertSame('sameorigin', $response->headers->get('X-Frame-Options'));\n+    }\n+}"
        },
        {
          "filename": "tests/EventListener/AdminSectionCacheControlSubscriberTest.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -0,0 +1,31 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Tests\\EventListener;\n+\n+use Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\n+\n+final class AdminSectionCacheControlSubscriberTest extends WebTestCase\n+{\n+    /**\n+     * @test\n+     */\n+    public function it_returns_proper_cache_headers_for_admin_endpoints(): void\n+    {\n+        $client = static::createClient();\n+\n+        $client->request('GET', '/admin/');\n+\n+        $this->assertResponseHeaderSame('Cache-Control', 'max-age=0, must-revalidate, no-cache, no-store, private');\n+    }\n+}"
        },
        {
          "filename": "tests/EventListener/ShopCustomerAccountSubSectionCacheControlSubscriberTest.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -0,0 +1,31 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Tests\\EventListener;\n+\n+use Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\n+\n+final class ShopCustomerAccountSubSectionCacheControlSubscriberTest extends WebTestCase\n+{\n+    /**\n+     * @test\n+     */\n+    public function it_returns_proper_cache_headers_for_customer_account_endpoints(): void\n+    {\n+        $client = static::createClient();\n+\n+        $client->request('GET', '/en_US/account/');\n+\n+        $this->assertResponseHeaderSame('Cache-Control', 'max-age=0, must-revalidate, no-cache, no-store, private');\n+    }\n+}"
        },
        {
          "filename": "tests/Functional/ImageUploaderTest.php",
          "status": "added",
          "additions": 59,
          "deletions": 0,
          "patch": "@@ -0,0 +1,59 @@\n+<?php\n+\n+/*\n+ * This file is part of the Sylius package.\n+ *\n+ * (c) Pawe\u0142 J\u0119drzejewski\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+declare(strict_types=1);\n+\n+namespace Sylius\\Tests\\Functional;\n+\n+use PHPUnit\\Framework\\Assert;\n+use Sylius\\Component\\Core\\Model\\ProductImage;\n+use Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;\n+use Symfony\\Component\\HttpFoundation\\File\\Exception\\FileException;\n+use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\n+use Symfony\\Component\\BrowserKit\\Client;\n+\n+final class ImageUploaderTest extends WebTestCase\n+{\n+    /** @var Client */\n+    private static $client;\n+\n+    /** @test */\n+    public function it_sanitizes_file_content_if_it_is_svg_mime_type(): void\n+    {\n+        self::$client = static::createClient();\n+        self::$container = self::$client->getContainer();\n+\n+        $imageUploader = self::$container->get('sylius.image_uploader');\n+        $fileSystem =  self::$container->get('gaufrette.sylius_image_filesystem');\n+\n+        $file = new UploadedFile(__DIR__ . '/../Resources/xss.svg', 'xss.svg');\n+        Assert::assertStringContainsString('<script', $this->getContent($file));\n+\n+        $image = new ProductImage();\n+        $image->setFile($file);\n+\n+        $imageUploader->upload($image);\n+\n+        $sanitizedFile = $fileSystem->get($image->getPath());\n+        Assert::assertStringNotContainsString('<script', $sanitizedFile->getContent());\n+    }\n+\n+    private function getContent(UploadedFile $file): string\n+    {\n+        $content = file_get_contents($file->getPathname());\n+\n+        if (false === $content) {\n+            throw new FileException(sprintf('Could not get the content of the file \"%s\".', $file->getPathname()));\n+        }\n+\n+        return $content;\n+    }\n+}"
        },
        {
          "filename": "tests/Resources/xss.svg",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n+\n+<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\">\n+    <rect width=\"100\" height=\"100\" style=\"fill:rgb(210,0,37);\" />\n+    <script type=\"text/javascript\">\n+        alert(\"XSS attack\");\n+    </script>\n+</svg>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 11,
        "dependency_files": 0,
        "test_files": 5,
        "unique_directories": 29,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7e6da242b78ccc83264c7441aee20e915f8eebf2",
            "date": "2025-01-13T12:54:41Z",
            "author_login": "GSadee"
          },
          {
            "sha": "d6d6147cc676243d36cf8c17751a774e4c27cedc",
            "date": "2025-01-13T12:54:26Z",
            "author_login": "GSadee"
          },
          {
            "sha": "056e6e9e5ba3d328a0425ad003cfe7d9210c961b",
            "date": "2025-01-13T12:49:52Z",
            "author_login": "GSadee"
          },
          {
            "sha": "cbc97f9516dc2af4668cb955a6ccf73ff411bddf",
            "date": "2025-01-13T12:49:04Z",
            "author_login": "GSadee"
          },
          {
            "sha": "e1ccb8df1c151aa61248523c39836eeb65c34161",
            "date": "2025-01-13T12:46:39Z",
            "author_login": "GSadee"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "sylius/sylius versions prior to 1.9.10, 1.10.11, and 1.11.2 are vulnerable to stored cross-site scripting (XSS) through SVG files. This vulnerability allows attackers to inject malicious scripts that can be executed in the context of the user's browser.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-15T11:15:05.980",
    "last_modified": "2024-11-19T17:11:49.017",
    "fix_date": "2022-03-14T14:03:56Z"
  },
  "references": [
    {
      "url": "https://github.com/sylius/sylius/commit/3da169e0c23e752974d74223cc536c29a2a82edc",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/1625506791178-Sylius/Sylius",
      "source": "security@huntr.dev",
      "tags": [
        "Broken Link"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.302930",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Sylius",
    "owner": "sylius",
    "created_at": "2011-11-05T22:05:52Z",
    "updated_at": "2025-01-13T12:55:02Z",
    "pushed_at": "2025-01-14T12:45:05Z",
    "size": 295706,
    "stars": 8060,
    "forks": 2108,
    "open_issues": 230,
    "watchers": 8060,
    "has_security_policy": false,
    "default_branch": "2.0",
    "protected_branches": [
      "1.0",
      "1.1",
      "1.2",
      "1.3",
      "1.4",
      "1.5",
      "1.6",
      "1.7",
      "1.8",
      "1.9",
      "1.10",
      "1.11",
      "1.12",
      "1.13",
      "1.14",
      "2.0",
      "sylius-stack"
    ],
    "languages": {
      "PHP": 10594782,
      "Gherkin": 1522366,
      "Twig": 572243,
      "SCSS": 40870,
      "JavaScript": 36374,
      "Dockerfile": 4882,
      "Shell": 1935,
      "Makefile": 1440
    },
    "commit_activity": {
      "total_commits_last_year": 6049,
      "avg_commits_per_week": 116.32692307692308,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:57:44.050070"
  }
}