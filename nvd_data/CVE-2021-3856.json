{
  "cve_id": "CVE-2021-3856",
  "github_data": {
    "repository": "keycloak/keycloak",
    "fix_commit": "73f0474008e1bebd0733e62a22aceda9e5de6743",
    "related_commits": [
      "73f0474008e1bebd0733e62a22aceda9e5de6743",
      "73f0474008e1bebd0733e62a22aceda9e5de6743"
    ],
    "patch_url": "https://github.com/keycloak/keycloak/commit/73f0474008e1bebd0733e62a22aceda9e5de6743.patch",
    "fix_commit_details": {
      "sha": "73f0474008e1bebd0733e62a22aceda9e5de6743",
      "commit_date": "2021-10-14T22:47:57Z",
      "author": {
        "login": "douglaspalmer",
        "type": "User",
        "stats": {
          "total_commits": 118,
          "average_weekly_commits": 0.1956882255389718,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 73
        }
      },
      "commit_message": {
        "title": "[KEYCLOAK-19422] ClassLoaderTheme and ClasspathThemeResourceProviderFactory allows reading any file available as a resource to the classloader",
        "length": 142,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 37,
        "deletions": 3
      },
      "files": [
        {
          "filename": "services/src/main/java/org/keycloak/theme/ClassLoaderTheme.java",
          "status": "modified",
          "additions": 13,
          "deletions": 2,
          "patch": "@@ -105,8 +105,19 @@ public URL getTemplate(String name) {\n     }\n \n     @Override\n-    public InputStream getResourceAsStream(String path) {\n-        return classLoader.getResourceAsStream(resourceRoot + path);\n+    public InputStream getResourceAsStream(String path) throws IOException {\n+        final URL rootResourceURL = classLoader.getResource(resourceRoot);\n+        if (rootResourceURL == null) {\n+            return null;\n+        }\n+        final String rootPath = rootResourceURL.getPath();\n+        final URL resourceURL = classLoader.getResource(resourceRoot + path);\n+        if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {\n+            return null;\n+        }\n+        else {\n+            return resourceURL.openConnection().getInputStream();\n+        }\n     }\n \n     @Override"
        },
        {
          "filename": "services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -39,7 +39,18 @@ public URL getTemplate(String name) throws IOException {\n \n     @Override\n     public InputStream getResourceAsStream(String path) throws IOException {\n-        return classLoader.getResourceAsStream(THEME_RESOURCES_RESOURCES + path);\n+        final URL rootResourceURL = classLoader.getResource(THEME_RESOURCES_RESOURCES);\n+        if (rootResourceURL == null) {\n+            return null;\n+        }\n+        final String rootPath = rootResourceURL.getPath();\n+        final URL resourceURL = classLoader.getResource(THEME_RESOURCES_RESOURCES + path);\n+        if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {\n+            return null;\n+        }\n+        else {\n+            return resourceURL.openConnection().getInputStream();\n+        }\n     }\n \n     @Override"
        },
        {
          "filename": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/theme/ThemeResourceProviderTest.java",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -73,6 +73,18 @@ public void getMessages() {\n         });\n     }\n \n+    @Test\n+    public void getResourceIllegalTraversal() {\n+        testingClient.server().run(session -> {\n+            try {\n+                Theme theme = session.theme().getTheme(\"base\", Theme.Type.LOGIN);\n+                Assert.assertNull(theme.getResourceAsStream(\"../templates/test.ftl\"));\n+            } catch (IOException e) {\n+                Assert.fail(e.getMessage());\n+            }\n+        });\n+    }\n+\n     @Test\n     public void gzipEncoding() throws IOException {\n         final String resourcesVersion = testingClient.server().fetch(session -> Version.RESOURCES_VERSION, String.class);"
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05e612bfb67e7dc51050db334672cdb3c2c65323",
            "date": "2025-01-14T16:17:04Z",
            "author_login": "ahus1"
          },
          {
            "sha": "388fa5a3ebae20d1bdf8f92ee3ad29fbe438a622",
            "date": "2025-01-14T13:32:03Z",
            "author_login": "stianst"
          },
          {
            "sha": "01f5a8c1c3e97944f8919c11338b1cebed9056ee",
            "date": "2025-01-14T12:20:01Z",
            "author_login": "stianst"
          },
          {
            "sha": "53a2ed6fdbd8673e9b914f650e598cd9122763e6",
            "date": "2025-01-14T12:02:51Z",
            "author_login": "SebastEnn"
          },
          {
            "sha": "8ddf94ca3b0a3c34fe1441fe24cf90a063d3ae3f",
            "date": "2025-01-14T11:22:01Z",
            "author_login": "Yogu"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-552",
    "description": "ClassLoaderTheme and ClasspathThemeResourceProviderFactory allows reading any file available as a resource to the classloader. By sending requests for theme resources with a relative path from an external HTTP client, the client will receive the content of random files if available.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-26T16:15:09.570",
    "last_modified": "2024-11-21T06:22:39.990",
    "fix_date": "2021-10-14T22:47:57Z"
  },
  "references": [
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3856",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2010164",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/keycloak/keycloak/commit/73f0474008e1bebd0733e62a22aceda9e5de6743",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/keycloak/keycloak/pull/8588",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.redhat.com/browse/KEYCLOAK-19422",
      "source": "secalert@redhat.com",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3856",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2010164",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/keycloak/keycloak/commit/73f0474008e1bebd0733e62a22aceda9e5de6743",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/keycloak/keycloak/pull/8588",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://issues.redhat.com/browse/KEYCLOAK-19422",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.025022",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "keycloak",
    "owner": "keycloak",
    "created_at": "2013-07-02T13:38:51Z",
    "updated_at": "2025-01-14T13:32:13Z",
    "pushed_at": "2025-01-14T14:08:52Z",
    "size": 519673,
    "stars": 24649,
    "forks": 6948,
    "open_issues": 1920,
    "watchers": 24649,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "release/22.0",
      "release/24.0",
      "release/26.0",
      "release/26.1"
    ],
    "languages": {
      "Java": 35124416,
      "TypeScript": 3242946,
      "FreeMarker": 278229,
      "JavaScript": 136844,
      "CSS": 44624,
      "Shell": 35073,
      "XSLT": 31908,
      "HTML": 10031,
      "mupad": 8593,
      "Mustache": 5212,
      "Groovy": 4915,
      "Dockerfile": 4760,
      "Batchfile": 2651,
      "Fluent": 217
    },
    "commit_activity": {
      "total_commits_last_year": 3682,
      "avg_commits_per_week": 70.8076923076923,
      "days_active_last_year": 292
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:10:04.689797"
  }
}