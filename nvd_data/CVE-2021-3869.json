{
  "cve_id": "CVE-2021-3869",
  "github_data": {
    "repository": "stanfordnlp/corenlp",
    "fix_commit": "5d83f1e8482ca304db8be726cad89554c88f136a",
    "related_commits": [
      "5d83f1e8482ca304db8be726cad89554c88f136a",
      "5d83f1e8482ca304db8be726cad89554c88f136a"
    ],
    "patch_url": "https://github.com/stanfordnlp/corenlp/commit/5d83f1e8482ca304db8be726cad89554c88f136a.patch",
    "fix_commit_details": {
      "sha": "5d83f1e8482ca304db8be726cad89554c88f136a",
      "commit_date": "2021-10-07T19:38:42Z",
      "author": {
        "login": "AngledLuffa",
        "type": "User",
        "stats": {
          "total_commits": 4521,
          "average_weekly_commits": 7.485099337748345,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 296
        }
      },
      "commit_message": {
        "title": "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes",
        "length": 113,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 36,
        "additions": 27,
        "deletions": 9
      },
      "files": [
        {
          "filename": "src/edu/stanford/nlp/time/XMLUtils.java",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -1,6 +1,7 @@\n package edu.stanford.nlp.time;\n \n import edu.stanford.nlp.io.StringOutputStream;\n+import static edu.stanford.nlp.util.XMLUtils.safeDocumentBuilderFactory;\n import org.w3c.dom.*;\n \n import javax.xml.parsers.DocumentBuilder;\n@@ -63,7 +64,7 @@ public static void printNode(OutputStream out, Node node, boolean prettyPrint, b\n \n   public static Document createDocument() {\n     try {\n-      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();\n       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();\n       Document doc = docBuilder.newDocument();\n       return doc;\n@@ -82,7 +83,7 @@ public static Element createElement(String tag) {\n \n   public static Element parseElement(String xml) {\n     try {\n-      DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();\n       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();\n       Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));\n       return doc.getDocumentElement();"
        },
        {
          "filename": "src/edu/stanford/nlp/util/XMLUtils.java",
          "status": "modified",
          "additions": 24,
          "deletions": 7,
          "patch": "@@ -39,6 +39,22 @@ public class XMLUtils  {\n \n   private XMLUtils() {} // only static methods\n \n+  public static DocumentBuilderFactory safeDocumentBuilderFactory() {\n+    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n+      dbf.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\n+      dbf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\n+      dbf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\n+      dbf.setFeature(\"http://apache.org/xml/features/dom/create-entity-ref-nodes\", false);\n+      dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\n+    } catch (ParserConfigurationException e) {\n+      log.warn(e);\n+    }\n+    return dbf;\n+  }\n+    \n+\n   /**\n    * Returns the text content of all nodes in the given file with the given tag.\n    *\n@@ -68,7 +84,7 @@ private static List<String> getTextContentFromTagsFromFileSAXException(\n           File f, String tag) throws SAXException {\n     List<String> sents = Generics.newArrayList();\n     try {\n-      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\n       DocumentBuilder db = dbf.newDocumentBuilder();\n       Document doc = db.parse(f);\n       doc.getDocumentElement().normalize();\n@@ -129,7 +145,7 @@ private static List<Element> getTagElementsFromFileSAXException(\n           File f, String tag) throws SAXException {\n     List<Element> sents = Generics.newArrayList();\n     try {\n-      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\n       DocumentBuilder db = dbf.newDocumentBuilder();\n       Document doc = db.parse(f);\n       doc.getDocumentElement().normalize();\n@@ -207,7 +223,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile\n       File f, String tag, int numIncludedSiblings) throws SAXException {\n     List<Triple<String, Element, String>> sents = Generics.newArrayList();\n     try {\n-      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\n       DocumentBuilder db = dbf.newDocumentBuilder();\n       Document doc = db.parse(f);\n       doc.getDocumentElement().normalize();\n@@ -251,7 +267,7 @@ public static List<Triple<String, Element, String>> getTagElementTriplesFromFile\n   public static DocumentBuilder getXmlParser() {\n     DocumentBuilder db = null;\n     try {\n-      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\n       dbf.setValidating(false);\n \n       //Disable DTD loading and validation\n@@ -283,7 +299,7 @@ public static DocumentBuilder getXmlParser() {\n   public static DocumentBuilder getValidatingXmlParser(File schemaFile) {\n     DocumentBuilder db = null;\n     try {\n-      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\n \n       SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n       Schema schema = factory.newSchema(schemaFile);\n@@ -1206,7 +1222,8 @@ public static XMLTag parseTag(String tagString) {\n \n   public static Document readDocumentFromFile(String filename) throws Exception {\n     InputSource in = new InputSource(new FileReader(filename));\n-    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+    DocumentBuilderFactory factory = safeDocumentBuilderFactory();\n+\n     factory.setNamespaceAware(false);\n     DocumentBuilder db = factory.newDocumentBuilder();\n     db.setErrorHandler(new SAXErrorHandler());\n@@ -1256,7 +1273,7 @@ public void fatalError(SAXParseException ex) throws SAXParseException {\n \n   public static Document readDocumentFromString(String s) throws Exception {\n     InputSource in = new InputSource(new StringReader(s));\n-    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+    DocumentBuilderFactory factory = safeDocumentBuilderFactory();\n     factory.setNamespaceAware(false);\n     return factory.newDocumentBuilder().parse(in);\n   }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "59706394c28474bc21198eb6f4fff98939453dee",
            "date": "2024-12-12T21:31:47Z",
            "author_login": "AngledLuffa"
          },
          {
            "sha": "9b1c058d8e559709c19051e859d1955b9230341c",
            "date": "2024-12-11T20:28:33Z",
            "author_login": "AngledLuffa"
          },
          {
            "sha": "698d84b82f7f6c1afcd8772ef4b5770ef080241f",
            "date": "2024-12-04T11:12:16Z",
            "author_login": "AngledLuffa"
          },
          {
            "sha": "766013c1bf60381e8df8da08146dcc037616f058",
            "date": "2024-11-28T19:23:17Z",
            "author_login": "AngledLuffa"
          },
          {
            "sha": "87fe2ef82e16660372ef29f784a71a5a3422c97a",
            "date": "2024-11-28T11:16:51Z",
            "author_login": "AngledLuffa"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-611",
    "description": "corenlp is vulnerable to Improper Restriction of XML External Entity Reference",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-19T13:15:11.773",
    "last_modified": "2024-11-21T06:22:41.507",
    "fix_date": "2021-10-07T19:38:42Z"
  },
  "references": [
    {
      "url": "https://github.com/stanfordnlp/corenlp/commit/5d83f1e8482ca304db8be726cad89554c88f136a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2f8baf6c-14b3-420d-8ede-9805797cd324",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/stanfordnlp/corenlp/commit/5d83f1e8482ca304db8be726cad89554c88f136a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2f8baf6c-14b3-420d-8ede-9805797cd324",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.835888",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "CoreNLP",
    "owner": "stanfordnlp",
    "created_at": "2013-06-27T21:13:49Z",
    "updated_at": "2025-01-12T21:25:45Z",
    "pushed_at": "2025-01-06T21:31:18Z",
    "size": 395967,
    "stars": 9747,
    "forks": 2703,
    "open_issues": 188,
    "watchers": 9747,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Java": 31126629,
      "Lex": 319703,
      "JavaScript": 241652,
      "Makefile": 44603,
      "Shell": 39229,
      "Common Lisp": 36144,
      "Python": 34638,
      "CSS": 13502,
      "Perl": 11812,
      "HTML": 10381,
      "Ruby": 3447,
      "Batchfile": 429
    },
    "commit_activity": {
      "total_commits_last_year": 101,
      "avg_commits_per_week": 1.9423076923076923,
      "days_active_last_year": 49
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T14:45:50.051673"
  }
}