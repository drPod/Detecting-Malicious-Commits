{
  "cve_id": "CVE-2021-3902",
  "github_data": {
    "repository": "dompdf/dompdf",
    "fix_commit": "f56bc8e40be6c0ae0825e6c7396f4db80620b799",
    "related_commits": [
      "f56bc8e40be6c0ae0825e6c7396f4db80620b799"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f56bc8e40be6c0ae0825e6c7396f4db80620b799",
      "commit_date": "2022-04-19T17:35:25Z",
      "author": {
        "login": "bsweeney",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Validate SVG image references",
        "length": 29,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 33,
        "additions": 33,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/Image/Cache.php",
          "status": "modified",
          "additions": 33,
          "deletions": 0,
          "patch": "@@ -129,6 +129,39 @@ static function resolve_url($url, $protocol, $host, $base_path, Options $options\n             if (($width && $height && in_array($type, [\"gif\", \"png\", \"jpeg\", \"bmp\", \"svg\",\"webp\"], true)) === false) {\n                 throw new ImageException(\"Image type unknown\", E_WARNING);\n             }\n+\n+            if ($type === \"svg\") {\n+                $parser = xml_parser_create(\"utf-8\");\n+                xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, false);\n+                xml_set_element_handler(\n+                    $parser,\n+                    function ($parser, $name, $attributes) use ($options, $parsed_url, $full_url) {\n+                        if ($name === \"image\") {\n+                            $attributes = array_change_key_case($attributes, CASE_LOWER);\n+                            $url = $attributes[\"xlink:href\"] ?? $attributes[\"href\"];\n+                            if (!empty($url)) {\n+                                $inner_full_url = Helpers::build_url($parsed_url[\"protocol\"], $parsed_url[\"host\"], $parsed_url[\"path\"], $url);\n+                                if ($inner_full_url === $full_url) {\n+                                    throw new ImageException(\"SVG self-reference is not allowed\", E_WARNING);\n+                                }\n+                                [$resolved_url, $type, $message] = self::resolve_url($url, $parsed_url[\"protocol\"], $parsed_url[\"host\"], $parsed_url[\"path\"], $options);\n+                                if (!empty($message)) {\n+                                    throw new ImageException(\"This SVG document references a restricted resource. $message\", E_WARNING);\n+                                }\n+                            }\n+                        }\n+                    },\n+                    false\n+                );\n+        \n+                if (($fp = fopen($resolved_url, \"r\")) !== false) {\n+                    while ($line = fread($fp, 8192)) {\n+                        xml_parse($parser, $line, false);\n+                    }\n+                    fclose($fp);\n+                }\n+                xml_parser_free($parser);\n+            }\n         } catch (ImageException $e) {\n             if ($tempfile) {\n                 unlink($tempfile);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "723529bda1cbc3cf7a819d5fd4303554979172fb",
            "date": "2025-01-16T13:04:16Z",
            "author_login": "bsweeney"
          },
          {
            "sha": "a51bd7a063a65499446919286fb18b518177155a",
            "date": "2025-01-15T14:09:04Z",
            "author_login": "bsweeney"
          },
          {
            "sha": "4a45555bb8cc2885dd389cdfb040a483e151ac19",
            "date": "2025-01-12T16:13:20Z",
            "author_login": "bsweeney"
          },
          {
            "sha": "c32d9ba9203bba886bb90822a137c85677281388",
            "date": "2025-01-12T00:42:03Z",
            "author_login": "bsweeney"
          },
          {
            "sha": "6adab3ebb9bd31ad785ffdb2d27daf6a1931d435",
            "date": "2025-01-11T04:20:16Z",
            "author_login": "bsweeney"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-611",
    "description": "An improper restriction of external entities (XXE) vulnerability in dompdf/dompdf's SVG parser allows for Server-Side Request Forgery (SSRF) and deserialization attacks. This issue affects all versions prior to 2.0.0. The vulnerability can be exploited even if the isRemoteEnabled option is set to false. It allows attackers to perform SSRF, disclose internal image files, and cause PHAR deserialization attacks.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-15T11:15:06.190",
    "last_modified": "2024-11-19T17:12:15.650",
    "fix_date": "2022-04-19T17:35:25Z"
  },
  "references": [
    {
      "url": "https://github.com/dompdf/dompdf/commit/f56bc8e40be6c0ae0825e6c7396f4db80620b799",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/a6071c07-806f-429a-8656-a4742e4191b1",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.303057",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "dompdf",
    "owner": "dompdf",
    "created_at": "2012-11-12T20:47:16Z",
    "updated_at": "2025-01-25T18:42:06Z",
    "pushed_at": "2025-01-20T21:40:51Z",
    "size": 19387,
    "stars": 10680,
    "forks": 1804,
    "open_issues": 560,
    "watchers": 10680,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "PHP": 1353863,
      "HTML": 53927,
      "CSS": 7482
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T08:13:14.808292"
  }
}