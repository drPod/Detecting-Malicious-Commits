{
  "cve_id": "CVE-2021-39177",
  "github_data": {
    "repository": "GeyserMC/Geyser",
    "fix_commit": "b9541505af68ac7b7c093206ac7b1ba88957a5a6",
    "related_commits": [
      "b9541505af68ac7b7c093206ac7b1ba88957a5a6",
      "b9541505af68ac7b7c093206ac7b1ba88957a5a6"
    ],
    "patch_url": "https://github.com/GeyserMC/Geyser/commit/b9541505af68ac7b7c093206ac7b1ba88957a5a6.patch",
    "fix_commit_details": {
      "sha": "b9541505af68ac7b7c093206ac7b1ba88957a5a6",
      "commit_date": "2021-08-30T17:55:01Z",
      "author": {
        "login": "Camotoy",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Bump version to try and fix deploying; other nitpicks",
        "length": 53,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 336,
        "additions": 181,
        "deletions": 155
      },
      "files": [
        {
          "filename": "Jenkinsfile",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -20,7 +20,7 @@ pipeline {\n             }\n         }\n \n-        /*stage ('Deploy') {\n+        stage ('Deploy') {\n             when {\n                 branch \"master\"\n             }\n@@ -48,7 +48,7 @@ pipeline {\n                         serverId: \"opencollab-artifactory\"\n                 )\n             }\n-        }*/\n+        }\n     }\n \n     post {"
        },
        {
          "filename": "ap/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,9 +6,9 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>ap</artifactId>\n-    <version>1.4.1-SNAPSHOT</version>\n+    <version>1.4.2-SNAPSHOT</version>\n </project>\n\\ No newline at end of file"
        },
        {
          "filename": "bootstrap/bungeecord/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-bungeecord</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <!-- Used for better working with internals without reflection -->"
        },
        {
          "filename": "bootstrap/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-parent</artifactId>\n     <packaging>pom</packaging>\n@@ -34,7 +34,7 @@\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>ap</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>provided</scope>\n         </dependency>\n     </dependencies>"
        },
        {
          "filename": "bootstrap/spigot/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-spigot</artifactId>\n \n@@ -21,7 +21,7 @@\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
        },
        {
          "filename": "bootstrap/sponge/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-sponge</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
        },
        {
          "filename": "bootstrap/standalone/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-standalone</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
        },
        {
          "filename": "bootstrap/velocity/pom.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-velocity</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
        },
        {
          "filename": "common/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>common</artifactId>\n "
        },
        {
          "filename": "connector/pom.xml",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.4.1-SNAPSHOT</version>\n+        <version>1.4.2-SNAPSHOT</version>\n     </parent>\n     <artifactId>connector</artifactId>\n \n@@ -21,13 +21,13 @@\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>ap</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>provided</scope>\n         </dependency>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>common</artifactId>\n-            <version>1.4.1-SNAPSHOT</version>\n+            <version>1.4.2-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <!-- Jackson JSON and YAML serialization -->\n@@ -115,7 +115,7 @@\n         <dependency>\n             <groupId>com.github.CloudburstMC.Protocol</groupId>\n             <artifactId>bedrock-v448</artifactId>\n-            <version>690a545d</version>\n+            <version>6ce2f6e</version>\n             <scope>compile</scope>\n             <exclusions>\n                 <exclusion>"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -80,7 +80,7 @@ public boolean handle(LoginPacket loginPacket) {\n         session.setBlockMappings(BlockRegistries.BLOCKS.forVersion(loginPacket.getProtocolVersion()));\n         session.setItemMappings(Registries.ITEMS.forVersion(loginPacket.getProtocolVersion()));\n \n-        LoginEncryptionUtils.encryptPlayerConnection(connector, session, loginPacket);\n+        LoginEncryptionUtils.encryptPlayerConnection(session, loginPacket);\n \n         PlayStatusPacket playStatus = new PlayStatusPacket();\n         playStatus.setStatus(PlayStatusPacket.Status.LOGIN_SUCCESS);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/PacketTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -29,6 +29,6 @@\n \n public abstract class PacketTranslator<T> {\n \n-    public abstract void translate(T packet, GeyserSession session);\n+    public abstract void translate(GeyserSession session, T packet);\n \n }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/PacketTranslatorRegistry.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -112,7 +112,7 @@ private <P extends T> void translate0(GeyserSession session, PacketTranslator<P>\n         }\n \n         try {\n-            translator.translate(packet, session);\n+            translator.translate(session, packet);\n         } catch (Throwable ex) {\n             GeyserConnector.getInstance().getLogger().error(LanguageUtils.getLocaleStringLog(\"geyser.network.translator.packet.failed\", packet.getClass().getSimpleName()), ex);\n             ex.printStackTrace();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockAdventureSettingsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class BedrockAdventureSettingsTranslator extends PacketTranslator<AdventureSettingsPacket> {\n \n     @Override\n-    public void translate(AdventureSettingsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, AdventureSettingsPacket packet) {\n         boolean isFlying = packet.getSettings().contains(AdventureSetting.FLYING);\n         if (!isFlying && session.getGameMode() == GameMode.SPECTATOR) {\n             // We should always be flying in spectator mode"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockAnimateTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class BedrockAnimateTranslator extends PacketTranslator<AnimatePacket> {\n \n     @Override\n-    public void translate(AnimatePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, AnimatePacket packet) {\n         // Stop the player sending animations before they have fully spawned into the server\n         if (!session.isSpawned()) {\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBlockEntityDataTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class BedrockBlockEntityDataTranslator extends PacketTranslator<BlockEntityDataPacket> {\n \n     @Override\n-    public void translate(BlockEntityDataPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, BlockEntityDataPacket packet) {\n         NbtMap tag = packet.getData();\n         if (tag.getString(\"id\").equals(\"Sign\")) {\n             // This is the reason why this all works - Bedrock sends packets every time you update the sign, Java only wants the final packet"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBlockPickRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class BedrockBlockPickRequestTranslator extends PacketTranslator<BlockPickRequestPacket> {\r\n \r\n     @Override\r\n-    public void translate(BlockPickRequestPacket packet, GeyserSession session) {\r\n+    public void translate(GeyserSession session, BlockPickRequestPacket packet) {\r\n         Vector3i vector = packet.getBlockPosition();\r\n         int blockToPick = session.getConnector().getWorldManager().getBlockAt(session, vector.getX(), vector.getY(), vector.getZ());\r\n         \r"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBookEditTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -49,7 +49,7 @@ public class BedrockBookEditTranslator extends PacketTranslator<BookEditPacket>\n     private static final int MAXIMUM_TITLE_LENGTH = 128 * 4;\n \n     @Override\n-    public void translate(BookEditPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, BookEditPacket packet) {\n         if (packet.getText() != null && !packet.getText().isEmpty() && packet.getText().getBytes(StandardCharsets.UTF_8).length > MAXIMUM_PAGE_LENGTH) {\n             session.getConnector().getLogger().warning(\"Page length greater than server allowed!\");\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockCommandBlockUpdateTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class BedrockCommandBlockUpdateTranslator extends PacketTranslator<CommandBlockUpdatePacket> {\n \n     @Override\n-    public void translate(CommandBlockUpdatePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, CommandBlockUpdatePacket packet) {\n         String command = packet.getCommand();\n         boolean outputTracked = packet.isOutputTracked();\n         if (packet.isBlock()) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockCommandRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class BedrockCommandRequestTranslator extends PacketTranslator<CommandRequestPacket> {\n \n     @Override\n-    public void translate(CommandRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, CommandRequestPacket packet) {\n         String command = packet.getCommand().replace(\"/\", \"\");\n         CommandManager commandManager = GeyserConnector.getInstance().getCommandManager();\n         if (session.getConnector().getPlatformType() == PlatformType.STANDALONE && command.trim().startsWith(\"geyser \") && commandManager.getCommands().containsKey(command.split(\" \")[1])) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockContainerCloseTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class BedrockContainerCloseTranslator extends PacketTranslator<ContainerClosePacket> {\n \n     @Override\n-    public void translate(ContainerClosePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ContainerClosePacket packet) {\n         byte windowId = packet.getId();\n \n         //Client wants close confirmation"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockEmoteListTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class BedrockEmoteListTranslator extends PacketTranslator<EmoteListPacket> {\n \n     @Override\n-    public void translate(EmoteListPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, EmoteListPacket packet) {\n         if (session.getConnector().getConfig().getEmoteOffhandWorkaround() == EmoteOffhandWorkaroundOption.NO_EMOTES) {\n             return;\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockEntityPickRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class BedrockEntityPickRequestTranslator extends PacketTranslator<EntityPickRequestPacket> {\n \n     @Override\n-    public void translate(EntityPickRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, EntityPickRequestPacket packet) {\n         if (session.getGameMode() != GameMode.CREATIVE) return; // Apparently Java behavior\n         Entity entity = session.getEntityCache().getEntityByGeyserId(packet.getRuntimeEntityId());\n         if (entity == null) return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockFilterTextTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n public class BedrockFilterTextTranslator extends PacketTranslator<FilterTextPacket> {\n \n     @Override\n-    public void translate(FilterTextPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, FilterTextPacket packet) {\n         if (session.getOpenInventory() instanceof CartographyContainer) {\n             // We don't want to be able to rename in the cartography table\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockInventoryTransactionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -70,7 +70,7 @@ public class BedrockInventoryTransactionTranslator extends PacketTranslator<Inve\n     private static final float MAXIMUM_BLOCK_DESTROYING_DISTANCE = 36f;\n \n     @Override\n-    public void translate(InventoryTransactionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, InventoryTransactionPacket packet) {\n         // Send book updates before opening inventories\n         session.getBookEditCache().checkForSend();\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockItemFrameDropItemTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n public class BedrockItemFrameDropItemTranslator extends PacketTranslator<ItemFrameDropItemPacket> {\n \n     @Override\n-    public void translate(ItemFrameDropItemPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ItemFrameDropItemPacket packet) {\n         Entity entity = ItemFrameEntity.getItemFrameEntity(session, packet.getBlockPosition());\n         if (entity != null) {\n             ClientPlayerInteractEntityPacket interactPacket = new ClientPlayerInteractEntityPacket((int) entity.getEntityId(),"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockItemStackRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class BedrockItemStackRequestTranslator extends PacketTranslator<ItemStackRequestPacket> {\n \n     @Override\n-    public void translate(ItemStackRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ItemStackRequestPacket packet) {\n         Inventory inventory = session.getOpenInventory();\n         if (inventory == null)\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockLecternUpdateTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -45,7 +45,7 @@\n public class BedrockLecternUpdateTranslator extends PacketTranslator<LecternUpdatePacket> {\n \n     @Override\n-    public void translate(LecternUpdatePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, LecternUpdatePacket packet) {\n         if (packet.isDroppingBook()) {\n             // Bedrock drops the book outside of the GUI. Java drops it in the GUI\n             // So, we enter the GUI and then drop it! :)"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMapInfoRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class BedrockMapInfoRequestTranslator extends PacketTranslator<MapInfoRequestPacket> {\n \n     @Override\n-    public void translate(MapInfoRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, MapInfoRequestPacket packet) {\n         long mapId = packet.getUniqueMapId();\n \n         ClientboundMapItemDataPacket mapPacket = session.getStoredMaps().remove(mapId);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMobEquipmentTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class BedrockMobEquipmentTranslator extends PacketTranslator<MobEquipmentPacket> {\n \n     @Override\n-    public void translate(MobEquipmentPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, MobEquipmentPacket packet) {\n         if (!session.isSpawned() || packet.getHotbarSlot() > 8 ||\n                 packet.getContainerId() != ContainerId.INVENTORY || session.getPlayerInventory().getHeldItemSlot() == packet.getHotbarSlot()) {\n             // For the last condition - Don't update the slot if the slot is the same - not Java Edition behavior and messes with plugins such as Grief Prevention"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMoveEntityAbsoluteTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class BedrockMoveEntityAbsoluteTranslator extends PacketTranslator<MoveEntityAbsolutePacket> {\n \n     @Override\n-    public void translate(MoveEntityAbsolutePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, MoveEntityAbsolutePacket packet) {\n         session.setLastVehicleMoveTimestamp(System.currentTimeMillis());\n \n         float y = packet.getPosition().getY();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockNetworkStackLatencyTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -45,7 +45,7 @@\n public class BedrockNetworkStackLatencyTranslator extends PacketTranslator<NetworkStackLatencyPacket> {\n \n     @Override\n-    public void translate(NetworkStackLatencyPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, NetworkStackLatencyPacket packet) {\n         long pingId;\n         // so apparently, as of 1.16.200\n         // PS4 divides the network stack latency timestamp FOR US!!!"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPacketViolationWarningTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -34,7 +34,7 @@\n public class BedrockPacketViolationWarningTranslator extends PacketTranslator<PacketViolationWarningPacket> {\n \n     @Override\n-    public void translate(PacketViolationWarningPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, PacketViolationWarningPacket packet) {\n         // Not translated since this is something that the developers need to know\n         session.getConnector().getLogger().error(\"Packet violation warning sent from client! \" + packet.toString());\n     }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPlayerInputTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -46,7 +46,7 @@\n public class BedrockPlayerInputTranslator extends PacketTranslator<PlayerInputPacket> {\n \n     @Override\n-    public void translate(PlayerInputPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, PlayerInputPacket packet) {\n         ClientSteerVehiclePacket clientSteerVehiclePacket = new ClientSteerVehiclePacket(\n                 packet.getInputMotion().getX(), packet.getInputMotion().getY(), packet.isJumping(), packet.isSneaking()\n         );"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPositionTrackingDBClientRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class BedrockPositionTrackingDBClientRequestTranslator extends PacketTranslator<PositionTrackingDBClientRequestPacket> {\n \n     @Override\n-    public void translate(PositionTrackingDBClientRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, PositionTrackingDBClientRequestPacket packet) {\n         PositionTrackingDBServerBroadcastPacket broadcastPacket = new PositionTrackingDBServerBroadcastPacket();\n         broadcastPacket.setTrackingId(packet.getTrackingId());\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockRespawnTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class BedrockRespawnTranslator extends PacketTranslator<RespawnPacket> {\n \n     @Override\n-    public void translate(RespawnPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, RespawnPacket packet) {\n         if (packet.getState() == RespawnPacket.State.CLIENT_READY) {\n             // Previously we only sent the respawn packet before the server finished loading\n             // The message included was 'Otherwise when immediate respawn is on the client never loads'"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockServerSettingsRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n @Translator(packet = ServerSettingsRequestPacket.class)\n public class BedrockServerSettingsRequestTranslator extends PacketTranslator<ServerSettingsRequestPacket> {\n     @Override\n-    public void translate(ServerSettingsRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSettingsRequestPacket packet) {\n         CustomForm window = SettingsUtils.buildForm(session);\n         int windowId = session.getFormCache().addForm(window);\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockSetLocalPlayerAsInitializedTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n @Translator(packet = SetLocalPlayerAsInitializedPacket.class)\n public class BedrockSetLocalPlayerAsInitializedTranslator extends PacketTranslator<SetLocalPlayerAsInitializedPacket> {\n     @Override\n-    public void translate(SetLocalPlayerAsInitializedPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, SetLocalPlayerAsInitializedPacket packet) {\n         if (session.getPlayerEntity().getGeyserId() == packet.getRuntimeEntityId()) {\n             if (!session.getUpstream().isInitialized()) {\n                 session.getUpstream().setInitialized(true);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockShowCreditsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class BedrockShowCreditsTranslator extends PacketTranslator<ShowCreditsPacket> {\n \n     @Override\n-    public void translate(ShowCreditsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ShowCreditsPacket packet) {\n         if (packet.getStatus() == ShowCreditsPacket.Status.END_CREDITS) {\n             ClientRequestPacket javaRespawnPacket = new ClientRequestPacket(ClientRequest.RESPAWN);\n             session.sendDownstreamPacket(javaRespawnPacket);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockTextTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class BedrockTextTranslator extends PacketTranslator<TextPacket> {\n \n     @Override\n-    public void translate(TextPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, TextPacket packet) {\n         String message = packet.getMessage();\n \n         if (MessageTranslator.isTooLong(message, session)) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/BedrockEntityEventTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n public class BedrockEntityEventTranslator extends PacketTranslator<EntityEventPacket> {\n \n     @Override\n-    public void translate(EntityEventPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, EntityEventPacket packet) {\n         switch (packet.getType()) {\n             case EATING_ITEM:\n                 // Resend the packet so we get the eating sounds"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockActionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -54,7 +54,7 @@\n public class BedrockActionTranslator extends PacketTranslator<PlayerActionPacket> {\n \n     @Override\n-    public void translate(PlayerActionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, PlayerActionPacket packet) {\n         SessionPlayerEntity entity = session.getPlayerEntity();\n \n         // Send book update before any player action"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockEmoteTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class BedrockEmoteTranslator extends PacketTranslator<EmotePacket> {\n \n     @Override\n-    public void translate(EmotePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, EmotePacket packet) {\n         if (session.getConnector().getConfig().getEmoteOffhandWorkaround() != EmoteOffhandWorkaroundOption.DISABLED) {\n             // Activate the workaround - we should trigger the offhand now\n             ClientPlayerActionPacket swapHandsPacket = new ClientPlayerActionPacket(PlayerAction.SWAP_HANDS, BlockUtils.POSITION_ZERO,"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockInteractTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -46,7 +46,7 @@\n public class BedrockInteractTranslator extends PacketTranslator<InteractPacket> {\n \n     @Override\n-    public void translate(InteractPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, InteractPacket packet) {\n         Entity entity;\n         if (packet.getRuntimeEntityId() == session.getPlayerEntity().getGeyserId()) {\n             //Player is not in entity cache"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockMovePlayerTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -53,7 +53,7 @@ public class BedrockMovePlayerTranslator extends PacketTranslator<MovePlayerPack\n     }\n \n     @Override\n-    public void translate(MovePlayerPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, MovePlayerPacket packet) {\n         SessionPlayerEntity entity = session.getPlayerEntity();\n         if (!session.isSpawned()) return;\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockRiderJumpTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n @Translator(packet = RiderJumpPacket.class)\n public class BedrockRiderJumpTranslator extends PacketTranslator<RiderJumpPacket> {\n     @Override\n-    public void translate(RiderJumpPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, RiderJumpPacket packet) {\n         Entity vehicle = session.getRidingVehicleEntity();\n         if (vehicle instanceof AbstractHorseEntity) {\n             ClientPlayerStatePacket playerStatePacket = new ClientPlayerStatePacket((int) vehicle.getEntityId(),  PlayerState.START_HORSE_JUMP, packet.getJumpStrength());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockSetPlayerGameTypeTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class BedrockSetPlayerGameTypeTranslator extends PacketTranslator<SetPlayerGameTypePacket> {\n \n     @Override\n-    public void translate(SetPlayerGameTypePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, SetPlayerGameTypePacket packet) {\n         // no\n         SetPlayerGameTypePacket playerGameTypePacket = new SetPlayerGameTypePacket();\n         playerGameTypePacket.setGamemode(session.getGameMode().ordinal());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/bedrock/world/BedrockLevelSoundEventTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class BedrockLevelSoundEventTranslator extends PacketTranslator<LevelSoundEventPacket> {\n \n     @Override\n-    public void translate(LevelSoundEventPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, LevelSoundEventPacket packet) {\n         // lol what even :thinking:\n         session.sendUpstreamPacket(packet);\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaAdvancementsTabTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n @Translator(packet = ServerAdvancementTabPacket.class)\n public class JavaAdvancementsTabTranslator extends PacketTranslator<ServerAdvancementTabPacket> {\n     @Override\n-    public void translate(ServerAdvancementTabPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerAdvancementTabPacket packet) {\n         AdvancementsCache advancementsCache = session.getAdvancementsCache();\n         advancementsCache.setCurrentAdvancementCategoryId(packet.getTabId());\n         advancementsCache.buildAndShowListForm();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaAdvancementsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class JavaAdvancementsTranslator extends PacketTranslator<ServerAdvancementsPacket> {\n \n     @Override\n-    public void translate(ServerAdvancementsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerAdvancementsPacket packet) {\n         AdvancementsCache advancementsCache = session.getAdvancementsCache();\n         if (packet.isReset()) {\n             advancementsCache.getStoredAdvancements().clear();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaBossBarTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n @Translator(packet = ServerBossBarPacket.class)\n public class JavaBossBarTranslator extends PacketTranslator<ServerBossBarPacket> {\n     @Override\n-    public void translate(ServerBossBarPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerBossBarPacket packet) {\n         BossBar bossBar = session.getEntityCache().getBossBar(packet.getUuid());\n         switch (packet.getAction()) {\n             case ADD:"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaChatTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaChatTranslator extends PacketTranslator<ServerChatPacket> {\n \n     @Override\n-    public void translate(ServerChatPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerChatPacket packet) {\n         TextPacket textPacket = new TextPacket();\n         textPacket.setPlatformChatId(\"\");\n         textPacket.setSourceName(\"\");"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareCommandsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -96,7 +96,7 @@ public boolean equals(CommandParamData[][] a, CommandParamData[][] b) {\n     }\n \n     @Override\n-    public void translate(ServerDeclareCommandsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDeclareCommandsPacket packet) {\n         // Don't send command suggestions if they are disabled\n         if (!session.getConnector().getConfig().isCommandSuggestions()) {\n             session.getConnector().getLogger().debug(\"Not sending translated command suggestions as they are disabled.\");"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareRecipesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -71,7 +71,7 @@ public class JavaDeclareRecipesTranslator extends PacketTranslator<ServerDeclare\n     );\n \n     @Override\n-    public void translate(ServerDeclareRecipesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDeclareRecipesPacket packet) {\n         Map<RecipeType, List<CraftingData>> recipeTypes = Registries.CRAFTING_DATA.forVersion(session.getUpstream().getProtocolVersion());\n         // Get the last known network ID (first used for the pregenerated recipes) and increment from there.\n         int netId = InventoryUtils.LAST_RECIPE_NET_ID + 1;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareTagsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -34,7 +34,7 @@\n public class JavaDeclareTagsTranslator extends PacketTranslator<ServerDeclareTagsPacket> {\n \n     @Override\n-    public void translate(ServerDeclareTagsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDeclareTagsPacket packet) {\n         session.getTagCache().loadPacket(packet);\n     }\n }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDifficultyTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaDifficultyTranslator extends PacketTranslator<ServerDifficultyPacket> {\n \n     @Override\n-    public void translate(ServerDifficultyPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDifficultyPacket packet) {\n         SetDifficultyPacket setDifficultyPacket = new SetDifficultyPacket();\n         setDifficultyPacket.setDifficulty(packet.getDifficulty().ordinal());\n         session.sendUpstreamPacket(setDifficultyPacket);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDisconnectPacket.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaDisconnectPacket extends PacketTranslator<ServerDisconnectPacket> {\n \n     @Override\n-    public void translate(ServerDisconnectPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDisconnectPacket packet) {\n         session.disconnect(MessageTranslator.convertMessage(packet.getReason(), session.getLocale()));\n     }\n }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaJoinGameTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -52,7 +52,7 @@ public class JavaJoinGameTranslator extends PacketTranslator<ServerJoinGamePacke\n     private static final List<SkinPart> SKIN_PART_VALUES = Arrays.asList(SkinPart.values());\n \n     @Override\n-    public void translate(ServerJoinGamePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerJoinGamePacket packet) {\n         PlayerEntity entity = session.getPlayerEntity();\n         entity.setEntityId(packet.getEntityId());\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaKeepAliveTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class JavaKeepAliveTranslator extends PacketTranslator<ServerKeepAlivePacket> {\n \n     @Override\n-    public void translate(ServerKeepAlivePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerKeepAlivePacket packet) {\n         if (!session.getConnector().getConfig().isForwardPlayerPing()) {\n             return;\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginDisconnectTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaLoginDisconnectTranslator extends PacketTranslator<LoginDisconnectPacket> {\n \n     @Override\n-    public void translate(LoginDisconnectPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, LoginDisconnectPacket packet) {\n         // The client doesn't manually get disconnected so we have to do it ourselves\n         session.disconnect(MessageTranslator.convertMessage(packet.getReason(), session.getLocale()));\n     }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginPluginRequestTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n @Translator(packet = LoginPluginRequestPacket.class)\n public class JavaLoginPluginRequestTranslator extends PacketTranslator<LoginPluginRequestPacket> {\n     @Override\n-    public void translate(LoginPluginRequestPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, LoginPluginRequestPacket packet) {\n         // A vanilla client doesn't know any PluginMessage in the Login state, so we don't know any either.\n         // Note: Fabric Networking API v1 will not let the client log in without sending this\n         session.sendDownstreamPacket("
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginSuccessTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class JavaLoginSuccessTranslator extends PacketTranslator<LoginSuccessPacket> {\n \n     @Override\n-    public void translate(LoginSuccessPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, LoginSuccessPacket packet) {\n         PlayerEntity playerEntity = session.getPlayerEntity();\n         AuthType remoteAuthType = session.getRemoteAuthType();\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaPingPacket.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaPingPacket extends PacketTranslator<ServerPingPacket> {\n \n     @Override\n-    public void translate(ServerPingPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPingPacket packet) {\n         session.sendDownstreamPacket(new ClientPongPacket(packet.getId()));\n     }\n }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaPluginMessageTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n @Translator(packet = ServerPluginMessagePacket.class)\n public class JavaPluginMessageTranslator extends PacketTranslator<ServerPluginMessagePacket> {\n     @Override\n-    public void translate(ServerPluginMessagePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPluginMessagePacket packet) {\n         // The only plugin messages it has to listen for are Floodgate plugin messages\n         if (session.getRemoteAuthType() != AuthType.FLOODGATE) {\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaRespawnTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n public class JavaRespawnTranslator extends PacketTranslator<ServerRespawnPacket> {\n \n     @Override\n-    public void translate(ServerRespawnPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerRespawnPacket packet) {\n         SessionPlayerEntity entity = session.getPlayerEntity();\n \n         entity.setHealth(entity.getMaxHealth());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaStatisticsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaStatisticsTranslator extends PacketTranslator<ServerStatisticsPacket> {\n \n     @Override\n-    public void translate(ServerStatisticsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerStatisticsPacket packet) {\n         session.updateStatistics(packet.getStatistics());\n \n         if (session.isWaitingForStatistics()) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/JavaUnlockRecipesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaUnlockRecipesTranslator extends PacketTranslator<ServerUnlockRecipesPacket> {\n \n     @Override\n-    public void translate(ServerUnlockRecipesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUnlockRecipesPacket packet) {\n         if (packet.getAction() == UnlockRecipesAction.REMOVE) {\n             session.getUnlockedRecipes().removeAll(Arrays.asList(packet.getRecipes()));\n         } else {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityAnimationTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaEntityAnimationTranslator extends PacketTranslator<ServerEntityAnimationPacket> {\n \n     @Override\n-    public void translate(ServerEntityAnimationPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityAnimationPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityAttachTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class JavaEntityAttachTranslator extends PacketTranslator<ServerEntityAttachPacket> {\n \n     @Override\n-    public void translate(ServerEntityAttachPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityAttachPacket packet) {\n \n         Entity holderId;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityCollectItemTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n public class JavaEntityCollectItemTranslator extends PacketTranslator<ServerEntityCollectItemPacket> {\n \n     @Override\n-    public void translate(ServerEntityCollectItemPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityCollectItemPacket packet) {\n         // Collected entity is the other entity\n         Entity collectedEntity = session.getEntityCache().getEntityByJavaId(packet.getCollectedEntityId());\n         if (collectedEntity == null) return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityEffectTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaEntityEffectTranslator extends PacketTranslator<ServerEntityEffectPacket> {\n \n     @Override\n-    public void translate(ServerEntityEffectPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityEffectPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityEquipmentTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class JavaEntityEquipmentTranslator extends PacketTranslator<ServerEntityEquipmentPacket> {\n \n     @Override\n-    public void translate(ServerEntityEquipmentPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityEquipmentPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityHeadLookTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaEntityHeadLookTranslator extends PacketTranslator<ServerEntityHeadLookPacket> {\n \n     @Override\n-    public void translate(ServerEntityHeadLookPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityHeadLookPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityMetadataTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class JavaEntityMetadataTranslator extends PacketTranslator<ServerEntityMetadataPacket> {\n \n     @Override\n-    public void translate(ServerEntityMetadataPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityMetadataPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPositionRotationTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaEntityPositionRotationTranslator extends PacketTranslator<ServerEntityPositionRotationPacket> {\n \n     @Override\n-    public void translate(ServerEntityPositionRotationPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityPositionRotationPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPositionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaEntityPositionTranslator extends PacketTranslator<ServerEntityPositionPacket> {\n \n     @Override\n-    public void translate(ServerEntityPositionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityPositionPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPropertiesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaEntityPropertiesTranslator extends PacketTranslator<ServerEntityPropertiesPacket> {\n \n     @Override\n-    public void translate(ServerEntityPropertiesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityPropertiesPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityRemoveEffectTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaEntityRemoveEffectTranslator extends PacketTranslator<ServerEntityRemoveEffectPacket> {\n \n     @Override\n-    public void translate(ServerEntityRemoveEffectPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityRemoveEffectPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityRotationTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaEntityRotationTranslator extends PacketTranslator<ServerEntityRotationPacket> {\n \n     @Override\n-    public void translate(ServerEntityRotationPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityRotationPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntitySetPassengersTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n public class JavaEntitySetPassengersTranslator extends PacketTranslator<ServerEntitySetPassengersPacket> {\n \n     @Override\n-    public void translate(ServerEntitySetPassengersPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntitySetPassengersPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityStatusTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n public class JavaEntityStatusTranslator extends PacketTranslator<ServerEntityStatusPacket> {\n \n     @Override\n-    public void translate(ServerEntityStatusPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityStatusPacket packet) {\n         Entity entity;\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityTeleportTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaEntityTeleportTranslator extends PacketTranslator<ServerEntityTeleportPacket> {\n \n     @Override\n-    public void translate(ServerEntityTeleportPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityTeleportPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityVelocityTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaEntityVelocityTranslator extends PacketTranslator<ServerEntityVelocityPacket> {\n \n     @Override\n-    public void translate(ServerEntityVelocityPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerEntityVelocityPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {\n             entity = session.getPlayerEntity();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaRemoveEntitiesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaRemoveEntitiesTranslator extends PacketTranslator<ServerRemoveEntitiesPacket> {\n \n     @Override\n-    public void translate(ServerRemoveEntitiesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerRemoveEntitiesPacket packet) {\n         for (int entityId : packet.getEntityIds()) {\n             Entity entity = session.getEntityCache().getEntityByJavaId(entityId);\n             if (entity != null) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerAbilitiesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -34,7 +34,7 @@\n public class JavaPlayerAbilitiesTranslator extends PacketTranslator<ServerPlayerAbilitiesPacket> {\n \n     @Override\n-    public void translate(ServerPlayerAbilitiesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerAbilitiesPacket packet) {\n         session.setCanFly(packet.isCanFly());\n         session.setFlying(packet.isFlying());\n         session.sendAdventureSettings();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerActionAckTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaPlayerActionAckTranslator extends PacketTranslator<ServerPlayerActionAckPacket> {\n \n     @Override\n-    public void translate(ServerPlayerActionAckPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerActionAckPacket packet) {\n         ChunkUtils.updateBlock(session, packet.getNewState(), packet.getPosition());\n         if (packet.getAction() == PlayerAction.START_DIGGING && !packet.isSuccessful()) {\n             LevelEventPacket stopBreak = new LevelEventPacket();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerChangeHeldItemTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaPlayerChangeHeldItemTranslator extends PacketTranslator<ServerPlayerChangeHeldItemPacket> {\n \n     @Override\n-    public void translate(ServerPlayerChangeHeldItemPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerChangeHeldItemPacket packet) {\n         PlayerHotbarPacket hotbarPacket = new PlayerHotbarPacket();\n         hotbarPacket.setContainerId(0);\n         hotbarPacket.setSelectedHotbarSlot(packet.getSlot());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerHealthTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n public class JavaPlayerHealthTranslator extends PacketTranslator<ServerPlayerHealthPacket> {\n \n     @Override\n-    public void translate(ServerPlayerHealthPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerHealthPacket packet) {\n         SessionPlayerEntity entity = session.getPlayerEntity();\n \n         int health = (int) Math.ceil(packet.getHealth());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerListEntryTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n @Translator(packet = ServerPlayerListEntryPacket.class)\n public class JavaPlayerListEntryTranslator extends PacketTranslator<ServerPlayerListEntryPacket> {\n     @Override\n-    public void translate(ServerPlayerListEntryPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerListEntryPacket packet) {\n         if (packet.getAction() != PlayerListEntryAction.ADD_PLAYER && packet.getAction() != PlayerListEntryAction.REMOVE_PLAYER)\n             return;\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerPositionRotationTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -50,7 +50,7 @@\n public class JavaPlayerPositionRotationTranslator extends PacketTranslator<ServerPlayerPositionRotationPacket> {\n \n     @Override\n-    public void translate(ServerPlayerPositionRotationPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerPositionRotationPacket packet) {\n         if (!session.isLoggedIn())\n             return;\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerSetExperienceTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaPlayerSetExperienceTranslator extends PacketTranslator<ServerPlayerSetExperiencePacket> {\n \n     @Override\n-    public void translate(ServerPlayerSetExperiencePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayerSetExperiencePacket packet) {\n         SessionPlayerEntity entity = session.getPlayerEntity();\n \n         AttributeData experience = GeyserAttributeType.EXPERIENCE.getAttribute(packet.getExperience());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnEntityTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -46,7 +46,7 @@\n public class JavaSpawnEntityTranslator extends PacketTranslator<ServerSpawnEntityPacket> {\n \n     @Override\n-    public void translate(ServerSpawnEntityPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnEntityPacket packet) {\n \n         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());\n         Vector3f motion = Vector3f.from(packet.getMotionX(), packet.getMotionY(), packet.getMotionZ());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnExpOrbTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class JavaSpawnExpOrbTranslator extends PacketTranslator<ServerSpawnExpOrbPacket> {\n \n     @Override\n-    public void translate(ServerSpawnExpOrbPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnExpOrbPacket packet) {\n         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());\n \n         Entity entity = new ExpOrbEntity("
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnLivingEntityTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class JavaSpawnLivingEntityTranslator extends PacketTranslator<ServerSpawnLivingEntityPacket> {\n \n     @Override\n-    public void translate(ServerSpawnLivingEntityPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnLivingEntityPacket packet) {\n         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());\n         Vector3f motion = Vector3f.from(packet.getMotionX(), packet.getMotionY(), packet.getMotionZ());\n         Vector3f rotation = Vector3f.from(packet.getYaw(), packet.getPitch(), packet.getHeadYaw());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnPaintingTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaSpawnPaintingTranslator extends PacketTranslator<ServerSpawnPaintingPacket> {\n \n     @Override\n-    public void translate(ServerSpawnPaintingPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnPaintingPacket packet) {\n         Vector3f position = Vector3f.from(packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ());\n \n         PaintingEntity entity = new PaintingEntity(packet.getEntityId(),"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnPlayerTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class JavaSpawnPlayerTranslator extends PacketTranslator<ServerSpawnPlayerPacket> {\n \n     @Override\n-    public void translate(ServerSpawnPlayerPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnPlayerPacket packet) {\n         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());\n         Vector3f rotation = Vector3f.from(packet.getYaw(), packet.getPitch(), packet.getYaw());\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaDisplayScoreboardTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaDisplayScoreboardTranslator extends PacketTranslator<ServerDisplayScoreboardPacket> {\n \n     @Override\n-    public void translate(ServerDisplayScoreboardPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerDisplayScoreboardPacket packet) {\n         session.getWorldCache().getScoreboard()\n                 .displayObjective(packet.getName(), packet.getPosition());\n     }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaScoreboardObjectiveTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n public class JavaScoreboardObjectiveTranslator extends PacketTranslator<ServerScoreboardObjectivePacket> {\n \n     @Override\n-    public void translate(ServerScoreboardObjectivePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerScoreboardObjectivePacket packet) {\n         WorldCache worldCache = session.getWorldCache();\n         Scoreboard scoreboard = worldCache.getScoreboard();\n         Objective objective = scoreboard.getObjective(packet.getName());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaTeamTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,7 +47,7 @@ public class JavaTeamTranslator extends PacketTranslator<ServerTeamPacket> {\n     private static final GeyserLogger LOGGER = GeyserConnector.getInstance().getLogger();\n \n     @Override\n-    public void translate(ServerTeamPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerTeamPacket packet) {\n         if (LOGGER.isDebug()) {\n             LOGGER.debug(\"Team packet \" + packet.getTeamName() + \" \" + packet.getAction() + \" \" + Arrays.toString(packet.getPlayers()));\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaUpdateScoreTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,7 +47,7 @@ public JavaUpdateScoreTranslator() {\n     }\n \n     @Override\n-    public void translate(ServerUpdateScorePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUpdateScorePacket packet) {\n         WorldCache worldCache = session.getWorldCache();\n         Scoreboard scoreboard = worldCache.getScoreboard();\n         int pps = worldCache.increaseAndGetScoreboardPacketsPerSecond();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaClearTitlesTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaClearTitlesTranslator extends PacketTranslator<ServerClearTitlesPacket> {\n \n     @Override\n-    public void translate(ServerClearTitlesPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerClearTitlesPacket packet) {\n         SetTitlePacket titlePacket = new SetTitlePacket();\n         // TODO handle packet.isResetTimes()\n         titlePacket.setType(SetTitlePacket.Type.CLEAR);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetActionBarTextTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaSetActionBarTextTranslator extends PacketTranslator<ServerSetActionBarTextPacket> {\n \n     @Override\n-    public void translate(ServerSetActionBarTextPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSetActionBarTextPacket packet) {\n         String text;\n         if (packet.getText() == null) { //TODO 1.17 can this happen?\n             text = \" \";"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetSubtitleTextTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaSetSubtitleTextTranslator extends PacketTranslator<ServerSetSubtitleTextPacket> {\n \n     @Override\n-    public void translate(ServerSetSubtitleTextPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSetSubtitleTextPacket packet) {\n         String text;\n         if (packet.getText() == null) { //TODO 1.17 can this happen?\n             text = \" \";"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetTitleTextTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaSetTitleTextTranslator extends PacketTranslator<ServerSetTitleTextPacket> {\n \n     @Override\n-    public void translate(ServerSetTitleTextPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSetTitleTextPacket packet) {\n         String text;\n         if (packet.getText() == null) { //TODO 1.17 can this happen?\n             text = \" \";"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetTitlesAnimationTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaSetTitlesAnimationTranslator extends PacketTranslator<ServerSetTitlesAnimationPacket> {\n \n     @Override\n-    public void translate(ServerSetTitlesAnimationPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSetTitlesAnimationPacket packet) {\n         SetTitlePacket titlePacket = new SetTitlePacket();\n         titlePacket.setType(SetTitlePacket.Type.TIMES);\n         titlePacket.setText(\"\");"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaCloseWindowTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaCloseWindowTranslator extends PacketTranslator<ServerCloseWindowPacket> {\n \n     @Override\n-    public void translate(ServerCloseWindowPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerCloseWindowPacket packet) {\n         // Sometimes the server can request a window close of ID 0... when the window isn't even open\n         // Don't confirm in this instance\n         InventoryUtils.closeInventory(session, packet.getWindowId(), (session.getOpenInventory() != null && session.getOpenInventory().getId() == packet.getWindowId()));"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaOpenHorseWindowTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -98,7 +98,7 @@ public class JavaOpenHorseWindowTranslator extends PacketTranslator<ServerOpenHo\n     }\n \n     @Override\n-    public void translate(ServerOpenHorseWindowPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerOpenHorseWindowPacket packet) {\n         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());\n         if (entity == null) {\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaOpenWindowTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaOpenWindowTranslator extends PacketTranslator<ServerOpenWindowPacket> {\n \n     @Override\n-    public void translate(ServerOpenWindowPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerOpenWindowPacket packet) {\n         if (packet.getWindowId() == 0) {\n             return;\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaSetSlotTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -58,7 +58,7 @@\n public class JavaSetSlotTranslator extends PacketTranslator<ServerSetSlotPacket> {\n \n     @Override\n-    public void translate(ServerSetSlotPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSetSlotPacket packet) {\n         if (packet.getWindowId() == 255) { //cursor\n             GeyserItemStack newItem = GeyserItemStack.from(packet.getItem());\n             session.getPlayerInventory().setCursor(newItem, session);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaWindowItemsTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class JavaWindowItemsTranslator extends PacketTranslator<ServerWindowItemsPacket> {\n \n     @Override\n-    public void translate(ServerWindowItemsPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerWindowItemsPacket packet) {\n         Inventory inventory = InventoryUtils.getInventory(session, packet.getWindowId());\n         if (inventory == null)\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaWindowPropertyTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaWindowPropertyTranslator extends PacketTranslator<ServerWindowPropertyPacket> {\n \n     @Override\n-    public void translate(ServerWindowPropertyPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerWindowPropertyPacket packet) {\n         Inventory inventory = InventoryUtils.getInventory(session, packet.getWindowId());\n         if (inventory == null)\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockBreakAnimTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n public class JavaBlockBreakAnimTranslator extends PacketTranslator<ServerBlockBreakAnimPacket> {\n \n     @Override\n-    public void translate(ServerBlockBreakAnimPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerBlockBreakAnimPacket packet) {\n         int state = session.getConnector().getWorldManager().getBlockAt(session, packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ());\n         int breakTime = (int) (65535 / Math.ceil(BlockUtils.getBreakTime(session, BlockRegistries.JAVA_BLOCKS.get(state), ItemMapping.AIR, new CompoundTag(\"\"), false) * 20));\n         LevelEventPacket levelEventPacket = new LevelEventPacket();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockChangeTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n public class JavaBlockChangeTranslator extends PacketTranslator<ServerBlockChangePacket> {\n \n     @Override\n-    public void translate(ServerBlockChangePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerBlockChangePacket packet) {\n         Position pos = packet.getRecord().getPosition();\n         boolean updatePlacement = session.getConnector().getPlatformType() != PlatformType.SPIGOT && // Spigot simply listens for the block place event\n                 session.getConnector().getWorldManager().getBlockAt(session, pos) != packet.getRecord().getBlock();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockValueTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -45,7 +45,7 @@\n public class JavaBlockValueTranslator extends PacketTranslator<ServerBlockValuePacket> {\n \n     @Override\n-    public void translate(ServerBlockValuePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerBlockValuePacket packet) {\n         BlockEventPacket blockEventPacket = new BlockEventPacket();\n         blockEventPacket.setBlockPosition(Vector3i.from(packet.getPosition().getX(),\n                 packet.getPosition().getY(), packet.getPosition().getZ()));"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaChunkDataTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -52,7 +52,7 @@ public class JavaChunkDataTranslator extends PacketTranslator<ServerChunkDataPac\n     private static final boolean NEW_BIOME_WRITE = GeyserConnector.getInstance().getConfig().isExtendedWorldHeight();\n \n     @Override\n-    public void translate(ServerChunkDataPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerChunkDataPacket packet) {\n         if (session.isSpawned()) {\n             ChunkUtils.updateChunkPosition(session, session.getPlayerEntity().getPosition().toInt());\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaExplosionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n public class JavaExplosionTranslator extends PacketTranslator<ServerExplosionPacket> {\n \n     @Override\n-    public void translate(ServerExplosionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerExplosionPacket packet) {\n         for (ExplodedBlockRecord record : packet.getExploded()) {\n             Vector3f pos = Vector3f.from(packet.getX() + record.getX(), packet.getY() + record.getY(), packet.getZ() + record.getZ());\n             ChunkUtils.updateBlock(session, BlockStateValues.JAVA_AIR_ID, pos.toInt());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaMapDataTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n @Translator(packet = ServerMapDataPacket.class)\n public class JavaMapDataTranslator extends PacketTranslator<ServerMapDataPacket> {\n     @Override\n-    public void translate(ServerMapDataPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerMapDataPacket packet) {\n         ClientboundMapItemDataPacket mapItemDataPacket = new ClientboundMapItemDataPacket();\n         boolean shouldStore = false;\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaMultiBlockChangeTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaMultiBlockChangeTranslator extends PacketTranslator<ServerMultiBlockChangePacket> {\n \n     @Override\n-    public void translate(ServerMultiBlockChangePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerMultiBlockChangePacket packet) {\n         for (BlockChangeRecord record : packet.getRecords()) {\n             ChunkUtils.updateBlock(session, record.getBlock(), record.getPosition());\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaNotifyClientTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -49,7 +49,7 @@\n public class JavaNotifyClientTranslator extends PacketTranslator<ServerNotifyClientPacket> {\n \n     @Override\n-    public void translate(ServerNotifyClientPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerNotifyClientPacket packet) {\n         PlayerEntity entity = session.getPlayerEntity();\n \n         switch (packet.getNotification()) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlayBuiltinSoundTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n public class JavaPlayBuiltinSoundTranslator extends PacketTranslator<ServerPlayBuiltinSoundPacket> {\n \n     @Override\n-    public void translate(ServerPlayBuiltinSoundPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayBuiltinSoundPacket packet) {\n         String packetSound = packet.getSound().getName();\n \n         SoundMapping soundMapping = Registries.SOUNDS.get(packetSound);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlayEffectTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -48,7 +48,7 @@\n public class JavaPlayEffectTranslator extends PacketTranslator<ServerPlayEffectPacket> {\n \n     @Override\n-    public void translate(ServerPlayEffectPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlayEffectPacket packet) {\n         // Separate case since each RecordEffectData in Java is an individual track in Bedrock\n         if (packet.getEffect() == SoundEffect.RECORD) {\n             RecordEffectData recordEffectData = (RecordEffectData) packet.getData();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlaySoundTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n public class JavaPlaySoundTranslator extends PacketTranslator<ServerPlaySoundPacket> {\n \n     @Override\n-    public void translate(ServerPlaySoundPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerPlaySoundPacket packet) {\n         String packetSound;\n         if (packet.getSound() instanceof BuiltinSound) {\n             packetSound = ((BuiltinSound) packet.getSound()).getName();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaSpawnParticleTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -50,7 +50,7 @@\n public class JavaSpawnParticleTranslator extends PacketTranslator<ServerSpawnParticlePacket> {\n \n     @Override\n-    public void translate(ServerSpawnParticlePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnParticlePacket packet) {\n         Function<Vector3f, BedrockPacket> particleCreateFunction = createParticle(session, packet.getParticle());\n         if (particleCreateFunction != null) {\n             if (packet.getAmount() == 0) {"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaSpawnPositionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n public class JavaSpawnPositionTranslator extends PacketTranslator<ServerSpawnPositionPacket> {\n \n     @Override\n-    public void translate(ServerSpawnPositionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerSpawnPositionPacket packet) {\n         SetSpawnPositionPacket spawnPositionPacket = new SetSpawnPositionPacket();\n         spawnPositionPacket.setBlockPosition(Vector3i.from(packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ()));\n         spawnPositionPacket.setSpawnForced(true);"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaStopSoundTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n public class JavaStopSoundTranslator extends PacketTranslator<ServerStopSoundPacket> {\n \n     @Override\n-    public void translate(ServerStopSoundPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerStopSoundPacket packet) {\n         // Runs if all sounds are stopped\n         if (packet.getSound() == null) {\n             StopSoundPacket stopPacket = new StopSoundPacket();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaTradeListTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -51,7 +51,7 @@\n public class JavaTradeListTranslator extends PacketTranslator<ServerTradeListPacket> {\n \n     @Override\n-    public void translate(ServerTradeListPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerTradeListPacket packet) {\n         Inventory openInventory = session.getOpenInventory();\n         if (!(openInventory instanceof MerchantContainer && openInventory.getId() == packet.getWindowId())) {\n             return;"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUnloadChunkTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaUnloadChunkTranslator extends PacketTranslator<ServerUnloadChunkPacket> {\n \n     @Override\n-    public void translate(ServerUnloadChunkPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUnloadChunkPacket packet) {\n         session.getChunkCache().removeChunk(packet.getX(), packet.getZ());\n \n         //Checks if a skull is in an unloaded chunk then removes it"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateTileEntityTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -45,7 +45,7 @@\n public class JavaUpdateTileEntityTranslator extends PacketTranslator<ServerUpdateTileEntityPacket> {\n \n     @Override\n-    public void translate(ServerUpdateTileEntityPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUpdateTileEntityPacket packet) {\n         String id = BlockEntityUtils.getBedrockBlockEntityId(packet.getType().name());\n         if (packet.getNbt().isEmpty()) { // Fixes errors in servers sending empty NBT\n             BlockEntityUtils.updateBlockEntity(session, NbtMap.EMPTY, packet.getPosition());"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateTimeTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaUpdateTimeTranslator extends PacketTranslator<ServerUpdateTimePacket> {\n \n     @Override\n-    public void translate(ServerUpdateTimePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUpdateTimePacket packet) {\n         // Bedrock sends a GameRulesChangedPacket if there is no daylight cycle\n         // Java just sends a negative long if there is no daylight cycle\n         long time = packet.getTime();"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateViewDistanceTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n public class JavaUpdateViewDistanceTranslator extends PacketTranslator<ServerUpdateViewDistancePacket> {\n \n     @Override\n-    public void translate(ServerUpdateViewDistancePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUpdateViewDistancePacket packet) {\n         session.setRenderDistance(packet.getViewDistance());\n     }\n }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateViewPositionTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n public class JavaUpdateViewPositionTranslator extends PacketTranslator<ServerUpdateViewPositionPacket> {\n \n     @Override\n-    public void translate(ServerUpdateViewPositionPacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerUpdateViewPositionPacket packet) {\n         if (!session.isSpawned() && session.getLastChunkPosition() == null) {\n             ChunkUtils.updateChunkPosition(session, Vector3i.from(packet.getChunkX() << 4, 64, packet.getChunkZ() << 4));\n         }"
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaVehicleMoveTranslator.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n public class JavaVehicleMoveTranslator extends PacketTranslator<ServerVehicleMovePacket> {\n \n     @Override\n-    public void translate(ServerVehicleMovePacket packet, GeyserSession session) {\n+    public void translate(GeyserSession session, ServerVehicleMovePacket packet) {\n         Entity entity = session.getRidingVehicleEntity();\n         if (entity == null) return;\n "
        },
        {
          "filename": "connector/src/main/java/org/geysermc/connector/utils/LoginEncryptionUtils.java",
          "status": "modified",
          "additions": 37,
          "deletions": 11,
          "patch": "@@ -31,6 +31,8 @@\n import com.fasterxml.jackson.databind.node.JsonNodeType;\n import com.github.steveice10.mc.auth.service.MsaAuthenticationService;\n import com.nimbusds.jose.JWSObject;\n+import com.nimbusds.jose.shaded.json.JSONObject;\n+import com.nimbusds.jose.shaded.json.JSONValue;\n import com.nukkitx.network.util.Preconditions;\n import com.nukkitx.protocol.bedrock.packet.LoginPacket;\n import com.nukkitx.protocol.bedrock.packet.ServerToClientHandshakePacket;\n@@ -49,6 +51,7 @@\n \n import javax.crypto.SecretKey;\n import java.io.IOException;\n+import java.net.URI;\n import java.security.KeyPair;\n import java.security.KeyPairGenerator;\n import java.security.PublicKey;\n@@ -62,28 +65,49 @@ public class LoginEncryptionUtils {\n     private static boolean HAS_SENT_ENCRYPTION_MESSAGE = false;\n \n     private static boolean validateChainData(JsonNode data) throws Exception {\n+        if (data.size() != 3) {\n+            return false;\n+        }\n+\n         ECPublicKey lastKey = null;\n         boolean validChain = false;\n         for (JsonNode node : data) {\n             JWSObject jwt = JWSObject.parse(node.asText());\n \n-            if (!validChain) {\n-                validChain = EncryptionUtils.verifyJwt(jwt, EncryptionUtils.getMojangPublicKey());\n+            // x509 cert is expected in every claim\n+            URI x5u = jwt.getHeader().getX509CertURL();\n+            if (x5u == null) {\n+                return false;\n             }\n \n-            if (lastKey != null) {\n-                if (!EncryptionUtils.verifyJwt(jwt, lastKey)) return false;\n+            ECPublicKey expectedKey = EncryptionUtils.generateKey(jwt.getHeader().getX509CertURL().toString());\n+            // First key is self-signed\n+            if (lastKey == null) {\n+                lastKey = expectedKey;\n+            } else if (!lastKey.equals(expectedKey)) {\n+                return false;\n             }\n \n-            JsonNode payloadNode = JSON_MAPPER.readTree(jwt.getPayload().toString());\n-            JsonNode ipkNode = payloadNode.get(\"identityPublicKey\");\n-            Preconditions.checkState(ipkNode != null && ipkNode.getNodeType() == JsonNodeType.STRING, \"identityPublicKey node is missing in chain\");\n-            lastKey = EncryptionUtils.generateKey(ipkNode.asText());\n+            if (!EncryptionUtils.verifyJwt(jwt, lastKey)) {\n+                return false;\n+            }\n+\n+            if (lastKey.equals(EncryptionUtils.getMojangPublicKey())) {\n+                validChain = true;\n+            }\n+\n+            Object payload = JSONValue.parse(jwt.getPayload().toString());\n+            Preconditions.checkArgument(payload instanceof JSONObject, \"Payload is not an object\");\n+\n+            Object identityPublicKey = ((JSONObject) payload).get(\"identityPublicKey\");\n+            Preconditions.checkArgument(identityPublicKey instanceof String, \"identityPublicKey node is missing in chain\");\n+            lastKey = EncryptionUtils.generateKey((String) identityPublicKey);\n         }\n+\n         return validChain;\n     }\n \n-    public static void encryptPlayerConnection(GeyserConnector connector, GeyserSession session, LoginPacket loginPacket) {\n+    public static void encryptPlayerConnection(GeyserSession session, LoginPacket loginPacket) {\n         JsonNode certData;\n         try {\n             certData = JSON_MAPPER.readTree(loginPacket.getChainData().toByteArray());\n@@ -96,11 +120,13 @@ public static void encryptPlayerConnection(GeyserConnector connector, GeyserSess\n             throw new RuntimeException(\"Certificate data is not valid\");\n         }\n \n-        encryptConnectionWithCert(connector, session, loginPacket.getSkinData().toString(), certChainData);\n+        encryptConnectionWithCert(session, loginPacket.getSkinData().toString(), certChainData);\n     }\n \n-    private static void encryptConnectionWithCert(GeyserConnector connector, GeyserSession session, String clientData, JsonNode certChainData) {\n+    private static void encryptConnectionWithCert(GeyserSession session, String clientData, JsonNode certChainData) {\n         try {\n+            GeyserConnector connector = session.getConnector();\n+\n             boolean validChain = validateChainData(certChainData);\n \n             connector.getLogger().debug(String.format(\"Is player data valid? %s\", validChain));"
        },
        {
          "filename": "pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@\n     <modelVersion>4.0.0</modelVersion>\n     <groupId>org.geysermc</groupId>\n     <artifactId>geyser-parent</artifactId>\n-    <version>1.4.1-SNAPSHOT</version>\n+    <version>1.4.2-SNAPSHOT</version>\n     <packaging>pom</packaging>\n     <name>Geyser</name>\n     <description>Allows for players from Minecraft Bedrock Edition to join Minecraft Java Edition servers.</description>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 25,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "58e2f17e08998c4945153c2bb25b7259f3d4e217",
            "date": "2025-01-12T19:44:33Z",
            "author_login": "onebeastchris"
          },
          {
            "sha": "1267b2e5ab1c6293930d84c54eda7709344e0833",
            "date": "2025-01-09T20:53:01Z",
            "author_login": "eclipseisoffline"
          },
          {
            "sha": "65f7bdb3c025d6f07c09abbdea73d88fb56f0fec",
            "date": "2025-01-09T18:57:27Z",
            "author_login": "Oliver-makes-code"
          },
          {
            "sha": "ddd1afabd1a4be415209a248e03cf7a793e4056e",
            "date": "2025-01-05T15:34:57Z",
            "author_login": "Camotoy"
          },
          {
            "sha": "a19f0305fb8ffbeac4d6bbe00143841f5f9f9ff5",
            "date": "2025-01-05T11:41:35Z",
            "author_login": "BUGTeas"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-287",
    "description": "Geyser is a bridge between Minecraft: Bedrock Edition and Minecraft: Java Edition. Versions of Geyser prior to 1.4.2-SNAPSHOT allow anyone that can connect to the server to forge a LoginPacket with manipulated JWT token allowing impersonation as any user. Version 1.4.2-SNAPSHOT contains a patch for the issue. There are no known workarounds aside from upgrading.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-08-30T23:15:07.070",
    "last_modified": "2024-11-21T06:18:48.060",
    "fix_date": "2021-08-30T17:55:01Z"
  },
  "references": [
    {
      "url": "https://github.com/GeyserMC/Geyser/commit/b9541505af68ac7b7c093206ac7b1ba88957a5a6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/GeyserMC/Geyser/security/advisories/GHSA-h77f-xxx7-4858",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://updates.playhive.com/weekend-maintenance-disclosure-2kJMaY",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/GeyserMC/Geyser/commit/b9541505af68ac7b7c093206ac7b1ba88957a5a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/GeyserMC/Geyser/security/advisories/GHSA-h77f-xxx7-4858",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://updates.playhive.com/weekend-maintenance-disclosure-2kJMaY",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.120971",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Geyser",
    "owner": "GeyserMC",
    "created_at": "2019-07-08T17:23:17Z",
    "updated_at": "2025-01-14T20:27:55Z",
    "pushed_at": "2025-01-12T19:44:33Z",
    "size": 30265,
    "stars": 4842,
    "forks": 697,
    "open_issues": 293,
    "watchers": 4842,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 5258755,
      "Kotlin": 4910
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:45:47.245150"
  }
}