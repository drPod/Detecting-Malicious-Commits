{
  "cve_id": "CVE-2021-39187",
  "github_data": {
    "repository": "parse-community/parse-server",
    "fix_commit": "308668c89474223e2448be92d6823b52c1c313ec",
    "related_commits": [
      "308668c89474223e2448be92d6823b52c1c313ec",
      "308668c89474223e2448be92d6823b52c1c313ec"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "308668c89474223e2448be92d6823b52c1c313ec",
      "commit_date": "2021-09-02T10:46:48Z",
      "author": {
        "login": "davimacedo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-xqp8-w826-hh6x",
        "length": 1088,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 84,
        "additions": 80,
        "deletions": 4
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 11,
          "deletions": 2,
          "patch": "@@ -4,7 +4,8 @@ Jump directly to a version:\n \n | 4.x                                  |\n |--------------------------------------|\n-| [**4.10.2 (latest release)**](#4102) |\n+| [**4.10.3 (latest release)**](#4103) |\n+| [4.10.2](#4102)                      |\n | [4.10.1](#4101)                      |\n | [4.10.0](#4100)                      |\n | [4.5.2](#452)                        |\n@@ -93,14 +94,16 @@ Jump directly to a version:\n ___\n \n ## Unreleased (Master Branch)\n-[Full Changelog](https://github.com/parse-community/parse-server/compare/4.10.2...master)\n+[Full Changelog](https://github.com/parse-community/parse-server/compare/4.10.3...master)\n+\n ### Breaking Changes\n - Improved schema caching through database real-time hooks. Reduces DB queries, decreases Parse Query execution time and fixes a potential schema memory leak. If multiple Parse Server instances connect to the same DB (for example behind a load balancer), set the [Parse Server Option](https://parseplatform.org/parse-server/api/master/ParseServerOptions.html) `databaseOptions.enableSchemaHooks: true` to enable this feature and keep the schema in sync across all instances. Failing to do so will cause a schema change to not propagate to other instances and re-syncing will only happen when these instances restart. The options `enableSingleSchemaCache` and `schemaCacheTTL` have been removed. To use this feature with MongoDB, a replica set cluster with [change stream](https://docs.mongodb.com/manual/changeStreams/#availability) support is required. (Diamond Lewis, SebC) [#7214](https://github.com/parse-community/parse-server/issues/7214)\n - Added file upload restriction. File upload is now only allowed for authenticated users by default for improved security. To allow file upload also for Anonymous Users or Public, set the `fileUpload` parameter in the [Parse Server Options](https://parseplatform.org/parse-server/api/master/ParseServerOptions.html) (dblythy, Manuel Trezza) [#7071](https://github.com/parse-community/parse-server/pull/7071)\n - Removed [parse-server-simple-mailgun-adapter](https://github.com/parse-community/parse-server-simple-mailgun-adapter) dependency; to continue using the adapter it has to be explicitly installed (Manuel Trezza) [#7321](https://github.com/parse-community/parse-server/pull/7321)\n - Remove support for MongoDB 3.6 which has reached its End-of-Life date and PostgreSQL 10 (Manuel Trezza) [#7315](https://github.com/parse-community/parse-server/pull/7315)\n - Remove support for Node 10 which has reached its End-of-Life date (Manuel Trezza) [#7314](https://github.com/parse-community/parse-server/pull/7314)\n - Remove S3 Files Adapter from Parse Server, instead install separately as `@parse/s3-files-adapter` (Manuel Trezza) [#7324](https://github.com/parse-community/parse-server/pull/7324)\n+\n ### Notable Changes\n - Added Parse Server Security Check to report weak security settings (Manuel Trezza, dblythy) [#7247](https://github.com/parse-community/parse-server/issues/7247)\n - EXPERIMENTAL: Added new page router with placeholder rendering and localization of custom and feature pages such as password reset and email verification (Manuel Trezza) [#7128](https://github.com/parse-community/parse-server/pull/7128)\n@@ -147,6 +150,12 @@ ___\n - Add CI check to add changelog entry (Manuel Trezza) [#7512](https://github.com/parse-community/parse-server/pull/7512)\n - Refactor: uniform issue templates across repos (Manuel Trezza) [#7528](https://github.com/parse-community/parse-server/pull/7528)\n \n+## 4.10.3\n+[Full Changelog](https://github.com/parse-community/parse-server/compare/4.10.2...4.10.3)\n+\n+### Security Fixes\n+- Validate `explain` query parameter to avoid a server crash due to MongoDB bug [NODE-3463](https://jira.mongodb.org/browse/NODE-3463) (Kartal Kaan Bozdogan) [GHSA-xqp8-w826-hh6x](https://github.com/parse-community/parse-server/security/advisories/GHSA-xqp8-w826-hh6x)\n+\n ## 4.10.2\n [Full Changelog](https://github.com/parse-community/parse-server/compare/4.10.1...4.10.2)\n "
        },
        {
          "filename": "spec/ParseQuery.spec.js",
          "status": "modified",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -37,6 +37,54 @@ describe('Parse.Query testing', () => {\n     });\n   });\n \n+  it_only_db('mongo')('gracefully handles invalid explain values', async () => {\n+    // Note that anything that is not truthy (like 0) does not cause an exception, as they get swallowed up by ClassesRouter::optionsFromBody\n+    const values = [1, 'yolo', { a: 1 }, [1, 2, 3]];\n+    for (const value of values) {\n+      try {\n+        await request({\n+          method: 'GET',\n+          url: `http://localhost:8378/1/classes/_User?explain=${value}`,\n+          json: true,\n+          headers: masterKeyHeaders,\n+        });\n+        fail('request did not throw');\n+      } catch (e) {\n+        // Expect that Parse Server did not crash\n+        expect(e.code).not.toEqual('ECONNRESET');\n+        // Expect that Parse Server validates the explain value and does not crash;\n+        // see https://jira.mongodb.org/browse/NODE-3463\n+        equal(e.data.code, Parse.Error.INVALID_QUERY);\n+        equal(e.data.error, 'Invalid value for explain');\n+      }\n+      // get queries (of the form '/classes/:className/:objectId' cannot have the explain key, see ClassesRouter.js)\n+      // so it is enough that we test find queries\n+    }\n+  });\n+\n+  it_only_db('mongo')('supports valid explain values', async () => {\n+    const values = [\n+      false,\n+      true,\n+      'queryPlanner',\n+      'executionStats',\n+      'allPlansExecution',\n+      // 'queryPlannerExtended' is excluded as it only applies to MongoDB Data Lake which is currently not available in our CI environment\n+    ];\n+    for (const value of values) {\n+      const response = await request({\n+        method: 'GET',\n+        url: `http://localhost:8378/1/classes/_User?explain=${value}`,\n+        json: true,\n+        headers: masterKeyHeaders,\n+      });\n+      expect(response.status).toBe(200);\n+      if (value) {\n+        expect(response.data.results.ok).toBe(1);\n+      }\n+    }\n+  });\n+\n   it('searching for null', function (done) {\n     const baz = new TestObject({ foo: null });\n     const qux = new TestObject({ foo: 'qux' });"
        },
        {
          "filename": "src/Adapters/Storage/Mongo/MongoStorageAdapter.js",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -108,6 +108,23 @@ const mongoSchemaFromFieldsAndClassNameAndCLP = (\n   return mongoObject;\n };\n \n+function validateExplainValue(explain) {\n+  if (explain) {\n+    // The list of allowed explain values is from node-mongodb-native/lib/explain.js\n+    const explainAllowedValues = [\n+      'queryPlanner',\n+      'queryPlannerExtended',\n+      'executionStats',\n+      'allPlansExecution',\n+      false,\n+      true,\n+    ];\n+    if (!explainAllowedValues.includes(explain)) {\n+      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Invalid value for explain');\n+    }\n+  }\n+}\n+\n export class MongoStorageAdapter implements StorageAdapter {\n   // Private\n   _uri: string;\n@@ -578,6 +595,7 @@ export class MongoStorageAdapter implements StorageAdapter {\n     query: QueryType,\n     { skip, limit, sort, keys, readPreference, hint, caseInsensitive, explain }: QueryOptions\n   ): Promise<any> {\n+    validateExplainValue(explain);\n     schema = convertParseSchemaToMongoSchema(schema);\n     const mongoWhere = transformWhere(className, query, schema);\n     const mongoSort = _.mapKeys(sort, (value, fieldName) =>\n@@ -756,6 +774,7 @@ export class MongoStorageAdapter implements StorageAdapter {\n     hint: ?mixed,\n     explain?: boolean\n   ) {\n+    validateExplainValue(explain);\n     let isPointerField = false;\n     pipeline = pipeline.map(stage => {\n       if (stage.$group) {"
        },
        {
          "filename": "src/RestQuery.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -657,7 +657,7 @@ RestQuery.prototype.runFind = function (options = {}) {\n   return this.config.database\n     .find(this.className, this.restWhere, findOptions, this.auth)\n     .then(results => {\n-      if (this.className === '_User' && findOptions.explain !== true) {\n+      if (this.className === '_User' && !findOptions.explain) {\n         for (var result of results) {\n           cleanResultAuthData(result);\n         }\n@@ -866,7 +866,7 @@ function includePath(config, auth, response, path, restOptions = {}) {\n           return set;\n         }\n       }\n-      if (i == (keyPath.length - 1)) {\n+      if (i == keyPath.length - 1) {\n         set.add(keyPath[i]);\n       }\n       return set;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ca0aa3cd30e2bd28a8d9ba101fbe05183aefc88",
            "date": "2025-01-24T22:45:08Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6181652cce44354ed8d83e622bc124b2bea2cf75",
            "date": "2025-01-23T23:47:39Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "42f785e4659f4afddbd34906c35f8555ae3587dc",
            "date": "2025-01-21T13:38:12Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0a2302338d9f1f90681734ca7da238f538f415cf",
            "date": "2025-01-20T19:36:21Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0644f42914040dd9f05f085576f3483f5b852489",
            "date": "2025-01-20T15:08:23Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-74",
    "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Prior to version 4.10.3, Parse Server crashes when if a query request contains an invalid value for the `explain` option. This is due to a bug in the MongoDB Node.js driver which throws an exception that Parse Server cannot catch. There is a patch for this issue in version 4.10.3. No workarounds aside from upgrading are known to exist.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-02T16:15:07.540",
    "last_modified": "2024-11-21T06:18:50.240",
    "fix_date": "2021-09-02T10:46:48Z"
  },
  "references": [
    {
      "url": "https://github.com/parse-community/parse-server/commit/308668c89474223e2448be92d6823b52c1c313ec",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.10.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xqp8-w826-hh6x",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.mongodb.org/browse/NODE-3463",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/commit/308668c89474223e2448be92d6823b52c1c313ec",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.10.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xqp8-w826-hh6x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.mongodb.org/browse/NODE-3463",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.130366",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "parse-server",
    "owner": "parse-community",
    "created_at": "2016-01-28T18:29:14Z",
    "updated_at": "2025-01-26T03:36:12Z",
    "pushed_at": "2025-01-24T22:46:38Z",
    "size": 73571,
    "stars": 21008,
    "forks": 4784,
    "open_issues": 477,
    "watchers": 21008,
    "has_security_policy": false,
    "default_branch": "alpha",
    "protected_branches": [
      "alpha",
      "beta",
      "release",
      "release-4.x.x",
      "release-5.x.x",
      "release-6.x.x",
      "release-7.x.x"
    ],
    "languages": {
      "JavaScript": 4248836,
      "HTML": 25876,
      "Shell": 7825,
      "Handlebars": 2113,
      "Dockerfile": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:26:16.464857"
  }
}