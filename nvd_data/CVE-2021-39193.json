{
  "cve_id": "CVE-2021-39193",
  "github_data": {
    "repository": "paritytech/frontier",
    "fix_commit": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
    "related_commits": [
      "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
      "0b962f218f0cdd796dadfe26c3f09e68f7861b26"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "0b962f218f0cdd796dadfe26c3f09e68f7861b26",
      "commit_date": "2021-09-03T15:48:21Z",
      "author": {
        "login": "tgmichel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add transaction cost pre-validation (#465)",
        "length": 42,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 42,
        "additions": 42,
        "deletions": 0
      },
      "files": [
        {
          "filename": "frame/ethereum/src/lib.rs",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -190,6 +190,27 @@ pub mod pallet {\n \n \t\tfn validate_unsigned(_source: TransactionSource, call: &Self::Call) -> TransactionValidity {\n \t\t\tif let Call::transact(transaction) = call {\n+\t\t\t\t// We must ensure a transaction can pay the cost of its data bytes.\n+\t\t\t\t// If it can't it should not be included in a block.\n+\t\t\t\tlet mut gasometer = evm::gasometer::Gasometer::new(\n+\t\t\t\t\ttransaction.gas_limit.low_u64(),\n+\t\t\t\t\t<T as pallet_evm::Config>::config(),\n+\t\t\t\t);\n+\t\t\t\tlet transaction_cost = match transaction.action {\n+\t\t\t\t\tTransactionAction::Call(_) => {\n+\t\t\t\t\t\tevm::gasometer::call_transaction_cost(&transaction.input)\n+\t\t\t\t\t}\n+\t\t\t\t\tTransactionAction::Create => {\n+\t\t\t\t\t\tevm::gasometer::create_transaction_cost(&transaction.input)\n+\t\t\t\t\t}\n+\t\t\t\t};\n+\t\t\t\tif gasometer.record_transaction(transaction_cost).is_err() {\n+\t\t\t\t\treturn InvalidTransaction::Custom(\n+\t\t\t\t\t\tTransactionValidationError::InvalidGasLimit as u8,\n+\t\t\t\t\t)\n+\t\t\t\t\t.into();\n+\t\t\t\t}\n+\n \t\t\t\tif let Some(chain_id) = transaction.signature.chain_id() {\n \t\t\t\t\tif chain_id != T::ChainId::get() {\n \t\t\t\t\t\treturn InvalidTransaction::Custom("
        },
        {
          "filename": "ts-tests/tests/test-transaction-cost.ts",
          "status": "added",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -0,0 +1,21 @@\n+import { expect } from \"chai\";\n+import { step } from \"mocha-steps\";\n+\n+import { describeWithFrontier, customRequest } from \"./util\";\n+\n+describeWithFrontier(\"Frontier RPC (Transaction cost)\", (context) => {\n+\n+\tstep(\"should take transaction cost into account and not submit it to the pool\", async function () {\n+\t\t// Simple transfer with gas limit 0 manually signed to prevent web3 from rejecting client-side.\n+\t\tconst tx = await customRequest(context.web3, \"eth_sendRawTransaction\", [\n+\t\t\t\"0xf86180843b9aca00809412cb274aad8251c875c0bf6872b67d9983e53fdd01801ca00e28ba2dd3c5a3fd467\\\n+\t\t\td4afd7aefb4a34b373314fff470bb9db743a84d674a0aa06e5994f2d07eafe1c37b4ce5471caecec29011f6f5b\\\n+\t\t\tf0b1a552c55ea348df35f\",\n+\t\t]);\n+\t\tlet msg =\n+\t\t\t\"submit transaction to pool failed: Pool(InvalidTransaction(InvalidTransaction::Custom(3)))\";\n+\t\texpect(tx.error).to.include({\n+\t\t\tmessage: msg,\n+\t\t});\n+\t});\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3a1dde2a2e3825dcd8dc7fd21382ad89cd4f83c5",
            "date": "2025-01-21T09:26:39Z",
            "author_login": "TarekkMA"
          },
          {
            "sha": "2c82e192d5398ba757ad344c9526f5cf87c48822",
            "date": "2025-01-20T08:56:28Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "836f1029be9120f8042d508eb8e1dc4b1e87469d",
            "date": "2025-01-20T07:47:23Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b20558c9c16d6d66cecff1c0ec0d5364210bf4e3",
            "date": "2025-01-20T07:47:01Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c3af915574a36506812587a590e79557c2ff086b",
            "date": "2025-01-20T07:46:38Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-20",
    "description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-03T18:15:07.197",
    "last_modified": "2024-11-21T06:18:51.153",
    "fix_date": "2021-09-03T15:48:21Z"
  },
  "references": [
    {
      "url": "https://github.com/paritytech/frontier/commit/0b962f218f0cdd796dadfe26c3f09e68f7861b26",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/pull/465",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/pull/465/commits/8a2b890a2fb477d5fedd0e4335b00623832849ae",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/security/advisories/GHSA-hw4v-5x4h-c3xm",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/commit/0b962f218f0cdd796dadfe26c3f09e68f7861b26",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/pull/465",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/pull/465/commits/8a2b890a2fb477d5fedd0e4335b00623832849ae",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/paritytech/frontier/security/advisories/GHSA-hw4v-5x4h-c3xm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:05.131706",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "frontier",
    "owner": "paritytech",
    "created_at": "2018-11-08T13:10:57Z",
    "updated_at": "2025-01-21T09:26:44Z",
    "pushed_at": "2025-01-23T04:11:26Z",
    "size": 71426,
    "stars": 583,
    "forks": 515,
    "open_issues": 146,
    "watchers": 583,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Rust": 1529594,
      "TypeScript": 221704,
      "Solidity": 9044,
      "Handlebars": 5345,
      "JavaScript": 4301,
      "Makefile": 2075,
      "Shell": 1769,
      "Nix": 867
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:23:24.820845"
  }
}