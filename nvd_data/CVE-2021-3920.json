{
  "cve_id": "CVE-2021-3920",
  "github_data": {
    "repository": "getgrav/grav-plugin-admin",
    "fix_commit": "6463135bf046d8131189c163158cd5db8f7a9675",
    "related_commits": [
      "6463135bf046d8131189c163158cd5db8f7a9675",
      "6463135bf046d8131189c163158cd5db8f7a9675"
    ],
    "patch_url": "https://github.com/getgrav/grav-plugin-admin/commit/6463135bf046d8131189c163158cd5db8f7a9675.patch",
    "fix_commit_details": {
      "sha": "6463135bf046d8131189c163158cd5db8f7a9675",
      "commit_date": "2021-11-03T10:42:27Z",
      "author": {
        "login": "mahagr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed unescaped messages in JSON responses",
        "length": 42,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 33,
        "deletions": 23
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -1,3 +1,9 @@\n+# v1.10.25\n+## mm/dd/2021\n+\n+3. [](#bugfix)\n+   * Fixed unescaped messages in JSON responses\n+\n # v1.10.24\n ## 10/26/2021\n "
        },
        {
          "filename": "classes/plugin/AdminBaseController.php",
          "status": "modified",
          "additions": 11,
          "deletions": 7,
          "patch": "@@ -271,7 +271,7 @@ public function taskFilesUpload()\n             $this->admin->json_response = [\n                 'status'  => 'error',\n                 'message' => sprintf($this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_UNABLE_TO_UPLOAD', null),\n-                    $filename, 'Bad filename')\n+                    htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8'), 'Bad filename')\n             ];\n \n             return false;\n@@ -291,7 +291,7 @@ public function taskFilesUpload()\n             $this->admin->json_response = [\n                 'status'  => 'error',\n                 'message' => sprintf($this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_PREVENT_SELF', null),\n-                    $settings->destination)\n+                    htmlspecialchars($settings->destination, ENT_QUOTES | ENT_HTML5, 'UTF-8'))\n             ];\n \n             return false;\n@@ -302,7 +302,8 @@ public function taskFilesUpload()\n             $this->admin->json_response = [\n                 'status'  => 'error',\n                 'message' => sprintf($this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_UNABLE_TO_UPLOAD', null),\n-                    $filename, $this->upload_errors[$upload->file->error])\n+                    htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8'),\n+                    $this->upload_errors[$upload->file->error])\n             ];\n \n             return false;\n@@ -340,15 +341,15 @@ public function taskFilesUpload()\n             if ($isMime) {\n                 $match = preg_match('#' . $find . '$#', $mime);\n                 if (!$match) {\n-                    $errors[] = 'The MIME type \"' . $mime . '\" for the file \"' . $filename . '\" is not an accepted.';\n+                    $errors[] = htmlspecialchars('The MIME type \"' . $mime . '\" for the file \"' . $filename . '\" is not an accepted.', ENT_QUOTES | ENT_HTML5, 'UTF-8');\n                 } else {\n                     $accepted = true;\n                     break;\n                 }\n             } else {\n                 $match = preg_match('#' . $find . '$#', $filename);\n                 if (!$match) {\n-                    $errors[] = 'The File Extension for the file \"' . $filename . '\" is not an accepted.';\n+                    $errors[] = htmlspecialchars('The File Extension for the file \"' . $filename . '\" is not an accepted.', ENT_QUOTES | ENT_HTML5, 'UTF-8');\n                 } else {\n                     $accepted = true;\n                     break;\n@@ -379,8 +380,11 @@ public function taskFilesUpload()\n         if (!move_uploaded_file($tmp_file, $tmp)) {\n             $this->admin->json_response = [\n                 'status'  => 'error',\n-                'message' => sprintf($this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_UNABLE_TO_MOVE', null), '',\n-                    $tmp)\n+                'message' => sprintf(\n+                    $this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_UNABLE_TO_MOVE', null),\n+                    '',\n+                    htmlspecialchars($tmp, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n+                )\n             ];\n \n             return false;"
        },
        {
          "filename": "classes/plugin/AdminController.php",
          "status": "modified",
          "additions": 15,
          "deletions": 15,
          "patch": "@@ -288,7 +288,7 @@ public function taskRegenerate2FASecret()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n             return false;\n         }\n \n@@ -407,7 +407,7 @@ protected function taskGetNotifications()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n         }\n \n         $this->sendJsonResponse($json_response);\n@@ -490,7 +490,7 @@ protected function taskGetNewsFeed()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n         }\n \n         $this->sendJsonResponse($json_response);\n@@ -540,7 +540,7 @@ protected function taskBackup()\n \n             $this->admin->json_response = [\n                 'status' => 'error',\n-                'message' => $this->admin::translate('PLUGIN_ADMIN.AN_ERROR_OCCURRED') . '. ' . $e->getMessage()\n+                'message' => $this->admin::translate('PLUGIN_ADMIN.AN_ERROR_OCCURRED') . '. ' . htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')\n             ];\n \n             return true;\n@@ -917,7 +917,7 @@ protected function taskGetUpdates()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             return false;\n         }\n@@ -961,7 +961,7 @@ protected function taskGetPackagesDependencies()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             return false;\n         }\n@@ -1004,7 +1004,7 @@ protected function taskInstallDependenciesOfPackages()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             return false;\n         }\n@@ -1059,7 +1059,7 @@ protected function taskInstallPackage($reinstall = false)\n             $msg = Utils::contains($msg, '401 Unauthorized') ? \"ERROR: License key for this resource is invalid.\" : $msg;\n             $msg = Utils::contains($msg, '404 Not Found') ? \"ERROR: Resource not found\" : $msg;\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $msg];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($msg, ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             return false;\n         }\n@@ -1133,7 +1133,7 @@ protected function taskRemovePackage(): bool\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             $this->sendJsonResponse($json_response, 200);\n         }\n@@ -2068,7 +2068,7 @@ protected function taskProcessMarkdown()\n             $debugger = $this->grav['debugger'];\n             $debugger->addException($e);\n \n-            $this->admin->json_response = ['status' => 'error', 'message' => $e->getMessage()];\n+            $this->admin->json_response = ['status' => 'error', 'message' => htmlspecialchars($e->getMessage(), ENT_QUOTES | ENT_HTML5, 'UTF-8')];\n \n             return false;\n         }\n@@ -2225,7 +2225,7 @@ protected function taskAddmedia()\n             $this->admin->json_response = [\n                 'status'  => 'error',\n                 'message' => sprintf($this->admin::translate('PLUGIN_ADMIN.FILEUPLOAD_UNABLE_TO_UPLOAD'),\n-                    $filename, 'Bad filename')\n+                    htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8'), 'Bad filename')\n             ];\n \n             return false;\n@@ -2453,7 +2453,7 @@ protected function taskDelmedia()\n             if (!$result) {\n                 $this->admin->json_response = [\n                     'status'  => 'error',\n-                    'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_COULD_NOT_BE_DELETED') . ': ' . $filename\n+                    'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_COULD_NOT_BE_DELETED') . ': ' . htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n                 ];\n \n                 return false;\n@@ -2474,7 +2474,7 @@ protected function taskDelmedia()\n                 if (!$result) {\n                     $this->admin->json_response = [\n                         'status'  => 'error',\n-                        'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_COULD_NOT_BE_DELETED') . ': ' . $filename\n+                        'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_COULD_NOT_BE_DELETED') . ': ' . htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n                     ];\n \n                     return false;\n@@ -2489,7 +2489,7 @@ protected function taskDelmedia()\n         if (!$found) {\n             $this->admin->json_response = [\n                 'status'  => 'error',\n-                'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_NOT_FOUND') . ': ' . $filename\n+                'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_NOT_FOUND') . ': ' . htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n             ];\n \n             return false;\n@@ -2500,7 +2500,7 @@ protected function taskDelmedia()\n \n         $this->admin->json_response = [\n             'status'  => 'success',\n-            'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_DELETED') . ': ' . $filename\n+            'message' => $this->admin::translate('PLUGIN_ADMIN.FILE_DELETED') . ': ' . htmlspecialchars($filename, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n         ];\n \n         return true;"
        },
        {
          "filename": "classes/plugin/Controllers/AbstractController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -292,7 +292,7 @@ public function createErrorResponse(\\Exception $exception): ResponseInterface\n         $response = [\n             'code' => $code,\n             'status' => 'error',\n-            'message' => $message\n+            'message' => htmlspecialchars($message, ENT_QUOTES | ENT_HTML5, 'UTF-8')\n         ];\n \n         $accept = $this->getAccept(['application/json', 'text/html']);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8dc503c8426c5603c775ef405df71f7d9c26c076",
            "date": "2025-01-06T14:22:34Z",
            "author_login": "pips-"
          },
          {
            "sha": "d4d02029d07d76e2115b09e43b19accff223d3b9",
            "date": "2024-12-10T00:12:10Z",
            "author_login": "rhukster"
          },
          {
            "sha": "12bdb5af4bd10e30e24d191b7ea1a78602a583fb",
            "date": "2024-10-31T01:32:09Z",
            "author_login": "rhukster"
          },
          {
            "sha": "746683e3640fef4fab9ae16d646c919afae6b73c",
            "date": "2024-10-28T11:28:12Z",
            "author_login": "rhukster"
          },
          {
            "sha": "6726d1379cecb25a7b767637a634e1796b5d6e58",
            "date": "2024-10-28T11:28:12Z",
            "author_login": "rhukster"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "grav-plugin-admin is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-11-19T13:15:09.830",
    "last_modified": "2024-11-21T06:22:46.680",
    "fix_date": "2021-11-03T10:42:27Z"
  },
  "references": [
    {
      "url": "https://github.com/getgrav/grav-plugin-admin/commit/6463135bf046d8131189c163158cd5db8f7a9675",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/ab564760-90c6-4e1d-80c2-852f45034cd1",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav-plugin-admin/commit/6463135bf046d8131189c163158cd5db8f7a9675",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/ab564760-90c6-4e1d-80c2-852f45034cd1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.797479",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "grav-plugin-admin",
    "owner": "getgrav",
    "created_at": "2015-08-04T19:01:06Z",
    "updated_at": "2025-01-08T18:16:49Z",
    "pushed_at": "2025-01-06T14:22:35Z",
    "size": 49693,
    "stars": 356,
    "forks": 231,
    "open_issues": 422,
    "watchers": 356,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "PHP": 348738,
      "SCSS": 348172,
      "JavaScript": 343495,
      "Twig": 260357,
      "CSS": 39102,
      "Shell": 491
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:12:23.247930"
  }
}