{
  "cve_id": "CVE-2021-3979",
  "github_data": {
    "repository": "ceph/ceph",
    "fix_commit": "47c33179f9a15ae95cc1579a421be89378602656",
    "related_commits": [
      "47c33179f9a15ae95cc1579a421be89378602656",
      "47c33179f9a15ae95cc1579a421be89378602656"
    ],
    "patch_url": "https://github.com/ceph/ceph/commit/47c33179f9a15ae95cc1579a421be89378602656.patch",
    "fix_commit_details": {
      "sha": "47c33179f9a15ae95cc1579a421be89378602656",
      "commit_date": "2022-01-25T09:25:53Z",
      "author": {
        "login": "guits",
        "type": "User",
        "stats": {
          "total_commits": 458,
          "average_weekly_commits": 0.5134529147982063,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 151
        }
      },
      "commit_message": {
        "title": "ceph-volume: honour osd_dmcrypt_key_size option",
        "length": 543,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 75,
        "additions": 51,
        "deletions": 24
      },
      "files": [
        {
          "filename": "src/ceph-volume/ceph_volume/tests/util/test_encryption.py",
          "status": "modified",
          "additions": 28,
          "deletions": 13,
          "patch": "@@ -1,5 +1,31 @@\n from ceph_volume.util import encryption\n+import base64\n \n+class TestGetKeySize(object):\n+    def test_get_size_from_conf_default(self, conf_ceph_stub):\n+        conf_ceph_stub('''\n+        [global]\n+        fsid=asdf\n+        ''')\n+        assert encryption.get_key_size_from_conf() == '512'\n+\n+    def test_get_size_from_conf_custom(self, conf_ceph_stub):\n+        conf_ceph_stub('''\n+        [global]\n+        fsid=asdf\n+        [osd]\n+        osd_dmcrypt_key_size=256\n+        ''')\n+        assert encryption.get_key_size_from_conf() == '256'\n+\n+    def test_get_size_from_conf_custom_invalid(self, conf_ceph_stub):\n+        conf_ceph_stub('''\n+        [global]\n+        fsid=asdf\n+        [osd]\n+        osd_dmcrypt_key_size=1024\n+        ''')\n+        assert encryption.get_key_size_from_conf() == '512'\n \n class TestStatus(object):\n \n@@ -37,17 +63,6 @@ def test_mapper_does_not_exist(self, fake_run):\n \n class TestDmcryptKey(object):\n \n-    def test_dmcrypt_with_default_size(self, conf_ceph_stub):\n-        conf_ceph_stub('[global]\\nfsid=asdf-lkjh')\n-        result = encryption.create_dmcrypt_key()\n-        assert len(result) == 172\n-\n-    def test_dmcrypt_with_custom_size(self, conf_ceph_stub):\n-        conf_ceph_stub('''\n-        [global]\n-        fsid=asdf\n-        [osd]\n-        osd_dmcrypt_size=8\n-        ''')\n+    def test_dmcrypt(self):\n         result = encryption.create_dmcrypt_key()\n-        assert len(result) == 172\n+        assert len(base64.b64decode(result)) == 128"
        },
        {
          "filename": "src/ceph-volume/ceph_volume/util/encryption.py",
          "status": "modified",
          "additions": 23,
          "deletions": 11,
          "patch": "@@ -9,21 +9,29 @@\n \n logger = logging.getLogger(__name__)\n \n-\n-def create_dmcrypt_key():\n+def get_key_size_from_conf():\n     \"\"\"\n-    Create the secret dm-crypt key used to decrypt a device.\n+    Return the osd dmcrypt key size from config file.\n+    Default is 512.\n     \"\"\"\n-    # get the customizable dmcrypt key size (in bits) from ceph.conf fallback\n-    # to the default of 1024\n-    dmcrypt_key_size = conf.ceph.get_safe(\n+    default_key_size = '512'\n+    key_size = conf.ceph.get_safe(\n         'osd',\n         'osd_dmcrypt_key_size',\n-        default=1024,\n-    )\n-    # The size of the key is defined in bits, so we must transform that\n-    # value to bytes (dividing by 8) because we read in bytes, not bits\n-    random_string = os.urandom(int(dmcrypt_key_size / 8))\n+        default='512')\n+\n+    if key_size not in ['256', '512']:\n+        logger.warning((\"Invalid value set for osd_dmcrypt_key_size ({}). \"\n+                        \"Falling back to {}bits\".format(key_size, default_key_size)))\n+        return default_key_size\n+\n+    return key_size\n+\n+def create_dmcrypt_key():\n+    \"\"\"\n+    Create the secret dm-crypt key (KEK) used to encrypt/decrypt the Volume Key.\n+    \"\"\"\n+    random_string = os.urandom(128)\n     key = base64.b64encode(random_string).decode('utf-8')\n     return key\n \n@@ -38,6 +46,8 @@ def luks_format(key, device):\n     command = [\n         'cryptsetup',\n         '--batch-mode', # do not prompt\n+        '--key-size',\n+        get_key_size_from_conf(),\n         '--key-file', # misnomer, should be key\n         '-',          # because we indicate stdin for the key here\n         'luksFormat',\n@@ -83,6 +93,8 @@ def luks_open(key, device, mapping):\n     \"\"\"\n     command = [\n         'cryptsetup',\n+        '--key-size',\n+        get_key_size_from_conf(),\n         '--key-file',\n         '-',\n         '--allow-discards',  # allow discards (aka TRIM) requests for device"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3f1f3450aee368823dc8ae90a8cef13b89b1b950",
            "date": "2025-01-14T17:28:22Z",
            "author_login": "adk3798"
          },
          {
            "sha": "565295d9afafe862c190316282bd3e9e2ae6a86f",
            "date": "2025-01-14T16:42:02Z",
            "author_login": "cbodley"
          },
          {
            "sha": "3fa2f0e9616b24dc8b5c61aaefdb99cded10fb56",
            "date": "2025-01-14T13:14:52Z",
            "author_login": "JonBailey1993"
          },
          {
            "sha": "a0f2a3b82fbcfe1f2593eeee35d93cfe0effa2f0",
            "date": "2025-01-14T09:24:50Z",
            "author_login": "zdover23"
          },
          {
            "sha": "f8ba6c61c2ede07dba2df62fc4801aa2101f378a",
            "date": "2025-01-14T08:25:26Z",
            "author_login": "aclamk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-327",
    "description": "A key length flaw was found in Red Hat Ceph Storage. An attacker can exploit the fact that the key length is incorrectly passed in an encryption algorithm to create a non random key, which is weaker and can be exploited for loss of confidentiality and integrity on encrypted disks.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-25T20:15:09.473",
    "last_modified": "2024-11-21T06:23:17.720",
    "fix_date": "2022-01-25T09:25:53Z"
  },
  "references": [
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3979",
      "source": "secalert@redhat.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2024788",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ceph/ceph/commit/47c33179f9a15ae95cc1579a421be89378602656",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ceph/ceph/pull/44765",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00034.html",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BPOK44BESMIFW6BIOGCN452AKKOIIT6Q/",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://tracker.ceph.com/issues/54006",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3979",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2024788",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ceph/ceph/commit/47c33179f9a15ae95cc1579a421be89378602656",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ceph/ceph/pull/44765",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00034.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BPOK44BESMIFW6BIOGCN452AKKOIIT6Q/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://tracker.ceph.com/issues/54006",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.018158",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ceph",
    "owner": "ceph",
    "created_at": "2011-09-01T21:41:26Z",
    "updated_at": "2025-01-14T13:14:58Z",
    "pushed_at": "2025-01-14T13:14:52Z",
    "size": 812257,
    "stars": 14427,
    "forks": 6048,
    "open_issues": 848,
    "watchers": 14427,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "argonaut",
      "bobtail",
      "cuttlefish"
    ],
    "languages": {
      "C++": 50285765,
      "Python": 12334734,
      "Raku": 3800803,
      "C": 3470858,
      "TypeScript": 3405230,
      "Shell": 2345539,
      "HTML": 881613,
      "CMake": 874020,
      "Terra": 773718,
      "Cython": 630103,
      "Jsonnet": 382417,
      "JavaScript": 141459,
      "Java": 109488,
      "Gherkin": 97105,
      "Perl": 68932,
      "Assembly": 53250,
      "SCSS": 50600,
      "Jinja": 37039,
      "Roff": 26436,
      "PowerShell": 10012,
      "Dockerfile": 9328,
      "Makefile": 4786,
      "Awk": 3196,
      "CSS": 2086,
      "DIGITAL Command Language": 2074,
      "Lua": 1304,
      "SWIG": 951,
      "Turing": 941,
      "Smarty": 173
    },
    "commit_activity": {
      "total_commits_last_year": 6520,
      "avg_commits_per_week": 125.38461538461539,
      "days_active_last_year": 355
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:03:33.965039"
  }
}