{
  "cve_id": "CVE-2021-3980",
  "github_data": {
    "repository": "elgg/elgg",
    "fix_commit": "572d210e2392f1fdf47ff2f38665372a6535c126",
    "related_commits": [
      "572d210e2392f1fdf47ff2f38665372a6535c126",
      "572d210e2392f1fdf47ff2f38665372a6535c126"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "572d210e2392f1fdf47ff2f38665372a6535c126",
      "commit_date": "2021-11-22T11:38:25Z",
      "author": {
        "login": "jeabakker",
        "type": "User",
        "stats": {
          "total_commits": 2750,
          "average_weekly_commits": 3.3783783783783785,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 362
        }
      },
      "commit_message": {
        "title": "fix(ajax): forms in the admin namespace are protected",
        "length": 243,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 206,
        "additions": 205,
        "deletions": 1
      },
      "files": [
        {
          "filename": "engine/lib/elgglib.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1105,6 +1105,10 @@ function _elgg_ajax_page_handler($segments) {\n \t\t\t// ignore 'view/'\n \t\t\t$view = implode('/', array_slice($segments, 1));\n \t\t} else {\n+\t\t\tif ($segments[1] === 'admin') {\n+\t\t\t\t// protect admin forms similar to all admin pages that are protected automatically in the admin_page_handler\n+\t\t\t\telgg_admin_gatekeeper();\n+\t\t\t}\n \t\t\t// form views start with \"forms\", not \"form\"\n \t\t\t$view = 'forms/' . implode('/', array_slice($segments, 1));\n \t\t}"
        },
        {
          "filename": "engine/tests/phpunit/integration/Elgg/Ajax/ControllerIntegrationTest.php",
          "status": "added",
          "additions": 164,
          "deletions": 0,
          "patch": "@@ -0,0 +1,164 @@\n+<?php\n+\n+namespace Elgg\\Ajax;\n+\n+use Elgg\\IntegrationTestCase;\n+\n+class ControllerIntegrationTest extends IntegrationTestCase {\n+\n+\t/**\n+\t * @var \\ElggUser\n+\t */\n+\tprotected $user;\n+\t\n+\tpublic function up() {\n+\t\t$this->registerViews();\n+\t}\n+\n+\tpublic function down() {\n+\t\telgg_get_session()->removeLoggedInUser();\n+\t\t\n+\t\tif (isset($this->user)) {\n+\t\t\telgg_call(ELGG_IGNORE_ACCESS, function() {\n+\t\t\t\t$this->user->delete();\n+\t\t\t});\n+\t\t}\n+\t}\n+\t\n+\tprotected function prepareService(\\Elgg\\Http\\Request $request) {\n+\t\t$this->createApplication([\n+\t\t\t'isolate' => true,\n+\t\t\t'request' => $request,\n+\t\t]);\n+\t\t\n+\t\t$this->registerViews();\n+\t}\n+\t\n+\tprotected function executeRequest(\\Elgg\\Http\\Request $request, bool $prepare = true) {\n+\t\tif ($prepare) {\n+\t\t\t$this->prepareService($request);\n+\t\t}\n+\t\t\n+\t\treturn _elgg_services()->router->getResponse($request);\n+\t}\n+\t\n+\tprotected function registerViews() {\n+\t\t$views_dir = $this->normalizeTestFilePath('views');\n+\t\t_elgg_services()->views->autoregisterViews('', \"{$views_dir}/default\", 'default');\n+\t\t\n+\t\telgg_register_ajax_view('ajax_test/registered');\n+\t\telgg_register_ajax_view('admin/ajax_test/registered');\n+\t\telgg_register_ajax_view('forms/ajax_test/registered');\n+\t\telgg_register_ajax_view('forms/admin/ajax_test/registered');\n+\t}\n+\t\n+\tpublic function testCanLoadRegisteredAjaxView() {\n+\t\t$request = $this->prepareHttpRequest('ajax/view/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$response = $this->executeRequest($request);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\OkResponse::class, $response);\n+\t\t$this->assertEquals('registered', $response->getContent());\n+\t}\n+\t\n+\tpublic function testCantLoadRegisteredAjaxViewWithNonAjaxRequest() {\n+\t\t$request = $this->prepareHttpRequest('ajax/view/ajax_test/registered');\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\AjaxGatekeeperException::class);\n+\t\t$this->executeRequest($request);\n+\t}\n+\t\n+\tpublic function testCantLoadNonRegisteredAjaxView() {\n+\t\t$this->assertTrue(elgg_view_exists('ajax_test/not_registered'));\n+\t\t$request = $this->prepareHttpRequest('ajax/view/ajax_test/not_registered', 'GET', [], 1);\n+\t\t\n+\t\t$response = $this->executeRequest($request);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\ErrorResponse::class, $response);\n+\t}\n+\t\n+\tpublic function testCantAccessAdminAjaxViewLoggedOut() {\n+\t\t$request = $this->prepareHttpRequest('ajax/view/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\LoggedInGatekeeperException::class);\n+\t\t$this->executeRequest($request);\n+\t}\n+\t\n+\tpublic function testCantAccessAdminAjaxViewAsNonAdmin() {\n+\t\t$request = $this->prepareHttpRequest('ajax/view/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->prepareService($request);\n+\t\t\n+\t\t$this->user = $user = $this->createUser();\n+\t\telgg_get_session()->setLoggedInUser($user);\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\AdminGatekeeperException::class);\n+\t\t$this->executeRequest($request, false);\n+\t}\n+\t\n+\tpublic function testCanAccessAdminAjaxViewAsAdmin() {\n+\t\t$request = $this->prepareHttpRequest('ajax/view/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->prepareService($request);\n+\t\t\n+\t\t$user = $this->getAdmin();\n+\t\telgg_get_session()->setLoggedInUser($user);\n+\t\t\n+\t\t$response = $this->executeRequest($request, false);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\OkResponse::class, $response);\n+\t\t$this->assertEquals('registered', $response->getContent());\n+\t}\n+\t\n+\tpublic function testCanLoadRegisteredAjaxForm() {\n+\t\t$request = $this->prepareHttpRequest('ajax/form/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$response = $this->executeRequest($request);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\OkResponse::class, $response);\n+\t\t$this->assertStringContainsString('registered', $response->getContent());\n+\t}\n+\t\n+\tpublic function testCantLoadRegisteredAjaxFormWithNonAjaxRequest() {\n+\t\t$request = $this->prepareHttpRequest('ajax/form/ajax_test/registered');\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\AjaxGatekeeperException::class);\n+\t\t$this->executeRequest($request);\n+\t}\n+\t\n+\tpublic function testCantLoadNonRegisteredAjaxForm() {\n+\t\t$this->assertTrue(elgg_view_exists('ajax_test/not_registered'));\n+\t\t$request = $this->prepareHttpRequest('ajax/form/ajax_test/not_registered', 'GET', [], 1);\n+\t\t\n+\t\t$response = $this->executeRequest($request);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\ErrorResponse::class, $response);\n+\t}\n+\t\n+\tpublic function testCantAccessAdminAjaxFormLoggedOut() {\n+\t\t$request = $this->prepareHttpRequest('ajax/form/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\LoggedInGatekeeperException::class);\n+\t\t$this->executeRequest($request);\n+\t}\n+\t\n+\tpublic function testCantAccessAdminAjaxFormAsNonAdmin() {\n+\t\t$request = $this->prepareHttpRequest('ajax/form/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->prepareService($request);\n+\t\t\n+\t\t$this->user = $user = $this->createUser();\n+\t\telgg_get_session()->setLoggedInUser($user);\n+\t\t\n+\t\t$this->expectException(\\Elgg\\Http\\Exception\\AdminGatekeeperException::class);\n+\t\t$this->executeRequest($request, false);\n+\t}\n+\t\n+\tpublic function testCanAccessAdminAjaxFormAsAdmin() {\n+\t\t$request = $this->prepareHttpRequest('ajax/form/admin/ajax_test/registered', 'GET', [], 1);\n+\t\t\n+\t\t$this->prepareService($request);\n+\t\t\n+\t\t$user = $this->getAdmin();\n+\t\telgg_get_session()->setLoggedInUser($user);\n+\t\t\n+\t\t$response = $this->executeRequest($request, false);\n+\t\t$this->assertInstanceOf(\\Elgg\\Http\\OkResponse::class, $response);\n+\t\t$this->assertStringContainsString('registered', $response->getContent());\n+\t}\n+}"
        },
        {
          "filename": "engine/tests/test_files/views/default/admin/ajax_test/registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Registered ajax view\n+ */\n+\n+echo 'registered';"
        },
        {
          "filename": "engine/tests/test_files/views/default/ajax_test/not_registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Non registered ajax view\n+ */\n+\n+echo 'not registered';"
        },
        {
          "filename": "engine/tests/test_files/views/default/ajax_test/registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Registered ajax view\n+ */\n+\n+echo 'registered';"
        },
        {
          "filename": "engine/tests/test_files/views/default/forms/admin/ajax_test/registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Registered ajax view\n+ */\n+\n+echo 'registered';"
        },
        {
          "filename": "engine/tests/test_files/views/default/forms/ajax_test/not_registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Non registered ajax view\n+ */\n+\n+echo 'not registered';"
        },
        {
          "filename": "engine/tests/test_files/views/default/forms/ajax_test/registered.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+/**\n+ * Registered ajax view\n+ */\n+\n+echo 'registered';"
        },
        {
          "filename": "views/default/forms/admin/user/change_email.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -10,7 +10,7 @@\n \treturn get_user($guid);\n });\n \n-if (!$user instanceof ElggUser) {\n+if (!$user instanceof ElggUser || !$user->canEdit()) {\n \treturn;\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 7,
        "unique_directories": 7,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2137ec9dca0f354f2b1943c508a846d442ff4385",
            "date": "2025-01-24T12:51:00Z",
            "author_login": "jdalsem"
          },
          {
            "sha": "501dc5ec2c5f2f3be14afe4daf2ab848eecab6b2",
            "date": "2025-01-24T08:48:43Z",
            "author_login": "jdalsem"
          },
          {
            "sha": "c3deac4c8a215e01684ea431b3e7487fc6b9e8c8",
            "date": "2025-01-17T10:33:44Z",
            "author_login": "jdalsem"
          },
          {
            "sha": "7ea56c6dfebd0937c854a92fc12f37b9b19c6c4c",
            "date": "2025-01-15T12:47:36Z",
            "author_login": "jeabakker"
          },
          {
            "sha": "7d499e7e9f9b6b63d76af05386f8b22c0218db19",
            "date": "2025-01-10T13:04:01Z",
            "author_login": "callpri"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-359",
    "description": "elgg is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-03T15:15:08.353",
    "last_modified": "2024-11-21T06:23:17.890",
    "fix_date": "2021-11-22T11:38:25Z"
  },
  "references": [
    {
      "url": "https://github.com/elgg/elgg/commit/572d210e2392f1fdf47ff2f38665372a6535c126",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1f43f11e-4bd8-451f-a244-dc9541cdc0ac",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/elgg/elgg/commit/572d210e2392f1fdf47ff2f38665372a6535c126",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1f43f11e-4bd8-451f-a244-dc9541cdc0ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.817780",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "Elgg",
    "owner": "elgg",
    "created_at": "2009-09-06T17:10:11Z",
    "updated_at": "2025-01-24T12:51:10Z",
    "pushed_at": "2025-01-24T12:51:00Z",
    "size": 112180,
    "stars": 1646,
    "forks": 665,
    "open_issues": 61,
    "watchers": 1646,
    "has_security_policy": false,
    "default_branch": "6.x",
    "protected_branches": [
      "1.9",
      "1.10",
      "1.11",
      "1.12",
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "5.0",
      "5.1",
      "6.x",
      "6.0",
      "6.1",
      "historical",
      "master"
    ],
    "languages": {
      "PHP": 7490904,
      "JavaScript": 126858,
      "CSS": 90887,
      "HTML": 29948,
      "Hack": 2033
    },
    "commit_activity": {
      "total_commits_last_year": 439,
      "avg_commits_per_week": 8.442307692307692,
      "days_active_last_year": 99
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:26:48.839133"
  }
}