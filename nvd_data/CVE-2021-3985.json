{
  "cve_id": "CVE-2021-3985",
  "github_data": {
    "repository": "kevinpapst/kimai2",
    "fix_commit": "76e09447c85e762882126b49626a4fe4d93fe8b5",
    "related_commits": [
      "76e09447c85e762882126b49626a4fe4d93fe8b5",
      "76e09447c85e762882126b49626a4fe4d93fe8b5"
    ],
    "patch_url": "https://github.com/kevinpapst/kimai2/commit/76e09447c85e762882126b49626a4fe4d93fe8b5.patch",
    "fix_commit_details": {
      "sha": "76e09447c85e762882126b49626a4fe4d93fe8b5",
      "commit_date": "2021-11-19T22:07:27Z",
      "author": {
        "login": "kevinpapst",
        "type": "User",
        "stats": {
          "total_commits": 1287,
          "average_weekly_commits": 2.9860788863109047,
          "total_additions": 818800,
          "total_deletions": 560647,
          "weeks_active": 289
        }
      },
      "commit_message": {
        "title": "make sure that markdown uses safe mode (#2961)",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 43,
        "additions": 39,
        "deletions": 4
      },
      "files": [
        {
          "filename": "src/Twig/Runtime/MarkdownExtension.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -61,7 +61,7 @@ public function commentContent(?string $content, bool $fullLength = false): stri\n         }\n \n         if ($this->isMarkdownEnabled()) {\n-            $content = $this->markdown->toHtml($content, false);\n+            $content = $this->markdown->toHtml($content);\n         } elseif ($fullLength) {\n             $content = '<p>' . nl2br($content) . '</p>';\n         }\n@@ -112,7 +112,7 @@ public function timesheetContent(?string $content): string\n         }\n \n         if ($this->isMarkdownEnabled()) {\n-            return $this->markdown->toHtml($content, false);\n+            return $this->markdown->toHtml($content);\n         }\n \n         return nl2br($content);\n@@ -126,6 +126,6 @@ public function timesheetContent(?string $content): string\n      */\n     public function markdownToHtml(string $content): string\n     {\n-        return $this->markdown->toHtml($content, false);\n+        return $this->markdown->toHtml($content);\n     }\n }"
        },
        {
          "filename": "src/Utils/Markdown.php",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -33,7 +33,12 @@ public function __construct()\n      */\n     public function toHtml(string $text, bool $safe = true): string\n     {\n-        $this->parser->setSafeMode($safe);\n+        if ($safe !== true) {\n+            @trigger_error('Only safe mode is supported in Markdown since 1.16.3 to prevent XSS attacks. Parameter $safe will be removed with 2.0', E_USER_DEPRECATED);\n+        }\n+\n+        $this->parser->setSafeMode(true);\n+        $this->parser->setMarkupEscaped(true);\n \n         return $this->parser->text($text);\n     }"
        },
        {
          "filename": "tests/Twig/Runtime/MarkdownExtensionTest.php",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -27,6 +27,10 @@ public function testMarkdownToHtml()\n         $sut = new MarkdownExtension(new Markdown(), $config);\n         $this->assertEquals('<p><em>test</em></p>', $sut->markdownToHtml('*test*'));\n         $this->assertEquals('<p># foobar</p>', $sut->markdownToHtml('# foobar'));\n+        $this->assertEquals(\n+            '<p><a href=\"javascript%3Aalert(`XSS`)\">XSS</a></p>',\n+            $sut->markdownToHtml('[XSS](javascript:alert(`XSS`))')\n+        );\n     }\n \n     public function testTimesheetContent()\n@@ -47,6 +51,10 @@ public function testTimesheetContent()\n             \"<ul>\\n<li>test</li>\\n<li>foo</li>\\n</ul>\\n<p>foo <strong>bar</strong></p>\",\n             $sut->timesheetContent(\"- test\\n- foo\\n\\nfoo __bar__\")\n         );\n+        $this->assertEquals(\n+            '<p><a href=\"javascript%3Aalert(`XSS`)\">XSS</a></p>',\n+            $sut->timesheetContent('[XSS](javascript:alert(`XSS`))')\n+        );\n     }\n \n     public function testCommentContent()\n@@ -76,6 +84,10 @@ public function testCommentContent()\n             \"<ul>\\n<li>test</li>\\n<li>foo</li>\\n</ul>\\n<p>foo <strong>bar</strong></p>\",\n             $sut->commentContent(\"- test\\n- foo\\n\\nfoo __bar__\")\n         );\n+        $this->assertEquals(\n+            '<p><a href=\"javascript%3Aalert(`XSS`)\">XSS</a></p>',\n+            $sut->commentContent('[XSS](javascript:alert(`XSS`))')\n+        );\n     }\n \n     public function testCommentOneLiner()"
        },
        {
          "filename": "tests/Utils/MarkdownTest.php",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -81,6 +81,24 @@ public function testDuplicateIds()\n ## test\n ### test\n # test\n+EOT;\n+        $this->assertEquals($html, $sut->toHtml($markdown));\n+    }\n+\n+    public function testLinksAreSanitized()\n+    {\n+        $sut = new Markdown();\n+\n+        $html = <<<'EOT'\n+<p><a href=\"javascript%3Aalert(`XSS`)\">XSS</a><br />\n+<a href=\"javascript%3Aalert(&quot;XSS&quot;)\">XSS</a><br />\n+<a href=\"javascript%3Aalert(&#039;XSS&#039;)\">XSS</a></p>\n+EOT;\n+\n+        $markdown = <<<EOT\n+[XSS](javascript:alert(`XSS`))\n+[XSS](javascript:alert(\"XSS\"))\n+[XSS](javascript:alert('XSS'))\n EOT;\n         $this->assertEquals($html, $sut->toHtml($markdown));\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c07979e3a937d8b9b7a6243cc7c0c2b5d3a2fa47",
            "date": "2025-01-10T09:02:14Z",
            "author_login": "kernie"
          },
          {
            "sha": "23e8dcf49540c63cfb8284d641a7e403bc4aafb9",
            "date": "2025-01-09T11:16:45Z",
            "author_login": "weblate"
          },
          {
            "sha": "4332ef95a2074a4adcc42465c46328f240d66a66",
            "date": "2024-12-22T21:50:42Z",
            "author_login": "kevinpapst"
          },
          {
            "sha": "4fdfb6f4787b62220824a58b9f94e62baf95af0f",
            "date": "2024-12-22T18:15:32Z",
            "author_login": "weblate"
          },
          {
            "sha": "136104d4b0c75102f3843725ce2a9bdb902dccd9",
            "date": "2024-12-22T17:36:47Z",
            "author_login": "kevinpapst"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "kimai2 is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-01T11:15:07.867",
    "last_modified": "2024-11-21T06:23:18.640",
    "fix_date": "2021-11-19T22:07:27Z"
  },
  "references": [
    {
      "url": "https://github.com/kevinpapst/kimai2/commit/76e09447c85e762882126b49626a4fe4d93fe8b5",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/89d6c3de-efbd-4354-8cc8-46e999e4c5a4",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kevinpapst/kimai2/commit/76e09447c85e762882126b49626a4fe4d93fe8b5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/89d6c3de-efbd-4354-8cc8-46e999e4c5a4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.810494",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "kimai",
    "owner": "kevinpapst",
    "created_at": "2016-10-20T17:06:34Z",
    "updated_at": "2025-01-14T08:20:46Z",
    "pushed_at": "2025-01-10T09:02:15Z",
    "size": 50694,
    "stars": 3449,
    "forks": 598,
    "open_issues": 272,
    "watchers": 3449,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 4845183,
      "Twig": 576073,
      "JavaScript": 197888,
      "SCSS": 30758,
      "CSS": 29133,
      "Dockerfile": 12004,
      "Shell": 9034
    },
    "commit_activity": {
      "total_commits_last_year": 141,
      "avg_commits_per_week": 2.7115384615384617,
      "days_active_last_year": 67
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:04:59.247091"
  }
}