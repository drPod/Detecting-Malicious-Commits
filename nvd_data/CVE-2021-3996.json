{
  "cve_id": "CVE-2021-3996",
  "github_data": {
    "repository": "util-linux/util-linux",
    "fix_commit": "166e87368ae88bf31112a30e078cceae637f4cdb",
    "related_commits": [
      "166e87368ae88bf31112a30e078cceae637f4cdb",
      "166e87368ae88bf31112a30e078cceae637f4cdb"
    ],
    "patch_url": "https://github.com/util-linux/util-linux/commit/166e87368ae88bf31112a30e078cceae637f4cdb.patch",
    "fix_commit_details": {
      "sha": "166e87368ae88bf31112a30e078cceae637f4cdb",
      "commit_date": "2022-01-04T09:37:55Z",
      "author": {
        "login": "karelzak",
        "type": "User",
        "stats": {
          "total_commits": 11243,
          "average_weekly_commits": 6.684304399524375,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 884
        }
      },
      "commit_message": {
        "title": "libmount: remove support for deleted mount table entries",
        "length": 366,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 1,
        "deletions": 40
      },
      "files": [
        {
          "filename": "libmount/docs/libmount-sections.txt",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -246,7 +246,6 @@ mnt_fs_get_userdata\n mnt_fs_get_user_options\n mnt_fs_get_vfs_options\n mnt_fs_get_vfs_options_all\n-mnt_fs_is_deleted\n mnt_fs_is_kernel\n mnt_fs_is_netfs\n mnt_fs_is_pseudofs"
        },
        {
          "filename": "libmount/src/fs.c",
          "status": "modified",
          "additions": 0,
          "deletions": 11,
          "patch": "@@ -651,17 +651,6 @@ int mnt_fs_is_regularfs(struct libmnt_fs *fs)\n \t\t || mnt_fs_is_swaparea(fs));\n }\n \n-/**\n- * mnt_fs_is_deleted:\n- * @fs: filesystem\n- *\n- * Returns: 1 if the filesystem target is a marked as deleted by kernel\n- */\n-int mnt_fs_is_deleted(struct libmnt_fs *fs)\n-{\n-\treturn mnt_fs_get_flags(fs) & MNT_FS_DELETED;\n-}\n-\n /**\n  * mnt_fs_get_fstype:\n  * @fs: fstab/mtab/mountinfo entry pointer"
        },
        {
          "filename": "libmount/src/libmount.h.in",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -512,7 +512,6 @@ extern int mnt_fs_match_options(struct libmnt_fs *fs, const char *options);\n extern int mnt_fs_print_debug(struct libmnt_fs *fs, FILE *file);\n \n extern int mnt_fs_is_kernel(struct libmnt_fs *fs);\n-extern int mnt_fs_is_deleted(struct libmnt_fs *fs);\n extern int mnt_fs_is_swaparea(struct libmnt_fs *fs);\n extern int mnt_fs_is_netfs(struct libmnt_fs *fs);\n extern int mnt_fs_is_pseudofs(struct libmnt_fs *fs);"
        },
        {
          "filename": "libmount/src/libmount.sym",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -365,5 +365,4 @@ MOUNT_2_37 {\n \n MOUNT_2_38 {\n \tmnt_fs_is_regularfs;\n-\tmnt_fs_is_deleted;\n } MOUNT_2_37;"
        },
        {
          "filename": "libmount/src/mountP.h",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -228,7 +228,6 @@ struct libmnt_fs {\n #define MNT_FS_SWAP\t(1 << 3) /* swap device */\n #define MNT_FS_KERNEL\t(1 << 4) /* data from /proc/{mounts,self/mountinfo} */\n #define MNT_FS_MERGED\t(1 << 5) /* already merged data from /run/mount/utab */\n-#define MNT_FS_DELETED\t(1 << 6) /* target path in mountinfo contains \"(deleted)\" */\n \n /*\n  * mtab/fstab/mountinfo file"
        },
        {
          "filename": "libmount/src/tab_parse.c",
          "status": "modified",
          "additions": 0,
          "deletions": 7,
          "patch": "@@ -227,13 +227,6 @@ static int mnt_parse_mountinfo_line(struct libmnt_fs *fs, const char *s)\n \t\tgoto fail;\n \t}\n \n-\t/* remove \"\\040(deleted)\" suffix */\n-\tp = (char *) endswith(fs->target, PATH_DELETED_SUFFIX);\n-\tif (p && *p) {\n-\t\t*p = '\\0';\n-\t\tfs->flags |= MNT_FS_DELETED;\n-\t}\n-\n \ts = skip_separator(s);\n \n \t/* (6) vfs options (fs-independent) */"
        },
        {
          "filename": "misc-utils/findmnt.c",
          "status": "modified",
          "additions": 1,
          "deletions": 18,
          "patch": "@@ -55,7 +55,6 @@\n enum {\n \tCOL_ACTION,\n \tCOL_AVAIL,\n-\tCOL_DELETED,\n \tCOL_FREQ,\n \tCOL_FSROOT,\n \tCOL_FSTYPE,\n@@ -103,7 +102,6 @@ struct colinfo {\n static struct colinfo infos[] = {\n \t[COL_ACTION]       = { \"ACTION\",         10, SCOLS_FL_STRICTWIDTH, N_(\"action detected by --poll\") },\n \t[COL_AVAIL]        = { \"AVAIL\",           5, SCOLS_FL_RIGHT, N_(\"filesystem size available\") },\n-\t[COL_DELETED]      = { \"DELETED\",         1, SCOLS_FL_RIGHT, N_(\"filesystem target marked as deleted\") },\n \t[COL_FREQ]         = { \"FREQ\",            1, SCOLS_FL_RIGHT, N_(\"dump(8) period in days [fstab only]\") },\n \t[COL_FSROOT]       = { \"FSROOT\",       0.25, SCOLS_FL_NOEXTREMES, N_(\"filesystem root\") },\n \t[COL_FSTYPE]       = { \"FSTYPE\",       0.10, SCOLS_FL_TRUNC, N_(\"filesystem type\") },\n@@ -677,9 +675,6 @@ static char *get_data(struct libmnt_fs *fs, int num)\n \t\tif (!mnt_fs_is_kernel(fs))\n \t\t\txasprintf(&str, \"%d\", mnt_fs_get_passno(fs));\n \t\tbreak;\n-\tcase COL_DELETED:\n-\t\tstr = xstrdup(mnt_fs_is_deleted(fs) ? \"1\" : \"0\");\n-\t\tbreak;\n \tdefault:\n \t\tbreak;\n \t}\n@@ -1033,9 +1028,6 @@ static int match_func(struct libmnt_fs *fs,\n \t\t\treturn rc;\n \t}\n \n-\tif ((flags & FL_DELETED) && !mnt_fs_is_deleted(fs))\n-\t\treturn rc;\n-\n \treturn !rc;\n }\n \n@@ -1304,7 +1296,6 @@ static void __attribute__((__noreturn__)) usage(void)\n \tfputs(_(\" -b, --bytes            print sizes in bytes rather than in human readable format\\n\"), out);\n \tfputs(_(\" -C, --nocanonicalize   don't canonicalize when comparing paths\\n\"), out);\n \tfputs(_(\" -c, --canonicalize     canonicalize printed paths\\n\"), out);\n-\tfputs(_(\"     --deleted          print filesystems with mountpoint marked as deleted\\n\"), out);\n \tfputs(_(\" -D, --df               imitate the output of df(1)\\n\"), out);\n \tfputs(_(\" -d, --direction <word> direction of search, 'forward' or 'backward'\\n\"), out);\n \tfputs(_(\" -e, --evaluate         convert tags (LABEL,UUID,PARTUUID,PARTLABEL) \\n\"\n@@ -1373,16 +1364,14 @@ int main(int argc, char *argv[])\n \t\tFINDMNT_OPT_PSEUDO,\n \t\tFINDMNT_OPT_REAL,\n \t\tFINDMNT_OPT_VFS_ALL,\n-\t\tFINDMNT_OPT_SHADOWED,\n-\t\tFINDMNT_OPT_DELETED,\n+\t\tFINDMNT_OPT_SHADOWED\n \t};\n \n \tstatic const struct option longopts[] = {\n \t\t{ \"all\",\t    no_argument,       NULL, 'A'\t\t },\n \t\t{ \"ascii\",\t    no_argument,       NULL, 'a'\t\t },\n \t\t{ \"bytes\",\t    no_argument,       NULL, 'b'\t\t },\n \t\t{ \"canonicalize\",   no_argument,       NULL, 'c'\t\t },\n-\t\t{ \"deleted\",        no_argument,       NULL, FINDMNT_OPT_DELETED },\n \t\t{ \"direction\",\t    required_argument, NULL, 'd'\t\t },\n \t\t{ \"df\",\t\t    no_argument,       NULL, 'D'\t\t },\n \t\t{ \"evaluate\",\t    no_argument,       NULL, 'e'\t\t },\n@@ -1601,9 +1590,6 @@ int main(int argc, char *argv[])\n \t\tcase FINDMNT_OPT_SHADOWED:\n \t\t\tflags |= FL_SHADOWED;\n \t\t\tbreak;\n-\t\tcase FINDMNT_OPT_DELETED:\n-\t\t\tflags |= FL_DELETED;\n-\t\t\tbreak;\n \t\tcase 'h':\n \t\t\tusage();\n \t\tcase 'V':\n@@ -1776,9 +1762,6 @@ int main(int argc, char *argv[])\n \t\t\tcase COL_TID:\n \t\t\t\tscols_column_set_json_type(cl, SCOLS_JSON_NUMBER);\n \t\t\t\tbreak;\n-\t\t\tcase COL_DELETED:\n-\t\t\t\tscols_column_set_json_type(cl, SCOLS_JSON_BOOLEAN);\n-\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tif (fl & SCOLS_FL_WRAP)\n \t\t\t\t\tscols_column_set_json_type(cl, SCOLS_JSON_ARRAY_STRING);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "23901d227c6e948a9f3a413a5f3e0ca41bc8f8fa",
            "date": "2025-01-14T09:31:58Z",
            "author_login": "karelzak"
          },
          {
            "sha": "e05e62266644ff7d0ef54e3785e33d201b08831d",
            "date": "2025-01-14T09:31:32Z",
            "author_login": "karelzak"
          },
          {
            "sha": "c94c7e0034537de5cb93c42419b6505180164045",
            "date": "2025-01-14T09:31:17Z",
            "author_login": "karelzak"
          },
          {
            "sha": "8750af9cdac8372cdc964d8d8dd71113881ce307",
            "date": "2025-01-14T09:24:35Z",
            "author_login": "karelzak"
          },
          {
            "sha": "2e269ff4bc32cb61e1d576d4f932b4027f5bc2c8",
            "date": "2025-01-09T22:57:32Z",
            "author_login": "poettering"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-552",
    "description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-23T20:15:08.560",
    "last_modified": "2024-11-21T06:23:20.377",
    "fix_date": "2022-01-04T09:37:55Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/170176/snap-confine-must_mkdir_and_open_with_perms-Race-Condition.html",
      "source": "secalert@redhat.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2022/Dec/4",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2022/11/30/2",
      "source": "secalert@redhat.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3996",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2024628",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/util-linux/util-linux/commit/166e87368ae88bf31112a30e078cceae637f4cdb",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.37/v2.37.3-ReleaseNotes",
      "source": "secalert@redhat.com",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202401-08",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20221209-0002/",
      "source": "secalert@redhat.com",
      "tags": [
        "Broken Link",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2022/01/24/2",
      "source": "secalert@redhat.com",
      "tags": [
        "Exploit",
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/170176/snap-confine-must_mkdir_and_open_with_perms-Race-Condition.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2022/Dec/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2022/11/30/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://access.redhat.com/security/cve/CVE-2021-3996",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2024628",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/util-linux/util-linux/commit/166e87368ae88bf31112a30e078cceae637f4cdb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.37/v2.37.3-ReleaseNotes",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202401-08",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20221209-0002/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.openwall.com/lists/oss-security/2022/01/24/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.288351",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "util-linux",
    "owner": "util-linux",
    "created_at": "2011-09-07T05:08:38Z",
    "updated_at": "2025-01-14T09:32:32Z",
    "pushed_at": "2025-01-14T09:32:26Z",
    "size": 226776,
    "stars": 2741,
    "forks": 1226,
    "open_issues": 350,
    "watchers": 2741,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 6113328,
      "Shell": 763897,
      "C++": 209773,
      "M4": 152334,
      "Meson": 147913,
      "Berry": 84380,
      "Yacc": 45800,
      "Makefile": 35275,
      "Python": 8511,
      "Roff": 4519,
      "Ruby": 2700,
      "Lex": 1606,
      "Perl": 528
    },
    "commit_activity": {
      "total_commits_last_year": 1054,
      "avg_commits_per_week": 20.26923076923077,
      "days_active_last_year": 252
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T12:56:59.166469"
  }
}