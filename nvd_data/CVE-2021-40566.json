{
  "cve_id": "CVE-2021-40566",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "96047e0e6166407c40cc19f4e94fb35cd7624391",
    "related_commits": [
      "96047e0e6166407c40cc19f4e94fb35cd7624391",
      "96047e0e6166407c40cc19f4e94fb35cd7624391"
    ],
    "patch_url": "https://github.com/gpac/gpac/commit/96047e0e6166407c40cc19f4e94fb35cd7624391.patch",
    "fix_commit_details": {
      "sha": "96047e0e6166407c40cc19f4e94fb35cd7624391",
      "commit_date": "2021-08-30T13:46:16Z",
      "author": {
        "login": "jeanlf",
        "type": "User",
        "stats": {
          "total_commits": 11740,
          "average_weekly_commits": 11.521099116781159,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 832
        }
      },
      "commit_message": {
        "title": "fixed #1887",
        "length": 11,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 21,
        "deletions": 11
      },
      "files": [
        {
          "filename": "src/filters/dec_xvid.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -181,7 +181,7 @@ static GF_Err xviddec_configure_pid(GF_Filter *filter, GF_FilterPid *pid, Bool i\n \t/*decode DSI*/\n \te = gf_m4v_get_config(p->value.data.ptr, p->value.data.size, &dsi);\n \tif (e) return e;\n-\tif (!dsi.width || !dsi.height) return GF_NON_COMPLIANT_BITSTREAM;\n+\tif (!dsi.width || (dsi.width%2) || !dsi.height) return GF_NON_COMPLIANT_BITSTREAM;\n \n \tmemset(&par, 0, sizeof(par));\n \tpar.width = dsi.width;"
        },
        {
          "filename": "src/filters/reframe_mpgvid.c",
          "status": "modified",
          "additions": 20,
          "deletions": 10,
          "patch": "@@ -805,12 +805,17 @@ GF_Err mpgviddmx_process(GF_Filter *filter)\n \t\t\t\t//not enough data, accumulate until we can parse the full header\n \t\t\t\tif (e==GF_EOS) {\n \t\t\t\t\tif (vosh_start<0) vosh_start = 0;\n-\t\t\t\t\tif (ctx->hdr_store_alloc < ctx->hdr_store_size + pck_size - vosh_start) {\n-\t\t\t\t\t\tctx->hdr_store_alloc = (u32) (ctx->hdr_store_size + pck_size - vosh_start);\n-\t\t\t\t\t\tctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);\n+\t\t\t\t\tif (data == ctx->hdr_store) {\n+\t\t\t\t\t\tmemmove(ctx->hdr_store, start, remain);\n+\t\t\t\t\t\tctx->hdr_store_size = remain;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (ctx->hdr_store_alloc < ctx->hdr_store_size + pck_size - vosh_start) {\n+\t\t\t\t\t\t\tctx->hdr_store_alloc = (u32) (ctx->hdr_store_size + pck_size - vosh_start);\n+\t\t\t\t\t\t\tctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tmemcpy(ctx->hdr_store + ctx->hdr_store_size, data + vosh_start, (size_t) (pck_size - vosh_start) );\n+\t\t\t\t\t\tctx->hdr_store_size += pck_size - (u32) vosh_start;\n \t\t\t\t\t}\n-\t\t\t\t\tmemcpy(ctx->hdr_store + ctx->hdr_store_size, data + vosh_start, (size_t) (pck_size - vosh_start) );\n-\t\t\t\t\tctx->hdr_store_size += pck_size - (u32) vosh_start;\n \t\t\t\t\tgf_filter_pid_drop_packet(ctx->ipid);\n \t\t\t\t\treturn GF_OK;\n \t\t\t\t} else if (e != GF_OK) {\n@@ -844,12 +849,17 @@ GF_Err mpgviddmx_process(GF_Filter *filter)\n \t\t\t\t//not enough data, accumulate until we can parse the full header\n \t\t\t\tif (e==GF_EOS) {\n \t\t\t\t\tif (vosh_start<0) vosh_start = 0;\n-\t\t\t\t\tif (ctx->hdr_store_alloc < ctx->hdr_store_size + pck_size - vosh_start) {\n-\t\t\t\t\t\tctx->hdr_store_alloc = (u32) (ctx->hdr_store_size + pck_size - (u32) vosh_start);\n-\t\t\t\t\t\tctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);\n+\t\t\t\t\tif (data == ctx->hdr_store) {\n+\t\t\t\t\t\tmemmove(ctx->hdr_store, start, remain);\n+\t\t\t\t\t\tctx->hdr_store_size = remain;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (ctx->hdr_store_alloc < ctx->hdr_store_size + pck_size - vosh_start) {\n+\t\t\t\t\t\t\tctx->hdr_store_alloc = (u32) (ctx->hdr_store_size + pck_size - (u32) vosh_start);\n+\t\t\t\t\t\t\tctx->hdr_store = gf_realloc(ctx->hdr_store, sizeof(char)*ctx->hdr_store_alloc);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tmemcpy(ctx->hdr_store + ctx->hdr_store_size, data + vosh_start, (size_t) (pck_size - vosh_start) );\n+\t\t\t\t\t\tctx->hdr_store_size += pck_size - (u32) vosh_start;\n \t\t\t\t\t}\n-\t\t\t\t\tmemcpy(ctx->hdr_store + ctx->hdr_store_size, data + vosh_start, (size_t) (pck_size - vosh_start) );\n-\t\t\t\t\tctx->hdr_store_size += pck_size - (u32) vosh_start;\n \t\t\t\t\tgf_filter_pid_drop_packet(ctx->ipid);\n \t\t\t\t\treturn GF_OK;\n \t\t\t\t} else if (e != GF_OK) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e075efa1bd0984e0e87f6752f1e5b991ba3a7cf7",
            "date": "2025-01-14T15:00:34Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "7af1bfcdc25dd74e158437abd13858281ae1bea0",
            "date": "2025-01-14T12:33:00Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "08572e41a7eae3d7e4329bf88a455ba6cb209936",
            "date": "2025-01-14T12:18:43Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5f2c53efbc58ecfb01885c73b9507413efde6c81",
            "date": "2025-01-14T11:46:01Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "f2082beb80c470f4eaf2bb0421b56e8adcde303a",
            "date": "2025-01-14T11:45:02Z",
            "author_login": "aureliendavid"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-416",
    "description": "A Segmentation fault casued by heap use after free vulnerability exists in Gpac through 1.0.1 via the mpgviddmx_process function in reframe_mpgvid.c when using mp4box, which causes a denial of service.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-12T22:15:07.933",
    "last_modified": "2024-11-21T06:24:23.550",
    "fix_date": "2021-08-30T13:46:16Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/96047e0e6166407c40cc19f4e94fb35cd7624391",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1887",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/gpac/gpac/commit/96047e0e6166407c40cc19f4e94fb35cd7624391",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gpac/gpac/issues/1887",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.072851",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-14T12:51:06Z",
    "pushed_at": "2025-01-14T12:51:01Z",
    "size": 148655,
    "stars": 2857,
    "forks": 539,
    "open_issues": 84,
    "watchers": 2857,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29230795,
      "JavaScript": 1164507,
      "C++": 591365,
      "Roff": 570792,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1273,
      "avg_commits_per_week": 24.48076923076923,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:56:58.367536"
  }
}