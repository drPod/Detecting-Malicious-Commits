{
  "cve_id": "CVE-2021-4075",
  "github_data": {
    "repository": "snipe/snipe-it",
    "fix_commit": "4612b9e711b3ff5d2bcddbec5b18866d25f8e34e",
    "related_commits": [
      "4612b9e711b3ff5d2bcddbec5b18866d25f8e34e",
      "4612b9e711b3ff5d2bcddbec5b18866d25f8e34e"
    ],
    "patch_url": "https://github.com/snipe/snipe-it/commit/4612b9e711b3ff5d2bcddbec5b18866d25f8e34e.patch",
    "fix_commit_details": {
      "sha": "4612b9e711b3ff5d2bcddbec5b18866d25f8e34e",
      "commit_date": "2021-12-06T19:41:11Z",
      "author": {
        "login": "snipe",
        "type": "User",
        "stats": {
          "total_commits": 11824,
          "average_weekly_commits": 25.648590021691973,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 415
        }
      },
      "commit_message": {
        "title": "Merge pull request #10394 from snipe/fixes/add_stricter_validation_for_slack_hooks",
        "length": 124,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 74,
        "additions": 40,
        "deletions": 34
      },
      "files": [
        {
          "filename": "app/Http/Controllers/Api/SettingsController.php",
          "status": "modified",
          "additions": 25,
          "deletions": 18,
          "patch": "@@ -162,27 +162,34 @@ public function ldaptestlogin(Request $request, LdapAd $ldap)\n \n     public function slacktest(Request $request)\n     {\n-        $slack = new Client([\n-            'base_url' => e($request->input('slack_endpoint')),\n-            'defaults' => [\n-                'exceptions' => false,\n-            ],\n-        ]);\n-\n-        $payload = json_encode(\n-            [\n-                'channel'    => e($request->input('slack_channel')),\n-                'text'       => trans('general.slack_test_msg'),\n-                'username'    => e($request->input('slack_botname')),\n-                'icon_emoji' => ':heart:',\n+\n+        // Only attempt the slack request if the validation passes\n+        if ($request->validate([\n+            'slack_endpoint'   => 'url|required_with:slack_channel|starts_with:https://hooks.slack.com|nullable',\n+            'slack_channel'   => 'required_with:slack_endpoint|starts_with:#|nullable',\n+        ])) {\n+            $slack = new Client([\n+                'base_url' => e($request->input('slack_endpoint')),\n+                'defaults' => [\n+                    'exceptions' => false,\n+                ],\n             ]);\n \n-        try {\n-            $slack->post($request->input('slack_endpoint'), ['body' => $payload]);\n+            $payload = json_encode(\n+                [\n+                    'channel'    => e($request->input('slack_channel')),\n+                    'text'       => trans('general.slack_test_msg'),\n+                    'username'    => e($request->input('slack_botname')),\n+                    'icon_emoji' => ':heart:',\n+                ]);\n \n-            return response()->json(['message' => 'Success'], 200);\n-        } catch (\\Exception $e) {\n-            return response()->json(['message' => 'Oops! Please check the channel name and webhook endpoint URL. Slack responded with: '.$e->getMessage()], 400);\n+            try {\n+                $slack->post($request->input('slack_endpoint'), ['body' => $payload]);\n+\n+                return response()->json(['message' => 'Success'], 200);\n+            } catch (\\Exception $e) {\n+                return response()->json(['message' => 'Oops! Please check the channel name and webhook endpoint URL. Slack responded with: '.$e->getMessage()], 400);\n+            }\n         }\n \n         return response()->json(['message' => 'Something went wrong :( '], 400);"
        },
        {
          "filename": "app/Http/Controllers/SettingsController.php",
          "status": "modified",
          "additions": 0,
          "deletions": 10,
          "patch": "@@ -665,16 +665,6 @@ public function postSlack(Request $request)\n             return redirect()->to('admin')->with('error', trans('admin/settings/message.update.error'));\n         }\n \n-        $validatedData = $request->validate([\n-            'slack_channel'   => 'regex:/(?<!\\w)#\\w+/|required_with:slack_endpoint|nullable',\n-        ]);\n-\n-        if ($validatedData) {\n-            $setting->slack_endpoint = $request->input('slack_endpoint');\n-            $setting->slack_channel = $request->input('slack_channel');\n-            $setting->slack_botname = $request->input('slack_botname');\n-        }\n-\n         if ($setting->save()) {\n             return redirect()->route('settings.index')\n                 ->with('success', trans('admin/settings/message.update.success'));"
        },
        {
          "filename": "app/Models/Setting.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -54,9 +54,9 @@ class Setting extends Model\n           'admin_cc_email'                      => 'email|nullable',\n           'default_currency'                    => 'required',\n           'locale'                              => 'required',\n-          'slack_endpoint'                      => 'url|required_with:slack_channel|nullable',\n+          'slack_endpoint'                      => 'url|required_with:slack_channel|nullable|starts_with:https://hooks.slack.com',\n           'labels_per_page'                     => 'numeric',\n-          'slack_channel'                       => 'regex:/^[\\#\\@]?\\w+/|required_with:slack_endpoint|nullable',\n+          'slack_channel'                       => 'required_with:slack_endpoint|starts_with:#|nullable',\n           'slack_botname'                       => 'string|nullable',\n           'labels_width'                        => 'numeric',\n           'labels_height'                       => 'numeric',"
        },
        {
          "filename": "resources/lang/en/validation.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -64,6 +64,7 @@\n         'string'  => 'The :attribute must be at least :min characters.',\n         'array'   => 'The :attribute must have at least :min items.',\n     ],\n+    'starts_with'          => 'The :attribute must start with one of the following: :values.',\n     'not_in'               => 'The selected :attribute is invalid.',\n     'numeric'              => 'The :attribute must be a number.',\n     'present'              => 'The :attribute field must be present.',"
        },
        {
          "filename": "resources/views/settings/slack.blade.php",
          "status": "modified",
          "additions": 12,
          "deletions": 4,
          "patch": "@@ -194,32 +194,40 @@\n \n \n                     if (data.responseJSON) {\n-                        var errors = data.responseJSON.message;\n+                        var errors = data.responseJSON.errors;\n+                        var error_msg = data.responseJSON.message;\n                     } else {\n                         var errors;\n+                        var error_msg = 'Something went wrong.';\n                     }\n \n                     var error_text = '';\n \n                     $('#save_slack').attr(\"disabled\", true);\n                     $(\"#slacktesticon\").html('');\n                     $(\"#slackteststatus\").addClass('text-danger');\n-                    $(\"#slacktesticon\").html('<i class=\"fas fa-exclamation-triangle text-danger\"></i>');\n+                    $(\"#slacktesticon\").html('<i class=\"fas fa-exclamation-triangle text-danger\"></i><span class=\"text-danger\">' + error_msg+ '</span>');\n \n+                    \n                     if (data.status == 500) {\n                         $('#slackteststatus').html('500 Server Error');\n-                    } else if (data.status == 400) {\n+                    } else if ((data.status == 400) || (data.status == 422)) {\n+                        console.log('Type of errors is '+ typeof errors);\n+                        console.log('Data status was 400 or 422');\n \n                         if (typeof errors != 'string') {\n+                        \n+                            console.log(errors.length);\n \n-                            for (i = 0; i < errors.length; i++) {\n+                            for (i in errors) {\n                                 if (errors[i]) {\n                                     error_text += '<li>Error: ' + errors[i];\n                                 }\n \n                             }\n \n                         } else {\n+\n                             error_text = errors;\n                         }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ca11efd3ee47a3313fc3a586f2ca2c843a7dc045",
            "date": "2025-01-13T22:23:30Z",
            "author_login": "snipe"
          },
          {
            "sha": "4a6a94a50ebc4bc86f7000aa5cb70987e20b7c80",
            "date": "2025-01-13T22:23:13Z",
            "author_login": "snipe"
          },
          {
            "sha": "2d65b381559d1817ecf201099e80201c7ad22378",
            "date": "2025-01-13T21:00:04Z",
            "author_login": "snipe"
          },
          {
            "sha": "587449ef970b3e2523da5a33a24f681cf699d382",
            "date": "2025-01-13T17:35:58Z",
            "author_login": "snipe"
          },
          {
            "sha": "06ffac9d7d0677ea74ff043a225588cc6a5a2aa8",
            "date": "2025-01-13T17:33:13Z",
            "author_login": "snipe"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-918",
    "description": "snipe-it is vulnerable to Server-Side Request Forgery (SSRF)",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-06T21:15:07.907",
    "last_modified": "2024-11-21T06:36:51.303",
    "fix_date": "2021-12-06T19:41:11Z"
  },
  "references": [
    {
      "url": "https://github.com/snipe/snipe-it/commit/4612b9e711b3ff5d2bcddbec5b18866d25f8e34e",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4386fd8b-8c80-42bb-87b8-b506c46597de",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/snipe/snipe-it/commit/4612b9e711b3ff5d2bcddbec5b18866d25f8e34e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4386fd8b-8c80-42bb-87b8-b506c46597de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.821545",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "snipe-it",
    "owner": "snipe",
    "created_at": "2013-11-12T22:25:47Z",
    "updated_at": "2025-01-14T04:38:00Z",
    "pushed_at": "2025-01-14T12:34:04Z",
    "size": 224867,
    "stars": 11511,
    "forks": 3256,
    "open_issues": 1797,
    "watchers": 11511,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 18130643,
      "JavaScript": 4627209,
      "Blade": 1576739,
      "CSS": 250828,
      "Less": 196359,
      "Shell": 43713,
      "Dockerfile": 4408,
      "Python": 522,
      "Jinja": 229,
      "Procfile": 57
    },
    "commit_activity": {
      "total_commits_last_year": 3771,
      "avg_commits_per_week": 72.51923076923077,
      "days_active_last_year": 253
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:15:50.526515"
  }
}