{
  "cve_id": "CVE-2021-4076",
  "github_data": {
    "repository": "latchset/tang",
    "fix_commit": "e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
    "related_commits": [
      "e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
      "e82459fda10f0630c3414ed2afbc6320bb9ea7c9"
    ],
    "patch_url": "https://github.com/latchset/tang/commit/e82459fda10f0630c3414ed2afbc6320bb9ea7c9.patch",
    "fix_commit_details": {
      "sha": "e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
      "commit_date": "2021-12-14T11:18:41Z",
      "author": {
        "login": "sergio-correia",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "keys: move signing part out of find_by_thp() and to find_jws() (#81)",
        "length": 391,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 36,
        "deletions": 25
      },
      "files": [
        {
          "filename": "src/keys.c",
          "status": "modified",
          "additions": 16,
          "deletions": 15,
          "patch": "@@ -267,20 +267,7 @@ find_by_thp(struct tang_keys_info* tki, const char* target)\n             if (!thumbprint || strcmp(thumbprint, target) != 0) {\n                 continue;\n             }\n-\n-            if (jwk_valid_for_deriving_keys(jwk)) {\n-                return json_incref(jwk);\n-            } else if (jwk_valid_for_signing(jwk)) {\n-                json_auto_t* sign = json_deep_copy(tki->m_sign);\n-                if (json_array_append(sign, jwk) == -1) {\n-                    return NULL;\n-                }\n-                json_auto_t* jws = jwk_sign(tki->m_payload, sign);\n-                if (!jws) {\n-                    return NULL;\n-                }\n-                return json_incref(jws);\n-            }\n+            return json_incref(jwk);\n         }\n     }\n     return NULL;\n@@ -445,7 +432,21 @@ find_jws(struct tang_keys_info* tki, const char* thp)\n         }\n         return json_incref(jws);\n     }\n-    return find_by_thp(tki, thp);\n+\n+    json_auto_t* jwk = find_by_thp(tki, thp);\n+    if (!jwk_valid_for_signing(jwk)) {\n+        return NULL;\n+    }\n+\n+    json_auto_t* sign = json_deep_copy(tki->m_sign);\n+    if (json_array_append(sign, jwk) == -1) {\n+        return NULL;\n+    }\n+    json_auto_t* jws = jwk_sign(tki->m_payload, sign);\n+    if (!jws) {\n+        return NULL;\n+    }\n+    return json_incref(jws);\n }\n \n json_t*"
        },
        {
          "filename": "tests/adv",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -40,11 +40,11 @@ export PID=$!\n sleep 0.5\n \n # Make sure requests on the root fail\n-! fetch /\n+fetch / && expected_fail\n \n # The request should fail (404) for non-signature key IDs\n-! fetch /adv/`jose jwk thp -i $TMP/db/exc.jwk`\n-! fetch /adv/`jose jwk thp -a S512 -i $TMP/db/exc.jwk`\n+fetch /adv/`jose jwk thp -i $TMP/db/exc.jwk` && expected_fail\n+fetch /adv/`jose jwk thp -a S512 -i $TMP/db/exc.jwk` && expected_fail\n \n # The default advertisement fetch should succeed and pass verification\n fetch /adv\n@@ -56,17 +56,17 @@ fetch /adv/`jose jwk thp -i $TMP/db/sig.jwk` | ver $TMP/db/sig.jwk\n fetch /adv/`jose jwk thp -a S512 -i $TMP/db/sig.jwk` | ver $TMP/db/sig.jwk\n \n # Requesting an adv by an advertised key ID should't be signed by hidden keys\n-! fetch /adv/`jose jwk thp -i $TMP/db/sig.jwk` | ver $TMP/db/.sig.jwk\n-! fetch /adv/`jose jwk thp -i $TMP/db/sig.jwk` | ver $TMP/db/.oth.jwk\n+fetch /adv/`jose jwk thp -i $TMP/db/sig.jwk` | ver $TMP/db/.sig.jwk && expected_fail\n+fetch /adv/`jose jwk thp -i $TMP/db/sig.jwk` | ver $TMP/db/.oth.jwk && expected_fail\n \n # Verify that the default advertisement is not signed with hidden signature keys\n-! fetch /adv/ | ver $TMP/db/.oth.jwk\n-! fetch /adv/ | ver $TMP/db/.sig.jwk\n+fetch /adv/ | ver $TMP/db/.oth.jwk && expected_fail\n+fetch /adv/ | ver $TMP/db/.sig.jwk && expected_fail\n \n # A private key advertisement is signed by all advertised keys and the requested private key\n fetch /adv/`jose jwk thp -i $TMP/db/.sig.jwk` | ver $TMP/db/sig.jwk\n fetch /adv/`jose jwk thp -i $TMP/db/.sig.jwk` | ver $TMP/db/.sig.jwk\n-! fetch /adv/`jose jwk thp -i $TMP/db/.sig.jwk` | ver $TMP/db/.oth.jwk\n+fetch /adv/`jose jwk thp -i $TMP/db/.sig.jwk` | ver $TMP/db/.oth.jwk && expected_fail\n \n # Verify that the advertisements contain the cty parameter\n fetch /adv | jose fmt -j- -Og protected -SyOg cty -Sq \"jwk-set+json\" -E"
        },
        {
          "filename": "tests/helpers",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -84,3 +84,8 @@ valid_key_perm() {\n     fi\n     [ \"${_perm}\" = \"440\" ]\n }\n+\n+expected_fail () {\n+    echo \"Test was expected to fail\" >&2\n+    exit 1\n+}"
        },
        {
          "filename": "tests/rec",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -45,8 +45,8 @@ export PID=$!\n sleep 0.5\n \n # Make sure that GET fails\n-! curl -sf http://127.0.0.1:$PORT/rec\n-! curl -sf http://127.0.0.1:$PORT/rec/\n+curl -sf http://127.0.0.1:$PORT/rec && expected_fail\n+curl -sf http://127.0.0.1:$PORT/rec/ && expected_fail\n \n # Make a recovery request (NOTE: this is insecure! Don't do this in real code!)\n good=`jose jwk exc -i '{\"alg\":\"ECMR\",\"key_ops\":[\"deriveKey\"]}' -l $TMP/exc.jwk -r $TMP/db/exc.jwk`"
        },
        {
          "filename": "tests/test-keys.c.in",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -158,6 +158,11 @@ test_find_jws(void)\n         {\"ugJ4Ula-YABQIiJ-0g3B_jpFpF2nl3W-DNpfLdXArhTusV0QCcd1vtgDeGHEPzpm7jEsyC7VYYSSOkZicK22mw\", 1},\n         {\"up0Z4fRhpd4O5QwBaMCXDTlrvxCmZacU0MD8kw\", 1},\n         {\"vllHS-M0aQFCo2yUCcAahMU4TAtXACyeuRf-zbmmTPBg7V0Pb-RRFGo5C6MnpzdirK8B3ORLOsN8RyXClvtjxA\", 1},\n+        {\"-bWkGaJi0Zdvxaj4DCp28umLcRA\", 0},\n+        {\"WEpfFyeoNKkE2-TosN_bP-gd9UgRvQCZpVasZQ\", 0},\n+        {\"L4xg2tZXTEVbsK39bzOZM1jGWn3HtOxF5gh6F9YVf5Q\", 0},\n+        {\"9U8qgy_YjyY6Isuq6QuiKEiYZgNJShcGgJx5FJzCu6m3N6zFaIPy_HDkxkVqAZ9E\", 0},\n+        {\"Cy73glFjs6B6RU7wy6vWxAc-2bJy5VJOT9LyK80eKgZ8k27wXZ-3rjsuNU5tua_yHWtluyoSYtjoKXfI0E8ESw\", 0},\n         {NULL, 1},\n         {\"a\", 0},\n         {\"foo\", 0},"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "39263fa411fb6ea272f4eeb0ab1ad7123399e79c",
            "date": "2024-11-11T09:05:10Z",
            "author_login": "sarroutbi"
          },
          {
            "sha": "02105756ee2a3afbd7065a47664d202788c9b584",
            "date": "2024-02-14T10:50:41Z",
            "author_login": "sarroutbi"
          },
          {
            "sha": "fbf121819b765f0012a6cdebbdd2cf0bc6c272e2",
            "date": "2024-02-14T09:40:06Z",
            "author_login": "sarroutbi"
          },
          {
            "sha": "819970cf37f3b775d42a7ec3a233dc5f8df66497",
            "date": "2024-02-12T13:07:45Z",
            "author_login": "sergio-correia"
          },
          {
            "sha": "4b7656b0d88917cc52ed5fd2c703db84fbbc746d",
            "date": "2024-02-12T12:56:11Z",
            "author_login": "sarroutbi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "A flaw exists in tang, a network-based cryptographic binding server, which could result in leak of private keys.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-02T23:15:09.187",
    "last_modified": "2024-11-21T06:36:51.430",
    "fix_date": "2021-12-14T11:18:41Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2029814",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/latchset/tang/commit/e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/latchset/tang/pull/81",
      "source": "secalert@redhat.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2029814",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/latchset/tang/commit/e82459fda10f0630c3414ed2afbc6320bb9ea7c9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/latchset/tang/pull/81",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.769777",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tang",
    "owner": "latchset",
    "created_at": "2015-11-13T16:47:53Z",
    "updated_at": "2025-01-12T09:37:22Z",
    "pushed_at": "2024-11-12T15:28:48Z",
    "size": 432,
    "stars": 530,
    "forks": 57,
    "open_issues": 36,
    "watchers": 530,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 40794,
      "Shell": 25519,
      "Meson": 5850
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T21:21:23.804527"
  }
}