{
  "cve_id": "CVE-2021-41072",
  "github_data": {
    "repository": "plougher/squashfs-tools",
    "fix_commit": "e0485802ec72996c20026da320650d8362f555bd",
    "related_commits": [
      "e0485802ec72996c20026da320650d8362f555bd",
      "e0485802ec72996c20026da320650d8362f555bd"
    ],
    "patch_url": "https://github.com/plougher/squashfs-tools/commit/e0485802ec72996c20026da320650d8362f555bd.patch",
    "fix_commit_details": {
      "sha": "e0485802ec72996c20026da320650d8362f555bd",
      "commit_date": "2021-09-12T22:50:06Z",
      "author": {
        "login": "plougher",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Unsquashfs: additional write outside destination directory exploit fix",
        "length": 1347,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 175,
        "additions": 173,
        "deletions": 2
      },
      "files": [
        {
          "filename": "squashfs-tools/Makefile",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -160,8 +160,8 @@ MKSQUASHFS_OBJS = mksquashfs.o read_fs.o action.o swap.o pseudo.o compressor.o \\\n \tcaches-queues-lists.o reader.o tar.o\n \n UNSQUASHFS_OBJS = unsquashfs.o unsquash-1.o unsquash-2.o unsquash-3.o \\\n-\tunsquash-4.o unsquash-123.o unsquash-34.o unsquash-1234.o swap.o \\\n-\tcompressor.o unsquashfs_info.o\n+\tunsquash-4.o unsquash-123.o unsquash-34.o unsquash-1234.o unsquash-12.o \\\n+\tswap.o compressor.o unsquashfs_info.o\n \n CFLAGS ?= -O2\n CFLAGS += $(EXTRA_CFLAGS) $(INCLUDEDIR) -D_FILE_OFFSET_BITS=64 \\\n@@ -393,6 +393,8 @@ unsquash-34.o: unsquashfs.h unsquash-34.c unsquashfs_error.h\n \n unsquash-1234.o: unsquash-1234.c unsquashfs_error.h\n \n+unsquash-1234.o: unsquash-12.c\n+\n unsquashfs_xattr.o: unsquashfs_xattr.c unsquashfs.h squashfs_fs.h xattr.h unsquashfs_error.h\n \n unsquashfs_info.o: unsquashfs.h squashfs_fs.h unsquashfs_error.h"
        },
        {
          "filename": "squashfs-tools/unsquash-1.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -370,6 +370,12 @@ static struct dir *squashfs_opendir(unsigned int block_start, unsigned int offse\n \t\t}\n \t}\n \n+\t/* check directory for duplicate names.  Need to sort directory first */\n+\tsort_directory(dir);\n+\tif(check_directory(dir) == FALSE) {\n+\t\tERROR(\"File system corrupted: directory has duplicate names\\n\");\n+\t\tgoto corrupted;\n+\t}\n \treturn dir;\n \n corrupted:"
        },
        {
          "filename": "squashfs-tools/unsquash-12.c",
          "status": "added",
          "additions": 110,
          "deletions": 0,
          "patch": "@@ -0,0 +1,110 @@\n+/*\n+ * Unsquash a squashfs filesystem.  This is a highly compressed read only\n+ * filesystem.\n+ *\n+ * Copyright (c) 2021\n+ * Phillip Lougher <phillip@squashfs.org.uk>\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU General Public License\n+ * as published by the Free Software Foundation; either version 2,\n+ * or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program; if not, write to the Free Software\n+ * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+ *\n+ * unsquash-12.c\n+ *\n+ * Helper functions used by unsquash-1 and unsquash-2.\n+ */\n+\n+#include \"unsquashfs.h\"\n+\n+/*\n+ * Bottom up linked list merge sort.\n+ *\n+ */\n+void sort_directory(struct dir *dir)\n+{\n+\tstruct dir_ent *cur, *l1, *l2, *next;\n+\tint len1, len2, stride = 1;\n+\n+\tif(dir->dir_count < 2)\n+\t\treturn;\n+\n+\t/*\n+\t * We can consider our linked-list to be made up of stride length\n+\t * sublists.  Eacn iteration around this loop merges adjacent\n+\t * stride length sublists into larger 2*stride sublists.  We stop\n+\t * when stride becomes equal to the entire list.\n+\t *\n+\t * Initially stride = 1 (by definition a sublist of 1 is sorted), and\n+\t * these 1 element sublists are merged into 2 element sublists,  which\n+\t * are then merged into 4 element sublists and so on.\n+\t */\n+\tdo {\n+\t\tl2 = dir->dirs; /* head of current linked list */\n+\t\tcur = NULL; /* empty output list */\n+\n+\t\t/*\n+\t\t * Iterate through the linked list, merging adjacent sublists.\n+\t\t * On each interation l2 points to the next sublist pair to be\n+\t\t * merged (if there's only one sublist left this is simply added\n+\t\t * to the output list)\n+\t\t */\n+\t\twhile(l2) {\n+\t\t\tl1 = l2;\n+\t\t\tfor(len1 = 0; l2 && len1 < stride; len1 ++, l2 = l2->next);\n+\t\t\tlen2 = stride;\n+\n+\t\t\t/*\n+\t\t\t * l1 points to first sublist.\n+\t\t\t * l2 points to second sublist.\n+\t\t\t * Merge them onto the output list\n+\t\t\t */\n+\t\t\twhile(len1 && l2 && len2) {\n+\t\t\t\tif(strcmp(l1->name, l2->name) <= 0) {\n+\t\t\t\t\tnext = l1;\n+\t\t\t\t\tl1 = l1->next;\n+\t\t\t\t\tlen1 --;\n+\t\t\t\t} else {\n+\t\t\t\t\tnext = l2;\n+\t\t\t\t\tl2 = l2->next;\n+\t\t\t\t\tlen2 --;\n+\t\t\t\t}\n+\n+\t\t\t\tif(cur) {\n+\t\t\t\t\tcur->next = next;\n+\t\t\t\t\tcur = next;\n+\t\t\t\t} else\n+\t\t\t\t\tdir->dirs = cur = next;\n+\t\t\t}\n+\t\t\t/*\n+\t\t\t * One sublist is now empty, copy the other one onto the\n+\t\t\t * output list\n+\t\t\t */\n+\t\t\tfor(; len1; len1 --, l1 = l1->next) {\n+\t\t\t\tif(cur) {\n+\t\t\t\t\tcur->next = l1;\n+\t\t\t\t\tcur = l1;\n+\t\t\t\t} else\n+\t\t\t\t\tdir->dirs = cur = l1;\n+\t\t\t}\n+\t\t\tfor(; l2 && len2; len2 --, l2 = l2->next) {\n+\t\t\t\tif(cur) {\n+\t\t\t\t\tcur->next = l2;\n+\t\t\t\t\tcur = l2;\n+\t\t\t\t} else\n+\t\t\t\t\tdir->dirs = cur = l2;\n+\t\t\t}\n+\t\t}\n+\t\tcur->next = NULL;\n+\t\tstride = stride << 1;\n+\t} while(stride < dir->dir_count);\n+}"
        },
        {
          "filename": "squashfs-tools/unsquash-1234.c",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -72,3 +72,24 @@ void squashfs_closedir(struct dir *dir)\n \n \tfree(dir);\n }\n+\n+\n+/*\n+ * Check directory for duplicate names.  As the directory should be sorted,\n+ * duplicates will be consecutive.  Obviously we also need to check if the\n+ * directory has been deliberately unsorted, to evade this check.\n+ */\n+int check_directory(struct dir *dir)\n+{\n+\tint i;\n+\tstruct dir_ent *ent;\n+\n+\tif(dir->dir_count < 2)\n+\t\treturn TRUE;\n+\n+\tfor(ent = dir->dirs, i = 0; i < dir->dir_count - 1; ent = ent->next, i++)\n+\t\tif(strcmp(ent->name, ent->next->name) >= 0)\n+\t\t\treturn FALSE;\n+\n+\treturn TRUE;\n+}"
        },
        {
          "filename": "squashfs-tools/unsquash-2.c",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -29,6 +29,7 @@\n static squashfs_fragment_entry_2 *fragment_table;\n static unsigned int *uid_table, *guid_table;\n static squashfs_operations ops;\n+static int needs_sorting = FALSE;\n \n \n static void read_block_list(unsigned int *block_list, long long start,\n@@ -463,6 +464,17 @@ static struct dir *squashfs_opendir(unsigned int block_start, unsigned int offse\n \t\t}\n \t}\n \n+\tif(needs_sorting)\n+\t\tsort_directory(dir);\n+\n+\t/* check directory for duplicate names and sorting */\n+\tif(check_directory(dir) == FALSE) {\n+\t\tif(needs_sorting)\n+\t\t\tERROR(\"File system corrupted: directory has duplicate names\\n\");\n+\t\telse\n+\t\t\tERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");\n+\t\tgoto corrupted;\n+\t}\n \treturn dir;\n \n corrupted:\n@@ -596,6 +608,10 @@ int read_super_2(squashfs_operations **s_ops, void *s)\n \t * 2.x filesystems use gzip compression.\n \t */\n \tcomp = lookup_compressor(\"gzip\");\n+\n+\tif(sBlk_3->s_minor == 0)\n+\t\tneeds_sorting = TRUE;\n+\n \treturn TRUE;\n }\n "
        },
        {
          "filename": "squashfs-tools/unsquash-3.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -497,6 +497,12 @@ static struct dir *squashfs_opendir(unsigned int block_start, unsigned int offse\n \t\t}\n \t}\n \n+\t/* check directory for duplicate names and sorting */\n+\tif(check_directory(dir) == FALSE) {\n+\t\tERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");\n+\t\tgoto corrupted;\n+\t}\n+\n \treturn dir;\n \n corrupted:"
        },
        {
          "filename": "squashfs-tools/unsquash-4.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -434,6 +434,12 @@ static struct dir *squashfs_opendir(unsigned int block_start, unsigned int offse\n \t\t}\n \t}\n \n+\t/* check directory for duplicate names and sorting */\n+\tif(check_directory(dir) == FALSE) {\n+\t\tERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");\n+\t\tgoto corrupted;\n+\t}\n+\n \treturn dir;\n \n corrupted:"
        },
        {
          "filename": "squashfs-tools/unsquashfs.h",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -293,4 +293,8 @@ extern long long *alloc_index_table(int);\n /* unsquash-1234.c */\n extern int check_name(char *, int);\n extern void squashfs_closedir(struct dir *);\n+extern int check_directory(struct dir *);\n+\n+/* unsquash-12.c */\n+extern void sort_directory(struct dir *);\n #endif"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dbe45af1d616bc8b79f35d255bb2b80d273ad9f6",
            "date": "2025-01-01T13:18:47Z",
            "author_login": "plougher"
          },
          {
            "sha": "d0c2f7af3224886bf6956ed3c66dafd065214840",
            "date": "2025-01-01T13:04:55Z",
            "author_login": "plougher"
          },
          {
            "sha": "3ca5f37152414d62c9a8eb32d81c64d7a68d142c",
            "date": "2025-01-01T13:02:23Z",
            "author_login": "plougher"
          },
          {
            "sha": "0baca77e56ab6ed000680d59b48bfb6f01fef1d4",
            "date": "2025-01-01T12:50:06Z",
            "author_login": "plougher"
          },
          {
            "sha": "615bfdefe266fa0fc4280185cf87fac8f5e309e3",
            "date": "2025-01-01T12:48:24Z",
            "author_login": "plougher"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "squashfs_opendir in unsquash-2.c in Squashfs-Tools 4.5 allows Directory Traversal, a different vulnerability than CVE-2021-40153. A squashfs filesystem that has been crafted to include a symbolic link and then contents under the same filename in a filesystem can cause unsquashfs to first create the symbolic link pointing outside the expected directory, and then the subsequent write operation will cause the unsquashfs process to write through the symbolic link elsewhere in the filesystem.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-14T01:15:07.747",
    "last_modified": "2024-11-21T06:25:22.970",
    "fix_date": "2021-09-12T22:50:06Z"
  },
  "references": [
    {
      "url": "https://github.com/plougher/squashfs-tools/commit/e0485802ec72996c20026da320650d8362f555bd",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plougher/squashfs-tools/issues/72#issuecomment-913833405",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00017.html",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-29",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2021/dsa-4987",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plougher/squashfs-tools/commit/e0485802ec72996c20026da320650d8362f555bd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plougher/squashfs-tools/issues/72#issuecomment-913833405",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2021/10/msg00017.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2021/dsa-4987",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.752385",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "squashfs-tools",
    "owner": "plougher",
    "created_at": "2012-11-01T16:44:15Z",
    "updated_at": "2025-01-13T11:33:55Z",
    "pushed_at": "2025-01-01T13:19:13Z",
    "size": 3683,
    "stars": 803,
    "forks": 199,
    "open_issues": 27,
    "watchers": 803,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 1307937,
      "Roff": 306042,
      "Shell": 30686,
      "Makefile": 16500
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T17:30:50.126691"
  }
}