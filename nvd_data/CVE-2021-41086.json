{
  "cve_id": "CVE-2021-41086",
  "github_data": {
    "repository": "jsuites/jsuites",
    "fix_commit": "d47a6f4e143188dde2742f4cffd313e1068ad3b3",
    "related_commits": [
      "d47a6f4e143188dde2742f4cffd313e1068ad3b3",
      "fe1d3cc5e339f2f4da8ed1f9f42271fdf9cbd8d2",
      "d47a6f4e143188dde2742f4cffd313e1068ad3b3",
      "fe1d3cc5e339f2f4da8ed1f9f42271fdf9cbd8d2"
    ],
    "patch_url": "https://github.com/jsuites/jsuites/commit/d47a6f4e143188dde2742f4cffd313e1068ad3b3.patch",
    "fix_commit_details": {
      "sha": "d47a6f4e143188dde2742f4cffd313e1068ad3b3",
      "commit_date": "2021-09-18T18:31:24Z",
      "author": {
        "login": "pphod",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Editor sanitize parser updates.",
        "length": 31,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 160,
        "additions": 107,
        "deletions": 53
      },
      "files": [
        {
          "filename": "dist/jsuites.basic.js",
          "status": "modified",
          "additions": 20,
          "deletions": 6,
          "patch": "@@ -17,7 +17,7 @@\n \r\n var jSuites = function(options) {\r\n     var obj = {}\r\n-    var version = '4.4.0';\r\n+    var version = '4.9.11';\r\n \r\n     var find = function(DOMElement, component) {\r\n         if (DOMElement[component.type] && DOMElement[component.type] == component) {\r\n@@ -4999,6 +4999,10 @@ jSuites.editor = (function(el, options) {\n     }\r\n \r\n     obj.addImage = function(src, asSnippet) {\r\n+        if (! src) {\r\n+            src = '';\r\n+        }\r\n+\r\n         if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\r\n             console.error('remoteParser not defined in your initialization');\r\n         } else {\r\n@@ -5273,6 +5277,9 @@ jSuites.editor = (function(el, options) {\n     // Elements to be removed\r\n     var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];\r\n \r\n+    // Valid properties\r\n+    var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\r\n+\r\n     // Valid CSS attributes\r\n     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\r\n \r\n@@ -5297,20 +5304,27 @@ jSuites.editor = (function(el, options) {\n            }\r\n            // Process image\r\n            if (element.tagName.toUpperCase() == 'IMG') {\r\n-               if (! obj.options.acceptImages) {\r\n+               if (! obj.options.acceptImages || ! element.src) {\r\n                    element.parentNode.removeChild(element);\r\n                } else {\r\n                    // Check if is data\r\n                    element.setAttribute('tabindex', '900');\r\n                    // Check attributes for persistance\r\n                    obj.addImage(element.src);\r\n                }\r\n-           } else {\r\n-               // Remove attributes\r\n-               var numAttributes = element.attributes.length - 1;\r\n+           }\r\n+           // Remove attributes\r\n+           var attr = [];\r\n+           var numAttributes = element.attributes.length - 1;\r\n+           if (numAttributes > 0) {\r\n                for (var i = numAttributes; i >= 0 ; i--) {\r\n-                   element.removeAttribute(element.attributes[i].name);\r\n+                   attr.push(element.attributes[i].name);\r\n                }\r\n+               attr.forEach(function(v) {\r\n+                   if (validProperty.indexOf(v) == -1) {\r\n+                       element.removeAttribute(v);\r\n+                   }\r\n+               });\r\n            }\r\n            element.style = '';\r\n            // Add valid style\r"
        },
        {
          "filename": "dist/jsuites.js",
          "status": "modified",
          "additions": 20,
          "deletions": 6,
          "patch": "@@ -17,7 +17,7 @@\n \r\n var jSuites = function(options) {\r\n     var obj = {}\r\n-    var version = '4.4.0';\r\n+    var version = '4.9.11';\r\n \r\n     var find = function(DOMElement, component) {\r\n         if (DOMElement[component.type] && DOMElement[component.type] == component) {\r\n@@ -5010,6 +5010,10 @@ jSuites.editor = (function(el, options) {\n     }\r\n \r\n     obj.addImage = function(src, asSnippet) {\r\n+        if (! src) {\r\n+            src = '';\r\n+        }\r\n+\r\n         if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\r\n             console.error('remoteParser not defined in your initialization');\r\n         } else {\r\n@@ -5284,6 +5288,9 @@ jSuites.editor = (function(el, options) {\n     // Elements to be removed\r\n     var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];\r\n \r\n+    // Valid properties\r\n+    var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\r\n+\r\n     // Valid CSS attributes\r\n     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\r\n \r\n@@ -5308,20 +5315,27 @@ jSuites.editor = (function(el, options) {\n            }\r\n            // Process image\r\n            if (element.tagName.toUpperCase() == 'IMG') {\r\n-               if (! obj.options.acceptImages) {\r\n+               if (! obj.options.acceptImages || ! element.src) {\r\n                    element.parentNode.removeChild(element);\r\n                } else {\r\n                    // Check if is data\r\n                    element.setAttribute('tabindex', '900');\r\n                    // Check attributes for persistance\r\n                    obj.addImage(element.src);\r\n                }\r\n-           } else {\r\n-               // Remove attributes\r\n-               var numAttributes = element.attributes.length - 1;\r\n+           }\r\n+           // Remove attributes\r\n+           var attr = [];\r\n+           var numAttributes = element.attributes.length - 1;\r\n+           if (numAttributes > 0) {\r\n                for (var i = numAttributes; i >= 0 ; i--) {\r\n-                   element.removeAttribute(element.attributes[i].name);\r\n+                   attr.push(element.attributes[i].name);\r\n                }\r\n+               attr.forEach(function(v) {\r\n+                   if (validProperty.indexOf(v) == -1) {\r\n+                       element.removeAttribute(v);\r\n+                   }\r\n+               });\r\n            }\r\n            element.style = '';\r\n            // Add valid style\r"
        },
        {
          "filename": "dist/jsuites.layout.css",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1588,6 +1588,7 @@ section.middle {\n \r\n .jmenu a:hover, .jmenu a.selected {\r\n     text-decoration: underline;\r\n+    font-weight: bold;\r\n }\r\n \r\n .jmenu .title {\r"
        },
        {
          "filename": "dist/jsuites.layout.js",
          "status": "modified",
          "additions": 46,
          "deletions": 35,
          "patch": "@@ -1701,7 +1701,7 @@ jSuites.menu = (function(el, options) {\n                 menu[i].classList.remove('selected');\r\n                 if (menu[i].getAttribute('data-id')) {\r\n                     var state = localStorage.getItem('jmenu-' + menu[i].getAttribute('data-id'));\r\n-                    if (state === null || state == 1) {\r\n+                    if (state == 1) {\r\n                         menu[i].classList.add('selected');\r\n                     }\r\n                 }\r\n@@ -1716,48 +1716,59 @@ jSuites.menu = (function(el, options) {\n         }\r\n     }\r\n \r\n-    obj.select = function(o) {\r\n-        var menu = el.querySelectorAll('nav a');\r\n-        for (var i = 0; i < menu.length; i++) {\r\n-            menu[i].classList.remove('selected');\r\n-        }\r\n-        o.classList.add('selected');\r\n-\r\n-        // Better navigation\r\n-        if (options && options.collapse == true) {\r\n-            if (o.classList.contains('show')) {\r\n-                menu = el.querySelectorAll('nav');\r\n-                for (var i = 0; i < menu.length; i++) {\r\n-                    menu[i].style.display = '';\r\n-                }\r\n-                o.style.display = 'none';\r\n-            } else {\r\n-                menu = el.querySelectorAll('nav');\r\n-                for (var i = 0; i < menu.length; i++) {\r\n-                    menu[i].style.display = 'none';\r\n-                }\r\n+    obj.select = function(o, e) {\r\n+        if (o.tagName == 'NAV') {\r\n+            var m = el.querySelectorAll('nav');\r\n+            for (var i = 0; i < m.length; i++) {\r\n+                m[i].style.display = 'none';\r\n+            }\r\n+            o.style.display = '';\r\n+            o.classList.add('selected');\r\n+        } else {\r\n+            var m = el.querySelectorAll('nav a');\r\n+            for (var i = 0; i < m.length; i++) {\r\n+                m[i].classList.remove('selected');\r\n+            }\r\n+            o.classList.add('selected');\r\n+\r\n+            // Better navigation\r\n+            if (options && options.collapse == true) {\r\n+                if (o.classList.contains('show')) {\r\n+                    m = el.querySelectorAll('nav');\r\n+                    for (var i = 0; i < m.length; i++) {\r\n+                        m[i].style.display = '';\r\n+                    }\r\n+                    o.style.display = 'none';\r\n+                } else {\r\n+                    m = el.querySelectorAll('nav');\r\n+                    for (var i = 0; i < m.length; i++) {\r\n+                        m[i].style.display = 'none';\r\n+                    }\r\n \r\n-                menu = el.querySelector('.show');\r\n-                if (menu) {\r\n-                    menu.style.display = 'block';\r\n-                }\r\n+                    m = el.querySelector('.show');\r\n+                    if (m) {\r\n+                        m.style.display = 'block';\r\n+                    }\r\n \r\n-                menu = jSuites.findElement(o.parentNode, 'selected');\r\n-                if (menu) {\r\n-                    menu.style.display = '';\r\n+                    m = jSuites.findElement(o.parentNode, 'selected');\r\n+                    if (m) {\r\n+                        m.style.display = '';\r\n+                    }\r\n                 }\r\n             }\r\n         }\r\n \r\n+        if (options && typeof(options.onclick) == 'function') {\r\n+            options.onclick(obj, e);\r\n+        }\r\n+\r\n         // Close menu if is oped\r\n         if (jSuites.getWindowWidth() < 800) {\r\n-            setTimeout(function() {\r\n-                obj.hide();\r\n-            }, 0);\r\n+            obj.hide();\r\n         }\r\n     }\r\n \r\n-    var actionDown = function(e) {\r\n+    var action = function(e) {\r\n         if (e.target.tagName == 'H2') {\r\n             if (e.target.parentNode.classList.contains('selected')) {\r\n                 e.target.parentNode.classList.remove('selected');\r\n@@ -1768,14 +1779,14 @@ jSuites.menu = (function(el, options) {\n             }\r\n         } else if (e.target.tagName == 'A') {\r\n             // Mark link as selected\r\n-            obj.select(e.target);\r\n+            obj.select(e.target, e);\r\n         }\r\n     }\r\n \r\n     if ('ontouchstart' in document.documentElement === true) {\r\n-        el.addEventListener('touchstart', actionDown);\r\n+        el.addEventListener('touchsend', action);\r\n     } else {\r\n-        el.addEventListener('mousedown', actionDown);\r\n+        el.addEventListener('mouseup', action);\r\n     }\r\n \r\n     // Add close action\r"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -19,7 +19,7 @@\n         \"javascript plugins\"\r\n     ],\r\n     \"main\": \"dist/jsuites.js\",\r\n-    \"version\": \"4.9.10\",\r\n+    \"version\": \"4.9.11\",\r\n     \"bugs\": \"https://github.com/jsuites/jsuites/issues\",\r\n     \"homepage\": \"https://github.com/jsuites/jsuites\",\r\n     \"docs\": \"https://jsuites.net\",\r"
        },
        {
          "filename": "src/editor.js",
          "status": "modified",
          "additions": 19,
          "deletions": 5,
          "patch": "@@ -452,6 +452,10 @@ jSuites.editor = (function(el, options) {\n     }\r\n \r\n     obj.addImage = function(src, asSnippet) {\r\n+        if (! src) {\r\n+            src = '';\r\n+        }\r\n+\r\n         if (src.substr(0,4) != 'data' && ! obj.options.remoteParser) {\r\n             console.error('remoteParser not defined in your initialization');\r\n         } else {\r\n@@ -726,6 +730,9 @@ jSuites.editor = (function(el, options) {\n     // Elements to be removed\r\n     var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];\r\n \r\n+    // Valid properties\r\n+    var validProperty = ['width', 'height', 'align', 'border', 'src', 'tabindex'];\r\n+\r\n     // Valid CSS attributes\r\n     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];\r\n \r\n@@ -750,20 +757,27 @@ jSuites.editor = (function(el, options) {\n            }\r\n            // Process image\r\n            if (element.tagName.toUpperCase() == 'IMG') {\r\n-               if (! obj.options.acceptImages) {\r\n+               if (! obj.options.acceptImages || ! element.src) {\r\n                    element.parentNode.removeChild(element);\r\n                } else {\r\n                    // Check if is data\r\n                    element.setAttribute('tabindex', '900');\r\n                    // Check attributes for persistance\r\n                    obj.addImage(element.src);\r\n                }\r\n-           } else {\r\n-               // Remove attributes\r\n-               var numAttributes = element.attributes.length - 1;\r\n+           }\r\n+           // Remove attributes\r\n+           var attr = [];\r\n+           var numAttributes = element.attributes.length - 1;\r\n+           if (numAttributes > 0) {\r\n                for (var i = numAttributes; i >= 0 ; i--) {\r\n-                   element.removeAttribute(element.attributes[i].name);\r\n+                   attr.push(element.attributes[i].name);\r\n                }\r\n+               attr.forEach(function(v) {\r\n+                   if (validProperty.indexOf(v) == -1) {\r\n+                       element.removeAttribute(v);\r\n+                   }\r\n+               });\r\n            }\r\n            element.style = '';\r\n            // Add valid style\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6d4322cc5ba0dc3c70b6adeb1d606cea0db34498",
            "date": "2025-01-11T17:06:57Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "7fae1fa49ffcc80b222dcedb8298f76814aa8021",
            "date": "2025-01-11T14:48:26Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "6bbc8ac5b7505537629844c45380f9ff41a40a48",
            "date": "2025-01-11T12:54:19Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "a6cb3e81e5e11ff6743521229898af25f4c7a4a6",
            "date": "2025-01-11T12:48:28Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "ec5020bd817480fb3179a9a4f8167fae993f2bf9",
            "date": "2025-01-11T12:11:58Z",
            "author_login": "invalid-email-address"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-79",
    "description": "jsuites is an open source collection of common required javascript web components. In affected versions users are subject to cross site scripting (XSS) attacks via clipboard content. jsuites is vulnerable to DOM based XSS if the user can be tricked into copying _anything_ from a malicious and pasting it into the html editor. This is because a part of the clipboard content is directly written to `innerHTML` allowing for javascript injection and thus XSS. Users are advised to update to version 4.9.11 to resolve.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-21T21:15:07.130",
    "last_modified": "2024-11-21T06:25:25.600",
    "fix_date": "2021-09-18T18:31:24Z"
  },
  "references": [
    {
      "url": "https://github.com/jsuites/jsuites/commit/d47a6f4e143188dde2742f4cffd313e1068ad3b3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jsuites/jsuites/commit/fe1d3cc5e339f2f4da8ed1f9f42271fdf9cbd8d2",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jsuites/jsuites/security/advisories/GHSA-qh7x-j4v8-qw5w",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jsuites/jsuites/commit/d47a6f4e143188dde2742f4cffd313e1068ad3b3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jsuites/jsuites/commit/fe1d3cc5e339f2f4da8ed1f9f42271fdf9cbd8d2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jsuites/jsuites/security/advisories/GHSA-qh7x-j4v8-qw5w",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.782154",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jsuites",
    "owner": "jsuites",
    "created_at": "2019-05-08T18:00:48Z",
    "updated_at": "2025-01-14T09:24:34Z",
    "pushed_at": "2025-01-11T17:07:02Z",
    "size": 3987,
    "stars": 494,
    "forks": 68,
    "open_issues": 11,
    "watchers": 494,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 739100,
      "CSS": 136419,
      "HTML": 1046
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:04:46.929254"
  }
}