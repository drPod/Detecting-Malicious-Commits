{
  "cve_id": "CVE-2021-41109",
  "github_data": {
    "repository": "parse-community/parse-server",
    "fix_commit": "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
    "related_commits": [
      "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
      "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559"
    ],
    "patch_url": "https://github.com/parse-community/parse-server/commit/4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559.patch",
    "fix_commit_details": {
      "sha": "4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
      "commit_date": "2021-09-30T02:52:12Z",
      "author": {
        "login": "dblythy",
        "type": "User",
        "stats": {
          "total_commits": 130,
          "average_weekly_commits": 0.2771855010660981,
          "total_additions": 40139,
          "total_deletions": 9346,
          "weeks_active": 62
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7pr3-p5fm-8r9x",
        "length": 105,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 127,
        "additions": 121,
        "deletions": 6
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 10,
          "deletions": 4,
          "patch": "@@ -1,5 +1,11 @@\n # Parse Server Changelog\n \n+## 4.10.4\n+[Full Changelog](https://github.com/parse-community/parse-server/compare/4.10.3...4.10.4)\n+\n+### Security Fixes\n+- Strip out sessionToken when LiveQuery is used on Parse.User (Daniel Blyth) [GHSA-7pr3-p5fm-8r9x](https://github.com/parse-community/parse-server/security/advisories/GHSA-7pr3-p5fm-8r9x)\n+\n # 4.10.3\n \n ## Security Fixes\n@@ -24,15 +30,15 @@\n \n *Versions >4.5.2 and <4.10.0 are skipped.*\n \n-> \u26a0\ufe0f A security incident caused a number of incorrect version tags to be pushed to the Parse Server repository. These version tags linked to a personal fork of a contributor who had write access to the repository. The code to which these tags linked has not been reviewed or approved by Parse Platform. Even though no releases were published with these incorrect versions, it was possible to define a Parse Server dependency that pointed to these version tags, for example if you defined this dependency: \n+> \u26a0\ufe0f A security incident caused a number of incorrect version tags to be pushed to the Parse Server repository. These version tags linked to a personal fork of a contributor who had write access to the repository. The code to which these tags linked has not been reviewed or approved by Parse Platform. Even though no releases were published with these incorrect versions, it was possible to define a Parse Server dependency that pointed to these version tags, for example if you defined this dependency:\n > ```js\n > \"parse-server\": \"git@github.com:parse-community/parse-server.git#4.9.3\"\n > ```\n-> \n+>\n > We have since deleted the incorrect version tags, but they may still show up if your personal fork on GitHub or locally. We do not know when these tags have been pushed to the Parse Server repository, but we first became aware of this issue on July 21, 2021. We are not aware of any malicious code or concerns related to privacy, security or legality (e.g. proprietary code). However, it has been reported that some functionality does not work as expected and the introduction of security vulnerabilities cannot be ruled out.\n >\n-> You may be also affected if you used the Bitnami image for Parse Server. Bitnami picked up the incorrect version tag `4.9.3` and published a new Bitnami image for Parse Server. \n-> \n+> You may be also affected if you used the Bitnami image for Parse Server. Bitnami picked up the incorrect version tag `4.9.3` and published a new Bitnami image for Parse Server.\n+>\n >**If you are using any of the affected versions, we urgently recommend to upgrade to version `4.10.0`.**\n \n # 4.5.2"
        },
        {
          "filename": "package-lock.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"parse-server\",\n-  \"version\": \"4.10.3\",\n+  \"version\": \"4.10.4\",\n   \"lockfileVersion\": 1,\n   \"requires\": true,\n   \"dependencies\": {"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"parse-server\",\n-  \"version\": \"4.10.3\",\n+  \"version\": \"4.10.4\",\n   \"description\": \"An express module providing a Parse-compatible API server\",\n   \"main\": \"lib/index.js\",\n   \"repository\": {"
        },
        {
          "filename": "spec/ParseLiveQuery.spec.js",
          "status": "modified",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -928,6 +928,52 @@ describe('ParseLiveQuery', function () {\n     done();\n   });\n \n+  it('should strip out session token in LiveQuery', async () => {\n+    await reconfigureServer({\n+      liveQuery: { classNames: ['_User'] },\n+      startLiveQueryServer: true,\n+      verbose: false,\n+      silent: true,\n+    });\n+\n+    const user = new Parse.User();\n+    user.setUsername('username');\n+    user.setPassword('password');\n+    user.set('foo', 'bar');\n+\n+    const query = new Parse.Query(Parse.User);\n+    query.equalTo('foo', 'bar');\n+    const subscription = await query.subscribe();\n+\n+    const events = ['create', 'update', 'enter', 'leave', 'delete'];\n+    const response = (obj, prev) => {\n+      expect(obj.get('sessionToken')).toBeUndefined();\n+      expect(obj.sessionToken).toBeUndefined();\n+      expect(prev?.sessionToken).toBeUndefined();\n+      if (prev && prev.get) {\n+        expect(prev.get('sessionToken')).toBeUndefined();\n+      }\n+    };\n+    const calls = {};\n+    for (const key of events) {\n+      calls[key] = response;\n+      spyOn(calls, key).and.callThrough();\n+      subscription.on(key, calls[key]);\n+    }\n+    await user.signUp();\n+    user.unset('foo');\n+    await user.save();\n+    user.set('foo', 'bar');\n+    await user.save();\n+    user.set('yolo', 'bar');\n+    await user.save();\n+    await user.destroy();\n+    await new Promise(resolve => process.nextTick(resolve));\n+    for (const key of events) {\n+      expect(calls[key]).toHaveBeenCalled();\n+    }\n+  });\n+\n   afterEach(async function (done) {\n     const client = await Parse.CoreManager.getLiveQueryController().getDefaultLiveQueryClient();\n     client.close();"
        },
        {
          "filename": "spec/ParseUser.spec.js",
          "status": "modified",
          "additions": 45,
          "deletions": 0,
          "patch": "@@ -3929,6 +3929,51 @@ describe('Parse.User testing', () => {\n     }\n   });\n \n+  it('should strip out authdata in LiveQuery', async () => {\n+    const provider = getMockFacebookProvider();\n+    Parse.User._registerAuthenticationProvider(provider);\n+\n+    await reconfigureServer({\n+      liveQuery: { classNames: ['_User'] },\n+      startLiveQueryServer: true,\n+      verbose: false,\n+      silent: true,\n+    });\n+\n+    const query = new Parse.Query(Parse.User);\n+    query.doesNotExist('foo');\n+    const subscription = await query.subscribe();\n+\n+    const events = ['create', 'update', 'enter', 'leave', 'delete'];\n+    const response = (obj, prev) => {\n+      expect(obj.get('authData')).toBeUndefined();\n+      expect(obj.authData).toBeUndefined();\n+      expect(prev?.authData).toBeUndefined();\n+      if (prev && prev.get) {\n+        expect(prev.get('authData')).toBeUndefined();\n+      }\n+    };\n+    const calls = {};\n+    for (const key of events) {\n+      calls[key] = response;\n+      spyOn(calls, key).and.callThrough();\n+      subscription.on(key, calls[key]);\n+    }\n+    const user = await Parse.User._logInWith('facebook');\n+\n+    user.set('foo', 'bar');\n+    await user.save();\n+    user.unset('foo');\n+    await user.save();\n+    user.set('yolo', 'bar');\n+    await user.save();\n+    await user.destroy();\n+    await new Promise(resolve => process.nextTick(resolve));\n+    for (const key of events) {\n+      expect(calls[key]).toHaveBeenCalled();\n+    }\n+  });\n+\n   describe('issue #4897', () => {\n     it_only_db('mongo')('should be able to login with a legacy user (no ACL)', async () => {\n       // This issue is a side effect of the locked users and legacy users which don't have ACL's"
        },
        {
          "filename": "src/LiveQuery/ParseLiveQueryServer.js",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -179,6 +179,14 @@ class ParseLiveQueryServer {\n                 deletedParseObject = res.object.toJSON();\n                 deletedParseObject.className = className;\n               }\n+              if (\n+                (deletedParseObject.className === '_User' ||\n+                  deletedParseObject.className === '_Session') &&\n+                !client.hasMasterKey\n+              ) {\n+                delete deletedParseObject.sessionToken;\n+                delete deletedParseObject.authData;\n+              }\n               client.pushDelete(requestId, deletedParseObject);\n             })\n             .catch(error => {\n@@ -315,6 +323,16 @@ class ParseLiveQueryServer {\n                   originalParseObject = res.original.toJSON();\n                   originalParseObject.className = res.original.className || className;\n                 }\n+                if (\n+                  (currentParseObject.className === '_User' ||\n+                    currentParseObject.className === '_Session') &&\n+                  !client.hasMasterKey\n+                ) {\n+                  delete currentParseObject.sessionToken;\n+                  delete originalParseObject?.sessionToken;\n+                  delete currentParseObject.authData;\n+                  delete originalParseObject?.authData;\n+                }\n                 const functionName =\n                   'push' + message.event.charAt(0).toUpperCase() + message.event.slice(1);\n                 if (client[functionName]) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "28b3edee4e76679dedee9fe115283110fd952678",
            "date": "2025-01-13T15:19:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "1b61cab81c4206ce135f1239f17a53dabbc698d7",
            "date": "2025-01-13T14:47:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "a0efad88d2177f027ee3709beba13282a6ca9d35",
            "date": "2025-01-12T20:55:48Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bb1daafef0f5f0b6a9c9b33c9d7e0529fd49afbf",
            "date": "2025-01-12T18:53:43Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "3f0f29b4dfaf6038cb0f0dd205cfa8e1cf92c0c4",
            "date": "2025-01-12T14:04:34Z",
            "author_login": "semantic-release-bot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Prior to version 4.10.4, for regular (non-LiveQuery) queries, the session token is removed from the response, but for LiveQuery payloads it is currently not. If a user has a LiveQuery subscription on the `Parse.User` class, all session tokens created during user sign-ups will be broadcast as part of the LiveQuery payload. A patch in version 4.10.4 removes session tokens from the LiveQuery payload. As a workaround, set `user.acl(new Parse.ACL())` in a beforeSave trigger to make the user private already on sign-up.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-09-30T15:15:07.730",
    "last_modified": "2024-11-21T06:25:29.090",
    "fix_date": "2021-09-30T02:52:12Z"
  },
  "references": [
    {
      "url": "https://github.com/parse-community/parse-server/commit/4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.10.4",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-7pr3-p5fm-8r9x",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/commit/4ac4b7f71002ed4fbedbb901db1f6ed1e9ac5559",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/releases/tag/4.10.4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-7pr3-p5fm-8r9x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.797178",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-server",
    "owner": "parse-community",
    "created_at": "2016-01-28T18:29:14Z",
    "updated_at": "2025-01-13T16:51:06Z",
    "pushed_at": "2025-01-14T11:16:34Z",
    "size": 73208,
    "stars": 20994,
    "forks": 4781,
    "open_issues": 474,
    "watchers": 20994,
    "has_security_policy": false,
    "default_branch": "alpha",
    "protected_branches": [
      "alpha",
      "beta",
      "release",
      "release-4.x.x",
      "release-5.x.x",
      "release-6.x.x",
      "release-7.x.x"
    ],
    "languages": {
      "JavaScript": 4248231,
      "HTML": 25876,
      "Shell": 7825,
      "Handlebars": 2113,
      "Dockerfile": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:26:59.166995"
  }
}