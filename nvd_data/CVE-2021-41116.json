{
  "cve_id": "CVE-2021-41116",
  "github_data": {
    "repository": "composer/composer",
    "fix_commit": "ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa",
    "related_commits": [
      "ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa",
      "ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa"
    ],
    "patch_url": "https://github.com/composer/composer/commit/ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa.patch",
    "fix_commit_details": {
      "sha": "ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa",
      "commit_date": "2021-10-05T07:28:42Z",
      "author": {
        "login": "Seldaek",
        "type": "User",
        "stats": {
          "total_commits": 7365,
          "average_weekly_commits": 10.229166666666666,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 553
        }
      },
      "commit_message": {
        "title": "Fix escaping issues on Windows which could lead to command injection, fixes GHSA-frqg-7g38-6gcf",
        "length": 95,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 58,
        "additions": 22,
        "deletions": 36
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,3 +1,7 @@\n+### [1.10.23] 2021-10-05\n+\n+  * Security: Fixed command injection vulnerability on Windows (GHSA-frqg-7g38-6gcf / CVE-2021-41116)\n+\n ### [1.10.22] 2021-04-27\n \n   * Security: Fixed command injection vulnerability in HgDriver/HgDownloader and hardened other VCS drivers and downloaders (GHSA-h5h8-pc6h-jvvx / CVE-2021-29472)\n@@ -938,6 +942,7 @@\n \n   * Initial release\n \n+[1.10.23]: https://github.com/composer/composer/compare/1.10.22...1.10.23\n [1.10.22]: https://github.com/composer/composer/compare/1.10.21...1.10.22\n [1.10.21]: https://github.com/composer/composer/compare/1.10.20...1.10.21\n [1.10.20]: https://github.com/composer/composer/compare/1.10.19...1.10.20"
        },
        {
          "filename": "src/Composer/Command/HomeCommand.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -129,7 +129,7 @@ private function openBrowser($url)\n \n         $process = new ProcessExecutor($this->getIO());\n         if (Platform::isWindows()) {\n-            return $process->execute('start \"web\" explorer \"' . $url . '\"', $output);\n+            return $process->execute('start \"web\" explorer ' . $url, $output);\n         }\n \n         $linux = $process->execute('which xdg-open', $output);"
        },
        {
          "filename": "src/Composer/Util/ProcessExecutor.php",
          "status": "modified",
          "additions": 14,
          "deletions": 33,
          "patch": "@@ -155,48 +155,29 @@ public static function escape($argument)\n     }\n \n     /**\n-     * Copy of ProcessUtils::escapeArgument() that is deprecated in Symfony 3.3 and removed in Symfony 4.\n+     * Copy of Symfony's Process::escapeArgument() which is private\n      *\n      * @param string $argument\n      *\n      * @return string\n      */\n     private static function escapeArgument($argument)\n     {\n-        //Fix for PHP bug #43784 escapeshellarg removes % from given string\n-        //Fix for PHP bug #49446 escapeshellarg doesn't work on Windows\n-        //@see https://bugs.php.net/bug.php?id=43784\n-        //@see https://bugs.php.net/bug.php?id=49446\n-        if ('\\\\' === DIRECTORY_SEPARATOR) {\n-            if ((string) $argument === '') {\n-                return escapeshellarg($argument);\n-            }\n-\n-            $escapedArgument = '';\n-            $quote = false;\n-            foreach (preg_split('/(\")/', $argument, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE) as $part) {\n-                if ('\"' === $part) {\n-                    $escapedArgument .= '\\\\\"';\n-                } elseif (self::isSurroundedBy($part, '%')) {\n-                    // Avoid environment variable expansion\n-                    $escapedArgument .= '^%\"'.substr($part, 1, -1).'\"^%';\n-                } else {\n-                    // escape trailing backslash\n-                    if ('\\\\' === substr($part, -1)) {\n-                        $part .= '\\\\';\n-                    }\n-                    $quote = true;\n-                    $escapedArgument .= $part;\n-                }\n-            }\n-            if ($quote) {\n-                $escapedArgument = '\"'.$escapedArgument.'\"';\n-            }\n-\n-            return $escapedArgument;\n+        if ('' === $argument || null === $argument) {\n+            return '\"\"';\n+        }\n+        if ('\\\\' !== \\DIRECTORY_SEPARATOR) {\n+            return \"'\".str_replace(\"'\", \"'\\\\''\", $argument).\"'\";\n+        }\n+        if (false !== strpos($argument, \"\\0\")) {\n+            $argument = str_replace(\"\\0\", '?', $argument);\n+        }\n+        if (!preg_match('/[\\/()%!^\"<>&|\\s]/', $argument)) {\n+            return $argument;\n         }\n+        $argument = preg_replace('/(\\\\\\\\+)$/', '$1$1', $argument);\n \n-        return \"'\".str_replace(\"'\", \"'\\\\''\", $argument).\"'\";\n+        return '\"'.str_replace(array('\"', '^', '%', '!', \"\\n\"), array('\"\"', '\"^^\"', '\"^%\"', '\"^!\"', '!LF!'), $argument).'\"';\n     }\n \n     private static function isSurroundedBy($arg, $char)"
        },
        {
          "filename": "tests/Composer/Test/Downloader/GitDownloaderTest.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -524,7 +524,7 @@ public function testUpdateThrowsRuntimeExceptionIfGitCommandFails()\n \n     public function testUpdateDoesntThrowsRuntimeExceptionIfGitCommandFailsAtFirstButIsAbleToRecover()\n     {\n-        $expectedFirstGitUpdateCommand = $this->winCompat(\"(git remote set-url composer -- '' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)) && git remote set-url composer -- ''\");\n+        $expectedFirstGitUpdateCommand = $this->winCompat(\"(git remote set-url composer -- \\\"\\\" && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)) && git remote set-url composer -- \\\"\\\"\");\n         $expectedSecondGitUpdateCommand = $this->winCompat(\"(git remote set-url composer -- 'https://github.com/composer/composer' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)) && git remote set-url composer -- 'https://github.com/composer/composer'\");\n \n         $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();"
        },
        {
          "filename": "tests/Composer/Test/Util/SvnTest.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,7 +47,7 @@ public function urlProvider()\n         return array(\n             array('http://till:test@svn.example.org/', $this->getCmd(\" --username 'till' --password 'test' \")),\n             array('http://svn.apache.org/', ''),\n-            array('svn://johndoe@example.org', $this->getCmd(\" --username 'johndoe' --password '' \")),\n+            array('svn://johndoe@example.org', $this->getCmd(\" --username 'johndoe' --password \\\"\\\" \")),\n         );\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f5e7a8390d700d09c87ae2ed79d5aea1e4153cd3",
            "date": "2025-01-10T15:46:38Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "924527cda6a17b18718c65cfb8f08ba054920619",
            "date": "2025-01-10T15:42:50Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "7b261bdf53220763167da6043b6c5d491839e62a",
            "date": "2025-01-10T15:34:19Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "2645d080b5dde3c90514fd51e174c1efcd397dcd",
            "date": "2025-01-10T15:32:39Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "efe91c76e8b16acc833da628ff1bb6de8512ee87",
            "date": "2025-01-10T15:29:15Z",
            "author_login": "Seldaek"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-77",
    "description": "Composer is an open source dependency manager for the PHP language. In affected versions windows users running Composer to install untrusted dependencies are subject to command injection and should upgrade their composer version. Other OSs and WSL are not affected. The issue has been resolved in composer versions 1.10.23 and 2.1.9. There are no workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-05T18:15:08.407",
    "last_modified": "2024-11-21T06:25:30.167",
    "fix_date": "2021-10-05T07:28:42Z"
  },
  "references": [
    {
      "url": "https://github.com/composer/composer/commit/ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/composer/composer/security/advisories/GHSA-frqg-7g38-6gcf",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.sonarsource.com/blog/securing-developer-tools-package-managers/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/composer/composer/commit/ca5e2f8d505fd3bfac6f7c85b82f2740becbc0aa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/composer/composer/security/advisories/GHSA-frqg-7g38-6gcf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.sonarsource.com/blog/securing-developer-tools-package-managers/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:07.812588",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "composer",
    "owner": "composer",
    "created_at": "2011-06-08T08:53:00Z",
    "updated_at": "2025-01-14T12:42:23Z",
    "pushed_at": "2025-01-10T15:46:38Z",
    "size": 27731,
    "stars": 28743,
    "forks": 4576,
    "open_issues": 129,
    "watchers": 28743,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 4028817
    },
    "commit_activity": {
      "total_commits_last_year": 360,
      "avg_commits_per_week": 6.923076923076923,
      "days_active_last_year": 91
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:05:14.287443"
  }
}