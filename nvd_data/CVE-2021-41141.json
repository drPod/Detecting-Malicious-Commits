{
  "cve_id": "CVE-2021-41141",
  "github_data": {
    "repository": "pjsip/pjproject",
    "fix_commit": "1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196",
    "related_commits": [
      "1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196",
      "1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196"
    ],
    "patch_url": "https://github.com/pjsip/pjproject/commit/1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196.patch",
    "fix_commit_details": {
      "sha": "1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196",
      "commit_date": "2022-01-04T08:58:02Z",
      "author": {
        "login": "trengginas",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-8fmx-hqw7-6gmc",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 36,
        "additions": 30,
        "deletions": 6
      },
      "files": [
        {
          "filename": "pjmedia/src/pjmedia-codec/and_aud_mediacodec.cpp",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -754,6 +754,7 @@ static pj_status_t and_media_alloc_codec(pjmedia_codec_factory *factory,\n     }\n     if (idx == -1) {\n \t*p_codec = NULL;\n+\tpj_mutex_unlock(and_media_factory.mutex);\n \treturn PJMEDIA_CODEC_EFAILED;\n     }\n "
        },
        {
          "filename": "pjmedia/src/pjmedia-codec/ipp_codecs.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -939,6 +939,7 @@ static pj_status_t ipp_alloc_codec( pjmedia_codec_factory *factory,\n     }\n     if (idx == -1) {\n \t*p_codec = NULL;\n+\tpj_mutex_unlock(ipp_factory.mutex);\n \treturn PJMEDIA_CODEC_EFAILED;\n     }\n "
        },
        {
          "filename": "pjmedia/src/pjmedia-codec/opus.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -723,6 +723,7 @@ static pj_status_t  codec_open( pjmedia_codec *codec,\n \t\t\t    OPUS_APPLICATION_VOIP);\n     if (err != OPUS_OK) {\n \tPJ_LOG(2, (THIS_FILE, \"Unable to create encoder\"));\n+\tpj_mutex_unlock (opus_data->mutex);\n \treturn PJMEDIA_CODEC_EFAILED;\n     }\n     \n@@ -767,6 +768,7 @@ static pj_status_t  codec_open( pjmedia_codec *codec,\n \t\t\t     attr->info.channel_cnt);\n     if (err != OPUS_OK) {\n \tPJ_LOG(2, (THIS_FILE, \"Unable to initialize decoder\"));\n+\tpj_mutex_unlock (opus_data->mutex);\n \treturn PJMEDIA_CODEC_EFAILED;\n     }\n "
        },
        {
          "filename": "pjmedia/src/pjmedia-codec/passthrough.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -625,6 +625,7 @@ static pj_status_t alloc_codec( pjmedia_codec_factory *factory,\n     }\n     if (idx == -1) {\n \t*p_codec = NULL;\n+\tpj_mutex_unlock(codec_factory.mutex);\n \treturn PJMEDIA_CODEC_EUNSUP;\n     }\n "
        },
        {
          "filename": "pjmedia/src/pjmedia-codec/speex_codec.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -379,6 +379,7 @@ PJ_DEF(pj_status_t) pjmedia_codec_speex_deinit(void)\n     if (!codec_mgr) {\n \tpj_pool_release(spx_factory.pool);\n \tspx_factory.pool = NULL;\n+\tpj_mutex_unlock(spx_factory.mutex);\n \treturn PJ_EINVALIDOP;\n     }\n "
        },
        {
          "filename": "pjmedia/src/pjmedia/vid_conf.c",
          "status": "modified",
          "additions": 24,
          "deletions": 6,
          "patch": "@@ -304,6 +304,7 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_add_port( pjmedia_vid_conf *vid_conf,\n \t    PJ_LOG(4,(THIS_FILE, \"pjmedia_vid_conf_add_port(): \"\n \t\t\t\t \"unrecognized format %04X\",\n \t\t\t\t port->info.fmt.id));\n+\t    pj_mutex_unlock(vid_conf->mutex);\n \t    return PJMEDIA_EBADFMT;\n \t}\n \n@@ -314,6 +315,7 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_add_port( pjmedia_vid_conf *vid_conf,\n \t    PJ_LOG(4,(THIS_FILE, \"pjmedia_vid_conf_add_port(): \"\n \t\t\t\t \"Failed to apply format %04X\",\n \t\t\t\t port->info.fmt.id));\n+\t    pj_mutex_unlock(vid_conf->mutex);\n \t    return status;\n \t}\n \tif (port->put_frame) {\n@@ -331,28 +333,41 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_add_port( pjmedia_vid_conf *vid_conf,\n \t\t\t    pj_pool_zalloc(pool,\n \t\t\t\t\t   vid_conf->opt.max_slot_cnt *\n \t\t\t\t\t   sizeof(unsigned));\n-    PJ_ASSERT_RETURN(cport->listener_slots, PJ_ENOMEM);\n+    if (!cport->listener_slots) {\t\n+\tpj_mutex_unlock(vid_conf->mutex);\n+\treturn PJ_ENOMEM;\n+    }\n \n     /* Create transmitter array */\n     cport->transmitter_slots = (unsigned*)\n \t\t\t       pj_pool_zalloc(pool,\n \t\t\t\t\t      vid_conf->opt.max_slot_cnt *\n-\t\t\t\t\t      sizeof(unsigned));\n-    PJ_ASSERT_RETURN(cport->transmitter_slots, PJ_ENOMEM);\n+\t\t\t\t\t      sizeof(unsigned));    \n+    if (!cport->transmitter_slots) {\n+\tpj_mutex_unlock(vid_conf->mutex);\n+\treturn PJ_ENOMEM;\n+    }\n \n     /* Create pointer-to-render_state array */\n     cport->render_states = (render_state**)\n \t\t\t   pj_pool_zalloc(pool,\n \t\t\t\t\t  vid_conf->opt.max_slot_cnt *\n \t\t\t\t\t  sizeof(render_state*));\n-    PJ_ASSERT_RETURN(cport->render_states, PJ_ENOMEM);\n+\n+    if (!cport->render_states) {\n+\tpj_mutex_unlock(vid_conf->mutex);\n+\treturn PJ_ENOMEM;\n+    }\n \n     /* Create pointer-to-render-pool array */\n     cport->render_pool = (pj_pool_t**)\n \t\t\t pj_pool_zalloc(pool,\n \t\t\t\t\tvid_conf->opt.max_slot_cnt *\n-\t\t\t\t\tsizeof(pj_pool_t*));\n-    PJ_ASSERT_RETURN(cport->render_pool, PJ_ENOMEM);\n+\t\t\t\t\tsizeof(pj_pool_t*));    \n+    if (!cport->render_pool) {\n+\tpj_mutex_unlock(vid_conf->mutex);\n+\treturn PJ_ENOMEM;\n+    }\n \n     /* Register the conf port. */\n     vid_conf->ports[index] = cport;\n@@ -420,6 +435,7 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_remove_port( pjmedia_vid_conf *vid_conf,\n \tstatus = pjmedia_clock_stop(vid_conf->clock);\n \tif (status != PJ_SUCCESS) {\n \t    PJ_PERROR(4, (THIS_FILE, status, \"Failed to stop clock\"));\n+\t    pj_mutex_unlock(vid_conf->mutex);\n \t    return status;\n \t}\n     }\n@@ -584,6 +600,7 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_connect_port(\n \t    status = pjmedia_clock_start(vid_conf->clock);\n \t    if (status != PJ_SUCCESS) {\n \t\tPJ_PERROR(4, (THIS_FILE, status, \"Failed to start clock\"));\n+\t\tpj_mutex_unlock(vid_conf->mutex);\n \t\treturn status;\n \t    }\n \t}\n@@ -673,6 +690,7 @@ PJ_DEF(pj_status_t) pjmedia_vid_conf_disconnect_port(\n \t    status = pjmedia_clock_stop(vid_conf->clock);\n \t    if (status != PJ_SUCCESS) {\n \t\tPJ_PERROR(4, (THIS_FILE, status, \"Failed to stop clock\"));\n+\t\tpj_mutex_unlock(vid_conf->mutex);\n \t\treturn status;\n \t    }\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d8795bab62d6f99303b587f9d21d7e53cf2e5b10",
            "date": "2025-01-14T02:17:11Z",
            "author_login": "sauwming"
          },
          {
            "sha": "90293ccc52ea16c5d0e2f5c81768a59b4fc10481",
            "date": "2025-01-13T13:47:33Z",
            "author_login": "sauwming"
          },
          {
            "sha": "b955e8f925c3a932d07fe6d21b23ef33703b0ab8",
            "date": "2025-01-13T08:00:34Z",
            "author_login": "sauwming"
          },
          {
            "sha": "2d4b94a74e2738a174aa7c4cc2fe022620b67132",
            "date": "2025-01-10T09:49:42Z",
            "author_login": "bennylp"
          },
          {
            "sha": "6853491ade9b816b948c09ffe87c9e3aad5a5719",
            "date": "2025-01-10T03:58:44Z",
            "author_login": "nanangizz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-667",
    "description": "PJSIP is a free and open source multimedia communication library written in the C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In various parts of PJSIP, when error/failure occurs, it is found that the function returns without releasing the currently held locks. This could result in a system deadlock, which cause a denial of service for the users. No release has yet been made which contains the linked fix commit. All versions up to an including 2.11.1 are affected. Users may need to manually apply the patch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-01-04T19:15:14.687",
    "last_modified": "2024-11-21T06:25:34.640",
    "fix_date": "2022-01-04T08:58:02Z"
  },
  "references": [
    {
      "url": "https://github.com/pjsip/pjproject/commit/1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/security/advisories/GHSA-8fmx-hqw7-6gmc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/03/msg00035.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-37",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/commit/1aa2c0e0fb60a1b0bf793e0d834073ffe50fb196",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/security/advisories/GHSA-8fmx-hqw7-6gmc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/03/msg00035.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-37",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.045622",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pjproject",
    "owner": "pjsip",
    "created_at": "2016-01-24T05:00:33Z",
    "updated_at": "2025-01-14T02:17:17Z",
    "pushed_at": "2025-01-14T02:17:16Z",
    "size": 45263,
    "stars": 2158,
    "forks": 806,
    "open_issues": 9,
    "watchers": 2158,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 15266807,
      "C++": 1658301,
      "Python": 553465,
      "Shell": 394887,
      "Objective-C": 326996,
      "C#": 141563,
      "Makefile": 115036,
      "Java": 114622,
      "Mathematica": 86105,
      "SWIG": 41289,
      "Swift": 38034,
      "CSS": 21213,
      "Kotlin": 17696,
      "Rust": 4860,
      "Objective-C++": 3801,
      "HTML": 3320,
      "QMake": 3180,
      "Batchfile": 1805,
      "QML": 1121,
      "Pan": 288,
      "Prolog": 25
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:52:01.488842"
  }
}