{
  "cve_id": "CVE-2021-41146",
  "github_data": {
    "repository": "qutebrowser/qutebrowser",
    "fix_commit": "8f46ba3f6dc7b18375f7aa63c48a1fe461190430",
    "related_commits": [
      "8f46ba3f6dc7b18375f7aa63c48a1fe461190430",
      "8f46ba3f6dc7b18375f7aa63c48a1fe461190430"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "8f46ba3f6dc7b18375f7aa63c48a1fe461190430",
      "commit_date": "2021-10-16T20:14:20Z",
      "author": {
        "login": "The-Compiler",
        "type": "User",
        "stats": {
          "total_commits": 18350,
          "average_weekly_commits": 31.52920962199313,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 546
        }
      },
      "commit_message": {
        "title": "CVE-2021-41146: Add --untrusted-args to avoid argument injection",
        "length": 4799,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 89,
        "additions": 87,
        "deletions": 2
      },
      "files": [
        {
          "filename": "misc/nsis/install.nsh",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -351,7 +351,7 @@ Section \"Register with Windows\" SectionWindowsRegister\n     !insertmacro UpdateRegDWORD SHCTX \"SOFTWARE\\Classes\\$2\" \"EditFlags\" 0x00000002\n     !insertmacro UpdateRegStr SHCTX \"SOFTWARE\\Classes\\$2\\DefaultIcon\" \"\" \"$1,0\"\n     !insertmacro UpdateRegStr SHCTX \"SOFTWARE\\Classes\\$2\\shell\" \"\" \"open\"\n-    !insertmacro UpdateRegStr SHCTX \"SOFTWARE\\Classes\\$2\\shell\\open\\command\" \"\" \"$\\\"$1$\\\" $\\\"%1$\\\"\"\n+    !insertmacro UpdateRegStr SHCTX \"SOFTWARE\\Classes\\$2\\shell\\open\\command\" \"\" \"$\\\"$1$\\\" --untrusted-args $\\\"%1$\\\"\"\n     !insertmacro UpdateRegStr SHCTX \"SOFTWARE\\Classes\\$2\\shell\\open\\ddeexec\" \"\" \"\"\n     StrCmp $2 \"${PRODUCT_NAME}HTML\" 0 +4\n     StrCpy $2 \"${PRODUCT_NAME}URL\""
        },
        {
          "filename": "misc/org.qutebrowser.qutebrowser.desktop",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -45,7 +45,7 @@ Comment[it]= Un browser web vim-like utilizzabile da tastiera basato su PyQt5\n Icon=qutebrowser\n Type=Application\n Categories=Network;WebBrowser;\n-Exec=qutebrowser %u\n+Exec=qutebrowser --untrusted-args %u\n Terminal=false\n StartupNotify=true\n MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/qute;"
        },
        {
          "filename": "qutebrowser/qutebrowser.py",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -87,6 +87,11 @@ def get_argparser():\n                         help=\"Set the base name of the desktop entry for this \"\n                         \"application. Used to set the app_id under Wayland. See \"\n                         \"https://doc.qt.io/qt-5/qguiapplication.html#desktopFileName-prop\")\n+    parser.add_argument('--untrusted-args',\n+                        action='store_true',\n+                        help=\"Mark all following arguments as untrusted, which \"\n+                        \"enforces that they are URLs/search terms (and not flags or \"\n+                        \"commands)\")\n \n     parser.add_argument('--json-args', help=argparse.SUPPRESS)\n     parser.add_argument('--temp-basedir-restarted',\n@@ -207,7 +212,27 @@ def _unpack_json_args(args):\n     return argparse.Namespace(**new_args)\n \n \n+def _validate_untrusted_args(argv):\n+    # NOTE: Do not use f-strings here, as this should run with older Python\n+    # versions (so that a proper error can be displayed)\n+    try:\n+        untrusted_idx = argv.index('--untrusted-args')\n+    except ValueError:\n+        return\n+\n+    rest = argv[untrusted_idx + 1:]\n+    if len(rest) > 1:\n+        sys.exit(\n+            \"Found multiple arguments ({}) after --untrusted-args, \"\n+            \"aborting.\".format(' '.join(rest)))\n+\n+    for arg in rest:\n+        if arg.startswith(('-', ':')):\n+            sys.exit(\"Found {} after --untrusted-args, aborting.\".format(arg))\n+\n+\n def main():\n+    _validate_untrusted_args(sys.argv)\n     parser = get_argparser()\n     argv = sys.argv[1:]\n     args = parser.parse_args(argv)"
        },
        {
          "filename": "tests/unit/test_qutebrowser.py",
          "status": "modified",
          "additions": 60,
          "deletions": 0,
          "patch": "@@ -22,6 +22,8 @@\n (Mainly commandline flag parsing)\n \"\"\"\n \n+import re\n+\n import pytest\n \n from qutebrowser import qutebrowser\n@@ -75,3 +77,61 @@ def test_partial(self, parser):\n         # pylint: disable=no-member\n         assert args.debug\n         assert not args.temp_basedir\n+\n+\n+class TestValidateUntrustedArgs:\n+\n+    @pytest.mark.parametrize('args', [\n+        [],\n+        [':nop'],\n+        [':nop', '--untrusted-args'],\n+        [':nop', '--debug', '--untrusted-args'],\n+        [':nop', '--untrusted-args', 'foo'],\n+        ['--debug', '--untrusted-args', 'foo'],\n+        ['foo', '--untrusted-args', 'bar'],\n+    ])\n+    def test_valid(self, args):\n+        qutebrowser._validate_untrusted_args(args)\n+\n+    @pytest.mark.parametrize('args, message', [\n+        (\n+            ['--untrusted-args', '--debug'],\n+            \"Found --debug after --untrusted-args, aborting.\",\n+        ),\n+        (\n+            ['--untrusted-args', ':nop'],\n+            \"Found :nop after --untrusted-args, aborting.\",\n+        ),\n+        (\n+            ['--debug', '--untrusted-args', '--debug'],\n+            \"Found --debug after --untrusted-args, aborting.\",\n+        ),\n+        (\n+            [':nop', '--untrusted-args', '--debug'],\n+            \"Found --debug after --untrusted-args, aborting.\",\n+        ),\n+        (\n+            [':nop', '--untrusted-args', ':nop'],\n+            \"Found :nop after --untrusted-args, aborting.\",\n+        ),\n+        (\n+            [\n+                ':nop',\n+                '--untrusted-args',\n+                ':nop',\n+                '--untrusted-args',\n+                'https://www.example.org',\n+            ],\n+            (\n+                \"Found multiple arguments (:nop --untrusted-args \"\n+                \"https://www.example.org) after --untrusted-args, aborting.\"\n+            )\n+        ),\n+        (\n+            ['--untrusted-args', 'okay1', 'okay2'],\n+            \"Found multiple arguments (okay1 okay2) after --untrusted-args, aborting.\",\n+        ),\n+    ])\n+    def test_invalid(self, args, message):\n+        with pytest.raises(SystemExit, match=re.escape(message)):\n+            qutebrowser._validate_untrusted_args(args)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9b59cd02cbc6b625e629b89bbff9ed5dac4e68a6",
            "date": "2025-01-20T04:20:20Z",
            "author_login": "qutebrowser-bot"
          },
          {
            "sha": "b3090870d332140a41b46c42801a769e8ae3a9b4",
            "date": "2025-01-19T10:56:42Z",
            "author_login": "The-Compiler"
          },
          {
            "sha": "253a818eccee080177847486bdd4040297c45b6f",
            "date": "2025-01-13T04:22:20Z",
            "author_login": "qutebrowser-bot"
          },
          {
            "sha": "0a32d6fef5550c2c0c38073533d36c3f47d6b130",
            "date": "2025-01-09T10:50:34Z",
            "author_login": "The-Compiler"
          },
          {
            "sha": "c5395c23f7033d8884a6b89549fc73e0308711f6",
            "date": "2025-01-09T10:27:40Z",
            "author_login": "The-Compiler"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-77",
    "description": "qutebrowser is an open source keyboard-focused browser with a minimal GUI. Starting with qutebrowser v1.7.0, the Windows installer for qutebrowser registers a `qutebrowserurl:` URL handler. With certain applications, opening a specially crafted `qutebrowserurl:...` URL can lead to execution of qutebrowser commands, which in turn allows arbitrary code execution via commands such as `:spawn` or `:debug-pyeval`. Only Windows installs where qutebrowser is registered as URL handler are affected. The issue has been fixed in qutebrowser v2.4.0. The fix also adds additional hardening for potential similar issues on Linux (by adding the new --untrusted-args flag to the .desktop file), though no such vulnerabilities are known.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-21T18:15:10.303",
    "last_modified": "2024-11-21T06:25:35.507",
    "fix_date": "2021-10-16T20:14:20Z"
  },
  "references": [
    {
      "url": "https://github.com/qutebrowser/qutebrowser/commit/8f46ba3f6dc7b18375f7aa63c48a1fe461190430",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/qutebrowser/qutebrowser/security/advisories/GHSA-vw27-fwjf-5qxm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/qutebrowser/qutebrowser/commit/8f46ba3f6dc7b18375f7aa63c48a1fe461190430",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/qutebrowser/qutebrowser/security/advisories/GHSA-vw27-fwjf-5qxm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.842555",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "qutebrowser",
    "owner": "qutebrowser",
    "created_at": "2014-06-26T14:59:34Z",
    "updated_at": "2025-01-26T02:58:28Z",
    "pushed_at": "2025-01-20T07:25:58Z",
    "size": 63855,
    "stars": 10016,
    "forks": 1016,
    "open_issues": 1235,
    "watchers": 10016,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "v0.11.x",
      "v1.1.x",
      "v1.2.x",
      "v1.3.x",
      "v1.4.x",
      "v1.5.x",
      "v1.6.x",
      "v1.7.x",
      "v1.8.x",
      "v1.9.x",
      "v1.10.x"
    ],
    "languages": {
      "Python": 4059232,
      "JavaScript": 771996,
      "Gherkin": 373139,
      "HTML": 131743,
      "Shell": 50490,
      "NSIS": 41173,
      "CSS": 4753,
      "Jinja": 3137,
      "Batchfile": 2012,
      "Makefile": 1510,
      "C++": 456,
      "QMake": 192
    },
    "commit_activity": {
      "total_commits_last_year": 470,
      "avg_commits_per_week": 9.038461538461538,
      "days_active_last_year": 141
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T08:20:48.185096"
  }
}