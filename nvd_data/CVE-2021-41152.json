{
  "cve_id": "CVE-2021-41152",
  "github_data": {
    "repository": "OpenOLAT/OpenOLAT",
    "fix_commit": "418bb509ffcb0e25ab4390563c6c47f0458583eb",
    "related_commits": [
      "418bb509ffcb0e25ab4390563c6c47f0458583eb",
      "418bb509ffcb0e25ab4390563c6c47f0458583eb"
    ],
    "patch_url": "https://github.com/OpenOLAT/OpenOLAT/commit/418bb509ffcb0e25ab4390563c6c47f0458583eb.patch",
    "fix_commit_details": {
      "sha": "418bb509ffcb0e25ab4390563c6c47f0458583eb",
      "commit_date": "2021-09-06T17:02:57Z",
      "author": {
        "login": "lainsr",
        "type": "User",
        "stats": {
          "total_commits": 9364,
          "average_weekly_commits": 12.933701657458563,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 321
        }
      },
      "commit_message": {
        "title": "OO-5696: validate file selections against current container",
        "length": 59,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 43,
        "additions": 30,
        "deletions": 13
      },
      "files": [
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/FileSelection.java",
          "status": "modified",
          "additions": 23,
          "deletions": 6,
          "patch": "@@ -27,24 +27,29 @@\n package org.olat.core.commons.modules.bc;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n \n import org.olat.core.gui.UserRequest;\n import org.olat.core.util.FileUtils;\n import org.olat.core.util.StringHelper;\n+import org.olat.core.util.vfs.VFSContainer;\n+import org.olat.core.util.vfs.VFSItem;\n \n public class FileSelection {\n \n \t/** HTML form identifier */\n \tpublic static final String FORM_ID = \"paths\";\n \t\n-\tprivate List<String> files = new ArrayList<>();\n-\tprivate String currentContainerRelPath;\n+\tprivate final List<String> files = new ArrayList<>();\n+\tprivate final String currentContainerRelPath;\n+\tprivate final VFSContainer currentContainer;\n \t\n-\tpublic FileSelection(UserRequest ureq, String currentContainerRelPath) {\n+\tpublic FileSelection(UserRequest ureq, VFSContainer currentContainer, String currentContainerRelPath) {\n \t\tif (currentContainerRelPath.equals(\"/\")) currentContainerRelPath = \"\";\n \t\tthis.currentContainerRelPath = currentContainerRelPath;\n+\t\tthis.currentContainer = currentContainer;\n \t\tparse(ureq);\n \t}\n \n@@ -76,8 +81,20 @@ public List<String> getInvalidFileNames() {\n \t */\n \tprivate void parse(UserRequest ureq) {\n \t\tString[] sFiles = ureq.getHttpReq().getParameterValues(FORM_ID);\n-\t\tif (sFiles == null || sFiles.length == 0) return;\n-\t\tfiles = Arrays.asList(sFiles);\n+\t\tif (sFiles == null || sFiles.length == 0) {\n+\t\t\treturn;\n+\t\t}\n+\t\tList<VFSItem> items = currentContainer.getItems();\n+\t\tif(items != null && !items.isEmpty()) {\n+\t\t\tSet<String> itemNames =  items.stream()\n+\t\t\t\t\t.map(VFSItem::getName)\n+\t\t\t\t\t.collect(Collectors.toSet());\n+\t\t\tfor(String sFile:sFiles) {\n+\t\t\t\tif(itemNames.contains(sFile)) {\n+\t\t\t\t\tfiles.add(sFile);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \t}\n \n \t/**"
        },
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/commands/CmdDelete.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -74,7 +74,7 @@ protected CmdDelete(UserRequest ureq, WindowControl wControl) {\n \tpublic Controller execute(FolderComponent fc, UserRequest ureq, WindowControl wContr, Translator trans) {\n \t\tthis.translator = trans;\n \t\tthis.folderComponent = fc;\n-\t\tthis.fileSelection = new FileSelection(ureq, fc.getCurrentContainerPath());\n+\t\tthis.fileSelection = new FileSelection(ureq, fc.getCurrentContainer(), fc.getCurrentContainerPath());\n \n \t\tVFSContainer currentContainer = folderComponent.getCurrentContainer();\n \t\tList<String> lockedFiles = hasLockedFiles(currentContainer, fileSelection);"
        },
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/commands/CmdDownloadZip.java",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -70,15 +70,15 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win\n \t\t\treturn null;\n \t\t}\n \t\n-\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());\n+\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());\n \t\tstatus = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);\n \t\tif(status == FolderCommandStatus.STATUS_FAILED) {\n \t\t\treturn null;\n \t\t}\n \t\t\n \t\tif(selection.getFiles().isEmpty()) {\n \t\t\tstatus = FolderCommandStatus.STATUS_FAILED;\n-\t\t\twControl.setWarning(trans.translate(\"warning.file.selection.empty\"));\n+\t\t\twControl.setWarning(trans.translate(\"warning.file.selection.empty22\"));\n \t\t\treturn null;\n \t\t}\n \t\t"
        },
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/commands/CmdMoveCopy.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -89,7 +89,7 @@ protected CmdMoveCopy(WindowControl wControl, boolean move) {\n \tpublic Controller execute(FolderComponent fc, UserRequest ureq, WindowControl windowControl, Translator trans) {\n \t\tthis.folderComponent = fc;\n \t\tthis.translator = trans;\n-\t\tthis.fileSelection = new FileSelection(ureq, fc.getCurrentContainerPath());\n+\t\tthis.fileSelection = new FileSelection(ureq, fc.getCurrentContainer(), fc.getCurrentContainerPath());\n \t\t\t\t\n \t\tVelocityContainer main = new VelocityContainer(\"mc\", VELOCITY_ROOT + \"/movecopy.html\", translator, this);\n \t\tmain.contextPut(\"fileselection\", fileSelection);"
        },
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/commands/CmdUnzip.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -77,7 +77,7 @@ public CmdUnzip(UserRequest ureq, WindowControl wControl) {\n \t@Override\n \tpublic Controller execute(FolderComponent folderComponent, UserRequest ureq, WindowControl wContr, Translator trans) {\n \t\tthis.translator = trans;\n-\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());\n+\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());\n \t\tVFSContainer currentContainer = folderComponent.getCurrentContainer();\n \t\tif (currentContainer.canWrite() != VFSConstants.YES)\n \t\t\tthrow new AssertException(\"Cannot unzip to folder. Writing denied.\");"
        },
        {
          "filename": "src/main/java/org/olat/core/commons/modules/bc/commands/CmdZip.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -89,7 +89,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win\n \t\t\treturn null;\n \t\t}\n \t\n-\t\tselection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());\n+\t\tselection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());\n \t\tstatus = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);\n \t\tif(status == FolderCommandStatus.STATUS_FAILED) {\n \t\t\treturn null;"
        },
        {
          "filename": "src/main/java/org/olat/core/util/mail/ui/SendDocumentsByEMailController.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -189,7 +189,7 @@ public Controller execute(FolderComponent folderComponent, UserRequest ureq, Win\n \t\tif (status == FolderCommandStatus.STATUS_FAILED) {\n \t\t\treturn null;\n \t\t}\n-\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainerPath());\n+\t\tFileSelection selection = new FileSelection(ureq, folderComponent.getCurrentContainer(), folderComponent.getCurrentContainerPath());\n \t\tstatus = FolderCommandHelper.sanityCheck3(wControl, folderComponent, selection);\n \t\tif (status == FolderCommandStatus.STATUS_FAILED) {\n \t\t\treturn null;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5f24e6e5de024d5f8c11f4dccd13ccbda09ad2b2",
            "date": "2025-01-14T16:27:39Z",
            "author_login": "pfranger"
          },
          {
            "sha": "31b054c9eab6c2b5a6afb7d8cc00f9e46615532a",
            "date": "2025-01-14T15:41:46Z",
            "author_login": "lainsr"
          },
          {
            "sha": "b2e005103995dd59fa2ce2a1901aa2d77836e4ae",
            "date": "2025-01-14T13:17:02Z",
            "author_login": "uhensler"
          },
          {
            "sha": "3f3c1389a49011e2782a3357ebc2004b8c2a1420",
            "date": "2025-01-14T10:11:52Z",
            "author_login": "lainsr"
          },
          {
            "sha": "775b4903a88c33e9653c290fc454516ade61427b",
            "date": "2025-01-14T08:37:27Z",
            "author_login": "lainsr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "OpenOlat is a web-based e-learning platform for teaching, learning, assessment and communication, an LMS, a learning management system. In affected versions by manipulating the HTTP request an attacker can modify the path of a requested file download in the folder component to point to anywhere on the target system. The attack could be used to read any file accessible in the web root folder or outside, depending on the configuration of the system and the properly configured permission of the application server user. The attack requires an OpenOlat user account or the enabled guest user feature together with the usage of the folder component in a course. The attack does not allow writing of arbitrary files, it allows only reading of files and also only ready of files that the attacker knows the exact path which is very unlikely at least for OpenOlat data files. The problem is fixed in version 15.5.8 and 16.0.1 It is advised to upgrade to version 16.0.x. There are no known workarounds to fix this problem, an upgrade is necessary.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-18T21:15:08.143",
    "last_modified": "2024-11-21T06:25:36.530",
    "fix_date": "2021-09-06T17:02:57Z"
  },
  "references": [
    {
      "url": "https://github.com/OpenOLAT/OpenOLAT/commit/418bb509ffcb0e25ab4390563c6c47f0458583eb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenOLAT/OpenOLAT/security/advisories/GHSA-m8j5-837g-2p3f",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.openolat.org/browse/OO-5696",
      "source": "security-advisories@github.com",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenOLAT/OpenOLAT/commit/418bb509ffcb0e25ab4390563c6c47f0458583eb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OpenOLAT/OpenOLAT/security/advisories/GHSA-m8j5-837g-2p3f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.openolat.org/browse/OO-5696",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.834145",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "OpenOLAT",
    "owner": "OpenOLAT",
    "created_at": "2018-03-29T09:46:34Z",
    "updated_at": "2025-01-14T16:35:50Z",
    "pushed_at": "2025-01-14T16:35:47Z",
    "size": 565836,
    "stars": 344,
    "forks": 146,
    "open_issues": 4,
    "watchers": 344,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 78961935,
      "JavaScript": 11391629,
      "Fluent": 1728501,
      "HTML": 1658723,
      "SCSS": 1099866,
      "CSS": 209153,
      "XSLT": 99335,
      "Shell": 6334
    },
    "commit_activity": {
      "total_commits_last_year": 2984,
      "avg_commits_per_week": 57.38461538461539,
      "days_active_last_year": 249
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:51:50.608255"
  }
}