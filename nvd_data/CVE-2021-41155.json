{
  "cve_id": "CVE-2021-41155",
  "github_data": {
    "repository": "Enalean/tuleap",
    "fix_commit": "ff75f2899c60a4546ee2d532e68a3febd07bdd14",
    "related_commits": [
      "ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "ff75f2899c60a4546ee2d532e68a3febd07bdd14"
    ],
    "patch_url": "https://github.com/Enalean/tuleap/commit/ff75f2899c60a4546ee2d532e68a3febd07bdd14.patch",
    "fix_commit_details": {
      "sha": "ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "commit_date": "2020-08-12T10:57:32Z",
      "author": {
        "login": "LeSuisse",
        "type": "User",
        "stats": {
          "total_commits": 13553,
          "average_weekly_commits": 13.158252427184467,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 479
        }
      },
      "commit_message": {
        "title": "request #16214: SQL injection in CVS revisions browser",
        "length": 166,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 44,
        "deletions": 15
      },
      "files": [
        {
          "filename": "src/www/cvs/browse_commit.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -67,7 +67,7 @@\n     }\n }\n \n-$order_by = '';\n+$order_by = [];\n if ($morder !== false) {\n     if (user_isloggedin()) {\n         if ($morder != user_get_preference('commit_browse_order' . $group_id)) {\n@@ -76,7 +76,7 @@\n     }\n \n     if ($morder !== '') {\n-        $order_by = ' ORDER BY ' . commit_criteria_list_to_query($morder);\n+        $order_by = commit_criteria_list_to_query($morder);\n     }\n }\n "
        },
        {
          "filename": "src/www/cvs/commit_utils.php",
          "status": "modified",
          "additions": 42,
          "deletions": 13,
          "patch": "@@ -391,14 +391,26 @@ function commit_add_sort_criteria($criteria_list, $order, $msort)\n     return(join(',', $arr));\n }\n \n-// Transform criteria list to SQL query (+ means ascending\n-// - is descending)\n-function commit_criteria_list_to_query($criteria_list)\n+/**\n+ * @psalm-return array<array{order:\"ASC\"|\"DESC\", column: \"id\"|\"revision\"|\"did\"|\"description\"|\"c_when\"|\"date\"|\"f_when\"|\"who\"}>\n+ */\n+function commit_criteria_list_to_query(string $criteria_list): array\n {\n-    $criteria_list = str_replace('>', ' ASC', $criteria_list);\n-    $criteria_list = str_replace('<', ' DESC', $criteria_list);\n-\n-    return $criteria_list;\n+    $order_list = [];\n+    foreach (explode(',', $criteria_list) as $criteria) {\n+        if (preg_match('/^(?<column>[a-z]+)(?<order>[<>]?)$/', $criteria, $matches) === 1) {\n+            $column = $matches['column'];\n+            if (! in_array($column, ['id', 'revision', 'did', 'description', 'c_when', 'date', 'f_when', 'who'], true)) {\n+                continue;\n+            }\n+            $order = 'ASC';\n+            if ($matches['order'] === '<') {\n+                $order = 'DESC';\n+            }\n+            $order_list[] = ['order' => $order, 'column' => $column];\n+        }\n+    }\n+    return $order_list;\n }\n \n // Transform criteria list to readable text statement\n@@ -409,13 +421,15 @@ function commit_criteria_list_to_text($criteria_list, $url)\n         $arr    = explode(',', $criteria_list);\n         $morder = '';\n \n+        $purifier = Codendi_HTMLPurifier::instance();\n+\n         foreach ($arr as $crit) {\n             $morder .= ($morder ? \",\" . $crit : $crit);\n             $attr = str_replace('>', '', $crit);\n             $attr = str_replace('<', '', $attr);\n \n-            $arr_text[] = '<a href=\"' . $url . '&morder=' . $morder . '#results\">' .\n-            commit_field_get_label($attr) . '</a><img src=\"' . util_get_dir_image_theme() .\n+            $arr_text[] = '<a href=\"' . $url . '&morder=' . $purifier->purify(urlencode($morder)) . '#results\">' .\n+            $purifier->purify(commit_field_get_label($attr)) . '</a><img src=\"' . util_get_dir_image_theme() .\n             ((substr($crit, -1) == '<') ? 'dn' : 'up') .\n             '_arrow.png\" border=\"0\">';\n         }\n@@ -709,7 +723,10 @@ function get_group_id_from_repository($repository)\n     return $project->getID();\n }\n \n-function cvs_get_revisions(&$project, $offset, $chunksz, $_tag = 100, $_branch = 100, $_commit_id = '', $_commiter = 100, $_srch = '', $order_by = '', $pv = 0)\n+/**\n+ * @psalm-param array<array{order:\"ASC\"|\"DESC\", column: \"id\"|\"revision\"|\"did\"|\"description\"|\"c_when\"|\"date\"|\"f_when\"|\"who\"}> $order_by\n+ */\n+function cvs_get_revisions($project, $offset, $chunksz, $_tag = 100, $_branch = 100, $_commit_id = '', $_commiter = 100, $_srch = '', array $order_by = [], $pv = 0)\n {\n     //if status selected, and more to where clause\n     if ($_branch != 100) {\n@@ -777,14 +794,26 @@ function cvs_get_revisions(&$project, $offset, $chunksz, $_tag = 100, $_branch =\n         $limit = \" LIMIT $offset,$chunksz\";\n     }\n \n-    if (! $order_by) {\n-        $order_by = \" ORDER BY id desc, f_when desc \";\n+    if (empty($order_by)) {\n+        $order_by_sql = ' ORDER BY id desc, f_when desc ';\n+    } else {\n+        $order_by_sql = ' ORDER BY ';\n+        $order_by_sql .= implode(\n+            ',',\n+            array_map(\n+                static function (array $order_by_row) {\n+                    return $order_by_row['column'] . ' ' . $order_by_row['order'];\n+                },\n+                $order_by\n+            )\n+        );\n+        $order_by_sql .= ' ';\n     }\n \n     $sql = $select .\n     $from .\n     $where .\n-    $order_by .\n+    $order_by_sql .\n     $limit;\n \n     $result = db_query($sql);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9853bbe9eefcf4ad385b6e8474c59bd1aa8a6545",
            "date": "2025-01-14T16:07:28Z",
            "author_login": "magarnier"
          },
          {
            "sha": "f0aaaefd3ef209c794869a752a86b4f174d53d16",
            "date": "2025-01-14T16:07:20Z",
            "author_login": "magarnier"
          },
          {
            "sha": "e0da8b7336dcef7fb38b41cfee101f34f9249442",
            "date": "2025-01-14T14:59:51Z",
            "author_login": "nterray"
          },
          {
            "sha": "336f9ed6a3e16d12c03792f0764bbe06da36ced9",
            "date": "2025-01-14T14:59:12Z",
            "author_login": "nterray"
          },
          {
            "sha": "a4a770f2f7a401e471fde4bc167c5973d97dbd81",
            "date": "2025-01-14T13:19:55Z",
            "author_login": "Gashmob"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In affected versions Tuleap does not sanitize properly user inputs when constructing the SQL query to browse and search revisions in the CVS repositories. The following versions contain the fix: Tuleap Community Edition 11.17.99.146, Tuleap Enterprise Edition 11.17-5, Tuleap Enterprise Edition 11.16-7.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-10-18T22:15:07.680",
    "last_modified": "2024-11-21T06:25:37.033",
    "fix_date": "2020-08-12T10:57:32Z"
  },
  "references": [
    {
      "url": "https://github.com/Enalean/tuleap/commit/ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-f8jp-hx4q-wxvr",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=16214",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/commit/ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-f8jp-hx4q-wxvr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=ff75f2899c60a4546ee2d532e68a3febd07bdd14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=16214",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.834845",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tuleap",
    "owner": "Enalean",
    "created_at": "2012-06-12T15:48:54Z",
    "updated_at": "2025-01-14T09:23:28Z",
    "pushed_at": "2025-01-14T09:23:22Z",
    "size": 382430,
    "stars": 1043,
    "forks": 285,
    "open_issues": 3,
    "watchers": 1043,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 64309783,
      "TypeScript": 12164261,
      "JavaScript": 4302645,
      "Vue": 3161023,
      "Mustache": 2174238,
      "SCSS": 1603030,
      "HTML": 502284,
      "CSS": 281155,
      "Shell": 126767,
      "Smarty": 121199,
      "MDX": 89474,
      "Nix": 48015,
      "Go": 44709,
      "Makefile": 41978,
      "Rust": 27741,
      "Groovy": 13947,
      "PEG.js": 12394,
      "Perl": 11384,
      "Dockerfile": 10302,
      "Python": 3977,
      "XSLT": 1077,
      "Awk": 597
    },
    "commit_activity": {
      "total_commits_last_year": 5447,
      "avg_commits_per_week": 104.75,
      "days_active_last_year": 255
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:56.606881"
  }
}