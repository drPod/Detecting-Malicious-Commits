{
  "cve_id": "CVE-2021-4116",
  "github_data": {
    "repository": "yetiforcecompany/yetiforcecrm",
    "fix_commit": "9cdb012ca64ff1f719f8120d5fd162cd5ef1013f",
    "related_commits": [
      "9cdb012ca64ff1f719f8120d5fd162cd5ef1013f",
      "9cdb012ca64ff1f719f8120d5fd162cd5ef1013f"
    ],
    "patch_url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/9cdb012ca64ff1f719f8120d5fd162cd5ef1013f.patch",
    "fix_commit_details": {
      "sha": "9cdb012ca64ff1f719f8120d5fd162cd5ef1013f",
      "commit_date": "2021-12-14T13:20:27Z",
      "author": {
        "login": "mariuszkrzaczkowski",
        "type": "User",
        "stats": {
          "total_commits": 13756,
          "average_weekly_commits": 26.053030303030305,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 433
        }
      },
      "commit_message": {
        "title": "Improved validation of uploaded files",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 80,
        "additions": 52,
        "deletions": 28
      },
      "files": [
        {
          "filename": "app/Fields/File.php",
          "status": "modified",
          "additions": 49,
          "deletions": 26,
          "patch": "@@ -125,6 +125,9 @@ public static function loadFromInfo($fileInfo)\n \t\tforeach ($fileInfo as $key => $value) {\n \t\t\t$instance->{$key} = $fileInfo[$key];\n \t\t}\n+\t\tif (isset($instance->name)) {\n+\t\t\t$instance->name = trim(\\App\\Purifier::purify($instance->name));\n+\t\t}\n \t\treturn $instance;\n \t}\n \n@@ -148,14 +151,14 @@ public static function loadFromRequest($file)\n \t/**\n \t * Load file instance from file path.\n \t *\n-\t * @param array $path\n+\t * @param string $path\n \t *\n \t * @return \\self\n \t */\n-\tpublic static function loadFromPath($path)\n+\tpublic static function loadFromPath(string $path)\n \t{\n \t\t$instance = new self();\n-\t\t$instance->name = basename($path);\n+\t\t$instance->name = trim(\\App\\Purifier::purify(basename($path)));\n \t\t$instance->path = $path;\n \t\treturn $instance;\n \t}\n@@ -202,7 +205,7 @@ public static function loadFromContent(string $contents, $name = false, array $p\n \t\t\t$name = \\App\\TextParser::textTruncate($name, 180, false) . '_' . uniqid() . \".$extension\";\n \t\t}\n \t\t$instance = new self();\n-\t\t$instance->name = $name;\n+\t\t$instance->name = trim(\\App\\Purifier::purify($name));\n \t\t$instance->path = $path;\n \t\t$instance->ext = $extension;\n \t\tforeach ($param as $key => $value) {\n@@ -377,13 +380,13 @@ public function getDirectoryPath()\n \t/**\n \t * Validate whether the file is safe.\n \t *\n-\t * @param bool|string $type\n+\t * @param string|null $type\n \t *\n \t * @throws \\Exception\n \t *\n \t * @return bool\n \t */\n-\tpublic function validate($type = false)\n+\tpublic function validate(?string $type = null): bool\n \t{\n \t\t$return = true;\n \t\ttry {\n@@ -408,25 +411,25 @@ public function validate($type = false)\n \t\t\t\t$message = \\call_user_func_array('vsprintf', [\\App\\Language::translateSingleMod(array_shift($params), 'Other.Exceptions'), $params]);\n \t\t\t}\n \t\t\t$this->validateError = $message;\n-\t\t\tLog::error(\"Error: {$e->getMessage()} | {$this->getName()} | {$this->getSize()}\", __CLASS__);\n+\t\t\tLog::error(\"Error during file validation: {$this->getName()} | Size: {$this->getSize()}\\n {$e->__toString()}\", __CLASS__);\n \t\t}\n \t\treturn $return;\n \t}\n \n \t/**\n \t * Validate and secure the file.\n \t *\n-\t * @param bool|string $type\n+\t * @param string|null $type\n \t *\n \t * @return bool\n \t */\n-\tpublic function validateAndSecure($type = false): bool\n+\tpublic function validateAndSecure(?string $type = null): bool\n \t{\n \t\tif ($this->validate($type)) {\n \t\t\treturn true;\n \t\t}\n \t\t$reValidate = false;\n-\t\tif ('image' === $this->getShortMimeType(0) && static::secureImage($this)) {\n+\t\tif (static::secureFile($this)) {\n \t\t\t$this->size = filesize($this->path);\n \t\t\t$this->content = file_get_contents($this->path);\n \t\t\t$reValidate = true;\n@@ -480,6 +483,9 @@ private function checkFile()\n \t\tif (empty($this->name)) {\n \t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_EMPTY_NAME');\n \t\t}\n+\t\tif (!$this->validateInjection($this->name)) {\n+\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_ILLEGAL_NAME');\n+\t\t}\n \t\tif (0 === $this->getSize()) {\n \t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_WRONG_SIZE');\n \t\t}\n@@ -533,7 +539,7 @@ private function validateCodeInjection()\n \t\t\t|| false !== stripos($contents, '<?=')\n \t\t\t|| false !== stripos($contents, '<? ')) && $this->searchCodeInjection()\n \t\t\t) {\n-\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_PHP_CODE_INJECTION');\n+\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_CODE_INJECTION');\n \t\t\t}\n \t\t}\n \t}\n@@ -636,43 +642,57 @@ private function searchCodeInjection(): bool\n \t */\n \tprivate function validateCodeInjectionInMetadata()\n \t{\n-\t\tif (\n+\t\tif (\\extension_loaded('imagick')) {\n+\t\t\ttry {\n+\t\t\t\t$img = new \\imagick($this->path);\n+\t\t\t\t$this->validateInjection($img->getImageProperties());\n+\t\t\t} catch (\\Throwable $e) {\n+\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_CODE_INJECTION', $e->getCode(), $e);\n+\t\t\t}\n+\t\t} elseif (\n \t\t\t\\function_exists('exif_read_data')\n \t\t\t&& \\in_array($this->getMimeType(), ['image/jpeg', 'image/tiff'])\n \t\t\t&& \\in_array(exif_imagetype($this->path), [IMAGETYPE_JPEG, IMAGETYPE_TIFF_II, IMAGETYPE_TIFF_MM])\n \t\t) {\n \t\t\t$imageSize = getimagesize($this->path, $imageInfo);\n-\t\t\tif (\n-\t\t\t\t$imageSize\n-\t\t\t\t&& (empty($imageInfo['APP1']) || 0 === strpos($imageInfo['APP1'], 'Exif'))\n-\t\t\t\t&& ($exifdata = exif_read_data($this->path)) && !$this->validateImageMetadata($exifdata)\n-\t\t\t) {\n-\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_PHP_CODE_INJECTION');\n+\t\t\ttry {\n+\t\t\t\tif (\n+\t\t\t\t\t$imageSize\n+\t\t\t\t\t&& (empty($imageInfo['APP1']) || 0 === strpos($imageInfo['APP1'], 'Exif'))\n+\t\t\t\t\t&& ($exifData = exif_read_data($this->path)) && !$this->validateInjection($exifData)\n+\t\t\t\t) {\n+\t\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_CODE_INJECTION');\n+\t\t\t\t}\n+\t\t\t} catch (\\Throwable $e) {\n+\t\t\t\tthrow new \\App\\Exceptions\\DangerousFile('ERR_FILE_CODE_INJECTION', $e->getCode(), $e);\n \t\t\t}\n \t\t}\n \t}\n \n \t/**\n-\t * Validate image metadata.\n+\t * Validate injection.\n \t *\n-\t * @param mixed $data\n+\t * @param string|array $data\n \t *\n \t * @return bool\n \t */\n-\tprivate function validateImageMetadata($data)\n+\tprivate function validateInjection($data): bool\n \t{\n+\t\t$return = true;\n \t\tif (\\is_array($data)) {\n \t\t\tforeach ($data as $value) {\n-\t\t\t\tif (!$this->validateImageMetadata($value)) {\n+\t\t\t\tif (!$this->validateInjection($value)) {\n \t\t\t\t\treturn false;\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n \t\t\tif (1 === preg_match('/(<\\?php?(.*?))/i', $data) || false !== stripos($data, '<?=') || false !== stripos($data, '<? ')) {\n-\t\t\t\treturn false;\n+\t\t\t\t$return = false;\n+\t\t\t} else {\n+\t\t\t\t\\App\\Purifier::purifyHtmlEventAttributes($data);\n \t\t\t}\n \t\t}\n-\t\treturn true;\n+\t\treturn $return;\n \t}\n \n \t/**\n@@ -1198,7 +1218,7 @@ public static function uploadAndSave(\\App\\Request $request, array $files, string\n \t\t\t\t$additionalNotes = '';\n \t\t\t\t$file = static::loadFromRequest($fileDetails);\n \t\t\t\tif (!$file->validate($type)) {\n-\t\t\t\t\tif (!static::secureImage($file)) {\n+\t\t\t\t\tif (!static::secureFile($file)) {\n \t\t\t\t\t\t$attach[] = ['name' => $file->getName(), 'error' => $file->validateError, 'hash' => $request->getByType('hash', 'Alnum')];\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n@@ -1301,8 +1321,11 @@ public static function cleanTemp($keys)\n \t *\n \t * @return bool\n \t */\n-\tpublic static function secureImage(self $file): bool\n+\tpublic static function secureFile(self $file): bool\n \t{\n+\t\tif ('image' !== $file->getShortMimeType(0)) {\n+\t\t\treturn false;\n+\t\t}\n \t\t$result = false;\n \t\tif (\\extension_loaded('imagick')) {\n \t\t\ttry {"
        },
        {
          "filename": "config/version.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n <?php\n \n return [\n-\t'appVersion' => '6.3.5',\n+\t'appVersion' => '6.3.6',\n \t'patchVersion' => '2021.12.14',\n \t'lib_roundcube' => '0.2.3',\n ];"
        },
        {
          "filename": "languages/en-US/Other/Exceptions.json",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -22,8 +22,9 @@\n     \"ERR_FILE_EMPTY_NAME\": \"File name is empty\",\n     \"ERR_FILE_ERROR_REQUEST\": \"File transfer error: %s\",\n     \"ERR_FILE_ILLEGAL_FORMAT\": \"Illegal file format\",\n+    \"ERR_FILE_ILLEGAL_NAME\": \"Illegal file name\",\n     \"ERR_FILE_WRONG_IMAGE\": \"Wrong image file\",\n-    \"ERR_FILE_PHP_CODE_INJECTION\": \"File contains dangerous PHP code and was rejected\",\n+    \"ERR_FILE_CODE_INJECTION\": \"File contains dangerous code and was rejected\",\n     \"ERR_FILE_XPACKET_CODE_INJECTION\": \"File contains dangerous XPACKET code and was rejected\",\n     \"ERR_NO_PERMISSIONS_TO_CREATE_DIRECTORIES\": \"No permissions to create directories\",\n     \"ERR_DIRECTORY_CANNOT_BE_CREATED\": \"The directory cannot be created\","
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "de296d83c1d36bf0d92303efa9706ded67549aa8",
            "date": "2024-09-13T11:37:49Z",
            "author_login": "rskrzypczak"
          },
          {
            "sha": "4b5e4244b8338c837a8132ff12686f29f222d89b",
            "date": "2024-01-02T08:25:56Z",
            "author_login": "mariuszkrzaczkowski"
          },
          {
            "sha": "f1904a62fc5cd4d5bb3031b19bb2d090bce49ca6",
            "date": "2023-11-27T04:46:42Z",
            "author_login": "rskrzypczak"
          },
          {
            "sha": "711d9fe4c1caddec2dfef52f8ed06ddcebfd2dff",
            "date": "2023-11-08T05:36:13Z",
            "author_login": "rskrzypczak"
          },
          {
            "sha": "4e7ad0fbee5409248285b22fce0ea754d365add4",
            "date": "2023-11-07T16:50:11Z",
            "author_login": "rskrzypczak"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "yetiforcecrm is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-15T14:15:07.667",
    "last_modified": "2024-11-21T06:36:56.000",
    "fix_date": "2021-12-14T13:20:27Z"
  },
  "references": [
    {
      "url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/9cdb012ca64ff1f719f8120d5fd162cd5ef1013f",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7561bae7-9053-4dc8-aa59-b71acfb1712c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/yetiforcecompany/yetiforcecrm/commit/9cdb012ca64ff1f719f8120d5fd162cd5ef1013f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7561bae7-9053-4dc8-aa59-b71acfb1712c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.841832",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "YetiForceCRM",
    "owner": "yetiforcecompany",
    "created_at": "2014-12-15T22:55:47Z",
    "updated_at": "2025-01-14T02:56:49Z",
    "pushed_at": "2024-09-13T11:43:27Z",
    "size": 419522,
    "stars": 1745,
    "forks": 745,
    "open_issues": 83,
    "watchers": 1745,
    "has_security_policy": false,
    "default_branch": "developer",
    "protected_branches": [],
    "languages": {
      "PHP": 10752494,
      "Smarty": 2974130,
      "JavaScript": 2297348,
      "CSS": 632280,
      "SCSS": 191499,
      "Vue": 129717,
      "Less": 62688,
      "Stylus": 32572,
      "HTML": 7942,
      "Shell": 6065,
      "Dockerfile": 3767,
      "Batchfile": 1536
    },
    "commit_activity": {
      "total_commits_last_year": 1,
      "avg_commits_per_week": 0.019230769230769232,
      "days_active_last_year": 1
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:10:51.726622"
  }
}