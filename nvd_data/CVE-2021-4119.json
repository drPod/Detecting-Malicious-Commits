{
  "cve_id": "CVE-2021-4119",
  "github_data": {
    "repository": "bookstackapp/bookstack",
    "fix_commit": "e765e618547c92f4e0b46caca6fb91f0174efd99",
    "related_commits": [
      "e765e618547c92f4e0b46caca6fb91f0174efd99",
      "e765e618547c92f4e0b46caca6fb91f0174efd99"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e765e618547c92f4e0b46caca6fb91f0174efd99",
      "commit_date": "2021-12-14T18:47:22Z",
      "author": {
        "login": "ssddanbrown",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Addressed user detail harvesting issue",
        "length": 558,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 135,
        "additions": 115,
        "deletions": 20
      },
      "files": [
        {
          "filename": "app/Auth/UserRepo.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -63,13 +63,16 @@ public function getAllUsers(): Collection\n \n     /**\n      * Get all the users with their permissions in a paginated format.\n+     * Note: Due to the use of email search this should only be used when\n+     * user is assumed to be trusted. (Admin users).\n+     * Email search can be abused to extract email addresses.\n      */\n     public function getAllUsersPaginatedAndSorted(int $count, array $sortData): LengthAwarePaginator\n     {\n         $sort = $sortData['sort'];\n \n         $query = User::query()->select(['*'])\n-            ->withLastActivityAt()\n+            ->scopes(['withLastActivityAt'])\n             ->with(['roles', 'avatar'])\n             ->withCount('mfaValues')\n             ->orderBy($sort, $sortData['order']);"
        },
        {
          "filename": "app/Http/Controllers/UserSearchController.php",
          "status": "modified",
          "additions": 16,
          "deletions": 9,
          "patch": "@@ -3,7 +3,6 @@\n namespace BookStack\\Http\\Controllers;\n \n use BookStack\\Auth\\User;\n-use Illuminate\\Database\\Eloquent\\Builder;\n use Illuminate\\Http\\Request;\n \n class UserSearchController extends Controller\n@@ -14,19 +13,27 @@ class UserSearchController extends Controller\n      */\n     public function forSelect(Request $request)\n     {\n+        $hasPermission = signedInUser() && (\n+                   userCan('users-manage')\n+                || userCan('restrictions-manage-own')\n+                || userCan('restrictions-manage-all')\n+        );\n+\n+        if (!$hasPermission) {\n+            $this->showPermissionError();\n+        }\n+\n         $search = $request->get('search', '');\n-        $query = User::query()->orderBy('name', 'desc')\n+        $query = User::query()\n+            ->orderBy('name', 'asc')\n             ->take(20);\n \n         if (!empty($search)) {\n-            $query->where(function (Builder $query) use ($search) {\n-                $query->where('email', 'like', '%' . $search . '%')\n-                    ->orWhere('name', 'like', '%' . $search . '%');\n-            });\n+            $query->where('name', 'like', '%' . $search . '%');\n         }\n \n-        $users = $query->get();\n-\n-        return view('form.user-select-list', compact('users'));\n+        return view('form.user-select-list', [\n+            'users' => $query->get(),\n+        ]);\n     }\n }"
        },
        {
          "filename": "resources/views/users/delete.blade.php",
          "status": "modified",
          "additions": 12,
          "deletions": 10,
          "patch": "@@ -12,17 +12,19 @@\n \n             <p>{{ trans('settings.users_delete_warning', ['userName' => $user->name]) }}</p>\n \n-            <hr class=\"my-l\">\n-\n-            <div class=\"grid half gap-xl v-center\">\n-                <div>\n-                    <label class=\"setting-list-label\">{{ trans('settings.users_migrate_ownership') }}</label>\n-                    <p class=\"small\">{{ trans('settings.users_migrate_ownership_desc') }}</p>\n+            @if(userCan('users-manage'))\n+                <hr class=\"my-l\">\n+\n+                <div class=\"grid half gap-xl v-center\">\n+                    <div>\n+                        <label class=\"setting-list-label\">{{ trans('settings.users_migrate_ownership') }}</label>\n+                        <p class=\"small\">{{ trans('settings.users_migrate_ownership_desc') }}</p>\n+                    </div>\n+                    <div>\n+                        @include('form.user-select', ['name' => 'new_owner_id', 'user' => null, 'compact' => false])\n+                    </div>\n                 </div>\n-                <div>\n-                    @include('form.user-select', ['name' => 'new_owner_id', 'user' => null, 'compact' => false])\n-                </div>\n-            </div>\n+            @endif\n \n             <hr class=\"my-l\">\n "
        },
        {
          "filename": "tests/User/UserManagementTest.php",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -130,6 +130,21 @@ public function test_delete_offers_migrate_option()\n         $resp->assertSee('new_owner_id');\n     }\n \n+    public function test_migrate_option_hidden_if_user_cannot_manage_users()\n+    {\n+        $editor = $this->getEditor();\n+\n+        $resp = $this->asEditor()->get(\"settings/users/{$editor->id}/delete\");\n+        $resp->assertDontSee('Migrate Ownership');\n+        $resp->assertDontSee('new_owner_id');\n+\n+        $this->giveUserPermissions($editor, ['users-manage']);\n+\n+        $resp = $this->asEditor()->get(\"settings/users/{$editor->id}/delete\");\n+        $resp->assertSee('Migrate Ownership');\n+        $resp->assertSee('new_owner_id');\n+    }\n+\n     public function test_delete_with_new_owner_id_changes_ownership()\n     {\n         $page = Page::query()->first();"
        },
        {
          "filename": "tests/User/UserSearchTest.php",
          "status": "added",
          "additions": 68,
          "deletions": 0,
          "patch": "@@ -0,0 +1,68 @@\n+<?php\n+\n+namespace Tests\\User;\n+\n+use BookStack\\Auth\\User;\n+use Tests\\TestCase;\n+\n+class UserSearchTest extends TestCase\n+{\n+\n+    public function test_select_search_matches_by_name()\n+    {\n+        $viewer = $this->getViewer();\n+        $admin = $this->getAdmin();\n+        $resp = $this->actingAs($admin)->get('/search/users/select?search=' . urlencode($viewer->name));\n+\n+        $resp->assertOk();\n+        $resp->assertSee($viewer->name);\n+        $resp->assertDontSee($admin->name);\n+    }\n+\n+    public function test_select_search_shows_first_by_name_without_search()\n+    {\n+        /** @var User $firstUser */\n+        $firstUser = User::query()->orderBy('name', 'desc')->first();\n+        $resp = $this->asAdmin()->get('/search/users/select');\n+\n+        $resp->assertOk();\n+        $resp->assertSee($firstUser->name);\n+    }\n+\n+    public function test_select_search_does_not_match_by_email()\n+    {\n+        $viewer = $this->getViewer();\n+        $editor = $this->getEditor();\n+        $resp = $this->actingAs($editor)->get('/search/users/select?search=' . urlencode($viewer->email));\n+\n+        $resp->assertDontSee($viewer->name);\n+    }\n+\n+    public function test_select_requires_right_permission()\n+    {\n+        $permissions = ['users-manage', 'restrictions-manage-own', 'restrictions-manage-all'];\n+        $user = $this->getViewer();\n+\n+        foreach ($permissions as $permission) {\n+            $resp = $this->actingAs($user)->get('/search/users/select?search=a');\n+            $this->assertPermissionError($resp);\n+\n+            $this->giveUserPermissions($user, [$permission]);\n+            $resp = $this->actingAs($user)->get('/search/users/select?search=a');\n+            $resp->assertOk();\n+            $user->roles()->delete();\n+            $user->clearPermissionCache();\n+        }\n+    }\n+\n+    public function test_select_requires_logged_in_user()\n+    {\n+        $this->setSettings(['app-public' => true]);\n+        $defaultUser = User::getDefault();\n+        $this->giveUserPermissions($defaultUser, ['users-manage']);\n+\n+        $resp = $this->get('/search/users/select?search=a');\n+        $this->assertPermissionError($resp);\n+    }\n+\n+}\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "786a434c03faa996e630f4a0a523567d3b093f43",
            "date": "2025-01-14T14:56:43Z",
            "author_login": "ssddanbrown"
          },
          {
            "sha": "25c4f4b02ba06f66f5239de48ae005f895146f8d",
            "date": "2025-01-14T14:53:10Z",
            "author_login": "ssddanbrown"
          },
          {
            "sha": "481580be172a4813ee98ad1b945d12d731e71cdb",
            "date": "2025-01-13T16:51:07Z",
            "author_login": "ssddanbrown"
          },
          {
            "sha": "593645acfe8521db97d7469c92546c8529703969",
            "date": "2025-01-13T14:30:53Z",
            "author_login": "ssddanbrown"
          },
          {
            "sha": "b9751807e7bad4b7d477b6977f630881f730abad",
            "date": "2025-01-13T13:27:32Z",
            "author_login": "ssddanbrown"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-284",
    "description": "bookstack is vulnerable to Improper Access Control",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-15T20:15:08.837",
    "last_modified": "2024-11-21T06:36:56.427",
    "fix_date": "2021-12-14T18:47:22Z"
  },
  "references": [
    {
      "url": "https://github.com/bookstackapp/bookstack/commit/e765e618547c92f4e0b46caca6fb91f0174efd99",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/135f2d7d-ab0b-4351-99b9-889efac46fca",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bookstackapp/bookstack/commit/e765e618547c92f4e0b46caca6fb91f0174efd99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/135f2d7d-ab0b-4351-99b9-889efac46fca",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.844795",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "BookStack",
    "owner": "bookstackapp",
    "created_at": "2015-08-29T10:26:44Z",
    "updated_at": "2025-01-26T05:18:24Z",
    "pushed_at": "2025-01-22T20:39:48Z",
    "size": 43528,
    "stars": 15869,
    "forks": 1989,
    "open_issues": 616,
    "watchers": 15869,
    "has_security_policy": false,
    "default_branch": "development",
    "protected_branches": [
      "release"
    ],
    "languages": {
      "PHP": 7967773,
      "TypeScript": 1856418,
      "Blade": 444101,
      "JavaScript": 287858,
      "SCSS": 139395,
      "Dockerfile": 1282,
      "Shell": 347
    },
    "commit_activity": {
      "total_commits_last_year": 414,
      "avg_commits_per_week": 7.961538461538462,
      "days_active_last_year": 198
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:35:18.402097"
  }
}