{
  "cve_id": "CVE-2021-41227",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
    "related_commits": [
      "1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
      "3712a2d3455e6ccb924daa5724a3652a86f6b585",
      "1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
      "3712a2d3455e6ccb924daa5724a3652a86f6b585"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b.patch",
    "fix_commit_details": {
      "sha": "1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
      "commit_date": "2021-10-05T20:40:42Z",
      "author": {
        "login": "SeeForTwo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add error checking to ImmutableConst OP that strings are not yet supported.",
        "length": 158,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 41,
        "deletions": 3
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/immutable_constant_op.cc",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -100,6 +100,9 @@ void ImmutableConstantOp::Compute(OpKernelContext* ctx) {\n \n   OP_REQUIRES_OK(ctx,\n                  allocator->InitializeFromRegion(region_name_, ctx->env()));\n+  OP_REQUIRES(ctx, dtype_ != DT_STRING,\n+              errors::Unimplemented(\"Sorry, DT_STRING is not currently \"\n+                                    \"supported for ImmutableConstOp.\"));\n   ctx->set_output(0, Tensor(allocator.get(), dtype_, shape_));\n   OP_REQUIRES_OK(ctx, allocator->allocation_status());\n   // Allocator is owned by the tensor from this point."
        },
        {
          "filename": "tensorflow/core/kernels/immutable_constant_op_test.cc",
          "status": "modified",
          "additions": 38,
          "deletions": 3,
          "patch": "@@ -146,7 +146,8 @@ TEST(ImmutableConstantOpTest, ExecutionError) {\n       error::INTERNAL);\n }\n \n-Status CreateTempFile(Env* env, float value, uint64 size, string* filename) {\n+Status CreateTempFileFloat(Env* env, float value, uint64 size,\n+                           string* filename) {\n   const string dir = testing::TmpDir();\n   *filename = io::JoinPath(dir, strings::StrCat(\"file_\", value));\n   std::unique_ptr<WritableFile> file;\n@@ -166,8 +167,8 @@ TEST(ImmutableConstantOpTest, FromFile) {\n   auto root = Scope::NewRootScope().ExitOnError();\n \n   string two_file, three_file;\n-  TF_ASSERT_OK(CreateTempFile(env, 2.0f, 1000, &two_file));\n-  TF_ASSERT_OK(CreateTempFile(env, 3.0f, 1000, &three_file));\n+  TF_ASSERT_OK(CreateTempFileFloat(env, 2.0f, 1000, &two_file));\n+  TF_ASSERT_OK(CreateTempFileFloat(env, 3.0f, 1000, &three_file));\n   auto node1 = ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, two_file);\n   auto node2 =\n       ops::ImmutableConst(root, DT_FLOAT, kFileTensorShape, three_file);\n@@ -190,5 +191,39 @@ TEST(ImmutableConstantOpTest, FromFile) {\n   EXPECT_EQ(outputs.front().flat<float>()(2), 2.0f * 3.0f);\n }\n \n+Status CreateTempFileBadString(Env* env, char value, uint64 size,\n+                               const string suffix, string* filename) {\n+  const string dir = testing::TmpDir();\n+  *filename = io::JoinPath(dir, strings::StrCat(\"file_\", suffix));\n+  std::unique_ptr<WritableFile> file;\n+  TF_RETURN_IF_ERROR(env->NewWritableFile(*filename, &file));\n+  TF_RETURN_IF_ERROR(file->Append(std::string(size, value)));\n+  TF_RETURN_IF_ERROR(file->Close());\n+  return Status::OK();\n+}\n+\n+TEST(ImmutableConstantOpTest, FromFileStringUnimplmented) {\n+  const TensorShape kFileTensorShape({1});\n+  Env* env = Env::Default();\n+  auto root = Scope::NewRootScope().ExitOnError();\n+\n+  string bad_file;\n+  TF_ASSERT_OK(CreateTempFileBadString(env, '\\xe2', 128, \"bad_e2\", &bad_file));\n+  auto result =\n+      ops::ImmutableConst(root, DT_STRING, kFileTensorShape, bad_file);\n+  GraphDef graph_def;\n+  TF_ASSERT_OK(root.ToGraphDef(&graph_def));\n+  SessionOptions session_options;\n+  session_options.env = Env::Default();\n+  std::unique_ptr<Session> session(NewSession(session_options));\n+  ASSERT_TRUE(session != nullptr) << \"Failed to create session\";\n+  TF_ASSERT_OK(session->Create(graph_def)) << \"Can't create test graph\";\n+  std::vector<Tensor> outputs;\n+  // Check that the run returned error.\n+  EXPECT_EQ(\n+      session->Run({}, {result.node()->name() + \":0\"}, {}, &outputs).code(),\n+      error::UNIMPLEMENTED);\n+}\n+\n }  // namespace\n }  // namespace tensorflow"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d65ab241c92b18a8e82a53b03575775279713930",
            "date": "2025-01-14T16:17:42Z",
            "author_login": "akuegel"
          },
          {
            "sha": "7f1cdb4f94bf497a8f81b47cb0b0f6f33dfcdf2f",
            "date": "2025-01-14T15:43:26Z",
            "author_login": "vwbaker"
          },
          {
            "sha": "8f888e57d9fab1d2e4127fdeaabc3f8976471065",
            "date": "2025-01-14T15:28:59Z",
            "author_login": "ddunl"
          },
          {
            "sha": "4e74930bd620da4ea2bb691359aaa9b2dc6b0605",
            "date": "2025-01-14T15:28:20Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "251362e6c6746aaf6bffcfe514e79c6cc65336d7",
            "date": "2025-01-14T15:24:59Z",
            "author_login": "loislo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.6,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L",
    "cwe_id": "CWE-125",
    "description": "TensorFlow is an open source platform for machine learning. In affected versions the `ImmutableConst` operation in TensorFlow can be tricked into reading arbitrary memory contents. This is because the `tstring` TensorFlow string class has a special case for memory mapped strings but the operation itself does not offer any support for this datatype. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-11-05T23:15:08.603",
    "last_modified": "2024-11-21T06:25:49.807",
    "fix_date": "2021-10-05T20:40:42Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/3712a2d3455e6ccb924daa5724a3652a86f6b585",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j8c8-67vp-6mx7",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/1cb6bb6c2a6019417c9adaf9e6843ba75ee2580b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/3712a2d3455e6ccb924daa5724a3652a86f6b585",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j8c8-67vp-6mx7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:31.879037",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}