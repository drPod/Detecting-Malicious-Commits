{
  "cve_id": "CVE-2021-41243",
  "github_data": {
    "repository": "baserproject/basercms",
    "fix_commit": "9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff",
    "related_commits": [
      "9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff",
      "9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff",
      "commit_date": "2021-11-25T06:17:52Z",
      "author": {
        "login": "gondoh",
        "type": "User",
        "stats": {
          "total_commits": 286,
          "average_weekly_commits": 0.4218289085545723,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 108
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7rpc-9m88-cf9w",
        "length": 170,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 741,
        "additions": 198,
        "deletions": 543
      },
      "files": [
        {
          "filename": "app/webroot/theme/admin-third/Installations/admin/step2.php",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -388,7 +388,25 @@ class=\"bca-main__text\"><?php echo __d('baser', '\u30bb\u30fc\u30d5\u30e2\u30fc\u30c9\u304cOn\u306e\u5834\u5408\n \t\t\t\t</ul>\n \t\t\t<?php endif ?>\n \t\t</div>\n+\t\t\n+\t\t<div class=\"panel-box bca-panel-box corner10\">\n+\t\t\t<h3 class=\"bca-panel-box__title\"><?php echo __d('baser', '\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb') ?></h3>\n+\t\t\t<ul class=\"section\">\n+\t\t\t\t<li class='<?php if ($zipOk) echo 'check'; else echo 'failed'; ?>'>\n+\t\t\t\t\t<?php echo __d('baser', 'Zip') ?><br/>\n+\t\t\t\t\t<div class=\"check-result\">\n+\t\t\t\t\t\t<?php if ($zipOk): ?>\n+\t\t\t\t\t\t\t<?php echo __d('baser', '\u5229\u7528\u53ef') ?>\n+\t\t\t\t\t\t<?php else: ?>\n+\t\t\t\t\t\t\t<?php echo __d('baser', '\u5229\u7528\u4e0d\u53ef') ?><br/>\n+\t\t\t\t\t\t\t<small><?php echo __d('baser', '\u30c6\u30fc\u30de\u306a\u3069\u306ezip\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5236\u9650\u3055\u308c\u307e\u3059\u3002') ?></small>\n+\t\t\t\t\t\t<?php endif ?>\n+\t\t\t\t\t</div>\n+\t\t\t\t</li>\n+\t\t\t</ul>\n+\t\t</div>\n \t</div>\n+\t\t\n \n \t<form action=\"<?php echo $this->request->base ?>/installations/step2\" method=\"post\" id=\"checkenv\">\n \t\t<?php echo $this->BcForm->hidden('clicked') ?>"
        },
        {
          "filename": "app/webroot/theme/admin-third/Tools/admin/log.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -16,11 +16,13 @@\n ?>\n \n \n+<?php if ($zipEnable): ?>\n <div class=\"section bca-main__section\">\n \t<h2 class=\"bca-main__heading\" data-bca-heading-size=\"lg\"><?php echo __d('baser', '\u30ed\u30b0(\u30a8\u30e9\u30fc\u30ed\u30b0)\u306e\u53d6\u5f97') ?></h2>\n \t<p class=\"bca-main__text\"><?php echo __d('baser', '\u30ed\u30b0(\u30a8\u30e9\u30fc\u30ed\u30b0)\u3092PC\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002') ?></p>\n \t<p class=\"bca-main__text\"><?php $this->BcBaser->link(__d('baser', '\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9'), ['download'], ['class' => 'button-small bca-btn', 'data-bca-btn-type' => 'download']) ?> </p>\n </div>\n+<?php endif; ?>\n \n <div class=\"section bca-main__section\">\n \t<h2 class=\"bca-main__heading\" data-bca-heading-size=\"lg\"><?php echo __d('baser', '\u30a8\u30e9\u30fc\u30ed\u30b0\u306e\u524a\u9664') ?></h2>"
        },
        {
          "filename": "lib/Baser/Config/setting.php",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -478,6 +478,16 @@\n \t'systemMessageLangFromSiteSetting' => true\n ];\n \n+/**\n+ * Zip\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3057\n+ */\n+if (!extension_loaded('zip')) {\n+\tunset($config['BcApp']['adminNavigation']['Systems']['Theme']['menus']['ThemesDownload']);\n+\tunset($config['BcApp']['adminNavigation']['Systems']['Theme']['menus']['ThemesDownloadDefaultDataPattern']);\n+\tunset($config['BcApp']['adminNavigation']['Systems']['Tools']['menus']['ToolsMaintenance']);\n+}\n+\n+\n /**\n  * \u30b7\u30b9\u30c6\u30e0\u8981\u4ef6\n  */"
        },
        {
          "filename": "lib/Baser/Controller/Component/BcManagerComponent.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -1387,13 +1387,15 @@ public function checkEnv()\n \t\t\t'phpGd' => extension_loaded('gd'),\n \t\t\t'phpPdo' => extension_loaded('pdo'),\n \t\t\t'phpXml' => extension_loaded('xml'),\n+\t\t\t'phpZip' => extension_loaded('zip'),\n \t\t\t'apacheRewrite' => $rewriteInstalled,\n \t\t];\n \t\t$check = [\n \t\t\t'encodingOk' => (preg_match('/UTF-8/i', $status['encoding'])? true : false),\n \t\t\t'gdOk' => $status['phpGd'],\n \t\t\t'pdoOk' => $status['phpPdo'],\n \t\t\t'xmlOk' => $status['phpXml'],\n+\t\t\t'zipOk' => $status['phpZip'],\n \t\t\t'phpVersionOk' => version_compare(preg_replace('/[a-z-]/', '', $status['phpVersion']), Configure::read('BcRequire.phpVersion'), '>='),\n \t\t\t'phpMemoryOk' => ((($status['phpMemory'] >= Configure::read('BcRequire.phpMemory')) || $status['phpMemory'] == -1) === true)\n \t\t];"
        },
        {
          "filename": "lib/Baser/Controller/PagesController.php",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -410,8 +410,16 @@ public function display()\n \t\t\t// POST\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u308bscript\u30bf\u30b0\u3092\u305d\u306e\u307e\u307eHTML\u306b\u51fa\u529b\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u308aXSS\u3068\u5224\u5b9a\u3055\u308c\u308b\n \t\t\t// \u4e00\u5ea6\u30c7\u30fc\u30bf\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u9000\u907f\u3059\u308b\n \t\t\tif ($this->BcContents->preview === 'default') {\n+\t\t\t\t// \u5165\u529bvalidation\n+\t\t\t\t$check = ['content_tmp' => $this->request->data['Page']['contents_tmp']];\n+\t\t\t\tif (!$this->Page->containsScript($check)) {\n+\t\t\t\t\t$this->BcMessage->setError(__d('baser', '\u672c\u7a3f\u6b04\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5165\u529b\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002'));\n+\t\t\t\t\t$this->notFound();\n+\t\t\t\t}\n+\t\t\t\t\n \t\t\t\t$sessionKey = __CLASS__ . '_preview_default_' . $this->request->data['Content']['entity_id'];\n \t\t\t\t$this->request->data = $this->Content->saveTmpFiles($this->request->data, mt_rand(0, 99999999));\n+\t\t\t\t\n \t\t\t\t$this->Session->write($sessionKey, $this->request->data);\n \t\t\t\t$query = [];\n \t\t\t\tif ($this->request->query) {\n@@ -431,6 +439,13 @@ public function display()\n \t\t\t}\n \n \t\t\tif ($this->BcContents->preview === 'draft') {\n+\t\t\t\t// \u5165\u529bvalidation\n+\t\t\t\t$check = ['content_tmp' => $this->request->data['Page']['contents_tmp']];\n+\t\t\t\tif (!$this->Page->containsScript($check)) {\n+\t\t\t\t\t$this->BcMessage->setError(__d('baser', '\u672c\u7a3f\u6b04\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5165\u529b\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002'));\n+\t\t\t\t\t$this->notFound();\n+\t\t\t\t}\n+\t\t\t\t\n \t\t\t\t$this->request->data = $this->Content->saveTmpFiles($this->request->data, mt_rand(0, 99999999));\n \t\t\t\t$this->request->params['Content']['eyecatch'] = $this->request->data['Content']['eyecatch'];\n "
        },
        {
          "filename": "lib/Baser/Controller/ThemesController.php",
          "status": "modified",
          "additions": 39,
          "deletions": 13,
          "patch": "@@ -10,7 +10,7 @@\n  * @license         https://basercms.net/license/index.html\n  */\n \n-App::uses('Simplezip', 'Vendor');\n+App::uses('BcZip', 'Lib');\n \n /**\n  * Class ThemesController\n@@ -95,7 +95,6 @@ public function admin_add()\n \n \t\t$name = $this->request->data['Theme']['file']['name'];\n \t\tmove_uploaded_file($this->request->data['Theme']['file']['tmp_name'], TMP . $name);\n-\t\tApp::uses('BcZip', 'Lib');\n \t\t$BcZip = new BcZip();\n \t\tif (!$BcZip->extract(TMP . $name, BASER_THEMES)) {\n \t\t\t$msg = __d('baser', '\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305fZIP\u30d5\u30a1\u30a4\u30eb\u306e\u5c55\u958b\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002');\n@@ -573,11 +572,17 @@ protected function _applyTheme($theme)\n \t */\n \tpublic function admin_download_default_data_pattern()\n \t{\n+\t\tif (!extension_loaded('zip')) {\n+\t\t\t$this->notFound();\n+\t\t}\n+\t\t\n+\t\t$this->autoRender = false;\n \t\tset_time_limit(0);\n \t\tini_set('memory_limit', -1);\n \n \t\t/* \u30b3\u30a2\u306eCSV\u3092\u751f\u6210 */\n \t\t$tmpDir = TMP . 'csv' . DS;\n+\t\t$distPath = TMP . 'default.zip';\n \t\t$Folder = new Folder();\n \t\t$Folder->create($tmpDir);\n \t\temptyFolder($tmpDir);\n@@ -604,13 +609,20 @@ public function admin_download_default_data_pattern()\n \t\t}\n \t\tftruncate($fp, 0);\n \t\tfwrite($fp, implode(\"\\n\", $records));\n+\t\t\n \t\t/* ZIP\u306b\u56fa\u3081\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 */\n-\t\t$fileName = 'default';\n-\t\t$Simplezip = new Simplezip();\n-\t\t$Simplezip->addFolder($tmpDir);\n-\t\t$Simplezip->download($fileName);\n+\t\t$bcZip = new BcZip();\n+\t\t$bcZip->create($tmpDir, $distPath);\n+\t\t\n+\t\theader(\"Cache-Control: no-store\");\n+\t\theader(\"Content-Type: application/zip\");\n+\t\theader(\"Content-Disposition: attachment; filename=\" . basename($distPath) . \";\");\n+\t\theader(\"Content-Length: \" . filesize($distPath));\n+\t\twhile (ob_get_level()) { ob_end_clean(); }\n+\t\techo readfile($distPath);\n+\t\t\n \t\temptyFolder($tmpDir);\n-\t\texit();\n+\t\tunlink($distPath);\n \t}\n \n \t/**\n@@ -671,19 +683,33 @@ function _writeCsv($plugin, $path, $exclude = [])\n \t */\n \tpublic function admin_download()\n \t{\n+\t\tif (!extension_loaded('zip')) {\n+\t\t\t$this->notFound();\n+\t\t}\n+\t\t\n \t\t$this->autoRender = false;\n \t\t$tmpDir = TMP . 'theme' . DS;\n+\t\t$orgPath = BASER_THEMES . $this->siteConfigs['theme'] . DS;\n+\t\t$sourcePath = $tmpDir . $this->siteConfigs['theme'];\n+\t\t$distPath = $sourcePath . '.zip';\n+\t\t\n \t\t$Folder = new Folder();\n \t\t$Folder->create($tmpDir);\n-\t\t$path = BASER_THEMES . $this->siteConfigs['theme'] . DS;\n \t\t$Folder->copy([\n-\t\t\t'from' => $path,\n-\t\t\t'to' => $tmpDir . $this->siteConfigs['theme'],\n+\t\t\t'from' => $orgPath,\n+\t\t\t'to' => $sourcePath,\n \t\t\t'chmod' => 0777\n \t\t]);\n-\t\t$Simplezip = new Simplezip();\n-\t\t$Simplezip->addFolder($tmpDir);\n-\t\t$Simplezip->download($this->siteConfigs['theme']);\n+\t\t$bcZip = new BcZip();\n+\t\t$bcZip->create($sourcePath, $distPath);\n+\t\t\n+\t\theader(\"Cache-Control: no-store\");\n+\t\theader(\"Content-Type: application/zip\");\n+\t\theader(\"Content-Disposition: attachment; filename=\" . basename($distPath) . \";\");\n+\t\theader(\"Content-Length: \" . filesize($distPath));\n+\t\twhile (ob_get_level()) { ob_end_clean(); }\n+\t\techo readfile($distPath);\n+\t\t\n \t\t$Folder->delete($tmpDir);\n \t}\n }"
        },
        {
          "filename": "lib/Baser/Controller/ToolsController.php",
          "status": "modified",
          "additions": 69,
          "deletions": 21,
          "patch": "@@ -10,7 +10,7 @@\n  * @license         https://basercms.net/license/index.html\n  */\n \n-App::uses('Simplezip', 'Vendor');\n+App::uses('BcZip', 'Lib');\n \n /**\n  * Class ToolsController\n@@ -93,9 +93,13 @@ public function admin_index()\n \tpublic function admin_maintenance($mode = '')\n \t{\n \t\t$this->_checkReferer();\n+\t\t$zipEnable = extension_loaded('zip');\n+\t\tif (!$zipEnable) {\n+\t\t\t$this->notFound();\n+\t\t}\n+\t\t\n \t\tswitch($mode) {\n \t\t\tcase 'backup':\n-\t\t\t\tset_time_limit(0);\n \t\t\t\t$this->_backupDb($this->request->query['backup_encoding']);\n \t\t\t\tbreak;\n \t\t\tcase 'restore':\n@@ -155,10 +159,10 @@ protected function _restoreDb($data)\n \t\tif (!move_uploaded_file($data['Tool']['backup']['tmp_name'], $targetPath)) {\n \t\t\treturn false;\n \t\t}\n-\n+\t\t\n \t\t/* ZIP\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u51cd\u3059\u308b */\n-\t\t$Simplezip = new Simplezip();\n-\t\tif (!$Simplezip->unzip($targetPath, $tmpPath)) {\n+\t\t$bcZip = new BcZip();\n+\t\tif (!$bcZip->extract($targetPath, $tmpPath)) {\n \t\t\treturn false;\n \t\t}\n \t\t@unlink($targetPath);\n@@ -255,8 +259,12 @@ protected function _loadBackup($path, $encoding)\n \t */\n \tprotected function _backupDb($encoding)\n \t{\n-\t\t$tmpDir = TMP . 'schemas' . DS;\n+\t\tset_time_limit(0);\n+\t\t\n \t\t$version = str_replace(' ', '_', $this->getBaserVersion());\n+\t\t$tmpDir = TMP . 'schemas' . DS;\n+\t\t$distPath = TMP . 'baserbackup_' . $version . '_' . date('Ymd_His') . '.zip';\n+\t\t\n \t\t$this->_resetTmpSchemaFolder();\n \t\tclearAllCache();\n \t\t$this->_writeBackup($tmpDir . 'core' . DS, '', $encoding);\n@@ -267,13 +275,21 @@ protected function _backupDb($encoding)\n \t\t\t\t$this->_writeBackup($tmpDir . 'plugin' . DS, $plugin['Plugin']['name'], $encoding);\n \t\t\t}\n \t\t}\n+\t\t\n \t\t// ZIP\u5727\u7e2e\u3057\u3066\u51fa\u529b\n-\t\t$fileName = 'baserbackup_' . $version . '_' . date('Ymd_His');\n-\t\t$Simplezip = new Simplezip();\n-\t\t$Simplezip->addFolder($tmpDir);\n-\t\t$Simplezip->download($fileName);\n+\t\t$bcZip = new BcZip();\n+\t\t$bcZip->create($tmpDir, $distPath);\n+\t\t\n+\t\theader(\"Cache-Control: no-store\");\n+\t\theader(\"Content-Type: application/zip\");\n+\t\theader(\"Content-Disposition: attachment; filename=\" . basename($distPath) . \";\");\n+\t\theader(\"Content-Length: \" . filesize($distPath));\n+\t\twhile (ob_get_level()) { ob_end_clean(); }\n+\t\techo readfile($distPath);\n+\t\t\n+\t\tunlink($distPath);\n \t\t$this->_resetTmpSchemaFolder();\n-\t\texit();\n+\t\treturn true;\n \t}\n \n \t/**\n@@ -312,6 +328,7 @@ protected function _writeBackup($path, $plugin = '', $encoding)\n \tpublic function admin_write_schema()\n \t{\n \t\t$path = TMP . 'schemas' . DS;\n+\t\t$distPath = TMP . 'schemas.zip';\n \n \t\t/* \u8868\u793a\u8a2d\u5b9a */\n \t\t$this->pageTitle = __d('baser', '\u30b9\u30ad\u30fc\u30de\u30d5\u30a1\u30a4\u30eb\u751f\u6210');\n@@ -336,10 +353,26 @@ public function admin_write_schema()\n \t\t\treturn;\n \t\t}\n \n-\t\t$Simplezip = new Simplezip();\n-\t\t$Simplezip->addFolder($path);\n-\t\t$Simplezip->download('schemas');\n-\t\texit();\n+\t\t// ZIP\u5727\u7e2e\u3057\u3066\u51fa\u529b\n+\t\tset_time_limit(0);\n+\t\t$this->autoRender = false;\n+\t\t\n+\t\t// \u4e0d\u8981\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u524a\u9664\n+\t\trmdir($path . 'core');\n+\t\trmdir($path . 'plugin');\n+\t\t\n+\t\t$bcZip = new BcZip();\n+\t\t$bcZip->create($path, $distPath);\n+\t\t\n+\t\theader(\"Cache-Control: no-store\");\n+\t\theader(\"Content-Type: application/zip\");\n+\t\theader(\"Content-Disposition: attachment; filename=\" . basename($distPath) . \";\");\n+\t\theader(\"Content-Length: \" . filesize($distPath));\n+\t\twhile (ob_get_level()) { ob_end_clean(); }\n+\t\techo readfile($distPath);\n+\t\t\n+\t\tunlink($distPath);\n+\t\treturn true;\n \t}\n \n \t/**\n@@ -401,12 +434,16 @@ protected function _resetTmpSchemaFolder()\n \t */\n \tpublic function admin_log($mode = '')\n \t{\n+\t\t$zipEnable = extension_loaded('zip');\n \t\t$errorLogPath = TMP . 'logs' . DS . 'error.log';\n \t\tswitch($mode) {\n \t\t\tcase 'download':\n-\t\t\t\tset_time_limit(0);\n+\t\t\t\tif (!$zipEnable) {\n+\t\t\t\t\t$this->notFound();\n+\t\t\t\t}\n+\t\t\t\t$this->autoRender = false;\n \t\t\t\tif ($this->_downloadErrorLog()) {\n-\t\t\t\t\texit();\n+\t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\t$this->BcMessage->setInfo('\u30a8\u30e9\u30fc\u30ed\u30b0\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002');\n \t\t\t\t$this->redirect(['action' => 'log']);\n@@ -441,6 +478,7 @@ public function admin_log($mode = '')\n \n \t\t$this->pageTitle = __d('baser', '\u30c7\u30fc\u30bf\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9');\n \t\t$this->help = 'tools_log';\n+\t\t$this->set('zipEnable', $zipEnable);\n \t\t$this->set('fileSize', $fileSize);\n \t}\n \n@@ -451,17 +489,27 @@ public function admin_log($mode = '')\n \t */\n \tprotected function _downloadErrorLog()\n \t{\n+\t\tset_time_limit(0);\n+\t\t\n \t\t$tmpDir = TMP . 'logs' . DS;\n+\t\t$distPath = TMP . 'basercms_logs_' . date('Ymd_His') . '.zip';\n \t\t$Folder = new Folder($tmpDir);\n \t\t$files = $Folder->read(true, true, false);\n \t\tif (count($files[0]) === 0 && count($files[1]) === 0) {\n \t\t\treturn false;\n \t\t}\n \t\t// ZIP\u5727\u7e2e\u3057\u3066\u51fa\u529b\n-\t\t$fileName = 'basercms_logs_' . date('Ymd_His');\n-\t\t$Simplezip = new Simplezip();\n-\t\t$Simplezip->addFolder($tmpDir);\n-\t\t$Simplezip->download($fileName);\n+\t\t$bcZip = new BcZip();\n+\t\t$bcZip->create($tmpDir, $distPath);\n+\t\t\n+\t\theader(\"Cache-Control: no-store\");\n+\t\theader(\"Content-Type: application/zip\");\n+\t\theader(\"Content-Disposition: attachment; filename=\" . basename($distPath) . \";\");\n+\t\theader(\"Content-Length: \" . filesize($distPath));\n+\t\twhile (ob_get_level()) { ob_end_clean(); }\n+\t\techo readfile($distPath);\n+\t\t\n+\t\tunlink($distPath);\n \t\treturn true;\n \t}\n "
        },
        {
          "filename": "lib/Baser/Lib/BcZip.php",
          "status": "modified",
          "additions": 43,
          "deletions": 10,
          "patch": "@@ -84,6 +84,7 @@ protected function _extractByPhpLib($source, $target)\n \t\t\t$archivePath = $this->Zip->getNameIndex(0);\n \t\t\t$archivePathAry = explode(DS, $archivePath);\n \t\t\t$this->topArchiveName = $archivePathAry[0];\n+\t\t\t$this->Zip->close();\n \t\t\treturn true;\n \t\t} else {\n \t\t\treturn false;\n@@ -120,16 +121,6 @@ protected function _extractByCommand($source, $target)\n \t\t}\n \t}\n \n-\t/**\n-\t * Destruct\n-\t */\n-\tpublic function __destruct()\n-\t{\n-\t\tif (class_exists('ZipArchive')) {\n-\t\t\t$this->Zip->close();\n-\t\t}\n-\t}\n-\n \t/**\n \t * CUI \u5411\u3051\u306b\u30d1\u30b9\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\n \t *\n@@ -145,4 +136,46 @@ protected function _escapePath($path)\n \t\treturn implode(DS, $pathAry);\n \t}\n \n+\t/**\n+\t * zip\u751f\u6210\n+\t *\n+\t * @param string $sorce \u5143\u30c7\u30fc\u30bf\n+\t * @param string $dist \u51fa\u529b\u5148\n+\t * @return void\n+\t */\n+    public function create($sorce, $dist)\n+    {\n+        $za = new \\ZipArchive();\n+        $za->open($dist, \\ZIPARCHIVE::CREATE);\n+        $this->zipSub($za, $sorce);\n+        $za->close();\n+    }\n+\n+\t/**\n+\t * \u518d\u5e30\u7684\u306bzip\u751f\u6210\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\n+\t *\n+\t * @param ZipArchive $za\n+\t * @param string $path\n+\t * @param string $parentPath\n+\t * @return void\n+\t */\n+    private function zipSub($za, $path, $parentPath = '')\n+    {\n+        $dh = opendir($path);\n+        while (($entry = readdir($dh)) !== false) {\n+            if ($entry == '.' || $entry == '..') {\n+            } else {\n+                $localPath = $parentPath . $entry;\n+                $fullpath = $path . DS . $entry;\n+                if (is_file($fullpath)) {\n+                    $za->addFile($fullpath, $localPath);\n+                } else if (is_dir($fullpath)) {\n+                    $za->addEmptyDir($localPath);\n+                    $this->zipSub($za, $fullpath, $localPath . DS);\n+                }\n+            }\n+        }\n+        closedir($dh);\n+    }\n+\n }"
        },
        {
          "filename": "lib/Baser/Vendor/Simplezip.php",
          "status": "removed",
          "additions": 0,
          "deletions": 499,
          "patch": "@@ -1,499 +0,0 @@\n-<?php\n-/**\n- * Simplezip\n- *\n- * baserCMS :  Based Website Development Project <https://basercms.net>\n- * Copyright (c) baserCMS Users Community <https://basercms.net/community/>\n- *\n- * @copyright       Copyright (c) baserCMS Users Community\n- * @link            https://basercms.net baserCMS Project\n- * @package         Baser.Vendor\n- * @since           baserCMS v 3.0.0\n- * @license         https://basercms.net/license/index.html\n- */\n-\n-/**\n- * \u30b7\u30f3\u30d7\u30eb\u306aZIP\u5229\u7528\u30af\u30e9\u30b9\n- *\n- * CAUTION \u73fe\u5728\u3001Mac\u3067\u5727\u7e2e\u3057\u305fZip\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\n- */\n-class Simplezip\n-{\n-\n-\t/**\n-\t * \u5727\u7e2e\u30c7\u30fc\u30bf\n-\t *\n-\t * @var        array\n-\t * @access    public\n-\t */\n-\tvar $compressedData = [];\n-\n-\t/**\n-\t * Central Directory\n-\t *\n-\t * @var        array\n-\t * @access    public\n-\t */\n-\tvar $centralDirectory = [];\n-\n-\t/**\n-\t * End Of Central Directory Record\n-\t *\n-\t * @var        string\n-\t * @access    public\n-\t */\n-\tvar $endOfCentralDirectory = \"\\x50\\x4b\\x05\\x06\\x00\\x00\\x00\\x00\";\n-\n-\t/**\n-\t * \u30aa\u30d5\u30bb\u30c3\u30c8\n-\t *\n-\t * @var        int\n-\t * @access    public\n-\t */\n-\tvar $oldOffset = 0;\n-\n-\t/**\n-\t * \u30a8\u30f3\u30c8\u30ea\uff08\u89e3\u51cd\u7528\uff09\n-\t *\n-\t * @var        array\n-\t * @access    public\n-\t */\n-\tvar $entries = [];\n-\n-\t/**\n-\t * Get Hexd Time\n-\t *\n-\t * @param int $time Unix timestamp\n-\t * @return    hex    the date formated as a ZIP date\n-\t * @access    public\n-\t */\n-\tfunction getMTime($time)\n-\t{\n-\t\t$mtime = ($time !== null? getdate($time) : getdate());\n-\t\t$mtime = preg_replace(\n-\t\t\t\"/(..){1}(..){1}(..){1}(..){1}/\",\n-\t\t\t\"\\\\x\\\\4\\\\x\\\\3\\\\x\\\\2\\\\x\\\\1\",\n-\t\t\tdechex(($mtime['year'] - 1980 << 25) |\n-\t\t\t\t($mtime['mon'] << 21) |\n-\t\t\t\t($mtime['mday'] << 16) |\n-\t\t\t\t($mtime['hours'] << 11) |\n-\t\t\t\t($mtime['minutes'] << 5) |\n-\t\t\t\t($mtime['seconds'] >> 1)));\n-\t\teval('$mtime = \"' . $mtime . '\";');\n-\t\treturn $mtime;\n-\t}\n-\n-\t/**\n-\t * \u30d5\u30a9\u30eb\u30c0\u3092\u8ffd\u52a0\u3059\u308b\n-\t *\n-\t * @param string $directory\n-\t * @param string $put_int \u8ffd\u52a0\u5bfe\u8c61\u4f4d\u7f6e\n-\t */\n-\tfunction addFolder($directory, $put_into = '')\n-\t{\n-\n-\t\t$handle = opendir($directory);\n-\t\tif ($handle) {\n-\t\t\twhile(false !== ($file = readdir($handle))) {\n-\t\t\t\tif (is_file($directory . $file)) {\n-\t\t\t\t\t$fp = fopen($directory . $file, 'rb');\n-\t\t\t\t\t$fileContents = fread($fp, filesize($directory . $file));\n-\t\t\t\t\tfclose($fp);\n-\t\t\t\t\t$this->addFile($fileContents, $put_into . $file, filemtime($directory . $file));\n-\t\t\t\t} elseif ($file != '.' and $file != '..' and is_dir($directory . $file)) {\n-\t\t\t\t\t$this->addFolder($directory . $file . DS, $put_into . $file . DS);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tclosedir($handle);\n-\n-\t}\n-\n-\t/**\n-\t * \u5727\u7e2e\u5bfe\u8c61\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\n-\t *\n-\t * @param binary $data\n-\t * @param string $directoryName\n-\t * @param int $time\n-\t * @access    public\n-\t */\n-\tfunction addFile($data, $directoryName, $time = 0)\n-\t{\n-\n-\t\t$directoryName = str_replace(\"\\\\\", \"/\", $directoryName);\n-\t\t$hexdtime = $this->getMTime($time);\n-\n-\t\t$feedArrayRow = \"\\x50\\x4b\\x03\\x04\";\n-\t\t$feedArrayRow .= \"\\x14\\x00\";\n-\t\t$feedArrayRow .= \"\\x00\\x00\";\n-\t\t$feedArrayRow .= \"\\x08\\x00\";\n-\t\t$feedArrayRow .= $hexdtime;\n-\n-\t\t$uncompressedLength = strlen($data);\n-\t\t$compression = crc32($data);\n-\t\t$gzCompressedData = gzcompress($data);\n-\t\t$gzCompressedData = substr($gzCompressedData, 2, strlen($gzCompressedData) - 6);\n-\t\t$compressedLength = strlen($gzCompressedData);\n-\n-\t\t$feedArrayRow .= pack(\"V\", $compression);\n-\t\t$feedArrayRow .= pack(\"V\", $compressedLength);\n-\t\t$feedArrayRow .= pack(\"V\", $uncompressedLength);\n-\t\t$feedArrayRow .= pack(\"v\", strlen($directoryName));\n-\t\t$feedArrayRow .= pack(\"v\", 0);\n-\t\t$feedArrayRow .= $directoryName;\n-\n-\t\t$feedArrayRow .= $gzCompressedData;\n-\n-\t\t$this->compressedData[] = $feedArrayRow;\n-\n-\t\t$newOffset = strlen($feedArrayRow);\n-\n-\t\t$addCentralRecord = \"\\x50\\x4b\\x01\\x02\";\n-\t\t$addCentralRecord .= \"\\x00\\x00\";\n-\t\t$addCentralRecord .= \"\\x14\\x00\";\n-\t\t$addCentralRecord .= \"\\x00\\x00\";\n-\t\t$addCentralRecord .= \"\\x08\\x00\";\n-\t\t$addCentralRecord .= $hexdtime;\n-\t\t$addCentralRecord .= pack(\"V\", $compression);\n-\t\t$addCentralRecord .= pack(\"V\", $compressedLength);\n-\t\t$addCentralRecord .= pack(\"V\", $uncompressedLength);\n-\t\t$addCentralRecord .= pack(\"v\", strlen($directoryName));\n-\t\t$addCentralRecord .= pack(\"v\", 0);\n-\t\t$addCentralRecord .= pack(\"v\", 0);\n-\t\t$addCentralRecord .= pack(\"v\", 0);\n-\t\t$addCentralRecord .= pack(\"v\", 0);\n-\t\t$addCentralRecord .= pack(\"V\", 32);\n-\t\t$addCentralRecord .= pack(\"V\", $this->oldOffset);\n-\t\t$addCentralRecord .= $directoryName;\n-\n-\t\t$this->oldOffset += $newOffset;\n-\t\t$this->centralDirectory[] = $addCentralRecord;\n-\n-\t}\n-\n-\t/**\n-\t * Adds \"file\" to archive\n-\t *\n-\t * @param string   file contents\n-\t * @param string   name of the file in the archive (may contains the path)\n-\t * @param integer  the current timestamp\n-\t */\n-\tfunction unix2DosTime($unixtime = 0)\n-\t{\n-\t\t$timearray = ($unixtime == 0)? getdate() : getdate($unixtime);\n-\n-\t\tif ($timearray['year'] < 1980) {\n-\t\t\t$timearray['year'] = 1980;\n-\t\t\t$timearray['mon'] = 1;\n-\t\t\t$timearray['mday'] = 1;\n-\t\t\t$timearray['hours'] = 0;\n-\t\t\t$timearray['minutes'] = 0;\n-\t\t\t$timearray['seconds'] = 0;\n-\t\t} // end if\n-\n-\t\treturn (($timearray['year'] - 1980) << 25) | ($timearray['mon'] << 21) | ($timearray['mday'] << 16) |\n-\t\t\t($timearray['hours'] << 11) | ($timearray['minutes'] << 5) | ($timearray['seconds'] >> 1);\n-\t} // end of the 'unix2DosTime()' method\n-\n-\t/**\n-\t * addFile2\n-\t *\n-\t * @param mixed $data\n-\t * @param string $name\n-\t * @param int $time\n-\t */\n-\tfunction addFile2($data, $name, $time = 0)\n-\t{\n-\t\t$name = str_replace('\\\\', '/', $name);\n-\n-\t\t$dtime = dechex($this->unix2DosTime($time));\n-\t\t$hexdtime = '\\x' . $dtime[6] . $dtime[7]\n-\t\t\t. '\\x' . $dtime[4] . $dtime[5]\n-\t\t\t. '\\x' . $dtime[2] . $dtime[3]\n-\t\t\t. '\\x' . $dtime[0] . $dtime[1];\n-\t\teval('$hexdtime = \"' . $hexdtime . '\";');\n-\n-\t\t$fr = \"\\x50\\x4b\\x03\\x04\";\n-\t\t$fr .= \"\\x14\\x00\";            // ver needed to extract\n-\t\t$fr .= \"\\x00\\x00\";            // gen purpose bit flag\n-\t\t$fr .= \"\\x08\\x00\";            // compression method\n-\t\t$fr .= $hexdtime;             // last mod time and date\n-\n-\t\t// \"local file header\" segment\n-\t\t$unc_len = strlen($data);\n-\t\t$crc = crc32($data);\n-\t\t$zdata = gzcompress($data);\n-\t\t$zdata = substr(substr($zdata, 0, strlen($zdata) - 4), 2); // fix crc bug\n-\t\t$c_len = strlen($zdata);\n-\t\t$fr .= pack('V', $crc);             // crc32\n-\t\t$fr .= pack('V', $c_len);           // compressed filesize\n-\t\t$fr .= pack('V', $unc_len);         // uncompressed filesize\n-\t\t$fr .= pack('v', strlen($name));    // length of filename\n-\t\t$fr .= pack('v', 0);                // extra field length\n-\t\t$fr .= $name;\n-\n-\t\t// \"file data\" segment\n-\t\t$fr .= $zdata;\n-\n-\t\t// \"data descriptor\" segment (optional but necessary if archive is not\n-\t\t// served as file)\n-\t\t// nijel(2004-10-19): this seems not to be needed at all and causes\n-\t\t// problems in some cases (bug #1037737)\n-\t\t//$fr .= pack('V', $crc);                 // crc32\n-\t\t//$fr .= pack('V', $c_len);               // compressed filesize\n-\t\t//$fr .= pack('V', $unc_len);             // uncompressed filesize\n-\n-\t\t// add this entry to array\n-\t\t$this->compressedData[] = $fr;\n-\n-\t\t// now add to central directory record\n-\t\t$cdrec = \"\\x50\\x4b\\x01\\x02\";\n-\t\t$cdrec .= \"\\x00\\x00\";                // version made by\n-\t\t$cdrec .= \"\\x14\\x00\";                // version needed to extract\n-\t\t$cdrec .= \"\\x00\\x00\";                // gen purpose bit flag\n-\t\t$cdrec .= \"\\x08\\x00\";                // compression method\n-\t\t$cdrec .= $hexdtime;                 // last mod time & date\n-\t\t$cdrec .= pack('V', $crc);           // crc32\n-\t\t$cdrec .= pack('V', $c_len);         // compressed filesize\n-\t\t$cdrec .= pack('V', $unc_len);       // uncompressed filesize\n-\t\t$cdrec .= pack('v', strlen($name)); // length of filename\n-\t\t$cdrec .= pack('v', 0);             // extra field length\n-\t\t$cdrec .= pack('v', 0);             // file comment length\n-\t\t$cdrec .= pack('v', 0);             // disk number start\n-\t\t$cdrec .= pack('v', 0);             // internal file attributes\n-\t\t$cdrec .= pack('V', 32);            // external file attributes - 'archive' bit set\n-\n-\t\t$cdrec .= pack('V', $this->oldOffset); // relative offset of local header\n-\t\t$this->oldOffset += strlen($fr);\n-\n-\t\t$cdrec .= $name;\n-\n-\t\t// optional extra field, file comment goes here\n-\t\t// save to central directory\n-\t\t$this->centralDirectory[] = $cdrec;\n-\t} // end of the 'addFile()' method\n-\n-\t/**\n-\t * \u5727\u7e2e\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n-\t *\n-\t * @return    binary    $zipedData\n-\t * @access    public\n-\t */\n-\tfunction getZippedData()\n-\t{\n-\n-\t\t$data = implode(\"\", $this->compressedData);\n-\t\t$controlDirectory = implode(\"\", $this->centralDirectory);\n-\n-\t\treturn\n-\t\t\t$data .\n-\t\t\t$controlDirectory .\n-\t\t\t$this->endOfCentralDirectory .\n-\t\t\tpack(\"v\", sizeof($this->centralDirectory)) .\n-\t\t\tpack(\"v\", sizeof($this->centralDirectory)) .\n-\t\t\tpack(\"V\", strlen($controlDirectory)) .\n-\t\t\tpack(\"V\", strlen($data)) . \"\\x00\\x00\";\n-\t}\n-\n-\t/**\n-\t * \u5727\u7e2e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n-\t *\n-\t * @param string $archiveName\n-\t */\n-\tfunction download($archiveName)\n-\t{\n-\n-\t\t$headerInfo = '';\n-\n-\t\tif (ini_get('zlib.output_compression')) {\n-\t\t\tini_set('zlib.output_compression', 'Off');\n-\t\t}\n-\n-\t\t// Security checks\n-\t\tif ($archiveName == \"\") {\n-\t\t\techo \"<html><title>Download Error</title><body><BR><B>ERROR:</B> The download file was NOT SPECIFIED.</body></html>\";\n-\t\t\texit;\n-\t\t}\n-\n-\t\tif (!preg_match('/\\.zip$/', $archiveName)) {\n-\t\t\t$archiveName .= '.zip';\n-\t\t}\n-\t\t$zippedData = $this->getZippedData();\n-\t\t$size = strlen(bin2hex($zippedData)) / 2;\n-\n-\t\theader(\"Pragma: public\");\n-\t\theader(\"Expires: 0\");\n-\t\theader(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n-\t\theader(\"Cache-Control: private\", false);\n-\t\theader(\"Content-Type: application/zip\");\n-\t\theader(\"Content-Disposition: attachment; filename=\" . $archiveName . \";\");\n-\t\theader(\"Content-Transfer-Encoding: binary\");\n-\t\theader(\"Content-Length: \" . $size);\n-\t\techo $zippedData;\n-\n-\t}\n-\n-\t/**\n-\t * \u89e3\u51cd\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\n-\t *\n-\t * @param <type> $path\n-\t * @return <type>\n-\t */\n-\tfunction unzip($source, $tareget)\n-\t{\n-\t\t$tareget = preg_replace('/\\/$/', '', $tareget);\n-\t\t$entries = $this->_readFile($source);\n-\t\tif (!$entries) {\n-\t\t\treturn false;\n-\t\t}\n-\t\t$result = true;\n-\t\tforeach($entries as $entry) {\n-\t\t\t$folder = new Folder($tareget . DS . $entry['Path'], true, 0777);\n-\t\t\t$fp = @fopen($tareget . DS . $entry['Path'] . DS . $entry['Name'], 'wb');\n-\t\t\tif ($fp) {\n-\t\t\t\tif (!fwrite($fp, $entry['Data'])) {\n-\t\t\t\t\t$result = false;\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\t$result = false;\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\t\t\tfclose($fp);\n-\t\t}\n-\t\treturn $result;\n-\t}\n-\n-\t/**\n-\t * ZIP\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n-\t *\n-\t * @param string $path\n-\t * @return    array\n-\t * @access    protected\n-\t */\n-\tfunction _readFile($path)\n-\t{\n-\t\tini_set('mbstring.func_overload', '0');\n-\t\t$this->entries = [];\n-\n-\t\t$oF = fopen($path, 'rb');\n-\t\t$vZ = fread($oF, filesize($path));\n-\t\tfclose($oF);\n-\n-\t\t$aE = explode(\"\\x50\\x4b\\x05\\x06\", $vZ);\n-\t\t$aP = unpack('x16/v1CL', $aE[1]);\n-\t\t$this->Comment = substr($aE[1], 18, $aP['CL']);\n-\t\t$this->Comment = strtr($this->Comment, [\"\\r\\n\" => \"\\n\",\n-\t\t\t\"\\r\" => \"\\n\"]);\n-\t\t$aE = explode(\"\\x50\\x4b\\x01\\x02\", $vZ);\n-\t\t$aE = explode(\"\\x50\\x4b\\x03\\x04\", $aE[0]);\n-\t\tarray_shift($aE);\n-\n-\t\tforeach($aE as $vZ) {\n-\t\t\t$aI = [];\n-\t\t\t$aI['E'] = 0;\n-\t\t\t$aI['EM'] = '';\n-\t\t\t$aP = unpack('v1VN/v1GPF/v1CM/v1FT/v1FD/V1CRC/V1CS/V1UCS/v1FNL', $vZ);\n-\t\t\t$bE = ($aP['GPF'] & 0x0001)? TRUE : FALSE;\n-\t\t\t$nF = $aP['FNL'];\n-\n-\t\t\tif ($aP['GPF'] & 0x0008) {\n-\t\t\t\t$aP1 = unpack('V1CRC/V1CS/V1UCS', substr($vZ, -12));\n-\t\t\t\t$aP['CRC'] = $aP1['CRC'];\n-\t\t\t\t$aP['CS'] = $aP1['CS'];\n-\t\t\t\t$aP['UCS'] = $aP1['UCS'];\n-\t\t\t\t$vZ = substr($vZ, 0, -12);\n-\t\t\t}\n-\n-\t\t\t$aI['N'] = substr($vZ, 26, $nF);\n-\t\t\t$aI['N'] = str_replace('/', DS, $aI['N']);\n-\t\t\tif (substr($aI['N'], -1) == DS) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\t$aI['P'] = dirname($aI['N']);\n-\t\t\t$aI['P'] = $aI['P'] == '.'? '' : $aI['P'];\n-\t\t\t$aI['N'] = basename($aI['N']);\n-\n-\t\t\t$vZ = substr($vZ, 26 + $nF);\n-\n-\t\t\tif (strlen($vZ) != $aP['CS']) {\n-\t\t\t\t$aI['E'] = 1;\n-\t\t\t\t$aI['EM'] = 'Compressed size is not equal with the value in header information.';\n-\t\t\t} else {\n-\t\t\t\tif ($bE) {\n-\t\t\t\t\t$aI['E'] = 5;\n-\t\t\t\t\t$aI['EM'] = 'File is encrypted, which is not supported from this class.';\n-\t\t\t\t} else {\n-\t\t\t\t\tswitch($aP['CM']) {\n-\t\t\t\t\t\tcase 0:\n-\t\t\t\t\t\t\tbreak;\n-\n-\t\t\t\t\t\tcase 8:\n-\t\t\t\t\t\t\t$vZ = gzinflate($vZ);\n-\t\t\t\t\t\t\tbreak;\n-\n-\t\t\t\t\t\tcase 12:\n-\t\t\t\t\t\t\tif (!extension_loaded('bz2')) {\n-\t\t\t\t\t\t\t\tif (strtoupper(substr(PHP_OS, 0, 3)) == 'WIN') {\n-\t\t\t\t\t\t\t\t\t@dl('php_bz2.dll');\n-\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\t@dl('bz2.so');\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (extension_loaded('bz2')) {\n-\t\t\t\t\t\t\t\t$vZ = bzdecompress($vZ);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t$aI['E'] = 7;\n-\t\t\t\t\t\t\t\t$aI['EM'] = \"PHP BZIP2 extension not available.\";\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tbreak;\n-\n-\t\t\t\t\t\tdefault:\n-\t\t\t\t\t\t\t$aI['E'] = 6;\n-\t\t\t\t\t\t\t$aI['EM'] = \"De-/Compression method {$aP['CM']} is not supported.\";\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif (!$aI['E']) {\n-\t\t\t\t\t\tif ($vZ === FALSE) {\n-\t\t\t\t\t\t\t$aI['E'] = 2;\n-\t\t\t\t\t\t\t$aI['EM'] = 'Decompression of data failed.';\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tif (strlen($vZ) != $aP['UCS']) {\n-\t\t\t\t\t\t\t\t$aI['E'] = 3;\n-\t\t\t\t\t\t\t\t$aI['EM'] = 'Uncompressed size is not equal with the value in header information.';\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tif (crc32($vZ) != $aP['CRC']) {\n-\t\t\t\t\t\t\t\t\t$aI['E'] = 4;\n-\t\t\t\t\t\t\t\t\t$aI['EM'] = 'CRC32 checksum is not equal with the value in header information.';\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t$aI['D'] = $vZ;\n-\n-\t\t\t$aI['T'] = mktime(($aP['FT'] & 0xf800) >> 11,\n-\t\t\t\t($aP['FT'] & 0x07e0) >> 5,\n-\t\t\t\t($aP['FT'] & 0x001f) << 1,\n-\t\t\t\t($aP['FD'] & 0x01e0) >> 5,\n-\t\t\t\t($aP['FD'] & 0x001f),\n-\t\t\t\t(($aP['FD'] & 0xfe00) >> 9) + 1980);\n-\t\t\t$entry = [];\n-\t\t\t$entry['Data'] = $aI['D'];\n-\t\t\t$entry['Error'] = $aI['E'];\n-\t\t\t$entry['ErrorMsg'] = $aI['EM'];\n-\t\t\t$entry['Name'] = $aI['N'];\n-\t\t\t$entry['Path'] = $aI['P'];\n-\t\t\t$entry['Time'] = $aI['T'];\n-\t\t\t$this->entries[] = $entry;\n-\t\t}\n-\n-\t\treturn $this->entries;\n-\n-\t}\n-\n-}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 7,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4639019bcac88bbef2acefc74ee45fe17a453429",
            "date": "2025-01-23T06:42:11Z",
            "author_login": "momofff"
          },
          {
            "sha": "3ca87fbd2100851756133fc486a94bb2f5301642",
            "date": "2025-01-23T06:29:03Z",
            "author_login": "momofff"
          },
          {
            "sha": "4d855801d1065b3b75189194a76b806200466dae",
            "date": "2025-01-23T06:16:13Z",
            "author_login": "momofff"
          },
          {
            "sha": "6a85e7b486fce4d26990b461727689e5486feb35",
            "date": "2025-01-23T06:05:33Z",
            "author_login": "seto1"
          },
          {
            "sha": "b867cb1da3c13ea9bdda67aac5eec4c79842ef51",
            "date": "2025-01-23T06:03:56Z",
            "author_login": "seto1"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-78",
    "description": "There is a Potential Zip Slip Vulnerability and OS Command Injection Vulnerability on the management system of baserCMS. Users with permissions to upload files may upload crafted zip files which may execute arbitrary commands on the host operating system. This is a vulnerability that needs to be addressed when the management system is used by an unspecified number of users. If you are eligible, please update to the new version as soon as possible.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-11-26T18:15:07.253",
    "last_modified": "2024-11-21T06:25:51.803",
    "fix_date": "2021-11-25T06:17:52Z"
  },
  "references": [
    {
      "url": "https://github.com/baserproject/basercms/commit/9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/baserproject/basercms/security/advisories/GHSA-7rpc-9m88-cf9w",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/baserproject/basercms/commit/9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/baserproject/basercms/security/advisories/GHSA-7rpc-9m88-cf9w",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.805065",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "basercms",
    "owner": "baserproject",
    "created_at": "2012-02-12T06:13:53Z",
    "updated_at": "2025-01-23T06:43:01Z",
    "pushed_at": "2025-01-23T06:42:58Z",
    "size": 100922,
    "stars": 174,
    "forks": 131,
    "open_issues": 276,
    "watchers": 174,
    "has_security_policy": false,
    "default_branch": "5.1.x",
    "protected_branches": [
      "5.1.x"
    ],
    "languages": {
      "PHP": 8898382,
      "CSS": 1244410,
      "JavaScript": 342744,
      "SCSS": 236685,
      "HTML": 150870,
      "Vue": 16205,
      "Shell": 6070,
      "Batchfile": 835
    },
    "commit_activity": {
      "total_commits_last_year": 1850,
      "avg_commits_per_week": 35.57692307692308,
      "days_active_last_year": 215
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:53:59.160625"
  }
}