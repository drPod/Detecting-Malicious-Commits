{
  "cve_id": "CVE-2021-41268",
  "github_data": {
    "repository": "symfony/symfony",
    "fix_commit": "36a808b857cd3240244f4b224452fb1e70dc6dfc",
    "related_commits": [
      "36a808b857cd3240244f4b224452fb1e70dc6dfc",
      "36a808b857cd3240244f4b224452fb1e70dc6dfc"
    ],
    "patch_url": "https://github.com/symfony/symfony/commit/36a808b857cd3240244f4b224452fb1e70dc6dfc.patch",
    "fix_commit_details": {
      "sha": "36a808b857cd3240244f4b224452fb1e70dc6dfc",
      "commit_date": "2021-10-23T11:11:11Z",
      "author": {
        "login": "wouterj",
        "type": "User",
        "stats": {
          "total_commits": 428,
          "average_weekly_commits": 0.5452229299363057,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 203
        }
      },
      "commit_message": {
        "title": "[SecurityBundle] Default signature_properties to the previous behavior",
        "length": 70,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 51,
        "additions": 41,
        "deletions": 10
      },
      "files": [
        {
          "filename": "src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/RememberMeFactory.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -208,6 +208,7 @@ public function addConfiguration(NodeDefinition $node)\n                 ->requiresAtLeastOneElement()\n                 ->info('An array of properties on your User that are used to sign the remember-me cookie. If any of these change, all existing cookies will become invalid.')\n                 ->example(['email', 'password'])\n+                ->defaultValue(['password'])\n             ->end()\n             ->arrayNode('token_provider')\n                 ->beforeNormalization()"
        },
        {
          "filename": "src/Symfony/Bundle/SecurityBundle/Tests/Functional/Bundle/RememberMeBundle/Security/UserChangingUserProvider.php",
          "status": "modified",
          "additions": 15,
          "deletions": 8,
          "patch": "@@ -21,33 +21,40 @@ class UserChangingUserProvider implements UserProviderInterface\n {\n     private $inner;\n \n+    public static $changePassword = false;\n+\n     public function __construct(InMemoryUserProvider $inner)\n     {\n         $this->inner = $inner;\n     }\n \n     public function loadUserByUsername($username)\n     {\n-        return $this->inner->loadUserByUsername($username);\n+        return $this->changeUser($this->inner->loadUserByUsername($username));\n     }\n \n     public function loadUserByIdentifier(string $userIdentifier): UserInterface\n     {\n-        return $this->inner->loadUserByIdentifier($userIdentifier);\n+        return $this->changeUser($this->inner->loadUserByIdentifier($userIdentifier));\n     }\n \n     public function refreshUser(UserInterface $user)\n     {\n-        $user = $this->inner->refreshUser($user);\n-\n-        $alterUser = \\Closure::bind(function (InMemoryUser $user) { $user->password = 'foo'; }, null, class_exists(User::class) ? User::class : InMemoryUser::class);\n-        $alterUser($user);\n-\n-        return $user;\n+        return $this->changeUser($this->inner->refreshUser($user));\n     }\n \n     public function supportsClass($class)\n     {\n         return $this->inner->supportsClass($class);\n     }\n+\n+    private function changeUser(UserInterface $user): UserInterface\n+    {\n+        if (self::$changePassword) {\n+            $alterUser = \\Closure::bind(function (InMemoryUser $user) { $user->password = 'changed!'; }, null, class_exists(User::class) ? User::class : InMemoryUser::class);\n+            $alterUser($user);\n+        }\n+\n+        return $user;\n+    }\n }"
        },
        {
          "filename": "src/Symfony/Bundle/SecurityBundle/Tests/Functional/RememberMeTest.php",
          "status": "modified",
          "additions": 25,
          "deletions": 2,
          "patch": "@@ -11,8 +11,15 @@\n \n namespace Symfony\\Bundle\\SecurityBundle\\Tests\\Functional;\n \n+use Symfony\\Bundle\\SecurityBundle\\Tests\\Functional\\Bundle\\RememberMeBundle\\Security\\UserChangingUserProvider;\n+\n class RememberMeTest extends AbstractWebTestCase\n {\n+    protected function setUp(): void\n+    {\n+        UserChangingUserProvider::$changePassword = false;\n+    }\n+\n     /**\n      * @dataProvider provideConfigs\n      */\n@@ -51,11 +58,19 @@ public function testUserChangeClearsCookie()\n \n         $this->assertSame(302, $client->getResponse()->getStatusCode());\n         $cookieJar = $client->getCookieJar();\n-        $this->assertNotNull($cookieJar->get('REMEMBERME'));\n+        $this->assertNotNull($cookie = $cookieJar->get('REMEMBERME'));\n+\n+        UserChangingUserProvider::$changePassword = true;\n \n+        // change password (through user provider), this deauthenticates the session\n         $client->request('GET', '/profile');\n         $this->assertRedirect($client->getResponse(), '/login');\n         $this->assertNull($cookieJar->get('REMEMBERME'));\n+\n+        // restore the old remember me cookie, it should no longer be valid\n+        $cookieJar->set($cookie);\n+        $client->request('GET', '/profile');\n+        $this->assertRedirect($client->getResponse(), '/login');\n     }\n \n     public function testSessionLessRememberMeLogout()\n@@ -121,11 +136,19 @@ public function testLegacyUserChangeClearsCookie()\n \n         $this->assertSame(302, $client->getResponse()->getStatusCode());\n         $cookieJar = $client->getCookieJar();\n-        $this->assertNotNull($cookieJar->get('REMEMBERME'));\n+        $this->assertNotNull($cookie = $cookieJar->get('REMEMBERME'));\n+\n+        UserChangingUserProvider::$changePassword = true;\n \n+        // change password (through user provider), this deauthenticates the session\n         $client->request('GET', '/profile');\n         $this->assertRedirect($client->getResponse(), '/login');\n         $this->assertNull($cookieJar->get('REMEMBERME'));\n+\n+        // restore the old remember me cookie, it should no longer be valid\n+        $cookieJar->set($cookie);\n+        $client->request('GET', '/profile');\n+        $this->assertRedirect($client->getResponse(), '/login');\n     }\n \n     /**"
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f6312d3f3313afc62c5b1e920b2cbfe62fcf3f8e",
            "date": "2025-01-13T09:20:08Z",
            "author_login": "nicolas-grekas"
          },
          {
            "sha": "7b338721ca42ba1d5544658b39359916715170f4",
            "date": "2025-01-12T22:16:37Z",
            "author_login": "derrabus"
          },
          {
            "sha": "1a76f128845de80fe6644c7de12e0dcdad8197f1",
            "date": "2025-01-12T20:19:12Z",
            "author_login": "derrabus"
          },
          {
            "sha": "0d0758e87be2e990d7744e4e66b59e6609a2b3c9",
            "date": "2025-01-12T17:25:07Z",
            "author_login": "fabpot"
          },
          {
            "sha": "946278f9f8cd1bc40c075d37b1d6c2a289c8eb4c",
            "date": "2025-01-12T12:57:08Z",
            "author_login": "alamirault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-384",
    "description": "Symfony/SecurityBundle is the security system for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Since the rework of the Remember me cookie in version 5.3.0, the cookie is not invalidated when the user changes their password. Attackers can therefore maintain their access to the account even if the password is changed as long as they have had the chance to login once and get a valid remember me cookie. Starting with version 5.3.12, Symfony makes the password part of the signature by default. In that way, when the password changes, then the cookie is not valid anymore.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-11-24T19:15:07.817",
    "last_modified": "2024-11-21T06:25:55.713",
    "fix_date": "2021-10-23T11:11:11Z"
  },
  "references": [
    {
      "url": "https://github.com/symfony/symfony/commit/36a808b857cd3240244f4b224452fb1e70dc6dfc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/pull/44243",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/releases/tag/v5.3.12",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-qw36-p97w-vcqr",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/commit/36a808b857cd3240244f4b224452fb1e70dc6dfc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/pull/44243",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/releases/tag/v5.3.12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-qw36-p97w-vcqr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.804214",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symfony",
    "owner": "symfony",
    "created_at": "2010-01-04T14:21:21Z",
    "updated_at": "2025-01-14T09:56:31Z",
    "pushed_at": "2025-01-13T13:22:56Z",
    "size": 290479,
    "stars": 29917,
    "forks": 9510,
    "open_issues": 879,
    "watchers": 29917,
    "has_security_policy": false,
    "default_branch": "7.3",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "5.4",
      "6.0",
      "6.1",
      "6.2",
      "6.3",
      "6.4",
      "7.0"
    ],
    "languages": {
      "PHP": 30007525,
      "Twig": 527335,
      "CSS": 56186,
      "JavaScript": 28225,
      "HTML": 16804,
      "Shell": 9654,
      "Makefile": 1612,
      "Hack": 26
    },
    "commit_activity": {
      "total_commits_last_year": 4163,
      "avg_commits_per_week": 80.0576923076923,
      "days_active_last_year": 343
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:44:47.171985"
  }
}