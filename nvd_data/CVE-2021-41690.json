{
  "cve_id": "CVE-2021-41690",
  "github_data": {
    "repository": "DCMTK/dcmtk",
    "fix_commit": "a9697dfeb672b0b9412c00c7d36d801e27ec85cb",
    "related_commits": [
      "a9697dfeb672b0b9412c00c7d36d801e27ec85cb",
      "a9697dfeb672b0b9412c00c7d36d801e27ec85cb"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a9697dfeb672b0b9412c00c7d36d801e27ec85cb",
      "commit_date": "2021-10-01T22:29:56Z",
      "author": {
        "login": "michaelonken",
        "type": "User",
        "stats": {
          "total_commits": 455,
          "average_weekly_commits": 0.7165354330708661,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 184
        }
      },
      "commit_message": {
        "title": "Fixed poss. NULL pointer dereference/double free.",
        "length": 128,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 306,
        "additions": 201,
        "deletions": 105
      },
      "files": [
        {
          "filename": "dcmnet/include/dcmtk/dcmnet/dulstruc.h",
          "status": "renamed",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -71,6 +71,11 @@\n #include \"dcmtk/config/osconfig.h\"    /* make sure OS specific configuration is included first */\n #include \"dcmtk/dcmnet/extneg.h\"\n #include \"dcmtk/dcmnet/dcuserid.h\"\n+#include \"dcmtk/dcmnet/dicom.h\"\n+#include \"dcmtk/dcmnet/dntypes.h\"\n+#include \"dcmtk/dcmnet/dul.h\"\n+#include \"dcmtk/dcmnet/lst.h\"\n+\n \n class DcmTransportConnection;\n class DcmTransportLayer;\n@@ -290,6 +295,9 @@ typedef struct dul_datapdu {\n     DUL_PRESENTATIONDATAVALUE presentationDataValue;\n }   DUL_DATAPDU;\n \n+\n+\n+\n #define DUL_PROTOCOL      (unsigned short) 0x01\n \n #define DUL_TYPEAPPLICATIONCONTEXT  (unsigned char)0x10"
        },
        {
          "filename": "dcmnet/include/dcmtk/dcmnet/helpers.h",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -0,0 +1,38 @@\n+/*\n+ *\n+ *  Copyright (C) 2021, OFFIS e.V.\n+ *  All rights reserved.  See COPYRIGHT file for details.\n+ *\n+ *  This software and supporting documentation were partly developed by\n+ *\n+ *    OFFIS e.V.\n+ *    R&D Division Health\n+ *    Escherweg 2\n+ *    D-26121 Oldenburg, Germany\n+ *\n+ *\n+ *  Module: dcmnet\n+ *\n+ *  Author: Michael Onken\n+ *\n+ *  Purpose: Collection of helper functions\n+ *\n+ */\n+\n+#ifndef DCMHET_HELPERS_H\n+#define DCMHET_HELPERS_H\n+\n+#include \"dcmtk/ofstd/ofcond.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n+\n+struct T_ASC_Parameters;\n+class LST_HEAD;\n+\n+\n+void\n+destroyPresentationContextList(LST_HEAD ** l);\n+\n+void\n+destroyUserInformationLists(DUL_USERINFO * userInfo);\n+\n+#endif"
        },
        {
          "filename": "dcmnet/libsrc/CMakeLists.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -35,6 +35,7 @@ DCMTK_ADD_LIBRARY(dcmnet\n   dulpres.cc\n   dwrap.c\n   extneg.cc\n+  helpers.cc\n   lst.cc\n   scp.cc\n   scpcfg.cc"
        },
        {
          "filename": "dcmnet/libsrc/Makefile.in",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -25,7 +25,7 @@ objs = assoc.o cond.o dcompat.o dimcancl.o dimcmd.o dimdump.o dimecho.o \\\n \tdulfsm.o dulparse.o dulpres.o dul.o lst.o extneg.o dimget.o dcmlayer.o \\\n \tdcmtrans.o dcasccfg.o dcasccff.o dccfuidh.o dccftsmp.o dccfpcmp.o \\\n \tdccfrsmp.o dccfenmp.o dccfprmp.o dfindscu.o dstorscp.o dstorscu.o \\\n-\tdcuserid.o scu.o scp.o scpcfg.o scpthrd.o scppool.o dwrap.o\n+\tdcuserid.o helper.o scu.o scp.o scpcfg.o scpthrd.o scppool.o dwrap.o\n \n library = libdcmnet.$(LIBEXT)\n "
        },
        {
          "filename": "dcmnet/libsrc/assoc.cc",
          "status": "modified",
          "additions": 2,
          "deletions": 21,
          "patch": "@@ -118,6 +118,7 @@\n #include \"dcmtk/ofstd/ofconsol.h\"\n #include \"dcmtk/ofstd/ofstd.h\"\n #include \"dcmtk/dcmnet/dcmtrans.h\"\n+#include \"dcmtk/dcmnet/helpers.h\"\n \n /*\n ** Constant Definitions\n@@ -336,25 +337,6 @@ ASC_createAssociationParameters(T_ASC_Parameters ** params,\n     return EC_Normal;\n }\n \n-static void\n-destroyPresentationContextList(LST_HEAD ** lst)\n-{\n-    DUL_PRESENTATIONCONTEXT *pc;\n-    DUL_TRANSFERSYNTAX *ts;\n-\n-    if ((lst == NULL) || (*lst == NULL))\n-        return;\n-    while ((pc = (DUL_PRESENTATIONCONTEXT*) LST_Dequeue(lst)) != NULL) {\n-        if (pc->proposedTransferSyntax != NULL) {\n-            while ((ts = (DUL_TRANSFERSYNTAX*) LST_Dequeue(&pc->proposedTransferSyntax)) != NULL) {\n-                free(ts);\n-            }\n-            LST_Destroy(&pc->proposedTransferSyntax);\n-        }\n-        free(pc);\n-    }\n-    LST_Destroy(lst);\n-}\n \n OFCondition\n ASC_destroyAssociationParameters(T_ASC_Parameters ** params)\n@@ -1699,8 +1681,7 @@ ASC_destroyAssociation(T_ASC_Association ** association)\n     }\n \n     if ((*association)->params != NULL) {\n-        cond = ASC_destroyAssociationParameters(&(*association)->params);\n-        if (cond.bad()) return cond;\n+        ASC_destroyAssociationParameters(&(*association)->params);\n     }\n \n     if ((*association)->sendPDVBuffer != NULL)"
        },
        {
          "filename": "dcmnet/libsrc/dcuserid.cc",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,6 +1,6 @@\n /*\n  *\n- *  Copyright (C) 1997-2018, OFFIS e.V.\n+ *  Copyright (C) 1997-2021, OFFIS e.V.\n  *  All rights reserved.  See COPYRIGHT file for details.\n  *\n  *  This software and supporting documentation were developed by\n@@ -23,7 +23,7 @@\n #include \"dcmtk/config/osconfig.h\" /* make sure OS specific configuration is included first */\n #include \"dcmtk/dcmnet/dcuserid.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n \n /* ************************************************************************* */\n /*       Implementation of class UserIdentityNegotiationSubItem              */"
        },
        {
          "filename": "dcmnet/libsrc/dul.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -125,7 +125,7 @@ END_EXTERN_C\n #include \"dcmtk/ofstd/ofstd.h\"\n \n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n #include \"dulpriv.h\"\n #include \"dulfsm.h\"\n #include \"dcmtk/dcmnet/dcmtrans.h\""
        },
        {
          "filename": "dcmnet/libsrc/dulconst.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -72,7 +72,7 @@\n #include \"dcmtk/dcmnet/diutil.h\"\n #include \"dcmtk/dcmnet/lst.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n #include \"dulpriv.h\"\n #include \"dcmtk/ofstd/ofconsol.h\"\n "
        },
        {
          "filename": "dcmnet/libsrc/dulextra.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -96,7 +96,7 @@\n #include \"dcmtk/dcmnet/lst.h\"\n #include \"dcmtk/dcmnet/cond.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n #include \"dulpriv.h\"\n #include \"dcmtk/dcmnet/dcmtrans.h\"\n #include \"dcmtk/dcmnet/diutil.h\""
        },
        {
          "filename": "dcmnet/libsrc/dulfsm.cc",
          "status": "modified",
          "additions": 2,
          "deletions": 49,
          "patch": "@@ -105,7 +105,7 @@ END_EXTERN_C\n #include \"dcmtk/dcmnet/lst.h\"\n #include \"dcmtk/dcmnet/cond.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n #include \"dulpriv.h\"\n #include \"dulfsm.h\"\n #include \"dcmtk/ofstd/ofbmanip.h\"\n@@ -114,6 +114,7 @@ END_EXTERN_C\n #include \"dcmtk/dcmnet/dcmtrans.h\"\n #include \"dcmtk/dcmnet/dcmlayer.h\"\n #include \"dcmtk/dcmnet/diutil.h\"\n+#include \"dcmtk/dcmnet/helpers.h\"\n #include \"dcmtk/ofstd/ofsockad.h\" /* for class OFSockAddr */\n #include <ctime>\n \n@@ -304,9 +305,6 @@ findPresentationCtx(LST_HEAD ** lst, DUL_PRESENTATIONCONTEXTID contextID);\n PRV_SCUSCPROLE *\n findSCUSCPRole(LST_HEAD ** lst, char *abstractSyntax);\n \n-void destroyPresentationContextList(LST_HEAD ** l);\n-void destroyUserInformationLists(DUL_USERINFO * userInfo);\n-\n static volatile FSM_Event_Description Event_Table[] = {\n     {A_ASSOCIATE_REQ_LOCAL_USER, \"A-ASSOCIATE request (local user)\"},\n     {TRANS_CONN_CONFIRM_LOCAL_USER, \"Transport conn confirmation (local)\"},\n@@ -3978,48 +3976,3 @@ findSCUSCPRole(LST_HEAD ** lst, char *abstractSyntax)\n     }\n     return NULL;\n }\n-\n-void\n-destroyPresentationContextList(LST_HEAD ** l)\n-{\n-    PRV_PRESENTATIONCONTEXTITEM\n-    * prvCtx;\n-    DUL_SUBITEM\n-        * subItem;\n-\n-    if (*l == NULL)\n-        return;\n-\n-    prvCtx = (PRV_PRESENTATIONCONTEXTITEM*)LST_Dequeue(l);\n-    while (prvCtx != NULL) {\n-        subItem = (DUL_SUBITEM*)LST_Dequeue(&prvCtx->transferSyntaxList);\n-        while (subItem != NULL) {\n-            free(subItem);\n-            subItem = (DUL_SUBITEM*)LST_Dequeue(&prvCtx->transferSyntaxList);\n-        }\n-        LST_Destroy(&prvCtx->transferSyntaxList);\n-        free(prvCtx);\n-        prvCtx = (PRV_PRESENTATIONCONTEXTITEM*)LST_Dequeue(l);\n-    }\n-    LST_Destroy(l);\n-}\n-\n-void\n-destroyUserInformationLists(DUL_USERINFO * userInfo)\n-{\n-    PRV_SCUSCPROLE\n-    * role;\n-\n-    role = (PRV_SCUSCPROLE*)LST_Dequeue(&userInfo->SCUSCPRoleList);\n-    while (role != NULL) {\n-        free(role);\n-        role = (PRV_SCUSCPROLE*)LST_Dequeue(&userInfo->SCUSCPRoleList);\n-    }\n-    LST_Destroy(&userInfo->SCUSCPRoleList);\n-\n-    /* extended negotiation */\n-    delete userInfo->extNegList; userInfo->extNegList = NULL;\n-\n-    /* user identity negotiation */\n-    delete userInfo->usrIdent; userInfo->usrIdent = NULL;\n-}"
        },
        {
          "filename": "dcmnet/libsrc/dulparse.cc",
          "status": "modified",
          "additions": 72,
          "deletions": 28,
          "patch": "@@ -70,7 +70,8 @@\n #include \"dcmtk/dcmnet/lst.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n #include \"dcmtk/dcmnet/diutil.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n+#include \"dcmtk/dcmnet/helpers.h\"\n #include \"dulpriv.h\"\n #include \"dcmtk/ofstd/ofconsol.h\"\n \n@@ -142,9 +143,6 @@ parseAssociate(unsigned char *buf, unsigned long pduLength,\n         * context;\n \n     (void) memset(assoc, 0, sizeof(*assoc));\n-    if ((assoc->presentationContextList = LST_Create()) == NULL) return EC_MemoryExhausted;\n-    if ((assoc->userInfo.SCUSCPRoleList = LST_Create()) == NULL) return EC_MemoryExhausted;\n-\n     // Check if the PDU actually is long enough for the fields we read\n     if (pduLength < 2 + 2 + 16 + 16 + 32)\n         return makeLengthError(\"associate PDU\", pduLength, 2 + 2 + 16 + 16 + 32);\n@@ -205,6 +203,8 @@ parseAssociate(unsigned char *buf, unsigned long pduLength,\n             << \"Called AP Title:  \" << assoc->calledAPTitle << OFendl\n             << \"Calling AP Title: \" << assoc->callingAPTitle);\n     }\n+    if ((assoc->presentationContextList = LST_Create()) == NULL) return EC_MemoryExhausted;\n+    if ((assoc->userInfo.SCUSCPRoleList = LST_Create()) == NULL) return EC_MemoryExhausted;\n     while ((cond.good()) && (pduLength > 0))\n     {\n         type = *buf;\n@@ -219,44 +219,80 @@ parseAssociate(unsigned char *buf, unsigned long pduLength,\n             {\n                 buf += itemLength;\n                 if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n-                  return makeUnderflowError(\"Application Context item\", pduLength, itemLength);\n-                DCMNET_TRACE(\"Successfully parsed Application Context\");\n+                {\n+                    cond = makeUnderflowError(\"Application Context item\", pduLength, itemLength);\n+                }\n+                else\n+                {\n+                    DCMNET_TRACE(\"Successfully parsed Application Context\");\n+                }\n             }\n             break;\n         case DUL_TYPEPRESENTATIONCONTEXTRQ:\n         case DUL_TYPEPRESENTATIONCONTEXTAC:\n             context = (PRV_PRESENTATIONCONTEXTITEM*)malloc(sizeof(PRV_PRESENTATIONCONTEXTITEM));\n-            if (context == NULL) return EC_MemoryExhausted;\n-            (void) memset(context, 0, sizeof(*context));\n-            cond = parsePresentationContext(type, context, buf, &itemLength, pduLength);\n-            if (cond.bad()) return cond;\n-            buf += itemLength;\n-            if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n-              return makeUnderflowError(\"Presentation Context item\", pduLength, itemLength);\n-            LST_Enqueue(&assoc->presentationContextList, (LST_NODE*)context);\n-            DCMNET_TRACE(\"Successfully parsed Presentation Context\");\n+            if (context != NULL)\n+            {\n+                (void) memset(context, 0, sizeof(*context));\n+                cond = parsePresentationContext(type, context, buf, &itemLength, pduLength);\n+                if (cond.bad())\n+                {\n+                    free(context);\n+                }\n+                else\n+                {\n+                    buf += itemLength;\n+                    if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n+                    {\n+                        cond =  makeUnderflowError(\"Presentation Context item\", pduLength, itemLength);\n+                    }\n+                    else\n+                    {\n+                        LST_Enqueue(&assoc->presentationContextList, (LST_NODE*)context);\n+                        DCMNET_TRACE(\"Successfully parsed Presentation Context\");\n+                    }\n+                }\n+            }\n+            else\n+            {\n+                cond = EC_MemoryExhausted;\n+            }\n             break;\n         case DUL_TYPEUSERINFO:\n             // parse user info, which can contain several sub-items like User\n             // Identity Negotiation or SOP Class Extended Negotiation\n             cond = parseUserInfo(&assoc->userInfo, buf, &itemLength, assoc->type, pduLength);\n-            if (cond.bad())\n-                return cond;\n-            buf += itemLength;\n-            if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n-              return makeUnderflowError(\"User Information item\", pduLength, itemLength);\n-            DCMNET_TRACE(\"Successfully parsed User Information\");\n+            if (cond.good())\n+            {\n+                buf += itemLength;\n+                if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n+                {\n+                    cond = makeUnderflowError(\"User Information item\", pduLength, itemLength);\n+                }\n+                else\n+                {\n+                    DCMNET_TRACE(\"Successfully parsed User Information\");\n+                }\n+            }\n             break;\n         default:\n             cond = parseDummy(buf, &itemLength, pduLength);\n-            if (cond.bad())\n-                return cond;\n-            buf += itemLength;\n-            if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n-              return makeUnderflowError(\"unknown item type\", pduLength, itemLength);\n+            if (cond.good())\n+            {\n+                buf += itemLength;\n+                if (!OFStandard::safeSubtract(pduLength, itemLength, pduLength))\n+                {\n+                    cond = makeUnderflowError(\"unknown item type\", pduLength, itemLength);\n+                }\n+            }\n             break;\n         }\n     }\n+    if (cond.bad())\n+    {\n+      destroyPresentationContextList(&assoc->presentationContextList);\n+      destroyUserInformationLists(&assoc->userInfo);\n+    }\n     return cond;\n }\n \n@@ -404,7 +440,11 @@ parsePresentationContext(unsigned char type,\n                 subItem = (DUL_SUBITEM*)malloc(sizeof(DUL_SUBITEM));\n                 if (subItem == NULL) return EC_MemoryExhausted;\n                 cond = parseSubItem(subItem, buf, &length, presentationLength);\n-                if (cond.bad()) return cond;\n+                if (cond.bad())\n+                {\n+                    free(subItem);\n+                    return cond;\n+                }\n                 LST_Enqueue(&context->transferSyntaxList, (LST_NODE*)subItem);\n                 buf += length;\n                 if (!OFStandard::safeSubtract(presentationLength, length, presentationLength))\n@@ -525,7 +565,11 @@ parseUserInfo(DUL_USERINFO * userInfo,\n             role = (PRV_SCUSCPROLE*)malloc(sizeof(PRV_SCUSCPROLE));\n             if (role == NULL) return EC_MemoryExhausted;\n             cond = parseSCUSCPRole(role, buf, &length, userLength);\n-            if (cond.bad()) return cond;\n+            if (cond.bad())\n+            {\n+                free(role);\n+                return cond;\n+            }\n             LST_Enqueue(&userInfo->SCUSCPRoleList, (LST_NODE*)role);\n             buf += length;\n             if (!OFStandard::safeSubtract(userLength, OFstatic_cast(short unsigned int, length), userLength))"
        },
        {
          "filename": "dcmnet/libsrc/dulpres.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -66,7 +66,7 @@\n #include \"dcmtk/dcmnet/cond.h\"\n #include \"dcmtk/dcmnet/lst.h\"\n #include \"dcmtk/dcmnet/dul.h\"\n-#include \"dulstruc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n #include \"dulpriv.h\"\n #include \"dulfsm.h\"\n "
        },
        {
          "filename": "dcmnet/libsrc/helpers.cc",
          "status": "added",
          "additions": 71,
          "deletions": 0,
          "patch": "@@ -0,0 +1,71 @@\n+/*\n+ *\n+ *  Copyright (C) 2021, OFFIS e.V.\n+ *  All rights reserved.  See COPYRIGHT file for details.\n+ *\n+ *  This software and supporting documentation were partly developed by\n+ *\n+ *    OFFIS e.V.\n+ *    R&D Division Health\n+ *    Escherweg 2\n+ *    D-26121 Oldenburg, Germany\n+ *\n+ *\n+ *  Module: dcmnet\n+ *\n+ *  Author: Michael Onken\n+ *\n+ *  Purpose: Collection of helper functions\n+ *\n+ */\n+\n+#include \"dcmtk/dcmnet/helpers.h\"\n+#include \"dcmtk/dcmnet/lst.h\"\n+#include \"dcmtk/dcmnet/assoc.h\"\n+#include \"dcmtk/dcmnet/dulstruc.h\"\n+\n+\n+void\n+destroyPresentationContextList(LST_HEAD ** l)\n+{\n+    PRV_PRESENTATIONCONTEXTITEM\n+    * prvCtx;\n+    DUL_SUBITEM\n+        * subItem;\n+\n+    if (*l == NULL)\n+        return;\n+\n+    prvCtx = (PRV_PRESENTATIONCONTEXTITEM*)LST_Dequeue(l);\n+    while (prvCtx != NULL) {\n+        subItem = (DUL_SUBITEM*)LST_Dequeue(&prvCtx->transferSyntaxList);\n+        while (subItem != NULL) {\n+            free(subItem);\n+            subItem = (DUL_SUBITEM*)LST_Dequeue(&prvCtx->transferSyntaxList);\n+        }\n+        LST_Destroy(&prvCtx->transferSyntaxList);\n+        free(prvCtx);\n+        prvCtx = (PRV_PRESENTATIONCONTEXTITEM*)LST_Dequeue(l);\n+    }\n+    LST_Destroy(l);\n+}\n+\n+void\n+destroyUserInformationLists(DUL_USERINFO * userInfo)\n+{\n+    PRV_SCUSCPROLE\n+    * role;\n+\n+    role = (PRV_SCUSCPROLE*)LST_Dequeue(&userInfo->SCUSCPRoleList);\n+    while (role != NULL) {\n+        free(role);\n+        role = (PRV_SCUSCPROLE*)LST_Dequeue(&userInfo->SCUSCPRoleList);\n+    }\n+    LST_Destroy(&userInfo->SCUSCPRoleList);\n+\n+    /* extended negotiation */\n+    delete userInfo->extNegList; userInfo->extNegList = NULL;\n+\n+    /* user identity negotiation */\n+    delete userInfo->usrIdent; userInfo->usrIdent = NULL;\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2150e2db0b716947fd1241c29db8b06486ad89e5",
            "date": "2025-01-24T11:20:29Z",
            "author_login": "eichelberg"
          },
          {
            "sha": "bffa3e9116abb7038b432443f16b1bd390e80245",
            "date": "2025-01-23T14:51:21Z",
            "author_login": "eichelberg"
          },
          {
            "sha": "ffe976f5f7f8f45773c3e3b4e688610cd9b6b5f2",
            "date": "2025-01-22T09:39:56Z",
            "author_login": "eichelberg"
          },
          {
            "sha": "b7fba5ab939474db292af5e2c38df74684da54c1",
            "date": "2025-01-21T10:45:06Z",
            "author_login": "jriesmeier"
          },
          {
            "sha": "1d205bcd307164c99e0d4bbf412110372658d847",
            "date": "2025-01-21T10:12:28Z",
            "author_login": "jriesmeier"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-401",
    "description": "DCMTK through 3.6.6 does not handle memory free properly. The malloced memory for storing all file information are recorded in a global variable LST and are not freed properly. Sending specific requests to the dcmqrdb program can incur a memory leak. An attacker can use it to launch a DoS attack.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-28T13:15:10.783",
    "last_modified": "2024-11-21T06:26:38.497",
    "fix_date": "2021-10-01T22:29:56Z"
  },
  "references": [
    {
      "url": "https://github.com/DCMTK/dcmtk",
      "source": "cve@mitre.org",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DCMTK/dcmtk/commit/a9697dfeb672b0b9412c00c7d36d801e27ec85cb",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00022.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/DCMTK/dcmtk",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DCMTK/dcmtk/commit/a9697dfeb672b0b9412c00c7d36d801e27ec85cb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.493514",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "dcmtk",
    "owner": "DCMTK",
    "created_at": "2017-09-09T08:35:42Z",
    "updated_at": "2025-01-25T16:53:10Z",
    "pushed_at": "2025-01-25T10:16:13Z",
    "size": 40395,
    "stars": 764,
    "forks": 319,
    "open_issues": 10,
    "watchers": 764,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 35579853,
      "C": 33199612,
      "Roff": 1573409,
      "CMake": 289459,
      "Makefile": 241685,
      "Shell": 121094,
      "Yacc": 30502,
      "M4": 21757,
      "Perl": 14706,
      "Lex": 11428,
      "Tcl": 10289,
      "CSS": 2444,
      "AMPL": 1870,
      "HTML": 177
    },
    "commit_activity": {
      "total_commits_last_year": 244,
      "avg_commits_per_week": 4.6923076923076925,
      "days_active_last_year": 106
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:26:13.450968"
  }
}