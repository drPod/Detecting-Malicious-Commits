{
  "cve_id": "CVE-2021-4179",
  "github_data": {
    "repository": "livehelperchat/livehelperchat",
    "fix_commit": "c3881fb528af349bf47f9ccbf83c994087faa3e6",
    "related_commits": [
      "c3881fb528af349bf47f9ccbf83c994087faa3e6",
      "c3881fb528af349bf47f9ccbf83c994087faa3e6"
    ],
    "patch_url": "https://github.com/livehelperchat/livehelperchat/commit/c3881fb528af349bf47f9ccbf83c994087faa3e6.patch",
    "fix_commit_details": {
      "sha": "c3881fb528af349bf47f9ccbf83c994087faa3e6",
      "commit_date": "2021-12-27T08:47:03Z",
      "author": {
        "login": "remdex",
        "type": "User",
        "stats": {
          "total_commits": 8009,
          "average_weekly_commits": 12.652448657187994,
          "total_additions": 4588709,
          "total_deletions": 2955518,
          "weeks_active": 586
        }
      },
      "commit_message": {
        "title": "Separate permission to use [html] code",
        "length": 38,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 23,
        "additions": 21,
        "deletions": 2
      },
      "files": [
        {
          "filename": "lhc_web/lib/core/lhchat/lhchatworkflow.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -875,6 +875,12 @@ public static function presendCannedMsg($chat) {\n \r\n             $msg = new erLhcoreClassModelmsg();\r\n             $msg->msg = $cannedMsg->msg_to_user;\r\n+\r\n+            if (strpos($msg->msg,'[html]') !== false && !erLhcoreClassUser::instance()->hasAccessTo('lhchat','htmlbbcodeenabled')) {\r\n+                $msg->msg = '[html] is disabled for you!';\r\n+                $msg->user_id = -1;\r\n+            }\r\n+\r\n             $msg->chat_id = $chat->id;\r\n             $msg->user_id = $chat->user_id;\r\n             $msg->name_support = $chat->user->name_support;\r"
        },
        {
          "filename": "lhc_web/modules/lhchat/addmsgadmin.php",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -66,7 +66,12 @@\n     \t        $msg->time = time();\n     \t        $msg->name_support = $userData->name_support;\n \n-    \t        if (isset($_POST['meta_msg'])) {\n+                if (strpos($msg->msg,'[html]') !== false && !$currentUser->hasAccessTo('lhchat','htmlbbcodeenabled')) {\n+                    $msg->msg = '[html] is disabled for you!';\n+                    $msg->user_id = -1;\n+                }\n+\n+    \t        if (isset($_POST['meta_msg']) && $currentUser->hasAccessTo('lhchat','metamsgenabled')) {\n                     $meta_msg = json_decode($_POST['meta_msg'], true);\n                     if (is_array($meta_msg)) {\n                         $metaContent = [];"
        },
        {
          "filename": "lhc_web/modules/lhchat/module.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -713,5 +713,7 @@\n $FunctionList['subject_chats'] = array('explain' => 'Allow operator see subject filtered chats');\n $FunctionList['subject_chats_options'] = array('explain' => 'Allow operator to choose what subjects should be applied as filter');\n $FunctionList['export_chats'] = array('explain' => 'Allow operator to export filtered chats');\n+$FunctionList['htmlbbcodeenabled'] = array('explain' => 'Allow operator to use [html] bbcode.');\n+$FunctionList['metamsgenabled'] = array('explain' => 'Allow operator to use meta_msg in message add interface.');\n \n ?>\n\\ No newline at end of file"
        },
        {
          "filename": "lhc_web/modules/lhrestapi/addmsgadmin.php",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -103,7 +103,12 @@\n                     $msg->user_id = $messageUserId;\r\n                     $msg->time = time();\r\n \r\n-                    if ($form->hasValidData('meta_msg') && $form->meta_msg != '') {\r\n+                    if (strpos($msg->msg,'[html]') !== false && !erLhcoreClassRestAPIHandler::hasAccessTo('lhchat','htmlbbcodeenabled')) {\r\n+                        $msg->msg = '[html] is disabled for you!';\r\n+                        $msg->user_id = -1;\r\n+                    }\r\n+\r\n+                    if ($form->hasValidData('meta_msg') && $form->meta_msg != '' && erLhcoreClassRestAPIHandler::hasAccessTo('lhchat','metamsgenabled')) {\r\n                         $metaParts = json_decode($form->meta_msg,true);\r\n                         // Parse meta message as it was bot message and store it within message\r\n                         // We cannot store directly meta message content because it may contain callbacks which can be internal functions\r\n@@ -129,6 +134,7 @@\n                         }\r\n                     }\r\n \r\n+\r\n                     if ($form->hasValidData('operator_name') && $form->operator_name != '') {\r\n                         $msg->name_support = $form->operator_name;\r\n                     } elseif ($form->sender == 'bot') {\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "488b29713fc387169e9d0989cbd95f47f05f4cdd",
            "date": "2025-01-14T12:13:49Z",
            "author_login": "remdex"
          },
          {
            "sha": "86289ae7c52e436559a97e108091e7d91ac1573a",
            "date": "2025-01-14T07:23:15Z",
            "author_login": "remdex"
          },
          {
            "sha": "acfd9581dd8d802ee469c691d42872147a777853",
            "date": "2025-01-13T20:25:11Z",
            "author_login": "remdex"
          },
          {
            "sha": "44c91a9eb94688e3028d36840bb33c131e5cdbf1",
            "date": "2025-01-13T13:57:42Z",
            "author_login": "remdex"
          },
          {
            "sha": "2c644607165bb4b97d95dd25e0bc6048aa7ef02f",
            "date": "2025-01-13T12:59:13Z",
            "author_login": "remdex"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "livehelperchat is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-28T09:15:06.933",
    "last_modified": "2024-11-21T06:37:04.763",
    "fix_date": "2021-12-27T08:47:03Z"
  },
  "references": [
    {
      "url": "https://github.com/livehelperchat/livehelperchat/commit/c3881fb528af349bf47f9ccbf83c994087faa3e6",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/8df06513-c57d-4a55-9798-0a1f6c153535",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/livehelperchat/livehelperchat/commit/c3881fb528af349bf47f9ccbf83c994087faa3e6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/8df06513-c57d-4a55-9798-0a1f6c153535",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.033148",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "livehelperchat",
    "owner": "livehelperchat",
    "created_at": "2012-12-08T14:58:36Z",
    "updated_at": "2025-01-14T12:13:59Z",
    "pushed_at": "2025-01-14T12:13:55Z",
    "size": 354129,
    "stars": 2002,
    "forks": 699,
    "open_issues": 135,
    "watchers": 2002,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 19845370,
      "JavaScript": 1906940,
      "Svelte": 230806,
      "CSS": 94511,
      "Hack": 9209,
      "Shell": 6965,
      "Dockerfile": 486,
      "HTML": 354,
      "Python": 202
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:20:27.327951"
  }
}