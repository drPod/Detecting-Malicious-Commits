{
  "cve_id": "CVE-2021-42235",
  "github_data": {
    "repository": "osTicket/osTicket",
    "fix_commit": "e28291022e662ffa754e170c09cade7bdadf3fd9",
    "related_commits": [
      "e28291022e662ffa754e170c09cade7bdadf3fd9",
      "e28291022e662ffa754e170c09cade7bdadf3fd9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e28291022e662ffa754e170c09cade7bdadf3fd9",
      "commit_date": "2021-10-07T14:38:44Z",
      "author": {
        "login": "protich",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "security: SQL Injection",
        "length": 104,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 36,
        "additions": 24,
        "deletions": 12
      },
      "files": [
        {
          "filename": "include/class.staff.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -862,11 +862,11 @@ static function lookup($var) {\n         if (is_array($var))\n             return parent::lookup($var);\n         elseif (is_numeric($var))\n-            return parent::lookup(array('staff_id'=>$var));\n+            return parent::lookup(array('staff_id' => (int) $var));\n         elseif (Validator::is_email($var))\n-            return parent::lookup(array('email'=>$var));\n-        elseif (is_string($var))\n-            return parent::lookup(array('username'=>$var));\n+            return parent::lookup(array('email' => $var));\n+        elseif (is_string($var) &&  Validator::is_username($var))\n+            return parent::lookup(array('username' => (string) $var));\n         else\n             return null;\n     }"
        },
        {
          "filename": "include/class.user.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -1341,10 +1341,10 @@ static function createForUser($user, $defaults=false) {\n     }\n \n     static function lookupByUsername($username) {\n-        if (strpos($username, '@') !== false)\n-            $user = static::lookup(array('user__emails__address'=>$username));\n-        else\n-            $user = static::lookup(array('username'=>$username));\n+        if (Validator::is_email($username))\n+            $user = static::lookup(array('user__emails__address' => $username));\n+        elseif (Validator::is_userid($username))\n+            $user = static::lookup(array('username' => $username));\n \n         return $user;\n     }"
        },
        {
          "filename": "include/class.validator.php",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -220,11 +220,18 @@ static function is_ip($ip, &$error='') {\n     static function is_username($username, &$error='') {\n         if (strlen($username)<2)\n             $error = __('Username must have at least two (2) characters');\n-        elseif (!preg_match('/^[\\p{L}\\d._-]+$/u', $username))\n+        elseif (is_numeric($username) || !preg_match('/^[\\p{L}\\d._-]+$/u', $username))\n             $error = __('Username contains invalid characters');\n         return $error == '';\n     }\n \n+    static  function is_userid($userid, &$error='') {\n+        if (!self::is_username($userid)\n+                    && !self::is_email($userid))\n+            $error = __('Invalid User Id ');\n+        return $error == '';\n+    }\n+\n     static function is_formula($text, &$error='') {\n         if (!preg_match('/^[^=\\+@-].*$/s', $text))\n             $error = __('Content cannot start with the following characters: = - + @');"
        },
        {
          "filename": "pwreset.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -15,7 +15,9 @@\n     }\n     switch ($_POST['do']) {\n         case 'sendmail':\n-            if (($acct=ClientAccount::lookupByUsername($_POST['userid']))) {\n+            $userid = (string) $_POST['userid'];\n+            if (Validator::is_userid($userid)\n+                    && ($acct=ClientAccount::lookupByUsername($userid))) {\n                 if (!$acct->isPasswdResetEnabled()) {\n                     $banner = __('Password reset is not enabled for your account. Contact your administrator');\n                 }"
        },
        {
          "filename": "scp/pwreset.php",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -39,7 +39,9 @@\n     }\n     switch ($_POST['do']) {\n         case 'sendmail':\n-            if (($staff=Staff::lookup($_POST['userid']))) {\n+            $userid = (string) $_POST['userid'];\n+            if (Validator::is_userid($userid)\n+                    && ($staff=Staff::lookup($userid))) {\n                 if (!$staff->hasPassword()) {\n                     if ($staff->sendResetEmail('registration-staff', false) !== false)\n                         $msg = __('Registration email sent successfully.');\n@@ -72,7 +74,8 @@\n     $msg = __('Please enter your username or email');\n     $_config = new Config('pwreset');\n     if (($id = $_config->get($_GET['token']))\n-            && ($staff = Staff::lookup($id)))\n+            && is_numeric($id)\n+            && ($staff = Staff::lookup( (int) $id)))\n         // TODO: Detect staff confirmation (for welcome email)\n         $tpl = 'pwreset.login.php';\n     else"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4689926b2d3d25754f0ddcf8d4e181a2817f6d56",
            "date": "2023-10-25T15:45:33Z",
            "author_login": "JediKev"
          },
          {
            "sha": "03755768d9f239d70a1af7ddc7eb35c49bf6239d",
            "date": "2023-10-25T15:34:06Z",
            "author_login": "JediKev"
          },
          {
            "sha": "0f08e5b0b7474522d76416e7b57709c3ff619fef",
            "date": "2023-10-25T15:26:17Z",
            "author_login": "JediKev"
          },
          {
            "sha": "7c2003629dd7c11db33cd7d7f790704d87cfd412",
            "date": "2023-10-25T15:19:29Z",
            "author_login": "JediKev"
          },
          {
            "sha": "f878766863fc6e5bc8b8c53ae48afef31496b53a",
            "date": "2023-10-25T15:06:35Z",
            "author_login": "JediKev"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "SQL injection in osTicket before 1.14.8 and 1.15.4 login and password reset process allows attackers to access the osTicket administration profile functionality.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-04T17:15:08.087",
    "last_modified": "2024-11-21T06:27:26.760",
    "fix_date": "2021-10-07T14:38:44Z"
  },
  "references": [
    {
      "url": "https://github.com/osTicket/osTicket/commit/e28291022e662ffa754e170c09cade7bdadf3fd9",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/osTicket/osTicket/commit/e28291022e662ffa754e170c09cade7bdadf3fd9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.442778",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "osTicket",
    "owner": "osTicket",
    "created_at": "2013-08-12T19:10:14Z",
    "updated_at": "2025-01-25T07:44:35Z",
    "pushed_at": "2024-11-14T16:43:24Z",
    "size": 76341,
    "stars": 3311,
    "forks": 1677,
    "open_issues": 1163,
    "watchers": 3311,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "PHP": 6160811,
      "JavaScript": 360520,
      "CSS": 239335,
      "Less": 15079,
      "Shell": 4233,
      "Perl": 2087,
      "HTML": 882,
      "Standard ML": 33
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T07:46:21.978137"
  }
}