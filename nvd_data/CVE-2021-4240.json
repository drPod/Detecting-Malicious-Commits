{
  "cve_id": "CVE-2021-4240",
  "github_data": {
    "repository": "phpservermon/phpservermon",
    "fix_commit": "3daa804d5f56c55b3ae13bfac368bb84ec632193",
    "related_commits": [
      "3daa804d5f56c55b3ae13bfac368bb84ec632193",
      "3daa804d5f56c55b3ae13bfac368bb84ec632193"
    ],
    "patch_url": "https://github.com/phpservermon/phpservermon/commit/3daa804d5f56c55b3ae13bfac368bb84ec632193.patch",
    "fix_commit_details": {
      "sha": "3daa804d5f56c55b3ae13bfac368bb84ec632193",
      "commit_date": "2021-06-23T20:06:34Z",
      "author": {
        "login": "TimZ99",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "SECURITY: Replaced mt_rand with random_bytes",
        "length": 167,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 49,
        "additions": 26,
        "deletions": 23
      },
      "files": [
        {
          "filename": "src/includes/psmconfig.inc.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -30,7 +30,7 @@\n /**\n  * Current PSM version\n  */\n-define('PSM_VERSION', '3.6.0.beta2');\n+define('PSM_VERSION', '3.6.0');\n \n /**\n  * URL to check for updates. Will not be checked if turned off on config page."
        },
        {
          "filename": "src/psm/Service/User.php",
          "status": "modified",
          "additions": 20,
          "deletions": 20,
          "patch": "@@ -72,7 +72,7 @@ class User\n     protected $user_id;\n \n     /**\n-     *Current user preferences\n+     * Current user preferences\n      * @var array $user_preferences\n      */\n     protected $user_preferences;\n@@ -237,15 +237,15 @@ public function loginWithPostData($user_name, $user_password, $user_rememberme =\n         }\n \n         $dirauthconfig = psm_get_conf('dirauth_status');\n-        \n+\n         // LDAP auth enabled\n         if ($dirauthconfig === '1') {\n             $ldaplibpath = realpath(\n                 PSM_PATH_SRC . '..' . DIRECTORY_SEPARATOR .\n-                'vendor' . DIRECTORY_SEPARATOR .\n-                'viharm' . DIRECTORY_SEPARATOR .\n-                'psm-ldap-auth' . DIRECTORY_SEPARATOR .\n-                'psmldapauth.php'\n+                    'vendor' . DIRECTORY_SEPARATOR .\n+                    'viharm' . DIRECTORY_SEPARATOR .\n+                    'psm-ldap-auth' . DIRECTORY_SEPARATOR .\n+                    'psmldapauth.php'\n             );\n             // If the library is found\n             if ($ldaplibpath) {\n@@ -260,20 +260,20 @@ public function loginWithPostData($user_name, $user_password, $user_rememberme =\n \n         // Authenticated\n         if ($ldapauthstatus === true) {\n-          // Remove password to prevent it from being saved in the DB.\n-          // Otherwise, user may still be authenticated if LDAP is disabled later.\n-          $user_password = null;\n-          @fn_Debug('Authenticated', $user);\n+            // Remove password to prevent it from being saved in the DB.\n+            // Otherwise, user may still be authenticated if LDAP is disabled later.\n+            $user_password = null;\n+            @fn_Debug('Authenticated', $user);\n         } else {\n \n-          // using PHP 5.5's password_verify() function to check if the provided passwords\n-          // fits to the hash of that user's password\n-          if (!isset($user->user_id)) {\n-              password_verify($user_password, 'dummy_call_against_timing');\n-              return false;\n-          } elseif (!password_verify($user_password, $user->password)) {\n-              return false;\n-          }\n+            // using PHP 5.5's password_verify() function to check if the provided passwords\n+            // fits to the hash of that user's password\n+            if (!isset($user->user_id)) {\n+                password_verify($user_password, 'dummy_call_against_timing');\n+                return false;\n+            } elseif (!password_verify($user_password, $user->password)) {\n+                return false;\n+            }\n         } // not authenticated\n \n         $this->setUserLoggedIn($user->user_id, true);\n@@ -390,8 +390,8 @@ public function generatePasswordResetToken($user_id)\n         }\n         // generate timestamp (to see when exactly the user (or an attacker) requested the password reset mail)\n         $temporary_timestamp = time();\n-        // generate random hash for email password reset verification (40 char string)\n-        $user_password_reset_hash = sha1(uniqid(mt_rand(), true));\n+        // generate random hash for email password reset verification (64 char string)\n+        $user_password_reset_hash = hash('sha256', uniqid(random_bytes(64), true));\n \n         $query_update = $this->db_connection->prepare('UPDATE ' .\n             PSM_DB_PREFIX . 'users SET password_reset_hash = :user_password_reset_hash,"
        },
        {
          "filename": "src/psm/Util/Install/Installer.php",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -212,7 +212,7 @@ protected function installTables()\n                 `user_id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n                 `user_name` varchar(64) NOT NULL COMMENT 'user''s name, unique',\n                 `password` varchar(255) NOT NULL COMMENT 'user''s password in salted and hashed format',\n-                `password_reset_hash` char(40) DEFAULT NULL COMMENT 'user''s password reset code',\n+                `password_reset_hash` varchar(64) DEFAULT NULL COMMENT 'user''s password reset code',\n                 `password_reset_timestamp` bigint(20) DEFAULT NULL COMMENT 'timestamp of the password reset request',\n                 `rememberme_token` varchar(64) DEFAULT NULL COMMENT 'user''s remember-me cookie token',\n                 `level` tinyint(2) unsigned NOT NULL DEFAULT '20',\n@@ -230,7 +230,7 @@ protected function installTables()\n                 UNIQUE KEY `unique_username` (`user_name`)\n             ) ENGINE=MyISAM DEFAULT CHARSET=utf8;\",\n             PSM_DB_PREFIX .\n-            'users_preferences' => \"CREATE TABLE IF NOT EXISTS `\" . PSM_DB_PREFIX . \"users_preferences` (\n+                'users_preferences' => \"CREATE TABLE IF NOT EXISTS `\" . PSM_DB_PREFIX . \"users_preferences` (\n                 `user_id` int(11) unsigned NOT NULL,\n                 `key` varchar(255) NOT NULL,\n                 `value` varchar(255) NOT NULL,\n@@ -732,6 +732,7 @@ protected function upgrade350()\n     /**\n      * Patch for v3.6.0 release\n      * Added support for Discord and webhooks\n+     * Password_reset_hash varchar 40 -> 64 to allow for SHA256 hash\n      */\n     protected function upgrade360()\n     {\n@@ -758,6 +759,8 @@ protected function upgrade360()\n         $queries[] = \"INSERT INTO `\" . PSM_DB_PREFIX . \"users` (\n             `user_name`, `level`, `name`, `email`)\n             VALUES ('__PUBLIC__', 30, 'Public page', 'publicpage@psm.psm')\";\n+        $queries[] = \"ALTER TABLE `\" . PSM_DB_PREFIX . \"users`\n+            CHANGE `password_reset_hash` `password_reset_hash`  VARCHAR( 64 ) DEFAULT NULL COMMENT 'user''s password reset code';\";\n         $this->execSQL($queries);\n \n         $this->log('Public page is now available. Added user \\'__PUBLIC__\\'. See documentation for more info.');"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4603ebbf5ae789690f19a63f61a92fae5db4bd21",
            "date": "2025-01-06T17:22:02Z",
            "author_login": "TimZ99"
          },
          {
            "sha": "6eef9dc6ea116a1fcfece28008166ca1e23808dc",
            "date": "2025-01-06T17:14:55Z",
            "author_login": "TimZ99"
          },
          {
            "sha": "085af72e141f5355f1a5753db0cfddc35a711210",
            "date": "2025-01-06T16:57:56Z",
            "author_login": "TimZ99"
          },
          {
            "sha": "af364e1bc51d9b1dbd05832a6b3c2082e0a43a01",
            "date": "2025-01-06T16:46:18Z",
            "author_login": "TimZ99"
          },
          {
            "sha": "deefc45847f69cce7ac8d6537604dccbb35d52aa",
            "date": "2025-01-06T16:44:57Z",
            "author_login": "TimZ99"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.6,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-331",
    "description": "A vulnerability, which was classified as problematic, was found in phpservermon. This affects the function generatePasswordResetToken of the file src/psm/Service/User.php. The manipulation leads to use of predictable algorithm in random number generator. The exploit has been disclosed to the public and may be used. The name of the patch is 3daa804d5f56c55b3ae13bfac368bb84ec632193. It is recommended to apply a patch to fix this issue. The identifier VDB-213717 was assigned to this vulnerability.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-15T23:15:10.233",
    "last_modified": "2024-11-21T06:37:12.850",
    "fix_date": "2021-06-23T20:06:34Z"
  },
  "references": [
    {
      "url": "https://github.com/phpservermon/phpservermon/commit/3daa804d5f56c55b3ae13bfac368bb84ec632193",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2-phpservermon/phpservermon/",
      "source": "cna@vuldb.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213717",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/phpservermon/phpservermon/commit/3daa804d5f56c55b3ae13bfac368bb84ec632193",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2-phpservermon/phpservermon/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213717",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:01.021328",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "phpservermon",
    "owner": "phpservermon",
    "created_at": "2014-01-07T19:40:54Z",
    "updated_at": "2025-01-14T12:48:28Z",
    "pushed_at": "2025-01-06T19:38:16Z",
    "size": 10564,
    "stars": 2171,
    "forks": 687,
    "open_issues": 192,
    "watchers": 2171,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "production"
    ],
    "languages": {
      "JavaScript": 1170961,
      "PHP": 1100391,
      "SCSS": 210684,
      "HTML": 208765,
      "Shell": 2800,
      "Makefile": 2347,
      "CSS": 119
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T17:39:41.004729"
  }
}