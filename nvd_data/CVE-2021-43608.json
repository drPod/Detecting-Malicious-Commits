{
  "cve_id": "CVE-2021-43608",
  "github_data": {
    "repository": "doctrine/dbal",
    "fix_commit": "9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d",
    "related_commits": [
      "9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d",
      "9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d"
    ],
    "patch_url": "https://github.com/doctrine/dbal/commit/9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d.patch",
    "fix_commit_details": {
      "sha": "9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d",
      "commit_date": "2021-11-10T19:42:47Z",
      "author": {
        "login": "morozov",
        "type": "User",
        "stats": {
          "total_commits": 2330,
          "average_weekly_commits": 3.018134715025907,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 243
        }
      },
      "commit_message": {
        "title": "Cast LIMIT and OFFSET to int when building limit query",
        "length": 54,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 31,
        "additions": 30,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/Platforms/AbstractPlatform.php",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -3365,7 +3365,11 @@ final public function modifyLimitQuery($query, $limit, $offset = 0)\n             ));\n         }\n \n-        return $this->doModifyLimitQuery($query, $limit, $offset);\n+        if ($limit !== null) {\n+            $limit = (int) $limit;\n+        }\n+\n+        return $this->doModifyLimitQuery($query, $limit, (int) $offset);\n     }\n \n     /**"
        },
        {
          "filename": "tests/Platforms/AbstractPlatformTestCase.php",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -1470,6 +1470,19 @@ public function testZeroOffsetWithoutLimitIsIgnored(): void\n         );\n     }\n \n+    public function testLimitOffsetCastToInt(): void\n+    {\n+        self::assertSame(\n+            $this->getLimitOffsetCastToIntExpectedQuery(),\n+            $this->platform->modifyLimitQuery('SELECT * FROM user', '1 BANANA', '2 APPLES')\n+        );\n+    }\n+\n+    protected function getLimitOffsetCastToIntExpectedQuery(): string\n+    {\n+        return 'SELECT * FROM user LIMIT 1 OFFSET 2';\n+    }\n+\n     /**\n      * @param array<string, mixed> $column\n      *"
        },
        {
          "filename": "tests/Platforms/DB2PlatformTest.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -773,4 +773,10 @@ public function testQuotesTableNameInListTableForeignKeysSQL(): void\n             $this->platform->getListTableForeignKeysSQL(\"Foo'Bar\\\\\")\n         );\n     }\n+\n+    protected function getLimitOffsetCastToIntExpectedQuery(): string\n+    {\n+        return 'SELECT db22.* FROM (SELECT db21.*, ROW_NUMBER() OVER() AS DC_ROWNUM'\n+            . ' FROM (SELECT * FROM user) db21) db22 WHERE db22.DC_ROWNUM >= 3 AND db22.DC_ROWNUM <= 3';\n+    }\n }"
        },
        {
          "filename": "tests/Platforms/OraclePlatformTest.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -986,4 +986,10 @@ public function asciiStringSqlDeclarationDataProvider(): array\n             ['CHAR(12)', ['length' => 12, 'fixed' => true]],\n         ];\n     }\n+\n+    protected function getLimitOffsetCastToIntExpectedQuery(): string\n+    {\n+        return 'SELECT * FROM (SELECT a.*, ROWNUM AS doctrine_rownum FROM (SELECT * FROM user) a WHERE ROWNUM <= 3)'\n+            . ' WHERE doctrine_rownum >= 3';\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4933e8482b81f111c30a7e1ca0fea24fb2aa25a5",
            "date": "2025-01-13T20:19:06Z",
            "author_login": "greg0ire"
          },
          {
            "sha": "410de4640e79481ac7c5e3f48e705225e9cac6e6",
            "date": "2025-01-13T19:32:17Z",
            "author_login": "greg0ire"
          },
          {
            "sha": "e149322fa3624e1e825308927eab58471b5a25c7",
            "date": "2025-01-13T19:19:39Z",
            "author_login": "greg0ire"
          },
          {
            "sha": "9963f917969a1f6d73b9fc036bd182f1380527dc",
            "date": "2025-01-13T18:55:14Z",
            "author_login": "greg0ire"
          },
          {
            "sha": "2a13dd0efc01f641451c1575a816b0132d49095d",
            "date": "2025-01-06T18:54:43Z",
            "author_login": "DanielBadura"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "Doctrine DBAL 3.x before 3.1.4 allows SQL Injection. The escaping of offset and length inputs to the generation of a LIMIT clause was not probably cast to an integer, allowing SQL injection to take place if application developers passed unescaped user input to the DBAL QueryBuilder or any other API that ultimately uses the AbstractPlatform::modifyLimitQuery API.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-09T20:15:07.937",
    "last_modified": "2024-11-21T06:29:30.203",
    "fix_date": "2021-11-10T19:42:47Z"
  },
  "references": [
    {
      "url": "https://github.com/doctrine/dbal/commit/9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/doctrine/dbal/releases",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/doctrine/dbal/security/advisories/GHSA-r7cj-8hjg-x622",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.doctrine-project.org/2021/11/11/dbal3-vulnerability-fixed.html",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/doctrine/dbal/commit/9dcfa4cb6c03250b78a84737ba7ceb82f4b7ba4d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/doctrine/dbal/releases",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/doctrine/dbal/security/advisories/GHSA-r7cj-8hjg-x622",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.doctrine-project.org/2021/11/11/dbal3-vulnerability-fixed.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.829466",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dbal",
    "owner": "doctrine",
    "created_at": "2010-05-20T17:01:42Z",
    "updated_at": "2025-01-13T20:19:11Z",
    "pushed_at": "2025-01-14T14:08:04Z",
    "size": 41772,
    "stars": 9510,
    "forks": 1346,
    "open_issues": 256,
    "watchers": 9510,
    "has_security_policy": false,
    "default_branch": "4.2.x",
    "protected_branches": [
      "3.9.x",
      "3.10.x",
      "4.2.x",
      "4.3.x",
      "5.0.x"
    ],
    "languages": {
      "PHP": 2026540
    },
    "commit_activity": {
      "total_commits_last_year": 370,
      "avg_commits_per_week": 7.115384615384615,
      "days_active_last_year": 119
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:31:15.976141"
  }
}