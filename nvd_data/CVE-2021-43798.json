{
  "cve_id": "CVE-2021-43798",
  "github_data": {
    "repository": "grafana/grafana",
    "fix_commit": "c798c0e958d15d9cc7f27c72113d572fa58545ce",
    "related_commits": [
      "c798c0e958d15d9cc7f27c72113d572fa58545ce",
      "c798c0e958d15d9cc7f27c72113d572fa58545ce"
    ],
    "patch_url": "https://github.com/grafana/grafana/commit/c798c0e958d15d9cc7f27c72113d572fa58545ce.patch",
    "fix_commit_details": {
      "sha": "c798c0e958d15d9cc7f27c72113d572fa58545ce",
      "commit_date": "2021-12-07T17:15:53Z",
      "author": {
        "login": "dsotirakis",
        "type": "User",
        "stats": {
          "total_commits": 434,
          "average_weekly_commits": 0.7469879518072289,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 118
        }
      },
      "commit_message": {
        "title": "Security: Fix directory traversal issue (#42846)",
        "length": 248,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 46,
        "additions": 43,
        "deletions": 3
      },
      "files": [
        {
          "filename": "pkg/api/plugins.go",
          "status": "modified",
          "additions": 16,
          "deletions": 3,
          "patch": "@@ -289,14 +289,27 @@ func (hs *HTTPServer) getPluginAssets(c *models.ReqContext) {\n \t\treturn\n \t}\n \n-\trequestedFile := filepath.Clean(web.Params(c.Req)[\"*\"])\n-\tpluginFilePath := filepath.Join(plugin.PluginDir, requestedFile)\n+\t// prepend slash for cleaning relative paths\n+\trequestedFile := filepath.Clean(filepath.Join(\"/\", web.Params(c.Req)[\"*\"]))\n+\trel, err := filepath.Rel(\"/\", requestedFile)\n+\tif err != nil {\n+\t\t// slash is prepended above therefore this is not expected to fail\n+\t\tc.JsonApiErr(500, \"Failed to get the relative path\", err)\n+\t\treturn\n+\t}\n \n-\tif !plugin.IncludedInSignature(requestedFile) {\n+\tif !plugin.IncludedInSignature(rel) {\n \t\ths.log.Warn(\"Access to requested plugin file will be forbidden in upcoming Grafana versions as the file \"+\n \t\t\t\"is not included in the plugin signature\", \"file\", requestedFile)\n \t}\n \n+\tabsPluginDir, err := filepath.Abs(plugin.PluginDir)\n+\tif err != nil {\n+\t\tc.JsonApiErr(500, \"Failed to get plugin absolute path\", nil)\n+\t\treturn\n+\t}\n+\n+\tpluginFilePath := filepath.Join(absPluginDir, rel)\n \t// It's safe to ignore gosec warning G304 since we already clean the requested file path and subsequently\n \t// use this with a prefix of the plugin's directory, which is set during plugin loading\n \t// nolint:gosec"
        },
        {
          "filename": "pkg/api/plugins_test.go",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -23,9 +23,13 @@ func Test_GetPluginAssets(t *testing.T) {\n \tpluginDir := \".\"\n \ttmpFile, err := ioutil.TempFile(pluginDir, \"\")\n \trequire.NoError(t, err)\n+\ttmpFileInParentDir, err := ioutil.TempFile(\"..\", \"\")\n+\trequire.NoError(t, err)\n \tt.Cleanup(func() {\n \t\terr := os.RemoveAll(tmpFile.Name())\n \t\tassert.NoError(t, err)\n+\t\terr = os.RemoveAll(tmpFileInParentDir.Name())\n+\t\tassert.NoError(t, err)\n \t})\n \texpectedBody := \"Plugin test\"\n \t_, err = tmpFile.WriteString(expectedBody)\n@@ -61,6 +65,29 @@ func Test_GetPluginAssets(t *testing.T) {\n \t\t\t})\n \t})\n \n+\tt.Run(\"Given a request for a relative path\", func(t *testing.T) {\n+\t\tp := plugins.PluginDTO{\n+\t\t\tJSONData: plugins.JSONData{\n+\t\t\t\tID: pluginID,\n+\t\t\t},\n+\t\t\tPluginDir: pluginDir,\n+\t\t}\n+\t\tservice := &fakePluginStore{\n+\t\t\tplugins: map[string]plugins.PluginDTO{\n+\t\t\t\tpluginID: p,\n+\t\t\t},\n+\t\t}\n+\t\tl := &logger{}\n+\n+\t\turl := fmt.Sprintf(\"/public/plugins/%s/%s\", pluginID, tmpFileInParentDir.Name())\n+\t\tpluginAssetScenario(t, \"When calling GET on\", url, \"/public/plugins/:pluginId/*\", service, l,\n+\t\t\tfunc(sc *scenarioContext) {\n+\t\t\t\tcallGetPluginAsset(sc)\n+\n+\t\t\t\trequire.Equal(t, 404, sc.resp.Code)\n+\t\t\t})\n+\t})\n+\n \tt.Run(\"Given a request for an existing plugin file that is not listed as a signature covered file\", func(t *testing.T) {\n \t\tp := plugins.PluginDTO{\n \t\t\tJSONData: plugins.JSONData{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2594b4f7aff42712bd0e2b01bea3d3335a7d092f",
            "date": "2025-01-14T13:42:21Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "0032e839ceac182e08b5a63c36f4c80365bcc90d",
            "date": "2025-01-14T13:17:49Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "6b5146651f873286369b8a288cef27af93431988",
            "date": "2025-01-14T13:16:42Z",
            "author_login": "ashharrison90"
          },
          {
            "sha": "77717683632d1e6b9017e26660a1ea5a8a7b86ba",
            "date": "2025-01-14T12:34:02Z",
            "author_login": "ppcano"
          },
          {
            "sha": "0b5b21548bdfe07111827607ccd7d358a7834843",
            "date": "2025-01-14T12:19:52Z",
            "author_login": "renovate[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Grafana is an open-source platform for monitoring and observability. Grafana versions 8.0.0-beta1 through 8.3.0 (except for patched versions) iss vulnerable to directory traversal, allowing access to local files. The vulnerable URL path is: `<grafana_host_url>/public/plugins//`, where is the plugin ID for any installed plugin. At no time has Grafana Cloud been vulnerable. Users are advised to upgrade to patched versions 8.0.7, 8.1.8, 8.2.7, or 8.3.1. The GitHub Security Advisory contains more information about vulnerable URL paths, mitigation, and the disclosure timeline.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-07T19:15:07.633",
    "last_modified": "2024-11-21T06:29:48.737",
    "fix_date": "2021-12-07T17:15:53Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/165198/Grafana-Arbitrary-File-Reading.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/165221/Grafana-8.3.0-Directory-Traversal-Arbitrary-File-Read.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/12/09/2",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/12/10/4",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/c798c0e958d15d9cc7f27c72113d572fa58545ce",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-8pjx-jj86-j47p",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://grafana.com/blog/2021/12/08/an-update-on-0day-cve-2021-43798-grafana-directory-traversal/",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20211229-0004/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/165198/Grafana-Arbitrary-File-Reading.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/165221/Grafana-8.3.0-Directory-Traversal-Arbitrary-File-Read.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/12/09/2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2021/12/10/4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/c798c0e958d15d9cc7f27c72113d572fa58545ce",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-8pjx-jj86-j47p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://grafana.com/blog/2021/12/08/an-update-on-0day-cve-2021-43798-grafana-directory-traversal/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20211229-0004/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.823631",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "grafana",
    "owner": "grafana",
    "created_at": "2013-12-11T15:59:56Z",
    "updated_at": "2025-01-14T13:04:53Z",
    "pushed_at": "2025-01-14T13:12:26Z",
    "size": 1292625,
    "stars": 65883,
    "forks": 12291,
    "open_issues": 4193,
    "watchers": 65883,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 29758164,
      "Go": 20683989,
      "Rich Text Format": 352348,
      "HTML": 334782,
      "CUE": 186863,
      "JavaScript": 170294,
      "Shell": 148477,
      "MDX": 147186,
      "Starlark": 132379,
      "SCSS": 112108,
      "Jsonnet": 39563,
      "Makefile": 24993,
      "Python": 23487,
      "Dockerfile": 21670,
      "Jinja": 11630,
      "HCL": 4097,
      "CSS": 3116,
      "Mustache": 2239,
      "Smarty": 2116,
      "PowerShell": 367,
      "Assembly": 168
    },
    "commit_activity": {
      "total_commits_last_year": 9810,
      "avg_commits_per_week": 188.65384615384616,
      "days_active_last_year": 302
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:16:15.724443"
  }
}