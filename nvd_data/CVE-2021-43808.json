{
  "cve_id": "CVE-2021-43808",
  "github_data": {
    "repository": "laravel/framework",
    "fix_commit": "b8174169b1807f36de1837751599e2828ceddb9b",
    "related_commits": [
      "b8174169b1807f36de1837751599e2828ceddb9b",
      "b8174169b1807f36de1837751599e2828ceddb9b"
    ],
    "patch_url": "https://github.com/laravel/framework/commit/b8174169b1807f36de1837751599e2828ceddb9b.patch",
    "fix_commit_details": {
      "sha": "b8174169b1807f36de1837751599e2828ceddb9b",
      "commit_date": "2021-12-06T17:14:03Z",
      "author": {
        "login": "driesvints",
        "type": "User",
        "stats": {
          "total_commits": 1541,
          "average_weekly_commits": 2.4538216560509554,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 286
        }
      },
      "commit_message": {
        "title": "[6.x] Fix parent call (#39908)",
        "length": 152,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 54,
        "additions": 39,
        "deletions": 15
      },
      "files": [
        {
          "filename": "src/Illuminate/View/Compilers/Compiler.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -48,7 +48,7 @@ public function __construct(Filesystem $files, $cachePath)\n      */\n     public function getCompiledPath($path)\n     {\n-        return $this->cachePath.'/'.sha1($path).'.php';\n+        return $this->cachePath.'/'.sha1('v2'.$path).'.php';\n     }\n \n     /**"
        },
        {
          "filename": "src/Illuminate/View/Compilers/Concerns/CompilesLayouts.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -2,8 +2,6 @@\n \n namespace Illuminate\\View\\Compilers\\Concerns;\n \n-use Illuminate\\View\\Factory as ViewFactory;\n-\n trait CompilesLayouts\n {\n     /**\n@@ -50,7 +48,9 @@ protected function compileSection($expression)\n      */\n     protected function compileParent()\n     {\n-        return ViewFactory::parentPlaceholder($this->lastSection ?: '');\n+        $escapedLastSection = strtr($this->lastSection, ['\\\\' => '\\\\\\\\', \"'\" => \"\\\\'\"]);\n+\n+        return \"<?php echo \\Illuminate\\View\\Factory::parentPlaceholder('{$escapedLastSection}'); ?>\";\n     }\n \n     /**"
        },
        {
          "filename": "src/Illuminate/View/Concerns/ManagesLayouts.php",
          "status": "modified",
          "additions": 25,
          "deletions": 1,
          "patch": "@@ -3,6 +3,7 @@\n namespace Illuminate\\View\\Concerns;\n \n use Illuminate\\Contracts\\View\\View;\n+use Illuminate\\Support\\Str;\n use InvalidArgumentException;\n \n trait ManagesLayouts\n@@ -28,6 +29,13 @@ trait ManagesLayouts\n      */\n     protected static $parentPlaceholder = [];\n \n+    /**\n+     * The parent placeholder salt for the request.\n+     *\n+     * @var string\n+     */\n+    protected static $parentPlaceholderSalt;\n+\n     /**\n      * Start injecting content into a section.\n      *\n@@ -168,12 +176,28 @@ public function yieldContent($section, $default = '')\n     public static function parentPlaceholder($section = '')\n     {\n         if (! isset(static::$parentPlaceholder[$section])) {\n-            static::$parentPlaceholder[$section] = '##parent-placeholder-'.sha1($section).'##';\n+            $salt = static::parentPlaceholderSalt();\n+\n+            static::$parentPlaceholder[$section] = '##parent-placeholder-'.sha1($salt.$section).'##';\n         }\n \n         return static::$parentPlaceholder[$section];\n     }\n \n+    /**\n+     * Get the parent placeholder salt.\n+     *\n+     * @return string\n+     */\n+    protected static function parentPlaceholderSalt()\n+    {\n+        if (! static::$parentPlaceholderSalt) {\n+            return static::$parentPlaceholderSalt = Str::random(40);\n+        }\n+\n+        return static::$parentPlaceholderSalt;\n+    }\n+\n     /**\n      * Check if section exists.\n      *"
        },
        {
          "filename": "tests/View/ViewBladeCompilerTest.php",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -18,7 +18,7 @@ protected function tearDown(): void\n     public function testIsExpiredReturnsTrueIfCompiledFileDoesntExist()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n-        $files->shouldReceive('exists')->once()->with(__DIR__.'/'.sha1('foo').'.php')->andReturn(false);\n+        $files->shouldReceive('exists')->once()->with(__DIR__.'/'.sha1('v2foo').'.php')->andReturn(false);\n         $this->assertTrue($compiler->isExpired('foo'));\n     }\n \n@@ -33,31 +33,31 @@ public function testCannotConstructWithBadCachePath()\n     public function testIsExpiredReturnsTrueWhenModificationTimesWarrant()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n-        $files->shouldReceive('exists')->once()->with(__DIR__.'/'.sha1('foo').'.php')->andReturn(true);\n+        $files->shouldReceive('exists')->once()->with(__DIR__.'/'.sha1('v2foo').'.php')->andReturn(true);\n         $files->shouldReceive('lastModified')->once()->with('foo')->andReturn(100);\n-        $files->shouldReceive('lastModified')->once()->with(__DIR__.'/'.sha1('foo').'.php')->andReturn(0);\n+        $files->shouldReceive('lastModified')->once()->with(__DIR__.'/'.sha1('v2foo').'.php')->andReturn(0);\n         $this->assertTrue($compiler->isExpired('foo'));\n     }\n \n     public function testCompilePathIsProperlyCreated()\n     {\n         $compiler = new BladeCompiler($this->getFiles(), __DIR__);\n-        $this->assertEquals(__DIR__.'/'.sha1('foo').'.php', $compiler->getCompiledPath('foo'));\n+        $this->assertEquals(__DIR__.'/'.sha1('v2foo').'.php', $compiler->getCompiledPath('foo'));\n     }\n \n     public function testCompileCompilesFileAndReturnsContents()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with('foo')->andReturn('Hello World');\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n         $compiler->compile('foo');\n     }\n \n     public function testCompileCompilesAndGetThePath()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with('foo')->andReturn('Hello World');\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n         $compiler->compile('foo');\n         $this->assertSame('foo', $compiler->getPath());\n     }\n@@ -73,7 +73,7 @@ public function testCompileWithPathSetBefore()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with('foo')->andReturn('Hello World');\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2foo').'.php', 'Hello World<?php /**PATH foo ENDPATH**/ ?>');\n         // set path before compilation\n         $compiler->setPath('foo');\n         // trigger compilation with $path\n@@ -103,7 +103,7 @@ public function testIncludePathToTemplate($content, $compiled)\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with('foo')->andReturn($content);\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('foo').'.php', $compiled);\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2foo').'.php', $compiled);\n \n         $compiler->compile('foo');\n     }\n@@ -157,7 +157,7 @@ public function testDontIncludeEmptyPath()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with('')->andReturn('Hello World');\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('').'.php', 'Hello World');\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2').'.php', 'Hello World');\n         $compiler->setPath('');\n         $compiler->compile();\n     }\n@@ -166,7 +166,7 @@ public function testDontIncludeNullPath()\n     {\n         $compiler = new BladeCompiler($files = $this->getFiles(), __DIR__);\n         $files->shouldReceive('get')->once()->with(null)->andReturn('Hello World');\n-        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1(null).'.php', 'Hello World');\n+        $files->shouldReceive('put')->once()->with(__DIR__.'/'.sha1('v2').'.php', 'Hello World');\n         $compiler->setPath(null);\n         $compiler->compile();\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "74587500c575b3fd278252eaa5aa4b04ec625b38",
            "date": "2025-01-14T18:12:50Z",
            "author_login": "taylorotwell"
          },
          {
            "sha": "297652d91811fda163cc1929716117dccae2adbd",
            "date": "2025-01-14T18:11:19Z",
            "author_login": "taylorotwell"
          },
          {
            "sha": "86e673d1969c5131911de1c52720ce3806780cd5",
            "date": "2025-01-14T18:09:22Z",
            "author_login": "SanderMuller"
          },
          {
            "sha": "a06a0dc87977284db558f64bed7c5008ce25f9b6",
            "date": "2025-01-14T18:09:05Z",
            "author_login": "SanderMuller"
          },
          {
            "sha": "f99942d29315841fc8334d03d39a5d87ffc002b4",
            "date": "2025-01-14T14:55:56Z",
            "author_login": "taylorotwell"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-79",
    "description": "Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2021-12-08T00:15:07.683",
    "last_modified": "2024-11-21T06:29:50.123",
    "fix_date": "2021-12-06T17:14:03Z"
  },
  "references": [
    {
      "url": "https://github.com/laravel/framework/commit/b8174169b1807f36de1837751599e2828ceddb9b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39906",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39908",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39909",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v6.20.42",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v7.30.6",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v8.75.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/security/advisories/GHSA-66hf-2p6w-jqfw",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/commit/b8174169b1807f36de1837751599e2828ceddb9b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39906",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39908",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/pull/39909",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v6.20.42",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v7.30.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/releases/tag/v8.75.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/laravel/framework/security/advisories/GHSA-66hf-2p6w-jqfw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.824980",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "framework",
    "owner": "laravel",
    "created_at": "2013-01-10T21:27:28Z",
    "updated_at": "2025-01-14T12:30:04Z",
    "pushed_at": "2025-01-13T20:26:38Z",
    "size": 85997,
    "stars": 32936,
    "forks": 11120,
    "open_issues": 57,
    "watchers": 32936,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "4.0",
      "4.1",
      "4.2",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "5.4",
      "5.5",
      "5.6",
      "5.7",
      "5.8",
      "6.x",
      "7.x",
      "8.x",
      "9.x",
      "10.x",
      "11.x",
      "master"
    ],
    "languages": {
      "PHP": 13425892,
      "Blade": 73187,
      "Shell": 6761,
      "CSS": 6188,
      "JavaScript": 1422,
      "Hack": 190
    },
    "commit_activity": {
      "total_commits_last_year": 2398,
      "avg_commits_per_week": 46.11538461538461,
      "days_active_last_year": 276
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:28:12.525095"
  }
}