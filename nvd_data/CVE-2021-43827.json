{
  "cve_id": "CVE-2021-43827",
  "github_data": {
    "repository": "discourse/discourse-footnote",
    "fix_commit": "796617e0131277011207541313522cd1946661ab",
    "related_commits": [
      "796617e0131277011207541313522cd1946661ab",
      "796617e0131277011207541313522cd1946661ab"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "796617e0131277011207541313522cd1946661ab",
      "commit_date": "2021-12-14T05:35:11Z",
      "author": {
        "login": "martin-brennan",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "SECURITY: Fix malicious footnote causing clientside errors (#27)",
        "length": 138,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 46,
        "deletions": 4
      },
      "files": [
        {
          "filename": "assets/javascripts/initializers/inline-footnotes.js",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -8,14 +8,20 @@ function applyInlineFootnotes(elem) {\n   const footnoteRefs = elem.querySelectorAll(\"sup.footnote-ref\");\n \n   footnoteRefs.forEach((footnoteRef) => {\n+    const refLink = footnoteRef.querySelector(\"a\");\n+    if (!refLink) {\n+      return;\n+    }\n+\n     const expandableFootnote = document.createElement(\"a\");\n     expandableFootnote.classList.add(\"expand-footnote\");\n     expandableFootnote.innerHTML = iconHTML(\"ellipsis-h\");\n     expandableFootnote.href = \"\";\n     expandableFootnote.role = \"button\";\n-    expandableFootnote.dataset.footnoteId = footnoteRef\n-      .querySelector(\"a\")\n-      .id.replace(\"footnote-ref-\", \"\");\n+    expandableFootnote.dataset.footnoteId = refLink.id.replace(\n+      \"footnote-ref-\",\n+      \"\"\n+    );\n \n     footnoteRef.after(expandableFootnote);\n   });"
        },
        {
          "filename": "assets/vendor/javascripts/markdown-it-footnote.js",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -212,6 +212,15 @@ module.exports = function footnote_plugin(md) {\n         tokens = []\n       );\n \n+      // Having a rendered footnote inside a link creates a nested link, which\n+      // is not valid HTML, so close the parent tag first before proceeding.\n+      const previousToken = state.tokens[state.tokens.length - 1];\n+      if (previousToken?.content.includes(\"<a\")) {\n+        const linkCloseToken = state.push(\"html_inline\", \"\", 0);\n+        linkCloseToken.content = \"</a>\";\n+        linkCloseToken.block = false;\n+      }\n+\n       token      = state.push('footnote_ref', '', 0);\n       token.meta = { id: footnoteId };\n "
        },
        {
          "filename": "plugin.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@\n # transpile_js: true\n # name: discourse-footnote\n # about: Adds markdown.it footnote support to Discourse\n-# version: 0.1\n+# version: 0.2\n # authors: Sam Saffron, Vitaly Puzrin\n # url: https://github.com/discourse/discourse-footnote\n "
        },
        {
          "filename": "spec/pretty_text_spec.rb",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -87,4 +87,31 @@\n \n   end\n \n+  it \"supports inline footnotes wrapped in <a> elements by ending the elements early\" do\n+    raw = <<~MD\n+      I have a point, see footnote. <a>^[the point]</a>\n+\n+      <a>^[footnote]</a>\n+    MD\n+\n+    post = create_post(raw: raw)\n+    post.reload\n+\n+    html = <<~HTML\n+      <p>I have a point, see footnote. <a></a><sup class=\"footnote-ref\"><a href=\"#footnote-#{post.id}-1\" id=\"footnote-ref-#{post.id}-1\">[1]</a></sup></p>\n+      <p><a></a><sup class=\"footnote-ref\"><a href=\"#footnote-#{post.id}-2\" id=\"footnote-ref-#{post.id}-2\">[2]</a></sup></p>\n+      <hr class=\"footnotes-sep\">\n+\n+      <ol class=\"footnotes-list\">\n+      <li id=\"footnote-#{post.id}-1\" class=\"footnote-item\">\n+      <p>the point <a href=\"#footnote-ref-#{post.id}-1\" class=\"footnote-backref\">\u21a9\ufe0e</a></p>\n+      </li>\n+      <li id=\"footnote-#{post.id}-2\" class=\"footnote-item\">\n+      <p>footnote <a href=\"#footnote-ref-#{post.id}-2\" class=\"footnote-backref\">\u21a9\ufe0e</a></p>\n+      </li>\n+      </ol>\n+    HTML\n+\n+    expect(post.cooked.strip).to eq(html.strip)\n+  end\n end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "57ab12efc0e309222a55c83e6edeabd3c0303e98",
            "date": "2023-10-24T14:33:08Z",
            "author_login": "oblakeerickson"
          },
          {
            "sha": "49c48c8e88ccfe8618e5e121bbe38e7fc22bafd7",
            "date": "2023-10-23T20:51:38Z",
            "author_login": "oblakeerickson"
          },
          {
            "sha": "e1d1e801a1ec6b13690e541f40dfbdf82b9d32bf",
            "date": "2023-10-23T19:48:29Z",
            "author_login": "oblakeerickson"
          },
          {
            "sha": "6e9d97679acf65afd9abe5a1bd3281170895495a",
            "date": "2023-10-18T16:35:08Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0986e5af27b1a34928e17b8824bfc6de1ba55199",
            "date": "2023-08-22T18:47:01Z",
            "author_login": "pmusaraj"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-755",
    "description": "discourse-footnote is a library providing footnotes for posts in Discourse. ### Impact When posting an inline footnote wrapped in `<a>` tags (e.g. `<a>^[footnote]</a>`, the resulting rendered HTML would include a nested `<a>`, which is stripped by Nokogiri because it is not valid. This then caused a javascript error on topic pages because we were looking for an `<a>` element inside the footnote reference span and getting its ID, and because it did not exist we got a null reference error in javascript. Users are advised to update to version 0.2. As a workaround editing offending posts from the rails console or the database console for self-hosters, or disabling the plugin in the admin panel can mitigate this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-14T23:15:08.020",
    "last_modified": "2024-11-21T06:29:52.763",
    "fix_date": "2021-12-14T05:35:11Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse-footnote/commit/796617e0131277011207541313522cd1946661ab",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-footnote/security/advisories/GHSA-58vr-c56v-qr57",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-footnote/commit/796617e0131277011207541313522cd1946661ab",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-footnote/security/advisories/GHSA-58vr-c56v-qr57",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:34.840783",
    "processing_status": "enhanced"
  }
}