{
  "cve_id": "CVE-2021-43842",
  "github_data": {
    "repository": "Requarks/wiki",
    "fix_commit": "5d3e81496fba1f0fbd64eeb855f30f69a9040718",
    "related_commits": [
      "5d3e81496fba1f0fbd64eeb855f30f69a9040718",
      "5d3e81496fba1f0fbd64eeb855f30f69a9040718"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "5d3e81496fba1f0fbd64eeb855f30f69a9040718",
      "commit_date": "2021-12-18T02:41:23Z",
      "author": {
        "login": "NGPixel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: sanitize SVG uploads",
        "length": 25,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 104,
        "additions": 79,
        "deletions": 25
      },
      "files": [
        {
          "filename": "client/components/admin/admin-security.vue",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -142,6 +142,15 @@\n                     :suffix='$t(`admin:security.maxUploadBatchSuffix`)'\n                     style='max-width: 450px;'\n                     )\n+                  v-divider.mt-3\n+                  v-switch(\n+                    inset\n+                    label='Scan and Sanitize SVG Uploads'\n+                    color='primary'\n+                    v-model='config.uploadScanSVG'\n+                    persistent-hint\n+                    hint='Should SVG uploads be scanned for vulnerabilities and stripped of any potentially unsafe content.'\n+                    )\n \n               v-card.mt-3.animated.fadeInUp.wait-p2s\n                 v-toolbar(flat, color='primary', dark, dense)\n@@ -242,6 +251,7 @@ export default {\n       config: {\n         uploadMaxFileSize: 0,\n         uploadMaxFiles: 0,\n+        uploadScanSVG: true,\n         securityOpenRedirect: true,\n         securityIframe: true,\n         securityReferrerPolicy: true,\n@@ -286,6 +296,7 @@ export default {\n               $authJwtRenewablePeriod: String\n               $uploadMaxFileSize: Int\n               $uploadMaxFiles: Int\n+              $uploadScanSVG: Boolean\n               $securityOpenRedirect: Boolean\n               $securityIframe: Boolean\n               $securityReferrerPolicy: Boolean\n@@ -307,6 +318,7 @@ export default {\n                   authJwtRenewablePeriod: $authJwtRenewablePeriod,\n                   uploadMaxFileSize: $uploadMaxFileSize,\n                   uploadMaxFiles: $uploadMaxFiles,\n+                  uploadScanSVG: $uploadScanSVG\n                   securityOpenRedirect: $securityOpenRedirect,\n                   securityIframe: $securityIframe,\n                   securityReferrerPolicy: $securityReferrerPolicy,\n@@ -337,6 +349,7 @@ export default {\n             authJwtRenewablePeriod: _.get(this.config, 'authJwtRenewablePeriod', ''),\n             uploadMaxFileSize: _.toSafeInteger(_.get(this.config, 'uploadMaxFileSize', 0)),\n             uploadMaxFiles: _.toSafeInteger(_.get(this.config, 'uploadMaxFiles', 0)),\n+            uploadScanSVG: _.get(this.config, 'uploadScanSVG', false),\n             securityOpenRedirect: _.get(this.config, 'securityOpenRedirect', false),\n             securityIframe: _.get(this.config, 'securityIframe', false),\n             securityReferrerPolicy: _.get(this.config, 'securityReferrerPolicy', false),\n@@ -388,6 +401,7 @@ export default {\n               authJwtRenewablePeriod\n               uploadMaxFileSize\n               uploadMaxFiles\n+              uploadScanSVG\n               securityOpenRedirect\n               securityIframe\n               securityReferrerPolicy"
        },
        {
          "filename": "server/app/data.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -80,6 +80,7 @@ defaults:\n     uploads:\n       maxFileSize: 5242880\n       maxFiles: 10\n+      scanSVG: true\n     flags:\n       ldapdebug: false\n       sqllog: false"
        },
        {
          "filename": "server/graph/resolvers/site.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -29,7 +29,8 @@ module.exports = {\n         authJwtExpiration: WIKI.config.auth.tokenExpiration,\n         authJwtRenewablePeriod: WIKI.config.auth.tokenRenewal,\n         uploadMaxFileSize: WIKI.config.uploads.maxFileSize,\n-        uploadMaxFiles: WIKI.config.uploads.maxFiles\n+        uploadMaxFiles: WIKI.config.uploads.maxFiles,\n+        uploadScanSVG: WIKI.config.uploads.scanSVG\n       }\n     }\n   },\n@@ -97,7 +98,8 @@ module.exports = {\n \n         WIKI.config.uploads = {\n           maxFileSize: _.get(args, 'uploadMaxFileSize', WIKI.config.uploads.maxFileSize),\n-          maxFiles: _.get(args, 'uploadMaxFiles', WIKI.config.uploads.maxFiles)\n+          maxFiles: _.get(args, 'uploadMaxFiles', WIKI.config.uploads.maxFiles),\n+          scanSVG: _.get(args, 'uploadScanSVG', WIKI.config.uploads.scanSVG)\n         }\n \n         await WIKI.configSvc.saveToDb(['host', 'title', 'company', 'contentLicense', 'seo', 'logoUrl', 'auth', 'features', 'security', 'uploads'])"
        },
        {
          "filename": "server/graph/schemas/site.graphql",
          "status": "modified",
          "additions": 25,
          "deletions": 23,
          "patch": "@@ -54,6 +54,7 @@ type SiteMutation {\n     securityCSPDirectives: String\n     uploadMaxFileSize: Int\n     uploadMaxFiles: Int\n+    uploadScanSVG: Boolean\n \n   ): DefaultResponse @auth(requires: [\"manage:system\"])\n }\n@@ -63,34 +64,35 @@ type SiteMutation {\n # -----------------------------------------------\n \n type SiteConfig {\n-  host: String!\n-  title: String!\n-  description: String!\n-  robots: [String]!\n-  analyticsService: String!\n-  analyticsId: String!\n-  company: String!\n-  contentLicense: String!\n-  logoUrl: String!\n+  host: String\n+  title: String\n+  description: String\n+  robots: [String]\n+  analyticsService: String\n+  analyticsId: String\n+  company: String\n+  contentLicense: String\n+  logoUrl: String\n   authAutoLogin: Boolean\n   authEnforce2FA: Boolean\n   authHideLocal: Boolean\n   authLoginBgUrl: String\n   authJwtAudience: String\n   authJwtExpiration: String\n   authJwtRenewablePeriod: String\n-  featurePageRatings: Boolean!\n-  featurePageComments: Boolean!\n-  featurePersonalWikis: Boolean!\n-  securityOpenRedirect: Boolean!\n-  securityIframe: Boolean!\n-  securityReferrerPolicy: Boolean!\n-  securityTrustProxy: Boolean!\n-  securitySRI: Boolean!\n-  securityHSTS: Boolean!\n-  securityHSTSDuration: Int!\n-  securityCSP: Boolean!\n-  securityCSPDirectives: String!\n-  uploadMaxFileSize: Int!\n-  uploadMaxFiles: Int!\n+  featurePageRatings: Boolean\n+  featurePageComments: Boolean\n+  featurePersonalWikis: Boolean\n+  securityOpenRedirect: Boolean\n+  securityIframe: Boolean\n+  securityReferrerPolicy: Boolean\n+  securityTrustProxy: Boolean\n+  securitySRI: Boolean\n+  securityHSTS: Boolean\n+  securityHSTSDuration: Int\n+  securityCSP: Boolean\n+  securityCSPDirectives: String\n+  uploadMaxFileSize: Int\n+  uploadMaxFiles: Int\n+  uploadScanSVG: Boolean\n }"
        },
        {
          "filename": "server/jobs/sanitize-svg.js",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+const fs = require('fs-extra')\n+const { JSDOM } = require('jsdom')\n+const createDOMPurify = require('dompurify')\n+\n+/* global WIKI */\n+\n+module.exports = async (svgPath) => {\n+  WIKI.logger.info(`Sanitizing SVG file upload...`)\n+\n+  try {\n+    let svgContents = await fs.readFile(svgPath, 'utf8')\n+\n+    const window = new JSDOM('').window\n+    const DOMPurify = createDOMPurify(window)\n+\n+    svgContents = DOMPurify.sanitize(svgContents)\n+\n+    await fs.writeFile(svgPath, svgContents)\n+    WIKI.logger.info(`Sanitized SVG file upload: [ COMPLETED ]`)\n+  } catch (err) {\n+    WIKI.logger.error(`Failed to sanitize SVG file upload: [ FAILED ]`)\n+    WIKI.logger.error(err.message)\n+    throw err\n+  }\n+}"
        },
        {
          "filename": "server/models/assets.js",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -99,6 +99,16 @@ module.exports = class Asset extends Model {\n       folderId: opts.folderId\n     }\n \n+    // Sanitize SVG contents\n+    if (WIKI.config.uploads.scanSVG && opts.mimetype === 'image/svg+xml') {\n+      const svgSanitizeJob = await WIKI.scheduler.registerJob({\n+        name: 'sanitize-svg',\n+        immediate: true,\n+        worker: true\n+      }, opts.path)\n+      await svgSanitizeJob.finished\n+    }\n+\n     // Save asset data\n     try {\n       const fileBuffer = await fs.readFile(opts.path)"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "abc8dce9ccb9b9f90e5681e01abce3929183f6a4",
            "date": "2025-01-01T05:18:42Z",
            "author_login": "Vasfed"
          },
          {
            "sha": "94d253bf596a976a85034a1317b896af5b720b6b",
            "date": "2024-11-22T19:31:07Z",
            "author_login": "maarous"
          },
          {
            "sha": "c7c20579fd893387236d11688660a4d20cee8f1d",
            "date": "2024-11-18T22:18:28Z",
            "author_login": "NGPixel"
          },
          {
            "sha": "583ea44a72aecb94c93721880cdd6c2bb6491cf1",
            "date": "2024-11-18T22:13:52Z",
            "author_login": "NGPixel"
          },
          {
            "sha": "ab5c620d5046cfa4713fca9a44a78477baac4b40",
            "date": "2024-10-12T08:51:48Z",
            "author_login": "NGPixel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Wiki.js is a wiki app built on Node.js. Wiki.js versions 2.5.257 and earlier are vulnerable to stored cross-site scripting through a SVG file upload. By creating a crafted SVG file, a malicious Wiki.js user may stage a stored cross-site scripting attack. This allows the attacker to execute malicious JavaScript when the SVG is viewed directly by other users. Scripts do not execute when loaded inside a page via normal `<img>` tags. Commit 5d3e81496fba1f0fbd64eeb855f30f69a9040718 fixes this vulnerability by adding an optional (enabled by default) SVG sanitization step to all file uploads that match the SVG mime type. As a workaround, disable file upload for all non-trusted users. Wiki.js version 2.5.260 is the first production version to contain a patch. Version 2.5.258 is the first development build to contain a patch and is available only as a Docker image as requarks/wiki:canary-2.5.258.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-20T23:15:29.300",
    "last_modified": "2024-11-21T06:29:54.643",
    "fix_date": "2021-12-18T02:41:23Z"
  },
  "references": [
    {
      "url": "https://github.com/Requarks/wiki/commit/5d3e81496fba1f0fbd64eeb855f30f69a9040718",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/releases/tag/2.5.260",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/security/advisories/GHSA-3qv4-gp35-rgh7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/commit/5d3e81496fba1f0fbd64eeb855f30f69a9040718",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/releases/tag/2.5.260",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/security/advisories/GHSA-3qv4-gp35-rgh7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.012387",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "wiki",
    "owner": "Requarks",
    "created_at": "2016-08-16T19:35:26Z",
    "updated_at": "2025-01-26T00:00:32Z",
    "pushed_at": "2025-01-01T05:18:42Z",
    "size": 40284,
    "stars": 25466,
    "forks": 2820,
    "open_issues": 162,
    "watchers": 25466,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Vue": 885886,
      "JavaScript": 785105,
      "SCSS": 93552,
      "HTML": 37190,
      "Shell": 31046,
      "Pug": 14489,
      "Go": 3549,
      "CSS": 3199,
      "Dockerfile": 3028,
      "Mustache": 2944
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:37:39.716437"
  }
}