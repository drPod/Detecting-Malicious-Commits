{
  "cve_id": "CVE-2021-43849",
  "github_data": {
    "repository": "NiklasMerz/cordova-plugin-fingerprint-aio",
    "fix_commit": "27434a240f97f69fd930088654590c8ba43569df",
    "related_commits": [
      "27434a240f97f69fd930088654590c8ba43569df",
      "27434a240f97f69fd930088654590c8ba43569df"
    ],
    "patch_url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/commit/27434a240f97f69fd930088654590c8ba43569df.patch",
    "fix_commit_details": {
      "sha": "27434a240f97f69fd930088654590c8ba43569df",
      "commit_date": "2021-12-21T12:43:06Z",
      "author": {
        "login": "hieucao",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update Fingerprint.swift",
        "length": 51,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 9,
        "additions": 6,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/ios/Fingerprint.swift",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -1,3 +1,4 @@\n+import Cordova\n import Foundation\n import LocalAuthentication\n \n@@ -52,6 +53,8 @@ enum PluginError:Int {\n                     biometryType = \"finger\";\n                 case .faceID:\n                     biometryType = \"face\"\n+                @unknown default:\n+                    fatalError()\n                 }\n             }\n \n@@ -143,7 +146,7 @@ enum PluginError:Int {\n         do {\n             let secret = Secret()\n             try? secret.delete()\n-            let invalidateOnEnrollment = (data?[\"invalidateOnEnrollment\"] as? Bool) ?? false\n+            let invalidateOnEnrollment = (data?.object(forKey: \"invalidateOnEnrollment\") as? Bool) ?? false\n             try secret.save(secretStr, invalidateOnEnrollment: invalidateOnEnrollment)\n             pluginResult = CDVPluginResult(status: CDVCommandStatus_OK, messageAs: \"Success\");\n         } catch {\n@@ -158,7 +161,7 @@ enum PluginError:Int {\n     func loadSecret(_ command: CDVInvokedUrlCommand) {\n         let data  = command.arguments[0] as AnyObject?;\n         var prompt = \"Authentication\"\n-        if let description = data?[\"description\"] as! String? {\n+        if let description = data?.object(forKey: \"description\") as! String? {\n             prompt = description;\n         }\n         var pluginResult: CDVPluginResult\n@@ -186,7 +189,7 @@ enum PluginError:Int {\n     @objc(registerBiometricSecret:)\n     func registerBiometricSecret(_ command: CDVInvokedUrlCommand){\n         let data  = command.arguments[0] as AnyObject?;\n-        if let secret = data?[\"secret\"] as? String {\n+        if let secret = data?.object(forKey: \"secret\") as? String {\n             self.saveSecret(secret, command: command)\n             return\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "786e160d5b0a99e7b7d6baaf035a35ddb11da656",
            "date": "2024-03-23T20:52:42Z",
            "author_login": "NiklasMerz"
          },
          {
            "sha": "f866e2d3be2734a6f3410a69c21234d69f46c4fb",
            "date": "2024-03-23T20:52:31Z",
            "author_login": "NiklasMerz"
          },
          {
            "sha": "80f2684aeaecd1b64bc29c32aba8bb58d2b45f7e",
            "date": "2024-03-22T14:26:39Z",
            "author_login": "austinwark"
          },
          {
            "sha": "72a2cf4174c7c808be6ef25288b95a8afe9a4991",
            "date": "2024-03-22T13:40:24Z",
            "author_login": "NiklasMerz"
          },
          {
            "sha": "9cbf597c7a2d7d7f5ee759ebdcdefb8a4a25eced",
            "date": "2024-03-22T13:40:10Z",
            "author_login": "NiklasMerz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "cordova-plugin-fingerprint-aio is a plugin provides a single and simple interface for accessing fingerprint APIs on both Android 6+ and iOS. In versions prior to 5.0.1 The exported activity `de.niklasmerz.cordova.biometric.BiometricActivity` can cause the app to crash. This vulnerability occurred because the activity didn't handle the case where it is requested with invalid or empty data which results in a crash. Any third party app can constantly call this activity with no permission. A 3rd party app/attacker using event listener can continually stop the app from working and make the victim unable to open it. Version 5.0.1 of the cordova-plugin-fingerprint-aio doesn't export the activity anymore and is no longer vulnerable. If you want to fix older versions change the attribute android:exported in plugin.xml to false. Please upgrade to version 5.0.1 as soon as possible.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-23T17:15:07.373",
    "last_modified": "2024-11-21T06:29:55.570",
    "fix_date": "2021-12-21T12:43:06Z"
  },
  "references": [
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/commit/27434a240f97f69fd930088654590c8ba43569df",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/releases/tag/v5.0.1",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/security/advisories/GHSA-7vfx-hfvm-rhr8",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/commit/27434a240f97f69fd930088654590c8ba43569df",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/releases/tag/v5.0.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio/security/advisories/GHSA-7vfx-hfvm-rhr8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.024336",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cordova-plugin-fingerprint-aio",
    "owner": "NiklasMerz",
    "created_at": "2016-08-31T08:19:24Z",
    "updated_at": "2025-01-12T10:59:16Z",
    "pushed_at": "2024-03-23T20:52:59Z",
    "size": 801,
    "stars": 323,
    "forks": 186,
    "open_issues": 55,
    "watchers": 323,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 35830,
      "Swift": 12764,
      "JavaScript": 5874,
      "Objective-C": 131
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:55:31.809561"
  }
}