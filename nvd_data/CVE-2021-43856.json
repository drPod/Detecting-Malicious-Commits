{
  "cve_id": "CVE-2021-43856",
  "github_data": {
    "repository": "Requarks/wiki",
    "fix_commit": "79bdd4409316adf649806de3e22352297f85cee0",
    "related_commits": [
      "79bdd4409316adf649806de3e22352297f85cee0",
      "79bdd4409316adf649806de3e22352297f85cee0"
    ],
    "patch_url": "https://github.com/Requarks/wiki/commit/79bdd4409316adf649806de3e22352297f85cee0.patch",
    "fix_commit_details": {
      "sha": "79bdd4409316adf649806de3e22352297f85cee0",
      "commit_date": "2021-12-25T01:18:12Z",
      "author": {
        "login": "NGPixel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: force download of unsafe extensions",
        "length": 40,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 35,
        "additions": 33,
        "deletions": 2
      },
      "files": [
        {
          "filename": "client/components/admin/admin-security.vue",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -151,6 +151,15 @@\n                     persistent-hint\n                     hint='Should SVG uploads be scanned for vulnerabilities and stripped of any potentially unsafe content.'\n                     )\n+                  v-divider.mt-3\n+                  v-switch(\n+                    inset\n+                    label='Force Download of Unsafe Extensions'\n+                    color='primary'\n+                    v-model='config.uploadForceDownload'\n+                    persistent-hint\n+                    hint='Should non-image files be forced as downloads when accessed directly. This prevents potential XSS attacks via unsafe file extensions uploads.'\n+                    )\n \n               v-card.mt-3.animated.fadeInUp.wait-p2s\n                 v-toolbar(flat, color='primary', dark, dense)\n@@ -252,6 +261,7 @@ export default {\n         uploadMaxFileSize: 0,\n         uploadMaxFiles: 0,\n         uploadScanSVG: true,\n+        uploadForceDownload: true,\n         securityOpenRedirect: true,\n         securityIframe: true,\n         securityReferrerPolicy: true,\n@@ -297,6 +307,7 @@ export default {\n               $uploadMaxFileSize: Int\n               $uploadMaxFiles: Int\n               $uploadScanSVG: Boolean\n+              $uploadForceDownload: Boolean\n               $securityOpenRedirect: Boolean\n               $securityIframe: Boolean\n               $securityReferrerPolicy: Boolean\n@@ -319,6 +330,7 @@ export default {\n                   uploadMaxFileSize: $uploadMaxFileSize,\n                   uploadMaxFiles: $uploadMaxFiles,\n                   uploadScanSVG: $uploadScanSVG\n+                  uploadForceDownload: $uploadForceDownload,\n                   securityOpenRedirect: $securityOpenRedirect,\n                   securityIframe: $securityIframe,\n                   securityReferrerPolicy: $securityReferrerPolicy,\n@@ -350,6 +362,7 @@ export default {\n             uploadMaxFileSize: _.toSafeInteger(_.get(this.config, 'uploadMaxFileSize', 0)),\n             uploadMaxFiles: _.toSafeInteger(_.get(this.config, 'uploadMaxFiles', 0)),\n             uploadScanSVG: _.get(this.config, 'uploadScanSVG', false),\n+            uploadForceDownload: _.get(this.config, 'uploadForceDownload', false),\n             securityOpenRedirect: _.get(this.config, 'securityOpenRedirect', false),\n             securityIframe: _.get(this.config, 'securityIframe', false),\n             securityReferrerPolicy: _.get(this.config, 'securityReferrerPolicy', false),\n@@ -402,6 +415,7 @@ export default {\n               uploadMaxFileSize\n               uploadMaxFiles\n               uploadScanSVG\n+              uploadForceDownload\n               securityOpenRedirect\n               securityIframe\n               securityReferrerPolicy"
        },
        {
          "filename": "server/app/data.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -81,6 +81,7 @@ defaults:\n       maxFileSize: 5242880\n       maxFiles: 10\n       scanSVG: true\n+      forceDownload: true\n     flags:\n       ldapdebug: false\n       sqllog: false"
        },
        {
          "filename": "server/graph/resolvers/site.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -30,7 +30,8 @@ module.exports = {\n         authJwtRenewablePeriod: WIKI.config.auth.tokenRenewal,\n         uploadMaxFileSize: WIKI.config.uploads.maxFileSize,\n         uploadMaxFiles: WIKI.config.uploads.maxFiles,\n-        uploadScanSVG: WIKI.config.uploads.scanSVG\n+        uploadScanSVG: WIKI.config.uploads.scanSVG,\n+        uploadForceDownload: WIKI.config.uploads.forceDownload\n       }\n     }\n   },\n@@ -99,7 +100,8 @@ module.exports = {\n         WIKI.config.uploads = {\n           maxFileSize: _.get(args, 'uploadMaxFileSize', WIKI.config.uploads.maxFileSize),\n           maxFiles: _.get(args, 'uploadMaxFiles', WIKI.config.uploads.maxFiles),\n-          scanSVG: _.get(args, 'uploadScanSVG', WIKI.config.uploads.scanSVG)\n+          scanSVG: _.get(args, 'uploadScanSVG', WIKI.config.uploads.scanSVG),\n+          forceDownload: _.get(args, 'uploadForceDownload', WIKI.config.uploads.forceDownload)\n         }\n \n         await WIKI.configSvc.saveToDb(['host', 'title', 'company', 'contentLicense', 'seo', 'logoUrl', 'auth', 'features', 'security', 'uploads'])"
        },
        {
          "filename": "server/graph/schemas/site.graphql",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -55,6 +55,7 @@ type SiteMutation {\n     uploadMaxFileSize: Int\n     uploadMaxFiles: Int\n     uploadScanSVG: Boolean\n+    uploadForceDownload: Boolean\n \n   ): DefaultResponse @auth(requires: [\"manage:system\"])\n }\n@@ -95,4 +96,5 @@ type SiteConfig {\n   uploadMaxFileSize: Int\n   uploadMaxFiles: Int\n   uploadScanSVG: Boolean\n+  uploadForceDownload: Boolean\n }"
        },
        {
          "filename": "server/helpers/asset.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,10 +1,15 @@\n const crypto = require('crypto')\n+const path = require('path')\n \n module.exports = {\n   /**\n    * Generate unique hash from page\n    */\n   generateHash(assetPath) {\n     return crypto.createHash('sha1').update(assetPath).digest('hex')\n+  },\n+\n+  getPathInfo(assetPath) {\n+    return path.parse(assetPath.toLowerCase())\n   }\n }"
        },
        {
          "filename": "server/models/assets.js",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -168,8 +168,15 @@ module.exports = class Asset extends Model {\n \n   static async getAsset(assetPath, res) {\n     try {\n+      const fileInfo = assetHelper.getPathInfo(assetPath)\n       const fileHash = assetHelper.generateHash(assetPath)\n       const cachePath = path.resolve(WIKI.ROOTPATH, WIKI.config.dataPath, `cache/${fileHash}.dat`)\n+\n+      // Force unsafe extensions to download\n+      if (WIKI.config.uploads.forceDownload && !['.png', '.apng', '.jpg', '.jpeg', '.gif', '.bmp', '.webp', '.svg'].includes(fileInfo.ext)) {\n+        res.set('Content-disposition', 'attachment; filename=' + fileInfo.base)\n+      }\n+\n       if (await WIKI.models.assets.getAssetFromCache(assetPath, cachePath, res)) {\n         return\n       }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "abc8dce9ccb9b9f90e5681e01abce3929183f6a4",
            "date": "2025-01-01T05:18:42Z",
            "author_login": "Vasfed"
          },
          {
            "sha": "94d253bf596a976a85034a1317b896af5b720b6b",
            "date": "2024-11-22T19:31:07Z",
            "author_login": "maarous"
          },
          {
            "sha": "c7c20579fd893387236d11688660a4d20cee8f1d",
            "date": "2024-11-18T22:18:28Z",
            "author_login": "NGPixel"
          },
          {
            "sha": "583ea44a72aecb94c93721880cdd6c2bb6491cf1",
            "date": "2024-11-18T22:13:52Z",
            "author_login": "NGPixel"
          },
          {
            "sha": "ab5c620d5046cfa4713fca9a44a78477baac4b40",
            "date": "2024-10-12T08:51:48Z",
            "author_login": "NGPixel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Wiki.js is a wiki app built on Node.js. Wiki.js 2.5.263 and earlier is vulnerable to stored cross-site scripting through non-image file uploads for file types that can be viewed directly inline in the browser. By creating a malicious file which can execute inline JS when viewed in the browser (e.g. XML files), a malicious Wiki.js user may stage a stored cross-site scripting attack. This allows the attacker to execute malicious JavaScript when the file is viewed directly by other users. The file must be opened directly by the user and will not trigger directly in a normal Wiki.js page. A patch in version 2.5.264 fixes this vulnerability by adding an optional (enabled by default) force download flag to all non-image file types, preventing the file from being viewed inline in the browser. As a workaround, disable file upload for all non-trusted users. --- Thanks to @Haxatron for reporting this vulnerability. Initially reported via https://huntr.dev/bounties/266bff09-00d9-43ca-a4bb-bb540642811f/",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2021-12-27T18:15:07.583",
    "last_modified": "2024-11-21T06:29:56.487",
    "fix_date": "2021-12-25T01:18:12Z"
  },
  "references": [
    {
      "url": "https://github.com/Requarks/wiki/commit/79bdd4409316adf649806de3e22352297f85cee0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/releases/tag/2.5.264",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/security/advisories/GHSA-rhpf-929m-7fm2",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/commit/79bdd4409316adf649806de3e22352297f85cee0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/releases/tag/2.5.264",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Requarks/wiki/security/advisories/GHSA-rhpf-929m-7fm2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.030898",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wiki",
    "owner": "Requarks",
    "created_at": "2016-08-16T19:35:26Z",
    "updated_at": "2025-01-14T13:04:23Z",
    "pushed_at": "2025-01-01T05:18:42Z",
    "size": 40284,
    "stars": 25375,
    "forks": 2812,
    "open_issues": 162,
    "watchers": 25375,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Vue": 885886,
      "JavaScript": 785105,
      "SCSS": 93552,
      "HTML": 37190,
      "Shell": 31046,
      "Pug": 14489,
      "Go": 3549,
      "CSS": 3199,
      "Dockerfile": 3028,
      "Mustache": 2944
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:20:59.329863"
  }
}