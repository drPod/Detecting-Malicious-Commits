{
  "cve_id": "CVE-2021-44108",
  "github_data": {
    "repository": "open5gs/open5gs",
    "fix_commit": "d919b2744cd05abae043490f0a3dd1946c1ccb8c",
    "related_commits": [
      "d919b2744cd05abae043490f0a3dd1946c1ccb8c",
      "d919b2744cd05abae043490f0a3dd1946c1ccb8c"
    ],
    "patch_url": "https://github.com/open5gs/open5gs/commit/d919b2744cd05abae043490f0a3dd1946c1ccb8c.patch",
    "fix_commit_details": {
      "sha": "d919b2744cd05abae043490f0a3dd1946c1ccb8c",
      "commit_date": "2021-11-16T23:09:16Z",
      "author": {
        "login": "acetcom",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[AMF] fix the memory problem (#1247)",
        "length": 154,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 43,
        "additions": 26,
        "deletions": 17
      },
      "files": [
        {
          "filename": "lib/sbi/message.c",
          "status": "modified",
          "additions": 19,
          "deletions": 14,
          "patch": "@@ -924,7 +924,7 @@ static int parse_json(ogs_sbi_message_t *message,\n     ogs_log_print(OGS_LOG_TRACE, \"%s\", json);\n     item = cJSON_Parse(json);\n     if (!item) {\n-        ogs_error(\"JSON parse error\");\n+        ogs_error(\"JSON parse error [%s]\", json);\n         return OGS_ERROR;\n     }\n \n@@ -1833,18 +1833,16 @@ static int on_header_value(\n     data = multipart_parser_get_data(parser);\n     ogs_assert(data);\n \n-    if (at && length) {\n+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n         SWITCH(data->header_field)\n         CASE(OGS_SBI_CONTENT_TYPE)\n-            if (data->part[data->num_of_part].content_type)\n-                ogs_free(data->part[data->num_of_part].content_type);\n+            ogs_assert(data->part[data->num_of_part].content_type == NULL);\n             data->part[data->num_of_part].content_type =\n                 ogs_strndup(at, length);\n             ogs_assert(data->part[data->num_of_part].content_type);\n             break;\n         CASE(OGS_SBI_CONTENT_ID)\n-            if (data->part[data->num_of_part].content_id)\n-                ogs_free(data->part[data->num_of_part].content_id);\n+            ogs_assert(data->part[data->num_of_part].content_id == NULL);\n             data->part[data->num_of_part].content_id =\n                 ogs_strndup(at, length);\n             ogs_assert(data->part[data->num_of_part].content_id);\n@@ -1867,7 +1865,7 @@ static int on_part_data(\n     data = multipart_parser_get_data(parser);\n     ogs_assert(data);\n \n-    if (at && length) {\n+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART && at && length) {\n         SWITCH(data->part[data->num_of_part].content_type)\n         CASE(OGS_SBI_CONTENT_JSON_TYPE)\n         CASE(OGS_SBI_CONTENT_5GNAS_TYPE)\n@@ -1901,9 +1899,9 @@ static int on_part_data(\n             break;\n \n         DEFAULT\n-            ogs_log_hexdump(OGS_LOG_FATAL, (unsigned char *)at, length);\n             ogs_error(\"Unknown content_type [%s]\",\n                     data->part[data->num_of_part].content_type);\n+            ogs_log_hexdump(OGS_LOG_ERROR, (unsigned char *)at, length);\n         END\n     }\n     return 0;\n@@ -1917,7 +1915,9 @@ static int on_part_data_end(multipart_parser *parser)\n     data = multipart_parser_get_data(parser);\n     ogs_assert(data);\n \n-    data->num_of_part++;\n+    if (data->num_of_part < OGS_SBI_MAX_NUM_OF_PART) {\n+        data->num_of_part++;\n+    }\n \n     return 0;\n }\n@@ -1967,6 +1967,11 @@ static int parse_multipart(\n     multipart_parser_free(parser);\n     ogs_free(boundary);\n \n+    if (data.num_of_part > OGS_SBI_MAX_NUM_OF_PART) {\n+        /* Overflow Issues #1247 */\n+        ogs_fatal(\"Overflow num_of_part[%d]\", data.num_of_part);\n+        ogs_assert_if_reached();\n+    }\n     for (i = 0; i < data.num_of_part; i++) {\n         SWITCH(data.part[i].content_type)\n         CASE(OGS_SBI_CONTENT_JSON_TYPE)\n@@ -2013,14 +2018,14 @@ static int parse_multipart(\n \n         DEFAULT\n             ogs_error(\"Unknown content-type[%s]\", data.part[i].content_type);\n+\n+            if (data.part[i].content_id)\n+                ogs_free(data.part[i].content_id);\n+            if (data.part[i].content_type)\n+                ogs_free(data.part[i].content_type);\n         END\n     }\n \n-    if (data.part[i].content_id)\n-        ogs_free(data.part[i].content_id);\n-    if (data.part[i].content_type)\n-        ogs_free(data.part[i].content_type);\n-\n     if (data.header_field)\n         ogs_free(data.header_field);\n "
        },
        {
          "filename": "src/amf/namf-handler.c",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -53,6 +53,8 @@ int amf_namf_comm_handle_n1_n2_message_transfer(\n     OpenAPI_n2_info_content_t *n2InfoContent = NULL;\n     OpenAPI_ref_to_binary_data_t *ngapData = NULL;\n \n+    OpenAPI_ngap_ie_type_e ngapIeType = OpenAPI_ngap_ie_type_NULL;\n+\n     ogs_assert(stream);\n     ogs_assert(recvmsg);\n \n@@ -117,12 +119,15 @@ int amf_namf_comm_handle_n1_n2_message_transfer(\n             ogs_error(\"No smInfo\");\n             return OGS_ERROR;\n         }\n+\n         n2InfoContent = smInfo->n2_info_content;\n         if (!n2InfoContent) {\n             ogs_error(\"No n2InfoContent\");\n             return OGS_ERROR;\n         }\n \n+        ngapIeType = n2InfoContent->ngap_ie_type;\n+\n         ngapData = n2InfoContent->ngap_data;\n         if (!ngapData || !ngapData->content_id) {\n             ogs_error(\"No ngapData\");\n@@ -153,7 +158,7 @@ int amf_namf_comm_handle_n1_n2_message_transfer(\n \n     sendmsg.N1N2MessageTransferRspData = &N1N2MessageTransferRspData;\n \n-    switch (n2InfoContent->ngap_ie_type) {\n+    switch (ngapIeType) {\n     case OpenAPI_ngap_ie_type_PDU_RES_SETUP_REQ:\n         if (!n2buf) {\n             ogs_error(\"[%s] No N2 SM Content\", amf_ue->supi);\n@@ -390,8 +395,7 @@ int amf_namf_comm_handle_n1_n2_message_transfer(\n         break;\n \n     default:\n-        ogs_error(\"Not implemented ngap_ie_type[%d]\",\n-                n2InfoContent->ngap_ie_type);\n+        ogs_error(\"Not implemented ngapIeType[%d]\", ngapIeType);\n         ogs_assert_if_reached();\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "13585a34e3d5505dd86d2cdf78c91829f3936851",
            "date": "2025-01-12T02:47:12Z",
            "author_login": "acetcom"
          },
          {
            "sha": "d181ab54ccf9fb829ec491dfc18ab42e4179ae8f",
            "date": "2025-01-11T05:32:39Z",
            "author_login": "acetcom"
          },
          {
            "sha": "8ff1d1b66675c69e2916e3289e481899df5bfc23",
            "date": "2025-01-06T01:38:51Z",
            "author_login": "acetcom"
          },
          {
            "sha": "df079b48d85e26ffe03fc18579ed9f7d69e1bff5",
            "date": "2025-01-05T13:17:38Z",
            "author_login": "acetcom"
          },
          {
            "sha": "ff917e9436a1925fb7a84729ae6b083918d2d9d1",
            "date": "2025-01-04T05:11:08Z",
            "author_login": "acetcom"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-476",
    "description": "A null pointer dereference in src/amf/namf-handler.c in Open5GS 2.3.6 and earlier allows remote attackers to Denial of Service via a crafted sbi request to amf.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-05T02:15:06.927",
    "last_modified": "2024-11-21T06:30:22.617",
    "fix_date": "2021-11-16T23:09:16Z"
  },
  "references": [
    {
      "url": "https://github.com/open5gs/open5gs/commit/d919b2744cd05abae043490f0a3dd1946c1ccb8c",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/open5gs/open5gs/issues/1247",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/open5gs/open5gs/commit/d919b2744cd05abae043490f0a3dd1946c1ccb8c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/open5gs/open5gs/issues/1247",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.099264",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "open5gs",
    "owner": "open5gs",
    "created_at": "2017-02-01T10:48:49Z",
    "updated_at": "2025-01-14T11:52:37Z",
    "pushed_at": "2025-01-12T02:47:33Z",
    "size": 70375,
    "stars": 1936,
    "forks": 783,
    "open_issues": 203,
    "watchers": 1936,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "C": 49736410,
      "Mustache": 466439,
      "JavaScript": 248805,
      "Meson": 241352,
      "Python": 187063,
      "Shell": 84460,
      "Dockerfile": 6508,
      "C++": 3446,
      "Awk": 2639,
      "CSS": 2192
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T15:34:10.765143"
  }
}