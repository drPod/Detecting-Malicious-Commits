{
  "cve_id": "CVE-2021-4437",
  "github_data": {
    "repository": "dbartholomae/lambda-middleware",
    "fix_commit": "f689404d830cbc1edd6a1018d3334ff5f44dc6a6",
    "related_commits": [
      "f689404d830cbc1edd6a1018d3334ff5f44dc6a6",
      "f689404d830cbc1edd6a1018d3334ff5f44dc6a6"
    ],
    "patch_url": "https://github.com/dbartholomae/lambda-middleware/commit/f689404d830cbc1edd6a1018d3334ff5f44dc6a6.patch",
    "fix_commit_details": {
      "sha": "f689404d830cbc1edd6a1018d3334ff5f44dc6a6",
      "commit_date": "2021-08-30T23:03:23Z",
      "author": {
        "login": "matt-jenner",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(json-deserializer): fixed codeQL vulnerability",
        "length": 521,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 25,
        "deletions": 14
      },
      "files": [
        {
          "filename": "packages/json-deserializer/src/JsonDeserializer.test.ts",
          "status": "modified",
          "additions": 16,
          "deletions": 9,
          "patch": "@@ -29,16 +29,23 @@ describe(\"jsonDeserializer\", () => {\n     },\n   };\n \n-  it(\"deserializes objects if the event has a json content-type header\", async () => {\n-    const event: APIGatewayProxyEvent = createEvent({\n-      headers: { \"Content-Type\": \"application/json\" },\n-      body: JSON.stringify(testObject),\n-    });\n+  describe(\"deserializes objects the event has a valid json content-type header:\", () => {\n+    it.each([\n+      [\"subtype is json\", \"application/json\"],\n+      [\"subtype structured syntax specifier is json\", \"application/ld+json\"],\n+      [\"semicolon is appended\", \"application/json;\"],\n+      [\"whitespace is appended\", \"application/json;   \"],\n+    ])(\"%s (%p)\", async (_string, mimeType: string) => {\n+      const event: APIGatewayProxyEvent = createEvent({\n+        headers: { \"Content-Type\": mimeType },\n+        body: JSON.stringify(testObject),\n+      });\n \n-    await handlerWithMiddleware(event, createContext());\n-    expect(processedEvent.bodyObject).toMatchObject(\n-      JSON.parse(JSON.stringify(testObject))\n-    );\n+      await handlerWithMiddleware(event, createContext());\n+      expect(processedEvent.bodyObject).toMatchObject(\n+        JSON.parse(JSON.stringify(testObject))\n+      );\n+    });\n   });\n \n   describe(\"sets the request bodyObject to null if:\", () => {"
        },
        {
          "filename": "packages/json-deserializer/src/JsonDeserializer.ts",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -1,5 +1,4 @@\n import { PromiseHandler } from \"@lambda-middleware/utils\";\n-import debugFactory, { IDebugger } from \"debug\";\n import {\n   APIGatewayProxyEvent,\n   APIGatewayProxyResult,\n@@ -8,8 +7,6 @@ import {\n import { APIGatewayProxyObjectEvent } from \"./types/APIGatewayProxyObjectEvent\";\n import { RequestBodyNotJsonError } from \"./customErrors/RequestBodyNotJsonError\";\n \n-const logger: IDebugger = debugFactory(\"@lambda-middleware/json-serializer\");\n-\n export const jsonDeserializer = <E extends APIGatewayProxyEvent>() => (\n   handler: PromiseHandler<APIGatewayProxyObjectEvent<E>, APIGatewayProxyResult>\n ) => async (event: E, context: Context): Promise<APIGatewayProxyResult> => {\n@@ -50,6 +47,13 @@ const isJsonMimeType = (event: APIGatewayProxyEvent) => {\n     return false;\n   }\n \n-  const mimePattern = /^application\\/(.+\\+)?json(;.*)?$/;\n-  return mimePattern.test(contentTypeHeader);\n+  const mimeParts = contentTypeHeader.split(\"/\");\n+\n+  if (mimeParts.length != 2) {\n+    return false;\n+  }\n+\n+  const lastSubtypePart = mimeParts[1].toLowerCase().split(\"+\").pop()?.trim();\n+\n+  return lastSubtypePart === \"json\" || lastSubtypePart === \"json;\";\n };"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a89d5adcf020d351733c4ed4d9b4d2a8fc352990",
            "date": "2024-10-16T20:48:18Z",
            "author_login": "mergify[bot]"
          },
          {
            "sha": "ccf18e2950d1aa529ab5c371c3c823527bc8d689",
            "date": "2024-10-16T20:42:45Z",
            "author_login": "dbartholomae"
          },
          {
            "sha": "7f256b2df6b916960bc081784ea41ca1e614f0e7",
            "date": "2024-10-16T20:36:47Z",
            "author_login": "mergify[bot]"
          },
          {
            "sha": "1ac1d01730716b5f98c8de1403f1c450873cab77",
            "date": "2024-10-16T20:32:20Z",
            "author_login": "dbartholomae"
          },
          {
            "sha": "91a7ec519906c8ea0edfe7362d4e1425e64df8cd",
            "date": "2022-11-14T11:59:57Z",
            "author_login": "dbartholomae"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-1333",
    "description": "A vulnerability, which was classified as problematic, has been found in dbartholomae lambda-middleware frameguard up to 1.0.4. Affected by this issue is some unknown functionality of the file packages/json-deserializer/src/JsonDeserializer.ts of the component JSON Mime-Type Handler. The manipulation leads to inefficient regular expression complexity. Upgrading to version 1.1.0 is able to address this issue. The patch is identified as f689404d830cbc1edd6a1018d3334ff5f44dc6a6. It is recommended to upgrade the affected component. VDB-253406 is the identifier assigned to this vulnerability.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-12T20:15:07.993",
    "last_modified": "2024-11-21T06:37:43.740",
    "fix_date": "2021-08-30T23:03:23Z"
  },
  "references": [
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/commit/f689404d830cbc1edd6a1018d3334ff5f44dc6a6",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/pull/57",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/releases/tag/%40lambda-middleware%2Fframeguard_v1.1.0",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.253406",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://vuldb.com/?id.253406",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/commit/f689404d830cbc1edd6a1018d3334ff5f44dc6a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/pull/57",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dbartholomae/lambda-middleware/releases/tag/%40lambda-middleware%2Fframeguard_v1.1.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.253406",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://vuldb.com/?id.253406",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.114119",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lambda-middleware",
    "owner": "dbartholomae",
    "created_at": "2020-01-25T23:41:28Z",
    "updated_at": "2024-11-13T06:57:11Z",
    "pushed_at": "2024-10-16T20:48:20Z",
    "size": 1419,
    "stars": 153,
    "forks": 18,
    "open_issues": 0,
    "watchers": 153,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "TypeScript": 151522,
      "JavaScript": 17982,
      "Raku": 8203,
      "Perl": 1184
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:46:31.173890"
  }
}