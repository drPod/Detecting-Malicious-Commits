{
  "cve_id": "CVE-2021-44528",
  "github_data": {
    "repository": "rails/rails",
    "fix_commit": "0fccfb9a3097a9c4260c791f1a40b128517e7815",
    "related_commits": [
      "0fccfb9a3097a9c4260c791f1a40b128517e7815",
      "0fccfb9a3097a9c4260c791f1a40b128517e7815"
    ],
    "patch_url": "https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815.patch",
    "fix_commit_details": {
      "sha": "0fccfb9a3097a9c4260c791f1a40b128517e7815",
      "commit_date": "2021-07-07T10:06:32Z",
      "author": {
        "login": "StefSchenkelaars",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix invalid forwarded host vulnerability",
        "length": 593,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 99,
        "additions": 91,
        "deletions": 8
      },
      "files": [
        {
          "filename": "actionpack/lib/action_dispatch/middleware/host_authorization.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 7,
          "patch": "@@ -52,7 +52,7 @@ def sanitize_regexp(host)\n \n         def sanitize_string(host)\n           if host.start_with?(\".\")\n-            /\\A(.+\\.)?#{Regexp.escape(host[1..-1])}\\z/i\n+            /\\A([a-z0-9-]+\\.)?#{Regexp.escape(host[1..-1])}\\z/i\n           else\n             /\\A#{Regexp.escape host}\\z/i\n           end\n@@ -120,13 +120,9 @@ def call(env)\n     end\n \n     private\n-      HOSTNAME = /[a-z0-9.-]+|\\[[a-f0-9]*:[a-f0-9.:]+\\]/i\n-      VALID_ORIGIN_HOST = /\\A(#{HOSTNAME})(?::\\d+)?\\z/\n-      VALID_FORWARDED_HOST = /(?:\\A|,[ ]?)(#{HOSTNAME})(?::\\d+)?\\z/\n-\n       def authorized?(request)\n-        origin_host = request.get_header(\"HTTP_HOST\")&.slice(VALID_ORIGIN_HOST, 1) || \"\"\n-        forwarded_host = request.x_forwarded_host&.slice(VALID_FORWARDED_HOST, 1) || \"\"\n+        origin_host = request.get_header(\"HTTP_HOST\")\n+        forwarded_host = request.x_forwarded_host&.split(/,\\s?/)&.last\n \n         @permissions.allows?(origin_host) && (forwarded_host.blank? || @permissions.allows?(forwarded_host))\n       end"
        },
        {
          "filename": "actionpack/test/dispatch/host_authorization_test.rb",
          "status": "modified",
          "additions": 88,
          "deletions": 1,
          "patch": "@@ -167,6 +167,44 @@ class HostAuthorizationTest < ActionDispatch::IntegrationTest\n     assert_match \"Blocked host: 127.0.0.1\", response.body\n   end\n \n+  test \"blocks requests with spoofed relative X-FORWARDED-HOST\" do\n+    @app = ActionDispatch::HostAuthorization.new(App, [\"www.example.com\"])\n+\n+    get \"/\", env: {\n+      \"HTTP_X_FORWARDED_HOST\" => \"//randomhost.com\",\n+      \"HOST\" => \"www.example.com\",\n+      \"action_dispatch.show_detailed_exceptions\" => true\n+    }\n+\n+    assert_response :forbidden\n+    assert_match \"Blocked host: //randomhost.com\", response.body\n+  end\n+\n+  test \"forwarded secondary hosts are allowed when permitted\" do\n+    @app = ActionDispatch::HostAuthorization.new(App, \".domain.com\")\n+\n+    get \"/\", env: {\n+      \"HTTP_X_FORWARDED_HOST\" => \"example.com, my-sub.domain.com\",\n+      \"HOST\" => \"domain.com\",\n+    }\n+\n+    assert_response :ok\n+    assert_equal \"Success\", body\n+  end\n+\n+  test \"forwarded secondary hosts are blocked when mismatch\" do\n+    @app = ActionDispatch::HostAuthorization.new(App, \"domain.com\")\n+\n+    get \"/\", env: {\n+      \"HTTP_X_FORWARDED_HOST\" => \"domain.com, evil.com\",\n+      \"HOST\" => \"domain.com\",\n+      \"action_dispatch.show_detailed_exceptions\" => true\n+    }\n+\n+    assert_response :forbidden\n+    assert_match \"Blocked host: evil.com\", response.body\n+  end\n+\n   test \"does not consider IP addresses in X-FORWARDED-HOST spoofed when disabled\" do\n     @app = ActionDispatch::HostAuthorization.new(App, nil)\n \n@@ -205,18 +243,67 @@ class HostAuthorizationTest < ActionDispatch::IntegrationTest\n     assert_match \"Blocked host: sub.domain.com\", response.body\n   end\n \n+  test \"sub-sub domains should not be permitted\" do\n+    @app = ActionDispatch::HostAuthorization.new(App, \".domain.com\")\n+\n+    get \"/\", env: {\n+      \"HOST\" => \"secondary.sub.domain.com\",\n+      \"action_dispatch.show_detailed_exceptions\" => true\n+    }\n+\n+    assert_response :forbidden\n+    assert_match \"Blocked host: secondary.sub.domain.com\", response.body\n+  end\n+\n   test \"forwarded hosts are allowed when permitted\" do\n     @app = ActionDispatch::HostAuthorization.new(App, \".domain.com\")\n \n     get \"/\", env: {\n-      \"HTTP_X_FORWARDED_HOST\" => \"sub.domain.com\",\n+      \"HTTP_X_FORWARDED_HOST\" => \"my-sub.domain.com\",\n       \"HOST\" => \"domain.com\",\n     }\n \n     assert_response :ok\n     assert_equal \"Success\", body\n   end\n \n+  test \"lots of NG hosts\" do\n+    ng_hosts = [\n+      \"hacker%E3%80%82com\",\n+      \"hacker%00.com\",\n+      \"www.theirsite.com@yoursite.com\",\n+      \"hacker.com/test/\",\n+      \"hacker%252ecom\",\n+      \".hacker.com\",\n+      \"/\\/\\/hacker.com/\",\n+      \"/hacker.com\",\n+      \"../hacker.com\",\n+      \".hacker.com\",\n+      \"@hacker.com\",\n+      \"hacker.com\",\n+      \"hacker.com%23@example.com\",\n+      \"hacker.com/.jpg\",\n+      \"hacker.com\\texample.com/\",\n+      \"hacker.com/example.com\",\n+      \"hacker.com\\@example.com\",\n+      \"hacker.com/example.com\",\n+      \"hacker.com/\"\n+    ]\n+\n+    @app = ActionDispatch::HostAuthorization.new(App, \"example.com\")\n+\n+    ng_hosts.each do |host|\n+      get \"/\", env: {\n+        \"HTTP_X_FORWARDED_HOST\" => host,\n+        \"HOST\" => \"example.com\",\n+        \"action_dispatch.show_detailed_exceptions\" => true\n+      }\n+\n+      assert_response :forbidden\n+      assert_match \"Blocked host: #{host}\", response.body\n+    end\n+  end\n+\n   test \"exclude matches allow any host\" do\n     @app = ActionDispatch::HostAuthorization.new(App, \"only.com\", exclude: ->(req) { req.path == \"/foo\" })\n "
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6c7a848a6e09fba5185a09e90c39a41a17c19ed0",
            "date": "2025-01-14T12:51:51Z",
            "author_login": "byroot"
          },
          {
            "sha": "93ea738eeb31f8a2e130898833b2f42ba40cd51a",
            "date": "2025-01-14T12:49:59Z",
            "author_login": "byroot"
          },
          {
            "sha": "cb97c3adc515a85f67e28a589664b9d9a5e6000c",
            "date": "2025-01-14T12:02:58Z",
            "author_login": "AlanGabbianelli"
          },
          {
            "sha": "50ddde5adb9a97d6923370596e69c5beeb9eefca",
            "date": "2025-01-14T10:57:27Z",
            "author_login": "byroot"
          },
          {
            "sha": "b608c1b755ea5bf9dc462e958e75472f2710c71e",
            "date": "2025-01-14T09:56:13Z",
            "author_login": "byroot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "A open redirect vulnerability exists in Action Pack >= 6.0.0 that could allow an attacker to craft a \"X-Forwarded-Host\" headers in combination with certain \"allowed host\" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious website.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-10T14:10:26.117",
    "last_modified": "2024-11-21T06:31:10.060",
    "fix_date": "2021-07-07T10:06:32Z"
  },
  "references": [
    {
      "url": "https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815",
      "source": "support@hackerone.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240208-0003/",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5372",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240208-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5372",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.058130",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rails",
    "owner": "rails",
    "created_at": "2008-04-11T02:19:47Z",
    "updated_at": "2025-01-14T12:51:57Z",
    "pushed_at": "2025-01-14T12:53:28Z",
    "size": 261740,
    "stars": 56313,
    "forks": 21746,
    "open_issues": 1251,
    "watchers": 56313,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0-5-stable",
      "0-6-stable",
      "0-7-stable",
      "0-8-stable",
      "1-2-stable",
      "2-0-stable",
      "2-1-stable",
      "2-2-stable",
      "2-3-stable",
      "3-0-stable",
      "3-1-stable",
      "3-2-stable",
      "4-0-stable",
      "4-1-stable",
      "4-2-stable",
      "5-0-stable",
      "5-1-stable",
      "5-2-stable",
      "6-0-stable",
      "6-1-stable",
      "7-0-stable",
      "7-1-stable",
      "7-2-stable"
    ],
    "languages": {
      "Ruby": 17127894,
      "JavaScript": 228210,
      "HTML": 196993,
      "SCSS": 50596,
      "CSS": 47127,
      "Dockerfile": 2019,
      "Shell": 668
    },
    "commit_activity": {
      "total_commits_last_year": 3989,
      "avg_commits_per_week": 76.71153846153847,
      "days_active_last_year": 351
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:56:52.447177"
  }
}