{
  "cve_id": "CVE-2021-46389",
  "github_data": {
    "repository": "ruven/iipsrv",
    "fix_commit": "4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
    "related_commits": [
      "4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
      "882925b295a80ec992063deffc2a3b0d803c3195",
      "4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
      "882925b295a80ec992063deffc2a3b0d803c3195"
    ],
    "patch_url": "https://github.com/ruven/iipsrv/commit/4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9.patch",
    "fix_commit_details": {
      "sha": "4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
      "commit_date": "2022-01-14T22:22:09Z",
      "author": {
        "login": "ruven",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Added verification that image has been set in SPECTRA.cc and check on the validity of the requested tile resolution in JTL.cc. Fixes a couple of the crash conditions reported in https://github.com/ruven/iipsrv/issues/223",
        "length": 220,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 51,
        "additions": 32,
        "deletions": 19
      },
      "files": [
        {
          "filename": "ChangeLog",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,3 +1,8 @@\n+15/01/2022:\n+\t- Added verification that image has been set in SPECTRA.cc and check on the validity of the requested tile\n+\t  resolution in JTL.cc. Fixes a couple of the crash conditions reported in https://github.com/ruven/iipsrv/issues/223\n+\n+\n 14/01/2022:\n \t- Detection of HTJ2K also added for KakaduImage.cc for logging purposes (DEBUG needs to be enabled at compile time)\n "
        },
        {
          "filename": "src/JTL.cc",
          "status": "modified",
          "additions": 18,
          "deletions": 13,
          "patch": "@@ -1,7 +1,7 @@\n /*\n     IIP JTL Command Handler Class Member Function: Export a single tile\n \n-    Copyright (C) 2006-2021 Ruven Pillay.\n+    Copyright (C) 2006-2022 Ruven Pillay.\n \n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n@@ -43,6 +43,10 @@ void JTL::send( Session* session, int resolution, int tile ){\n   if( session->loglevel >= 2 ) command_timer.start();\n \n \n+  // Need to know the number of resolutions\n+  int num_res = (*session->image)->getNumResolutions();\n+\n+\n   // If we have requested a rotation, remap the tile index to rotated coordinates\n   if( (int)((session->view)->getRotation()) % 360 == 90 ){\n \n@@ -51,7 +55,6 @@ void JTL::send( Session* session, int resolution, int tile ){\n \n   }\n   else if( (int)((session->view)->getRotation()) % 360 == 180 ){\n-    int num_res = (*session->image)->getNumResolutions();\n     unsigned int im_width = (*session->image)->image_widths[num_res-resolution-1];\n     unsigned int im_height = (*session->image)->image_heights[num_res-resolution-1];\n     unsigned int tw = (*session->image)->getTileWidth();\n@@ -62,7 +65,7 @@ void JTL::send( Session* session, int resolution, int tile ){\n \n \n   // Sanity check\n-  if( (resolution<0) || (tile<0) ){\n+  if( (resolution<0) || (tile<0) || (resolution>=num_res) ){\n     ostringstream error;\n     error << \"JTL :: Invalid resolution/tile number: \" << resolution << \",\" << tile;\n     throw error.str();\n@@ -120,18 +123,20 @@ void JTL::send( Session* session, int resolution, int tile ){\n \n \n   // Set the physical output resolution for this particular view and zoom level\n-  int num_res = (*session->image)->getNumResolutions();\n-  unsigned int im_width = (*session->image)->image_widths[num_res-resolution-1];\n-  unsigned int im_height = (*session->image)->image_heights[num_res-resolution-1];\n-  float dpi_x = (*session->image)->dpi_x * (float) im_width / (float) (*session->image)->getImageWidth();\n-  float dpi_y = (*session->image)->dpi_y * (float) im_height / (float) (*session->image)->getImageHeight();\n-  compressor->setResolution( dpi_x, dpi_y, (*session->image)->dpi_units );\n-\n-  if( session->loglevel >= 5 ){\n-    *(session->logfile) << \"JTL :: Setting physical resolution of tile to \" <<  dpi_x << \" x \" << dpi_y\n-                        << ( ((*session->image)->dpi_units==1) ? \" pixels/inch\" : \" pixels/cm\" ) << endl;\n+  if( (*session->image)->dpi_x > 0 && (*session->image)->dpi_y > 0 ){\n+    unsigned int im_width = (*session->image)->image_widths[num_res-resolution-1];\n+    unsigned int im_height = (*session->image)->image_heights[num_res-resolution-1];\n+    float dpi_x = (*session->image)->dpi_x * ( (float)im_width / (float)(*session->image)->getImageWidth() );\n+    float dpi_y = (*session->image)->dpi_y * ( (float)im_height / (float)(*session->image)->getImageHeight() );\n+    compressor->setResolution( dpi_x, dpi_y, (*session->image)->dpi_units );\n+\n+    if( session->loglevel >= 5 ){\n+      *(session->logfile) << \"JTL :: Setting physical resolution of tile to \" <<  dpi_x << \" x \" << dpi_y\n+\t\t\t  << ( ((*session->image)->dpi_units==1) ? \" pixels/inch\" : \" pixels/cm\" ) << endl;\n+    }\n   }\n \n+\n   // Embed ICC profile\n   if( session->view->embedICC() && ((*session->image)->getMetadata(\"icc\").size()>0) ){\n     if( session->loglevel >= 3 ){"
        },
        {
          "filename": "src/SPECTRA.cc",
          "status": "modified",
          "additions": 9,
          "deletions": 6,
          "patch": "@@ -1,7 +1,7 @@\n /*\n     IIP SPECTRA Command Handler Class Member Function\n \n-    Copyright (C) 2009-2021 Ruven Pillay.\n+    Copyright (C) 2009-2022 Ruven Pillay.\n \n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n@@ -36,7 +36,10 @@ void SPECTRA::run( Session* session, const std::string& argument ){\n \n   if( session->loglevel >= 3 ) (*session->logfile) << \"SPECTRA handler reached\" << endl;\n \n-  int resolution, tile, x, y;\n+\n+  // Make sure we have set our image\n+  this->session = session;\n+  checkImage();\n \n \n   // Time this command\n@@ -46,19 +49,19 @@ void SPECTRA::run( Session* session, const std::string& argument ){\n   // Parse the argument list\n   string arg = argument;\n   int delimitter = arg.find( \",\" );\n-  resolution = atoi( arg.substr(0,delimitter).c_str() );\n+  int resolution = atoi( arg.substr(0,delimitter).c_str() );\n \n   arg = arg.substr( delimitter + 1, arg.length() );\n   delimitter = arg.find( \",\" );\n-  tile = atoi( arg.substr(0,delimitter).c_str() );\n+  int tile = atoi( arg.substr(0,delimitter).c_str() );\n \n   arg = arg.substr( delimitter + 1, arg.length() );\n   delimitter = arg.find( \",\" );\n-  x = atoi( arg.substr(0,delimitter).c_str() );\n+  int x = atoi( arg.substr(0,delimitter).c_str() );\n \n   arg = arg.substr( delimitter + 1, arg.length() );\n   delimitter = arg.find( \",\" );\n-  y = atoi( arg.substr(0,arg.length()).c_str() );\n+  int y = atoi( arg.substr(0,arg.length()).c_str() );\n \n   if( session->loglevel >= 5 ){ \n     (*session->logfile) << \"SPECTRA :: resolution: \" << resolution"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "acb43351bc42ea85168a780365e84809f6a494d8",
            "date": "2025-01-06T14:10:48Z",
            "author_login": "ruven"
          },
          {
            "sha": "16ff66ec58361d48ebf21346d67b0f573423097a",
            "date": "2024-11-20T21:18:02Z",
            "author_login": "ruven"
          },
          {
            "sha": "446450c29938f0dee8d7987fb6a266889a29162f",
            "date": "2024-11-20T21:00:04Z",
            "author_login": "ruven"
          },
          {
            "sha": "882065204a01114ddd32b8a61617912711a8858d",
            "date": "2024-11-20T20:47:20Z",
            "author_login": "ruven"
          },
          {
            "sha": "7b4ed2898fd1ceb55acd7dee4f7d3edcdb4bf3ed",
            "date": "2024-11-18T21:03:19Z",
            "author_login": "ruven"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-190",
    "description": "IIPImage High Resolution Streaming Image Server prior to commit 882925b295a80ec992063deffc2a3b0d803c3195 is affected by an integer overflow in iipsrv.fcgi through malformed HTTP query parameters.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-07T14:15:07.727",
    "last_modified": "2024-11-21T06:34:01.463",
    "fix_date": "2022-01-14T22:22:09Z"
  },
  "references": [
    {
      "url": "https://github.com/ruven/iipsrv/commit/4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ruven/iipsrv/commit/882925b295a80ec992063deffc2a3b0d803c3195",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ruven/iipsrv/commit/4ed59265fbbd636dc2fbbf325f8ea37ed300a6d9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ruven/iipsrv/commit/882925b295a80ec992063deffc2a3b0d803c3195",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.144905",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "iipsrv",
    "owner": "ruven",
    "created_at": "2012-09-19T13:48:28Z",
    "updated_at": "2025-01-12T02:21:58Z",
    "pushed_at": "2025-01-06T14:11:00Z",
    "size": 4639,
    "stars": 297,
    "forks": 115,
    "open_issues": 52,
    "watchers": 297,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 569895,
      "C": 210682,
      "M4": 60526,
      "Shell": 48043,
      "Makefile": 10013,
      "Dockerfile": 1725
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:30:16.930102"
  }
}