{
  "cve_id": "CVE-2021-46822",
  "github_data": {
    "repository": "libjpeg-turbo/libjpeg-turbo",
    "fix_commit": "f35fd27ec641c42d6b115bfa595e483ec58188d2",
    "related_commits": [
      "f35fd27ec641c42d6b115bfa595e483ec58188d2",
      "f35fd27ec641c42d6b115bfa595e483ec58188d2"
    ],
    "patch_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2.patch",
    "fix_commit_details": {
      "sha": "f35fd27ec641c42d6b115bfa595e483ec58188d2",
      "commit_date": "2021-04-06T17:51:03Z",
      "author": {
        "login": "dcommander",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "tjLoadImage: Fix issues w/loading 16-bit PPMs/PGMs",
        "length": 1221,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 30,
        "deletions": 6
      },
      "files": [
        {
          "filename": "ChangeLog.md",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -35,6 +35,16 @@ applications that use the TurboJPEG API to guard against an exploit of the\n progressive JPEG format described in the report\n [\"Two Issues with the JPEG Standard\"](https://libjpeg-turbo.org/pmwiki/uploads/About/TwoIssueswiththeJPEGStandard.pdf).\n \n+7. The PPM reader now throws an error, rather than segfaulting (due to a buffer\n+overrun) or generating incorrect pixels, if an application attempts to use the\n+`tjLoadImage()` function to load a 16-bit binary PPM file (a binary PPM file\n+with a maximum value greater than 255) into a grayscale image buffer or to load\n+a 16-bit binary PGM file into an RGB image buffer.\n+\n+8. Fixed an issue in the PPM reader that caused incorrect pixels to be\n+generated when using the `tjLoadImage()` function to load a 16-bit binary PPM\n+file into an extended RGB image buffer.\n+\n \n 2.0.90 (2.1 beta1)\n =================="
        },
        {
          "filename": "rdppm.c",
          "status": "modified",
          "additions": 20,
          "deletions": 6,
          "patch": "@@ -5,7 +5,7 @@\n  * Copyright (C) 1991-1997, Thomas G. Lane.\n  * Modified 2009 by Bill Allombert, Guido Vollbeding.\n  * libjpeg-turbo Modifications:\n- * Copyright (C) 2015-2017, 2020, D. R. Commander.\n+ * Copyright (C) 2015-2017, 2020-2021, D. R. Commander.\n  * For conditions of distribution and use, see the accompanying README.ijg\n  * file.\n  *\n@@ -516,6 +516,11 @@ get_word_rgb_row(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n   register JSAMPLE *rescale = source->rescale;\n   JDIMENSION col;\n   unsigned int maxval = source->maxval;\n+  register int rindex = rgb_red[cinfo->in_color_space];\n+  register int gindex = rgb_green[cinfo->in_color_space];\n+  register int bindex = rgb_blue[cinfo->in_color_space];\n+  register int aindex = alpha_index[cinfo->in_color_space];\n+  register int ps = rgb_pixelsize[cinfo->in_color_space];\n \n   if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))\n     ERREXIT(cinfo, JERR_INPUT_EOF);\n@@ -527,17 +532,20 @@ get_word_rgb_row(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n     temp |= UCH(*bufferptr++);\n     if (temp > maxval)\n       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);\n-    *ptr++ = rescale[temp];\n+    ptr[rindex] = rescale[temp];\n     temp  = UCH(*bufferptr++) << 8;\n     temp |= UCH(*bufferptr++);\n     if (temp > maxval)\n       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);\n-    *ptr++ = rescale[temp];\n+    ptr[gindex] = rescale[temp];\n     temp  = UCH(*bufferptr++) << 8;\n     temp |= UCH(*bufferptr++);\n     if (temp > maxval)\n       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);\n-    *ptr++ = rescale[temp];\n+    ptr[bindex] = rescale[temp];\n+    if (aindex >= 0)\n+      ptr[aindex] = 0xFF;\n+    ptr += ps;\n   }\n   return 1;\n }\n@@ -624,7 +632,10 @@ start_input_ppm(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n       cinfo->in_color_space = JCS_GRAYSCALE;\n     TRACEMS2(cinfo, 1, JTRC_PGM, w, h);\n     if (maxval > 255) {\n-      source->pub.get_pixel_rows = get_word_gray_row;\n+      if (cinfo->in_color_space == JCS_GRAYSCALE)\n+        source->pub.get_pixel_rows = get_word_gray_row;\n+      else\n+        ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);\n     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&\n                cinfo->in_color_space == JCS_GRAYSCALE) {\n       source->pub.get_pixel_rows = get_raw_row;\n@@ -647,7 +658,10 @@ start_input_ppm(j_compress_ptr cinfo, cjpeg_source_ptr sinfo)\n       cinfo->in_color_space = JCS_EXT_RGB;\n     TRACEMS2(cinfo, 1, JTRC_PPM, w, h);\n     if (maxval > 255) {\n-      source->pub.get_pixel_rows = get_word_rgb_row;\n+      if (IsExtRGB(cinfo->in_color_space))\n+        source->pub.get_pixel_rows = get_word_rgb_row;\n+      else\n+        ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);\n     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&\n #if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3\n                (cinfo->in_color_space == JCS_EXT_RGB ||"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e0e18dea5433e600ea92d60814f13efa40a0d7dd",
            "date": "2024-12-18T17:50:38Z",
            "author_login": "dcommander"
          },
          {
            "sha": "cc095fee7b73b6d8dcbeadbc2926a4712be704db",
            "date": "2024-12-18T14:39:53Z",
            "author_login": "dcommander"
          },
          {
            "sha": "20ade4dea9589515a69793e447a6c6220b464535",
            "date": "2024-12-12T20:39:26Z",
            "author_login": "dcommander"
          },
          {
            "sha": "c3446d64d704375039482daf637ac59e7f8bdb26",
            "date": "2024-12-12T16:01:53Z",
            "author_login": "dcommander"
          },
          {
            "sha": "84fa3bc0930dc014f7b50c82ad48925cfd786841",
            "date": "2024-12-11T22:39:02Z",
            "author_login": "dcommander"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-787",
    "description": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-18T16:15:08.110",
    "last_modified": "2024-11-21T06:34:45.830",
    "fix_date": "2021-04-06T17:51:03Z"
  },
  "references": [
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/221567",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/221567",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.460254",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libjpeg-turbo",
    "owner": "libjpeg-turbo",
    "created_at": "2015-07-27T07:11:54Z",
    "updated_at": "2025-01-14T05:03:54Z",
    "pushed_at": "2024-12-18T21:39:04Z",
    "size": 21014,
    "stars": 3835,
    "forks": 1037,
    "open_issues": 20,
    "watchers": 3835,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.0.x",
      "1.1.x",
      "1.2.x",
      "1.3.x",
      "1.4.x",
      "1.5.x",
      "2.0.x",
      "2.1.x",
      "3.0.x",
      "ijg.lossless",
      "ijg",
      "main"
    ],
    "languages": {
      "C": 3381386,
      "Assembly": 1683277,
      "HTML": 528105,
      "Java": 321248,
      "CMake": 160300,
      "C++": 48443,
      "Shell": 34197,
      "CSS": 22360,
      "JavaScript": 19458
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T18:01:04.605765"
  }
}