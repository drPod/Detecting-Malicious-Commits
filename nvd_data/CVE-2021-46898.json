{
  "cve_id": "CVE-2021-46898",
  "github_data": {
    "repository": "sehmaschine/django-grappelli",
    "fix_commit": "4ca94bcda0fa2720594506853d85e00c8212968f",
    "related_commits": [
      "4ca94bcda0fa2720594506853d85e00c8212968f",
      "4ca94bcda0fa2720594506853d85e00c8212968f"
    ],
    "patch_url": "https://github.com/sehmaschine/django-grappelli/commit/4ca94bcda0fa2720594506853d85e00c8212968f.patch",
    "fix_commit_details": {
      "sha": "4ca94bcda0fa2720594506853d85e00c8212968f",
      "commit_date": "2021-09-30T11:39:12Z",
      "author": {
        "login": "ksg97031",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update switch.py",
        "length": 135,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 13,
        "deletions": 7
      },
      "files": [
        {
          "filename": "grappelli/views/switch.py",
          "status": "modified",
          "additions": 13,
          "deletions": 7,
          "patch": "@@ -8,6 +8,7 @@\n from django.http import Http404\n from django.shortcuts import redirect\n from django.utils.html import escape\n+from django.utils.http import url_has_allowed_host_and_scheme\n from django.utils.translation import gettext_lazy as _\n \n from grappelli.settings import SWITCH_USER_ORIGINAL, SWITCH_USER_TARGET\n@@ -28,30 +29,35 @@ def switch_user(request, object_id):\n \n     # check redirect\n     redirect_url = request.GET.get(\"redirect\", None)\n-    if redirect_url is None or not redirect_url.startswith(\"/\"):\n+    if redirect_url is None or not \\\n+        url_has_allowed_host_and_scheme(\n+            url=redirect_url,\n+            allowed_hosts={request.get_host()},\n+            require_https=request.is_secure(),\n+        ):\n         raise Http404()\n-\n+        \n     # check original_user\n     try:\n         original_user = User.objects.get(pk=session_user[\"id\"], is_staff=True)\n         if not SWITCH_USER_ORIGINAL(original_user):\n             messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n-            return redirect(request.GET.get(\"redirect\"))\n+            return redirect(redirect_url)\n     except ObjectDoesNotExist:\n         msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(session_user[\"id\"])}\n         messages.add_message(request, messages.ERROR, msg)\n-        return redirect(request.GET.get(\"redirect\"))\n+        return redirect(redirect_url)\n \n     # check new user\n     try:\n         target_user = User.objects.get(pk=object_id, is_staff=True)\n         if target_user != original_user and not SWITCH_USER_TARGET(original_user, target_user):\n             messages.add_message(request, messages.ERROR, _(\"Permission denied.\"))\n-            return redirect(request.GET.get(\"redirect\"))\n+            return redirect(redirect_url)\n     except ObjectDoesNotExist:\n         msg = _('%(name)s object with primary key %(key)r does not exist.') % {'name': \"User\", 'key': escape(object_id)}\n         messages.add_message(request, messages.ERROR, msg)\n-        return redirect(request.GET.get(\"redirect\"))\n+        return redirect(redirect_url)\n \n     # find backend\n     if not hasattr(target_user, 'backend'):\n@@ -66,4 +72,4 @@ def switch_user(request, object_id):\n         if original_user.id != target_user.id:\n             request.session[\"original_user\"] = {\"id\": original_user.id, \"username\": original_user.get_username()}\n \n-    return redirect(request.GET.get(\"redirect\"))\n+    return redirect(redirect_url)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "75c5cb6ea0b2e385dfaccc7213f541b1af23eba2",
            "date": "2024-08-22T10:18:31Z",
            "author_login": "parsch"
          },
          {
            "sha": "3a08c3fa529e820e97c720e4ce6294d0fa41ea5b",
            "date": "2024-08-22T10:15:02Z",
            "author_login": "parsch"
          },
          {
            "sha": "b43a9d8d0f8b1058c48b1f7009dc16743c7125b3",
            "date": "2024-08-22T10:12:27Z",
            "author_login": "parsch"
          },
          {
            "sha": "9ba4a5dd30700ee0d5eb7c11fa810fe3cbc25b43",
            "date": "2024-06-18T15:18:12Z",
            "author_login": "parsch"
          },
          {
            "sha": "b088d06433e4f08859cb4cce3b4759e281ae5d75",
            "date": "2024-06-18T15:15:42Z",
            "author_login": "parsch"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "views/switch.py in django-grappelli (aka Django Grappelli) before 2.15.2 attempts to prevent external redirection with startswith(\"/\") but this does not consider a protocol-relative URL (e.g., //example.com) attack.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-22T19:15:08.297",
    "last_modified": "2024-11-21T06:34:53.027",
    "fix_date": "2021-09-30T11:39:12Z"
  },
  "references": [
    {
      "url": "https://github.com/sehmaschine/django-grappelli/commit/4ca94bcda0fa2720594506853d85e00c8212968f",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/compare/2.15.1...2.15.2",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/issues/975",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/pull/976",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/commit/4ca94bcda0fa2720594506853d85e00c8212968f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/compare/2.15.1...2.15.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/issues/975",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/sehmaschine/django-grappelli/pull/976",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.920971",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "django-grappelli",
    "owner": "sehmaschine",
    "created_at": "2010-03-26T12:25:59Z",
    "updated_at": "2025-01-07T04:45:19Z",
    "pushed_at": "2024-08-22T10:18:36Z",
    "size": 24141,
    "stars": 3802,
    "forks": 655,
    "open_issues": 9,
    "watchers": 3802,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 545350,
      "SCSS": 305985,
      "JavaScript": 108442,
      "Python": 90324,
      "CSS": 2492
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:28:32.364529"
  }
}