{
  "cve_id": "CVE-2022-0132",
  "github_data": {
    "repository": "chocobozzz/peertube",
    "fix_commit": "7b54a81cccf6b4c12269e9d6897d608b1a99537a",
    "related_commits": [
      "7b54a81cccf6b4c12269e9d6897d608b1a99537a",
      "7b54a81cccf6b4c12269e9d6897d608b1a99537a"
    ],
    "patch_url": "https://github.com/chocobozzz/peertube/commit/7b54a81cccf6b4c12269e9d6897d608b1a99537a.patch",
    "fix_commit_details": {
      "sha": "7b54a81cccf6b4c12269e9d6897d608b1a99537a",
      "commit_date": "2022-01-06T10:16:35Z",
      "author": {
        "login": "Chocobozzz",
        "type": "User",
        "stats": {
          "total_commits": 7381,
          "average_weekly_commits": 17.657894736842106,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 332
        }
      },
      "commit_message": {
        "title": "Prevent video import on non unicast ips",
        "length": 39,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 46,
        "additions": 46,
        "deletions": 0
      },
      "files": [
        {
          "filename": "server/middlewares/validators/videos/video-imports.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -13,6 +13,7 @@ import { CONFIG } from '../../../initializers/config'\n import { CONSTRAINTS_FIELDS } from '../../../initializers/constants'\n import { areValidationErrors, doesVideoChannelOfAccountExist } from '../shared'\n import { getCommonVideoEditAttributes } from './videos'\n+import { isValid as isIPValid, parse as parseIP } from 'ipaddr.js'\n \n const videoImportAddValidator = getCommonVideoEditAttributes().concat([\n   body('channelId')\n@@ -71,6 +72,23 @@ const videoImportAddValidator = getCommonVideoEditAttributes().concat([\n       return res.fail({ message: 'Should have a magnetUri or a targetUrl or a torrent file.' })\n     }\n \n+    if (req.body.targetUrl) {\n+      const hostname = new URL(req.body.targetUrl).hostname\n+\n+      if (isIPValid(hostname)) {\n+        const parsed = parseIP(hostname)\n+\n+        if (parsed.range() !== 'unicast') {\n+          cleanUpReqFiles(req)\n+\n+          return res.fail({\n+            status: HttpStatusCode.FORBIDDEN_403,\n+            message: 'Cannot use non unicast IP as targetUrl.'\n+          })\n+        }\n+      }\n+    }\n+\n     if (!await isImportAccepted(req, res)) return cleanUpReqFiles(req)\n \n     return next()"
        },
        {
          "filename": "server/tests/api/check-params/video-imports.ts",
          "status": "modified",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -108,6 +108,34 @@ describe('Test video imports API validator', function () {\n       await makePostBodyRequest({ url: server.url, path, token: server.accessToken, fields })\n     })\n \n+    it('Should fail with localhost', async function () {\n+      const fields = { ...baseCorrectParams, targetUrl: 'http://localhost:8000' }\n+\n+      await makePostBodyRequest({ url: server.url, path, token: server.accessToken, fields })\n+    })\n+\n+    it('Should fail with a private IP target urls', async function () {\n+      const targetUrls = [\n+        'http://127.0.0.1:8000',\n+        'http://127.0.0.1',\n+        'http://127.0.0.1/hello',\n+        'https://192.168.1.42',\n+        'http://192.168.1.42'\n+      ]\n+\n+      for (const targetUrl of targetUrls) {\n+        const fields = { ...baseCorrectParams, targetUrl }\n+\n+        await makePostBodyRequest({\n+          url: server.url,\n+          path,\n+          token: server.accessToken,\n+          fields,\n+          expectedStatus: HttpStatusCode.FORBIDDEN_403\n+        })\n+      }\n+    })\n+\n     it('Should fail with a long name', async function () {\n       const fields = { ...baseCorrectParams, name: 'super'.repeat(65) }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c31084ce5bc31a5ab0d1bfb014afe509e9d9e7a1",
            "date": "2025-01-04T16:19:34Z",
            "author_login": "zbirkenbuel"
          },
          {
            "sha": "4967d25d4619bf98dd30ddf68b780e683a844ba2",
            "date": "2025-01-14T12:27:18Z",
            "author_login": "Chocobozzz"
          },
          {
            "sha": "1a568cc65c3938a2832d4816cd5f34807b0f06f8",
            "date": "2025-01-14T12:25:17Z",
            "author_login": "Khyvodul"
          },
          {
            "sha": "e4b6021310447c5723cb08b5a11347f425d177d9",
            "date": "2025-01-14T10:37:03Z",
            "author_login": "Chocobozzz"
          },
          {
            "sha": "e0960c53a99e1d328f89bc726ee81c3f943cc904",
            "date": "2025-01-14T10:32:04Z",
            "author_login": "Chocobozzz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "peertube is vulnerable to Server-Side Request Forgery (SSRF)",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-10T14:12:26.720",
    "last_modified": "2024-11-21T06:37:58.153",
    "fix_date": "2022-01-06T10:16:35Z"
  },
  "references": [
    {
      "url": "https://github.com/chocobozzz/peertube/commit/7b54a81cccf6b4c12269e9d6897d608b1a99537a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/77ec5308-5561-4664-af21-d780df2d1e4b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/chocobozzz/peertube/commit/7b54a81cccf6b4c12269e9d6897d608b1a99537a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/77ec5308-5561-4664-af21-d780df2d1e4b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.060197",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "PeerTube",
    "owner": "chocobozzz",
    "created_at": "2015-10-29T22:09:42Z",
    "updated_at": "2025-01-14T12:54:05Z",
    "pushed_at": "2025-01-14T12:54:00Z",
    "size": 345923,
    "stars": 13329,
    "forks": 1538,
    "open_issues": 625,
    "watchers": 13329,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "TypeScript": 8063880,
      "HTML": 587956,
      "SCSS": 274504,
      "Shell": 34475,
      "Pug": 22110,
      "JavaScript": 12518,
      "Dockerfile": 332
    },
    "commit_activity": {
      "total_commits_last_year": 1307,
      "avg_commits_per_week": 25.134615384615383,
      "days_active_last_year": 233
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:52:13.645385"
  }
}