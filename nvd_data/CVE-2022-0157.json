{
  "cve_id": "CVE-2022-0157",
  "github_data": {
    "repository": "phoronix-test-suite/phoronix-test-suite",
    "fix_commit": "56fd0a3b69fb33c1c90a6017ed735889aaa59486",
    "related_commits": [
      "56fd0a3b69fb33c1c90a6017ed735889aaa59486",
      "56fd0a3b69fb33c1c90a6017ed735889aaa59486"
    ],
    "patch_url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/56fd0a3b69fb33c1c90a6017ed735889aaa59486.patch",
    "fix_commit_details": {
      "sha": "56fd0a3b69fb33c1c90a6017ed735889aaa59486",
      "commit_date": "2022-01-08T10:47:20Z",
      "author": {
        "login": "michaellarabel",
        "type": "User",
        "stats": {
          "total_commits": 6540,
          "average_weekly_commits": 8.515625,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 618
        }
      },
      "commit_message": {
        "title": "phodevi: Input sanitization updates for Phoromatic Server",
        "length": 124,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 1203,
        "additions": 559,
        "deletions": 644
      },
      "files": [
        {
          "filename": "ChangeLog",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,5 +1,9 @@\n PHORONIX TEST SUITE CHANGE-LOG\n \n+Phoronix Test Suite (Git)\n+\n+phodevi: Input sanitization updates for Phoromatic Server\n+\n Phoronix Test Suite 10.8.0\n 25 December 2021\n "
        },
        {
          "filename": "pts-core/objects/pts_env.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -650,7 +650,7 @@ public static function get_posted_options($limit = false)\n \t\t\t\t}\n \t\t\t\tif(!empty($v) && $v !== 0)\n \t\t\t\t{\n-\t\t\t\t\t$posted[$var] = $v;\n+\t\t\t\t\t$posted[$var] = pts_strings::sanitize($v);\n \t\t\t\t}\n \t\t\t}\n \t\t}"
        },
        {
          "filename": "pts-core/objects/pts_phoroql.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -22,7 +22,7 @@\n \n class pts_phoroql\n {\n-\tpublic static function evaluate_search_tree($tree, $join = 'AND', $callback)\n+\tpublic static function evaluate_search_tree($tree, $join = 'AND', $callback = '')\n \t{\n \t\t$matches = false;\n "
        },
        {
          "filename": "pts-core/objects/pts_result_viewer_embed.php",
          "status": "modified",
          "additions": 6,
          "deletions": 10,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2018 - 2020, Phoronix Media\n-\tCopyright (C) 2018 - 2020, Michael Larabel\n+\tCopyright (C) 2018 - 2022, Phoronix Media\n+\tCopyright (C) 2018 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -119,8 +119,8 @@ public function get_html()\n \t\t$html_options = self::get_html_options_markup($result_file, $_REQUEST, $this->result_public_id, $this->can_delete_results);\n \t\tself::process_request_to_attributes($_REQUEST, $result_file, $extra_attributes);\n \t\t$PAGE .= self::get_html_sort_bar($result_file, $_REQUEST);\n-\t\t$PAGE .= '<h1 id=\"result_file_title\" placeholder=\"Title\">' . $result_file->get_title() . '</h1>';\n-\t\t$PAGE .= '<p id=\"result_file_desc\" placeholder=\"Description\">' . str_replace(PHP_EOL, '<br />', $result_file->get_description()) . '</p>';\n+\t\t$PAGE .= '<h1 id=\"result_file_title\" placeholder=\"Title\">' . pts_strings::sanitize($result_file->get_title()) . '</h1>';\n+\t\t$PAGE .= '<p id=\"result_file_desc\" placeholder=\"Description\">' . str_replace(PHP_EOL, '<br />', pts_strings::sanitize($result_file->get_description())) . '</p>';\n \t\t$PAGE .= '<div id=\"result-settings\">';\n \t\tif($this->can_modify_results)\n \t\t{\n@@ -412,8 +412,6 @@ public function get_html()\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\t// $PAGE .= $res . '<br />';\n-\n \t\t\t//\n \t\t\t// DISPLAY LOGS\n \t\t\t//\n@@ -430,7 +428,6 @@ public function get_html()\n \t\t\t\t$button_area .= ' <button onclick=\"javascript:display_install_logs_for_result_object(\\'' . $this->result_public_id . '\\', \\'' . $i . '\\'); return false;\">View Test Installation Logs</button> ';\n \t\t\t}\n \n-\n \t\t\t//\n \t\t\t// EDITING / DELETE OPTIONS\n \t\t\t//\n@@ -452,12 +449,12 @@ public function get_html()\n \t\t\t\t}\n \t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\t$PAGE .= '<div id=\"update_annotation_' . $i . '\" contentEditable=\"true\">' . $result_object->get_annotation() . '</div> <input type=\"submit\" value=\"Update Annotation\" onclick=\"javascript:update_annotation_for_result_object(\\'' . $this->result_public_id . '\\', \\'' . $i . '\\'); return false;\">';\n+\t\t\t\t\t$PAGE .= '<div id=\"update_annotation_' . $i . '\" contentEditable=\"true\">' . pts_strings::sanitize($result_object->get_annotation()) . '</div> <input type=\"submit\" value=\"Update Annotation\" onclick=\"javascript:update_annotation_for_result_object(\\'' . $this->result_public_id . '\\', \\'' . $i . '\\'); return false;\">';\n \t\t\t\t}\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\t$PAGE .= '<p class=\"mini\">' . $result_object->get_annotation() . '</p>';\n+\t\t\t\t$PAGE .= '<p class=\"mini\">' . pts_strings::sanitize($result_object->get_annotation()) . '</p>';\n \t\t\t}\n \t\t\tif($button_area != null)\n \t\t\t{\n@@ -1023,7 +1020,6 @@ public static function process_result_export_pre_render(&$request, &$result_file\n \t}\n \tpublic static function process_result_modify_pre_render(&$result_file, $can_modify_results = false, $can_delete_results = false)\n \t{\n-\n \t\tif(!isset($_REQUEST['modify']) || ($can_modify_results == false && $can_delete_results == false))\n \t\t{\n \t\t\treturn;"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_account_activity.php",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_account_activity implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -37,9 +36,7 @@ public static function preload($PAGE)\n \t}\n \tpublic static function render_page_process($PATH)\n \t{\n-\n \t\t$main = '<h1>Recent Account Activity</h1>';\n-\n \t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_activity_stream WHERE AccountID = :account_id ORDER BY ActivityTime DESC');\n \t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t$result = $stmt->execute();\n@@ -122,7 +119,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t$main .= ': ' . $id_link_format;\n \n \t\t\t\t\t$main .= '<br />' . PHP_EOL;\n-\n \t\t\t\t}\n \n \t\t\t\t//$main .= '<p>' .  $row['ActivityCreator'] . ' ' . $row['ActivityCreatorType'] . ' ' . $row['ActivityEvent'] . ' ' . $row['ActivityEventID'] . ' ' . $row['ActivityEventType'] . '</p>';"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_admin.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2014 - 2018, Phoronix Media\n-\tCopyright (C) 2014 - 2018, Michael Larabel\n+\tCopyright (C) 2014 - 2022, Phoronix Media\n+\tCopyright (C) 2014 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_admin implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -71,10 +70,12 @@ public static function render_page_process($PATH)\n \t\t}\n \t\telse if(isset($_POST['register_username']) && isset($_POST['register_password']) && isset($_POST['register_password_confirm']) && isset($_POST['register_email']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('register_username', 'register_password', 'register_password_confirm', 'register_email', 'seed_accountid'));\n \t\t\t$new_account = create_new_phoromatic_account($_POST['register_username'], $_POST['register_password'], $_POST['register_password_confirm'], $_POST['register_email'], (isset($_POST['seed_accountid']) ? $_POST['seed_accountid'] : null));\n \t\t}\n \t\telse if(isset($_POST['email_all_subject']) && isset($_POST['email_all_message']) && !empty($_POST['email_all_message']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('email_all_subject', 'email_all_message'));\n \t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_users ORDER BY UserName ASC');\n \t\t\t$result = $stmt->execute();\n \n@@ -207,7 +208,6 @@ public static function render_page_process($PATH)\n \t\t<sup>4</sup> The account ID field is optional and is used to pre-seed the account identifier for advanced purposes. The field must be six characters. Leave this field blank if you are unsure.<br />\n \t\t\t\t\t\t</p>';\n \n-\n \t\t//\n \t\t$server_log = explode(PHP_EOL, file_get_contents(getenv('PTS_PHOROMATIC_LOG_LOCATION')));\n \t\tforeach($server_log as $i => $line_item)"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_admin_config.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_admin_config implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_admin_data.php",
          "status": "modified",
          "additions": 6,
          "deletions": 10,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_admin_data implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -144,7 +143,7 @@ public static function render_page_process($PATH)\n \t\t$results = 0;\n \t\twhile($test_result_row = $test_result_result->fetchArray())\n \t\t{\n-\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'public.php?ut=' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n+\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'public.php?ut=' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n \t\t\t$results++;\n \n \t\t}\n@@ -154,7 +153,6 @@ public static function render_page_process($PATH)\n \t\t}\n \t\t$main .= '</ul></div>';\n \t\t$main .= '</div>';\n-\n \t\t$main .= '<hr /><h1>Schedules</h1>';\n \t\t$main .= '<h2>Active Test Schedules</h2>';\n \t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n@@ -173,12 +171,11 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\tdo\n \t\t\t\t\t\t{\n \n-\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_account_id_to_group_name($row['AccountID']) . '</td><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($row['AccountID'], $row['ScheduleID'])), 'System') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td><td><a onclick=\"return confirm(\\'Permanently remove this schedule?\\');\" href=\"/?admin_data/delete/schedule/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n+\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_server::account_id_to_group_name($row['AccountID']) . '</td><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($row['AccountID'], $row['ScheduleID'])), 'System') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td><td><a onclick=\"return confirm(\\'Permanently remove this schedule?\\');\" href=\"/?admin_data/delete/schedule/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n \t\t\t\t\t\t}\n \t\t\t\t\t\twhile($row = $result->fetchArray());\n \t\t\t\t\t}\n \t\t$main .= '</ul></div>';\n-\n \t\t$main .= '<hr /><h2>Inactive Test Schedules</h2>';\n \t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n \t\t\t\t<ul>\n@@ -196,7 +193,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\tdo\n \t\t\t\t\t\t{\n \n-\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_account_id_to_group_name($row['AccountID']) . '</td><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($row['AccountID'], $row['ScheduleID'])), 'System') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td><td><a onclick=\"return confirm(\\'Permanently remove this schedule?\\');\" href=\"/?admin_data/delete/schedule/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n+\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_server::account_id_to_group_name($row['AccountID']) . '</td><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($row['AccountID'], $row['ScheduleID'])), 'System') . '</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td><td><a onclick=\"return confirm(\\'Permanently remove this schedule?\\');\" href=\"/?admin_data/delete/schedule/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n \t\t\t\t\t\t}\n \t\t\t\t\t\twhile($row = $result->fetchArray());\n \t\t\t\t\t}\n@@ -219,7 +216,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\tdo\n \t\t\t\t\t\t{\n \n-\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Trigger'] . '<br /><table><tr><td>' . $row['TriggeredOn'] . '</td><td>' . phoromatic_account_id_to_group_name($row['AccountID']) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this trigger?\\');\" href=\"/?admin_data/delete/trigger/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '/' . $row['Trigger'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n+\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Trigger'] . '<br /><table><tr><td>' . $row['TriggeredOn'] . '</td><td>' . phoromatic_server::account_id_to_group_name($row['AccountID']) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this trigger?\\');\" href=\"/?admin_data/delete/trigger/' . $row['AccountID'] . '/' . $row['ScheduleID'] . '/' . $row['Trigger'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n \t\t\t\t\t\t}\n \t\t\t\t\t\twhile($row = $result->fetchArray());\n \t\t\t\t\t}\n@@ -245,7 +242,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t{\n \t\t\t\t\t\tdo\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_account_id_to_group_name($row['AccountID']) . '</td><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this system?\\');\" href=\"/?admin_data/delete/system/' . $row['AccountID'] . '/' . $row['SystemID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n+\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_server::account_id_to_group_name($row['AccountID']) . '</td><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this system?\\');\" href=\"/?admin_data/delete/system/' . $row['AccountID'] . '/' . $row['SystemID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n \t\t\t\t\t\t\t$active_system_count++;\n \t\t\t\t\t\t}\n \t\t\t\t\t\twhile($row = $result->fetchArray());\n@@ -255,7 +252,6 @@ public static function render_page_process($PATH)\n \t\t\t$main .= '</ul></div>';\n \t\t\t$main .= '<h2>Inactive Systems</h2>\n \t\t\t<div class=\"pts_phoromatic_info_box_area\">\n-\n \t\t\t\t\t<ul>\n \t\t\t\t\t\t<li><h1>Inactive Systems</h1></li>';\n \n@@ -272,7 +268,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t{\n \t\t\t\t\t\tdo\n \t\t\t\t\t\t{\n-\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_account_id_to_group_name($row['AccountID']) . '</td><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this system?\\');\" href=\"/?admin_data/delete/system/' . $row['AccountID'] . '/' . $row['SystemID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n+\t\t\t\t\t\t\t$main .= '<a onclick=\"\"><li>' . $row['Title'] . '<br /><table><tr><td>' . phoromatic_server::account_id_to_group_name($row['AccountID']) . '</td><td>' . $row['LocalIP'] . '</td><td><strong>' . $row['CurrentTask'] . '</strong></td><td><strong>Last Communication:</strong> ' . date('j F Y H:i', strtotime($row['LastCommunication'])) . '</td><td><a onclick=\"return confirm(\\'Permanently remove this system?\\');\" href=\"/?admin_data/delete/system/' . $row['AccountID'] . '/' . $row['SystemID'] . '\">Permanently Remove</a></td></tr></table></li></a>';\n \t\t\t\t\t\t\t$active_system_count++;\n \t\t\t\t\t\t}\n \t\t\t\t\t\twhile($row = $result->fetchArray());"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_benchmark.php",
          "status": "modified",
          "additions": 4,
          "deletions": 10,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2015 - 2021, Phoronix Media\n-\tCopyright (C) 2015 - 2021, Michael Larabel\n+\tCopyright (C) 2015 - 2022, Phoronix Media\n+\tCopyright (C) 2015 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_benchmark implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -141,7 +140,6 @@ public static function render_page_process($PATH)\n \t\t\t\t}\n \n \t\t\t\t$main .= '</ol>';\n-\n \t\t\t\tif(!empty($row['EnvironmentVariables']))\n \t\t\t\t{\n \t\t\t\t\t$main .= '<hr /><h1>Environment</h1><ol>';\n@@ -152,7 +150,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t}\n \t\t\t\t\t$main .= '</ol>';\n \t\t\t\t}\n-\n \t\t\t\t$main .= '<hr /><h1>Ticket Payload</h1>';\n \t\t\t\t$main .= '<p>This ticket runs the <strong>' . $row['SuiteToRun'] . '</strong> test suite:</p>';\n \t\t\t\t$main .= '<div style=\"max-height: 400px; overflow-y: scroll;\">';\n@@ -236,7 +233,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t$results = 0;\n \t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray())\n \t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n+\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n \t\t\t\t\t\t$results++;\n \n \t\t\t\t\t}\n@@ -338,10 +335,8 @@ public static function render_page_process($PATH)\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\t$main = '\n-\t\t\t<h2>' . ($is_new ? 'Create' : 'Edit') . ' A Benchmark</h2>\n+\t\t\t$main = '<h2>' . ($is_new ? 'Create' : 'Edit') . ' A Benchmark</h2>\n \t\t\t<p>This page allows you to run a test suite -- consisting of a single or multiple test suites -- on a given set/group of systems right away at their next earliest possibility. This benchmark mode is an alternative to the <a href=\"?schedules\">benchmark schedules</a> for reptitive/routine testing.</p>';\n-\n \t\t\t$local_suites = array();\n \t\t\tforeach(pts_file_io::glob(phoromatic_server::phoromatic_account_suite_path($_SESSION['AccountID']) . '*/suite-definition.xml') as $xml_path)\n \t\t\t{\n@@ -384,7 +379,6 @@ public static function render_page_process($PATH)\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t\t$result = $stmt->execute();\n \n-\n \t\t\t\tif(!$is_new)\n \t\t\t\t{\n \t\t\t\t\t$e_schedule['RunTargetSystems'] = explode(',', $e_schedule['RunTargetSystems']);"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_build_suite.php",
          "status": "modified",
          "additions": 4,
          "deletions": 5,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2015 - 2018, Phoronix Media\n-\tCopyright (C) 2015 - 2018, Michael Larabel\n+\tCopyright (C) 2015 - 2022, Phoronix Media\n+\tCopyright (C) 2015 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_build_suite implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -39,6 +38,7 @@ public static function render_page_process($PATH)\n \t{\n \t\tif(isset($_POST['suite_title']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('suite_title', 'test_add', 'suite_version', 'suite_description'));\n \t\t\tif(strlen($_POST['suite_title']) < 3)\n \t\t\t{\n \t\t\t\techo '<h2>Suite title must be at least three characters.</h2>';\n@@ -58,6 +58,7 @@ public static function render_page_process($PATH)\n \t\t\t\t{\n \t\t\t\t\tif(strpos($i, $test_prefix) !== false && substr($i, -9) != '_selected')\n \t\t\t\t\t{\n+\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n \t\t\t\t\t\tif(strpos($v, '||') !== false)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t$opts = explode('||', $v);\n@@ -128,7 +129,6 @@ public static function render_page_process($PATH)\n \t\techo phoromatic_webui_header_logged_in();\n \t\t$main = '<h1>Local Suites</h1><p>Find already created local test suites by your account/group via the <a href=\"/?local_suites\">local suites</a> page.</p>';\n \n-\n \t\tif(!PHOROMATIC_USER_IS_VIEWER)\n \t\t{\n \t\t\t$suite = null;\n@@ -195,7 +195,6 @@ public static function render_page_process($PATH)\n \t\t\t$main .= pts_web_embed::cookie_checkbox_option_helper('list_show_all_test_versions', 'Show all available test profile versions.');\n \t\t\t$main .= '<p align=\"right\"><input name=\"submit\" value=\"' . ($suite->get_title() != null ? 'Edit' : 'Create') .' Suite\" type=\"submit\" onclick=\"return pts_rmm_validate_suite();\" /></p>';\n \t\t}\n-\n \t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n \t\techo phoromatic_webui_footer();\n \t}"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_caches.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_caches implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_component_table.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_component_table implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_create_test.php",
          "status": "modified",
          "additions": 0,
          "deletions": 5,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_create_test implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -89,7 +88,6 @@ public static function preload($PATH)\n \t\t\t\tpts_validation::generate_test_profile_file_templates($tp_identifier, $tp_path);\n \t\t\t\theader('Location: /?create_test/' . $tp_identifier . '-' . $tp->get_test_profile_version());\n \t\t\t}\n-\n \t\t}\n \t\tif(isset($_POST['dc_select_item']))\n \t\t{\n@@ -141,7 +139,6 @@ public static function preload($PATH)\n \t\t\t}\n \t\t}\n \n-\n \t\treturn true;\n \t}\n \tpublic static function render_page_process($PATH)\n@@ -153,7 +150,6 @@ public static function render_page_process($PATH)\n \t\t}\n \n \t\t$identifier_item = isset($PATH[1]) ? $PATH[0] . '/' . $PATH[1] : false;\n-\n \t\tif($identifier_item && pts_test_profile::is_test_profile($identifier_item))\n \t\t{\n \t\t\t$tp = new pts_test_profile($identifier_item);\n@@ -175,7 +171,6 @@ public static function render_page_process($PATH)\n \t\t\t}\n \n \t\t\t$main .= '<form action=\"?create_test/' . $tp->get_identifier() . '\" name=\"create_test\" id=\"create_test\" method=\"post\" enctype=\"multipart/form-data\"><input type=\"hidden\" name=\"tp_update\" value=\"' . $tp->get_identifier() . '\" />';\n-\n \t\t\tforeach(pts_file_io::glob($tp->get_resource_dir() . '/*') as $file)\n \t\t\t{\n \t\t\t\t$file_name = basename($file);"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_dashboard.php",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_dashboard implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -38,7 +37,6 @@ public static function preload($PAGE)\n \tpublic static function render_page_process($PATH)\n \t{\n \t\techo phoromatic_webui_header_logged_in();\n-\n \t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_systems WHERE AccountID = :account_id AND State >= 0 ORDER BY LastCommunication DESC');\n \t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t$result = $stmt->execute();"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_local_suites.php",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_local_suites implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -60,9 +59,9 @@ public static function render_page_process($PATH)\n \t\t\t$id = basename(dirname($xml_path));\n \t\t\t$test_suite = new pts_test_suite($xml_path);\n \n-\t\t\t$main .= '<a name=\"' . $id . '\"></a><h1>' . $test_suite->get_title() . ' [' . $id . ']</h1>';\n-\t\t\t$main .= '<p><strong>' . $test_suite->get_maintainer() . '</strong></p>';\n-\t\t\t$main .= '<p><em>' . $test_suite->get_description() . '</em></p>';\n+\t\t\t$main .= '<a name=\"' . $id . '\"></a><h1>' . pts_strings::sanitize($test_suite->get_title()) . ' [' . $id . ']</h1>';\n+\t\t\t$main .= '<p><strong>' . pts_strings::sanitize($test_suite->get_maintainer()) . '</strong></p>';\n+\t\t\t$main .= '<p><em>' . pts_strings::sanitize($test_suite->get_description()) . '</em></p>';\n \t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n \t\t\t{\n \t\t\t\t$main .= '<p><a href=\"?build_suite/' . $id . '\">Edit Suite</a> - <a href=\"?local_suites/delete/' . $id . '\">Delete Suite</a></p>';"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_logs.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_logs implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_main.php",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_main implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -156,13 +155,11 @@ public static function render_page_process($PATH)\n \t\tforeach($schedules_today as &$row)\n \t\t{\n \t\t\t$systems_for_schedule = phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID']);\n-\n \t\t\t$extra_css = null;\n \t\t\tif(empty($systems_for_schedule))\n \t\t\t{\n \t\t\t\t$extra_css = ' opacity: 0.4;';\n \t\t\t}\n-\n \t\t\tlist($h, $m) = explode('.', $row['RunAt']);\n \n \t\t\t$main .= '<div style=\"' . $extra_css . '\" class=\"phoromatic_overview_box\">';\n@@ -215,7 +212,6 @@ public static function render_page_process($PATH)\n \t\t\t$main .= '</div>';\n \t\t}\n \t\t$main .= '</div>';\n-\n \t\t$main .= '</div>';\n \n \t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_maintenance_table.php",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_maintenance_table implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -89,10 +88,7 @@ public static function render_page_process($PATH)\n \n \t\t\t\t$main .= '<td>' . $c . '</td>';\n \t\t\t}\n-\n \t\t\t$main .= '</tr>';\n-\n-\n \t\t}\n \t\t$main .= '</table></div>';\n "
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_password.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_password implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_r_add_test_build_suite_details.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2014 - 2021, Phoronix Media\n-\tCopyright (C) 2014 - 2021, Michael Larabel\n+\tCopyright (C) 2014 - 2022, Phoronix Media\n+\tCopyright (C) 2014 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_r_add_test_build_suite_details implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -37,6 +36,7 @@ public static function preload($PAGE)\n \t}\n \tpublic static function render_page_process($PATH)\n \t{\n+\t\tphoromatic_quit_if_invalid_input_found(array('tp'));\n \t\t$test_profile = new pts_test_profile($_GET['tp']);\n \t\t$name = $test_profile->get_title();\n \t\t$description = $test_profile->get_description();"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_r_basic_suite_details.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_r_basic_suite_details implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_result.php",
          "status": "modified",
          "additions": 9,
          "deletions": 9,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2021, Phoronix Media\n-\tCopyright (C) 2008 - 2021, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -121,7 +121,7 @@ public static function render_page_process($PATH)\n \t\t\t$result_file_title = null;\n \t\t\tif(count($system_types) == 1)\n \t\t\t{\n-\t\t\t\t$result_file_title = phoromatic_system_id_to_name($system_types[0]) . ' Tests';\n+\t\t\t\t$result_file_title = phoromatic_server::system_id_to_name($system_types[0]) . ' Tests';\n \t\t\t}\n \n \t\t\tif(!empty($tickets) && $tickets[0] != null)\n@@ -180,19 +180,19 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t\t$system_name = null;\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase 'SYSTEM_NAME':\n-\t\t\t\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID']);\n+\t\t\t\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID']);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase 'TRIGGER':\n \t\t\t\t\t\t\t$system_name = $row['Trigger'];\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase 'TRIGGER_AND_SYSTEM':\n-\t\t\t\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID']) . ': ' . $row['Trigger'];\n+\t\t\t\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID']) . ': ' . $row['Trigger'];\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase 'SYSTEM_AND_SCHEDULE':\n \t\t\t\t\t\t\t$system_name = phoromatic_schedule_id_to_name($row['ScheduleID']) . ': ' . $row['Trigger'];\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tdefault:\n-\t\t\t\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID']) . ' - ' . phoromatic_schedule_id_to_name($row['ScheduleID']) . ' - ' . $row['Trigger'];\n+\t\t\t\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID']) . ' - ' . phoromatic_schedule_id_to_name($row['ScheduleID']) . ' - ' . $row['Trigger'];\n \t\t\t\t\t}\n \n \t\t\t\t\tif($system_name == null)\n@@ -205,11 +205,11 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \n-\t\t\t\t\tif(($replacement = phoromatic_system_id_to_name($row['SystemID'])) != null)\n+\t\t\t\t\tif(($replacement = phoromatic_server::system_id_to_name($row['SystemID'])) != null)\n \t\t\t\t\t{\n \t\t\t\t\t\t$system_name = str_replace('.SYSTEM', $replacement, $system_name);\n \t\t\t\t\t}\n-\t\t\t\t\tif(($replacement = phoromatic_account_id_to_group_name($row['AccountID'])) != null)\n+\t\t\t\t\tif(($replacement = phoromatic_server::account_id_to_group_name($row['AccountID'])) != null)\n \t\t\t\t\t{\n \t\t\t\t\t\t$system_name = str_replace('.GROUP', $replacement, $system_name);\n \t\t\t\t\t}\n@@ -328,7 +328,7 @@ public static function render_page_process($PATH)\n \n \t\t\t\tforeach($compare_results as &$row)\n \t\t\t\t{\n-\t\t\t\t\t$right .= '<p><input type=\"checkbox\" value=\"' . $row['PPRID'] . '\" name=\"compare_results\" /> ' . $row['Title'] . '<br /><em>' . phoromatic_system_id_to_name($row['SystemID'], $row['AccountID']) . '</em></p>';\n+\t\t\t\t\t$right .= '<p><input type=\"checkbox\" value=\"' . $row['PPRID'] . '\" name=\"compare_results\" /> ' . $row['Title'] . '<br /><em>' . phoromatic_server::system_id_to_name($row['SystemID'], $row['AccountID']) . '</em></p>';\n \t\t\t\t}\n \n \t\t\t\t$right .= '<p><input type=\"submit\" value=\"Compare Results\" id=\"compare_results_submit\" onclick=\"javascript:phoromatic_do_custom_compare_results(this); return false;\" /></p></form>';"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_results.php",
          "status": "modified",
          "additions": 178,
          "deletions": 184,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2018, Phoronix Media\n-\tCopyright (C) 2008 - 2018, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_results implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -37,152 +36,216 @@ public static function preload($PAGE)\n \t}\n \tpublic static function render_page_process($PATH)\n \t{\n-\t\t\techo phoromatic_webui_header_logged_in();\n-\t\t\t$main = null;\n+\t\techo phoromatic_webui_header_logged_in();\n+\t\t$main = null;\n \n-\t\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[0]) && $PATH[0] == 'delete')\n-\t\t\t{\n-\t\t\t\t$pprids = explode(',', $PATH[1]);\n+\t\tif(!PHOROMATIC_USER_IS_VIEWER && isset($PATH[0]) && $PATH[0] == 'delete')\n+\t\t{\n+\t\t\t$pprids = explode(',', $PATH[1]);\n \n-\t\t\t\tforeach($pprids as $pprid)\n+\t\t\tforeach($pprids as $pprid)\n+\t\t\t{\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_results WHERE AccountID = :account_id AND PPRID = :pprid LIMIT 1');\n+\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t$stmt->bindValue(':pprid', $pprid);\n+\t\t\t\t$result = $stmt->execute();\n+\t\t\t\tif($result && ($row = $result->fetchArray()))\n \t\t\t\t{\n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_results WHERE AccountID = :account_id AND PPRID = :pprid LIMIT 1');\n-\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t$stmt->bindValue(':pprid', $pprid);\n-\t\t\t\t\t$result = $stmt->execute();\n-\t\t\t\t\tif($result && ($row = $result->fetchArray()))\n+\t\t\t\t\t$composite_xml = phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $row['UploadID']) . 'composite.xml';\n+\t\t\t\t\tif(is_file($composite_xml))\n \t\t\t\t\t{\n-\t\t\t\t\t\t$composite_xml = phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $row['UploadID']) . 'composite.xml';\n-\t\t\t\t\t\tif(is_file($composite_xml))\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tunlink($composite_xml);\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tpts_file_io::delete(phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $row['UploadID']), null, true);\n-\n-\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results_results WHERE AccountID = :account_id AND UploadID = :upload_id');\n-\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t\t$stmt->bindValue(':upload_id', $row['UploadID']);\n-\t\t\t\t\t\t$result = $stmt->execute();\n-\n-\t\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results_systems WHERE AccountID = :account_id AND UploadID = :upload_id');\n-\t\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t\t$stmt->bindValue(':upload_id', $row['UploadID']);\n-\t\t\t\t\t\t$result = $stmt->execute();\n-\n-\n+\t\t\t\t\t\tunlink($composite_xml);\n \t\t\t\t\t}\n \n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results WHERE AccountID = :account_id AND PPRID = :pprid');\n+\t\t\t\t\tpts_file_io::delete(phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $row['UploadID']), null, true);\n+\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results_results WHERE AccountID = :account_id AND UploadID = :upload_id');\n \t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t$stmt->bindValue(':pprid', $pprid);\n+\t\t\t\t\t$stmt->bindValue(':upload_id', $row['UploadID']);\n \t\t\t\t\t$result = $stmt->execute();\n \n-\t\t\t\t\t// TODO XXX fix below\n-\t\t\t\t\t//$upload_dir = phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $upload_id);\n-\t\t\t\t\t//pts_file_io::delete($upload_dir);\n+\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results_systems WHERE AccountID = :account_id AND UploadID = :upload_id');\n+\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t\t$stmt->bindValue(':upload_id', $row['UploadID']);\n+\t\t\t\t\t$result = $stmt->execute();\n \t\t\t\t}\n+\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_results WHERE AccountID = :account_id AND PPRID = :pprid');\n+\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t$stmt->bindValue(':pprid', $pprid);\n+\t\t\t\t$result = $stmt->execute();\n+\n+\t\t\t\t// TODO XXX fix below\n+\t\t\t\t//$upload_dir = phoromatic_server::phoromatic_account_result_path($_SESSION['AccountID'], $upload_id);\n+\t\t\t\t//pts_file_io::delete($upload_dir);\n \t\t\t}\n+\t\t}\n \n-\t\t\tif($main == null)\n+\t\tif($main == null)\n+\t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('result_limit', 'containing_tests', 'time_end', 'time_start', 'search', 'containing_hardware', 'containing_software'));\n+\t\t\tif(isset($_POST['result_limit']))\n \t\t\t{\n-\t\t\t\tif(isset($_POST['result_limit']))\n+\t\t\t\tif(is_numeric($_POST['result_limit']) && $_POST['result_limit'] > 9)\n \t\t\t\t{\n-\t\t\t\t\tif(is_numeric($_POST['result_limit']) && $_POST['result_limit'] > 9)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$result_limit = $_POST['result_limit'];\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$result_limit = 0;\n-\t\t\t\t\t}\n+\t\t\t\t\t$result_limit = $_POST['result_limit'];\n \t\t\t\t}\n \t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\t$result_limit = 100;\n+\t\t\t\t\t$result_limit = 0;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\t$result_limit = 100;\n+\t\t\t}\n+\t\t\t$min_date = strtotime(phoromatic_server::account_created_on($_SESSION['AccountID']));\n+\t\t\t$default_start_date = max($min_date, strtotime('-1 year'));\n+\t\t\t$min_date = date('Y-m-d', $min_date);\n+\t\t\t$time_start = strtotime(isset($_POST['time_start']) && !empty($_POST['time_start']) ? $_POST['time_start'] : $min_date);\n+\t\t\tif(empty($time_start))\n+\t\t\t{\n+\t\t\t\t$time_start = strtotime($min_date);\n+\t\t\t}\n+\t\t\t$time_end = strtotime((isset($_POST['time_end']) && !empty($_POST['time_end']) ? $_POST['time_end'] : date('Y-m-d')) . ' 23:59:59');\n+\t\t\tif(empty($time_end))\n+\t\t\t{\n+\t\t\t\t$time_end = strtotime(date('Y-m-d') . ' 23:59:59');\n+\t\t\t}\n+\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" method=\"post\"><div style=\"text-align: left; font-weight: bold;\">Results From <input id=\"time_start\" name=\"time_start\" type=\"date\" required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" min=\"' . $min_date . '\" value=\"' . (isset($_POST['time_start']) ? $_POST['time_start'] : date('Y-m-d', $default_start_date)) . '\" max=\"' . date('Y-m-d') . '\" /> To  <input id=\"time_end\" name=\"time_end\" type=\"date\" required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" min=\"' . $min_date . '\" value=\"' . (isset($_POST['time_end']) ? $_POST['time_end'] : date('Y-m-d')) . '\" max=\"' . date('Y-m-d') . '\" /> &nbsp; With Tests: <input type=\"text\" name=\"containing_tests\" id=\"containing_tests\" value=\"' . (isset($_POST['containing_tests']) ? $_POST['containing_tests'] : null) . '\" /> With Hardware: <input type=\"text\" name=\"containing_hardware\" id=\"containing_hardware\" value=\"' . (isset($_POST['containing_hardware']) ? $_POST['containing_hardware'] : null) . '\" /> With System Software: <input type=\"text\" name=\"containing_software\" id=\"containing_software\" value=\"' . (isset($_POST['containing_software']) ? $_POST['containing_software'] : null) . '\" /> Search For <input type=\"text\" name=\"search\" id=\"search_for\" value=\"' . (isset($_POST['search']) ? $_POST['search'] : null) . '\" /> Limit Results To <select id=\"result_limit\" name=\"result_limit\">';\n+\t\t\tfor($i = 100; $i <= 500; $i += 100)\n+\t\t\t{\n+\t\t\t\t$main .= '<option value=\"' . $i . '\"' . ($result_limit == $i ? ' selected=\"selected\"' : null) . '>' . $i . '</option>';\n+\t\t\t}\n+\t\t\t$main .= '<option value=\"\"' . (isset($_POST['result_limit']) && empty($result_limit) ? ' selected=\"selected\"' : null) . '>No Limit</option>';\n+\t\t\t$main .= '</select> &nbsp; <input type=\"button\" value=\"Reset\" onclick=\"phoromatic_clear_results_search_fields();\" />';\n+\t\t\t$main .= ' &nbsp; <input type=\"submit\" value=\"Update\" /></div></form>';\n+\t\t\t$main .= '<p style=\"font-size: 90%;\">** <em>AND</em>, <em>OR</em>, and <em>NOT</em> search operators supported for tests/hardware/software search fields. **</p>';\n+\t\t\t$main .= '<h1>Account Test Results</h1>';\n+\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n+\t\t\t$search_for = (!isset($_POST['search']) || empty($_POST['search']) ? null : 'AND (Title LIKE :search OR Description LIKE :search OR UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND (Software LIKE :search OR Hardware LIKE :search)))');\n+\t\t\tif(isset($_POST['containing_hardware']) && !empty($_POST['containing_hardware']))\n+\t\t\t{\n+\t\t\t\t$hw_advanced_query = stripos($_POST['containing_hardware'], ' AND ') !== false || stripos($_POST['containing_hardware'], ' OR ') !== false || stripos($_POST['containing_hardware'], ' NOT ') !== false;\n+\t\t\t\tif($hw_advanced_query || true)\n+\t\t\t\t{\n+\t\t\t\t\t$hw_advanced_query = pts_phoroql::search_query_to_tree($_POST['containing_hardware']);\n \t\t\t\t}\n-\t\t\t\t$min_date = strtotime(phoromatic_server::account_created_on($_SESSION['AccountID']));\n-\t\t\t\t$default_start_date = max($min_date, strtotime('-1 year'));\n-\t\t\t\t$min_date = date('Y-m-d', $min_date);\n-\t\t\t\t$time_start = strtotime(isset($_POST['time_start']) && !empty($_POST['time_start']) ? $_POST['time_start'] : $min_date);\n-\t\t\t\tif(empty($time_start))\n+\t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\t$time_start = strtotime($min_date);\n+\t\t\t\t\t$search_for .= ' AND UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND Hardware LIKE :containing_hardware)';\n \t\t\t\t}\n-\t\t\t\t$time_end = strtotime((isset($_POST['time_end']) && !empty($_POST['time_end']) ? $_POST['time_end'] : date('Y-m-d')) . ' 23:59:59');\n-\t\t\t\tif(empty($time_end))\n+\t\t\t}\n+\t\t\tif(isset($_POST['containing_software']) && !empty($_POST['containing_software']))\n+\t\t\t{\n+\t\t\t\t$sw_advanced_query = strpos($_POST['containing_software'], ' AND ') !== false || strpos($_POST['containing_software'], ' OR ') !== false || strpos($_POST['containing_software'], ' NOT ') !== false;\n+\t\t\t\tif($sw_advanced_query || true)\n \t\t\t\t{\n-\t\t\t\t\t$time_end = strtotime(date('Y-m-d') . ' 23:59:59');\n+\t\t\t\t\t$sw_advanced_query = pts_phoroql::search_query_to_tree($_POST['containing_software']);\n \t\t\t\t}\n-\t\t\t\t$main .= '<form action=\"' . $_SERVER['REQUEST_URI'] . '\" method=\"post\"><div style=\"text-align: left; font-weight: bold;\">Results From <input id=\"time_start\" name=\"time_start\" type=\"date\" required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" min=\"' . $min_date . '\" value=\"' . (isset($_POST['time_start']) ? $_POST['time_start'] : date('Y-m-d', $default_start_date)) . '\" max=\"' . date('Y-m-d') . '\" /> To  <input id=\"time_end\" name=\"time_end\" type=\"date\" required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" min=\"' . $min_date . '\" value=\"' . (isset($_POST['time_end']) ? $_POST['time_end'] : date('Y-m-d')) . '\" max=\"' . date('Y-m-d') . '\" /> &nbsp; With Tests: <input type=\"text\" name=\"containing_tests\" id=\"containing_tests\" value=\"' . (isset($_POST['containing_tests']) ? $_POST['containing_tests'] : null) . '\" /> With Hardware: <input type=\"text\" name=\"containing_hardware\" id=\"containing_hardware\" value=\"' . (isset($_POST['containing_hardware']) ? $_POST['containing_hardware'] : null) . '\" /> With System Software: <input type=\"text\" name=\"containing_software\" id=\"containing_software\" value=\"' . (isset($_POST['containing_software']) ? $_POST['containing_software'] : null) . '\" /> Search For <input type=\"text\" name=\"search\" id=\"search_for\" value=\"' . (isset($_POST['search']) ? $_POST['search'] : null) . '\" /> Limit Results To <select id=\"result_limit\" name=\"result_limit\">';\n-\t\t\t\tfor($i = 100; $i <= 500; $i += 100)\n+\t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\t$main .= '<option value=\"' . $i . '\"' . ($result_limit == $i ? ' selected=\"selected\"' : null) . '>' . $i . '</option>';\n+\t\t\t\t\t$search_for .= ' AND UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND Software LIKE :containing_software)';\n \t\t\t\t}\n-\t\t\t\t$main .= '<option value=\"\"' . (isset($_POST['result_limit']) && empty($result_limit) ? ' selected=\"selected\"' : null) . '>No Limit</option>';\n+\t\t\t}\n+\t\t\t$main .= '<div style=\"margin: 0 5%;\"><ul style=\"max-height: 100%;\"><li><h1>Recent Test Results</h1></li>';\n \n-\t\t\t\t$main .= '</select> &nbsp; <input type=\"button\" value=\"Reset\" onclick=\"phoromatic_clear_results_search_fields();\" />';\n-\t\t\t\t$main .= ' &nbsp; <input type=\"submit\" value=\"Update\" /></div></form>';\n-\t\t\t\t$main .= '<p style=\"font-size: 90%;\">** <em>AND</em>, <em>OR</em>, and <em>NOT</em> search operators supported for tests/hardware/software search fields. **</p>';\n-\t\t\t\t$main .= '<h1>Account Test Results</h1>';\n-\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n-\t\t\t\t$search_for = (!isset($_POST['search']) || empty($_POST['search']) ? null : 'AND (Title LIKE :search OR Description LIKE :search OR UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND (Software LIKE :search OR Hardware LIKE :search)))');\n-\t\t\t\tif(isset($_POST['containing_hardware']) && !empty($_POST['containing_hardware']))\n+\t\t\tif(isset($PATH[1]) && $PATH[0] == 'hash')\n+\t\t\t{\n+\t\t\t\t// Find matching comparison hashes\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' AND ComparisonHash = :comparison_hash ORDER BY UploadTime DESC');\n+\t\t\t\t$stmt->bindValue(':comparison_hash', $PATH[1]);\n+\t\t\t}\n+\t\t\telse if(isset($PATH[1]) && $PATH[0] == 'ticket')\n+\t\t\t{\n+\t\t\t\t// Find matching ticket results\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' AND BenchmarkTicketID = :ticket_id ORDER BY UploadTime DESC');\n+\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[1]);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' ORDER BY UploadTime DESC');\n+\t\t\t}\n+\n+\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t$stmt->bindValue(':search', (isset($_POST['search']) ? '%' . $_POST['search'] . '%' : null));\n+\t\t\t$stmt->bindValue(':containing_hardware', (isset($_POST['containing_hardware']) ? '%' . $_POST['containing_hardware'] . '%' : null));\n+\t\t\t$stmt->bindValue(':containing_software', (isset($_POST['containing_software']) ? '%' . $_POST['containing_software'] . '%' : null));\n+\t\t\t$test_result_result = $stmt->execute();\n+\t\t\t$results = 0;\n+\t\t\t$containing_tests = isset($_POST['containing_tests']) ? $_POST['containing_tests'] : null;\n+\t\t\tif(!empty($containing_tests))\n+\t\t\t{\n+\t\t\t\t$containing_tests = pts_phoroql::search_query_to_tree($containing_tests);\n+\t\t\t}\n+\n+\t\t\twhile($test_result_row = $test_result_result->fetchArray())\n+\t\t\t{\n+\t\t\t\tif(strtotime($test_result_row['UploadTime']) > $time_end)\n \t\t\t\t{\n-\t\t\t\t\t$hw_advanced_query = stripos($_POST['containing_hardware'], ' AND ') !== false || stripos($_POST['containing_hardware'], ' OR ') !== false || stripos($_POST['containing_hardware'], ' NOT ') !== false;\n-\t\t\t\t\tif($hw_advanced_query || true)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$hw_advanced_query = pts_phoroql::search_query_to_tree($_POST['containing_hardware']);\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$search_for .= ' AND UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND Hardware LIKE :containing_hardware)';\n-\t\t\t\t\t}\n+\t\t\t\t\tcontinue;\n \t\t\t\t}\n-\t\t\t\tif(isset($_POST['containing_software']) && !empty($_POST['containing_software']))\n+\t\t\t\tif(strtotime($test_result_row['UploadTime']) < $time_start)\n \t\t\t\t{\n-\t\t\t\t\t$sw_advanced_query = strpos($_POST['containing_software'], ' AND ') !== false || strpos($_POST['containing_software'], ' OR ') !== false || strpos($_POST['containing_software'], ' NOT ') !== false;\n-\t\t\t\t\tif($sw_advanced_query || true)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$sw_advanced_query = pts_phoroql::search_query_to_tree($_POST['containing_software']);\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$search_for .= ' AND UploadID IN (SELECT UploadID FROM phoromatic_results_systems WHERE AccountID = :account_id AND Software LIKE :containing_software)';\n-\t\t\t\t\t}\n+\t\t\t\t\t//break;\n \t\t\t\t}\n-\t\t\t\t$main .= '<div style=\"margin: 0 5%;\"><ul style=\"max-height: 100%;\"><li><h1>Recent Test Results</h1></li>';\n-\n-\t\t\t\tif(isset($PATH[1]) && $PATH[0] == 'hash')\n+\t\t\t\tif(!empty($result_limit) && $result_limit > 1 && $result_limit == $results)\n \t\t\t\t{\n-\t\t\t\t\t// Find matching comparison hashes\n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' AND ComparisonHash = :comparison_hash ORDER BY UploadTime DESC');\n-\t\t\t\t\t$stmt->bindValue(':comparison_hash', $PATH[1]);\n+\t\t\t\t\tbreak;\n \t\t\t\t}\n-\t\t\t\telse if(isset($PATH[1]) && $PATH[0] == 'ticket')\n+\n+\t\t\t\t$composite_xml = phoromatic_server::phoromatic_account_result_path($test_result_row['AccountID'], $test_result_row['UploadID']) . 'composite.xml';\n+\t\t\t\t$result_file = new pts_result_file($composite_xml);\n+\n+\t\t\t\tif(isset($_POST['containing_hardware']) && !empty($_POST['containing_hardware']) && $hw_advanced_query)\n \t\t\t\t{\n-\t\t\t\t\t// Find matching ticket results\n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' AND BenchmarkTicketID = :ticket_id ORDER BY UploadTime DESC');\n-\t\t\t\t\t$stmt->bindValue(':ticket_id', $PATH[1]);\n+\t\t\t\t\t//if(!$result_file->contains_system_hardware($_POST['containing_hardware']))\n+\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($hw_advanced_query, 'AND', array($result_file, 'contains_system_hardware')))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\telse\n+\t\t\t\tif(isset($_POST['containing_software']) && !empty($_POST['containing_software']) && $sw_advanced_query)\n \t\t\t\t{\n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE AccountID = :account_id ' . $search_for. ' ORDER BY UploadTime DESC');\n+\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($sw_advanced_query, 'AND', array($result_file, 'contains_system_software')))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n \t\t\t\t}\n-\n-\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':search', (isset($_POST['search']) ? '%' . $_POST['search'] . '%' : null));\n-\t\t\t\t$stmt->bindValue(':containing_hardware', (isset($_POST['containing_hardware']) ? '%' . $_POST['containing_hardware'] . '%' : null));\n-\t\t\t\t$stmt->bindValue(':containing_software', (isset($_POST['containing_software']) ? '%' . $_POST['containing_software'] . '%' : null));\n-\t\t\t\t$test_result_result = $stmt->execute();\n-\t\t\t\t$results = 0;\n-\t\t\t\t$containing_tests = isset($_POST['containing_tests']) ? $_POST['containing_tests'] : null;\n \t\t\t\tif(!empty($containing_tests))\n \t\t\t\t{\n-\t\t\t\t\t$containing_tests = pts_phoroql::search_query_to_tree($containing_tests);\n+\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($containing_tests, 'AND', array($result_file, 'contains_test')))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\twhile($test_result_row = $test_result_result->fetchArray())\n+\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n+\t\t\t\t$results++;\n+\t\t\t}\n+\t\t\tif($results == 0)\n+\t\t\t{\n+\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Results Found</li>';\n+\t\t\t}\n+\t\t\telse if($results > 3)\n+\t\t\t{\n+\t\t\t\t$main .= '<a onclick=\"\"><li id=\"global_bottom_totals\"><input type=\"checkbox\" id=\"global_checkbox\" onclick=\"javascript:phoromatic_toggle_checkboxes_on_page(this);\" onchange=\"return false;\"></input> <strong>' . $results . ' Results</strong></li></a>';\n+\t\t\t}\n+\t\t\t$main .= '</ul></div>';\n+\t\t\t$main .= '</div>';\n+\n+\t\t\t$result_share_opt = phoromatic_server::read_setting('force_result_sharing') ? '1 = 1' : 'AccountID IN (SELECT AccountID FROM phoromatic_account_settings WHERE LetOtherGroupsViewResults = \"1\")';\n+\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE ' . $result_share_opt . ' AND AccountID != :account_id ' . $search_for. ' ORDER BY UploadTime DESC');\n+\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t$stmt->bindValue(':search', (isset($_POST['search']) ? '%' . $_POST['search'] . '%' : null));\n+\t\t\t$stmt->bindValue(':containing_hardware', (isset($_POST['containing_hardware']) ? '%' . $_POST['containing_hardware'] . '%' : null));\n+\t\t\t$stmt->bindValue(':containing_software', (isset($_POST['containing_software']) ? '%' . $_POST['containing_software'] . '%' : null));\n+\t\t\t$test_result_result = $stmt->execute();\n+\t\t\tif(!empty($test_result_result) && ($test_result_row = $test_result_result->fetchArray()))\n+\t\t\t{\n+\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n+\t\t\t\t$main .= '<ul style=\"max-height: 100%;\"><li><h1>Results Shared By Other Groups</h1></li>';\n+\t\t\t\t$results = 0;\n+\t\t\t\tdo\n \t\t\t\t{\n \t\t\t\t\tif(strtotime($test_result_row['UploadTime']) > $time_end)\n \t\t\t\t\t{\n@@ -215,7 +278,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n-\n \t\t\t\t\tif(!empty($containing_tests))\n \t\t\t\t\t{\n \t\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($containing_tests, 'AND', array($result_file, 'contains_test')))\n@@ -224,84 +286,16 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \n-\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n+\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td><strong>' . phoromatic_server::account_id_to_group_name($test_result_row['AccountID']) . '</strong></td><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n \t\t\t\t\t$results++;\n \t\t\t\t}\n-\t\t\t\tif($results == 0)\n-\t\t\t\t{\n-\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Results Found</li>';\n-\t\t\t\t}\n-\t\t\t\telse if($results > 3)\n-\t\t\t\t{\n-\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"global_bottom_totals\"><input type=\"checkbox\" id=\"global_checkbox\" onclick=\"javascript:phoromatic_toggle_checkboxes_on_page(this);\" onchange=\"return false;\"></input> <strong>' . $results . ' Results</strong></li></a>';\n-\t\t\t\t}\n+\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n \t\t\t\t$main .= '</ul></div>';\n-\t\t\t\t$main .= '</div>';\n-\n-\t\t\t\t$result_share_opt = phoromatic_server::read_setting('force_result_sharing') ? '1 = 1' : 'AccountID IN (SELECT AccountID FROM phoromatic_account_settings WHERE LetOtherGroupsViewResults = \"1\")';\n-\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime, TimesViewed, AccountID, UploadID FROM phoromatic_results WHERE ' . $result_share_opt . ' AND AccountID != :account_id ' . $search_for. ' ORDER BY UploadTime DESC');\n-\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':search', (isset($_POST['search']) ? '%' . $_POST['search'] . '%' : null));\n-\t\t\t\t$stmt->bindValue(':containing_hardware', (isset($_POST['containing_hardware']) ? '%' . $_POST['containing_hardware'] . '%' : null));\n-\t\t\t\t$stmt->bindValue(':containing_software', (isset($_POST['containing_software']) ? '%' . $_POST['containing_software'] . '%' : null));\n-\t\t\t\t$test_result_result = $stmt->execute();\n-\t\t\t\tif(!empty($test_result_result) && ($test_result_row = $test_result_result->fetchArray()))\n-\t\t\t\t{\n-\t\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">';\n-\t\t\t\t\t$main .= '<ul style=\"max-height: 100%;\"><li><h1>Results Shared By Other Groups</h1></li>';\n-\t\t\t\t\t$results = 0;\n-\t\t\t\t\tdo\n-\t\t\t\t\t{\n-\t\t\t\t\t\tif(strtotime($test_result_row['UploadTime']) > $time_end)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif(strtotime($test_result_row['UploadTime']) < $time_start)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t//break;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif(!empty($result_limit) && $result_limit > 1 && $result_limit == $results)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t$composite_xml = phoromatic_server::phoromatic_account_result_path($test_result_row['AccountID'], $test_result_row['UploadID']) . 'composite.xml';\n-\t\t\t\t\t\t$result_file = new pts_result_file($composite_xml);\n-\n-\t\t\t\t\t\tif(isset($_POST['containing_hardware']) && !empty($_POST['containing_hardware']) && $hw_advanced_query)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t//if(!$result_file->contains_system_hardware($_POST['containing_hardware']))\n-\t\t\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($hw_advanced_query, 'AND', array($result_file, 'contains_system_hardware')))\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif(isset($_POST['containing_software']) && !empty($_POST['containing_software']) && $sw_advanced_query)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($sw_advanced_query, 'AND', array($result_file, 'contains_system_software')))\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\tif(!empty($containing_tests))\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tif(!pts_phoroql::evaluate_search_tree($containing_tests, 'AND', array($result_file, 'contains_test')))\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'?result/' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td><strong>' . phoromatic_account_id_to_group_name($test_result_row['AccountID']) . '</strong></td><td>' . phoromatic_system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n-\t\t\t\t\t\t$results++;\n-\t\t\t\t\t}\n-\t\t\t\t\twhile($test_result_row = $test_result_result->fetchArray());\n-\t\t\t\t\t$main .= '</ul></div>';\n-\t\t\t\t}\n \t\t\t}\n+\t\t}\n \n-\t\t\techo phoromatic_webui_main($main);\n-\t\t\techo phoromatic_webui_footer();\n+\t\techo phoromatic_webui_main($main);\n+\t\techo phoromatic_webui_footer();\n \t}\n }\n "
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_sched.php",
          "status": "modified",
          "additions": 42,
          "deletions": 43,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2014 - 2017, Phoronix Media\n-\tCopyright (C) 2014 - 2017, Michael Larabel\n+\tCopyright (C) 2014 - 2022, Phoronix Media\n+\tCopyright (C) 2014 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_sched implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -236,53 +235,53 @@ public static function render_page_process($PATH)\n <tr>\n   <td><h3>Time-Based Testing</h3><em>Time-based testing allows tests to automatically commence at a given time on a defined cycle each day/week. This option is primarly aimed for those wishing to run a set of benchmarks every morning or night or at another defined period.</em></td>\n   <td><h3>Run Time:</h3>\n-\t\t\t<p><select name=\"schedule_hour\" id=\"schedule_hour\">';\n-\n-\t\t\tif(!$is_new)\n-\t\t\t{\n-\t\t\t\t$run_at = explode('.', $e_schedule['RunAt']);\n-\t\t\t\t$days_active = !empty($e_schedule['ActiveOn']) ? explode(',', $e_schedule['ActiveOn']) : array();\n-\t\t\t}\n+\t\t<p><select name=\"schedule_hour\" id=\"schedule_hour\">';\n \n-\t\t\tfor($i = 0; $i <= 23; $i++)\n-\t\t\t{\n-\t\t\t\t$i_f = (strlen($i) == 1 ? '0' . $i : $i);\n-\t\t\t\t$main .= '<option value=\"' . $i_f . '\"' . (!$is_new && $run_at[0] == $i ? 'selected=\"selected\" ' : null) . '>' . $i_f . '</option>';\n-\t\t\t}\n-\n-\t\t\t$main .= '</select> <select name=\"schedule_minute\" id=\"schedule_minute\">';\n+\t\tif(!$is_new)\n+\t\t{\n+\t\t\t$run_at = explode('.', $e_schedule['RunAt']);\n+\t\t\t$days_active = !empty($e_schedule['ActiveOn']) ? explode(',', $e_schedule['ActiveOn']) : array();\n+\t\t}\n \n-\t\t\tfor($i = 0; $i < 60; $i += 10)\n-\t\t\t{\n-\t\t\t\t$i_f = (strlen($i) == 1 ? '0' . $i : $i);\n-\t\t\t\t$main .= '<option value=\"' . $i_f . '\"' . (!$is_new && $run_at[1] == $i ? 'selected=\"selected\" ' : null) . '>' . $i_f . '</option>';\n-\t\t\t}\n+\t\tfor($i = 0; $i <= 23; $i++)\n+\t\t{\n+\t\t\t$i_f = (strlen($i) == 1 ? '0' . $i : $i);\n+\t\t\t$main .= '<option value=\"' . $i_f . '\"' . (!$is_new && $run_at[0] == $i ? 'selected=\"selected\" ' : null) . '>' . $i_f . '</option>';\n+\t\t}\n \n-\t\t\t$main .= '</select><h3>Active On:</h3><p>';\n-\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n-\t\t\tforeach($week as $index => $day)\n-\t\t\t{\n-\t\t\t\t$main .= '<input type=\"checkbox\" name=\"days_active[]\" value=\"' . $index . '\"' . (!$is_new && in_array($index, $days_active) ? 'checked=\"checked\" ' : null) . '/> ' . $day;\n-\t\t\t}\n+\t\t$main .= '</select> <select name=\"schedule_minute\" id=\"schedule_minute\">';\n \n-\t\t\t$main .= '</p></td>\n-</tr>\n-<tr>\n-  <td><h3>Trigger-Based Testing</h3><em>To carry out trigger-based testing, you can simply have an external process/script trigger (&quot;ping&quot;) a specialized URL whenever an event occurs to commence a new round of testing. This is the most customizable approach to having Phoromatic run tests on a system if you wish to have it occur whenever a Git/SVN commit takes place or other operations.</em></td>\n-  <td><h3>Once creating the test schedule there will be a specialized URL you can use for &quot;pinging&quot; where you can pass it a Git commit hash, SVN revision number, date, or other unique identifiers to externally trigger the test schedules and systems to begin testing. This custom trigger is passed to any of the used context scripts for setting up the system in an appropriate state.</h3></td>\n-</tr>\n-<tr>\n-  <td><h3>One-Time / Manual Testing</h3><em>Carrying out Phoromatic-controlled benchmark on no routine schedule, similar to the trigger-based testing.</em></td>\n-  <td><h3>If you wish to only run a set of tests once on a given system or to do so seldom with the same set of tests, simply proceed with creating the test schedule without setting any run time / active days. When going to the web page for this test schedule there will be a button to trigger the tests to run on all affected systems. One-time benchmarking can also be setup via the <a href=\"?benchmark\">Run A Benchmark</a> page.</h3></td>\n-</tr>\n-</table>';\n+\t\tfor($i = 0; $i < 60; $i += 10)\n+\t\t{\n+\t\t\t$i_f = (strlen($i) == 1 ? '0' . $i : $i);\n+\t\t\t$main .= '<option value=\"' . $i_f . '\"' . (!$is_new && $run_at[1] == $i ? 'selected=\"selected\" ' : null) . '>' . $i_f . '</option>';\n+\t\t}\n \n-$main .= (empty($env_var_edit) ? '<p><a id=\"env_var_options_show\" onclick=\"javascript:document.getElementById(\\'env_var_options\\').style.display = \\'block\\'; javascript:document.getElementById(\\'env_var_options_show\\').style.display = \\'none\\'; \">Advanced Options</a></p> <div id=\"env_var_options\" style=\"display: none;\">' : '<div id=\"env_var_options\">') . '<p>The advanced options require the Phoromatic clients be on the latest Phoronix Test Suite (10.8 or newer / Git). See the Phoronix Test Suite documentation for more information on these environment variables / advanced options.</p>' . pts_env::get_html_options('phoromatic', $env_var_edit) . '</div>';\n+\t\t$main .= '</select><h3>Active On:</h3><p>';\n+\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n+\t\tforeach($week as $index => $day)\n+\t\t{\n+\t\t\t$main .= '<input type=\"checkbox\" name=\"days_active[]\" value=\"' . $index . '\"' . (!$is_new && in_array($index, $days_active) ? 'checked=\"checked\" ' : null) . '/> ' . $day;\n+\t\t}\n \n-$main .= '<p align=\"right\"><input name=\"submit\" value=\"' . ($is_new ? 'Create' : 'Edit') . ' Schedule\" type=\"submit\" onclick=\"return pts_rmm_validate_schedule();\" /></p>\n+\t\t$main .= '</p></td>\n+\t\t\t</tr>\n+\t\t\t<tr>\n+\t\t\t  <td><h3>Trigger-Based Testing</h3><em>To carry out trigger-based testing, you can simply have an external process/script trigger (&quot;ping&quot;) a specialized URL whenever an event occurs to commence a new round of testing. This is the most customizable approach to having Phoromatic run tests on a system if you wish to have it occur whenever a Git/SVN commit takes place or other operations.</em></td>\n+\t\t\t  <td><h3>Once creating the test schedule there will be a specialized URL you can use for &quot;pinging&quot; where you can pass it a Git commit hash, SVN revision number, date, or other unique identifiers to externally trigger the test schedules and systems to begin testing. This custom trigger is passed to any of the used context scripts for setting up the system in an appropriate state.</h3></td>\n+\t\t\t</tr>\n+\t\t\t<tr>\n+\t\t\t  <td><h3>One-Time / Manual Testing</h3><em>Carrying out Phoromatic-controlled benchmark on no routine schedule, similar to the trigger-based testing.</em></td>\n+\t\t\t  <td><h3>If you wish to only run a set of tests once on a given system or to do so seldom with the same set of tests, simply proceed with creating the test schedule without setting any run time / active days. When going to the web page for this test schedule there will be a button to trigger the tests to run on all affected systems. One-time benchmarking can also be setup via the <a href=\"?benchmark\">Run A Benchmark</a> page.</h3></td>\n+\t\t\t</tr>\n+\t\t\t</table>';\n+\n+\t\t$main .= (empty($env_var_edit) ? '<p><a id=\"env_var_options_show\" onclick=\"javascript:document.getElementById(\\'env_var_options\\').style.display = \\'block\\'; javascript:document.getElementById(\\'env_var_options_show\\').style.display = \\'none\\'; \">Advanced Options</a></p> <div id=\"env_var_options\" style=\"display: none;\">' : '<div id=\"env_var_options\">') . '<p>The advanced options require the Phoromatic clients be on the latest Phoronix Test Suite (10.8 or newer / Git). See the Phoronix Test Suite documentation for more information on these environment variables / advanced options.</p>' . pts_env::get_html_options('phoromatic', $env_var_edit) . '</div>';\n+\n+\t\t$main .= '<p align=\"right\"><input name=\"submit\" value=\"' . ($is_new ? 'Create' : 'Edit') . ' Schedule\" type=\"submit\" onclick=\"return pts_rmm_validate_schedule();\" /></p>\n \t\t\t</form>';\n-\t\t\techo phoromatic_webui_main($main);\n-\t\t\techo phoromatic_webui_footer();\n+\t\techo phoromatic_webui_main($main);\n+\t\techo phoromatic_webui_footer();\n \t}\n }\n "
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_schedules.php",
          "status": "modified",
          "additions": 101,
          "deletions": 110,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2018, Phoronix Media\n-\tCopyright (C) 2008 - 2018, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_schedules implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -55,12 +54,12 @@ public static function render_page_process($PATH)\n \t\t\t}\n \t\t\telse\n \t\t\t{\n-\n \t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n \t\t\t\t{\n \n \t\t\t\t\tif(isset($_POST['add_to_schedule_select_test']))\n \t\t\t\t\t{\n+\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('add_to_schedule_select_test'));\n \t\t\t\t\t\t$name = $_POST['add_to_schedule_select_test'];\n \t\t\t\t\t\t$args = array();\n \t\t\t\t\t\t$args_name = array();\n@@ -69,6 +68,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tif(substr($i, 0, 12) == 'test_option_' && substr($i, -9) != '_selected')\n \t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array($i, $i . '_selected'));\n \t\t\t\t\t\t\t\tarray_push($args, $v);\n \t\t\t\t\t\t\t\tarray_push($args_name, $_POST[$i . '_selected']);\n \t\t\t\t\t\t\t}\n@@ -175,7 +175,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\n \t\t\t\t$main .= '<h1>' . $row['Title'] . '</h1>';\n \t\t\t\t$main .= '<h3>' . $row['Description'] . '</h3>';\n \t\t\t\tswitch($row['RunPriority'])\n@@ -248,15 +247,15 @@ public static function render_page_process($PATH)\n \t\t\t\t}\n \t\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n \t\t\t\t{\n-\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n-\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n-\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n-\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n-\t\t\t\t$main .= '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n-\t\t\t\t$main .= '</form></p>';\n-\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n-\t\t\t\t$main .= '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n-\t\t\t\t$main .= '</form></p>';\n+\t\t\t\t\t$trigger_url = 'http://' . phoromatic_web_socket_server_ip() . '/event.php?type=trigger&user=' . $_SESSION['UserName'] . '&public_key=' . $row['PublicKey'] . '&trigger=XXX';\n+\t\t\t\t\t$main .= '<p>This test schedule can be manually triggered to run at any time by calling <strong>' . $trigger_url . '</strong> where <em>XXX</em> is the trigger value to be used (if relevant, such as a time-stamp, Git/SVN commit number or hash, etc). There\\'s also the option of sub-targeting system(s) part of this schedule. One option is appending <em>&sub_target_this_ip</em> if this URL is being called from one of the client test systems to only sub-target the triggered testing on that client, among other options.</p>';\n+\t\t\t\t\t$main .= '<p>If you wish to run this test schedule now, click the following button and the schedule will be run on all intended systems at their next earliest possible convenience.</p>';\n+\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"manual_run\" method=\"post\">';\n+\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"do_manual_test_run\" value=\"1\" /><input type=\"submit\" value=\"Run Test Schedule Now\" onclick=\"return confirm(\\'Run this test schedule now?\\');\" />';\n+\t\t\t\t\t$main .= '</form></p>';\n+\t\t\t\t\t$main .= '<p><form action=\"?schedules/' . $PATH[0] . '\" name=\"skip_run\" method=\"post\">';\n+\t\t\t\t\t$main .= '<input type=\"hidden\" name=\"skip_current_ticket\" value=\"1\" /><input type=\"submit\" value=\"Skip Current Test Ticket\" onclick=\"return confirm(\\'Skip any currently active test ticket on all systems?\\');\" />';\n+\t\t\t\t\t$main .= '</form></p>';\n \t\t\t\t}\n \n \t\t\t\t$main .= '<hr />';\n@@ -426,8 +425,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t$main .= '</div>';\n \t\t\t\t}\n \n-\n-\n \t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, SystemID, ScheduleID, PPRID, UploadTime FROM phoromatic_results WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY UploadTime DESC');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t\t$stmt->bindValue(':schedule_id', $PATH[0]);\n@@ -446,7 +443,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n+\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n \t\t\t\t\t\t$results++;\n \n \t\t\t\t\t}\n@@ -489,116 +486,110 @@ public static function render_page_process($PATH)\n \n \n \t\t$main = '<h1>Test Schedules</h1>\n-\t\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n-\n-\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n-\t\t\t{\n-\t\t\t\t$main .= '\n-\t\t\t\t<hr />\n-\t\t\t\t<h2>Create A Schedule</h2>\n-\t\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n-\t\t\t}\n-\n-\t\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n+\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n \n+\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n+\t\t{\n+\t\t\t$main .= '\n+\t\t\t<hr />\n+\t\t\t<h2>Create A Schedule</h2>\n+\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n+\t\t}\n \n-\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n-\t\t\t\t\t<ul>\n-\t\t\t\t\t\t<li><h1>Active Test Schedules</h1></li>';\n+\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n+\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n+\t\t\t<ul>\n+\t\t\t<li><h1>Active Test Schedules</h1></li>';\n \n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n-\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t$result = $stmt->execute();\n-\t\t\t\t\t$row = $result->fetchArray();\n-\n-\t\t\t\t\tif($row == false)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\tdo\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n-\t\t\t\t\t\t\t$result_tests = $stmt_tests->execute();\n-\t\t\t\t\t\t\t$row_tests = $result_tests->fetchArray();\n-\t\t\t\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n-\n-\t\t\t\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n-\t\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\twhile($row = $result->fetchArray());\n-\t\t\t\t\t}\n+\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n+\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t$result = $stmt->execute();\n+\t\t$row = $result->fetchArray();\n \n+\t\tif($row == false)\n+\t\t{\n+\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tdo\n+\t\t\t{\n+\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n+\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n+\t\t\t\t$result_tests = $stmt_tests->execute();\n+\t\t\t\t$row_tests = $result_tests->fetchArray();\n+\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n+\n+\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n+\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n+\t\t\t}\n+\t\t\twhile($row = $result->fetchArray());\n+\t\t}\n \n-\t\t\t$main .= '</ul>\n-\t\t\t</div>';\n+\t\t$main .= '</ul>\n+\t\t</div>';\n \n-\t\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n-\t\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n+\t\t$main .= '<hr /><h2>Schedule Overview</h2>';\n+\t\t$week = array('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');\n \n-\t\t\tforeach($week as $i => $day)\n+\t\tforeach($week as $i => $day)\n+\t\t{\n+\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n+\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n+\t\t\t$result = $stmt->execute();\n+\t\t\t$has_matched = false;\n+\t\t\twhile($row = $result->fetchArray())\n \t\t\t{\n-\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, RunAt, RunTargetGroups, RunTargetSystems FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 AND ActiveOn LIKE :active_on ORDER BY RunAt,ActiveOn,Title ASC');\n-\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':active_on', '%' . $i . '%');\n-\t\t\t\t$result = $stmt->execute();\n-\t\t\t\t$has_matched = false;\n-\t\t\t\twhile($row = $result->fetchArray())\n+\t\t\t\tif(!$has_matched)\n \t\t\t\t{\n-\t\t\t\t\tif(!$has_matched)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n-\t\t\t\t\t\t$has_matched = true;\n-\t\t\t\t\t}\n-\t\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n-\t\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n-\t\t\t\t\t$main .= '<br />';\n+\t\t\t\t\t$main .= '<h3>' . $day . '</h3>' . PHP_EOL . '<p>';\n+\t\t\t\t\t$has_matched = true;\n \t\t\t\t}\n-\n-\t\t\t\tif($has_matched)\n-\t\t\t\t\t$main .= '</p>' . PHP_EOL;\n-\n+\t\t\t\t$main .= '<em>' . $row['RunAt'] . '</em> <a href=\"?schedules/' . $row['ScheduleID'] . '\">' . $row['Title'] . '</a>';\n+\t\t\t\t//$main .= $row['RunTargetSystems'] . ' ' . $row['RunTargetGroups'];\n+\t\t\t\t$main .= '<br />';\n \t\t\t}\n \n-\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n-\t\t\t\t\t<ul>\n-\t\t\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n+\t\t\tif($has_matched)\n+\t\t\t\t$main .= '</p>' . PHP_EOL;\n+\t\t}\n \n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n-\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t$result = $stmt->execute();\n-\t\t\t\t\t$row = $result->fetchArray();\n+\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n+\t\t\t\t<ul>\n+\t\t\t\t<li><h1>Deactivated Test Schedules</h1></li>';\n \n-\t\t\t\t\tif($row == false)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\tdo\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n-\t\t\t\t\t\t\t$result_tests = $stmt_tests->execute();\n-\t\t\t\t\t\t\t$row_tests = $result_tests->fetchArray();\n-\t\t\t\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n-\n-\t\t\t\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n-\t\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\twhile($row = $result->fetchArray());\n-\t\t\t\t\t}\n+\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State < 1 ORDER BY Title ASC');\n+\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t$result = $stmt->execute();\n+\t\t$row = $result->fetchArray();\n \n+\t\tif($row == false)\n+\t\t{\n+\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tdo\n+\t\t\t{\n+\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n+\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n+\t\t\t\t$result_tests = $stmt_tests->execute();\n+\t\t\t\t$row_tests = $result_tests->fetchArray();\n+\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n+\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n+\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n+\t\t\t}\n+\t\t\twhile($row = $result->fetchArray());\n+\t\t}\n \n-\t\t\t$main .= '</ul>\n-\t\t\t</div>';\n+\t\t$main .= '</ul>\n+\t\t</div>';\n \n-\t\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n-\t\t\techo phoromatic_webui_footer();\n+\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n+\t\techo phoromatic_webui_footer();\n \t}\n }\n "
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_search.php",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2014 - 2018, Phoronix Media\n-\tCopyright (C) 2014 - 2018, Michael Larabel\n+\tCopyright (C) 2014 - 2022, Phoronix Media\n+\tCopyright (C) 2014 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_search implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -178,8 +177,7 @@ protected static function search_test_systems($q)\n \t}\n \tpublic static function render_page_process($PATH)\n \t{\n-\t\t$search_query = $_REQUEST['search'];\n-\n+\t\t$search_query = pts_strings::sanitize($_REQUEST['search']);\n \t\t$main = null;\n \n \t\tif(strlen($search_query) < 4)"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_settings.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_settings implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_system_claim.php",
          "status": "modified",
          "additions": 35,
          "deletions": 36,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2015, Phoronix Media\n-\tCopyright (C) 2008 - 2015, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_system_claim implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -43,36 +42,36 @@ public static function render_page_process($PATH)\n \t\tif(!PHOROMATIC_USER_IS_VIEWER)\n \t\t{\n \n-if(function_exists('ssh2_connect') && isset($_POST['ip']) && isset($_POST['port']) && isset($_POST['password']) && isset($_POST['username']))\n-{\n-\t$connection = ssh2_connect($_POST['ip'], $_POST['port']);\n+\t\t\tif(function_exists('ssh2_connect') && isset($_POST['ip']) && isset($_POST['port']) && isset($_POST['password']) && isset($_POST['username']))\n+\t\t\t{\n+\t\t\t\t$connection = ssh2_connect($_POST['ip'], $_POST['port']);\n \n-\tif(ssh2_auth_password($connection, $_POST['username'], $_POST['password']))\n-\t{\n-\t\t$tmp_local_file = tempnam('/tmp', 'pts-ssh');\n-\t\t$tmp_remote_file = 'pts-ssh-' . rand(9999, 99999);\n-\n-\t\tfile_put_contents($tmp_local_file, '#!/bin/sh\n-if [ -w /var/lib/phoronix-test-suite/ ]\n-then\n-\tPHORO_FILE_PATH=/var/lib/phoronix-test-suite/\n-elif [ -w $HOME/.phoronix-test-suite/ ]\n-then\n-\tPHORO_FILE_PATH=$HOME/.phoronix-test-suite/\n-fi\n-\n-echo \"' . phoromatic_web_socket_server_ip() . '\" >> $PHORO_FILE_PATH/phoromatic-servers\n-mkdir -p $PHORO_FILE_PATH/modules-data/phoromatic\n-echo \"' . phoromatic_web_socket_server_addr() . '\" > $PHORO_FILE_PATH/modules-data/phoromatic/last-phoromatic-server\n-');\n-\n-\t\tssh2_scp_send($connection, $tmp_local_file, $tmp_remote_file);\n-\t\tunlink($tmp_local_file);\n-\t\tssh2_exec($connection, 'chmod +x ' . $tmp_remote_file);\n-\t\tssh2_exec($connection, './' . $tmp_remote_file);\n-\t\tssh2_exec($connection, 'rm' . $tmp_remote_file);\n-\t}\n-}\n+\t\t\t\tif(ssh2_auth_password($connection, $_POST['username'], $_POST['password']))\n+\t\t\t\t{\n+\t\t\t\t\t$tmp_local_file = tempnam('/tmp', 'pts-ssh');\n+\t\t\t\t\t$tmp_remote_file = 'pts-ssh-' . rand(9999, 99999);\n+\n+\t\t\t\t\tfile_put_contents($tmp_local_file, '#!/bin/sh\n+\t\t\tif [ -w /var/lib/phoronix-test-suite/ ]\n+\t\t\tthen\n+\t\t\t\tPHORO_FILE_PATH=/var/lib/phoronix-test-suite/\n+\t\t\telif [ -w $HOME/.phoronix-test-suite/ ]\n+\t\t\tthen\n+\t\t\t\tPHORO_FILE_PATH=$HOME/.phoronix-test-suite/\n+\t\t\tfi\n+\n+\t\t\techo \"' . phoromatic_web_socket_server_ip() . '\" >> $PHORO_FILE_PATH/phoromatic-servers\n+\t\t\tmkdir -p $PHORO_FILE_PATH/modules-data/phoromatic\n+\t\t\techo \"' . phoromatic_web_socket_server_addr() . '\" > $PHORO_FILE_PATH/modules-data/phoromatic/last-phoromatic-server\n+\t\t\t');\n+\n+\t\t\t\t\tssh2_scp_send($connection, $tmp_local_file, $tmp_remote_file);\n+\t\t\t\t\tunlink($tmp_local_file);\n+\t\t\t\t\tssh2_exec($connection, 'chmod +x ' . $tmp_remote_file);\n+\t\t\t\t\tssh2_exec($connection, './' . $tmp_remote_file);\n+\t\t\t\t\tssh2_exec($connection, 'rm' . $tmp_remote_file);\n+\t\t\t\t}\n+\t\t\t}\n \t\t\tif((isset($_POST['ip_claim']) && !empty($_POST['ip_claim'])) && isset($_POST['ping']))\n \t\t\t{\n \t\t\t\t$ip_ping = ip2long($_POST['ip_claim']) !== false ? $_POST['ip_claim'] : null;\n@@ -88,8 +87,8 @@ public static function render_page_process($PATH)\n \t\t\t{\n \t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_system_association_claims (AccountID, IPAddress, NetworkMAC, CreationTime) VALUES (:account_id, :ip_address, :mac_address, :creation_time)');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':ip_address', $_POST['ip_claim']);\n-\t\t\t\t$stmt->bindValue(':mac_address', $_POST['mac_claim']);\n+\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($_POST['ip_claim']));\n+\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($_POST['mac_claim']));\n \t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n \t\t\t\t$result = $stmt->execute();\n \t\t\t}\n@@ -98,8 +97,8 @@ public static function render_page_process($PATH)\n \t\t\t\tlist($ipc, $macc) = explode(',', $_POST['remove_claim']);\n \t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_system_association_claims WHERE AccountID = :account_id AND NetworkMAC = :mac_address AND IPAddress = :ip_address');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':ip_address', $ipc);\n-\t\t\t\t$stmt->bindValue(':mac_address', $macc);\n+\t\t\t\t$stmt->bindValue(':ip_address', pts_strings::simple($ipc));\n+\t\t\t\t$stmt->bindValue(':mac_address', pts_strings::simple($macc));\n \t\t\t\t$stmt->bindValue(':creation_time', phoromatic_server::current_time());\n \t\t\t\t$result = $stmt->execute();\n \t\t\t}"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_systems.php",
          "status": "modified",
          "additions": 14,
          "deletions": 15,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2021, Phoronix Media\n-\tCopyright (C) 2008 - 2021, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -42,11 +42,12 @@ public static function render_page_process($PATH)\n \n \t\tif(!PHOROMATIC_USER_IS_VIEWER && !empty($PATH[0]) && isset($_POST['system_title']) && !empty($_POST['system_title']) && isset($_POST['system_description']) && isset($_POST['system_state']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('system_title', 'system_description', 'system_state'));\n \t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Title = :title, Description = :description, State = :state, CurrentTask = \\'Awaiting Task\\', BlockPowerOffs = :block_power_offs WHERE AccountID = :account_id AND SystemID = :system_id');\n \t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t$stmt->bindValue(':system_id', $PATH[0]);\n-\t\t\t$stmt->bindValue(':title', $_POST['system_title']);\n-\t\t\t$stmt->bindValue(':description', $_POST['system_description']);\n+\t\t\t$stmt->bindValue(':title', pts_strings::simple($_POST['system_title']));\n+\t\t\t$stmt->bindValue(':description', pts_strings::sanitize($_POST['system_description']));\n \t\t\t$stmt->bindValue(':state', $_POST['system_state']);\n \t\t\t$stmt->bindValue(':block_power_offs', $_POST['block_power_offs']);\n \t\t\t$stmt->execute();\n@@ -383,7 +384,7 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t}\n \n-\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n+\t\t\t\t\t\t$main .= '<a href=\"?result/' . $test_result_row['PPRID'] . '\"><li>' . $test_result_row['Title'] . '<br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td></tr></table></li></a>';\n \t\t\t\t\t\t$results++;\n \n \t\t\t\t\t}\n@@ -471,6 +472,8 @@ public static function render_page_process($PATH)\n \n \t\t\t\tif($group)\n \t\t\t\t{\n+\t\t\t\t\tphoromatic_quit_if_invalid_input_found(array('new_group'));\n+\t\t\t\t\t$group = pts_strings::simple($group);\n \t\t\t\t\t$stmt = phoromatic_server::$db->prepare('INSERT INTO phoromatic_groups (AccountID, GroupName) VALUES (:account_id, :group_name)');\n \t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t\t\t$stmt->bindValue(':group_name', $group);\n@@ -529,18 +532,19 @@ public static function render_page_process($PATH)\n \t\t\t}\n \t\t\telse if(!PHOROMATIC_USER_IS_VIEWER && isset($_POST['remove_group']))\n \t\t\t{\n+\t\t\t\t$remove_group = pts_strings::sanitize($_POST['remove_group']);\n \t\t\t\t$stmt = phoromatic_server::$db->prepare('DELETE FROM phoromatic_groups WHERE AccountID = :account_id AND GroupName = :group_name');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t$stmt->bindValue(':group_name', $_POST['remove_group']);\n+\t\t\t\t$stmt->bindValue(':group_name', $remove_group);\n \t\t\t\t$stmt->execute();\n \t\t\t\tphoromatic_add_activity_stream_event('groups', $group, 'removed');\n \n-\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE \\'%#' . $_POST['remove_group'] . '#%\\'');\n+\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT SystemID, Groups FROM phoromatic_systems WHERE AccountID = :account_id AND Groups LIKE \\'%#' . $remove_group . '#%\\'');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t\t$result = $stmt->execute();\n \t\t\t\twhile($row = $result->fetchArray())\n \t\t\t\t{\n-\t\t\t\t\t$revised_groups = str_replace('#' . $_POST['remove_group'] . '#', '', $row['Groups']);\n+\t\t\t\t\t$revised_groups = str_replace('#' . $remove_group . '#', '', $row['Groups']);\n \n \t\t\t\t\t$stmt1 = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET Groups = :new_groups WHERE AccountID = :account_id AND SystemID = :system_id');\n \t\t\t\t\t$stmt1->bindValue(':account_id', $_SESSION['AccountID']);\n@@ -555,7 +559,7 @@ public static function render_page_process($PATH)\n \t\t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET State = :state WHERE AccountID = :account_id AND (julianday() - julianday(LastCommunication)) > :inactive_days_before_removal');\n \t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t\t$stmt->bindValue(':state', -1);\n-\t\t\t\t$stmt->bindValue(':inactive_days_before_removal', $_POST['remove_inactive_systems']);\n+\t\t\t\t$stmt->bindValue(':inactive_days_before_removal', pts_strings::sanitize($_POST['remove_inactive_systems']));\n \t\t\t\t$stmt->execute();\n \t\t\t}\n \n@@ -571,8 +575,8 @@ public static function render_page_process($PATH)\n \t\t\t\t<p><button onclick=\"javascript:window.location.replace(\\'?system_claim\\');\">Add Via SSH Or IP/MAC Claim</button></p>';\n \n \t\t\t}\n-\t\t\t$main .= '<hr />\n \n+\t\t\t$main .= '<hr />\n \t\t\t<h2>Systems</h2>\n \t\t\t<div class=\"pts_phoromatic_info_box_area\">\n \n@@ -639,7 +643,6 @@ public static function render_page_process($PATH)\n \t\t\t\t$main .= '</ul>';\n \t\t\t}\n \n-\n \t\t\t$main .= '</div>';\n \n \t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n@@ -730,19 +733,15 @@ public static function render_page_process($PATH)\n \t\t\t\t\t}\n \n \t\t\t\t\t$main .= '</table><p><input name=\"submit\" value=\"Update Groups\" type=\"submit\" /></p></form></div>';\n-\n \t\t\t\t\t$main .= '<hr /><h2>Remove A Group</h2><p>Removing a group is a permanent action that cannot be undone.</p>';\n-\n \t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_group\" method=\"post\"><select name=\"remove_group\" id=\"remove_group\">';\n \n \t\t\t\t\tforeach($all_groups as $group)\n \t\t\t\t\t{\n \t\t\t\t\t\t$main .= '<option value=\"' . $group . '\">' . $group . '</option>';\n \t\t\t\t\t}\n \t\t\t\t\t$main .= '</select> <input name=\"submit\" value=\"Remove Group\" type=\"submit\" /></form></p>';\n-\n \t\t\t\t\t$main .= '<hr /><h2>Retire Inactive Systems</h2><p>This option will soft-delete systems that have not communicated with this Phoromatic Server in more than one week (7 days).</p>';\n-\n \t\t\t\t\t$main .= '<p><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"remove_inactive\" method=\"post\"><input type=\"hidden\" name=\"remove_inactive_systems\" value=\"7\" /><input name=\"submit\" value=\"Remove Inactive Systems\" type=\"submit\" /></form></p>';\n \t\t\t\t}\n \t\t\t}"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_testing.php",
          "status": "modified",
          "additions": 78,
          "deletions": 82,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2016, Phoronix Media\n-\tCopyright (C) 2016, Michael Larabel\n+\tCopyright (C) 2016 - 2022, Phoronix Media\n+\tCopyright (C) 2016 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_testing implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -43,97 +42,94 @@ public static function render_page_process($PATH)\n \t\t$main = '<h1>Phoromatic Testing Options</h1><h2>Test Schedules</h2>\n \t\t\t<p>Test schedules are used for tests that are intended to be run on a recurring basis -- either daily or other defined time period -- or whenever a trigger/event occurs, like a new Git commit to a software repository being tracked. Test schedules can be run on any given system(s)/group(s) and can be later edited.</p>';\n \n-\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n+\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n+\t\t{\n+\t\t\t$main .= '\n+\t\t\t<hr />\n+\t\t\t<h2>Create A Schedule</h2>\n+\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n+\t\t}\n+\n+\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n+\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n+\t\t\t<ul>\n+\t\t\t<li><h1>Active Test Schedules</h1></li>';\n+\n+\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n+\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t$result = $stmt->execute();\n+\t\t$row = $result->fetchArray();\n+\n+\t\tif($row == false)\n+\t\t{\n+\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tdo\n \t\t\t{\n-\t\t\t\t$main .= '\n-\t\t\t\t<hr />\n-\t\t\t\t<h2>Create A Schedule</h2>\n-\t\t\t\t<p><a href=\"?sched\">Create a schedule</a> followed by adding tests/suites to run for that schedule on the selected systems.</p>';\n+\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n+\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n+\t\t\t\t$result_tests = $stmt_tests->execute();\n+\t\t\t\t$row_tests = $result_tests->fetchArray();\n+\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n+\n+\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n+\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n \t\t\t}\n+\t\t\twhile($row = $result->fetchArray());\n+\t\t}\n+\n+\t\t$main .= '</ul>\n+\t\t</div>';\n \n-\t\t\t$main .= '<hr /><h2>Current Schedules</h2>';\n+\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 AND TicketIssueTime > :time_cutoff ORDER BY TicketIssueTime DESC LIMIT 30');\n+\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n+\t\t$stmt->bindValue(':time_cutoff', (time() - (60 * 60 * 24 * 14)));\n+\t\t$result = $stmt->execute();\n+\t\t$right = '<ul><li>Benchmark Tickets</li>';\n \n+\t\tif($result)\n+\t\t{\n \t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n-\t\t\t\t\t<ul>\n-\t\t\t\t\t\t<li><h1>Active Test Schedules</h1></li>';\n-\n-\t\t\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT Title, ScheduleID, Description, RunTargetSystems, RunTargetGroups, RunAt, ActiveOn FROM phoromatic_schedules WHERE AccountID = :account_id AND State >= 1 ORDER BY Title ASC');\n-\t\t\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t$result = $stmt->execute();\n-\t\t\t\t\t$row = $result->fetchArray();\n-\n-\t\t\t\t\tif($row == false)\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Schedules Found</li>';\n-\t\t\t\t\t}\n-\t\t\t\t\telse\n-\t\t\t\t\t{\n-\t\t\t\t\t\tdo\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t$stmt_tests = phoromatic_server::$db->prepare('SELECT COUNT(*) AS TestCount FROM phoromatic_schedules_tests WHERE AccountID = :account_id AND ScheduleID = :schedule_id ORDER BY TestProfile ASC');\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t\t\t\t\t$stmt_tests->bindValue(':schedule_id', $row['ScheduleID']);\n-\t\t\t\t\t\t\t$result_tests = $stmt_tests->execute();\n-\t\t\t\t\t\t\t$row_tests = $result_tests->fetchArray();\n-\t\t\t\t\t\t\t$test_count = !empty($row_tests) ? $row_tests['TestCount'] : 0;\n-\n-\t\t\t\t\t\t\t$group_count = empty($row['RunTargetGroups']) ? 0 : count(explode(',', $row['RunTargetGroups']));\n-\t\t\t\t\t\t\t$main .= '<a href=\"?schedules/' . $row['ScheduleID'] . '\"><li>' . $row['Title'] . '<br /><table><tr><td>' . pts_strings::plural_handler(count(phoromatic_server::systems_associated_with_schedule($_SESSION['AccountID'], $row['ScheduleID'])), 'System') . '</td><td>' . pts_strings::plural_handler($group_count, 'Group') . '</td><td>' . pts_strings::plural_handler($test_count, 'Test') . '</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID']), 'Result') . ' Total</td><td>' . pts_strings::plural_handler(phoromatic_results_for_schedule($row['ScheduleID'], 'TODAY'), 'Result') . ' Today</td><td><strong>' . phoromatic_schedule_activeon_string($row['ActiveOn'], $row['RunAt']) . '</strong></td></tr></table></li></a>';\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\twhile($row = $result->fetchArray());\n-\t\t\t\t\t}\n-\n-\n-\t\t\t$main .= '</ul>\n-\t\t\t</div>';\n-\n-\t\t\t$stmt = phoromatic_server::$db->prepare('SELECT * FROM phoromatic_benchmark_tickets WHERE AccountID = :account_id AND State >= 0 AND TicketIssueTime > :time_cutoff ORDER BY TicketIssueTime DESC LIMIT 30');\n-\t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n-\t\t\t$stmt->bindValue(':time_cutoff', (time() - (60 * 60 * 24 * 14)));\n-\t\t\t$result = $stmt->execute();\n-\t\t\t$right = '<ul><li>Benchmark Tickets</li>';\n-\n-\t\t\tif($result)\n-\t\t\t{\n-\t\t\t\t$main .= '<div class=\"pts_phoromatic_info_box_area\">\n-\t\t\t\t\t\t<ul>\n-\t\t\t\t\t\t\t<li><h1>Active Benchmark Tickets</h1></li>';\n+\t\t\t\t<ul>\n+\t\t\t\t<li><h1>Active Benchmark Tickets</h1></li>';\n \n-\t\t\t\t$row = $result->fetchArray();\n+\t\t\t$row = $result->fetchArray();\n \n-\t\t\t\tif(!empty($row))\n-\t\t\t\t{\n-\t\t\t\t\tdo\n-\t\t\t\t\t{\n-\t\t\t\t\t\t$main .= '<a href=\"?benchmark/' . $row['TicketID'] . '\"><li>' . $row['Title'] . '</li></a>';\n-\t\t\t\t\t}\n-\t\t\t\t\twhile($row = $result->fetchArray());\n-\t\t\t\t}\n-\t\t\t\telse\n+\t\t\tif(!empty($row))\n+\t\t\t{\n+\t\t\t\tdo\n \t\t\t\t{\n-\t\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Tickets Found</li>';\t\n+\t\t\t\t\t$main .= '<a href=\"?benchmark/' . $row['TicketID'] . '\"><li>' . $row['Title'] . '</li></a>';\n \t\t\t\t}\n+\t\t\t\twhile($row = $result->fetchArray());\n \t\t\t}\n-\t\t\t$main .= '</ul>\n-\t\t\t</div>';\n-\n-\t\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n+\t\t\telse\n \t\t\t{\n-\t\t\t\t$main .= '\n-\t\t\t\t<hr />\n-\t\t\t\t<h2>Run A Benchmark</h2>\n-\t\t\t\t<p><a href=\"?benchmark\">Run a benchmark</a> is the area where you can run a one-time benchmark on selected system(s) and is also where to go for setting up a stress-run benchmark.</p>\n-\t\t\t\t<hr />\n-\t\t\t\t<h2>Create A Suite</h2>\n-\t\t\t\t<p><a href=\"?build_suite\">Build a suite</a>, which is a collection of predefined test profiles.</p>\n-\t\t\t\t<hr />\n-\t\t\t\t<h2>View Local Suites</h2>\n-\t\t\t\t<p><a href=\"?local_suites\">See local suites</a> available for your benchmarking needs.</p>';\n+\t\t\t\t$main .= '<li class=\"light\" style=\"text-align: center;\">No Tickets Found</li>';\t\n \t\t\t}\n-\n-\n-\t\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n-\t\t\techo phoromatic_webui_footer();\n+\t\t}\n+\t\t$main .= '</ul>\n+\t\t</div>';\n+\n+\t\tif(!PHOROMATIC_USER_IS_VIEWER)\n+\t\t{\n+\t\t\t$main .= '\n+\t\t\t<hr />\n+\t\t\t<h2>Run A Benchmark</h2>\n+\t\t\t<p><a href=\"?benchmark\">Run a benchmark</a> is the area where you can run a one-time benchmark on selected system(s) and is also where to go for setting up a stress-run benchmark.</p>\n+\t\t\t<hr />\n+\t\t\t<h2>Create A Suite</h2>\n+\t\t\t<p><a href=\"?build_suite\">Build a suite</a>, which is a collection of predefined test profiles.</p>\n+\t\t\t<hr />\n+\t\t\t<h2>View Local Suites</h2>\n+\t\t\t<p><a href=\"?local_suites\">See local suites</a> available for your benchmarking needs.</p>';\n+\t\t}\n+\n+\t\techo '<div id=\"pts_phoromatic_main_area\">' . $main . '</div>';\n+\t\techo phoromatic_webui_footer();\n \t}\n }\n "
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_tests.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_tests implements pts_webui_interface\n {\n \tpublic static function page_title()"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_tracker.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -177,7 +177,6 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\twhile($row = $result->fetchArray());\n \t\t\t\t\t}\n \n-\n \t\t\t$main .= '</ul>\n \t\t\t</div>';\n \t\t\t$right = null;"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_users.php",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2014 - 2015, Phoronix Media\n-\tCopyright (C) 2014 - 2015, Michael Larabel\n+\tCopyright (C) 2014 - 2022, Phoronix Media\n+\tCopyright (C) 2014 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_users implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -45,13 +44,15 @@ public static function render_page_process($PATH)\n \n \t\tif(isset($_POST['group_name']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('group_name'));\n \t\t\t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_accounts SET GroupName = :group_name WHERE AccountID = :account_id');\n-\t\t\t$stmt->bindValue(':group_name', $_POST['group_name']);\n+\t\t\t$stmt->bindValue(':group_name', pts_strings::simple($_POST['group_name']));\n \t\t\t$stmt->bindValue(':account_id', $_SESSION['AccountID']);\n \t\t\t$result = $stmt->execute();\n \t\t}\n \t\tif(isset($_POST['username']) && isset($_POST['password']) && isset($_POST['confirm_password']) && isset($_POST['email']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('username', 'email'));\n \t\t\t// REGISTER NEW USER\n \t\t\tif(strlen($_POST['username']) < 4 || strpos($_POST['username'], ' ') !== false)\n \t\t\t{\n@@ -240,7 +241,7 @@ public static function render_page_process($PATH)\n \t\t\t<p><input name=\"submit\" value=\"Add User\" type=\"submit\" /></p>\n \t\t\t</form>';\n \n-\t\t$group_name = phoromatic_account_id_to_group_name($_SESSION['AccountID']);\n+\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n \t\t$main .= '<hr /><form action=\"' . $_SERVER['REQUEST_URI'] . '\" name=\"group_name\" id=\"group_name\" method=\"post\"><h2>Group Name</h2>\n \t\t\t<p>A group name is an alternative, user-facing name for this set of accounts. The group name feature is primarily useful for being able to better distinguish results between groups when sharing of data within a large organization, etc. The group name is showed next to test results when viewing results from multiple groups/accounts.</p>\n \t\t\t<h3>Group Name</h3>"
        },
        {
          "filename": "pts-core/phoromatic/pages/phoromatic_welcome.php",
          "status": "modified",
          "additions": 6,
          "deletions": 7,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2015, Phoronix Media\n-\tCopyright (C) 2008 - 2015, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -20,7 +20,6 @@\n \talong with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n \n-\n class phoromatic_welcome implements pts_webui_interface\n {\n \tpublic static function page_title()\n@@ -42,6 +41,7 @@ public static function render_page_process($PATH)\n \n \t\tif($account_creation_enabled && isset($_POST['register_username']) && isset($_POST['register_password']) && isset($_POST['register_password_confirm']) && isset($_POST['register_email']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('register_username', 'register_email'));\n \t\t\t$new_account = create_new_phoromatic_account($_POST['register_username'], $_POST['register_password'], $_POST['register_password_confirm'], $_POST['register_email'], (isset($_POST['seed_accountid']) ? $_POST['seed_accountid'] : null));\n \n \t\t\tif($new_account)\n@@ -60,6 +60,7 @@ public static function render_page_process($PATH)\n \t\t}\n \t\telse if(isset($_POST['username']) && isset($_POST['password']) && strtolower($_POST['username']) == 'rootadmin')\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n \t\t\t$admin_pw = phoromatic_server::read_setting('root_admin_pw');\n \t\t\tif(empty($admin_pw))\n \t\t\t{\n@@ -94,6 +95,7 @@ public static function render_page_process($PATH)\n \t\t}\n \t\telse if(isset($_POST['username']) && isset($_POST['password']))\n \t\t{\n+\t\t\tphoromatic_quit_if_invalid_input_found(array('username'));\n \t\t\t$matching_user = phoromatic_server::$db->querySingle('SELECT UserName, Password, AccountID, UserID, AdminLevel, CreatedOn FROM phoromatic_users WHERE UserName = \\'' . SQLite3::escapeString($_POST['username']) . '\\'', true);\n \t\t\tif(!empty($matching_user))\n \t\t\t{\n@@ -223,8 +225,7 @@ public static function render_page_process($PATH)\n \t\t\telse\n \t\t\t{\n \n-\t\t\t\t$box .= '\n-\t\t\t\t\t\t\t<p id=\"register_link\"><a onclick=\"javascript:document.getElementById(\\'register\\').style.display = \\'block\\'; document.getElementById(\\'register_link\\').style.display = \\'none\\';\">Create A New Account</a></p>\n+\t\t\t\t$box .= '<p id=\"register_link\"><a onclick=\"javascript:document.getElementById(\\'register\\').style.display = \\'block\\'; document.getElementById(\\'register_link\\').style.display = \\'none\\';\">Create A New Account</a></p>\n \t\t\t<div style=\"display: none;\" id=\"register\">\n \n \n@@ -252,11 +253,9 @@ public static function render_page_process($PATH)\n \t\t\t\t\t\t<li class=\"label_input_wrapper\">\n \t\t\t\t\t\t\t<input type=\"submit\" value=\"Create Account\" />\n \t\t\t\t\t\t</li>\n-\n \t\t\t\t\t</ul>\n \n \t\t\t\t\t</form></div>';\n-\n \t\t\t}\n \t\t\t$box .= '<hr />\n \t\t\t<h1>View Public Results</h1>"
        },
        {
          "filename": "pts-core/phoromatic/phoromatic_functions.php",
          "status": "modified",
          "additions": 38,
          "deletions": 17,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2013 - 2020, Phoronix Media\n-\tCopyright (C) 2013 - 2020, Michael Larabel\n+\tCopyright (C) 2013 - 2022, Phoronix Media\n+\tCopyright (C) 2013 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -23,6 +23,34 @@\n define('PHOROMATIC_SERVER_WEB_INTERFACE', true);\n define('PAGE_LOAD_START_TIME', microtime(true));\n \n+function phoromatic_quit_if_invalid_input_found($input_keys = null)\n+{\n+\tif(empty($input_keys))\n+\t{\n+\t\t// Check them all if not being selective about what keys to check\n+\t\t$input_keys = array_keys($_REQUEST);\n+\t}\n+\t// backup as to sanitization and stripping elsewhere, safeguard namely check for things like < for fields that shouldn't have it\n+\t// plus a few simple backups as safeguards for words that really have no legit relevance within Phoromatic...\n+\n+\tforeach(array('<', 'document.write', '../', 'onerror', 'onload', 'alert(') as $invalid_string)\n+\t{\n+\t\tforeach($input_keys as $key)\n+\t\t{\n+\t\t\tif(isset($_REQUEST[$key]) && !empty($_REQUEST[$key]))\n+\t\t\t{\n+\t\t\t\tforeach(pts_arrays::to_array($_REQUEST[$key]) as $val_to_check)\n+\t\t\t\t{\n+\t\t\t\t\tif(stripos($val_to_check, $invalid_string) !== false)\n+\t\t\t\t\t{\n+\t\t\t\t\t\techo '<strong>Exited due to invalid input ( ' . $invalid_string . ') attempted:</strong> ' . htmlspecialchars($val_to_check);\n+\t\t\t\t\t\texit;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n function phoromatic_annotate_entry($type, $id, $secondary_id)\n {\n \t$annotate_hash = sha1($id . $secondary_id);\n@@ -64,7 +92,6 @@ function phoromatic_annotate_entry($type, $id, $secondary_id)\n \t$stmt->bindValue(':secondary_id', $secondary_id);\n \t$result = $stmt->execute();\n \t$row = $result->fetchArray();\n-\n \t$output = null;\n \n \tif($row)\n@@ -164,7 +191,7 @@ function phoromatic_webui_header($left_items, $right = null)\n \t{\n \t\t$ret .= '<ul id=\"pts_phoromatic_info\">';\n \t\t$ret .= '<li><a class=\"ph_date\" href=\"#\">' . date('H:i T - j F') . '</a></li>';\n-\t\t$group_name = phoromatic_account_id_to_group_name($_SESSION['AccountID']);\n+\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n \t\tif($group_name != null)\n \t\t{\n \t\t\t$ret .= '<li><a href=\"#\">' . $group_name . '</a></li>';\n@@ -211,6 +238,11 @@ function phoromatic_webui_header($left_items, $right = null)\n }\n function phoromatic_get_posted_var($name, $default_value = null)\n {\n+\tif(isset($_POST[$name]))\n+\t{\n+\t\tphoromatic_quit_if_invalid_input_found(array($name));\n+\t}\n+\n \treturn isset($_POST[$name]) ? $_POST[$name] : null;\n }\n function phoromatic_webui_main($main, $right = null)\n@@ -467,7 +499,7 @@ function phoromatic_webui_right_panel_logged_in($add = null)\n \t\t$row = $result->fetchArray();\n \t\t$activity_count = $row['ActivityCount'];\n \n-\t\t$group_name = phoromatic_account_id_to_group_name($_SESSION['AccountID']);\n+\t\t$group_name = phoromatic_server::account_id_to_group_name($_SESSION['AccountID']);\n \t\tif($group_name != null)\n \t\t{\n \t\t\t$group_name = '<strong>' . $group_name . '</strong><br />';\n@@ -539,10 +571,8 @@ function phoromatic_web_socket_server_addr()\n function phoromatic_error_page($title, $description)\n {\n \techo phoromatic_webui_header(array(''), '');\n-\n \t$box = '<h1>' . $title . '</h1>\n-\t\t<h2>' . $description . '</h2>\n-\t\t<p>To fix this error, try <a onclick=\"javascript:window.history.back();\">returning to the previous page</a>. Still having problems? Consider <a href=\"https://github.com/phoronix-test-suite/phoronix-test-suite/issues?state=open\">opening a GitHub issue report</a>; commercial support customers should contact Phoronix Media.</p><hr /><hr />';\n+\t\t<h2>' . $description . '</h2>';\n \techo phoromatic_webui_box($box);\n \techo phoromatic_webui_footer();\n }\n@@ -573,10 +603,6 @@ function phoromatic_systems_needing_attention()\n \n \treturn $main;\n }\n-function phoromatic_system_id_to_name($system_id, $aid = false)\n-{\n-\treturn phoromatic_server::system_id_to_name($system_id, $aid);\n-}\n function phoromatic_oldest_result_for_schedule($schedule_id)\n {\n \tstatic $old_time;\n@@ -609,11 +635,6 @@ function phoromatic_schedule_id_to_name($schedule_id)\n \n \treturn $schedule_names[$schedule_id];\n }\n-function phoromatic_account_id_to_group_name($account_id)\n-{\n-\t// XXX deprecated\n-\treturn phoromatic_server::account_id_to_group_name($account_id);\n-}\n function create_new_phoromatic_account($register_username, $register_password, $register_password_confirm, $register_email, $seed_accountid = null)\n {\n \t// REGISTER NEW USER"
        },
        {
          "filename": "pts-core/phoromatic/public_html/phoromatic.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -195,7 +195,7 @@\n \t$stmt->bindValue(':gsid', $GSID);\n \t$stmt->bindValue(':access_ip', $_SERVER['REMOTE_ADDR']);\n \t$stmt->bindValue(':local_ip', $LOCAL_IP);\n-\t$stmt->bindValue(':title', $HOSTNAME);\n+\t$stmt->bindValue(':title', pts_strings::simple($HOSTNAME));\n \t$stmt->bindValue(':current_time', phoromatic_server::current_time());\n \t$stmt->bindValue(':machine_self_id', $PTS_MACHINE_SELF_ID);\n \t$stmt->bindValue(':core_version', $CLIENT_CORE_VERSION);\n@@ -244,7 +244,7 @@\n \t$stmt = phoromatic_server::$db->prepare('UPDATE phoromatic_systems SET LastIP = :access_ip, LocalIP = :local_ip, LastCommunication = :current_time, Hardware = :client_hardware, Software = :client_software, SystemProperties = :phodevi_properties, ClientVersion = :client_version, MachineSelfID = :machine_self_id, NetworkMAC = :network_mac, NetworkWakeOnLAN = :network_wol, CoreVersion = :core_version WHERE AccountID = :account_id AND SystemID = :system_id');\n \t$stmt->bindValue(':account_id', $ACCOUNT_ID);\n \t$stmt->bindValue(':system_id', SYSTEM_ID);\n-\t$stmt->bindValue(':client_hardware', $CLIENT_HARDWARE);\n+\t$stmt->bindValue(':client_hardware', pts_strings::simple($CLIENT_HARDWARE));\n \t$stmt->bindValue(':client_software', $CLIENT_SOFTWARE);\n \t$stmt->bindValue(':phodevi_properties', $PHODEVI_PROPERTIES);\n \t$stmt->bindValue(':client_version', $CLIENT_VERSION);"
        },
        {
          "filename": "pts-core/phoromatic/public_html/public.php",
          "status": "modified",
          "additions": 11,
          "deletions": 53,
          "patch": "@@ -3,8 +3,8 @@\n /*\n \tPhoronix Test Suite\n \tURLs: http://www.phoronix.com, http://www.phoronix-test-suite.com/\n-\tCopyright (C) 2008 - 2021, Phoronix Media\n-\tCopyright (C) 2008 - 2021, Michael Larabel\n+\tCopyright (C) 2008 - 2022, Phoronix Media\n+\tCopyright (C) 2008 - 2022, Michael Larabel\n \n \tThis program is free software; you can redistribute it and/or modify\n \tit under the terms of the GNU General Public License as published by\n@@ -130,19 +130,19 @@\n \t\t\t\t$system_name = null;\n \t\t\t\tbreak;\n \t\t\tcase 'SYSTEM_NAME':\n-\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID'], $row['AccountID']);\n+\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID'], $row['AccountID']);\n \t\t\t\tbreak;\n \t\t\tcase 'TRIGGER':\n \t\t\t\t$system_name = $row['Trigger'];\n \t\t\t\tbreak;\n \t\t\tcase 'TRIGGER_AND_SYSTEM':\n-\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID'], $row['AccountID']) . ': ' . $row['Trigger'];\n+\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID'], $row['AccountID']) . ': ' . $row['Trigger'];\n \t\t\t\tbreak;\n \t\t\tcase 'SYSTEM_AND_SCHEDULE':\n \t\t\t\t$system_name = phoromatic_schedule_id_to_name($row['ScheduleID']) . ': ' . $row['Trigger'];\n \t\t\t\tbreak;\n \t\t\tdefault:\n-\t\t\t\t$system_name = phoromatic_system_id_to_name($row['SystemID'], $row['AccountID']) . ' - ' . phoromatic_schedule_id_to_name($row['ScheduleID']) . ' - ' . $row['Trigger'];\n+\t\t\t\t$system_name = phoromatic_server::system_id_to_name($row['SystemID'], $row['AccountID']) . ' - ' . phoromatic_schedule_id_to_name($row['ScheduleID']) . ' - ' . $row['Trigger'];\n \t\t}\n \n \t\t$rf = new pts_result_file($composite_xml);\n@@ -155,53 +155,11 @@\n \t$result_file->merge($result_files, $attributes);\n \t$extra_attributes = array();\n \n-\t$attribute_options = array(\n-\t\t'normalize_results' => 'normalize_result_buffer',\n-\t\t'sort_by_performance' => 'sort_result_buffer_values',\n-\t\t'sort_by_reverse' => 'reverse_result_buffer',\n-\t\t'sort_by_name' => 'sort_result_buffer',\n-\t\t'condense_comparison' => 'condense_multi_way',\n-\t\t);\n-\tforeach($attribute_options as $web_var => $attr_var)\n-\t{\n-\t\tif(isset($_REQUEST[$web_var]))\n-\t\t{\n-\t\t\t$extra_attributes[$attr_var] = true;\n-\t\t}\n-\t}\n-\n-\tif(isset($_POST['transpose_comparison']))\n-\t{\n-\t\t$result_file->invert_multi_way_invert();\n-\t}\n-\t$intent = null;\n-\t$main .= '<h1>' . $result_file->get_title() . '</h1>';\n-\t$main .= '<p>' . $result_file->get_description() . '</p>';\n-\t$main .= phoromatic_annotate_entry('RESULT', implode(',', $result_ids), 'TOP');\n-\n-\tif($result_file->get_system_count() == 1 || ($intent = pts_result_file_analyzer::analyze_result_file_intent($result_file, $intent, true)))\n-\t{\n-\t\t$table = new pts_ResultFileCompactSystemsTable($result_file, $intent);\n-\t}\n-\telse\n-\t{\n-\t\t$table = new pts_ResultFileSystemsTable($result_file);\n-\t}\n-\n-\t$main .= '<p style=\"text-align: center; overflow: auto;\" class=\"result_object\">' . pts_render::render_graph_inline_embed($table, $result_file, $extra_attributes) . '</p>';\n-\n-\t$table = new pts_ResultFileTable($result_file, $intent);\n-\t$main .= '<p style=\"text-align: center; overflow: auto;\" class=\"result_object\">' . pts_render::render_graph_inline_embed($table, $result_file, $extra_attributes) . '</p>';\n-\t$main .= '<div id=\"pts_results_area\">';\n-\tforeach($result_file->get_result_objects((isset($_POST['show_only_changed_results']) ? 'ONLY_CHANGED_RESULTS' : -1)) as $i => $result_object)\n-\t{\n-\t\t$main .= '<h2><a name=\"r-' . $i . '\"></a><a name=\"' . $result_object->get_comparison_hash(true, false) . '\"></a>' . $result_object->test_profile->get_title() . '</h2>';\n-\t\t$main .= phoromatic_annotate_entry('RESULT', implode(',', $result_ids), $result_object->get_comparison_hash(true, false));\n-\t\t$main .= '<p style=\"text-align: center; overflow: auto;\">';\n-\t\t$main .= pts_render::render_graph_inline_embed($result_object, $result_file, $extra_attributes);\n-\t\t$main .= '</p>';\n-\t}\n-\t$main .= '</div>';\n+\t$embed = new pts_result_viewer_embed($result_file);\n+\t$embed->show_html_result_table(false);\n+\t$embed->show_test_metadata_helper(false);\n+\t$embed->include_page_print_only_helpers(false);\n+\t$main .= $embed->get_html();\n }\n else\n {\n@@ -285,7 +243,7 @@\n \t\t\tbreak;\n \t\t}\n \n-\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'public.php?ut=' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n+\t\t$main .= '<a onclick=\"\"><li id=\"result_select_' . $test_result_row['PPRID'] . '\"><input type=\"checkbox\" id=\"result_compare_checkbox_' . $test_result_row['PPRID'] . '\" onclick=\"javascript:phoromatic_checkbox_toggle_result_comparison(\\'' . $test_result_row['PPRID'] . '\\');\" onchange=\"return false;\"></input> <span onclick=\"javascript:phoromatic_window_redirect(\\'public.php?ut=' . $test_result_row['PPRID'] . '\\');\">' . $test_result_row['Title'] . '</span><br /><table><tr><td>' . phoromatic_server::system_id_to_name($test_result_row['SystemID'], $test_result_row['AccountID']) . '</td><td>' . phoromatic_user_friendly_timedate($test_result_row['UploadTime']) .  '</td><td>' . $test_result_row['TimesViewed'] . ' Times Viewed</td></table></li></a>';\n \t\t$results++;\n \t}\n \tif($results == 0)"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f665ba8ee724331f5bc375715089ad6393bcf10e",
            "date": "2024-11-25T04:25:21Z",
            "author_login": "MingcongBai"
          },
          {
            "sha": "f6e9155e3f6260730aa382841fab5bcee77b52c4",
            "date": "2024-11-26T00:46:31Z",
            "author_login": "fuzzywalrus"
          },
          {
            "sha": "d68dcb9b8d38eab7b1d6a328777903a5f086d75a",
            "date": "2024-12-01T11:16:24Z",
            "author_login": "michaellarabel"
          },
          {
            "sha": "8c171bb197b4db85960da4de35b0f3045ba8b4ab",
            "date": "2024-11-24T13:54:36Z",
            "author_login": "michaellarabel"
          },
          {
            "sha": "5167450443b7ab8658e4c6662835271b6c53fd3b",
            "date": "2024-11-24T11:42:04Z",
            "author_login": "michaellarabel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "phoronix-test-suite is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-10T16:15:09.793",
    "last_modified": "2024-11-21T06:38:01.483",
    "fix_date": "2022-01-08T10:47:20Z"
  },
  "references": [
    {
      "url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/56fd0a3b69fb33c1c90a6017ed735889aaa59486",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2c0fe81b-0977-4e1e-b5d8-7646c9a7ebbd",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/57V2CSFU5MKWKL6RJUKMXSD4PCRFTMMQ/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BU7E6OOZCXS3ZWHOQ2AR7MKM56IN2R6R/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/phoronix-test-suite/phoronix-test-suite/commit/56fd0a3b69fb33c1c90a6017ed735889aaa59486",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2c0fe81b-0977-4e1e-b5d8-7646c9a7ebbd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/57V2CSFU5MKWKL6RJUKMXSD4PCRFTMMQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BU7E6OOZCXS3ZWHOQ2AR7MKM56IN2R6R/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.063627",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "phoronix-test-suite",
    "owner": "phoronix-test-suite",
    "created_at": "2014-01-12T04:56:38Z",
    "updated_at": "2025-01-13T15:46:25Z",
    "pushed_at": "2024-12-01T11:19:52Z",
    "size": 27052,
    "stars": 2576,
    "forks": 397,
    "open_issues": 186,
    "watchers": 2576,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 3292874,
      "Shell": 1904280,
      "JavaScript": 50744,
      "CSS": 36995,
      "HTML": 15639,
      "Batchfile": 3947
    },
    "commit_activity": {
      "total_commits_last_year": 25,
      "avg_commits_per_week": 0.4807692307692308,
      "days_active_last_year": 18
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T14:56:03.170356"
  }
}