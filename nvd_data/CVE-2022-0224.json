{
  "cve_id": "CVE-2022-0224",
  "github_data": {
    "repository": "dolibarr/dolibarr",
    "fix_commit": "b9b45fb50618aa8053961f50bc8604b188d0ea79",
    "related_commits": [
      "b9b45fb50618aa8053961f50bc8604b188d0ea79",
      "b9b45fb50618aa8053961f50bc8604b188d0ea79"
    ],
    "patch_url": "https://github.com/dolibarr/dolibarr/commit/b9b45fb50618aa8053961f50bc8604b188d0ea79.patch",
    "fix_commit_details": {
      "sha": "b9b45fb50618aa8053961f50bc8604b188d0ea79",
      "commit_date": "2022-01-13T17:34:15Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "Fix #hunterf1d1ce3e-ca92-4c7b-b1b8-934e28eaa486",
        "length": 91,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 13,
        "deletions": 5
      },
      "files": [
        {
          "filename": "htdocs/compta/sociales/list.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -206,7 +206,7 @@\n \t}\n }\n if (!empty($search_users)) {\n-\t$sql .= ' AND cs.fk_user IN('.implode(', ', $search_users).')';\n+\t$sql .= ' AND cs.fk_user IN ('.$db->sanitize(implode(', ', $search_users)).')';\n }\n if (!empty($search_type) && $search_type > 0) {\n \t$sql .= ' AND cs.fk_mode_reglement='.$search_type;"
        },
        {
          "filename": "test/phpunit/CodingPhpTest.php",
          "status": "modified",
          "additions": 12,
          "deletions": 4,
          "patch": "@@ -328,9 +328,14 @@ public function testPHP()\n \t\t\t$this->assertTrue($ok, 'Found non escaped string in building of a sql request '.$file['relativename'].': '.$val[0].' - Bad.');\n \t\t\t//exit;\n \n-\t\t\t// Check string 'IN (\".xxx' or 'IN (\\'.xxx'  with xxx that is not '$this->db->sanitize' and not '$db->sanitize'. It means we forget a db->sanitize when forging sql request.\n-\t\t\tpreg_match_all('/ IN \\([\\'\"]\\s*\\.\\s*(.........)/i', $filecontent, $matches, PREG_SET_ORDER);\n+\t\t\t// Checks with IN\n+\n+\t\t\t// Check string ' IN (\".xxx' or ' IN (\\'.xxx'  with xxx that is not '$this->db->sanitize' and not '$db->sanitize'. It means we forget a db->sanitize when forging sql request.\n+\t\t\t$ok=true;\n+\t\t\t$matches=array();\n+\t\t\tpreg_match_all('/\\s+IN\\s*\\([\\'\"]\\s*\\.\\s*(.........)/i', $filecontent, $matches, PREG_SET_ORDER);\n \t\t\tforeach ($matches as $key => $val) {\n+\t\t\t\t//var_dump($val);\n \t\t\t\tif (!in_array($val[1], array('$db->sani', '$this->db', 'getEntity', 'WON\\',\\'L', 'self::STA', 'Commande:', 'CommandeF', 'Entrepot:', 'Facture::', 'FactureFo', 'ExpenseRe', 'Societe::', 'Ticket::S'))) {\n \t\t\t\t\t$ok=false;\n \t\t\t\t\tbreak;\n@@ -341,9 +346,12 @@ public function testPHP()\n \t\t\t$this->assertTrue($ok, 'Found non sanitized string in building of a IN or NOT IN sql request '.$file['relativename'].' - Bad.');\n \t\t\t//exit;\n \n-\t\t\t// Check string 'IN (\\'\".xxx'   with xxx that is not '$this->db->sanitize' and not '$db->sanitize'. It means we forget a db->sanitize when forging sql request.\n-\t\t\tpreg_match_all('/ IN \\(\\'\"\\s*\\.\\s*(.........)/i', $filecontent, $matches, PREG_SET_ORDER);\n+\t\t\t// Check string ' IN (\\'\".xxx'   with xxx that is not '$this->db->sanitize' and not '$db->sanitize'. It means we forget a db->sanitize when forging sql request.\n+\t\t\t$ok=true;\n+\t\t\t$matches=array();\n+\t\t\tpreg_match_all('/\\s+IN\\s*\\(\\'\"\\s*\\.\\s*(.........)/i', $filecontent, $matches, PREG_SET_ORDER);\n \t\t\tforeach ($matches as $key => $val) {\n+\t\t\t\t//var_dump($val);\n \t\t\t\tif (!in_array($val[1], array('$db->sani', '$this->db', 'getEntity', 'WON\\',\\'L', 'self::STA', 'Commande:', 'CommandeF', 'Entrepot:', 'Facture::', 'FactureFo', 'ExpenseRe', 'Societe::', 'Ticket::S'))) {\n \t\t\t\t\t$ok=false;\n \t\t\t\t\tbreak;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "dolibarr is vulnerable to Improper Neutralization of Special Elements used in an SQL Command",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-14T18:15:10.243",
    "last_modified": "2024-11-21T06:38:10.810",
    "fix_date": "2022-01-13T17:34:15Z"
  },
  "references": [
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/b9b45fb50618aa8053961f50bc8604b188d0ea79",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f1d1ce3e-ca92-4c7b-b1b8-934e28eaa486",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/b9b45fb50618aa8053961f50bc8604b188d0ea79",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f1d1ce3e-ca92-4c7b-b1b8-934e28eaa486",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.028186",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T13:35:25Z",
    "size": 1507308,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1165,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:25:45.089853"
  }
}