{
  "cve_id": "CVE-2022-0414",
  "github_data": {
    "repository": "dolibarr/dolibarr",
    "fix_commit": "37fb02ee760cfff18c795ba468da1ba1c53f4684",
    "related_commits": [
      "37fb02ee760cfff18c795ba468da1ba1c53f4684",
      "37fb02ee760cfff18c795ba468da1ba1c53f4684"
    ],
    "patch_url": "https://github.com/dolibarr/dolibarr/commit/37fb02ee760cfff18c795ba468da1ba1c53f4684.patch",
    "fix_commit_details": {
      "sha": "37fb02ee760cfff18c795ba468da1ba1c53f4684",
      "commit_date": "2022-01-29T14:50:59Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "Fix #huntr76f3b405-9f5d-44b1-8434-b52b56ee395f",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 35,
        "additions": 23,
        "deletions": 12
      },
      "files": [
        {
          "filename": "htdocs/product/card.php",
          "status": "modified",
          "additions": 12,
          "deletions": 12,
          "patch": "@@ -1870,40 +1870,40 @@\n \t\t\t\tif (empty($conf->global->PRODUCT_DISABLE_WEIGHT)) {\n \t\t\t\t\t// Brut Weight\n \t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Weight\").'</td><td>';\n-\t\t\t\t\tprint '<input name=\"weight\" size=\"5\" value=\"'.$object->weight.'\"> ';\n-\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"weight_units\", \"weight\", $object->weight_units, 0, 2);\n+\t\t\t\t\tprint '<input name=\"weight\" size=\"5\" value=\"'.(GETPOSTISSET('weight') ? GETPOST('weight') : $object->weight).'\"> ';\n+\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"weight_units\", \"weight\", GETPOSTISSET('weight_units') ? GETPOST('weight_units') : $object->weight_units, 0, 2);\n \t\t\t\t\tprint '</td></tr>';\n \t\t\t\t}\n \n \t\t\t\tif (empty($conf->global->PRODUCT_DISABLE_SIZE)) {\n \t\t\t\t\t// Brut Length\n \t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Length\").' x '.$langs->trans(\"Width\").' x '.$langs->trans(\"Height\").'</td><td>';\n-\t\t\t\t\tprint '<input name=\"size\" size=\"5\" value=\"'.$object->length.'\">x';\n-\t\t\t\t\tprint '<input name=\"sizewidth\" size=\"5\" value=\"'.$object->width.'\">x';\n-\t\t\t\t\tprint '<input name=\"sizeheight\" size=\"5\" value=\"'.$object->height.'\"> ';\n-\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"size_units\", \"size\", $object->length_units, 0, 2);\n+\t\t\t\t\tprint '<input name=\"size\" size=\"5\" value=\"'.(GETPOSTISSET('size') ? GETPOST('size') : $object->length).'\">x';\n+\t\t\t\t\tprint '<input name=\"sizewidth\" size=\"5\" value=\"'.(GETPOSTISSET('sizewidth') ? GETPOST('sizewidth') : $object->width).'\">x';\n+\t\t\t\t\tprint '<input name=\"sizeheight\" size=\"5\" value=\"'.(GETPOSTISSET('sizeheight') ? GETPOST('sizeheight') : $object->height).'\"> ';\n+\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"size_units\", \"size\", GETPOSTISSET('size_units') ? GETPOST('size_units') : $object->length_units, 0, 2);\n \t\t\t\t\tprint '</td></tr>';\n \t\t\t\t}\n \t\t\t\tif (empty($conf->global->PRODUCT_DISABLE_SURFACE)) {\n \t\t\t\t\t// Brut Surface\n \t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Surface\").'</td><td>';\n-\t\t\t\t\tprint '<input name=\"surface\" size=\"5\" value=\"'.$object->surface.'\"> ';\n-\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"surface_units\", \"surface\", $object->surface_units, 0, 2);\n+\t\t\t\t\tprint '<input name=\"surface\" size=\"5\" value=\"'.(GETPOSTISSET('surface') ? GETPOST('surface') : $object->surface).'\"> ';\n+\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"surface_units\", \"surface\", GETPOSTISSET('surface_units') ? GETPOST('surface_units') : $object->surface_units, 0, 2);\n \t\t\t\t\tprint '</td></tr>';\n \t\t\t\t}\n \t\t\t\tif (empty($conf->global->PRODUCT_DISABLE_VOLUME)) {\n \t\t\t\t\t// Brut Volume\n \t\t\t\t\tprint '<tr><td>'.$langs->trans(\"Volume\").'</td><td>';\n-\t\t\t\t\tprint '<input name=\"volume\" size=\"5\" value=\"'.$object->volume.'\"> ';\n-\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"volume_units\", \"volume\", $object->volume_units, 0, 2);\n+\t\t\t\t\tprint '<input name=\"volume\" size=\"5\" value=\"'.(GETPOSTISSET('volume') ? GETPOST('volume') : $object->volume).'\"> ';\n+\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"volume_units\", \"volume\", GETPOSTISSET('volume_units') ? GETPOST('volume_units') : $object->volume_units, 0, 2);\n \t\t\t\t\tprint '</td></tr>';\n \t\t\t\t}\n \n \t\t\t\tif (!empty($conf->global->PRODUCT_ADD_NET_MEASURE)) {\n \t\t\t\t\t// Net Measure\n \t\t\t\t\tprint '<tr><td>'.$langs->trans(\"NetMeasure\").'</td><td>';\n-\t\t\t\t\tprint '<input name=\"net_measure\" size=\"5\" value=\"'.$object->net_measure.'\"> ';\n-\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"net_measure_units\", \"\", $object->net_measure_units, 0, 0);\n+\t\t\t\t\tprint '<input name=\"net_measure\" size=\"5\" value=\"'.(GETPOSTISSET('net_measure') ? GETPOST('net_measure') : $object->net_measure).'\"> ';\n+\t\t\t\t\tprint $formproduct->selectMeasuringUnits(\"net_measure_units\", \"\", GETPOSTISSET('net_measure_units') ? GETPOST('net_measure_units') : $object->net_measure_units, 0, 0);\n \t\t\t\t\tprint '</td></tr>';\n \t\t\t\t}\n \t\t\t}"
        },
        {
          "filename": "htdocs/product/class/product.class.php",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -860,6 +860,8 @@ public function create($user, $notrigger = 0)\n \t */\n \tpublic function verify()\n \t{\n+\t\tglobal $langs;\n+\n \t\t$this->errors = array();\n \n \t\t$result = 0;\n@@ -870,6 +872,15 @@ public function verify()\n \t\t\t$result = -2;\n \t\t}\n \n+\t\t$arrayofnonnegativevalue = array('weight'=>'Weight', 'width'=>'Width', 'height'=>'Height', 'length'=>'Length', 'surface'=>'Surface', 'volume'=>'Volume');\n+\t\tforeach ($arrayofnonnegativevalue as $key => $value) {\n+\t\t\tif (property_exists($this, $key) && $this->$key < 0) {\n+\t\t\t\t$langs->load(\"other\");\n+\t\t\t\t$this->errors[] = $langs->trans(\"FieldCannotBeNegative\", $langs->transnoentitiesnoconv($value));\n+\t\t\t\t$result = -4;\n+\t\t\t}\n+\t\t}\n+\n \t\t$rescode = $this->check_barcode($this->barcode, $this->barcode_type_code);\n \t\tif ($rescode) {\n \t\t\tif ($rescode == -1) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-1284",
    "description": "Improper Validation of Specified Quantity in Input in Packagist dolibarr/dolibarr prior to 16.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-31T11:15:07.993",
    "last_modified": "2024-11-21T06:38:34.677",
    "fix_date": "2022-01-29T14:50:59Z"
  },
  "references": [
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/37fb02ee760cfff18c795ba468da1ba1c53f4684",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/76f3b405-9f5d-44b1-8434-b52b56ee395f",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/37fb02ee760cfff18c795ba468da1ba1c53f4684",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/76f3b405-9f5d-44b1-8434-b52b56ee395f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.096557",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T13:35:25Z",
    "size": 1507308,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1165,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:25:45.089853"
  }
}