{
  "cve_id": "CVE-2022-0436",
  "github_data": {
    "repository": "gruntjs/grunt",
    "fix_commit": "aad3d4521c3098fb255fb2db8f2e1d691a033665",
    "related_commits": [
      "aad3d4521c3098fb255fb2db8f2e1d691a033665",
      "aad3d4521c3098fb255fb2db8f2e1d691a033665"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "aad3d4521c3098fb255fb2db8f2e1d691a033665",
      "commit_date": "2022-04-11T03:16:06Z",
      "author": {
        "login": "vladikoff",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update dependencies, tests...",
        "length": 29,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 50,
        "additions": 47,
        "deletions": 3
      },
      "files": [
        {
          "filename": "lib/grunt/file.js",
          "status": "modified",
          "additions": 22,
          "deletions": 1,
          "patch": "@@ -292,8 +292,11 @@ file.write = function(filepath, contents, options) {\n // Read a file, optionally processing its content, then write the output.\n // Or read a directory, recursively creating directories, reading files,\n // processing content, writing output.\n+// Handles symlinks by coping them as files or directories.\n file.copy = function copy(srcpath, destpath, options) {\n-  if (file.isDir(srcpath)) {\n+  if (file._isSymbolicLink(srcpath)) {\n+    file._copySymbolicLink(srcpath, destpath);\n+  } else if (file.isDir(srcpath)) {\n     // Copy a directory, recursively.\n     // Explicitly create new dest directory.\n     file.mkdir(destpath);\n@@ -449,6 +452,24 @@ file.isPathCwd = function() {\n   }\n };\n \n+file._isSymbolicLink = function() {\n+  var filepath = path.join.apply(path, arguments);\n+  return fs.lstatSync(filepath).isSymbolicLink();\n+};\n+\n+file._copySymbolicLink = function(srcpath, destpath) {\n+  var destdir = path.join(destpath, '..');\n+  var fileBase = path.basename(srcpath);\n+  // Use the correct relative path for the symlink\n+  if (!grunt.file.isPathAbsolute(srcpath)) {\n+    srcpath = path.relative(destdir, srcpath) || '.';\n+  }\n+  file.mkdir(destdir);\n+  var mode = grunt.file.isDir(srcpath) ? 'dir' : 'file';\n+  var destpath = path.join(destpath, fileBase);\n+  return fs.symlinkSync(srcpath, destpath, mode);\n+};\n+\n // Test to see if a filepath is contained within the CWD.\n file.isPathInCwd = function() {\n   var filepath = path.join.apply(path, arguments);"
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -42,7 +42,7 @@\n     \"exit\": \"~0.1.2\",\n     \"findup-sync\": \"~0.3.0\",\n     \"glob\": \"~7.1.6\",\n-    \"grunt-cli\": \"~1.4.2\",\n+    \"grunt-cli\": \"~1.4.3\",\n     \"grunt-known-options\": \"~2.0.0\",\n     \"grunt-legacy-log\": \"~3.0.0\",\n     \"grunt-legacy-util\": \"~2.0.1\",\n@@ -56,7 +56,7 @@\n   \"devDependencies\": {\n     \"difflet\": \"~1.0.1\",\n     \"eslint-config-grunt\": \"~1.0.1\",\n-    \"grunt-contrib-nodeunit\": \"~3.0.0\",\n+    \"grunt-contrib-nodeunit\": \"~4.0.0\",\n     \"grunt-contrib-watch\": \"~1.1.0\",\n     \"grunt-eslint\": \"~18.1.0\",\n     \"temporary\": \"~0.0.4\","
        },
        {
          "filename": "test/grunt/file_test.js",
          "status": "modified",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -893,5 +893,28 @@ exports.file = {\n       test.ok(grunt.file.isPathInCwd(path.resolve('deep')), 'subdirectory is in cwd');\n       test.done();\n     },\n+    'symbolicLinkCopy': function(test) {\n+      test.expect(4);\n+      var srcfile = new Tempdir();\n+      fs.symlinkSync(path.resolve('test/fixtures/octocat.png'), path.join(srcfile.path, 'octocat.png'), 'file');\n+      // test symlink copy for files\n+      var destdir = new Tempdir();\n+      grunt.file.copy(path.join(srcfile.path, 'octocat.png'), destdir.path);\n+      test.ok(fs.lstatSync(path.join(srcfile.path, 'octocat.png')).isSymbolicLink());\n+      test.ok(fs.lstatSync(path.join(destdir.path, 'octocat.png')).isSymbolicLink());\n+\n+      // test symlink copy for directories\n+      var srcdir = new Tempdir();\n+      var destdir = new Tempdir();\n+      var fixtures = path.resolve('test/fixtures');\n+      var symlinkSource = path.join(srcdir.path, path.basename(fixtures));\n+      console.log('symlinkSource', symlinkSource);\n+      fs.symlinkSync(fixtures, symlinkSource, 'dir');\n+\n+      grunt.file.copy(symlinkSource, destdir.path);\n+      test.ok(fs.lstatSync(symlinkSource).isSymbolicLink());\n+      test.ok(fs.lstatSync(path.join(destdir.path, path.basename(fixtures))).isSymbolicLink());\n+      test.done();\n+    },\n   }\n };"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa15bdc5b435e2938744658dec31ec29c3109afc",
            "date": "2024-11-03T00:51:31Z",
            "author_login": "vladikoff"
          },
          {
            "sha": "ee5b2a3480d520b442887451b86e596d971d94e6",
            "date": "2024-11-03T00:51:21Z",
            "author_login": "vladikoff"
          },
          {
            "sha": "c0e2b42efa4f590b624929d66e67a9f4e5c9ff46",
            "date": "2024-11-03T00:49:30Z",
            "author_login": "vladikoff"
          },
          {
            "sha": "c4f037ddaecca57092f30018196361bb299b7bc7",
            "date": "2024-10-05T09:24:56Z",
            "author_login": "stscoundrel"
          },
          {
            "sha": "5e53d802c5e1984916a05b0a74ccab64a4f2c7e3",
            "date": "2024-10-05T09:22:34Z",
            "author_login": "stscoundrel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-12T21:15:07.643",
    "last_modified": "2024-11-21T06:38:37.473",
    "fix_date": "2022-04-11T03:16:06Z"
  },
  "references": [
    {
      "url": "https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f55315e9-9f6d-4dbb-8c40-bae50c1ae92b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/04/msg00008.html",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f55315e9-9f6d-4dbb-8c40-bae50c1ae92b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/04/msg00008.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.376865",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "grunt",
    "owner": "gruntjs",
    "created_at": "2011-09-21T15:16:20Z",
    "updated_at": "2025-01-25T01:02:50Z",
    "pushed_at": "2024-11-03T00:51:31Z",
    "size": 2789,
    "stars": 12264,
    "forks": 1499,
    "open_issues": 161,
    "watchers": 12264,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "JavaScript": 167090
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:58:16.247089"
  }
}