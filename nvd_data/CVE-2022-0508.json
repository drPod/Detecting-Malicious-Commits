{
  "cve_id": "CVE-2022-0508",
  "github_data": {
    "repository": "chocobozzz/peertube",
    "fix_commit": "f33e515991a32885622b217bf2ed1d1b0d9d6832",
    "related_commits": [
      "f33e515991a32885622b217bf2ed1d1b0d9d6832",
      "f33e515991a32885622b217bf2ed1d1b0d9d6832"
    ],
    "patch_url": "https://github.com/chocobozzz/peertube/commit/f33e515991a32885622b217bf2ed1d1b0d9d6832.patch",
    "fix_commit_details": {
      "sha": "f33e515991a32885622b217bf2ed1d1b0d9d6832",
      "commit_date": "2022-02-07T10:21:25Z",
      "author": {
        "login": "Chocobozzz",
        "type": "User",
        "stats": {
          "total_commits": 7381,
          "average_weekly_commits": 17.657894736842106,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 332
        }
      },
      "commit_message": {
        "title": "Correctly check import target URL IP",
        "length": 36,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 70,
        "additions": 57,
        "deletions": 13
      },
      "files": [
        {
          "filename": "client/src/app/+videos/+video-edit/video-add-components/video-upload.component.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -9,7 +9,7 @@ import { genericUploadErrorHandler, scrollToTop } from '@app/helpers'\n import { FormValidatorService } from '@app/shared/shared-forms'\n import { BytesPipe, Video, VideoCaptionService, VideoEdit, VideoService } from '@app/shared/shared-main'\n import { LoadingBarService } from '@ngx-loading-bar/core'\n-import { HttpStatusCode, VideoCreateResult, VideoPrivacy } from '@shared/models'\n+import { HttpStatusCode, VideoCreateResult } from '@shared/models'\n import { UploaderXFormData } from './uploaderx-form-data'\n import { VideoSend } from './video-send'\n "
        },
        {
          "filename": "server/helpers/dns.ts",
          "status": "added",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -0,0 +1,29 @@\n+import { lookup } from 'dns'\n+import { parse as parseIP } from 'ipaddr.js'\n+\n+function dnsLookupAll (hostname: string) {\n+  return new Promise<string[]>((res, rej) => {\n+    lookup(hostname, { family: 0, all: true }, (err, adresses) => {\n+      if (err) return rej(err)\n+\n+      return res(adresses.map(a => a.address))\n+    })\n+  })\n+}\n+\n+async function isResolvingToUnicastOnly (hostname: string) {\n+  const addresses = await dnsLookupAll(hostname)\n+\n+  for (const address of addresses) {\n+    const parsed = parseIP(address)\n+\n+    if (parsed.range() !== 'unicast') return false\n+  }\n+\n+  return true\n+}\n+\n+export {\n+  dnsLookupAll,\n+  isResolvingToUnicastOnly\n+}"
        },
        {
          "filename": "server/middlewares/validators/videos/video-imports.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 11,
          "patch": "@@ -1,6 +1,6 @@\n import express from 'express'\n import { body, param } from 'express-validator'\n-import { isValid as isIPValid, parse as parseIP } from 'ipaddr.js'\n+import { isResolvingToUnicastOnly } from '@server/helpers/dns'\n import { isPreImportVideoAccepted } from '@server/lib/moderation'\n import { Hooks } from '@server/lib/plugins/hooks'\n import { MUserAccountId, MVideoImport } from '@server/types/models'\n@@ -76,17 +76,13 @@ const videoImportAddValidator = getCommonVideoEditAttributes().concat([\n     if (req.body.targetUrl) {\n       const hostname = new URL(req.body.targetUrl).hostname\n \n-      if (isIPValid(hostname)) {\n-        const parsed = parseIP(hostname)\n+      if (await isResolvingToUnicastOnly(hostname) !== true) {\n+        cleanUpReqFiles(req)\n \n-        if (parsed.range() !== 'unicast') {\n-          cleanUpReqFiles(req)\n-\n-          return res.fail({\n-            status: HttpStatusCode.FORBIDDEN_403,\n-            message: 'Cannot use non unicast IP as targetUrl.'\n-          })\n-        }\n+        return res.fail({\n+          status: HttpStatusCode.FORBIDDEN_403,\n+          message: 'Cannot use non unicast IP as targetUrl.'\n+        })\n       }\n     }\n "
        },
        {
          "filename": "server/tests/api/check-params/video-imports.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -120,7 +120,8 @@ describe('Test video imports API validator', function () {\n         'http://127.0.0.1',\n         'http://127.0.0.1/hello',\n         'https://192.168.1.42',\n-        'http://192.168.1.42'\n+        'http://192.168.1.42',\n+        'http://127.0.0.1.cpy.re'\n       ]\n \n       for (const targetUrl of targetUrls) {"
        },
        {
          "filename": "server/tests/helpers/dns.ts",
          "status": "added",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -0,0 +1,17 @@\n+/* eslint-disable @typescript-eslint/no-unused-expressions,@typescript-eslint/require-await */\n+\n+import 'mocha'\n+import { expect } from 'chai'\n+import { isResolvingToUnicastOnly } from '@server/helpers/dns'\n+\n+describe('DNS helpers', function () {\n+\n+  it('Should correctly check unicast IPs', async function () {\n+    expect(await isResolvingToUnicastOnly('cpy.re')).to.be.true\n+    expect(await isResolvingToUnicastOnly('framasoft.org')).to.be.true\n+    expect(await isResolvingToUnicastOnly('8.8.8.8')).to.be.true\n+\n+    expect(await isResolvingToUnicastOnly('127.0.0.1')).to.be.false\n+    expect(await isResolvingToUnicastOnly('127.0.0.1.cpy.re')).to.be.false\n+  })\n+})"
        },
        {
          "filename": "server/tests/helpers/index.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,5 +1,6 @@\n import './image'\n import './core-utils'\n+import './dns'\n import './comment-model'\n import './markdown'\n import './request'"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 5,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c31084ce5bc31a5ab0d1bfb014afe509e9d9e7a1",
            "date": "2025-01-04T16:19:34Z",
            "author_login": "zbirkenbuel"
          },
          {
            "sha": "4967d25d4619bf98dd30ddf68b780e683a844ba2",
            "date": "2025-01-14T12:27:18Z",
            "author_login": "Chocobozzz"
          },
          {
            "sha": "1a568cc65c3938a2832d4816cd5f34807b0f06f8",
            "date": "2025-01-14T12:25:17Z",
            "author_login": "Khyvodul"
          },
          {
            "sha": "e4b6021310447c5723cb08b5a11347f425d177d9",
            "date": "2025-01-14T10:37:03Z",
            "author_login": "Chocobozzz"
          },
          {
            "sha": "e0960c53a99e1d328f89bc726ee81c3f943cc904",
            "date": "2025-01-14T10:32:04Z",
            "author_login": "Chocobozzz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "Server-Side Request Forgery (SSRF) in GitHub repository chocobozzz/peertube prior to f33e515991a32885622b217bf2ed1d1b0d9d6832",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-08T11:15:07.797",
    "last_modified": "2024-11-21T06:38:48.230",
    "fix_date": "2022-02-07T10:21:25Z"
  },
  "references": [
    {
      "url": "https://github.com/chocobozzz/peertube/commit/f33e515991a32885622b217bf2ed1d1b0d9d6832",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c3724574-b6c9-430b-849b-40dd2b20f23c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/chocobozzz/peertube/commit/f33e515991a32885622b217bf2ed1d1b0d9d6832",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c3724574-b6c9-430b-849b-40dd2b20f23c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.146511",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "PeerTube",
    "owner": "chocobozzz",
    "created_at": "2015-10-29T22:09:42Z",
    "updated_at": "2025-01-14T12:54:05Z",
    "pushed_at": "2025-01-14T12:54:00Z",
    "size": 345923,
    "stars": 13329,
    "forks": 1538,
    "open_issues": 625,
    "watchers": 13329,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "TypeScript": 8063880,
      "HTML": 587956,
      "SCSS": 274504,
      "Shell": 34475,
      "Pug": 22110,
      "JavaScript": 12518,
      "Dockerfile": 332
    },
    "commit_activity": {
      "total_commits_last_year": 1307,
      "avg_commits_per_week": 25.134615384615383,
      "days_active_last_year": 233
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:52:13.645385"
  }
}