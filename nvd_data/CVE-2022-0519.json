{
  "cve_id": "CVE-2022-0519",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "6c4428f018d385fc80a33ecddcb37becea685dd5",
    "related_commits": [
      "6c4428f018d385fc80a33ecddcb37becea685dd5",
      "6c4428f018d385fc80a33ecddcb37becea685dd5"
    ],
    "patch_url": "https://github.com/radareorg/radare2/commit/6c4428f018d385fc80a33ecddcb37becea685dd5.patch",
    "fix_commit_details": {
      "sha": "6c4428f018d385fc80a33ecddcb37becea685dd5",
      "commit_date": "2022-02-08T13:50:10Z",
      "author": {
        "login": "trufae",
        "type": "User",
        "stats": {
          "total_commits": 1783,
          "average_weekly_commits": 2.140456182472989,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 235
        }
      },
      "commit_message": {
        "title": "Improve boundary checks to fix oobread segfaults ##crash",
        "length": 141,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 118,
        "additions": 67,
        "deletions": 51
      },
      "files": [
        {
          "filename": "shlr/java/class.c",
          "status": "modified",
          "additions": 67,
          "deletions": 51,
          "patch": "@@ -3627,6 +3627,9 @@ R_API ut64 r_bin_java_signature_attr_calc_size(RBinJavaAttrInfo *attr) {\n \n R_API RBinJavaAttrInfo *r_bin_java_enclosing_methods_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut64 offset = 6;\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \tif (!attr || sz < 10) {\n \t\tfree (attr);\n@@ -3715,27 +3718,24 @@ R_API ut64 r_bin_java_exceptions_attr_calc_size(RBinJavaAttrInfo *attr) {\n \n R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tRBinJavaClassesAttribute *icattr;\n-\tRBinJavaAttrInfo *attr = NULL;\n \tRBinJavaCPTypeObj *obj;\n \tut32 i = 0;\n \tut64 offset = 0, curpos;\n-\tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n-\toffset += 6;\n-\tif (buf_offset + offset + 8 > sz) {\n-\t\teprintf (\"Invalid amount of inner classes\\n\");\n+\tif (sz < 8) {\n \t\treturn NULL;\n \t}\n-\tif (attr == NULL) {\n-\t\t// TODO eprintf\n-\t\treturn attr;\n+\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n+\tif (!attr) {\n+\t\treturn NULL;\n \t}\n+\toffset += 6;\n \tattr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;\n \tattr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);\n \toffset += 2;\n \tattr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);\n \tfor (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {\n \t\tcurpos = buf_offset + offset;\n-\t\tif (buf_offset + offset + 8 > sz) {\n+\t\tif (offset + 8 > sz) {\n \t\t\teprintf (\"Invalid amount of inner classes\\n\");\n \t\t\tbreak;\n \t\t}\n@@ -3873,6 +3873,9 @@ R_API ut64 r_bin_java_line_number_table_attr_calc_size(RBinJavaAttrInfo *attr) {\n \n R_API RBinJavaAttrInfo *r_bin_java_source_debug_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut64 offset = 6;\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \tif (!attr) {\n \t\treturn NULL;\n@@ -3940,12 +3943,11 @@ R_API ut64 r_bin_java_local_variable_table_attr_calc_size(RBinJavaAttrInfo *attr\n R_API RBinJavaAttrInfo *r_bin_java_local_variable_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tRBinJavaLocalVariableAttribute *lvattr;\n \tut64 curpos = 0, offset = 6;\n-\tRBinJavaAttrInfo *attr;\n \tut32 i = 0;\n-\tif (!buffer || sz < 1) {\n+\tif (!bin || !buffer || sz < 8) {\n \t\treturn NULL;\n \t}\n-\tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n+\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \tif (!attr) {\n \t\treturn NULL;\n \t}\n@@ -4019,6 +4021,9 @@ R_API ut64 r_bin_java_local_variable_type_table_attr_calc_size(RBinJavaAttrInfo\n }\n \n R_API RBinJavaAttrInfo *r_bin_java_local_variable_type_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaLocalVariableTypeAttribute *lvattr;\n \tut64 offset = 6;\n \tut32 i = 0;\n@@ -4072,21 +4077,25 @@ R_API RBinJavaAttrInfo *r_bin_java_local_variable_type_table_attr_new(RBinJavaOb\n }\n \n R_API RBinJavaAttrInfo *r_bin_java_source_code_file_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n-\tif (!sz) {\n+\tif (!sz || sz == UT64_MAX) {\n+\t\treturn NULL;\n+\t}\n+#if 0\n+\t/// XXX this breaks tests\n+\tif (sz < 8) {\n \t\treturn NULL;\n \t}\n+#endif\n \tut64 offset = 0;\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \toffset += 6;\n-\tif (!attr) {\n-\t\treturn NULL;\n+\tif (attr) {\n+\t\tattr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;\n+\t\tattr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);\n+\t\toffset += 2;\n+\t\tattr->size = offset;\n+\t\t// IFDBG r_bin_java_print_source_code_file_attr_summary(attr);\n \t}\n-\tattr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;\n-\t// if (buffer + offset > buffer + sz) return NULL;\n-\tattr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);\n-\toffset += 2;\n-\tattr->size = offset;\n-\t// IFDBG r_bin_java_print_source_code_file_attr_summary(attr);\n \treturn attr;\n }\n \n@@ -4095,14 +4104,15 @@ R_API ut64 r_bin_java_source_code_file_attr_calc_size(RBinJavaAttrInfo *attr) {\n }\n \n R_API RBinJavaAttrInfo *r_bin_java_synthetic_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n-\tut64 offset = 0;\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \tif (!attr) {\n \t\treturn NULL;\n \t}\n-\toffset += 6;\n \tattr->type = R_BIN_JAVA_ATTR_TYPE_SYNTHETIC_ATTR;\n-\tattr->size = offset;\n+\tattr->size = 6;\n \treturn attr;\n }\n \n@@ -4133,24 +4143,21 @@ R_API RBinJavaInterfaceInfo *r_bin_java_interface_new(RBinJavaObj *bin, const ut\n \n R_API RBinJavaVerificationObj *r_bin_java_verification_info_from_type(RBinJavaObj *bin, R_BIN_JAVA_STACKMAP_TYPE type, ut32 value) {\n \tRBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);\n-\tif (!se) {\n-\t\treturn NULL;\n-\t}\n-\tse->tag = type;\n-\tif (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {\n-\t\tse->info.obj_val_cp_idx = (ut16) value;\n-\t} else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {\n-\t\t/*if (bin->offset_sz == 4) {\n-\t\tse->info.uninit_offset = value;\n-\t\t} else {\n-\t\tse->info.uninit_offset = (ut16) value;\n-\t\t}*/\n-\t\tse->info.uninit_offset = (ut16) value;\n+\tif (se) {\n+\t\tse->tag = type;\n+\t\tif (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {\n+\t\t\tse->info.obj_val_cp_idx = (ut16) value;\n+\t\t} else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {\n+\t\t\tse->info.uninit_offset = (ut16) value;\n+\t\t}\n \t}\n \treturn se;\n }\n \n R_API RBinJavaVerificationObj *r_bin_java_read_from_buffer_verification_info_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tut64 offset = 0;\n \tRBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);\n \tif (!se) {\n@@ -4270,6 +4277,9 @@ R_API ut64 r_bin_java_stack_map_frame_calc_size(RBinJavaStackMapFrame *sf) {\n }\n \n R_API RBinJavaStackMapFrame *r_bin_java_stack_map_frame_new(ut8 *buffer, ut64 sz, RBinJavaStackMapFrame *p_frame, ut64 buf_offset) {\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaStackMapFrame *stack_frame = r_bin_java_default_stack_frame ();\n \tRBinJavaVerificationObj *se = NULL;\n \tut64 offset = 0;\n@@ -4573,13 +4583,16 @@ R_API ut64 r_bin_java_stack_map_table_attr_calc_size(RBinJavaAttrInfo *attr) {\n R_API RBinJavaAttrInfo *r_bin_java_stack_map_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut32 i = 0;\n \tut64 offset = 0;\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaStackMapFrame *stack_frame = NULL, *new_stack_frame = NULL;\n \tif (sz < 10) {\n \t\treturn NULL;\n \t}\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \toffset += 6;\n-\tIFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");\n+\tIFDBG eprintf (\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");\n \tif (!attr) {\n \t\treturn NULL;\n \t}\n@@ -6354,8 +6367,10 @@ R_API ut64 r_bin_java_annotation_default_attr_calc_size(RBinJavaAttrInfo *attr)\n \n R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut64 offset = 0;\n-\tRBinJavaAttrInfo *attr = NULL;\n-\tattr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n+\tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);\n \toffset += 6;\n \tif (attr && sz >= offset) {\n \t\tattr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;\n@@ -6435,10 +6450,12 @@ R_API void r_bin_java_annotation_default_attr_free(void /*RBinJavaAttrInfo*/ *a)\n \n R_API RBinJavaAnnotation *r_bin_java_annotation_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut32 i = 0;\n-\tRBinJavaAnnotation *annotation = NULL;\n \tRBinJavaElementValuePair *evps = NULL;\n \tut64 offset = 0;\n-\tannotation = R_NEW0 (RBinJavaAnnotation);\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n+\tRBinJavaAnnotation *annotation = R_NEW0 (RBinJavaAnnotation);\n \tif (!annotation) {\n \t\treturn NULL;\n \t}\n@@ -6510,14 +6527,10 @@ R_API void r_bin_java_print_annotation_summary(RBinJavaAnnotation *annotation) {\n }\n \n R_API ut64 r_bin_java_element_pair_calc_size(RBinJavaElementValuePair *evp) {\n-\tut64 sz = 0;\n-\tif (evp == NULL) {\n-\t\treturn sz;\n-\t}\n-\t// evp->element_name_idx = r_bin_java_read_short(bin, bin->b->cur);\n-\tsz += 2;\n-\t// evp->value = r_bin_java_element_value_new (bin, offset+2);\n-\tif (evp->value) {\n+\tut64 sz = 2;\n+\tif (evp && evp->value) {\n+\t\t// evp->element_name_idx = r_bin_java_read_short(bin, bin->b->cur);\n+\t\t// evp->value = r_bin_java_element_value_new (bin, offset+2);\n \t\tsz += r_bin_java_element_value_calc_size (evp->value);\n \t}\n \treturn sz;\n@@ -6596,6 +6609,9 @@ R_API ut64 r_bin_java_element_value_calc_size(RBinJavaElementValue *element_valu\n R_API RBinJavaElementValue *r_bin_java_element_value_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut32 i = 0;\n \tut64 offset = 0;\n+\tif (sz < 8) {\n+\t\treturn NULL;\n+\t}\n \tRBinJavaElementValue *element_value = R_NEW0 (RBinJavaElementValue);\n \tif (!element_value) {\n \t\treturn NULL;\n@@ -7011,7 +7027,7 @@ R_API RBinJavaAnnotationsArray *r_bin_java_annotation_array_new(ut8 *buffer, ut6\n R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {\n \tut32 i = 0;\n \tut64 offset = 0;\n-\tif (buf_offset + 8 > sz) {\n+\tif (sz < 8) {\n \t\treturn NULL;\n \t}\n \tRBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bf6227e9295110ab97c8cf3237914acd6cfa09b0",
            "date": "2024-12-27T21:02:32Z",
            "author_login": "dennis-doyensec"
          },
          {
            "sha": "a7e958f9ebdf9771c36e8376078f027792981fea",
            "date": "2025-01-14T17:22:24Z",
            "author_login": "radare"
          },
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-805",
    "description": "Buffer Access with Incorrect Length Value in GitHub repository radareorg/radare2 prior to 5.6.2.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-08T21:15:19.797",
    "last_modified": "2024-11-21T06:38:49.703",
    "fix_date": "2022-02-08T13:50:10Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/6c4428f018d385fc80a33ecddcb37becea685dd5",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af85b9e1-d1cf-4c0e-ba12-525b82b7c1e3",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BZTIMAS53YT66FUS4QHQAFRJOBMUFG6D/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E6YBRQ3UCFWJVSOYIKPVUDASZ544TFND/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/6c4428f018d385fc80a33ecddcb37becea685dd5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af85b9e1-d1cf-4c0e-ba12-525b82b7c1e3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BZTIMAS53YT66FUS4QHQAFRJOBMUFG6D/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E6YBRQ3UCFWJVSOYIKPVUDASZ544TFND/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.148986",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:16.054007"
  }
}