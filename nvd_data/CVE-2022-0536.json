{
  "cve_id": "CVE-2022-0536",
  "github_data": {
    "repository": "follow-redirects/follow-redirects",
    "fix_commit": "62e546a99c07c3ee5e4e0718c84a6ca127c5c445",
    "related_commits": [
      "62e546a99c07c3ee5e4e0718c84a6ca127c5c445",
      "62e546a99c07c3ee5e4e0718c84a6ca127c5c445"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "62e546a99c07c3ee5e4e0718c84a6ca127c5c445",
      "commit_date": "2022-02-08T11:02:43Z",
      "author": {
        "login": "RubenVerborgh",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Drop confidential headers across schemes.",
        "length": 41,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 37,
        "deletions": 3
      },
      "files": [
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -392,8 +392,9 @@ RedirectableRequest.prototype._processResponse = function (response) {\n     var redirectUrlParts = url.parse(redirectUrl);\n     Object.assign(this._options, redirectUrlParts);\n \n-    // Drop the confidential headers when redirecting to another domain\n-    if (!(redirectUrlParts.host === currentHost || isSubdomainOf(redirectUrlParts.host, currentHost))) {\n+    // Drop confidential headers when redirecting to another scheme:domain\n+    if (redirectUrlParts.protocol !== currentUrlParts.protocol ||\n+       !isSameOrSubdomain(redirectUrlParts.host, currentHost)) {\n       removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n     }\n \n@@ -559,7 +560,10 @@ function abortRequest(request) {\n   request.abort();\n }\n \n-function isSubdomainOf(subdomain, domain) {\n+function isSameOrSubdomain(subdomain, domain) {\n+  if (subdomain === domain) {\n+    return true;\n+  }\n   const dot = subdomain.length - domain.length - 1;\n   return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n }"
        },
        {
          "filename": "test/test.js",
          "status": "modified",
          "additions": 30,
          "deletions": 0,
          "patch": "@@ -1522,6 +1522,36 @@ describe(\"follow-redirects\", function () {\n           });\n       });\n     });\n+\n+    it(\"drops the header when redirected to a different scheme\", function () {\n+      app.get(\"/a\", redirectsTo(302, \"http://localhost:3601/b\"));\n+      app.get(\"/b\", function (req, res) {\n+        res.end(JSON.stringify(req.headers));\n+      });\n+\n+      var opts = url.parse(\"https://localhost:3601/a\");\n+      opts.ca = ca;\n+      opts.headers = {};\n+      opts.headers[header] = \"the header value\";\n+\n+      // Intercept the scheme\n+      opts.beforeRedirect = function (options) {\n+        assert.equal(options.protocol, \"http:\");\n+        options.protocol = \"https:\";\n+      };\n+\n+      return server.start(httpsOptions(app))\n+        .then(asPromise(function (resolve, reject) {\n+          https.get(opts, resolve).on(\"error\", reject);\n+        }))\n+        .then(asPromise(function (resolve, reject, res) {\n+          res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);\n+        }))\n+        .then(function (str) {\n+          var body = JSON.parse(str);\n+          assert.equal(body[header.toLowerCase()], undefined);\n+        });\n+    });\n   });\n \n   describe(\"when the followRedirects option is set to false\", function () {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "694d6b47a42bc8377e5ef1480394de451e16bd5b",
            "date": "2024-10-11T15:08:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e4e55c77b2d849280d105943f49f42e0c735d05d",
            "date": "2024-09-06T08:56:25Z",
            "author_login": "RubenVerborgh"
          },
          {
            "sha": "31a1abf2d659ac1c8fcbe7e614a8c8914d80e1e3",
            "date": "2024-09-06T08:54:14Z",
            "author_login": "RubenVerborgh"
          },
          {
            "sha": "d2aaa97439e8a7e4a9cd02513ec7b12f23c17638",
            "date": "2024-09-03T21:45:36Z",
            "author_login": "RubenVerborgh"
          },
          {
            "sha": "62558f0cd106195f4c17ece3ad255eb93487d37f",
            "date": "2024-09-03T21:44:09Z",
            "author_login": "RubenVerborgh"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.6,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-212",
    "description": "Improper Removal of Sensitive Information Before Storage or Transfer in NPM follow-redirects prior to 1.14.8.\n\n",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-02-09T11:15:08.647",
    "last_modified": "2024-11-21T06:38:51.880",
    "fix_date": "2022-02-08T11:02:43Z"
  },
  "references": [
    {
      "url": "https://github.com/follow-redirects/follow-redirects/commit/62e546a99c07c3ee5e4e0718c84a6ca127c5c445",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db",
      "source": "security@huntr.dev",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/follow-redirects/follow-redirects/commit/62e546a99c07c3ee5e4e0718c84a6ca127c5c445",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.151344",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "follow-redirects",
    "owner": "follow-redirects",
    "created_at": "2012-11-15T00:01:16Z",
    "updated_at": "2025-01-20T14:49:54Z",
    "pushed_at": "2024-10-12T15:45:49Z",
    "size": 801,
    "stars": 552,
    "forks": 171,
    "open_issues": 16,
    "watchers": 552,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 107014
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:45:27.793354"
  }
}