{
  "cve_id": "CVE-2022-0565",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "7697f709a501860144352696e583a2533a6e1245",
    "related_commits": [
      "7697f709a501860144352696e583a2533a6e1245",
      "7697f709a501860144352696e583a2533a6e1245"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "7697f709a501860144352696e583a2533a6e1245",
      "commit_date": "2022-02-11T12:29:01Z",
      "author": {
        "login": "kingjia90",
        "type": "User",
        "stats": {
          "total_commits": 471,
          "average_weekly_commits": 0.9326732673267327,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 127
        }
      },
      "commit_message": {
        "title": "Svg sanitization (#11386)",
        "length": 496,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 107,
        "additions": 103,
        "deletions": 4
      },
      "files": [
        {
          "filename": "bundles/AdminBundle/Controller/Admin/SettingsController.php",
          "status": "modified",
          "additions": 20,
          "deletions": 4,
          "patch": "@@ -46,8 +46,11 @@\n use Symfony\\Component\\HttpKernel\\Event\\TerminateEvent;\n use Symfony\\Component\\HttpKernel\\KernelEvents;\n use Symfony\\Component\\HttpKernel\\KernelInterface;\n+use Symfony\\Component\\Mime\\MimeTypes;\n use Symfony\\Component\\Routing\\Annotation\\Route;\n use Symfony\\Component\\Yaml\\Yaml;\n+use enshrined\\svgSanitize\\Sanitizer;\n+\n \n /**\n  * @Route(\"/settings\")\n@@ -104,17 +107,30 @@ public function displayCustomLogoAction(Request $request)\n      */\n     public function uploadCustomLogoAction(Request $request)\n     {\n+        $sourcePath = $_FILES['Filedata']['tmp_name'];\n         $fileExt = File::getFileExtension($_FILES['Filedata']['name']);\n         if (!in_array($fileExt, ['svg', 'png', 'jpg'])) {\n             throw new \\Exception('Unsupported file format');\n         }\n \n-        if ($fileExt === 'svg' && stripos(file_get_contents($_FILES['Filedata']['tmp_name']), '<script')) {\n-            throw new \\Exception('Scripts in SVG files are not supported');\n-        }\n \n         $storage = Tool\\Storage::get('admin');\n-        $storage->writeStream(self::CUSTOM_LOGO_PATH, fopen($_FILES['Filedata']['tmp_name'], 'rb'));\n+\n+        $fileMimeType = MimeTypes::getDefault()->guessMimeType($sourcePath);\n+\n+        if ($fileMimeType === 'image/svg+xml') {\n+            $fileContent = file_get_contents($sourcePath);\n+\n+            $sanitizer = new Sanitizer();\n+            $sanitizedFileContent = $sanitizer->sanitize($fileContent);\n+            if ($sanitizedFileContent) {\n+                $storage->write(self::CUSTOM_LOGO_PATH, $sanitizedFileContent);\n+            }else{\n+                throw new \\Exception('SVG Sanitization failed, probably due badly formatted XML. Filename:'.$sourcePath);\n+            }\n+        }else {\n+            $storage->writeStream(self::CUSTOM_LOGO_PATH, fopen($sourcePath, 'rb'));\n+        }\n \n         // set content-type to text/html, otherwise (when application/json is sent) chrome will complain in\n         // Ext.form.Action.Submit and mark the submission as failed"
        },
        {
          "filename": "bundles/CoreBundle/EventListener/AssetSanitizationListener.php",
          "status": "added",
          "additions": 80,
          "deletions": 0,
          "patch": "@@ -0,0 +1,80 @@\n+<?php\n+\n+/**\n+ * Pimcore\n+ *\n+ * This source file is available under two different licenses:\n+ * - GNU General Public License version 3 (GPLv3)\n+ * - Pimcore Commercial License (PCL)\n+ * Full copyright and license information is available in\n+ * LICENSE.md which is distributed with this source code.\n+ *\n+ * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n+ * @license    http://www.pimcore.org/license     GPLv3 and PCL\n+ */\n+\n+namespace Pimcore\\Bundle\\CoreBundle\\EventListener;\n+\n+\n+use Pimcore\\Event\\AssetEvents;\n+use Pimcore\\Event\\Model\\ElementEventInterface;\n+use Pimcore\\Model\\Asset;\n+use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\n+use enshrined\\svgSanitize\\Sanitizer;\n+use Symfony\\Component\\Mime\\MimeTypes;\n+\n+/**\n+ * @internal\n+ */\n+class AssetSanitizationListener implements EventSubscriberInterface\n+{\n+    public static function getSubscribedEvents()\n+    {\n+        return [\n+            AssetEvents::PRE_ADD => 'sanitizeAsset',\n+            AssetEvents::PRE_UPDATE => 'sanitizeAsset',\n+        ];\n+    }\n+\n+    /**\n+     * @param ElementEventInterface $e\n+     */\n+    public function sanitizeAsset(ElementEventInterface $e)\n+    {\n+        $element = $e->getElement();\n+\n+        if ($element instanceof Asset\\Image && $element->getDataChanged()) {\n+            $assetStream = $element->getStream();\n+\n+            if (isset($assetStream)) {\n+                $streamMetaData = stream_get_meta_data($assetStream);\n+                $mime = MimeTypes::getDefault()->guessMimeType($streamMetaData['uri']);\n+\n+                if ($mime === 'image/svg+xml') {\n+                    $sanitizedData = $this->sanitizeSVG(stream_get_contents($assetStream));\n+                    $element->setData($sanitizedData);\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * @param string $fileContent\n+     *\n+     * @return string\n+     *\n+     * @throws \\Exception\n+     */\n+\n+    protected function sanitizeSVG(string $fileContent)\n+    {\n+        $sanitizer = new Sanitizer();\n+        $sanitizedFileContent = $sanitizer->sanitize($fileContent);\n+\n+        if (!$sanitizedFileContent) {\n+            throw new \\Exception('SVG Sanitization failed, probably due badly formatted XML.');\n+        }\n+\n+        return $sanitizedFileContent;\n+    }\n+}"
        },
        {
          "filename": "bundles/CoreBundle/Resources/config/event_listeners.yaml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -147,3 +147,5 @@ services:\n             $debugToolbarListener: '@?web_profiler.debug_toolbar'\n \n     Pimcore\\Bundle\\CoreBundle\\EventListener\\MessengerClearRuntimeCacheListener: ~\n+\n+    Pimcore\\Bundle\\CoreBundle\\EventListener\\AssetSanitizationListener: ~\n\\ No newline at end of file"
        },
        {
          "filename": "composer.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -59,6 +59,7 @@\n     \"symfony/doctrine-messenger\": \"^5.2.0\",\n     \"egulias/email-validator\": \"^3.0.0\",\n     \"endroid/qr-code\": \"^4\",\n+    \"enshrined/svg-sanitize\": \"^0.14.1\",\n     \"friendsofsymfony/jsrouting-bundle\": \"^2.7\",\n     \"geoip2/geoip2\": \"^2.9\",\n     \"google/apiclient\": \"^2.10\","
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8069dbf289a883420d0d044bbc625b70bfe6ab69",
            "date": "2025-01-24T08:43:32Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "ca25fd2d12528a83dc3e84b3391e109d5401ba1f",
            "date": "2025-01-24T08:28:47Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "d67add7f7a776c41749baecb4e7b17a0a7cef4bb",
            "date": "2025-01-22T09:34:54Z",
            "author_login": "bluvulture"
          },
          {
            "sha": "8462b49987cdcdba6e6cba997956561db46e0b3c",
            "date": "2025-01-22T08:21:33Z",
            "author_login": "bluvulture"
          },
          {
            "sha": "3c6946c51fa457835af5b9ecd6a6c07006b287a8",
            "date": "2025-01-21T15:14:51Z",
            "author_login": "alexz707"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:H",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting in Packagist pimcore/pimcore prior to 10.3.1.\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-14T12:15:21.947",
    "last_modified": "2024-11-21T06:38:55.793",
    "fix_date": "2022-02-11T12:29:01Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/7697f709a501860144352696e583a2533a6e1245",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b0b29656-4bbe-41cf-92f6-8579df0b6de5",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/7697f709a501860144352696e583a2533a6e1245",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b0b29656-4bbe-41cf-92f6-8579df0b6de5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.706240",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-24T13:32:34Z",
    "pushed_at": "2025-01-24T11:49:46Z",
    "size": 524713,
    "stars": 3468,
    "forks": 1456,
    "open_issues": 492,
    "watchers": 3468,
    "has_security_policy": false,
    "default_branch": "12.x",
    "protected_branches": [
      "11.5",
      "12.x"
    ],
    "languages": {
      "PHP": 6723770,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 610,
      "avg_commits_per_week": 11.73076923076923,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:37:53.640257"
  }
}