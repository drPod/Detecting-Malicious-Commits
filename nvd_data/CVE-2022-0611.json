{
  "cve_id": "CVE-2022-0611",
  "github_data": {
    "repository": "snipe/snipe-it",
    "fix_commit": "321be4733d3997fc738f0118e1b9af5905f95439",
    "related_commits": [
      "321be4733d3997fc738f0118e1b9af5905f95439",
      "321be4733d3997fc738f0118e1b9af5905f95439"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "321be4733d3997fc738f0118e1b9af5905f95439",
      "commit_date": "2022-02-14T23:58:19Z",
      "author": {
        "login": "snipe",
        "type": "User",
        "stats": {
          "total_commits": 11879,
          "average_weekly_commits": 25.65658747300216,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 416
        }
      },
      "commit_message": {
        "title": "Merge pull request #10672 from snipe/fixes/missing_gates_for_maintenances",
        "length": 120,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 13,
        "additions": 13,
        "deletions": 0
      },
      "files": [
        {
          "filename": "app/Http/Controllers/Api/AssetMaintenancesController.php",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -33,6 +33,7 @@ class AssetMaintenancesController extends Controller\n      */\n     public function index(Request $request)\n     {\n+        $this->authorize('view', Asset::class);\n         $maintenances = AssetMaintenance::with('asset', 'asset.model','asset.location', 'supplier', 'asset.company', 'admin');\n \n         if ($request->filled('search')) {\n@@ -101,6 +102,7 @@ public function index(Request $request)\n      */\n     public function store(Request $request)\n     {\n+        $this->authorize('edit', Asset::class);\n         // create a new model instance\n         $assetMaintenance = new AssetMaintenance();\n         $assetMaintenance->supplier_id = $request->input('supplier_id');\n@@ -153,6 +155,7 @@ public function store(Request $request)\n      */\n     public function update(Request $request, $assetMaintenanceId = null)\n     {\n+        $this->authorize('edit', Asset::class);\n         // Check if the asset maintenance exists\n         $assetMaintenance = AssetMaintenance::findOrFail($assetMaintenanceId);\n \n@@ -216,6 +219,7 @@ public function update(Request $request, $assetMaintenanceId = null)\n      */\n     public function destroy($assetMaintenanceId)\n     {\n+        $this->authorize('edit', Asset::class);\n         // Check if the asset maintenance exists\n         $assetMaintenance = AssetMaintenance::findOrFail($assetMaintenanceId);\n \n@@ -241,6 +245,7 @@ public function destroy($assetMaintenanceId)\n      */\n     public function show($assetMaintenanceId)\n     {\n+        $this->authorize('view', Asset::class);\n         $assetMaintenance = AssetMaintenance::findOrFail($assetMaintenanceId);\n         if (!Company::isCurrentUserHasAccess($assetMaintenance->asset)) {\n             return response()->json(Helper::formatStandardApiResponse('error', null, 'You cannot view a maintenance for that asset'));"
        },
        {
          "filename": "app/Http/Controllers/AssetMaintenancesController.php",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -50,6 +50,7 @@ private static function getInsufficientPermissionsRedirect()\n     */\n     public function index()\n     {\n+        $this->authorize('view', Asset::class);\n         return view('asset_maintenances/index');\n     }\n \n@@ -66,6 +67,7 @@ public function index()\n      */\n     public function create()\n     {\n+        $this->authorize('edit', Asset::class);\n         $asset = null;\n \n         if ($asset = Asset::find(request('asset_id'))) {\n@@ -96,6 +98,7 @@ public function create()\n     */\n     public function store(Request $request)\n     {\n+        $this->authorize('edit', Asset::class);\n         // create a new model instance\n         $assetMaintenance = new AssetMaintenance();\n         $assetMaintenance->supplier_id = $request->input('supplier_id');\n@@ -148,6 +151,7 @@ public function store(Request $request)\n     */\n     public function edit($assetMaintenanceId = null)\n     {\n+        $this->authorize('edit', Asset::class);\n         // Check if the asset maintenance exists\n         if (is_null($assetMaintenance = AssetMaintenance::find($assetMaintenanceId))) {\n             // Redirect to the improvement management page\n@@ -200,6 +204,7 @@ public function edit($assetMaintenanceId = null)\n      */\n     public function update(Request $request, $assetMaintenanceId = null)\n     {\n+        $this->authorize('edit', Asset::class);\n         // Check if the asset maintenance exists\n         if (is_null($assetMaintenance = AssetMaintenance::find($assetMaintenanceId))) {\n             // Redirect to the asset maintenance management page\n@@ -266,6 +271,7 @@ public function update(Request $request, $assetMaintenanceId = null)\n     */\n     public function destroy($assetMaintenanceId)\n     {\n+        $this->authorize('edit', Asset::class);\n         // Check if the asset maintenance exists\n         if (is_null($assetMaintenance = AssetMaintenance::find($assetMaintenanceId))) {\n             // Redirect to the asset maintenance management page\n@@ -294,6 +300,8 @@ public function destroy($assetMaintenanceId)\n     */\n     public function show($assetMaintenanceId)\n     {\n+        $this->authorize('view', Asset::class);\n+\n         // Check if the asset maintenance exists\n         if (is_null($assetMaintenance = AssetMaintenance::find($assetMaintenanceId))) {\n             // Redirect to the asset maintenance management page"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ac6caf257b5edf2de657ddd061855791d127629",
            "date": "2025-01-22T21:49:55Z",
            "author_login": "snipe"
          },
          {
            "sha": "36f460d32b930b4fce243cb2875cb95b8dbc7544",
            "date": "2025-01-22T21:48:03Z",
            "author_login": "snipe"
          },
          {
            "sha": "802fcbafa0be89e55fcb81e111b8d2d3631ea5c5",
            "date": "2025-01-22T18:50:12Z",
            "author_login": "snipe"
          },
          {
            "sha": "1098b8cd9d5534091a0b7d222cfec169836db084",
            "date": "2025-01-22T18:21:30Z",
            "author_login": "marcusmoore"
          },
          {
            "sha": "da8999f59a3c88728268bb8a62758eaa8494087d",
            "date": "2025-01-22T18:21:18Z",
            "author_login": "marcusmoore"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-862",
    "description": "Missing Authorization in Packagist snipe/snipe-it prior to 5.3.11.\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-16T00:15:07.347",
    "last_modified": "2024-11-21T06:39:01.350",
    "fix_date": "2022-02-14T23:58:19Z"
  },
  "references": [
    {
      "url": "https://github.com/snipe/snipe-it/commit/321be4733d3997fc738f0118e1b9af5905f95439",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7b7447fc-f1b0-446c-b016-ee3f6511010b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/snipe/snipe-it/commit/321be4733d3997fc738f0118e1b9af5905f95439",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7b7447fc-f1b0-446c-b016-ee3f6511010b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.717411",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "snipe-it",
    "owner": "snipe",
    "created_at": "2013-11-12T22:25:47Z",
    "updated_at": "2025-01-26T02:55:32Z",
    "pushed_at": "2025-01-23T13:04:35Z",
    "size": 225352,
    "stars": 11561,
    "forks": 3267,
    "open_issues": 1802,
    "watchers": 11561,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 18242858,
      "JavaScript": 1859768,
      "Blade": 1579878,
      "Less": 196531,
      "CSS": 79574,
      "Shell": 43713,
      "Dockerfile": 4408,
      "Python": 522,
      "Jinja": 229,
      "Procfile": 57
    },
    "commit_activity": {
      "total_commits_last_year": 3742,
      "avg_commits_per_week": 71.96153846153847,
      "days_active_last_year": 250
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:36:10.425407"
  }
}