{
  "cve_id": "CVE-2022-0624",
  "github_data": {
    "repository": "ionicabizau/parse-path",
    "fix_commit": "f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8",
    "related_commits": [
      "f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8",
      "f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8"
    ],
    "patch_url": "https://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8.patch",
    "fix_commit_details": {
      "sha": "f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8",
      "commit_date": "2022-06-27T08:35:20Z",
      "author": {
        "login": "IonicaBizau",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Refactor the codebase to make it more secure",
        "length": 44,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 261,
        "additions": 114,
        "deletions": 147
      },
      "files": [
        {
          "filename": "lib/index.js",
          "status": "modified",
          "additions": 38,
          "deletions": 102,
          "patch": "@@ -1,8 +1,4 @@\n-// Dependencies\n const protocols = require(\"protocols\")\n-    , isSsh = require(\"is-ssh\")\n-    , qs = require(\"query-string\")\n-    ;\n \n /**\n  * parsePath\n@@ -25,110 +21,50 @@ const protocols = require(\"protocols\")\n  *  - `query` (Object): The url querystring, parsed as object.\n  */\n function parsePath(url) {\n-    url = (url || \"\").trim().replace(/\\r?\\n|\\r/gm, \"\")\n-    var output = {\n-            protocols: protocols(url)\n-          , protocol: null\n-          , port: null\n-          , resource: \"\"\n-          , user: \"\"\n-          , pathname: \"\"\n-          , hash: \"\"\n-          , search: \"\"\n-          , href: url\n-          , query: Object.create(null)\n-        }\n-      , protocolIndex = url.indexOf(\"://\")\n-      , resourceIndex = -1\n-      , splits = null\n-      , parts = null\n-      ;\n \n-    if (url.startsWith(\".\")) {\n-        if (url.startsWith(\"./\")) {\n-            url = url.substring(2);\n-        }\n-        output.pathname = url;\n-        output.protocol = \"file\";\n+    const output = {\n+        protocols: []\n+      , protocol: null\n+      , port: null\n+      , resource: \"\"\n+      , user: \"\"\n+      , password: \"\"\n+      , pathname: \"\"\n+      , hash: \"\"\n+      , search: \"\"\n+      , href: url\n+      , query: {}\n     }\n \n-    const firstChar = url.charAt(1)\n-    if (!output.protocol) {\n+    try {\n+        const parsed = new URL(url)\n+        output.protocols = protocols(parsed)\n         output.protocol = output.protocols[0]\n-        if (!output.protocol) {\n-            if (isSsh(url)) {\n-                output.protocol = \"ssh\"\n-            } else if (firstChar === \"/\" || firstChar === \"~\") {\n-                url = url.substring(2)\n-                output.protocol = \"file\"\n-            } else {\n-                output.protocol = \"file\"\n-            }\n-        }\n-    }\n-\n-    if (protocolIndex !== -1) {\n-        url = url.substring(protocolIndex + 3);\n-    }\n-\n-    parts = url.split(/\\/|\\\\/);\n-    if (output.protocol !== \"file\") {\n-        output.resource = parts.shift();\n-    } else {\n-        output.resource = \"\";\n-    }\n-\n-    // user@domain\n-    splits = output.resource.split(\"@\");\n-    if (splits.length === 2) {\n-        output.user = splits[0];\n-        output.resource = splits[1];\n-    }\n-\n-\n-    // domain.com:port\n-    splits = output.resource.split(\":\");\n-    if (splits.length === 2) {\n-        output.resource = splits[0];\n-        const port = splits[1];\n-        if (port) {\n-            output.port = Number(port);\n-            if (isNaN(output.port) || port.match(/^\\d+$/) === null) {\n-                output.port = null;\n-                parts.unshift(port);\n-            }\n-        } else {\n-            output.port = null\n-        }\n-    }\n-\n-    // Remove empty elements\n-    parts = parts.filter(Boolean);\n-\n-    // Stringify the pathname\n-    if (output.protocol === \"file\") {\n-        output.pathname = output.href\n-    } else {\n-      output.pathname = output.pathname || ((output.protocol !== \"file\" || output.href[0] === \"/\" ? \"/\" : \"\") + parts.join(\"/\"));\n-    }\n-\n-    // #some-hash\n-    splits = output.pathname.split(\"#\");\n-    if (splits.length === 2) {\n-        output.pathname = splits[0];\n-        output.hash = splits[1];\n-    }\n-\n-    // ?foo=bar\n-    splits = output.pathname.split(\"?\");\n-    if (splits.length === 2) {\n-        output.pathname = splits[0];\n-        output.search = splits[1];\n+        output.port = parsed.port\n+        output.resource =  parsed.host\n+        output.user = parsed.username || \"\"\n+        output.password = parsed.password || \"\"\n+        output.pathname = parsed.pathname\n+        output.hash = parsed.hash.slice(1)\n+        output.search = parsed.search.slice(1)\n+        output.href = parsed.href\n+        output.query = Object.fromEntries(parsed.searchParams)\n+    } catch (e) {\n+        // TODO Maybe check if it is a valid local file path\n+        //      In any case, these will be parsed by higher\n+        //      level parsers such as parse-url, git-url-parse, git-up\n+        output.protocols = [\"file\"]\n+        output.protocol = output.protocols[0]\n+        output.port = \"\"\n+        output.resource =  \"\"\n+        output.user = \"\"\n+        output.pathname = \"\"\n+        output.hash = \"\"\n+        output.search = \"\"\n+        output.href = url\n+        output.query = {}\n     }\n \n-    output.query = qs.parse(output.search);\n-    output.href = output.href.replace(/\\/$/, \"\")\n-    output.pathname = output.pathname.replace(/\\/$/, \"\")\n     return output;\n }\n "
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -52,4 +52,4 @@\n     \"bloggify.json\",\n     \"bloggify/\"\n   ]\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "test/index.js",
          "status": "modified",
          "additions": 75,
          "deletions": 44,
          "patch": "@@ -1,7 +1,6 @@\n // Dependencies\n const parseUrl = require(\"../lib\")\n     , tester = require(\"tester\")\n-    , qs = require(\"querystring\")\n     ;\n \n const INPUTS = [\n@@ -10,189 +9,221 @@ const INPUTS = [\n       , {\n             protocols: [ \"http\" ]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"ionicabizau.net\"\n           , user: \"\"\n           , pathname: \"/blog\"\n           , hash: \"\"\n           , search: \"\"\n+          , href: \"http://ionicabizau.net/blog\"\n+          , query: {}\n         }\n     ]\n   , [\n         \"    http://ionicabizau.net/blog   \"\n       , {\n             protocols: [ \"http\" ]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"ionicabizau.net\"\n           , user: \"\"\n           , pathname: \"/blog\"\n           , hash: \"\"\n           , search: \"\"\n+          , href: \"http://ionicabizau.net/blog\"\n+          , query: {}\n         }\n     ]\n   , [\n         \"http://domain.com/path/name?foo=bar&bar=42#some-hash\"\n       , {\n             protocols: [\"http\"]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"domain.com\"\n           , user: \"\"\n           , pathname: \"/path/name\"\n           , hash: \"some-hash\"\n           , search: \"foo=bar&bar=42\"\n+          , query: { foo: \"bar\", bar: \"42\" }\n+          , href: \"http://domain.com/path/name?foo=bar&bar=42#some-hash\"\n         }\n     ]\n   , [\n         \"http://domain.com/path/name#some-hash?foo=bar&bar=42\"\n       , {\n             protocols: [\"http\"]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"domain.com\"\n           , user: \"\"\n           , pathname: \"/path/name\"\n           , hash: \"some-hash?foo=bar&bar=42\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"http://domain.com/path/name#some-hash?foo=bar&bar=42\"\n         }\n     ]\n   , [\n         \"git+ssh://git@host.xz/path/name.git\"\n       , {\n             protocols: [\"git\", \"ssh\"]\n           , protocol: \"git\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"host.xz\"\n           , user: \"git\"\n           , pathname: \"/path/name.git\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"git+ssh://git@host.xz/path/name.git\"\n         }\n     ]\n   , [\n+        // NOTE:parse-path will look at this as a local path\n+        //      For parsing it as url, please use parse-url\n         \"git@github.com:IonicaBizau/git-stats.git\"\n       , {\n-            protocols: []\n-          , protocol: \"ssh\"\n-          , port: null\n-          , resource: \"github.com\"\n-          , user: \"git\"\n-          , pathname: \"/IonicaBizau/git-stats.git\"\n+            protocols: [\"file\"]\n+          , protocol: \"file\"\n+          , port: \"\"\n+          , resource: \"\"\n+          , user: \"\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"git@github.com:IonicaBizau/git-stats.git\"\n         }\n     ]\n   , [\n         \"/path/to/file.png\"\n       , {\n-            protocols: []\n+            protocols: [\"file\"]\n           , protocol: \"file\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"\"\n           , user: \"\"\n-          , pathname: \"/path/to/file.png\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"/path/to/file.png\"\n         }\n     ]\n   , [\n         \"./path/to/file.png\"\n       , {\n-            protocols: []\n+            protocols: [\"file\"]\n           , protocol: \"file\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"\"\n           , user: \"\"\n-          , pathname: \"./path/to/file.png\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"./path/to/file.png\"\n         }\n     ]\n   , [\n         \"./.path/to/file.png\"\n       , {\n-            protocols: []\n+            protocols: [\"file\"]\n           , protocol: \"file\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"\"\n           , user: \"\"\n-          , pathname: \"./.path/to/file.png\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"./.path/to/file.png\"\n         }\n     ]\n   , [\n         \".path/to/file.png\"\n       , {\n-            protocols: []\n+            protocols: [\"file\"]\n           , protocol: \"file\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"\"\n           , user: \"\"\n-          , pathname: \".path/to/file.png\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \".path/to/file.png\"\n         }\n     ]\n   , [\n         \"path/to/file.png\"\n       , {\n-            protocols: []\n+            protocols: [\"file\"]\n           , protocol: \"file\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"\"\n           , user: \"\"\n-          , pathname: \"path/to/file.png\"\n+          , pathname: \"\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n+          , href: \"path/to/file.png\"\n         }\n     ], [\n       \"git@github.com:9IonicaBizau/git-stats.git\"\n     , {\n-          protocols: []\n-        , protocol: \"ssh\"\n-        , port: null\n-        , resource: \"github.com\"\n-        , user: \"git\"\n-        , pathname: \"/9IonicaBizau/git-stats.git\"\n+          protocols: [\"file\"]\n+        , protocol: \"file\"\n+        , port: \"\"\n+        , resource: \"\"\n+        , user: \"\"\n+        , pathname: \"\"\n         , hash: \"\"\n         , search: \"\"\n+        , query: {}\n+        , href: \"git@github.com:9IonicaBizau/git-stats.git\"\n       }\n     ], [\n       \"git@github.com:0xABC/git-stats.git\"\n     , {\n-          protocols: []\n-        , protocol: \"ssh\"\n-        , port: null\n-        , resource: \"github.com\"\n-        , user: \"git\"\n-        , pathname: \"/0xABC/git-stats.git\"\n+          protocols: [\"file\"]\n+        , protocol: \"file\"\n+        , port: \"\"\n+        , resource: \"\"\n+        , user: \"\"\n+        , pathname: \"\"\n         , hash: \"\"\n         , search: \"\"\n+        , query: {}\n+        , href: \"git@github.com:0xABC/git-stats.git\"\n       }\n     ], [\n       \"https://attacker.com\\\\@example.com\"\n     , {\n           protocols: [\"https\"]\n         , protocol: \"https\"\n-        , port: null\n+        , port: \"\"\n         , resource: \"attacker.com\"\n         , user: \"\"\n         , pathname: \"/@example.com\"\n         , hash: \"\"\n         , search: \"\"\n+        , href: \"https://attacker.com/@example.com\"\n+        , query: {}\n       }\n   ], [\n       \"jav\\r\\nascript://%0aalert(1)\"\n     , {\n           protocols: [\"javascript\"]\n         , protocol: \"javascript\"\n-        , port: null\n+        , port: \"\"\n         , resource: \"%0aalert(1)\"\n         , user: \"\"\n         , pathname: \"\"\n         , hash: \"\"\n+        , href: \"javascript://%0aalert(1)\"\n+        , query: {}\n         , search: \"\"\n       }\n   ]\n@@ -201,9 +232,9 @@ const INPUTS = [\n tester.describe(\"check urls\", test => {\n     INPUTS.forEach(function (c) {\n         test.should(\"support \" + c[0], () => {\n-            c[1].href = c[0].trim().replace(/\\r?\\n|\\r/gm, \"\");\n-            c[1].query = qs.parse(c[1].search)\n-            test.expect(parseUrl(c[0])).toEqual(c[1]);\n+            const cParsed = parseUrl(c[0])\n+            debugger\n+            test.expect(cParsed).toEqual(c[1]);\n         });\n     });\n });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c53b17e228fd09e2e072ce0d9c6076cf7bb879da",
            "date": "2022-08-03T08:11:13Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "a0269b12b3f3eb4ce4a1b5a9a6da24832d3d2d8f",
            "date": "2022-08-03T08:10:12Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "e3ee527ab36be1166f72d1654a5a6e31f18c866a",
            "date": "2022-08-03T08:10:00Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "4bae19e8e0e6b8566201387c1b1e664a9e87b904",
            "date": "2022-08-03T08:09:55Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "3d1525d9ec72f5a1ad67b438bed95dd752ed3413",
            "date": "2022-07-25T09:17:35Z",
            "author_login": "IonicaBizau"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-639",
    "description": "Authorization Bypass Through User-Controlled Key in GitHub repository ionicabizau/parse-path prior to 5.0.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-28T09:15:08.343",
    "last_modified": "2024-11-21T06:39:03.603",
    "fix_date": "2022-06-27T08:35:20Z"
  },
  "references": [
    {
      "url": "https://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/afffb2bd-fb06-4144-829e-ecbbcbc85388",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/afffb2bd-fb06-4144-829e-ecbbcbc85388",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.492129",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-path",
    "owner": "ionicabizau",
    "created_at": "2015-08-06T15:03:31Z",
    "updated_at": "2024-07-16T13:21:35Z",
    "pushed_at": "2022-08-03T08:11:25Z",
    "size": 74,
    "stars": 20,
    "forks": 10,
    "open_issues": 1,
    "watchers": 20,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 11152
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:00:31.971518"
  }
}