{
  "cve_id": "CVE-2022-0689",
  "github_data": {
    "repository": "microweber/microweber",
    "fix_commit": "c3c25ae6c421bb4a65df9e0035edcc2f75594a04",
    "related_commits": [
      "c3c25ae6c421bb4a65df9e0035edcc2f75594a04",
      "c3c25ae6c421bb4a65df9e0035edcc2f75594a04"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c3c25ae6c421bb4a65df9e0035edcc2f75594a04",
      "commit_date": "2022-02-19T15:43:46Z",
      "author": {
        "login": "peter-mw",
        "type": "User",
        "stats": {
          "total_commits": 7991,
          "average_weekly_commits": 14.992495309568481,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 413
        }
      },
      "commit_message": {
        "title": "update",
        "length": 6,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 151,
        "additions": 121,
        "deletions": 30
      },
      "files": [
        {
          "filename": "src/MicroweberPackages/Cart/CartManager.php",
          "status": "modified",
          "additions": 75,
          "deletions": 19,
          "patch": "@@ -30,8 +30,7 @@ public function __construct($app = null)\n             $this->app = mw();\n         }\n \n-        $coupon_code = $this->app->user_manager->session_get('coupon_code');\n-        $this->coupon_data = coupon_get_by_code($coupon_code);\n+\n     }\n \n     /**\n@@ -41,7 +40,7 @@ public function __construct($app = null)\n      */\n     public function sum($return_amount = true)\n     {\n-        if($return_amount ){\n+        if ($return_amount) {\n             return $this->app->cart_repository->getCartAmount();\n         } else {\n             return $this->app->cart_repository->getCartItemsCount();\n@@ -182,26 +181,45 @@ public function get_discount()\n \n     public function get_discount_type()\n     {\n-        if (empty($this->coupon_data)) {\n+        $data = $this->couponCodeGetDataFromSession();\n+        if (empty($data)) {\n             return false;\n         }\n+        if (isset($data['discount_type'])) {\n+            return $data['discount_type'];\n+        }\n+        return false;\n+    }\n \n-        return  $this->coupon_data['discount_type'];\n+    public function set_coupon_data($data)\n+    {\n+        $this->coupon_data = $data;\n     }\n \n     public function get_discount_value()\n     {\n-        if (empty($this->coupon_data)) {\n+        $data = $this->couponCodeGetDataFromSession();\n+\n+\n+        if (empty($data)) {\n+            return false;\n+        }\n+\n+        if (!isset($data['discount_value'])) {\n+            return false;\n+        }\n+\n+        if (!isset($data['total_amount'])) {\n             return false;\n         }\n \n         $apply_code = false;\n-        if ($this->sum() >= $this->coupon_data['total_amount']) {\n+        if ($this->sum() >= $data['total_amount']) {\n             $apply_code = true;\n         }\n \n         if ($apply_code) {\n-            return floatval($this->coupon_data['discount_value']);\n+            return floatval($data['discount_value']);\n         }\n \n         return false;\n@@ -353,9 +371,9 @@ public function remove_item($data)\n         $cart = array();\n         $cart['id'] = intval($data['id']);\n \n-       // if ($this->app->user_manager->is_admin() == false) {\n+        // if ($this->app->user_manager->is_admin() == false) {\n         $cart['session_id'] = mw()->user_manager->session_id();\n-       // }\n+        // }\n \n         $cart['order_completed'] = 0;\n         $cart['one'] = 1;\n@@ -574,9 +592,9 @@ public function update_cart($data)\n         $skip_keys = array();\n \n         $content_custom_fields = $this->app->fields_manager->get([\n-            'rel_type'=>$for,\n-            'rel_id'=>$for_id,\n-            'return_full'=>true,\n+            'rel_type' => $for,\n+            'rel_id' => $for_id,\n+            'return_full' => true,\n         ]);\n \n         $product_prices = array();\n@@ -738,7 +756,7 @@ public function update_cart($data)\n                         $cart['qty'] = $update_qty_new;\n                     } else {\n                         $cart['qty'] = $check_cart['qty'] + 1;\n-                     }\n+                    }\n                 }\n             } else {\n                 if ($update_qty > 0) {\n@@ -911,16 +929,54 @@ public function is_product_in_stock($content_id)\n         $item = content_data($content_id);\n         $isInStock = true;\n         if ($item) {\n-                if (isset($item['qty']) and $item['qty'] != 'nolimit' ) {\n-                    $quantity =intval( $item['qty']);\n-                    if ($quantity < 1) {\n-                        $isInStock = false;\n-                    }\n+            if (isset($item['qty']) and $item['qty'] != 'nolimit') {\n+                $quantity = intval($item['qty']);\n+                if ($quantity < 1) {\n+                    $isInStock = false;\n                 }\n+            }\n \n         }\n \n         return $isInStock;\n     }\n \n+    public function couponCodeGetDataFromSession()\n+    {\n+        $coupon_code = $this->app->user_manager->session_get('coupon_code');\n+        if ($coupon_code and !$this->couponCodeCheckIfValid($coupon_code)) {\n+            //check if coupon is valid\n+            if (function_exists('coupons_delete_session')) {\n+                coupons_delete_session();\n+            }\n+\n+            $this->coupon_data = false;\n+        } else {\n+            if (function_exists('coupon_get_by_code')) {\n+                $this->coupon_data = coupon_get_by_code($coupon_code);\n+            } else {\n+                $this->coupon_data = false;\n+            }\n+        }\n+        return $this->coupon_data;\n+    }\n+\n+    public function couponCodeCheckIfValid($coupon_code)\n+    {\n+        if (function_exists('coupon_apply')) {\n+            //check if coupon is valid\n+            $coupon_valid = coupon_apply([\n+                'coupon_code' => $coupon_code,\n+                'coupon_check_if_valid' => true\n+            ]);\n+            if (!$coupon_valid) {\n+                return false;\n+            }\n+            return true;\n+        }\n+        return false;\n+\n+    }\n+\n+\n }"
        },
        {
          "filename": "src/MicroweberPackages/Checkout/CheckoutManager.php",
          "status": "modified",
          "additions": 28,
          "deletions": 5,
          "patch": "@@ -434,6 +434,32 @@ public function checkout($data)\n                 }\n             }\n \n+\n+            // Discount details save\n+            if ($coupon_code) {\n+                $place_order['promo_code'] = $coupon_code;\n+                $place_order['coupon_id'] = $coupon_id;\n+                $place_order['discount_type'] = $discount_type;\n+                $place_order['discount_value'] = $discount_value;\n+\n+\n+                if (!$this->app->cart_manager->couponCodeCheckIfValid($coupon_code)) {\n+                    //check if coupon is valid\n+                    if(function_exists('coupons_delete_session')){\n+                        coupons_delete_session();\n+                    }\n+\n+                    $place_order['promo_code'] = '';\n+                    $place_order['coupon_id'] ='';\n+                    $place_order['discount_type'] = '';\n+                    $place_order['discount_value'] ='';\n+                }\n+            }\n+\n+\n+\n+\n+\n             $amount = $this->app->shop_manager->cart_total();\n             $tax = $this->app->cart_manager->get_tax();\n \n@@ -498,11 +524,6 @@ public function checkout($data)\n             }\n \n \n-            // Discount details save\n-            $place_order['promo_code'] = $coupon_code;\n-            $place_order['coupon_id'] = $coupon_id;\n-            $place_order['discount_type'] = $discount_type;\n-            $place_order['discount_value'] = $discount_value;\n \n \n             // convert currency to payment provider currency\n@@ -1426,4 +1447,6 @@ private function _build_url(array $elements)\n             (isset($e['query']) ? '?' . (is_array($e['query']) ? http_build_query($e['query'], '', '&') : $e['query']) : '') .\n             (isset($e['fragment']) ? \"#$e[fragment]\" : '');\n     }\n+\n+\n }"
        },
        {
          "filename": "userfiles/modules/shop/coupons/functions.php",
          "status": "modified",
          "additions": 18,
          "deletions": 6,
          "patch": "@@ -27,14 +27,20 @@ function coupon_apply($params = array())\n \n     $customer_ip = user_ip();\n \n-    $checkout = new MicroweberPackages\\Checkout\\CheckoutManager();\n-    $getCart = $checkout->app->shop_manager->get_cart(array(\n-        'session_id' => $checkout->app->user_manager->session_id()\n-\n-    ));\n+//    $checkout = new MicroweberPackages\\Checkout\\CheckoutManager();\n+//    $getCart = $checkout->app->shop_manager->get_cart(array(\n+//        'session_id' => $checkout->app->user_manager->session_id()\n+//\n+//    ));\n \n+    $getCart = false;\n     $coupon['total_amount'] = floatval($coupon['total_amount']);\n-    $cartTotal = floatval(cart_total());\n+    $cartTotal = floatval( \\DB::table('cart')->where('session_id', app()->user_manager->session_id())->sum('price'));\n+    $getCartItems =   \\DB::table('cart')->where('session_id', app()->user_manager->session_id())->get();\n+\n+    if($getCartItems){\n+        $getCart = $getCartItems->toArray();\n+    }\n \n     // Check rules\n      if ($coupon and isset($coupon['uses_per_customer']) and $coupon['uses_per_customer'] > 0) {\n@@ -65,6 +71,11 @@ function coupon_apply($params = array())\n         $ok = true;\n     }\n \n+    if(isset( $params['coupon_check_if_valid'])){\n+       return $ok;\n+    }\n+\n+\n     if ($ok) {\n \n         mw()->user_manager->session_set('coupon_code', $coupon['coupon_code']);\n@@ -294,6 +305,7 @@ function coupons_delete_session()\n     mw()->user_manager->session_del('coupon_id');\n     mw()->user_manager->session_del('discount_value');\n     mw()->user_manager->session_del('discount_type');\n+    mw()->user_manager->session_del('applied_coupon_data');\n }\n \n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ab1db7caba45aa0940beebd44416465c3aa6654",
            "date": "2025-01-22T10:10:17Z",
            "author_login": "bobimicroweber"
          },
          {
            "sha": "3e67e66d0a599f4b08a6d620ee8c8deb1e61783f",
            "date": "2025-01-22T10:08:31Z",
            "author_login": "bobimicroweber"
          },
          {
            "sha": "fcd3367ac5d82471cab6ec9c93934d4e59d88c7b",
            "date": "2025-01-20T13:45:37Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "a9744dfc4559d4053c4d198660b809c4eb702e59",
            "date": "2025-01-20T13:33:36Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "c272e68c749e7b442805942c72b60d295e745ffe",
            "date": "2025-01-20T13:18:10Z",
            "author_login": "peter-mw"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-840",
    "description": "Use multiple time the one-time coupon in Packagist microweber/microweber prior to 1.2.11.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-19T16:15:08.660",
    "last_modified": "2024-11-21T06:39:11.503",
    "fix_date": "2022-02-19T15:43:46Z"
  },
  "references": [
    {
      "url": "https://github.com/microweber/microweber/commit/c3c25ae6c421bb4a65df9e0035edcc2f75594a04",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/fa5dbbd3-97fe-41a9-8797-2e54d9a9c649",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/c3c25ae6c421bb4a65df9e0035edcc2f75594a04",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/fa5dbbd3-97fe-41a9-8797-2e54d9a9c649",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.734630",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "microweber",
    "owner": "microweber",
    "created_at": "2010-10-07T09:04:43Z",
    "updated_at": "2025-01-26T00:37:31Z",
    "pushed_at": "2025-01-24T15:56:56Z",
    "size": 1027315,
    "stars": 3185,
    "forks": 889,
    "open_issues": 360,
    "watchers": 3185,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 12566636,
      "PHP": 11975997,
      "JavaScript": 8696748,
      "CSS": 3597687,
      "SCSS": 2178754,
      "Blade": 1663664,
      "Less": 518400,
      "Hack": 476030,
      "MDX": 387317,
      "Vue": 344860,
      "Ruby": 12504,
      "OCaml": 4815,
      "Dockerfile": 1548,
      "CoffeeScript": 950,
      "Batchfile": 61,
      "Shell": 59,
      "Sass": 1
    },
    "commit_activity": {
      "total_commits_last_year": 1213,
      "avg_commits_per_week": 23.326923076923077,
      "days_active_last_year": 121
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:34:45.386335"
  }
}