{
  "cve_id": "CVE-2022-0704",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "6e0922c5b2959ac1b48500ac508d8fc5a97286f9",
    "related_commits": [
      "6e0922c5b2959ac1b48500ac508d8fc5a97286f9",
      "6e0922c5b2959ac1b48500ac508d8fc5a97286f9"
    ],
    "patch_url": "https://github.com/pimcore/pimcore/commit/6e0922c5b2959ac1b48500ac508d8fc5a97286f9.patch",
    "fix_commit_details": {
      "sha": "6e0922c5b2959ac1b48500ac508d8fc5a97286f9",
      "commit_date": "2022-03-14T13:19:09Z",
      "author": {
        "login": "dvesh3",
        "type": "User",
        "stats": {
          "total_commits": 1771,
          "average_weekly_commits": 3.520874751491054,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 254
        }
      },
      "commit_message": {
        "title": "[Admin] Security - Add handler to enable Content Security Policy (#11447)",
        "length": 849,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 406,
        "additions": 391,
        "deletions": 15
      },
      "files": [
        {
          "filename": "bundles/AdminBundle/DependencyInjection/Compiler/ContentSecurityPolicyUrlsPass.php",
          "status": "added",
          "additions": 45,
          "deletions": 0,
          "patch": "@@ -0,0 +1,45 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+/**\n+ * Pimcore\n+ *\n+ * This source file is available under two different licenses:\n+ * - GNU General Public License version 3 (GPLv3)\n+ * - Pimcore Commercial License (PCL)\n+ * Full copyright and license information is available in\n+ * LICENSE.md which is distributed with this source code.\n+ *\n+ * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n+ * @license    http://www.pimcore.org/license     GPLv3 and PCL\n+ */\n+\n+namespace Pimcore\\Bundle\\AdminBundle\\DependencyInjection\\Compiler;\n+\n+use Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler;\n+use Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;\n+use Symfony\\Component\\DependencyInjection\\ContainerBuilder;\n+\n+/**\n+ * @internal\n+ */\n+final class ContentSecurityPolicyUrlsPass implements CompilerPassInterface\n+{\n+    /**\n+     * {@inheritdoc}\n+     */\n+    public function process(ContainerBuilder $container)\n+    {\n+        $definition = $container->getDefinition(ContentSecurityPolicyHandler::class);\n+\n+\n+        $config = $container->getParameter('pimcore_admin.config');\n+\n+        if (count($config['admin_csp_header']['additional_urls'])) {\n+            foreach ($config['admin_csp_header']['additional_urls'] as $additionalUrlsKey => $additionalUrlsArr) {\n+                $definition->addMethodCall('addAllowedUrls', [$additionalUrlsKey, $additionalUrlsArr]);\n+            }\n+        }\n+    }\n+}"
        },
        {
          "filename": "bundles/AdminBundle/DependencyInjection/Configuration.php",
          "status": "modified",
          "additions": 37,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@\n \n namespace Pimcore\\Bundle\\AdminBundle\\DependencyInjection;\n \n+use Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler;\n use Symfony\\Component\\Config\\Definition\\Builder\\ArrayNodeDefinition;\n use Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;\n use Symfony\\Component\\Config\\Definition\\ConfigurationInterface;\n@@ -54,6 +55,42 @@ public function getConfigTreeBuilder(): TreeBuilder\n                     ->end()\n                 ->end()\n             ->end()\n+            ->arrayNode('admin_csp_header')\n+                ->canBeEnabled()\n+                ->info('Can be used to enable or disable the Content Security Policy headers.')\n+                ->children()\n+                    ->arrayNode('additional_urls')\n+                        ->addDefaultsIfNotSet()\n+                        ->normalizeKeys(false)\n+                        ->children()\n+                            ->arrayNode(ContentSecurityPolicyHandler::DEFAULT_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::IMG_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::SCRIPT_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::STYLE_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::CONNECT_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::FONT_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::MEDIA_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                            ->arrayNode(ContentSecurityPolicyHandler::FRAME_OPT)\n+                                ->scalarPrototype()->end()\n+                            ->end()\n+                        ->end()\n+                    ->end()\n+                ->end()\n+            ->end()\n             ->scalarNode('custom_admin_path_identifier')\n                 ->defaultNull()\n                 ->validate()"
        },
        {
          "filename": "bundles/AdminBundle/EventListener/AdminSecurityListener.php",
          "status": "added",
          "additions": 83,
          "deletions": 0,
          "patch": "@@ -0,0 +1,83 @@\n+<?php\n+\n+/**\n+ * Pimcore\n+ *\n+ * This source file is available under two different licenses:\n+ * - GNU General Public License version 3 (GPLv3)\n+ * - Pimcore Commercial License (PCL)\n+ * Full copyright and license information is available in\n+ * LICENSE.md which is distributed with this source code.\n+ *\n+ * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n+ * @license    http://www.pimcore.org/license     GPLv3 and PCL\n+ */\n+\n+namespace Pimcore\\Bundle\\AdminBundle\\EventListener;\n+\n+use Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler;\n+use Pimcore\\Bundle\\CoreBundle\\EventListener\\Traits\\PimcoreContextAwareTrait;\n+use Pimcore\\Config;\n+use Pimcore\\Http\\Request\\Resolver\\PimcoreContextResolver;\n+use Pimcore\\Http\\RequestHelper;\n+use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\n+use Symfony\\Component\\HttpKernel\\Event\\ResponseEvent;\n+use Symfony\\Component\\HttpKernel\\KernelEvents;\n+\n+/**\n+ * @internal\n+ */\n+class AdminSecurityListener implements EventSubscriberInterface\n+{\n+    use PimcoreContextAwareTrait;\n+\n+    /**\n+     * @param ContentSecurityPolicyHandler $contentSecurityPolicyHandler\n+     */\n+    public function __construct(\n+        protected RequestHelper $requestHelper,\n+        protected ContentSecurityPolicyHandler $contentSecurityPolicyHandler,\n+        protected Config $config\n+    )\n+    {\n+    }\n+\n+    /**\n+     * {@inheritdoc}\n+     */\n+    public static function getSubscribedEvents()\n+    {\n+        return [\n+            KernelEvents::RESPONSE => 'onKernelResponse',\n+        ];\n+    }\n+\n+    public function onKernelResponse(ResponseEvent $event)\n+    {\n+        if (!$this->config['admin_csp_header']['enabled']) {\n+            return;\n+        }\n+\n+        $request = $event->getRequest();\n+\n+        if (!$event->isMainRequest()) {\n+            return;\n+        }\n+\n+        if (!$this->matchesPimcoreContext($request, PimcoreContextResolver::CONTEXT_ADMIN)) {\n+            return;\n+        }\n+\n+        if ($this->requestHelper->isFrontendRequestByAdmin($request)) {\n+            return;\n+        }\n+\n+        $response = $event->getResponse();\n+\n+        // set CSP header with random nonce string to the response\n+        $response->headers->set(\"Content-Security-Policy\", $this->contentSecurityPolicyHandler->getCspHeader());\n+    }\n+\n+}\n+\n+"
        },
        {
          "filename": "bundles/AdminBundle/PimcoreAdminBundle.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@\n \n namespace Pimcore\\Bundle\\AdminBundle;\n \n+use Pimcore\\Bundle\\AdminBundle\\DependencyInjection\\Compiler\\ContentSecurityPolicyUrlsPass;\n use Pimcore\\Bundle\\AdminBundle\\DependencyInjection\\Compiler\\GDPRDataProviderPass;\n use Pimcore\\Bundle\\AdminBundle\\DependencyInjection\\Compiler\\ImportExportLocatorsPass;\n use Pimcore\\Bundle\\AdminBundle\\DependencyInjection\\Compiler\\SerializerPass;\n@@ -44,6 +45,7 @@ public function build(ContainerBuilder $container)\n         $container->addCompilerPass(new GDPRDataProviderPass());\n         $container->addCompilerPass(new ImportExportLocatorsPass());\n         $container->addCompilerPass(new TranslationServicesPass());\n+        $container->addCompilerPass(new ContentSecurityPolicyUrlsPass());\n \n         /** @var SecurityExtension $extension */\n         $extension = $container->getExtension('security');"
        },
        {
          "filename": "bundles/AdminBundle/Resources/config/event_listeners.yaml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@ services:\n     # SECURITY\n     #\n \n+    Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminSecurityListener: ~\n     Pimcore\\Bundle\\AdminBundle\\EventListener\\BruteforceProtectionListener: ~\n \n     Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminAuthenticationDoubleCheckListener:"
        },
        {
          "filename": "bundles/AdminBundle/Resources/config/security_services.yaml",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -65,6 +65,13 @@ services:\n         tags:\n             - { name: monolog.logger, channel: security }\n \n+    Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler:\n+        public: true\n+        calls:\n+            - [ setLogger, [ '@logger' ] ]\n+        tags:\n+            - { name: monolog.logger, channel: security }\n+\n     # user checker checking admin users for validity\n     Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserChecker: ~\n "
        },
        {
          "filename": "bundles/AdminBundle/Resources/public/js/pimcore/document/pages/preview.js",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -31,8 +31,6 @@ pimcore.document.pages.preview = Class.create({\n \n         if (this.layout == null) {\n \n-            var iframeOnLoad = \"pimcore.globalmanager.get('document_\" + this.page.id + \"').preview.iFrameLoaded()\";\n-\n             // preview switcher only for pages not for emails\n             var tbar = [];\n             if(this.page.getType() == \"page\") {\n@@ -124,9 +122,16 @@ pimcore.document.pages.preview = Class.create({\n                 scrollable: false,\n                 bodyStyle: \"background:#323232;\",\n                 bodyCls: \"pimcore_overflow_scrolling\",\n-                html: '<iframe src=\"about:blank\" onload=\"' + iframeOnLoad + '\" frameborder=\"0\" ' +\n+                html: '<iframe src=\"about:blank\" frameborder=\"0\" ' +\n                     'style=\"width: 100%;background: #fff;\" id=\"' + this.iframeName + '\" ' +\n-                    'name=\"' + this.iframeName + '\"></iframe>'\n+                    'name=\"' + this.iframeName + '\"></iframe>',\n+                listeners: {\n+                    afterrender: function () {\n+                        Ext.get(this.getIframe()).on('load', function () {\n+                            this.iFrameLoaded();\n+                        }.bind(this));\n+                    }.bind(this)\n+                }\n             });\n \n             this.timeSlider = Ext.create('Ext.slider.Single', {"
        },
        {
          "filename": "bundles/AdminBundle/Resources/views/Admin/Index/index.html.twig",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -88,7 +88,7 @@\n \n     <title>{{ settings.hostname }} :: Pimcore</title>\n \n-    <script>\n+    <script {{ pimcore_csp.getNonceHtmlAttribute()|raw }}>\n         var pimcore = {}; // namespace\n \n         // hide symfony toolbar by default\n@@ -98,8 +98,8 @@\n         }\n     </script>\n \n-    <script src=\"{{ asset('bundles/fosjsrouting/js/router.js') }}\"></script>\n-    <script src=\"{{ path('fos_js_routing_js', {'callback' : 'fos.Router.setData'}) }}\"></script>\n+    <script src=\"{{ asset('bundles/fosjsrouting/js/router.js') }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n+    <script src=\"{{ path('fos_js_routing_js', {'callback' : 'fos.Router.setData'}) }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n </head>\n \n <body class=\"pimcore_version_10\" data-app-env=\"{{ app.environment }}\">\n@@ -698,17 +698,17 @@\n \n <!-- some javascript -->\n {# pimcore constants #}\n-<script>\n+<script {{ pimcore_csp.getNonceHtmlAttribute()|raw }}>\n     pimcore.settings = {{(settings|json_encode(constant('JSON_PRETTY_PRINT'))|raw)}};\n </script>\n \n-<script src=\"{{ path('pimcore_admin_misc_jsontranslationssystem', {'language': language, '_dc': settings.build }) }}\"></script>\n-<script src=\"{{ path('pimcore_admin_user_getcurrentuser', {'_dc': settings.build }) }}\"></script>\n-<script src=\"{{ path('pimcore_admin_misc_availablelanguages', {'_dc': settings.build }) }}\"></script>\n+<script src=\"{{ path('pimcore_admin_misc_jsontranslationssystem', {'language': language, '_dc': settings.build }) }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n+<script src=\"{{ path('pimcore_admin_user_getcurrentuser', {'_dc': settings.build }) }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n+<script src=\"{{ path('pimcore_admin_misc_availablelanguages', {'_dc': settings.build }) }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n \n <!-- library scripts -->\n {% for scriptUrl in scriptLibs %}\n-    <script src=\"/bundles/pimcoreadmin/js/{{ scriptUrl }}?_dc={{ settings.build }}\"></script>\n+    <script src=\"/bundles/pimcoreadmin/js/{{ scriptUrl }}?_dc={{ settings.build }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n {% endfor %}\n \n <!-- internal scripts -->\n@@ -734,7 +734,7 @@\n <!-- bundle scripts -->\n {% if settings.disableMinifyJs %}\n     {% for pluginJsPath in pluginJsPaths %}\n-        <script src=\"{{ pluginJsPath }}?_dc={{ pluginDcValue }}\"></script>\n+        <script src=\"{{ pluginJsPath }}?_dc={{ pluginDcValue }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n     {% endfor %}\n {% else %}\n     {{ pimcore_minimize_scripts(pluginJsPaths)|raw }}\n@@ -745,6 +745,6 @@\n {% endfor %}\n \n {#  MUST BE THE LAST LINE  #}\n-<script src=\"/bundles/pimcoreadmin/js/pimcore/startup.js?_dc={{ settings.build }}\"></script>\n+<script src=\"/bundles/pimcoreadmin/js/pimcore/startup.js?_dc={{ settings.build }}\" {{ pimcore_csp.getNonceHtmlAttribute()|raw }}></script>\n </body>\n </html>"
        },
        {
          "filename": "bundles/AdminBundle/Security/ContentSecurityPolicyHandler.php",
          "status": "added",
          "additions": 155,
          "deletions": 0,
          "patch": "@@ -0,0 +1,155 @@\n+<?php\n+\n+/**\n+ * Pimcore\n+ *\n+ * This source file is available under two different licenses:\n+ * - GNU General Public License version 3 (GPLv3)\n+ * - Pimcore Commercial License (PCL)\n+ * Full copyright and license information is available in\n+ * LICENSE.md which is distributed with this source code.\n+ *\n+ * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n+ * @license    http://www.pimcore.org/license     GPLv3 and PCL\n+ */\n+\n+namespace Pimcore\\Bundle\\AdminBundle\\Security;\n+\n+use Pimcore\\Config;\n+use Psr\\Log\\LoggerAwareInterface;\n+use Psr\\Log\\LoggerAwareTrait;\n+use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n+\n+/**\n+ * @internal\n+ */\n+class ContentSecurityPolicyHandler implements LoggerAwareInterface\n+{\n+    use LoggerAwareTrait;\n+\n+    /** @var String|null */\n+    private ?string $nonce = null;\n+\n+    public const DEFAULT_OPT = 'default-src';\n+    public const IMG_OPT = 'img-src';\n+    public const SCRIPT_OPT = 'script-src';\n+    public const STYLE_OPT = 'style-src';\n+    public const CONNECT_OPT = 'connect-src';\n+    public const FONT_OPT = 'font-src';\n+    public const MEDIA_OPT = 'media-src';\n+    public const FRAME_OPT = 'frame-src';\n+\n+    /**\n+     * @var array\n+     */\n+    private array $allowedUrls = [\n+        self::CONNECT_OPT => [\n+            'https://liveupdate.pimcore.org/update-check', //AdminBundle statistics & update-check service\n+            'https://nominatim.openstreetmap.org/' //CoreBundle geocoding_url_template\n+        ],\n+    ];\n+\n+    public function __construct(protected Config $config, protected array $cspHeaderOptions = [])\n+    {\n+        $resolver = new OptionsResolver();\n+        $this->configureOptions($resolver);\n+\n+        $this->cspHeaderOptions = $resolver->resolve($cspHeaderOptions);\n+    }\n+\n+    public function configureOptions(OptionsResolver $resolver)\n+    {\n+        $resolver->setDefaults([\n+            self::DEFAULT_OPT => \"'self'\",\n+            self::IMG_OPT => \"* data: blob:\",\n+            self::MEDIA_OPT => \"'self' data:\",\n+            self::SCRIPT_OPT => \"'self' 'nonce-\" . $this->getNonce() . \"' 'unsafe-inline' 'unsafe-eval'\",\n+            self::STYLE_OPT => \"'self' 'unsafe-inline'\",\n+            self::FRAME_OPT => \"'self'\",\n+            self::CONNECT_OPT => \"'self' blob:\",\n+            self::FONT_OPT => \"'self'\",\n+        ]);\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getCspHeader(): string\n+    {\n+        $cspHeaderOptions = array_map(function ($k, $v) {\n+            return \"$k $v \" . $this->getAllowedUrls($k);\n+        }, array_keys($this->cspHeaderOptions), array_values($this->cspHeaderOptions));\n+\n+        return implode(';' ,$cspHeaderOptions);\n+    }\n+\n+    /**\n+     * @param string $key\n+     * @param bool $flatten\n+     *\n+     * @return array|string\n+     */\n+    private function getAllowedUrls(string $key, bool $flatten = true): array|string\n+    {\n+        if (!$flatten) {\n+            return $this->allowedUrls[$key] ?? [];\n+        }\n+\n+        return isset($this->allowedUrls[$key]) && is_array($this->allowedUrls[$key]) ? implode(' ', $this->allowedUrls[$key]) : '';\n+    }\n+\n+    /**\n+     * @param string $key\n+     * @param array $value\n+     *\n+     * @return $this\n+     */\n+    public function addAllowedUrls(string $key, array $value): self\n+    {\n+        if(!isset($this->allowedUrls[$key])) {\n+            $this->allowedUrls[$key] = [];\n+        }\n+\n+        foreach ($value as $val) {\n+            $this->allowedUrls[$key][] = $val;\n+        }\n+\n+        return $this;\n+    }\n+\n+    /**\n+     * @param string $key\n+     * @param string $value\n+     *\n+     * @return $this\n+     */\n+    public function setCspHeader(string $key, string $value): self\n+    {\n+        $this->cspHeaderOptions[$key] = $value;\n+\n+        return $this;\n+    }\n+\n+    /**\n+     *\n+     * @return string\n+     */\n+    public function getNonceHtmlAttribute(): string\n+    {\n+        return $this->config['admin_csp_header']['enabled'] ? ' nonce=\"' . $this->getNonce() . '\"' : '';\n+    }\n+\n+    /**\n+     * Generates a random nonce parameter.\n+     *\n+     * @return string\n+     */\n+    private function getNonce(): string\n+    {\n+        if (!$this->nonce) {\n+            $this->nonce = generateRandomSymfonySecret();\n+        }\n+\n+        return $this->nonce;\n+    }\n+}"
        },
        {
          "filename": "bundles/CoreBundle/Resources/config/pimcore/default.yaml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -59,6 +59,7 @@ twig:\n         # this is only here for compatibility/dev reasons and may be removed later\n         container: '@service_container'\n         pimcore_csrf: '@Pimcore\\Bundle\\AdminBundle\\Security\\CsrfProtectionHandler'\n+        pimcore_csp: '@Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler'\n     paths:\n         '%kernel.project_dir%/templates': App\n "
        },
        {
          "filename": "bundles/EcommerceFrameworkBundle/Resources/views/back-office.html.twig",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -76,7 +76,7 @@\n         {{ pimcore_head_script() }}\n     {% endblock %}\n \n-    <script>\n+    <script {{ pimcore_csp.getNonceHtmlAttribute()|raw }}>\n         var pimcore = parent.pimcore;\n         var popups = document.getElementsByClassName('popup-modal');\n         for (var i = 0; i < popups.length; i++) {"
        },
        {
          "filename": "doc/Development_Documentation/26_Best_Practice/75_Security_Concept.md",
          "status": "modified",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -25,6 +25,42 @@ it easy and comfortable to keep all dependencies of Pimcore and your project up-\n Since Pimcore is a Symfony application, it can utilize all Symfony tools, like the \n [Symfony Security Checker](https://symfony.com/doc/5.2/security/security_checker.html). \n \n+### Content Security Policy\n+Pimcore provides a Content Security Policy handler, which enables an additional security layer to protect from certain attacks like Cross-Site Scripting (XSS) and data injection and so on, by adding `Content-Security-Policy` HTTP response header with [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) to every request in Admin interface. The generated nonce encoded string is matched with the one provided in link or inline javascript, which allows them to be executed safely. \n+\n+Read more about [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP).\n+\n+To enable CSP, add a custom configuration in `config/config.yaml`:\n+```yaml\n+# config/config.yaml\n+pimcore_admin:\n+    admin_csp_header:\n+        enabled: true\n+```\n+\n+And to allow external urls for each directive, you can provide a list in the configuration:\n+```yaml\n+# config/config.yaml\n+pimcore_admin:\n+    admin_csp_header:\n+        additional_urls:\n+            script_src:\n+                - 'https://oreo.cat/scripts/meow.js' \n+                - 'https://bagheera.cat/*'\n+            style-src:\n+                - 'https://oreo.cat/scripts/meow.css'\n+```\n+\n+In case, you are using third party bundles or custom implementation that extends the admin backend interface with custom views then you would need to use generated nonce string in your scripts.\n+If a script does not contain valid a nonce, then it is stopped from being executed wih a warning in console like:\n+\n+`Refused to execute inline script because it violates the following Content Security Policy directive: ...`\n+\n+This issue can be resolved either by using Pimcore [Headscript extension](../02_MVC/02_Template/02_Template_Extensions/03_HeadScript.md) or add nonce script to inline scripts as follows:\n+\n+```twig\n+<script {{ pimcore_csp.getNonceHtmlAttribute()|raw }}>\n+```\n \n ### Handling Security Issues\n In the case of a security issue/vulnerability in the Pimcore core framework, we handle them with the following procedure: "
        },
        {
          "filename": "lib/Twig/Extension/Templating/HeadScript.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -38,6 +38,7 @@\n \n namespace Pimcore\\Twig\\Extension\\Templating;\n \n+use Pimcore\\Bundle\\AdminBundle\\Security\\ContentSecurityPolicyHandler;\n use Pimcore\\Event\\FrontendEvents;\n use Pimcore\\Twig\\Extension\\Templating\\Placeholder\\CacheBusterAware;\n use Pimcore\\Twig\\Extension\\Templating\\Placeholder\\Container;\n@@ -482,6 +483,9 @@ public function itemToString($item, $indent, $escapeStart, $escapeEnd)\n             }\n         }\n \n+        /** @var ContentSecurityPolicyHandler $cspHandler */\n+        $cspHandler = \\Pimcore::getContainer()->get(ContentSecurityPolicyHandler::class);\n+        $attrString .= $cspHandler->getNonceHtmlAttribute();\n         $addScriptEscape = !(isset($item->attributes['noescape']) && filter_var($item->attributes['noescape'], FILTER_VALIDATE_BOOLEAN));\n \n         $html = '<script' . $attrString . '>';"
        }
      ],
      "file_patterns": {
        "security_files": 5,
        "config_files": 4,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 12,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5e2d5885a6bbffeff6992c6c944b6f6ecf6761bc",
            "date": "2025-01-08T15:43:18Z",
            "author_login": "robertSt7"
          },
          {
            "sha": "c7f1481cd7efa7399b74d4b14f260c5170b25dc8",
            "date": "2025-01-08T15:42:09Z",
            "author_login": "robertSt7"
          },
          {
            "sha": "b8c7f34710653b643e52826947c00f5bc94cf7b4",
            "date": "2025-01-08T15:38:55Z",
            "author_login": "kingjia90"
          },
          {
            "sha": "4f2bbcc847eb6075f37122eea94b05f75612cf5b",
            "date": "2025-01-08T10:04:54Z",
            "author_login": "robertSt7"
          },
          {
            "sha": "72c34adff8c5074e6ce58f185e79787cf2dde6ec",
            "date": "2025-01-07T12:04:04Z",
            "author_login": "kingjia90"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository pimcore/pimcore prior to 10.4.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-16T10:15:08.217",
    "last_modified": "2024-11-21T06:39:13.447",
    "fix_date": "2022-03-14T13:19:09Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/6e0922c5b2959ac1b48500ac508d8fc5a97286f9",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4142a8b4-b439-4328-aaa3-52f6fedfd0a6",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/6e0922c5b2959ac1b48500ac508d8fc5a97286f9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4142a8b4-b439-4328-aaa3-52f6fedfd0a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.026780",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-14T09:15:55Z",
    "pushed_at": "2025-01-13T14:41:25Z",
    "size": 524212,
    "stars": 3455,
    "forks": 1448,
    "open_issues": 480,
    "watchers": 3455,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "11.x",
      "11.5"
    ],
    "languages": {
      "PHP": 6722485,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 619,
      "avg_commits_per_week": 11.903846153846153,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:01:17.566039"
  }
}