{
  "cve_id": "CVE-2022-0731",
  "github_data": {
    "repository": "dolibarr/dolibarr",
    "fix_commit": "209ab708d4b65fbd88ba4340d60b7822cb72651a",
    "related_commits": [
      "209ab708d4b65fbd88ba4340d60b7822cb72651a",
      "209ab708d4b65fbd88ba4340d60b7822cb72651a"
    ],
    "patch_url": "https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a.patch",
    "fix_commit_details": {
      "sha": "209ab708d4b65fbd88ba4340d60b7822cb72651a",
      "commit_date": "2022-02-22T20:24:34Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "FIX #hunterb812ea22-0c02-46fe-b89f-04519dfb1ebd",
        "length": 47,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 130,
        "additions": 115,
        "deletions": 15
      },
      "files": [
        {
          "filename": "htdocs/core/class/html.form.class.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -9095,13 +9095,13 @@ public static function showphoto($modulepart, $object, $width = 100, $height = 0\n \t\t\tif (!empty($object->photo)) {\n \t\t\t\tif (dolIsAllowedForPreview($object->photo)) {\n \t\t\t\t\tif ((string) $imagesize == 'mini') {\n-\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_mini');\n+\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.getImageFileNameForSize($object->photo, '_mini');\n \t\t\t\t\t} elseif ((string) $imagesize == 'small') {\n-\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').getImageFileNameForSize($object->photo, '_small');\n+\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.getImageFileNameForSize($object->photo, '_small');\n \t\t\t\t\t} else {\n-\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').$object->photo;\n+\t\t\t\t\t\t$file = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->photo;\n \t\t\t\t\t}\n-\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'user').$object->photo;\n+\t\t\t\t\t$originalfile = get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->photo;\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (!empty($conf->global->MAIN_OLD_IMAGE_LINKS)) {"
        },
        {
          "filename": "htdocs/core/lib/files.lib.php",
          "status": "modified",
          "additions": 12,
          "deletions": 6,
          "patch": "@@ -2348,15 +2348,15 @@ function dol_check_secure_access_document($modulepart, $original_file, $entity,\n \t\t$accessallowed = ($user->admin && basename($original_file) == $original_file && preg_match('/^dolibarr.*\\.log$/', basename($original_file)));\n \t\t$original_file = $dolibarr_main_data_root.'/'.$original_file;\n \t} elseif ($modulepart == 'doctemplates' && !empty($dolibarr_main_data_root)) {\n-\t\t// Wrapping for *.log files, like when used with url http://.../document.php?modulepart=logs&file=dolibarr.log\n+\t\t// Wrapping for doctemplates\n \t\t$accessallowed = $user->admin;\n \t\t$original_file = $dolibarr_main_data_root.'/doctemplates/'.$original_file;\n \t} elseif ($modulepart == 'doctemplateswebsite' && !empty($dolibarr_main_data_root)) {\n-\t\t// Wrapping for *.zip files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n+\t\t// Wrapping for doctemplates of websites\n \t\t$accessallowed = ($fuser->rights->website->write && preg_match('/\\.jpg$/i', basename($original_file)));\n \t\t$original_file = $dolibarr_main_data_root.'/doctemplates/websites/'.$original_file;\n \t} elseif ($modulepart == 'packages' && !empty($dolibarr_main_data_root)) {\n-\t\t// Wrapping for *.zip files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n+\t\t// Wrapping for *.zip package files, like when used with url http://.../document.php?modulepart=packages&file=module_myfile.zip\n \t\t// Dir for custom dirs\n \t\t$tmp = explode(',', $dolibarr_main_document_root_alt);\n \t\t$dirins = $tmp[0];\n@@ -2369,11 +2369,17 @@ function dol_check_secure_access_document($modulepart, $original_file, $entity,\n \t\t$original_file = $conf->mycompany->dir_output.'/'.$original_file;\n \t} elseif ($modulepart == 'userphoto' && !empty($conf->user->dir_output)) {\n \t\t// Wrapping for users photos\n-\t\t$accessallowed = 1;\n+\t\t$accessallowed = 0;\n+\t\tif (preg_match('/^\\d+\\/photos\\//', $original_file)) {\n+\t\t\t$accessallowed = 1;\n+\t\t}\n \t\t$original_file = $conf->user->dir_output.'/'.$original_file;\n \t} elseif ($modulepart == 'memberphoto' && !empty($conf->adherent->dir_output)) {\n \t\t// Wrapping for members photos\n-\t\t$accessallowed = 1;\n+\t\t$accessallowed = 0;\n+\t\tif (preg_match('/^\\d+\\/photos\\//', $original_file)) {\n+\t\t\t$accessallowed = 1;\n+\t\t}\n \t\t$original_file = $conf->adherent->dir_output.'/'.$original_file;\n \t} elseif ($modulepart == 'apercufacture' && !empty($conf->facture->multidir_output[$entity])) {\n \t\t// Wrapping pour les apercu factures\n@@ -2448,7 +2454,7 @@ function dol_check_secure_access_document($modulepart, $original_file, $entity,\n \t\t}\n \t\t$original_file = $conf->expensereport->dir_output.'/'.$original_file;\n \t} elseif (($modulepart == 'apercuexpensereport') && !empty($conf->expensereport->dir_output)) {\n-\t\t// Wrapping pour les apercu supplier invoice\n+\t\t// Wrapping pour les apercu expense report\n \t\tif ($fuser->rights->expensereport->{$lire}) {\n \t\t\t$accessallowed = 1;\n \t\t}"
        },
        {
          "filename": "htdocs/install/upgrade2.php",
          "status": "modified",
          "additions": 96,
          "deletions": 2,
          "patch": "@@ -456,6 +456,13 @@\n \t\t\tmigrate_export_import_profiles('export');\n \t\t\tmigrate_export_import_profiles('import');\n \t\t}\n+\n+\t\t// Scripts for 16.0\n+\t\t$afterversionarray = explode('.', '15.0.9');\n+\t\t$beforeversionarray = explode('.', '16.0.9');\n+\t\tif (versioncompare($versiontoarray, $afterversionarray) >= 0 && versioncompare($versiontoarray, $beforeversionarray) <= 0) {\n+\t\t\tmigrate_user_photospath2();\n+\t\t}\n \t}\n \n \n@@ -4505,8 +4512,7 @@ function migrate_user_photospath()\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t// dol_delete_dir($origin.'/'.$file);\n \t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t} else // it is a file\n-\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t} else { // it is a file\n \t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file)) {\n \t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.' -> '.$destin.'/'.$file.'<br>'.\"\\n\";\n \t\t\t\t\t\t\t\t\tprint '.';\n@@ -4524,6 +4530,94 @@ function migrate_user_photospath()\n \tprint '</td></tr>';\n }\n \n+/**\n+ * Migrate file from old path users/99/file.jpg into users/99/photos/file.jpg\n+ *\n+ * @return\tvoid\n+ */\n+function migrate_user_photospath2()\n+{\n+\tglobal $conf, $db, $langs, $user;\n+\n+\tprint '<tr><td colspan=\"4\">';\n+\n+\tprint '<b>'.$langs->trans('MigrationUserPhotoPath').\"</b><br>\\n\";\n+\n+\tinclude_once DOL_DOCUMENT_ROOT.'/user/class/user.class.php';\n+\t$fuser = new User($db);\n+\n+\tif (!is_object($user)) {\n+\t\t$user = $fuser; // To avoid error during migration\n+\t}\n+\n+\t$sql = \"SELECT rowid as uid from \".MAIN_DB_PREFIX.\"user\"; // Get list of all users\n+\t$resql = $db->query($sql);\n+\tif ($resql) {\n+\t\twhile ($obj = $db->fetch_object($resql)) {\n+\t\t\t$fuser->fetch($obj->uid);\n+\t\t\t//echo '<hr>'.$fuser->id.' -> '.$fuser->entity;\n+\t\t\t$entity = (empty($fuser->entity) ? 1 : $fuser->entity);\n+\t\t\tif ($entity > 1) {\n+\t\t\t\t$dir = DOL_DATA_ROOT.'/'.$entity.'/users';\n+\t\t\t} else {\n+\t\t\t\t$dir = $conf->user->multidir_output[$entity]; // $conf->user->multidir_output[] for each entity is construct by the multicompany module\n+\t\t\t}\n+\n+\t\t\tif ($dir) {\n+\t\t\t\t//print \"Process user id \".$fuser->id.\"<br>\\n\";\n+\t\t\t\t$origin = $dir.'/'.$fuser->id;\n+\t\t\t\t$destin = $dir.'/'.$fuser->id.'/photos';\n+\n+\t\t\t\t$origin_osencoded = dol_osencode($origin);\n+\n+\t\t\t\tdol_mkdir($destin);\n+\n+\t\t\t\t//echo '<hr>'.$origin.' -> '.$destin;\n+\t\t\t\tif (dol_is_dir($origin)) {\n+\t\t\t\t\t$handle = opendir($origin_osencoded);\n+\t\t\t\t\tif (is_resource($handle)) {\n+\t\t\t\t\t\twhile (($file = readdir($handle)) !== false) {\n+\t\t\t\t\t\t\tif ($file == '.' || $file == '..' || $file == 'photos') {\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (!empty($fuser->photo) && ($file != $fuser->photo && $file != 'thumbs')) {\n+\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\tif (dol_is_dir($origin.'/'.$file)) {\t// it is a dir (like 'thumbs')\n+\t\t\t\t\t\t\t\t$thumbs = opendir($origin_osencoded.'/'.$file);\n+\t\t\t\t\t\t\t\tif (is_resource($thumbs)) {\n+\t\t\t\t\t\t\t\t\tdol_mkdir($destin.'/'.$file);\n+\t\t\t\t\t\t\t\t\twhile (($thumb = readdir($thumbs)) !== false) {\n+\t\t\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file.'/'.$thumb)) {\n+\t\t\t\t\t\t\t\t\t\t\tif ($thumb == '.' || $thumb == '..') {\n+\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.'/'.$thumb.' -> '.$destin.'/'.$file.'/'.$thumb.'<br>'.\"\\n\";\n+\t\t\t\t\t\t\t\t\t\t\tprint '.';\n+\t\t\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file.'/'.$thumb, $destin.'/'.$file.'/'.$thumb, 0, 0);\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t// dol_delete_dir($origin.'/'.$file);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else { // it is a file\n+\t\t\t\t\t\t\t\tif (!dol_is_file($destin.'/'.$file)) {\n+\t\t\t\t\t\t\t\t\t//print $origin.'/'.$file.' -> '.$destin.'/'.$file.'<br>'.\"\\n\";\n+\t\t\t\t\t\t\t\t\tprint '.';\n+\t\t\t\t\t\t\t\t\tdol_copy($origin.'/'.$file, $destin.'/'.$file, 0, 0);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprint '</td></tr>';\n+}\n+\n \n /* A faire egalement: Modif statut paye et fk_facture des factures payes completement\n "
        },
        {
          "filename": "htdocs/user/card.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -543,14 +543,14 @@\n \n \t\t\t\tif (!$error && !count($object->errors)) {\n \t\t\t\t\tif (GETPOST('deletephoto') && $object->oldcopy->photo) {\n-\t\t\t\t\t\t$fileimg = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').$object->oldcopy->photo;\n-\t\t\t\t\t\t$dirthumbs = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'/thumbs';\n+\t\t\t\t\t\t$fileimg = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'photos/'.$object->oldcopy->photo;\n+\t\t\t\t\t\t$dirthumbs = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, 'user').'photos/thumbs';\n \t\t\t\t\t\tdol_delete_file($fileimg);\n \t\t\t\t\t\tdol_delete_dir_recursive($dirthumbs);\n \t\t\t\t\t}\n \n \t\t\t\t\tif (isset($_FILES['photo']['tmp_name']) && trim($_FILES['photo']['tmp_name'])) {\n-\t\t\t\t\t\t$dir = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, 'user');\n+\t\t\t\t\t\t$dir = $conf->user->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, 'user').'/photos';\n \n \t\t\t\t\t\tdol_mkdir($dir);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-284",
    "description": "Improper Access Control (IDOR) in GitHub repository dolibarr/dolibarr prior to 16.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-23T19:15:08.520",
    "last_modified": "2024-11-21T06:39:16.883",
    "fix_date": "2022-02-22T20:24:34Z"
  },
  "references": [
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.743116",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T13:35:25Z",
    "size": 1507308,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1165,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:25:45.089853"
  }
}