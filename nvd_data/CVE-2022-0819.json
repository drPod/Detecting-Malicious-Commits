{
  "cve_id": "CVE-2022-0819",
  "github_data": {
    "repository": "dolibarr/dolibarr",
    "fix_commit": "2a48dd349e7de0d4a38e448b0d2ecbe25e968075",
    "related_commits": [
      "2a48dd349e7de0d4a38e448b0d2ecbe25e968075",
      "2a48dd349e7de0d4a38e448b0d2ecbe25e968075"
    ],
    "patch_url": "https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075.patch",
    "fix_commit_details": {
      "sha": "2a48dd349e7de0d4a38e448b0d2ecbe25e968075",
      "commit_date": "2022-03-01T15:38:06Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "Fix #hunterb03d4415-d4f9-48c8-9ae2-d3aa248027b5",
        "length": 47,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 239,
        "additions": 135,
        "deletions": 104
      },
      "files": [
        {
          "filename": "htdocs/admin/emailcollector_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -109,11 +109,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = dol_eval($val['visible'], 1);\n+\t\t$visible = dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position']\n \t\t);\n \t}"
        },
        {
          "filename": "htdocs/admin/mails_templates.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1034,7 +1034,7 @@\n \t\t\t\t\tcontinue; // It means this is a type of template not into elementList (may be because enabled condition of this type is false because module is not enabled)\n \t\t\t\t}\n \t\t\t\t// Test on 'enabled'\n-\t\t\t\tif (!dol_eval($obj->enabled, 1)) {\n+\t\t\t\tif (!dol_eval($obj->enabled, 1, 1, '1')) {\n \t\t\t\t\t$i++;\n \t\t\t\t\tcontinue; // Email template not qualified\n \t\t\t\t}"
        },
        {
          "filename": "htdocs/admin/menus/edit.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -464,7 +464,7 @@ function init_topleft()\n \t}\n \tprint '<td><input type=\"text\" name=\"menuIdParent\" value=\"'.$valtouse.'\" class=\"minwidth300\"></td>';\n \tprint '<td>'.$langs->trans('DetailMenuIdParent');\n-\tprint ', '.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def';\n+\tprint ', <span class=\"opacitymedium\">'.$langs->trans(\"Example\").': fk_mainmenu=abc&fk_leftmenu=def</span>';\n \tprint '</td></tr>';\n \n \t// Niveau\n@@ -496,15 +496,15 @@ function init_topleft()\n \tprint '<tr><td>'.$langs->trans('Enabled').'</td>';\n \tprint '<td><input type=\"text\" class=\"minwidth500\" name=\"enabled\" value=\"'.dol_escape_htmltag($menu->enabled).'\"></td><td>'.$langs->trans('DetailEnabled');\n \tif (!empty($menu->enabled)) {\n-\t\tprint ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->enabled, 1)).')';\n+\t\tprint ' <span class=\"opacitymedium\">('.$langs->trans(\"ConditionIsCurrently\").':</span> '.yn(dol_eval($menu->enabled, 1, 1, '1')).')';\n \t}\n \tprint '</td></tr>';\n \n \t// Perms\n \tprint '<tr><td>'.$langs->trans('Rights').'</td>';\n \tprint '<td><input type=\"text\" class=\"minwidth500\" name=\"perms\" value=\"'.dol_escape_htmltag($menu->perms).'\"></td><td>'.$langs->trans('DetailRight');\n \tif (!empty($menu->perms)) {\n-\t\tprint ' ('.$langs->trans(\"ConditionIsCurrently\").': '.yn(dol_eval($menu->perms, 1)).')';\n+\t\tprint ' <span class=\"opacitymedium\">('.$langs->trans(\"ConditionIsCurrently\").':</span> '.yn(dol_eval($menu->perms, 1, 1, '1')).')';\n \t}\n \tprint '</td></tr>';\n "
        },
        {
          "filename": "htdocs/bom/bom_list.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -106,7 +106,7 @@\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/compta/cashcontrol/cashcontrol_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -104,11 +104,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/compta/facture/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -261,14 +261,14 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$newkey = '';\n \t\tif (array_key_exists($key, $arrayfields)) { $newkey = $key; } elseif (array_key_exists('t.'.$key, $arrayfields)) { $newkey = 't.'.$key; } elseif (array_key_exists('f.'.$key, $arrayfields)) { $newkey = 'f.'.$key; } elseif (array_key_exists('s.'.$key, $arrayfields)) { $newkey = 's.'.$key; }\n \t\tif ($newkey) {\n \t\t\t$arrayfields[$newkey] = array(\n \t\t\t\t'label'=>$val['label'],\n \t\t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t\t'position'=>$val['position'],\n \t\t\t\t'help' => empty($val['help']) ? '' : $val['help'],\n \t\t\t);"
        },
        {
          "filename": "htdocs/compta/resultat/result.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -334,7 +334,7 @@\n \n \t\t\t\t//var_dump($result);\n \t\t\t\t//$r = $AccCat->calculate($result);\n-\t\t\t\t$r = dol_eval($result, 1);\n+\t\t\t\t$r = dol_eval($result, 1, 1, '1');\n \t\t\t\t//var_dump($r);\n \n \t\t\t\tprint '<td class=\"liste_total right\"><span class=\"amount\">'.price($r).'</span></td>';\n@@ -353,7 +353,7 @@\n \t\t\t\t$result = strtr($formula, $vars);\n \n \t\t\t\t//$r = $AccCat->calculate($result);\n-\t\t\t\t$r = dol_eval($result, 1);\n+\t\t\t\t$r = dol_eval($result, 1, 1, 1);\n \n \t\t\t\tprint '<td class=\"liste_total right\"><span class=\"amount\">'.price($r).'</span></td>';\n \t\t\t\t$sommes[$code]['N'] += $r;\n@@ -367,7 +367,7 @@\n \t\t\t\t\t\t$result = strtr($formula, $vars);\n \n \t\t\t\t\t\t//$r = $AccCat->calculate($result);\n-\t\t\t\t\t\t$r = dol_eval($result, 1);\n+\t\t\t\t\t\t$r = dol_eval($result, 1, 1, 1);\n \n \t\t\t\t\t\tprint '<td class=\"liste_total right\"><span class=\"amount\">'.price($r).'</span></td>';\n \t\t\t\t\t\t$sommes[$code]['M'][$k] += $r;\n@@ -381,7 +381,7 @@\n \t\t\t\t\t\t$result = strtr($formula, $vars);\n \n \t\t\t\t\t\t//$r = $AccCat->calculate($result);\n-\t\t\t\t\t\t$r = dol_eval($result, 1);\n+\t\t\t\t\t\t$r = dol_eval($result, 1, 1, 1);\n \n \t\t\t\t\t\tprint '<td class=\"liste_total right\"><span class=\"amount\">'.price($r).'</span></td>';\n \t\t\t\t\t\t$sommes[$code]['M'][$k] += $r;"
        },
        {
          "filename": "htdocs/core/boxes/box_scheduled_jobs.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -102,7 +102,7 @@ public function loadBox($max = 5)\n \t\t\t\twhile ($i < $num) {\n \t\t\t\t\t$objp = $this->db->fetch_object($result);\n \n-\t\t\t\t\tif (dol_eval($objp->test, 1, 1)) {\n+\t\t\t\t\tif (dol_eval($objp->test, 1, 1, '')) {\n \t\t\t\t\t\t$nextrun = $this->db->jdate($objp->datenextrun);\n \t\t\t\t\t\tif (empty($nextrun)) {\n \t\t\t\t\t\t\t$nextrun = $this->db->jdate($objp->datestart);"
        },
        {
          "filename": "htdocs/core/class/commonobject.class.php",
          "status": "modified",
          "additions": 9,
          "deletions": 9,
          "patch": "@@ -5675,12 +5675,12 @@ public function setValuesForExtraLanguages($onlykey = '')\n \n \t\t\t$enabled = 1;\n \t\t\tif (isset($this->fields[$key]['enabled'])) {\n-\t\t\t\t$enabled = dol_eval($this->fields[$key]['enabled'], 1);\n+\t\t\t\t$enabled = dol_eval($this->fields[$key]['enabled'], 1, 1, '1');\n \t\t\t}\n \t\t\t/*$perms = 1;\n \t\t\tif (isset($this->fields[$key]['perms']))\n \t\t\t{\n-\t\t\t\t$perms = dol_eval($this->fields[$key]['perms'], 1);\n+\t\t\t\t$perms = dol_eval($this->fields[$key]['perms'], 1, 1, '1');\n \t\t\t}*/\n \t\t\tif (empty($enabled)) {\n \t\t\t\tcontinue;\n@@ -5836,7 +5836,7 @@ public function fetch_optionals($rowid = null, $optionsArray = null)\n \t\t\t\t\t\tif (!empty($extrafields) && !empty($extrafields->attributes[$this->table_element]['computed'][$key])) {\n \t\t\t\t\t\t\t//var_dump($conf->disable_compute);\n \t\t\t\t\t\t\tif (empty($conf->disable_compute)) {\n-\t\t\t\t\t\t\t\t$this->array_options[\"options_\".$key] = dol_eval($extrafields->attributes[$this->table_element]['computed'][$key], 1, 0);\n+\t\t\t\t\t\t\t\t$this->array_options[\"options_\".$key] = dol_eval($extrafields->attributes[$this->table_element]['computed'][$key], 1, 0, '');\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n@@ -5967,7 +5967,7 @@ public function insertExtraFields($trigger = '', $userused = null)\n \n \t\t\t\tif (!empty($attrfieldcomputed)) {\n \t\t\t\t\tif (!empty($conf->global->MAIN_STORE_COMPUTED_EXTRAFIELDS)) {\n-\t\t\t\t\t\t$value = dol_eval($attrfieldcomputed, 1, 0);\n+\t\t\t\t\t\t$value = dol_eval($attrfieldcomputed, 1, 0, '');\n \t\t\t\t\t\tdol_syslog($langs->trans(\"Extrafieldcomputed\").\" sur \".$attributeLabel.\"(\".$value.\")\", LOG_DEBUG);\n \t\t\t\t\t\t$new_array_options[$key] = $value;\n \t\t\t\t\t} else {\n@@ -6334,7 +6334,7 @@ public function updateExtraField($key, $trigger = null, $userused = null)\n \n \t\t\tif (!empty($attrfieldcomputed)) {\n \t\t\t\tif (!empty($conf->global->MAIN_STORE_COMPUTED_EXTRAFIELDS)) {\n-\t\t\t\t\t$value = dol_eval($attrfieldcomputed, 1, 0);\n+\t\t\t\t\t$value = dol_eval($attrfieldcomputed, 1, 0, '');\n \t\t\t\t\tdol_syslog($langs->trans(\"Extrafieldcomputed\").\" sur \".$attributeLabel.\"(\".$value.\")\", LOG_DEBUG);\n \t\t\t\t\t$this->array_options[\"options_\".$key] = $value;\n \t\t\t\t} else {\n@@ -7188,7 +7188,7 @@ public function showOutputField($val, $key, $value, $moreparam = '', $keysuffix\n \t\tif ($computed) {\n \t\t\t// Make the eval of compute string\n \t\t\t//var_dump($computed);\n-\t\t\t$value = dol_eval($computed, 1, 0);\n+\t\t\t$value = dol_eval($computed, 1, 0, '');\n \t\t}\n \n \t\tif (empty($morecss)) {\n@@ -7713,20 +7713,20 @@ public function showOptionals($extrafields, $mode = 'view', $params = null, $key\n \t\t\t\t\t// Test on 'enabled' ('enabled' is different than 'list' = 'visibility')\n \t\t\t\t\t$enabled = 1;\n \t\t\t\t\tif ($enabled && isset($extrafields->attributes[$this->table_element]['enabled'][$key])) {\n-\t\t\t\t\t\t$enabled = dol_eval($extrafields->attributes[$this->table_element]['enabled'][$key], 1);\n+\t\t\t\t\t\t$enabled = dol_eval($extrafields->attributes[$this->table_element]['enabled'][$key], 1, 1, '1');\n \t\t\t\t\t}\n \t\t\t\t\tif (empty($enabled)) {\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \n \t\t\t\t\t$visibility = 1;\n \t\t\t\t\tif ($visibility && isset($extrafields->attributes[$this->table_element]['list'][$key])) {\n-\t\t\t\t\t\t$visibility = dol_eval($extrafields->attributes[$this->table_element]['list'][$key], 1);\n+\t\t\t\t\t\t$visibility = dol_eval($extrafields->attributes[$this->table_element]['list'][$key], 1, 1, '1');\n \t\t\t\t\t}\n \n \t\t\t\t\t$perms = 1;\n \t\t\t\t\tif ($perms && isset($extrafields->attributes[$this->table_element]['perms'][$key])) {\n-\t\t\t\t\t\t$perms = dol_eval($extrafields->attributes[$this->table_element]['perms'][$key], 1);\n+\t\t\t\t\t\t$perms = dol_eval($extrafields->attributes[$this->table_element]['perms'][$key], 1, 1, '1');\n \t\t\t\t\t}\n \n \t\t\t\t\tif (($mode == 'create') && abs($visibility) != 1 && abs($visibility) != 3) {"
        },
        {
          "filename": "htdocs/core/class/extrafields.class.php",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -915,9 +915,9 @@ public function showInputField($key, $value, $moreparam = '', $keysuffix = '', $\n \t\t\t$unique = $this->attributes[$extrafieldsobjectkey]['unique'][$key];\n \t\t\t$required = $this->attributes[$extrafieldsobjectkey]['required'][$key];\n \t\t\t$param = $this->attributes[$extrafieldsobjectkey]['param'][$key];\n-\t\t\t$perms = dol_eval($this->attributes[$extrafieldsobjectkey]['perms'][$key], 1);\n+\t\t\t$perms = dol_eval($this->attributes[$extrafieldsobjectkey]['perms'][$key], 1, 1, '1');\n \t\t\t$langfile = $this->attributes[$extrafieldsobjectkey]['langfile'][$key];\n-\t\t\t$list = dol_eval($this->attributes[$extrafieldsobjectkey]['list'][$key], 1);\n+\t\t\t$list = dol_eval($this->attributes[$extrafieldsobjectkey]['list'][$key], 1, 1, '1');\n \t\t\t$totalizable = $this->attributes[$extrafieldsobjectkey]['totalizable'][$key];\n \t\t\t$help = $this->attributes[$extrafieldsobjectkey]['help'][$key];\n \t\t\t$hidden = (empty($list) ? 1 : 0); // If empty, we are sure it is hidden, otherwise we show. If it depends on mode (view/create/edit form or list, this must be filtered by caller)\n@@ -1505,9 +1505,9 @@ public function showOutputField($key, $value, $moreparam = '', $extrafieldsobjec\n \t\t\t$unique = $this->attributes[$extrafieldsobjectkey]['unique'][$key];\n \t\t\t$required = $this->attributes[$extrafieldsobjectkey]['required'][$key];\n \t\t\t$param = $this->attributes[$extrafieldsobjectkey]['param'][$key];\n-\t\t\t$perms = dol_eval($this->attributes[$extrafieldsobjectkey]['perms'][$key], 1);\n+\t\t\t$perms = dol_eval($this->attributes[$extrafieldsobjectkey]['perms'][$key], 1, 1, '1');\n \t\t\t$langfile = $this->attributes[$extrafieldsobjectkey]['langfile'][$key];\n-\t\t\t$list = dol_eval($this->attributes[$extrafieldsobjectkey]['list'][$key], 1);\n+\t\t\t$list = dol_eval($this->attributes[$extrafieldsobjectkey]['list'][$key], 1, 1, '1');\n \t\t\t$help = $this->attributes[$extrafieldsobjectkey]['help'][$key];\n \t\t\t$hidden = (empty($list) ? 1 : 0); // If $list empty, we are sure it is hidden, otherwise we show. If it depends on mode (view/create/edit form or list, this must be filtered by caller)\n \t\t} else {\n@@ -1959,17 +1959,17 @@ public function setOptionalsFromPost($extralabels, &$object, $onlykey = '')\n \n \t\t\t\t$enabled = 1;\n \t\t\t\tif (isset($this->attributes[$object->table_element]['enabled'][$key])) {\t// 'enabled' is often a condition on module enabled or not\n-\t\t\t\t\t$enabled = dol_eval($this->attributes[$object->table_element]['enabled'][$key], 1);\n+\t\t\t\t\t$enabled = dol_eval($this->attributes[$object->table_element]['enabled'][$key], 1, 1, '1');\n \t\t\t\t}\n \n \t\t\t\t$visibility = 1;\n \t\t\t\tif (isset($this->attributes[$object->table_element]['list'][$key])) {\t\t// 'list' is option for visibility\n-\t\t\t\t\t$visibility = dol_eval($this->attributes[$object->table_element]['list'][$key], 1);\n+\t\t\t\t\t$visibility = dol_eval($this->attributes[$object->table_element]['list'][$key], 1, 1, '1');\n \t\t\t\t}\n \n \t\t\t\t$perms = 1;\n \t\t\t\tif (isset($this->attributes[$object->table_element]['perms'][$key])) {\n-\t\t\t\t\t$perms = dol_eval($this->attributes[$object->table_element]['perms'][$key], 1);\n+\t\t\t\t\t$perms = dol_eval($this->attributes[$object->table_element]['perms'][$key], 1, 1, '1');\n \t\t\t\t}\n \t\t\t\tif (empty($enabled)) {\n \t\t\t\t\tcontinue;"
        },
        {
          "filename": "htdocs/core/class/html.form.class.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -7424,7 +7424,7 @@ public function selectForFormsList($objecttmp, $htmlname, $preselectedvalue, $sh\n \t\tif (!empty($objecttmp->fields)) {\t// For object that declare it, it is better to use declared fields (like societe, contact, ...)\n \t\t\t$tmpfieldstoshow = '';\n \t\t\tforeach ($objecttmp->fields as $key => $val) {\n-\t\t\t\tif (!dol_eval($val['enabled'], 1, 1)) {\n+\t\t\t\tif (!dol_eval($val['enabled'], 1, 1, 1, '1')) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (!empty($val['showoncombobox'])) {"
        },
        {
          "filename": "htdocs/core/class/html.formother.class.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -1501,10 +1501,10 @@ public function selectGroupByField($object, $search_groupby, &$arrayofgroupby, $\n \t\t\t\t\t'parent', 'photo', 'socialnetworks', 'webservices_url', 'webservices_key'))) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n-\t\t\t\tif (isset($val['enabled']) && !dol_eval($val['enabled'], 1)) {\n+\t\t\t\tif (isset($val['enabled']) && !dol_eval($val['enabled'], 1, 1, '1')) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n-\t\t\t\tif (isset($val['visible']) && !dol_eval($val['visible'], 1)) {\n+\t\t\t\tif (isset($val['visible']) && !dol_eval($val['visible'], 1, 1, '1')) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (preg_match('/^fk_/', $key) && !preg_match('/^fk_statu/', $key)) {\n@@ -1575,10 +1575,10 @@ public function selectXAxisField($object, $search_xaxis, &$arrayofxaxis)\n \t\t\t\t\t'parent', 'photo', 'socialnetworks', 'webservices_url', 'webservices_key'))) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n-\t\t\t\tif (isset($val['enabled']) && !dol_eval($val['enabled'], 1)) {\n+\t\t\t\tif (isset($val['enabled']) && !dol_eval($val['enabled'], 1, 1, '1')) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n-\t\t\t\tif (isset($val['visible']) && !dol_eval($val['visible'], 1)) {\n+\t\t\t\tif (isset($val['visible']) && !dol_eval($val['visible'], 1, 1, '1')) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (preg_match('/^fk_/', $key) && !preg_match('/^fk_statu/', $key)) {"
        },
        {
          "filename": "htdocs/core/class/menu.class.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -119,7 +119,7 @@ public function getNbOfVisibleMenuEntries()\n \t{\n \t\t$nb = 0;\n \t\tforeach ($this->liste as $val) {\n-\t\t\t//if (dol_eval($val['enabled'], 1)) $nb++;\n+\t\t\t//if (dol_eval($val['enabled'], 1, 1, '1')) $nb++;\n \t\t\tif (!empty($val['enabled'])) {\n \t\t\t\t$nb++; // $val['enabled'] is already evaluated to 0 or 1, no need for dol_eval()\n \t\t\t}"
        },
        {
          "filename": "htdocs/core/class/translate.class.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -656,7 +656,7 @@ public function trans($key, $param1 = '', $param2 = '', $param3 = '', $param4 =\n \n \t\t\treturn $str;\n \t\t} else { // Translation is not available\n-\t\t\t//if ($key[0] == '$') { return dol_eval($key,1); }\n+\t\t\t//if ($key[0] == '$') { return dol_eval($key, 1, 1, '1'); }\n \t\t\treturn $this->getTradFromKey($key);\n \t\t}\n \t}\n@@ -722,7 +722,7 @@ public function transnoentitiesnoconv($key, $param1 = '', $param2 = '', $param3\n \t\t\treturn $str;\n \t\t} else {\n \t\t\tif ($key[0] == '$') {\n-\t\t\t\treturn dol_eval($key, 1);\n+\t\t\t\treturn dol_eval($key, 1, 1, '1');\n \t\t\t}\n \t\t\treturn $this->getTradFromKey($key);\n \t\t}"
        },
        {
          "filename": "htdocs/core/customreports.php",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -371,7 +371,7 @@\n print '<div class=\"inline-block\"><span class=\"opacitymedium\">'.$langs->trans(\"StatisticsOn\").'</span></div> ';\n $newarrayoftype = array();\n foreach ($arrayoftype as $key => $val) {\n-\tif (dol_eval($val['enabled'], 1)) {\n+\tif (dol_eval($val['enabled'], 1, 1, '1')) {\n \t\t$newarrayoftype[$key] = $arrayoftype[$key];\n \t}\n \tif ($val['langs']) {\n@@ -402,7 +402,7 @@\n // Add measures into array\n print '<div class=\"divadvancedsearchfield clearboth\">';\n foreach ($object->fields as $key => $val) {\n-\tif (!empty($val['isameasure']) && (!isset($val['enabled']) || dol_eval($val['enabled'], 1))) {\n+\tif (!empty($val['isameasure']) && (!isset($val['enabled']) || dol_eval($val['enabled'], 1, 1, '1'))) {\n \t\t$arrayofmesures['t.'.$key.'-sum'] = $langs->trans($val['label']).' <span class=\"opacitymedium\">('.$langs->trans(\"Sum\").')</span>';\n \t\t$arrayofmesures['t.'.$key.'-average'] = $langs->trans($val['label']).' <span class=\"opacitymedium\">('.$langs->trans(\"Average\").')</span>';\n \t\t$arrayofmesures['t.'.$key.'-min'] = $langs->trans($val['label']).' <span class=\"opacitymedium\">('.$langs->trans(\"Minimum\").')</span>';\n@@ -412,7 +412,7 @@\n // Add extrafields to Measures\n if ($object->isextrafieldmanaged) {\n \tforeach ($extrafields->attributes[$object->table_element]['label'] as $key => $val) {\n-\t\tif (!empty($extrafields->attributes[$object->table_element]['totalizable'][$key]) && (!isset($extrafields->attributes[$object->table_element]['enabled'][$key]) || dol_eval($extrafields->attributes[$object->table_element]['enabled'][$key], 1))) {\n+\t\tif (!empty($extrafields->attributes[$object->table_element]['totalizable'][$key]) && (!isset($extrafields->attributes[$object->table_element]['enabled'][$key]) || dol_eval($extrafields->attributes[$object->table_element]['enabled'][$key], 1, 1, '1'))) {\n \t\t\t$arrayofmesures['te.'.$key.'-sum'] = $langs->trans($extrafields->attributes[$object->table_element]['label'][$key]).' <span class=\"opacitymedium\">('.$langs->trans(\"Sum\").')</span>';\n \t\t\t$arrayofmesures['te.'.$key.'-average'] = $langs->trans($extrafields->attributes[$object->table_element]['label'][$key]).' <span class=\"opacitymedium\">('.$langs->trans(\"Average\").')</span>';\n \t\t\t$arrayofmesures['te.'.$key.'-min'] = $langs->trans($extrafields->attributes[$object->table_element]['label'][$key]).' <span class=\"opacitymedium\">('.$langs->trans(\"Minimum\").')</span>';\n@@ -443,7 +443,7 @@\n \t// YAxis\n \tprint '<div class=\"divadvancedsearchfield\">';\n \tforeach ($object->fields as $key => $val) {\n-\t\tif (empty($val['measure']) && (!isset($val['enabled']) || dol_eval($val['enabled'], 1))) {\n+\t\tif (empty($val['measure']) && (!isset($val['enabled']) || dol_eval($val['enabled'], 1, 1, '1'))) {\n \t\t\tif (in_array($key, array('id', 'rowid', 'entity', 'last_main_doc', 'extraparams'))) {\n \t\t\t\tcontinue;\n \t\t\t}\n@@ -464,7 +464,7 @@\n \t\t// Add measure from extrafields\n \t\tif ($object->isextrafieldmanaged) {\n \t\t\tforeach ($extrafields->attributes[$object->table_element]['label'] as $key => $val) {\n-\t\t\t\tif (!empty($extrafields->attributes[$object->table_element]['totalizable'][$key]) && (!isset($extrafields->attributes[$object->table_element]['enabled'][$key]) || dol_eval($extrafields->attributes[$object->table_element]['enabled'][$key], 1))) {\n+\t\t\t\tif (!empty($extrafields->attributes[$object->table_element]['totalizable'][$key]) && (!isset($extrafields->attributes[$object->table_element]['enabled'][$key]) || dol_eval($extrafields->attributes[$object->table_element]['enabled'][$key], 1, 1, '1'))) {\n \t\t\t\t\t$arrayofyaxis['te.'.$key] = array('label' => $extrafields->attributes[$object->table_element]['label'][$key], 'position' => (int) $extrafields->attributes[$object->table_element]['pos'][$key]);\n \t\t\t\t}\n \t\t\t}"
        },
        {
          "filename": "htdocs/core/lib/functions.lib.php",
          "status": "modified",
          "additions": 18,
          "deletions": 8,
          "patch": "@@ -8188,12 +8188,13 @@ function verifCond($strToEvaluate)\n  * Replace eval function to add more security.\n  * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n  *\n- * @param \tstring\t$s\t\t\t\tString to evaluate\n- * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n- * @param   int     $hideerrors     1=Hide errors\n- * @return\tmixed\t\t\t\t\tNothing or return result of eval\n+ * @param \tstring\t$s\t\t\t\t\tString to evaluate\n+ * @param\tint\t\t$returnvalue\t\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n+ * @param   int     $hideerrors     \t1=Hide errors\n+ * @param\tstring\t$onlysimplestring\tAccept only simple string with char 'a-z0-9\\s$_->&|=';\n+ * @return\tmixed\t\t\t\t\t\tNothing or return result of eval\n  */\n-function dol_eval($s, $returnvalue = 0, $hideerrors = 1)\n+function dol_eval($s, $returnvalue = 0, $hideerrors = 1, $onlysimplestring = '1')\n {\n \t// Only global variables can be changed by eval function and returned to caller\n \tglobal $db, $langs, $user, $conf, $website, $websitepage;\n@@ -8205,17 +8206,26 @@ function dol_eval($s, $returnvalue = 0, $hideerrors = 1)\n \tglobal $obj; // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n \tglobal $soc; // For backward compatibility\n \n-\t// Replace dangerous char (used for RCE), we allow only PHP variable testing.\n+\t// Test dangerous char (used for RCE), we allow only PHP variable testing.\n+\tif ($onlysimplestring == '1') {\n+\t\t//print preg_quote('$_->&|', '/');\n+\t\tif (preg_match('/[^a-z0-9\\s'.preg_quote('$_->&|=', '/').']/i', $s)) {\n+\t\t\treturn 'Bad string syntax to evaluate (found chars that are not chars for simplestring): '.$s;\n+\t\t}\n+\t}\n \tif (strpos($s, '`') !== false) {\n-\t\treturn 'Bad string syntax to evaluate: '.$s;\n+\t\treturn 'Bad string syntax to evaluate (backtick char is forbidden): '.$s;\n+\t}\n+\tif (strpos($s, '.') !== false) {\n+\t\treturn 'Bad string syntax to evaluate (dot char is forbidden): '.$s;\n \t}\n \n \t// We block use of php exec or php file functions\n \t$forbiddenphpstrings = array('$$');\n \t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array('_ENV', '_SESSION', '_COOKIE', '_GET', '_POST', '_REQUEST'));\n \n \t$forbiddenphpfunctions = array(\"exec\", \"passthru\", \"shell_exec\", \"system\", \"proc_open\", \"popen\", \"eval\", \"dol_eval\", \"executeCLI\");\n-\t$forbiddenphpfunctions = array_merge($forbiddenphpfunctions, array(\"fopen\", \"file_put_contents\", \"fputs\", \"fputscsv\", \"fwrite\", \"fpassthru\", \"unlink\", \"mkdir\", \"rmdir\", \"symlink\", \"touch\", \"umask\"));\n+\t$forbiddenphpfunctions = array_merge($forbiddenphpfunctions, array(\"fopen\", \"file_put_contents\", \"fputs\", \"fputscsv\", \"fwrite\", \"fpassthru\", \"require\", \"include\", \"mkdir\", \"rmdir\", \"symlink\", \"touch\", \"unlink\", \"umask\"));\n \t$forbiddenphpfunctions = array_merge($forbiddenphpfunctions, array(\"function\", \"call_user_func\"));\n \n \t$forbiddenphpregex = 'global\\s+\\$|\\b('.implode('|', $forbiddenphpfunctions).')\\b';"
        },
        {
          "filename": "htdocs/core/tpl/admin_extrafields_view.tpl.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -73,7 +73,7 @@\n \n if (isset($extrafields->attributes[$elementtype]['type']) && is_array($extrafields->attributes[$elementtype]['type']) && count($extrafields->attributes[$elementtype]['type'])) {\n \tforeach ($extrafields->attributes[$elementtype]['type'] as $key => $value) {\n-\t\t/*if (! dol_eval($extrafields->attributes[$elementtype]['enabled'][$key], 1)) {\n+\t\t/*if (! dol_eval($extrafields->attributes[$elementtype]['enabled'][$key], 1, 1, '1')) {\n \t\t\t// TODO Uncomment this to exclude extrafields of modules not enabled. Add a link to \"Show extrafields disabled\"\n \t\t\t// continue;\n \t\t}*/"
        },
        {
          "filename": "htdocs/core/tpl/extrafields_list_array_fields.tpl.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -23,9 +23,9 @@\n \t\t\t\t$arrayfields[$extrafieldsobjectprefix.$key] = array(\n \t\t\t\t\t'label'    => $extrafields->attributes[$extrafieldsobjectkey]['label'][$key],\n \t\t\t\t\t'type'     => $extrafields->attributes[$extrafieldsobjectkey]['type'][$key],\n-\t\t\t\t\t'checked'  => ((dol_eval($extrafields->attributes[$extrafieldsobjectkey]['list'][$key], 1) <= 0) ? 0 : 1),\n+\t\t\t\t\t'checked'  => ((dol_eval($extrafields->attributes[$extrafieldsobjectkey]['list'][$key], 1, 1, '1') <= 0) ? 0 : 1),\n \t\t\t\t\t'position' => $extrafields->attributes[$extrafieldsobjectkey]['pos'][$key],\n-\t\t\t\t\t'enabled'  => (abs((int) $extrafields->attributes[$extrafieldsobjectkey]['list'][$key]) != 3 && dol_eval($extrafields->attributes[$extrafieldsobjectkey]['perms'][$key], 1)),\n+\t\t\t\t\t'enabled'  => (abs((int) $extrafields->attributes[$extrafieldsobjectkey]['list'][$key]) != 3 && dol_eval($extrafields->attributes[$extrafieldsobjectkey]['perms'][$key], 1, 1, '1')),\n \t\t\t\t\t'langfile' => $extrafields->attributes[$extrafieldsobjectkey]['langfile'][$key],\n \t\t\t\t\t'help'     => $extrafields->attributes[$extrafieldsobjectkey]['help'][$key],\n \t\t\t\t);"
        },
        {
          "filename": "htdocs/core/tpl/extrafields_list_print_fields.tpl.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@\n \t\t\t\t\t//var_dump($extrafields->attributes[$extrafieldsobjectkey]['computed'][$key]);\n \t\t\t\t\t//var_dump($obj);\n \t\t\t\t\t//var_dump($extrafields->attributes[$extrafieldsobjectkey]['computed'][$key]);\n-\t\t\t\t\t$value = dol_eval($extrafields->attributes[$extrafieldsobjectkey]['computed'][$key], 1);\n+\t\t\t\t\t$value = dol_eval($extrafields->attributes[$extrafieldsobjectkey]['computed'][$key], 1, 1, '0');\n \t\t\t\t\t//var_dump($value);\n \t\t\t\t}\n "
        },
        {
          "filename": "htdocs/eventorganization/conferenceorbooth_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/eventorganization/conferenceorboothattendee_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -122,11 +122,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/hrm/evaluation_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/hrm/job_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/hrm/position.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -357,11 +357,11 @@ function DisplayPositionList()\n \tforeach ($object->fields as $key => $val) {\n \t\t// If $val['visible']==0, then we never show the field\n \t\tif (!empty($val['visible'])) {\n-\t\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t\t$arrayfields['t.' . $key] = array(\n \t\t\t\t'label' => $val['label'],\n \t\t\t\t'checked' => (($visible < 0) ? 0 : 1),\n-\t\t\t\t'enabled' => ($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t\t'enabled' => ($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t\t'position' => $val['position'],\n \t\t\t\t'help' => isset($val['help']) ? $val['help'] : ''\n \t\t\t);"
        },
        {
          "filename": "htdocs/hrm/position_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/hrm/skill_card.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -538,11 +538,11 @@\n \tforeach ($objectline->fields as $key => $val) {\n \t\t// If $val['visible']==0, then we never show the field\n \t\tif (!empty($val['visible'])) {\n-\t\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t\t$arrayfields['t.' . $key] = array(\n \t\t\t\t'label' => $val['label'],\n \t\t\t\t'checked' => (($visible < 0) ? 0 : 1),\n-\t\t\t\t'enabled' => ($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t\t'enabled' => ($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t\t'position' => $val['position'],\n \t\t\t\t'help' => isset($val['help']) ? $val['help'] : ''\n \t\t\t);"
        },
        {
          "filename": "htdocs/hrm/skill_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/knowledgemanagement/knowledgerecord_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -114,11 +114,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/mrp/mo_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -109,11 +109,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/partnership/partnership_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -118,11 +118,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/product/inventory/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -102,11 +102,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/product/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -244,11 +244,11 @@\n /*foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = dol_eval($val['visible'], 1);\n+\t\t$visible = dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['p.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position']\n \t\t);\n \t}"
        },
        {
          "filename": "htdocs/product/stock/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -117,11 +117,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : 'help'\n \t\t);"
        },
        {
          "filename": "htdocs/product/stock/productlot_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -104,11 +104,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = dol_eval($val['visible'], 1);\n+\t\t$visible = dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position']\n \t\t);\n \t}"
        },
        {
          "filename": "htdocs/projet/class/task.class.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -27,6 +27,7 @@\n  */\n \n require_once DOL_DOCUMENT_ROOT.'/core/class/commonobject.class.php';\n+require_once DOL_DOCUMENT_ROOT.'/core/class/commonobjectline.class.php';\n require_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n \n "
        },
        {
          "filename": "htdocs/projet/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -182,11 +182,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = dol_eval($val['visible'], 1);\n+\t\t$visible = dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['p.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/recruitment/recruitmentcandidature_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -151,11 +151,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = dol_eval($val['visible'], 1);\n+\t\t$visible = dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position']\n \t\t);\n \t}"
        },
        {
          "filename": "htdocs/recruitment/recruitmentjobposition_list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -153,11 +153,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/salaries/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -134,11 +134,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/salaries/payments.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -129,11 +129,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/ticket/list.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -136,11 +136,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help'=> isset($val['help']) ? $val['help'] : ''\n \t\t);"
        },
        {
          "filename": "htdocs/workstation/workstation_list.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -108,11 +108,11 @@\n foreach ($object->fields as $key => $val) {\n \t// If $val['visible']==0, then we never show the field\n \tif (!empty($val['visible'])) {\n-\t\t$visible = (int) dol_eval($val['visible'], 1);\n+\t\t$visible = (int) dol_eval($val['visible'], 1, 1, '1');\n \t\t$arrayfields['t.'.$key] = array(\n \t\t\t'label'=>$val['label'],\n \t\t\t'checked'=>(($visible < 0) ? 0 : 1),\n-\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t\t\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t\t\t'position'=>$val['position'],\n \t\t\t'help' => empty($val['help']) ? '' : $val['help']\n \t\t);\n@@ -130,7 +130,7 @@\n $arrayfields['wr.fk_resource'] = array(\n \t'label'=>$langs->trans('Resources'),\n \t'checked'=>(($visible < 0) ? 0 : 1),\n-\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1)),\n+\t'enabled'=>($visible != 3 && dol_eval($val['enabled'], 1, 1, '1')),\n \t'position'=>1001,\n \t'help' => empty($val['help']) ? '' : $val['help']\n );"
        },
        {
          "filename": "test/phpunit/SecurityTest.php",
          "status": "modified",
          "additions": 22,
          "deletions": 2,
          "patch": "@@ -875,11 +875,18 @@ public function testDolEval()\n \n \t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n \t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/task.class.php';\n-\t\t$result=dol_eval('(($reloadedobj = new Task($db)) && ($reloadedobj->fetchNoCompute($object->id) > 0) && ($secondloadedobj = new Project($db)) && ($secondloadedobj->fetchNoCompute($reloadedobj->fk_project) > 0)) ? $secondloadedobj->ref: \"Parent project not found\"', 1, 1);\n+\n+\t\t$s = '(($reloadedobj = new Task($db)) && ($reloadedobj->fetchNoCompute($object->id) > 0) && ($secondloadedobj = new Project($db)) && ($secondloadedobj->fetchNoCompute($reloadedobj->fk_project) > 0)) ? $secondloadedobj->ref: \"Parent project not found\"';\n+\t\t$result=dol_eval($s, 1, 1, '');\n+\t\tprint \"result = \".$result.\"\\n\";\n+\t\t$this->assertEquals('Parent project not found', $result);\n+\n+\t\t$s = '(($reloadedobj = new Task($db)) && ($reloadedobj->fetchNoCompute($object->id) > 0) && ($secondloadedobj = new Project($db)) && ($secondloadedobj->fetchNoCompute($reloadedobj->fk_project) > 0)) ? $secondloadedobj->ref: \\'Parent project not found\\'';\n+\t\t$result=dol_eval($s, 1, 1, '');\n \t\tprint \"result = \".$result.\"\\n\";\n \t\t$this->assertEquals('Parent project not found', $result);\n \n-\t\t$result=dol_eval('$a=function() { }; $a;', 1, 1);\n+\t\t$result=dol_eval('$a=function() { }; $a;', 1, 1, '');\n \t\tprint \"result = \".$result.\"\\n\";\n \t\t$this->assertContains('Bad string syntax to evaluate', $result);\n \n@@ -898,5 +905,18 @@ public function testDolEval()\n \t\t$result=dol_eval('`ls`', 1, 0);\n \t\tprint \"result = \".$result.\"\\n\";\n \t\t$this->assertContains('Bad string syntax to evaluate', $result);\n+\n+\t\t$result=dol_eval(\"('ex'.'ec')('echo abc')\", 1, 0);\n+\t\tprint \"result = \".$result.\"\\n\";\n+\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n+\n+\t\t// Case with param onlysimplestring = 1\n+\t\t$result=dol_eval('1 && $conf->abc->doesnotexist1 && $conf->def->doesnotexist1', 1, 0);\t// Should return false and not a 'Bad string syntax to evaluate ...'\n+\t\tprint \"result = \".$result.\"\\n\";\n+\t\t$this->assertFalse($result);\n+\n+\t\t$result=dol_eval(\"(\\$a.'aa')\", 1, 0);\n+\t\tprint \"result = \".$result.\"\\n\";\n+\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 26,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Code Injection in GitHub repository dolibarr/dolibarr prior to 15.0.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-02T16:15:07.913",
    "last_modified": "2024-11-21T06:39:27.627",
    "fix_date": "2022-03-01T15:38:06Z"
  },
  "references": [
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.767590",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T13:35:25Z",
    "size": 1507308,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1165,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T15:25:45.089853"
  }
}