{
  "cve_id": "CVE-2022-0849",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "10517e3ff0e609697eb8cde60ec8dc999ee5ea24",
    "related_commits": [
      "10517e3ff0e609697eb8cde60ec8dc999ee5ea24",
      "10517e3ff0e609697eb8cde60ec8dc999ee5ea24"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "10517e3ff0e609697eb8cde60ec8dc999ee5ea24",
      "commit_date": "2022-03-04T09:48:13Z",
      "author": {
        "login": "trufae",
        "type": "User",
        "stats": {
          "total_commits": 1794,
          "average_weekly_commits": 2.148502994011976,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 236
        }
      },
      "commit_message": {
        "title": "aaef on arm/thumb switches causes uaf ##crash",
        "length": 120,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 22,
        "additions": 13,
        "deletions": 9
      },
      "files": [
        {
          "filename": "libr/anal/arch/kvx/kvx-dis.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -94,9 +94,11 @@ static inline int kvx_is_tca_opcode(ut32 x) {\n \treturn (major > 1) && (major < 8);\n }\n \n+#if UNUSED0\n static inline int kvx_is_nop_opcode(ut32 x) {\n \treturn ((x)<<1) == 0xFFFFFFFE;\n }\n+#endif\n \n static inline int kvx_opc_match(const opc_t *opc, insn_t *insn) {\n \tint i;"
        },
        {
          "filename": "libr/core/canal.c",
          "status": "modified",
          "additions": 11,
          "deletions": 9,
          "patch": "@@ -1,4 +1,4 @@\n-/* radare - LGPL - Copyright 2009-2021 - pancake, nibble */\n+/* radare - LGPL - Copyright 2009-2022 - pancake, nibble */\n \n #include <r_types.h>\n #include <r_list.h>\n@@ -4727,7 +4727,7 @@ static bool myvalid(RIO *io, ut64 addr) {\n typedef struct {\n \tRAnalOp *op;\n \tRAnalFunction *fcn;\n-\tconst char *spname;\n+\tchar *spname;\n \tut64 initial_sp;\n } EsilBreakCtx;\n \n@@ -5099,7 +5099,7 @@ R_API void r_core_anal_esil(RCore *core, const char *str, const char *target) {\n \tbool gp_fixed = r_config_get_i (core->config, \"anal.gpfixed\");\n \tRAnalEsil *ESIL = core->anal->esil;\n \tut64 refptr = 0LL;\n-\tconst char *pcname;\n+\tchar *pcname = NULL;\n \tRAnalOp op = R_EMPTY;\n \tut8 *buf = NULL;\n \tbool end_address_set = false;\n@@ -5188,11 +5188,12 @@ R_API void r_core_anal_esil(RCore *core, const char *str, const char *target) {\n \t\tr_core_cmd0 (core, \"aeim\");\n \t\tESIL = core->anal->esil;\n \t}\n-\tconst char *spname = r_reg_get_name (core->anal->reg, R_REG_NAME_SP);\n-\tif (!spname) {\n+\tconst char *kspname = r_reg_get_name (core->anal->reg, R_REG_NAME_SP);\n+\tif (R_STR_ISEMPTY (kspname)) {\n \t\teprintf (\"Error: No =SP defined in the reg profile.\\n\");\n \t\treturn;\n \t}\n+\tchar *spname = strdup (kspname);\n \tEsilBreakCtx ctx = {\n \t\t&op,\n \t\tfcn,\n@@ -5210,11 +5211,12 @@ R_API void r_core_anal_esil(RCore *core, const char *str, const char *target) {\n \t}\n \t//eprintf (\"Analyzing ESIL refs from 0x%\"PFMT64x\" - 0x%\"PFMT64x\"\\n\", addr, end);\n \t// TODO: backup/restore register state before/after analysis\n-\tpcname = r_reg_get_name (core->anal->reg, R_REG_NAME_PC);\n-\tif (!pcname || !*pcname) {\n+\tconst char *kpcname = r_reg_get_name (core->anal->reg, R_REG_NAME_PC);\n+\tif (!kpcname || !*kpcname) {\n \t\teprintf (\"Cannot find program counter register in the current profile.\\n\");\n \t\treturn;\n \t}\n+\tpcname = strdup (kpcname);\n \tesil_anal_stop = false;\n \tr_cons_break_push (cccb, core);\n \n@@ -5299,11 +5301,9 @@ R_API void r_core_anal_esil(RCore *core, const char *str, const char *target) {\n \t\tr_anal_op_fini (&op);\n \t\tr_asm_set_pc (core->rasm, cur);\n \t\ti_old = i;\n-#if 1\n \t\tif (i > iend) {\n \t\t\tgoto repeat;\n \t\t}\n-#endif\n \t\tif (!r_anal_op (core->anal, &op, cur, buf + i, iend - i, R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT)) {\n \t\t\ti += minopsize - 1; //   XXX dupe in op.size below\n \t\t}\n@@ -5544,6 +5544,8 @@ R_API void r_core_anal_esil(RCore *core, const char *str, const char *target) {\n \t\t\tbreak;\n \t\t}\n \t} while (get_next_i (&ictx, &i));\n+\tfree (pcname);\n+\tfree (spname);\n \tr_list_free (ictx.bbl);\n \tr_list_free (ictx.path);\n \tr_list_free (ictx.switch_path);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a7952c1e8041ec75e4e97559f0e5a62ed788d34a",
            "date": "2025-01-24T20:15:44Z",
            "author_login": "trufae"
          },
          {
            "sha": "40fe8e885d09148f4ef6d76dbd73b7e829123267",
            "date": "2025-01-24T18:59:45Z",
            "author_login": "radare"
          },
          {
            "sha": "8741d91143a8b3e54df0804142d12d4f95d16afc",
            "date": "2025-01-24T16:34:02Z",
            "author_login": "radare"
          },
          {
            "sha": "be8877140891d1c33721a136d26007a0df5b61db",
            "date": "2025-01-24T16:34:02Z",
            "author_login": "jukuisma"
          },
          {
            "sha": "3704f48fea7e2edc41e51cde95dd009c4c9bd00a",
            "date": "2025-01-24T16:29:42Z",
            "author_login": "jukuisma"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-416",
    "description": "Use After Free in r_reg_get_name_idx in GitHub repository radareorg/radare2 prior to 5.6.6.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-05T10:15:07.760",
    "last_modified": "2024-11-21T06:39:31.343",
    "fix_date": "2022-03-04T09:48:13Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/10517e3ff0e609697eb8cde60ec8dc999ee5ea24",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/29c5f76e-5f1f-43ab-a0c8-e31951e407b6",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/10517e3ff0e609697eb8cde60ec8dc999ee5ea24",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/29c5f76e-5f1f-43ab-a0c8-e31951e407b6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.782064",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-26T01:36:40Z",
    "pushed_at": "2025-01-24T20:15:44Z",
    "size": 180125,
    "stars": 21051,
    "forks": 3034,
    "open_issues": 875,
    "watchers": 21051,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29151635,
      "Makefile": 261654,
      "Shell": 144962,
      "Meson": 123696,
      "C++": 86180,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1630,
      "avg_commits_per_week": 31.346153846153847,
      "days_active_last_year": 297
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:35:47.834479"
  }
}