{
  "cve_id": "CVE-2022-1053",
  "github_data": {
    "repository": "keylime/keylime",
    "fix_commit": "bd5de712acdd77860e7dc58969181e16c7a8dc5d",
    "related_commits": [
      "bd5de712acdd77860e7dc58969181e16c7a8dc5d",
      "bd5de712acdd77860e7dc58969181e16c7a8dc5d"
    ],
    "patch_url": "https://github.com/keylime/keylime/commit/bd5de712acdd77860e7dc58969181e16c7a8dc5d.patch",
    "fix_commit_details": {
      "sha": "bd5de712acdd77860e7dc58969181e16c7a8dc5d",
      "commit_date": "2022-04-06T14:08:38Z",
      "author": {
        "login": "THS-on",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "tenant, verifier: let the tenant provide the AK and mTLS certificate",
        "length": 185,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 23,
        "additions": 6,
        "deletions": 17
      },
      "files": [
        {
          "filename": "keylime/cloud_verifier_tornado.py",
          "status": "modified",
          "additions": 4,
          "deletions": 17,
          "patch": "@@ -19,7 +19,6 @@\n \n from keylime import config\n from keylime import json\n-from keylime import registrar_client\n from keylime.agentstates import AgentAttestStates\n from keylime.common import states, validators, retry\n from keylime.db.verifier_db import VerfierMain\n@@ -444,6 +443,8 @@ def post(self):\n                     agent_data['accept_tpm_encryption_algs'] = json_body['accept_tpm_encryption_algs']\n                     agent_data['accept_tpm_signing_algs'] = json_body['accept_tpm_signing_algs']\n                     agent_data['supported_version'] = json_body['supported_version']\n+                    agent_data['ak_tpm'] = json_body['ak_tpm']\n+                    agent_data['mtls_cert'] = json_body.get('mtls_cert', None)\n                     agent_data['hash_alg'] = \"\"\n                     agent_data['enc_alg'] = \"\"\n                     agent_data['sign_alg'] = \"\"\n@@ -457,22 +458,8 @@ def post(self):\n                     agent_data['verifier_ip'] = config.get('cloud_verifier', 'cloudverifier_ip')\n                     agent_data['verifier_port'] = config.get('cloud_verifier', 'cloudverifier_port')\n \n-                    # We fetch the registrar data directly here because we require it for connecting to the agent\n-                    # using mTLS\n-                    registrar_client.init_client_tls('cloud_verifier')\n-                    registrar_data = registrar_client.getData(config.get(\"cloud_verifier\", \"registrar_ip\"),\n-                                                              config.get(\"cloud_verifier\", \"registrar_port\"), agent_id)\n-                    if registrar_data is None:\n-                        web_util.echo_json_response(self, 400,\n-                                                    f\"Data for agent {agent_id} could not be found in registrar!\")\n-                        logger.warning(\"Data for agent %s could not be found in registrar!\", agent_id)\n-                        return\n-\n-                    agent_data['mtls_cert'] = registrar_data.get('mtls_cert', None)\n-                    agent_data['ak_tpm'] = registrar_data['aik_tpm']\n-\n                     # TODO: Always error for v1.0 version after initial upgrade\n-                    if registrar_data.get('mtls_cert', None) is None and agent_data['supported_version'] != \"1.0\":\n+                    if agent_data['mtls_cert'] is None and agent_data['supported_version'] != \"1.0\":\n                         web_util.echo_json_response(self, 400, \"mTLS certificate for agent is required!\")\n                         return\n \n@@ -510,7 +497,7 @@ def post(self):\n \n                         # Prepare SSLContext for mTLS connections\n                         agent_mtls_cert_enabled = config.getboolean('cloud_verifier', 'agent_mtls_cert_enabled', fallback=False)\n-                        mtls_cert = registrar_data.get('mtls_cert', None)\n+                        mtls_cert = agent_data['mtls_cert']\n                         agent_data['ssl_context'] = None\n                         if agent_mtls_cert_enabled and mtls_cert:\n                             agent_data['ssl_context'] = web_util.generate_agent_mtls_context(mtls_cert, self.mtls_options)"
        },
        {
          "filename": "keylime/tenant.py",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -631,6 +631,8 @@ def do_cv(self):\n             'accept_tpm_hash_algs': self.accept_tpm_hash_algs,\n             'accept_tpm_encryption_algs': self.accept_tpm_encryption_algs,\n             'accept_tpm_signing_algs': self.accept_tpm_signing_algs,\n+            'ak_tpm': self.registrar_data['aik_tpm'],\n+            'mtls_cert': self.registrar_data.get('mtls_cert', None),\n             'supported_version': self.supported_version,\n         }\n         json_message = json.dumps(data)"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7acb977f46355cd56495316733f622c7937a9e03",
            "date": "2025-01-06T15:32:59Z",
            "author_login": "sergio-correia"
          },
          {
            "sha": "f832ad542b169902949f350fb03f3e4354201b3b",
            "date": "2024-12-18T19:45:24Z",
            "author_login": "sergio-correia"
          },
          {
            "sha": "29ddc5d047a889da10e58df6b6b11c13f3463b1e",
            "date": "2025-01-02T09:27:25Z",
            "author_login": "ansasaki"
          },
          {
            "sha": "5756729b8a5ff6b15ac4af4a1a90a5a551b46291",
            "date": "2024-12-20T16:54:24Z",
            "author_login": "ansasaki"
          },
          {
            "sha": "c366e821b0f6cda3a7459a40d9a5199b5b245eaf",
            "date": "2024-12-23T10:27:03Z",
            "author_login": "ansasaki"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-20",
    "description": "Keylime does not enforce that the agent registrar data is the same when the tenant uses it for validation of the EK and identity quote and the verifier for validating the integrity quote. This allows an attacker to use one AK, EK pair from a real TPM to pass EK validation and give the verifier an AK of a software TPM. A successful attack breaks the entire chain of trust because a not validated AK is used by the verifier. This issue is worse if the validation happens first and then the agent gets added to the verifier because the timing is easier and the verifier does not validate the regcount entry being equal to 1,",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-06T17:15:08.770",
    "last_modified": "2024-11-21T06:39:56.393",
    "fix_date": "2022-04-06T14:08:38Z"
  },
  "references": [
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2065024%2C",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://github.com/keylime/keylime/commit/bd5de712acdd77860e7dc58969181e16c7a8dc5d",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/keylime/keylime/security/advisories/GHSA-jf66-3q76-h5p5%2C",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A7WAKVXM7L5D2DUACV6EHA6EJNAX2GVL/",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RF6QHU4UGSBATC3HOOE7OP66CYVTR7CV/",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WEW2PAXO5YGLDLPG45YV2OPLJXJSCECQ/",
      "source": "secalert@redhat.com",
      "tags": []
    },
    {
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2065024%2C",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/keylime/keylime/commit/bd5de712acdd77860e7dc58969181e16c7a8dc5d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/keylime/keylime/security/advisories/GHSA-jf66-3q76-h5p5%2C",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A7WAKVXM7L5D2DUACV6EHA6EJNAX2GVL/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RF6QHU4UGSBATC3HOOE7OP66CYVTR7CV/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WEW2PAXO5YGLDLPG45YV2OPLJXJSCECQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.089729",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "keylime",
    "owner": "keylime",
    "created_at": "2016-10-19T13:25:46Z",
    "updated_at": "2025-01-12T12:34:11Z",
    "pushed_at": "2025-01-09T12:26:20Z",
    "size": 15805,
    "stars": 438,
    "forks": 153,
    "open_issues": 34,
    "watchers": 438,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 1433962,
      "Jinja": 185366,
      "Shell": 68786,
      "Dockerfile": 1771,
      "Standard ML": 1202,
      "Mako": 919,
      "Makefile": 138
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:30:01.325109"
  }
}