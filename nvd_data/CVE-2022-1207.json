{
  "cve_id": "CVE-2022-1207",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "605785b65dd356d46d4487faa41dbf90943b8bc1",
    "related_commits": [
      "605785b65dd356d46d4487faa41dbf90943b8bc1",
      "605785b65dd356d46d4487faa41dbf90943b8bc1"
    ],
    "patch_url": "https://github.com/radareorg/radare2/commit/605785b65dd356d46d4487faa41dbf90943b8bc1.patch",
    "fix_commit_details": {
      "sha": "605785b65dd356d46d4487faa41dbf90943b8bc1",
      "commit_date": "2022-04-01T19:03:24Z",
      "author": {
        "login": "radare",
        "type": "User",
        "stats": {
          "total_commits": 16352,
          "average_weekly_commits": 19.630252100840337,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 785
        }
      },
      "commit_message": {
        "title": "Fix 1 byte oobread in the cris analysis plugin ##crash",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 22,
        "deletions": 9
      },
      "files": [
        {
          "filename": "libr/anal/p/anal_cris.c",
          "status": "modified",
          "additions": 22,
          "deletions": 9,
          "patch": "@@ -1,4 +1,4 @@\n-/* radare2 - LGPL - Copyright 2014-2015 - pancake */\n+/* radare2 - LGPL - Copyright 2014-2022 - pancake */\n \n #include <r_asm.h>\n #include <r_lib.h>\n@@ -7,6 +7,9 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \tint opsize = -1;\n \top->type = -1;\n \topsize = 2;\n+\tif (len < 1) {\n+\t\treturn -1;\n+\t}\n \tswitch (buf[0]) {\n \tcase 0x3f:\n \tcase 0x4f:\n@@ -21,9 +24,9 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \t\top->type = R_ANAL_OP_TYPE_LEA;\n \t\tif (len > 5) {\n \t\t\top->ptr = buf[2];\n-\t\t\top->ptr |= buf[3]<<8;\n-\t\t\top->ptr |= buf[4]<<16;\n-\t\t\top->ptr |= ((ut32)(0xff&buf[5]))<<24;\n+\t\t\top->ptr |= buf[3] << 8;\n+\t\t\top->ptr |= buf[4] << 16;\n+\t\t\top->ptr |= ((ut32)(0xff & buf[5])) << 24;\n \t\t\top->ptr += addr;\n \t\t\topsize = 6;\n \t\t} else {\n@@ -35,9 +38,9 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \t\top->type = R_ANAL_OP_TYPE_CALL;\n \t\tif (len > 5) {\n \t\t\tst32 delta = buf[2];\n-\t\t\tdelta |= buf[3]<<8;\n-\t\t\tdelta |= buf[4]<<16;\n-\t\t\tdelta |= buf[5]<<24;\n+\t\t\tdelta |= buf[3] << 8;\n+\t\t\tdelta |= buf[4] << 16;\n+\t\t\tdelta |= buf[5] << 24;\n \t\t\top->jump = addr + delta;\n \t\t} else {\n \t\t\top->jump = UT64_MAX;\n@@ -46,6 +49,9 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \t\topsize = 6;\n \t\tbreak;\n \tcase 0x00:\n+\t\tif (len < 2) {\n+\t\t\tbreak;\n+\t\t}\n \t\tif (buf[1] == 0x00) {\n \t\t\top->type = R_ANAL_OP_TYPE_TRAP;\n \t\t} else {\n@@ -57,11 +63,17 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \t\t}\n \t\tbreak;\n \tcase 0xf0:\n-\t\tif (buf[1]==0xb9) {\n+\t\tif (len < 2) {\n+\t\t\tbreak;\n+\t\t}\n+\t\tif (buf[1] == 0xb9) {\n \t\t\top->type = R_ANAL_OP_TYPE_RET;\n \t\t}\n \t\tbreak;\n \tdefault:\n+\t\tif (len < 2) {\n+\t\t\tbreak;\n+\t\t}\n \t\tswitch (buf[1]) {\n \t\tcase 0x00:\n \t\t\top->type = R_ANAL_OP_TYPE_CJMP; // BCC\n@@ -70,7 +82,7 @@ static int analop(RAnal *a, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAn\n \t\t\top->type = R_ANAL_OP_TYPE_SHR;\n \t\t\tbreak;\n \t\tcase 0x96: // move.d r, r\n-\t\t\tif (buf[0] >=0xc0) {\n+\t\t\tif (buf[0] >= 0xc0) {\n \t\t\t\top->type = R_ANAL_OP_TYPE_CMP;\n \t\t\t} else {\n \t\t\t\top->type = R_ANAL_OP_TYPE_MOV;\n@@ -242,6 +254,7 @@ static bool set_reg_profile(RAnal *anal) {\n \t\t\"=PC\tpc\\n\"\n \t\t\"=SP\tr14\\n\" // XXX\n \t\t\"=BP\tsrp\\n\" // XXX\n+\t\t\"=SN\tr0\\n\"\n \t\t\"=A0\tr0\\n\"\n \t\t\"=A1\tr1\\n\"\n \t\t\"=A2\tr2\\n\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          },
          {
            "sha": "05ebe2e92fc1905702201106228b285c80bd958b",
            "date": "2025-01-14T10:28:47Z",
            "author_login": "radare"
          },
          {
            "sha": "e672c13d0f3620daf80a718e47d759f933bd8961",
            "date": "2025-01-14T10:18:30Z",
            "author_login": "trufae"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.6,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:L",
    "cwe_id": "CWE-125",
    "description": "Out-of-bounds read in GitHub repository radareorg/radare2 prior to 5.6.8. This vulnerability allows attackers to read sensitive information from outside the allocated buffer boundary.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-01T19:15:07.777",
    "last_modified": "2024-11-21T06:40:15.353",
    "fix_date": "2022-04-01T19:03:24Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/605785b65dd356d46d4487faa41dbf90943b8bc1",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7b979e76-ae54-4132-b455-0833e45195eb",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/605785b65dd356d46d4487faa41dbf90943b8bc1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/7b979e76-ae54-4132-b455-0833e45195eb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.089717",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:16.054007"
  }
}