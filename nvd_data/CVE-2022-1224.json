{
  "cve_id": "CVE-2022-1224",
  "github_data": {
    "repository": "phpipam/phpipam",
    "fix_commit": "f6a49fd9f93b7d7e0a4fbf1d35338502eed35953",
    "related_commits": [
      "f6a49fd9f93b7d7e0a4fbf1d35338502eed35953",
      "f6a49fd9f93b7d7e0a4fbf1d35338502eed35953"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f6a49fd9f93b7d7e0a4fbf1d35338502eed35953",
      "commit_date": "2022-03-26T23:38:50Z",
      "author": {
        "login": "GaryAllan",
        "type": "User",
        "stats": {
          "total_commits": 877,
          "average_weekly_commits": 1.7435387673956262,
          "total_additions": 33025,
          "total_deletions": 58367,
          "weeks_active": 195
        }
      },
      "commit_message": {
        "title": "Bugfix: Incorrect privilege assignments. Fixes #3506",
        "length": 87,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 55,
        "additions": 42,
        "deletions": 13
      },
      "files": [
        {
          "filename": "app/admin/import-export/generate-hosts.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@\n $Subnets\t= new Subnets ($Database);\n $Addresses\t= new Addresses ($Database);\n $Tools\t\t= new Tools ($Database);\n+$Admin\t\t= new Admin ($Database);\n $Result \t= new Result ();\n \n # verify that user is logged in"
        },
        {
          "filename": "app/admin/import-export/generate-mysql.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -10,6 +10,7 @@\n # initialize user object\n $Database \t= new Database_PDO;\n $User \t\t= new User ($Database);\n+$Admin\t\t= new Admin ($Database);\n \n # verify that user is logged in\n $User->check_user_session();"
        },
        {
          "filename": "app/admin/import-export/generate-xls.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -16,6 +16,7 @@\n $Subnets\t= new Subnets ($Database);\n $Addresses\t= new Addresses ($Database);\n $Tools\t\t= new Tools ($Database);\n+$Admin\t\t= new Admin ($Database);\n $Result \t= new Result ();\n \n # verify that user is logged in"
        },
        {
          "filename": "app/dashboard/widgets/access_logs.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n \t$User \t\t= new User ($Database);\n \t$Tools \t\t= new Tools ($Database);\n \t$Log\t\t= new Logging ($Database);\n+\t$Admin\t\t= new Admin ($Database);\n \t$Result\t\t= new Result ();\n }\n "
        },
        {
          "filename": "app/dashboard/widgets/error_logs.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n \t$User \t\t= new User ($Database);\n \t$Tools \t\t= new Tools ($Database);\n \t$Log\t\t= new Logging ($Database);\n+\t$Admin\t\t= new Admin ($Database);\n \t$Result\t\t= new Result ();\n }\n "
        },
        {
          "filename": "app/subnets/addresses/export-subnet.php",
          "status": "modified",
          "additions": 8,
          "deletions": 3,
          "patch": "@@ -25,10 +25,15 @@\n error_reporting(E_ALL ^ E_NOTICE ^ E_STRICT);\n \n # fetch subnet details\n-$subnet = (array) $Tools->fetch_object (\"subnets\", \"id\", $_GET['subnetId']);\n+$subnet = $Tools->fetch_object(\"subnets\", \"id\", $_GET['subnetId']);\n+if (!is_object($subnet) || $Subnets->check_permission($User->user, $_GET['subnetId'], $subnet) == User::ACCESS_NONE) {\n+\t$Result->fatal_http_error(404, _(\"Subnet not found\"));\n+}\n+$subnet = (array) $subnet;\n+\n # fetch all IP addresses in subnet\n-$addresses = $Addresses->fetch_subnet_addresses ($_GET['subnetId'], \"ip_addr\", \"asc\");\n-if (!is_array($addresses)) { $addresses = array(); }\n+$addresses = $Addresses->fetch_subnet_addresses ($_GET['subnetId'], \"ip_addr\", \"asc\") ? : [];\n+\n # get all custom fields\n $custom_fields = $Tools->fetch_custom_fields ('ipaddresses');\n "
        },
        {
          "filename": "app/tools/logs/show-logs.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -25,6 +25,7 @@\n \t$Database \t= new Database_PDO;\n \t$User \t\t= new User ($Database);\n \t$Tools\t \t= new Tools ($Database);\n+\t$Admin\t\t= new Admin ($Database);\n \t$Result \t= new Result ();\n \t$Log\t\t= new Logging ($Database);\n "
        },
        {
          "filename": "functions/classes/class.Admin.php",
          "status": "modified",
          "additions": 8,
          "deletions": 10,
          "patch": "@@ -107,17 +107,15 @@ public function set_admin_required ($bool) {\n \t */\n \tpublic function is_admin () {\n \t\t// user not required for cli\n-\t\tif (php_sapi_name()!=\"cli\") {\n+\t\tif (php_sapi_name() != \"cli\") {\n \t\t\t# initialize user class\n-\t\t\t$this->User = new User ($this->Database);\n-    \t\t# save settings\n-    \t\t$this->settings = $this->User->settings;\n-    \t\t# if required die !\n-    \t\tif($this->User->is_admin(false)!==true && $this->admin_required===true) {\n-    \t\t\t// popup ?\n-    \t\t\tif(@$_SERVER['HTTP_X_REQUESTED_WITH'] == \"XMLHttpRequest\") \t{ $this->Result->show(\"danger\", _(\"Administrative privileges required\"),true, true); }\n-    \t\t\telse \t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $this->Result->show(\"danger\", _(\"Administrative privileges required\"),true); }\n-    \t\t}\n+\t\t\t$this->User = new User($this->Database);\n+\t\t\t# save settings\n+\t\t\t$this->settings = $this->User->settings;\n+\t\t\t# if required die !\n+\t\t\tif ($this->User->is_admin(false) !== true && $this->admin_required === true) {\n+\t\t\t\t$this->Result->fatal_http_error(403, _(\"Administrative privileges required\"));\n+\t\t\t}\n \t\t}\n \t}\n "
        },
        {
          "filename": "functions/classes/class.Result.php",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -71,6 +71,22 @@ public function show($class=\"muted\", $text=\"No value provided\", $die=false, $pop\n \t\t}\n \t}\n \n+\t/**\n+\t * Return HTTP status code and message. eg 404 not found/permission denied error\n+\t *\n+\t * @param int $code\n+\t * @param string $message\n+\t * @return void\n+\t */\n+\tpublic function fatal_http_error($code, $message = \"\") {\n+\t\thttp_response_code($code);\n+\t\tif (isset($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == \"XMLHttpRequest\") {\n+\t\t\t$this->show(\"danger\", $message, true, true);\n+\t\t} else {\n+\t\t\t$this->show(\"danger\", $message, true);\n+\t\t}\n+\t}\n+\n \t/**\n \t * Alias for show method for backwards compatibility\n \t *"
        },
        {
          "filename": "misc/CHANGELOG",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,5 +1,9 @@\n == 1.4.6\n \n+    Security Fixes:\n+    ----------------------------\n+    + Incorrect privilege assignments (#3506);\n+\n     Bugfixes:\n     ----------------------------\n     + Require unique subnets not working as intended (#3529);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "602d81226784fe8de1af96db98f594745f6b441d",
            "date": "2024-11-27T09:56:05Z",
            "author_login": "GaryAllan"
          },
          {
            "sha": "f04280ba16fa3901dcd98900a248adfc55f89e13",
            "date": "2024-11-27T09:57:12Z",
            "author_login": "GaryAllan"
          },
          {
            "sha": "3212ed239c11093c83bb10bac1f727682c562e17",
            "date": "2024-11-26T16:15:46Z",
            "author_login": "GaryAllan"
          },
          {
            "sha": "93cfa93424947a71d0a75ee128f49c90897243c4",
            "date": "2024-11-23T22:18:16Z",
            "author_login": "GaryAllan"
          },
          {
            "sha": "91acd5c61f546d29e3b2ae526768c80a065f6e15",
            "date": "2024-11-23T22:22:42Z",
            "author_login": "GaryAllan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-285",
    "description": "Improper Authorization in GitHub repository phpipam/phpipam prior to 1.4.6.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-04T11:15:08.067",
    "last_modified": "2024-11-21T06:40:17.437",
    "fix_date": "2022-03-26T23:38:50Z"
  },
  "references": [
    {
      "url": "https://github.com/phpipam/phpipam/commit/f6a49fd9f93b7d7e0a4fbf1d35338502eed35953",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/cd9e1508-5682-427e-a921-14b4f520b85a",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/phpipam/phpipam/commit/f6a49fd9f93b7d7e0a4fbf1d35338502eed35953",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/cd9e1508-5682-427e-a921-14b4f520b85a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.093972",
    "processing_status": "enhanced"
  }
}