{
  "cve_id": "CVE-2022-1237",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
    "related_commits": [
      "2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
      "2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6"
    ],
    "patch_url": "https://github.com/radareorg/radare2/commit/2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6.patch",
    "fix_commit_details": {
      "sha": "2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
      "commit_date": "2022-04-05T09:31:24Z",
      "author": {
        "login": "radare",
        "type": "User",
        "stats": {
          "total_commits": 16352,
          "average_weekly_commits": 19.630252100840337,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 785
        }
      },
      "commit_message": {
        "title": "Fix oobread segfaults in the NE bin parser ##crash",
        "length": 164,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 24,
        "deletions": 7
      },
      "files": [
        {
          "filename": "libr/bin/format/ne/ne.c",
          "status": "modified",
          "additions": 24,
          "deletions": 7,
          "patch": "@@ -1,4 +1,4 @@\n-/* radare - LGPL - Copyright 2019 - GustavoLCR */\n+/* radare - LGPL - Copyright 2019-2022 - GustavoLCR */\n \n #include \"ne.h\"\n \n@@ -83,10 +83,10 @@ RList *r_bin_ne_get_segments(r_bin_ne_obj_t *bin) {\n \tRList *segments = r_list_newf (free);\n \tfor (i = 0; i < bin->ne_header->SegCount; i++) {\n \t\tRBinSection *bs = R_NEW0 (RBinSection);\n-\t\tNE_image_segment_entry *se = &bin->segment_entries[i];\n \t\tif (!bs) {\n \t\t\treturn segments;\n \t\t}\n+\t\tNE_image_segment_entry *se = &bin->segment_entries[i];\n \t\tbs->size = se->length;\n \t\tbs->vsize = se->minAllocSz ? se->minAllocSz : 64000;\n \t\tbs->bits = R_SYS_BITS_16;\n@@ -425,7 +425,7 @@ RList *r_bin_ne_get_relocs(r_bin_ne_obj_t *bin) {\n \t\treturn NULL;\n \t}\n \n-\tut16 *modref = malloc (bin->ne_header->ModRefs * sizeof (ut16));\n+\tut16 *modref = calloc (bin->ne_header->ModRefs, sizeof (ut16));\n \tif (!modref) {\n \t\treturn NULL;\n \t}\n@@ -451,7 +451,8 @@ RList *r_bin_ne_get_relocs(r_bin_ne_obj_t *bin) {\n \t\t\tcontinue;\n \t\t}\n \t\toff += 2;\n-\t\twhile (off < start + length * sizeof (NE_image_reloc_item)) {\n+\t\tsize_t buf_size = r_buf_size (bin->buf);\n+\t\twhile (off < start + length * sizeof (NE_image_reloc_item) && off < buf_size) {\n \t\t\tRBinReloc *reloc = R_NEW0 (RBinReloc);\n \t\t\tif (!reloc) {\n \t\t\t\treturn NULL;\n@@ -484,10 +485,11 @@ RList *r_bin_ne_get_relocs(r_bin_ne_obj_t *bin) {\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t\tchar *name;\n-\t\t\t\tif (rel.index > bin->ne_header->ModRefs) {\n+\t\t\t\tif (rel.index < 1 || rel.index > bin->ne_header->ModRefs) {\n \t\t\t\t\tname = r_str_newf (\"UnknownModule%d_%x\", rel.index, off); // ????\n \t\t\t\t} else {\n-\t\t\t\t\toffset = modref[rel.index - 1] + bin->header_offset + bin->ne_header->ImportNameTable;\n+\t\t\t\t\tint index = rel.index;\n+\t\t\t\t\toffset = modref[index - 1] + bin->header_offset + bin->ne_header->ImportNameTable;\n \t\t\t\t\tname = __read_nonnull_str_at (bin->buf, offset);\n \t\t\t\t}\n \t\t\t\tif (rel.flags & IMPORTED_ORD) {\n@@ -563,16 +565,31 @@ void __init(RBuffer *buf, r_bin_ne_obj_t *bin) {\n \t\treturn;\n \t}\n \tbin->buf = buf;\n+\t// XXX this is endian unsafe\n \tr_buf_read_at (buf, bin->header_offset, (ut8 *)bin->ne_header, sizeof (NE_image_header));\n+\tif (bin->ne_header->FileAlnSzShftCnt > 8) {\n+\t\tbin->ne_header->FileAlnSzShftCnt = 8;\n+\t}\n+\tif (bin->ne_header->ModRefs * sizeof (ut16) >= r_buf_size (bin->buf)) {\n+\t\tbin->ne_header->ModRefs = r_buf_size (bin->buf) / sizeof (ut16);\n+\t}\n \tbin->alignment = 1 << bin->ne_header->FileAlnSzShftCnt;\n \tif (!bin->alignment) {\n \t\tbin->alignment = 1 << 9;\n \t}\n \tbin->os = __get_target_os (bin);\n \n \tut16 offset = bin->ne_header->SegTableOffset + bin->header_offset;\n-\tut16 size = bin->ne_header->SegCount * sizeof (NE_image_segment_entry);\n+\tsize_t size = bin->ne_header->SegCount * sizeof (NE_image_segment_entry);\n+\tif (offset >= r_buf_size (bin->buf)) {\n+\t\treturn;\n+\t}\n+\tsize_t remaining = r_buf_size (bin->buf) - offset;\n+\tsize = R_MIN (remaining, size);\n \tbin->segment_entries = calloc (1, size);\n+\tif (size >= remaining) {\n+\t\tbin->ne_header->SegCount = size / sizeof (NE_image_segment_entry);\n+\t}\n \tif (!bin->segment_entries) {\n \t\treturn;\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          },
          {
            "sha": "05ebe2e92fc1905702201106228b285c80bd958b",
            "date": "2025-01-14T10:28:47Z",
            "author_login": "radare"
          },
          {
            "sha": "e672c13d0f3620daf80a718e47d759f933bd8961",
            "date": "2025-01-14T10:18:30Z",
            "author_login": "trufae"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-129",
    "description": "Improper Validation of Array Index in GitHub repository radareorg/radare2 prior to 5.6.8. This vulnerability is heap overflow and may be exploitable. For more general description of heap buffer overflow, see [CWE](https://cwe.mitre.org/data/definitions/122.html).",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-06T10:15:08.137",
    "last_modified": "2024-11-21T06:40:19.127",
    "fix_date": "2022-04-05T09:31:24Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/ad3c9c4c-76e7-40c8-bd4a-c095acd8bb40",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/2d782cdaa2112c10b8dd5e7a93c134b2ada9c1a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/ad3c9c4c-76e7-40c8-bd4a-c095acd8bb40",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.106047",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:16.054007"
  }
}