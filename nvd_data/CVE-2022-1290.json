{
  "cve_id": "CVE-2022-1290",
  "github_data": {
    "repository": "polonel/trudesk",
    "fix_commit": "4f48b3bb86ba66a0085803591065bb6437e864ec",
    "related_commits": [
      "4f48b3bb86ba66a0085803591065bb6437e864ec",
      "4f48b3bb86ba66a0085803591065bb6437e864ec"
    ],
    "patch_url": "https://github.com/polonel/trudesk/commit/4f48b3bb86ba66a0085803591065bb6437e864ec.patch",
    "fix_commit_details": {
      "sha": "4f48b3bb86ba66a0085803591065bb6437e864ec",
      "commit_date": "2022-03-31T22:04:46Z",
      "author": {
        "login": "polonel",
        "type": "User",
        "stats": {
          "total_commits": 1565,
          "average_weekly_commits": 2.8506375227686704,
          "total_additions": 1644480,
          "total_deletions": 794808,
          "weeks_active": 248
        }
      },
      "commit_message": {
        "title": "chore(security): fix issue where html was allowed in some input fields",
        "length": 70,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 42,
        "deletions": 19
      },
      "files": [
        {
          "filename": "src/helpers/utils/index.js",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -12,7 +12,17 @@\n  *  Copyright (c) 2014-2019. All rights reserved.\n  */\n \n-var _ = require('lodash')\n+const _ = require('lodash')\n+const xss = require('xss')\n+\n+module.exports.sanitizeFieldPlainText = function (text) {\n+  const t = xss(text, {\n+    whileList: {},\n+    stripIgnoreTag: true,\n+    stripIgnoreTagBody: ['script']\n+  })\n+  return t\n+}\n \n module.exports.sendToSelf = function (socket, method, data) {\n   socket.emit(method, data)"
        },
        {
          "filename": "src/models/attachment.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -13,6 +13,7 @@\n  */\n \n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n var attachmentSchema = mongoose.Schema({\n   owner: { type: mongoose.Schema.Types.ObjectId, ref: 'accounts' },\n@@ -23,7 +24,7 @@ var attachmentSchema = mongoose.Schema({\n })\n \n attachmentSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/department.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -15,6 +15,7 @@\n var _ = require('lodash')\n var async = require('async')\n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n // Refs\n require('./group')\n@@ -35,8 +36,8 @@ var departmentSchema = mongoose.Schema({\n departmentSchema.plugin(require('mongoose-autopopulate'))\n \n departmentSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n-  this.normalized = this.name.trim().toLowerCase()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n+  this.normalized = utils.sanitizeFieldPlainText(this.name.trim().toLowerCase())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/group.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -14,6 +14,7 @@\n \n var _ = require('lodash')\n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'groups'\n \n@@ -44,7 +45,7 @@ var groupSchema = mongoose.Schema({\n groupSchema.plugin(require('mongoose-autopopulate'))\n \n groupSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n \n   next()\n })"
        },
        {
          "filename": "src/models/notice.js",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -10,6 +10,7 @@\n  */\n \n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'notices'\n \n@@ -41,7 +42,8 @@ var noticeSchema = mongoose.Schema({\n })\n \n noticeSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n+  this.message = utils.sanitizeFieldPlainText(this.message.trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/role.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -15,6 +15,7 @@\n var mongoose = require('mongoose')\n var mongooseLeanVirtuals = require('mongoose-lean-virtuals')\n var _ = require('lodash')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'roles'\n \n@@ -51,8 +52,8 @@ roleSchema.virtual('isAgent').get(function () {\n roleSchema.plugin(mongooseLeanVirtuals)\n \n roleSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n-  this.normalized = this.name.toLowerCase().trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n+  this.normalized = utils.sanitizeFieldPlainText(this.name.toLowerCase().trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/tag.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -13,6 +13,7 @@\n  */\n \n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'tags'\n \n@@ -31,8 +32,8 @@ var tagSchema = mongoose.Schema({\n })\n \n tagSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n-  this.normalized = this.name.toLowerCase().trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n+  this.normalized = utils.sanitizeFieldPlainText(this.name.toLowerCase().trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/team.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -14,6 +14,7 @@\n \n var _ = require('lodash')\n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n // Refs\n require('./user')\n@@ -35,11 +36,11 @@ var teamSchema = mongoose.Schema({\n teamSchema.plugin(require('mongoose-autopopulate'))\n \n teamSchema.pre('validate', function () {\n-  this.normalized = this.name.trim().toLowerCase()\n+  this.normalized = utils.sanitizeFieldPlainText(this.name.trim().toLowerCase())\n })\n \n teamSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/ticket.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -20,6 +20,7 @@ var moment = require('moment')\n var sanitizeHtml = require('sanitize-html')\n // var redisCache          = require('../cache/rediscache');\n var xss = require('xss')\n+var utils = require('../helpers/utils')\n \n // Needed - For Population\n var groupSchema = require('./group')\n@@ -120,7 +121,7 @@ var autoPopulate = function (next) {\n ticketSchema.pre('findOne', autoPopulate).pre('find', autoPopulate)\n \n ticketSchema.pre('save', function (next) {\n-  this.subject = this.subject.trim()\n+  this.subject = utils.sanitizeFieldPlainText(this.subject.trim())\n   this.wasNew = this.isNew\n \n   if (!_.isUndefined(this.uid) || this.uid) {"
        },
        {
          "filename": "src/models/ticketpriority.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -16,6 +16,7 @@\n var mongoose = require('mongoose')\n var moment = require('moment')\n require('moment-duration-format')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'priorities'\n \n@@ -36,7 +37,7 @@ var prioritySchema = mongoose.Schema(\n )\n \n prioritySchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/tickettype.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -14,6 +14,7 @@\n \n var _ = require('lodash')\n var mongoose = require('mongoose')\n+var utils = require('../helpers/utils')\n \n var COLLECTION = 'tickettypes'\n \n@@ -43,7 +44,7 @@ ticketTypeSchema.pre('find', autoPopulatePriorities)\n ticketTypeSchema.pre('findOne', autoPopulatePriorities)\n \n ticketTypeSchema.pre('save', function (next) {\n-  this.name = this.name.trim()\n+  this.name = utils.sanitizeFieldPlainText(this.name.trim())\n \n   return next()\n })"
        },
        {
          "filename": "src/models/user.js",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -18,6 +18,7 @@ var winston = require('winston')\n var bcrypt = require('bcrypt')\n var _ = require('lodash')\n var Chance = require('chance')\n+const utils = require('../helpers/utils')\n \n // Required for linkage\n require('./role')\n@@ -89,10 +90,11 @@ userSchema.pre('findOne', autoPopulateRole).pre('find', autoPopulateRole)\n userSchema.pre('save', function (next) {\n   var user = this\n \n-  user.username = user.username.toLowerCase().trim()\n-  user.email = user.email.trim()\n-  if (user.fullname) user.fullname = user.fullname.trim()\n-  if (user.title) user.title = user.title.trim()\n+  user.username = utils.sanitizeFieldPlainText(user.username.toLowerCase().trim())\n+  user.email = utils.sanitizeFieldPlainText(user.email.trim())\n+\n+  if (user.fullname) user.fullname = utils.sanitizeFieldPlainText(user.fullname.trim())\n+  if (user.title) user.title = utils.sanitizeFieldPlainText(user.title.trim())\n \n   if (!user.isModified('password')) {\n     return next()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "29f3f1698f341e3d8fcc4f4eb5340ee43427fe63",
            "date": "2024-07-24T22:49:58Z",
            "author_login": "polonel"
          },
          {
            "sha": "64436f82e01b4b7b326d9bd8b8e39f06490b56de",
            "date": "2024-07-24T22:48:33Z",
            "author_login": "polonel"
          },
          {
            "sha": "92008c62b5c381c0dbb9af4deac41bd567537f88",
            "date": "2024-07-24T22:39:02Z",
            "author_login": "polonel"
          },
          {
            "sha": "605ba8a04c7487d349282291085bf2e9ff0a9dae",
            "date": "2024-07-24T21:32:24Z",
            "author_login": "polonel"
          },
          {
            "sha": "517aee8d5224419f9e7dc53b268c544dc71057e7",
            "date": "2024-07-24T15:15:40Z",
            "author_login": "kareem-abdul"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Stored XSS in \"Name\", \"Group Name\" & \"Title\" in GitHub repository polonel/trudesk prior to v1.2.0. This allows attackers to execute malicious scripts in the user's browser and it can lead to session hijacking, sensitive data exposure, and worse.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-10T16:15:07.907",
    "last_modified": "2024-11-21T06:40:25.430",
    "fix_date": "2022-03-31T22:04:46Z"
  },
  "references": [
    {
      "url": "https://github.com/polonel/trudesk/commit/4f48b3bb86ba66a0085803591065bb6437e864ec",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/da6d03e6-053f-43b6-99a7-78c2e386e3ed",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/polonel/trudesk/commit/4f48b3bb86ba66a0085803591065bb6437e864ec",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/da6d03e6-053f-43b6-99a7-78c2e386e3ed",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.362404",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "trudesk",
    "owner": "polonel",
    "created_at": "2014-07-14T20:57:48Z",
    "updated_at": "2025-01-08T13:34:07Z",
    "pushed_at": "2025-01-05T20:16:48Z",
    "size": 84271,
    "stars": 1336,
    "forks": 456,
    "open_issues": 12,
    "watchers": 1336,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 11363842,
      "CSS": 583680,
      "SCSS": 507907,
      "Handlebars": 361791,
      "Sass": 209119,
      "HTML": 78238,
      "TypeScript": 14435,
      "Dockerfile": 838,
      "Makefile": 694,
      "Shell": 412
    },
    "commit_activity": {
      "total_commits_last_year": 7,
      "avg_commits_per_week": 0.1346153846153846,
      "days_active_last_year": 2
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:34.211075"
  }
}