{
  "cve_id": "CVE-2022-1296",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "153bcdc29f11cd8c90e7d639a7405450f644ddb6",
    "related_commits": [
      "153bcdc29f11cd8c90e7d639a7405450f644ddb6",
      "153bcdc29f11cd8c90e7d639a7405450f644ddb6"
    ],
    "patch_url": "https://github.com/radareorg/radare2/commit/153bcdc29f11cd8c90e7d639a7405450f644ddb6.patch",
    "fix_commit_details": {
      "sha": "153bcdc29f11cd8c90e7d639a7405450f644ddb6",
      "commit_date": "2022-04-08T18:14:32Z",
      "author": {
        "login": "trufae",
        "type": "User",
        "stats": {
          "total_commits": 1783,
          "average_weekly_commits": 2.140456182472989,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 235
        }
      },
      "commit_message": {
        "title": "Fix oobread in NE parser ##crash",
        "length": 140,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 20,
        "deletions": 13
      },
      "files": [
        {
          "filename": "libr/bin/format/ne/ne.c",
          "status": "modified",
          "additions": 6,
          "deletions": 13,
          "patch": "@@ -1,7 +1,6 @@\n /* radare - LGPL - Copyright 2019-2022 - GustavoLCR */\n \n #include \"ne.h\"\n-#define NE_BUG 0\n \n static char *__get_target_os(r_bin_ne_obj_t *bin) {\n \tswitch (bin->ne_header->targOS) {\n@@ -505,25 +504,18 @@ RList *r_bin_ne_get_relocs(r_bin_ne_obj_t *bin) {\n \t\t\t\t\tfree (reloc);\n \t\t\t\t\tbreak;\n \t\t\t\t}\n-\t\t\t\tchar *name;\n-#if NE_BUG\n-\t\t\t\tif (rel.index > 0 && rel.index < bin->ne_header->ModRefs) {\n-\t\t\t\t\toffset = modref[rel.index - 1] + bin->header_offset + bin->ne_header->ImportNameTable;\n-\t\t\t\t\tname = __read_nonnull_str_at (bin->buf, offset);\n-\t\t\t\t} else {\n-\t\t\t\t\tname = r_str_newf (\"UnknownModule%d_%x\", rel.index, off); // ????\n-\t\t\t\t}\n-#else\n+\t\t\t\tchar *name = NULL;\n \t\t\t\tif (rel.index > bin->ne_header->ModRefs) {\n \t\t\t\t\tname = r_str_newf (\"UnknownModule%d_%x\", rel.index, off); // ????\n-\t\t\t\t} else {\n+\t\t\t\t} else if (rel.index > 0) {\n \t\t\t\t\toffset = modref[rel.index - 1] + bin->header_offset + bin->ne_header->ImportNameTable;\n \t\t\t\t\tname = __read_nonnull_str_at (bin->buf, offset);\n \t\t\t\t}\n-#endif\n \t\t\t\tif (rel.flags & IMPORTED_ORD) {\n \t\t\t\t\timp->ordinal = rel.func_ord;\n-\t\t\t\t\timp->name = r_str_newf (\"%s.%s\", name, __func_name_from_ord(name, rel.func_ord));\n+\t\t\t\t\tchar *fname = __func_name_from_ord (name, rel.func_ord);\n+\t\t\t\t\timp->name = r_str_newf (\"%s.%s\", name, fname);\n+\t\t\t\t\tfree (fname);\n \t\t\t\t} else {\n \t\t\t\t\toffset = bin->header_offset + bin->ne_header->ImportNameTable + rel.name_off;\n \t\t\t\t\tchar *func = __read_nonnull_str_at (bin->buf, offset);\n@@ -566,6 +558,7 @@ RList *r_bin_ne_get_relocs(r_bin_ne_obj_t *bin) {\n \t\t\t\tr_list_append (relocs, reloc);\n \t\t\t} else {\n \t\t\t\tdo {\n+#define NE_BUG 0\n #if NE_BUG\n \t\t\t\t\tif (reloc->paddr + 4 < r_buf_size (bin->buf)) {\n \t\t\t\t\t\tbreak;"
        },
        {
          "filename": "test/db/formats/ne",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -1,3 +1,17 @@\n+NAME=NE crash\n+FILE=bins/ne/necrash\n+CMDS=<<EOF\n+aaa\n+i~format\n+i~csum\n+aflc\n+EOF\n+EXPECT=<<EOF\n+format   ne\n+hdr.csum c258016a\n+0\n+EOF\n+RUN\n NAME=NE Symbols\n FILE=bins/ne/anim8.exe\n CMDS=is"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          },
          {
            "sha": "05ebe2e92fc1905702201106228b285c80bd958b",
            "date": "2025-01-14T10:28:47Z",
            "author_login": "radare"
          },
          {
            "sha": "e672c13d0f3620daf80a718e47d759f933bd8961",
            "date": "2025-01-14T10:18:30Z",
            "author_login": "trufae"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "Out-of-bounds read in `r_bin_ne_get_relocs` function in GitHub repository radareorg/radare2 prior to 5.6.8. This vulnerability may allow attackers to read sensitive information or cause a crash.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-11T12:15:16.323",
    "last_modified": "2024-11-21T06:40:26.280",
    "fix_date": "2022-04-08T18:14:32Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/153bcdc29f11cd8c90e7d639a7405450f644ddb6",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/52b57274-0e1a-4d61-ab29-1373b555fea0",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/153bcdc29f11cd8c90e7d639a7405450f644ddb6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/52b57274-0e1a-4d61-ab29-1373b555fea0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.367974",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:16.054007"
  }
}