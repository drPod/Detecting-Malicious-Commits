{
  "cve_id": "CVE-2022-1504",
  "github_data": {
    "repository": "microweber/microweber",
    "fix_commit": "1f6a4de416a85e626dc643bb5ceb916e4802223e",
    "related_commits": [
      "1f6a4de416a85e626dc643bb5ceb916e4802223e",
      "1f6a4de416a85e626dc643bb5ceb916e4802223e"
    ],
    "patch_url": "https://github.com/microweber/microweber/commit/1f6a4de416a85e626dc643bb5ceb916e4802223e.patch",
    "fix_commit_details": {
      "sha": "1f6a4de416a85e626dc643bb5ceb916e4802223e",
      "commit_date": "2022-04-27T10:33:14Z",
      "author": {
        "login": "peter-mw",
        "type": "User",
        "stats": {
          "total_commits": 7965,
          "average_weekly_commits": 15.0,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 408
        }
      },
      "commit_message": {
        "title": "update",
        "length": 6,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 208,
        "additions": 193,
        "deletions": 15
      },
      "files": [
        {
          "filename": "src/MicroweberPackages/App/Http/Controllers/ApiController.php",
          "status": "modified",
          "additions": 13,
          "deletions": 4,
          "patch": "@@ -8,10 +8,10 @@\n use MicroweberPackages\\App\\Http\\Middleware\\ApiAuth;\n use MicroweberPackages\\App\\Http\\Middleware\\SameSiteRefererMiddleware;\n use MicroweberPackages\\App\\Managers\\Helpers\\VerifyCsrfTokenHelper;\n+use MicroweberPackages\\Helper\\XSSClean;\n use MicroweberPackages\\View\\View;\n use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n use Symfony\\Component\\HttpFoundation\\Response;\n-use voku\\helper\\AntiXSS;\n \n \n class ApiController  extends FrontendController\n@@ -609,18 +609,25 @@ public function module()\n         // sanitize attributes\n         if($request_data){\n             $request_data_new = [];\n-            $antixss = new AntiXSS();\n+\n+            $xssClean = new XSSClean();\n+\n             foreach ($request_data as $k=>$v){\n                 if(is_string($v)) {\n                     $v = str_replace('<', '-', $v);\n                     $v = str_replace('>', '-', $v);\n                 }\n-                $v = $antixss->xss_clean($v);\n+                if(is_array($v)) {\n+                    $v = $xssClean->cleanArray($v);\n+                } else {\n+                    $v = $xssClean->clean($v);\n+                }\n \n                 if(is_string($k)){\n                     $k = str_replace('<', '-', $k);\n                     $k = str_replace('>', '-', $k);\n-                    $k = $antixss->xss_clean($k);\n+\n+                    $k = $xssClean->clean($k);\n                     if($k){\n                         $request_data_new[$k] = $v;\n                     }\n@@ -630,6 +637,8 @@ public function module()\n \n             }\n             $request_data = $request_data_new;\n+            var_dump($request_data);\n+            exit;\n         }\n \n         $page = false;"
        },
        {
          "filename": "src/MicroweberPackages/App/Http/Controllers/FrontendController.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -23,7 +23,6 @@\n use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n use Symfony\\Component\\HttpFoundation\\Request as SymfonyRequest;\n use Symfony\\Component\\HttpFoundation\\Response;\n-use voku\\helper\\AntiXSS;\n \n \n class FrontendController extends Controller"
        },
        {
          "filename": "src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -4,7 +4,6 @@\n \n use MicroweberPackages\\Database\\Crud;\n use MicroweberPackages\\Helper\\HTMLClean;\n-use voku\\helper\\AntiXSS;\n \n \n class CommentsCrud extends Crud"
        },
        {
          "filename": "src/MicroweberPackages/Content/Models/ModelFilters/Traits/FilterByKeywordTrait.php",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -10,9 +10,9 @@\n \n use Illuminate\\Database\\Eloquent\\Builder;\n use Illuminate\\Support\\Facades\\Config;\n+use MicroweberPackages\\Helper\\XSSClean;\n use MicroweberPackages\\Multilanguage\\Models\\MultilanguageTranslations;\n use MicroweberPackages\\Multilanguage\\MultilanguageHelpers;\n-use voku\\helper\\AntiXSS;\n \n trait FilterByKeywordTrait\n {\n@@ -22,9 +22,11 @@ public function keyword($keyword)\n         $table = $model->getTable();\n         $searchInFields = $model->getSearchable();\n         $keywordToSearch = false;\n-        $antixss = new AntiXSS();\n+\n+        $xssClean = new XSSClean();\n+\n         if (is_string($keyword)) {\n-            $keyword = $antixss->xss_clean($keyword);\n+            $keyword = $xssClean->clean($keyword);\n             if ($keyword) {\n                 $keywordToSearch = $keyword;\n             }"
        },
        {
          "filename": "src/MicroweberPackages/Helper/HTMLClean.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -33,8 +33,10 @@ public function cleanArray($array) {\n \n     public function clean($html) {\n \n-        $antiXss = new \\voku\\helper\\AntiXSS();\n-        $html = $antiXss->xss_clean($html);\n+\n+\n+        $xssClean = new XSSClean();\n+        $html = $xssClean->clean($html);\n \n         $config = \\HTMLPurifier_Config::createDefault();\n "
        },
        {
          "filename": "src/MicroweberPackages/Helper/XSSClean.php",
          "status": "added",
          "additions": 155,
          "deletions": 0,
          "patch": "@@ -0,0 +1,155 @@\n+<?php\n+\n+namespace MicroweberPackages\\Helper;\n+\n+use voku\\helper\\AntiXSS;\n+\n+class XSSClean\n+{\n+\n+\n+    public function cleanArray($array): array\n+    {\n+\n+        if (is_array($array)) {\n+\n+            $cleanedArray = [];\n+            foreach ($array as $key => $value) {\n+                if (is_string($key)) {\n+                    $key = $this->clean($key);\n+                }\n+\n+                if (is_array($value)) {\n+                    $cleanedArray[$key] = $this->cleanArray($value);\n+                } else {\n+                    $cleanedArray[$key] = $this->clean($value);\n+                }\n+            }\n+\n+            return $cleanedArray;\n+        }\n+    }\n+\n+     public function clean($html): string\n+    {\n+ // from https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#ontransitionend\n+        $cleanStrings = [\n+            'ontransitionstart',\n+           // 'onwebkitanimationend',\n+            'onwebkitanimationiteration',\n+            'onwebkitanimationstart',\n+            'onwebkittransitionend',\n+            'ontransitionrun',\n+            'onloadedmetadata',\n+            'ondurationchange',\n+            'oncanplaythrough',\n+            'oncuechange',\n+            'onbounce',\n+            'onbegin',\n+            'onbeforeunload',\n+            'onbeforescriptexecute',\n+            'onbeforeprint',\n+            'onanimationstart',\n+            'onanimationiteration',\n+            'onanimationend',\n+            'onanimationcancel',\n+            'onafterscriptexecute',\n+            'onfocusin',\n+            'onhashchange',\n+            'onload',\n+            'onunload',\n+            'onloadend',\n+            'onloadstart',\n+            'onmessage',\n+            'onpageshow',\n+            'onloadedmetadata',\n+            'onloadeddata',\n+            'onplay',\n+            'onplaying',\n+            'onpopstate',\n+            'onprogress',\n+            'onrepeat',\n+            'onresize',\n+            'onscroll',\n+            'onstart',\n+            'ontimeupdate',\n+            'ontoggle',\n+            'ontransitionend',\n+            'ontransitioncancel',\n+            'ontransitionrun',\n+            'ontransitionstart',\n+            'onafterprint',\n+            'onauxclick',\n+            'onbeforecopy',\n+            'onbeforecut',\n+            'onblur',\n+            'onchange',\n+            'onclick',\n+            'onclose',\n+            'oncontextmenu',\n+            'oncopy',\n+            'oncut',\n+            'ondblclick',\n+            'ondrag',\n+            'ondragend',\n+            'ondragenter',\n+            'ondragleave',\n+            'ondragover',\n+            'ondragstart',\n+            'ondrop',\n+            'onfocusout',\n+            'onfullscreenchange',\n+            'oninput',\n+            'oninvalid',\n+            'onkeydown',\n+            'onkeypress',\n+            'onkeyup',\n+            'onmousedown',\n+            'onmouseenter',\n+            'onmouseleave',\n+            'onmousemove',\n+            'onmouseout',\n+            'onmouseover',\n+            'onmouseup',\n+            'onmousewheel',\n+            'onmozfullscreenchange',\n+            'onpagehide',\n+            'onpaste',\n+            'onpause',\n+            'onpointerdown',\n+            'onpointerenter',\n+            'onpointerleave',\n+            'onpointermove',\n+            'onpointerout',\n+            'onpointerover',\n+            'onpointerrawupdate',\n+            'onpointerup',\n+            'onreset',\n+            'onsearch',\n+            'onseeked',\n+            'onseeking',\n+            'onselect',\n+            'onselectionchange',\n+            'onselectstart',\n+            'onshow',\n+            'onsubmit',\n+            'ontouchend',\n+            'ontouchmove',\n+            'ontouchstart',\n+            'onvolumechange',\n+            'onwheel',\n+            'onunhandledrejection'\n+        ];\n+\n+        $antiXss = new AntiXSS();\n+        $antiXss->addEvilHtmlTags($cleanStrings);\n+        $antiXss->addEvilAttributes($cleanStrings);\n+        $antiXss->addNeverAllowedOnEventsAfterwards($cleanStrings);\n+\n+        $html = $antiXss->xss_clean($html);\n+\n+\n+        return $html;\n+    }\n+\n+}"
        },
        {
          "filename": "src/MicroweberPackages/Helper/tests/SecurityTest.php",
          "status": "modified",
          "additions": 16,
          "deletions": 4,
          "patch": "@@ -1,6 +1,9 @@\n <?php\n+\n namespace MicroweberPackages\\Helper\\tests;\n \n+use MicroweberPackages\\Helper\\XSSClean;\n+\n class SecurityTest extends BaseTest\n {\n     public function testComments()\n@@ -10,17 +13,17 @@ public function testComments()\n         $string = '<a href=\"https://example.com\">test</a>';\n         $content = $antiXss->onlyTags($string);\n \n-       $this->assertEquals($string, $content);\n+        $this->assertEquals($string, $content);\n     }\n \n \n     public function testXssExternalLinkImg()\n     {\n         $antiXss = new \\MicroweberPackages\\Helper\\HTMLClean();\n \n-        $string = '<img src=\"'.site_url().'test.jpg\" />';\n+        $string = '<img src=\"' . site_url() . 'test.jpg\" />';\n         $content = $antiXss->clean($string);\n-        $this->assertEquals('<img src=\"'.site_url().'test.jpg\" alt=\"test.jpg\" />', $content);\n+        $this->assertEquals('<img src=\"' . site_url() . 'test.jpg\" alt=\"test.jpg\" />', $content);\n \n \n         $string = '<img src=\"https://google.bg/test.jpg\" />';\n@@ -34,7 +37,7 @@ public function testXssList()\n     {\n \n         $zip = new \\ZipArchive();\n-        $zip->open(__DIR__.'/misc/xss-test-files.zip');\n+        $zip->open(__DIR__ . '/misc/xss-test-files.zip');\n         $xssList = $zip->getFromName('xss-payload-list.txt');\n         $zip->close();\n \n@@ -55,4 +58,13 @@ public function testXssList()\n         }\n     }\n \n+    public function testXSSCleanArrtibutesNewEvents()\n+    {\n+        $xssClean = new XSSClean();\n+        $str = \"class='x module module-'ontransitionrun=alert(1) '\";\n+        $clean = $xssClean->clean($str);\n+        $this->assertEquals(\"class='x module module-'=alert&#40;1&#41; '\", $clean);\n+\n+    }\n+\n }"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 5,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d4e8c4a13967ac9856c3e1179d4185e59b8d9311",
            "date": "2024-11-26T15:08:46Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "9a701a997a4041f040b00d989b19e446c34419e5",
            "date": "2024-06-26T12:33:18Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "5851e060318fb8065a478df6b63b335b1d3a52c2",
            "date": "2024-06-26T11:34:21Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "7c37d77e617d35cdefdcaf96c7a18a33a9758289",
            "date": "2024-06-26T11:14:53Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "eff6fadcadd749e8f4295bec99bf173d2401f3ac",
            "date": "2024-06-26T11:11:53Z",
            "author_login": "Radanovn"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "XSS in /demo/module/?module=HERE in GitHub repository microweber/microweber prior to 1.2.15. Typical impact of XSS attacks.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-27T11:15:44.260",
    "last_modified": "2024-11-21T06:40:51.380",
    "fix_date": "2022-04-27T10:33:14Z"
  },
  "references": [
    {
      "url": "https://github.com/microweber/microweber/commit/1f6a4de416a85e626dc643bb5ceb916e4802223e",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b8e5c324-3dfe-46b4-8095-1697c6b0a6d6",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/1f6a4de416a85e626dc643bb5ceb916e4802223e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b8e5c324-3dfe-46b4-8095-1697c6b0a6d6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.420625",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "microweber",
    "owner": "microweber",
    "created_at": "2010-10-07T09:04:43Z",
    "updated_at": "2025-01-13T15:04:29Z",
    "pushed_at": "2025-01-14T13:26:48Z",
    "size": 1026007,
    "stars": 3170,
    "forks": 887,
    "open_issues": 360,
    "watchers": 3170,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 12566636,
      "PHP": 11976208,
      "JavaScript": 8696748,
      "CSS": 3597687,
      "SCSS": 2178754,
      "Blade": 1663671,
      "Less": 518400,
      "Hack": 476030,
      "MDX": 387317,
      "Vue": 344860,
      "Ruby": 12504,
      "OCaml": 4815,
      "Dockerfile": 1548,
      "CoffeeScript": 950,
      "Batchfile": 61,
      "Shell": 59,
      "Sass": 1
    },
    "commit_activity": {
      "total_commits_last_year": 1332,
      "avg_commits_per_week": 25.615384615384617,
      "days_active_last_year": 106
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:59:40.368111"
  }
}