{
  "cve_id": "CVE-2022-1752",
  "github_data": {
    "repository": "polonel/trudesk",
    "fix_commit": "d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd",
    "related_commits": [
      "d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd",
      "d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd"
    ],
    "patch_url": "https://github.com/polonel/trudesk/commit/d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd.patch",
    "fix_commit_details": {
      "sha": "d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd",
      "commit_date": "2022-05-17T03:54:40Z",
      "author": {
        "login": "polonel",
        "type": "User",
        "stats": {
          "total_commits": 1565,
          "average_weekly_commits": 2.8506375227686704,
          "total_additions": 1644480,
          "total_deletions": 794808,
          "weeks_active": 248
        }
      },
      "commit_message": {
        "title": "refactor(accounts): security enhancements",
        "length": 41,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 89,
        "additions": 7,
        "deletions": 82
      },
      "files": [
        {
          "filename": "src/controllers/accounts.js",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -19,6 +19,7 @@ const userSchema = require('../models/user')\n const permissions = require('../permissions')\n const emitter = require('../emitter')\n const xss = require('xss')\n+const path = require('path')\n \n const accountsController = {}\n \n@@ -462,6 +463,8 @@ accountsController.uploadImage = function (req, res) {\n     }\n   })\n \n+  const allowedExts = ['.png', '.jpg', '.jpeg', '.gif']\n+\n   const object = {}\n   let error\n \n@@ -474,7 +477,8 @@ accountsController.uploadImage = function (req, res) {\n     const filename = info.filename\n     const mimetype = info.mimeType\n     const ext = path.extname(filename)\n-    if (mimetype.indexOf('image/') === -1 || ext === '.svg') {\n+\n+    if (!allowedExts.includes(ext)) {\n       error = {\n         status: 400,\n         message: 'Invalid File Type'\n@@ -486,8 +490,9 @@ accountsController.uploadImage = function (req, res) {\n     const savePath = path.join(__dirname, '../../public/uploads/users')\n     if (!fs.existsSync(savePath)) fs.mkdirSync(savePath)\n \n-    object.filePath = path.join(savePath, 'aProfile_' + object.username + path.extname(filename))\n     object.filename = 'aProfile_' + object.username + path.extname(filename)\n+    object.filename = object.filename.replace('/', '').replace('..', '')\n+    object.filePath = path.join(savePath, object.filename)\n     object.mimetype = mimetype\n \n     file.on('limit', function () {"
        },
        {
          "filename": "src/controllers/api/v1/routes.js",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -130,7 +130,6 @@ module.exports = function (middleware, router, controllers) {\n   router.get('/api/v1/users/:username', apiv1, canUser('accounts:view'), apiCtrl.users.single)\n   router.put('/api/v1/users/:username', apiv1, canUser('accounts:update'), apiCtrl.users.update)\n   router.get('/api/v1/users/:username/groups', apiv1, apiCtrl.users.getGroups)\n-  router.post('/api/v1/users/:username/uploadprofilepic', apiv1, apiCtrl.users.uploadProfilePic)\n   router.put('/api/v1/users/:username/updatepreferences', apiv1, apiCtrl.users.updatePreferences)\n   router.get('/api/v1/users/:username/enable', apiv1, canUser('accounts:update'), apiCtrl.users.enableUser)\n   router.delete('/api/v1/users/:username', apiv1, canUser('accounts:delete'), apiCtrl.users.deleteUser)"
        },
        {
          "filename": "src/controllers/api/v1/users.js",
          "status": "modified",
          "additions": 0,
          "deletions": 79,
          "patch": "@@ -1080,85 +1080,6 @@ apiUsers.getGroups = function (req, res) {\n   }\n }\n \n-apiUsers.uploadProfilePic = function (req, res) {\n-  const fs = require('fs')\n-  const path = require('path')\n-  const Busboy = require('busboy')\n-  const busboy = Busboy({\n-    headers: req.headers,\n-    limits: {\n-      files: 1,\n-      fileSize: 1024 * 1024 * 3\n-    }\n-  })\n-\n-  const object = {}\n-  let error\n-\n-  if (_.isUndefined(req.params.username)) return res.status(400).json({ error: 'Invalid Username' })\n-  object.username = req.params.username\n-\n-  busboy.on('file', function (name, file, info) {\n-    const mimetype = info.mimeType\n-\n-    if (mimetype.indexOf('image/') === -1) {\n-      error = {\n-        status: 400,\n-        message: 'Invalid file type'\n-      }\n-\n-      return file.resume()\n-    }\n-\n-    const savePath = path.join(__dirname, '../../../../public/uploads/users')\n-    if (!fs.existsSync(savePath)) fs.mkdirSync(savePath)\n-\n-    object.filePath = path.join(savePath, 'aProfile_' + object.username + '.jpg')\n-    object.filename = 'aProfile_' + object.username + '.jpg'\n-    object.mimetype = mimetype\n-\n-    file.on('limit', function () {\n-      error = {\n-        status: 400,\n-        message: 'File too large'\n-      }\n-\n-      return file.resume()\n-    })\n-\n-    file.pipe(fs.createWriteStream(object.filePath))\n-  })\n-\n-  busboy.on('finish', function () {\n-    if (error) return res.status(error.status).send(error.message)\n-\n-    if (_.isUndefined(object.username) || _.isUndefined(object.filePath) || _.isUndefined(object.filename)) {\n-      return res.status(400).send('Invalid Form Data')\n-    }\n-\n-    if (!fs.existsSync(object.filePath)) return res.status(400).send('File failed to save to disk')\n-\n-    UserSchema.getUserByUsername(object.username, function (err, user) {\n-      if (err) return res.status(400).send(err.message)\n-\n-      user.image = object.filename\n-\n-      user.save(function (err) {\n-        if (err) return res.status(500).send(err.message)\n-\n-        emitter.emit('trudesk:profileImageUpdate', {\n-          userid: user._id,\n-          img: user.image\n-        })\n-\n-        return res.json({ success: true, user: stripUserFields(user) })\n-      })\n-    })\n-  })\n-\n-  req.pipe(busboy)\n-}\n-\n function stripUserFields (user) {\n   user.password = undefined\n   user.accessToken = undefined"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "29f3f1698f341e3d8fcc4f4eb5340ee43427fe63",
            "date": "2024-07-24T22:49:58Z",
            "author_login": "polonel"
          },
          {
            "sha": "64436f82e01b4b7b326d9bd8b8e39f06490b56de",
            "date": "2024-07-24T22:48:33Z",
            "author_login": "polonel"
          },
          {
            "sha": "92008c62b5c381c0dbb9af4deac41bd567537f88",
            "date": "2024-07-24T22:39:02Z",
            "author_login": "polonel"
          },
          {
            "sha": "605ba8a04c7487d349282291085bf2e9ff0a9dae",
            "date": "2024-07-24T21:32:24Z",
            "author_login": "polonel"
          },
          {
            "sha": "517aee8d5224419f9e7dc53b268c544dc71057e7",
            "date": "2024-07-24T15:15:40Z",
            "author_login": "kareem-abdul"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-434",
    "description": "Unrestricted Upload of File with Dangerous Type in GitHub repository polonel/trudesk prior to 1.2.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-21T03:15:51.087",
    "last_modified": "2024-11-21T06:41:23.457",
    "fix_date": "2022-05-17T03:54:40Z"
  },
  "references": [
    {
      "url": "https://github.com/polonel/trudesk/commit/d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/66e9bfa9-598f-49ab-a472-752911df3f2d",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/polonel/trudesk/commit/d107f12e71c0fe1e7ac0fdc7463f59c4965a42cd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/66e9bfa9-598f-49ab-a472-752911df3f2d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.147508",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "trudesk",
    "owner": "polonel",
    "created_at": "2014-07-14T20:57:48Z",
    "updated_at": "2025-01-08T13:34:07Z",
    "pushed_at": "2025-01-05T20:16:48Z",
    "size": 84271,
    "stars": 1336,
    "forks": 456,
    "open_issues": 12,
    "watchers": 1336,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 11363842,
      "CSS": 583680,
      "SCSS": 507907,
      "Handlebars": 361791,
      "Sass": 209119,
      "HTML": 78238,
      "TypeScript": 14435,
      "Dockerfile": 838,
      "Makefile": 694,
      "Shell": 412
    },
    "commit_activity": {
      "total_commits_last_year": 7,
      "avg_commits_per_week": 0.1346153846153846,
      "days_active_last_year": 2
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:34.211075"
  }
}