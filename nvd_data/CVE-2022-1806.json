{
  "cve_id": "CVE-2022-1806",
  "github_data": {
    "repository": "rtxteam/rtx",
    "fix_commit": "9bb109b0014f952f315c7b89e0f29a9ba84ee04c",
    "related_commits": [
      "9bb109b0014f952f315c7b89e0f29a9ba84ee04c",
      "9bb109b0014f952f315c7b89e0f29a9ba84ee04c"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9bb109b0014f952f315c7b89e0f29a9ba84ee04c",
      "commit_date": "2022-05-18T03:32:13Z",
      "author": {
        "login": "edeutsch",
        "type": "User",
        "stats": {
          "total_commits": 1865,
          "average_weekly_commits": 4.8441558441558445,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 202
        }
      },
      "commit_message": {
        "title": "remove some cruft and implement a sanitizer for the client-supplied callback function name",
        "length": 90,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 48,
        "additions": 25,
        "deletions": 23
      },
      "files": [
        {
          "filename": "code/autocomplete/server.py",
          "status": "modified",
          "additions": 25,
          "deletions": 23,
          "patch": "@@ -6,32 +6,35 @@\n import sys\n import rtxcomplete\n import traceback\n-\n-#class MainHandler(tornado.web.RequestHandler):\n-#    def get(self):\n-#        self.write(\"Hello, world\")\n-#print __file__\n+import re\n \n root = os.path.dirname(os.path.abspath(__file__))\n rtxcomplete.load()\n-#conn = sqlite3.connect('dict.db')\n-#conn.enable_load_extension(True)\n-#conn.load_extension(\"./spellfix\")\n-#cursor = conn.cursor()\n+\n+\n+#### Sanitize the client-provided callback function name\n+def sanitize_callback(callback):\n+    if callback is None or not isinstance(callback,str):\n+        return 'autocomplete_callback'\n+    match = re.match(r'([a-zA-Z0-9_]+).*$', callback)\n+    if match:\n+         callback = match.group(1)\n+    else:\n+         callback = 'autocomplete_callback'\n+    return callback\n+\n \n class autoSearch(tornado.web.RequestHandler):\n \n     def get(self, arg,word=None):\n-        #print \"match auto\"\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\") #jsonp\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n \n             result = rtxcomplete.prefix(word,limit)\n-\n-            result = callback+\"(\"+json.dumps(result)+\");\" #jsonp\n-            #result = json.dumps(result) #typeahead\n+            \n+            result = callback+\"(\"+json.dumps(result)+\");\"\n             \n             self.write(result)\n             \n@@ -47,7 +50,7 @@ def get(self, arg,word=None):\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             #print word\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n@@ -73,7 +76,7 @@ def get(self, arg,word=None):\n         try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             #print word\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"\\\" LIMIT \" + limit)\n             #cursor.execute(\"SELECT word FROM spell WHERE word MATCH \\\"\" + word + \"*\\\" LIMIT \" + limit)\n@@ -96,18 +99,17 @@ def get(self, arg,word=None):\n \n class nodesLikeSearch(tornado.web.RequestHandler):\n     def get(self, arg,word=None):\n-        #try:\n-        if 1 == 1:\n+        try:\n             limit = self.get_argument(\"limit\")\n             word = self.get_argument(\"word\")\n-            callback = self.get_argument(\"callback\")\n+            callback = sanitize_callback(self.get_argument(\"callback\"))\n             result = rtxcomplete.get_nodes_like(word,limit);\n             result = callback+\"(\"+json.dumps(result)+\");\"\n             self.write(result)\n-        #except:\n-        #    print(sys.exc_info()[:])\n-        #    traceback.print_tb(sys.exc_info()[-1])\n-        #    self.write(\"error\")\n+        except:\n+            print(sys.exc_info()[:])\n+            traceback.print_tb(sys.exc_info()[-1])\n+            self.write(\"error\")\n \n \n class defineSearch(tornado.web.RequestHandler):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dd9dc0558b566adf627e5567f66c0b66b2158f3b",
            "date": "2024-12-19T00:08:32Z",
            "author_login": "saramsey"
          },
          {
            "sha": "7fc85293b3e48cc4f7c662c9675cc634a0391226",
            "date": "2024-11-19T23:25:22Z",
            "author_login": "amykglen"
          },
          {
            "sha": "a7f26f1eeb22d049d2415a91918a343ed09eb920",
            "date": "2024-11-19T17:29:31Z",
            "author_login": "chunyuma"
          },
          {
            "sha": "74a763a9a8ea98789552d5206f88aafafc995a1b",
            "date": "2024-11-19T16:57:17Z",
            "author_login": "chunyuma"
          },
          {
            "sha": "1efa3d14bc1cd80f3457146d1f4168f8fcf33a69",
            "date": "2024-11-19T16:57:09Z",
            "author_login": "chunyuma"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository rtxteam/rtx prior to checkpoint_2022-05-18.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-20T09:15:10.327",
    "last_modified": "2024-11-21T06:41:30.527",
    "fix_date": "2022-05-18T03:32:13Z"
  },
  "references": [
    {
      "url": "https://github.com/rtxteam/rtx/commit/9bb109b0014f952f315c7b89e0f29a9ba84ee04c",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/101a2a31-0b27-433a-ad3a-a216238ca4d1",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/rtxteam/rtx/commit/9bb109b0014f952f315c7b89e0f29a9ba84ee04c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/101a2a31-0b27-433a-ad3a-a216238ca4d1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.135768",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "RTX",
    "owner": "rtxteam",
    "created_at": "2017-11-18T21:19:13Z",
    "updated_at": "2024-12-19T00:08:39Z",
    "pushed_at": "2024-12-19T14:24:14Z",
    "size": 219589,
    "stars": 33,
    "forks": 21,
    "open_issues": 112,
    "watchers": 33,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 4268065,
      "Jupyter Notebook": 651409,
      "JavaScript": 356875,
      "Shell": 53307,
      "HTML": 42096,
      "CSS": 20622,
      "Dockerfile": 4408,
      "Smarty": 3494,
      "TeX": 1802,
      "Perl": 1449
    },
    "commit_activity": {
      "total_commits_last_year": 596,
      "avg_commits_per_week": 11.461538461538462,
      "days_active_last_year": 144
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:00:02.987091"
  }
}