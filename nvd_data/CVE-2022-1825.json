{
  "cve_id": "CVE-2022-1825",
  "github_data": {
    "repository": "collectiveaccess/providence",
    "fix_commit": "49de453c8d4942d09fab230e8f242300c831e2a7",
    "related_commits": [
      "49de453c8d4942d09fab230e8f242300c831e2a7",
      "49de453c8d4942d09fab230e8f242300c831e2a7"
    ],
    "patch_url": "https://github.com/collectiveaccess/providence/commit/49de453c8d4942d09fab230e8f242300c831e2a7.patch",
    "fix_commit_details": {
      "sha": "49de453c8d4942d09fab230e8f242300c831e2a7",
      "commit_date": "2022-04-30T14:25:48Z",
      "author": {
        "login": "collectiveaccess",
        "type": "User",
        "stats": {
          "total_commits": 6444,
          "average_weekly_commits": 9.734138972809667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 490
        }
      },
      "commit_message": {
        "title": "Print potential XSS in error message handler",
        "length": 44,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 11,
        "additions": 6,
        "deletions": 5
      },
      "files": [
        {
          "filename": "app/controllers/system/ErrorController.php",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -29,8 +29,6 @@\n require_once(__CA_LIB_DIR__.\"/ApplicationError.php\");\n \n class ErrorController extends ActionController {\n-\t# -------------------------------------------------------\n-\t\n \t# -------------------------------------------------------\n \tfunction Show() {\n \t\t$o_purify = caGetHTMLPurifier();"
        },
        {
          "filename": "app/lib/ApplicationError.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -175,7 +175,7 @@ public function __construct($pn_error_number=0, $ps_error_description='', $ps_er\n  * @return integer Always returns 1\n  */\t\t\n \tpublic function setError ($pn_error_number, $ps_error_description='', $ps_error_context='', $ps_error_source='') {\n-\t\t$this->opn_error_number = $pn_error_number;\n+\t\t$this->opn_error_number = (int)$pn_error_number;\n \t\t$this->ops_error_description = $ps_error_description;\n \t\t$this->ops_error_context = $ps_error_context;\n \t\t$this->ops_error_source = $ps_error_source;\n@@ -321,7 +321,7 @@ public function getErrorMessage() {\n \t\tif ($vs_error_message) {\n \t\t\treturn $vs_error_message;\n \t\t} else {\n-\t\t\treturn \"Unknown error: \".$this->opn_error_number;\n+\t\t\treturn \"Unknown error: \".(int)$this->opn_error_number;\n \t\t}\n \t}\n \t"
        },
        {
          "filename": "app/lib/Controller/Request/RequestHTTP.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -576,12 +576,15 @@ public function getParameter($pa_name, $pn_type, $ps_http_method=null, $pa_optio\n \t\tif (!isset($vm_val)) { return \"\"; }\n \t\t\n \t\t$vm_val = str_replace(\"\\0\", '', $vm_val);\n+\t\t\n+\t\t$purified = false;\n \t\tif((caGetOption('purify', $pa_options, true) && $this->config->get('purify_all_text_input')) || caGetOption('forcePurify', $pa_options, false)) {\n \t\t    if(is_array($vm_val)) {\n \t\t        $vm_val = array_map(function($v) { return is_array($v) ? $v : str_replace(\"&amp;\", \"&\", RequestHTTP::getPurifier()->purify(rawurldecode($v))); }, $vm_val);\n \t\t    } else {\n \t\t        $vm_val = str_replace(\"&amp;\", \"&\", RequestHTTP::getPurifier()->purify(rawurldecode($vm_val)));\n \t\t    }\n+\t\t    $purified = true;\n \t\t}\n \t\t\n \t\tif ($vm_val == \"\") { return ($pn_type == pArray) ? [] : ''; }\n@@ -607,7 +610,7 @@ public function getParameter($pa_name, $pn_type, $ps_http_method=null, $pa_optio\n \t\t\t\t\tif(caGetOption('retainBackslashes', $pa_options, true)) {\n \t\t\t\t\t\t$vm_val = str_replace(\"\\\\\", \"\\\\\\\\\", $vm_val);\t// retain backslashes for some strange people desire them as valid input\n \t\t\t\t\t}\n-\t\t\t\t\tif(caGetOption('urldecode', $pa_options, true)) {\n+\t\t\t\t\tif(!$purified && caGetOption('urldecode', $pa_options, true)) {\n \t\t\t\t\t\t$vm_val = rawurldecode($vm_val);\n \t\t\t\t\t}\n \t\t\t\t\treturn $vm_val;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "635a179dd1213b5decdcf014fd83502a4b12ab72",
            "date": "2025-01-13T16:48:00Z",
            "author_login": "collectiveaccess"
          },
          {
            "sha": "690ac510fe7f54fbdfd503eedaf8ec35835d4751",
            "date": "2025-01-13T16:18:28Z",
            "author_login": "yelto"
          },
          {
            "sha": "193c61d9f3f637a460c504027f0f04bc184f9050",
            "date": "2025-01-13T16:16:39Z",
            "author_login": "yelto"
          },
          {
            "sha": "40785c8b3db471d2f46cf5555a90af3055375cd7",
            "date": "2025-01-13T10:43:23Z",
            "author_login": "yelto"
          },
          {
            "sha": "210d514376b222699cc556b3b1440d3ed2a91920",
            "date": "2025-01-13T10:39:57Z",
            "author_login": "yelto"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository collectiveaccess/providence prior to 1.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-23T11:16:10.670",
    "last_modified": "2024-11-21T06:41:33.237",
    "fix_date": "2022-04-30T14:25:48Z"
  },
  "references": [
    {
      "url": "https://github.com/collectiveaccess/providence/commit/49de453c8d4942d09fab230e8f242300c831e2a7",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c6ad4cef-1b3d-472f-af0e-68e46341dfe5",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/collectiveaccess/providence/commit/49de453c8d4942d09fab230e8f242300c831e2a7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/c6ad4cef-1b3d-472f-af0e-68e46341dfe5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.148826",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "providence",
    "owner": "collectiveaccess",
    "created_at": "2012-05-15T15:28:10Z",
    "updated_at": "2025-01-13T16:48:04Z",
    "pushed_at": "2025-01-14T04:33:02Z",
    "size": 269217,
    "stars": 307,
    "forks": 170,
    "open_issues": 97,
    "watchers": 307,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 21671887,
      "JavaScript": 7070785,
      "CSS": 579609,
      "TypeScript": 394844,
      "Less": 187000,
      "HTML": 132353,
      "Smarty": 39811,
      "Pascal": 39096,
      "Puppet": 20066,
      "Shell": 14751,
      "Ruby": 9465,
      "SCSS": 8625,
      "Python": 4048
    },
    "commit_activity": {
      "total_commits_last_year": 917,
      "avg_commits_per_week": 17.634615384615383,
      "days_active_last_year": 223
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T20:52:54.767057"
  }
}