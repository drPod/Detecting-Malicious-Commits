{
  "cve_id": "CVE-2022-1850",
  "github_data": {
    "repository": "filegator/filegator",
    "fix_commit": "6e2b68f17f48cdc1d6a4a93a2369d2069fe64989",
    "related_commits": [
      "6e2b68f17f48cdc1d6a4a93a2369d2069fe64989",
      "6e2b68f17f48cdc1d6a4a93a2369d2069fe64989"
    ],
    "patch_url": "https://github.com/filegator/filegator/commit/6e2b68f17f48cdc1d6a4a93a2369d2069fe64989.patch",
    "fix_commit_details": {
      "sha": "6e2b68f17f48cdc1d6a4a93a2369d2069fe64989",
      "commit_date": "2022-05-24T10:24:30Z",
      "author": {
        "login": "alcalbg",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "path traversal fix",
        "length": 18,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 26,
        "additions": 26,
        "deletions": 0
      },
      "files": [
        {
          "filename": "backend/Services/Storage/Filesystem.php",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -241,6 +241,7 @@ private function applyPathPrefix(string $path): string\n         ) {\n             $path = $this->separator;\n         }\n+\n         return $this->joinPaths($this->getPathPrefix(), $path);\n     }\n \n@@ -266,6 +267,9 @@ private function addSeparators(string $dir): string\n \n     private function joinPaths(string $path1, string $path2): string\n     {\n+        $path1 = $this->escapeDots($path1);\n+        $path2 = $this->escapeDots($path2);\n+\n         if (! $path2 || ! trim($path2, $this->separator)) {\n             return $this->addSeparators($path1);\n         }\n@@ -295,4 +299,14 @@ private function getBaseName(string $path): string\n \n         return  (string) array_pop($tmp);\n     }\n+\n+    private function escapeDots(string $path): string\n+    {\n+        $path = preg_replace('/\\\\\\+\\.{2,}/', '', $path);\n+        $path = preg_replace('/\\.{2,}\\\\\\+/', '', $path);\n+        $path = preg_replace('/\\/+\\.{2,}/', '', $path);\n+        $path = preg_replace('/\\.{2,}\\/+/', '', $path);\n+\n+        return $path;\n+    }\n }"
        },
        {
          "filename": "tests/backend/Unit/FilesystemTest.php",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -461,6 +461,18 @@ public function testApplyPathPrefix()\n         $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..']));\n         $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['../']));\n         $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['/sub/../../']));\n+        $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\']));\n+        $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\\\\\']));\n+        $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\..\\\\']));\n+        $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['\\\\\\\\..']));\n+        $this->assertEquals('/john/', $this->invokeMethod($this->storage, 'applyPathPrefix', ['\\\\..\\\\..']));\n+        $this->assertEquals('/john/\\\\.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['\\\\.\\\\...']));\n+        $this->assertEquals('/john/\\\\.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['\\\\.\\\\....']));\n+        $this->assertEquals('/john/.\\\\.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['.\\\\.\\\\...']));\n+        $this->assertEquals('/john/.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\.\\\\...']));\n+        $this->assertEquals('/john/.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\.\\\\...']));\n+        $this->assertEquals('/john/.', $this->invokeMethod($this->storage, 'applyPathPrefix', ['..\\\\.\\\\......']));\n+        $this->assertEquals('/john/.\\\\', $this->invokeMethod($this->storage, 'applyPathPrefix', ['...\\\\.\\\\......\\\\']));\n     }\n \n     public function testStripPathPrefix()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e08bf2fb71696321049f9d0443eca621f9301089",
            "date": "2024-12-26T13:52:53Z",
            "author_login": "alcalbg"
          },
          {
            "sha": "d8fb33fae9134c60fb949b1efb4f5ed9b0c316f4",
            "date": "2024-12-26T13:50:09Z",
            "author_login": "kobizz"
          },
          {
            "sha": "52859b6137a31451ff5b0ae38fab945eed3fe060",
            "date": "2024-12-24T07:50:25Z",
            "author_login": "alcalbg"
          },
          {
            "sha": "f6ef36e54641152e50e443e23104cafb23c766a8",
            "date": "2024-12-24T07:39:42Z",
            "author_login": "MaxiZamorano"
          },
          {
            "sha": "9ce4c127f0f46633de1727707ddf6f9c1185aa76",
            "date": "2024-12-13T14:41:29Z",
            "author_login": "alcalbg"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-22",
    "description": "Path Traversal in GitHub repository filegator/filegator prior to 7.8.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-24T15:15:07.650",
    "last_modified": "2024-11-21T06:41:36.427",
    "fix_date": "2022-05-24T10:24:30Z"
  },
  "references": [
    {
      "url": "https://github.com/filegator/filegator/commit/6e2b68f17f48cdc1d6a4a93a2369d2069fe64989",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/07755f07-a412-4911-84a4-2f8c03c8f7ce",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/filegator/filegator/commit/6e2b68f17f48cdc1d6a4a93a2369d2069fe64989",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/07755f07-a412-4911-84a4-2f8c03c8f7ce",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.155713",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "filegator",
    "owner": "filegator",
    "created_at": "2019-06-13T16:47:07Z",
    "updated_at": "2025-01-14T01:48:19Z",
    "pushed_at": "2024-12-26T21:35:44Z",
    "size": 5966,
    "stars": 2275,
    "forks": 385,
    "open_issues": 192,
    "watchers": 2275,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 247698,
      "JavaScript": 122955,
      "Vue": 61600,
      "SCSS": 3688,
      "Dockerfile": 2288
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:10:13.409109"
  }
}