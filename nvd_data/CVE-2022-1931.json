{
  "cve_id": "CVE-2022-1931",
  "github_data": {
    "repository": "polonel/trudesk",
    "fix_commit": "314540864dbf2c0eaa99aa42c3d317de9501eb67",
    "related_commits": [
      "314540864dbf2c0eaa99aa42c3d317de9501eb67",
      "314540864dbf2c0eaa99aa42c3d317de9501eb67"
    ],
    "patch_url": "https://github.com/polonel/trudesk/commit/314540864dbf2c0eaa99aa42c3d317de9501eb67.patch",
    "fix_commit_details": {
      "sha": "314540864dbf2c0eaa99aa42c3d317de9501eb67",
      "commit_date": "2022-05-28T23:59:21Z",
      "author": {
        "login": "polonel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(messages): validation check",
        "length": 31,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 139,
        "additions": 71,
        "deletions": 68
      },
      "files": [
        {
          "filename": "src/client/containers/Tickets/TicketsContainer.jsx",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -104,7 +104,6 @@ class TicketsContainer extends React.Component {\n   }\n \n   onTicketUpdated (data) {\n-    console.log(data)\n     this.props.ticketUpdated(data)\n   }\n "
        },
        {
          "filename": "src/controllers/api/v1/messages.js",
          "status": "modified",
          "additions": 22,
          "deletions": 11,
          "patch": "@@ -14,9 +14,10 @@\n \n var async = require('async')\n var _ = require('lodash')\n-var winston = require('winston')\n+var winston = require('../../../logger')\n var ConversationSchema = require('../../../models/chat/conversation')\n var MessageSchema = require('../../../models/chat/message')\n+var UserSchema = require('../../../models/user')\n \n var apiMessages = {}\n \n@@ -191,22 +192,32 @@ apiMessages.send = function (req, res) {\n   async.waterfall(\n     [\n       function (done) {\n+        ConversationSchema.findOne({ _id: cId }, function (err, convo) {\n+          if (err || !convo) return done('Invalid Conversation')\n+\n+          return done(null, convo)\n+        })\n+      },\n+      function (convo, done) {\n         // Updated conversation to save UpdatedAt field.\n-        ConversationSchema.findOneAndUpdate({ _id: cId }, { updatedAt: new Date() }, { new: false }, function (\n-          err,\n-          convo\n-        ) {\n+        convo.updatedAt = new Date()\n+        convo.save(function (err, savedConvo) {\n           if (err) return done(err)\n-          if (convo === null || convo === undefined) {\n-            return done('Invalid Conversation: ' + convo)\n-          }\n-          return done(null, convo)\n+\n+          return done(null, savedConvo)\n         })\n       },\n       function (convo, done) {\n-        var Message = new MessageSchema({\n+        UserSchema.findOne({ _id: owner }, function (err, user) {\n+          if (err || !user) return done('Invalid Conversation')\n+\n+          return done(null, user, convo)\n+        })\n+      },\n+      function (user, convo, done) {\n+        const Message = new MessageSchema({\n           conversation: convo._id,\n-          owner: owner,\n+          owner: user._id,\n           body: message\n         })\n "
        },
        {
          "filename": "src/public/js/pages/messages.js",
          "status": "modified",
          "additions": 49,
          "deletions": 56,
          "patch": "@@ -23,41 +23,34 @@ define('pages/messages', [\n   'history',\n   'isinview'\n ], function ($, _, angular, UIKit, moment, helpers) {\n-  var messagesPage = {}\n+  const messagesPage = {}\n \n   messagesPage.init = function (callback) {\n     $(document).ready(function () {\n-      var $messageScroller = $('#message-content.scrollable')\n-\n-      var $messagesWrapper = $('#messages')\n-\n-      var $scrollspy = $('#conversation-scrollspy')\n-\n-      var $spinner = $scrollspy.find('i')\n-\n-      var $searchBox = $('.search-box').find('input')\n-\n-      var $nextPage = 2\n-\n-      var $enabled = true\n-\n-      var $loading = false\n-\n+      const $messageScroller = $('#message-content.scrollable')\n+      const $messagesWrapper = $('#messages')\n+      const $scrollspy = $('#conversation-scrollspy')\n+      const $spinner = $scrollspy.find('i')\n+      const $searchBox = $('.search-box').find('input')\n+      let $nextPage = 2\n+      let $enabled = true\n+      let $loading = false\n       // $inview             = null,\n+      const $recentMessages = {}\n+      const $convoId = $('#message-content[data-conversation-id]').attr('data-conversation-id')\n+      const $loggedInAccountId = window.trudeskSessionService.getUser()._id\n \n-      var $recentMessages = {}\n-\n-      var $convoId = $('#message-content[data-conversation-id]').attr('data-conversation-id')\n-\n-      var $loggedInAccountId = window.trudeskSessionService.getUser()._id\n+      setTimeout(function () {\n+        $('script#preloader').remove()\n+      }, 1000)\n \n       // Setup Context Menu\n       helpers.setupContextMenu('#convo-list > ul > li', function (action, target) {\n-        var $li = $(target)\n+        let $li = $(target)\n         if (!$li.is('li')) {\n           $li = $(target).parents('li')\n         }\n-        var convoId = $li.attr('data-conversation-id')\n+        const convoId = $li.attr('data-conversation-id')\n         if (action.toLowerCase() === 'delete') {\n           UIKit.modal.confirm(\n             'Are you sure you want to delete this conversation?',\n@@ -87,7 +80,7 @@ define('pages/messages', [\n \n         // set active\n         if ($convoId !== undefined) {\n-          var item = $('ul > li[data-conversation-id=\"' + $convoId + '\"]')\n+          const item = $('ul > li[data-conversation-id=\"' + $convoId + '\"]')\n           item.addClass('active')\n         }\n \n@@ -98,7 +91,7 @@ define('pages/messages', [\n             .toLowerCase() === 'messages'\n         ) {\n           $('.chat-box-position').each(function () {\n-            var self = $(this)\n+            const self = $(this)\n             self.remove()\n           })\n \n@@ -108,7 +101,7 @@ define('pages/messages', [\n \n           $messageScroller.scroll(function () {\n             if ($scrollspy.isInView($messageScroller)) {\n-              var run = _.throttle(loadMoreMessages, 100)\n+              const run = _.throttle(loadMoreMessages, 100)\n               run()\n             }\n           })\n@@ -122,11 +115,11 @@ define('pages/messages', [\n           success: function (response) {\n             if (response.success) {\n               // Check if on conversation\n-              var $convo = $('#message-content[data-conversation-id=\"' + response.conversation._id + '\"]')\n+              const $convo = $('#message-content[data-conversation-id=\"' + response.conversation._id + '\"]')\n               if ($convo.length > 0) {\n                 History.pushState(null, null, '/messages', false)\n               } else {\n-                var $convoLI = $('#convo-list').find('li[data-conversation-id=\"' + response.conversation._id + '\"]')\n+                const $convoLI = $('#convo-list').find('li[data-conversation-id=\"' + response.conversation._id + '\"]')\n                 if ($convoLI.length > 0) {\n                   $convoLI.remove()\n                 }\n@@ -146,7 +139,7 @@ define('pages/messages', [\n       }\n \n       function onSearchKeyUp () {\n-        var searchTerm = $searchBox.val().toLowerCase()\n+        const searchTerm = $searchBox.val().toLowerCase()\n         $('.all-user-list li').each(function () {\n           if ($(this).filter('[data-search-term *= ' + searchTerm + ']').length > 0 || searchTerm.length < 1) {\n             $(this).show()\n@@ -168,21 +161,21 @@ define('pages/messages', [\n         })\n           .done(function (data) {\n             $spinner.addClass('uk-hidden')\n-            var messages = data.messages\n+            const messages = data.messages\n             if (_.size(messages) < 1) {\n               $enabled = false\n               $loading = false\n               return false\n             }\n \n-            var html = ''\n+            let html = ''\n \n             _.each(messages, function (m) {\n-              var h = buildMessageHTML(m)\n+              const h = buildMessageHTML(m)\n               if (h.length > 0) html += h\n             })\n \n-            var stage = $('<div></div>')\n+            const stage = $('<div></div>')\n               .appendTo('body')\n               .addClass('stage')\n               .css({\n@@ -193,7 +186,7 @@ define('pages/messages', [\n                 left: '-9999em'\n               })\n               .append(html)\n-            var height = $(stage).outerHeight()\n+            const height = $(stage).outerHeight()\n             $(stage).remove()\n \n             $messagesWrapper.prepend(html)\n@@ -210,15 +203,15 @@ define('pages/messages', [\n       }\n \n       function buildMessageHTML (message) {\n-        var html = ''\n-        var loggedInAccountId = window.trudeskSessionService.getUser()._id\n+        let html = ''\n+        const loggedInAccountId = window.trudeskSessionService.getUser()._id\n         if (loggedInAccountId === undefined) return false\n-        var left = true\n+        let left = true\n         if (message.owner._id.toString() === loggedInAccountId.toString()) {\n           left = false\n         }\n \n-        var image = message.owner.image === undefined ? 'defaultProfile.jpg' : message.owner.image\n+        const image = message.owner.image === undefined ? 'defaultProfile.jpg' : message.owner.image\n \n         if (left) {\n           html += '<div class=\"message message-left\">'\n@@ -259,80 +252,80 @@ define('pages/messages', [\n \n       // On user Typing\n       $(window).on('$trudesk:chat:typing.conversation', function (event, data) {\n-        var convoListItem = $('#convo-list').find('li[data-conversation-id=\"' + data.cid + '\"]')\n+        const convoListItem = $('#convo-list').find('li[data-conversation-id=\"' + data.cid + '\"]')\n         if (convoListItem.length > 0) {\n           $recentMessages[data.cid] = convoListItem.find('.message-subject').text()\n           convoListItem.find('.message-subject').text(data.fromUser.fullname + ' is typing...')\n         }\n       })\n \n       $(window).on('$trudesk:chat:stoptyping.conversation', function (event, data) {\n-        var convoListItem = $('#convo-list').find('li[data-conversation-id=\"' + data.cid + '\"]')\n+        const convoListItem = $('#convo-list').find('li[data-conversation-id=\"' + data.cid + '\"]')\n         if (convoListItem.length > 0) {\n           convoListItem.find('.message-subject').text($recentMessages[data.cid])\n         }\n       })\n \n       // On Chat Message\n       $(window).on('$trudesk:chat:message.conversation', function (event, data) {\n-        var message = {\n+        const message = {\n           _id: data.messageId,\n           conversation: data.conversation,\n           body: data.message,\n           owner: data.fromUser\n         }\n \n-        var html = buildMessageHTML(message)\n-        var messageWrapper = $('#message-content[data-conversation-id=\"' + message.conversation + '\"]')\n+        const html = buildMessageHTML(message)\n+        const messageWrapper = $('#message-content[data-conversation-id=\"' + message.conversation + '\"]')\n         if (messageWrapper.length > 0) {\n           messageWrapper.find('#messages').append(html)\n         }\n \n-        var convoListItem = $('li[data-conversation-id=\"' + data.conversation + '\"]')\n+        const convoListItem = $('li[data-conversation-id=\"' + data.conversation + '\"]')\n         if (convoListItem.length > 0) {\n           convoListItem.attr('data-updatedAt', new Date())\n-          var ul = convoListItem.parent('ul')\n-          var li = ul.children('li')\n+          const ul = convoListItem.parent('ul')\n+          const li = ul.children('li')\n           li.detach().sort(function (a, b) {\n             return new Date($(a).attr('data-updatedAt')) < new Date($(b).attr('data-updatedAt'))\n           })\n \n           ul.append(li)\n \n-          var fromName = message.owner.fullname\n+          let fromName = message.owner.fullname\n           if (message.owner._id.toString() === $loggedInAccountId) {\n             fromName = 'You'\n           }\n \n           convoListItem.find('.message-subject').text(fromName + ': ' + message.body)\n           $recentMessages[message.conversation] = fromName + ': ' + message.body\n-          var timezone = helpers.getTimezone()\n+          const timezone = helpers.getTimezone()\n           convoListItem.find('.message-date').text(\n             moment\n               .utc()\n               .tz(timezone)\n               .calendar()\n           )\n         } else {\n-          var convoUL = $('#convo-list > ul.message-items')\n+          const convoUL = $('#convo-list > ul.message-items')\n           if (convoUL.length > 0) {\n-            var partner = message.owner\n+            let partner = message.owner\n             if (message.owner._id.toString() === $loggedInAccountId.toString()) {\n               partner = data.toUser\n             }\n-            var newLI = buildConversationListItem({\n+            const newLI = buildConversationListItem({\n               _id: message.conversation,\n               partner: partner,\n               updatedAt: new Date(),\n               recentMessage: message.owner.fullname + ': ' + message.body\n             })\n \n-            var $injector = angular.injector(['ng', 'trudesk'])\n+            const $injector = angular.injector(['ng', 'trudesk'])\n             $injector.invoke([\n               '$compile',\n               '$rootScope',\n               function ($compile, $rootScope) {\n-                var $scope = convoUL.prepend(newLI).scope()\n+                const $scope = convoUL.prepend(newLI).scope()\n                 $compile(convoUL)($scope || $rootScope)\n                 $rootScope.$digest()\n               }\n@@ -345,7 +338,7 @@ define('pages/messages', [\n       })\n \n       function buildConversationListItem (data) {\n-        var html = ''\n+        let html = ''\n \n         html +=\n           '<li ng-click=\"loadConversation(\\'' +\n@@ -356,7 +349,7 @@ define('pages/messages', [\n           data.updatedAt +\n           '\">'\n         html += '<div class=\"profile-pic\">'\n-        var imageUrl = 'defaultProfile.jpg'\n+        let imageUrl = 'defaultProfile.jpg'\n         if (data.partner.image) {\n           imageUrl = data.partner.image\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "29f3f1698f341e3d8fcc4f4eb5340ee43427fe63",
            "date": "2024-07-24T22:49:58Z",
            "author_login": "polonel"
          },
          {
            "sha": "64436f82e01b4b7b326d9bd8b8e39f06490b56de",
            "date": "2024-07-24T22:48:33Z",
            "author_login": "polonel"
          },
          {
            "sha": "92008c62b5c381c0dbb9af4deac41bd567537f88",
            "date": "2024-07-24T22:39:02Z",
            "author_login": "polonel"
          },
          {
            "sha": "605ba8a04c7487d349282291085bf2e9ff0a9dae",
            "date": "2024-07-24T21:32:24Z",
            "author_login": "polonel"
          },
          {
            "sha": "517aee8d5224419f9e7dc53b268c544dc71057e7",
            "date": "2024-07-24T15:15:40Z",
            "author_login": "kareem-abdul"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-821",
    "description": "Incorrect Synchronization in GitHub repository polonel/trudesk prior to 1.2.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-31T02:15:07.303",
    "last_modified": "2024-11-21T06:41:46.687",
    "fix_date": "2022-05-28T23:59:21Z"
  },
  "references": [
    {
      "url": "https://github.com/polonel/trudesk/commit/314540864dbf2c0eaa99aa42c3d317de9501eb67",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/50c4cb63-65db-41c5-a16d-0560d7131fde",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/polonel/trudesk/commit/314540864dbf2c0eaa99aa42c3d317de9501eb67",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/50c4cb63-65db-41c5-a16d-0560d7131fde",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.192872",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "trudesk",
    "owner": "polonel",
    "created_at": "2014-07-14T20:57:48Z",
    "updated_at": "2025-01-08T13:34:07Z",
    "pushed_at": "2025-01-05T20:16:48Z",
    "size": 84271,
    "stars": 1336,
    "forks": 456,
    "open_issues": 12,
    "watchers": 1336,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 11363842,
      "CSS": 583680,
      "SCSS": 507907,
      "Handlebars": 361791,
      "Sass": 209119,
      "HTML": 78238,
      "TypeScript": 14435,
      "Dockerfile": 838,
      "Makefile": 694,
      "Shell": 412
    },
    "commit_activity": {
      "total_commits_last_year": 7,
      "avg_commits_per_week": 0.1346153846153846,
      "days_active_last_year": 2
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:34.211075"
  }
}