{
  "cve_id": "CVE-2022-1974",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "da5c0f119203ad9728920456a0f52a6d850c01cd",
    "related_commits": [
      "da5c0f119203ad9728920456a0f52a6d850c01cd",
      "da5c0f119203ad9728920456a0f52a6d850c01cd"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "da5c0f119203ad9728920456a0f52a6d850c01cd",
      "commit_date": "2022-04-29T12:45:50Z",
      "author": {
        "login": "stonezdm",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "nfc: replace improper check device_is_registered() in netlink related functions",
        "length": 1308,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 29,
        "additions": 14,
        "deletions": 15
      },
      "files": [
        {
          "filename": "net/nfc/core.c",
          "status": "modified",
          "additions": 14,
          "deletions": 15,
          "patch": "@@ -38,7 +38,7 @@ int nfc_fw_download(struct nfc_dev *dev, const char *firmware_name)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -94,7 +94,7 @@ int nfc_dev_up(struct nfc_dev *dev)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -142,7 +142,7 @@ int nfc_dev_down(struct nfc_dev *dev)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -207,7 +207,7 @@ int nfc_start_poll(struct nfc_dev *dev, u32 im_protocols, u32 tm_protocols)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -246,7 +246,7 @@ int nfc_stop_poll(struct nfc_dev *dev)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -291,7 +291,7 @@ int nfc_dep_link_up(struct nfc_dev *dev, int target_index, u8 comm_mode)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -335,7 +335,7 @@ int nfc_dep_link_down(struct nfc_dev *dev)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -401,7 +401,7 @@ int nfc_activate_target(struct nfc_dev *dev, u32 target_idx, u32 protocol)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -448,7 +448,7 @@ int nfc_deactivate_target(struct nfc_dev *dev, u32 target_idx, u8 mode)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -495,7 +495,7 @@ int nfc_data_exchange(struct nfc_dev *dev, u32 target_idx, struct sk_buff *skb,\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tkfree_skb(skb);\n \t\tgoto error;\n@@ -552,7 +552,7 @@ int nfc_enable_se(struct nfc_dev *dev, u32 se_idx)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -601,7 +601,7 @@ int nfc_disable_se(struct nfc_dev *dev, u32 se_idx)\n \n \tdevice_lock(&dev->dev);\n \n-\tif (!device_is_registered(&dev->dev)) {\n+\tif (dev->shutting_down) {\n \t\trc = -ENODEV;\n \t\tgoto error;\n \t}\n@@ -1134,6 +1134,7 @@ int nfc_register_device(struct nfc_dev *dev)\n \t\t\tdev->rfkill = NULL;\n \t\t}\n \t}\n+\tdev->shutting_down = false;\n \tdevice_unlock(&dev->dev);\n \n \trc = nfc_genl_device_added(dev);\n@@ -1166,12 +1167,10 @@ void nfc_unregister_device(struct nfc_dev *dev)\n \t\trfkill_unregister(dev->rfkill);\n \t\trfkill_destroy(dev->rfkill);\n \t}\n+\tdev->shutting_down = true;\n \tdevice_unlock(&dev->dev);\n \n \tif (dev->ops->check_presence) {\n-\t\tdevice_lock(&dev->dev);\n-\t\tdev->shutting_down = true;\n-\t\tdevice_unlock(&dev->dev);\n \t\tdel_timer_sync(&dev->check_pres_timer);\n \t\tcancel_work_sync(&dev->check_pres_work);\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.1,
    "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-416",
    "description": "A use-after-free flaw was found in the Linux kernel's NFC core functionality due to a race condition between kobject creation and delete. This vulnerability allows a local attacker with CAP_NET_ADMIN privilege to leak kernel information.",
    "attack_vector": "LOCAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-08-31T16:15:10.007",
    "last_modified": "2024-11-21T06:41:52.067",
    "fix_date": "2022-04-29T12:45:50Z"
  },
  "references": [
    {
      "url": "https://github.com/torvalds/linux/commit/da5c0f119203ad9728920456a0f52a6d850c01cd",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/da5c0f119203ad9728920456a0f52a6d850c01cd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.063391",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}