{
  "cve_id": "CVE-2022-1986",
  "github_data": {
    "repository": "gogs/gogs",
    "fix_commit": "38aff73251cc46ced96dd608dab6190415032a82",
    "related_commits": [
      "38aff73251cc46ced96dd608dab6190415032a82",
      "38aff73251cc46ced96dd608dab6190415032a82"
    ],
    "patch_url": "https://github.com/gogs/gogs/commit/38aff73251cc46ced96dd608dab6190415032a82.patch",
    "fix_commit_details": {
      "sha": "38aff73251cc46ced96dd608dab6190415032a82",
      "commit_date": "2022-06-04T05:11:29Z",
      "author": {
        "login": "unknwon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "repo_editor: check both styles of `os.PathSeparator` in all systems (#7005)",
        "length": 75,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 52,
        "additions": 34,
        "deletions": 18
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -22,6 +22,7 @@ All notable changes to Gogs are documented in this file.\n \n ### Fixed\n \n+- _Security:_ OS Command Injection in file editor. [#7000](https://github.com/gogs/gogs/issues/7000)\n - Unable to use LDAP authentication on ARM machines. [#6761](https://github.com/gogs/gogs/issues/6761)\n - Unable to init repository during creation on Windows. [#6967](https://github.com/gogs/gogs/issues/6967)\n - Mysterious panic on `Value not found for type *repo.HTTPContext`. [#6963](https://github.com/gogs/gogs/issues/6963)"
        },
        {
          "filename": "internal/db/repo_editor.go",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -467,10 +467,12 @@ type UploadRepoFileOptions struct {\n // path of the repository.\n func isRepositoryGitPath(path string) bool {\n \treturn strings.HasSuffix(path, \".git\") ||\n-\t\tstrings.Contains(path, \".git\"+string(os.PathSeparator)) ||\n+\t\tstrings.Contains(path, \".git/\") ||\n+\t\tstrings.Contains(path, `.git\\`) ||\n \t\t// Windows treats \".git.\" the same as \".git\"\n \t\tstrings.HasSuffix(path, \".git.\") ||\n-\t\tstrings.Contains(path, \".git.\"+string(os.PathSeparator))\n+\t\tstrings.Contains(path, \".git./\") ||\n+\t\tstrings.Contains(path, `.git.\\`)\n }\n \n func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {"
        },
        {
          "filename": "internal/db/repo_editor_test.go",
          "status": "modified",
          "additions": 29,
          "deletions": 16,
          "patch": "@@ -5,7 +5,6 @@\n package db\n \n import (\n-\t\"path/filepath\"\n \t\"testing\"\n \n \t\"github.com/stretchr/testify/assert\"\n@@ -16,23 +15,37 @@ func Test_isRepositoryGitPath(t *testing.T) {\n \t\tpath    string\n \t\twantVal bool\n \t}{\n-\t\t{path: filepath.Join(\".\", \".git\"), wantVal: true},\n-\t\t{path: filepath.Join(\".\", \".git\", \"\"), wantVal: true},\n-\t\t{path: filepath.Join(\".\", \".git\", \"hooks\", \"pre-commit\"), wantVal: true},\n-\t\t{path: filepath.Join(\".git\", \"hooks\"), wantVal: true},\n-\t\t{path: filepath.Join(\"dir\", \".git\"), wantVal: true},\n-\n-\t\t{path: filepath.Join(\".\", \".git.\"), wantVal: true},\n-\t\t{path: filepath.Join(\".\", \".git.\", \"\"), wantVal: true},\n-\t\t{path: filepath.Join(\".\", \".git.\", \"hooks\", \"pre-commit\"), wantVal: true},\n-\t\t{path: filepath.Join(\".git.\", \"hooks\"), wantVal: true},\n-\t\t{path: filepath.Join(\"dir\", \".git.\"), wantVal: true},\n-\n-\t\t{path: filepath.Join(\".gitignore\"), wantVal: false},\n-\t\t{path: filepath.Join(\"dir\", \".gitkeep\"), wantVal: false},\n+\t\t{path: \".git\", wantVal: true},\n+\t\t{path: \"./.git\", wantVal: true},\n+\t\t{path: \".git/hooks/pre-commit\", wantVal: true},\n+\t\t{path: \".git/hooks\", wantVal: true},\n+\t\t{path: \"dir/.git\", wantVal: true},\n+\n+\t\t{path: \".gitignore\", wantVal: false},\n+\t\t{path: \"dir/.gitkeep\", wantVal: false},\n+\n+\t\t// Windows-specific\n+\t\t{path: `.git\\`, wantVal: true},\n+\t\t{path: `.git\\hooks\\pre-commit`, wantVal: true},\n+\t\t{path: `.git\\hooks`, wantVal: true},\n+\t\t{path: `dir\\.git`, wantVal: true},\n+\n+\t\t{path: `.\\.git.`, wantVal: true},\n+\t\t{path: `.\\.git.\\`, wantVal: true},\n+\t\t{path: `.git.\\hooks\\pre-commit`, wantVal: true},\n+\t\t{path: `.git.\\hooks`, wantVal: true},\n+\t\t{path: `dir\\.git.`, wantVal: true},\n+\n+\t\t{path: \"./.git.\", wantVal: true},\n+\t\t{path: \"./.git./\", wantVal: true},\n+\t\t{path: \".git./hooks/pre-commit\", wantVal: true},\n+\t\t{path: \".git./hooks\", wantVal: true},\n+\t\t{path: \"dir/.git.\", wantVal: true},\n+\n+\t\t{path: `dir\\.gitkeep`, wantVal: false},\n \t}\n \tfor _, test := range tests {\n-\t\tt.Run(\"\", func(t *testing.T) {\n+\t\tt.Run(test.path, func(t *testing.T) {\n \t\t\tassert.Equal(t, test.wantVal, isRepositoryGitPath(test.path))\n \t\t})\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "96d5d622b8d55c426861df74de8b88dc9870d36f",
            "date": "2025-01-02T00:46:13Z",
            "author_login": "unknwon"
          },
          {
            "sha": "b59e943aa65316a74a6c0a51941ffd7263744f5c",
            "date": "2025-01-02T00:41:24Z",
            "author_login": "MarcUs7i"
          },
          {
            "sha": "371a6092ded5250757fd9d62adc0eb220faea360",
            "date": "2025-01-01T16:18:34Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e6896eb3935e49242424b58ea082b3cfc4502caa",
            "date": "2025-01-01T16:11:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6c04a1ce7c754e295b0cd2f6963a79fe1bfb6688",
            "date": "2025-01-01T15:37:55Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "OS Command Injection in GitHub repository gogs/gogs prior to 0.12.9.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-09T17:15:08.627",
    "last_modified": "2024-11-21T06:41:53.540",
    "fix_date": "2022-06-04T05:11:29Z"
  },
  "references": [
    {
      "url": "https://github.com/gogs/gogs/commit/38aff73251cc46ced96dd608dab6190415032a82",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/776e8f29-ff5e-4501-bb9f-0bd335007930",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/gogs/gogs/commit/38aff73251cc46ced96dd608dab6190415032a82",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/776e8f29-ff5e-4501-bb9f-0bd335007930",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.423945",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gogs",
    "owner": "gogs",
    "created_at": "2014-02-12T01:57:08Z",
    "updated_at": "2025-01-14T08:26:37Z",
    "pushed_at": "2025-01-02T00:46:14Z",
    "size": 207255,
    "stars": 45328,
    "forks": 4884,
    "open_issues": 940,
    "watchers": 45328,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 1511466,
      "Less": 60542,
      "JavaScript": 47845,
      "Shell": 26321,
      "Batchfile": 932,
      "Dockerfile": 890,
      "Procfile": 33
    },
    "commit_activity": {
      "total_commits_last_year": 105,
      "avg_commits_per_week": 2.019230769230769,
      "days_active_last_year": 55
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:56:32.136099"
  }
}