{
  "cve_id": "CVE-2022-1987",
  "github_data": {
    "repository": "bfabiszewski/libmobi",
    "fix_commit": "612562bc1ea38f1708b044e7a079c47a05b1291d",
    "related_commits": [
      "612562bc1ea38f1708b044e7a079c47a05b1291d",
      "612562bc1ea38f1708b044e7a079c47a05b1291d"
    ],
    "patch_url": "https://github.com/bfabiszewski/libmobi/commit/612562bc1ea38f1708b044e7a079c47a05b1291d.patch",
    "fix_commit_details": {
      "sha": "612562bc1ea38f1708b044e7a079c47a05b1291d",
      "commit_date": "2022-05-05T18:54:11Z",
      "author": {
        "login": "bfabiszewski",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix: index entry label not being zero-terminated with corrupt input",
        "length": 67,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 15,
        "additions": 10,
        "deletions": 5
      },
      "files": [
        {
          "filename": "ChangeLog",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,3 +1,4 @@\n+2022-05-05: Fix: index entry label not being zero-terminated with corrupt input\n 2022-05-03: Fix boundary checking error in markup search, that could cause buffer over-read with corrupt input\n 2022-05-02: Fix typo in macro name\n 2022-04-27: Fix undefined behavior when passing null to strdup"
        },
        {
          "filename": "src/index.c",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -29,11 +29,11 @@\n /**\n  @brief Read index entry label from buffer pointing at index record data\n  \n- @param[in,out] output Output string\n+ @param[in,out] output Output buffer (INDX_LABEL_SIZEMAX + 1 bytes)\n  @param[in,out] buf MOBIBuffer structure, offset pointing at index entry label\n  @param[in] length Number of bytes to be read\n  @param[in] has_ligatures Decode ligatures if true\n- @return Size of read label\n+ @return Length of output string (without null terminator), on error buf->error set to MOBI_RET status\n  */\n size_t mobi_indx_get_label(unsigned char *output, MOBIBuffer *buf, const size_t length, const size_t has_ligatures) {\n     if (!output) {\n@@ -248,9 +248,9 @@ uint16_t mobi_ordt_lookup(const MOBIOrdt *ordt, const uint16_t offset) {\n  \n  @param[in] ordt MOBIOrdt structure (ORDT data and metadata)\n  @param[in,out] buf MOBIBuffer structure with input string\n- @param[in,out] output Output buffer (INDX_LABEL_SIZEMAX bytes)\n+ @param[in,out] output Output buffer (INDX_LABEL_SIZEMAX + 1 bytes)\n  @param[in] length Length of input string contained in buf\n- @return Number of bytes read\n+ @return Length of output string (without null terminator)\n  */\n size_t mobi_getstring_ordt(const MOBIOrdt *ordt, MOBIBuffer *buf, unsigned char *output, size_t length) {\n     size_t i = 0;\n@@ -362,12 +362,16 @@ static MOBI_RET mobi_parse_index_entry(MOBIIndx *indx, const MOBIIdxt idxt, cons\n         debug_print(\"Label length too long: %zu\\n\", label_length);\n         return MOBI_DATA_CORRUPT;\n     }\n-    char text[INDX_LABEL_SIZEMAX];\n+    char text[INDX_LABEL_SIZEMAX + 1];\n     /* FIXME: what is ORDT1 for? */\n     if (ordt->ordt2) {\n         label_length = mobi_getstring_ordt(ordt, buf, (unsigned char*) text, label_length);\n     } else {\n         label_length = mobi_indx_get_label((unsigned char*) text, buf, label_length, indx->ligt_entries_count);\n+        if (buf->error != MOBI_SUCCESS) {\n+            debug_print(\"Buffer error reading label: %d\\n\", buf->error);\n+            return MOBI_DATA_CORRUPT;\n+        }\n     }\n     indx->entries[entry_number].label = malloc(label_length + 1);\n     if (indx->entries[entry_number].label == NULL) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "906274205c11944b628da1c553b255acb1af7c55",
            "date": "2024-10-29T17:49:48Z",
            "author_login": "bfabiszewski"
          },
          {
            "sha": "3c7ae6436b54cc3d18955e40f1e8de7d59497ede",
            "date": "2024-10-29T17:23:57Z",
            "author_login": "bfabiszewski"
          },
          {
            "sha": "ea137c29818b3ff6ab6968a83dfed89716acecfb",
            "date": "2024-07-04T16:27:48Z",
            "author_login": "bfabiszewski"
          },
          {
            "sha": "2e15b158fdd81ebd0f8dd2febfd1aaa80f73c238",
            "date": "2024-06-17T19:14:36Z",
            "author_login": "bfabiszewski"
          },
          {
            "sha": "85dcfe803fc2a21020ddcf15c3eb66b93d388add",
            "date": "2024-06-17T06:10:16Z",
            "author_login": "bfabiszewski"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-126",
    "description": "Buffer Over-read in GitHub repository bfabiszewski/libmobi prior to 0.11.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-03T08:15:07.383",
    "last_modified": "2024-11-21T06:41:53.680",
    "fix_date": "2022-05-05T18:54:11Z"
  },
  "references": [
    {
      "url": "https://github.com/bfabiszewski/libmobi/commit/612562bc1ea38f1708b044e7a079c47a05b1291d",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e8197737-7557-443e-a59f-2a86e8dda75f",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/bfabiszewski/libmobi/commit/612562bc1ea38f1708b044e7a079c47a05b1291d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e8197737-7557-443e-a59f-2a86e8dda75f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.226977",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libmobi",
    "owner": "bfabiszewski",
    "created_at": "2014-05-14T10:23:18Z",
    "updated_at": "2025-01-04T18:03:00Z",
    "pushed_at": "2024-10-29T17:50:02Z",
    "size": 48334,
    "stars": 429,
    "forks": 69,
    "open_issues": 2,
    "watchers": 429,
    "has_security_policy": false,
    "default_branch": "public",
    "protected_branches": [],
    "languages": {
      "C": 977087,
      "M4": 13279,
      "Roff": 8058,
      "CMake": 7485,
      "Shell": 5517,
      "Makefile": 4701
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-14T16:13:48.046970"
  }
}