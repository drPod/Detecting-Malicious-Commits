{
  "cve_id": "CVE-2022-2023",
  "github_data": {
    "repository": "polonel/trudesk",
    "fix_commit": "83fd5a89319ba2c2f5934722e39b08aba9b3a4ac",
    "related_commits": [
      "83fd5a89319ba2c2f5934722e39b08aba9b3a4ac",
      "83fd5a89319ba2c2f5934722e39b08aba9b3a4ac"
    ],
    "patch_url": "https://github.com/polonel/trudesk/commit/83fd5a89319ba2c2f5934722e39b08aba9b3a4ac.patch",
    "fix_commit_details": {
      "sha": "83fd5a89319ba2c2f5934722e39b08aba9b3a4ac",
      "commit_date": "2022-06-08T03:57:07Z",
      "author": {
        "login": "polonel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(accounts): security enhancement",
        "length": 35,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 101,
        "additions": 100,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/controllers/api/v1/routes.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -122,6 +122,7 @@ module.exports = function (middleware, router, controllers) {\n   router.delete('/api/v1/groups/:id', apiv1, canUser('groups:delete'), apiCtrl.groups.deleteGroup)\n \n   // Users\n+  router.put('/api/v1/profile', apiv1, apiCtrl.users.profileUpdate)\n   router.get('/api/v1/users', apiv1, canUser('accounts:view'), apiCtrl.users.getWithLimit)\n   router.post('/api/v1/users/create', apiv1, canUser('accounts:create'), apiCtrl.users.create)\n   router.get('/api/v1/users/notifications', apiv1, apiCtrl.users.getNotifications)"
        },
        {
          "filename": "src/controllers/api/v1/users.js",
          "status": "modified",
          "additions": 98,
          "deletions": 0,
          "patch": "@@ -384,6 +384,104 @@ apiUsers.createPublicAccount = function (req, res) {\n   )\n }\n \n+apiUsers.profileUpdate = function (req, res) {\n+  if (!req.user) return res.status(400).json({ success: false, error: 'Invalid Post Data' })\n+  const username = req.user.username\n+  if (_.isNull(username) || _.isUndefined(username))\n+    return res.status(400).json({ success: false, error: 'Invalid Post Data' })\n+\n+  const data = req.body\n+  let passwordUpdated = false\n+\n+  const obj = {\n+    fullname: data.aFullname,\n+    title: data.aTitle,\n+    password: data.aPassword,\n+    passconfirm: data.aPassConfirm,\n+    email: data.aEmail\n+  }\n+\n+  let passwordComplexityEnabled = true\n+\n+  async.series(\n+    {\n+      settings: function (done) {\n+        const SettingUtil = require('../../../settings/settingsUtil')\n+        SettingUtil.getSettings(function (err, content) {\n+          if (err) return done(err)\n+\n+          const settings = content.data.settings\n+          passwordComplexityEnabled = settings.accountsPasswordComplexity.value\n+\n+          return done()\n+        })\n+      },\n+      user: function (done) {\n+        UserSchema.getUserByUsername(username, function (err, user) {\n+          if (err) return done(err)\n+          if (!user) return done('Invalid User Object')\n+\n+          obj._id = user._id\n+\n+          if (\n+            !_.isUndefined(obj.password) &&\n+            !_.isEmpty(obj.password) &&\n+            !_.isUndefined(obj.passconfirm) &&\n+            !_.isEmpty(obj.passconfirm)\n+          ) {\n+            if (obj.password === obj.passconfirm) {\n+              if (passwordComplexityEnabled) {\n+                // check Password Complexity\n+                const passwordComplexity = require('../../../settings/passwordComplexity')\n+                if (!passwordComplexity.validate(obj.password)) return done('Password does not meet requirements')\n+              }\n+\n+              user.password = obj.password\n+              passwordUpdated = true\n+            }\n+          }\n+\n+          if (!_.isUndefined(obj.fullname) && obj.fullname.length > 0) user.fullname = obj.fullname\n+          if (!_.isUndefined(obj.email) && obj.email.length > 0) user.email = obj.email\n+          if (!_.isUndefined(obj.title) && obj.title.length > 0) user.title = obj.title\n+\n+          user.save(function (err, nUser) {\n+            if (err) return done(err)\n+\n+            nUser.populate('role', function (err, populatedUser) {\n+              if (err) return done(err)\n+              const resUser = stripUserFields(populatedUser)\n+\n+              return done(null, resUser)\n+            })\n+          })\n+        })\n+      },\n+      groups: function (done) {\n+        groupSchema.getAllGroupsOfUser(obj._id, done)\n+      }\n+    },\n+    async function (err, results) {\n+      if (err) {\n+        winston.debug(err)\n+        return res.status(400).json({ success: false, error: err })\n+      }\n+\n+      const user = results.user.toJSON()\n+      user.groups = results.groups.map(function (g) {\n+        return { _id: g._id, name: g.name }\n+      })\n+\n+      if (passwordUpdated) {\n+        const Session = require('../../../models/session')\n+        await Session.destroy(user._id)\n+      }\n+\n+      return res.json({ success: true, user: user })\n+    }\n+  )\n+}\n+\n /**\n  * @api {put} /api/v1/users/:username Update User\n  * @apiName updateUser"
        },
        {
          "filename": "src/public/js/angularjs/controllers/profile.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -74,7 +74,7 @@ define([\n         }\n \n         $http\n-          .put('/api/v1/users/' + data.username, {\n+          .put('/api/v1/profile/', {\n             aId: id,\n             aFullname: data.fullname,\n             aPass: data.password,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "29f3f1698f341e3d8fcc4f4eb5340ee43427fe63",
            "date": "2024-07-24T22:49:58Z",
            "author_login": "polonel"
          },
          {
            "sha": "64436f82e01b4b7b326d9bd8b8e39f06490b56de",
            "date": "2024-07-24T22:48:33Z",
            "author_login": "polonel"
          },
          {
            "sha": "92008c62b5c381c0dbb9af4deac41bd567537f88",
            "date": "2024-07-24T22:39:02Z",
            "author_login": "polonel"
          },
          {
            "sha": "605ba8a04c7487d349282291085bf2e9ff0a9dae",
            "date": "2024-07-24T21:32:24Z",
            "author_login": "polonel"
          },
          {
            "sha": "517aee8d5224419f9e7dc53b268c544dc71057e7",
            "date": "2024-07-24T15:15:40Z",
            "author_login": "kareem-abdul"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-648",
    "description": "Incorrect Use of Privileged APIs in GitHub repository polonel/trudesk prior to 1.2.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-20T04:15:09.973",
    "last_modified": "2024-11-21T07:00:11.423",
    "fix_date": "2022-06-08T03:57:07Z"
  },
  "references": [
    {
      "url": "https://github.com/polonel/trudesk/commit/83fd5a89319ba2c2f5934722e39b08aba9b3a4ac",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/0f35b1d3-56e6-49e4-bc5a-830f52e094b3",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/polonel/trudesk/commit/83fd5a89319ba2c2f5934722e39b08aba9b3a4ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/0f35b1d3-56e6-49e4-bc5a-830f52e094b3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.462231",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "trudesk",
    "owner": "polonel",
    "created_at": "2014-07-14T20:57:48Z",
    "updated_at": "2025-01-08T13:34:07Z",
    "pushed_at": "2025-01-05T20:16:48Z",
    "size": 84271,
    "stars": 1336,
    "forks": 456,
    "open_issues": 12,
    "watchers": 1336,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "JavaScript": 11363842,
      "CSS": 583680,
      "SCSS": 507907,
      "Handlebars": 361791,
      "Sass": 209119,
      "HTML": 78238,
      "TypeScript": 14435,
      "Dockerfile": 838,
      "Makefile": 694,
      "Shell": 412
    },
    "commit_activity": {
      "total_commits_last_year": 7,
      "avg_commits_per_week": 0.1346153846153846,
      "days_active_last_year": 2
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:07:34.211075"
  }
}