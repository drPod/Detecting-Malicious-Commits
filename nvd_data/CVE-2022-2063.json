{
  "cve_id": "CVE-2022-2063",
  "github_data": {
    "repository": "nocodb/nocodb",
    "fix_commit": "269a19c2ad89a0e8a7596498e3806ff2ec1040c2",
    "related_commits": [
      "269a19c2ad89a0e8a7596498e3806ff2ec1040c2",
      "269a19c2ad89a0e8a7596498e3806ff2ec1040c2"
    ],
    "patch_url": "https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2.patch",
    "fix_commit_details": {
      "sha": "269a19c2ad89a0e8a7596498e3806ff2ec1040c2",
      "commit_date": "2022-06-13T08:40:18Z",
      "author": {
        "login": "pranavxc",
        "type": "User",
        "stats": {
          "total_commits": 5675,
          "average_weekly_commits": 15.053050397877984,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "Fix: Remove user reference from webhook context (#2337)",
        "length": 256,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 82,
        "additions": 18,
        "deletions": 64
      },
      "files": [
        {
          "filename": "packages/noco-docs/content/en/developer-resources/webhooks.md",
          "status": "modified",
          "additions": 1,
          "deletions": 7,
          "patch": "@@ -66,15 +66,9 @@ For INSERT/ UPDATE based triggers, use following handlebars to access correspond\n Note that, for Update trigger - all the fields in the ROW will be accessible, not just the field updated.\n For DELETE based triggers, **only** {{ data.id }} is accessible representing ID of the column deleted.\n   \n-For all trigger, following **user** information associated with person trigger can be accessed.\n-\n--   {{ **user**.id }} : Unique auto incremented NocoDB system value\n--   {{ **user**.email }} : User E-mail.\n--   {{ **user**.roles }} : User Role amongst [Owner, Creator, Editor, Commenter, Viewer].\n-\n ### JSON format\n \n-Use {{ json data }} {{ json user }} to dump complete data & user information available in JSON format\n+Use {{ json data }} to dump complete data & user information available in JSON format\n \n ### Additional references:\n "
        },
        {
          "filename": "packages/nocodb/src/lib/db/sql-data-mapper/lib/sql/BaseModelSqlv2.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -34,8 +34,7 @@ import Hook from '../../../../models/Hook';\n import NcPluginMgrv2 from '../../../../meta/helpers/NcPluginMgrv2';\n import {\n   _transformSubmittedFormDataForEmail,\n-  invokeWebhook,\n-  parseBody\n+  invokeWebhook\n } from '../../../../meta/helpers/webhookHelpers';\n import Validator from 'validator';\n import { customValidators } from './customValidators';\n@@ -1791,7 +1790,7 @@ class BaseModelSqlv2 {\n           // todo: notification template\n           (await NcPluginMgrv2.emailAdapter())?.mailSend({\n             to: emails.join(','),\n-            subject: parseBody('NocoDB Form', req, data, {}),\n+            subject: 'NocoDB Form',\n             html: ejs.render(formSubmissionEmailTemplate, {\n               data: transformedData,\n               tn: this.model.table_name,"
        },
        {
          "filename": "packages/nocodb/src/lib/meta/helpers/webhookHelpers.ts",
          "status": "modified",
          "additions": 15,
          "deletions": 54,
          "patch": "@@ -7,21 +7,13 @@ import Filter from '../../models/Filter';\n import HookLog from '../../models/HookLog';\n import { HookLogType } from 'nocodb-sdk';\n \n-export function parseBody(\n-  template: string,\n-  user: any,\n-  data: any,\n-  payload: any\n-): string {\n+export function parseBody(template: string, data: any): string {\n   if (!template) {\n     return template;\n   }\n \n   return Handlebars.compile(template, { noEscape: true })({\n-    data,\n-    user,\n-    payload,\n-    env: process.env\n+    data\n   });\n }\n \n@@ -121,52 +113,43 @@ export async function handleHttpWebHook(apiMeta, user, data) {\n   // }\n }\n \n-export function axiosRequestMake(_apiMeta, user, data) {\n+export function axiosRequestMake(_apiMeta, _user, data) {\n   const apiMeta = { ..._apiMeta };\n   if (apiMeta.body) {\n     try {\n       apiMeta.body = JSON.parse(apiMeta.body, (_key, value) => {\n-        return typeof value === 'string'\n-          ? parseBody(value, user, data, apiMeta)\n-          : value;\n+        return typeof value === 'string' ? parseBody(value, data) : value;\n       });\n     } catch (e) {\n-      apiMeta.body = parseBody(apiMeta.body, user, data, apiMeta);\n+      apiMeta.body = parseBody(apiMeta.body, data);\n     }\n   }\n   if (apiMeta.auth) {\n     try {\n       apiMeta.auth = JSON.parse(apiMeta.auth, (_key, value) => {\n-        return typeof value === 'string'\n-          ? parseBody(value, user, data, apiMeta)\n-          : value;\n+        return typeof value === 'string' ? parseBody(value, data) : value;\n       });\n     } catch (e) {\n-      apiMeta.auth = parseBody(apiMeta.auth, user, data, apiMeta);\n+      apiMeta.auth = parseBody(apiMeta.auth, data);\n     }\n   }\n   apiMeta.response = {};\n   const req = {\n     params: apiMeta.parameters\n       ? apiMeta.parameters.reduce((paramsObj, param) => {\n           if (param.name && param.enabled) {\n-            paramsObj[param.name] = parseBody(param.value, user, data, apiMeta);\n+            paramsObj[param.name] = parseBody(param.value, data);\n           }\n           return paramsObj;\n         }, {})\n       : {},\n-    url: parseBody(apiMeta.path, user, data, apiMeta),\n+    url: parseBody(apiMeta.path, data),\n     method: apiMeta.method,\n     data: apiMeta.body,\n     headers: apiMeta.headers\n       ? apiMeta.headers.reduce((headersObj, header) => {\n           if (header.name && header.enabled) {\n-            headersObj[header.name] = parseBody(\n-              header.value,\n-              user,\n-              data,\n-              apiMeta\n-            );\n+            headersObj[header.name] = parseBody(header.value, data);\n           }\n           return headersObj;\n         }, {})\n@@ -208,24 +191,9 @@ export async function invokeWebhook(\n       case 'Email':\n         {\n           const res = await (await NcPluginMgrv2.emailAdapter())?.mailSend({\n-            to: parseBody(\n-              notification?.payload?.to,\n-              user,\n-              data,\n-              notification?.payload\n-            ),\n-            subject: parseBody(\n-              notification?.payload?.subject,\n-              user,\n-              data,\n-              notification?.payload\n-            ),\n-            html: parseBody(\n-              notification?.payload?.body,\n-              user,\n-              data,\n-              notification?.payload\n-            )\n+            to: parseBody(notification?.payload?.to, data),\n+            subject: parseBody(notification?.payload?.subject, data),\n+            html: parseBody(notification?.payload?.body, data)\n           });\n           hookLog = {\n             ...hook,\n@@ -258,16 +226,9 @@ export async function invokeWebhook(\n           const res = await (\n             await NcPluginMgrv2.webhookNotificationAdapters(notification.type)\n           ).sendMessage(\n-            parseBody(\n-              notification?.payload?.body,\n-              user,\n-              data,\n-              notification?.payload\n-            ),\n+            parseBody(notification?.payload?.body, data),\n             JSON.parse(JSON.stringify(notification?.payload), (_key, value) => {\n-              return typeof value === 'string'\n-                ? parseBody(value, user, data, notification?.payload)\n-                : value;\n+              return typeof value === 'string' ? parseBody(value, data) : value;\n             })\n           );\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c2f50efbb9e57e954a4fde07cf618bbfd0fc8704",
            "date": "2025-01-14T11:59:45Z",
            "author_login": "mertmit"
          },
          {
            "sha": "51edd98b9e26a5625a4d3e0b1d3ff09d8442e819",
            "date": "2025-01-14T10:55:55Z",
            "author_login": "pranavxc"
          },
          {
            "sha": "df0bffd0ccaadb5db69999529ec27fa75c2fa452",
            "date": "2025-01-14T09:53:04Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "adfc02d7d49f88e9b7dac823915fbda400cb8d6c",
            "date": "2025-01-14T09:51:26Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "4ac6769eba67ba3ad52d2c37b68058eb0905fc8e",
            "date": "2025-01-14T09:51:23Z",
            "author_login": "pranavxc"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-269",
    "description": "Improper Privilege Management in GitHub repository nocodb/nocodb prior to 0.91.7+.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-13T12:15:08.187",
    "last_modified": "2024-11-21T07:00:15.470",
    "fix_date": "2022-06-13T08:40:18Z"
  },
  "references": [
    {
      "url": "https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.432377",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nocodb",
    "owner": "nocodb",
    "created_at": "2017-10-29T18:51:48Z",
    "updated_at": "2025-01-14T13:56:54Z",
    "pushed_at": "2025-01-14T12:15:11Z",
    "size": 1247095,
    "stars": 50834,
    "forks": 3497,
    "open_issues": 754,
    "watchers": 50834,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "TypeScript": 8293660,
      "Vue": 3668346,
      "JavaScript": 756191,
      "PLpgSQL": 101494,
      "Shell": 56477,
      "SCSS": 42238,
      "CSS": 25579,
      "TSQL": 15401,
      "Dockerfile": 5585,
      "Smarty": 2321
    },
    "commit_activity": {
      "total_commits_last_year": 7073,
      "avg_commits_per_week": 136.01923076923077,
      "days_active_last_year": 334
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T14:16:35.736766"
  }
}