{
  "cve_id": "CVE-2022-2134",
  "github_data": {
    "repository": "inventree/inventree",
    "fix_commit": "63b4ff3eb6e80861962fafe79c9b483cd7239d6c",
    "related_commits": [
      "63b4ff3eb6e80861962fafe79c9b483cd7239d6c",
      "63b4ff3eb6e80861962fafe79c9b483cd7239d6c"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "63b4ff3eb6e80861962fafe79c9b483cd7239d6c",
      "commit_date": "2022-06-20T12:20:04Z",
      "author": {
        "login": "SchrodingersGat",
        "type": "User",
        "stats": {
          "total_commits": 12015,
          "average_weekly_commits": 29.233576642335766,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 303
        }
      },
      "commit_message": {
        "title": "Remove reliance on django-markdownx (#3231)",
        "length": 348,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 283,
        "additions": 173,
        "deletions": 110
      },
      "files": [
        {
          "filename": "InvenTree/InvenTree/fields.py",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -157,3 +157,19 @@ def formfield(self, **kwargs):\n         defaults.update(kwargs)\n \n         return super().formfield(**kwargs)\n+\n+\n+class InvenTreeNotesField(models.TextField):\n+    \"\"\"Custom implementation of a 'notes' field\"\"\"\n+\n+    # Maximum character limit for the various 'notes' fields\n+    NOTES_MAX_LENGTH = 50000\n+\n+    def __init__(self, **kwargs):\n+        \"\"\"Configure default initial values for this field\"\"\"\n+        kwargs['max_length'] = self.NOTES_MAX_LENGTH\n+        kwargs['verbose_name'] = _('Notes')\n+        kwargs['blank'] = True\n+        kwargs['null'] = True\n+\n+        super().__init__(**kwargs)"
        },
        {
          "filename": "InvenTree/InvenTree/settings.py",
          "status": "modified",
          "additions": 0,
          "deletions": 6,
          "patch": "@@ -15,7 +15,6 @@\n import socket\n import string\n import sys\n-from datetime import datetime\n \n import django.conf.locale\n from django.core.files.storage import default_storage\n@@ -253,7 +252,6 @@ def _is_true(x):\n     'import_export',                        # Import / export tables to file\n     'django_cleanup.apps.CleanupConfig',    # Automatically delete orphaned MEDIA files\n     'mptt',                                 # Modified Preorder Tree Traversal\n-    'markdownx',                            # Markdown editing\n     'markdownify',                          # Markdown template rendering\n     'django_admin_shell',                   # Python shell for the admin interface\n     'djmoney',                              # django-money integration\n@@ -875,10 +873,6 @@ def _is_true(x):\n REMOTE_LOGIN = get_setting('INVENTREE_REMOTE_LOGIN', CONFIG.get('remote_login', False))\n REMOTE_LOGIN_HEADER = get_setting('INVENTREE_REMOTE_LOGIN_HEADER', CONFIG.get('remote_login_header', 'REMOTE_USER'))\n \n-# Markdownx configuration\n-# Ref: https://neutronx.github.io/django-markdownx/customization/\n-MARKDOWNX_MEDIA_PATH = datetime.now().strftime('markdownx/%Y/%m/%d')\n-\n # Markdownify configuration\n # Ref: https://django-markdownify.readthedocs.io/en/latest/settings.html\n "
        },
        {
          "filename": "InvenTree/InvenTree/static/css/color-themes/dark-reader.css",
          "status": "modified",
          "additions": 0,
          "deletions": 9,
          "patch": "@@ -3539,15 +3539,6 @@ a.ui-button:active,\n .index-action-selected {\n     background-color: rgb(32, 34, 36);\n }\n-.markdownx .row {\n-    border-color: rgb(31, 31, 92);\n-}\n-.markdownx-editor {\n-    border-color: rgb(31, 31, 92);\n-}\n-.markdownx-preview {\n-    border-color: rgb(31, 31, 92);\n-}\n .progress {\n     background-image: initial;\n     background-color: rgb(32, 34, 36);"
        },
        {
          "filename": "InvenTree/InvenTree/static/css/inventree.css",
          "status": "modified",
          "additions": 0,
          "deletions": 20,
          "patch": "@@ -63,30 +63,10 @@ main {\n     background-color: #EEEEF5;\n }\n \n-.markdownx .row {\n-    margin: 5px;\n-    padding: 5px;\n-    border: 1px solid #cce;\n-    border-radius: 4px;\n-}\n-\n-.markdownx-editor {\n-    width: 100%;\n-    border: 1px solid #cce;\n-    border-radius: 3px;\n-    padding: 10px;\n-}\n-\n .panel-content {\n     padding: 10px;\n }\n \n-.markdownx-preview {\n-    border: 1px solid #cce;\n-    border-radius: 3px;\n-    padding: 10px;\n-}\n-\n /* Progress bars */\n \n .progress {"
        },
        {
          "filename": "InvenTree/InvenTree/urls.py",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -126,9 +126,6 @@\n \n     re_path(r'^api/', include(apipatterns)),\n     re_path(r'^api-doc/', include_docs_urls(title='InvenTree API')),\n-\n-    # 3rd party endpoints\n-    re_path(r'^markdownx/', include('markdownx.urls')),\n ]\n \n frontendpatterns = ["
        },
        {
          "filename": "InvenTree/build/migrations/0008_auto_20200201_1247.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-01 12:47\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='build',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Extra build notes'),\n+            field=models.TextField(blank=True, help_text='Extra build notes'),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/build/migrations/0014_auto_20200425_1243.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -4,7 +4,6 @@\n import django.core.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n import mptt.fields\n \n \n@@ -31,7 +30,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='build',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Extra build notes', verbose_name='Notes'),\n+            field=models.TextField(blank=True, help_text='Extra build notes', verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='build',"
        },
        {
          "filename": "InvenTree/build/migrations/0035_alter_build_notes.py",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+# Generated by Django 3.2.13 on 2022-06-20 07:28\n+\n+import InvenTree.fields\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('build', '0034_alter_build_reference_int'),\n+    ]\n+\n+    operations = [\n+        migrations.AlterField(\n+            model_name='build',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Extra build notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+    ]"
        },
        {
          "filename": "InvenTree/build/models.py",
          "status": "modified",
          "additions": 2,
          "deletions": 5,
          "patch": "@@ -16,8 +16,6 @@\n from django.urls import reverse\n from django.utils.translation import gettext_lazy as _\n \n-from markdownx.models import MarkdownxField\n-\n from mptt.models import MPTTModel, TreeForeignKey\n from mptt.exceptions import InvalidMove\n \n@@ -320,9 +318,8 @@ def get_absolute_url(self):\n         blank=True, help_text=_('Link to external URL')\n     )\n \n-    notes = MarkdownxField(\n-        verbose_name=_('Notes'),\n-        blank=True, help_text=_('Extra build notes')\n+    notes = InvenTree.fields.InvenTreeNotesField(\n+        help_text=_('Extra build notes')\n     )\n \n     def sub_builds(self, cascade=True):"
        },
        {
          "filename": "InvenTree/company/migrations/0010_auto_20200201_1231.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-01 12:31\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='company',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True),\n+            field=models.TextField(blank=True),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/company/migrations/0032_auto_20210403_1837.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -5,7 +5,6 @@\n import django.core.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n import stdimage.models\n \n \n@@ -44,7 +43,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='company',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, verbose_name='Notes'),\n+            field=models.TextField(blank=True, verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='supplierpart',"
        },
        {
          "filename": "InvenTree/company/migrations/0045_alter_company_notes.py",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+# Generated by Django 3.2.13 on 2022-06-20 11:23\n+\n+import InvenTree.fields\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('company', '0044_auto_20220607_2204'),\n+    ]\n+\n+    operations = [\n+        migrations.AlterField(\n+            model_name='company',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Company Notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+    ]"
        },
        {
          "filename": "InvenTree/company/models.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -11,12 +11,12 @@\n from django.urls import reverse\n from django.utils.translation import gettext_lazy as _\n \n-from markdownx.models import MarkdownxField\n from moneyed import CURRENCIES\n from stdimage.models import StdImageField\n \n import common.models\n import common.settings\n+import InvenTree.fields\n import InvenTree.validators\n from common.settings import currency_code_default\n from InvenTree.fields import InvenTreeURLField\n@@ -135,7 +135,7 @@ class Meta:\n         verbose_name=_('Image'),\n     )\n \n-    notes = MarkdownxField(blank=True, verbose_name=_('Notes'))\n+    notes = InvenTree.fields.InvenTreeNotesField(help_text=_(\"Company Notes\"))\n \n     is_customer = models.BooleanField(default=False, verbose_name=_('is customer'), help_text=_('Do you sell items to this company?'))\n "
        },
        {
          "filename": "InvenTree/order/migrations/0015_auto_20200201_2346.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-01 23:46\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='purchaseorder',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Order notes'),\n+            field=models.TextField(blank=True, help_text='Order notes'),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/order/migrations/0020_auto_20200420_0940.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -6,7 +6,6 @@\n import django.core.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n \n \n class Migration(migrations.Migration):\n@@ -29,7 +28,7 @@ class Migration(migrations.Migration):\n                 ('status', models.PositiveIntegerField(choices=[(10, 'Pending'), (20, 'Placed'), (30, 'Complete'), (40, 'Cancelled'), (50, 'Lost'), (60, 'Returned')], default=10, help_text='Order status')),\n                 ('issue_date', models.DateField(blank=True, null=True)),\n                 ('complete_date', models.DateField(blank=True, null=True)),\n-                ('notes', markdownx.models.MarkdownxField(blank=True, help_text='Order notes')),\n+                ('notes', models.TextField(blank=True, help_text='Order notes')),\n                 ('customer_reference', models.CharField(blank=True, help_text='Customer order reference code', max_length=64)),\n                 ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),\n                 ('customer', models.ForeignKey(help_text='Customer', limit_choices_to={True, 'is_supplier'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_orders', to='company.Company')),"
        },
        {
          "filename": "InvenTree/order/migrations/0044_auto_20210404_2016.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -6,7 +6,6 @@\n import django.core.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n \n \n class Migration(migrations.Migration):\n@@ -43,7 +42,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='purchaseorder',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Order notes', verbose_name='Notes'),\n+            field=models.TextField(blank=True, help_text='Order notes', verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='purchaseorder',\n@@ -148,7 +147,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='salesorder',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Order notes', verbose_name='Notes'),\n+            field=models.TextField(blank=True, help_text='Order notes', verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='salesorder',"
        },
        {
          "filename": "InvenTree/order/migrations/0053_salesordershipment.py",
          "status": "modified",
          "additions": 1,
          "deletions": 5,
          "patch": "@@ -4,10 +4,6 @@\n from django.db import migrations, models\n import django.db.models.deletion\n \n-import order.models\n-\n-import markdownx.models\n-\n \n class Migration(migrations.Migration):\n \n@@ -23,7 +19,7 @@ class Migration(migrations.Migration):\n                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                 ('shipment_date', models.DateField(blank=True, help_text='Date of shipment', null=True, verbose_name='Shipment Date')),\n                 ('reference', models.CharField(default='1', help_text='Shipment reference', max_length=100, verbose_name='Reference')),\n-                ('notes', markdownx.models.MarkdownxField(blank=True, help_text='Shipment notes', verbose_name='Notes')),\n+                ('notes', models.TextField(blank=True, help_text='Shipment notes', verbose_name='Notes')),\n                 ('checked_by', models.ForeignKey(blank=True, help_text='User who checked this shipment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Checked By')),\n                 ('order', models.ForeignKey(help_text='Sales Order', on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='order.salesorder', verbose_name='Order')),\n             ],"
        },
        {
          "filename": "InvenTree/order/migrations/0070_auto_20220620_0728.py",
          "status": "added",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -0,0 +1,29 @@\n+# Generated by Django 3.2.13 on 2022-06-20 07:28\n+\n+import InvenTree.fields\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('order', '0069_auto_20220524_0508'),\n+    ]\n+\n+    operations = [\n+        migrations.AlterField(\n+            model_name='purchaseorder',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Order notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+        migrations.AlterField(\n+            model_name='salesorder',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Order notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+        migrations.AlterField(\n+            model_name='salesordershipment',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Shipment notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+    ]"
        },
        {
          "filename": "InvenTree/order/models.py",
          "status": "modified",
          "additions": 4,
          "deletions": 8,
          "patch": "@@ -20,15 +20,15 @@\n from djmoney.contrib.exchange.exceptions import MissingRate\n from djmoney.contrib.exchange.models import convert_money\n from djmoney.money import Money\n-from markdownx.models import MarkdownxField\n from mptt.models import TreeForeignKey\n \n import InvenTree.helpers\n import InvenTree.ready\n from common.settings import currency_code_default\n from company.models import Company, SupplierPart\n from InvenTree.exceptions import log_error\n-from InvenTree.fields import InvenTreeModelMoneyField, RoundingDecimalField\n+from InvenTree.fields import (InvenTreeModelMoneyField, InvenTreeNotesField,\n+                              RoundingDecimalField)\n from InvenTree.helpers import (decimal2string, getSetting, increment,\n                                notify_responsible)\n from InvenTree.models import InvenTreeAttachment, ReferenceIndexingMixin\n@@ -152,7 +152,7 @@ class Meta:\n         related_name='+',\n     )\n \n-    notes = MarkdownxField(blank=True, verbose_name=_('Notes'), help_text=_('Order notes'))\n+    notes = InvenTreeNotesField(help_text=_('Order notes'))\n \n     def get_total_price(self, target_currency=None):\n         \"\"\"Calculates the total price of all order lines, and converts to the specified target currency.\n@@ -1210,11 +1210,7 @@ def get_api_url():\n         default='1',\n     )\n \n-    notes = MarkdownxField(\n-        blank=True,\n-        verbose_name=_('Notes'),\n-        help_text=_('Shipment notes'),\n-    )\n+    notes = InvenTreeNotesField(help_text=_('Shipment notes'))\n \n     tracking_number = models.CharField(\n         max_length=100,"
        },
        {
          "filename": "InvenTree/part/migrations/0026_auto_20200131_1022.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-01-31 10:22\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='part',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(help_text='Part notes - supports Markdown formatting'),\n+            field=models.TextField(help_text='Part notes - supports Markdown formatting'),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/part/migrations/0029_auto_20200223_0901.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-23 09:01\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='part',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Part notes - supports Markdown formatting'),\n+            field=models.TextField(blank=True, help_text='Part notes - supports Markdown formatting'),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/part/migrations/0048_auto_20200902_1404.py",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -3,8 +3,6 @@\n import InvenTree.fields\n import InvenTree.validators\n \n-import markdownx\n-\n from django.db import migrations, models\n \n \n@@ -38,7 +36,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='part',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Part notes - supports Markdown formatting', null=True),\n+            field=models.TextField(blank=True, help_text='Part notes - supports Markdown formatting', null=True),\n         ),\n         migrations.AlterField(\n             model_name='part',"
        },
        {
          "filename": "InvenTree/part/migrations/0061_auto_20210103_2313.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -4,7 +4,6 @@\n import InvenTree.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n import mptt.fields\n import part.settings\n \n@@ -65,7 +64,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='part',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Part notes - supports Markdown formatting', null=True, verbose_name='Notes'),\n+            field=models.TextField(blank=True, help_text='Part notes - supports Markdown formatting', null=True, verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='part',"
        },
        {
          "filename": "InvenTree/part/migrations/0079_alter_part_notes.py",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+# Generated by Django 3.2.13 on 2022-06-20 07:28\n+\n+import InvenTree.fields\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('part', '0078_auto_20220606_0024'),\n+    ]\n+\n+    operations = [\n+        migrations.AlterField(\n+            model_name='part',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Part notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+    ]"
        },
        {
          "filename": "InvenTree/part/models.py",
          "status": "modified",
          "additions": 2,
          "deletions": 7,
          "patch": "@@ -25,7 +25,6 @@\n from djmoney.contrib.exchange.exceptions import MissingRate\n from djmoney.contrib.exchange.models import convert_money\n from jinja2 import Template\n-from markdownx.models import MarkdownxField\n from mptt.exceptions import InvalidMove\n from mptt.managers import TreeManager\n from mptt.models import MPTTModel, TreeForeignKey\n@@ -41,7 +40,7 @@\n from common.settings import currency_code_default\n from company.models import SupplierPart\n from InvenTree import helpers, validators\n-from InvenTree.fields import InvenTreeURLField\n+from InvenTree.fields import InvenTreeNotesField, InvenTreeURLField\n from InvenTree.helpers import decimal2money, decimal2string, normalize\n from InvenTree.models import (DataImportMixin, InvenTreeAttachment,\n                               InvenTreeTree)\n@@ -920,11 +919,7 @@ def get_default_supplier(self):\n         verbose_name=_('Virtual'),\n         help_text=_('Is this a virtual part, such as a software product or license?'))\n \n-    notes = MarkdownxField(\n-        blank=True, null=True,\n-        verbose_name=_('Notes'),\n-        help_text=_('Part notes - supports Markdown formatting')\n-    )\n+    notes = InvenTreeNotesField(help_text=_('Part notes'))\n \n     bom_checksum = models.CharField(max_length=128, blank=True, verbose_name=_('BOM checksum'), help_text=_('Stored BOM checksum'))\n "
        },
        {
          "filename": "InvenTree/part/test_api.py",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -1305,6 +1305,22 @@ def test_part_metadata(self):\n         self.assertFalse('hello' in part.metadata)\n         self.assertEqual(part.metadata['x'], 'y')\n \n+    def test_part_notes(self):\n+        \"\"\"Unit tests for the part 'notes' field\"\"\"\n+\n+        # Ensure that we cannot upload a very long piece of text\n+        url = reverse('api-part-detail', kwargs={'pk': 1})\n+\n+        response = self.patch(\n+            url,\n+            {\n+                'notes': 'abcde' * 10001\n+            },\n+            expected_code=400\n+        )\n+\n+        self.assertIn('Ensure this field has no more than 50000 characters', str(response.data['notes']))\n+\n \n class PartAPIAggregationTest(InvenTreeAPITestCase):\n     \"\"\"Tests to ensure that the various aggregation annotations are working correctly...\"\"\""
        },
        {
          "filename": "InvenTree/stock/migrations/0018_auto_20200202_0103.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-02 01:03\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='stockitem',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Stock Item Notes'),\n+            field=models.TextField(blank=True, help_text='Stock Item Notes'),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/stock/migrations/0020_auto_20200206_1213.py",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,7 +1,6 @@\n # Generated by Django 2.2.9 on 2020-02-06 12:13\n \n-from django.db import migrations\n-import markdownx.models\n+from django.db import migrations, models\n \n \n class Migration(migrations.Migration):\n@@ -14,6 +13,6 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='stockitem',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Stock Item Notes', null=True),\n+            field=models.TextField(blank=True, help_text='Stock Item Notes', null=True),\n         ),\n     ]"
        },
        {
          "filename": "InvenTree/stock/migrations/0034_auto_20200426_0602.py",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -4,7 +4,6 @@\n import django.core.validators\n from django.db import migrations, models\n import django.db.models.deletion\n-import markdownx.models\n import mptt.fields\n \n \n@@ -56,7 +55,7 @@ class Migration(migrations.Migration):\n         migrations.AlterField(\n             model_name='stockitem',\n             name='notes',\n-            field=markdownx.models.MarkdownxField(blank=True, help_text='Stock Item Notes', null=True, verbose_name='Notes'),\n+            field=models.TextField(blank=True, help_text='Stock Item Notes', null=True, verbose_name='Notes'),\n         ),\n         migrations.AlterField(\n             model_name='stockitem',"
        },
        {
          "filename": "InvenTree/stock/migrations/0077_alter_stockitem_notes.py",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+# Generated by Django 3.2.13 on 2022-06-20 07:28\n+\n+import InvenTree.fields\n+from django.db import migrations\n+\n+\n+class Migration(migrations.Migration):\n+\n+    dependencies = [\n+        ('stock', '0076_alter_stockitem_status'),\n+    ]\n+\n+    operations = [\n+        migrations.AlterField(\n+            model_name='stockitem',\n+            name='notes',\n+            field=InvenTree.fields.InvenTreeNotesField(blank=True, help_text='Stock Item Notes', max_length=50000, null=True, verbose_name='Notes'),\n+        ),\n+    ]"
        },
        {
          "filename": "InvenTree/stock/models.py",
          "status": "modified",
          "additions": 3,
          "deletions": 7,
          "patch": "@@ -18,7 +18,6 @@\n from django.utils.translation import gettext_lazy as _\n \n from jinja2 import Template\n-from markdownx.models import MarkdownxField\n from mptt.managers import TreeManager\n from mptt.models import MPTTModel, TreeForeignKey\n \n@@ -29,7 +28,8 @@\n import label.models\n import report.models\n from company import models as CompanyModels\n-from InvenTree.fields import InvenTreeModelMoneyField, InvenTreeURLField\n+from InvenTree.fields import (InvenTreeModelMoneyField, InvenTreeNotesField,\n+                              InvenTreeURLField)\n from InvenTree.models import InvenTreeAttachment, InvenTreeTree\n from InvenTree.serializers import extract_int\n from InvenTree.status_codes import StockHistoryCode, StockStatus\n@@ -708,11 +708,7 @@ def barcode(self):\n         choices=StockStatus.items(),\n         validators=[MinValueValidator(0)])\n \n-    notes = MarkdownxField(\n-        blank=True, null=True,\n-        verbose_name=_(\"Notes\"),\n-        help_text=_('Stock Item Notes')\n-    )\n+    notes = InvenTreeNotesField(help_text=_('Stock Item Notes'))\n \n     purchase_price = InvenTreeModelMoneyField(\n         max_digits=19,"
        },
        {
          "filename": "requirements.txt",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -19,7 +19,6 @@ django-formtools==2.3                   # Form wizard tools\n django-import-export==2.5.0             # Data import / export for admin interface\n django-maintenance-mode==0.16.1         # Shut down application while reloading etc.\n django-markdownify==0.8.0               # Markdown rendering\n-django-markdownx==3.0.1                 # Markdown form fields\n django-money==1.1                       # Django app for currency management\n django-mptt==0.11.0                     # Modified Preorder Tree Traversal\n django-redis>=5.0.0                     # Redis integration"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 14,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d5928f038dd00efb583bad5b38db945601517d32",
            "date": "2025-01-26T00:44:57Z",
            "author_login": "SchrodingersGat"
          },
          {
            "sha": "640d5852e479f411120c2ec876e7476d30bc8337",
            "date": "2025-01-26T00:00:14Z",
            "author_login": "SchrodingersGat"
          },
          {
            "sha": "ab7e6385c23511dbe887336ed350592f5e2d1ab5",
            "date": "2025-01-25T20:18:38Z",
            "author_login": "SchrodingersGat"
          },
          {
            "sha": "94a0e1170297c5a1abc4adba7ab02b0d5eed8c61",
            "date": "2025-01-25T20:18:05Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e9bc4645cad5c84eda63dca0b9cbcbe8db5e723b",
            "date": "2025-01-22T11:22:03Z",
            "author_login": "SchrodingersGat"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "Allocation of Resources Without Limits or Throttling in GitHub repository inventree/inventree prior to 0.8.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-20T15:15:13.497",
    "last_modified": "2024-11-21T07:00:23.960",
    "fix_date": "2022-06-20T12:20:04Z"
  },
  "references": [
    {
      "url": "https://github.com/inventree/inventree/commit/63b4ff3eb6e80861962fafe79c9b483cd7239d6c",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/57b0f272-a97f-4cb3-b546-c863c68a561a",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/inventree/inventree/commit/63b4ff3eb6e80861962fafe79c9b483cd7239d6c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/57b0f272-a97f-4cb3-b546-c863c68a561a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.463288",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "InvenTree",
    "owner": "inventree",
    "created_at": "2017-03-23T01:44:10Z",
    "updated_at": "2025-01-26T00:45:02Z",
    "pushed_at": "2025-01-26T00:49:50Z",
    "size": 198187,
    "stars": 4634,
    "forks": 833,
    "open_issues": 234,
    "watchers": 4634,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 4042219,
      "TypeScript": 1600753,
      "HTML": 51404,
      "Shell": 37446,
      "CSS": 17146,
      "Dockerfile": 6143,
      "JavaScript": 5474,
      "Procfile": 426
    },
    "commit_activity": {
      "total_commits_last_year": 1482,
      "avg_commits_per_week": 28.5,
      "days_active_last_year": 306
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:33:03.934284"
  }
}