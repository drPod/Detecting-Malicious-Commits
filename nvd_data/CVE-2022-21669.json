{
  "cve_id": "CVE-2022-21669",
  "github_data": {
    "repository": "PuddingBot/pudding-bot",
    "fix_commit": "a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f",
    "related_commits": [
      "a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f",
      "a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f"
    ],
    "patch_url": "https://github.com/PuddingBot/pudding-bot/commit/a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f.patch",
    "fix_commit_details": {
      "sha": "a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f",
      "commit_date": "2022-01-21T10:10:34Z",
      "author": {
        "login": "Happy-Ferret",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #15 from PuddingBot/CVE-2022-21669",
        "length": 181,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 84,
        "additions": 75,
        "deletions": 9
      },
      "files": [
        {
          "filename": ".gitignore",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n __pycache__/\r\n *.py[cod]\r\n *$py.class\r\n+*.exe\r\n \r\n # Installer logs\r\n pip-log.txt\r"
        },
        {
          "filename": "first-run.py",
          "status": "added",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -0,0 +1,48 @@\n+#!/usr/bin/env python3\r\n+# pylint: disable=C0116,W0613\r\n+\r\n+from os.path import exists\r\n+\r\n+HOOKS_FOLDER = \".git/hooks/\"\r\n+HOOK = \"pre-commit\"\r\n+\r\n+def prompt(question, default=\"yes\"):\r\n+    valid = {\"yes\": True, \"y\": True, \"ye\": True, \"no\": False, \"n\": False}\r\n+    if default is None:\r\n+        prompt = \" [y/n] \"\r\n+    elif default == \"yes\":\r\n+        prompt = \" [Y/n] \"\r\n+    elif default == \"no\":\r\n+        prompt = \" [y/N] \"\r\n+    else:\r\n+        raise ValueError(\"Invalid default answer: '%s'\" % default)\r\n+\r\n+    while True:\r\n+        print(question + prompt + \"\\r\")\r\n+        try:\r\n+            choice = input().lower()\r\n+            if default is not None and choice == \"\":\r\n+                return valid[default]\r\n+            elif choice in valid:\r\n+                return valid[choice]\r\n+            else:\r\n+                print(\"Please respond with '[y]es' or '[n]o'\")\r\n+        except KeyboardInterrupt:\r\n+            exit(\"Operation aborted. No files have been changed.\")\r\n+\r\n+if exists(HOOKS_FOLDER+HOOK):\r\n+    overwrite = prompt(\"pre-commit hook already exists. Overwrite?\", None)\r\n+    if overwrite == True:\r\n+        try:\r\n+            with open(HOOK, 'rb') as src, open(HOOKS_FOLDER+HOOK, 'wb') as dst: dst.write(src.read())\r\n+            print(f\"{HOOK} inside {HOOKS_FOLDER} was replaced successfully.\")\r\n+        except:\r\n+            print(f\"{HOOK} could not be written to {HOOKS_FOLDER}.\")\r\n+    else:\r\n+        print(\"Operation aborted. No files have been changed.\")\r\n+else:\r\n+    try:\r\n+        with open(HOOK, 'rb') as src, open(HOOKS_FOLDER+HOOK, 'wb') as dst: dst.write(src.read())\r\n+        print(f\"{HOOK} hook was added successfully.\")\r\n+    except:\r\n+            print(f\"{HOOK} could not be written to {HOOKS_FOLDER}.\")\r"
        },
        {
          "filename": "gitleaks.toml",
          "status": "added",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -0,0 +1,4 @@\n+[[rules]]\r\n+id = \"telegram-bot-token\"\r\n+description = \"telegram bot token\"\r\n+regex = '''[0-9]{8,10}:[a-zA-Z0-9_-]{35}'''\r"
        },
        {
          "filename": "main.py",
          "status": "modified",
          "additions": 0,
          "deletions": 9,
          "patch": "@@ -49,7 +49,6 @@ def about_command(update: Update, context: CallbackContext) -> None:\n     update.message.reply_animation(animation=about.ANIMATION,\r\n     caption=about.TEXT)\r\n \r\n-\r\n def help_command(update: Update, context: CallbackContext) -> None:\r\n     \"\"\"Send a message when the command /help is issued.\"\"\"\r\n     update.message.reply_text('Help!')\r\n@@ -175,13 +174,6 @@ def unmute_command(update: Update, context: CallbackContext) -> None:\n         # Should wrap this into a common function call \"not_admin(update)\"\r\n         update.message.reply_text(messages.PERM_LACK + statuses.IS_ADMIN)\r\n \r\n-# def get_commands_command(update: Update, context: CallbackContext) -> None:\r\n-#     # bot = utils.get_bot() // return a Bot object\r\n-#     bot = Bot(\"5016982005:AAG6YJFXVkvyVha7_3cghe8gj-PIGAL9aXE\")\r\n-#     commands = bot.get_my_commands()\r\n-#     update.message.reply_text(commands)\r\n-\r\n-\r\n def ban_command(update: Update, context: CallbackContext) -> None:\r\n     reply = update.message.reply_to_message.from_user\r\n     # perms = {\"can_send_messages\": False}\r\n@@ -193,7 +185,6 @@ def ban_command(update: Update, context: CallbackContext) -> None:\n     else: \r\n         update.message.reply_text(messages.PERM_LACK + statuses.IS_ADMIN)\r\n \r\n-\r\n def unban_command(update: Update, context: CallbackContext) -> None:\r\n     reply = update.message.reply_to_message.from_user\r\n     # perms = {\"can_send_messages\": False}\r"
        },
        {
          "filename": "pre-commit",
          "status": "added",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -0,0 +1,22 @@\n+#!/usr/bin/env python3\r\n+# pylint: disable=C0116,W0613\r\n+\r\n+import sys\r\n+import subprocess\r\n+\r\n+def eprint(*args, **kwargs):\r\n+    print(*args, file=sys.stderr, **kwargs)\r\n+\r\n+try:\r\n+    subprocess.run([\"gitleaks\", \"protect\", \"-v\", \"--staged\", \"-c\", \"gitleaks.toml\"],\r\n+                    check=True,\r\n+                    universal_newlines=True,\r\n+                    stdout=subprocess.PIPE,\r\n+                    stderr=subprocess.STDOUT)\r\n+except subprocess.CalledProcessError as e:\r\n+    eprint(\"gitleaks has detected sensitive information in your changes. Commit aborted.\")\r\n+    print(e.output)\r\n+    sys.exit(1)\r\n+except FileNotFoundError:\r\n+    eprint(\"gitleaks is not installed or in the PATH. Commit aborted.\")\r\n+    sys.exit(1)\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "06063e28f0dee9cb8fa63e47bc5c926fab0ae1ee",
            "date": "2022-01-22T21:09:29Z",
            "author_login": "Happy-Ferret"
          },
          {
            "sha": "f650f1547125620d80117400abd2fdce59c5d256",
            "date": "2022-01-22T14:49:04Z",
            "author_login": "Happy-Ferret"
          },
          {
            "sha": "c9406dfec14b6a28f7c075f91cf9d72e43a91b96",
            "date": "2022-01-22T14:26:21Z",
            "author_login": "Happy-Ferret"
          },
          {
            "sha": "a761a51cab3f6f5d6065e165da9106d26f28f5a9",
            "date": "2022-01-21T12:46:10Z",
            "author_login": "Happy-Ferret"
          },
          {
            "sha": "787f365ee81d745ed2da1be342aab3ff0cd31d67",
            "date": "2022-01-21T10:43:25Z",
            "author_login": "Happy-Ferret"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-798",
    "description": "PuddingBot is a group management bot. In version 0.0.6-b933652 and prior, the bot token is publicly exposed in main.py, making it accessible to malicious actors. The bot token has been revoked and new version is already running on the server. As of time of publication, the maintainers are planning to update code to reflect this change at a later date.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-11T15:15:08.457",
    "last_modified": "2024-11-21T06:45:11.740",
    "fix_date": "2022-01-21T10:10:34Z"
  },
  "references": [
    {
      "url": "https://github.com/PuddingBot/pudding-bot/commit/a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/PuddingBot/pudding-bot/security/advisories/GHSA-cxgr-xpmj-9qjm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PuddingBot/pudding-bot/commit/a5b15fb0a5be5fdbacba8ff7b2c8759d5e3ba20f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/PuddingBot/pudding-bot/security/advisories/GHSA-cxgr-xpmj-9qjm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.067483",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pudding-bot",
    "owner": "PuddingBot",
    "created_at": "2021-12-28T13:40:12Z",
    "updated_at": "2022-01-15T11:46:14Z",
    "pushed_at": "2024-12-10T05:15:07Z",
    "size": 81,
    "stars": 0,
    "forks": 0,
    "open_issues": 20,
    "watchers": 0,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 20158
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T18:40:59.085429"
  }
}