{
  "cve_id": "CVE-2022-21699",
  "github_data": {
    "repository": "ipython/ipython",
    "fix_commit": "46a51ed69cdf41b4333943d9ceeb945c4ede5668",
    "related_commits": [
      "46a51ed69cdf41b4333943d9ceeb945c4ede5668",
      "46a51ed69cdf41b4333943d9ceeb945c4ede5668"
    ],
    "patch_url": "https://github.com/ipython/ipython/commit/46a51ed69cdf41b4333943d9ceeb945c4ede5668.patch",
    "fix_commit_details": {
      "sha": "46a51ed69cdf41b4333943d9ceeb945c4ede5668",
      "commit_date": "2022-01-19T13:21:24Z",
      "author": {
        "login": "Carreau",
        "type": "User",
        "stats": {
          "total_commits": 4718,
          "average_weekly_commits": 5.343148357870895,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 533
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-pq7m-3gw7-gq5x",
        "length": 63,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 117,
        "additions": 111,
        "deletions": 6
      },
      "files": [
        {
          "filename": "IPython/__init__.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -60,6 +60,10 @@\n __license__  = release.license\n __version__  = release.version\n version_info = release.version_info\n+# list of CVEs that should have been patched in this release.\n+# this is informational and should not be relied upon.\n+__patched_cves__ = {\"CVE-2022-21699\"}\n+\n \n def embed_kernel(module=None, local_ns=None, **kwargs):\n     \"\"\"Embed and start an IPython kernel in a given scope."
        },
        {
          "filename": "IPython/core/application.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -157,7 +157,7 @@ def _config_file_name_changed(self, change):\n     config_file_paths = List(Unicode())\n     @default('config_file_paths')\n     def _config_file_paths_default(self):\n-        return [os.getcwd()]\n+        return []\n \n     extra_config_file = Unicode(\n     help=\"\"\"Path to an extra config file to load."
        },
        {
          "filename": "IPython/core/profileapp.py",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -181,9 +181,10 @@ def list_profile_dirs(self):\n         profiles = list_profiles_in(os.getcwd())\n         if profiles:\n             print()\n-            print(\"Available profiles in current directory (%s):\" % os.getcwd())\n-            self._print_profiles(profiles)\n-        \n+            print(\n+                \"Profiles from CWD have been removed for security reason, see CVE-2022-21699:\"\n+            )\n+\n         print()\n         print(\"To use any of the above profiles, start IPython with:\")\n         print(\"    ipython --profile=<name>\")"
        },
        {
          "filename": "IPython/core/profiledir.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -188,7 +188,7 @@ def find_profile_dir_by_name(cls, ipython_dir, name=u'default', config=None):\n         is not found, a :class:`ProfileDirError` exception will be raised.\n \n         The search path algorithm is:\n-        1. ``os.getcwd()``\n+        1. ``os.getcwd()`` # removed for security reason.\n         2. ``ipython_dir``\n \n         Parameters\n@@ -200,7 +200,7 @@ def find_profile_dir_by_name(cls, ipython_dir, name=u'default', config=None):\n             will be \"profile_<profile>\".\n         \"\"\"\n         dirname = u'profile_' + name\n-        paths = [os.getcwd(), ipython_dir]\n+        paths = [ipython_dir]\n         for p in paths:\n             profile_dir = os.path.join(p, dirname)\n             if os.path.isdir(profile_dir):"
        },
        {
          "filename": "IPython/tests/cve.py",
          "status": "added",
          "additions": 56,
          "deletions": 0,
          "patch": "@@ -0,0 +1,56 @@\n+\"\"\"\n+Test that CVEs stay fixed. \n+\"\"\"\n+\n+from IPython.utils.tempdir import TemporaryDirectory, TemporaryWorkingDirectory\n+from pathlib import Path\n+import random\n+import sys\n+import os\n+import string\n+import subprocess\n+import time\n+\n+def test_cve_2022_21699():\n+    \"\"\"\n+    Here we test CVE-2022-21699.\n+\n+    We create a temporary directory, cd into it. \n+    Make a profile file that should not be executed and start IPython in a subprocess, \n+    checking for the value.\n+\n+\n+\n+    \"\"\"\n+\n+    dangerous_profile_dir = Path('profile_default')\n+\n+    dangerous_startup_dir = dangerous_profile_dir / 'startup'\n+    dangerous_expected = 'CVE-2022-21699-'+''.join([random.choice(string.ascii_letters) for i in range(10)])\n+\n+    with TemporaryWorkingDirectory() as t:\n+        dangerous_startup_dir.mkdir(parents=True)\n+        (dangerous_startup_dir/ 'foo.py').write_text(f'print(\"{dangerous_expected}\")')\n+        # 1 sec to make sure FS is flushed.\n+        #time.sleep(1)\n+        cmd = [sys.executable,'-m', 'IPython']\n+        env = os.environ.copy()\n+        env['IPY_TEST_SIMPLE_PROMPT'] = '1'\n+\n+\n+        # First we fake old behavior, making sure the profile is/was actually dangerous\n+        p_dangerous = subprocess.Popen(cmd + [f'--profile-dir={dangerous_profile_dir}'], env=env, stdin=subprocess.PIPE,\n+                stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        out_dangerous, err_dangerouns = p_dangerous.communicate(b\"exit\\r\")\n+        assert dangerous_expected in out_dangerous.decode()\n+\n+        # Now that we know it _would_ have been dangerous, we test it's not loaded\n+        p = subprocess.Popen(cmd, env=env, stdin=subprocess.PIPE,\n+                stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        out, err = p.communicate(b\"exit\\r\")\n+        assert b'IPython' in out\n+        assert dangerous_expected not in out.decode()\n+        assert err == b''\n+\n+\n+"
        },
        {
          "filename": "docs/source/whatsnew/version8.rst",
          "status": "modified",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -2,6 +2,50 @@\n  8.x Series\n ============\n \n+\n+IPython 8.0.1 (CVE-2022-21699)\n+------------------------------\n+\n+IPython 8.0.1, 7.31.1 and 5.11 are security releases that change some default\n+values in order to prevent potential Execution with Unnecessary Privileges.\n+\n+Almost all version of IPython looks for configuration and profiles in current\n+working directory. Since IPython was developed before pip and environments\n+existed it was used a convenient way to load code/packages in a project\n+dependant way.\n+\n+In 2022, it is not necessary anymore, and can lead to confusing behavior where\n+for example cloning a repository and starting IPython or loading a notebook from\n+any Jupyter-Compatible interface that has ipython set as a kernel can lead to\n+code execution.\n+\n+\n+I did not find any standard way for packaged to advertise CVEs they fix, I'm\n+thus trying to add a ``__patched_cves__`` attribute to the IPython module that\n+list the CVEs that should have been fixed. This attribute is informational only\n+as if a executable has a flaw, this value can always be changed by an attacker.\n+\n+.. code::\n+\n+    In [1]: import IPython\n+\n+    In [2]: IPython.__patched_cves__\n+    Out[2]: {'CVE-2022-21699'}\n+\n+    In [3]: 'CVE-2022-21699' in IPython.__patched_cves__\n+    Out[3]: True\n+\n+Thus starting with this version:\n+\n+ - The current working directory is not searched anymore for profiles or\n+   configurations files.\n+ - Added a ``__patched_cves__`` attribute (set of strings) to IPython module that contain\n+   the list of fixed CVE. This is informational only.\n+\n+Further details can be read on the `GitHub Advisory <https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x>`__\n+\n+\n+\n IPython 8.0\n -----------\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5e59ea92ba81245815b9f3323b0a26c4ff9a24ac",
            "date": "2025-01-14T15:34:52Z",
            "author_login": "Carreau"
          },
          {
            "sha": "a5803b0f886057a64771f0e758a30a36deb49c91",
            "date": "2025-01-14T13:39:46Z",
            "author_login": "Carreau"
          },
          {
            "sha": "a89d00bb63ec3b5d116292c856a344fe0fb0af0d",
            "date": "2025-01-14T08:23:57Z",
            "author_login": "Carreau"
          },
          {
            "sha": "82e21335f46651939aafe5ee3bea11207eb618b8",
            "date": "2025-01-13T17:30:42Z",
            "author_login": "Carreau"
          },
          {
            "sha": "364e544a76c590ff161d9fffacf35533db478324",
            "date": "2025-01-11T20:58:33Z",
            "author_login": "Carreau"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-250",
    "description": "IPython (Interactive Python) is a command shell for interactive computing in multiple programming languages, originally developed for the Python programming language. Affected versions are subject to an arbitrary code execution vulnerability achieved by not properly managing cross user temporary files. This vulnerability allows one user to run code as another on the same machine. All users are advised to upgrade.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-19T22:15:09.470",
    "last_modified": "2024-11-21T06:45:15.597",
    "fix_date": "2022-01-19T13:21:24Z"
  },
  "references": [
    {
      "url": "https://github.com/ipython/ipython/commit/46a51ed69cdf41b4333943d9ceeb945c4ede5668",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://ipython.readthedocs.io/en/stable/whatsnew/version8.html#ipython-8-0-1-cve-2022-21699",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/01/msg00021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CRQRTWHYXMLDJ572VGVUZMUPEOTPM3KB/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DZ7LVZBB4D7KVSFNEQUBEHFO3JW6D2ZK/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/ipython/ipython/commit/46a51ed69cdf41b4333943d9ceeb945c4ede5668",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://ipython.readthedocs.io/en/stable/whatsnew/version8.html#ipython-8-0-1-cve-2022-21699",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/01/msg00021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CRQRTWHYXMLDJ572VGVUZMUPEOTPM3KB/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DZ7LVZBB4D7KVSFNEQUBEHFO3JW6D2ZK/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.044582",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ipython",
    "owner": "ipython",
    "created_at": "2010-05-10T04:46:06Z",
    "updated_at": "2025-01-14T15:35:00Z",
    "pushed_at": "2025-01-14T15:34:52Z",
    "size": 79173,
    "stars": 16342,
    "forks": 4448,
    "open_issues": 1561,
    "watchers": 16342,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "7.x",
      "main"
    ],
    "languages": {
      "Python": 2467835,
      "Shell": 11771,
      "Makefile": 4675,
      "Batchfile": 425
    },
    "commit_activity": {
      "total_commits_last_year": 447,
      "avg_commits_per_week": 8.596153846153847,
      "days_active_last_year": 136
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T15:58:28.288375"
  }
}