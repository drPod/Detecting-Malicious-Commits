{
  "cve_id": "CVE-2022-21729",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "58b34c6c8250983948b5a781b426f6aa01fd47af",
    "related_commits": [
      "58b34c6c8250983948b5a781b426f6aa01fd47af",
      "58b34c6c8250983948b5a781b426f6aa01fd47af"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/58b34c6c8250983948b5a781b426f6aa01fd47af.patch",
    "fix_commit_details": {
      "sha": "58b34c6c8250983948b5a781b426f6aa01fd47af",
      "commit_date": "2021-11-30T22:50:38Z",
      "author": {
        "login": "ishark",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix integer overflow leading to divide by zero error in Unravel index kernel when dimensions product exceeds max int value.",
        "length": 206,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 40,
        "deletions": 1
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/unravel_index_op.cc",
          "status": "modified",
          "additions": 26,
          "deletions": 1,
          "patch": "@@ -13,6 +13,10 @@ See the License for the specific language governing permissions and\n limitations under the License.\n ==============================================================================*/\n \n+#include <cstdint>\n+\n+#include \"tensorflow/core/framework/types.pb.h\"\n+#include \"tensorflow/core/platform/types.h\"\n #define EIGEN_USE_THREADS\n \n #include \"tensorflow/core/framework/op_kernel.h\"\n@@ -35,7 +39,8 @@ typedef Eigen::ThreadPoolDevice CPUDevice;\n template <typename Tidx>\n class UnravelIndexOp : public OpKernel {\n  public:\n-  explicit UnravelIndexOp(OpKernelConstruction* ctx) : OpKernel(ctx) {}\n+  explicit UnravelIndexOp(OpKernelConstruction* ctx)\n+      : OpKernel(ctx), dtidx_(DataTypeToEnum<Tidx>::v()) {}\n \n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& indices_tensor = ctx->input(0);\n@@ -54,12 +59,31 @@ class UnravelIndexOp : public OpKernel {\n \n     auto dims = dims_tensor.vec<Tidx>();\n     // Make sure dims does not contain a zero\n+    double prod = 1;\n+    uint64_t limit;\n+    if (dtidx_ == DataType::DT_INT64) {\n+      limit = kint64max;\n+    } else {\n+      limit = kint32max;\n+    }\n+\n     for (int i = 0; i < dims.size(); i++) {\n       OP_REQUIRES(\n           ctx, dims(i) != 0,\n           errors::InvalidArgument(\"Input dims cannot contain a dim of zero, \"\n                                   \"but dims contains zero at index \",\n                                   i));\n+      OP_REQUIRES(ctx, dims(i) > 0,\n+                  errors::InvalidArgument(\n+                      \"Input dims cannot be negative. Got dim = \", dims(i),\n+                      \" at index \", i));\n+      // Check interger overflow\n+      OP_REQUIRES(\n+          ctx, prod <= limit / dims(i),\n+          errors::InvalidArgument(\"Input dims product is causing integer \"\n+                                  \"overflow: (\",\n+                                  dims, \")\"));\n+      prod = (prod * dims(i));\n     }\n \n     // Check to make sure indices is not out of boundary\n@@ -132,6 +156,7 @@ class UnravelIndexOp : public OpKernel {\n                strides_shifted.reshape(reshape).broadcast(bcast);\n     }\n   }\n+  const DataType dtidx_;\n };\n \n #define REGISTER_KERNEL(type)                                               \\"
        },
        {
          "filename": "tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -1580,6 +1580,20 @@ def testUnravelIndexZeroDim(self):\n           dims = constant_op.constant([3, 0], dtype=dtype)\n           self.evaluate(array_ops.unravel_index(indices=indices, dims=dims))\n \n+  def testUnravelIndexIntegerOverflow(self):\n+    with self.cached_session():\n+      for dtype in [dtypes.int32, dtypes.int64]:\n+        with self.assertRaisesRegex(\n+            errors.InvalidArgumentError,\n+            r\"Input dims product is causing integer overflow\"):\n+          indices = constant_op.constant(-0x100000, dtype=dtype)\n+          if dtype == dtypes.int32:\n+            value = 0x10000000\n+          else:\n+            value = 0x7FFFFFFFFFFFFFFF\n+          dims = constant_op.constant([value, value], dtype=dtype)\n+          self.evaluate(array_ops.unravel_index(indices=indices, dims=dims))\n+\n \n class GuaranteeConstOpTest(test_util.TensorFlowTestCase):\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c141307fbd02349cf4d83f9a73bdba73fcba9b87",
            "date": "2025-01-14T14:26:56Z",
            "author_login": "mooskagh"
          },
          {
            "sha": "9263c01097f54dbb932ac56d6d87a61a93409221",
            "date": "2025-01-14T14:18:52Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "e7f7cefc7d284c486f84596811d07bb5cd0890ca",
            "date": "2025-01-14T14:16:10Z",
            "author_login": "krasimirgg"
          },
          {
            "sha": "fd41705e0ad7a123a9d01b8be2a3b34b3266493e",
            "date": "2025-01-14T13:33:52Z",
            "author_login": "loislo"
          },
          {
            "sha": "af5275c5731565cbf2a2c01ee418a8cf62388431",
            "date": "2025-01-14T12:48:20Z",
            "author_login": "akuegel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-190",
    "description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `UnravelIndex` is vulnerable to a division by zero caused by an integer overflow bug. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-03T13:15:07.943",
    "last_modified": "2024-11-21T06:45:19.423",
    "fix_date": "2021-11-30T22:50:38Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/unravel_index_op.cc#L36-L135",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/58b34c6c8250983948b5a781b426f6aa01fd47af",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-34f9-hjfq-rr8j",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/unravel_index_op.cc#L36-L135",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/58b34c6c8250983948b5a781b426f6aa01fd47af",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-34f9-hjfq-rr8j",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.106890",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}