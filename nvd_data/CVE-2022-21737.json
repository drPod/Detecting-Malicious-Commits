{
  "cve_id": "CVE-2022-21737",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "7019ce4f68925fd01cdafde26f8d8c938f47e6f9",
    "related_commits": [
      "7019ce4f68925fd01cdafde26f8d8c938f47e6f9",
      "7019ce4f68925fd01cdafde26f8d8c938f47e6f9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "7019ce4f68925fd01cdafde26f8d8c938f47e6f9",
      "commit_date": "2021-12-08T20:01:53Z",
      "author": {
        "login": "edloper",
        "type": "User",
        "stats": {
          "total_commits": 359,
          "average_weekly_commits": 0.7448132780082988,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 97
        }
      },
      "commit_message": {
        "title": "Fix check-fail when bincount ops are passed invalid values.",
        "length": 142,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 56,
        "deletions": 0
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/bincount_op.cc",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -276,6 +276,9 @@ class DenseBincountOp : public OpKernel {\n     const Tensor& size_t = ctx->input(1);\n     const Tensor& weights = ctx->input(2);\n \n+    OP_REQUIRES(ctx, size_t.dims() == 0,\n+                errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                        size_t.dims()));\n     Tidx size = size_t.scalar<Tidx>()();\n     OP_REQUIRES(\n         ctx, size >= 0,\n@@ -372,6 +375,9 @@ class SparseBincountOp : public OpKernel {\n     const auto weights = ctx->input(4).flat<T>();\n     const int64_t weights_size = weights.size();\n \n+    OP_REQUIRES(ctx, size_t.dims() == 0,\n+                errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                        size_t.dims()));\n     Tidx size = size_t.scalar<Tidx>()();\n     OP_REQUIRES(\n         ctx, size >= 0,\n@@ -462,6 +468,9 @@ class RaggedBincountOp : public OpKernel {\n     const auto weights = ctx->input(3).flat<T>();\n     const int64_t weights_size = weights.size();\n \n+    OP_REQUIRES(ctx, size_t.dims() == 0,\n+                errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                        size_t.dims()));\n     Tidx size = size_t.scalar<Tidx>()();\n     OP_REQUIRES(\n         ctx, size >= 0,"
        },
        {
          "filename": "tensorflow/core/ops/math_ops.cc",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -1699,6 +1699,11 @@ REGISTER_OP(\"Bincount\")\n         return Status::OK();\n       }\n \n+      if (size_tensor->dims() != 0) {\n+        return errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                       size_tensor->dims());\n+      }\n+\n       // Return `[size]` shape if size is known.\n       int32_t size_val = size_tensor->scalar<int32>()();\n       if (size_val < 0) {\n@@ -1730,6 +1735,10 @@ REGISTER_OP(\"DenseBincount\")\n         c->set_output(0, c->UnknownShape());\n         return Status::OK();\n       }\n+      if (size_tensor->dims() != 0) {\n+        return errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                       size_tensor->dims());\n+      }\n \n       int64_t size_val;\n       DataType dtype;\n@@ -1771,6 +1780,10 @@ REGISTER_OP(\"SparseBincount\")\n         c->set_output(0, c->UnknownShape());\n         return Status::OK();\n       }\n+      if (size_tensor->dims() != 0) {\n+        return errors::InvalidArgument(\"Shape must be rank 0 but is rank \",\n+                                       size_tensor->dims());\n+      }\n \n       int64_t size_val;\n       DataType dtype;"
        },
        {
          "filename": "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py",
          "status": "modified",
          "additions": 34,
          "deletions": 0,
          "patch": "@@ -344,6 +344,14 @@ def test_invalid_rank(self):\n             gen_math_ops.dense_bincount(\n                 input=[[[1, 2, 3], [0, 3, 2]]], weights=[], size=10))\n \n+  @test_util.run_in_graph_and_eager_modes\n+  def test_size_is_not_scalar(self):  # b/206619828\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"Shape must be rank 0 but is rank 1\"):\n+      self.evaluate(\n+          gen_math_ops.dense_bincount(\n+              input=[0], size=[1, 1], weights=[3], binary_output=False))\n+\n \n class SparseBincountOpTest(test_util.TensorFlowTestCase,\n                            parameterized.TestCase):\n@@ -511,6 +519,19 @@ def test_sparse_bincount_col_reduce_binary(self, dtype):\n                 weights=[],\n                 binary_output=True)))\n \n+  @test_util.run_in_graph_and_eager_modes\n+  def test_size_is_not_scalar(self):  # b/206619828\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"Shape must be rank 0 but is rank 1\"):\n+      self.evaluate(\n+          gen_math_ops.sparse_bincount(\n+              indices=[[0], [1]],\n+              values=[0, 0],\n+              dense_shape=[1, 1],\n+              size=[1, 1],\n+              weights=[0, 0],\n+              binary_output=False))\n+\n \n class RaggedBincountOpTest(test_util.TensorFlowTestCase,\n                            parameterized.TestCase):\n@@ -650,6 +671,19 @@ def test_ragged_bincount_binary_np_with_weights(self, dtype):\n                 size=size,\n                 binary_output=True)))\n \n+  @test_util.run_in_graph_and_eager_modes\n+  def test_size_is_not_scalar(self):  # b/206619828\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"Shape must be rank 0 but is rank 1\"):\n+      self.evaluate(\n+          gen_math_ops.ragged_bincount(\n+              splits=[0, 0, 1],\n+              values=[1],\n+              size=[1, 1],\n+              weights=[0, 0, 0],\n+              binary_output=False,\n+              name=None))\n+\n \n if __name__ == \"__main__\":\n   googletest.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5c27f5f4dc39afdefbd93c2ef266a8c7ab534a98",
            "date": "2025-01-25T18:55:10Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "05df81c283627135b7651c9c7a8fa0035bff2206",
            "date": "2025-01-25T17:06:34Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "4075a7dd74ea543557d1824e16721598e1a6af8d",
            "date": "2025-01-25T17:06:30Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "4d08d96d6a0aea39c5bd90d9728dbcf59008993c",
            "date": "2025-01-25T17:04:34Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "1b58ec4dcd6e5752598dc57d4788119f8ea12e23",
            "date": "2025-01-25T11:39:06Z",
            "author_login": "tensorflower-gardener"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-754",
    "description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `*Bincount` operations allows malicious users to cause denial of service by passing in arguments which would trigger a `CHECK`-fail. There are several conditions that the input arguments must satisfy. Some are not caught during shape inference and others are not caught during kernel implementation. This results in `CHECK` failures later when the output tensors get allocated. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-03T14:15:08.363",
    "last_modified": "2024-11-21T06:45:20.420",
    "fix_date": "2021-12-08T20:01:53Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/bincount_op.cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/7019ce4f68925fd01cdafde26f8d8c938f47e6f9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f2vv-v9cg-qhh7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/bincount_op.cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/7019ce4f68925fd01cdafde26f8d8c938f47e6f9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f2vv-v9cg-qhh7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.107636",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-26T06:52:14Z",
    "pushed_at": "2025-01-26T07:27:00Z",
    "size": 1126495,
    "stars": 187418,
    "forks": 74442,
    "open_issues": 6822,
    "watchers": 187418,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101327392,
      "Python": 45791326,
      "MLIR": 10764225,
      "HTML": 7662661,
      "Starlark": 7439181,
      "Go": 2171369,
      "C": 1294440,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 702245,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 38067,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15545,
      "avg_commits_per_week": 298.9423076923077,
      "days_active_last_year": 354
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:37:26.588757"
  }
}