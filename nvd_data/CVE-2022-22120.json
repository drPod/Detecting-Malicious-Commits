{
  "cve_id": "CVE-2022-22120",
  "github_data": {
    "repository": "nocodb/nocodb",
    "fix_commit": "f46e89b0",
    "related_commits": [
      "f46e89b0",
      "f46e89b0"
    ],
    "patch_url": "https://github.com/nocodb/nocodb/commit/f46e89b0.patch",
    "fix_commit_details": {
      "sha": "f46e89b0",
      "commit_date": "2021-12-20T09:56:05Z",
      "author": {
        "login": "pranavxc",
        "type": "User",
        "stats": {
          "total_commits": 5675,
          "average_weekly_commits": 15.053050397877984,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "refactor: update forgot password api response",
        "length": 91,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 67,
        "additions": 32,
        "deletions": 35
      },
      "files": [
        {
          "filename": "packages/nocodb/src/lib/noco/rest/RestAuthCtrl.ts",
          "status": "modified",
          "additions": 32,
          "deletions": 35,
          "patch": "@@ -1001,45 +1001,42 @@ export default class RestAuthCtrl {\n     const email = _email.toLowerCase();\n \n     const user = await this.users.where({ email }).first();\n-    if (!user) {\n-      return next(new Error('This email is not registered with us.'));\n-    }\n+    if (user) {\n+      const token = uuidv4();\n+      await this.users\n+        .update({\n+          reset_password_token: token,\n+          reset_password_expires: new Date(Date.now() + 60 * 60 * 1000)\n+        })\n+        .where({ id: user.id });\n \n-    const token = uuidv4();\n-    await this.users\n-      .update({\n-        reset_password_token: token,\n-        reset_password_expires: new Date(Date.now() + 60 * 60 * 1000)\n-      })\n-      .where({ id: user.id });\n+      try {\n+        const template = (await import('./ui/emailTemplates/forgotPassword'))\n+          .default;\n+        await this.emailClient.mailSend({\n+          to: user.email,\n+          subject: 'Password Reset Link',\n+          text: `Visit following link to update your password : ${req.ncSiteUrl}/password/reset/${token}.`,\n+          html: ejs.render(template, {\n+            resetLink: req.ncSiteUrl + `/password/reset/${token}`\n+          })\n+        });\n+      } catch (e) {\n+        console.log(\n+          'Warning : `mailSend` failed, Please configure emailClient configuration.'\n+        );\n+      }\n+      console.log(`Password reset token : ${token}`);\n \n-    try {\n-      const template = (await import('./ui/emailTemplates/forgotPassword'))\n-        .default;\n-      await this.emailClient.mailSend({\n-        to: user.email,\n-        subject: 'Password Reset Link',\n-        text: `Visit following link to update your password : ${req.ncSiteUrl}/password/reset/${token}.`,\n-        html: ejs.render(template, {\n-          resetLink: req.ncSiteUrl + `/password/reset/${token}`\n-        })\n+      this.xcMeta.audit(null, null, 'nc_audit', {\n+        op_type: 'AUTHENTICATION',\n+        op_sub_type: 'PASSWORD_FORGOT',\n+        user: user.email,\n+        description: `requested for password reset `,\n+        ip: req.clientIp\n       });\n-    } catch (e) {\n-      console.log(\n-        'Warning : `mailSend` failed, Please configure emailClient configuration.'\n-      );\n     }\n-    console.log(`Password reset token : ${token}`);\n-\n-    this.xcMeta.audit(null, null, 'nc_audit', {\n-      op_type: 'AUTHENTICATION',\n-      op_sub_type: 'PASSWORD_FORGOT',\n-      user: user.email,\n-      description: `requested for password reset `,\n-      ip: req.clientIp\n-    });\n-\n-    res.json({ msg: 'Check your email for password reset link.' });\n+    res.json({ msg: 'Check your email if you are registered with us.' });\n   }\n \n   protected async tokenValidate(req, res, next): Promise<any> {"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c2f50efbb9e57e954a4fde07cf618bbfd0fc8704",
            "date": "2025-01-14T11:59:45Z",
            "author_login": "mertmit"
          },
          {
            "sha": "51edd98b9e26a5625a4d3e0b1d3ff09d8442e819",
            "date": "2025-01-14T10:55:55Z",
            "author_login": "pranavxc"
          },
          {
            "sha": "df0bffd0ccaadb5db69999529ec27fa75c2fa452",
            "date": "2025-01-14T09:53:04Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "adfc02d7d49f88e9b7dac823915fbda400cb8d6c",
            "date": "2025-01-14T09:51:26Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "4ac6769eba67ba3ad52d2c37b68058eb0905fc8e",
            "date": "2025-01-14T09:51:23Z",
            "author_login": "pranavxc"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-203",
    "description": "In NocoDB, versions 0.9 to 0.83.8 are vulnerable to Observable Discrepancy in the password-reset feature. When requesting a password reset for a given email address, the application displays an error message when the email isn't registered within the system. This allows attackers to enumerate the registered users' email addresses.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-01-10T16:15:10.180",
    "last_modified": "2024-11-21T06:46:13.263",
    "fix_date": "2021-12-20T09:56:05Z"
  },
  "references": [
    {
      "url": "https://github.com/nocodb/nocodb/commit/f46e89b0",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-22120",
      "source": "vulnerabilitylab@mend.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nocodb/nocodb/commit/f46e89b0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-22120",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:37.064566",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nocodb",
    "owner": "nocodb",
    "created_at": "2017-10-29T18:51:48Z",
    "updated_at": "2025-01-14T13:56:54Z",
    "pushed_at": "2025-01-14T12:15:11Z",
    "size": 1247095,
    "stars": 50834,
    "forks": 3497,
    "open_issues": 754,
    "watchers": 50834,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "TypeScript": 8293660,
      "Vue": 3668346,
      "JavaScript": 756191,
      "PLpgSQL": 101494,
      "Shell": 56477,
      "SCSS": 42238,
      "CSS": 25579,
      "TSQL": 15401,
      "Dockerfile": 5585,
      "Smarty": 2321
    },
    "commit_activity": {
      "total_commits_last_year": 7073,
      "avg_commits_per_week": 136.01923076923077,
      "days_active_last_year": 334
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T14:16:35.736766"
  }
}