{
  "cve_id": "CVE-2022-2217",
  "github_data": {
    "repository": "ionicabizau/parse-url",
    "fix_commit": "21c72ab9412228eea753e2abc48f8962707b1fe3",
    "related_commits": [
      "21c72ab9412228eea753e2abc48f8962707b1fe3",
      "21c72ab9412228eea753e2abc48f8962707b1fe3"
    ],
    "patch_url": "https://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3.patch",
    "fix_commit_details": {
      "sha": "21c72ab9412228eea753e2abc48f8962707b1fe3",
      "commit_date": "2022-06-27T09:19:36Z",
      "author": {
        "login": "IonicaBizau",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Refactor codebase, upgrade dependencies",
        "length": 39,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 80,
        "additions": 54,
        "deletions": 26
      },
      "files": [
        {
          "filename": "lib/index.js",
          "status": "modified",
          "additions": 33,
          "deletions": 12,
          "patch": "@@ -1,8 +1,10 @@\n \"use strict\"\n \n+// Dependencies\n const parsePath = require(\"parse-path\")\n     , normalizeUrl = require(\"normalize-url\")\n \n+\n /**\n  * parseUrl\n  * Parses the input url.\n@@ -12,7 +14,7 @@ const parsePath = require(\"parse-path\")\n  * @name parseUrl\n  * @function\n  * @param {String} url The input url.\n- * @param {Boolean|Object} normalize Wheter to normalize the url or not.\n+ * @param {Boolean|Object} normalize Whether to normalize the url or not.\n  *                         Default is `false`. If `true`, the url will\n  *                         be normalized. If an object, it will be the\n  *                         options object sent to [`normalize-url`](https://github.com/sindresorhus/normalize-url).\n@@ -21,21 +23,26 @@ const parsePath = require(\"parse-path\")\n  *\n  * @return {Object} An object containing the following fields:\n  *\n- *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n- *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n- *  - `port` (null|Number): The domain port.\n- *  - `resource` (String): The url domain (including subdomains).\n- *  - `user` (String): The authentication user (usually for ssh urls).\n- *  - `pathname` (String): The url pathname.\n- *  - `hash` (String): The url hash.\n- *  - `search` (String): The url querystring value.\n- *  - `href` (String): The input url.\n- *  - `query` (Object): The url querystring, parsed as object.\n+ *    - `protocols` (Array): An array with the url protocols (usually it has one element).\n+ *    - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n+ *    - `port` (null|Number): The domain port.\n+ *    - `resource` (String): The url domain (including subdomains).\n+ *    - `user` (String): The authentication user (usually for ssh urls).\n+ *    - `pathname` (String): The url pathname.\n+ *    - `hash` (String): The url hash.\n+ *    - `search` (String): The url querystring value.\n+ *    - `href` (String): The input url.\n+ *    - `query` (Object): The url querystring, parsed as object.\n  */\n-function parseUrl(url, normalize = false) {\n+const parseUrl = (url, normalize = false) => {\n+\n+    // Constants\n+    const GIT_RE = /((git@|http(s)?:\\/\\/)([\\w\\.@]+)(\\/|:))(([\\~,\\w,\\-,\\_,\\/]+)(.git){0,1}((\\/){0,1}))/\n+\n     if (typeof url !== \"string\" || !url.trim()) {\n         throw new Error(\"Invalid url.\")\n     }\n+\n     if (normalize) {\n         if (typeof normalize !== \"object\") {\n             normalize = {\n@@ -44,7 +51,21 @@ function parseUrl(url, normalize = false) {\n         }\n         url = normalizeUrl(url, normalize)\n     }\n+\n     const parsed = parsePath(url)\n+\n+    // Potential git-ssh urls\n+    if (parsed.protocol === \"file\") {\n+        const matched  = parsed.href.match(GIT_RE)\n+        if (matched) {\n+            parsed.protocols = [\"ssh\"]\n+            parsed.protocol = \"ssh\"\n+            parsed.resource = matched[4]\n+            parsed.user = \"git\"\n+            parsed.pathname = `/${matched[6]}`\n+        }\n+    }\n+\n     return parsed;\n }\n "
        },
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -31,10 +31,10 @@\n     \"tester\": \"^1.3.1\"\n   },\n   \"dependencies\": {\n-    \"is-ssh\": \"^1.3.0\",\n+    \"is-ssh\": \"^1.4.0\",\n     \"normalize-url\": \"^6.1.0\",\n-    \"parse-path\": \"^4.0.4\",\n-    \"protocols\": \"^1.4.0\"\n+    \"parse-path\": \"^5.0.0\",\n+    \"protocols\": \"^2.0.1\"\n   },\n   \"files\": [\n     \"bin/\",\n@@ -56,4 +56,4 @@\n       \"For low-level path parsing, check out [`parse-path`](https://github.com/IonicaBizau/parse-path). This very module is designed to parse urls. By default the urls are normalized.\"\n     ]\n   }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "test/index.js",
          "status": "modified",
          "additions": 17,
          "deletions": 10,
          "patch": "@@ -2,7 +2,6 @@\n const parseUrl = require(\"../lib\")\n     , tester = require(\"tester\")\n     , normalizeUrl = require(\"normalize-url\")\n-    , qs = require(\"querystring\")\n     ;\n \n const INPUTS = [\n@@ -11,77 +10,83 @@ const INPUTS = [\n       , {\n             protocols: [ \"http\" ]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"ionicabizau.net\"\n           , user: \"\"\n           , pathname: \"/blog\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n   , [\n         \"//ionicabizau.net/foo.js\"\n       , {\n             protocols: [\"http\"]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"ionicabizau.net\"\n           , user: \"\"\n           , pathname: \"/foo.js\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n   , [\n         \"http://domain.com/path/name#some-hash?foo=bar\"\n       , {\n             protocols: [\"http\"]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"domain.com\"\n           , user: \"\"\n           , pathname: \"/path/name\"\n           , hash: \"some-hash?foo=bar\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n   , [\n         [\"git+ssh://git@host.xz/path/name.git\", false]\n       , {\n             protocols: [\"git\", \"ssh\"]\n           , protocol: \"git\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"host.xz\"\n           , user: \"git\"\n           , pathname: \"/path/name.git\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n   , [\n         [\"git@github.com:IonicaBizau/git-stats.git\", false]\n       , {\n-            protocols: []\n+            protocols: [\"ssh\"]\n           , protocol: \"ssh\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"github.com\"\n           , user: \"git\"\n           , pathname: \"/IonicaBizau/git-stats.git\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n   , [\n         [\"http://ionicabizau.net/with-true-normalize\", true]\n       , {\n             protocols: [ \"http\" ]\n           , protocol: \"http\"\n-          , port: null\n+          , port: \"\"\n           , resource: \"ionicabizau.net\"\n           , user: \"\"\n           , pathname: \"/with-true-normalize\"\n           , hash: \"\"\n           , search: \"\"\n+          , query: {}\n         }\n     ]\n ];\n@@ -91,13 +96,15 @@ tester.describe(\"check urls\", test => {\n         let url = Array.isArray(c[0]) ? c[0][0] : c[0]\n         test.should(\"support \" + url, () => {\n             const res = parseUrl(url, c[0][1] !== false);\n+\n             if (c[0][1] !== false) {\n                 url = normalizeUrl(url, {\n                     stripHash: false\n                 })\n             }\n-            c[1].query = qs.parse(c[1].search)\n-            c[1].href = url\n+\n+            c[1].href = c[1].href || url\n+            c[1].password = c[1].password || \"\"\n             test.expect(res).toEqual(c[1]);\n         });\n     });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bb9472d885d6a083c726b24686700d75b25f2b91",
            "date": "2024-04-03T05:25:50Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "a58414d3c7bb26507b2eb5aa3aa9e7b84743ff8d",
            "date": "2024-04-03T05:24:12Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "35b9f17915348802f8865b5501c3fc8a35264cf1",
            "date": "2024-04-03T05:22:59Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "eaaf5e117b77f8e11ecedf12efbe0cca3d0af531",
            "date": "2024-04-03T05:22:51Z",
            "author_login": "IonicaBizau"
          },
          {
            "sha": "752c2254424ebd332eb542ef560076e4f2acc396",
            "date": "2024-04-03T05:18:07Z",
            "author_login": "IonicaBizau"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Generic in GitHub repository ionicabizau/parse-url prior to 7.0.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-27T11:15:08.403",
    "last_modified": "2024-11-21T07:00:33.590",
    "fix_date": "2022-06-27T09:19:36Z"
  },
  "references": [
    {
      "url": "https://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4e046c63-b1ca-4bcc-b418-29796918a71b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4e046c63-b1ca-4bcc-b418-29796918a71b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.484557",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-url",
    "owner": "ionicabizau",
    "created_at": "2017-08-21T08:59:30Z",
    "updated_at": "2024-12-21T22:09:06Z",
    "pushed_at": "2024-04-03T05:25:55Z",
    "size": 361,
    "stars": 58,
    "forks": 37,
    "open_issues": 0,
    "watchers": 58,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 12831,
      "TypeScript": 784
    },
    "commit_activity": {
      "total_commits_last_year": 10,
      "avg_commits_per_week": 0.19230769230769232,
      "days_active_last_year": 3
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:35:45.008088"
  }
}