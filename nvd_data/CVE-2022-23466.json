{
  "cve_id": "CVE-2022-23466",
  "github_data": {
    "repository": "kitabisa/teler",
    "fix_commit": "20f59eda2420ac64e29f199a61230a0abc875e8e",
    "related_commits": [
      "20f59eda2420ac64e29f199a61230a0abc875e8e",
      "20f59eda2420ac64e29f199a61230a0abc875e8e"
    ],
    "patch_url": "https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e.patch",
    "fix_commit_details": {
      "sha": "20f59eda2420ac64e29f199a61230a0abc875e8e",
      "commit_date": "2022-12-03T20:23:18Z",
      "author": {
        "login": "dwisiswant0",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(event) dashboard: prevent DOM-XSS for incoming events",
        "length": 57,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 10,
        "additions": 7,
        "deletions": 3
      },
      "files": [
        {
          "filename": "internal/event/www/script.js",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -8,6 +8,10 @@ document.addEventListener('DOMContentLoaded', function(event) {\n         filtersCount: document.getElementById('filters-count').getElementsByTagName('span')[0]\n     };\n     const slugify = (value) => value.toLowerCase().replace(/[^a-z0-9 -]/g, '').replace(/\\s+/g, '-').replace(/-+/g, '-');\n+    const escapeHTML = (string) => {\n+        const map = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n+        return string.replace(/[&<>\"']/g, function(m) { return map[m]; });\n+    };\n     const sort = (list) => {      \n         signatures = list.getElementsByTagName(\"li\");\n         Array.from(signatures)\n@@ -70,9 +74,9 @@ document.addEventListener('DOMContentLoaded', function(event) {\n         row.classList.add('log', sigId);\n         row.id = eventId;\n         row.insertCell(0).innerHTML = `<td class=\"date\"><span class=\"datetime\" title=\"${new Date().toLocaleString}\">${new Date().toLocaleTimeString()}</span></td>`;\n-        row.insertCell(1).innerHTML = `<td class=\"category-name\"><strong>${data.category}</strong></td>`;\n+        row.insertCell(1).innerHTML = `<td class=\"category-name\"><strong>${escapeHTML(data.category)}</strong></td>`;\n         row.insertCell(2).innerHTML = `<td class=\"element\"><div>${data.element}</pre></div></td>`;\n-        row.insertCell(3).innerHTML = `<td class=\"matches\"><strong>${data[data.element]}</strong></td>`;\n+        row.insertCell(3).innerHTML = `<td class=\"matches\"><strong>${escapeHTML(data[data.element])}</strong></td>`;\n         row.insertCell(4).innerHTML = `<td class=\"log-line\"><div><pre>${JSON.stringify(data)}</pre></div></td>`;\n         settings.matchesCount.textContent = `${document.getElementsByClassName('log').length} threats`;\n \n@@ -103,7 +107,7 @@ document.addEventListener('DOMContentLoaded', function(event) {\n     const createSignature = (name) => {\n         var li = document.createElement('li');\n         li.id = slugify(name)\n-        li.innerHTML = `<a href=\"#\" class=\"menu-item\" title=\"${name}\">${name}</a>`;\n+        li.innerHTML = `<a href=\"#\" class=\"menu-item\" title=\"${escapeHTML(name)}\">${escapeHTML(name)}</a>`;\n         li.addEventListener('click', (e) => {\n             e.preventDefault();\n             filterSignature(li);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "36d5003ec91eab4b3297ed264b2a013d2afa87f5",
            "date": "2024-02-13T04:53:37Z",
            "author_login": "dwisiswant0"
          },
          {
            "sha": "3f1809c8670a1957f3f47a84c024a6e110da88af",
            "date": "2024-02-13T04:40:16Z",
            "author_login": "dwisiswant0"
          },
          {
            "sha": "273bdd69ad49fb8618b65d210e86f77008483271",
            "date": "2024-02-13T04:30:27Z",
            "author_login": "dwisiswant0"
          },
          {
            "sha": "a730cabf53adce9a52fa0f70b4ec1e0599c40b61",
            "date": "2024-02-13T04:21:40Z",
            "author_login": "dwisiswant0"
          },
          {
            "sha": "1319fc03ad718b0fd1fc25c532a45543b7c99218",
            "date": "2023-08-09T23:02:55Z",
            "author_login": "dwisiswant0"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "teler is an real-time intrusion detection and threat alert dashboard. teler prior to version 2.0.0-rc.4 is vulnerable to DOM-based cross-site scripting (XSS) in the teler dashboard. When teler requests messages from the event stream on the `/events` endpoint, the log data displayed on the dashboard are not sanitized. This only affects authenticated users and can only be exploited based on detected threats if the log contains a DOM scripting payload. This vulnerability has been fixed on version `v2.0.0-rc.4`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-06T18:15:09.997",
    "last_modified": "2024-11-21T06:48:37.047",
    "fix_date": "2022-12-03T20:23:18Z"
  },
  "references": [
    {
      "url": "https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.205678",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "teler",
    "owner": "kitabisa",
    "created_at": "2020-07-21T03:48:29Z",
    "updated_at": "2025-01-02T21:18:41Z",
    "pushed_at": "2024-02-13T04:54:25Z",
    "size": 671,
    "stars": 3032,
    "forks": 252,
    "open_issues": 11,
    "watchers": 3032,
    "has_security_policy": false,
    "default_branch": "v2",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 51013,
      "CSS": 29525,
      "JavaScript": 6694,
      "HTML": 5262,
      "Makefile": 2074,
      "Dockerfile": 471
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:07:46.375305"
  }
}