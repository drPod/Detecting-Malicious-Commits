{
  "cve_id": "CVE-2022-23510",
  "github_data": {
    "repository": "cube-js/cube.js",
    "fix_commit": "3c614674fed6ca17df08bbba8c835ef110167570",
    "related_commits": [
      "3c614674fed6ca17df08bbba8c835ef110167570",
      "f1140de508e359970ac82b50bae1c4bf152f6041",
      "3c614674fed6ca17df08bbba8c835ef110167570",
      "f1140de508e359970ac82b50bae1c4bf152f6041"
    ],
    "patch_url": "https://github.com/cube-js/cube.js/commit/3c614674fed6ca17df08bbba8c835ef110167570.patch",
    "fix_commit_details": {
      "sha": "3c614674fed6ca17df08bbba8c835ef110167570",
      "commit_date": "2022-12-09T18:53:23Z",
      "author": {
        "login": "MikeNitsenko",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Revert \"feat(api-gateway, server-core): Added dataSources list to extended meta (#5743)\" (#5785)",
        "length": 159,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 62,
        "additions": 3,
        "deletions": 59
      },
      "files": [
        {
          "filename": "packages/cubejs-api-gateway/src/gateway.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -448,7 +448,7 @@ class ApiGateway {\n       const metaConfigExtended = await this.getCompilerApi(context).metaConfigExtended({\n         requestId: context.requestId,\n       });\n-      const { metaConfig, cubeDefinitions, dataSources } = metaConfigExtended;\n+      const { metaConfig, cubeDefinitions } = metaConfigExtended;\n \n       const cubes = this.filterVisibleItemsInMeta(context, metaConfig)\n         .map((meta) => meta.config)\n@@ -466,7 +466,7 @@ class ApiGateway {\n           joins: transformJoins(cubeDefinitions[cube.name]?.joins),\n           preAggregations: transformPreAggregations(cubeDefinitions[cube.name]?.preAggregations),\n         }));\n-      res({ cubes, dataSources });\n+      res({ cubes });\n     } catch (e) {\n       this.handleError({\n         e,"
        },
        {
          "filename": "packages/cubejs-server-core/src/core/CompilerApi.js",
          "status": "modified",
          "additions": 1,
          "deletions": 6,
          "patch": "@@ -66,10 +66,6 @@ export class CompilerApi {\n     return this.compilers;\n   }\n \n-  async getDataSources(cubeEvaluator) {\n-    return Promise.all(cubeEvaluator.cubeNames().map(async cube => cubeEvaluator.cubeFromPath(cube).dataSource ?? 'default'));\n-  }\n-\n   async createQueryFactory(compilers) {\n     const { cubeEvaluator } = compilers;\n \n@@ -184,10 +180,9 @@ export class CompilerApi {\n   }\n \n   async metaConfigExtended(options) {\n-    const { metaTransformer, cubeEvaluator } = await this.getCompilers(options);\n+    const { metaTransformer } = await this.getCompilers(options);\n     return {\n       metaConfig: metaTransformer?.cubes,\n-      dataSources: await this.getDataSources(cubeEvaluator),\n       cubeDefinitions: metaTransformer?.cubeEvaluator?.cubeDefinitions,\n     };\n   }"
        },
        {
          "filename": "packages/cubejs-server-core/test/unit/index.test.ts",
          "status": "modified",
          "additions": 0,
          "deletions": 51,
          "patch": "@@ -52,34 +52,6 @@ cube('Bar', {\n   ]),\n };\n \n-const repositoryWithDataSource: SchemaFileRepository = {\n-  localPath: () => __dirname,\n-  dataSchemaFiles: () => Promise.resolve([\n-    {\n-      fileName: 'main.js', content: `\n-cube('Bar', {\n-  sql: 'select * from bar',\n-  \n-  measures: {\n-    count: {\n-      type: 'count'\n-    }\n-  },\n-\n-  dataSource: 'dataSource',\n-\n-  dimensions: {\n-    time: {\n-      sql: 'timestamp',\n-      type: 'time'\n-    }\n-  }\n-});\n-`,\n-    },\n-  ]),\n-};\n-\n const repositoryWithoutContent: SchemaFileRepository = {\n   localPath: () => __dirname,\n   dataSchemaFiles: () => Promise.resolve([{ fileName: 'main.js', content: '' }]),\n@@ -363,29 +335,6 @@ describe('index.test', () => {\n       expect(metaConfigExtended).toHaveProperty('metaConfig');\n       expect(metaConfigExtended.metaConfig.length).toBeGreaterThan(0);\n       expect(metaConfigExtended).toHaveProperty('cubeDefinitions');\n-      expect(metaConfigExtended).toHaveProperty('dataSources');\n-      expect(metaConfigExtended.dataSources).toEqual(['default']);\n-      expect(metaConfigExtendedSpy).toHaveBeenCalled();\n-      metaConfigExtendedSpy.mockClear();\n-    });\n-  });\n-  \n-  describe('CompilerApi with dataSource', () => {\n-    const logger = jest.fn(() => {});\n-    const compilerApi = new CompilerApi(\n-      repositoryWithDataSource,\n-      async () => 'mysql',\n-      { logger }\n-    );\n-    const metaConfigExtendedSpy = jest.spyOn(compilerApi, 'metaConfigExtended');\n-\n-    test('CompilerApi metaConfigExtended', async () => {\n-      const metaConfigExtended = await compilerApi.metaConfigExtended({ requestId: 'XXX' });\n-      expect(metaConfigExtended).toHaveProperty('metaConfig');\n-      expect(metaConfigExtended.metaConfig.length).toBeGreaterThan(0);\n-      expect(metaConfigExtended).toHaveProperty('cubeDefinitions');\n-      expect(metaConfigExtended).toHaveProperty('dataSources');\n-      expect(metaConfigExtended.dataSources).toEqual(['dataSource']);\n       expect(metaConfigExtendedSpy).toHaveBeenCalled();\n       metaConfigExtendedSpy.mockClear();\n     });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f48495c10dca26b3c52acba6a66013a5246f37c0",
            "date": "2025-01-14T03:46:50Z",
            "author_login": "vasilev-alex"
          },
          {
            "sha": "646bd9da0f5e6b5abd36266b3ec1a546de51ebb6",
            "date": "2025-01-13T17:45:08Z",
            "author_login": "AvilaJulio"
          },
          {
            "sha": "80591ea454f9ca4183967e344c01c616577ab294",
            "date": "2025-01-13T15:16:11Z",
            "author_login": "RusovDmitriy"
          },
          {
            "sha": "cef0714783f717927164843863591f9b20e78a87",
            "date": "2025-01-13T14:44:24Z",
            "author_login": "KSDaemon"
          },
          {
            "sha": "f17fdac12ae49069b41162ff131c0e5c81fe655e",
            "date": "2025-01-13T12:31:38Z",
            "author_login": "RusovDmitriy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-89",
    "description": "cube-js is a headless business intelligence platform. In version 0.31.23 all authenticated Cube clients could bypass SQL row-level security and run arbitrary SQL via the newly introduced /v1/sql-runner endpoint. This issue has been resolved in version 0.31.24. Users are advised to either upgrade to 0.31.24 or to downgrade to 0.31.22. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-09T23:15:22.227",
    "last_modified": "2024-11-21T06:48:42.890",
    "fix_date": "2022-12-09T18:53:23Z"
  },
  "references": [
    {
      "url": "https://github.com/cube-js/cube.js/commit/3c614674fed6ca17df08bbba8c835ef110167570",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cube-js/cube.js/commit/f1140de508e359970ac82b50bae1c4bf152f6041",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cube-js/cube.js/security/advisories/GHSA-6jqm-3c9g-pch7",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cube-js/cube.js/commit/3c614674fed6ca17df08bbba8c835ef110167570",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cube-js/cube.js/commit/f1140de508e359970ac82b50bae1c4bf152f6041",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cube-js/cube.js/security/advisories/GHSA-6jqm-3c9g-pch7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.220051",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cube",
    "owner": "cube-js",
    "created_at": "2018-09-16T18:58:46Z",
    "updated_at": "2025-01-14T12:07:56Z",
    "pushed_at": "2025-01-14T11:20:20Z",
    "size": 327808,
    "stars": 18135,
    "forks": 1791,
    "open_issues": 827,
    "watchers": 18135,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Rust": 7529574,
      "TypeScript": 4384304,
      "JavaScript": 1126141,
      "Dockerfile": 38473,
      "ANTLR": 33136,
      "Python": 18638,
      "Shell": 9733,
      "Jinja": 6671,
      "HTML": 3260,
      "HCL": 2993,
      "CSS": 2218,
      "Less": 608,
      "RenderScript": 1
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:48:03.730973"
  }
}