{
  "cve_id": "CVE-2022-23511",
  "github_data": {
    "repository": "aws/amazon-cloudwatch-agent",
    "fix_commit": "6119858864c317ff26f41f576c169148d1250837",
    "related_commits": [
      "6119858864c317ff26f41f576c169148d1250837",
      "6119858864c317ff26f41f576c169148d1250837"
    ],
    "patch_url": "https://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837.patch",
    "fix_commit_details": {
      "sha": "6119858864c317ff26f41f576c169148d1250837",
      "commit_date": "2022-08-08T17:00:55Z",
      "author": {
        "login": "aateeqi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "support onprem and onpremise and support windows msi installer w silent exec (#543)",
        "length": 164,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 38,
        "additions": 27,
        "deletions": 11
      },
      "files": [
        {
          "filename": "Makefile",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -58,7 +58,7 @@ nightly-release: release\n build: check_secrets cwagent-otel-collector amazon-cloudwatch-agent config-translator start-amazon-cloudwatch-agent amazon-cloudwatch-agent-config-wizard config-downloader\n \n check_secrets::\n-\tif grep --exclude-dir=build --exclude-dir=vendor -E \"(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}|(\\\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\\\"|')?\\\\s*(:|=>|=)\\\\s*(\\\"|')?[A-Za-z0-9/\\\\+=]{40}(\\\"|')?\" -Rn .; then echo \"check_secrets failed\"; exit 1; fi;\n+\tif grep --exclude-dir=build --exclude-dir=vendor -exclude=integration/msi/tools/amazon-cloudwatch-agent.wxs -E \"(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}|(\\\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\\\"|')?\\\\s*(:|=>|=)\\\\s*(\\\"|')?[A-Za-z0-9/\\\\+=]{40}(\\\"|')?\" -Rn .; then echo \"check_secrets failed\"; exit 1; fi;\n \n create-version-file:\n \t@echo Version: ${VERSION}"
        },
        {
          "filename": "cmd/config-translator/translator.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -28,7 +28,7 @@ func initFlags() {\n \tvar inputJsonFile = flag.String(\"input\", \"\", \"Please provide the path of input agent json config file\")\n \tvar inputJsonDir = flag.String(\"input-dir\", \"\", \"Please provide the path of input agent json config directory.\")\n \tvar inputTomlFile = flag.String(\"output\", \"\", \"Please provide the path of the output CWAgent config file\")\n-\tvar inputMode = flag.String(\"mode\", \"ec2\", \"Please provide the mode, i.e. ec2, onPremise, auto\")\n+\tvar inputMode = flag.String(\"mode\", \"ec2\", \"Please provide the mode, i.e. ec2, onPremise, onPrem, auto\")\n \tvar inputConfig = flag.String(\"config\", \"\", \"Please provide the common-config file\")\n \tvar multiConfig = flag.String(\"multi-config\", \"remove\", \"valid values: default, append, remove\")\n \tflag.Parse()"
        },
        {
          "filename": "integration/msi/tools/amazon-cloudwatch-agent.wxs",
          "status": "modified",
          "additions": 21,
          "deletions": 6,
          "patch": "@@ -2,8 +2,6 @@\n <Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'\n      xmlns:util='http://schemas.microsoft.com/wix/UtilExtension'>\n \n-  <?define FixPermissionScriptAction=\"\"powershell.exe\" -ExecutionPolicy Bypass -File \"[INSTALLDIR]permission.ps1\"?>\n-\n   <Product Id='*'\n     Name='Amazon CloudWatch Agent'\n     UpgradeCode='c537c936-91b3-4270-94d7-e128acfc3e86'\n@@ -26,7 +24,13 @@\n     />\n \n     <MediaTemplate EmbedCab='yes' />\n-\n+    <Property Id=\"POWERSHELLEXE\">\n+      <RegistrySearch Id=\"POWERSHELLEXE\"\n+                      Type=\"raw\"\n+                      Root=\"HKLM\"\n+                      Key=\"SOFTWARE\\Microsoft\\PowerShell\\1\\ShellIds\\Microsoft.PowerShell\"\n+                      Name=\"Path\" />\n+    </Property>\n     <Feature Id='ProductFeature' Title=\"Amazon CloudWatch Agent\" Level='1'>\n       <ComponentRef Id='StarterEXE' />\n       <ComponentRef Id='AgentEXE' />\n@@ -200,11 +204,22 @@\n             <CreateFolder />\n         </Component>\n     </DirectoryRef>\n-\n-    <CustomAction Id=\"UpdateConfigPermission\" Directory=\"INSTALLDIR\" ExeCommand=\"$(var.FixPermissionScriptAction)\" Execute=\"deferred\" Return=\"check\" Impersonate=\"no\" />\n+     <!-- Find and use powershell to run the command, because just running \"powershell.exe\" did not resolve (not in ENV path) when using \"WixQuietExec\".-->\n+    <SetProperty Id=\"QtExecUpdateConfigPermission\" \n+        Sequence=\"execute\"\n+        Before =\"QtExecUpdateConfigPermission\"\n+        Value='&quot;[POWERSHELLEXE]&quot;  -ExecutionPolicy Bypass -File \"[INSTALLDIR]permission.ps1\" ' \n+    />\n+    <!-- Setup a silent execution contrainer around the command -->\n+    <CustomAction Id=\"QtExecUpdateConfigPermission\" \n+    BinaryKey=\"WixCA\" \n+    DllEntry=\"WixQuietExec\" \n+    Execute=\"deferred\" \n+    Return=\"check\" \n+    Impersonate=\"no\" />\n \n     <InstallExecuteSequence>\n-        <Custom Action=\"UpdateConfigPermission\" After=\"InstallFiles\">NOT UPGRADINGPRODUCTCODE AND NOT (REMOVE~=\"ALL\")</Custom>\n+    <Custom Action=\"QtExecUpdateConfigPermission\" After=\"InstallFiles\">NOT UPGRADINGPRODUCTCODE AND NOT (REMOVE~=\"ALL\")</Custom>\n     </InstallExecuteSequence>\n \n     <MajorUpgrade AllowDowngrades=\"yes\"/>"
        },
        {
          "filename": "translator/config/mode.go",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -4,6 +4,7 @@\n package config\n \n const (\n-\tModeEC2    = \"ec2\"\n-\tModeOnPrem = \"onPremise\"\n+\tModeEC2       = \"ec2\"\n+\tModeOnPrem    = \"onPrem\"\n+        ModeOnPremise = \"onPremise\"\n )"
        },
        {
          "filename": "translator/context/context.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -110,7 +110,7 @@ func (ctx *Context) SetMode(mode string) {\n \tswitch mode {\n \tcase config.ModeEC2:\n \t\tctx.mode = config.ModeEC2\n-\tcase config.ModeOnPrem:\n+\tcase config.ModeOnPrem,config.ModeOnPremise:\n \t\tctx.mode = config.ModeOnPrem\n \tdefault:\n \t\tlog.Panicf(\"Invalid mode %s. Valid mode values are %s and %s.\", mode, config.ModeEC2, config.ModeOnPrem)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f7ef67adca62b17342baae2f3009d0ff6c7c6752",
            "date": "2025-01-13T17:11:06Z",
            "author_login": "movence"
          },
          {
            "sha": "da53e1c167e6c27561c64b1299e3b09d235806f8",
            "date": "2025-01-08T06:05:33Z",
            "author_login": "bjrara"
          },
          {
            "sha": "20f6bb4af17ba648b0f74568795d11856309ab0c",
            "date": "2025-01-07T21:58:28Z",
            "author_login": "musa-asad"
          },
          {
            "sha": "ecf739b3d49f41c62b286d03e6994ec013cdf7fd",
            "date": "2025-01-07T21:13:31Z",
            "author_login": "zhihonl"
          },
          {
            "sha": "07361c70329fe79757221c312f062729e4b62446",
            "date": "2025-01-07T05:49:31Z",
            "author_login": "sky333999"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-274",
    "description": "A privilege escalation issue exists within the Amazon CloudWatch Agent for Windows, software for collecting metrics and logs from Amazon EC2 instances and on-premises servers, in versions up to and including v1.247354. When users trigger a repair of the Agent, a pop-up window opens with SYSTEM permissions. Users with administrative access to affected hosts may use this to create a new command prompt as NT AUTHORITY\\SYSTEM. To trigger this issue, the third party must be able to access the affected host and elevate their privileges such that they're able to trigger the agent repair process. They must also be able to install the tools required to trigger the issue. This issue does not affect the CloudWatch Agent for macOS or Linux. Agent users should upgrade to version 1.247355 of the CloudWatch Agent to address this issue. There is no recommended work around. Affected users must update the installed version of the CloudWatch Agent to address this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-12-12T13:15:12.120",
    "last_modified": "2024-11-21T06:48:43.013",
    "fix_date": "2022-08-08T17:00:55Z"
  },
  "references": [
    {
      "url": "https://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/aws/amazon-cloudwatch-agent/security/advisories/GHSA-j8x2-2m5w-j939",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/aws/amazon-cloudwatch-agent/commit/6119858864c317ff26f41f576c169148d1250837#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/aws/amazon-cloudwatch-agent/security/advisories/GHSA-j8x2-2m5w-j939",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.222507",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "amazon-cloudwatch-agent",
    "owner": "aws",
    "created_at": "2020-04-08T17:08:25Z",
    "updated_at": "2025-01-13T17:11:18Z",
    "pushed_at": "2025-01-14T16:28:58Z",
    "size": 141768,
    "stars": 459,
    "forks": 208,
    "open_issues": 108,
    "watchers": 459,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "backup-07-21-2023",
      "backup-08-01-2024-ccwa",
      "backup-08-21-2023",
      "backup-branch-2"
    ],
    "languages": {
      "Go": 3175824,
      "Shell": 39083,
      "Makefile": 24194,
      "PowerShell": 18892,
      "Dockerfile": 4206
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:15:22.129586"
  }
}