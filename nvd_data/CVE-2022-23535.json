{
  "cve_id": "CVE-2022-23535",
  "github_data": {
    "repository": "mbdavid/LiteDB",
    "fix_commit": "4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f",
    "related_commits": [
      "4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f",
      "4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f"
    ],
    "patch_url": "https://github.com/mbdavid/LiteDB/commit/4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f.patch",
    "fix_commit_details": {
      "sha": "4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f",
      "commit_date": "2022-12-08T15:03:28Z",
      "author": {
        "login": "mbdavid",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Adding testing for Process object deserializaion rule",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 27,
        "additions": 23,
        "deletions": 4
      },
      "files": [
        {
          "filename": "LiteDB.sln",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n \ufeff\n Microsoft Visual Studio Solution File, Format Version 12.00\n-# Visual Studio Version 16\n-VisualStudioVersion = 16.0.29609.76\n+# Visual Studio Version 17\n+VisualStudioVersion = 17.1.32328.378\n MinimumVisualStudioVersion = 10.0.40219.1\n Project(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"LiteDB\", \"LiteDB\\LiteDB.csproj\", \"{9497DA19-1FCA-4C2E-A1AB-8DFAACBC76E1}\"\n EndProject"
        },
        {
          "filename": "LiteDB/Client/Mapper/BsonMapper.Deserialize.cs",
          "status": "modified",
          "additions": 14,
          "deletions": 1,
          "patch": "@@ -170,7 +170,20 @@ public object Deserialize(Type type, BsonValue value)\n                     var actualType = _typeNameBinder.GetType(typeField.AsString);\n \n                     if (actualType == null) throw LiteException.InvalidTypedName(typeField.AsString);\n-                    if (!type.IsAssignableFrom(actualType)) throw LiteException.DataTypeNotAssignable(type.FullName, actualType.FullName);\n+\n+                    // avoid initialize class that are not assignable \n+                    if (!type.IsAssignableFrom(actualType))\n+                    {\n+                        throw LiteException.DataTypeNotAssignable(type.FullName, actualType.FullName);\n+                    }\n+\n+                    // avoid use of \"System.Diagnostics.Process\" in object type definition\n+                    // using String test to work in .netstandard 1.3\n+                    if (actualType.FullName.Equals(\"System.Diagnostics.Process\", StringComparison.OrdinalIgnoreCase) &&\n+                        actualType.Assembly.GetName().Name.Equals(\"System\", StringComparison.OrdinalIgnoreCase))\n+                    {\n+                        throw LiteException.AvoidUseOfProcess();\n+                    }\n \n                     type = actualType;\n                 }"
        },
        {
          "filename": "LiteDB/LiteDB.csproj",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n \ufeff<Project Sdk=\"Microsoft.NET.Sdk\">\r\n \r\n   <PropertyGroup>\r\n-    <TargetFrameworks>net45;netstandard1.3;netstandard2.0</TargetFrameworks>\r\n+    <TargetFrameworks>net4.5;netstandard1.3;netstandard2.0</TargetFrameworks>\r\n     <AssemblyVersion>5.0.12</AssemblyVersion>\r\n     <FileVersion>5.0.12</FileVersion>\r\n     <VersionPrefix>5.0.12</VersionPrefix>\r"
        },
        {
          "filename": "LiteDB/Utils/LiteException.cs",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -52,6 +52,7 @@ public class LiteException : Exception\n         public const int INVALID_NULL_CHAR_STRING = 212;\n         public const int INVALID_FREE_SPACE_PAGE = 213;\n         public const int DATA_TYPE_NOT_ASSIGNABLE = 214;\n+        public const int AVOID_USE_OF_PROCESS = 215;\n \n         #endregion\n \n@@ -312,6 +313,11 @@ internal static LiteException DataTypeNotAssignable(string type1, string type2)\n             return new LiteException(DATA_TYPE_NOT_ASSIGNABLE, $\"Data type {type1} is not assignable from data type {type2}\");\n         }\n \n+        internal static LiteException AvoidUseOfProcess()\n+        {\n+            return new LiteException(AVOID_USE_OF_PROCESS, $\"LiteDB do not accept System.Diagnostics.Process class in deserialize mapper\");\n+        }\n+\n         #endregion\n     }\n }\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2cc00c7094a966b7912c321c1ff7a754433c6d14",
            "date": "2024-12-10T14:07:23Z",
            "author_login": "JKamsker"
          },
          {
            "sha": "0412152bf2ca145a08e39e5b85fb6afdfaac6e68",
            "date": "2024-12-10T13:13:04Z",
            "author_login": "vonzshik"
          },
          {
            "sha": "91f6c68b8ff0c307d4fa8c803a7ed2fa28513a53",
            "date": "2024-12-03T00:28:53Z",
            "author_login": "JKamsker"
          },
          {
            "sha": "2cec865f03c60539ae49f3562e627a1fdb23542c",
            "date": "2024-12-02T23:17:01Z",
            "author_login": "JKamsker"
          },
          {
            "sha": "ed10cc320773ceb7efb65bd763f8db77ef819a35",
            "date": "2024-12-01T21:55:13Z",
            "author_login": "JKamsker"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-502",
    "description": "LiteDB is a small, fast and lightweight .NET NoSQL embedded database. Versions prior to 5.0.13 are subject to Deserialization of Untrusted Data. LiteDB uses a special field in JSON documents to cast different types from `BsonDocument` to POCO classes. When instances of an object are not the same of class, `BsonMapper` use a special field `_type` string info with full class name with assembly to be loaded and fit into your model. If your end-user can send to your app a plain JSON string, deserialization can load an unsafe  object to fit into your model. This issue is patched in version 5.0.13 with some basic fixes to avoid this, but is not 100% guaranteed when using `Object` type. The next major version will contain an allow-list to select what kind of Assembly can be loaded. Workarounds are detailed in the vendor advisory.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-24T23:15:10.663",
    "last_modified": "2024-11-21T06:48:45.737",
    "fix_date": "2022-12-08T15:03:28Z"
  },
  "references": [
    {
      "url": "https://github.com/mbdavid/LiteDB/commit/4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mbdavid/LiteDB/security/advisories/GHSA-3x49-g6rc-c284",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/mbdavid/LiteDB/commit/4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mbdavid/LiteDB/security/advisories/GHSA-3x49-g6rc-c284",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.772953",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "LiteDB",
    "owner": "mbdavid",
    "created_at": "2014-08-25T13:49:30Z",
    "updated_at": "2025-01-13T12:02:12Z",
    "pushed_at": "2024-12-10T14:07:23Z",
    "size": 46011,
    "stars": 8725,
    "forks": 1262,
    "open_issues": 717,
    "watchers": 8725,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C#": 1664161
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:33:14.527348"
  }
}