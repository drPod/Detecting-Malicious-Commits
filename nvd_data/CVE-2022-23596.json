{
  "cve_id": "CVE-2022-23596",
  "github_data": {
    "repository": "junrar/junrar",
    "fix_commit": "7b16b3d90b91445fd6af0adfed22c07413d4fab7",
    "related_commits": [
      "7b16b3d90b91445fd6af0adfed22c07413d4fab7",
      "7b16b3d90b91445fd6af0adfed22c07413d4fab7"
    ],
    "patch_url": "https://github.com/junrar/junrar/commit/7b16b3d90b91445fd6af0adfed22c07413d4fab7.patch",
    "fix_commit_details": {
      "sha": "7b16b3d90b91445fd6af0adfed22c07413d4fab7",
      "commit_date": "2022-01-27T04:08:31Z",
      "author": {
        "login": "gotson",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: invalid subheader type would throw npe and make the extract loop",
        "length": 81,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 8,
        "additions": 6,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/main/java/com/github/junrar/Archive.java",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -45,6 +45,7 @@\n import com.github.junrar.rarfile.RARVersion;\n import com.github.junrar.rarfile.SignHeader;\n import com.github.junrar.rarfile.SubBlockHeader;\n+import com.github.junrar.rarfile.SubBlockHeaderType;\n import com.github.junrar.rarfile.UnixOwnersHeader;\n import com.github.junrar.rarfile.UnrarHeadertype;\n import com.github.junrar.unpack.ComprDataIO;\n@@ -449,7 +450,9 @@ private void readHeaders(final long fileLength) throws IOException, RarException\n                             final SubBlockHeader subHead = new SubBlockHeader(blockHead,\n                                 subHeadbuffer);\n                             subHead.print();\n-                            switch (subHead.getSubType()) {\n+                            SubBlockHeaderType subType = subHead.getSubType();\n+                            if (subType == null) break;\n+                            switch (subType) {\n                                 case MAC_HEAD: {\n                                     final byte[] macHeaderbuffer = safelyAllocate(MacInfoHeader.MacInfoHeaderSize, MAX_HEADER_SIZE);\n                                     rawData.readFully(macHeaderbuffer, macHeaderbuffer.length);"
        },
        {
          "filename": "src/test/java/com/github/junrar/AbnormalFilesTest.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -58,7 +58,8 @@ public void extractFromStream(String filePath, Class<?> expectedException) throw\n     private static Stream<Arguments> provideFilesAndExpectedExceptionType() {\n         return Stream.of(\n             Arguments.of(\"abnormal/corrupt-header.rar\", CorruptHeaderException.class),\n-            Arguments.of(\"abnormal/mainHeaderNull.rar\", BadRarArchiveException.class)\n+            Arguments.of(\"abnormal/mainHeaderNull.rar\", BadRarArchiveException.class),\n+            Arguments.of(\"abnormal/loop.rar\", CorruptHeaderException.class)\n         );\n     }\n }"
        },
        {
          "filename": "src/test/resources/com/github/junrar/abnormal/loop.rar",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b4e51ae3daa47758aff7d1aab9a2e19685046a6b",
            "date": "2024-12-16T08:01:17Z",
            "author_login": "gotson"
          },
          {
            "sha": "d74c30ef1cb9e9875e128c6122b31a9473e1761a",
            "date": "2024-12-16T07:41:19Z",
            "author_login": "gotson"
          },
          {
            "sha": "44dd10c64d3c47389263b88534c92e6d63d290c3",
            "date": "2024-12-16T07:33:29Z",
            "author_login": "gotson"
          },
          {
            "sha": "9ea7d0f7abd9a0d8e1b2a02ebf139b2469167933",
            "date": "2024-04-16T01:51:06Z",
            "author_login": "gotson"
          },
          {
            "sha": "b589e68a250d707d24f6fbc0578b240c074db051",
            "date": "2024-02-05T16:40:54Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "Junrar is an open source java RAR archive library. In affected versions A carefully crafted RAR archive can trigger an infinite loop while extracting said archive. The impact depends solely on how the application uses the library, and whether files can be provided by malignant users. The problem is patched in 7.4.1. There are no known workarounds and users are advised to upgrade as soon as possible.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-01T12:15:08.257",
    "last_modified": "2024-11-21T06:48:53.677",
    "fix_date": "2022-01-27T04:08:31Z"
  },
  "references": [
    {
      "url": "https://github.com/junrar/junrar/commit/7b16b3d90b91445fd6af0adfed22c07413d4fab7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/junrar/junrar/issues/73",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/junrar/junrar/security/advisories/GHSA-m6cj-93v6-cvr5",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/junrar/junrar/commit/7b16b3d90b91445fd6af0adfed22c07413d4fab7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/junrar/junrar/issues/73",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/junrar/junrar/security/advisories/GHSA-m6cj-93v6-cvr5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:57.099898",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "junrar",
    "owner": "junrar",
    "created_at": "2012-09-04T13:14:45Z",
    "updated_at": "2025-01-07T03:00:07Z",
    "pushed_at": "2024-12-16T08:04:29Z",
    "size": 13823,
    "stars": 292,
    "forks": 77,
    "open_issues": 8,
    "watchers": 292,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 462418,
      "Shell": 1377
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:15:04.526002"
  }
}