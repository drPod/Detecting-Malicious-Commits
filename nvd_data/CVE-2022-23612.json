{
  "cve_id": "CVE-2022-23612",
  "github_data": {
    "repository": "openmrs/openmrs-core",
    "fix_commit": "db8454bf19a092a78d53ee4dba2af628b730a6e7",
    "related_commits": [
      "db8454bf19a092a78d53ee4dba2af628b730a6e7",
      "db8454bf19a092a78d53ee4dba2af628b730a6e7"
    ],
    "patch_url": "https://github.com/openmrs/openmrs-core/commit/db8454bf19a092a78d53ee4dba2af628b730a6e7.patch",
    "fix_commit_details": {
      "sha": "db8454bf19a092a78d53ee4dba2af628b730a6e7",
      "commit_date": "2022-01-28T20:58:59Z",
      "author": {
        "login": "ibacher",
        "type": "User",
        "stats": {
          "total_commits": 107,
          "average_weekly_commits": 0.11517761033369214,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 63
        }
      },
      "commit_message": {
        "title": "Fix bug",
        "length": 7,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 16,
        "deletions": 17
      },
      "files": [
        {
          "filename": "web/src/main/java/org/openmrs/web/filter/StartupFilter.java",
          "status": "modified",
          "additions": 16,
          "deletions": 17,
          "patch": "@@ -18,6 +18,8 @@\n import java.lang.annotation.Annotation;\n import java.lang.reflect.Field;\n import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -116,30 +118,27 @@ public final void doFilter(ServletRequest request, ServletResponse response, Fil\n \t\t\t// (the \"/initfilter\" part is needed so that the openmrs_static_context-servlet.xml file doesn't\n \t\t\t//  get instantiated early, before the locale messages are all set up)\n \t\t\tif (servletPath.startsWith(\"/images\") || servletPath.startsWith(\"/initfilter/scripts\")) {\n-\t\t\t\tservletPath = servletPath.replaceFirst(\"/initfilter\", \"/WEB-INF/view\"); // strip out the /initfilter part\n+\t\t\t\t// strip out the /initfilter part\n+\t\t\t\tservletPath = servletPath.replaceFirst(\"/initfilter\", \"/WEB-INF/view\");\n \t\t\t\t// writes the actual image file path to the response\n-\t\t\t\tFile file = new File(filterConfig.getServletContext().getRealPath(servletPath));\n+\t\t\t\tPath filePath = Paths.get(filterConfig.getServletContext().getRealPath(servletPath)).normalize();\n+\t\t\t\tPath fullFilePath = filePath;\n \t\t\t\tif (httpRequest.getPathInfo() != null) {\n-\t\t\t\t\tfile = new File(file, httpRequest.getPathInfo());\n+\t\t\t\t\tfullFilePath = fullFilePath.resolve(httpRequest.getPathInfo());\n+\t\t\t\t\tif (!(fullFilePath.normalize().startsWith(filePath))) {\n+\t\t\t\t\t\tlog.warn(\"Detected attempted directory traversal in request for {}\", httpRequest.getPathInfo());\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\tInputStream imageFileInputStream = null;\n-\t\t\t\ttry {\n-\t\t\t\t\timageFileInputStream = new FileInputStream(file);\n+\t\t\t\ttry (InputStream imageFileInputStream = new FileInputStream(fullFilePath.normalize().toFile())) {\n \t\t\t\t\tOpenmrsUtil.copyFile(imageFileInputStream, httpResponse.getOutputStream());\n \t\t\t\t}\n \t\t\t\tcatch (FileNotFoundException e) {\n-\t\t\t\t\tlog.error(\"Unable to find file: \" + file.getAbsolutePath());\n+\t\t\t\t\tlog.error(\"Unable to find file: {}\", filePath, e);\n \t\t\t\t}\n-\t\t\t\tfinally {\n-\t\t\t\t\tif (imageFileInputStream != null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\timageFileInputStream.close();\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (IOException io) {\n-\t\t\t\t\t\t\tlog.warn(\"Couldn't close imageFileInputStream: \" + io);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+\t\t\t\tcatch (IOException e) {\n+\t\t\t\t\tlog.warn(\"An error occurred while handling file {}\", filePath, e);\n \t\t\t\t}\n \t\t\t} else if (servletPath.startsWith(\"/scripts\")) {\n \t\t\t\tlog.error(\n@@ -193,7 +192,7 @@ private void initializeVelocity() {\n \t\t\t\tvelocityEngine.init(props);\n \t\t\t}\n \t\t\tcatch (Exception e) {\n-\t\t\t\tlog.error(\"velocity init failed, because: \" + e);\n+\t\t\t\tlog.error(\"velocity init failed, because: {}\", e, e);\n \t\t\t}\n \t\t}\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b9eaca3c48aed0da260b962cd670e7754b3c6442",
            "date": "2025-01-14T19:59:44Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "60f3a26f15be46956f16cb1751737b3823476057",
            "date": "2025-01-09T12:04:59Z",
            "author_login": "dkayiwa"
          },
          {
            "sha": "645af20508515282b49858bba460629e74bf1418",
            "date": "2025-01-07T19:34:38Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "02372e8a06597565ea749150ae6b8c094774ea65",
            "date": "2024-12-20T12:00:29Z",
            "author_login": "dkayiwa"
          },
          {
            "sha": "fc20f21306feed3d75e4766018b1681e464cbac5",
            "date": "2024-12-20T11:54:07Z",
            "author_login": "dkayiwa"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "OpenMRS is a patient-based medical record system focusing on giving providers a free customizable electronic medical record system. Affected versions are subject to arbitrary file exfiltration due to failure to sanitize request when satisfying GET requests for `/images` & `/initfilter/scripts`. This can allow an attacker to access any file on a system running OpenMRS that is accessible to the user id OpenMRS is running under. Affected implementations should update to the latest patch version of OpenMRS Core for the minor version they use. These are: 2.1.5, 2.2.1, 2.3.5, 2.4.5 and 2.5.3. As a general rule, this vulnerability is already mitigated by Tomcat's URL normalization in Tomcat 7.0.28+. Users on older versions of Tomcat should consider upgrading their Tomcat instance as well as their OpenMRS instance.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-22T23:15:11.400",
    "last_modified": "2024-11-21T06:48:55.907",
    "fix_date": "2022-01-28T20:58:59Z"
  },
  "references": [
    {
      "url": "https://github.com/openmrs/openmrs-core/blob/ee3373a7a775bfdfa263e2e912c72e64342fb4f0/web/src/main/java/org/openmrs/web/filter/StartupFilter.java#L123",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openmrs/openmrs-core/commit/db8454bf19a092a78d53ee4dba2af628b730a6e7#diff-7c64d9f61d4d4e2ddba92920d7cf63ec96091b308d43904956b3846bc0c26d80R128",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openmrs/openmrs-core/security/advisories/GHSA-8rgr-ww69-jv65",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lgtm.com/projects/g/openmrs/openmrs-core/snapshot/fb1335c925ca4c94be5a546707b90d2c1efa4dcc/files/web/src/main/java/org/openmrs/web/filter/StartupFilter.java#L123",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openmrs/openmrs-core/blob/ee3373a7a775bfdfa263e2e912c72e64342fb4f0/web/src/main/java/org/openmrs/web/filter/StartupFilter.java#L123",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openmrs/openmrs-core/commit/db8454bf19a092a78d53ee4dba2af628b730a6e7#diff-7c64d9f61d4d4e2ddba92920d7cf63ec96091b308d43904956b3846bc0c26d80R128",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openmrs/openmrs-core/security/advisories/GHSA-8rgr-ww69-jv65",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lgtm.com/projects/g/openmrs/openmrs-core/snapshot/fb1335c925ca4c94be5a546707b90d2c1efa4dcc/files/web/src/main/java/org/openmrs/web/filter/StartupFilter.java#L123",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.741292",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openmrs-core",
    "owner": "openmrs",
    "created_at": "2012-07-26T04:54:29Z",
    "updated_at": "2025-01-14T19:59:58Z",
    "pushed_at": "2025-01-14T19:59:53Z",
    "size": 237901,
    "stars": 1446,
    "forks": 3703,
    "open_issues": 40,
    "watchers": 1446,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 8616823,
      "JavaScript": 41203,
      "XSLT": 32167,
      "CSS": 24072,
      "Shell": 22663,
      "HTML": 7881,
      "Dockerfile": 5854
    },
    "commit_activity": {
      "total_commits_last_year": 260,
      "avg_commits_per_week": 5.0,
      "days_active_last_year": 143
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T21:18:40.445044"
  }
}