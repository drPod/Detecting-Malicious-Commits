{
  "cve_id": "CVE-2022-23647",
  "github_data": {
    "repository": "PrismJS/prism",
    "fix_commit": "e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
    "related_commits": [
      "e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
      "e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
      "commit_date": "2022-02-16T17:35:51Z",
      "author": {
        "login": "at055612",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Command Line: Escape markup in command line output (#3341)",
        "length": 58,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 6,
        "additions": 4,
        "deletions": 2
      },
      "files": [
        {
          "filename": "plugins/command-line/prism-command-line.js",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -143,8 +143,10 @@\n \t\tfor (var i = 0, l = codeLines.length; i < l; i++) {\n \t\t\t// Add spans to allow distinction of input/output text for styling\n \t\t\tif (outputLines.hasOwnProperty(i)) {\n+\t\t\t\t// outputLines were removed from codeLines so missed out on escaping\n+\t\t\t\t// of markup so do it here.\n \t\t\t\tcodeLines[i] = '<span class=\"token output\">'\n-\t\t\t\t\t+ outputLines[i] + '</span>';\n+\t\t\t\t\t+ Prism.util.encode(outputLines[i]) + '</span>';\n \t\t\t} else {\n \t\t\t\tcodeLines[i] = '<span class=\"token command\">'\n \t\t\t\t\t+ codeLines[i] + '</span>';"
        },
        {
          "filename": "plugins/command-line/prism-command-line.min.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-!function(){if(\"undefined\"!=typeof Prism&&\"undefined\"!=typeof document){var v=/(?:^|\\s)command-line(?:\\s|$)/,g=\"command-line-prompt\",p=\"\".startsWith?function(e,t){return e.startsWith(t)}:function(e,t){return 0===e.indexOf(t)},d=\"\".endsWith?function(e,t){return e.endsWith(t)}:function(e,t){var n=e.length;return e.substring(n-t.length,n)===t};Prism.hooks.add(\"before-highlight\",function(e){var t=N(e);if(!t.complete&&e.code){var n=e.element.parentElement;if(n&&/pre/i.test(n.nodeName)&&(v.test(n.className)||v.test(e.element.className))){var a=e.element.querySelector(\".\"+g);a&&a.remove();var i=e.code.split(\"\\n\"),r=t.continuationLineIndicies=new Set,s=n.getAttribute(\"data-continuation-str\");if(s&&1<i.length)for(var o=1;o<i.length;o++)i.hasOwnProperty(o-1)&&d(i[o-1],s)&&r.add(o);t.numberOfLines=i.length;var l=t.outputLines=[],m=n.getAttribute(\"data-output\"),u=n.getAttribute(\"data-filter-output\");if(null!==m)m.split(\",\").forEach(function(e){var t=e.split(\"-\"),n=parseInt(t[0],10),a=2===t.length?parseInt(t[1],10):n;if(!isNaN(n)&&!isNaN(a)){n<1&&(n=1),a>i.length&&(a=i.length),a--;for(var r=--n;r<=a;r++)l[r]=i[r],i[r]=\"\"}});else if(u)for(var c=0;c<i.length;c++)p(i[c],u)&&(l[c]=i[c].slice(u.length),i[c]=\"\");e.code=i.join(\"\\n\")}else t.complete=!0}else t.complete=!0}),Prism.hooks.add(\"before-insert\",function(e){var t=N(e);if(!t.complete){for(var n=e.highlightedCode.split(\"\\n\"),a=t.outputLines||[],r=0,i=n.length;r<i;r++)a.hasOwnProperty(r)?n[r]='<span class=\"token output\">'+a[r]+\"</span>\":n[r]='<span class=\"token command\">'+n[r]+\"</span>\";e.highlightedCode=n.join(\"\\n\")}}),Prism.hooks.add(\"complete\",function(e){if(function(e){return\"command-line\"in(e.vars=e.vars||{})}(e)){var t=N(e);if(!t.complete){var n=e.element.parentElement;v.test(e.element.className)&&(e.element.className=e.element.className.replace(v,\" \")),v.test(n.className)||(n.className+=\" command-line\");var a,r=\"\",i=t.numberOfLines||0,s=h(\"data-prompt\",\"\");if(\"\"!==s)a='<span data-prompt=\"'+s+'\"></span>';else a='<span data-user=\"'+h(\"data-user\",\"user\")+'\" data-host=\"'+h(\"data-host\",\"localhost\")+'\"></span>';for(var o=t.continuationLineIndicies||new Set,l='<span data-continuation-prompt=\"'+h(\"data-continuation-prompt\",\">\")+'\"></span>',m=0;m<i;m++)o.has(m)?r+=l:r+=a;var u=document.createElement(\"span\");u.className=g,u.innerHTML=r;for(var c=t.outputLines||[],p=0,d=c.length;p<d;p++)if(c.hasOwnProperty(p)){var f=u.children[p];f.removeAttribute(\"data-user\"),f.removeAttribute(\"data-host\"),f.removeAttribute(\"data-prompt\")}e.element.insertBefore(u,e.element.firstChild),t.complete=!0}}function h(e,t){return(n.getAttribute(e)||t).replace(/\"/g,\"&quot\")}})}function N(e){var t=e.vars=e.vars||{};return t[\"command-line\"]=t[\"command-line\"]||{}}}();\n\\ No newline at end of file\n+!function(){if(\"undefined\"!=typeof Prism&&\"undefined\"!=typeof document){var v=/(?:^|\\s)command-line(?:\\s|$)/,g=\"command-line-prompt\",p=\"\".startsWith?function(e,t){return e.startsWith(t)}:function(e,t){return 0===e.indexOf(t)},d=\"\".endsWith?function(e,t){return e.endsWith(t)}:function(e,t){var n=e.length;return e.substring(n-t.length,n)===t};Prism.hooks.add(\"before-highlight\",function(e){var t=N(e);if(!t.complete&&e.code){var n=e.element.parentElement;if(n&&/pre/i.test(n.nodeName)&&(v.test(n.className)||v.test(e.element.className))){var a=e.element.querySelector(\".\"+g);a&&a.remove();var i=e.code.split(\"\\n\"),r=t.continuationLineIndicies=new Set,s=n.getAttribute(\"data-continuation-str\");if(s&&1<i.length)for(var o=1;o<i.length;o++)i.hasOwnProperty(o-1)&&d(i[o-1],s)&&r.add(o);t.numberOfLines=i.length;var l=t.outputLines=[],m=n.getAttribute(\"data-output\"),u=n.getAttribute(\"data-filter-output\");if(null!==m)m.split(\",\").forEach(function(e){var t=e.split(\"-\"),n=parseInt(t[0],10),a=2===t.length?parseInt(t[1],10):n;if(!isNaN(n)&&!isNaN(a)){n<1&&(n=1),a>i.length&&(a=i.length),a--;for(var r=--n;r<=a;r++)l[r]=i[r],i[r]=\"\"}});else if(u)for(var c=0;c<i.length;c++)p(i[c],u)&&(l[c]=i[c].slice(u.length),i[c]=\"\");e.code=i.join(\"\\n\")}else t.complete=!0}else t.complete=!0}),Prism.hooks.add(\"before-insert\",function(e){var t=N(e);if(!t.complete){for(var n=e.highlightedCode.split(\"\\n\"),a=t.outputLines||[],r=0,i=n.length;r<i;r++)a.hasOwnProperty(r)?n[r]='<span class=\"token output\">'+Prism.util.encode(a[r])+\"</span>\":n[r]='<span class=\"token command\">'+n[r]+\"</span>\";e.highlightedCode=n.join(\"\\n\")}}),Prism.hooks.add(\"complete\",function(e){if(function(e){return\"command-line\"in(e.vars=e.vars||{})}(e)){var t=N(e);if(!t.complete){var n=e.element.parentElement;v.test(e.element.className)&&(e.element.className=e.element.className.replace(v,\" \")),v.test(n.className)||(n.className+=\" command-line\");var a,r=\"\",i=t.numberOfLines||0,s=h(\"data-prompt\",\"\");if(\"\"!==s)a='<span data-prompt=\"'+s+'\"></span>';else a='<span data-user=\"'+h(\"data-user\",\"user\")+'\" data-host=\"'+h(\"data-host\",\"localhost\")+'\"></span>';for(var o=t.continuationLineIndicies||new Set,l='<span data-continuation-prompt=\"'+h(\"data-continuation-prompt\",\">\")+'\"></span>',m=0;m<i;m++)o.has(m)?r+=l:r+=a;var u=document.createElement(\"span\");u.className=g,u.innerHTML=r;for(var c=t.outputLines||[],p=0,d=c.length;p<d;p++)if(c.hasOwnProperty(p)){var f=u.children[p];f.removeAttribute(\"data-user\"),f.removeAttribute(\"data-host\"),f.removeAttribute(\"data-prompt\")}e.element.insertBefore(u,e.element.firstChild),t.complete=!0}}function h(e,t){return(n.getAttribute(e)||t).replace(/\"/g,\"&quot\")}})}function N(e){var t=e.vars=e.vars||{};return t[\"command-line\"]=t[\"command-line\"]||{}}}();\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "59e5a3471377057de1f401ba38337aca27b80e03",
            "date": "2022-08-23T10:41:49Z",
            "author_login": "RunDevelopment"
          },
          {
            "sha": "cd080f25ba12ef792d11468f5633fbbb23fd390e",
            "date": "2022-08-23T10:36:53Z",
            "author_login": "RunDevelopment"
          },
          {
            "sha": "751664bd300b16b7b715e544de5a164b91b03075",
            "date": "2022-08-23T10:23:49Z",
            "author_login": "RunDevelopment"
          },
          {
            "sha": "248f6abb7074ff1dc48d289ea52ce99bd43eccb1",
            "date": "2022-08-23T10:15:45Z",
            "author_login": "RunDevelopment"
          },
          {
            "sha": "098e30008eefc45874f5a32b4ce7141534060890",
            "date": "2022-08-23T08:58:45Z",
            "author_login": "RunDevelopment"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "Prism is a syntax highlighting library. Starting with version 1.14.0 and prior to version 1.27.0, Prism's command line plugin can be used by attackers to achieve a cross-site scripting attack. The command line plugin did not properly escape its output, leading to the input text being inserted into the DOM as HTML code. Server-side usage of Prism is not impacted. Websites that do not use the Command Line plugin are also not impacted. This bug has been fixed in v1.27.0. As a workaround, do not use the command line plugin on untrusted inputs, or sanitize all code blocks (remove all HTML code text) from all code blocks that use the command line plugin.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-02-18T15:15:07.740",
    "last_modified": "2024-11-21T06:49:00.820",
    "fix_date": "2022-02-16T17:35:51Z"
  },
  "references": [
    {
      "url": "https://github.com/PrismJS/prism/commit/e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrismJS/prism/pull/3341",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrismJS/prism/security/advisories/GHSA-3949-f494-cm99",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrismJS/prism/commit/e002e78c343154e1c0ddf9d6a0bb85689e1a5c7c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrismJS/prism/pull/3341",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/PrismJS/prism/security/advisories/GHSA-3949-f494-cm99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.729561",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "prism",
    "owner": "PrismJS",
    "created_at": "2012-07-10T19:47:14Z",
    "updated_at": "2025-01-25T08:47:50Z",
    "pushed_at": "2024-08-19T21:27:51Z",
    "size": 13247,
    "stars": 12407,
    "forks": 1305,
    "open_issues": 420,
    "watchers": 12407,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 1059806,
      "HTML": 235833,
      "CSS": 50284,
      "C": 543,
      "Terra": 422,
      "C++": 306,
      "Shell": 244,
      "Awk": 106
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:07:09.641533"
  }
}