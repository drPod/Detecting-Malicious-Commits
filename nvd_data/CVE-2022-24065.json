{
  "cve_id": "CVE-2022-24065",
  "github_data": {
    "repository": "cookiecutter/cookiecutter",
    "fix_commit": "fdffddb31fd2b46344dfa317531ff155e7999f77",
    "related_commits": [
      "fdffddb31fd2b46344dfa317531ff155e7999f77",
      "fdffddb31fd2b46344dfa317531ff155e7999f77"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "fdffddb31fd2b46344dfa317531ff155e7999f77",
      "commit_date": "2022-06-01T05:34:38Z",
      "author": {
        "login": "jensens",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #1689 from cookiecutter/sanitize-mercurial-checkout",
        "length": 126,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 34,
        "additions": 24,
        "deletions": 10
      },
      "files": [
        {
          "filename": "HISTORY.md",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -2,6 +2,8 @@\n \n History is important, but our current roadmap can be found [here](https://github.com/cookiecutter/cookiecutter/projects)\n \n+## 2.1.1 (unreleased)\n+\n ## 2.1.0 (2022-05-30)\n \n ### Changes"
        },
        {
          "filename": "cookiecutter/vcs.py",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -98,22 +98,26 @@ def clone(repo_url, checkout=None, clone_to_dir='.', no_input=False):\n                 stderr=subprocess.STDOUT,\n             )\n             if checkout is not None:\n+                checkout_params = [checkout]\n+                # Avoid Mercurial \"--config\" and \"--debugger\" injection vulnerability\n+                if repo_type == \"hg\":\n+                    checkout_params.insert(0, \"--\")\n                 subprocess.check_output(  # nosec\n-                    [repo_type, 'checkout', checkout],\n+                    [repo_type, 'checkout', *checkout_params],\n                     cwd=repo_dir,\n                     stderr=subprocess.STDOUT,\n                 )\n         except subprocess.CalledProcessError as clone_error:\n             output = clone_error.output.decode('utf-8')\n             if 'not found' in output.lower():\n                 raise RepositoryNotFound(\n-                    'The repository {} could not be found, '\n-                    'have you made a typo?'.format(repo_url)\n+                    f'The repository {repo_url} could not be found, '\n+                    'have you made a typo?'\n                 )\n             if any(error in output for error in BRANCH_ERRORS):\n                 raise RepositoryCloneFailed(\n-                    'The {} branch of repository {} could not found, '\n-                    'have you made a typo?'.format(checkout, repo_url)\n+                    f'The {checkout} branch of repository '\n+                    f'{repo_url} could not found, have you made a typo?'\n                 )\n             logger.error('git clone failed with error: %s', output)\n             raise"
        },
        {
          "filename": "tests/vcs/test_clone.py",
          "status": "modified",
          "additions": 13,
          "deletions": 5,
          "patch": "@@ -122,8 +122,16 @@ def test_clone_should_invoke_vcs_command(\n     mock_subprocess.assert_any_call(\n         [repo_type, 'clone', repo_url], cwd=str(clone_dir), stderr=subprocess.STDOUT\n     )\n+\n+    branch_info = [branch]\n+    # We sanitize branch information for Mercurial\n+    if repo_type == \"hg\":\n+        branch_info.insert(0, \"--\")\n+\n     mock_subprocess.assert_any_call(\n-        [repo_type, 'checkout', branch], cwd=expected_repo_dir, stderr=subprocess.STDOUT\n+        [repo_type, 'checkout', *branch_info],\n+        cwd=expected_repo_dir,\n+        stderr=subprocess.STDOUT,\n     )\n \n \n@@ -151,8 +159,8 @@ def test_clone_handles_repo_typo(mocker, clone_dir, error_message):\n         vcs.clone(repository_url, clone_to_dir=str(clone_dir), no_input=True)\n \n     assert str(err.value) == (\n-        'The repository {} could not be found, have you made a typo?'\n-    ).format(repository_url)\n+        f'The repository {repository_url} could not be found, have you made a typo?'\n+    )\n \n \n @pytest.mark.parametrize(\n@@ -182,8 +190,8 @@ def test_clone_handles_branch_typo(mocker, clone_dir, error_message):\n \n     assert str(err.value) == (\n         'The unknown_branch branch of repository '\n-        '{} could not found, have you made a typo?'\n-    ).format(repository_url)\n+        f'{repository_url} could not found, have you made a typo?'\n+    )\n \n \n def test_clone_unknown_subprocess_error(mocker, clone_dir):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b4451231809fb9e4fc2a1e95d433cb030e4b9e06",
            "date": "2024-07-09T09:21:15Z",
            "author_login": "danieleades"
          },
          {
            "sha": "5876a46f05617b808d69586f44dceaee2758ef86",
            "date": "2024-07-04T07:29:50Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b2d789653fc30458c457eb4def2df6965132a078",
            "date": "2024-07-04T07:24:22Z",
            "author_login": "danieleades"
          },
          {
            "sha": "f49dcf975ef0390cd19c8f246a42638a1c8e8a42",
            "date": "2024-06-06T07:28:36Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "7d3d1812444a5cb0516a5f34fdb0ac9fe362ad7f",
            "date": "2024-06-05T17:21:37Z",
            "author_login": "kurtmckee"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "The package cookiecutter before 2.1.1 are vulnerable to Command Injection via hg argument injection. When calling the cookiecutter function from Python code with the checkout parameter, it is passed to the hg checkout command in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-06-08T08:15:07.237",
    "last_modified": "2024-11-21T06:49:45.573",
    "fix_date": "2022-06-01T05:34:38Z"
  },
  "references": [
    {
      "url": "https://github.com/cookiecutter/cookiecutter/commit/fdffddb31fd2b46344dfa317531ff155e7999f77",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cookiecutter/cookiecutter/releases/tag/2.1.1",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/G5TXC4JYTNGOUFMCXPZ6QKWEZN3URTAK/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HQKWT7SGFDCUPPLDIELTN7FVTHWDL5YK/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://snyk.io/vuln/SNYK-PYTHON-COOKIECUTTER-2414281",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cookiecutter/cookiecutter/commit/fdffddb31fd2b46344dfa317531ff155e7999f77",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cookiecutter/cookiecutter/releases/tag/2.1.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/G5TXC4JYTNGOUFMCXPZ6QKWEZN3URTAK/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HQKWT7SGFDCUPPLDIELTN7FVTHWDL5YK/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://snyk.io/vuln/SNYK-PYTHON-COOKIECUTTER-2414281",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.414921",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "cookiecutter",
    "owner": "cookiecutter",
    "created_at": "2013-07-14T18:31:22Z",
    "updated_at": "2025-01-26T07:20:32Z",
    "pushed_at": "2025-01-20T23:12:56Z",
    "size": 3213,
    "stars": 22959,
    "forks": 2029,
    "open_issues": 253,
    "watchers": 22959,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable/1.7.x"
    ],
    "languages": {
      "Python": 319499,
      "Makefile": 2539,
      "Jinja": 588,
      "Shell": 353,
      "Batchfile": 116
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-26T08:04:03.666894"
  }
}