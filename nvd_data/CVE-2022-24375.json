{
  "cve_id": "CVE-2022-24375",
  "github_data": {
    "repository": "node-opcua/node-opcua",
    "fix_commit": "3fd46ec156e7718a506be41f3916310b6bdd0407",
    "related_commits": [
      "3fd46ec156e7718a506be41f3916310b6bdd0407",
      "7b5044b3f5866fbedc3efabd05e407352c07bd2f",
      "3fd46ec156e7718a506be41f3916310b6bdd0407",
      "7b5044b3f5866fbedc3efabd05e407352c07bd2f"
    ],
    "patch_url": "https://github.com/node-opcua/node-opcua/commit/3fd46ec156e7718a506be41f3916310b6bdd0407.patch",
    "fix_commit_details": {
      "sha": "3fd46ec156e7718a506be41f3916310b6bdd0407",
      "commit_date": "2022-08-12T09:37:50Z",
      "author": {
        "login": "erossignon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "server: fix Subscription.modify assert",
        "length": 38,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 80,
        "additions": 74,
        "deletions": 6
      },
      "files": [
        {
          "filename": "packages/node-opcua-server/source/server_subscription.ts",
          "status": "modified",
          "additions": 9,
          "deletions": 6,
          "patch": "@@ -629,7 +629,7 @@ export class Subscription extends EventEmitter {\n         this.messageSent = false;\n \n         this.timerId = null;\n-        this._start_timer();\n+        this._start_timer({ firstTime: true });\n \n         debugLog(chalk.green(`creating subscription ${this.id}`));\n \n@@ -686,7 +686,7 @@ export class Subscription extends EventEmitter {\n             // todo\n         }\n         this._stop_timer();\n-        this._start_timer();\n+        this._start_timer({ firstTime: false });\n     }\n \n     /**\n@@ -732,7 +732,7 @@ export class Subscription extends EventEmitter {\n     public increaseLifeTimeCounter(): void {\n         this._life_time_counter += 1;\n         if (this._life_time_counter >= this.lifeTimeCount) {\n-           this.emit(\"lifeTimeExpired\");\n+            this.emit(\"lifeTimeExpired\");\n         }\n         this.emit(\"lifeTimeCounterChanged\", this._life_time_counter);\n     }\n@@ -1458,7 +1458,7 @@ export class Subscription extends EventEmitter {\n         }\n     }\n \n-    private _start_timer() {\n+    private _start_timer({ firstTime }: { firstTime: boolean }) {\n         debugLog(\n             chalk.bgWhite.blue(\"Subscription#_start_timer  subscriptionId=\"),\n             this.id,\n@@ -1478,8 +1478,11 @@ export class Subscription extends EventEmitter {\n         // make sure that a keep-alive Message will be send at the end of the first publishing cycle\n         // if there are no Notifications ready.\n         this._keep_alive_counter = 0; // this.maxKeepAliveCount;\n-        assert(this.messageSent === false);\n-        assert(this.state === SubscriptionState.CREATING);\n+\n+        if (firstTime) {\n+            assert(this.messageSent === false);\n+            assert(this.state === SubscriptionState.CREATING);\n+        }\n \n         assert(this.publishingInterval >= Subscription.minimumPublishingInterval);\n         this.timerId = setInterval(this._tick.bind(this), this.publishingInterval);"
        },
        {
          "filename": "packages/node-opcua-server/test/test_subscription.js",
          "status": "modified",
          "additions": 65,
          "deletions": 0,
          "patch": "@@ -1062,6 +1062,71 @@ describe(\"Subscriptions\", function () {\n         subscription.dispose();\n     });\n \n+    it(\"T17 - should be possible to  modify subscription publishing interval\", function(){\n+        // pretend the client has sent many pending PublishRequests\n+        fake_publish_engine.pendingPublishRequestCount = 1000;\n+\n+        /**\n+         * When a Subscription is created, the first Message is sent at the end of the first publishing cycle to\n+         * inform the Client that the Subscription is operational. A Notification Message is sent if there are\n+         * Notifications ready to be reported. If there are none, a keep-alive Message is sent instead that\n+         * contains a sequence number of 1, indicating that the first Notification Message has not yet been\n+         * sent. This is the only time a keep-alive Message is sent without waiting for the maximum keep-alive\n+         * count to be reached, as specified in (f) above.\n+         *\n+         */\n+        const subscription = new Subscription({\n+            publishingInterval: 1000,\n+            maxKeepAliveCount: 20,\n+            //\n+            publishEngine: fake_publish_engine,\n+            globalCounter: { totalMonitoredItemCount: 0 },\n+            serverCapabilities: { maxMonitoredItems: 10000, maxMonitoredItemsPerSubscription: 1000 }\n+        });\n+        const monitoredItem = add_mock_monitored_item(subscription);\n+\n+        // pretend that we already have notification messages\n+        // a notification finally arrived !\n+        monitoredItem.simulateMonitoredItemAddingNotification();\n+\n+        const notification_event_spy = sinon.spy();\n+        const keepalive_event_spy = sinon.spy();\n+        const expire_event_spy = sinon.spy();\n+\n+        subscription.on(\"notification\", notification_event_spy);\n+        subscription.on(\"keepalive\", keepalive_event_spy);\n+        subscription.on(\"expired\", expire_event_spy);\n+\n+        test.clock.tick(200);\n+        keepalive_event_spy.callCount.should.equal(0);\n+        notification_event_spy.callCount.should.eql(0);\n+\n+        test.clock.tick(1000);\n+        keepalive_event_spy.callCount.should.equal(0);\n+        notification_event_spy.callCount.should.eql(1);\n+\n+        test.clock.tick(1000);\n+        keepalive_event_spy.callCount.should.equal(0);\n+        notification_event_spy.callCount.should.eql(1);\n+\n+        monitoredItem.simulateMonitoredItemAddingNotification();\n+        // now change the publishin Intervale\n+        subscription.modify({ requestedPublishingInterval: 2000});\n+       \n+        test.clock.tick(1000);\n+        keepalive_event_spy.callCount.should.equal(0);\n+        notification_event_spy.callCount.should.eql(1);\n+\n+        test.clock.tick(1010);\n+        keepalive_event_spy.callCount.should.equal(0);\n+        notification_event_spy.callCount.should.eql(2);\n+\n+        subscription.terminate();\n+        subscription.dispose();\n+\n+    });\n+\n+\n     xit(\"closing a Subscription causes its MonitoredItems to be deleted. \", function () {\n         /** */\n     });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0042f95d7be6318ed22bc3dcfdbd4ea3084bd08a",
            "date": "2025-01-05T15:05:12Z",
            "author_login": "erossignon"
          },
          {
            "sha": "8354bc4a6cac073bacba405aa70797f16c56771a",
            "date": "2025-01-03T14:32:17Z",
            "author_login": "erossignon"
          },
          {
            "sha": "069823c62842ca68428b8f96d5df7e41d437ddb9",
            "date": "2025-01-03T13:56:05Z",
            "author_login": "erossignon"
          },
          {
            "sha": "2d128442b2dc19d4962259992a85c6ad998125ce",
            "date": "2025-01-03T13:54:51Z",
            "author_login": "erossignon"
          },
          {
            "sha": "f966ee4ce83c1012795fbf030d261df091c3c189",
            "date": "2025-01-03T13:53:29Z",
            "author_login": "erossignon"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple CloseSession requests with the deleteSubscription parameter equal to False.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-24T05:15:07.230",
    "last_modified": "2024-11-21T06:50:17.490",
    "fix_date": "2022-08-12T09:37:50Z"
  },
  "references": [
    {
      "url": "https://github.com/node-opcua/node-opcua/commit/3fd46ec156e7718a506be41f3916310b6bdd0407",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/node-opcua/node-opcua/commit/7b5044b3f5866fbedc3efabd05e407352c07bd2f",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/node-opcua/node-opcua/pull/1182",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988725",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/node-opcua/node-opcua/commit/3fd46ec156e7718a506be41f3916310b6bdd0407",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://github.com/node-opcua/node-opcua/commit/7b5044b3f5866fbedc3efabd05e407352c07bd2f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/node-opcua/node-opcua/pull/1182",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988725",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.288819",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "node-opcua",
    "owner": "node-opcua",
    "created_at": "2014-01-22T21:48:45Z",
    "updated_at": "2025-01-11T16:49:30Z",
    "pushed_at": "2025-01-05T16:27:24Z",
    "size": 44208,
    "stars": 1505,
    "forks": 485,
    "open_issues": 39,
    "watchers": 1505,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 10516428,
      "JavaScript": 1930816,
      "XSLT": 5379,
      "Shell": 4981,
      "Batchfile": 2277,
      "Makefile": 1377,
      "Dockerfile": 462
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:31:52.054193"
  }
}