{
  "cve_id": "CVE-2022-24728",
  "github_data": {
    "repository": "ckeditor/ckeditor4",
    "fix_commit": "d158413449692d920a778503502dcb22881bc949",
    "related_commits": [
      "d158413449692d920a778503502dcb22881bc949",
      "d158413449692d920a778503502dcb22881bc949"
    ],
    "patch_url": "https://github.com/ckeditor/ckeditor4/commit/d158413449692d920a778503502dcb22881bc949.patch",
    "fix_commit_details": {
      "sha": "d158413449692d920a778503502dcb22881bc949",
      "commit_date": "2022-02-08T16:35:34Z",
      "author": {
        "login": "Comandeer",
        "type": "User",
        "stats": {
          "total_commits": 2925,
          "average_weekly_commits": 4.051246537396122,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 290
        }
      },
      "commit_message": {
        "title": "Code refactoring.",
        "length": 17,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 26,
        "deletions": 14
      },
      "files": [
        {
          "filename": "core/htmldataprocessor.js",
          "status": "modified",
          "additions": 26,
          "deletions": 14,
          "patch": "@@ -50,17 +50,18 @@\n \t\thtmlFilter.addRules( createBogusAndFillerRules( editor, 'html' ), { applyToAll: true } );\n \n \t\teditor.on( 'toHtml', function( evt ) {\n-\t\t\tvar evtData = evt.data,\n+\t\t\tvar randomNumber = generateRandomNumber(),\n+\t\t\t\tevtData = evt.data,\n \t\t\t\tdata = evtData.dataValue,\n \t\t\t\tfixBodyTag;\n \n \t\t\t// Before we start protecting markup, make sure there are no externally injected\n \t\t\t// protection keywords.\n-\t\t\tdata = removeReservedKeywords( data );\n+\t\t\tdata = removeReservedKeywords( data, randomNumber );\n \n \t\t\t// The source data is already HTML, but we need to clean\n \t\t\t// it up and apply the filter.\n-\t\t\tdata = protectSource( data, editor );\n+\t\t\tdata = protectSource( data, editor, randomNumber );\n \n \t\t\t// Protect content of textareas. (https://dev.ckeditor.com/ticket/9995)\n \t\t\t// Do this before protecting attributes to avoid breaking:\n@@ -70,7 +71,7 @@\n \t\t\t// Before anything, we must protect the URL attributes as the\n \t\t\t// browser may changing them when setting the innerHTML later in\n \t\t\t// the code.\n-\t\t\tdata = protectAttributes( data );\n+\t\t\tdata = protectAttributes( data, randomNumber );\n \n \t\t\t// Protect elements than can't be set inside a DIV. E.g. IE removes\n \t\t\t// style tags from innerHTML. (https://dev.ckeditor.com/ticket/3710)\n@@ -90,7 +91,7 @@\n \n \t\t\t// There are attributes which may execute JavaScript code inside fixBin.\n \t\t\t// Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https://dev.ckeditor.com/ticket/10)\n-\t\t\tdata = protectInsecureAttributes( data );\n+\t\t\tdata = protectInsecureAttributes( data, randomNumber );\n \n \t\t\tvar fixBin = evtData.context || editor.editable().getName(),\n \t\t\t\tisPre;\n@@ -110,7 +111,7 @@\n \t\t\tdata = el.getHtml().substr( 1 );\n \n \t\t\t// Restore shortly protected attribute names.\n-\t\t\tdata = data.replace( new RegExp( 'data-cke-' + CKEDITOR.rnd + '-', 'ig' ), '' );\n+\t\t\tdata = data.replace( new RegExp( 'data-cke-' + randomNumber + '-', 'ig' ), '' );\n \n \t\t\tisPre && ( data = data.replace( /^<pre>|<\\/pre>$/gi, '' ) );\n \n@@ -838,13 +839,13 @@\n \n \tvar protectSelfClosingRegex = /<cke:(param|embed)([^>]*?)\\/?>(?!\\s*<\\/cke:\\1)/gi;\n \n-\tfunction protectAttributes( html ) {\n+\tfunction protectAttributes( html, randomNumber ) {\n \t\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\n \t\t\treturn '<' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\n \t\t\t\t// Avoid corrupting the inline event attributes (https://dev.ckeditor.com/ticket/7243).\n \t\t\t\t// We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https://dev.ckeditor.com/ticket/5218)\n \t\t\t\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( 'data-cke-saved-' + attrName ) == -1 )\n-\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + CKEDITOR.rnd + '-' + fullAttr;\n+\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + randomNumber + '-' + fullAttr;\n \n \t\t\t\treturn fullAttr;\n \t\t\t} ) + '>';\n@@ -897,8 +898,8 @@\n \t// * opening tags - e.g. `<onfoo`,\n \t// * closing tags - e.g. </onfoo> (tested in \"false positive 1\"),\n \t// * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\n-\tfunction protectInsecureAttributes( html ) {\n-\t\treturn html.replace( /([^a-z0-9<\\-])(on\\w{3,})(?!>)/gi, '$1data-cke-' + CKEDITOR.rnd + '-$2' );\n+\tfunction protectInsecureAttributes( html, randomNumber ) {\n+\t\treturn html.replace( /([^a-z0-9<\\-])(on\\w{3,})(?!>)/gi, '$1data-cke-' + randomNumber + '-$2' );\n \t}\n \n \tfunction unprotectRealComments( html ) {\n@@ -917,11 +918,11 @@\n \t\t} );\n \t}\n \n-\tfunction protectSource( data, editor ) {\n+\tfunction protectSource( data, editor, randomNumber ) {\n \t\tvar protectedHtml = [],\n \t\t\tprotectRegexes = editor.config.protectedSource,\n \t\t\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\n-\t\t\ttempRegex = /<\\!--\\{cke_temp(comment)?\\}(\\d*?)-->/g;\n+\t\t\ttempRegex = new RegExp('<\\\\!--\\\\{cke_temp_' + randomNumber + '(comment)?\\\\}(\\\\d*?)-->', 'g' );\n \n \t\tvar regexes = [\n \t\t\t// Script tags will also be forced to be protected, otherwise\n@@ -940,7 +941,7 @@\n \t\t// Note that we use a different tag for comments, as we need to\n \t\t// transform them when applying filters.\n \t\tdata = data.replace( ( /<!--[\\s\\S]*?-->/g ), function( match ) {\n-\t\t\treturn '<!--{cke_tempcomment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\treturn '<!--{cke_temp_' + randomNumber + 'comment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t} );\n \n \t\tfor ( var i = 0; i < regexes.length; i++ ) {\n@@ -951,7 +952,8 @@\n \t\t\t\t} );\n \n \t\t\t\t// Avoid protecting over protected, e.g. /\\{.*?\\}/\n-\t\t\t\treturn ( /cke_temp(comment)?/ ).test( match ) ? match : '<!--{cke_temp}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\t\treturn ( tempRegex ).test( match ) ? match : '<!--{cke_temp_' + randomNumber + '}' +\n+\t\t\t\t\t( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t\t} );\n \t\t}\n \t\tdata = data.replace( tempRegex, function( $, isComment, id ) {\n@@ -1107,6 +1109,16 @@\n \t\t\t};\n \t\t}\n \t} )();\n+\n+\tfunction generateRandomNumber() {\n+\t\tvar cryptoApi = window.crypto || window.msCrypto;\n+\n+\t\tif ( cryptoApi ) {\n+\t\t\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\n+\t\t}\n+\n+\t\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\n+\t}\n } )();\n \n /**"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "82796d03d0ebbe34d48f3b65c6dde27107812a51",
            "date": "2024-08-21T07:39:31Z",
            "author_login": "jacekbogdanski"
          },
          {
            "sha": "c40e7a3193309108d5ef90b7dac92066cfd52aa0",
            "date": "2024-08-21T07:12:23Z",
            "author_login": "jacekbogdanski"
          },
          {
            "sha": "aa9e5e1780101aebff48de0427d8c6547d71dab1",
            "date": "2024-08-21T07:11:35Z",
            "author_login": "jacekbogdanski"
          },
          {
            "sha": "3215349022971fb8dddaf46f183152e0ce5d4d99",
            "date": "2024-08-21T07:05:13Z",
            "author_login": "jacekbogdanski"
          },
          {
            "sha": "ac2d36d1acd9447fa3fdcc871bccef95e632d6f9",
            "date": "2024-08-20T09:39:22Z",
            "author_login": "jacekbogdanski"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "CKEditor4 is an open source what-you-see-is-what-you-get HTML editor. A vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4 prior to version 4.18.0. The vulnerability allows someone to inject malformed HTML bypassing content sanitization, which could result in executing JavaScript code. This problem has been patched in version 4.18.0. There are currently no known workarounds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-16T16:15:10.907",
    "last_modified": "2024-11-21T06:50:57.820",
    "fix_date": "2022-02-08T16:35:34Z"
  },
  "references": [
    {
      "url": "https://ckeditor.com/cke4/release/CKEditor-4.18.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ckeditor/ckeditor4/commit/d158413449692d920a778503502dcb22881bc949",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-4fc4-4p5g-6w89",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VR76VBN5GW5QUBJFHVXRX36UZ6YTCMW6/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WOZGMCYDB2OKKULFXZKM6V7JJW4ZZHJP/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.drupal.org/sa-core-2022-005",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2022.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://ckeditor.com/cke4/release/CKEditor-4.18.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ckeditor/ckeditor4/commit/d158413449692d920a778503502dcb22881bc949",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-4fc4-4p5g-6w89",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VR76VBN5GW5QUBJFHVXRX36UZ6YTCMW6/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WOZGMCYDB2OKKULFXZKM6V7JJW4ZZHJP/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.drupal.org/sa-core-2022-005",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.oracle.com/security-alerts/cpujul2022.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.029896",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ckeditor4",
    "owner": "ckeditor",
    "created_at": "2012-08-20T14:21:13Z",
    "updated_at": "2025-01-13T09:13:45Z",
    "pushed_at": "2024-08-21T07:42:32Z",
    "size": 138229,
    "stars": 5795,
    "forks": 2478,
    "open_issues": 1184,
    "watchers": 5795,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Rich Text Format": 179759729,
      "HTML": 25244344,
      "JavaScript": 11653753,
      "CSS": 291415,
      "Shell": 9678,
      "Python": 2436
    },
    "commit_activity": {
      "total_commits_last_year": 42,
      "avg_commits_per_week": 0.8076923076923077,
      "days_active_last_year": 15
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:55:32.768773"
  }
}