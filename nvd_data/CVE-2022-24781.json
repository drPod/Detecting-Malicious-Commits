{
  "cve_id": "CVE-2022-24781",
  "github_data": {
    "repository": "math-geon/Geon",
    "fix_commit": "005456d752d5434b60026edbc83b2665b8557d19",
    "related_commits": [
      "005456d752d5434b60026edbc83b2665b8557d19",
      "005456d752d5434b60026edbc83b2665b8557d19"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "005456d752d5434b60026edbc83b2665b8557d19",
      "commit_date": "2022-01-27T01:42:45Z",
      "author": {
        "login": "emanuelfranklyn",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Corrigido saida de usuarios crash do backend se o client manda algo que n\u00e3o seja do tipo string e implementa\u00e7\u00e3o inicial de contador de usuarios conectados",
        "length": 240,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 143,
        "additions": 127,
        "deletions": 16
      },
      "files": [
        {
          "filename": "backend/src/connectionhandler.js",
          "status": "modified",
          "additions": 43,
          "deletions": 2,
          "patch": "@@ -2,6 +2,7 @@ const RoomMaxPersons = 4;\n const UsableHomes = 37;\n \n const ActiveRooms = [];\n+const timeouts = [];\n const ids = [];\n \n function cleaner() {\n@@ -10,19 +11,25 @@ function cleaner() {\n     ActiveRooms.forEach((element, index) => {\n       element.Players.forEach((element2, index2) => {\n         if (!ids.includes(element2.Id)) {\n+          console.log('Disconnecting ' + element2.Id);\n+          console.log(ActiveRooms[index].Players[index2]);\n           ActiveRooms[index].Players.splice(index2, 1);\n           ActiveRooms[index].Players.forEach((element3) => {\n             element3.socket.emit('UserLeave', JSON.stringify({ RoomId: element.Id, UserLeaved: element2.Id }));\n           });\n+          element2.socket.emit('ConnectionFailed');\n+          element2.socket.disconnect(0);\n         }\n       });\n     });\n     ActiveRooms.forEach((element, index) => {\n       if (element.Players.length === 0) {\n+        console.log('Closing Room ' + element.Id);\n         ActiveRooms.splice(index, 1);\n       }\n     });\n-    // ids = [];\n+    console.log('Active Rooms: ' + ActiveRooms.length);\n+    console.log('Rooms: ', ActiveRooms);\n   }, 5000);\n }\n \n@@ -37,11 +44,27 @@ function getRandomString(length) {\n \n function reconnect(socket) {\n   console.log('Reconnect requested');\n+  ActiveRooms.forEach((element, index) => {\n+    element.Players.forEach((element2, index2) => {\n+      if (element2.socket === socket) {\n+        const timeouter = {};\n+        timeouter[element2.Id] = setTimeout(() => {\n+          console.log('Timeout ' + element2.Id);\n+          ids.splice(ids.indexOf(element2.Id), 1);\n+          timeouts.splice(timeouts.indexOf(timeouter), 1);\n+          cleaner();\n+        }, 15000);\n+        timeouts.push(timeouter);\n+        socket.broadcast.emit('Reconnecting', JSON.stringify({ RoomId: element.Id, UserId: element2.Id }));\n+      }\n+    });\n+  });\n   socket.broadcast.emit('reconnect');\n   cleaner();\n }\n \n function GenerateRoom(socket, Data) {\n+  if (typeof Data !== 'string') return;\n   var RoomScheme = {\n     Id: '',\n     Players: [],\n@@ -60,9 +83,19 @@ function GenerateRoom(socket, Data) {\n }\n \n function Updater(socket, Data) {\n+  if (typeof Data !== 'string') return;\n   Data = JSON.parse(Data);\n   var UserNewId = getRandomString(12);\n   console.log('Updating User ' + Data.oldUserId);\n+\n+  timeouts.forEach((element, index) => {\n+    if (element[Data.oldUserId]) {\n+      console.log('User Reconnected');\n+      clearTimeout(element[Data.oldUserId]);\n+      timeouts.splice(index, 1);\n+    }\n+  });\n+\n   ActiveRooms.forEach((element, index) => {\n     element.Players.forEach((element2, index2) => {\n       if (element2.Id === Data.oldUserId) {\n@@ -81,6 +114,12 @@ function verifyer(socket, executer, Data, UserIn) {\n   if (UserIn === undefined) {\n     UserIn = true;\n   }\n+  if (typeof Data !== 'string') {\n+    socket.emit('ConnectionFailed');\n+    socket.disconnect(0);\n+    socket.destroy();\n+    return;\n+  }\n   Data = JSON.parse(Data);\n   var RoomContainsUser = false;\n   var RoomExists = false;\n@@ -130,6 +169,7 @@ function LogUserIn(socket, Data) {\n       ActiveRooms[index].Players.forEach((element2) => {\n         element2.socket.emit('NewUser', JSON.stringify({ RoomId: element.Id, EnteredUserId: UserId }));\n         socket.emit('NewUser', JSON.stringify({ RoomId: element.Id, EnteredUserId: element2.Id }));\n+        socket.emit('UserNameInformation', JSON.stringify({ RoomId: element.Id, UserId: element2.Id, NickName: element2.Name }));\n       });\n     }\n   });\n@@ -170,7 +210,8 @@ function RegisterUserName(socket, Data) {\n         } else if (element2.Id === Data.UserId) {\n           ActiveRooms[index].Players[index2].Name = userName;\n         }\n-        socket.emit('UserNameInformation', JSON.stringify({ RoomId: element.Id, UserId: element2.Id, NickName: element2.Name }));\n+        console.log('Sending UserName to user: ' + element2.Id + ' ' + userName);\n+        element2.socket.emit('UserNameInformation', JSON.stringify({ RoomId: element.Id, UserId: Data.UserId, NickName: userName }));\n       });\n     }\n   });"
        },
        {
          "filename": "frontend/Geon.html",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -77,12 +77,13 @@ <h1 class=\"LoseTextDescription\">N\u00e3o foi dessa vez, tente novamente. ;-;</h1>\n                 <div class=\"CreditsScreen\" style=\"display: none\">\n                     <button class=\"BackToMainMenuFromCredits\" onclick=\"BackToMainMenu('Credits')\">Voltar</button>\n                     <h1 class=\"CreditsHeader\">Cr\u00e9ditos:</h1>\n-                    <span><a href=\"https://github.com/emanuelfranklyn\" target=\"_blank\" >Emanuel <a target=\"_blank\" href=\"https://www.talesgardem.com.br/\">Franklyn</a></a>: <a target=\"_blank\" class=\"EasterEgg\" href=\"https://www.youtube.com/watch?v=KvJHqk4IgGE\">Instrutor de programa\u00e7\u00e3o do jogo.</a></span><br/>\n+                    <span><a target=\"_blank\" href=\"https://github.com/emanuelfranklyn\">Emanuel <a target=\"_blank\" href=\"https://www.talesgardem.com.br/\">Franklyn</a></a>: <a target=\"_blank\" class=\"EasterEgg\" href=\"https://www.youtube.com/watch?v=KvJHqk4IgGE\">Instrutor de programa\u00e7\u00e3o do jogo.</a></span><br/>\n                     <span><a target=\"_blank\" href=\"https://twitter.com/wTOPwOficial\">Emmanuel Flor\u00eancio</a>: Game Designer, cria\u00e7\u00e3o de regras.</span><br/>\n                     <span><a target=\"_blank\" href=\"https://www.instagram.com/_filipin_s/\">Filipe Santos</a>: Confec\u00e7\u00e3o de imagens do jogo.</span><br/>\n                     <span><a target=\"_blank\" href=\"https://www.instagram.com/Gabriel._moreira_.05/\">Gabriel Moreira</a>: Programa\u00e7\u00e3o do jogo, revis\u00e3o de erros ortogr\u00e1ficos.</span><br/>\n                     <span><a target=\"_blank\" href=\"https://www.instagram.com/_joaofrancisco.f/\">Jo\u00e3o Francisco</a>: Revis\u00e3o de erros ortogr\u00e1ficos, cria\u00e7\u00e3o de regras.</span><br/>\n                     <span><a target=\"_blank\" href=\"https://www.instagram.com/ricardopfilho/\">Ricardo Filho</a>: Projeto Escrito, apresentador.</span><br/>\n+                    <span><a target=\"_blank\" href=\"https://github.com/LoboMetalurgico\">Lobo </a> <a target=\"_blank\" href=\"https://beta.allonsve.com/\">Metalurgico</a>: Contribuidor, progama\u00e7\u00e3o</span><br/>\n                 </div>\n                 <div class=\"ConnectingScreen\" style=\"display: none\">\n                     <h1 class=\"ConnectingText\">Conectando ao servidor...</h1>\n@@ -135,7 +136,7 @@ <h1 class=\"Title\">Regras:</h1>\n                         </form>      \n                     </div>\n                     <div class=\"PlayerInTheRoom\">\n-                        <p class=\"PlayerInTheRoomHeader\">Jogadores na sala:</p>\n+                        <p class=\"PlayerInTheRoomHeader\">Jogadores na sala: (0/4)</p>\n                         <div class=\"Players\"></div>\n                     </div>\n                     <div class=\"Dice\" onclick=\"RunDice()\" style=\"background-image: url('/staGeon/resources/DiceIcon.png');\">"
        },
        {
          "filename": "frontend/staGeon/main.js",
          "status": "modified",
          "additions": 81,
          "deletions": 11,
          "patch": "@@ -76,34 +76,69 @@ function Loaded() {\n \n   socket.on('NewUser', (Data) => {\n     Data = JSON.parse(Data);\n-    CreateUsers(Data.EnteredUserId);\n+    if (!document.getElementById(Data.EnteredUserId)) {\n+      CreateUsers(Data.EnteredUserId);\n+    }\n     AddUserPawn();\n     const Playrs = [...document.getElementsByClassName('Players')[0].children];\n     Playrs[0].style.webkitTextStroke = '1px #FFF';\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   });\n \n   socket.on('UserNameInformation', (Data) => {\n+    console.log('Received UserNameInformation: ' + Data);\n     Data = JSON.parse(Data);\n     const Players = [...document.getElementsByClassName('Players')[0].children];\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n     Data.NickName = Data.NickName.split('>').join(' ');\n     Data.NickName = Data.NickName.split('<').join(' ');\n     Data.NickName = Data.NickName.split('/').join(' ');\n+    var userFounded = false;\n+    console.log(Data.UserId);\n     Players.forEach((element) => {\n       if (element.id === Data.UserId) {\n-        playingPlayers.push({\n-          id: Data.UserId,\n-          name: Data.NickName,\n-        });\n-        element.innerHTML = Data.UserId === UserId ? `Voc\u00ea(${Data.NickName})` : Data.NickName;\n+        userFounded = true;\n+        if (playingPlayers.find((object) => { return object.id === Data.UserId; })) {\n+          const player = playingPlayers.find((object) => { return object.id === Data.UserId; });\n+          playingPlayers[player.index].name = Data.NickName;\n+          console.log('Updated user on the list: ' + JSON.stringify(playingPlayers));\n+        } else {\n+          playingPlayers.push({\n+            id: Data.UserId,\n+            name: Data.NickName,\n+            index: playingPlayers.length,\n+          });\n+          console.log('Added new user to the list: ' + JSON.stringify(playingPlayers));\n+        }\n+        element.innerHTML = Data.UserId === UserId ? `Voc\u00ea (${Data.NickName})` : Data.NickName;\n       }\n     });\n+    if (!userFounded) {\n+      playingPlayers.push({\n+        id: Data.UserId,\n+        name: Data.NickName,\n+        index: playingPlayers.length,\n+      });\n+      console.log('Created new user to the list: ' + JSON.stringify(playingPlayers));\n+      console.log(Data.UserId);\n+      const Player = document.createElement('div');\n+      Player.className = 'PlayerWrapper';\n+      Player.id = Data.UserId;\n+      Player.innerHTML = Data.UserId === UserId ? `Voc\u00ea (${Data.NickName})` : Data.NickName;\n+      document.getElementsByClassName('Players')[0].appendChild(Player);\n+    }\n   });\n \n   socket.on('UserLeave', (Data) => {\n     Data = JSON.parse(Data);\n     if (document.getElementById(Data.UserLeaved)) {\n       document.getElementById(Data.UserLeaved).remove();\n     }\n+    if (playingPlayers.find((object) => { return object.id === Data.UserId; })) {\n+      playingPlayers.splice(playingPlayers.find((object) => { return object.id === Data.UserId; }).index, 1);\n+    }\n+    document.getElementsByClassName('Players')[0].children[0].style.webkitTextStroke = '1px #FFF';\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n     AddUserPawn();\n   });\n \n@@ -122,6 +157,7 @@ function Loaded() {\n     Playrs.forEach((element, index) => {\n       element.remove();\n     });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n     playingPlayers = [];\n   });\n \n@@ -140,6 +176,7 @@ function Loaded() {\n     Playrs.forEach((element, index) => {\n       element.remove();\n     });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n     playingPlayers = [];\n     document.getElementById('C0').style.top = 0 + 'vw';\n     document.getElementById('C0').style.left = 0 + 'vw';\n@@ -159,6 +196,21 @@ function Loaded() {\n     console.log('My new ID is: ' + id);\n   });\n \n+  socket.on('Reconnecting', (Data) => {\n+    Data = JSON.parse(Data);\n+\n+    if (Data.RoomId !== CurrentRoom) return;\n+\n+    const Players = [...document.getElementsByClassName('Players')[0].children];\n+\n+    Players.forEach((element) => {\n+      if (element.id === Data.UserId) {\n+        element.innerHTML = 'Reconnecting...';\n+      }\n+    });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n+  });\n+\n   socket.on('reconnect', () => {\n     console.log('Reconnect!');\n     socket.emit('Reconnector', JSON.stringify({ oldUserId: UserId }));\n@@ -172,9 +224,14 @@ function Loaded() {\n     Players.forEach((element, index) => {\n       if (element.id === Data.oldUserId) {\n         element.id = Data.newUserId;\n-        playingPlayers.find((object) => { return object.id === Data.oldUserId; }).id = Data.newUserId;\n+        const player = playingPlayers.find((object) => { return object.id === Data.oldUserId; });\n+        if (player) {\n+          playingPlayers[player.index].id = Data.newUserId;\n+          console.log('changed id actual user NewId:' + Data.newUserId + ' OldId:' + Data.oldUserId + ' Index:' + player.index + ' Full Object:' + JSON.stringify(playingPlayers[player.index]));\n+        }\n       }\n     });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n     UserId = Data.newUserId;\n   });\n \n@@ -184,9 +241,13 @@ function Loaded() {\n     Players.forEach((element, index) => {\n       if (element.id === Data.OldId) {\n         element.id = Data.NewId;\n-        playingPlayers.find((object) => { return object.id === Data.OldId; }).id = Data.NewId;\n+        const checkPlayer = playingPlayers.find((object) => { return object.id === Data.OldId; });\n+        if (!checkPlayer) return;\n+        playingPlayers[checkPlayer.index].id = Data.NewId;\n+        console.log('Updated some user ID: ' + Data.NewId + ' OldId:' + Data.OldId + ' Index:' + checkPlayer.index + ' Full Object:' + JSON.stringify(playingPlayers[checkPlayer.index]));\n       }\n     });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   });\n \n   socket.on('ConnectionFailed', () => {\n@@ -243,11 +304,13 @@ function Loaded() {\n     }\n     document.getElementById('C' + UserIndex.toString()).style.top = (Math.floor(Collumn - 1) * 7) + 'vw';\n     document.getElementById('C' + UserIndex.toString()).style.left = (Math.floor(Row) * 7) + 'vw';\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   });\n   socket.on('QuestionToAnswer', (Data) => {\n     questionPopupToRespond = true;\n     Data = JSON.parse(Data);\n     document.getElementsByClassName('QuestionInput')[0].id = 'popup';\n+    document.getElementsByClassName('QuestionTextInput')[0].value = '';\n     setTimeout(() => { document.getElementsByClassName('QuestionInput')[0].id = ''; }, 300);\n     document.getElementsByClassName('QuestionInput')[0].style.display = 'block';\n     document.getElementsByClassName('SideA')[0].innerHTML = Data.SideA;\n@@ -267,8 +330,12 @@ function Loaded() {\n     Data = JSON.parse(Data);\n     const Playrs = [...document.getElementsByClassName('Players')[0].children];\n     Playrs.forEach((element, index) => {\n-      var userName = playingPlayers.find((object) => { return object.id === element.id; }).name || 'Aguardando...';\n-      if (element.id === UserId) userName = `Voc\u00ea(${userName})`;\n+      var userName = playingPlayers.find((object) => { return object.id === element.id; });\n+      console.log('UserName:' + userName.name);\n+      console.log('object:' + JSON.stringify(userName));\n+      if (!userName) { userName = 'Aguardando...'; } else { userName = userName.name; }\n+      console.log('UserName:' + userName.name);\n+      if (element.id === UserId) userName = `Voc\u00ea (${userName})`;\n       if (index === Data.Turn) {\n         element.style.webkitTextStroke = '1px #FFFFFF';\n         element.innerHTML = userName + ' <--';\n@@ -286,6 +353,7 @@ function Loaded() {\n         element.style.color = '#FFAAFF';\n       }\n     });\n+    document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   });\n \n   socket.on('UserNameAlreadyExists', () => {\n@@ -416,7 +484,6 @@ function RunDice() {\n \n function AddUserPawn() {\n   const Players = [...document.getElementsByClassName('Players')[0].children];\n-  Players.length -= 1;\n   if (Players.length === 2) {\n     document.getElementById('C0').style.display = 'block';\n     document.getElementById('C1').style.display = 'block';\n@@ -438,6 +505,7 @@ function AddUserPawn() {\n     document.getElementById('C2').style.display = 'none';\n     document.getElementById('C3').style.display = 'none';\n   }\n+  document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n }\n \n function HipotenusaResulver() {\n@@ -478,6 +546,7 @@ function Win() {\n   Playrs.forEach((element, index) => {\n     element.remove();\n   });\n+  document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   playingPlayers = [];\n   document.getElementById('C0').style.top = 0 + 'vw';\n   document.getElementById('C0').style.left = 0 + 'vw';\n@@ -505,6 +574,7 @@ function Lose() {\n   Playrs.forEach((element, index) => {\n     element.remove();\n   });\n+  document.getElementsByClassName('PlayerInTheRoomHeader')[0].innerHTML = `Jogadores na sala: (${playingPlayers.length}/4)`;\n   playingPlayers = [];\n   document.getElementById('C0').style.top = 0 + 'vw';\n   document.getElementById('C0').style.left = 0 + 'vw';"
        },
        {
          "filename": "frontend/staGeon/styles.css",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -1080,7 +1080,6 @@ body {\n     height: 5vw;\n     margin-left: 12vw;\n     font-size: 3vw;\n-    align: right;\n }\n .SideB {\n     position: absolute;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "31dec529bb2c338868b2471580e815a462f993b9",
            "date": "2024-04-09T03:07:29Z",
            "author_login": "LoboMetalurgico"
          },
          {
            "sha": "cb7bea583b44b1df465e507e935054245383825e",
            "date": "2024-04-09T02:38:01Z",
            "author_login": "LoboMetalurgico"
          },
          {
            "sha": "0562da64ee404b69739f761e034a9d21b2ffc9b8",
            "date": "2024-04-09T02:11:51Z",
            "author_login": "LoboMetalurgico"
          },
          {
            "sha": "6588ff50ad1e0199a8c7e75b7cabf35a2ea1e9a9",
            "date": "2022-04-01T18:02:08Z",
            "author_login": "LoboMetalurgico"
          },
          {
            "sha": "c661c3ab5e211a43c2662f2a3ccf7e93d2c97e36",
            "date": "2022-04-01T18:01:31Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:N",
    "cwe_id": "CWE-384",
    "description": "Geon is a board game based on solving questions about the Pythagorean Theorem. Malicious users can obtain the uuid from other users, spoof that uuid through the browser console and become co-owners of the target session. This issue is patched in version 1.1.0. No known workaround exists.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-03-24T21:15:13.850",
    "last_modified": "2024-11-21T06:51:05.007",
    "fix_date": "2022-01-27T01:42:45Z"
  },
  "references": [
    {
      "url": "https://github.com/math-geon/Geon/commit/005456d752d5434b60026edbc83b2665b8557d19",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/math-geon/Geon/releases/tag/v1.1.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/math-geon/Geon/security/advisories/GHSA-4fv9-g2jh-j5xm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/math-geon/Geon/commit/005456d752d5434b60026edbc83b2665b8557d19",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/math-geon/Geon/releases/tag/v1.1.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/math-geon/Geon/security/advisories/GHSA-4fv9-g2jh-j5xm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.061778",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "Geon",
    "owner": "math-geon",
    "created_at": "2020-11-13T00:40:15Z",
    "updated_at": "2022-01-26T16:03:38Z",
    "pushed_at": "2024-04-09T03:07:36Z",
    "size": 11288,
    "stars": 4,
    "forks": 2,
    "open_issues": 5,
    "watchers": 4,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 40215,
      "HTML": 13193
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:31:20.145623"
  }
}