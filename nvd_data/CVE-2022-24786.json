{
  "cve_id": "CVE-2022-24786",
  "github_data": {
    "repository": "pjsip/pjproject",
    "fix_commit": "11559e49e65bdf00922ad5ae28913ec6a198d508",
    "related_commits": [
      "11559e49e65bdf00922ad5ae28913ec6a198d508",
      "11559e49e65bdf00922ad5ae28913ec6a198d508"
    ],
    "patch_url": "https://github.com/pjsip/pjproject/commit/11559e49e65bdf00922ad5ae28913ec6a198d508.patch",
    "fix_commit_details": {
      "sha": "11559e49e65bdf00922ad5ae28913ec6a198d508",
      "commit_date": "2022-04-06T03:40:09Z",
      "author": {
        "login": "trengginas",
        "type": "User",
        "stats": {
          "total_commits": 458,
          "average_weekly_commits": 0.45663010967098705,
          "total_additions": 571682,
          "total_deletions": 325420,
          "weeks_active": 236
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-vhxv-phmx-g52q",
        "length": 153,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 111,
        "additions": 73,
        "deletions": 38
      },
      "files": [
        {
          "filename": "pjmedia/include/pjmedia/rtcp.h",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -115,6 +115,15 @@ typedef struct pjmedia_rtcp_common\n } pjmedia_rtcp_common;\n \n \n+/**\n+ * RTCP feedback common header.\n+ */\n+typedef struct pjmedia_rtcp_fb_common\n+{\n+    pjmedia_rtcp_common rtcp_common;\n+    pj_uint32_t\t    ssrc_src;\t/**< SSRC media source\t    */\n+} pjmedia_rtcp_fb_common;\n+\n /**\n  * This structure declares default RTCP packet (SR) that is sent by pjmedia.\n  * Incoming RTCP packet may have different format, and must be parsed\n@@ -234,6 +243,8 @@ typedef struct pjmedia_rtcp_session\n     char\t\t   *name;\t/**< Name identification.\t    */\n     pjmedia_rtcp_sr_pkt\t    rtcp_sr_pkt;/**< Cached RTCP SR packet.\t    */\n     pjmedia_rtcp_rr_pkt\t    rtcp_rr_pkt;/**< Cached RTCP RR packet.\t    */\n+    pjmedia_rtcp_fb_common  rtcp_fb_com;/**< Cached RTCP feedback common \n+\t\t\t\t\t     header packet.\t\t    */\n     \n     pjmedia_rtp_seq_session seq_ctrl;\t/**< RTCP sequence number control.  */\n     unsigned\t\t    rtp_last_ts;/**< Last timestamp in RX RTP pkt.  */"
        },
        {
          "filename": "pjmedia/src/pjmedia/rtcp.c",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -242,6 +242,11 @@ PJ_DEF(void) pjmedia_rtcp_init2( pjmedia_rtcp_session *sess,\n     sess->rtcp_rr_pkt.common.pt = RTCP_RR;\n     sess->rtcp_rr_pkt.common.length = pj_htons(7);\n \n+    /* Copy to RTCP FB common header */\n+    pj_memcpy(&sess->rtcp_fb_com, &sr_pkt->common, \n+\t      sizeof(pjmedia_rtcp_common));\n+    sess->rtcp_fb_com.ssrc_src = 0;\n+\n     /* Get time and timestamp base and frequency */\n     pj_gettimeofday(&now);\n     sess->tv_base = now;"
        },
        {
          "filename": "pjmedia/src/pjmedia/rtcp_fb.c",
          "status": "modified",
          "additions": 57,
          "deletions": 38,
          "patch": "@@ -43,7 +43,7 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_nack(\n \t\t\t\t\tunsigned nack_cnt,\n \t\t\t\t\tconst pjmedia_rtcp_fb_nack nack[])\n {\n-    pjmedia_rtcp_common *hdr;\n+    pjmedia_rtcp_fb_common *hdr;\n     pj_uint8_t *p;\n     unsigned len, i;\n \n@@ -54,11 +54,11 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_nack(\n \treturn PJ_ETOOSMALL;\n \n     /* Build RTCP-FB NACK header */\n-    hdr = (pjmedia_rtcp_common*)buf;\n-    pj_memcpy(hdr, &session->rtcp_rr_pkt.common,  sizeof(*hdr));\n-    hdr->pt = RTCP_RTPFB;\n-    hdr->count = 1; /* FMT = 1 */\n-    hdr->length = pj_htons((pj_uint16_t)(len/4 - 1));\n+    hdr = (pjmedia_rtcp_fb_common*)buf;\n+    pj_memcpy(hdr, &session->rtcp_fb_com, sizeof(*hdr));\n+    hdr->rtcp_common.pt = RTCP_RTPFB;\n+    hdr->rtcp_common.count = 1; /* FMT = 1 */\n+    hdr->rtcp_common.length = pj_htons((pj_uint16_t)(len/4 - 1));\n \n     /* Build RTCP-FB NACK FCI */\n     p = (pj_uint8_t*)hdr + sizeof(*hdr);\n@@ -86,7 +86,7 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_pli(\n \t\t\t\t\tvoid *buf,\n \t\t\t\t\tpj_size_t *length)\n {\n-    pjmedia_rtcp_common *hdr;\n+    pjmedia_rtcp_fb_common *hdr;\n     unsigned len;\n \n     PJ_ASSERT_RETURN(session && buf && length, PJ_EINVAL);\n@@ -96,11 +96,11 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_pli(\n \treturn PJ_ETOOSMALL;\n \n     /* Build RTCP-FB PLI header */\n-    hdr = (pjmedia_rtcp_common*)buf;\n-    pj_memcpy(hdr, &session->rtcp_rr_pkt.common,  sizeof(*hdr));\n-    hdr->pt = RTCP_PSFB;\n-    hdr->count = 1; /* FMT = 1 */\n-    hdr->length = pj_htons((pj_uint16_t)(len/4 - 1));\n+    hdr = (pjmedia_rtcp_fb_common*)buf;\n+    pj_memcpy(hdr, &session->rtcp_fb_com, sizeof(*hdr));\n+    hdr->rtcp_common.pt = RTCP_PSFB;\n+    hdr->rtcp_common.count = 1; /* FMT = 1 */\n+    hdr->rtcp_common.length = pj_htons((pj_uint16_t)(len/4 - 1));\n \n     /* Finally */\n     *length = len;\n@@ -119,7 +119,7 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_sli(\n \t\t\t\t\tunsigned sli_cnt,\n \t\t\t\t\tconst pjmedia_rtcp_fb_sli sli[])\n {\n-    pjmedia_rtcp_common *hdr;\n+    pjmedia_rtcp_fb_common *hdr;\n     pj_uint8_t *p;\n     unsigned len, i;\n \n@@ -130,11 +130,11 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_sli(\n \treturn PJ_ETOOSMALL;\n \n     /* Build RTCP-FB SLI header */\n-    hdr = (pjmedia_rtcp_common*)buf;\n-    pj_memcpy(hdr, &session->rtcp_rr_pkt.common,  sizeof(*hdr));\n-    hdr->pt = RTCP_PSFB;\n-    hdr->count = 2; /* FMT = 2 */\n-    hdr->length = pj_htons((pj_uint16_t)(len/4 - 1));\n+    hdr = (pjmedia_rtcp_fb_common*)buf;\n+    pj_memcpy(hdr, &session->rtcp_fb_com, sizeof(*hdr));\n+    hdr->rtcp_common.pt = RTCP_PSFB;\n+    hdr->rtcp_common.count = 2; /* FMT = 2 */\n+    hdr->rtcp_common.length = pj_htons((pj_uint16_t)(len/4 - 1));\n \n     /* Build RTCP-FB SLI FCI */\n     p = (pj_uint8_t*)hdr + sizeof(*hdr);\n@@ -166,7 +166,7 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_rpsi(\n \t\t\t\t\t    pj_size_t *length,\n \t\t\t\t\t    const pjmedia_rtcp_fb_rpsi *rpsi)\n {\n-    pjmedia_rtcp_common *hdr;\n+    pjmedia_rtcp_fb_common *hdr;\n     pj_uint8_t *p;\n     unsigned bitlen, padlen, len;\n \n@@ -179,11 +179,11 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_build_rpsi(\n \treturn PJ_ETOOSMALL;\n \n     /* Build RTCP-FB RPSI header */\n-    hdr = (pjmedia_rtcp_common*)buf;\n-    pj_memcpy(hdr, &session->rtcp_rr_pkt.common,  sizeof(*hdr));\n-    hdr->pt = RTCP_PSFB;\n-    hdr->count = 3; /* FMT = 3 */\n-    hdr->length = pj_htons((pj_uint16_t)(len/4 - 1));\n+    hdr = (pjmedia_rtcp_fb_common*)buf;\n+    pj_memcpy(hdr, &session->rtcp_fb_com, sizeof(*hdr));\n+    hdr->rtcp_common.pt = RTCP_PSFB;\n+    hdr->rtcp_common.count = 3; /* FMT = 3 */\n+    hdr->rtcp_common.length = pj_htons((pj_uint16_t)(len/4 - 1));\n \n     /* Build RTCP-FB RPSI FCI */\n     p = (pj_uint8_t*)hdr + sizeof(*hdr);\n@@ -620,18 +620,18 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_parse_nack(\n \t\t\t\t\tunsigned *nack_cnt,\n \t\t\t\t\tpjmedia_rtcp_fb_nack nack[])\n {\n-    pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;\n+    pjmedia_rtcp_fb_common *hdr = (pjmedia_rtcp_fb_common*) buf;\n     pj_uint8_t *p;\n     unsigned cnt, i;\n \n     PJ_ASSERT_RETURN(buf && nack_cnt && nack, PJ_EINVAL);\n-    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_common), PJ_ETOOSMALL);\n+    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_fb_common), PJ_ETOOSMALL);\n \n     /* Generic NACK uses pt==RTCP_RTPFB and FMT==1 */\n-    if (hdr->pt != RTCP_RTPFB || hdr->count != 1)\n+    if (hdr->rtcp_common.pt != RTCP_RTPFB || hdr->rtcp_common.count != 1)\n \treturn PJ_ENOTFOUND;\n \n-    cnt = pj_ntohs((pj_uint16_t)hdr->length);\n+    cnt = pj_ntohs((pj_uint16_t)hdr->rtcp_common.length);\n     if (cnt > 2) cnt -= 2; else cnt = 0;\n     if (length < (cnt+3)*4)\n \treturn PJ_ETOOSMALL;\n@@ -661,15 +661,15 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_parse_pli(\n \t\t\t\t\tconst void *buf,\n \t\t\t\t\tpj_size_t length)\n {\n-    pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;\n+    pjmedia_rtcp_fb_common *hdr = (pjmedia_rtcp_fb_common*) buf;\n \n     PJ_ASSERT_RETURN(buf, PJ_EINVAL);\n \n     if (length < 12)\n     \treturn PJ_ETOOSMALL;\n \n     /* PLI uses pt==RTCP_PSFB and FMT==1 */\n-    if (hdr->pt != RTCP_PSFB || hdr->count != 1)\n+    if (hdr->rtcp_common.pt != RTCP_PSFB || hdr->rtcp_common.count != 1)\n \treturn PJ_ENOTFOUND;\n \n     return PJ_SUCCESS;\n@@ -686,18 +686,18 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_parse_sli(\n \t\t\t\t\tunsigned *sli_cnt,\n \t\t\t\t\tpjmedia_rtcp_fb_sli sli[])\n {\n-    pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;\n+    pjmedia_rtcp_fb_common *hdr = (pjmedia_rtcp_fb_common*) buf;\n     pj_uint8_t *p;\n     unsigned cnt, i;\n \n     PJ_ASSERT_RETURN(buf && sli_cnt && sli, PJ_EINVAL);\n-    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_common), PJ_ETOOSMALL);\n+    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_fb_common), PJ_ETOOSMALL);\n \n     /* PLI uses pt==RTCP_PSFB and FMT==2 */\n-    if (hdr->pt != RTCP_PSFB || hdr->count != 2)\n+    if (hdr->rtcp_common.pt != RTCP_PSFB || hdr->rtcp_common.count != 2)\n \treturn PJ_ENOTFOUND;\n \n-    cnt = pj_ntohs((pj_uint16_t)hdr->length) - 2;\n+    cnt = pj_ntohs((pj_uint16_t)hdr->rtcp_common.length) - 2;\n     if (length < (cnt+3)*4)\n \treturn PJ_ETOOSMALL;\n \n@@ -730,24 +730,43 @@ PJ_DEF(pj_status_t) pjmedia_rtcp_fb_parse_rpsi(\n \t\t\t\t\tpj_size_t length,\n \t\t\t\t\tpjmedia_rtcp_fb_rpsi *rpsi)\n {\n-    pjmedia_rtcp_common *hdr = (pjmedia_rtcp_common*) buf;\n+    pjmedia_rtcp_fb_common *hdr = (pjmedia_rtcp_fb_common*) buf;\n     pj_uint8_t *p;\n     pj_uint8_t padlen;\n     pj_size_t rpsi_len;\n \n     PJ_ASSERT_RETURN(buf && rpsi, PJ_EINVAL);\n-    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_common), PJ_ETOOSMALL);\n+    PJ_ASSERT_RETURN(length >= sizeof(pjmedia_rtcp_fb_common), PJ_ETOOSMALL);\n \n     /* RPSI uses pt==RTCP_PSFB and FMT==3 */\n-    if (hdr->pt != RTCP_PSFB || hdr->count != 3)\n+    if (hdr->rtcp_common.pt != RTCP_PSFB || hdr->rtcp_common.count != 3)\n \treturn PJ_ENOTFOUND;\n \n-    rpsi_len = (pj_ntohs((pj_uint16_t)hdr->length)-2) * 4;\n+    if (hdr->rtcp_common.length < 3) {    \n+        PJ_PERROR(3, (THIS_FILE, PJ_ETOOSMALL,\n+                      \"Failed parsing FB RPSI, invalid header length\"));\n+\treturn PJ_ETOOSMALL;\n+    }\n+\n+    rpsi_len = (pj_ntohs((pj_uint16_t)hdr->rtcp_common.length)-2) * 4;\n     if (length < rpsi_len + 12)\n \treturn PJ_ETOOSMALL;\n \n     p = (pj_uint8_t*)hdr + sizeof(*hdr);\n     padlen = *p++;\n+\n+    if (padlen >= 32) {\n+        PJ_PERROR(3, (THIS_FILE, PJ_ETOOBIG,\n+                      \"Failed parsing FB RPSI, invalid RPSI padding len\"));\n+\treturn PJ_ETOOBIG;\n+    }\n+\n+    if ((rpsi_len * 8) < (unsigned)(16 + padlen)) {\n+        PJ_PERROR(3, (THIS_FILE, PJ_ETOOSMALL,\n+                      \"Failed parsing FB RPSI, invalid RPSI bit len\"));\n+\treturn PJ_ETOOSMALL;\n+    }\n+\n     rpsi->pt = (*p++ & 0x7F);\n     rpsi->rpsi_bit_len = rpsi_len*8 - 16 - padlen;\n     pj_strset(&rpsi->rpsi, (char*)p, (rpsi->rpsi_bit_len + 7)/8);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d8795bab62d6f99303b587f9d21d7e53cf2e5b10",
            "date": "2025-01-14T02:17:11Z",
            "author_login": "sauwming"
          },
          {
            "sha": "90293ccc52ea16c5d0e2f5c81768a59b4fc10481",
            "date": "2025-01-13T13:47:33Z",
            "author_login": "sauwming"
          },
          {
            "sha": "b955e8f925c3a932d07fe6d21b23ef33703b0ab8",
            "date": "2025-01-13T08:00:34Z",
            "author_login": "sauwming"
          },
          {
            "sha": "2d4b94a74e2738a174aa7c4cc2fe022620b67132",
            "date": "2025-01-10T09:49:42Z",
            "author_login": "bennylp"
          },
          {
            "sha": "6853491ade9b816b948c09ffe87c9e3aad5a5719",
            "date": "2025-01-10T03:58:44Z",
            "author_login": "nanangizz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-125",
    "description": "PJSIP is a free and open source multimedia communication library written in C. PJSIP versions 2.12 and prior do not parse incoming RTCP feedback RPSI (Reference Picture Selection Indication) packet, but any app that directly uses pjmedia_rtcp_fb_parse_rpsi() will be affected. A patch is available in the `master` branch of the `pjsip/pjproject` GitHub repository. There are currently no known workarounds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-06T14:15:07.980",
    "last_modified": "2024-11-21T06:51:05.630",
    "fix_date": "2022-04-06T03:40:09Z"
  },
  "references": [
    {
      "url": "https://github.com/pjsip/pjproject/commit/11559e49e65bdf00922ad5ae28913ec6a198d508",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/security/advisories/GHSA-vhxv-phmx-g52q",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/11/msg00021.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-37",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2022/dsa-5285",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/commit/11559e49e65bdf00922ad5ae28913ec6a198d508",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pjsip/pjproject/security/advisories/GHSA-vhxv-phmx-g52q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2022/11/msg00021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202210-37",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2022/dsa-5285",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:02.106624",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pjproject",
    "owner": "pjsip",
    "created_at": "2016-01-24T05:00:33Z",
    "updated_at": "2025-01-14T02:17:17Z",
    "pushed_at": "2025-01-14T02:17:16Z",
    "size": 45263,
    "stars": 2158,
    "forks": 806,
    "open_issues": 9,
    "watchers": 2158,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 15266807,
      "C++": 1658301,
      "Python": 553465,
      "Shell": 394887,
      "Objective-C": 326996,
      "C#": 141563,
      "Makefile": 115036,
      "Java": 114622,
      "Mathematica": 86105,
      "SWIG": 41289,
      "Swift": 38034,
      "CSS": 21213,
      "Kotlin": 17696,
      "Rust": 4860,
      "Objective-C++": 3801,
      "HTML": 3320,
      "QMake": 3180,
      "Batchfile": 1805,
      "QML": 1121,
      "Pan": 288,
      "Prolog": 25
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:52:01.488842"
  }
}