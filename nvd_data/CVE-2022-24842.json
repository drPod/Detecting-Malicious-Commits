{
  "cve_id": "CVE-2022-24842",
  "github_data": {
    "repository": "minio/minio",
    "fix_commit": "66b14a0d32684d527ae8018dc6d9d46ccce58ae3",
    "related_commits": [
      "66b14a0d32684d527ae8018dc6d9d46ccce58ae3",
      "66b14a0d32684d527ae8018dc6d9d46ccce58ae3"
    ],
    "patch_url": "https://github.com/minio/minio/commit/66b14a0d32684d527ae8018dc6d9d46ccce58ae3.patch",
    "fix_commit_details": {
      "sha": "66b14a0d32684d527ae8018dc6d9d46ccce58ae3",
      "commit_date": "2022-04-11T22:30:28Z",
      "author": {
        "login": "donatello",
        "type": "User",
        "stats": {
          "total_commits": 361,
          "average_weekly_commits": 0.6760299625468165,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 186
        }
      },
      "commit_message": {
        "title": "Fix service account privilege escalation (#14729)",
        "length": 149,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 13,
        "additions": 12,
        "deletions": 1
      },
      "files": [
        {
          "filename": "cmd/admin-handlers-users.go",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -605,7 +605,6 @@ func (a adminAPIHandlers) AddServiceAccount(w http.ResponseWriter, r *http.Reque\n \t\t\tConditionValues: getConditionValues(r, \"\", cred.AccessKey, claims),\n \t\t\tIsOwner:         owner,\n \t\t\tClaims:          claims,\n-\t\t\tDenyOnly:        true,\n \t\t}) {\n \t\t\twriteErrorResponseJSON(ctx, w, errorCodes.ToAPIErr(ErrAccessDenied), r.URL)\n \t\t\treturn"
        },
        {
          "filename": "cmd/admin-handlers-users_test.go",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -890,6 +890,9 @@ func (s *TestSuiteIAM) TestServiceAccountOpsByUser(c *check) {\n \n \t// 5. Check that service account can be deleted.\n \tc.assertSvcAccDeletion(ctx, s, userAdmClient, accessKey, bucket)\n+\n+\t// 6. Check that service account cannot be created for some other user.\n+\tc.mustNotCreateSvcAccount(ctx, globalActiveCred.AccessKey, userAdmClient)\n }\n \n func (s *TestSuiteIAM) TestServiceAccountOpsByAdmin(c *check) {"
        },
        {
          "filename": "cmd/sts-handlers_test.go",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -625,6 +625,9 @@ func (s *TestSuiteIAM) TestLDAPSTSServiceAccounts(c *check) {\n \n \t// 5. Check that service account can be deleted.\n \tc.assertSvcAccDeletion(ctx, s, userAdmClient, value.AccessKeyID, bucket)\n+\n+\t// 6. Check that service account cannot be created for some other user.\n+\tc.mustNotCreateSvcAccount(ctx, globalActiveCred.AccessKey, userAdmClient)\n }\n \n // In this test, the parent users gets their permissions from a group, rather\n@@ -725,6 +728,9 @@ func (s *TestSuiteIAM) TestLDAPSTSServiceAccountsWithGroups(c *check) {\n \n \t// 5. Check that service account can be deleted.\n \tc.assertSvcAccDeletion(ctx, s, userAdmClient, value.AccessKeyID, bucket)\n+\n+\t// 6. Check that service account cannot be created for some other user.\n+\tc.mustNotCreateSvcAccount(ctx, globalActiveCred.AccessKey, userAdmClient)\n }\n \n func (s *TestSuiteIAM) TestOpenIDSTS(c *check) {\n@@ -979,6 +985,9 @@ func (s *TestSuiteIAM) TestOpenIDServiceAcc(c *check) {\n \n \t// 5. Check that service account can be deleted.\n \tc.assertSvcAccDeletion(ctx, s, userAdmClient, value.AccessKeyID, bucket)\n+\n+\t// 6. Check that service account cannot be created for some other user.\n+\tc.mustNotCreateSvcAccount(ctx, globalActiveCred.AccessKey, userAdmClient)\n }\n \n var testAppParams = OpenIDClientAppParams{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4952bdb77035e8142b2f0fc5b86181aeb1d3e82e",
            "date": "2025-01-14T19:53:02Z",
            "author_login": "poornas"
          },
          {
            "sha": "00b2ef29323e786a8958bf0bedced133cb06245f",
            "date": "2025-01-08T11:09:24Z",
            "author_login": "vadmeste"
          },
          {
            "sha": "4536ecfaa4d81dd3f648616094a4936162089db8",
            "date": "2025-01-06T15:51:54Z",
            "author_login": "klauspost"
          },
          {
            "sha": "43a74029685512ce9b1b76c053d48b43fc8d64fc",
            "date": "2025-01-03T05:34:47Z",
            "author_login": "harshavardhana"
          },
          {
            "sha": "330dca9a354cdf445d71979170bbe3d27971d127",
            "date": "2024-12-21T04:24:45Z",
            "author_login": "allanrogerr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-269",
    "description": "MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. A security issue was found where an non-admin user is able to create service accounts for root or other admin users and then is able to assume their access policies via the generated credentials. This in turn allows the user to escalate privilege to that of the root user. This vulnerability has been resolved in pull request #14729 and is included in `RELEASE.2022-04-12T06-55-35Z`. Users unable to upgrade may workaround this issue by explicitly adding a `admin:CreateServiceAccount` deny policy, however, this, in turn, denies the user the ability to create their own service accounts as well.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-12T18:15:09.690",
    "last_modified": "2024-11-21T06:51:13.093",
    "fix_date": "2022-04-11T22:30:28Z"
  },
  "references": [
    {
      "url": "https://github.com/minio/minio/commit/66b14a0d32684d527ae8018dc6d9d46ccce58ae3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/minio/minio/pull/14729",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/minio/minio/security/advisories/GHSA-2j69-jjmg-534q",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/minio/minio/commit/66b14a0d32684d527ae8018dc6d9d46ccce58ae3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/minio/minio/pull/14729",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/minio/minio/security/advisories/GHSA-2j69-jjmg-534q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.376172",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "minio",
    "owner": "minio",
    "created_at": "2015-01-14T19:23:58Z",
    "updated_at": "2025-01-14T10:52:24Z",
    "pushed_at": "2025-01-08T11:09:25Z",
    "size": 131770,
    "stars": 49440,
    "forks": 5609,
    "open_issues": 33,
    "watchers": 49440,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "release"
    ],
    "languages": {
      "Go": 8661217,
      "Shell": 72203,
      "Makefile": 11634,
      "Mustache": 6628,
      "Smarty": 872,
      "Dockerfile": 229
    },
    "commit_activity": {
      "total_commits_last_year": 949,
      "avg_commits_per_week": 18.25,
      "days_active_last_year": 271
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:53:58.932687"
  }
}