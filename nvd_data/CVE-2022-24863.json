{
  "cve_id": "CVE-2022-24863",
  "github_data": {
    "repository": "swaggo/http-swagger",
    "fix_commit": "b7d83e8fba85a7a51aa7e45e8244b4173f15049e",
    "related_commits": [
      "b7d83e8fba85a7a51aa7e45e8244b4173f15049e",
      "b7d83e8fba85a7a51aa7e45e8244b4173f15049e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b7d83e8fba85a7a51aa7e45e8244b4173f15049e",
      "commit_date": "2022-04-16T06:23:47Z",
      "author": {
        "login": "ubogdan",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: security improvement (#62)",
        "length": 31,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 23,
        "deletions": 18
      },
      "files": [
        {
          "filename": ".github/workflows/ci.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -10,7 +10,7 @@ jobs:\n   test:\n     strategy:\n       matrix:\n-        go: [ '1.15.x', '1.16.x', '1.17.x' ]\n+        go: [ '1.15.x', '1.16.x', '1.17.x', '1.18.x' ]\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@master"
        },
        {
          "filename": "swagger.go",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -122,6 +122,10 @@ func Handler(configFns ...func(*Config)) http.HandlerFunc {\n \tvar re = regexp.MustCompile(`^(.*/)([^?].*)?[?|.]*$`)\n \n \treturn func(w http.ResponseWriter, r *http.Request) {\n+\t\tif r.Method != http.MethodGet {\n+\t\t\thttp.Error(w, \"Method not allowed\", http.StatusMethodNotAllowed)\n+\t\t\treturn\n+\t\t}\n \t\tmatches := re.FindStringSubmatch(r.RequestURI)\n \t\tpath := matches[2]\n \n@@ -155,7 +159,7 @@ func Handler(configFns ...func(*Config)) http.HandlerFunc {\n \t\t\t}\n \t\t\t_, _ = w.Write([]byte(doc))\n \t\tcase \"\":\n-\t\t\thttp.Redirect(w, r, h.Prefix+\"index.html\", 301)\n+\t\t\thttp.Redirect(w, r, h.Prefix+\"index.html\", http.StatusMovedPermanently)\n \t\tdefault:\n \t\t\th.ServeHTTP(w, r)\n \t\t}"
        },
        {
          "filename": "swagger_test.go",
          "status": "modified",
          "additions": 17,
          "deletions": 16,
          "patch": "@@ -43,35 +43,36 @@ func TestWrapHandler(t *testing.T) {\n \n \trouter.Handle(\"/\", Handler(DocExpansion(\"none\"), DomID(\"#swagger-ui\")))\n \n-\tw1 := performRequest(\"GET\", \"/index.html\", router)\n-\tassert.Equal(t, 200, w1.Code)\n+\tw1 := performRequest(http.MethodGet, \"/index.html\", router)\n+\tassert.Equal(t, http.StatusOK, w1.Code)\n \tassert.Equal(t, w1.Header()[\"Content-Type\"][0], \"text/html; charset=utf-8\")\n \n-\tw2 := performRequest(\"GET\", \"/doc.json\", router)\n-\tassert.Equal(t, 500, w2.Code)\n+\tassert.Equal(t, http.StatusInternalServerError, performRequest(http.MethodGet, \"/doc.json\", router).Code)\n \n \tswag.Register(swag.Name, &mockedSwag{})\n-\tw2 = performRequest(\"GET\", \"/doc.json\", router)\n-\tassert.Equal(t, 200, w2.Code)\n+\tw2 := performRequest(http.MethodGet, \"/doc.json\", router)\n+\tassert.Equal(t, http.StatusOK, w2.Code)\n \tassert.Equal(t, \"application/json; charset=utf-8\", w2.Header().Get(\"content-type\"))\n \n-\tw3 := performRequest(\"GET\", \"/favicon-16x16.png\", router)\n-\tassert.Equal(t, 200, w3.Code)\n+\tw3 := performRequest(http.MethodGet, \"/favicon-16x16.png\", router)\n+\tassert.Equal(t, http.StatusOK, w3.Code)\n \tassert.Equal(t, w3.Header()[\"Content-Type\"][0], \"image/png\")\n \n-\tw4 := performRequest(\"GET\", \"/swagger-ui.css\", router)\n-\tassert.Equal(t, 200, w4.Code)\n+\tw4 := performRequest(http.MethodGet, \"/swagger-ui.css\", router)\n+\tassert.Equal(t, http.StatusOK, w4.Code)\n \tassert.Equal(t, w4.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n \n-\tw5 := performRequest(\"GET\", \"/swagger-ui-bundle.js\", router)\n-\tassert.Equal(t, 200, w5.Code)\n+\tw5 := performRequest(http.MethodGet, \"/swagger-ui-bundle.js\", router)\n+\tassert.Equal(t, http.StatusOK, w5.Code)\n \tassert.Equal(t, w5.Header()[\"Content-Type\"][0], \"application/javascript\")\n \n-\tw6 := performRequest(\"GET\", \"/notfound\", router)\n-\tassert.Equal(t, 404, w6.Code)\n+\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/notfound\", router).Code)\n \n-\tw7 := performRequest(\"GET\", \"/\", router)\n-\tassert.Equal(t, 301, w7.Code)\n+\tassert.Equal(t, 301, performRequest(http.MethodGet, \"/\", router).Code)\n+\n+\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPost, \"/swagger/index.html\", router).Code)\n+\n+\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPut, \"/swagger/index.html\", router).Code)\n }\n \n func performRequest(method, target string, h http.Handler) *httptest.ResponseRecorder {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3a7ae30834751daf63e3d8a24e394dddb1f00bf1",
            "date": "2024-08-15T06:43:34Z",
            "author_login": "bkrukowski"
          },
          {
            "sha": "537f045bded0ad087c8a5191915e521e5130efa0",
            "date": "2023-08-30T15:30:24Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "05e75a546af8d108a65ae475ebe5ea0d823402d8",
            "date": "2023-08-26T21:01:40Z",
            "author_login": "sapk"
          },
          {
            "sha": "1bc40aacab87ac5f3129e1780cd321365ed2627b",
            "date": "2023-08-23T13:05:31Z",
            "author_login": "mefuller"
          },
          {
            "sha": "7a7a18f25df6caeb32ac43e43774fff6db695d3c",
            "date": "2023-08-23T13:05:04Z",
            "author_login": "zsbahtiar"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "http-swagger is an open source wrapper to automatically generate RESTful API documentation with Swagger 2.0. In versions of http-swagger prior to 1.2.6 an attacker may perform a denial of service attack consisting of memory exhaustion on the host system. The cause of the memory exhaustion is down to improper handling of http methods. Users are advised to upgrade. Users unable to upgrade may to restrict the path prefix to the \"GET\" method as a workaround.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-18T19:15:09.837",
    "last_modified": "2024-11-21T06:51:15.680",
    "fix_date": "2022-04-16T06:23:47Z"
  },
  "references": [
    {
      "url": "https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/pull/62",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/releases/tag/v1.2.6",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/pull/62",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/releases/tag/v1.2.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.393233",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "http-swagger",
    "owner": "swaggo",
    "created_at": "2018-02-26T03:22:40Z",
    "updated_at": "2025-01-13T08:42:41Z",
    "pushed_at": "2024-08-15T06:43:34Z",
    "size": 93,
    "stars": 454,
    "forks": 77,
    "open_issues": 34,
    "watchers": 454,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 30889
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:17:39.532624"
  }
}