{
  "cve_id": "CVE-2022-24872",
  "github_data": {
    "repository": "shopware/platform",
    "fix_commit": "083765e2d64a00315050c4891800c9e98ba0c77c",
    "related_commits": [
      "083765e2d64a00315050c4891800c9e98ba0c77c",
      "083765e2d64a00315050c4891800c9e98ba0c77c"
    ],
    "patch_url": "https://github.com/shopware/platform/commit/083765e2d64a00315050c4891800c9e98ba0c77c.patch",
    "fix_commit_details": {
      "sha": "083765e2d64a00315050c4891800c9e98ba0c77c",
      "commit_date": "2022-04-12T09:44:17Z",
      "author": {
        "login": "shyim",
        "type": "User",
        "stats": {
          "total_commits": 2463,
          "average_weekly_commits": 6.331619537275064,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 240
        }
      },
      "commit_message": {
        "title": "NEXT-21034 - Dont restore permissions",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 53,
        "additions": 24,
        "deletions": 29
      },
      "files": [
        {
          "filename": "src/Core/Framework/Api/Controller/SalesChannelProxyController.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -198,6 +198,7 @@ public function assignCustomer(Request $request, Context $context): Response\n             PlatformRequest::HEADER_CONTEXT_TOKEN => $salesChannelContext->getToken(),\n         ], \\JSON_THROW_ON_ERROR);\n         $response = new Response();\n+        $response->headers->set('content-type', 'application/json');\n         $response->setContent($content ?: null);\n \n         return $response;"
        },
        {
          "filename": "src/Core/System/SalesChannel/Context/CartRestorer.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -46,7 +46,7 @@ public function restore(string $customerId, SalesChannelContext $currentContext)\n             $customerId\n         );\n \n-        if (empty($customerPayload) || !($customerPayload['expired'] ?? false) && $customerPayload['token'] === $currentContext->getToken()) {\n+        if (empty($customerPayload) || !empty($customerPayload['permissions']) || !($customerPayload['expired'] ?? false) && $customerPayload['token'] === $currentContext->getToken()) {\n             return $this->replaceContextToken($customerId, $currentContext);\n         }\n \n@@ -114,6 +114,7 @@ private function replaceContextToken(string $customerId, SalesChannelContext $cu\n                 'customerId' => $customerId,\n                 'billingAddressId' => null,\n                 'shippingAddressId' => null,\n+                'permissions' => [],\n             ],\n             $currentContext->getSalesChannel()->getId(),\n             $customerId"
        },
        {
          "filename": "src/Core/System/SalesChannel/Context/SalesChannelContextPersister.php",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -32,11 +32,14 @@ public function __construct(Connection $connection, EventDispatcherInterface $ev\n         $this->lifetimeInterval = $lifetimeInterval ?? 'P1D';\n     }\n \n-    public function save(string $token, array $parameters, string $salesChannelId, ?string $customerId = null): void\n+    public function save(string $token, array $newParameters, string $salesChannelId, ?string $customerId = null): void\n     {\n         $existing = $this->load($token, $salesChannelId, $customerId);\n \n-        $parameters = array_replace_recursive($existing, $parameters);\n+        $parameters = array_replace_recursive($existing, $newParameters);\n+        if (isset($newParameters['permissions']) && $newParameters['permissions'] === []) {\n+            $parameters['permissions'] = [];\n+        }\n \n         unset($parameters['token']);\n "
        },
        {
          "filename": "src/Core/System/Test/SalesChannel/Context/CartRestorerTest.php",
          "status": "modified",
          "additions": 16,
          "deletions": 26,
          "patch": "@@ -12,13 +12,10 @@\n use Shopware\\Core\\Checkout\\Cart\\LineItem\\LineItemCollection;\n use Shopware\\Core\\Checkout\\Cart\\SalesChannel\\CartService;\n use Shopware\\Core\\Checkout\\Customer\\CustomerEntity;\n-use Shopware\\Core\\Checkout\\Payment\\Cart\\PaymentHandler\\PrePayment;\n use Shopware\\Core\\Content\\Product\\Aggregate\\ProductVisibility\\ProductVisibilityDefinition;\n use Shopware\\Core\\Defaults;\n use Shopware\\Core\\Framework\\Context;\n-use Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityRepositoryInterface;\n use Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Criteria;\n-use Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Filter\\EqualsFilter;\n use Shopware\\Core\\Framework\\Feature;\n use Shopware\\Core\\Framework\\Test\\TestCaseBase\\IntegrationTestBehaviour;\n use Shopware\\Core\\Framework\\Util\\Random;\n@@ -33,6 +30,7 @@\n use Shopware\\Core\\Test\\TestDefaults;\n use Symfony\\Component\\EventDispatcher\\EventDispatcher;\n use Symfony\\Contracts\\EventDispatcher\\Event;\n+use function json_encode;\n \n class CartRestorerTest extends TestCase\n {\n@@ -325,33 +323,25 @@ public function testCartMergedEventIsFiredWithCustomerCart(): void\n         static::assertEquals(5, $p2->getQuantity());\n     }\n \n-    private function getStateId(string $state, string $machine)\n+    public function testPermissionsAreIgnoredOnRestoer(): void\n     {\n-        return $this->getContainer()->get(Connection::class)\n-            ->fetchColumn('\n-                SELECT LOWER(HEX(state_machine_state.id))\n-                FROM state_machine_state\n-                    INNER JOIN  state_machine\n-                    ON state_machine.id = state_machine_state.state_machine_id\n-                    AND state_machine.technical_name = :machine\n-                WHERE state_machine_state.technical_name = :state\n-            ', [\n-                'state' => $state,\n-                'machine' => $machine,\n-            ]);\n-    }\n+        $currentContextToken = Random::getAlphanumericString(32);\n \n-    private function getPrePaymentMethodId(): string\n-    {\n-        /** @var EntityRepositoryInterface $repository */\n-        $repository = $this->getContainer()->get('payment_method.repository');\n+        $currentContext = $this->createSalesChannelContext($currentContextToken, []);\n \n-        $criteria = (new Criteria())\n-            ->setLimit(1)\n-            ->addFilter(new EqualsFilter('active', true))\n-            ->addFilter(new EqualsFilter('handlerIdentifier', PrePayment::class));\n+        $con = $this->getContainer()->get(Connection::class);\n+\n+        $con->insert('sales_channel_api_context', [\n+            'token' => Random::getAlphanumericString(32),\n+            'payload' => json_encode(['expired' => false, 'customerId' => $this->customerId, 'permissions' => ['foo']], \\JSON_THROW_ON_ERROR),\n+            'sales_channel_id' => Uuid::fromHexToBytes($currentContext->getSalesChannelId()),\n+            'customer_id' => Uuid::fromHexToBytes($this->customerId),\n+            'updated_at' => (new \\DateTime())->format(Defaults::STORAGE_DATE_TIME_FORMAT),\n+        ]);\n+\n+        $restoreContext = $this->cartRestorer->restore($this->customerId, $currentContext);\n \n-        return $repository->searchIds($criteria, Context::createDefaultContext())->getIds()[0];\n+        static::assertSame([], $restoreContext->getPermissions());\n     }\n \n     private function createProduct(Context $context): string"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a87d38f4e4ab920afb728d396a4fdff6dd1ed893",
            "date": "2025-01-14T12:59:02Z",
            "author_login": "Bird87ZA"
          },
          {
            "sha": "e957d7150a872944c008a7169bf5f8d97889b355",
            "date": "2025-01-14T11:55:14Z",
            "author_login": "shyim"
          },
          {
            "sha": "02af717865eb1d240850314ad103fc276dbb56f8",
            "date": "2025-01-14T10:50:49Z",
            "author_login": "akf-bw"
          },
          {
            "sha": "17723a093f9cf2c4617a471091ef4607da1d8769",
            "date": "2025-01-14T10:29:25Z",
            "author_login": "jleifeld"
          },
          {
            "sha": "9b977d57e54a9275be40804a7dd7cca05c0f748c",
            "date": "2025-01-14T10:24:01Z",
            "author_login": "frobel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-732",
    "description": "Shopware is an open commerce platform based on Symfony Framework and Vue. Permissions set to sales channel context by admin-api are still usable within normal user session. Users are advised to update to the current version 6.4.10.1. For older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-20T20:15:08.707",
    "last_modified": "2024-11-21T06:51:17.607",
    "fix_date": "2022-04-12T09:44:17Z"
  },
  "references": [
    {
      "url": "https://docs.shopware.com/en/shopware-6-en/security-updates/security-update-04-2022",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/commit/083765e2d64a00315050c4891800c9e98ba0c77c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/security/advisories/GHSA-9wrv-g75h-8ccc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://docs.shopware.com/en/shopware-6-en/security-updates/security-update-04-2022",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/commit/083765e2d64a00315050c4891800c9e98ba0c77c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/shopware/platform/security/advisories/GHSA-9wrv-g75h-8ccc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.397366",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "shopware",
    "owner": "shopware",
    "created_at": "2018-05-03T13:00:31Z",
    "updated_at": "2025-01-14T12:59:07Z",
    "pushed_at": "2025-01-14T13:28:13Z",
    "size": 289410,
    "stars": 2894,
    "forks": 1042,
    "open_issues": 911,
    "watchers": 2894,
    "has_security_policy": false,
    "default_branch": "trunk",
    "protected_branches": [
      "6.4",
      "6.5.x"
    ],
    "languages": {
      "PHP": 33467815,
      "JavaScript": 12727064,
      "Twig": 5566016,
      "TypeScript": 1850093,
      "SCSS": 1033491,
      "CSS": 135217,
      "Vue": 32178,
      "Shell": 30871,
      "HTML": 26015,
      "Nix": 4972,
      "Groovy": 3900,
      "Dockerfile": 2862,
      "Smarty": 1216
    },
    "commit_activity": {
      "total_commits_last_year": 4219,
      "avg_commits_per_week": 81.13461538461539,
      "days_active_last_year": 285
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:37:45.571181"
  }
}