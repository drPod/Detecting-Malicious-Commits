{
  "cve_id": "CVE-2022-24881",
  "github_data": {
    "repository": "ballcat-projects/ballcat-codegen",
    "fix_commit": "84a7cb38daf0295b93aba21d562ec627e4eb463b",
    "related_commits": [
      "84a7cb38daf0295b93aba21d562ec627e4eb463b",
      "84a7cb38daf0295b93aba21d562ec627e4eb463b"
    ],
    "patch_url": "https://github.com/ballcat-projects/ballcat-codegen/commit/84a7cb38daf0295b93aba21d562ec627e4eb463b.patch",
    "fix_commit_details": {
      "sha": "84a7cb38daf0295b93aba21d562ec627e4eb463b",
      "commit_date": "2022-04-25T07:56:06Z",
      "author": {
        "login": "Hccake",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": ":lock: \u4fee\u6539\u6a21\u677f\u5f15\u64ce\u7684\u9ed8\u8ba4\u5b89\u5168\u7b56\u7565\uff0c\u4ee5\u9632\u6b62RCE",
        "length": 27,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 34,
        "deletions": 10
      },
      "files": [
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/engine/FreemarkerTemplateEngine.java",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n package com.hccake.ballcat.codegen.engine;\n \n import com.hccake.ballcat.codegen.exception.TemplateRenderException;\n+import freemarker.core.TemplateClassResolver;\n import freemarker.template.Configuration;\n import freemarker.template.Template;\n import lombok.SneakyThrows;\n@@ -23,6 +24,9 @@ public class FreemarkerTemplateEngine implements TemplateEngine {\n \tpublic FreemarkerTemplateEngine() {\n \t\tthis.configuration = new Configuration(Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS);\n \t\tconfiguration.setDefaultEncoding(StandardCharsets.UTF_8.name());\n+\n+\t\t// \u5b89\u5168\u5904\u7406 https://ackcent.com/blog/in-depth-freemarker-template-injection/\n+\t\tconfiguration.setNewBuiltinClassResolver(TemplateClassResolver.SAFER_RESOLVER);\n \t}\n \n \t@Override"
        },
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/engine/TemplateEngine.java",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -1,5 +1,7 @@\n package com.hccake.ballcat.codegen.engine;\n \n+import com.hccake.ballcat.codegen.exception.TemplateRenderException;\n+\n import java.util.Map;\n \n /**\n@@ -21,6 +23,6 @@ public interface TemplateEngine {\n \t * @param context \u6e32\u67d3\u4f7f\u7528\u7684\u4e0a\u4e0b\u6587\n \t * @return \u6e32\u67d3\u5b8c\u6210\u540e\u7684\u5b57\u7b26\u4e32\n \t */\n-\tString render(String templateContent, Map<String, Object> context);\n+\tString render(String templateContent, Map<String, Object> context) throws TemplateRenderException;\n \n }"
        },
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/engine/TemplateEngineDelegator.java",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -2,12 +2,13 @@\n \n import cn.hutool.core.lang.Assert;\n import cn.hutool.core.util.StrUtil;\n+import com.hccake.ballcat.codegen.exception.TemplateRenderException;\n \n import java.util.Map;\n \n /**\n  * \u6a21\u677f\u5f15\u64ce\u7684\u59d4\u6258\u8005\n- * \n+ *\n  * @author hccake\n  */\n public class TemplateEngineDelegator {\n@@ -24,7 +25,8 @@ public TemplateEngineDelegator(Map<TemplateEngineTypeEnum, TemplateEngine> templ\n \t * @param context \u6e32\u67d3\u4f7f\u7528\u7684\u4e0a\u4e0b\u6587\n \t * @return \u6e32\u67d3\u5b8c\u6210\u540e\u7684\u5b57\u7b26\u4e32\n \t */\n-\tpublic String render(TemplateEngineTypeEnum engineType, String templateContent, Map<String, Object> context) {\n+\tpublic String render(TemplateEngineTypeEnum engineType, String templateContent, Map<String, Object> context)\n+\t\t\tthrows TemplateRenderException {\n \t\tif (StrUtil.isEmpty(templateContent)) {\n \t\t\treturn StrUtil.EMPTY;\n \t\t}"
        },
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/engine/VelocityTemplateEngine.java",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -4,6 +4,7 @@\n import org.apache.velocity.VelocityContext;\n import org.apache.velocity.app.Velocity;\n import org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader;\n+import org.apache.velocity.util.introspection.SecureUberspector;\n import org.springframework.stereotype.Component;\n \n import java.io.StringWriter;\n@@ -22,6 +23,8 @@ public class VelocityTemplateEngine implements TemplateEngine {\n \t\t// \u8bbe\u7f6evelocity\u8d44\u6e90\u52a0\u8f7d\u5668, \u4fdd\u7559\u6587\u4ef6\u52a0\u8f7dloader\n \t\tProperties prop = new Properties();\n \t\tprop.put(\"file.resource.loader.class\", ClasspathResourceLoader.class.getName());\n+\t\t// \u5b89\u5168\u5904\u7406\n+\t\tprop.put(\"runtime.introspector.uberspect\", SecureUberspector.class.getName());\n \t\tVelocity.init(prop);\n \t}\n \n@@ -31,7 +34,7 @@ public TemplateEngineTypeEnum type() {\n \t}\n \n \t@Override\n-\tpublic String render(String templateContent, Map<String, Object> context) {\n+\tpublic String render(String templateContent, Map<String, Object> context) throws TemplateRenderException {\n \t\tVelocityContext velocityContext = new VelocityContext(context);\n \t\ttry (StringWriter sw = new StringWriter()) {\n \t\t\tVelocity.evaluate(velocityContext, sw, \"velocityTemplateEngine\", templateContent);"
        },
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/exception/TemplateRenderException.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@\n  *\n  * @author hccake\n  */\n-public class TemplateRenderException extends RuntimeException {\n+public class TemplateRenderException extends Exception {\n \n \tpublic TemplateRenderException(Exception e) {\n \t\tsuper(e);"
        },
        {
          "filename": "ballcat-codegen-backend/src/main/java/com/hccake/ballcat/codegen/service/impl/GeneratorServiceImpl.java",
          "status": "modified",
          "additions": 18,
          "deletions": 5,
          "patch": "@@ -6,6 +6,7 @@\n import com.hccake.ballcat.codegen.constant.TemplateEntryTypeEnum;\n import com.hccake.ballcat.codegen.engine.TemplateEngineDelegator;\n import com.hccake.ballcat.codegen.engine.TemplateEngineTypeEnum;\n+import com.hccake.ballcat.codegen.exception.TemplateRenderException;\n import com.hccake.ballcat.codegen.model.bo.FileEntry;\n import com.hccake.ballcat.codegen.model.bo.TableDetails;\n import com.hccake.ballcat.codegen.model.bo.TemplateFile;\n@@ -15,6 +16,8 @@\n import com.hccake.ballcat.codegen.service.TableInfoQuery;\n import com.hccake.ballcat.codegen.service.TemplateEntryService;\n import com.hccake.ballcat.codegen.util.GenUtils;\n+import com.hccake.ballcat.common.core.exception.BusinessException;\n+import com.hccake.ballcat.common.model.result.SystemResultCode;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Service;\n@@ -133,22 +136,32 @@ public Map<String, FileEntry> generatorCode(TableDetails tableDetails, String ta\n \t\t\tfileEntry.setType(templateFile.getType());\n \n \t\t\t// \u66ff\u6362\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\n-\t\t\tString filename = StrUtil.format(templateFile.getFilename(), context);\n+\t\t\tString templateFilename = templateFile.getFilename();\n+\t\t\tString filename = StrUtil.format(templateFilename, context);\n \t\t\tfileEntry.setFilename(filename);\n \n \t\t\tString parentFilePath = GenUtils.evaluateRealPath(templateFile.getParentFilePath(), context);\n \t\t\tfileEntry.setParentFilePath(parentFilePath);\n \n \t\t\t// \u5982\u679c\u662f\u6587\u4ef6\n \t\t\tif (TemplateEntryTypeEnum.FILE.getType().equals(fileEntry.getType())) {\n-\t\t\t\tfileEntry.setFilePath(GenUtils.concatFilePath(parentFilePath, filename));\n+\t\t\t\tString filePath = GenUtils.concatFilePath(parentFilePath, filename);\n+\t\t\t\tfileEntry.setFilePath(filePath);\n \t\t\t\t// \u6587\u4ef6\u5185\u5bb9\u6e32\u67d3\n \t\t\t\tTemplateEngineTypeEnum engineTypeEnum = TemplateEngineTypeEnum.of(templateFile.getEngineType());\n-\t\t\t\tString content = templateEngineDelegator.render(engineTypeEnum, templateFile.getContent(), context);\n-\t\t\t\tfileEntry.setContent(content);\n+\n+\t\t\t\ttry {\n+\t\t\t\t\tString content = templateEngineDelegator.render(engineTypeEnum, templateFile.getContent(), context);\n+\t\t\t\t\tfileEntry.setContent(content);\n+\t\t\t\t}\n+\t\t\t\tcatch (TemplateRenderException ex) {\n+\t\t\t\t\tString errorMessage = StrUtil.format(\"\u6a21\u677f\u6e32\u67d3\u5f02\u5e38\uff0c\u6a21\u677f\u6587\u4ef6\u540d\uff1a\u3010{}\u3011\uff0c\u9519\u8bef\u8be6\u60c5\uff1a{}\", templateFilename,\n+\t\t\t\t\t\t\tex.getMessage());\n+\t\t\t\t\tthrow new BusinessException(SystemResultCode.SERVER_ERROR.getCode(), errorMessage);\n+\t\t\t\t}\n \t\t\t}\n \t\t\telse {\n-\t\t\t\tString currentPath = GenUtils.evaluateRealPath(templateFile.getFilename(), context);\n+\t\t\t\tString currentPath = GenUtils.evaluateRealPath(templateFilename, context);\n \t\t\t\tfileEntry.setFilePath(GenUtils.concatFilePath(parentFilePath, currentPath));\n \t\t\t}\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fe65ba3d19700eeaeee1dd671f1a2278e31995a8",
            "date": "2024-06-19T06:11:52Z",
            "author_login": "Hccake"
          },
          {
            "sha": "6274b5baddb854f391520b75ac9990e64744e6f7",
            "date": "2024-05-12T13:18:17Z",
            "author_login": "Hccake"
          },
          {
            "sha": "1d9d1f850b3863129d3d4dec241f42d993797ab5",
            "date": "2024-05-12T13:14:08Z",
            "author_login": "Hccake"
          },
          {
            "sha": "d7a43414750d607d82275f06d59fc26702fce10a",
            "date": "2024-04-20T01:09:59Z",
            "author_login": "mobaijun"
          },
          {
            "sha": "e894db5228ea1133e554838e0375966ceb92ea12",
            "date": "2024-04-18T05:52:20Z",
            "author_login": "mobaijun"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Ballcat Codegen provides the function of online editing code to generate templates. In versions prior to 1.0.0.beta.2, attackers can implement remote code execution through malicious code injection of the template engine. This happens because Velocity and freemarker templates are introduced but input verification is not done. The fault is rectified in version 1.0.0.beta.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-26T16:15:47.737",
    "last_modified": "2024-11-21T06:51:18.673",
    "fix_date": "2022-04-25T07:56:06Z"
  },
  "references": [
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/commit/84a7cb38daf0295b93aba21d562ec627e4eb463b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/issues/5",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/security/advisories/GHSA-fv3m-xhqw-9m79",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/commit/84a7cb38daf0295b93aba21d562ec627e4eb463b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/issues/5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ballcat-projects/ballcat-codegen/security/advisories/GHSA-fv3m-xhqw-9m79",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.417085",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ballcat-codegen",
    "owner": "ballcat-projects",
    "created_at": "2021-03-30T12:56:29Z",
    "updated_at": "2025-01-04T05:32:19Z",
    "pushed_at": "2024-08-30T06:37:11Z",
    "size": 6880,
    "stars": 71,
    "forks": 50,
    "open_issues": 2,
    "watchers": 71,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 191921,
      "Vue": 120440,
      "TypeScript": 43138,
      "Batchfile": 1454,
      "JavaScript": 784,
      "Dockerfile": 745,
      "Less": 231
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:25:38.767353"
  }
}