{
  "cve_id": "CVE-2022-24977",
  "github_data": {
    "repository": "ImpressCMS/impresscms",
    "fix_commit": "a66d7bb499faafab803e24833606028fa0ba4261",
    "related_commits": [
      "a66d7bb499faafab803e24833606028fa0ba4261",
      "a66d7bb499faafab803e24833606028fa0ba4261"
    ],
    "patch_url": "https://github.com/ImpressCMS/impresscms/commit/a66d7bb499faafab803e24833606028fa0ba4261.patch",
    "fix_commit_details": {
      "sha": "a66d7bb499faafab803e24833606028fa0ba4261",
      "commit_date": "2020-12-04T23:48:24Z",
      "author": {
        "login": "MekDrop",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevents using submitted filenames with ../ for controller (#812)",
        "length": 264,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 1285,
        "additions": 643,
        "deletions": 642
      },
      "files": [
        {
          "filename": "htdocs/libraries/icms/ipf/Controller.php",
          "status": "modified",
          "additions": 643,
          "deletions": 642,
          "patch": "@@ -1,642 +1,643 @@\n-<?php\r\n-\r\n-/**\r\n- * This class is responsible for providing operations to an object for managing the object's manipulation\r\n- *\r\n- * @copyright\tThe ImpressCMS Project http://www.impresscms.org/\r\n- * @license\t\thttp://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU General Public License (GPL)\r\n- * @category\tICMS\r\n- * @package\t\tIpf\r\n- * @subpackage\tController\r\n- * @since\t\t1.1\r\n- * @author\t\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A/S <www.idg.dk>\r\n- * @author\t\tmarcan <marcan@impresscms.org>\r\n- * @version\t\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\r\n- * @todo\t\tUse language constants for messages\r\n- */\r\n-\r\n-defined('ICMS_ROOT_PATH') or die(\"ImpressCMS root path not defined\");\r\n-\r\n-/**\r\n- *\r\n- *\r\n- * @category\tICMS\r\n- * @package\t\tIpf\r\n- * @subpackage\tController\r\n- *\r\n- */\r\n-class icms_ipf_Controller {\r\n-\r\n-\t/** */\r\n-\tpublic $handler;\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param $handler\r\n-\t */\r\n-\tpublic function __construct($handler) {\r\n-\t\t$this->handler=$handler;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobj\t\t$icmsObj\r\n-\t */\r\n-\tpublic function postDataToObject(&$icmsObj) {\r\n-\t\tforeach (array_keys($icmsObj->vars) as $key) {\r\n-\t\t\t// do not post data if control is a label\r\n-\t\t\t$control = $icmsObj->getControl($key);\r\n-\t\t\tif (is_array($control) && isset($control['name']) && $control['name'] == \"label\") continue;\r\n-\r\n-\t\t\tswitch ($icmsObj->vars[$key]['data_type']) {\r\n-\t\t\t\tcase XOBJ_DTYPE_IMAGE:\r\n-\t\t\t\t\tif (isset($_POST['url_' . $key]) && $_POST['url_' . $key] !='') {\r\n-\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, 'e');\r\n-\t\t\t\t\t\t$icmsObj->setVar($key, $_POST['url_' . $key]);\r\n-\t\t\t\t\t\tif (is_file($oldFile) ) unlink($oldFile);\r\n-\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tif (isset($_POST['delete_' . $key]) && $_POST['delete_' . $key] == '1') {\r\n-\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, 'e');\r\n-\t\t\t\t\t\t$icmsObj->setVar($key, '');\r\n-\t\t\t\t\t\tif (is_file($oldFile) ) unlink($oldFile);\r\n-\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tcase XOBJ_DTYPE_URLLINK:\r\n-\t\t\t\t\t$linkObj = $icmsObj->getUrlLinkObj($key);\r\n-\t\t\t\t\t$linkObj->setVar('mid', $_POST['mid_' . $key]);\r\n-\t\t\t\t\t$linkObj->setVar('caption', $_POST['caption_' . $key]);\r\n-\t\t\t\t\t$linkObj->setVar('description', $_POST['desc_' . $key]);\r\n-\t\t\t\t\t$linkObj->setVar('target', $_POST['target_' . $key]);\r\n-\t\t\t\t\t$linkObj->setVar('url', $_POST['url_' . $key]);\r\n-\t\t\t\t\tif ($linkObj->getVar('url') != '') {\r\n-\t\t\t\t\t\t$icmsObj->storeUrlLinkObj($linkObj);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\t//@todo: catch errors\r\n-\t\t\t\t\t$icmsObj->setVar($key, $linkObj->getVar('urllinkid'));\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tcase XOBJ_DTYPE_FILE:\r\n-\t\t\t\t\tif (!isset($_FILES['upload_' . $key]['name']) || $_FILES['upload_' . $key]['name'] == '') {\r\n-\t\t\t\t\t\t$fileObj = $icmsObj->getFileObj($key);\r\n-\t\t\t\t\t\t$fileObj->setVar('mid', $_POST['mid_' . $key]);\r\n-\t\t\t\t\t\t$fileObj->setVar('caption', $_POST['caption_' . $key]);\r\n-\t\t\t\t\t\t$fileObj->setVar('description', $_POST['desc_' . $key]);\r\n-\t\t\t\t\t\t$fileObj->setVar('url', $_POST['url_' . $key]);\r\n-\t\t\t\t\t\tif (!($fileObj->getVar('url') == '' && $fileObj->getVar('url') == '' && $fileObj->getVar('url') == '')) {\r\n-\t\t\t\t\t\t\t$res = $icmsObj->storeFileObj($fileObj);\r\n-\t\t\t\t\t\t\tif ($res) {\r\n-\t\t\t\t\t\t\t\t$icmsObj->setVar($key, $fileObj->getVar('fileid'));\r\n-\t\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t\t//error setted, but no error message (to be improved)\r\n-\t\t\t\t\t\t\t\t$icmsObj->setErrors($fileObj->getErrors());\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tcase XOBJ_DTYPE_STIME:\r\n-\t\t\t\tcase XOBJ_DTYPE_MTIME:\r\n-\t\t\t\tcase XOBJ_DTYPE_LTIME:\r\n-\t\t\t\t\t// check if this field's value is available in the POST array\r\n-\t\t\t\t\tif (is_array($_POST[$key]) && isset($_POST[$key]['date'])) {\r\n-\t\t\t\t\t\t$value = strtotime($_POST[$key]['date']) + $_POST[$key]['time'];\r\n-\t\t\t\t\t// in case the field is hidden, it's not formated so we can simply take the value and store it\r\n-\t\t\t\t\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\r\n-\t\t\t\t\t\t$value = (int)$_POST[$key];\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t$value = strtotime($_POST[$key]);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\t$icmsObj->setVar($key, $value);\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tcase XOBJ_DTYPE_URL:\r\n-\t\t\t\t\tif (isset($_POST[$key])) {\r\n-\t\t\t\t\t\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tcase XOBJ_DTYPE_ARRAY:\r\n-\t\t\t\t\tif (is_array($_POST[$key])) {\r\n-\t\t\t\t\t\t$icmsObj->setVar($key, serialize($_POST[$key]));\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tbreak;\r\n-\r\n-\t\t\t\tdefault:\r\n-\t\t\t\t\t$icmsObj->setVar($key, $_POST[$key]);\r\n-\t\t\t\t\tbreak;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobj\t\t$icmsObj\tObject\r\n-\t * @param\tint\t\t$objectid\r\n-\t * @param\tstr\t\t$created_success_msg\tMessage to display on successful creation\r\n-\t * @param\tstr\t\t$modified_success_msg\tMessage to display on successful modification\r\n-\t * @param\tbool\t$redirect_page\t\t\tWhether to redirect afterwards, or not\r\n-\t * @param\tbool\t$debug\t\t\t\t\tWhether to display debug information, or not\r\n-\t */\r\n-\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\r\n-\t\tglobal $impresscms;\r\n-\t\t$this->postDataToObject($icmsObj);\r\n-\r\n-\t\tif ($icmsObj->isNew()) {\r\n-\t\t\t$redirect_msg = $created_success_msg;\r\n-\t\t} else {\r\n-\t\t\t$redirect_msg = $modified_success_msg;\r\n-\t\t}\r\n-\r\n-\t\t// Check if there were uploaded files\r\n-\t\t$uploaderResult = true;\r\n-\t\tif (isset($_POST['icms_upload_image']) || isset($_POST['icms_upload_file'])) {\r\n-\t\t\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\r\n-\t\t\tforeach ( $_FILES as $name=>$file_array) {\r\n-\t\t\t\tif (isset ($file_array['name']) && $file_array['name'] != \"\" && in_array(str_replace('upload_', '', $name), array_keys($icmsObj->vars))) {\r\n-\t\t\t\t\tif ($uploaderObj->fetchMedia($name)) {\r\n-\t\t\t\t\t\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\r\n-\t\t\t\t\t\tif ($uploaderObj->upload()) {\r\n-\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && true;\r\n-\t\t\t\t\t\t\t// Find the related field in the icms_ipf_Object\r\n-\t\t\t\t\t\t\t$related_field = str_replace('upload_', '', $name);\r\n-\t\t\t\t\t\t\t$uploadedArray[] = $related_field;\r\n-\t\t\t\t\t\t\t// if it's a richfile\r\n-\t\t\t\t\t\t\tif ($icmsObj->vars[$related_field]['data_type'] == XOBJ_DTYPE_FILE) {\r\n-\t\t\t\t\t\t\t\t$object_fileurl = $icmsObj->getUploadDir();\r\n-\t\t\t\t\t\t\t\t$fileObj = $icmsObj->getFileObj($related_field);\r\n-\t\t\t\t\t\t\t\t$fileObj->setVar('url', $object_fileurl . $uploaderObj->getSavedFileName());\r\n-\t\t\t\t\t\t\t\t$fileObj->setVar('mid', $_POST['mid_' . $related_field]);\r\n-\t\t\t\t\t\t\t\t$fileObj->setVar('caption', $_POST['caption_' . $related_field]);\r\n-\t\t\t\t\t\t\t\t$fileObj->setVar('description', $_POST['desc_' . $related_field]);\r\n-\t\t\t\t\t\t\t\t$icmsObj->storeFileObj($fileObj);\r\n-\t\t\t\t\t\t\t\t$icmsObj->setVar($related_field, $fileObj->getVar('fileid'));\r\n-\t\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\r\n-\t\t\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\r\n-\t\t\t\t\t\t\t\t}\r\n-\r\n-\t\t\t\t\t\t\t\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\r\n-\t\t\t\t\t\t\t\tif (is_file($old_file) ) unlink($old_file);\r\n-\t\t\t\t\t\t\t\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\r\n-\r\n-\t\t\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\r\n-\t\t\t\t\t\t\t\tif (!$eventResult) {\r\n-\t\t\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\r\n-\t\t\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\r\n-\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t\t$icmsObj->setErrors($uploaderObj->getErrors(false));\r\n-\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\t$icmsObj->setErrors($uploaderObj->getErrors(false));\r\n-\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\r\n-\t\t\t\t\t}\r\n-\t\t\t\t}\r\n-\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\tif ($uploaderResult) {\r\n-\t\t\tif ($debug) {\r\n-\t\t\t\t$storeResult = $this->handler->insertD($icmsObj);\r\n-\t\t\t} else {\r\n-\t\t\t\t$storeResult = $this->handler->insert($icmsObj);\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\t$storeResult = false;\r\n-\t\t}\r\n-\r\n-\t\tif ($storeResult) {\r\n-\t\t\tif ($this->handler->getPermissions()) {\r\n-\t\t\t\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\r\n-\t\t\t\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\tif ($redirect_page === null) {\r\n-\t\t\treturn $icmsObj;\r\n-\t\t} else {\r\n-\t\t\tif (!$storeResult) {\r\n-\t\t\t\tredirect_header($impresscms->urls['previouspage'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\r\n-\t\t\t} else {\r\n-\t\t\t\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\r\n-\t\t\t\tredirect_header($redirect_page, 2, $redirect_msg);\r\n-\t\t\t}\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Store the object in the database autmatically from a form sending POST data\r\n-\t *\r\n-\t * @param string $created_success_msg message to display if new object was created\r\n-\t * @param string $modified_success_msg message to display if object was successfully edited\r\n-\t * @param string $created_redir_page redirect page after creating the object\r\n-\t * @param string $modified_redir_page redirect page after editing the object\r\n-\t * @param string $redirect_page redirect page, if not set, then we backup once\r\n-\t * @param bool $exit if set to TRUE then the script ends\r\n-\t * @return bool\r\n-\t */\r\n-\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\r\n-\t\t$objectid = ( isset($_POST[$this->handler->keyName]) )\r\n-\t\t\t\t? (int) $_POST[$this->handler->keyName]\r\n-\t\t\t\t: 0;\r\n-\t\tif ($debug) {\r\n-\t\t\tif ($x_param) {\r\n-\t\t\t\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\r\n-\t\t\t} else {\r\n-\t\t\t\t$icmsObj = $this->handler->getD($objectid);\r\n-\t\t\t}\r\n-\r\n-\t\t} else {\r\n-\t\t\tif ($x_param) {\r\n-\t\t\t\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\r\n-\t\t\t} else {\r\n-\t\t\t\t$icmsObj = $this->handler->get($objectid);\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\t/**\r\n-\t\t * @todo multilanguage persistable handler is not fully implemented yet\r\n-\t\t */\r\n-\r\n-\t\t// if handler is the Multilanguage handler, we will need to treat this for multilanguage\r\n-\t\tif (is_subclass_of($this->handler, 'icmspersistablemlobjecthandler')) {\r\n-\r\n-\t\t\tif ($icmsObj->isNew()) {\r\n-\t\t\t\t// This is a new object. We need to store the meta data and then the language data\r\n-\t\t\t\t// First, we will get rid of the multilanguage data to only store the meta data\r\n-\t\t\t\t$icmsObj->stripMultilanguageFields();\r\n-\t\t\t\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\r\n-\t\t\t\t/**\r\n-\t\t\t\t * @todo we need to trap potential errors here\r\n-\t\t\t\t */\r\n-\r\n-\t\t\t\t// ok, the meta daa is stored. Let's recreate the object and then\r\n-\t\t\t\t// get rid of anything not multilanguage\r\n-\t\t\t\tunset($icmsObj);\r\n-\t\t\t\t$icmsObj = $this->handler->get($objectid);\r\n-\t\t\t\t$icmsObj->stripNonMultilanguageFields();\r\n-\r\n-\t\t\t\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\r\n-\t\t\t\t$this->handler->changeTableNameForML();\r\n-\t\t\t\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\r\n-\r\n-\t\t\t\treturn $ret;\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Stores an object and shows debug information\r\n-\t */\r\n-\tpublic function &storeicms_ipf_ObjectD() {\r\n-\t\treturn $this->storeicms_ipf_Object(true);\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tbool\t$debug\r\n-\t * @param\tbool\t$xparam\r\n-\t * @see\t\tstoreFromDefaultForm\r\n-\t */\r\n-\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\r\n-\t\t$ret =& $this->storeFromDefaultForm('', '', null, $debug, $xparam);\r\n-\r\n-\t\treturn $ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Handles deletion of an object which keyid is passed as a GET param\r\n-\t *\r\n-\t * @param string $redir_page redirect page after deleting the object\r\n-\t * @return bool\r\n-\t */\r\n-\tpublic function handleObjectDeletion($confirm_msg = false, $op='del', $userSide=false) {\r\n-\t\tglobal $impresscms;\r\n-\r\n-\t\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\r\n-\t\t$icmsObj = $this->handler->get($objectid);\r\n-\r\n-\t\tif ($icmsObj->isNew()) {\r\n-\t\t\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\r\n-\t\t\texit();\r\n-\t\t}\r\n-\r\n-\t\t$confirm = ( isset($_POST['confirm']) ) ? $_POST['confirm'] : 0;\r\n-\t\tif ($confirm) {\r\n-\t\t\tif (!$this->handler->delete($icmsObj)) {\r\n-\t\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\r\n-\t\t\t\texit;\r\n-\t\t\t}\r\n-\r\n-\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_SUCCESS);\r\n-\t\t\texit();\r\n-\t\t} else {\r\n-\t\t\t// no confirm: show deletion condition\r\n-\r\n-\t\t\ticms_cp_header();\r\n-\r\n-\t\t\tif (!$confirm_msg) {\r\n-\t\t\t\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\r\n-\t\t\t}\r\n-\r\n-\t\t\t$hiddens = array(\r\n-\t\t\t\t\t\t'op' => $op,\r\n-\t\t\t\t\t\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\r\n-\t\t\t\t\t\t'confirm' => 1,\r\n-\t\t\t\t\t\t'redirect_page' => $impresscms->urls['previouspage']\r\n-\t\t\t);\r\n-\t\t\tif ($this->handler->_moduleName == 'system') {\r\n-\t\t\t\t$hiddens['fct'] = isset($_GET['fct']) ? $_GET['fct'] : false;\r\n-\t\t\t}\r\n-\t\t\ticms_core_Message::confirm($hiddens, xoops_getenv('SCRIPT_NAME'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\r\n-\r\n-\t\t\ticms_cp_footer();\r\n-\r\n-\t\t}\r\n-\t\texit();\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tbool\t$confirm_msg\r\n-\t * @param\tstring\t$op\r\n-\t */\r\n-\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op='del') {\r\n-\t\tglobal $icmsTpl, $impresscms;\r\n-\r\n-\t\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\r\n-\t\t$icmsObj = $this->handler->get($objectid);\r\n-\r\n-\t\tif ($icmsObj->isNew()) {\r\n-\t\t\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\r\n-\t\t\texit();\r\n-\t\t}\r\n-\r\n-\t\t$confirm = ( isset($_POST['confirm']) ) ? $_POST['confirm'] : 0;\r\n-\t\tif ($confirm) {\r\n-\t\t\tif (!$this->handler->delete($icmsObj)) {\r\n-\t\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\r\n-\t\t\t\texit;\r\n-\t\t\t}\r\n-\r\n-\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_SUCCESS);\r\n-\t\t\texit();\r\n-\t\t} else {\r\n-\t\t\t// no confirm: show deletion condition\r\n-\t\t\tif (!$confirm_msg) {\r\n-\t\t\t\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\r\n-\t\t\t}\r\n-\r\n-\t\t\tob_start();\r\n-\t\t\ticms_core_Message::confirm(array(\r\n-\t\t\t\t'op' => $op,\r\n-\t\t\t\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\r\n-\t\t\t\t'confirm' => 1,\r\n-\t\t\t\t'redirect_page' => $impresscms->urls['previouspage']),\r\n-\t\t\t\txoops_getenv('SCRIPT_NAME'),\r\n-\t\t\t\tsprintf($confirm_msg ,\r\n-\t\t\t\t$icmsObj->getVar($this->handler->identifierName)),\r\n-\t\t\t\t_CO_ICMS_DELETE\r\n-\t\t\t);\r\n-\t\t\t$icmspersistable_delete_confirm = ob_get_clean();\r\n-\t\t\t$icmsTpl->assign('icmspersistable_delete_confirm', $icmspersistable_delete_confirm);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\r\n-\t *\r\n-\t * @param\tobject\t$icmsObj\treference to the object from which we want the user side link\r\n-\t * @param\tbool\t$onlyUrl\twhether or not to return a simple URL or a full <a> link\r\n-\t * @param\tbool\t$withimage\treturn a linked image instead of linked text\r\n-\t * @return\tstring\tadmin side link to the object\r\n-\t */\r\n-\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\r\n-\t\t$ret = $this->handler->_moduleUrl . \"admin/\"\r\n-\t\t\t. $this->handler->_page . \"?op=view&amp;\"\r\n-\t\t\t. $this->handler->keyName . \"=\"\r\n-\t\t\t. $icmsObj->getVar($this->handler->keyName);\r\n-\t\tif ($onlyUrl) {\r\n-\t\t\treturn $ret;\r\n-\t\t} elseif ($withimage) {\r\n-\t\t\treturn \"<a href='\" . $ret . \"'>\r\n-\t\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL\r\n-\t\t\t\t\t. \"/actions/viewmag.png' style='vertical-align: middle;' alt='\"\r\n-\t\t\t\t\t. _CO_ICMS_ADMIN_VIEW . \"'  title='\"\r\n-\t\t\t\t\t. _CO_ICMS_ADMIN_VIEW . \"'/></a>\";\r\n-\t\t}\r\n-\r\n-\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Retrieve the object user side link\r\n-\t *\r\n-\t * @param object $icmsObj reference to the object from which we want the user side link\r\n-\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\r\n-\t * @return string user side link to the object\r\n-\t */\r\n-\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\r\n-\t\t/**\r\n-\t\t * @todo URL Rewrite feature is not finished yet...\r\n-\t\t */\r\n-\t\t//$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\r\n-\t\t//$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\r\n-\t\t$seoMode = false;\r\n-\t\t$seoModuleName = $this->handler->_moduleName;\r\n-\r\n-\t\t/**\r\n-\t\t * $seoIncludeId feature is not finished yet, so let's put it always to true\r\n-\t\t */\r\n-\t\t//$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\r\n-\t\t$seoIncludeId = true;\r\n-\r\n-\t\t/*if ($seoMode == 'rewrite') {\r\n-\t\t\t$ret = ICMS_URL . '/' . $seoModuleName . '.' . $this->handler->_itemname . ($seoIncludeId ? '.'\t. $icmsObj->getVar($this->handler->keyName) : ''). '/' . $icmsObj->getVar('short_url') . '.html';\r\n-\t\t\t} else if ($seoMode == 'pathinfo') {\r\n-\t\t\t$ret = SMARTOBJECT_URL . 'seo.php/' . $seoModuleName . '.' . $this->handler->_itemname . ($seoIncludeId ? '.'\t. $icmsObj->getVar($this->handler->keyName) : ''). '/' . $icmsObj->getVar('short_url') . '.html';\r\n-\t\t\t} else {\r\n-\t\t\t*/\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t//}\r\n-\r\n-\t\tif (!$onlyUrl) {\r\n-\t\t\t$ret = \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t\t}\r\n-\t\treturn $ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * This method returns a view link of the Object\r\n-\t *\r\n-\t * @param icms_ipf_Object $icmsObj\r\n-\t * @param boolean $onlyUrl\r\n-\t * @param boolean $withimage\r\n-\t * @param boolean $userSide\r\n-\t * @return string\r\n-\t */\r\n-\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\r\n-\t\tif ($this->handler->_moduleName != 'system') {\r\n-\t\t\t$admin_side = $userSide ? '' : 'admin/';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t} else {\r\n-\t\t\t$admin_side = '';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . 'admin.php?fct='\r\n-\t\t\t\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\r\n-\t\t\t\t. $this->handler->keyName . \"=\"\r\n-\t\t\t\t. $icmsObj->getVar($this->handler->keyName);\r\n-\t\t}\r\n-\t\tif ($onlyUrl) {\r\n-\t\t\treturn $ret;\r\n-\t\t} elseif ($withimage) {\r\n-\t\t\treturn \"<a href='\" . $ret . \"'>\r\n-\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/viewmag.png' style='vertical-align: middle;' alt='\"\r\n-\t\t\t\t. _PREVIEW . \"'  title='\" . _PREVIEW . \"'/></a>\";\r\n-\t\t}\r\n-\r\n-\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobject\t$icmsObj\r\n-\t * @param\tbool\t$onlyUrl\r\n-\t * @param\tbool\t$withimage\r\n-\t */\r\n-\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\r\n-\t\t$ret = $this->handler->_moduleUrl . \"admin/\"\r\n-\t\t\t. $this->handler->_page\r\n-\t\t\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\r\n-\t\t\t. \"&amp;language=\" . $icmsObj->getVar('language');\r\n-\t\tif ($onlyUrl) {\r\n-\t\t\treturn $ret;\r\n-\t\t} elseif ($withimage) {\r\n-\t\t\treturn \"<a href='\" . $ret . \"'>\r\n-\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/wizard.png' style='vertical-align: middle;' alt='\"\r\n-\t\t\t\t. _CO_ICMS_LANGUAGE_MODIFY . \"'  title='\" . _CO_ICMS_LANGUAGE_MODIFY . \"'/></a>\";\r\n-\t\t}\r\n-\r\n-\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobj\t\t$icmsObj\r\n-\t * @param\tbool\t$onlyUrl\r\n-\t * @param\tbool\t$withimage\r\n-\t * @param\tbool\t$userSide\r\n-\t */\r\n-\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\r\n-\t\tif ($this->handler->_moduleName != 'system') {\r\n-\t\t\t$admin_side = $userSide ? '' : 'admin/';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\r\n-\t\t\t\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t} else {\r\n-\t\t\t/**\r\n-\t\t\t * @todo: to be implemented...\r\n-\t\t\t */\r\n-\t\t\t//$admin_side = $userSide ? '' : 'admin/';\r\n-\t\t\t$admin_side = '';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side\r\n-\t\t\t\t. 'admin.php?fct=' . $this->handler->_itemname\r\n-\t\t\t\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t}\r\n-\t\tif ($onlyUrl) {\r\n-\t\t\treturn $ret;\r\n-\t\t} elseif ($withimage) {\r\n-\t\t\treturn \"<a href='\" . $ret . \"'>\r\n-\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/edit.png' style='vertical-align: middle;' alt='\"\r\n-\t\t\t\t. _CO_ICMS_MODIFY . \"'  title='\" . _CO_ICMS_MODIFY . \"'/></a>\";\r\n-\t\t}\r\n-\r\n-\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobj\t\t$icmsObj\r\n-\t * @param\tbool\t$onlyUrl\r\n-\t * @param\tbool\t$withimage\r\n-\t * @param\tbool\t$userSide\r\n-\t */\r\n-\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\r\n-\t\tif ($this->handler->_moduleName != 'system') {\r\n-\t\t\t$admin_side = $userSide ? '' : 'admin/';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\r\n-\t\t\t\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t} else {\r\n-\t\t\t/**\r\n-\t\t\t * @todo: to be implemented...\r\n-\t\t\t */\r\n-\t\t\t//$admin_side = $userSide ? '' : 'admin/';\r\n-\t\t\t$admin_side = '';\r\n-\t\t\t$ret = $this->handler->_moduleUrl . $admin_side\r\n-\t\t\t\t. 'admin.php?fct=' . $this->handler->_itemname\r\n-\t\t\t\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t}\r\n-\t\tif ($onlyUrl) {\r\n-\t\t\treturn $ret;\r\n-\t\t} elseif ($withimage) {\r\n-\t\t\treturn \"<a href='\" . $ret . \"'>\r\n-\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/editdelete.png' style='vertical-align: middle;' alt='\"\r\n-\t\t\t\t. _CO_ICMS_DELETE . \"'  title='\" . _CO_ICMS_DELETE . \"'/></a>\";\r\n-\t\t}\r\n-\r\n-\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\r\n-\t}\r\n-\r\n-\t/**\r\n-\t *\r\n-\t * @param\tobj\t\t$icmsObj\r\n-\t * @todo\tNeeds to be completed\r\n-\t */\r\n-\tpublic function getPrintAndMailLink($icmsObj) {\r\n-\t\tglobal $icmsConfig, $impresscms;\r\n-\r\n-\t\t$ret = '';\r\n-\t\t/*\t\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\r\n-\t\t $js = \"javascript:openWithSelfMain('\" . $printlink . \"', 'smartpopup', 700, 519);\";\r\n-\t\t $printlink = '<a href=\"' . $js . '\"><img  src=\"' . ICMS_IMAGES_SET_URL . '/actions/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"/></a>';\r\n-\r\n-\t\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\r\n-\t\t $link = $impresscms->urls['full']();\r\n-\t\t $mid = $icmsModule->getVar('mid');\r\n-\t\t $friendlink = \"<a href=\\\"javascript:openWithSelfMain('\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"', ',',',',',','sendmessage', 674, 500);\\\"><img src=\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\"  alt=\\\"\" . _CO_ICMS_EMAIL . \"\\\" title=\\\"\" . _CO_ICMS_EMAIL . \"\\\" style=\\\"vertical-align: middle;\\\"/></a>\";\r\n-\r\n-\t\t $ret = '<span id=\"smartobject_print_button\">' . $printlink . \"&nbsp;</span>\" . '<span id=\"smartobject_mail_button\">' . $friendlink . '</span>';\r\n-\t\t */\r\n-\t\treturn $ret;\r\n-\t}\r\n-\r\n-\t/**\r\n-\t * Creates a string from the object's module name and item name\r\n-\t */\r\n-\tpublic function getModuleItemString() {\r\n-\t\t$ret = $this->handler->_moduleName . '_' . $this->handler->_itemname;\r\n-\t\treturn $ret;\r\n-\t}\r\n-}\r\n-\r\n+<?php\n+\n+/**\n+ * This class is responsible for providing operations to an object for managing the object's manipulation\n+ *\n+ * @copyright\tThe ImpressCMS Project http://www.impresscms.org/\n+ * @license\t\thttp://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU General Public License (GPL)\n+ * @category\tICMS\n+ * @package\t\tIpf\n+ * @subpackage\tController\n+ * @since\t\t1.1\n+ * @author\t\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A/S <www.idg.dk>\n+ * @author\t\tmarcan <marcan@impresscms.org>\n+ * @version\t\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\n+ * @todo\t\tUse language constants for messages\n+ */\n+\n+defined('ICMS_ROOT_PATH') or die(\"ImpressCMS root path not defined\");\n+\n+/**\n+ *\n+ *\n+ * @category\tICMS\n+ * @package\t\tIpf\n+ * @subpackage\tController\n+ *\n+ */\n+class icms_ipf_Controller {\n+\n+\t/** */\n+\tpublic $handler;\n+\n+\t/**\n+\t *\n+\t * @param $handler\n+\t */\n+\tpublic function __construct($handler) {\n+\t\t$this->handler=$handler;\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobj\t\t$icmsObj\n+\t */\n+\tpublic function postDataToObject(&$icmsObj) {\n+\t\tforeach (array_keys($icmsObj->vars) as $key) {\n+\t\t\t// do not post data if control is a label\n+\t\t\t$control = $icmsObj->getControl($key);\n+\t\t\tif (is_array($control) && isset($control['name']) && $control['name'] == \"label\") continue;\n+\n+\t\t\tswitch ($icmsObj->vars[$key]['data_type']) {\n+\t\t\t\tcase XOBJ_DTYPE_IMAGE:\n+\t\t\t\t\tif (isset($_POST['url_' . $key]) && $_POST['url_' . $key] !='') {\n+\t\t\t\t\t\t$_POST['url_' . $key] = preg_replace('|[\\.]+\\/|', './', $_POST['url_' . $key]);\n+\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\n+\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, 'e');\n+\t\t\t\t\t\t$icmsObj->setVar($key, $_POST['url_' . $key]);\n+\t\t\t\t\t\tif (is_file($oldFile) ) unlink($oldFile);\n+\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\n+\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (isset($_POST['delete_' . $key]) && $_POST['delete_' . $key] == '1') {\n+\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\n+\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, 'e');\n+\t\t\t\t\t\t$icmsObj->setVar($key, '');\n+\t\t\t\t\t\tif (is_file($oldFile) ) unlink($oldFile);\n+\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\n+\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tcase XOBJ_DTYPE_URLLINK:\n+\t\t\t\t\t$linkObj = $icmsObj->getUrlLinkObj($key);\n+\t\t\t\t\t$linkObj->setVar('mid', $_POST['mid_' . $key]);\n+\t\t\t\t\t$linkObj->setVar('caption', $_POST['caption_' . $key]);\n+\t\t\t\t\t$linkObj->setVar('description', $_POST['desc_' . $key]);\n+\t\t\t\t\t$linkObj->setVar('target', $_POST['target_' . $key]);\n+\t\t\t\t\t$linkObj->setVar('url', $_POST['url_' . $key]);\n+\t\t\t\t\tif ($linkObj->getVar('url') != '') {\n+\t\t\t\t\t\t$icmsObj->storeUrlLinkObj($linkObj);\n+\t\t\t\t\t}\n+\t\t\t\t\t//@todo: catch errors\n+\t\t\t\t\t$icmsObj->setVar($key, $linkObj->getVar('urllinkid'));\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tcase XOBJ_DTYPE_FILE:\n+\t\t\t\t\tif (!isset($_FILES['upload_' . $key]['name']) || $_FILES['upload_' . $key]['name'] == '') {\n+\t\t\t\t\t\t$fileObj = $icmsObj->getFileObj($key);\n+\t\t\t\t\t\t$fileObj->setVar('mid', $_POST['mid_' . $key]);\n+\t\t\t\t\t\t$fileObj->setVar('caption', $_POST['caption_' . $key]);\n+\t\t\t\t\t\t$fileObj->setVar('description', $_POST['desc_' . $key]);\n+\t\t\t\t\t\t$fileObj->setVar('url', preg_replace('|[\\.]+\\/|', './', $_POST['url_' . $key]));\n+\t\t\t\t\t\tif (!($fileObj->getVar('url') == '' && $fileObj->getVar('url') == '' && $fileObj->getVar('url') == '')) {\n+\t\t\t\t\t\t\t$res = $icmsObj->storeFileObj($fileObj);\n+\t\t\t\t\t\t\tif ($res) {\n+\t\t\t\t\t\t\t\t$icmsObj->setVar($key, $fileObj->getVar('fileid'));\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t//error setted, but no error message (to be improved)\n+\t\t\t\t\t\t\t\t$icmsObj->setErrors($fileObj->getErrors());\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tcase XOBJ_DTYPE_STIME:\n+\t\t\t\tcase XOBJ_DTYPE_MTIME:\n+\t\t\t\tcase XOBJ_DTYPE_LTIME:\n+\t\t\t\t\t// check if this field's value is available in the POST array\n+\t\t\t\t\tif (is_array($_POST[$key]) && isset($_POST[$key]['date'])) {\n+\t\t\t\t\t\t$value = strtotime($_POST[$key]['date']) + $_POST[$key]['time'];\n+\t\t\t\t\t// in case the field is hidden, it's not formated so we can simply take the value and store it\n+\t\t\t\t\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\n+\t\t\t\t\t\t$value = (int)$_POST[$key];\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t$value = strtotime($_POST[$key]);\n+\t\t\t\t\t}\n+\t\t\t\t\t$icmsObj->setVar($key, $value);\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tcase XOBJ_DTYPE_URL:\n+\t\t\t\t\tif (isset($_POST[$key])) {\n+\t\t\t\t\t\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tcase XOBJ_DTYPE_ARRAY:\n+\t\t\t\t\tif (is_array($_POST[$key])) {\n+\t\t\t\t\t\t$icmsObj->setVar($key, serialize($_POST[$key]));\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\n+\t\t\t\tdefault:\n+\t\t\t\t\t$icmsObj->setVar($key, $_POST[$key]);\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobj\t\t$icmsObj\tObject\n+\t * @param\tint\t\t$objectid\n+\t * @param\tstr\t\t$created_success_msg\tMessage to display on successful creation\n+\t * @param\tstr\t\t$modified_success_msg\tMessage to display on successful modification\n+\t * @param\tbool\t$redirect_page\t\t\tWhether to redirect afterwards, or not\n+\t * @param\tbool\t$debug\t\t\t\t\tWhether to display debug information, or not\n+\t */\n+\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\n+\t\tglobal $impresscms;\n+\t\t$this->postDataToObject($icmsObj);\n+\n+\t\tif ($icmsObj->isNew()) {\n+\t\t\t$redirect_msg = $created_success_msg;\n+\t\t} else {\n+\t\t\t$redirect_msg = $modified_success_msg;\n+\t\t}\n+\n+\t\t// Check if there were uploaded files\n+\t\t$uploaderResult = true;\n+\t\tif (isset($_POST['icms_upload_image']) || isset($_POST['icms_upload_file'])) {\n+\t\t\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\n+\t\t\tforeach ( $_FILES as $name=>$file_array) {\n+\t\t\t\tif (isset ($file_array['name']) && $file_array['name'] != \"\" && in_array(str_replace('upload_', '', $name), array_keys($icmsObj->vars))) {\n+\t\t\t\t\tif ($uploaderObj->fetchMedia($name)) {\n+\t\t\t\t\t\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\n+\t\t\t\t\t\tif ($uploaderObj->upload()) {\n+\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && true;\n+\t\t\t\t\t\t\t// Find the related field in the icms_ipf_Object\n+\t\t\t\t\t\t\t$related_field = str_replace('upload_', '', $name);\n+\t\t\t\t\t\t\t$uploadedArray[] = $related_field;\n+\t\t\t\t\t\t\t// if it's a richfile\n+\t\t\t\t\t\t\tif ($icmsObj->vars[$related_field]['data_type'] == XOBJ_DTYPE_FILE) {\n+\t\t\t\t\t\t\t\t$object_fileurl = $icmsObj->getUploadDir();\n+\t\t\t\t\t\t\t\t$fileObj = $icmsObj->getFileObj($related_field);\n+\t\t\t\t\t\t\t\t$fileObj->setVar('url', $object_fileurl . $uploaderObj->getSavedFileName());\n+\t\t\t\t\t\t\t\t$fileObj->setVar('mid', $_POST['mid_' . $related_field]);\n+\t\t\t\t\t\t\t\t$fileObj->setVar('caption', $_POST['caption_' . $related_field]);\n+\t\t\t\t\t\t\t\t$fileObj->setVar('description', $_POST['desc_' . $related_field]);\n+\t\t\t\t\t\t\t\t$icmsObj->storeFileObj($fileObj);\n+\t\t\t\t\t\t\t\t$icmsObj->setVar($related_field, $fileObj->getVar('fileid'));\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('beforeFileUnlink', $icmsObj);\n+\t\t\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\n+\t\t\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\n+\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\n+\t\t\t\t\t\t\t\tif (is_file($old_file) ) unlink($old_file);\n+\t\t\t\t\t\t\t\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\n+\n+\t\t\t\t\t\t\t\t$eventResult = $this->handler->executeEvent('afterFileUnlink', $icmsObj);\n+\t\t\t\t\t\t\t\tif (!$eventResult) {\n+\t\t\t\t\t\t\t\t\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\n+\t\t\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t$icmsObj->setErrors($uploaderObj->getErrors(false));\n+\t\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t$icmsObj->setErrors($uploaderObj->getErrors(false));\n+\t\t\t\t\t\t$uploaderResult = $uploaderResult && false;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t}\n+\t\t}\n+\n+\t\tif ($uploaderResult) {\n+\t\t\tif ($debug) {\n+\t\t\t\t$storeResult = $this->handler->insertD($icmsObj);\n+\t\t\t} else {\n+\t\t\t\t$storeResult = $this->handler->insert($icmsObj);\n+\t\t\t}\n+\t\t} else {\n+\t\t\t$storeResult = false;\n+\t\t}\n+\n+\t\tif ($storeResult) {\n+\t\t\tif ($this->handler->getPermissions()) {\n+\t\t\t\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\n+\t\t\t\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\n+\t\t\t}\n+\t\t}\n+\n+\t\tif ($redirect_page === null) {\n+\t\t\treturn $icmsObj;\n+\t\t} else {\n+\t\t\tif (!$storeResult) {\n+\t\t\t\tredirect_header($impresscms->urls['previouspage'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\n+\t\t\t} else {\n+\t\t\t\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\n+\t\t\t\tredirect_header($redirect_page, 2, $redirect_msg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Store the object in the database autmatically from a form sending POST data\n+\t *\n+\t * @param string $created_success_msg message to display if new object was created\n+\t * @param string $modified_success_msg message to display if object was successfully edited\n+\t * @param string $created_redir_page redirect page after creating the object\n+\t * @param string $modified_redir_page redirect page after editing the object\n+\t * @param string $redirect_page redirect page, if not set, then we backup once\n+\t * @param bool $exit if set to TRUE then the script ends\n+\t * @return bool\n+\t */\n+\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\n+\t\t$objectid = ( isset($_POST[$this->handler->keyName]) )\n+\t\t\t\t? (int) $_POST[$this->handler->keyName]\n+\t\t\t\t: 0;\n+\t\tif ($debug) {\n+\t\t\tif ($x_param) {\n+\t\t\t\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\n+\t\t\t} else {\n+\t\t\t\t$icmsObj = $this->handler->getD($objectid);\n+\t\t\t}\n+\n+\t\t} else {\n+\t\t\tif ($x_param) {\n+\t\t\t\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\n+\t\t\t} else {\n+\t\t\t\t$icmsObj = $this->handler->get($objectid);\n+\t\t\t}\n+\t\t}\n+\n+\t\t/**\n+\t\t * @todo multilanguage persistable handler is not fully implemented yet\n+\t\t */\n+\n+\t\t// if handler is the Multilanguage handler, we will need to treat this for multilanguage\n+\t\tif (is_subclass_of($this->handler, 'icmspersistablemlobjecthandler')) {\n+\n+\t\t\tif ($icmsObj->isNew()) {\n+\t\t\t\t// This is a new object. We need to store the meta data and then the language data\n+\t\t\t\t// First, we will get rid of the multilanguage data to only store the meta data\n+\t\t\t\t$icmsObj->stripMultilanguageFields();\n+\t\t\t\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\n+\t\t\t\t/**\n+\t\t\t\t * @todo we need to trap potential errors here\n+\t\t\t\t */\n+\n+\t\t\t\t// ok, the meta daa is stored. Let's recreate the object and then\n+\t\t\t\t// get rid of anything not multilanguage\n+\t\t\t\tunset($icmsObj);\n+\t\t\t\t$icmsObj = $this->handler->get($objectid);\n+\t\t\t\t$icmsObj->stripNonMultilanguageFields();\n+\n+\t\t\t\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\n+\t\t\t\t$this->handler->changeTableNameForML();\n+\t\t\t\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\n+\n+\t\t\t\treturn $ret;\n+\t\t\t}\n+\t\t} else {\n+\t\t\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Stores an object and shows debug information\n+\t */\n+\tpublic function &storeicms_ipf_ObjectD() {\n+\t\treturn $this->storeicms_ipf_Object(true);\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tbool\t$debug\n+\t * @param\tbool\t$xparam\n+\t * @see\t\tstoreFromDefaultForm\n+\t */\n+\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\n+\t\t$ret =& $this->storeFromDefaultForm('', '', null, $debug, $xparam);\n+\n+\t\treturn $ret;\n+\t}\n+\n+\t/**\n+\t * Handles deletion of an object which keyid is passed as a GET param\n+\t *\n+\t * @param string $redir_page redirect page after deleting the object\n+\t * @return bool\n+\t */\n+\tpublic function handleObjectDeletion($confirm_msg = false, $op='del', $userSide=false) {\n+\t\tglobal $impresscms;\n+\n+\t\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\n+\t\t$icmsObj = $this->handler->get($objectid);\n+\n+\t\tif ($icmsObj->isNew()) {\n+\t\t\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\n+\t\t\texit();\n+\t\t}\n+\n+\t\t$confirm = ( isset($_POST['confirm']) ) ? $_POST['confirm'] : 0;\n+\t\tif ($confirm) {\n+\t\t\tif (!$this->handler->delete($icmsObj)) {\n+\t\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\n+\t\t\t\texit;\n+\t\t\t}\n+\n+\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_SUCCESS);\n+\t\t\texit();\n+\t\t} else {\n+\t\t\t// no confirm: show deletion condition\n+\n+\t\t\ticms_cp_header();\n+\n+\t\t\tif (!$confirm_msg) {\n+\t\t\t\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\n+\t\t\t}\n+\n+\t\t\t$hiddens = array(\n+\t\t\t\t\t\t'op' => $op,\n+\t\t\t\t\t\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\n+\t\t\t\t\t\t'confirm' => 1,\n+\t\t\t\t\t\t'redirect_page' => $impresscms->urls['previouspage']\n+\t\t\t);\n+\t\t\tif ($this->handler->_moduleName == 'system') {\n+\t\t\t\t$hiddens['fct'] = isset($_GET['fct']) ? $_GET['fct'] : false;\n+\t\t\t}\n+\t\t\ticms_core_Message::confirm($hiddens, xoops_getenv('SCRIPT_NAME'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\n+\n+\t\t\ticms_cp_footer();\n+\n+\t\t}\n+\t\texit();\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tbool\t$confirm_msg\n+\t * @param\tstring\t$op\n+\t */\n+\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op='del') {\n+\t\tglobal $icmsTpl, $impresscms;\n+\n+\t\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\n+\t\t$icmsObj = $this->handler->get($objectid);\n+\n+\t\tif ($icmsObj->isNew()) {\n+\t\t\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\n+\t\t\texit();\n+\t\t}\n+\n+\t\t$confirm = ( isset($_POST['confirm']) ) ? $_POST['confirm'] : 0;\n+\t\tif ($confirm) {\n+\t\t\tif (!$this->handler->delete($icmsObj)) {\n+\t\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\n+\t\t\t\texit;\n+\t\t\t}\n+\n+\t\t\tredirect_header($_POST['redirect_page'], 3, _CO_ICMS_DELETE_SUCCESS);\n+\t\t\texit();\n+\t\t} else {\n+\t\t\t// no confirm: show deletion condition\n+\t\t\tif (!$confirm_msg) {\n+\t\t\t\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\n+\t\t\t}\n+\n+\t\t\tob_start();\n+\t\t\ticms_core_Message::confirm(array(\n+\t\t\t\t'op' => $op,\n+\t\t\t\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\n+\t\t\t\t'confirm' => 1,\n+\t\t\t\t'redirect_page' => $impresscms->urls['previouspage']),\n+\t\t\t\txoops_getenv('SCRIPT_NAME'),\n+\t\t\t\tsprintf($confirm_msg ,\n+\t\t\t\t$icmsObj->getVar($this->handler->identifierName)),\n+\t\t\t\t_CO_ICMS_DELETE\n+\t\t\t);\n+\t\t\t$icmspersistable_delete_confirm = ob_get_clean();\n+\t\t\t$icmsTpl->assign('icmspersistable_delete_confirm', $icmspersistable_delete_confirm);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\n+\t *\n+\t * @param\tobject\t$icmsObj\treference to the object from which we want the user side link\n+\t * @param\tbool\t$onlyUrl\twhether or not to return a simple URL or a full <a> link\n+\t * @param\tbool\t$withimage\treturn a linked image instead of linked text\n+\t * @return\tstring\tadmin side link to the object\n+\t */\n+\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\n+\t\t$ret = $this->handler->_moduleUrl . \"admin/\"\n+\t\t\t. $this->handler->_page . \"?op=view&amp;\"\n+\t\t\t. $this->handler->keyName . \"=\"\n+\t\t\t. $icmsObj->getVar($this->handler->keyName);\n+\t\tif ($onlyUrl) {\n+\t\t\treturn $ret;\n+\t\t} elseif ($withimage) {\n+\t\t\treturn \"<a href='\" . $ret . \"'>\n+\t\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL\n+\t\t\t\t\t. \"/actions/viewmag.png' style='vertical-align: middle;' alt='\"\n+\t\t\t\t\t. _CO_ICMS_ADMIN_VIEW . \"'  title='\"\n+\t\t\t\t\t. _CO_ICMS_ADMIN_VIEW . \"'/></a>\";\n+\t\t}\n+\n+\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t}\n+\n+\t/**\n+\t * Retrieve the object user side link\n+\t *\n+\t * @param object $icmsObj reference to the object from which we want the user side link\n+\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\n+\t * @return string user side link to the object\n+\t */\n+\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\n+\t\t/**\n+\t\t * @todo URL Rewrite feature is not finished yet...\n+\t\t */\n+\t\t//$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\n+\t\t//$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\n+\t\t$seoMode = false;\n+\t\t$seoModuleName = $this->handler->_moduleName;\n+\n+\t\t/**\n+\t\t * $seoIncludeId feature is not finished yet, so let's put it always to true\n+\t\t */\n+\t\t//$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\n+\t\t$seoIncludeId = true;\n+\n+\t\t/*if ($seoMode == 'rewrite') {\n+\t\t\t$ret = ICMS_URL . '/' . $seoModuleName . '.' . $this->handler->_itemname . ($seoIncludeId ? '.'\t. $icmsObj->getVar($this->handler->keyName) : ''). '/' . $icmsObj->getVar('short_url') . '.html';\n+\t\t\t} else if ($seoMode == 'pathinfo') {\n+\t\t\t$ret = SMARTOBJECT_URL . 'seo.php/' . $seoModuleName . '.' . $this->handler->_itemname . ($seoIncludeId ? '.'\t. $icmsObj->getVar($this->handler->keyName) : ''). '/' . $icmsObj->getVar('short_url') . '.html';\n+\t\t\t} else {\n+\t\t\t*/\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t//}\n+\n+\t\tif (!$onlyUrl) {\n+\t\t\t$ret = \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t\t}\n+\t\treturn $ret;\n+\t}\n+\n+\t/**\n+\t * This method returns a view link of the Object\n+\t *\n+\t * @param icms_ipf_Object $icmsObj\n+\t * @param boolean $onlyUrl\n+\t * @param boolean $withimage\n+\t * @param boolean $userSide\n+\t * @return string\n+\t */\n+\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\n+\t\tif ($this->handler->_moduleName != 'system') {\n+\t\t\t$admin_side = $userSide ? '' : 'admin/';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t} else {\n+\t\t\t$admin_side = '';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . 'admin.php?fct='\n+\t\t\t\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\n+\t\t\t\t. $this->handler->keyName . \"=\"\n+\t\t\t\t. $icmsObj->getVar($this->handler->keyName);\n+\t\t}\n+\t\tif ($onlyUrl) {\n+\t\t\treturn $ret;\n+\t\t} elseif ($withimage) {\n+\t\t\treturn \"<a href='\" . $ret . \"'>\n+\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/viewmag.png' style='vertical-align: middle;' alt='\"\n+\t\t\t\t. _PREVIEW . \"'  title='\" . _PREVIEW . \"'/></a>\";\n+\t\t}\n+\n+\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobject\t$icmsObj\n+\t * @param\tbool\t$onlyUrl\n+\t * @param\tbool\t$withimage\n+\t */\n+\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\n+\t\t$ret = $this->handler->_moduleUrl . \"admin/\"\n+\t\t\t. $this->handler->_page\n+\t\t\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\n+\t\t\t. \"&amp;language=\" . $icmsObj->getVar('language');\n+\t\tif ($onlyUrl) {\n+\t\t\treturn $ret;\n+\t\t} elseif ($withimage) {\n+\t\t\treturn \"<a href='\" . $ret . \"'>\n+\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/wizard.png' style='vertical-align: middle;' alt='\"\n+\t\t\t\t. _CO_ICMS_LANGUAGE_MODIFY . \"'  title='\" . _CO_ICMS_LANGUAGE_MODIFY . \"'/></a>\";\n+\t\t}\n+\n+\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobj\t\t$icmsObj\n+\t * @param\tbool\t$onlyUrl\n+\t * @param\tbool\t$withimage\n+\t * @param\tbool\t$userSide\n+\t */\n+\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\n+\t\tif ($this->handler->_moduleName != 'system') {\n+\t\t\t$admin_side = $userSide ? '' : 'admin/';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\n+\t\t\t\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t} else {\n+\t\t\t/**\n+\t\t\t * @todo: to be implemented...\n+\t\t\t */\n+\t\t\t//$admin_side = $userSide ? '' : 'admin/';\n+\t\t\t$admin_side = '';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side\n+\t\t\t\t. 'admin.php?fct=' . $this->handler->_itemname\n+\t\t\t\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t}\n+\t\tif ($onlyUrl) {\n+\t\t\treturn $ret;\n+\t\t} elseif ($withimage) {\n+\t\t\treturn \"<a href='\" . $ret . \"'>\n+\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/edit.png' style='vertical-align: middle;' alt='\"\n+\t\t\t\t. _CO_ICMS_MODIFY . \"'  title='\" . _CO_ICMS_MODIFY . \"'/></a>\";\n+\t\t}\n+\n+\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobj\t\t$icmsObj\n+\t * @param\tbool\t$onlyUrl\n+\t * @param\tbool\t$withimage\n+\t * @param\tbool\t$userSide\n+\t */\n+\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\n+\t\tif ($this->handler->_moduleName != 'system') {\n+\t\t\t$admin_side = $userSide ? '' : 'admin/';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\n+\t\t\t\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t} else {\n+\t\t\t/**\n+\t\t\t * @todo: to be implemented...\n+\t\t\t */\n+\t\t\t//$admin_side = $userSide ? '' : 'admin/';\n+\t\t\t$admin_side = '';\n+\t\t\t$ret = $this->handler->_moduleUrl . $admin_side\n+\t\t\t\t. 'admin.php?fct=' . $this->handler->_itemname\n+\t\t\t\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t}\n+\t\tif ($onlyUrl) {\n+\t\t\treturn $ret;\n+\t\t} elseif ($withimage) {\n+\t\t\treturn \"<a href='\" . $ret . \"'>\n+\t\t\t\t<img src='\" . ICMS_IMAGES_SET_URL . \"/actions/editdelete.png' style='vertical-align: middle;' alt='\"\n+\t\t\t\t. _CO_ICMS_DELETE . \"'  title='\" . _CO_ICMS_DELETE . \"'/></a>\";\n+\t\t}\n+\n+\t\treturn \"<a href='\" . $ret . \"'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\n+\t}\n+\n+\t/**\n+\t *\n+\t * @param\tobj\t\t$icmsObj\n+\t * @todo\tNeeds to be completed\n+\t */\n+\tpublic function getPrintAndMailLink($icmsObj) {\n+\t\tglobal $icmsConfig, $impresscms;\n+\n+\t\t$ret = '';\n+\t\t/*\t\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\n+\t\t $js = \"javascript:openWithSelfMain('\" . $printlink . \"', 'smartpopup', 700, 519);\";\n+\t\t $printlink = '<a href=\"' . $js . '\"><img  src=\"' . ICMS_IMAGES_SET_URL . '/actions/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"/></a>';\n+\n+\t\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\n+\t\t $link = $impresscms->urls['full']();\n+\t\t $mid = $icmsModule->getVar('mid');\n+\t\t $friendlink = \"<a href=\\\"javascript:openWithSelfMain('\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"', ',',',',',','sendmessage', 674, 500);\\\"><img src=\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\"  alt=\\\"\" . _CO_ICMS_EMAIL . \"\\\" title=\\\"\" . _CO_ICMS_EMAIL . \"\\\" style=\\\"vertical-align: middle;\\\"/></a>\";\n+\n+\t\t $ret = '<span id=\"smartobject_print_button\">' . $printlink . \"&nbsp;</span>\" . '<span id=\"smartobject_mail_button\">' . $friendlink . '</span>';\n+\t\t */\n+\t\treturn $ret;\n+\t}\n+\n+\t/**\n+\t * Creates a string from the object's module name and item name\n+\t */\n+\tpublic function getModuleItemString() {\n+\t\t$ret = $this->handler->_moduleName . '_' . $this->handler->_itemname;\n+\t\treturn $ret;\n+\t}\n+}\n+"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05681616016ce48c9c228d39b7c676e156cadcfd",
            "date": "2025-01-09T10:45:02Z",
            "author_login": "fiammybe"
          },
          {
            "sha": "95ef38317fa188b266211743efd8f1e69de6d51d",
            "date": "2025-01-07T21:43:46Z",
            "author_login": "fiammybe"
          },
          {
            "sha": "d6cbde0e13ec93217a29666ef85f900bfdc62340",
            "date": "2025-01-07T21:40:44Z",
            "author_login": "fiammybe"
          },
          {
            "sha": "8db9855fc5bf7510f1d5ff88c4480ef6dd9d1fc6",
            "date": "2025-01-06T21:31:58Z",
            "author_login": "fiammybe"
          },
          {
            "sha": "85cda0a148380446b8c71b44b9463918e23b52f2",
            "date": "2025-01-06T06:41:28Z",
            "author_login": "fiammybe"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "ImpressCMS before 1.4.2 allows unauthenticated remote code execution via ...../// directory traversal in origName or imageName, leading to unsafe interaction with the CKEditor processImage.php script. The payload may be placed in PHP_SESSION_UPLOAD_PROGRESS when the PHP installation supports upload_progress.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-14T12:15:27.867",
    "last_modified": "2024-11-21T06:51:29.507",
    "fix_date": "2020-12-04T23:48:24Z"
  },
  "references": [
    {
      "url": "https://github.com/ImpressCMS/impresscms/commit/a66d7bb499faafab803e24833606028fa0ba4261",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ImpressCMS/impresscms/compare/1.4.1...v1.4.2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://r0.haxors.org/posts?id=8",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ImpressCMS/impresscms/commit/a66d7bb499faafab803e24833606028fa0ba4261",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ImpressCMS/impresscms/compare/1.4.1...v1.4.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://r0.haxors.org/posts?id=8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.707593",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "impresscms",
    "owner": "ImpressCMS",
    "created_at": "2015-07-24T09:30:52Z",
    "updated_at": "2025-01-09T10:45:07Z",
    "pushed_at": "2025-01-09T10:53:34Z",
    "size": 76253,
    "stars": 28,
    "forks": 35,
    "open_issues": 47,
    "watchers": 28,
    "has_security_policy": false,
    "default_branch": "2.0.x",
    "protected_branches": [
      "2.0.x",
      "Fix-XSS-via-DB_CHARSET-parameter-H1-1825770-for-1.5.x",
      "branches/impresscms_1.4"
    ],
    "languages": {
      "PHP": 25646339,
      "JavaScript": 912012,
      "HTML": 448629,
      "CSS": 239376,
      "Smarty": 47350,
      "Hack": 2481
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:09:26.685092"
  }
}