{
  "cve_id": "CVE-2022-25139",
  "github_data": {
    "repository": "nginx/njs",
    "fix_commit": "6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6",
    "related_commits": [
      "6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6",
      "6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6"
    ],
    "patch_url": "https://github.com/nginx/njs/commit/6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6.patch",
    "fix_commit_details": {
      "sha": "6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6",
      "commit_date": "2022-01-21T14:31:30Z",
      "author": {
        "login": "xeioex",
        "type": "User",
        "stats": {
          "total_commits": 1592,
          "average_weekly_commits": 3.268993839835729,
          "total_additions": 278945,
          "total_deletions": 181190,
          "weeks_active": 310
        }
      },
      "commit_message": {
        "title": "Fixed recursive async function calls.",
        "length": 414,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 102,
        "additions": 72,
        "deletions": 30
      },
      "files": [
        {
          "filename": "src/njs_async.c",
          "status": "modified",
          "additions": 2,
          "deletions": 13,
          "patch": "@@ -29,9 +29,7 @@ njs_async_function_frame_invoke(njs_vm_t *vm, njs_value_t *retval)\n         return NJS_ERROR;\n     }\n \n-    frame->function->context = capability;\n-\n-    ret = njs_function_lambda_call(vm);\n+    ret = njs_function_lambda_call(vm, capability, NULL);\n \n     if (ret == NJS_OK) {\n         ret = njs_function_call(vm, njs_function(&capability->resolve),\n@@ -63,7 +61,6 @@ njs_await_fulfilled(njs_vm_t *vm, njs_value_t *args, njs_uint_t nargs,\n     njs_int_t           ret;\n     njs_value_t         **cur_local, **cur_closures, **cur_temp, *value;\n     njs_frame_t         *frame, *async_frame;\n-    njs_function_t      *function;\n     njs_async_ctx_t     *ctx;\n     njs_native_frame_t  *top, *async;\n \n@@ -78,8 +75,6 @@ njs_await_fulfilled(njs_vm_t *vm, njs_value_t *args, njs_uint_t nargs,\n     async = &async_frame->native;\n     async->previous = vm->top_frame;\n \n-    function = async->function;\n-\n     cur_local = vm->levels[NJS_LEVEL_LOCAL];\n     cur_closures = vm->levels[NJS_LEVEL_CLOSURE];\n     cur_temp = vm->levels[NJS_LEVEL_TEMP];\n@@ -98,13 +93,7 @@ njs_await_fulfilled(njs_vm_t *vm, njs_value_t *args, njs_uint_t nargs,\n \n     vm->top_frame->retval = &vm->retval;\n \n-    function->context = ctx->capability;\n-    function->await = ctx;\n-\n-    ret = njs_vmcode_interpreter(vm, ctx->pc);\n-\n-    function->context = NULL;\n-    function->await = NULL;\n+    ret = njs_vmcode_interpreter(vm, ctx->pc, ctx->capability, ctx);\n \n     vm->levels[NJS_LEVEL_LOCAL] = cur_local;\n     vm->levels[NJS_LEVEL_CLOSURE] = cur_closures;"
        },
        {
          "filename": "src/njs_function.c",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -608,7 +608,7 @@ njs_function_call2(njs_vm_t *vm, njs_function_t *function,\n \n \n njs_int_t\n-njs_function_lambda_call(njs_vm_t *vm)\n+njs_function_lambda_call(njs_vm_t *vm, void *promise_cap, void *async_ctx)\n {\n     uint32_t               n;\n     njs_int_t              ret;\n@@ -622,6 +622,8 @@ njs_function_lambda_call(njs_vm_t *vm)\n     frame = (njs_frame_t *) vm->top_frame;\n     function = frame->native.function;\n \n+    njs_assert(function->context == NULL);\n+\n     if (function->global && !function->closure_copied) {\n         ret = njs_function_capture_global_closures(vm, function);\n         if (njs_slow_path(ret != NJS_OK)) {\n@@ -698,7 +700,7 @@ njs_function_lambda_call(njs_vm_t *vm)\n         }\n     }\n \n-    ret = njs_vmcode_interpreter(vm, lambda->start);\n+    ret = njs_vmcode_interpreter(vm, lambda->start, promise_cap, async_ctx);\n \n     /* Restore current level. */\n     vm->levels[NJS_LEVEL_LOCAL] = cur_local;\n@@ -775,7 +777,7 @@ njs_function_frame_invoke(njs_vm_t *vm, njs_value_t *retval)\n         return njs_function_native_call(vm);\n \n     } else {\n-        return njs_function_lambda_call(vm);\n+        return njs_function_lambda_call(vm, NULL, NULL);\n     }\n }\n "
        },
        {
          "filename": "src/njs_function.h",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -112,7 +112,8 @@ njs_int_t njs_function_lambda_frame(njs_vm_t *vm, njs_function_t *function,\n njs_int_t njs_function_call2(njs_vm_t *vm, njs_function_t *function,\n     const njs_value_t *this, const njs_value_t *args,\n     njs_uint_t nargs, njs_value_t *retval, njs_bool_t ctor);\n-njs_int_t njs_function_lambda_call(njs_vm_t *vm);\n+njs_int_t njs_function_lambda_call(njs_vm_t *vm, void *promise_cap,\n+    void *async_ctx);\n njs_int_t njs_function_native_call(njs_vm_t *vm);\n njs_native_frame_t *njs_function_frame_alloc(njs_vm_t *vm, size_t size);\n void njs_function_frame_free(njs_vm_t *vm, njs_native_frame_t *frame);"
        },
        {
          "filename": "src/njs_value.h",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -270,7 +270,6 @@ struct njs_function_s {\n     } u;\n \n     void                              *context;\n-    void                              *await;\n \n     njs_value_t                       *bound;\n };"
        },
        {
          "filename": "src/njs_vm.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -490,7 +490,7 @@ njs_vm_start(njs_vm_t *vm)\n         return ret;\n     }\n \n-    ret = njs_vmcode_interpreter(vm, vm->start);\n+    ret = njs_vmcode_interpreter(vm, vm->start, NULL, NULL);\n \n     return (ret == NJS_ERROR) ? NJS_ERROR : NJS_OK;\n }"
        },
        {
          "filename": "src/njs_vmcode.c",
          "status": "modified",
          "additions": 8,
          "deletions": 10,
          "patch": "@@ -42,7 +42,8 @@ static njs_jump_off_t njs_vmcode_debugger(njs_vm_t *vm);\n static njs_jump_off_t njs_vmcode_return(njs_vm_t *vm, njs_value_t *invld,\n     njs_value_t *retval);\n \n-static njs_jump_off_t njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await);\n+static njs_jump_off_t njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await,\n+    njs_promise_capability_t *pcap, njs_async_ctx_t *actx);\n \n static njs_jump_off_t njs_vmcode_try_start(njs_vm_t *vm, njs_value_t *value,\n     njs_value_t *offset, u_char *pc);\n@@ -77,7 +78,8 @@ static njs_jump_off_t njs_function_frame_create(njs_vm_t *vm,\n \n \n njs_int_t\n-njs_vmcode_interpreter(njs_vm_t *vm, u_char *pc)\n+njs_vmcode_interpreter(njs_vm_t *vm, u_char *pc, void *promise_cap,\n+    void *async_ctx)\n {\n     u_char                       *catch;\n     double                       num, exponent;\n@@ -826,7 +828,7 @@ njs_vmcode_interpreter(njs_vm_t *vm, u_char *pc)\n \n             case NJS_VMCODE_AWAIT:\n                 await = (njs_vmcode_await_t *) pc;\n-                return njs_vmcode_await(vm, await);\n+                return njs_vmcode_await(vm, await, promise_cap, async_ctx);\n \n             case NJS_VMCODE_TRY_START:\n                 ret = njs_vmcode_try_start(vm, value1, value2, pc);\n@@ -1812,15 +1814,15 @@ njs_vmcode_return(njs_vm_t *vm, njs_value_t *invld, njs_value_t *retval)\n \n \n static njs_jump_off_t\n-njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await)\n+njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await,\n+    njs_promise_capability_t *pcap, njs_async_ctx_t *ctx)\n {\n     size_t              size;\n     njs_int_t           ret;\n     njs_frame_t         *frame;\n     njs_value_t         ctor, val, on_fulfilled, on_rejected, *value;\n     njs_promise_t       *promise;\n     njs_function_t      *fulfilled, *rejected;\n-    njs_async_ctx_t     *ctx;\n     njs_native_frame_t  *active;\n \n     active = &vm->active_frame->native;\n@@ -1837,8 +1839,6 @@ njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await)\n         return NJS_ERROR;\n     }\n \n-    ctx = active->function->await;\n-\n     if (ctx == NULL) {\n         ctx = njs_mp_alloc(vm->mem_pool, sizeof(njs_async_ctx_t));\n         if (njs_slow_path(ctx == NULL)) {\n@@ -1854,9 +1854,7 @@ njs_vmcode_await(njs_vm_t *vm, njs_vmcode_await_t *await)\n         }\n \n         ctx->await = fulfilled->context;\n-        ctx->capability = active->function->context;\n-\n-        active->function->context = NULL;\n+        ctx->capability = pcap;\n \n         ret = njs_function_frame_save(vm, ctx->await, NULL);\n         if (njs_slow_path(ret != NJS_OK)) {"
        },
        {
          "filename": "src/njs_vmcode.h",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -437,7 +437,8 @@ typedef struct {\n } njs_vmcode_await_t;\n \n \n-njs_int_t njs_vmcode_interpreter(njs_vm_t *vm, u_char *pc);\n+njs_int_t njs_vmcode_interpreter(njs_vm_t *vm, u_char *pc,\n+    void *promise_cap, void *async_ctx);\n \n njs_object_t *njs_function_new_object(njs_vm_t *vm, njs_value_t *constructor);\n "
        },
        {
          "filename": "test/js/async_recursive_last.t.js",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -0,0 +1,26 @@\n+/*---\n+includes: [compareArray.js]\n+flags: [async]\n+---*/\n+\n+let stages = [];\n+\n+async function f(v) {\n+    if (v == 3) {\n+        return;\n+    }\n+\n+    stages.push(`f>${v}`);\n+\n+    f(v + 1);\n+\n+    stages.push(`f<${v}`);\n+\n+    await \"X\";\n+}\n+\n+f(0)\n+.then(v => {\n+    assert.compareArray(stages, ['f>0', 'f>1', 'f>2', 'f<2', 'f<1', 'f<0']);\n+})\n+.then($DONE, $DONE);"
        },
        {
          "filename": "test/js/async_recursive_mid.t.js",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -0,0 +1,26 @@\n+/*---\n+includes: [compareArray.js]\n+flags: [async]\n+---*/\n+\n+let stages = [];\n+\n+async function f(v) {\n+    if (v == 3) {\n+        return;\n+    }\n+\n+    stages.push(`f>${v}`);\n+\n+    await \"X\";\n+\n+    f(v + 1);\n+\n+    stages.push(`f<${v}`);\n+}\n+\n+f(0)\n+.then(v => {\n+    assert.compareArray(stages, ['f>0','f>1','f<0','f>2','f<1']);\n+})\n+.then($DONE, $DONE);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b87ad67adb2c557bd96e52a3221748a7ba028858",
            "date": "2025-01-13T22:56:10Z",
            "author_login": "xeioex"
          },
          {
            "sha": "17676e5c9a9f5bdd63509632c31a9019686b171e",
            "date": "2025-01-13T22:58:28Z",
            "author_login": "xeioex"
          },
          {
            "sha": "855aa4c9fac01bd9fbdb1602b523edc00117ff09",
            "date": "2025-01-04T06:25:15Z",
            "author_login": "xeioex"
          },
          {
            "sha": "4fb1c0ca6c950dc0460eaeec1ba3e96a53070878",
            "date": "2025-01-06T17:09:43Z",
            "author_login": "xeioex"
          },
          {
            "sha": "1f8f9992d03e2865f354da3415f8a49931cf2fe8",
            "date": "2024-12-05T01:31:23Z",
            "author_login": "xeioex"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-416",
    "description": "njs through 0.7.0, used in NGINX, was discovered to contain a heap use-after-free in njs_await_fulfilled.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-14T22:15:08.317",
    "last_modified": "2024-11-21T06:51:41.377",
    "fix_date": "2022-01-21T14:31:30Z"
  },
  "references": [
    {
      "url": "https://github.com/nginx/njs/commit/6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nginx/njs/issues/451",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20220303-0007/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nginx/njs/commit/6a07c2156a07ef307b6dcf3c2ca8571a5f1af7a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nginx/njs/issues/451",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20220303-0007/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.711190",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "njs",
    "owner": "nginx",
    "created_at": "2015-09-24T02:03:58Z",
    "updated_at": "2025-01-14T02:29:02Z",
    "pushed_at": "2025-01-13T23:32:16Z",
    "size": 21568,
    "stars": 1317,
    "forks": 165,
    "open_issues": 62,
    "watchers": 1317,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 3674164,
      "Perl": 287098,
      "JavaScript": 248345,
      "TypeScript": 9351,
      "Shell": 5785,
      "Python": 5759,
      "Standard ML": 1129,
      "Makefile": 602
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-14T13:42:29.484634"
  }
}