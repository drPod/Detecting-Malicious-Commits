{
  "cve_id": "CVE-2022-25318",
  "github_data": {
    "repository": "cerebrate-project/cerebrate",
    "fix_commit": "15190b930ebada9e8d294db57c96832799d9d93e",
    "related_commits": [
      "15190b930ebada9e8d294db57c96832799d9d93e",
      "15190b930ebada9e8d294db57c96832799d9d93e"
    ],
    "patch_url": "https://github.com/cerebrate-project/cerebrate/commit/15190b930ebada9e8d294db57c96832799d9d93e.patch",
    "fix_commit_details": {
      "sha": "15190b930ebada9e8d294db57c96832799d9d93e",
      "commit_date": "2022-02-03T23:16:24Z",
      "author": {
        "login": "iglocska",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: [security] Sharing group ACL fixes",
        "length": 205,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 48,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/Controller/Component/CRUDComponent.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -420,10 +420,16 @@ public function view(int $id, array $params = []): void\n         }\n \n         $data = $this->Table->get($id, $params);\n+        if (empty($data)) {\n+            throw new NotFoundException(__('Invalid {0}.', $this->ObjectAlias));\n+        }\n         $data = $this->attachMetaData($id, $data);\n         if (isset($params['afterFind'])) {\n             $data = $params['afterFind']($data);\n         }\n+        if (empty($data)) {\n+            throw new NotFoundException(__('Invalid {0}.', $this->ObjectAlias));\n+        }\n         if ($this->Controller->ParamHandler->isRest()) {\n             $this->Controller->restResponsePayload = $this->RestResponse->viewData($data, 'json');\n         }"
        },
        {
          "filename": "src/Controller/SharingGroupsController.php",
          "status": "modified",
          "additions": 42,
          "deletions": 2,
          "patch": "@@ -7,6 +7,7 @@\n use Cake\\Utility\\Text;\n use \\Cake\\Database\\Expression\\QueryExpression;\n use Cake\\Error\\Debugger;\n+use Cake\\Http\\Exception\\NotFoundException;\n \n class SharingGroupsController extends AppController\n {\n@@ -54,8 +55,25 @@ public function add()\n \n     public function view($id)\n     {\n+        $currentUser = $this->ACL->getUser();\n         $this->CRUD->view($id, [\n-            'contain' => ['SharingGroupOrgs', 'Organisations', 'Users' => ['fields' => ['id', 'username']]]\n+            'contain' => ['SharingGroupOrgs', 'Organisations', 'Users' => ['fields' => ['id', 'username']]],\n+            'afterFind' => function($data) use ($currentUser) {\n+                if (empty($currentUser['role']['perm_admin'])) {\n+                    $orgFround = false;\n+                    if (!empty($data['sharing_group_orgs'])) {\n+                        foreach ($data['sharing_group_orgs'] as $org) {\n+                            if ($org['id'] === $currentUser['organisation_id']) {\n+                                $orgFound = true;\n+                            }\n+                        }\n+                    }\n+                    if ($data['organisation_id'] !== $currentUser['organisation_id'] && !$orgFround) {\n+                        return null;\n+                    }\n+                }\n+                return $data;\n+            }\n         ]);\n         $responsePayload = $this->CRUD->getResponsePayload();\n         if (!empty($responsePayload)) {\n@@ -87,7 +105,11 @@ public function edit($id = false)\n \n     public function delete($id)\n     {\n-        $this->CRUD->delete($id);\n+        $currentUser = $this->ACL->getUser();\n+        if (empty($currentUser['role']['perm_admin'])) {\n+            $params['conditions'] = ['organisation_id' => $currentUser['organisation_id']];\n+        }\n+        $this->CRUD->delete($id, $params);\n         $responsePayload = $this->CRUD->getResponsePayload();\n         if (!empty($responsePayload)) {\n             return $responsePayload;\n@@ -97,9 +119,18 @@ public function delete($id)\n \n     public function addOrg($id)\n     {\n+        $currentUser = $this->ACL->getUser();\n         $sharingGroup = $this->SharingGroups->get($id, [\n             'contain' => 'SharingGroupOrgs'\n         ]);\n+        if (empty($currentUser['role']['perm_admin'])) {\n+            if ($sharingGroup['organisation_id'] !== $currentUser['organisation_id']) {\n+                $sharingGroup = null;\n+            }\n+        }\n+        if (empty($sharingGroup)) {\n+            throw new NotFoundException(__('Invalid SharingGroup.'));\n+        }\n         $conditions = [];\n         $containedOrgIds = array_values(\\Cake\\Utility\\Hash::extract($sharingGroup, 'sharing_group_orgs.{n}.id'));\n         if (!empty($containedOrgIds)) {\n@@ -156,9 +187,18 @@ public function addOrg($id)\n \n     public function removeOrg($id, $org_id)\n     {\n+        $currentUser = $this->ACL->getUser();\n         $sharingGroup = $this->SharingGroups->get($id, [\n             'contain' => 'SharingGroupOrgs'\n         ]);\n+        if (empty($currentUser['role']['perm_admin'])) {\n+            if ($sharingGroup['organisation_id'] !== $currentUser['organisation_id']) {\n+                $sharingGroup = null;\n+            }\n+        }\n+        if (empty($sharingGroup)) {\n+            throw new NotFoundException(__('Invalid SharingGroup.'));\n+        }\n         if ($this->request->is('post')) {\n             $org = $this->SharingGroups->SharingGroupOrgs->get($org_id);\n             $result = (bool)$this->SharingGroups->SharingGroupOrgs->unlink($sharingGroup, [$org]);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "04322b24dfd65934c4b13ecc7ac269d3109ee223",
            "date": "2024-12-06T06:25:02Z",
            "author_login": "iglocska"
          },
          {
            "sha": "4f1835dc4cf868e4417ab55573d4a4ca54a376ce",
            "date": "2024-11-28T20:32:19Z",
            "author_login": "iglocska"
          },
          {
            "sha": "50b65021dcda7367e03b906f36b5196b7d888de6",
            "date": "2024-11-28T20:32:09Z",
            "author_login": "iglocska"
          },
          {
            "sha": "55695fc09b0337154be5b86e45480b98b41d1817",
            "date": "2024-11-28T20:32:00Z",
            "author_login": "iglocska"
          },
          {
            "sha": "0c320f7d9caf9b543acc9e59d7cded09ef7a6bb4",
            "date": "2024-11-28T20:31:48Z",
            "author_login": "iglocska"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-863",
    "description": "An issue was discovered in Cerebrate through 1.4. An incorrect sharing group ACL allowed an unprivileged user to edit and modify sharing groups.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-02-18T06:15:10.463",
    "last_modified": "2024-11-21T06:51:59.393",
    "fix_date": "2022-02-03T23:16:24Z"
  },
  "references": [
    {
      "url": "https://github.com/cerebrate-project/cerebrate/commit/15190b930ebada9e8d294db57c96832799d9d93e",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zigrin.com/advisories/cerebrate-an-incorrect-sharing-group-acl/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/cerebrate-project/cerebrate/commit/15190b930ebada9e8d294db57c96832799d9d93e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://zigrin.com/advisories/cerebrate-an-incorrect-sharing-group-acl/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:02:59.728040",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cerebrate",
    "owner": "cerebrate-project",
    "created_at": "2020-01-26T19:28:06Z",
    "updated_at": "2025-01-04T20:14:42Z",
    "pushed_at": "2024-12-06T06:25:31Z",
    "size": 12989,
    "stars": 85,
    "forks": 18,
    "open_issues": 88,
    "watchers": 85,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 2143303,
      "JavaScript": 463465,
      "CSS": 315352,
      "SCSS": 45980,
      "Python": 10000,
      "Shell": 9664,
      "Dockerfile": 3259,
      "Batchfile": 862,
      "Hack": 136
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T18:22:29.405758"
  }
}