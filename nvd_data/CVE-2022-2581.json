{
  "cve_id": "CVE-2022-2581",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "f50940531dd57135fe60aa393ac9d3281f352d88",
    "related_commits": [
      "f50940531dd57135fe60aa393ac9d3281f352d88",
      "f50940531dd57135fe60aa393ac9d3281f352d88"
    ],
    "patch_url": "https://github.com/vim/vim/commit/f50940531dd57135fe60aa393ac9d3281f352d88.patch",
    "fix_commit_details": {
      "sha": "f50940531dd57135fe60aa393ac9d3281f352d88",
      "commit_date": "2022-07-29T15:22:25Z",
      "author": {
        "login": "brammool",
        "type": "User",
        "stats": {
          "total_commits": 16567,
          "average_weekly_commits": 15.411162790697674,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 874
        }
      },
      "commit_message": {
        "title": "patch 9.0.0105: illegal memory access when pattern starts with illegal byte",
        "length": 208,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 23,
        "additions": 22,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/regexp.c",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -1641,7 +1641,11 @@ cstrchr(char_u *s, int c)\n \t{\n \t    if (enc_utf8 && c > 0x80)\n \t    {\n-\t\tif (utf_fold(utf_ptr2char(p)) == cc)\n+\t\tint uc = utf_ptr2char(p);\n+\n+\t\t// Do not match an illegal byte.  E.g. 0xff matches 0xc3 0xbf,\n+\t\t// not 0xff.\n+\t\tif ((uc < 0x80 || uc != *p) && utf_fold(uc) == cc)\n \t\t    return p;\n \t    }\n \t    else if (*p == c || *p == cc)"
        },
        {
          "filename": "src/testdir/test_regexp_utf8.vim",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -1,5 +1,7 @@\n \" Tests for regexp in utf8 encoding\n \n+source shared.vim\n+\n func s:equivalence_test()\n   let str = \"A\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u0100\u0102\u0104\u01cd\u01de\u01e0\u01fa\u0202\u0226\u023a\u1e00\u1ea0\u1ea2\u1ea4\u1ea6\u1ea8\u1eaa\u1eac\u1eae\u1eb0\u1eb2\u1eb4\u1eb6 B\u0181\u0243\u1e02\u1e04\u1e06 C\u00c7\u0106\u0108\u010a\u010c\u0187\u023b\u1e08\ua792 D\u010e\u0110\u018a\u1e0a\u1e0c\u1e0e\u1e10\u1e12 E\u00c8\u00c9\u00ca\u00cb\u0112\u0114\u0116\u0118\u011a\u0204\u0206\u0228\u0246\u1e14\u1e16\u1e18\u1e1a\u1e1c\u1eb8\u1eba\u1ebc\u1ebe\u1ec0\u1ec2\u1ec4\u1ec6 F\u0191\u1e1e\ua798 G\u011c\u011e\u0120\u0122\u0193\u01e4\u01e6\u01f4\u1e20\ua7a0 H\u0124\u0126\u021e\u1e22\u1e24\u1e26\u1e28\u1e2a\u2c67 I\u00cc\u00cd\u00ce\u00cf\u0128\u012a\u012c\u012e\u0130\u0197\u01cf\u0208\u020a\u1e2c\u1e2e\u1ec8\u1eca J\u0134\u0248 K\u0136\u0198\u01e8\u1e30\u1e32\u1e34\u2c69\ua740 L\u0139\u013b\u013d\u013f\u0141\u023d\u1e36\u1e38\u1e3a\u1e3c\u2c60 M\u1e3e\u1e40\u1e42 N\u00d1\u0143\u0145\u0147\u01f8\u1e44\u1e46\u1e48\u1e4a\ua7a4 O\u00d2\u00d3\u00d4\u00d5\u00d6\u00d8\u014c\u014e\u0150\u019f\u01a0\u01d1\u01ea\u01ec\u01fe\u020c\u020e\u022a\u022c\u022e\u0230\u1e4c\u1e4e\u1e50\u1e52\u1ecc\u1ece\u1ed0\u1ed2\u1ed4\u1ed6\u1ed8\u1eda\u1edc\u1ede\u1ee0\u1ee2 P\u01a4\u1e54\u1e56\u2c63 Q\u024a R\u0154\u0156\u0158\u0210\u0212\u024c\u1e58\u1e5a\u1e5c\u1e5e\u2c64\ua7a6 S\u015a\u015c\u015e\u0160\u0218\u1e60\u1e62\u1e64\u1e66\u1e68\u2c7e\ua7a8 T\u0162\u0164\u0166\u01ac\u01ae\u021a\u023e\u1e6a\u1e6c\u1e6e\u1e70 U\u00d9\u00da\u00db\u00dc\u0168\u016a\u016c\u016e\u0170\u01af\u01d5\u01d9\u01db\u01d3\u01d7\u0214\u0216\u0244\u1e72\u1e74\u1e76\u1e78\u1e7a\u1ee4\u1ee6\u1ee8\u1eea\u1eec\u1eee\u1ef0  V\u01b2\u1e7c\u1e7e W\u0174\u1e80\u1e82\u1e84\u1e86\u1e88 X\u1e8a\u1e8c Y\u00dd\u0176\u0178\u01b3\u0232\u024e\u1e8e\u1ef2\u1ef4\u1ef6\u1ef8 Z\u0179\u017b\u017d\u01b5\u1e90\u1e92\u1e94\u2c6b a\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u0101\u0103\u0105\u01ce\u01df\u01e1\u01fb\u0203\u0227\u1d8f\u1e01\u1e9a\u1ea1\u1ea3\u1ea5\u1ea7\u1ea9\u1eab\u1ead\u1eaf\u1eb1\u1eb3\u1eb5\u1eb7\u2c65 b\u0180\u0253\u1d6c\u1d80\u1e03\u1e05\u1e07 c\u00e7\u0107\u0109\u010b\u010d\u0188\u023c\u1e09\ua793\ua794 d\u010f\u0111\u0257\u1d6d\u1d81\u1d91\u1e0b\u1e0d\u1e0f\u1e11\u1e13 e\u00e8\u00e9\u00ea\u00eb\u0113\u0115\u0117\u0119\u011b\u0205\u0207\u0229\u0247\u1d92\u1e15\u1e17\u1e19\u1e1b\u1e1d\u1eb9\u1ebb\u1ebd\u1ebf\u1ec1\u1ec3\u1ec5\u1ec7 f\u0192\u1d6e\u1d82\u1e1f\ua799 g\u011d\u011f\u0121\u0123\u01e5\u01e7\u01f5\u0260\u1d83\u1e21\ua7a1 h\u0125\u0127\u021f\u1e23\u1e25\u1e27\u1e29\u1e2b\u1e96\u2c68\ua795 i\u00ec\u00ed\u00ee\u00ef\u0129\u012b\u012d\u012f\u01d0\u0209\u020b\u0268\u1d96\u1e2d\u1e2f\u1ec9\u1ecb j\u0135\u01f0\u0249 k\u0137\u0199\u01e9\u1d84\u1e31\u1e33\u1e35\u2c6a\ua741 l\u013a\u013c\u013e\u0140\u0142\u019a\u1e37\u1e39\u1e3b\u1e3d\u2c61 m\u1d6f\u1e3f\u1e41\u1e43 n\u00f1\u0144\u0146\u0148\u0149\u01f9\u1d70\u1d87\u1e45\u1e47\u1e49\u1e4b\ua7a5 o\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u014d\u014f\u0151\u01a1\u01d2\u01eb\u01ed\u01ff\u020d\u020f\u022b\u022d\u022f\u0231\u0275\u1e4d\u1e4f\u1e51\u1e53\u1ecd\u1ecf\u1ed1\u1ed3\u1ed5\u1ed7\u1ed9\u1edb\u1edd\u1edf\u1ee1\u1ee3 p\u01a5\u1d71\u1d7d\u1d88\u1e55\u1e57 q\u024b\u02a0 r\u0155\u0157\u0159\u0211\u0213\u024d\u027d\u1d72\u1d73\u1d89\u1e5b\u1e5d\u1e5f\ua7a7 s\u015b\u015d\u015f\u0161\u0219\u023f\u1d74\u1d8a\u1e61\u1e63\u1e65\u1e67\u1e69\ua7a9 t\u0163\u0165\u0167\u01ab\u01ad\u021b\u0288\u1d75\u1e6b\u1e6d\u1e6f\u1e71\u1e97\u2c66 u\u00f9\u00fa\u00fb\u00fc\u0169\u016b\u016d\u016f\u0171\u0173\u01da\u01d6\u01b0\u01d4\u01d8\u01dc\u0215\u0217\u0289\u1d7e\u1d99\u1e73\u1e75\u1e77\u1e79\u1e7b\u1ee5\u1ee7\u1ee9\u1eeb\u1eed\u1eef\u1ef1 v\u028b\u1d8c\u1e7d\u1e7f w\u0175\u1e81\u1e83\u1e85\u1e87\u1e89\u1e98 x\u1e8b\u1e8d y\u00fd\u00ff\u0177\u01b4\u0233\u024f\u1e8f\u1e99\u1ef3\u1ef5\u1ef7\u1ef9 z\u017a\u017c\u017e\u01b6\u1d76\u1d8e\u1e91\u1e93\u1e95\u2c6c\"\n   let groups = split(str)\n@@ -560,6 +562,19 @@ func Test_match_invalid_byte()\n   call delete('Xinvalid')\n endfunc\n \n+func Test_match_illegal_byte()\n+  let lines =<< trim END\n+      silent! buffer \u00ff\\c\n+      next \u00ff\n+      0scriptnames\n+      source\n+  END\n+  call writefile(lines, 'Xregexp')\n+  call system(GetVimCommand() .. ' -X -Z -e -s -S Xregexp -c qa!')\n+\n+  call delete('Xregexp')\n+endfunc\n+\n func Test_match_too_complicated()\n   set regexpengine=1\n   exe \"noswapfile vsplit \\xeb\\xdb\\x99\""
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -735,6 +735,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    105,\n /**/\n     104,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-125",
    "description": "Out-of-bounds Read in GitHub repository vim/vim prior to 9.0.0104.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-01T15:15:09.520",
    "last_modified": "2024-11-21T07:01:17.270",
    "fix_date": "2022-07-29T15:22:25Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/f50940531dd57135fe60aa393ac9d3281f352d88",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/0bedbae2-82ae-46ae-aa68-1c28b309b60b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vim/vim/commit/f50940531dd57135fe60aa393ac9d3281f352d88",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/0bedbae2-82ae-46ae-aa68-1c28b309b60b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.184759",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}