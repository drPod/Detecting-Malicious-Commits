{
  "cve_id": "CVE-2022-2583",
  "github_data": {
    "repository": "ntbosscher/gobase",
    "fix_commit": "a8d40bce9c429d324122d18c446924dab809e812",
    "related_commits": [
      "a8d40bce9c429d324122d18c446924dab809e812",
      "a8d40bce9c429d324122d18c446924dab809e812"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a8d40bce9c429d324122d18c446924dab809e812",
      "commit_date": "2020-11-05T21:49:43Z",
      "author": {
        "login": "ntbosscher",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix race condition in httpauth where the incorrect handler could be called for some calls",
        "length": 89,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 17,
        "deletions": 11
      },
      "files": [
        {
          "filename": "auth/httpauth/main.go",
          "status": "modified",
          "additions": 17,
          "deletions": 11,
          "patch": "@@ -106,6 +106,11 @@ func (c Config) getAccessTokenCookieName() string {\n \treturn strs.Coalesce(c.AccessTokenCookieName, \"token\")\n }\n \n+const defaultLoginEndpoint = \"/api/auth/login\"\n+const defaultRefreshEndpoint = \"/api/auth/refresh\"\n+const defaultLogoutEndpoint = \"/api/auth/logout\"\n+const defaultRegisterEndpoint = \"/api/auth/register\"\n+\n func Setup(router *res.Router, config Config) *AuthRouter {\n \tloginPath := strs.Coalesce(config.LoginPath, defaultLoginEndpoint)\n \trouter.Post(loginPath, loginHandler(&config))\n@@ -134,11 +139,10 @@ func Setup(router *res.Router, config Config) *AuthRouter {\n \t\toauth.Setup(router, config.OAuth, sessionSetter)\n \t}\n \n-\tserver := middleware(config)\n+\tserver := newServer(config)\n \n-\trouter.Use(func(h http.Handler) http.Handler {\n-\t\tserver.next = h\n-\t\treturn server\n+\trouter.Use(func(handler http.Handler) http.Handler {\n+\t\treturn cloneServer(server, handler)\n \t})\n \n \treturn &AuthRouter{\n@@ -148,7 +152,14 @@ func Setup(router *res.Router, config Config) *AuthRouter {\n \t}\n }\n \n-func middleware(config Config) *server {\n+func cloneServer(src *server, next http.Handler) *server {\n+\tclone := &server{}\n+\t*clone = *src\n+\tclone.next = next\n+\treturn clone\n+}\n+\n+func newServer(config Config) *server {\n \n \tif config.CredentialChecker == nil {\n \t\tlog.Fatal(\"github.com/ntbosscher/gobase/auth/authhttp.Middleware(config): config requires CredentialChecker\")\n@@ -163,18 +174,13 @@ func middleware(config Config) *server {\n }\n \n type server struct {\n-\tnext                     http.Handler\n+\tnext http.Handler\n \tperRequestFilter         PerRequestFilter\n \tignoreRoutesWithPrefixes []string\n \tignoreRoutes             []string\n \tauthHandler              func(request *res.Request) (res.Responder, context.Context)\n }\n \n-const defaultLoginEndpoint = \"/api/auth/login\"\n-const defaultRefreshEndpoint = \"/api/auth/refresh\"\n-const defaultLogoutEndpoint = \"/api/auth/logout\"\n-const defaultRegisterEndpoint = \"/api/auth/register\"\n-\n func (s *server) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n \n \tignoredRoute := false"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b8dd2126d9422c8d40e9439e5a67a167f17a5e2c",
            "date": "2025-01-08T15:59:29Z",
            "author_login": "ntbosscher"
          },
          {
            "sha": "383638f84eef2c7829ec7ff457b5751d8725c302",
            "date": "2025-01-08T15:58:21Z",
            "author_login": "ntbosscher"
          },
          {
            "sha": "caf5719c66cf2aee96b86fa3352fadb1b0fa2181",
            "date": "2024-12-12T00:11:07Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "5f19126ab7f0045bdd6df012da5ac2674c0698b6",
            "date": "2024-11-11T13:52:41Z",
            "author_login": "ntbosscher"
          },
          {
            "sha": "1ef8c3ec4aa48406c5a3c3adfc7631077173a08d",
            "date": "2024-11-08T18:49:58Z",
            "author_login": "ntbosscher"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-362",
    "description": "A race condition can cause incorrect HTTP request routing.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-12-27T22:15:12.500",
    "last_modified": "2024-11-21T07:01:17.520",
    "fix_date": "2020-11-05T21:49:43Z"
  },
  "references": [
    {
      "url": "https://github.com/ntbosscher/gobase/commit/a8d40bce9c429d324122d18c446924dab809e812",
      "source": "security@golang.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pkg.go.dev/vuln/GO-2022-0400",
      "source": "security@golang.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ntbosscher/gobase/commit/a8d40bce9c429d324122d18c446924dab809e812",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://pkg.go.dev/vuln/GO-2022-0400",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.223323",
    "processing_status": "enhanced"
  }
}