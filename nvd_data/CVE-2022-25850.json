{
  "cve_id": "CVE-2022-25850",
  "github_data": {
    "repository": "hoppscotch/proxyscotch",
    "fix_commit": "de67380f62f907f201d75854b76024ba4885fab7",
    "related_commits": [
      "de67380f62f907f201d75854b76024ba4885fab7",
      "de67380f62f907f201d75854b76024ba4885fab7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "de67380f62f907f201d75854b76024ba4885fab7",
      "commit_date": "2022-01-24T10:22:33Z",
      "author": {
        "login": "AndrewBastin",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: ability to have a blacklist of target urls for proxy to make calls to",
        "length": 75,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 28,
        "additions": 27,
        "deletions": 1
      },
      "files": [
        {
          "filename": "libproxy/proxy.go",
          "status": "modified",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -24,6 +24,7 @@ var (\n \tsessionFingerprint string\n \tallowedOrigins     []string\n \tbannedOutputs      []string\n+\tbannedDests        []string\n )\n \n type Request struct {\n@@ -49,6 +50,16 @@ type Response struct {\n \tHeaders    map[string]string `json:\"headers\"`\n }\n \n+func isAllowedDest(dest string) bool {\n+\tfor _, b := range bannedDests {\n+\t\tif b == dest {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\n+\treturn true\n+}\n+\n func isAllowedOrigin(origin string) bool {\n \tif allowedOrigins[0] == \"*\" {\n \t\treturn true\n@@ -68,13 +79,19 @@ func Initialize(\n \tproxyURL string,\n \tinitialAllowedOrigins string,\n \tinitialBannedOutputs string,\n+\tinitialBannedDests string,\n \tonStatusChange statusChangeFunction,\n \twithSSL bool,\n \tfinished chan bool,\n ) {\n \tif initialBannedOutputs != \"\" {\n \t\tbannedOutputs = strings.Split(initialBannedOutputs, \",\")\n \t}\n+\tif initialBannedDests != \"\" {\n+\t\tbannedDests = strings.Split(initialBannedDests, \",\")\n+\t} else {\n+\t\tbannedDests = []string{}\n+\t}\n \tallowedOrigins = strings.Split(initialAllowedOrigins, \",\")\n \taccessToken = initialAccessToken\n \tsessionFingerprint = uuid.New().String()\n@@ -209,6 +226,13 @@ func proxyHandler(response http.ResponseWriter, request *http.Request) {\n \tproxyRequest.Method = requestData.Method\n \tproxyRequest.URL, _ = url.Parse(requestData.Url)\n \n+\t// Block requests to illegal destinations\n+\tif !isAllowedDest(proxyRequest.URL.Hostname()) {\n+\t\tlog.Print(\"A request to a banned destination was made.\")\n+\t\t_, _ = fmt.Fprintln(response, \"{\\\"success\\\": false, \\\"data\\\":{\\\"message\\\":\\\"(Proxy Error) Request cannot be to this destination.\\\"}}\")\n+\t\treturn\n+\t}\n+\n \tvar params = proxyRequest.URL.Query()\n \n \tfor k, v := range requestData.Params {"
        },
        {
          "filename": "server/server.go",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -12,10 +12,12 @@ func main() {\n \ttokenPtr := flag.String(\"token\", \"\", \"the Proxy Access Token used to restrict access to the server.\")\n \tallowedOriginsPtr := flag.String(\"allowed-origins\", \"*\", \"a comma separated list of allowed origins.\")\n \tbannedOutputsPtr := flag.String(\"banned-outputs\", \"\", \"a comma separated list of banned outputs.\")\n+\tbannedDestsPtr := flag.String(\"banned-dests\", \"\", \"a comma separated list of banned proxy destinations.\")\n+\n \tflag.Parse()\n \n \tfinished := make(chan bool)\n-\tlibproxy.Initialize(*tokenPtr, *hostPtr, *allowedOriginsPtr, *bannedOutputsPtr, onProxyStateChangeServer, false, finished)\n+\tlibproxy.Initialize(*tokenPtr, *hostPtr, *allowedOriginsPtr, *bannedOutputsPtr, *bannedDestsPtr, onProxyStateChangeServer, false, finished)\n \n \t<-finished\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cc0c4c79ae8bb001d731bdfc13d6917dbc3d46f0",
            "date": "2023-11-16T08:46:03Z",
            "author_login": "SamJakob"
          },
          {
            "sha": "900f3606076e4c0c41fb058eaf5ab75f199b3554",
            "date": "2023-11-16T08:45:52Z",
            "author_login": "SamJakob"
          },
          {
            "sha": "89f333763d0ed2af9acd8ea85ff43dd386761e7d",
            "date": "2023-11-06T18:22:06Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "fa9c500ed82db0f974e87a2ce3cab31025aca5bd",
            "date": "2023-10-30T18:34:39Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "8661cd8645b4912deb9c6d65bf325e8c484f76f3",
            "date": "2023-08-21T19:43:16Z",
            "author_login": "SamJakob"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "The package github.com/hoppscotch/proxyscotch before 1.0.0 are vulnerable to Server-side Request Forgery (SSRF) when interceptor mode is set to proxy. It occurs when an HTTP request is made by a backend server to an untrusted URL submitted by a user. It leads to a leakage of sensitive information from the server.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-01T16:15:08.823",
    "last_modified": "2024-11-21T06:53:06.790",
    "fix_date": "2022-01-24T10:22:33Z"
  },
  "references": [
    {
      "url": "https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.430961",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "proxyscotch",
    "owner": "hoppscotch",
    "created_at": "2019-10-30T00:15:59Z",
    "updated_at": "2025-01-17T18:48:34Z",
    "pushed_at": "2024-03-04T18:15:01Z",
    "size": 18920,
    "stars": 373,
    "forks": 101,
    "open_issues": 13,
    "watchers": 373,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 31642,
      "Shell": 11668,
      "Inno Setup": 2212,
      "Dockerfile": 338
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:06:51.630279"
  }
}