{
  "cve_id": "CVE-2022-25851",
  "github_data": {
    "repository": "jpeg-js/jpeg-js",
    "fix_commit": "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
    "related_commits": [
      "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
      "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27"
    ],
    "patch_url": "https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27.patch",
    "fix_commit_details": {
      "sha": "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
      "commit_date": "2022-06-03T14:40:52Z",
      "author": {
        "login": "sohomdatta1",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: validate sampling factors (#106)",
        "length": 37,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 25,
        "additions": 20,
        "deletions": 5
      },
      "files": [
        {
          "filename": "lib/decoder.js",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -576,7 +576,9 @@ var JpegImage = (function jpegImage() {\n         return array;\n       }\n       function prepareComponents(frame) {\n-        var maxH = 0, maxV = 0;\n+        // According to the JPEG standard, the sampling factor must be between 1 and 4\n+        // See https://github.com/libjpeg-turbo/libjpeg-turbo/blob/9abeff46d87bd201a952e276f3e4339556a403a3/libjpeg.txt#L1138-L1146\n+        var maxH = 1, maxV = 1;\n         var component, componentId;\n         for (componentId in frame.components) {\n           if (frame.components.hasOwnProperty(componentId)) {\n@@ -745,6 +747,11 @@ var JpegImage = (function jpegImage() {\n               var h = data[offset + 1] >> 4;\n               var v = data[offset + 1] & 15;\n               var qId = data[offset + 2];\n+\n+              if ( h <= 0 || v <= 0 ) {\n+                throw new Error('Invalid sampling factor, expected values above 0');\n+              }\n+\n               frame.componentsOrder.push(componentId);\n               frame.components[componentId] = {\n                 h: h,"
        },
        {
          "filename": "test/index.js",
          "status": "modified",
          "additions": 12,
          "deletions": 4,
          "patch": "@@ -7,10 +7,12 @@ function fixture(name) {\n   return fs.readFileSync(path.join(__dirname, 'fixtures', name));\n }\n \n-const SUPER_LARGE_JPEG_BASE64 =\n-  '/9j/wJ39sP//DlKWvX+7xPlXkJa9f7v8DoDVAAD//zb6QAEAI2cBv3P/r4ADpX8Jf14AAAAAgCPE+VeQlr1/uwCAAAAVALNOjAGP2lIS';\n+const SUPER_LARGE_JPEG_BASE64 = '/9j/wfFRBf//BdgC/9p/2P/E4d4=';\n+\n+const SUPER_LARGE_RESOLUTION_JPEG_BASE64 = '/9j/wfFR2PDh3g==';\n \n const SUPER_LARGE_JPEG_BUFFER = Buffer.from(SUPER_LARGE_JPEG_BASE64, 'base64');\n+const SUPER_LARGE_RESOLUTION_JPEG_BUFFER = Buffer.from(SUPER_LARGE_RESOLUTION_JPEG_BASE64, 'base64');\n \n it('should be able read image with a bad e1 marker not preceeded by ff', function () {\n     var jpegData = fixture('table-with-bad-e1.jpg');\n@@ -274,8 +276,8 @@ it('should be able to decode large images within memory limits', () => {\n \n // See https://github.com/eugeneware/jpeg-js/issues/53\n it('should limit resolution exposure', function () {\n-  expect(() => jpeg.decode(SUPER_LARGE_JPEG_BUFFER)).toThrow(\n-    'maxResolutionInMP limit exceeded by 141MP',\n+  expect(() => jpeg.decode(SUPER_LARGE_RESOLUTION_JPEG_BUFFER)).toThrow(\n+    'maxResolutionInMP limit exceeded by 3405MP',\n   );\n });\n \n@@ -288,3 +290,9 @@ it('should limit memory exposure', function () {\n   var jpegData = fixture('grumpycat.jpg');\n   expect(() => jpeg.decode(jpegData)).not.toThrow();\n }, 30000);\n+\n+// See https://github.com/jpeg-js/jpeg-js/issues/105\n+it('invalid sampling factor should error out', function () {\n+  expect(() => jpeg.decode(Buffer.from('/9j/wfFR2AD/UdgA/9r/3g==', 'base64')).toThrow(\n+    'Invalid sampling factor, expected values above 0'))\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "72cb0369b6e2d0df0bfbab05ea22fcd539ba6128",
            "date": "2024-09-08T01:30:19Z",
            "author_login": "patrickhulce"
          },
          {
            "sha": "4ddeafc36c59348dd83685451a557bb5056093c5",
            "date": "2023-09-08T02:57:57Z",
            "author_login": "patrickhulce"
          },
          {
            "sha": "b8cfcd4adcb20a2c9ea43a918827484c67781611",
            "date": "2023-02-24T16:56:48Z",
            "author_login": "zed-0xff"
          },
          {
            "sha": "9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
            "date": "2022-06-03T14:40:52Z",
            "author_login": "sohomdatta1"
          },
          {
            "sha": "b58cc11b29a66f853b4195d31e9e2de6080fcd7a",
            "date": "2021-07-15T19:23:07Z",
            "author_login": "DT-1236"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "The package jpeg-js before 0.4.4 are vulnerable to Denial of Service (DoS) where a particular piece of input will cause to enter an infinite loop and never return.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-10T20:15:08.173",
    "last_modified": "2024-11-21T06:53:06.890",
    "fix_date": "2022-06-03T14:40:52Z"
  },
  "references": [
    {
      "url": "https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpeg-js/jpeg-js/issues/105",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpeg-js/jpeg-js/pull/106/",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2860295",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-JPEGJS-2859218",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpeg-js/jpeg-js/issues/105",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/jpeg-js/jpeg-js/pull/106/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2860295",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://snyk.io/vuln/SNYK-JS-JPEGJS-2859218",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.429813",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jpeg-js",
    "owner": "jpeg-js",
    "created_at": "2014-01-16T14:44:39Z",
    "updated_at": "2025-01-01T14:15:07Z",
    "pushed_at": "2024-09-08T01:30:25Z",
    "size": 6068,
    "stars": 570,
    "forks": 125,
    "open_issues": 26,
    "watchers": 570,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 74335
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:18:37.727590"
  }
}