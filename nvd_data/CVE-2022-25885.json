{
  "cve_id": "CVE-2022-25885",
  "github_data": {
    "repository": "julianhille/MuhammaraJS",
    "fix_commit": "0a6427eec82ef2978995e453de2dc0d6224dd46c",
    "related_commits": [
      "0a6427eec82ef2978995e453de2dc0d6224dd46c",
      "0a6427eec82ef2978995e453de2dc0d6224dd46c"
    ],
    "patch_url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c.patch",
    "fix_commit_details": {
      "sha": "0a6427eec82ef2978995e453de2dc0d6224dd46c",
      "commit_date": "2022-06-29T22:54:39Z",
      "author": {
        "login": "julianhille",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix createWriter cpp / crash / npe when using null as stream object (#190)",
        "length": 157,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 24,
        "deletions": 8
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -9,6 +9,7 @@ and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.\n \n ### Changed\n \n+- Fixes hard crash to exception when creating a stream with null object and calling createWriter with it\n - Fixes missing buffer information for recrypt typescript definition\n \n ## [2.5.0] - 2022-06-23"
        },
        {
          "filename": "src/ObjectByteWriterWithPosition.cpp",
          "status": "modified",
          "additions": 15,
          "deletions": 7,
          "patch": "@@ -52,21 +52,29 @@ IOBasicTypes::LongBufferSizeType ObjectByteWriterWithPosition::Write(const IOBas\n     \n     Local<Value> args[1];\n     args[0] = anArray;\n-    \n-\tLocal<Value> result = func->Call(GET_CURRENT_CONTEXT,  OBJECT_FROM_PERSISTENT(mObject), 1, args).ToLocalChecked();\n+    MaybeLocal<Value> maybe;\n+    TryCatch try_catch(Isolate::GetCurrent());\n+\n+    maybe = func->Call(GET_CURRENT_CONTEXT,  OBJECT_FROM_PERSISTENT(mObject), 1, args);\n+    Local <Value> result;\n+\n+    if (!maybe.ToLocal(&result)) {\n+       try_catch.ReThrow();\n+       return 0;\n+    }\n     if(result.IsEmpty())\n     {\n-\t\tTHROW_EXCEPTION(\"wrong return value. it's empty. return the number of written characters\");\n-\t\treturn 0;\n+        THROW_EXCEPTION(\"wrong return value. it's empty. return the number of written characters\");\n+        return 0;\n     }\n     else if(result->IsNumber())\n     {\n         return TO_UINT32(result)->Value();\n     }\n     else\n     {\n-\t\tTHROW_EXCEPTION(\"wrong return value. write should return the number of written characters\");\n-\t\treturn 0;\n+        THROW_EXCEPTION(\"wrong return value. write should return the number of written characters\");\n+        return 0;\n     }\n }\n \n@@ -81,4 +89,4 @@ IOBasicTypes::LongFilePositionType ObjectByteWriterWithPosition::GetCurrentPosit\n     Local<Function> func = Local<Function>::Cast(value);\n     \n \treturn TO_NUMBER(func->Call(GET_CURRENT_CONTEXT, OBJECT_FROM_PERSISTENT(mObject), 0, NULL).ToLocalChecked())->Value();\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "tests/BasicModificationWithStreams.js",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -1,4 +1,5 @@\n var muhammara = require('../muhammara');\n+const chai = require('chai');\n \n describe('BasicModificationWithStreams', function() {\n \tit('should complete without error', function() {\n@@ -14,9 +15,15 @@ describe('BasicModificationWithStreams', function() {\n \t\t\tcolor:0x00\n \t\t});\n \t\tpageModifier.endContext().writePage();\n-\n \t\tpdfWriter.end();\n \t\toutStream.close();\n \t\tinStream.close();\n \t});\n+\n+\tit('null for stream should throw an error and not crash', function () {\n+\t\tvar res = new muhammara.PDFStreamForResponse(null)\n+\t\tchai.expect(\n+\t\t\tmuhammara.createWriter.bind(undefined, res)\n+\t\t).to.throw(/Cannot read propert.*(write)?.* of null/)\n+\t})\n });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "888c997ef21e380dce9d0d5f1fe1055148c196fe",
            "date": "2024-12-19T19:13:29Z",
            "author_login": "julianhille"
          },
          {
            "sha": "2b5790064c022bd1fecabb7ad99dea6745ded476",
            "date": "2024-12-14T14:29:59Z",
            "author_login": "julianhille"
          },
          {
            "sha": "92176f1129408de2306794d9a49958022135d38f",
            "date": "2024-12-14T11:33:05Z",
            "author_login": "julianhille"
          },
          {
            "sha": "ed84e1b930029cb9a920d8cf1d7114f0505cf675",
            "date": "2024-12-12T17:09:41Z",
            "author_login": "julianhille"
          },
          {
            "sha": "a2ec1212f0287ca8348101bc67740b14848949bf",
            "date": "2024-12-12T00:33:59Z",
            "author_login": "julianhille"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": null,
    "description": "The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-01T05:15:09.810",
    "last_modified": "2024-11-21T06:53:09.830",
    "fix_date": "2022-06-29T22:54:39Z"
  },
  "references": [
    {
      "url": "https://github.com/galkahana/HummusJS/issues/439",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c",
      "source": "report@snyk.io",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/julianhille/MuhammaraJS/issues/188",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/galkahana/HummusJS/issues/439",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/julianhille/MuhammaraJS/issues/188",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:00.974809",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "MuhammaraJS",
    "owner": "julianhille",
    "created_at": "2020-05-04T23:06:35Z",
    "updated_at": "2025-01-01T05:38:23Z",
    "pushed_at": "2024-12-19T19:13:35Z",
    "size": 34393,
    "stars": 239,
    "forks": 47,
    "open_issues": 30,
    "watchers": 239,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "C": 12852691,
      "C++": 2658634,
      "JavaScript": 471739,
      "Python": 149117,
      "Assembly": 79368,
      "Makefile": 67497,
      "CMake": 16180,
      "Perl": 13048,
      "HTML": 4775,
      "Shell": 383
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:02:46.686874"
  }
}