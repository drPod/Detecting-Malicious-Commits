{
  "cve_id": "CVE-2022-2650",
  "github_data": {
    "repository": "wger-project/wger",
    "fix_commit": "5e3167e3a2dc95836fa2607fe201524c031a2c4c",
    "related_commits": [
      "5e3167e3a2dc95836fa2607fe201524c031a2c4c",
      "5e3167e3a2dc95836fa2607fe201524c031a2c4c"
    ],
    "patch_url": "https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c.patch",
    "fix_commit_details": {
      "sha": "5e3167e3a2dc95836fa2607fe201524c031a2c4c",
      "commit_date": "2022-10-13T14:24:29Z",
      "author": {
        "login": "rolandgeider",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge branch 'master' into add-django-axes",
        "length": 42,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 203,
        "additions": 172,
        "deletions": 31
      },
      "files": [
        {
          "filename": ".github/workflows/docker-base.yml",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -17,10 +17,10 @@ jobs:\n         uses: actions/checkout@v3\n \n       - name: Set up QEMU\n-        uses: docker/setup-qemu-action@v2.0.0\n+        uses: docker/setup-qemu-action@v2.1.0\n \n       - name: Set up Docker Buildx\n-        uses: docker/setup-buildx-action@v2.0.0\n+        uses: docker/setup-buildx-action@v2.1.0\n \n       - name: Login to DockerHub\n         uses: docker/login-action@v2.0.0\n@@ -29,7 +29,7 @@ jobs:\n           password: ${{ secrets.DOCKERHUB_TOKEN }}\n \n       - name: Build base image\n-        uses: docker/build-push-action@v3.1.1\n+        uses: docker/build-push-action@v3.2.0\n         with:\n           context: .\n           push: true"
        },
        {
          "filename": ".github/workflows/docker.yml",
          "status": "modified",
          "additions": 29,
          "deletions": 9,
          "patch": "@@ -6,38 +6,58 @@ on:\n       - master\n \n jobs:\n-  path-context:\n+  apache:\n+    name: Build apache image\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout\n         uses: actions/checkout@v3\n \n       - name: Set up QEMU\n-        uses: docker/setup-qemu-action@v2.0.0\n+        uses: docker/setup-qemu-action@v2.1.0\n \n       - name: Set up Docker Buildx\n-        uses: docker/setup-buildx-action@v2.0.0\n+        uses: docker/setup-buildx-action@v2.1.0\n \n       - name: Login to DockerHub\n         uses: docker/login-action@v2.0.0\n         with:\n           username: ${{ secrets.DOCKERHUB_USERNAME }}\n           password: ${{ secrets.DOCKERHUB_TOKEN }}\n \n-      - name: Build apache image\n-        uses: docker/build-push-action@v3.1.1\n+      - name: Build image\n+        uses: docker/build-push-action@v3.2.0\n         with:\n           context: .\n           push: true\n           file: extras/docker/demo/Dockerfile\n           platforms: linux/amd64,linux/arm64\n-          tags: wger/demo:latest,wger/demo:2.1-dev,wger/apache:latest,wger/apache:2.1-dev\n+          tags: wger/demo:latest,wger/demo:2.2-dev,wger/apache:latest,wger/apache:2.2-dev\n \n-      - name: Build dev image\n-        uses: docker/build-push-action@v3.1.1\n+  prod:\n+    name: Build production image\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Set up QEMU\n+        uses: docker/setup-qemu-action@v2.1.0\n+\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@v2.1.0\n+\n+      - name: Login to DockerHub\n+        uses: docker/login-action@v2.0.0\n+        with:\n+          username: ${{ secrets.DOCKERHUB_USERNAME }}\n+          password: ${{ secrets.DOCKERHUB_TOKEN }}\n+\n+      - name: Build image\n+        uses: docker/build-push-action@v3.2.0\n         with:\n           context: .\n           push: true\n           file: extras/docker/development/Dockerfile\n           platforms: linux/amd64,linux/arm64\n-          tags: wger/server:latest,wger/server:2.1-dev,wger/devel:latest,wger/devel:2.1-dev\n+          tags: wger/server:latest,wger/server:2.2-dev,wger/devel:latest,wger/devel:2.2-dev"
        },
        {
          "filename": "extras/docker/development/settings.py",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n TIME_ZONE = env.str(\"TIME_ZONE\", 'Europe/Berlin')\n \n # Make this unique, and don't share it with anybody.\n-SECRET_KEY = env.str(\"SECRET_KEY\", 'wger-django-secret-key')\n+SECRET_KEY = env.str(\"SECRET_KEY\", 'wger-docker-supersecret-key-1234567890!@#$%^&*(-_)')\n \n \n # Your reCaptcha keys\n@@ -122,3 +122,10 @@\n AXES_FAILURE_LIMIT = 5  # configurable, default is 5\n AXES_COOLOFF_TIME = 0.5  # configurable, default is 0.5 hours\n AXES_HANDLER = 'axes.handlers.cache.AxesCacheHandler'  # Configurable, but default is the cache handler\n+\n+#\n+# Django Rest Framework SimpleJWT\n+#\n+SIMPLE_JWT['ACCESS_TOKEN_LIFETIME'] = timedelta(minutes=env.int(\"ACCESS_TOKEN_LIFETIME\", 15))\n+SIMPLE_JWT['REFRESH_TOKEN_LIFETIME'] = timedelta(hours=env.int(\"REFRESH_TOKEN_LIFETIME\", 24))\n+SIMPLE_JWT['SIGNING_KEY'] = env.str(\"SIGNING_KEY\", SECRET_KEY)\n\\ No newline at end of file"
        },
        {
          "filename": "requirements.txt",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -12,13 +12,13 @@ django-activity-stream~=1.4\n django-axes==5.39.0\n django-crispy-forms~=1.14\n django-simple-history~=3.1\n-django-email-verification~=0.1.0\n+django-email-verification~=0.3.1\n django_compressor~=4.1\n django_extensions~=3.2\n django-storages~=1.13\n django-environ==0.9.0\n easy-thumbnails==2.8.3\n-fontawesomefree~=6.1.1\n+fontawesomefree~=6.2.0\n icalendar==4.1.0\n invoke==1.7.3\n pillow==9.2.0\n@@ -33,6 +33,7 @@ requests==2.28.1\n django-cors-headers==3.13.0\n django-filter==22.1\n djangorestframework~=3.14\n+djangorestframework-simplejwt[crypto]==5.2.1\n \n # Not used anymore, but needed because some modules are imported in DB migration\n # files"
        },
        {
          "filename": "wger/core/api/views.py",
          "status": "modified",
          "additions": 20,
          "deletions": 2,
          "patch": "@@ -198,14 +198,23 @@ def get(request):\n class UserAPILoginView(viewsets.ViewSet):\n     \"\"\"\n     API endpoint for api user objects\n+    .. warning:: This endpoint is deprecated\n     \"\"\"\n     permission_classes = (AllowAny, )\n     queryset = User.objects.all()\n     serializer_class = UserApiSerializer\n     throttle_scope = 'login'\n \n     def get(self, request):\n-        return Response({'message': \"You must send a 'username' and 'password' via POST\"})\n+        return Response(\n+            data={\n+                'message': \"You must send a 'username' and 'password' via POST\",\n+                'warning': \"This endpoint is deprecated.\"\n+            },\n+            headers={\n+                \"Deprecation\": \"Sat, 01 Oct 2022 23:59:59 GMT\",\n+            },\n+        )\n \n     def post(self, request):\n         data = request.data\n@@ -223,7 +232,16 @@ def post(self, request):\n             )\n \n         token = create_token(form.get_user())\n-        return Response({'token': token.key}, status=status.HTTP_200_OK)\n+        return Response(\n+            data={\n+                'token': token.key,\n+                'message': \"This endpoint is deprecated.\"\n+            },\n+            status=status.HTTP_200_OK,\n+            headers={\n+                \"Deprecation\": \"Sat, 01 Oct 2022 23:59:59 GMT\",\n+            }\n+        )\n \n \n class UserAPIRegistrationViewSet(viewsets.ViewSet):"
        },
        {
          "filename": "wger/exercises/models/exercise.py",
          "status": "modified",
          "additions": 6,
          "deletions": 7,
          "patch": "@@ -116,13 +116,12 @@ def get_absolute_url(self):\n         \"\"\"\n         Returns the canonical URL to view an exercise\n         \"\"\"\n-        return reverse(\n-            'exercise:exercise:view-base',\n-            kwargs={\n-                'pk': self.exercise_base_id,\n-                'slug': slugify(self.name)\n-            }\n-        )\n+        slug_name = slugify(self.name)\n+        kwargs = {'pk': self.exercise_base_id}\n+        if slug_name:\n+            kwargs['slug'] = slug_name\n+\n+        return reverse('exercise:exercise:view-base', kwargs=kwargs)\n \n     def save(self, *args, **kwargs):\n         \"\"\""
        },
        {
          "filename": "wger/exercises/tests/test_exercise_model.py",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -0,0 +1,38 @@\n+# This file is part of wger Workout Manager.\n+#\n+# wger Workout Manager is free software: you can redistribute it and/or modify\n+# it under the terms of the GNU Affero General Public License as published by\n+# the Free Software Foundation, either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# wger Workout Manager is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU Affero General Public License\n+\n+# wger\n+from wger.core.tests.base_testcase import WgerTestCase\n+from wger.exercises.models import Exercise\n+\n+\n+class ExerciseModelTestCase(WgerTestCase):\n+    \"\"\"\n+    Test the logic in the exercise model\n+    \"\"\"\n+\n+    def test_absolute_url_name(self):\n+        \"\"\"Test that the get_absolute_url returns the correct URL\"\"\"\n+        exercise = Exercise(exercise_base_id=1, description='abc', name='foo')\n+        self.assertEqual(exercise.get_absolute_url(), '/en/exercise/1/view-base/foo')\n+\n+    def test_absolute_url_no_name(self):\n+        \"\"\"Test that the get_absolute_url returns the correct URL\"\"\"\n+        exercise = Exercise(exercise_base_id=2, description='abc', name='')\n+        self.assertEqual(exercise.get_absolute_url(), '/en/exercise/2/view-base')\n+\n+    def test_absolute_url_no_name2(self):\n+        \"\"\"Test that the get_absolute_url returns the correct URL\"\"\"\n+        exercise = Exercise(exercise_base_id=42, description='abc', name='@@@@@')\n+        self.assertEqual(exercise.get_absolute_url(), '/en/exercise/42/view-base')"
        },
        {
          "filename": "wger/settings_global.py",
          "status": "modified",
          "additions": 16,
          "deletions": 2,
          "patch": "@@ -18,6 +18,7 @@\n # Build paths inside the project like this: os.path.join(BASE_DIR, ...)\n import os\n import re\n+from datetime import timedelta\n \n \n \"\"\"\n@@ -82,6 +83,7 @@\n     'rest_framework',\n     'rest_framework.authtoken',\n     'django_filters',\n+    'rest_framework_simplejwt',\n \n     # Breadcrumbs\n     'django_bootstrap_breadcrumbs',\n@@ -418,6 +420,7 @@\n     'DEFAULT_AUTHENTICATION_CLASSES': (\n         'rest_framework.authentication.SessionAuthentication',\n         'rest_framework.authentication.TokenAuthentication',\n+        'rest_framework_simplejwt.authentication.JWTAuthentication',\n     ),\n     'DEFAULT_FILTER_BACKENDS': (\n         'django_filters.rest_framework.DjangoFilterBackend',\n@@ -429,6 +432,17 @@\n     }\n }\n \n+#\n+# Django Rest Framework SimpleJWT\n+#\n+SIMPLE_JWT = {\n+    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),\n+    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),\n+    'ROTATE_REFRESH_TOKENS': False,\n+    'BLACKLIST_AFTER_ROTATION': False,\n+    'UPDATE_LAST_LOGIN': False,\n+}\n+\n #\n # CORS headers: allow all hosts to access the API\n #\n@@ -489,8 +503,8 @@ def email_verified_callback(user):\n EMAIL_MAIL_SUBJECT = 'Confirm your email'\n EMAIL_MAIL_HTML = 'email_verification/email_body_html.tpl'\n EMAIL_MAIL_PLAIN = 'email_verification/email_body_txt.tpl'\n-EMAIL_TOKEN_LIFE = 60 * 60\n-EMAIL_PAGE_TEMPLATE = 'email_verification/confirm_template.html'\n+EMAIL_MAIL_TOKEN_LIFE = 60 * 60\n+EMAIL_MAIL_PAGE_TEMPLATE = 'email_verification/confirm_template.html'\n EMAIL_PAGE_DOMAIN = 'http://localhost:8000/'\n \n #"
        },
        {
          "filename": "wger/software/templates/api.html",
          "status": "modified",
          "additions": 39,
          "deletions": 3,
          "patch": "@@ -16,11 +16,47 @@ <h3>Authentication</h3>\n objects such as workouts, you need to generate an API KEY</strong> and pass\n it in the header, see the link on the sidebar for details.</p>\n \n-<p>You can also generate a token via the <code>login</code> endpoint. Send a\n-username and password and you will get the user's token or a new one will be\n-generated. At the moment it is not possible to register via the API.</p>\n+<h6>JWT Authentication</h6>\n+\n+<p>\n+You can generate access token via <code>/token/</code> endpoint. Send a username and password, and you will get the\n+<code>access</code> token which you can use to access the private endpoints.\n+<pre>\n+curl \\\n+  -X POST \\\n+  -H \"Content-Type: application/json\" \\\n+  -d '{\"username\": \"example_username\", \"password\": \"example_password \"}' \\\n+  https://wger.de/api/v2/token/\n+\n+...\n+{\n+  \"access\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNDU2LCJqdGkiOiJmZDJmOWQ1ZTFhN2M0MmU4OTQ5MzVlMzYyYmNhOGJjYSJ9.NHlztMGER7UADHZJlxNG0WSi22a2KaYSfd1S-AuT7lU\",\n+  \"refresh\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"\n+}\n+</pre>\n+\n+<p>Additionally, you can send an access token to <code>/token/verify/</code> endpoint to verify that token.</p>\n+\n+<p>When this short-lived access token expires, you can use the longer-lived <code>refresh</code>\n+token to obtain another access token.\n+<pre>\n+curl \\\n+  -X POST \\\n+  -H \"Content-Type: application/json\" \\\n+  -d '{\"refresh\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImNvbGRfc3R1ZmYiOiLimIMiLCJleHAiOjIzNDU2NywianRpIjoiZGUxMmY0ZTY3MDY4NDI3ODg5ZjE1YWMyNzcwZGEwNTEifQ.aEoAYkSJjoWH1boshQAaTkf8G3yn0kapko6HFRt7Rh4\"}' \\\n+  https://wger.de/api/v2/token/refresh/\n+\n+...\n+{\"access\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX3BrIjoxLCJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiY29sZF9zdHVmZiI6IuKYgyIsImV4cCI6MTIzNTY3LCJqdGkiOiJjNzE4ZTVkNjgzZWQ0NTQyYTU0NWJkM2VmMGI0ZGQ0ZSJ9.ekxRxgb9OKmHkfy-zs1Ro_xs1eMLXiR17dIDBVxeT-w\"}\n+</pre>\n+</p>\n+</p>\n \n <p>You should always use HTTPS if possible when communicating with the server.</p>\n+<p>At the moment it is not possible to register via the API.</p>\n+<p><strong>Deprecated: </strong>You can also generate a token via the <code>login</code> endpoint. Send a\n+username and password, and you will get the user's token or a new one will be\n+generated.</p>\n \n \n <div class=\"container\">"
        },
        {
          "filename": "wger/urls.py",
          "status": "modified",
          "additions": 10,
          "deletions": 2,
          "patch": "@@ -30,6 +30,11 @@\n # Third Party\n from django_email_verification import urls as email_urls\n from rest_framework import routers\n+from rest_framework_simplejwt.views import (\n+    TokenObtainPairView,\n+    TokenRefreshView,\n+    TokenVerifyView,\n+)\n \n # wger\n from wger.core.api import views as core_api_views\n@@ -44,7 +49,7 @@\n from wger.weight.api import views as weight_api_views\n \n \n-#admin.autodiscover()\n+# admin.autodiscover()\n \n #\n # REST API\n@@ -204,7 +209,7 @@\n # The actual URLs\n #\n urlpatterns = i18n_patterns(\n-    #url(r'^admin/', admin.site.urls),\n+    # url(r'^admin/', admin.site.urls),\n     path('', include(('wger.core.urls', 'core'), namespace='core')),\n     path('workout/', include(('wger.manager.urls', 'manager'), namespace='manager')),\n     path('exercise/', include(('wger.exercises.urls', 'exercise'), namespace='exercise')),\n@@ -244,6 +249,9 @@\n         core_api_views.UserAPIRegistrationViewSet.as_view({'post': 'post'}),\n         name='api_register'\n     ),\n+    path('api/v2/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n+    path('api/v2/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n+    path('api/v2/token/verify/', TokenVerifyView.as_view(), name='token_verify'),\n \n     # Others\n     path("
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 4,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 8,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "099696902f79404dd2b4b34804ed9557c2a15f65",
            "date": "2025-01-07T23:56:02Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "3c7b1f072d8dfcec574230bab00458ec3e95318b",
            "date": "2025-01-10T15:11:15Z",
            "author_login": "rolandgeider"
          },
          {
            "sha": "428e780d2774a47b1c0610b1d1f20d46f40517a0",
            "date": "2025-01-09T23:46:34Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "d740c7a27046bd6674b477807d1dd3142db409af",
            "date": "2025-01-07T12:21:46Z",
            "author_login": "rolandgeider"
          },
          {
            "sha": "1ce1b7d9a1f8279328052b25a2ee560cf6773ab7",
            "date": "2025-01-07T08:04:51Z",
            "author_login": "rolandgeider"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-307",
    "description": "Improper Restriction of Excessive Authentication Attempts in GitHub repository wger-project/wger prior to 2.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-24T17:15:10.350",
    "last_modified": "2024-11-21T07:01:26.543",
    "fix_date": "2022-10-13T14:24:29Z"
  },
  "references": [
    {
      "url": "https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.164699",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wger",
    "owner": "wger-project",
    "created_at": "2013-01-19T16:34:38Z",
    "updated_at": "2025-01-14T12:03:32Z",
    "pushed_at": "2025-01-13T17:54:33Z",
    "size": 66202,
    "stars": 3375,
    "forks": 603,
    "open_issues": 219,
    "watchers": 3375,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 1727535,
      "HTML": 229657,
      "JavaScript": 13827,
      "CSS": 13081,
      "Dockerfile": 7295,
      "Smarty": 4043,
      "Shell": 4036,
      "SCSS": 937
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T17:34:50.124795"
  }
}