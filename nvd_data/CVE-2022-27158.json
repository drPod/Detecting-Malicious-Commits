{
  "cve_id": "CVE-2022-27158",
  "github_data": {
    "repository": "pear/pearweb",
    "fix_commit": "6447c174a6b4bd76d28ecca8543cbd24bf394f99",
    "related_commits": [
      "6447c174a6b4bd76d28ecca8543cbd24bf394f99",
      "6447c174a6b4bd76d28ecca8543cbd24bf394f99"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6447c174a6b4bd76d28ecca8543cbd24bf394f99",
      "commit_date": "2021-08-03T23:07:22Z",
      "author": {
        "login": "kenguest",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Be cautious about what can be unserialized",
        "length": 42,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 102,
        "additions": 82,
        "deletions": 20
      },
      "files": [
        {
          "filename": "include/bugs/pear-bug-accountrequest.php",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -236,7 +236,11 @@ function confirmRequest($handle, $password, $name)\n         if (!isset($user['registered'])) {\n             return false;\n         }\n-        @$arr = unserialize($user['userinfo']);\n+        try {\n+            @$arr = unserialize($user['userinfo'], ['allowed_classes' => false]);\n+        } catch (Exception $ex) {\n+            $arr = false;\n+        }\n \n         include_once 'pear-database-note.php';\n         note::removeAll($handle);"
        },
        {
          "filename": "include/pear-database-user.php",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -46,7 +46,11 @@ static function activate($uid, $karmalevel = 'pear.dev')\n         if (!isset($user['registered'])) {\n             return false;\n         }\n-        @$arr = unserialize($user['userinfo']);\n+        try {\n+            @$arr = unserialize($user['userinfo'], ['allowed_classes' => false]);\n+        } catch (Exception $ex) {\n+            $arr = false;\n+        }\n \n         include_once 'pear-database-note.php';\n         note::removeAll($uid);"
        },
        {
          "filename": "include/pepr/pepr-ppvote.php",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -57,7 +57,14 @@ function get(&$dbh, $proposalId, $handle)\n             return null;\n         }\n         $set = $res->fetchRow(DB_FETCHMODE_ASSOC);\n-        $set['reviews'] = unserialize($set['reviews']);\n+        try {\n+            $unserialised = unserialize($set['reviews'], ['allowed_classes' => false]);\n+            if ($unserialised !== false) {\n+                $set['reviews'] = $unserialised;\n+            }\n+        } catch (Exception $ex) {\n+            $set['reviews'] = array();\n+        }\n         $vote = new ppVote($set);\n         return $vote;\n     }\n@@ -71,7 +78,10 @@ function &getAll(&$dbh, $proposalId)\n         }\n         $votes = array();\n         while ($set = $res->fetchRow(DB_FETCHMODE_ASSOC)) {\n-            $set['reviews'] = unserialize($set['reviews']);\n+            $uReviews = unserialize($set['reviews'], ['allowed_classes' => false]);\n+            if ($uReviews !== false) {\n+                $set['reviews'] = $uReviews;\n+            }\n             $votes[$set['user_handle']] = new ppVote($set);\n         }\n         return $votes;"
        },
        {
          "filename": "include/users/passwordmanage.php",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -55,7 +55,12 @@ function resetPassword($user, $pass1, $pass2)\n     {\n         require_once 'Damblan/Mailer.php';\n         $errors = array();\n-        $salt = md5(mt_rand(4,13) . $user . time() . $pass1);\n+        $random_bytes = openssl_random_pseudo_bytes(16, $strong);\n+        if ($random_bytes === false || $strong === false) {\n+            $errors[] = \"Could not generate a safe password token\";\n+            return $errors;\n+        }\n+        $salt = md5($rand_bytes);\n         PEAR::staticPushErrorHandling(PEAR_ERROR_RETURN);\n         $this->_dbh->query('DELETE FROM lostpassword WHERE handle=?', array($user));\n         $e = $this->_dbh->query('INSERT INTO lostpassword\n@@ -91,4 +96,4 @@ function resetPassword($user, $pass1, $pass2)\n         }\n         return $errors;\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "pearweb.php",
          "status": "modified",
          "additions": 8,
          "deletions": 3,
          "patch": "@@ -145,8 +145,13 @@ function initializeDatabase($answers)\n             $oldversion = false;\n         }\n         if ($oldversion) {\n-            $curdef = unserialize(file_get_contents($updir .\n-              $answers['database'] . '-' . $oldversion . '.ser'));\n+            $sFile = $updir . $answers['database'] . '-' . $oldversion . '.ser';\n+            try {\n+                $curdef = unserialize(file_get_contents($sFile), ['allowed_classes' => false]);\n+            } catch (Exception $ex) {\n+                $curdef = false;\n+            }\n+\n             if (!is_array($curdef)) {\n                 $this->_ui->outputData('invalid data returned from previous version');\n             }\n@@ -355,4 +360,4 @@ function setupHttpdconf($answers)\n         $this->_ui->outputData('...done');\n         return true;\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "pearweb_election.php",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -138,8 +138,12 @@ function initializeDatabase($answers)\n             $oldversion = false;\n         }\n         if ($oldversion) {\n-            $curdef = unserialize(file_get_contents('@www-dir@/sql/.pearweb-upgrade/' .\n-              $answers['database'] . '-' . $oldversion . '.ser'));\n+            $sFile = '@www-dir@/sql/.pearweb-upgrade/' . $answers['database'] . '-' . $oldversion . '.ser';\n+            try {\n+                $curdef = unserialize(file_get_contents($sFile), ['allowed_classes' => false]);\n+            } catch (Exception $ex) {\n+                $curdef = false;\n+            }\n             if (!is_array($curdef)) {\n                 $this->_ui->outputData('invalid data returned from previous version');\n             }\n@@ -166,4 +170,4 @@ function initializeDatabase($answers)\n         }\n         return true;\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "pearweb_pepr.php",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -145,8 +145,12 @@ function initializeDatabase($answers)\n             $oldversion = false;\n         }\n         if ($oldversion) {\n-            $curdef = unserialize(file_get_contents('@www-dir@/sql/.pearweb-upgrade/' .\n-              $answers['database'] . '-' . $oldversion . '.ser'));\n+            try {\n+                $sFile = '@www-dir@/sql/.pearweb-upgrade/' . $answers['database'] . '-' . $oldversion . '.ser';\n+                $curdef = unserialize(file_get_contents($sFile), ['allowed_classes' => false]);\n+            } catch (Exception $ex) {\n+                $curdef = false;\n+            }\n             if (!is_array($curdef)) {\n                 $this->_ui->outputData('invalid data returned from previous version');\n             }\n@@ -322,4 +326,4 @@ function setupHttpdconf($answers)\n         $this->_ui->outputData('...done');\n         return true;\n     }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "public_html/admin/index.php",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -267,7 +267,15 @@ function updateRejectReason(selectObj) {\n         if (empty($requser['name']) || $requser['from_site'] == 'pecl') {\n             break;\n         }\n-        list($purpose, $moreinfo) = @unserialize($requser['userinfo']);\n+        try {\n+            $uInfo = @unserialize($requser['userinfo'], ['allowed_classes' => false]);\n+            if ($uInfo !== false) {\n+                list($purpose, $moreinfo) = $uInfo;\n+            }\n+        } catch (Exception $ex) {\n+            $purpose = 'n/a';\n+            $moreinfo = 'n/a';\n+        }\n \n         $bb = new BorderBox('Account request from ' . $requser['name'] . ' &lt;' . $requser['email'] . '&gt;', \"100%\", '', 2, true);\n         $bb->horizHeadRow(\"Requested username:\", $requser['handle']);\n@@ -511,8 +519,8 @@ function setCmdInput(mode)\n             list($name, $note, $userinfo) = $data;\n \n                 // Grab userinfo/request purpose\n-            if (@unserialize($userinfo)) {\n-                $userinfo = @unserialize($userinfo);\n+            if (@unserialize($userinfo, ['allowed_classes' => false])) {\n+                $userinfo = @unserialize($userinfo, ['allowed_classes' => false]);\n                 $account_purpose = $userinfo[0];\n             } else {\n                 $account_purpose = $userinfo;"
        },
        {
          "filename": "rollback.php",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -74,7 +74,16 @@ protected function moveVotes()\n             $comment  = \"Original vote: {$row->value}\\n\";\n             $comment .= \"Conditional vote: \" . ($row->is_conditional != 0)?'yes':'no' . \"\\n\";\n             $comment .= \"Comment on vote: \" . $row->comment . \"\\n\\n\";\n-            $comment .= \"Reviewed: \" . implode(\", \", unserialize($row->reviews));\n+            $reviewed = \"Reviewed: n/a\";\n+            try {\n+                $uInfo = unserialize($row->reviews, ['allowed_classes' => false]);\n+                if ($uInfo !== false) {\n+                    $reviewed = \"Reviewed: \" . implode(\", \", $uInfo);\n+                }\n+            } catch (Exception $ex) {\n+                // do nothing\n+            }\n+            $comment .= $reviewed;\n \n             $sql = sprintf(\n                 $insert,"
        },
        {
          "filename": "scripts/rollbackProposal.php",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -74,7 +74,16 @@ protected function moveVotes()\n             $comment  = \"Original vote: {$row->value}\\n\";\n             $comment .= \"Conditional vote: \" . (($row->is_conditional != 0)?'yes':'no') . \"\\n\";\n             $comment .= \"Comment on vote: \" . $row->comment . \"\\n\";\n-            $comment .= \"Reviewed: \" . implode(\", \", unserialize($row->reviews));\n+            $reviewed = \"Reviewed: n/a\";\n+            try {\n+                $uInfo = unserialize($row->reviews, ['allowed_classes' => false]);\n+                if ($uInfo !== false) {\n+                    $reviewed = \"Reviewed: \" . implode(\", \", $uInfo);\n+                }\n+            } catch (Exception $ex) {\n+                // do nothing\n+            }\n+            $comment .= $reviewed;\n \n             $sql = sprintf(\n                 $insert,"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 7,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "66d7899ee585005ef7b7ce5662b0b10498b7288e",
            "date": "2022-03-13T15:06:33Z",
            "author_login": "ashnazg"
          },
          {
            "sha": "2fc891bad01b4a11c1f4dbc3cebd077fddf3e890",
            "date": "2022-03-13T15:05:19Z",
            "author_login": "ashnazg"
          },
          {
            "sha": "36337b377239a50646a0db626fc81e79d04d2cd6",
            "date": "2022-03-13T14:42:06Z",
            "author_login": "ashnazg"
          },
          {
            "sha": "cbf252bb6fbc661f18c6ac6efac81b2687a6b0af",
            "date": "2021-08-13T20:00:31Z",
            "author_login": "kenguest"
          },
          {
            "sha": "6447c174a6b4bd76d28ecca8543cbd24bf394f99",
            "date": "2021-08-03T23:07:22Z",
            "author_login": "kenguest"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-502",
    "description": "pearweb < 1.32 suffers from Deserialization of Untrusted Data.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-04-15T18:15:10.227",
    "last_modified": "2024-11-21T06:55:18.820",
    "fix_date": "2021-08-03T23:07:22Z"
  },
  "references": [
    {
      "url": "https://github.com/pear/pearweb/commit/6447c174a6b4bd76d28ecca8543cbd24bf394f99",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pear/pearweb/commit/6447c174a6b4bd76d28ecca8543cbd24bf394f99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:04.387624",
    "processing_status": "enhanced"
  }
}