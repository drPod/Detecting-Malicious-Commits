{
  "cve_id": "CVE-2022-2731",
  "github_data": {
    "repository": "openemr/openemr",
    "fix_commit": "285fb234bd27ea4c46a29f2797edda7f38f1d8db",
    "related_commits": [
      "285fb234bd27ea4c46a29f2797edda7f38f1d8db",
      "285fb234bd27ea4c46a29f2797edda7f38f1d8db"
    ],
    "patch_url": "https://github.com/openemr/openemr/commit/285fb234bd27ea4c46a29f2797edda7f38f1d8db.patch",
    "fix_commit_details": {
      "sha": "285fb234bd27ea4c46a29f2797edda7f38f1d8db",
      "commit_date": "2022-07-22T08:42:30Z",
      "author": {
        "login": "bradymiller",
        "type": "User",
        "stats": {
          "total_commits": 3166,
          "average_weekly_commits": 4.1878306878306875,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 593
        }
      },
      "commit_message": {
        "title": "bug fix e1",
        "length": 10,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 22,
        "deletions": 15
      },
      "files": [
        {
          "filename": "interface/main/backup.php",
          "status": "modified",
          "additions": 22,
          "deletions": 15,
          "patch": "@@ -500,8 +500,8 @@ function export_submit(step) {\n }\n \n if ($form_step == 1) {\n-    $form_status .= xla('Dumping OpenEMR database') . \"...<br />\";\n-    echo nl2br($form_status);\n+    $form_status .= xl('Dumping OpenEMR database') . \"...||br-placeholder||\";\n+    echo brCustomPlaceholder(text($form_status));\n     if (file_exists($TAR_FILE_PATH)) {\n         if (! unlink($TAR_FILE_PATH)) {\n             die(xlt(\"Couldn't remove old backup file:\") . \" \" . text($TAR_FILE_PATH));\n@@ -546,8 +546,8 @@ function export_submit(step) {\n }\n \n if ($form_step == 3) {\n-    $form_status .= xla('Dumping OpenEMR web directory tree') . \"...<br />\";\n-    echo nl2br($form_status);\n+    $form_status .= xl('Dumping OpenEMR web directory tree') . \"...||br-placeholder||\";\n+    echo brCustomPlaceholder(text($form_status));\n     $cur_dir = getcwd();\n     chdir($webserver_root);\n \n@@ -588,8 +588,8 @@ function export_submit(step) {\n }\n \n if ($form_step == 5) {   // create the final compressed tar containing all files\n-    $form_status .= xla('Backup file has been created. Will now send download.') . \"<br />\";\n-    echo nl2br($form_status);\n+    $form_status .= xl('Backup file has been created. Will now send download.') . \"||br-placeholder||\";\n+    echo brCustomPlaceholder(text($form_status));\n     $cur_dir = getcwd();\n     chdir($BACKUP_DIR);\n     $file_list = array('.');\n@@ -693,8 +693,8 @@ function export_submit(step) {\n     }\n \n     if ($tables || is_array($_POST['form_sel_lists'] ?? '') || is_array($_POST['form_sel_layouts'] ?? '')) {\n-        $form_status .= xla('Creating export file') . \"...<br />\";\n-        echo nl2br($form_status);\n+        $form_status .= xl('Creating export file') . \"...||br-placeholder||\";\n+        echo brCustomPlaceholder(text($form_status));\n         if (file_exists($EXPORT_FILE)) {\n             if (! unlink($EXPORT_FILE)) {\n                 die(xlt(\"Couldn't remove old export file: \") . text($EXPORT_FILE));\n@@ -899,8 +899,8 @@ function export_submit(step) {\n }\n \n if ($form_step == 103) {\n-    $form_status .= xla('Done.  Will now send download.') . \"<br />\";\n-    echo nl2br($form_status);\n+    $form_status .= xl('Done.  Will now send download.') . \"||br-placeholder||\";\n+    echo brCustomPlaceholder(text($form_status));\n     $auto_continue = true;\n }\n \n@@ -919,8 +919,8 @@ function export_submit(step) {\n   // Process uploaded config file.\n     if (is_uploaded_file($_FILES['userfile']['tmp_name'])) {\n         if (move_uploaded_file($_FILES['userfile']['tmp_name'], $EXPORT_FILE)) {\n-            $form_status .= xla('Applying') . \"...<br />\";\n-            echo nl2br($form_status);\n+            $form_status .= xl('Applying') . \"...||br-placeholder||\";\n+            echo brCustomPlaceholder(text($form_status));\n             $cmd = escapeshellcmd($mysql_cmd) . \" -u \" . escapeshellarg($sqlconf[\"login\"]) .\n             \" -p\" . escapeshellarg($sqlconf[\"pass\"]) .\n             \" -h \" . escapeshellarg($sqlconf[\"host\"]) .\n@@ -941,8 +941,8 @@ function export_submit(step) {\n }\n \n if ($form_step == 203) {\n-    $form_status .= xla('Done') . \".\";\n-    echo nl2br($form_status);\n+    $form_status .= xl('Done') . \".\";\n+    echo brCustomPlaceholder(text($form_status));\n }\n \n /// ViSolve : EventLog Backup\n@@ -1026,7 +1026,7 @@ function export_submit(step) {\n </table>\n \n <input type='hidden' name='form_step' value='<?php echo attr($form_step); ?>' />\n-<input type='hidden' name='form_status' value='<?php echo $form_status; ?>' />\n+<input type='hidden' name='form_status' value='<?php echo attr($form_status); ?>' />\n \n </form>\n \n@@ -1090,6 +1090,13 @@ function export_submit(step) {\n </script>\n <?php }\n \n+// convert ||br-placeholder|| to <br>\n+// (this is because the nl2br was not working for a reason I couldn't figure out)\n+function brCustomPlaceholder(string $str): string\n+{\n+    return str_replace(\"||br-placeholder||\", \"<br />\", $str);\n+}\n+\n // Recursive directory remove (like an O/S insensitive \"rm -rf dirname\")\n function obliterate_dir($dir)\n {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2736cadf9a6f9c728d5d00099e361155b01ba9b8",
            "date": "2025-01-14T21:31:59Z",
            "author_login": "somerob"
          },
          {
            "sha": "5a6ce59033e28da4977509da60f4fc0cbf084b43",
            "date": "2025-01-12T07:59:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "48858bcad419eb537a0879d8261845df39d793f2",
            "date": "2025-01-10T22:28:46Z",
            "author_login": "stephenwaite"
          },
          {
            "sha": "ee3beb58f73619e04004e526c56423a14d6689fd",
            "date": "2025-01-09T07:11:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "1480ee627b317622a122abb293b74be50ad86795",
            "date": "2025-01-08T17:44:10Z",
            "author_login": "sjpadgett"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository openemr/openemr prior to 7.0.0.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-09T12:15:08.303",
    "last_modified": "2024-11-21T07:01:35.983",
    "fix_date": "2022-07-22T08:42:30Z"
  },
  "references": [
    {
      "url": "https://github.com/openemr/openemr/commit/285fb234bd27ea4c46a29f2797edda7f38f1d8db",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/20b8d5c5-0764-4f0b-8ab3-b9f6b857175e",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openemr/openemr/commit/285fb234bd27ea4c46a29f2797edda7f38f1d8db",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/20b8d5c5-0764-4f0b-8ab3-b9f6b857175e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.207741",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openemr",
    "owner": "openemr",
    "created_at": "2010-05-21T19:54:08Z",
    "updated_at": "2025-01-12T07:59:39Z",
    "pushed_at": "2025-01-12T07:59:34Z",
    "size": 613406,
    "stars": 3249,
    "forks": 2204,
    "open_issues": 360,
    "watchers": 3249,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "rel-320",
      "rel-400",
      "rel-410",
      "rel-411",
      "rel-412",
      "rel-413",
      "rel-420",
      "rel-421"
    ],
    "languages": {
      "PHP": 38302611,
      "JavaScript": 2254920,
      "XSLT": 1868397,
      "HTML": 1450911,
      "Twig": 590132,
      "CSS": 530442,
      "SCSS": 189517,
      "Mustache": 127165,
      "Perl": 114453,
      "Shell": 79764,
      "Smarty": 70819,
      "Dockerfile": 57349,
      "Makefile": 1915,
      "Roff": 911
    },
    "commit_activity": {
      "total_commits_last_year": 325,
      "avg_commits_per_week": 6.25,
      "days_active_last_year": 161
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:15:48.369791"
  }
}