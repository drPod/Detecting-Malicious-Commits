{
  "cve_id": "CVE-2022-29164",
  "github_data": {
    "repository": "argoproj/argo-workflows",
    "fix_commit": "87470e1c2bf703a9110e97bb755614ce8757fdcc",
    "related_commits": [
      "87470e1c2bf703a9110e97bb755614ce8757fdcc",
      "87470e1c2bf703a9110e97bb755614ce8757fdcc"
    ],
    "patch_url": "https://github.com/argoproj/argo-workflows/commit/87470e1c2bf703a9110e97bb755614ce8757fdcc.patch",
    "fix_commit_details": {
      "sha": "87470e1c2bf703a9110e97bb755614ce8757fdcc",
      "commit_date": "2022-05-03T17:52:48Z",
      "author": {
        "login": "alexec",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: Added artifact Content-Security-Policy (#8585)",
        "length": 106,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 27,
        "deletions": 5
      },
      "files": [
        {
          "filename": "server/apiserver/argoserver.go",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -341,11 +341,15 @@ func (as *argoServer) newHTTPServer(ctx context.Context, port int, artifactServe\n \t\tr.Header.Del(\"Connection\")\n \t\twebhookInterceptor(w, r, gwmux)\n \t})\n-\tmux.HandleFunc(\"/artifacts/\", artifactServer.GetOutputArtifact)\n-\tmux.HandleFunc(\"/input-artifacts/\", artifactServer.GetInputArtifact)\n-\tmux.HandleFunc(\"/artifacts-by-uid/\", artifactServer.GetOutputArtifactByUID)\n-\tmux.HandleFunc(\"/input-artifacts-by-uid/\", artifactServer.GetInputArtifactByUID)\n-\tmux.HandleFunc(\"/artifact-files/\", artifactServer.GetArtifactFile)\n+\n+\t// emergency environment variable that allows you to disable the artifact service in case of problems\n+\tif os.Getenv(\"ARGO_ARTIFACT_SERVER\") != \"false\" {\n+\t\tmux.HandleFunc(\"/artifacts/\", artifactServer.GetOutputArtifact)\n+\t\tmux.HandleFunc(\"/input-artifacts/\", artifactServer.GetInputArtifact)\n+\t\tmux.HandleFunc(\"/artifacts-by-uid/\", artifactServer.GetOutputArtifactByUID)\n+\t\tmux.HandleFunc(\"/input-artifacts-by-uid/\", artifactServer.GetInputArtifactByUID)\n+\t\tmux.HandleFunc(\"/artifact-files/\", artifactServer.GetArtifactFile)\n+\t}\n \tmux.Handle(\"/oauth2/redirect\", handlers.ProxyHeaders(http.HandlerFunc(as.oAuth2Service.HandleRedirect)))\n \tmux.Handle(\"/oauth2/callback\", handlers.ProxyHeaders(http.HandlerFunc(as.oAuth2Service.HandleCallback)))\n \tmux.HandleFunc(\"/metrics\", func(w http.ResponseWriter, r *http.Request) {"
        },
        {
          "filename": "server/artifacts/artifact_server.go",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -16,6 +16,7 @@ import (\n \t\"google.golang.org/grpc/status\"\n \tapierr \"k8s.io/apimachinery/pkg/api/errors\"\n \tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n+\t\"k8s.io/utils/env\"\n \n \t\"github.com/argoproj/argo-workflows/v3/persist/sqldb\"\n \twfv1 \"github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1\"\n@@ -409,6 +410,8 @@ func (a *ArtifactServer) returnArtifact(w http.ResponseWriter, art *wfv1.Artifac\n \tkey, _ := art.GetKey()\n \tw.Header().Add(\"Content-Disposition\", fmt.Sprintf(`filename=\"%s\"`, path.Base(key)))\n \tw.Header().Add(\"Content-Type\", mime.TypeByExtension(path.Ext(key)))\n+\tw.Header().Add(\"Content-Security-Policy\", env.GetString(\"ARGO_ARTIFACT_CONTENT_SECURITY_POLICY\", \"sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self'\"))\n+\tw.Header().Add(\"X-Frame-Options\", env.GetString(\"ARGO_ARTIFACT_X_FRAME_OPTIONS\", \"SAMEORIGIN\"))\n \n \t_, err = io.Copy(w, stream)\n \tif err != nil {"
        },
        {
          "filename": "test/e2e/argo_server_test.go",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -1065,6 +1065,11 @@ func (s *ArgoServerSuite) TestArtifactServer() {\n \t\tresp.Body().\n \t\t\tContains(\":) Hello Argo!\")\n \n+\t\tresp.Header(\"Content-Security-Policy\").\n+\t\t\tEqual(\"sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self'\") // MSB\n+\n+\t\tresp.Header(\"X-Frame-Options\").\n+\t\t\tEqual(\"SAMEORIGIN\")\n \t})\n \n \t// In this case, the artifact name is a file\n@@ -1076,6 +1081,11 @@ func (s *ArgoServerSuite) TestArtifactServer() {\n \t\tresp.Body().\n \t\t\tContains(\":) Hello Argo!\")\n \n+\t\tresp.Header(\"Content-Security-Policy\").\n+\t\t\tEqual(\"sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self'\") // MSB\n+\n+\t\tresp.Header(\"X-Frame-Options\").\n+\t\t\tEqual(\"SAMEORIGIN\")\n \t})\n \n \t// In this case, the artifact name is a directory\n@@ -1110,6 +1120,11 @@ func (s *ArgoServerSuite) TestArtifactServer() {\n \t\tresp.Body().\n \t\t\tContains(\":) Hello Argo!\")\n \n+\t\tresp.Header(\"Content-Security-Policy\").\n+\t\t\tEqual(\"sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self'\") // MSB\n+\n+\t\tresp.Header(\"X-Frame-Options\").\n+\t\t\tEqual(\"SAMEORIGIN\")\n \t})\n \n \t// In this case, the artifact name is a file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a7a72e7ca3c2bbf127b65fdcf1b5b85fbd2aad19",
            "date": "2025-01-10T10:28:07Z",
            "author_login": "Joibel"
          },
          {
            "sha": "09d5ee75ed1cf480e4a8c2663256a4b12db720da",
            "date": "2025-01-09T23:26:50Z",
            "author_login": "isubasinghe"
          },
          {
            "sha": "e088cfc66e6bf263d273b20d15a7e6722ff4e3ea",
            "date": "2025-01-08T06:02:20Z",
            "author_login": "Unperceivable"
          },
          {
            "sha": "2ece85c23646574434518a3ffb2236f2162f58b1",
            "date": "2025-01-07T04:50:31Z",
            "author_login": "tczhao"
          },
          {
            "sha": "82537a7737028a0a2ee579f7d8d1e54dabcf6481",
            "date": "2025-01-06T22:13:50Z",
            "author_login": "chengjoey"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-269",
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. In affected versions an attacker can create a workflow which produces a HTML artifact containing an HTML file that contains a script which uses XHR calls to interact with the Argo Server API. The attacker emails the deep-link to the artifact to their victim. The victim opens the link, the script starts running. As the script has access to the Argo Server API (as the victim), so may read information about the victim\u2019s workflows, or create and delete workflows. Note the attacker must be an insider: they must have access to the same cluster as the victim and must already be able to run their own workflows. The attacker must have an understanding of the victim\u2019s system. We have seen no evidence of this in the wild. We urge all users to upgrade to the fixed versions.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-05-06T00:15:07.990",
    "last_modified": "2024-11-21T06:58:37.153",
    "fix_date": "2022-05-03T17:52:48Z"
  },
  "references": [
    {
      "url": "https://github.com/argoproj/argo-workflows/commit/87470e1c2bf703a9110e97bb755614ce8757fdcc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-workflows/pull/8585",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-cmv8-6362-r5w9",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-workflows/commit/87470e1c2bf703a9110e97bb755614ce8757fdcc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-workflows/pull/8585",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-workflows/security/advisories/GHSA-cmv8-6362-r5w9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.087157",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "argo-workflows",
    "owner": "argoproj",
    "created_at": "2017-08-21T18:50:44Z",
    "updated_at": "2025-01-14T13:18:20Z",
    "pushed_at": "2025-01-10T10:28:07Z",
    "size": 153349,
    "stars": 15249,
    "forks": 3226,
    "open_issues": 1120,
    "watchers": 15249,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.0",
      "1.1",
      "main",
      "release-2.0",
      "release-2.1",
      "release-2.2",
      "release-2.3",
      "release-2.4",
      "release-2.5",
      "release-2.6",
      "release-2.7",
      "release-2.8",
      "release-2.9",
      "release-2.10",
      "release-2.11",
      "release-2.12",
      "release-2.12.1",
      "release-2.12.4"
    ],
    "languages": {
      "Go": 4336834,
      "TypeScript": 695528,
      "Nix": 110538,
      "Makefile": 40782,
      "SCSS": 37320,
      "Shell": 16717,
      "JavaScript": 4234,
      "Dockerfile": 3977,
      "Python": 3639,
      "Java": 2559,
      "HTML": 472
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:24:53.168255"
  }
}