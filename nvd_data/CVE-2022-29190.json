{
  "cve_id": "CVE-2022-29190",
  "github_data": {
    "repository": "pion/dtls",
    "fix_commit": "e0b2ce3592e8e7d73713ac67b363a2e192a4cecf",
    "related_commits": [
      "e0b2ce3592e8e7d73713ac67b363a2e192a4cecf",
      "e0b2ce3592e8e7d73713ac67b363a2e192a4cecf"
    ],
    "patch_url": "https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf.patch",
    "fix_commit_details": {
      "sha": "e0b2ce3592e8e7d73713ac67b363a2e192a4cecf",
      "commit_date": "2022-05-10T16:52:59Z",
      "author": {
        "login": "Sean-Der",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Don't attempt to append zero length fragments",
        "length": 209,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 16,
        "additions": 15,
        "deletions": 1
      },
      "files": [
        {
          "filename": "fragment_buffer.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -76,7 +76,7 @@ func (f *fragmentBuffer) pop() (content []byte, epoch uint16) {\n \t\tfor _, f := range frags {\n \t\t\tif f.handshakeHeader.FragmentOffset == targetOffset {\n \t\t\t\tfragmentEnd := (f.handshakeHeader.FragmentOffset + f.handshakeHeader.FragmentLength)\n-\t\t\t\tif fragmentEnd != f.handshakeHeader.Length {\n+\t\t\t\tif fragmentEnd != f.handshakeHeader.Length && f.handshakeHeader.FragmentLength != 0 {\n \t\t\t\t\tif !appendMessage(fragmentEnd) {\n \t\t\t\t\t\treturn false\n \t\t\t\t\t}"
        },
        {
          "filename": "fragment_buffer_test.go",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -73,6 +73,20 @@ func TestFragmentBuffer(t *testing.T) {\n \t\t\t},\n \t\t\tEpoch: 0,\n \t\t},\n+\t\t// Assert that a zero length fragment doesn't cause the fragmentBuffer to enter an infinite loop\n+\t\t{\n+\t\t\tName: \"Zero Length Fragment\",\n+\t\t\tIn: [][]byte{\n+\t\t\t\t{\n+\t\t\t\t\t0x16, 0xfe, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,\n+\t\t\t\t\t0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\tExpected: [][]byte{\n+\t\t\t\t{0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00},\n+\t\t\t},\n+\t\t\tEpoch: 0,\n+\t\t},\n \t} {\n \t\tfragmentBuffer := newFragmentBuffer()\n \t\tfor _, frag := range test.In {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1e4ae60e28516c475e999b389bcbe96a168c4470",
            "date": "2024-12-19T01:22:36Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "ceb84588accbb1b0ca0a51e807cc0062278c6d38",
            "date": "2024-12-12T03:18:39Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "4e34db5ca6566b816295c74f5e547fc260a69749",
            "date": "2024-12-01T04:41:51Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "02434c73b48f63397b58dc1f7615b62575f0e93e",
            "date": "2024-12-01T00:37:09Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "b3e02c4ba7e207c6dfce4e490f30fe09c8c926be",
            "date": "2024-11-04T20:14:27Z",
            "author_login": "renovate[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "Pion DTLS is a Go implementation of Datagram Transport Layer Security. Prior to version 2.1.4, an attacker can send packets that sends Pion DTLS into an infinite loop when processing. Version 2.1.4 contains a patch for this issue. There are currently no known workarounds available.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-05-21T00:15:11.450",
    "last_modified": "2024-11-21T06:58:40.523",
    "fix_date": "2022-05-10T16:52:59Z"
  },
  "references": [
    {
      "url": "https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pion/dtls/releases/tag/v2.1.4",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pion/dtls/releases/tag/v2.1.4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:07.145399",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dtls",
    "owner": "pion",
    "created_at": "2018-10-19T05:38:21Z",
    "updated_at": "2025-01-13T08:03:16Z",
    "pushed_at": "2024-12-19T05:02:20Z",
    "size": 1403,
    "stars": 612,
    "forks": 160,
    "open_issues": 9,
    "watchers": 612,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 708925,
      "Dockerfile": 270
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:50:58.128138"
  }
}