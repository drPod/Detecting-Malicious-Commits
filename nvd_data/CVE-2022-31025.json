{
  "cve_id": "CVE-2022-31025",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "0fa0094531efc82d9371f90a02aa804b176d59cf",
    "related_commits": [
      "0fa0094531efc82d9371f90a02aa804b176d59cf",
      "7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
      "0fa0094531efc82d9371f90a02aa804b176d59cf",
      "7c4e2d33fa4b922354c177ffc880a2f2701a91f9"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/0fa0094531efc82d9371f90a02aa804b176d59cf.patch",
    "fix_commit_details": {
      "sha": "0fa0094531efc82d9371f90a02aa804b176d59cf",
      "commit_date": "2022-06-03T03:43:52Z",
      "author": {
        "login": "tgxworld",
        "type": "User",
        "stats": {
          "total_commits": 4679,
          "average_weekly_commits": 6.7518037518037515,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 404
        }
      },
      "commit_message": {
        "title": "FIX: Approves user when redeeming an invite for invites only sites (#16984)",
        "length": 503,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 30,
        "deletions": 2
      },
      "files": [
        {
          "filename": "app/models/invite_redeemer.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -40,7 +40,9 @@ def self.create_user_from_invite(email:, invite:, username: nil, name: nil, pass\n       registration_ip_address: ip_address\n     }\n \n-    if SiteSetting.must_approve_users? && EmailValidator.can_auto_approve_user?(user.email)\n+    if (!SiteSetting.must_approve_users && SiteSetting.invite_only) ||\n+       (SiteSetting.must_approve_users? && EmailValidator.can_auto_approve_user?(user.email))\n+\n       ReviewableUser.set_approved_fields!(user, Discourse.system_user)\n     end\n \n@@ -79,7 +81,6 @@ def self.create_user_from_invite(email:, invite:, username: nil, name: nil, pass\n     authenticator.finish\n \n     if invite.emailed_status != Invite.emailed_status_types[:not_required] && email == invite.email && invite.email_token.present? && email_token == invite.email_token\n-      user.email_tokens.create!(email: user.email, scope: EmailToken.scopes[:signup])\n       user.activate\n     end\n "
        },
        {
          "filename": "spec/models/invite_redeemer_spec.rb",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n # frozen_string_literal: true\n \n describe InviteRedeemer do\n+  fab!(:admin) { Fabricate(:admin) }\n \n   describe '.create_user_from_invite' do\n     it \"should be created correctly\" do\n@@ -83,6 +84,32 @@\n       expect(user.approved).to eq(false)\n       expect(user.active).to eq(false)\n     end\n+\n+    it \"approves and actives user when redeeming an invite with email token and SiteSetting.invite_only is enabled\" do\n+      SiteSetting.invite_only = true\n+      Jobs.run_immediately!\n+\n+      invite = Fabricate(:invite,\n+        invited_by: admin,\n+        email: 'walter.white@email.com',\n+        emailed_status: Invite.emailed_status_types[:sent],\n+      )\n+\n+      user = InviteRedeemer.create_user_from_invite(\n+        invite: invite,\n+        email: invite.email,\n+        email_token: invite.email_token,\n+        username: 'walter',\n+        name: 'Walter White'\n+      )\n+\n+      expect(user.name).to eq(\"Walter White\")\n+      expect(user.username).to eq(\"walter\")\n+      expect(user.email).to eq(\"walter.white@email.com\")\n+      expect(user.approved).to eq(true)\n+      expect(user.active).to eq(true)\n+      expect(ReviewableUser.count).to eq(0)\n+    end\n   end\n \n   describe \"#redeem\" do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "496a739788d58a7f1c6bd59643d062ae37e982a0",
            "date": "2025-01-14T15:19:49Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "a89086f7996f95024827df61fb0d86a516b269f6",
            "date": "2025-01-14T15:19:19Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          },
          {
            "sha": "7330cfa76a6e6ab7bf90702fb1db5e1a37a2eca1",
            "date": "2025-01-14T13:28:16Z",
            "author_login": "awesomerobot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-285",
    "description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-06-07T15:15:09.877",
    "last_modified": "2024-11-21T07:03:44.273",
    "fix_date": "2022-06-03T03:43:52Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/0fa0094531efc82d9371f90a02aa804b176d59cf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/16974",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/16984",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-x7jh-mx5q-6f9q",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/0fa0094531efc82d9371f90a02aa804b176d59cf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/7c4e2d33fa4b922354c177ffc880a2f2701a91f9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/16974",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/16984",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-x7jh-mx5q-6f9q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.413619",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}