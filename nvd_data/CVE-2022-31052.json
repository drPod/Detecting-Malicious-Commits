{
  "cve_id": "CVE-2022-31052",
  "github_data": {
    "repository": "matrix-org/synapse",
    "fix_commit": "fa1308061802ac7b7d20e954ba7372c5ac292333",
    "related_commits": [
      "fa1308061802ac7b7d20e954ba7372c5ac292333",
      "fa1308061802ac7b7d20e954ba7372c5ac292333"
    ],
    "patch_url": "https://github.com/matrix-org/synapse/commit/fa1308061802ac7b7d20e954ba7372c5ac292333.patch",
    "fix_commit_details": {
      "sha": "fa1308061802ac7b7d20e954ba7372c5ac292333",
      "commit_date": "2022-06-28T13:29:08Z",
      "author": {
        "login": "reivilibre",
        "type": "User",
        "stats": {
          "total_commits": 574,
          "average_weekly_commits": 1.0532110091743119,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 113
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-22p3-qrh9-cx32",
        "length": 436,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 80,
        "additions": 56,
        "deletions": 24
      },
      "files": [
        {
          "filename": "synapse/rest/media/v1/preview_html.py",
          "status": "modified",
          "additions": 39,
          "deletions": 24,
          "patch": "@@ -12,10 +12,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n import codecs\n-import itertools\n import logging\n import re\n-from typing import TYPE_CHECKING, Dict, Generator, Iterable, Optional, Set, Union\n+from typing import TYPE_CHECKING, Dict, Generator, Iterable, List, Optional, Set, Union\n \n if TYPE_CHECKING:\n     from lxml import etree\n@@ -276,7 +275,7 @@ def parse_html_description(tree: \"etree.Element\") -> Optional[str]:\n \n     from lxml import etree\n \n-    TAGS_TO_REMOVE = (\n+    TAGS_TO_REMOVE = {\n         \"header\",\n         \"nav\",\n         \"aside\",\n@@ -291,31 +290,42 @@ def parse_html_description(tree: \"etree.Element\") -> Optional[str]:\n         \"img\",\n         \"picture\",\n         etree.Comment,\n-    )\n+    }\n \n     # Split all the text nodes into paragraphs (by splitting on new\n     # lines)\n     text_nodes = (\n         re.sub(r\"\\s+\", \"\\n\", el).strip()\n-        for el in _iterate_over_text(tree.find(\"body\"), *TAGS_TO_REMOVE)\n+        for el in _iterate_over_text(tree.find(\"body\"), TAGS_TO_REMOVE)\n     )\n     return summarize_paragraphs(text_nodes)\n \n \n def _iterate_over_text(\n-    tree: \"etree.Element\", *tags_to_ignore: Union[str, \"etree.Comment\"]\n+    tree: Optional[\"etree.Element\"],\n+    tags_to_ignore: Set[Union[str, \"etree.Comment\"]],\n+    stack_limit: int = 1024,\n ) -> Generator[str, None, None]:\n     \"\"\"Iterate over the tree returning text nodes in a depth first fashion,\n     skipping text nodes inside certain tags.\n+\n+    Args:\n+        tree: The parent element to iterate. Can be None if there isn't one.\n+        tags_to_ignore: Set of tags to ignore\n+        stack_limit: Maximum stack size limit for depth-first traversal.\n+            Nodes will be dropped if this limit is hit, which may truncate the\n+            textual result.\n+            Intended to limit the maximum working memory when generating a preview.\n     \"\"\"\n-    # This is basically a stack that we extend using itertools.chain.\n-    # This will either consist of an element to iterate over *or* a string\n+\n+    if tree is None:\n+        return\n+\n+    # This is a stack whose items are elements to iterate over *or* strings\n     # to be returned.\n-    elements = iter([tree])\n-    while True:\n-        el = next(elements, None)\n-        if el is None:\n-            return\n+    elements: List[Union[str, \"etree.Element\"]] = [tree]\n+    while elements:\n+        el = elements.pop()\n \n         if isinstance(el, str):\n             yield el\n@@ -329,17 +339,22 @@ def _iterate_over_text(\n             if el.text:\n                 yield el.text\n \n-            # We add to the stack all the elements children, interspersed with\n-            # each child's tail text (if it exists). The tail text of a node\n-            # is text that comes *after* the node, so we always include it even\n-            # if we ignore the child node.\n-            elements = itertools.chain(\n-                itertools.chain.from_iterable(  # Basically a flatmap\n-                    [child, child.tail] if child.tail else [child]\n-                    for child in el.iterchildren()\n-                ),\n-                elements,\n-            )\n+            # We add to the stack all the element's children, interspersed with\n+            # each child's tail text (if it exists).\n+            #\n+            # We iterate in reverse order so that earlier pieces of text appear\n+            # closer to the top of the stack.\n+            for child in el.iterchildren(reversed=True):\n+                if len(elements) > stack_limit:\n+                    # We've hit our limit for working memory\n+                    break\n+\n+                if child.tail:\n+                    # The tail text of a node is text that comes *after* the node,\n+                    # so we always include it even if we ignore the child node.\n+                    elements.append(child.tail)\n+\n+                elements.append(child)\n \n \n def summarize_paragraphs("
        },
        {
          "filename": "tests/rest/media/v1/test_html_preview.py",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -370,6 +370,23 @@ def test_windows_1252(self) -> None:\n         og = parse_html_to_open_graph(tree)\n         self.assertEqual(og, {\"og:title\": \"\u00f3\", \"og:description\": \"Some text.\"})\n \n+    def test_nested_nodes(self) -> None:\n+        \"\"\"A body with some nested nodes. Tests that we iterate over children\n+        in the right order (and don't reverse the order of the text).\"\"\"\n+        html = b\"\"\"\n+        <a href=\"somewhere\">Welcome <b>the bold <u>and underlined text <svg>\n+        with a cheeky SVG</svg></u> and <strong>some</strong> tail text</b></a>\n+        \"\"\"\n+        tree = decode_body(html, \"http://example.com/test.html\")\n+        og = parse_html_to_open_graph(tree)\n+        self.assertEqual(\n+            og,\n+            {\n+                \"og:title\": None,\n+                \"og:description\": \"Welcome\\n\\nthe bold\\n\\nand underlined text\\n\\nand\\n\\nsome\\n\\ntail text\",\n+            },\n+        )\n+\n \n class MediaEncodingTestCase(unittest.TestCase):\n     def test_meta_charset(self) -> None:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be65a8ec0195955c15fdb179c9158b187638e39a",
            "date": "2023-12-13T14:50:56Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "66fc265578f4501307edcac2514892ecdf791fc9",
            "date": "2023-12-13T14:47:34Z",
            "author_login": "wrjlewis"
          },
          {
            "sha": "025951bc3b6ddc0a6487ac045cc00a35a9d7eaaa",
            "date": "2023-12-13T14:46:11Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "70c020b532821f898aaa07c35c5d5ab59055ae1c",
            "date": "2023-12-12T20:32:48Z",
            "author_login": "erikjohnston"
          },
          {
            "sha": "e1f8440c8959719a417fbf1bdda11406cfdf523d",
            "date": "2023-11-21T19:26:47Z",
            "author_login": "clokep"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-674",
    "description": "Synapse is an open source home server implementation for the Matrix chat network. In versions prior to 1.61.1 URL previews of some web pages can exhaust the available stack space for the Synapse process due to unbounded recursion. This is sometimes recoverable and leads to an error for the request causing the problem, but in other cases the Synapse process may crash altogether. It is possible to exploit this maliciously, either by malicious users on the homeserver, or by remote users sending URLs that a local user's client may automatically request a URL preview for. Remote users are not able to exploit this directly, because the URL preview endpoint is authenticated. Deployments with `url_preview_enabled: false` set in configuration are not affected. Deployments with `url_preview_enabled: true` set in configuration **are** affected. Deployments with no configuration value set for `url_preview_enabled` are not affected, because the default is `false`. Administrators of homeservers with URL previews enabled are advised to upgrade to v1.61.1 or higher. Users unable to upgrade should set `url_preview_enabled` to false.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-28T17:15:08.217",
    "last_modified": "2024-11-21T07:03:47.603",
    "fix_date": "2022-06-28T13:29:08Z"
  },
  "references": [
    {
      "url": "https://github.com/matrix-org/synapse/commit/fa1308061802ac7b7d20e954ba7372c5ac292333",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/security/advisories/GHSA-22p3-qrh9-cx32",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7EARKKJZ2W7WUITFDT4EG4NVATFYJQHF/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QGSDQ4YAITCUACAB7SXQZDJIU3IQ4CJD/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://spec.matrix.org/v1.2/client-server-api/#get_matrixmediav3preview_url",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/commit/fa1308061802ac7b7d20e954ba7372c5ac292333",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/synapse/security/advisories/GHSA-22p3-qrh9-cx32",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7EARKKJZ2W7WUITFDT4EG4NVATFYJQHF/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QGSDQ4YAITCUACAB7SXQZDJIU3IQ4CJD/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://spec.matrix.org/v1.2/client-server-api/#get_matrixmediav3preview_url",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.493969",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "synapse",
    "owner": "matrix-org",
    "created_at": "2014-08-11T15:51:42Z",
    "updated_at": "2025-01-14T04:04:49Z",
    "pushed_at": "2024-04-26T15:47:23Z",
    "size": 429495,
    "stars": 11851,
    "forks": 2122,
    "open_issues": 1529,
    "watchers": 11851,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Python": 11907179,
      "Rust": 95720,
      "HTML": 64571,
      "Shell": 59187,
      "Perl": 28191,
      "Nix": 12267,
      "Dockerfile": 12096,
      "JavaScript": 11988,
      "Jinja": 7942,
      "CSS": 6211,
      "Makefile": 634,
      "Gherkin": 308,
      "Lua": 241
    },
    "commit_activity": {
      "total_commits_last_year": 1,
      "avg_commits_per_week": 0.019230769230769232,
      "days_active_last_year": 1
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:52:33.725944"
  }
}