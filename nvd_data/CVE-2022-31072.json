{
  "cve_id": "CVE-2022-31072",
  "github_data": {
    "repository": "octokit/octokit.rb",
    "fix_commit": "1c8edecc9cf23d1ceb959d91a416a69f55ce7d55",
    "related_commits": [
      "1c8edecc9cf23d1ceb959d91a416a69f55ce7d55",
      "1c8edecc9cf23d1ceb959d91a416a69f55ce7d55"
    ],
    "patch_url": "https://github.com/octokit/octokit.rb/commit/1c8edecc9cf23d1ceb959d91a416a69f55ce7d55.patch",
    "fix_commit_details": {
      "sha": "1c8edecc9cf23d1ceb959d91a416a69f55ce7d55",
      "commit_date": "2022-06-15T20:40:51Z",
      "author": {
        "login": "nickfloyd",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #1446 from octokit/updates-release-steps-ic",
        "length": 120,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 133,
        "additions": 114,
        "deletions": 19
      },
      "files": [
        {
          "filename": "RELEASE.md",
          "status": "modified",
          "additions": 12,
          "deletions": 9,
          "patch": "@@ -2,16 +2,19 @@\n \n 1. Create a list of all the changes since the prior release\n     1. Compare the latest release to master using https://github.com/octokit/octokit.rb/compare/`${latest}`...master\n-    1. Open the linked pull requests from all the `Merge pull request #...` commits\n-    1. For all non-documentation PRs, copy title (including pull request number) into markdown list items\n-    1. (optional, but nice) Sort into logical buckets, like \"support for additional endpoints\", \"enhancements\", \"bugfixes\"\n-    1. Reorganize to put the pull request number at the start of the line\n-1. Ensure there are no breaking changes _(if there are breaking changes you'll need to create a release branch without those changes or bump the major version)_\n-1. Update the version\n+    2. Open the linked pull requests from all the `Merge pull request #...` commits\n+    3. For all non-documentation PRs, copy title (including pull request number) into markdown list items\n+    4. (optional, but nice) Sort into logical buckets, like \"support for additional endpoints\", \"enhancements\", \"bugfixes\"\n+    5. Reorganize to put the pull request number at the start of the line\n+2. Ensure there are no breaking changes _(if there are breaking changes you'll need to create a release branch without those changes or bump the major version)_\n+3. Update the version\n     1. Update the constant in `lib/octokit/version.rb`\n-    1. Commit and push directly to master\n-1. Run the `script/release` script to cut a release\n-1. Draft a new release at https://github.com/octokit/octokit.rb/releases/new containing the curated changelog\n+    2. Commit the version change and push directly to master\n+4. (Optional) Run `script/release` with no parameters to execute a dry run of a release\n+5. Run the `script/release -r` script to cut a release (this will run `script/validate` to perform the permission check)\n+6. Draft a new release at https://github.com/octokit/octokit.rb/releases/new containing the curated changelog\n+\n+----\n \n ## Prerequisites\n "
        },
        {
          "filename": "script/package",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -4,4 +4,15 @@\n \n mkdir -p pkg\n gem build *.gemspec\n-mv *.gem pkg\n+\n+./script/validate || rm *.gem\n+\n+echo \"*** Packing and moving the octokit gem ***\"\n+if [ -f *.gem ]; then\n+  mv *.gem pkg\n+  echo -e '\u2611 success'\n+else\n+  echo -e '\u2612 failure'\n+  exit 1\n+fi\n+"
        },
        {
          "filename": "script/release",
          "status": "modified",
          "additions": 46,
          "deletions": 9,
          "patch": "@@ -5,12 +5,49 @@\n \n set -e\n \n-version=\"$(script/package | grep Version: | awk '{print $2}')\"\n-[ -n \"$version\" ] || exit 1\n-\n-echo $version\n-git commit --allow-empty -a -m \"Release $version\"\n-git tag \"v$version\"\n-git push origin\n-git push origin \"v$version\"\n-gem push pkg/*-${version}.gem\n+usage() { \n+  echo \"Usage: $0 [-r] Tags and releases/publishes octokit\" 1>&2; exit 1; \n+}\n+\n+while [ $# -gt 0 ]\n+do\n+    case $1 in\n+        '-r')\n+            r=true\n+            ;;\n+        '-h')\n+            usage\n+            ;;\n+        *)\n+            echo \"No valid parameter passed in, performing a dry run...\";\n+            ;;\n+    esac\n+    shift\n+done\n+\n+if [ -z \"${r}\" ]; then\n+  ./script/package\n+    echo \"*** Dry run: octokit was not tagged or released ***\"\n+    echo -e '\u2611 success'\n+else\n+\n+  # We execite the script separately to get logging and proper exit conditions\n+  ./script/package\n+\n+  # We need to pull the version from the actual file that is about to be published\n+  file=$(ls pkg/*.gem| head -1)\n+  version=$(echo $file | sed -e 's/.*octokit-\\(.*\\).gem.*/\\1/') \n+  \n+  [ -n \"$version\" ] || exit 1\n+\n+  echo \"*** Tagging and publishing $version of octokit ***\"\n+\n+  git commit --allow-empty -a -m \"Release $version\"\n+  git tag \"v$version\"\n+  git push origin\n+  git push origin \"v$version\"\n+  gem push pkg/*-${version}.gem\n+  echo -e '\u2611 success'\n+fi\n+\n+"
        },
        {
          "filename": "script/validate",
          "status": "added",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+# Usage: script/gem\n+# Validates the packed gem to determine if file permissions are correct.\n+\n+<<'###SCRIPT_COMMENT'\n+Purpose: \n+(Given octokit.rb is currently shipped \"manually\")\n+\n+Because different environments behave differently, it is recommended that the integrity and file permissions of the files packed in the gem are verified.\n+This is to help prevent things like releasing world writeable files in the gem. The simple check below looks at each file contained in the packed gem and\n+verifies that the files are only owner writeable.\n+\n+Requirements:\n+This script expects that script/package, script/release or 'gem build *.gemspec' have been run\n+\n+###SCRIPT_COMMENT\n+\n+\n+FILE=$(ls *.gem| head -1)\n+\n+echo \"*** Validating file permissions in the octokit gem ***\"\n+\n+if [ ! -f \"$FILE\" ]; then\n+    echo \"$FILE does not exist. Please run script/package, script/release or 'gem build *.gemspec' to generate the gem to be validated\"\n+    echo -e '\u2612 failure'\n+    exit 1\n+fi\n+\n+tar -xf \"${FILE}\"\n+\n+# naive check to quickly see if any files in the gem are set to the wrong permissions\n+for f in $(tar --numeric-owner -tvf data.tar.gz )\n+do\n+  if [ $f == \"-rw-rw-rw-\" ]; then\n+     echo \"World writeable files (-rw-rw-rw- | 666) detected in the gem. Please repack and make sure that all files in the gem are owner read write ( -rw-r--r-- | 644 )\"\n+     echo -e '\u2612 failure'\n+     rm -f checksums.yaml.gz data.tar.gz metadata.gz\n+     exit 1\n+  fi\n+done\n+\n+# Check clean up\n+echo -e '\u2611 success'\n+rm -f checksums.yaml.gz data.tar.gz metadata.gz\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cc7d14214aa90b5f85adfc6094bf4a4968b9c01d",
            "date": "2024-12-19T21:13:27Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "687944a823cf5b52cf10050acecf78785fadb9ff",
            "date": "2024-11-05T19:52:34Z",
            "author_login": "nickfloyd"
          },
          {
            "sha": "b4b419849bfc3fce59f267524912da3caf8c0c9f",
            "date": "2024-11-04T19:12:03Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4237fd4369a5de9c33ae8396a1ceab16eb3c561f",
            "date": "2024-10-25T19:05:31Z",
            "author_login": "areitz"
          },
          {
            "sha": "5fcf9bffb0f6e21e6bdffb0bc3d07a48cd2e5c2b",
            "date": "2024-10-22T17:25:55Z",
            "author_login": "pbstriker38"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-276",
    "description": "Octokit is a Ruby toolkit for the GitHub API. Versions 4.23.0 and 4.24.0 of the octokit gem were published containing world-writeable files. Specifically, the gem was packed with files having their permissions set to `-rw-rw-rw-` (i.e. 0666) instead of `rw-r--r--` (i.e. 0644). This means everyone who is not the owner (Group and Public) with access to the instance where this release had been installed could modify the world-writable files from this gem. This issue is patched in Octokit 4.25.0. Two workarounds are available. Users can use the previous version of the gem, v4.22.0. Alternatively, users can modify the file permissions manually until they are able to upgrade to the latest version.",
    "attack_vector": "LOCAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-06-15T23:15:09.910",
    "last_modified": "2024-11-21T07:03:50.180",
    "fix_date": "2022-06-15T20:40:51Z"
  },
  "references": [
    {
      "url": "https://github.com/octokit/octokit.rb/commit/1c8edecc9cf23d1ceb959d91a416a69f55ce7d55",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octokit/octokit.rb/security/advisories/GHSA-g28x-pgr3-qqx6",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octokit/octokit.rb/commit/1c8edecc9cf23d1ceb959d91a416a69f55ce7d55",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/octokit/octokit.rb/security/advisories/GHSA-g28x-pgr3-qqx6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.449696",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "octokit.rb",
    "owner": "octokit",
    "created_at": "2009-12-10T21:41:49Z",
    "updated_at": "2025-01-07T15:52:25Z",
    "pushed_at": "2025-01-13T19:43:30Z",
    "size": 17413,
    "stars": 3863,
    "forks": 1145,
    "open_issues": 16,
    "watchers": 3863,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "5-alpha",
      "main"
    ],
    "languages": {
      "Ruby": 847791,
      "Shell": 3680,
      "CSS": 38
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:59:59.405941"
  }
}