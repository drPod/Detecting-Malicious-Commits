{
  "cve_id": "CVE-2022-31087",
  "github_data": {
    "repository": "LDAPAccountManager/lam",
    "fix_commit": "f1d5d04952f39a1b4ea203d3964fa88e1429dfd4",
    "related_commits": [
      "f1d5d04952f39a1b4ea203d3964fa88e1429dfd4",
      "f1d5d04952f39a1b4ea203d3964fa88e1429dfd4"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f1d5d04952f39a1b4ea203d3964fa88e1429dfd4",
      "commit_date": "2022-06-27T18:20:38Z",
      "author": {
        "login": "gruberroland",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-r387-grjx-qgvw",
        "length": 50,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 483,
        "additions": 312,
        "deletions": 171
      },
      "files": [
        {
          "filename": "lam-packaging/RPM/lam.apache.conf",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -10,23 +10,54 @@ Alias /lam /usr/share/ldap-account-manager\n \n <Directory /var/lib/ldap-account-manager/tmp>\n   Options -Indexes\n+  <Files ~ \".*\\.php.*\">\n+    Require all denied\n+  </Files>\n+  <Files ~ \".*\\.inc\">\n+    Require all denied\n+  </Files>\n+</Directory>\n+\n+<Directory /usr/share/ldap-account-manager/tmp>\n+  Options -Indexes\n+  <Files ~ \".*\\.php.*\">\n+    Require all denied\n+  </Files>\n+  <Files ~ \".*\\.inc\">\n+    Require all denied\n+  </Files>\n </Directory>\n \n <Directory /var/lib/ldap-account-manager/tmp/internal>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/tmp/internal>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /var/lib/ldap-account-manager/sess>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/sess>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /var/lib/ldap-account-manager/config>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/config>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /usr/share/ldap-account-manager/lib>\n   Options -Indexes\n   Require all denied"
        },
        {
          "filename": "lam-packaging/RPM/lam.nginx.conf",
          "status": "modified",
          "additions": 10,
          "deletions": 5,
          "patch": "@@ -3,6 +3,16 @@ location /lam {\n \talias /usr/share/ldap-account-manager;\n \tautoindex off;\n \n+\tlocation ~ /lam/tmp/.*\\.(php|inc)$ {\n+\t\tdeny all;\n+\t\treturn 403;\n+\t}\n+\n+\tlocation ~ /lam/(tmp/internal|sess|config|lib|help|locale) {\n+\t\tdeny all;\n+\t\treturn 403;\n+\t}\n+\n \tlocation ~ \\.php$ {\n \t\tfastcgi_split_path_info ^(.+\\.php)(/.+)$;\n \t\tfastcgi_pass unix:/var/run/php7-fpm.sock;\n@@ -11,9 +21,4 @@ location /lam {\n \t\tfastcgi_param SCRIPT_FILENAME $request_filename;\n \t}\n \n-\tlocation ~ /lam/(tmp/internal|sess|config|lib|help|locale) {\n-\t\tdeny all;\n-\t\treturn 403;\n-\t}\n-\n }"
        },
        {
          "filename": "lam-packaging/debian/lam.apache.conf",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -10,23 +10,54 @@ Alias /lam /usr/share/ldap-account-manager\n \n <Directory /var/lib/ldap-account-manager/tmp>\n   Options -Indexes\n+  <Files ~ \".*\\.php.*\">\n+    Require all denied\n+  </Files>\n+  <Files ~ \".*\\.inc\">\n+    Require all denied\n+  </Files>\n+</Directory>\n+\n+<Directory /usr/share/ldap-account-manager/tmp>\n+  Options -Indexes\n+  <Files ~ \".*\\.php.*\">\n+    Require all denied\n+  </Files>\n+  <Files ~ \".*\\.inc\">\n+    Require all denied\n+  </Files>\n </Directory>\n \n <Directory /var/lib/ldap-account-manager/tmp/internal>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/tmp/internal>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /var/lib/ldap-account-manager/sess>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/sess>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /var/lib/ldap-account-manager/config>\n   Options -Indexes\n   Require all denied\n </Directory>\n \n+<Directory /usr/share/ldap-account-manager/config>\n+  Options -Indexes\n+  Require all denied\n+</Directory>\n+\n <Directory /usr/share/ldap-account-manager/lib>\n   Options -Indexes\n   Require all denied"
        },
        {
          "filename": "lam-packaging/debian/lam.nginx.conf",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -3,15 +3,20 @@ location /lam {\n \talias /usr/share/ldap-account-manager;\n \tautoindex off;\n \n-\tlocation ~ \\.php$ {\n-\t\tinclude snippets/fastcgi-php.conf;\n-\t\tfastcgi_pass unix:/var/run/php/php7.0-fpm.sock;\n-\t\tfastcgi_param SCRIPT_FILENAME $request_filename;\n+\tlocation ~ /lam/tmp/.*\\.(php|inc)$ {\n+\t\tdeny all;\n+\t\treturn 403;\n \t}\n \n \tlocation ~ /lam/(tmp/internal|sess|config|lib|help|locale) {\n \t\tdeny all;\n \t\treturn 403;\n \t}\n \n+\tlocation ~ \\.php$ {\n+\t\tinclude snippets/fastcgi-php.conf;\n+\t\tfastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n+\t\tfastcgi_param SCRIPT_FILENAME $request_filename;\n+\t}\n+\n }"
        },
        {
          "filename": "lam/HISTORY",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -1,4 +1,4 @@\n-June 2022 8.0\n+27.06.2022 8.0\n   - PHP 8.1 compatibility\n   - Extended user account status and locking options\n   - Unix: added Gecos to profile editor\n@@ -13,11 +13,16 @@ June 2022 8.0\n    -> Hidden account is displayed (257)\n    -> Change of RDN failed for OpenLDAP entries\n    -> Tree view issues with browser auto-completion (176)\n+   -> Unauthenticated Arbitrary Object Instantiation / Unauthenticated Remote Code Execution (GHSA-r387-grjx-qgvw, CVE-2022-31084)\n+   -> Incorrect Default Permissions (GHSA-q8g5-45m4-q95p, CVE-2022-31087)\n+   -> Incorrect Regular Expressions (GHSA-q9pc-x84w-982x, CVE-2022-31086)\n+   -> Unauthenticated LDAP Injection (GHSA-wxf8-9x99-6gp4, CVE-2022-31088)\n+   -> Reflected XSS (Internet Explorer only) (GHSA-6m3q-5c84-6h6j, CVE-2022-31085)\n \n \n 15.04.2022 7.9.1\n   - Fixed bugs:\n-   -> Security issues in PDF editor and profile editor\n+   -> Security issues in PDF editor and profile editor (GHSA-f2fr-cccr-583v, CVE-2022-24851)\n \n \n 09.03.2022 7.9"
        },
        {
          "filename": "lam/docs/manual-sources/chapter-configuration.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 8,
          "patch": "@@ -119,14 +119,6 @@\n       LAM via an untrusted IP only get blank pages. There is a separate field\n       for LAM Pro self service.</para>\n \n-      <para id=\"sessionEncryption\">Session encryption will encrypt sensitive\n-      data like passwords in your session files. This is only available when\n-      PHP <ulink\n-      url=\"http://php.net/manual/en/book.openssl.php\">OpenSSL</ulink> is\n-      active. This adds extra security but also costs performance. If you\n-      manage a large directory you might want to disable this and take other\n-      actions to secure your LAM server.</para>\n-\n       <screenshot>\n         <mediaobject>\n           <imageobject>"
        },
        {
          "filename": "lam/help/help.inc",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -164,8 +164,6 @@ $helpArray = array (\n \t\t\t\t\t\"Text\" => _(\"Here you can specify minimum requirements for passwords. The character classes are: lowercase, uppercase, numeric and symbols.\")),\n \t\t\t\t\"244\" => array (\"Headline\" => _('PHP error reporting'),\n \t\t\t\t\t\"Text\" => _('Defines if the PHP error reporting setting from php.ini is used or the setting preferred by LAM (\"E_ALL & ~E_NOTICE\"). If you do not develop LAM modules please use the default. This will prevent displaying messages that are useful only for developers.')),\n-\t\t\t\t\"245\" => array (\"Headline\" => _('Encrypt session'),\n-\t\t\t\t\t\"Text\" => _('Encrypts sensitive data like passwords in your session. This requires the PHP OpenSSL extension.')),\n \t\t\t\t\"246\" => array (\"Headline\" => _('Number of rules that must match'),\n \t\t\t\t\t\"Text\" => _('Specifies the number of above password rules that must be fulfilled.')),\n \t\t\t\t\"247\" => array (\"Headline\" => _('Password must not contain user name'),"
        },
        {
          "filename": "lam/lib/account.inc",
          "status": "modified",
          "additions": 10,
          "deletions": 20,
          "patch": "@@ -176,16 +176,9 @@ function pwd_hash($password, $enabled = true, $hashType = 'SSHA') {\n \t\t\tbreak;\n \t\tcase 'PBKDF2-SHA512':\n \t\t\t$iterations = 200000;\n-\t\t\tif (function_exists('openssl_pbkdf2')) {\n-\t\t\t\t$salt = openssl_random_pseudo_bytes(16);\n-\t\t\t\t$hashBinary = openssl_pbkdf2($password, $salt, 64, $iterations, 'sha512');\n-\t\t\t\t$hash = \"{PBKDF2-SHA512}${iterations}\" . '$' . base64_encode($salt) . '$' . base64_encode($hashBinary);\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\t$salt = generateSalt(16);\n-\t\t\t\t$hashBinary = hex2bin(hash_pbkdf2('sha512', $password, $salt, $iterations));\n-\t\t\t\t$hash = \"{PBKDF2-SHA512}${iterations}\" . '$' . base64_encode($salt) . '$' . base64_encode($hashBinary);\n-\t\t\t}\n+\t\t\t$salt = openssl_random_pseudo_bytes(16);\n+\t\t\t$hashBinary = openssl_pbkdf2($password, $salt, 64, $iterations, 'sha512');\n+\t\t\t$hash = \"{PBKDF2-SHA512}${iterations}\" . '$' . base64_encode($salt) . '$' . base64_encode($hashBinary);\n \t\t\tbreak;\n \t\tcase 'MD5':\n \t\t\t$hash = \"{MD5}\" . base64_encode(hex2bin(md5($password)));\n@@ -251,11 +244,7 @@ function getHashType(?string $hash): string {\n  * @return array hash types\n  */\n function getSupportedHashTypes() {\n-\t$hashes = array('CRYPT', 'CRYPT-SHA512', 'SHA', 'SSHA', 'MD5', 'SMD5', 'PLAIN', 'SASL', 'K5KEY', 'LDAP_EXOP', 'ARGON2ID');\n-\tif (function_exists('openssl_pbkdf2') || function_exists('hash_pbkdf2')) {\n-\t\t$hashes[] = 'PBKDF2-SHA512';\n-\t}\n-\treturn $hashes;\n+\treturn array('CRYPT', 'CRYPT-SHA512', 'SHA', 'SSHA', 'MD5', 'SMD5', 'PLAIN', 'SASL', 'K5KEY', 'LDAP_EXOP', 'ARGON2ID', 'PBKDF2-SHA512');\n }\n \n /**\n@@ -1576,8 +1565,12 @@ class moduleCache {\n \t *\n \t * @param String $name module name\n \t * @param String $scope module scope (e.g. user)\n+\t * @return null|object module object\n \t */\n-\tpublic static function getModule($name, $scope) {\n+\tpublic static function getModule($name, $scope): ?object {\n+\t\tif (!ScopeAndModuleValidation::isValidModuleName($name) || !ScopeAndModuleValidation::isValidScopeName($scope)) {\n+\t\t\treturn null;\n+\t\t}\n \t\tif (isset(self::$cache[$name . ':' . $scope])) {\n \t\t\treturn self::$cache[$name . ':' . $scope];\n \t\t}\n@@ -1598,10 +1591,7 @@ class moduleCache {\n  * @return int random number\n  */\n function getRandomNumber() {\n-\tif (function_exists('openssl_random_pseudo_bytes')) {\n-\t\treturn abs(hexdec(bin2hex(openssl_random_pseudo_bytes(5))));\n-\t}\n-\treturn abs(mt_rand());\n+\treturn abs(hexdec(bin2hex(openssl_random_pseudo_bytes(5))));\n }\n \n /**"
        },
        {
          "filename": "lam/lib/config.inc",
          "status": "modified",
          "additions": 1,
          "deletions": 8,
          "patch": "@@ -2963,9 +2963,6 @@ class LAMCfgMain {\n \t/** list of hosts which may access LAM Pro self service */\n \tpublic $allowedHostsSelfService;\n \n-\t/** session encryption */\n-\tpublic $encryptSession;\n-\n \t/** minimum length for passwords */\n \tpublic $passwordMinLength = 0;\n \n@@ -3062,7 +3059,7 @@ class LAMCfgMain {\n \t\t\"passwordMinClasses\", \"passwordMinSymbol\", 'checkedRulesCount',\n \t\t'passwordMustNotContainUser', 'passwordMustNotContain3Chars',\n \t\t'externalPwdCheckUrl',\n-\t\t'errorReporting', 'encryptSession', 'allowedHostsSelfService',\n+\t\t'errorReporting', 'allowedHostsSelfService',\n \t\t'license', 'licenseEmailFrom', 'licenseEmailTo', 'licenseWarningType', 'licenseEmailDateSent',\n \t\t'mailServer', 'mailUser', 'mailPassword', 'mailEncryption', 'configDatabaseType',\n \t\t'configDatabaseServer', 'configDatabasePort', 'configDatabaseName', 'configDatabaseUser',\n@@ -3094,7 +3091,6 @@ class LAMCfgMain {\n \t\t$this->logDestination = \"SYSLOG\";\n \t\t$this->allowedHosts = \"\";\n \t\t$this->allowedHostsSelfService = '';\n-\t\t$this->encryptSession = 'true';\n \t\ttry {\n \t\t\t$this->reload();\n \t\t} catch (LAMException $e) {\n@@ -3370,9 +3366,6 @@ class LAMCfgMain {\n \t\t\tif (!in_array(\"allowedHostsSelfService\", $saved)) {\n \t\t\t\tarray_push($file_array, \"allowedHostsSelfService: \" . $this->allowedHostsSelfService . \"\\n\");\n \t\t\t}\n-\t\t\tif (!in_array(\"encryptSession\", $saved)) {\n-\t\t\t\tarray_push($file_array, \"encryptSession: \" . $this->encryptSession . \"\\n\");\n-\t\t\t}\n \t\t\tif (!in_array(\"passwordMinLength\", $saved)) {\n \t\t\t\tarray_push($file_array, \"passwordMinLength: \" . $this->passwordMinLength . \"\\n\");\n \t\t\t}"
        },
        {
          "filename": "lam/lib/modules.inc",
          "status": "modified",
          "additions": 73,
          "deletions": 4,
          "patch": "@@ -306,6 +306,9 @@ function getAvailableModules($scope, $mustSupportAdminInterface = false) {\n \t\tif ((substr($entry, strlen($entry) - 4, 4) == '.inc') && is_file($dirname . '/'.$entry)) {\n \t\t\t$entry = substr($entry, 0, strpos($entry, '.'));\n \t\t\t$temp = moduleCache::getModule($entry, $scope);\n+\t\t\tif ($temp === null) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n \t\t\tif ($mustSupportAdminInterface && !$temp->supportsAdminInterface()) {\n \t\t\t\tcontinue;\n \t\t\t}\n@@ -399,7 +402,7 @@ function checkConfigOptions($scopes, &$options) {\n * @param string $scope account type\n * @return array help entry\n */\n-function getHelp($module,$helpID,$scope='') {\n+function getHelp($module, $helpID, $scope) {\n \tglobal $helpArray;\n \tif (!isset($module) || ($module == '') || ($module == 'main')) {\n \t\t$helpPath = \"../help/help.inc\";\n@@ -411,9 +414,6 @@ function getHelp($module,$helpID,$scope='') {\n \t\t}\n \t\treturn $helpArray[$helpID];\n \t}\n-\tif (empty($scope)) {\n-\t\t$scope = 'none';\n-\t}\n \t$moduleObject = moduleCache::getModule($module, $scope);\n \treturn $moduleObject->get_help($helpID);\n }\n@@ -2854,3 +2854,72 @@ class AccountStatusDetails {\n \n }\n \n+/**\n+ * Validation of scope and module names.\n+ */\n+class ScopeAndModuleValidation {\n+\n+\tprivate static $cachedModuleNames = null;\n+\n+\tprivate static $cachedScopeNames = null;\n+\n+\tconst REGEX_SCOPE = \"/^[a-z0-9_-]+$/i\";\n+\tconst REGEX_MODULE = \"/^[a-z0-9_-]+$/i\";\n+\n+\t/**\n+\t * Checks if the provided scope name is valid.\n+\t *\n+\t * @param string $scope scope name\n+\t * @return bool is existing\n+\t */\n+\tpublic static function isValidScopeName(string $scope): bool {\n+\t\tif (!preg_match(self::REGEX_SCOPE, $scope)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (self::$cachedScopeNames === null) {\n+\t\t\t$dirname = dirname(__FILE__) . \"/types\";\n+\t\t\t$dir = dir($dirname);\n+\t\t\t$scopeNames = array();\n+\t\t\twhile ($entry = $dir->read()) {\n+\t\t\t\tif ((substr($entry, strlen($entry) - 4, 4) === '.inc')\n+\t\t\t\t\t&& (is_file($dirname . '/'.$entry) || is_link($dirname . '/'.$entry))) {\n+\t\t\t\t\t$entry = substr($entry, 0, -4);\n+\t\t\t\t\tif (preg_match(self::REGEX_SCOPE, $entry)) {\n+\t\t\t\t\t\t$scopeNames[] = $entry;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tself::$cachedScopeNames = $scopeNames;\n+\t\t}\n+\t\treturn in_array($scope, self::$cachedScopeNames);\n+\t}\n+\n+\t/**\n+\t * Checks if the provided module name is valid.\n+\t *\n+\t * @param string $moduleName module name\n+\t * @return bool is existing\n+\t */\n+\tpublic static function isValidModuleName(string $moduleName): bool {\n+\t\tif (!preg_match(self::REGEX_MODULE, $moduleName)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (self::$cachedModuleNames === null) {\n+\t\t\t$dirname = dirname(__FILE__) . \"/modules\";\n+\t\t\t$dir = dir($dirname);\n+\t\t\t$moduleNames = array();\n+\t\t\twhile ($entry = $dir->read()) {\n+\t\t\t\tif ((substr($entry, strlen($entry) - 4, 4) === '.inc')\n+\t\t\t\t\t&& (is_file($dirname . '/' . $entry) || is_link($dirname . '/' . $entry))) {\n+\t\t\t\t\t$entry = substr($entry, 0, -4);\n+\t\t\t\t\tif (preg_match(self::REGEX_MODULE, $entry)) {\n+\t\t\t\t\t\t$moduleNames[] = $entry;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tself::$cachedModuleNames = $moduleNames;\n+\t\t}\n+\t\treturn in_array($moduleName, self::$cachedModuleNames);\n+\t}\n+\n+}"
        },
        {
          "filename": "lam/lib/modules/inetOrgPerson.inc",
          "status": "modified",
          "additions": 27,
          "deletions": 31,
          "patch": "@@ -1894,21 +1894,19 @@ class inetOrgPerson extends baseModule implements passwordService,AccountStatusP\n \t\t\t\t$table->addElement($link);\n \t\t\t\t$deleteButton = new htmlAccountPageButton(get_class($this), 'userCertificate', 'delete_' . $i, 'del.svg', true);\n \t\t\t\t$table->addElement($deleteButton);\n-\t\t\t\tif (function_exists('openssl_x509_parse')) {\n-\t\t\t\t\t$pem = @chunk_split(@base64_encode($this->attributes['userCertificate;binary'][$i]), 64, \"\\n\");\n-\t\t\t\t\tif (!empty($pem)) {\n-\t\t\t\t\t\t$pem = \"-----BEGIN CERTIFICATE-----\\n\" . $pem . \"-----END CERTIFICATE-----\\n\";\n-\t\t\t\t\t\t$pemData = @openssl_x509_parse($pem);\n-\t\t\t\t\t\t$data = array();\n-\t\t\t\t\t\tif (isset($pemData['serialNumber'])) {\n-\t\t\t\t\t\t\t$data[] = $pemData['serialNumber'];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (isset($pemData['name'])) {\n-\t\t\t\t\t\t\t$data[] = $pemData['name'];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (sizeof($data) > 0) {\n-\t\t\t\t\t\t\t$table->addElement(new htmlOutputText(implode(': ', $data)));\n-\t\t\t\t\t\t}\n+\t\t\t\t$pem = @chunk_split(@base64_encode($this->attributes['userCertificate;binary'][$i]), 64, \"\\n\");\n+\t\t\t\tif (!empty($pem)) {\n+\t\t\t\t\t$pem = \"-----BEGIN CERTIFICATE-----\\n\" . $pem . \"-----END CERTIFICATE-----\\n\";\n+\t\t\t\t\t$pemData = @openssl_x509_parse($pem);\n+\t\t\t\t\t$data = array();\n+\t\t\t\t\tif (isset($pemData['serialNumber'])) {\n+\t\t\t\t\t\t$data[] = $pemData['serialNumber'];\n+\t\t\t\t\t}\n+\t\t\t\t\tif (isset($pemData['name'])) {\n+\t\t\t\t\t\t$data[] = $pemData['name'];\n+\t\t\t\t\t}\n+\t\t\t\t\tif (sizeof($data) > 0) {\n+\t\t\t\t\t\t$table->addElement(new htmlOutputText(implode(': ', $data)));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t$table->addNewLine();\n@@ -3215,22 +3213,20 @@ class inetOrgPerson extends baseModule implements passwordService,AccountStatusP\n \t\t\t\tfwrite($out, $userCertificates[$i]);\n \t\t\t\tfclose ($out);\n \t\t\t\t$path = '../../tmp/' . $filename;\n-\t\t\t\tif (function_exists('openssl_x509_parse')) {\n-\t\t\t\t\t$pem = @chunk_split(@base64_encode($userCertificates[$i]), 64, \"\\n\");\n-\t\t\t\t\tif (!empty($pem)) {\n-\t\t\t\t\t\t$pem = \"-----BEGIN CERTIFICATE-----\\n\" . $pem . \"-----END CERTIFICATE-----\\n\";\n-\t\t\t\t\t\t$pemData = @openssl_x509_parse($pem);\n-\t\t\t\t\t\t$data = array();\n-\t\t\t\t\t\tif (isset($pemData['serialNumber'])) {\n-\t\t\t\t\t\t\t$data[] = $pemData['serialNumber'];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (isset($pemData['name'])) {\n-\t\t\t\t\t\t\t$data[] = $pemData['name'];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (sizeof($data) > 0) {\n-\t\t\t\t\t\t\t$group->addElement(new htmlOutputText(implode(': ', $data)));\n-\t\t\t\t\t\t\t$group->addElement(new htmlSpacer('5px', null));\n-\t\t\t\t\t\t}\n+\t\t\t\t$pem = @chunk_split(@base64_encode($userCertificates[$i]), 64, \"\\n\");\n+\t\t\t\tif (!empty($pem)) {\n+\t\t\t\t\t$pem = \"-----BEGIN CERTIFICATE-----\\n\" . $pem . \"-----END CERTIFICATE-----\\n\";\n+\t\t\t\t\t$pemData = @openssl_x509_parse($pem);\n+\t\t\t\t\t$data = array();\n+\t\t\t\t\tif (isset($pemData['serialNumber'])) {\n+\t\t\t\t\t\t$data[] = $pemData['serialNumber'];\n+\t\t\t\t\t}\n+\t\t\t\t\tif (isset($pemData['name'])) {\n+\t\t\t\t\t\t$data[] = $pemData['name'];\n+\t\t\t\t\t}\n+\t\t\t\t\tif (sizeof($data) > 0) {\n+\t\t\t\t\t\t$group->addElement(new htmlOutputText(implode(': ', $data)));\n+\t\t\t\t\t\t$group->addElement(new htmlSpacer('5px', null));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t$saveLink = new htmlLink('', $path, '../../graphics/save.svg');"
        },
        {
          "filename": "lam/lib/pdfstruct.inc",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -17,7 +17,7 @@ use function LAM\\PERSISTENCE\\dbTableExists;\n /*\n   This code is part of LDAP Account Manager (http://www.ldap-account-manager.org/)\n   Copyright (C) 2003 - 2006  Michael Duergner\n-                2011 - 2021  Roland Gruber\n+                2011 - 2022  Roland Gruber\n \n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n@@ -276,10 +276,10 @@ class PdfStructurePersistenceManager {\n \t * @throws LAMException error saving logo\n \t */\n \tpublic function savePdfLogo(string $confName, string $name, string $data) : void {\n-\t\tif (!LAMConfig::isValidName($confName) || !$this->isValidLogoFileName($name)) {\n+\t\tif (!LAMConfig::isValidName($confName)) {\n \t\t\tthrow new LAMException(_('Unable to upload logo file.'));\n \t\t}\n-\t\tif (!preg_match('/[a-zA-Z0-9_-]+\\\\.(png)|(jpg)/i', $name)) {\n+\t\tif (!$this->isValidLogoFileName($name)) {\n \t\t\tthrow new LAMException(_('Unable to upload logo file.'), _('The file name must end with \".png\" or \".jpg\".'));\n \t\t}\n \t\t$this->strategy->savePdfLogo($confName, $name, $data);\n@@ -358,7 +358,7 @@ class PdfStructurePersistenceManager {\n \t * @return boolean is valid\n \t */\n \tprivate function isValidPDFStructureName(string $name) : bool {\n-\t\treturn preg_match('/^[a-z0-9\\-\\_]+$/i', $name) === 1;\n+\t\treturn preg_match('/^[a-z0-9_-]+$/i', $name) === 1;\n \t}\n \n \t/**\n@@ -368,7 +368,7 @@ class PdfStructurePersistenceManager {\n \t * @return bool valid\n \t */\n \tprivate function isValidLogoFileName(string $fileName) : bool {\n-\t\treturn preg_match('/[a-zA-Z0-9_-]+\\\\.(png)|(jpg)/i', $fileName);\n+\t\treturn preg_match('/^[a-z0-9_-]+\\\\.(png|jpg)$/im', $fileName) === 1;\n \t}\n \n \t/**"
        },
        {
          "filename": "lam/lib/security.inc",
          "status": "modified",
          "additions": 14,
          "deletions": 42,
          "patch": "@@ -181,10 +181,8 @@ function logoffAndBackToLoginPage() {\n \t\tlogNewMessage(LOG_WARNING, 'Self service session of DN ' . lamDecrypt($_SESSION['selfService_clientDN'], 'SelfService') . ' expired.');\n \t}\n \t// delete key and iv in cookie\n-\tif (function_exists('openssl_random_pseudo_bytes')) {\n-\t\tsetcookie(\"Key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n-\t\tsetcookie(\"IV\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n-\t}\n+\tsetcookie(\"Key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n+\tsetcookie(\"IV\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n \t// link back to login page\n \t$paths = array('./', '../', '../../', '../../../', '../../../../');\n \t$page = 'login.php';\n@@ -701,25 +699,12 @@ function setLAMHeaders() {\n * @param string $prefix prefix for cookie names\n * @return object encrypted string\n */\n-function lamEncrypt($data, $prefix='') {\n-\t// use OpenSSL if available\n-\tif (function_exists('openssl_random_pseudo_bytes')) {\n-\t\t// OpenSSL may have been enabled in a running session\n-\t\tif (!isset($_COOKIE[$prefix . \"IV\"])\n-\t\t\t\t|| ($_COOKIE[$prefix . \"IV\"] == '')\n-\t\t\t\t|| ($_COOKIE[$prefix . \"IV\"] == \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")) {\n-\t\t\treturn $data;\n-\t\t}\n-\t\t// read key and iv from cookie\n-\t\t$iv = base64_decode($_COOKIE[$prefix . \"IV\"]);\n-\t\t$key = base64_decode($_COOKIE[$prefix . \"Key\"]);\n-\t\t// encrypt string\n-\t\treturn openssl_encrypt(base64_encode($data), lamEncryptionAlgo(), $key, 0, $iv);\n-\t}\n-\t// otherwise do not encrypt\n-\telse {\n-\t\treturn $data;\n-\t}\n+function lamEncrypt($data, $prefix = '') {\n+\t// read key and iv from cookie\n+\t$iv = base64_decode($_COOKIE[$prefix . \"IV\"]);\n+\t$key = base64_decode($_COOKIE[$prefix . \"Key\"]);\n+\t// encrypt string\n+\treturn openssl_encrypt(base64_encode($data), lamEncryptionAlgo(), $key, 0, $iv);\n }\n \n /**\n@@ -730,25 +715,12 @@ function lamEncrypt($data, $prefix='') {\n * @return string decrypted string\n */\n function lamDecrypt($data, $prefix='') {\n-\t// use OpenSSL if available\n-\tif (function_exists('openssl_random_pseudo_bytes')) {\n-\t\t// OpenSSL may have been enabled in a running session\n-\t\tif (!isset($_COOKIE[$prefix . \"IV\"])\n-\t\t\t\t|| ($_COOKIE[$prefix . \"IV\"] == '')\n-\t\t\t\t|| ($_COOKIE[$prefix . \"IV\"] == \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")) {\n-\t\t\treturn $data;\n-\t\t}\n-\t\t// read key and iv from cookie\n-\t\t$iv = base64_decode($_COOKIE[$prefix . \"IV\"]);\n-\t\t$key = base64_decode($_COOKIE[$prefix . \"Key\"]);\n-\t\t// decrypt string\n-\t\t$ret = openssl_decrypt($data, lamEncryptionAlgo(), $key, 0, $iv);\n-\t\treturn base64_decode(str_replace(chr(00), \"\", $ret));\n-\t}\n-\t// otherwise do not decrypt\n-\telse {\n-\t\treturn $data;\n-\t}\n+\t// read key and iv from cookie\n+\t$iv = base64_decode($_COOKIE[$prefix . \"IV\"]);\n+\t$key = base64_decode($_COOKIE[$prefix . \"Key\"]);\n+\t// decrypt string\n+\t$ret = openssl_decrypt($data, lamEncryptionAlgo(), $key, 0, $iv);\n+\treturn base64_decode(str_replace(chr(00), \"\", $ret));\n }\n \n /**"
        },
        {
          "filename": "lam/templates/config/mainmanage.php",
          "status": "modified",
          "additions": 0,
          "deletions": 12,
          "patch": "@@ -198,14 +198,6 @@\n \t\t}\n \t\t$cfg->allowedHostsSelfService = $allowedHostsSelfService;\n \t}\n-\t// set session encryption\n-\tif (function_exists('openssl_random_pseudo_bytes')) {\n-\t\t$encryptSession = 'false';\n-\t\tif (isset($_POST['encryptSession']) && ($_POST['encryptSession'] == 'on')) {\n-\t\t\t$encryptSession = 'true';\n-\t\t}\n-\t\t$cfg->encryptSession = $encryptSession;\n-\t}\n \t// set log level\n \t$cfg->logLevel = $_POST['logLevel'];\n \t// set log destination\n@@ -442,10 +434,6 @@\n \tif (isLAMProVersion()) {\n \t\t$row->add(new htmlResponsiveInputTextarea('allowedHostsSelfService', implode(\"\\n\", explode(\",\", $cfg->allowedHostsSelfService)), null, '7', _(\"Allowed hosts (self service)\"), '241'), 12);\n \t}\n-\t$encryptSession = ($cfg->encryptSession === 'true');\n-\t$encryptSessionBox = new htmlResponsiveInputCheckbox('encryptSession', $encryptSession, _('Encrypt session'), '245');\n-\t$encryptSessionBox->setIsEnabled(function_exists('openssl_random_pseudo_bytes'));\n-\t$row->add($encryptSessionBox, 12);\n \t// SSL certificate\n \t$row->addVerticalSpacer('1rem');\n \t$row->addLabel(new htmlOutputText(_('SSL certificates')));"
        },
        {
          "filename": "lam/templates/help.php",
          "status": "modified",
          "additions": 16,
          "deletions": 7,
          "patch": "@@ -24,6 +24,8 @@\n   LDAP Account Manager display help pages.\n */\n \n+use ScopeAndModuleValidation;\n+\n /**\n  * LDAP Account Manager help page.\n  *\n@@ -116,15 +118,22 @@ function displayHelp(array $helpEntry): void {\n // module help\n if (isset($_GET['module']) && !($_GET['module'] == 'main') && !($_GET['module'] == '')) {\n \tinclude_once(__DIR__ . \"/../lib/modules.inc\");\n-\tif (isset($_GET['scope'])) {\n-\t\t$helpEntry = getHelp($_GET['module'],$_GET['HelpNumber'],$_GET['scope']);\n-\t}\n-\telse {\n-\t\t$helpEntry = getHelp($_GET['module'],$_GET['HelpNumber']);\n+\t$moduleName = $_GET['module'];\n+\tif (!ScopeAndModuleValidation::isValidModuleName($moduleName)) {\n+\t    logNewMessage(LOG_ERR, 'Invalid module name: ' . $moduleName);\n+\t    die();\n+    }\n+\tif (!empty($_GET['scope'])) {\n+\t    $scope = $_GET['scope'];\n+\t    if (!ScopeAndModuleValidation::isValidScopeName($scope)) {\n+\t\t    logNewMessage(LOG_ERR, 'Invalid scope name: ' . $scope);\n+\t\t    die();\n+        }\n+\t\t$helpEntry = getHelp($moduleName, $_GET['HelpNumber'], $scope);\n \t}\n \tif (!$helpEntry) {\n-\t\t$variables = array(htmlspecialchars($_GET['HelpNumber']), htmlspecialchars($_GET['module']));\n-\t\t$errorMessage = _(\"Sorry this help id ({bold}%s{endbold}) is not available for this module ({bold}%s{endbold}).\");\n+\t\t$variables = array(htmlspecialchars($_GET['HelpNumber']), htmlspecialchars($moduleName));\n+\t\t$errorMessage = _(\"Sorry the help id '%s' is not available for the module '%s'.\");\n \t\techoHTMLHead();\n \t\tstatusMessage(\"ERROR\", \"\", $errorMessage, $variables);\n \t\techoHTMLFoot();"
        },
        {
          "filename": "lam/templates/login.php",
          "status": "modified",
          "additions": 10,
          "deletions": 12,
          "patch": "@@ -174,10 +174,10 @@\n $_SESSION['header'] .= \"<meta name=\\\"robots\\\" content=\\\"noindex, nofollow\\\">\\n\";\n $_SESSION['header'] .= \"<meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\" . $encoding . \"\\\">\\n\";\n $_SESSION['header'] .= \"<meta http-equiv=\\\"pragma\\\" content=\\\"no-cache\\\">\\n\t\t<meta http-equiv=\\\"cache-control\\\" content=\\\"no-cache\\\">\";\n-$manifestUrl = str_replace('/templates/login.php', '', getCallingURL());\n-$manifestUrl = preg_replace('/http(s)?:\\\\/\\\\/([^\\\\/])+/', '', $manifestUrl);\n-$manifestUrl = preg_replace('/\\\\?.*/', '', $manifestUrl);\n-$_SESSION['header'] .= '<link rel=\"manifest\" href=\"' . $manifestUrl . '/templates/manifest.php\" crossorigin=\"use-credentials\">';\n+$urlMatches = array();\n+if (preg_match('/http(s)?:\\\\/\\\\/[^\\\\/]+(\\\\/.*)\\/templates\\/login.php.*/', getCallingURL(), $urlMatches)) {\n+\t$_SESSION['header'] .= '<link rel=\"manifest\" href=\"' . $urlMatches[2] . '/templates/manifest.php\" crossorigin=\"use-credentials\">';\n+}\n \n setlanguage(); // setting correct language\n \n@@ -195,13 +195,11 @@ function display_LoginPage($licenseValidator, $error_message, $errorDetails = nu\n \t$cfgMain = $_SESSION[\"cfgMain\"];\n \tlogNewMessage(LOG_DEBUG, \"Display login page\");\n \t// generate 256 bit key and initialization vector for user/passwd-encryption\n-\tif (function_exists('openssl_random_pseudo_bytes') && ($cfgMain->encryptSession == 'true')) {\n-\t\t$key = openssl_random_pseudo_bytes(32);\n-\t\t$iv = openssl_random_pseudo_bytes(16);\n-\t\t// save both in cookie\n-\t\tsetcookie(\"Key\", base64_encode($key), 0, \"/\", '', false, true);\n-\t\tsetcookie(\"IV\", base64_encode($iv), 0, \"/\", '', false, true);\n-\t}\n+    $key = openssl_random_pseudo_bytes(32);\n+    $iv = openssl_random_pseudo_bytes(16);\n+    // save both in cookie\n+    setcookie(\"Key\", base64_encode($key), 0, \"/\", '', false, true);\n+    setcookie(\"IV\", base64_encode($iv), 0, \"/\", '', false, true);\n \n \t$serverProfilePersistenceManager = new ServerProfilePersistenceManager();\n \t$profiles = $serverProfilePersistenceManager->getProfiles();\n@@ -537,7 +535,7 @@ function displayLoginHeader() : void {\n     $searchLDAP = null;\n \tif ($_SESSION['config']->getLoginMethod() == LAMConfig::LOGIN_SEARCH) {\n \t\t$searchFilter = $_SESSION['config']->getLoginSearchFilter();\n-\t\t$searchFilter = str_replace('%USER%', $username, $searchFilter);\n+\t\t$searchFilter = str_replace('%USER%', ldap_escape($username, '', LDAP_ESCAPE_FILTER), $searchFilter);\n \t\t$searchDN = '';\n \t\t$searchPassword = '';\n \t\t$configLoginSearchDn = $_SESSION['config']->getLoginSearchDN();"
        },
        {
          "filename": "lam/templates/logout.php",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -29,10 +29,8 @@\n \n \n // delete key and iv in cookie\n-if (function_exists('openssl_random_pseudo_bytes')) {\n-\tsetcookie(\"Key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n-\tsetcookie(\"IV\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n-}\n+setcookie(\"Key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n+setcookie(\"IV\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", 0, \"/\", '', false, true);\n \n /** security functions */\n include_once(__DIR__ . \"/../lib/security.inc\");"
        },
        {
          "filename": "lam/templates/manifest.php",
          "status": "modified",
          "additions": 9,
          "deletions": 5,
          "patch": "@@ -3,7 +3,7 @@\n /*\n \n   This code is part of LDAP Account Manager (http://www.ldap-account-manager.org/)\n-  Copyright (C) 2019  Roland Gruber\n+  Copyright (C) 2019 - 2022  Roland Gruber\n \n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n@@ -37,10 +37,14 @@\n \theader('Content-Type: application/json; charset=utf-8');\n }\n \n-$baseUrl = getCallingURL();\n-$baseUrl = str_replace('/templates/manifest.php', '', $baseUrl);\n-$baseUrl = preg_replace('/\\\\?.*/', '', $baseUrl);\n-$baseUrl = preg_replace('/http(s)?:\\\\/\\\\/([^\\\\/])+/', '', $baseUrl);\n+$urlMatches = array();\n+if (preg_match('/http(s)?:\\\\/\\\\/[^\\\\/]+(\\\\/.*)\\/templates\\/manifest.php.*/', getCallingURL(), $urlMatches)) {\n+\t$baseUrl = $urlMatches[2];\n+}\n+else {\n+\tlogNewMessage('Unable to get base URL from ' . getCallingURL());\n+\texit();\n+}\n \n echo '{\n   \"short_name\": \"LAM\","
        },
        {
          "filename": "lam/tests/lib/ModulesTest.php",
          "status": "added",
          "additions": 51,
          "deletions": 0,
          "patch": "@@ -0,0 +1,51 @@\n+<?php\n+use PHPUnit\\Framework\\TestCase;\n+/*\n+ This code is part of LDAP Account Manager (http://www.ldap-account-manager.org/)\n+ Copyright (C) 2022  Roland Gruber\n+\n+ This program is free software; you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation; either version 2 of the License, or\n+ (at your option) any later version.\n+\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with this program; if not, write to the Free Software\n+ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+\n+ */\n+\n+include_once __DIR__ . '/../../lib/modules.inc';\n+\n+/**\n+ * modules.inc test cases.\n+ *\n+ * @author Roland Gruber\n+ */\n+class ModulesTest extends TestCase {\n+\n+\t/**\n+\t * Tests unformatShortFormatToSeconds() without characters.\n+\t */\n+\tfunction testScopeAndModuleValidation() {\n+\t\t$this->assertTrue(ScopeAndModuleValidation::isValidModuleName('posixAccount'));\n+\t\t$this->assertTrue(ScopeAndModuleValidation::isValidModuleName('inetOrgPerson'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidModuleName('notExistingModule'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidModuleName('.'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidModuleName('abc/def'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidModuleName(\"posixAccount\\n\"));\n+\n+\t\t$this->assertTrue(ScopeAndModuleValidation::isValidScopeName('user'));\n+\t\t$this->assertTrue(ScopeAndModuleValidation::isValidScopeName('group'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidScopeName('notExistingScope'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidScopeName('.'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidScopeName('abc/def'));\n+\t\t$this->assertFalse(ScopeAndModuleValidation::isValidScopeName(\"user\\n\"));\n+\t}\n+\n+}"
        },
        {
          "filename": "lam/tmp/.htaccess",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -1 +1,7 @@\n Options -Indexes\n+<Files ~ \".*\\.php.*\">\n+    Require all denied\n+</Files>\n+<Files ~ \".*\\.inc\">\n+    Require all denied\n+</Files>"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 11,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b0e5479894c7ea68819ac783f7b7b574728725e6",
            "date": "2025-01-16T19:06:26Z",
            "author_login": "gruberroland"
          },
          {
            "sha": "fb401f6eaa437ee13f48ea33cc06f1c2385c1059",
            "date": "2025-01-16T18:59:42Z",
            "author_login": "gruberroland"
          },
          {
            "sha": "27f0918c088460fd7bf740ddefe3d7670668cd5f",
            "date": "2025-01-16T18:43:34Z",
            "author_login": "gruberroland"
          },
          {
            "sha": "49282b2ee72fb9384eb057e81399aa60ebfa74b7",
            "date": "2025-01-16T18:15:51Z",
            "author_login": "gruberroland"
          },
          {
            "sha": "04d81f5011fa9a49411edee691d6e84bd8433198",
            "date": "2025-01-16T16:05:19Z",
            "author_login": "gruberroland"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "LDAP Account Manager (LAM) is a webfrontend for managing entries (e.g. users, groups, DHCP settings) stored in an LDAP directory. In versions prior to 8.0 the tmp directory, which is accessible by /lam/tmp/, allows interpretation of .php (and .php5/.php4/.phpt/etc) files. An attacker capable of writing files under www-data privileges can write a web-shell into this directory, and gain a Code Execution on the host. This issue has been fixed in version 8.0. Users unable to upgrade should disallow executing PHP scripts in (/var/lib/ldap-account-manager/)tmp directory.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-06-27T21:15:08.337",
    "last_modified": "2024-11-21T07:03:52.110",
    "fix_date": "2022-06-27T18:20:38Z"
  },
  "references": [
    {
      "url": "https://github.com/LDAPAccountManager/lam/commit/f1d5d04952f39a1b4ea203d3964fa88e1429dfd4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LDAPAccountManager/lam/security/advisories/GHSA-q8g5-45m4-q95p",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2022/dsa-5177",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LDAPAccountManager/lam/commit/f1d5d04952f39a1b4ea203d3964fa88e1429dfd4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/LDAPAccountManager/lam/security/advisories/GHSA-q8g5-45m4-q95p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2022/dsa-5177",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:09.488422",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "lam",
    "owner": "LDAPAccountManager",
    "created_at": "2016-03-20T08:33:20Z",
    "updated_at": "2025-01-16T19:06:28Z",
    "pushed_at": "2025-01-25T19:03:24Z",
    "size": 198235,
    "stars": 437,
    "forks": 73,
    "open_issues": 11,
    "watchers": 437,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "gh-pages",
      "master"
    ],
    "languages": {
      "PHP": 3691862,
      "JavaScript": 3621659,
      "CSS": 308742,
      "HTML": 211784,
      "Shell": 35795,
      "Perl": 14941,
      "Makefile": 9300,
      "Dockerfile": 6575,
      "M4": 3653
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:39:27.616913"
  }
}