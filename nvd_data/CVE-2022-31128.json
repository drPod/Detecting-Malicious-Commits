{
  "cve_id": "CVE-2022-31128",
  "github_data": {
    "repository": "Enalean/tuleap",
    "fix_commit": "58ecb1dee1c46075d3e089980301ebfbe0bafd33",
    "related_commits": [
      "58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "58ecb1dee1c46075d3e089980301ebfbe0bafd33"
    ],
    "patch_url": "https://github.com/Enalean/tuleap/commit/58ecb1dee1c46075d3e089980301ebfbe0bafd33.patch",
    "fix_commit_details": {
      "sha": "58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "commit_date": "2022-07-05T08:52:52Z",
      "author": {
        "login": "yannis-rossetto",
        "type": "User",
        "stats": {
          "total_commits": 8598,
          "average_weekly_commits": 8.347572815533981,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 535
        }
      },
      "commit_message": {
        "title": "fix: Fine grained permissions must be well handled in POST git/:id/branches",
        "length": 316,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 71,
        "additions": 44,
        "deletions": 27
      },
      "files": [
        {
          "filename": "plugins/git/include/REST/v1/Branch/BranchCreator.php",
          "status": "modified",
          "additions": 17,
          "deletions": 13,
          "patch": "@@ -21,38 +21,31 @@\n \n namespace Tuleap\\Git\\REST\\v1\\Branch;\n \n-use Git;\n use Git_Command_Exception;\n use Luracast\\Restler\\RestException;\n use Tuleap\\Git\\Branch\\BranchCreationExecutor;\n use Tuleap\\Git\\Branch\\BranchName;\n use Tuleap\\Git\\Branch\\CannotCreateNewBranchException;\n use Tuleap\\Git\\Branch\\InvalidBranchNameException;\n+use Tuleap\\Git\\Permissions\\AccessControlVerifier;\n use Tuleap\\Git\\REST\\v1\\GitBranchPOSTRepresentation;\n \n class BranchCreator\n {\n     private const BRANCH_PREFIX = \"refs/heads/\";\n \n-    public function __construct(private \\Git_Exec $git_exec, private BranchCreationExecutor $branch_creation_executor)\n-    {\n+    public function __construct(\n+        private \\Git_Exec $git_exec,\n+        private BranchCreationExecutor $branch_creation_executor,\n+        private AccessControlVerifier $access_control_verifier,\n+    ) {\n     }\n \n     /**\n      * @throws RestException\n      */\n     public function createBranch(\\PFUser $user, \\GitRepository $repository, GitBranchPOSTRepresentation $representation): void\n     {\n-        if (\n-            ! $user->hasPermission(Git::PERM_WRITE, $repository->getId(), $repository->getProjectId())\n-            && ! $user->hasPermission(Git::PERM_WPLUS, $repository->getId(), $repository->getProjectId())\n-        ) {\n-            throw new RestException(\n-                403,\n-                \"User cannot update the content of the repository\"\n-            );\n-        }\n-\n         try {\n             BranchName::fromBranchNameShortHand($representation->branch_name);\n         } catch (InvalidBranchNameException $exception) {\n@@ -65,6 +58,17 @@ public function createBranch(\\PFUser $user, \\GitRepository $repository, GitBranc\n             );\n         }\n \n+        if (! $this->access_control_verifier->canWrite($user, $repository, self::BRANCH_PREFIX . $representation->branch_name)) {\n+            throw new RestException(\n+                403,\n+                sprintf(\n+                    \"You are not allowed to create the branch %s in repository %s\",\n+                    $representation->branch_name,\n+                    $repository->getName()\n+                )\n+            );\n+        }\n+\n         $all_branches_names = $this->git_exec->getAllBranchesSortedByCreationDate();\n         if (in_array($representation->branch_name, $all_branches_names)) {\n             throw new RestException("
        },
        {
          "filename": "plugins/git/include/REST/v1/RepositoryResource.class.php",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -72,6 +72,7 @@\n use Tuleap\\Git\\GitPHP\\ProjectProvider;\n use Tuleap\\Git\\GitPHP\\RepositoryAccessException;\n use Tuleap\\Git\\GitPHP\\RepositoryNotExistingException;\n+use Tuleap\\Git\\Permissions\\AccessControlVerifier;\n use Tuleap\\Git\\Permissions\\DefaultFineGrainedPermissionFactory;\n use Tuleap\\Git\\Permissions\\FineGrainedDao;\n use Tuleap\\Git\\Permissions\\FineGrainedPatternValidator;\n@@ -919,7 +920,18 @@ public function createBranch($id, GitBranchPOSTRepresentation $representation):\n \n         $repository = $this->getRepositoryForCurrentUser($id);\n \n-        (new BranchCreator(new Git_Exec($repository->getFullPath(), $repository->getFullPath()), new BranchCreationExecutor()))->createBranch(\n+        $branch_creator = new BranchCreator(\n+            new Git_Exec($repository->getFullPath(), $repository->getFullPath()),\n+            new BranchCreationExecutor(),\n+            new AccessControlVerifier(\n+                new FineGrainedRetriever(\n+                    new FineGrainedDao(),\n+                ),\n+                new \\System_Command(),\n+            )\n+        );\n+\n+        $branch_creator->createBranch(\n             $this->getCurrentUser(),\n             $repository,\n             $representation"
        },
        {
          "filename": "plugins/git/tests/unit/REST/v1/Branch/BranchCreatorTest.php",
          "status": "modified",
          "additions": 14,
          "deletions": 13,
          "patch": "@@ -23,12 +23,13 @@\n \n namespace Tuleap\\Git\\REST\\v1\\Branch;\n \n-use Git;\n use Git_Command_Exception;\n use Luracast\\Restler\\RestException;\n use Tuleap\\Git\\Branch\\BranchCreationExecutor;\n use Tuleap\\Git\\Branch\\CannotCreateNewBranchException;\n+use Tuleap\\Git\\Permissions\\AccessControlVerifier;\n use Tuleap\\Git\\REST\\v1\\GitBranchPOSTRepresentation;\n+use Tuleap\\Test\\Builders\\UserTestBuilder;\n use Tuleap\\Test\\PHPUnit\\TestCase;\n \n final class BranchCreatorTest extends TestCase\n@@ -45,17 +46,23 @@ final class BranchCreatorTest extends TestCase\n      * @var \\PHPUnit\\Framework\\MockObject\\MockObject&BranchCreationExecutor\n      */\n     private $branch_creation_executor;\n+    /**\n+     * @var AccessControlVerifier&\\PHPUnit\\Framework\\MockObject\\MockObject\n+     */\n+    private $access_control_verifier;\n \n     protected function setUp(): void\n     {\n         parent::setUp();\n \n         $this->git_exec                 = $this->createMock(\\Git_Exec::class);\n         $this->branch_creation_executor = $this->createMock(BranchCreationExecutor::class);\n+        $this->access_control_verifier  = $this->createMock(AccessControlVerifier::class);\n \n         $this->creator = new BranchCreator(\n             $this->git_exec,\n-            $this->branch_creation_executor\n+            $this->branch_creation_executor,\n+            $this->access_control_verifier\n         );\n \n         $this->git_exec->method('getAllBranchesSortedByCreationDate')->willReturn([\n@@ -90,7 +97,7 @@ public function testItThrowsAnExceptionIfUserCannotWriteInRepository(): void\n             ->method(\"createNewBranch\");\n \n         $this->expectException(RestException::class);\n-        $this->expectExceptionMessage(\"User cannot update the content of the repository\");\n+        $this->expectExceptionMessage(\"You are not allowed to create the branch new_branch in repository repo01\");\n \n         $this->creator->createBranch(\n             $this->buildMockUserWithoutPermissions(),\n@@ -201,22 +208,16 @@ public function testItThrowsAnExceptionIfGitCommandFailed(): void\n \n     private function buildMockUserWithPermissions(): \\PFUser\n     {\n-        $user = $this->createMock(\\PFUser::class);\n-        $user->method('hasPermission')->willReturnMap([\n-            [Git::PERM_WRITE, self::REPO_ID, self::PROJECT_ID, true],\n-            [Git::PERM_WPLUS, self::REPO_ID, self::PROJECT_ID, true],\n-        ]);\n+        $user = UserTestBuilder::anActiveUser()->build();\n+        $this->access_control_verifier->method('canWrite')->willReturn(true);\n \n         return $user;\n     }\n \n     private function buildMockUserWithoutPermissions(): \\PFUser\n     {\n-        $user = $this->createMock(\\PFUser::class);\n-        $user->method('hasPermission')->willReturnMap([\n-            [Git::PERM_WRITE, self::REPO_ID, self::PROJECT_ID, false],\n-            [Git::PERM_WPLUS, self::REPO_ID, self::PROJECT_ID, false],\n-        ]);\n+        $user = UserTestBuilder::anActiveUser()->build();\n+        $this->access_control_verifier->method('canWrite')->willReturn(false);\n \n         return $user;\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9853bbe9eefcf4ad385b6e8474c59bd1aa8a6545",
            "date": "2025-01-14T16:07:28Z",
            "author_login": "magarnier"
          },
          {
            "sha": "f0aaaefd3ef209c794869a752a86b4f174d53d16",
            "date": "2025-01-14T16:07:20Z",
            "author_login": "magarnier"
          },
          {
            "sha": "e0da8b7336dcef7fb38b41cfee101f34f9249442",
            "date": "2025-01-14T14:59:51Z",
            "author_login": "nterray"
          },
          {
            "sha": "336f9ed6a3e16d12c03792f0764bbe06da36ced9",
            "date": "2025-01-14T14:59:12Z",
            "author_login": "nterray"
          },
          {
            "sha": "a4a770f2f7a401e471fde4bc167c5973d97dbd81",
            "date": "2025-01-14T13:19:55Z",
            "author_login": "Gashmob"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-862",
    "description": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In affected versions Tuleap does not properly verify permissions when creating branches with the REST API in Git repositories using the fine grained permissions. Users can create branches via the REST endpoint `POST git/:id/branches` regardless of the permissions set on the repository. This issue has been fixed in version 13.10.99.82 Tuleap Community Edition as well as in version 13.10-3 of Tuleap Enterprise Edition. Users are advised to upgrade. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-01T17:15:08.403",
    "last_modified": "2024-11-21T07:03:57.300",
    "fix_date": "2022-07-05T08:52:52Z"
  },
  "references": [
    {
      "url": "https://github.com/Enalean/tuleap/commit/58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-2p49-vgcx-5w79",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=27538",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/commit/58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-2p49-vgcx-5w79",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=58ecb1dee1c46075d3e089980301ebfbe0bafd33",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=27538",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.185694",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tuleap",
    "owner": "Enalean",
    "created_at": "2012-06-12T15:48:54Z",
    "updated_at": "2025-01-14T09:23:28Z",
    "pushed_at": "2025-01-14T09:23:22Z",
    "size": 382430,
    "stars": 1043,
    "forks": 285,
    "open_issues": 3,
    "watchers": 1043,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 64309783,
      "TypeScript": 12164261,
      "JavaScript": 4302645,
      "Vue": 3161023,
      "Mustache": 2174238,
      "SCSS": 1603030,
      "HTML": 502284,
      "CSS": 281155,
      "Shell": 126767,
      "Smarty": 121199,
      "MDX": 89474,
      "Nix": 48015,
      "Go": 44709,
      "Makefile": 41978,
      "Rust": 27741,
      "Groovy": 13947,
      "PEG.js": 12394,
      "Perl": 11384,
      "Dockerfile": 10302,
      "Python": 3977,
      "XSLT": 1077,
      "Awk": 597
    },
    "commit_activity": {
      "total_commits_last_year": 5447,
      "avg_commits_per_week": 104.75,
      "days_active_last_year": 255
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:56.606881"
  }
}