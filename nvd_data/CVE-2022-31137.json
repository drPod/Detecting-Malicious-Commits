{
  "cve_id": "CVE-2022-31137",
  "github_data": {
    "repository": "hap-wi/roxy-wi",
    "fix_commit": "82666df1e60c45dd6aa533b01a392f015d32f755",
    "related_commits": [
      "82666df1e60c45dd6aa533b01a392f015d32f755",
      "82666df1e60c45dd6aa533b01a392f015d32f755"
    ],
    "patch_url": "https://github.com/hap-wi/roxy-wi/commit/82666df1e60c45dd6aa533b01a392f015d32f755.patch",
    "fix_commit_details": {
      "sha": "82666df1e60c45dd6aa533b01a392f015d32f755",
      "commit_date": "2022-07-08T17:43:13Z",
      "author": {
        "login": "Aidaho12",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "v6.1.1.0",
        "length": 60,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 240,
        "additions": 52,
        "deletions": 188
      },
      "files": [
        {
          "filename": "app/options.py",
          "status": "modified",
          "additions": 52,
          "deletions": 188,
          "patch": "@@ -61,10 +61,7 @@\n         print(e)\n \n if form.getvalue('getcert') is not None and serv is not None:\n-    cert_id = form.getvalue('getcert')\n-    if funct.checkAjaxInput(cert_id):\n-        print('error: Nice try')\n-        sys.exit()\n+    cert_id = funct.checkAjaxInput(form.getvalue('getcert'))\n \n     cert_path = sql.get_setting('cert_path')\n     commands = [\"openssl x509 -in \" + cert_path + \"/\" + cert_id + \" -text\"]\n@@ -74,10 +71,8 @@\n         print('error: Cannot connect to the server ' + e.args[0])\n \n if form.getvalue('delcert') is not None and serv is not None:\n-    if funct.checkAjaxInput(cert_id):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    cert_id = form.getvalue('delcert')\n+    cert_id = funct.checkAjaxInput(cert_id)\n     cert_path = sql.get_setting('cert_path')\n     commands = [\"sudo rm -f \" + cert_path + \"/\" + cert_id]\n     try:\n@@ -96,10 +91,7 @@\n     if form.getvalue('ssl_name') is None:\n         print('error: Please enter a desired name')\n     else:\n-        name = form.getvalue('ssl_name')\n-        if funct.checkAjaxInput(name):\n-            print('error: Nice try')\n-            sys.exit()\n+        name = funct.checkAjaxInput(form.getvalue('ssl_name'))\n \n     try:\n         with open(name, \"w\") as ssl_cert:\n@@ -132,10 +124,7 @@\n \n if form.getvalue('ipbackend') is not None and form.getvalue('backend_server') is None:\n     haproxy_sock_port = int(sql.get_setting('haproxy_sock_port'))\n-    backend = form.getvalue('ipbackend')\n-    if funct.checkAjaxInput(backend):\n-        print('error: Nice try')\n-        sys.exit()\n+    backend = funct.checkAjaxInput(form.getvalue('ipbackend'))\n     cmd = 'echo \"show servers state\"|nc %s %s |grep \"%s\" |awk \\'{print $4}\\'' % (serv, haproxy_sock_port, backend)\n     output, stderr = funct.subprocess_execute(cmd)\n     for i in output:\n@@ -146,23 +135,18 @@\n \n if form.getvalue('ipbackend') is not None and form.getvalue('backend_server') is not None:\n     haproxy_sock_port = int(sql.get_setting('haproxy_sock_port'))\n-    backend = form.getvalue('ipbackend')\n-    backend_server = form.getvalue('backend_server')\n-    if funct.checkAjaxInput(backend) or funct.checkAjaxInput(backend_server):\n-        print('error: Nice try')\n-        sys.exit()\n+    backend = funct.checkAjaxInput(form.getvalue('ipbackend'))\n+    backend_server = funct.checkAjaxInput(form.getvalue('backend_server'))\n     cmd = 'echo \"show servers state\"|nc %s %s |grep \"%s\" |grep \"%s\" |awk \\'{print $5\":\"$19}\\' |head -1' % (serv, haproxy_sock_port, backend, backend_server)\n     output, stderr = funct.subprocess_execute(cmd)\n     print(output[0])\n \n if form.getvalue('backend_ip') is not None:\n-    backend_backend = form.getvalue('backend_backend')\n-    backend_server = form.getvalue('backend_server')\n-    backend_ip = form.getvalue('backend_ip')\n-    backend_port = form.getvalue('backend_port')\n-    if any((funct.checkAjaxInput(backend_backend), funct.checkAjaxInput(backend_server), funct.checkAjaxInput(backend_ip), funct.checkAjaxInput(backend_port))):\n-        print('error: Nice try')\n-        sys.exit()\n+    backend_backend = funct.checkAjaxInput(form.getvalue('backend_backend'))\n+    backend_server = funct.checkAjaxInput(form.getvalue('backend_server'))\n+    backend_ip = funct.checkAjaxInput(form.getvalue('backend_ip'))\n+    backend_port = funct.checkAjaxInput(form.getvalue('backend_port'))\n+\n     if form.getvalue('backend_ip') is None:\n         print('error: Backend IP must be IP and not 0')\n         sys.exit()\n@@ -211,19 +195,13 @@\n         stderr = funct.master_slave_upload_and_restart(serv, cfg, just_save='save')\n \n if form.getvalue('maxconn_select') is not None:\n-    serv = form.getvalue('maxconn_select')\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n+    serv = funct.checkAjaxInput(form.getvalue('maxconn_select'))\n     funct.get_backends_from_config(serv, backends='frontend')\n \n if form.getvalue('maxconn_frontend') is not None:\n-    frontend = form.getvalue('maxconn_frontend')\n-    maxconn = form.getvalue('maxconn_int')\n+    frontend = funct.checkAjaxInput(form.getvalue('maxconn_frontend'))\n+    maxconn = funct.checkAjaxInput(form.getvalue('maxconn_int'))\n \n-    if funct.checkAjaxInput(frontend) or funct.checkAjaxInput(maxconn):\n-        print('error: Nice try')\n-        sys.exit()\n     if form.getvalue('maxconn_int') is None:\n         print('error: Maxconn must be integer and not 0')\n         sys.exit()\n@@ -297,12 +275,8 @@\n \n if form.getvalue('ip_for_delete') is not None:\n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n-    ip = form.getvalue('ip_for_delete')\n-    table = form.getvalue('table_for_delete')\n-\n-    if funct.checkAjaxInput(ip) or funct.checkAjaxInput(table):\n-        print('error: Nice try')\n-        sys.exit()\n+    ip = funct.checkAjaxInput(form.getvalue('ip_for_delete'))\n+    table = funct.checkAjaxInput(form.getvalue('table_for_delete'))\n \n     cmd = 'echo \"clear table %s key %s\" |nc %s %s' % (table, ip, serv, haproxy_sock_port)\n     output, stderr = funct.subprocess_execute(cmd)\n@@ -311,11 +285,7 @@\n \n if form.getvalue('table_for_clear') is not None:\n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n-    table = form.getvalue('table_for_clear')\n-\n-    if funct.checkAjaxInput(table):\n-        print('error: Nice try')\n-        sys.exit()\n+    table = funct.checkAjaxInput(form.getvalue('table_for_clear'))\n \n     cmd = 'echo \"clear table %s \" |nc %s %s' % (table, serv, haproxy_sock_port)\n     output, stderr = funct.subprocess_execute(cmd)\n@@ -334,12 +304,8 @@\n     env = Environment(loader=FileSystemLoader('templates/'), autoescape=True,\n                       extensions=['jinja2.ext.loopcontrols', 'jinja2.ext.do'], trim_blocks=True, lstrip_blocks=True)\n     template = env.get_template('ajax/list.html')\n-    list_id = form.getvalue('list_select_id')\n-    list_name = form.getvalue('list_select_name')\n-\n-    if funct.checkAjaxInput(list_id) or funct.checkAjaxInput(list_name):\n-        print('error: Nice try')\n-        sys.exit()\n+    list_id = funct.checkAjaxInput(form.getvalue('list_select_id'))\n+    list_name = funct.checkAjaxInput(form.getvalue('list_select_name'))\n \n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n     cmd = 'echo \"show acl #%s\"|nc %s %s' % (list_id, serv, haproxy_sock_port)\n@@ -351,17 +317,12 @@\n if form.getvalue('list_id_for_delete') is not None:\n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n     lists_path = sql.get_setting('lists_path')\n-    lib_path = funct.get_config_var('main', 'lib_path')\n-    ip_id = form.getvalue('list_ip_id_for_delete')\n-    ip = form.getvalue('list_ip_for_delete')\n-    list_id = form.getvalue('list_id_for_delete')\n-    list_name = form.getvalue('list_name')\n-    user_group = funct.get_user_group(id=1)\n-\n-    if any((funct.checkAjaxInput(ip_id), funct.checkAjaxInput(ip), funct.checkAjaxInput(list_id), funct.checkAjaxInput(list_name))):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    lib_path = funct.checkAjaxInput(funct.get_config_var('main', 'lib_path'))\n+    ip_id = funct.checkAjaxInput(form.getvalue('list_ip_id_for_delete'))\n+    ip = funct.checkAjaxInput(form.getvalue('list_ip_for_delete'))\n+    list_id = funct.checkAjaxInput(form.getvalue('list_id_for_delete'))\n+    list_name = funct.checkAjaxInput(form.getvalue('list_name'))\n+    user_group = funct.checkAjaxInput(funct.get_user_group(id=1))\n     cmd = \"sed -i 's!%s$!!' %s/%s/%s/%s\" % (ip, lib_path, lists_path, user_group, list_name)\n     cmd1 = \"sed -i '/^$/d' %s/%s/%s/%s\" % (lib_path, lists_path, user_group, list_name)\n     output, stderr = funct.subprocess_execute(cmd)\n@@ -392,14 +353,9 @@\n     ip = form.getvalue('list_ip_for_add')\n     ip = ip.strip()\n     ip = funct.is_ip_or_dns(ip)\n-    list_id = form.getvalue('list_id_for_add')\n-    list_name = form.getvalue('list_name')\n-    user_group = funct.get_user_group(id=1)\n-\n-    if any((funct.checkAjaxInput(lists_path), funct.checkAjaxInput(list_id), funct.checkAjaxInput(list_name))):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    list_id = funct.checkAjaxInput(form.getvalue('list_id_for_add'))\n+    list_name = funct.checkAjaxInput(form.getvalue('list_name'))\n+    user_group = funct.checkAjaxInput(funct.get_user_group(id=1))\n     cmd = 'echo \"add acl #%s %s\" |nc %s %s' % (list_id, ip, serv, haproxy_sock_port)\n     output, stderr = funct.subprocess_execute(cmd)\n     if output[0]:\n@@ -423,15 +379,7 @@\n \n     env = Environment(loader=FileSystemLoader('templates'), autoescape=True,\n                       extensions=['jinja2.ext.loopcontrols', 'jinja2.ext.do'], trim_blocks=True, lstrip_blocks=True)\n-    serv = form.getvalue('sessions_select')\n-\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n-\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n+    serv = funct.checkAjaxInput(form.getvalue('sessions_select'))\n \n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n \n@@ -444,16 +392,11 @@\n     print(template)\n \n if form.getvalue('sessions_select_show') is not None:\n-    serv = form.getvalue('sessions_select_show')\n-    sess_id = form.getvalue('sessions_select_id')\n-\n-    if funct.checkAjaxInput(serv) or funct.checkAjaxInput(sess_id):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    serv = funct.checkAjaxInput(form.getvalue('sessions_select_show'))\n+    sess_id = funct.checkAjaxInput(form.getvalue('sessions_select_id'))\n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n-\n     cmd = 'echo \"show sess %s\" |nc %s %s' % (sess_id, serv, haproxy_sock_port)\n+\n     output, stderr = funct.subprocess_execute(cmd)\n \n     if stderr:\n@@ -464,16 +407,7 @@\n \n if form.getvalue('session_delete_id') is not None:\n     haproxy_sock_port = sql.get_setting('haproxy_sock_port')\n-    sess_id = form.getvalue('session_delete_id')\n-\n-    if funct.checkAjaxInput(sess_id):\n-        print('error: Nice try')\n-        sys.exit()\n-\n-    if funct.checkAjaxInput(sess_id):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    sess_id = funct.checkAjaxInput(form.getvalue('session_delete_id'))\n     cmd = 'echo \"shutdown session %s\" |nc %s %s' % (sess_id, serv, haproxy_sock_port)\n     output, stderr = funct.subprocess_execute(cmd)\n     if output[0] != '':\n@@ -597,15 +531,7 @@\n     print(\"success: Apache has been %s\" % action)\n \n if form.getvalue('action_service') is not None:\n-    action = form.getvalue('action_service')\n-\n-    if funct.checkAjaxInput(action):\n-        print('error: Nice try')\n-        sys.exit()\n-\n-    if funct.checkAjaxInput(action):\n-        print('error: Nice try')\n-        sys.exit()\n+    action = funct.checkAjaxInput(form.getvalue('action_service'))\n \n     if action not in ('start', 'stop', 'restart'):\n         print('error: wrong action')\n@@ -1233,12 +1159,8 @@ async def get_runner_overviewServers(**kwargs):\n if form.getvalue('servaction') is not None:\n     server_state_file = sql.get_setting('server_state_file')\n     haproxy_sock = sql.get_setting('haproxy_sock')\n-    enable = form.getvalue('servaction')\n-    backend = form.getvalue('servbackend')\n-\n-    if funct.checkAjaxInput(enable) or funct.checkAjaxInput(backend):\n-        print('error: Nice try')\n-        sys.exit()\n+    enable = funct.checkAjaxInput(form.getvalue('servaction'))\n+    backend = funct.checkAjaxInput(form.getvalue('servbackend'))\n \n     cmd = 'echo \"{} {}\" |sudo socat stdio {}'.format(enable, backend, haproxy_sock)\n \n@@ -1281,12 +1203,8 @@ async def get_runner_overviewServers(**kwargs):\n if serv is not None and form.getvalue('right') is not None:\n     from jinja2 import Environment, FileSystemLoader\n \n-    left = form.getvalue('left')\n-    right = form.getvalue('right')\n-\n-    if funct.checkAjaxInput(left) or funct.checkAjaxInput(right):\n-        print('error: Nice try')\n-        sys.exit()\n+    left = funct.checkAjaxInput(form.getvalue('left'))\n+    right = funct.checkAjaxInput(form.getvalue('right'))\n \n     if form.getvalue('service') == 'nginx':\n         configs_dir = funct.get_config_var('configs', 'nginx_save_configs_dir')\n@@ -2554,15 +2472,7 @@ async def get_runner_overviewServers(**kwargs):\n \n if form.getvalue('sshdel') is not None:\n     lib_path = funct.get_config_var('main', 'lib_path')\n-    sshdel = form.getvalue('sshdel')\n-\n-    if funct.checkAjaxInput(sshdel):\n-        print('error: Nice try')\n-        sys.exit()\n-\n-    if funct.checkAjaxInput(sshdel):\n-        print('error: Nice try')\n-        sys.exit()\n+    sshdel = funct.checkAjaxInput(form.getvalue('sshdel'))\n \n     for sshs in sql.select_ssh(id=sshdel):\n         ssh_enable = sshs.enable\n@@ -2612,11 +2522,7 @@ async def get_runner_overviewServers(**kwargs):\n     import paramiko\n \n     user_group = funct.get_user_group()\n-    name = form.getvalue('name')\n-\n-    if funct.checkAjaxInput(name):\n-        print('error: Nice try')\n-        sys.exit()\n+    name = funct.checkAjaxInput(form.getvalue('name'))\n \n     try:\n         key = paramiko.pkey.load_private_key(form.getvalue('ssh_cert'))\n@@ -2913,11 +2819,7 @@ async def get_runner_overviewServers(**kwargs):\n         funct.logging('SMON', ' Has been update the server ' + ip + ' to SMON ', haproxywi=1, login=1)\n \n if form.getvalue('showBytes') is not None:\n-    serv = form.getvalue('showBytes')\n-\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n+    serv = funct.checkAjaxInput(form.getvalue('showBytes'))\n \n     port = sql.get_setting('haproxy_sock_port')\n     bin_bout = []\n@@ -2970,12 +2872,8 @@ async def get_runner_overviewServers(**kwargs):\n         print('error: cannot connect to Nginx stat page')\n \n if form.getvalue('waf_rule_id'):\n-    enable = form.getvalue('waf_en')\n-    rule_id = form.getvalue('waf_rule_id')\n-\n-    if funct.checkAjaxInput(enable) or funct.checkAjaxInput(rule_id):\n-        print('error: Nice try')\n-        sys.exit()\n+    enable = funct.checkAjaxInput(form.getvalue('waf_en'))\n+    rule_id = funct.checkAjaxInput(form.getvalue('waf_rule_id'))\n \n     haproxy_path = sql.get_setting('haproxy_dir')\n     rule_file = sql.select_waf_rule_by_id(rule_id)\n@@ -3051,15 +2949,7 @@ async def get_runner_overviewServers(**kwargs):\n     os.system(\"rm -f %s\" % script)\n \n if form.getvalue('uploadovpn'):\n-    name = form.getvalue('ovpnname')\n-\n-    if funct.checkAjaxInput(name):\n-        print('error: Nice try')\n-        sys.exit()\n-\n-    if funct.checkAjaxInput(name):\n-        print('error: Nice try')\n-        sys.exit()\n+    name = funct.checkAjaxInput(form.getvalue('ovpnname'))\n \n     ovpn_file = os.path.dirname('/tmp/') + \"/\" + name + '.ovpn'\n \n@@ -3087,11 +2977,7 @@ async def get_runner_overviewServers(**kwargs):\n     funct.logging(\"localhost\", \" has been uploaded a new ovpn file %s\" % ovpn_file, haproxywi=1, login=1)\n \n if form.getvalue('openvpndel') is not None:\n-    openvpndel = form.getvalue('openvpndel')\n-\n-    if funct.checkAjaxInput(openvpndel):\n-        print('error: Nice try')\n-        sys.exit()\n+    openvpndel = funct.checkAjaxInput(form.getvalue('openvpndel'))\n \n     cmd = 'sudo openvpn3 config-remove --config /tmp/%s.ovpn --force' % openvpndel\n     try:\n@@ -3103,12 +2989,8 @@ async def get_runner_overviewServers(**kwargs):\n         funct.logging('localhost', e.args[0], haproxywi=1)\n \n if form.getvalue('actionvpn') is not None:\n-    openvpn = form.getvalue('openvpnprofile')\n-    action = form.getvalue('actionvpn')\n-\n-    if funct.checkAjaxInput(openvpn) or funct.checkAjaxInput(action):\n-        print('error: Nice try')\n-        sys.exit()\n+    openvpn = funct.checkAjaxInput(form.getvalue('openvpnprofile'))\n+    action = funct.checkAjaxInput(form.getvalue('actionvpn'))\n \n     if action == 'start':\n         cmd = 'sudo openvpn3 session-start --config /tmp/%s.ovpn' % openvpn\n@@ -3125,12 +3007,7 @@ async def get_runner_overviewServers(**kwargs):\n         funct.logging('localhost', e.args[0], haproxywi=1)\n \n if form.getvalue('scan_ports') is not None:\n-    serv_id = form.getvalue('scan_ports')\n-\n-    if funct.checkAjaxInput(serv_id):\n-        print('error: Nice try')\n-        sys.exit()\n-\n+    serv_id = funct.checkAjaxInput(form.getvalue('scan_ports'))\n     server = sql.select_servers(id=serv_id)\n     ip = ''\n \n@@ -3154,11 +3031,7 @@ async def get_runner_overviewServers(**kwargs):\n         print(template)\n \n if form.getvalue('viewFirewallRules') is not None:\n-    serv = form.getvalue('viewFirewallRules')\n-\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n+    serv = funct.checkAjaxInput(form.getvalue('viewFirewallRules'))\n \n     cmd = [\"sudo iptables -L INPUT -n --line-numbers|sed 's/  */ /g'|grep -v -E 'Chain|target'\"]\n     cmd1 = [\"sudo iptables -L IN_public_allow -n --line-numbers|sed 's/  */ /g'|grep -v -E 'Chain|target'\"]\n@@ -3186,11 +3059,6 @@ async def get_runner_overviewServers(**kwargs):\n \n if form.getvalue('geoipserv') is not None:\n     serv = form.getvalue('geoipserv')\n-\n-    if funct.checkAjaxInput(serv):\n-        print('error: Nice try')\n-        sys.exit()\n-\n     haproxy_dir = sql.get_setting('haproxy_dir')\n \n     cmd = [\"ls \" + haproxy_dir + \"/geoip/\"]\n@@ -4531,12 +4399,8 @@ async def get_runner_overviewServers(**kwargs):\n     user_uuid = cookie.get('uuid')\n     user_id = sql.get_user_id_by_uuid(user_uuid.value)\n     user_services = sql.select_user_services(user_id)\n-    server_id = form.getvalue('server_id')\n-    service = form.getvalue('service')\n-\n-    if funct.checkAjaxInput(server_id) or funct.checkAjaxInput(service):\n-        print('error: Nice try')\n-        sys.exit()\n+    server_id = funct.checkAjaxInput(form.getvalue('server_id'))\n+    service = funct.checkAjaxInput(form.getvalue('service'))\n \n     if '1' in user_services:\n         if service == 'haproxy':"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e53a7445c7ce745ce79b0eb575e090ec988deea7",
            "date": "2025-01-04T07:49:28Z",
            "author_login": "Aidaho12"
          },
          {
            "sha": "f3c7cf97f2981efed91f98d7bb73cc3614e9ca1e",
            "date": "2025-01-02T12:00:30Z",
            "author_login": "Aidaho12"
          },
          {
            "sha": "c8b1822e8ae63d577cb529bfb12fd4057b69d1d5",
            "date": "2024-12-28T08:09:20Z",
            "author_login": "Aidaho12"
          },
          {
            "sha": "8ec6d0a0d353f20eb37788b64db6132f3d1bb365",
            "date": "2024-12-26T19:54:48Z",
            "author_login": "Aidaho12"
          },
          {
            "sha": "6ba2567bdd2116097150178b7720b67170614161",
            "date": "2024-12-26T11:04:53Z",
            "author_login": "Aidaho12"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 10.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "Roxy-WI is a web interface for managing Haproxy, Nginx, Apache and Keepalived servers. Versions prior to 6.1.1.0 are subject to a remote code execution vulnerability. System commands can be run remotely via the subprocess_execute function without processing the inputs received from the user in the /app/options.py file. Attackers need not be authenticated to exploit this vulnerability. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-07-08T20:15:07.980",
    "last_modified": "2024-11-21T07:03:58.540",
    "fix_date": "2022-07-08T17:43:13Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/167805/Roxy-WI-Remote-Command-Execution.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/171648/Roxy-WI-6.1.0.0-Improper-Authentication-Control.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/171652/Roxy-WI-6.1.1.0-Remote-Code-Execution.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/172547/Roxy-WI-6.1.0.0-Remote-Command-Execution.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/hap-wi/roxy-wi/commit/82666df1e60c45dd6aa533b01a392f015d32f755",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/hap-wi/roxy-wi/security/advisories/GHSA-53r2-mq99-f532",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/167805/Roxy-WI-Remote-Command-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/171648/Roxy-WI-6.1.0.0-Improper-Authentication-Control.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/171652/Roxy-WI-6.1.1.0-Remote-Code-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "http://packetstormsecurity.com/files/172547/Roxy-WI-6.1.0.0-Remote-Command-Execution.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/hap-wi/roxy-wi/commit/82666df1e60c45dd6aa533b01a392f015d32f755",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/hap-wi/roxy-wi/security/advisories/GHSA-53r2-mq99-f532",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:11.466588",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "roxy-wi",
    "owner": "hap-wi",
    "created_at": "2018-01-15T05:58:01Z",
    "updated_at": "2025-01-13T06:59:27Z",
    "pushed_at": "2025-01-04T07:49:32Z",
    "size": 44327,
    "stars": 1563,
    "forks": 255,
    "open_issues": 6,
    "watchers": 1563,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 885470,
      "HTML": 754027,
      "JavaScript": 388825,
      "CSS": 70598,
      "Jinja": 52960,
      "Shell": 7056
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:57:11.087124"
  }
}