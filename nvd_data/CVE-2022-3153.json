{
  "cve_id": "CVE-2022-3153",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "1540d334a04d874c2aa9d26b82dbbcd4bc5a78de",
    "related_commits": [
      "1540d334a04d874c2aa9d26b82dbbcd4bc5a78de",
      "1540d334a04d874c2aa9d26b82dbbcd4bc5a78de"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1540d334a04d874c2aa9d26b82dbbcd4bc5a78de",
      "commit_date": "2022-09-07T14:20:26Z",
      "author": {
        "login": "brammool",
        "type": "User",
        "stats": {
          "total_commits": 16567,
          "average_weekly_commits": 15.382544103992572,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 874
        }
      },
      "commit_message": {
        "title": "patch 9.0.0404: crash when passing invalid arguments to assert_fails()",
        "length": 174,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 30,
        "additions": 28,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/testdir/test_assert.vim",
          "status": "modified",
          "additions": 17,
          "deletions": 2,
          "patch": "@@ -275,6 +275,21 @@ func Test_assert_fail_fails()\n   endtry\n   call assert_match(\"E1222: String or List required for argument 2\", exp)\n \n+  try\n+    call assert_equal(0, assert_fails('xxx', [#{one: 1}]))\n+  catch\n+    let exp = v:exception\n+  endtry\n+  call assert_match(\"E731: Using a Dictionary as a String\", exp)\n+\n+  let exp = ''\n+  try\n+    call assert_equal(0, assert_fails('xxx', ['E492', #{one: 1}]))\n+  catch\n+    let exp = v:exception\n+  endtry\n+  call assert_match(\"E731: Using a Dictionary as a String\", exp)\n+\n   try\n     call assert_equal(1, assert_fails('xxx', 'E492', '', 'burp'))\n   catch\n@@ -289,8 +304,8 @@ func Test_assert_fail_fails()\n   endtry\n   call assert_match(\"E1174: String required for argument 5\", exp)\n \n-  call assert_equal(1, assert_fails('c0', ['', '\\1']))\n-  call assert_match(\"Expected '\\\\\\\\\\\\\\\\1' but got 'E939: Positive count required: c0': c0\", v:errors[0])\n+  call assert_equal(1, assert_fails('c0', ['', '\\(.\\)\\1']))\n+  call assert_match(\"Expected '\\\\\\\\\\\\\\\\(.\\\\\\\\\\\\\\\\)\\\\\\\\\\\\\\\\1' but got 'E939: Positive count required: c0': c0\", v:errors[0])\n   call remove(v:errors, 0)\n endfunc\n "
        },
        {
          "filename": "src/testing.c",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -616,6 +616,11 @@ f_assert_fails(typval_T *argvars, typval_T *rettv)\n     in_assert_fails = TRUE;\n \n     do_cmdline_cmd(cmd);\n+\n+    // reset here for any errors reported below\n+    trylevel = save_trylevel;\n+    suppress_errthrow = FALSE;\n+\n     if (called_emsg == called_emsg_before)\n     {\n \tprepare_assert_error(&ga);\n@@ -654,6 +659,8 @@ f_assert_fails(typval_T *argvars, typval_T *rettv)\n \t    CHECK_LIST_MATERIALIZE(list);\n \t    tv = &list->lv_first->li_tv;\n \t    expected = tv_get_string_buf_chk(tv, buf);\n+\t    if (expected == NULL)\n+\t\tgoto theend;\n \t    if (!pattern_match(expected, actual, FALSE))\n \t    {\n \t\terror_found = TRUE;\n@@ -667,6 +674,8 @@ f_assert_fails(typval_T *argvars, typval_T *rettv)\n \t\t{\n \t\t    tv = &list->lv_u.mat.lv_last->li_tv;\n \t\t    expected = tv_get_string_buf_chk(tv, buf);\n+\t\t    if (expected == NULL)\n+\t\t\tgoto theend;\n \t\t    if (!pattern_match(expected, actual, FALSE))\n \t\t    {\n \t\t\terror_found = TRUE;"
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -703,6 +703,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    404,\n /**/\n     403,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fb49e3cde79de4ce558c86d21a56eb9d60aeabd5",
            "date": "2025-01-25T15:18:51Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "c729d6d154e097b439ff264b9736604824f4a5f4",
            "date": "2025-01-25T15:07:12Z",
            "author_login": "saccarosium"
          },
          {
            "sha": "d65aa1bbdb808ef8fecde6df240c48cc39a52a8e",
            "date": "2025-01-25T14:29:03Z",
            "author_login": "zeertzjq"
          },
          {
            "sha": "509a8d58f9a8ce00744114c1f21f0d951a559ecd",
            "date": "2025-01-25T14:26:09Z",
            "author_login": "pbnj"
          },
          {
            "sha": "99181205c5f8284a30f839107a12932924168f17",
            "date": "2025-01-25T13:54:28Z",
            "author_login": "chrisbra"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-476",
    "description": "NULL Pointer Dereference in GitHub repository vim/vim prior to 9.0.0404.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-08T15:15:08.283",
    "last_modified": "2024-11-21T07:18:56.257",
    "fix_date": "2022-09-07T14:20:26Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/1540d334a04d874c2aa9d26b82dbbcd4bc5a78de",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/68331124-620d-48bc-a8fa-cd947b26270a",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-16",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/vim/vim/commit/1540d334a04d874c2aa9d26b82dbbcd4bc5a78de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/68331124-620d-48bc-a8fa-cd947b26270a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-16",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.092453",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-26T05:55:44Z",
    "pushed_at": "2025-01-25T15:21:53Z",
    "size": 155300,
    "stars": 37307,
    "forks": 5538,
    "open_issues": 1502,
    "watchers": 37307,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 19563490,
      "C": 14392521,
      "Roff": 576344,
      "Makefile": 496830,
      "C++": 246793,
      "NSIS": 179173,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 19124,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388,
      "TeX": 225
    },
    "commit_activity": {
      "total_commits_last_year": 1869,
      "avg_commits_per_week": 35.94230769230769,
      "days_active_last_year": 322
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-26T07:35:34.408543"
  }
}