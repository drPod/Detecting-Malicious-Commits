{
  "cve_id": "CVE-2022-3272",
  "github_data": {
    "repository": "ikus060/rdiffweb",
    "fix_commit": "667657c6fe2b336c90be37f37fb92f65df4feee3",
    "related_commits": [
      "667657c6fe2b336c90be37f37fb92f65df4feee3",
      "667657c6fe2b336c90be37f37fb92f65df4feee3"
    ],
    "patch_url": "https://github.com/ikus060/rdiffweb/commit/667657c6fe2b336c90be37f37fb92f65df4feee3.patch",
    "fix_commit_details": {
      "sha": "667657c6fe2b336c90be37f37fb92f65df4feee3",
      "commit_date": "2022-09-24T11:31:16Z",
      "author": {
        "login": "ikus060",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Define field limit for username, email and root directory #223",
        "length": 62,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 86,
        "additions": 76,
        "deletions": 10
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 7,
          "deletions": 4,
          "patch": "@@ -107,26 +107,29 @@ Professional support for Rdiffweb is available by contacting [IKUS Soft](https:/\n \n # Changelog\n \n-## 2.4.8 (2022-09-23)\n+## 2.4.8 (2022-09-24)\n \n This releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n \n * Clean-up invalid path on error page\n+* Limit username field length [CVE-2022-3290](https://nvd.nist.gov/vuln/detail/CVE-2022-3290)\n+* Limit user's email field length [CVE-2022-3272](https://nvd.nist.gov/vuln/detail/CVE-2022-3272)\n+* Limit user's root directory field length [CVE-2022-3295](https://nvd.nist.gov/vuln/detail/CVE-2022-3295)\n \n ## 2.4.7 (2002-09-21)\n \n This releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n \n-* Generate a new session on login and 2FA #220\n-* Mitigate CSRF on user's settings #221\n+* Generate a new session on login and 2FA #220 [CVE-2022-3269](https://nvd.nist.gov/vuln/detail/CVE-2022-3269)\n+* Mitigate CSRF on user's settings #221 [CVE-2022-3274](https://nvd.nist.gov/vuln/detail/CVE-2022-3274)\n \n ## 2.4.6 (2022-09-20)\n \n This releases include a security fix. If you are using an earlier version, you should upgrade to this release immediately.\n \n * Support MarkupSafe<3 for Debian bookworm\n * Mitigate CSRF on user's notification settings #216 [CVE-2022-3233](https://nvd.nist.gov/vuln/detail/CVE-2022-3233)\n-* Mitigate CSRF on repository settings #217\n+* Mitigate CSRF on repository settings #217 [CVE-2022-3267](https://nvd.nist.gov/vuln/detail/CVE-2022-3267)\n * Use 'Secure' Attribute with Sensitive Cookie in HTTPS Session on HTTP Error #218 [CVE-2022-3174](https://nvd.nist.gov/vuln/detail/CVE-2022-3174)\n \n ## 2.4.5 (2002-09-16)"
        },
        {
          "filename": "rdiffweb/controller/page_admin.py",
          "status": "modified",
          "additions": 22,
          "deletions": 3,
          "patch": "@@ -41,6 +41,9 @@\n # Define the logger\n logger = logging.getLogger(__name__)\n \n+# Maximum file path\n+MAX_PATH = 260\n+\n \n def get_pyinfo():\n     try:\n@@ -166,11 +169,27 @@ def process_formdata(self, valuelist):\n \n class UserForm(CherryForm):\n     userid = StringField(_('UserID'))\n-    username = StringField(_('Username'), validators=[validators.data_required()])\n-    email = EmailField(_('Email'), validators=[validators.optional()])\n+    username = StringField(\n+        _('Username'),\n+        validators=[\n+            validators.data_required(),\n+            validators.length(max=256, message=_('Username too long.')),\n+        ],\n+    )\n+    email = EmailField(\n+        _('Email'),\n+        validators=[\n+            validators.optional(),\n+            validators.length(max=256, message=_('Email too long.')),\n+        ],\n+    )\n     password = PasswordField(_('Password'), validators=[validators.optional()])\n     user_root = StringField(\n-        _('Root directory'), description=_(\"Absolute path defining the location of the repositories for this user.\")\n+        _('Root directory'),\n+        description=_(\"Absolute path defining the location of the repositories for this user.\"),\n+        validators=[\n+            validators.length(max=MAX_PATH, message=_('Root directory too long.')),\n+        ],\n     )\n     role = SelectField(\n         _('User Role'),"
        },
        {
          "filename": "rdiffweb/controller/page_login.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -19,7 +19,7 @@\n import cherrypy\n from wtforms.fields import PasswordField, StringField\n from wtforms.fields.simple import HiddenField\n-from wtforms.validators import InputRequired\n+from wtforms.validators import InputRequired, Length\n \n from rdiffweb.controller import Controller, flash\n from rdiffweb.controller.cherrypy_wtf import CherryForm\n@@ -34,7 +34,7 @@\n class LoginForm(CherryForm):\n     login = StringField(\n         _('Username'),\n-        validators=[InputRequired()],\n+        validators=[InputRequired(), Length(max=256, message=_('Username too long.'))],\n         render_kw={\n             \"placeholder\": _('Username'),\n             \"autocorrect\": \"off\","
        },
        {
          "filename": "rdiffweb/controller/pref_general.py",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -38,7 +38,14 @@\n \n \n class UserProfileForm(CherryForm):\n-    email = EmailField(_('Email'), validators=[DataRequired(), Regexp(PATTERN_EMAIL, message=_(\"Invalid email.\"))])\n+    email = EmailField(\n+        _('Email'),\n+        validators=[\n+            DataRequired(),\n+            Length(max=256, message=_(\"Invalid email.\")),\n+            Regexp(PATTERN_EMAIL, message=_(\"Invalid email.\")),\n+        ],\n+    )\n \n \n class UserPasswordForm(CherryForm):"
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_admin.py",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -239,6 +239,33 @@ def test_add_without_user_root(self):\n         user = self.app.store.get_user('test6')\n         self.assertEqual('', user.user_root)\n \n+    def test_add_with_username_too_long(self):\n+        # Given a too long username\n+        username = \"test2\" * 52\n+        # When trying to create the user\n+        self._add_user(username, None, \"password\", \"/tmp/\", USER_ROLE)\n+        # Then an error is raised\n+        self.assertStatus(200)\n+        self.assertInBody(\"Username too long.\")\n+\n+    def test_add_with_email_too_long(self):\n+        # Given a too long username\n+        email = (\"test2\" * 50) + \"@test.com\"\n+        # When trying to create the user\n+        self._add_user(\"test2\", email, \"password\", \"/tmp/\", USER_ROLE)\n+        # Then an error is raised\n+        self.assertStatus(200)\n+        self.assertInBody(\"Email too long.\")\n+\n+    def test_add_with_user_root_too_long(self):\n+        # Given a too long user root\n+        user_root = \"/temp/\" * 50\n+        # When trying to create the user\n+        self._add_user(\"test2\", \"test@test,com\", \"password\", user_root, USER_ROLE)\n+        # Then an error is raised\n+        self.assertStatus(200)\n+        self.assertInBody(\"Root directory too long.\")\n+\n     def test_delete_user_with_not_existing_username(self):\n         \"\"\"\n         Verify failure to delete invalid username."
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_login.py",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -132,6 +132,12 @@ def test_getpage_without_username(self):\n         self.getPage('/login/', method='GET')\n         self.assertStatus('200 OK')\n \n+    def test_getpage_with_username_too_long(self):\n+        b = {'login': 'admin' * 52, 'password': 'admin123'}\n+        self.getPage('/login/', method='POST', body=b)\n+        self.assertStatus('200 OK')\n+        self.assertInBody('Username too long.')\n+\n     def test_getpage_with_empty_password(self):\n         \"\"\"\n         Check if authentication is failing without a password."
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_prefs.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -84,6 +84,10 @@ def test_change_email_with_invalid_email(self):\n         self._set_profile_info(\"test@test.com, test2@test.com\")\n         self.assertInBody(\"Invalid email\")\n \n+    def test_change_email_with_too_long(self):\n+        self._set_profile_info((\"test1\" * 50) + \"@test.com\")\n+        self.assertInBody(\"Invalid email\")\n+\n     def test_change_password(self):\n         # When udating user's password\n         self._set_password(self.PASSWORD, \"newpassword\", \"newpassword\")"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fb9b10fde29c125a7641a8daad96976bd2cf1307",
            "date": "2024-11-20T02:02:20Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9becf16f0a96fad246021256de58a204318687b8",
            "date": "2024-11-09T12:27:19Z",
            "author_login": "ikus060"
          },
          {
            "sha": "3364f0644d62590b65ad6610d74139edc8a1740f",
            "date": "2024-11-05T20:54:35Z",
            "author_login": "ikus060"
          },
          {
            "sha": "a96f583797b65a8f68d3780c1ed470c7989a56dc",
            "date": "2024-10-24T19:17:53Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9fad72d2a19b78be1e5b9dcd4e880e3f7496dbd0",
            "date": "2024-10-24T18:13:13Z",
            "author_login": "ikus060"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-130",
    "description": "Improper Handling of Length Parameter Inconsistency in GitHub repository ikus060/rdiffweb prior to 2.4.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-26T17:16:08.673",
    "last_modified": "2024-11-21T07:19:11.307",
    "fix_date": "2022-09-24T11:31:16Z"
  },
  "references": [
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/667657c6fe2b336c90be37f37fb92f65df4feee3",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/733678b9-daa1-4d6a-875a-382fa09a6e38",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/667657c6fe2b336c90be37f37fb92f65df4feee3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/733678b9-daa1-4d6a-875a-382fa09a6e38",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.290501",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rdiffweb",
    "owner": "ikus060",
    "created_at": "2012-10-22T14:14:23Z",
    "updated_at": "2025-01-12T13:25:42Z",
    "pushed_at": "2025-01-07T15:16:06Z",
    "size": 25971,
    "stars": 124,
    "forks": 28,
    "open_issues": 1,
    "watchers": 124,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 857869,
      "HTML": 104946,
      "JavaScript": 7655,
      "Shell": 3945,
      "CSS": 3081,
      "Dockerfile": 686
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:02:43.805427"
  }
}