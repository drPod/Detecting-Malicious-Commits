{
  "cve_id": "CVE-2022-3297",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "0ff01835a40f549c5c4a550502f62a2ac9ac447c",
    "related_commits": [
      "0ff01835a40f549c5c4a550502f62a2ac9ac447c",
      "0ff01835a40f549c5c4a550502f62a2ac9ac447c"
    ],
    "patch_url": "https://github.com/vim/vim/commit/0ff01835a40f549c5c4a550502f62a2ac9ac447c.patch",
    "fix_commit_details": {
      "sha": "0ff01835a40f549c5c4a550502f62a2ac9ac447c",
      "commit_date": "2022-09-24T18:20:30Z",
      "author": {
        "login": "brammool",
        "type": "User",
        "stats": {
          "total_commits": 16567,
          "average_weekly_commits": 15.411162790697674,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 874
        }
      },
      "commit_message": {
        "title": "patch 9.0.0579: using freed memory when 'tagfunc' wipes out buffer",
        "length": 241,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 63,
        "additions": 52,
        "deletions": 11
      },
      "files": [
        {
          "filename": "src/insexpand.c",
          "status": "modified",
          "additions": 31,
          "deletions": 9,
          "patch": "@@ -2490,7 +2490,8 @@ ins_compl_next_buf(buf_T *buf, int flag)\n \n     if (flag == 'w')\t\t// just windows\n     {\n-\tif (buf == curbuf || wp == NULL)  // first call for this flag/expansion\n+\tif (buf == curbuf || !win_valid(wp))\n+\t    // first call for this flag/expansion or window was closed\n \t    wp = curwin;\n \twhile ((wp = (wp->w_next != NULL ? wp->w_next : firstwin)) != curwin\n \t\t&& wp->w_buffer->b_scanned)\n@@ -3188,9 +3189,10 @@ enum\n  */\n typedef struct\n {\n-    char_u\t*e_cpt;\t\t\t// current entry in 'complete'\n+    char_u\t*e_cpt_copy;\t\t// copy of 'complete'\n+    char_u\t*e_cpt;\t\t\t// current entry in \"e_cpt_copy\"\n     buf_T\t*ins_buf;\t\t// buffer being scanned\n-    pos_T\t*cur_match_pos;\t\t\t// current match position\n+    pos_T\t*cur_match_pos;\t\t// current match position\n     pos_T\tprev_match_pos;\t\t// previous match position\n     int\t\tset_match_pos;\t\t// save first_match_pos/last_match_pos\n     pos_T\tfirst_match_pos;\t// first match position\n@@ -3257,7 +3259,8 @@ process_next_cpt_value(\n \tst->set_match_pos = TRUE;\n     }\n     else if (vim_strchr((char_u *)\"buwU\", *st->e_cpt) != NULL\n-\t    && (st->ins_buf = ins_compl_next_buf(st->ins_buf, *st->e_cpt)) != curbuf)\n+\t    && (st->ins_buf = ins_compl_next_buf(\n+\t\t\t\t\t   st->ins_buf, *st->e_cpt)) != curbuf)\n     {\n \t// Scan a buffer, but not the current one.\n \tif (st->ins_buf->b_ml.ml_mfp != NULL)   // loaded buffer\n@@ -3756,19 +3759,30 @@ get_next_completion_match(int type, ins_compl_next_state_T *st, pos_T *ini)\n     static int\n ins_compl_get_exp(pos_T *ini)\n {\n-    static ins_compl_next_state_T st;\n+    static ins_compl_next_state_T   st;\n+    static int\t\t\t    st_cleared = FALSE;\n     int\t\ti;\n     int\t\tfound_new_match;\n     int\t\ttype = ctrl_x_mode;\n \n     if (!compl_started)\n     {\n-\tFOR_ALL_BUFFERS(st.ins_buf)\n-\t    st.ins_buf->b_scanned = 0;\n+\tbuf_T *buf;\n+\n+\tFOR_ALL_BUFFERS(buf)\n+\t    buf->b_scanned = 0;\n+\tif (!st_cleared)\n+\t{\n+\t    CLEAR_FIELD(st);\n+\t    st_cleared = TRUE;\n+\t}\n \tst.found_all = FALSE;\n \tst.ins_buf = curbuf;\n-\tst.e_cpt = (compl_cont_status & CONT_LOCAL)\n-\t\t\t\t\t    ? (char_u *)\".\" : curbuf->b_p_cpt;\n+\tvim_free(st.e_cpt_copy);\n+\t// Make a copy of 'complete', if case the buffer is wiped out.\n+\tst.e_cpt_copy = vim_strsave((compl_cont_status & CONT_LOCAL)\n+\t\t\t\t\t    ? (char_u *)\".\" : curbuf->b_p_cpt);\n+\tst.e_cpt = st.e_cpt_copy == NULL ? (char_u *)\"\" : st.e_cpt_copy;\n \tst.last_match_pos = st.first_match_pos = *ini;\n     }\n     else if (st.ins_buf != curbuf && !buf_valid(st.ins_buf))\n@@ -4112,6 +4126,7 @@ ins_compl_next(\n     int\t    todo = count;\n     int\t    advance;\n     int\t    started = compl_started;\n+    buf_T   *orig_curbuf = curbuf;\n \n     // When user complete function return -1 for findstart which is next\n     // time of 'always', compl_shown_match become NULL.\n@@ -4144,6 +4159,13 @@ ins_compl_next(\n \t\t\t\t\t\t\t&num_matches) == -1)\n \treturn -1;\n \n+    if (curbuf != orig_curbuf)\n+    {\n+\t// In case some completion function switched buffer, don't want to\n+\t// insert the completion elsewhere.\n+\treturn -1;\n+    }\n+\n     // Insert the text of the new completion, or the compl_leader.\n     if (compl_no_insert && !started)\n     {"
        },
        {
          "filename": "src/move.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -683,6 +683,7 @@ cursor_valid(void)\n     void\n validate_cursor(void)\n {\n+    check_cursor();\n     check_cursor_moved(curwin);\n     if ((curwin->w_valid & (VALID_WCOL|VALID_WROW)) != (VALID_WCOL|VALID_WROW))\n \tcurs_columns(TRUE);"
        },
        {
          "filename": "src/testdir/test_ins_complete.vim",
          "status": "modified",
          "additions": 18,
          "deletions": 2,
          "patch": "@@ -547,9 +547,8 @@ func Test_pum_with_preview_win()\n \n   call writefile(lines, 'Xpreviewscript')\n   let buf = RunVimInTerminal('-S Xpreviewscript', #{rows: 12})\n-  call TermWait(buf, 50)\n   call term_sendkeys(buf, \"Gi\\<C-X>\\<C-O>\")\n-  call TermWait(buf, 100)\n+  call TermWait(buf, 200)\n   call term_sendkeys(buf, \"\\<C-N>\")\n   call VerifyScreenDump(buf, 'Test_pum_with_preview_win', {})\n \n@@ -2172,4 +2171,21 @@ func Test_ins_complete_end_of_line()\n   bwipe!\n endfunc\n \n+func s:Tagfunc(t,f,o)\n+  bwipe!\n+  return []\n+endfunc\n+\n+\" This was using freed memory, since 'complete' was in a wiped out buffer.\n+\" Also using a window that was closed.\n+func Test_tagfunc_wipes_out_buffer()\n+  new\n+  set complete=.,t,w,b,u,i\n+  se tagfunc=s:Tagfunc\n+  sil norm i\u000e\n+\n+  bwipe!\n+endfunc\n+\n+\n \" vim: shiftwidth=2 sts=2 expandtab"
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -699,6 +699,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    579,\n /**/\n     578,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-416",
    "description": "Use After Free in GitHub repository vim/vim prior to 9.0.0579.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-25T19:15:09.673",
    "last_modified": "2024-11-21T07:19:14.617",
    "fix_date": "2022-09-24T18:20:30Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/0ff01835a40f549c5c4a550502f62a2ac9ac447c",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1aa9ec92-0355-4710-bf85-5bce9effa01c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4QI7AETXBHPC7SGA77Q7O5IEGULWYET7/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GTBVD4J2SKVSWK4VBN5JP5OEVK6GDS3N/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LSSEWQLK55MCNT4Z2IIJEJYEI5HLCODI/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-16",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/vim/vim/commit/0ff01835a40f549c5c4a550502f62a2ac9ac447c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1aa9ec92-0355-4710-bf85-5bce9effa01c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4QI7AETXBHPC7SGA77Q7O5IEGULWYET7/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GTBVD4J2SKVSWK4VBN5JP5OEVK6GDS3N/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LSSEWQLK55MCNT4Z2IIJEJYEI5HLCODI/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.gentoo.org/glsa/202305-16",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.286252",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}