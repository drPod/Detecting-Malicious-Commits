{
  "cve_id": "CVE-2022-3364",
  "github_data": {
    "repository": "ikus060/rdiffweb",
    "fix_commit": "b62c479ff6979563c7c23e7182942bc4f460a2c7",
    "related_commits": [
      "b62c479ff6979563c7c23e7182942bc4f460a2c7",
      "b62c479ff6979563c7c23e7182942bc4f460a2c7"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b62c479ff6979563c7c23e7182942bc4f460a2c7",
      "commit_date": "2022-09-26T00:07:21Z",
      "author": {
        "login": "ikus060",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Limit user's fullname and Token name field length",
        "length": 49,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 63,
        "additions": 57,
        "deletions": 6
      },
      "files": [
        {
          "filename": "rdiffweb/controller/page_admin_users.py",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -76,7 +76,13 @@ class UserForm(CherryForm):\n             validators.length(max=256, message=_('Username too long.')),\n         ],\n     )\n-    fullname = StringField(_('Fullname'), validators=[validators.optional()])\n+    fullname = StringField(\n+        _('Fullname'),\n+        validators=[\n+            validators.optional(),\n+            validators.length(max=256, message=_('Fullname too long.')),\n+        ],\n+    )\n     email = EmailField(\n         _('Email'),\n         validators=["
        },
        {
          "filename": "rdiffweb/controller/page_pref_general.py",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -25,7 +25,7 @@\n import cherrypy\n from wtforms.fields import HiddenField, PasswordField, StringField, SubmitField\n from wtforms.fields.html5 import EmailField\n-from wtforms.validators import DataRequired, EqualTo, InputRequired, Length, Regexp\n+from wtforms.validators import DataRequired, EqualTo, InputRequired, Length, Optional, Regexp\n \n from rdiffweb.controller import Controller, flash\n from rdiffweb.controller.form import CherryForm\n@@ -40,7 +40,13 @@\n class UserProfileForm(CherryForm):\n     action = HiddenField(default='set_profile_info')\n     username = StringField(_('Username'), render_kw={'readonly': True})\n-    fullname = StringField(_('Fullname'))\n+    fullname = StringField(\n+        _('Fullname'),\n+        validators=[\n+            Optional(),\n+            Length(max=256, message=_('Fullname too long.')),\n+        ],\n+    )\n     email = EmailField(\n         _('Email'),\n         validators=["
        },
        {
          "filename": "rdiffweb/controller/page_pref_tokens.py",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -20,7 +20,7 @@\n \n import cherrypy\n from wtforms.fields import DateField, HiddenField, StringField, SubmitField\n-from wtforms.validators import DataRequired, Optional\n+from wtforms.validators import DataRequired, Length, Optional\n \n from rdiffweb.controller import Controller, flash\n from rdiffweb.controller.filter_authorization import is_maintainer\n@@ -38,7 +38,10 @@ class TokenForm(CherryForm):\n         description=_(\n             'Used only to identify the purpose of the token. For example, the application that uses the token.'\n         ),\n-        validators=[DataRequired()],\n+        validators=[\n+            DataRequired(),\n+            Length(max=256, message=_('Token name too long')),\n+        ],\n     )\n     expiration = DateField(\n         _('Expiration date'),"
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_admin_users.py",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -58,7 +58,7 @@ def _store_quota(self, userobj, value):\n     def _load_quota(self, userobj):\n         return self._quota.get(userobj.username, 0)\n \n-    def _add_user(self, username=None, email=None, password=None, user_root=None, role=None, mfa=None):\n+    def _add_user(self, username=None, email=None, password=None, user_root=None, role=None, mfa=None, fullname=None):\n         b = {}\n         b['action'] = 'add'\n         if username is not None:\n@@ -73,6 +73,8 @@ def _add_user(self, username=None, email=None, password=None, user_root=None, ro\n             b['role'] = str(role)\n         if mfa is not None:\n             b['mfa'] = str(mfa)\n+        if fullname is not None:\n+            b['fullname'] = str(fullname)\n         self.getPage(\"/admin/users/\", method='POST', body=b)\n \n     def _edit_user(\n@@ -275,6 +277,15 @@ def test_add_with_user_root_too_long(self):\n         self.assertStatus(200)\n         self.assertInBody(\"Root directory too long.\")\n \n+    def test_add_with_fullname_too_long(self):\n+        # Given a too long user root\n+        fullname = \"fullname\" * 50\n+        # When trying to create the user\n+        self._add_user(\"test2\", \"test@test,com\", \"password\", \"/tmp/\", UserObject.USER_ROLE, fullname=fullname)\n+        # Then an error is raised\n+        self.assertStatus(200)\n+        self.assertInBody(\"Fullname too long.\")\n+\n     def test_delete_user_with_not_existing_username(self):\n         \"\"\"\n         Verify failure to delete invalid username."
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_prefs_general.py",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -109,6 +109,18 @@ def test_change_fullname_method_get(self):\n         user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n         self.assertEqual(\"\", user.fullname)\n \n+    def test_change_fullname_too_long(self):\n+        # Given an authenticated user\n+        # When update the fullname\n+        self._set_profile_info(\"test@test.com\", \"Fullname\" * 50)\n+        # Then page return with error message\n+        self.assertStatus(200)\n+        self.assertNotInBody(\"Profile updated successfully.\")\n+        self.assertInBody(\"Fullname too long.\")\n+        # Then database is not updated\n+        user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n+        self.assertEqual(\"\", user.fullname)\n+\n     def test_change_email(self):\n         self._set_profile_info(\"test@test.com\")\n         self.assertStatus(200)"
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_prefs_tokens.py",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -78,6 +78,19 @@ def test_add_access_token_without_name(self):\n         # Then access token is not created\n         self.assertEqual(0, Token.query.filter(Token.userid == userobj.userid, Token.name == 'test-token-name').count())\n \n+    def test_add_access_token_with_name_too_long(self):\n+        # Given an existing user\n+        # When adding a new access token with name too long.\n+        self.getPage(\n+            \"/prefs/tokens\",\n+            method='POST',\n+            body={'action': 'add_access_token', 'name': 'token' * 52, 'expiration_time': ''},\n+        )\n+        # Then page return with error message\n+        self.assertStatus(200)\n+        # Then token name get displayed in the view\n+        self.assertInBody('Token name too long')\n+\n     def test_delete_access_token(self):\n         # Given an existing user with access_token\n         userobj = UserObject.get_user(self.USERNAME)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fb9b10fde29c125a7641a8daad96976bd2cf1307",
            "date": "2024-11-20T02:02:20Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9becf16f0a96fad246021256de58a204318687b8",
            "date": "2024-11-09T12:27:19Z",
            "author_login": "ikus060"
          },
          {
            "sha": "3364f0644d62590b65ad6610d74139edc8a1740f",
            "date": "2024-11-05T20:54:35Z",
            "author_login": "ikus060"
          },
          {
            "sha": "a96f583797b65a8f68d3780c1ed470c7989a56dc",
            "date": "2024-10-24T19:17:53Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9fad72d2a19b78be1e5b9dcd4e880e3f7496dbd0",
            "date": "2024-10-24T18:13:13Z",
            "author_login": "ikus060"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-29T21:15:11.883",
    "last_modified": "2024-11-21T07:19:22.757",
    "fix_date": "2022-09-26T00:07:21Z"
  },
  "references": [
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/b62c479ff6979563c7c23e7182942bc4f460a2c7",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e70ad507-1424-463b-bdf1-c4a6fbe6e720",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/b62c479ff6979563c7c23e7182942bc4f460a2c7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/e70ad507-1424-463b-bdf1-c4a6fbe6e720",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.303666",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rdiffweb",
    "owner": "ikus060",
    "created_at": "2012-10-22T14:14:23Z",
    "updated_at": "2025-01-12T13:25:42Z",
    "pushed_at": "2025-01-07T15:16:06Z",
    "size": 25971,
    "stars": 124,
    "forks": 28,
    "open_issues": 1,
    "watchers": 124,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 857869,
      "HTML": 104946,
      "JavaScript": 7655,
      "Shell": 3945,
      "CSS": 3081,
      "Dockerfile": 686
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:40:10.669064"
  }
}