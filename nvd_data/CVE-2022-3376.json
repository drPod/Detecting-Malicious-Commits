{
  "cve_id": "CVE-2022-3376",
  "github_data": {
    "repository": "ikus060/rdiffweb",
    "fix_commit": "2ffc2af65c8f8113b06e0b89929c604bcdf844b9",
    "related_commits": [
      "2ffc2af65c8f8113b06e0b89929c604bcdf844b9",
      "2ffc2af65c8f8113b06e0b89929c604bcdf844b9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "2ffc2af65c8f8113b06e0b89929c604bcdf844b9",
      "commit_date": "2022-10-02T12:31:05Z",
      "author": {
        "login": "ikus060",
        "type": "User",
        "stats": {
          "total_commits": 1123,
          "average_weekly_commits": 1.75195007800312,
          "total_additions": 294030,
          "total_deletions": 240959,
          "weeks_active": 268
        }
      },
      "commit_message": {
        "title": "Enforce password policy new password cannot be set as new password",
        "length": 66,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 65,
        "additions": 49,
        "deletions": 16
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -133,6 +133,7 @@ This next release focus on two-factor-authentication as a measure to increase se\n * Enforce permission on /etc/rdiffweb configuration folder\n * Enforce validation on fullname, username and email\n * Limit incorrect attempts to change the user's password to prevent brute force attacks #225 [CVE-2022-3273](https://nvd.nist.gov/vuln/detail/CVE-2022-3273)\n+* Enforce password policy new password cannot be set as new password [CVE-2022-3376](https://nvd.nist.gov/vuln/detail/CVE-2022-3376)\n \n Breaking changes:\n "
        },
        {
          "filename": "rdiffweb/controller/page_pref_general.py",
          "status": "modified",
          "additions": 24,
          "deletions": 12,
          "patch": "@@ -88,6 +88,13 @@ def is_submitted(self):\n         # Validate only if action is set_profile_info\n         return super().is_submitted() and self.action.data == 'set_password'\n \n+    def validate_new(self, field):\n+        \"\"\"\n+        Make sure new password if not equals to old password.\n+        \"\"\"\n+        if self.new.data and self.new.data == self.current.data:\n+            raise ValueError(_('The new password must be different from the current password.'))\n+\n     def populate_obj(self, user):\n         # Check if current password is \"valid\" if Not, rate limit the\n         # number of attempts and logout user after too many invalid attempts.\n@@ -102,17 +109,19 @@ def populate_obj(self, user):\n                     level='warning',\n                 )\n                 raise cherrypy.HTTPRedirect('/login/')\n-            flash(_(\"Wrong current password.\"), level='warning')\n-        else:\n-            # Clear number of attempts\n-            if CHANGE_PASSWORD_ATTEMPTS in cherrypy.session:\n-                del cherrypy.session[CHANGE_PASSWORD_ATTEMPTS]\n-            # If Valid, update password\n-            try:\n-                user.set_password(self.new.data)\n-                flash(_(\"Password updated successfully.\"), level='success')\n-            except ValueError as e:\n-                flash(str(e), level='warning')\n+            self.current.errors = [_(\"Wrong current password.\")]\n+            return False\n+\n+        # Clear number of attempts\n+        if CHANGE_PASSWORD_ATTEMPTS in cherrypy.session:\n+            del cherrypy.session[CHANGE_PASSWORD_ATTEMPTS]\n+\n+        try:\n+            user.set_password(self.new.data)\n+            return True\n+        except ValueError as e:\n+            self.new.errors = [str(e)]\n+            return False\n \n \n class RefreshForm(CherryForm):\n@@ -151,11 +160,14 @@ def default(self, **kwargs):\n             if profile_form.validate():\n                 profile_form.populate_obj(self.app.currentuser)\n                 flash(_(\"Profile updated successfully.\"), level='success')\n+                raise cherrypy.HTTPRedirect(\"\")\n             else:\n                 flash(profile_form.error_message, level='error')\n         elif password_form.is_submitted():\n             if password_form.validate():\n-                password_form.populate_obj(self.app.currentuser)\n+                if password_form.populate_obj(self.app.currentuser):\n+                    flash(_(\"Password updated successfully.\"), level='success')\n+                    raise cherrypy.HTTPRedirect(\"\")\n             else:\n                 flash(password_form.error_message, level='error')\n         elif refresh_form.is_submitted():"
        },
        {
          "filename": "rdiffweb/controller/tests/test_page_prefs_general.py",
          "status": "modified",
          "additions": 24,
          "deletions": 4,
          "patch": "@@ -82,7 +82,8 @@ def test_change_username_noop(self):\n             method='POST',\n             body={'action': 'set_profile_info', 'email': 'test@test.com', 'username': 'test'},\n         )\n-        self.assertStatus(200)\n+        self.assertStatus(303)\n+        self.getPage(self.PREFS)\n         self.assertInBody(\"Profile updated successfully.\")\n         # Then database is updated with fullname\n         user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n@@ -105,14 +106,16 @@ def test_change_fullname(self, new_fullname, expected_valid):\n         # Given an authenticated user\n         # When update the fullname\n         self._set_profile_info(\"test@test.com\", new_fullname)\n-        self.assertStatus(200)\n         if expected_valid:\n+            self.assertStatus(303)\n+            self.getPage(self.PREFS)\n             self.assertInBody(\"Profile updated successfully.\")\n             # Then database is updated with fullname\n             self.assertInBody(new_fullname)\n             user = UserObject.query.filter(UserObject.username == self.USERNAME).first()\n             self.assertEqual(new_fullname, user.fullname)\n         else:\n+            self.assertStatus(200)\n             self.assertNotInBody(\"Profile updated successfully.\")\n \n     def test_change_fullname_method_get(self):\n@@ -139,7 +142,8 @@ def test_change_fullname_too_long(self):\n \n     def test_change_email(self):\n         self._set_profile_info(\"test@test.com\")\n-        self.assertStatus(200)\n+        self.assertStatus(303)\n+        self.getPage(self.PREFS)\n         self.assertInBody(\"Profile updated successfully.\")\n \n     @parameterized.expand(\n@@ -156,11 +160,13 @@ def test_change_email(self):\n     )\n     def test_change_email_with_invalid_email(self, new_email, expected_valid):\n         self._set_profile_info(new_email)\n-        self.assertStatus(200)\n         if expected_valid:\n+            self.assertStatus(303)\n+            self.getPage(self.PREFS)\n             self.assertInBody(\"Profile updated successfully.\")\n             self.assertNotInBody(\"Must be a valid email address.\")\n         else:\n+            self.assertStatus(200)\n             self.assertNotInBody(\"Profile updated successfully.\")\n             self.assertInBody(\"Must be a valid email address.\")\n \n@@ -172,6 +178,10 @@ def test_change_password(self):\n         self.listener.user_password_changed.reset_mock()\n         # When udating user's password\n         self._set_password(self.PASSWORD, \"pr3j5Dwi\", \"pr3j5Dwi\")\n+        # Then user is redirect to same page\n+        self.assertStatus(303)\n+        # Then the page return success message.\n+        self.getPage(self.PREFS)\n         self.assertInBody(\"Password updated successfully.\")\n         # Then a notification is raised\n         self.listener.user_password_changed.assert_called_once()\n@@ -208,6 +218,16 @@ def test_change_password_too_many_attemps(self):\n         self.assertStatus(200)\n         self.assertInBody('You were logged out because you entered the wrong password too many times.')\n \n+    def test_change_password_with_same_value(self):\n+        # Given a user with a password\n+        self._set_password(self.PASSWORD, \"pr3j5Dwi\", \"pr3j5Dwi\")\n+        self.assertStatus(303)\n+        # When updating the pasword with the same password\n+        self._set_password(\"pr3j5Dwi\", \"pr3j5Dwi\", \"pr3j5Dwi\")\n+        self.assertStatus(200)\n+        # Then an error should be displayed\n+        self.assertInBody(\"The new password must be different from the current password.\")\n+\n     def test_change_password_method_get(self):\n         # Given an authenticated user\n         # Trying to update password with GET method"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fb9b10fde29c125a7641a8daad96976bd2cf1307",
            "date": "2024-11-20T02:02:20Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9becf16f0a96fad246021256de58a204318687b8",
            "date": "2024-11-09T12:27:19Z",
            "author_login": "ikus060"
          },
          {
            "sha": "3364f0644d62590b65ad6610d74139edc8a1740f",
            "date": "2024-11-05T20:54:35Z",
            "author_login": "ikus060"
          },
          {
            "sha": "a96f583797b65a8f68d3780c1ed470c7989a56dc",
            "date": "2024-10-24T19:17:53Z",
            "author_login": "ikus060"
          },
          {
            "sha": "9fad72d2a19b78be1e5b9dcd4e880e3f7496dbd0",
            "date": "2024-10-24T18:13:13Z",
            "author_login": "ikus060"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-521",
    "description": "Weak Password Requirements in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-10-06T18:16:21.107",
    "last_modified": "2024-11-21T07:19:24.040",
    "fix_date": "2022-10-02T12:31:05Z"
  },
  "references": [
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/2ffc2af65c8f8113b06e0b89929c604bcdf844b9",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/a9021e93-6d18-4ac1-98ce-550c4697a4ed",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ikus060/rdiffweb/commit/2ffc2af65c8f8113b06e0b89929c604bcdf844b9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/a9021e93-6d18-4ac1-98ce-550c4697a4ed",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.312625",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rdiffweb",
    "owner": "ikus060",
    "created_at": "2012-10-22T14:14:23Z",
    "updated_at": "2025-01-12T13:25:42Z",
    "pushed_at": "2025-01-07T15:16:06Z",
    "size": 25971,
    "stars": 124,
    "forks": 28,
    "open_issues": 1,
    "watchers": 124,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 857869,
      "HTML": 104946,
      "JavaScript": 7655,
      "Shell": 3945,
      "CSS": 3081,
      "Dockerfile": 686
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:40:10.669064"
  }
}