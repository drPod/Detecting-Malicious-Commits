{
  "cve_id": "CVE-2022-35861",
  "github_data": {
    "repository": "pyenv/pyenv",
    "fix_commit": "22fa683571d98b59ea16e5fe48ac411c67939653",
    "related_commits": [
      "22fa683571d98b59ea16e5fe48ac411c67939653",
      "22fa683571d98b59ea16e5fe48ac411c67939653"
    ],
    "patch_url": "https://github.com/pyenv/pyenv/commit/22fa683571d98b59ea16e5fe48ac411c67939653.patch",
    "fix_commit_details": {
      "sha": "22fa683571d98b59ea16e5fe48ac411c67939653",
      "commit_date": "2022-07-16T22:01:04Z",
      "author": {
        "login": "comrumino",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "CVE-2022-35861: Fixed relative path traversal due to using version string in path (#2412)",
        "length": 89,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 25,
        "additions": 22,
        "deletions": 3
      },
      "files": [
        {
          "filename": "libexec/pyenv-version-file-read",
          "status": "modified",
          "additions": 10,
          "deletions": 3,
          "patch": "@@ -11,9 +11,16 @@ if [ -s \"$VERSION_FILE\" ]; then\n   IFS=\"${IFS}\"$'\\r'\n   sep=\n   while read -n 1024 -r version _ || [[ $version ]]; do\n-      [[ -z $version || $version == \\#* ]] && continue\n-      printf \"%s%s\" \"$sep\" \"$version\"\n-      sep=:\n+    if [[ -z $version || $version == \\#* ]]; then\n+      # Skip empty lines and comments\n+      continue\n+    elif [ \"$version\" = \"..\" ] || [[ $version == */* ]]; then\n+      # The version string is used to construct a path and we skip dubious values.\n+      # This prevents issues such as path traversal (CVE-2022-35861).\n+      continue\n+    fi\n+    printf \"%s%s\" \"$sep\" \"$version\"\n+    sep=:\n   done <\"$VERSION_FILE\"\n   [[ $sep ]] && { echo; exit; }\n fi"
        },
        {
          "filename": "test/version-file-read.bats",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -82,3 +82,15 @@ IN\n   run pyenv-version-file-read my-version\n   assert_success \"3.9.3:3.8.9:2.7.16\"\n }\n+\n+@test \"skips relative path traversal\" {\n+  cat > my-version <<IN\n+3.9.3\n+3.8.9\n+  ..\n+./*\n+2.7.16\n+IN\n+  run pyenv-version-file-read my-version\n+  assert_success \"3.9.3:3.8.9:2.7.16\"\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e98a0b489f62f22204cbd13fdac03aca79d98623",
            "date": "2025-01-08T23:16:06Z",
            "author_login": "native-api"
          },
          {
            "sha": "01732990788b575d665e9f3f257dc32d0031a04c",
            "date": "2025-01-08T20:51:11Z",
            "author_login": "native-api"
          },
          {
            "sha": "850a74c5cd2cac8990008864b94254d6acfcd6c6",
            "date": "2025-01-04T16:43:09Z",
            "author_login": "JayBazuzi"
          },
          {
            "sha": "4c6b0e9c3b33c0315becb94272841468f71a8f37",
            "date": "2024-12-23T17:58:54Z",
            "author_login": "ChristianFredrikJohnsen"
          },
          {
            "sha": "330e3fc130cd464a012a0b06d8c1ea41447956eb",
            "date": "2024-12-22T20:38:58Z",
            "author_login": "native-api"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "pyenv 1.2.24 through 2.3.2 allows local users to gain privileges via a .python-version file in the current working directory. An attacker can craft a Python version string in .python-version to execute shims under their control. (Shims are executables that pass a command along to a specific version of pyenv. The version string is used to construct the path to the command, and there is no validation of whether the version specified is a valid version. Thus, relative path traversal can occur.)",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-07-17T17:15:08.233",
    "last_modified": "2024-11-21T07:11:49.840",
    "fix_date": "2022-07-16T22:01:04Z"
  },
  "references": [
    {
      "url": "https://github.com/pyenv/pyenv/commit/22fa683571d98b59ea16e5fe48ac411c67939653",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pyenv/pyenv/commit/22fa683571d98b59ea16e5fe48ac411c67939653",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:11.496276",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pyenv",
    "owner": "pyenv",
    "created_at": "2012-08-31T06:57:52Z",
    "updated_at": "2025-01-14T14:17:56Z",
    "pushed_at": "2025-01-08T23:16:06Z",
    "size": 5779,
    "stars": 40270,
    "forks": 3087,
    "open_issues": 65,
    "watchers": 40270,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Roff": 307081,
      "Shell": 287833,
      "Python": 18101,
      "Makefile": 1504,
      "C": 1328,
      "Dockerfile": 680,
      "Vim Script": 35
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:19:20.930479"
  }
}