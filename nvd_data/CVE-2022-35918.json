{
  "cve_id": "CVE-2022-35918",
  "github_data": {
    "repository": "streamlit/streamlit",
    "fix_commit": "80d9979d5f4a00217743d607078a1d867fad8acf",
    "related_commits": [
      "80d9979d5f4a00217743d607078a1d867fad8acf",
      "80d9979d5f4a00217743d607078a1d867fad8acf"
    ],
    "patch_url": "https://github.com/streamlit/streamlit/commit/80d9979d5f4a00217743d607078a1d867fad8acf.patch",
    "fix_commit_details": {
      "sha": "80d9979d5f4a00217743d607078a1d867fad8acf",
      "commit_date": "2022-07-27T18:30:37Z",
      "author": {
        "login": "kmcgrady",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ignore component requests outside of the component root",
        "length": 55,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 59,
        "additions": 58,
        "deletions": 1
      },
      "files": [
        {
          "filename": "lib/streamlit/components/v1/components.py",
          "status": "modified",
          "additions": 9,
          "deletions": 1,
          "patch": "@@ -316,8 +316,16 @@ def get(self, path: str) -> None:\n             self.set_status(404)\n             return\n \n+        # follow symlinks to get an accurate normalized path\n+        component_root = os.path.realpath(component_root)\n         filename = \"/\".join(parts[1:])\n-        abspath = os.path.join(component_root, filename)\n+        abspath = os.path.realpath(os.path.join(component_root, filename))\n+\n+        # Do NOT expose anything outside of the component root.\n+        if os.path.commonprefix([component_root, abspath]) != component_root:\n+            self.write(\"forbidden\")\n+            self.set_status(403)\n+            return\n \n         LOGGER.debug(\"ComponentRequestHandler: GET: %s -> %s\", path, abspath)\n "
        },
        {
          "filename": "lib/tests/streamlit/components_test.py",
          "status": "modified",
          "additions": 49,
          "deletions": 0,
          "patch": "@@ -434,6 +434,55 @@ def test_success_request(self):\n         self.assertEqual(200, response.code)\n         self.assertEqual(b\"Test Content\", response.body)\n \n+    def test_outside_component_root_request(self):\n+        \"\"\"Tests to ensure a path based on the root directory (and therefore\n+        outside of the component root) is disallowed.\"\"\"\n+\n+        with mock.patch(\"streamlit.components.v1.components.os.path.isdir\"):\n+            # We don't need the return value in this case.\n+            declare_component(\"test\", path=PATH)\n+\n+        response = self._request_component(\n+            \"components_test.test//etc/hosts\"\n+        )\n+\n+        self.assertEqual(403, response.code)\n+        self.assertEqual(b\"forbidden\", response.body)\n+\n+    def test_relative_outside_component_root_request(self):\n+        \"\"\"Tests to ensure a path relative to the component root directory\n+        (and specifically outside of the component root) is disallowed.\"\"\"\n+\n+        with mock.patch(\"streamlit.components.v1.components.os.path.isdir\"):\n+            # We don't need the return value in this case.\n+            declare_component(\"test\", path=PATH)\n+\n+        response = self._request_component(\n+            \"components_test.test/../foo\"\n+        )\n+\n+        self.assertEqual(403, response.code)\n+        self.assertEqual(b\"forbidden\", response.body)\n+\n+    def test_symlink_outside_component_root_request(self):\n+        \"\"\"Tests to ensure a path symlinked to a file outside the component\n+        root directory is disallowed.\"\"\"\n+\n+        with mock.patch(\"streamlit.components.v1.components.os.path.isdir\"):\n+            # We don't need the return value in this case.\n+            declare_component(\"test\", path=PATH)\n+\n+        with mock.patch(\n+            \"streamlit.components.v1.components.os.path.realpath\",\n+            side_effect=[PATH, \"/etc/hosts\"],\n+        ):\n+            response = self._request_component(\n+                \"components_test.test\"\n+            )\n+\n+        self.assertEqual(403, response.code)\n+        self.assertEqual(b\"forbidden\", response.body)\n+\n     def test_invalid_component_request(self):\n         \"\"\"Test request failure when invalid component name is provided.\"\"\"\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c6856801bbd7601b3b39141b7521149dac518530",
            "date": "2025-01-14T21:01:16Z",
            "author_login": "sfc-gh-tteixeira"
          },
          {
            "sha": "9a67af56b4049c77b6b2052ff923d09eb6d28270",
            "date": "2025-01-14T15:51:55Z",
            "author_login": "raethlein"
          },
          {
            "sha": "cac837a51c5a890f80a82694dc54a9703b7ccebf",
            "date": "2025-01-14T14:12:32Z",
            "author_login": "sfc-gh-lwilby"
          },
          {
            "sha": "5da1e76e9ee2f874d074abb2bc143d78fa956f1d",
            "date": "2025-01-14T13:26:25Z",
            "author_login": "raethlein"
          },
          {
            "sha": "b688c7c0594a851d868827940d269b9dd8112120",
            "date": "2025-01-14T02:10:44Z",
            "author_login": "jrieke"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Streamlit is a data oriented application development framework for python. Users hosting Streamlit app(s) that use custom components are vulnerable to a directory traversal attack that could leak data from their web server file-system such as: server logs, world readable files, and potentially other sensitive information. An attacker can craft a malicious URL with file paths and the streamlit server would process that URL and return the contents of that file. This issue has been resolved in version 1.11.1. Users are advised to upgrade. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-08-01T22:15:10.223",
    "last_modified": "2024-11-21T07:11:57.603",
    "fix_date": "2022-07-27T18:30:37Z"
  },
  "references": [
    {
      "url": "https://github.com/streamlit/streamlit/commit/80d9979d5f4a00217743d607078a1d867fad8acf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/streamlit/streamlit/security/advisories/GHSA-v4hr-4jpx-56gc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/streamlit/streamlit/commit/80d9979d5f4a00217743d607078a1d867fad8acf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/streamlit/streamlit/security/advisories/GHSA-v4hr-4jpx-56gc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.190127",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "streamlit",
    "owner": "streamlit",
    "created_at": "2019-08-24T00:14:52Z",
    "updated_at": "2025-01-14T21:01:21Z",
    "pushed_at": "2025-01-14T21:01:27Z",
    "size": 530719,
    "stars": 36694,
    "forks": 3161,
    "open_issues": 1003,
    "watchers": 36694,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "Python": 5397330,
      "TypeScript": 3572978,
      "JavaScript": 36340,
      "HTML": 16318,
      "Makefile": 16151,
      "SCSS": 6463,
      "Shell": 3702,
      "Batchfile": 676
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T21:03:48.208466"
  }
}