{
  "cve_id": "CVE-2022-35952",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "5f945fc6409a3c1e90d6970c9292f805f6e6ddf2",
    "related_commits": [
      "5f945fc6409a3c1e90d6970c9292f805f6e6ddf2",
      "5f945fc6409a3c1e90d6970c9292f805f6e6ddf2"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2.patch",
    "fix_commit_details": {
      "sha": "5f945fc6409a3c1e90d6970c9292f805f6e6ddf2",
      "commit_date": "2022-07-14T17:16:55Z",
      "author": {
        "login": "sagunb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix security vulnerability with UnbatchGradKernel",
        "length": 79,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 63,
        "additions": 63,
        "deletions": 0
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/batch_kernels.cc",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -885,8 +885,13 @@ class UnbatchGradResource : public ResourceBase {\n     const Tensor& data_t = context->input(0);\n     const Tensor& batch_index_t = context->input(1);\n     const Tensor& grad_t = context->input(2);\n+    const Tensor& batch_key_t = context->input(3);\n \n     mutex_lock ml(mu_);\n+    if (batch_key_t.NumElements() != 1) {\n+      return errors::InvalidArgument(\"Expected `id` to be scalar. Received \",\n+                                     batch_key_t.DebugString());\n+    }\n \n     const int64_t batch_key = context->input(3).scalar<int64_t>()();\n     // Mark our tensor as available.\n@@ -902,6 +907,11 @@ class UnbatchGradResource : public ResourceBase {\n             \"batch_index is empty while the tensor isn't.\");\n       }\n       std::unordered_set<int64_t> missing_tensors;\n+      if (batch_index_t.NumElements() != batch_index_t.dim_size(0) * 3) {\n+        return errors::InvalidArgument(\n+            \"batch_index should contain \", batch_index_t.dim_size(0) * 3,\n+            \" elements. Received \", batch_index_t.NumElements());\n+      }\n       const auto batch_index =\n           batch_index_t.shaped<int64_t, 2>({batch_index_t.dim_size(0), 3});\n       for (int i = 0; i < batch_index_t.dim_size(0); ++i) {"
        },
        {
          "filename": "tensorflow/python/ops/batch_ops_test.py",
          "status": "modified",
          "additions": 53,
          "deletions": 0,
          "patch": "@@ -20,7 +20,9 @@\n \n from tensorflow.core.protobuf import config_pb2\n from tensorflow.python.eager import context\n+from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import function\n from tensorflow.python.framework import ops\n from tensorflow.python.framework import test_util\n@@ -30,6 +32,7 @@\n from tensorflow.python.ops import gen_batch_ops\n from tensorflow.python.ops import gen_functional_ops\n from tensorflow.python.ops import math_ops\n+from tensorflow.python.ops import random_ops\n from tensorflow.python.ops import resource_variable_ops\n from tensorflow.python.ops import script_ops\n from tensorflow.python.ops import variables\n@@ -557,6 +560,56 @@ def worker():\n       # The thread's call should hit the timeout, and thus get 0 results.\n       self.assertEqual(len(thread_results), 0)\n \n+  def testUnbatchGradInvalidId(self):\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      self.evaluate(\n+          gen_batch_ops.unbatch_grad(\n+              original_input=constant_op.constant([1]),\n+              batch_index=constant_op.constant([\n+                  [0, 0, 0],\n+              ], dtype=dtypes.int64),\n+              grad=constant_op.constant([\n+                  1,\n+              ]),\n+              id=constant_op.constant([\n+                  1,\n+                  1,\n+              ], dtype=dtypes.int64)))\n+\n+  def testUnbatchGradInvalidBatchId(self):\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      self.evaluate(\n+          gen_batch_ops.unbatch_grad(\n+              original_input=constant_op.constant([1]),\n+              batch_index=constant_op.constant([\n+                  [0, 0],\n+              ], dtype=dtypes.int64),\n+              grad=constant_op.constant([\n+                  1,\n+              ]),\n+              id=constant_op.constant([\n+                  1,\n+              ], dtype=dtypes.int64)))\n+\n+  def testUnbatchGradInvalidArgs(self):\n+    original_input = random_ops.random_uniform(\n+        shape=(3, 1), dtype=dtypes.float64, maxval=None)\n+    batch_index = random_ops.random_uniform(\n+        shape=(3, 1), dtype=dtypes.int64, maxval=65536)\n+    grad = random_ops.random_uniform(\n+        shape=(3, 1), dtype=dtypes.float64, maxval=None)\n+    batch_id = random_ops.random_uniform(\n+        shape=(3, 1), dtype=dtypes.int64, maxval=65536)\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      self.evaluate(\n+          gen_batch_ops.unbatch_grad(\n+              original_input=original_input,\n+              batch_index=batch_index,\n+              grad=grad,\n+              id=batch_id,\n+              container=\"\",\n+              shared_name=\"\",\n+              name=\"\"))\n \n if __name__ == \"__main__\":\n   test.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2a6c919b732bc36a8aa444c03c455a5ba7376ad5",
            "date": "2025-01-14T19:00:47Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "ea89878e945fdb95ec85b5d396d45b70a42d268e",
            "date": "2025-01-14T19:00:19Z",
            "author_login": "eunjaekim-0"
          },
          {
            "sha": "2ed056484b967486920cc8be1740ab1bd13c9f64",
            "date": "2025-01-14T18:40:26Z",
            "author_login": "GleasonK"
          },
          {
            "sha": "f04ac71a7ba0972752968c52b299e9e53795c9bf",
            "date": "2025-01-14T18:36:27Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "af7f5e877165ab909d171a6ec560a8ce80f410b5",
            "date": "2025-01-14T18:29:16Z",
            "author_login": "sdasgup3"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. The `UnbatchGradOp` function takes an argument `id` that is assumed to be a scalar. A nonscalar `id` can trigger a `CHECK` failure and crash the program. It also requires its argument `batch_index` to contain three times the number of elements as indicated in its `batch_index.dim_size(0)`. An incorrect `batch_index` can trigger a `CHECK` failure and crash the program. We have patched the issue in GitHub commit 5f945fc6409a3c1e90d6970c9292f805f6e6ddf2. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T20:15:10.443",
    "last_modified": "2024-11-21T07:12:02.477",
    "fix_date": "2022-07-14T17:16:55Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/769eddaf479c8debead9a59a72617d6ed6f0fe10/tensorflow/core/kernels/batch_kernels.cc#L891",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h5vq-gw2c-pq47",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/769eddaf479c8debead9a59a72617d6ed6f0fe10/tensorflow/core/kernels/batch_kernels.cc#L891",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h5vq-gw2c-pq47",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.127613",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}