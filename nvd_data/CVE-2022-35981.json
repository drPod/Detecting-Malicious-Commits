{
  "cve_id": "CVE-2022-35981",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "8741e57d163a079db05a7107a7609af70931def4",
    "related_commits": [
      "8741e57d163a079db05a7107a7609af70931def4",
      "8741e57d163a079db05a7107a7609af70931def4"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4.patch",
    "fix_commit_details": {
      "sha": "8741e57d163a079db05a7107a7609af70931def4",
      "commit_date": "2022-07-18T21:57:29Z",
      "author": {
        "login": "tensorflower-gardener",
        "type": "User",
        "stats": {
          "total_commits": 51283,
          "average_weekly_commits": 106.83958333333334,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 450
        }
      },
      "commit_message": {
        "title": "Fix security vulnerability with FractionalMaxPoolGrad",
        "length": 83,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 47,
        "additions": 37,
        "deletions": 10
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/fractional_max_pool_op.cc",
          "status": "modified",
          "additions": 12,
          "deletions": 8,
          "patch": "@@ -19,12 +19,13 @@ limitations under the License.\n #include <random>\n #include <vector>\n \n-#include \"tensorflow/core/kernels/fractional_pool_common.h\"\n-\n #include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n #include \"tensorflow/core/framework/numeric_op.h\"\n #include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/op_requires.h\"\n+#include \"tensorflow/core/kernels/fractional_pool_common.h\"\n #include \"tensorflow/core/lib/random/random.h\"\n+#include \"tensorflow/core/platform/errors.h\"\n #include \"tensorflow/core/platform/logging.h\"\n #include \"tensorflow/core/platform/mutex.h\"\n #include \"tensorflow/core/util/guarded_philox_random.h\"\n@@ -352,7 +353,9 @@ class FractionalMaxPoolGradOp : public OpKernel {\n         output_size[2] * output_size[1] * output_size[0];\n     for (int64_t i = 0; i < num_reshaped_cols; ++i) {\n       for (int64_t j = 0; j < output_size[3]; ++j) {\n-        DCHECK_EQ(tensor_out_dup_mat(j, i), tensor_out_mat(j, i));\n+        OP_REQUIRES(context, tensor_out_dup_mat(j, i) == tensor_out_mat(j, i),\n+                    errors::InvalidArgument(\n+                        \"tensor_out_dup is not the same as tensor_out\"));\n       }\n     }\n \n@@ -369,11 +372,12 @@ class FractionalMaxPoolGradOp : public OpKernel {\n \n     for (int index = 0; index < num_total_outputs; ++index) {\n       int input_backprop_index = out_arg_max_flat(index);\n-      // According to maxpooling_op.cc, the performance impact below is small.\n-      CHECK(input_backprop_index >= 0 &&\n-            input_backprop_index < num_total_inputs)\n-          << \"Invalid input backprop index: \" << input_backprop_index << \", \"\n-          << num_total_inputs;\n+      OP_REQUIRES(\n+          context,\n+          input_backprop_index >= 0 && input_backprop_index < num_total_inputs,\n+          errors::InvalidArgument(\n+              \"Invalid input backprop index: \", input_backprop_index, \", \",\n+              num_total_inputs));\n       input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\n     }\n   }"
        },
        {
          "filename": "tensorflow/python/kernel_tests/nn_ops/fractional_max_pool_op_test.py",
          "status": "modified",
          "additions": 25,
          "deletions": 2,
          "patch": "@@ -124,7 +124,7 @@ def _ValidateFractionalMaxPoolResult(self, input_tensor, pooling_ratio,\n     Returns:\n       None\n     \"\"\"\n-    with self.cached_session() as sess:\n+    with self.cached_session():\n       p, r, c = nn_ops.fractional_max_pool_v2(\n           input_tensor,\n           pooling_ratio,\n@@ -155,7 +155,7 @@ def _testVisually(self):\n           overlapping))\n       rand_mat = self._PRNG.randint(10, size=tensor_shape)\n       pooling_ratio = [1, math.sqrt(2), math.sqrt(2), 1]\n-      with self.cached_session() as sess:\n+      with self.cached_session():\n         p, r, c = nn_ops.fractional_max_pool_v2(\n             rand_mat,\n             pooling_ratio,\n@@ -630,6 +630,29 @@ def testWhenRepeatedMaxValueInPoolingRegion(self):\n       self.assertAllClose(expected_input_backprop_overlapping,\n                           input_backprop_overlapping)\n \n+  def testInvalidSeqRaiseErrorForFractionalMaxPoolGrad(self):\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      with self.cached_session() as _:\n+        overlapping = True\n+        orig_input = constant_op.constant(\n+            .453409232, shape=[1, 7, 13, 1], dtype=dtypes.float32)\n+        orig_output = constant_op.constant(\n+            .453409232, shape=[1, 7, 13, 1], dtype=dtypes.float32)\n+        out_backprop = constant_op.constant(\n+            .453409232, shape=[1, 7, 13, 1], dtype=dtypes.float32)\n+        row_pooling_sequence = constant_op.constant(\n+            0, shape=[5], dtype=dtypes.int64)\n+        col_pooling_sequence = constant_op.constant(\n+            0, shape=[5], dtype=dtypes.int64)\n+        t = gen_nn_ops.FractionalMaxPoolGrad(\n+            orig_input=orig_input,\n+            orig_output=orig_output,\n+            out_backprop=out_backprop,\n+            row_pooling_sequence=row_pooling_sequence,\n+            col_pooling_sequence=col_pooling_sequence,\n+            overlapping=overlapping)\n+        self.evaluate(t)\n+\n \n if __name__ == \"__main__\":\n   test.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d93cc4f4f767f0d4a72f2fafcc59005be939c019",
            "date": "2025-01-14T20:36:32Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "d4e4516cc7d11a68a81a82227f3a432f7ab350a0",
            "date": "2025-01-14T19:59:15Z",
            "author_login": "ddunl"
          },
          {
            "sha": "65367823d999b6a36a685617100a7bb6ce03add4",
            "date": "2025-01-14T19:58:00Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "36cbae5466dbf356d91cf56127b2ab2ccd5a8b1f",
            "date": "2025-01-14T19:54:19Z",
            "author_login": "penpornk"
          },
          {
            "sha": "0a99598a8f76735ac32b5466385b0f5af08a06bb",
            "date": "2025-01-14T19:45:23Z",
            "author_login": "wangpengmit"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. `FractionalMaxPoolGrad` validates its inputs with `CHECK` failures instead of with returning errors. If it gets incorrectly sized inputs, the `CHECK` failure can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 8741e57d163a079db05a7107a7609af70931def4. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T22:15:11.183",
    "last_modified": "2024-11-21T07:12:06.360",
    "fix_date": "2022-07-18T21:57:29Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vxv8-r8q2-63xw",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vxv8-r8q2-63xw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.130180",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}