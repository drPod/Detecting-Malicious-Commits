{
  "cve_id": "CVE-2022-35983",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4",
    "related_commits": [
      "5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4",
      "5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4.patch",
    "fix_commit_details": {
      "sha": "5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4",
      "commit_date": "2022-07-18T17:50:54Z",
      "author": {
        "login": "poulsbo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix tf.raw_ops.SaveSlices vulnerability with unsupported dtypes.",
        "length": 168,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 46,
        "additions": 38,
        "deletions": 8
      },
      "files": [
        {
          "filename": "tensorflow/core/util/tensor_slice_writer.cc",
          "status": "modified",
          "additions": 11,
          "deletions": 2,
          "patch": "@@ -131,6 +131,16 @@ Status TensorSliceWriter::Finish() {\n \n /* static */\n size_t TensorSliceWriter::MaxBytesPerElement(DataType dt) {\n+  size_t max_bytes_per_element =\n+      TensorSliceWriter::MaxBytesPerElementOrZero(dt);\n+  if (max_bytes_per_element == 0) {\n+    LOG(FATAL) << \"MaxBytesPerElement not implemented for dtype: \" << dt;\n+  }\n+  return max_bytes_per_element;\n+}\n+\n+/* static */\n+size_t TensorSliceWriter::MaxBytesPerElementOrZero(DataType dt) {\n   switch (dt) {\n     case DT_FLOAT:\n       return 4;\n@@ -170,9 +180,8 @@ size_t TensorSliceWriter::MaxBytesPerElement(DataType dt) {\n     case DT_STRING:\n     case DT_BFLOAT16:\n     default:\n-      LOG(FATAL) << \"MaxBytesPerElement not implemented for dtype: \" << dt;\n+      return 0;\n   }\n-  return 0;\n }\n \n template <>"
        },
        {
          "filename": "tensorflow/core/util/tensor_slice_writer.h",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -68,6 +68,8 @@ class TensorSliceWriter {\n   static size_t MaxBytesPerElement(DataType dt);\n \n  private:\n+  static size_t MaxBytesPerElementOrZero(DataType dt);\n+\n   static constexpr size_t kMaxMessageBytes = 1LL << 31;\n   // Filling in the TensorProto in a SavedSlice will add the following\n   // header bytes, in addition to the data:\n@@ -162,9 +164,15 @@ Status TensorSliceWriter::Add(const string& name, const TensorShape& shape,\n template <typename T>\n Status TensorSliceWriter::SaveData(const T* data, int64_t num_elements,\n                                    SavedSlice* ss) {\n-  size_t size_bound =\n-      ss->ByteSize() + kTensorProtoHeaderBytes +\n-      (MaxBytesPerElement(DataTypeToEnum<T>::value) * num_elements);\n+  size_t max_bytes_per_element =\n+      MaxBytesPerElementOrZero(DataTypeToEnum<T>::value);\n+  if (max_bytes_per_element == 0) {\n+    return errors::InvalidArgument(\n+        \"Tensor slice serialization not implemented for dtype \",\n+        DataTypeToEnum<T>::value);\n+  }\n+  size_t size_bound = ss->ByteSize() + kTensorProtoHeaderBytes +\n+                      (max_bytes_per_element * num_elements);\n   if (size_bound > kMaxMessageBytes) {\n     return errors::InvalidArgument(\n         \"Tensor slice is too large to serialize (conservative estimate: \","
        },
        {
          "filename": "tensorflow/core/util/tensor_slice_writer_test.cc",
          "status": "modified",
          "additions": 16,
          "deletions": 3,
          "patch": "@@ -15,17 +15,19 @@ limitations under the License.\n \n #include \"tensorflow/core/util/tensor_slice_writer.h\"\n \n+#include <algorithm>\n #include <array>\n+#include <memory>\n+#include <vector>\n \n #include \"tensorflow/core/framework/tensor_shape.pb.h\"\n #include \"tensorflow/core/framework/versions.pb.h\"\n #include \"tensorflow/core/lib/core/status_test_util.h\"\n-#include \"tensorflow/core/lib/core/stringpiece.h\"\n-#include \"tensorflow/core/lib/io/path.h\"\n-#include \"tensorflow/core/lib/strings/str_util.h\"\n #include \"tensorflow/core/platform/logging.h\"\n+#include \"tensorflow/core/platform/path.h\"\n #include \"tensorflow/core/platform/protobuf.h\"\n #include \"tensorflow/core/platform/test.h\"\n+#include \"tensorflow/core/protobuf/error_codes.pb.h\"\n #include \"tensorflow/core/public/version.h\"\n #include \"tensorflow/core/util/saved_tensor_slice_util.h\"\n #include \"tensorflow/core/util/tensor_slice_reader.h\"\n@@ -362,6 +364,17 @@ TEST(TensorSliceWriteTest, SizeErrors) {\n   }\n }\n \n+TEST(TensorSliceWriterTest, InvalidInput) {\n+  SavedSlice ss;\n+  std::array<uint32_t, 1> data;\n+  std::fill(data.begin(), data.end(), 1234);\n+  Status s = TensorSliceWriter::SaveData(data.data(), data.size(), &ss);\n+  EXPECT_EQ(s.code(), error::INVALID_ARGUMENT);\n+  EXPECT_TRUE(absl::StrContains(\n+      s.error_message(),\n+      \"Tensor slice serialization not implemented for dtype\"));\n+}\n+\n }  // namespace checkpoint\n \n }  // namespace tensorflow"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ee156c15e5d1cd7d2bd85885e7fd2bf7e143c2c3",
            "date": "2025-01-14T12:46:22Z",
            "author_login": "pifon2a"
          },
          {
            "sha": "bd43a8255ce9e203b740bcdc09e8f79d3a26f887",
            "date": "2025-01-14T12:33:02Z",
            "author_login": "metaflow"
          },
          {
            "sha": "8003fb40987f176d35364da2af8fcdfab339349e",
            "date": "2025-01-14T11:27:47Z",
            "author_login": "vwbaker"
          },
          {
            "sha": "aeb438b3a08e82ffd347aebf68ea77c5aeb6784f",
            "date": "2025-01-14T10:32:36Z",
            "author_login": "WillFroom"
          },
          {
            "sha": "88136f4028f541553becd7701da1a63610d8079e",
            "date": "2025-01-14T09:58:36Z",
            "author_login": "loislo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. If `Save` or `SaveSlices` is run over tensors of an unsupported `dtype`, it results in a `CHECK` fail that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T22:15:11.303",
    "last_modified": "2024-11-21T07:12:06.647",
    "fix_date": "2022-07-18T17:50:54Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.130438",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}