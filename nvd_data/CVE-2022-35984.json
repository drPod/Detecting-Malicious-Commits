{
  "cve_id": "CVE-2022-35984",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "72180be03447a10810edca700cbc9af690dfeb51",
    "related_commits": [
      "72180be03447a10810edca700cbc9af690dfeb51",
      "72180be03447a10810edca700cbc9af690dfeb51"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51.patch",
    "fix_commit_details": {
      "sha": "72180be03447a10810edca700cbc9af690dfeb51",
      "commit_date": "2022-06-23T05:30:03Z",
      "author": {
        "login": "cantonios",
        "type": "User",
        "stats": {
          "total_commits": 299,
          "average_weekly_commits": 0.6229166666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 96
        }
      },
      "commit_message": {
        "title": "Fix tensor shape dtype bug in parameterized_truncated_normal.",
        "length": 222,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 36,
        "additions": 29,
        "deletions": 7
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/parameterized_truncated_normal_op.cc",
          "status": "modified",
          "additions": 6,
          "deletions": 7,
          "patch": "@@ -32,6 +32,7 @@ limitations under the License.\n #include \"tensorflow/core/framework/register_types.h\"\n #include \"tensorflow/core/framework/tensor.h\"\n #include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/framework/tensor_util.h\"\n #include \"tensorflow/core/kernels/stateless_random_ops.h\"\n #include \"tensorflow/core/lib/random/random_distributions.h\"\n #include \"tensorflow/core/platform/logging.h\"\n@@ -630,20 +631,18 @@ class ParameterizedTruncatedNormalOp : public OpKernel {\n     OP_REQUIRES(ctx, shape_tensor.NumElements() > 0,\n                 errors::InvalidArgument(\"Shape tensor must not be empty, got \",\n                                         shape_tensor.DebugString()));\n-    int32_t num_batches = shape_tensor.flat<int32>()(0);\n+    TensorShape tensor_shape;\n+    OP_REQUIRES_OK(ctx, tensor::MakeShape(shape_tensor, &tensor_shape));\n \n+    int32_t num_batches = tensor_shape.dim_size(0);\n     int32_t samples_per_batch = 1;\n-    const int32_t num_dims = shape_tensor.dim_size(0);\n+    const int32_t num_dims = tensor_shape.dims();\n     for (int32_t i = 1; i < num_dims; i++) {\n-      samples_per_batch *= shape_tensor.flat<int32>()(i);\n+      samples_per_batch *= tensor_shape.dim_size(i);\n     }\n     const int32_t num_elements = num_batches * samples_per_batch;\n \n     // Allocate the output before fudging num_batches and samples_per_batch.\n-    auto shape_vec = shape_tensor.flat<int32>();\n-    TensorShape tensor_shape;\n-    OP_REQUIRES_OK(ctx, TensorShapeUtils::MakeShape(\n-                            shape_vec.data(), shape_vec.size(), &tensor_shape));\n     Tensor* samples_tensor;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, tensor_shape, &samples_tensor));\n "
        },
        {
          "filename": "tensorflow/python/kernel_tests/random/parameterized_truncated_normal_op_test.py",
          "status": "modified",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -303,6 +303,29 @@ def testSamplingWithSmallStdDevFarFromBound(self):\n       self.assertAllGreater(samples, 0.)\n       self.assertAllGreater(samples_stateless, 0.)\n \n+  def testShapeTypes(self):\n+    for shape_dtype in [np.int32, np.int64]:\n+      shape = np.array([1000], dtype=shape_dtype)\n+      sample_op = random_ops.parameterized_truncated_normal(\n+          shape=shape, means=0.0, stddevs=0.1, minvals=-1., maxvals=1.)\n+      new_seed = random_ops.random_uniform([2],\n+                                           seed=1234,\n+                                           minval=0,\n+                                           maxval=(2**31 - 1),\n+                                           dtype=np.int32)\n+      sample_op_stateless = stateless.stateless_parameterized_truncated_normal(\n+          shape=shape,\n+          seed=new_seed,\n+          means=0.0,\n+          stddevs=0.1,\n+          minvals=-1.,\n+          maxvals=1.)\n+\n+      samples = self.evaluate(sample_op)\n+      stateless_samples = self.evaluate(sample_op_stateless)\n+      self.assertAllEqual(samples.shape, shape)\n+      self.assertAllEqual(stateless_samples.shape, shape)\n+\n   def testStatelessParameterizedTruncatedNormalHasGrads(self):\n     mean = variables.Variable(0.01)\n     stddev = variables.Variable(1.)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "df078d626d561e6ae8f34d4702cbead44a3cbf82",
            "date": "2025-01-14T19:36:18Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "2a6c919b732bc36a8aa444c03c455a5ba7376ad5",
            "date": "2025-01-14T19:00:47Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "ea89878e945fdb95ec85b5d396d45b70a42d268e",
            "date": "2025-01-14T19:00:19Z",
            "author_login": "eunjaekim-0"
          },
          {
            "sha": "2ed056484b967486920cc8be1740ab1bd13c9f64",
            "date": "2025-01-14T18:40:26Z",
            "author_login": "GleasonK"
          },
          {
            "sha": "f04ac71a7ba0972752968c52b299e9e53795c9bf",
            "date": "2025-01-14T18:36:27Z",
            "author_login": "tensorflower-gardener"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. `ParameterizedTruncatedNormal` assumes `shape` is of type `int32`. A valid `shape` of type `int64` results in a mismatched type `CHECK` fail that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 72180be03447a10810edca700cbc9af690dfeb51. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T22:15:11.367",
    "last_modified": "2024-11-21T07:12:06.790",
    "fix_date": "2022-06-23T05:30:03Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.130571",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}