{
  "cve_id": "CVE-2022-35998",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "c8ba76d48567aed347508e0552a257641931024d",
    "related_commits": [
      "c8ba76d48567aed347508e0552a257641931024d",
      "c8ba76d48567aed347508e0552a257641931024d"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d.patch",
    "fix_commit_details": {
      "sha": "c8ba76d48567aed347508e0552a257641931024d",
      "commit_date": "2022-07-19T16:48:55Z",
      "author": {
        "login": "poulsbo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix tf.raw_ops.EmptyTensorList vulnerability with invalid `element_shape`.",
        "length": 226,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 16,
        "deletions": 4
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/list_kernels.cc",
          "status": "modified",
          "additions": 7,
          "deletions": 4,
          "patch": "@@ -21,7 +21,11 @@ limitations under the License.\n \n #include \"tensorflow/core/kernels/list_kernels.h\"\n \n+#include <algorithm>\n+#include <iterator>\n #include <limits>\n+#include <memory>\n+#include <utility>\n \n #include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n #include \"tensorflow/core/framework/allocator.h\"\n@@ -30,10 +34,6 @@ limitations under the License.\n #include \"tensorflow/core/framework/tensor_types.h\"\n #include \"tensorflow/core/framework/variant.h\"\n #include \"tensorflow/core/framework/variant_op_registry.h\"\n-#include \"tensorflow/core/kernels/concat_lib.h\"\n-#include \"tensorflow/core/lib/core/coding.h\"\n-#include \"tensorflow/core/lib/core/errors.h\"\n-#include \"tensorflow/core/util/util.h\"\n \n namespace tensorflow {\n \n@@ -49,6 +49,9 @@ Status TensorShapeFromTensor(const Tensor& t, PartialTensorShape* out) {\n     return errors::InvalidArgument(\n         \"The only valid scalar shape tensor is the fully unknown shape \"\n         \"specified as -1.\");\n+  } else if (t.shape().dims() != 1) {\n+    return errors::InvalidArgument(\"Shape must be at most rank 1 but is rank \",\n+                                   t.shape().dims());\n   }\n   if (t.dtype() == DT_INT32) {\n     return PartialTensorShape::MakePartialShape(t.vec<int32>().data(),"
        },
        {
          "filename": "tensorflow/python/kernel_tests/data_structures/list_ops_test.py",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -1458,6 +1458,15 @@ def testConcatWithUninitializedTensorsFailsIfNoInputLengths(self):\n       t = list_ops.tensor_list_concat(l, element_dtype=dtypes.float32)\n       self.evaluate(t)\n \n+  def testEmptyTensorListInvalidShape(self):\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                r\"Shape must be at most rank 1 but is rank 2\"):\n+      t = gen_list_ops.EmptyTensorList(\n+          element_shape=array_ops.ones(dtype=dtypes.int32, shape=[1, 0]),\n+          max_num_elements=constant_op.constant(1),\n+          element_dtype=dtypes.int32)\n+      self.evaluate(t)\n+\n   def testEvenSplit(self):\n \n     def RunTest(input_tensor, lengths, expected_stacked_output):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eaa68cb298188196e413abfb1606c38f785dfed4",
            "date": "2025-01-14T15:15:19Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "c141307fbd02349cf4d83f9a73bdba73fcba9b87",
            "date": "2025-01-14T14:26:56Z",
            "author_login": "mooskagh"
          },
          {
            "sha": "9263c01097f54dbb932ac56d6d87a61a93409221",
            "date": "2025-01-14T14:18:52Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "e7f7cefc7d284c486f84596811d07bb5cd0890ca",
            "date": "2025-01-14T14:16:10Z",
            "author_login": "krasimirgg"
          },
          {
            "sha": "fd41705e0ad7a123a9d01b8be2a3b34b3266493e",
            "date": "2025-01-14T13:33:52Z",
            "author_login": "loislo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. If `EmptyTensorList` receives an input `element_shape` with more than one dimension, it gives a `CHECK` fail that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit c8ba76d48567aed347508e0552a257641931024d. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T23:15:10.527",
    "last_modified": "2024-11-21T07:12:08.877",
    "fix_date": "2022-07-19T16:48:55Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qhw4-wwr7-gjc5",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qhw4-wwr7-gjc5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.134399",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}