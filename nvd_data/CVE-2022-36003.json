{
  "cve_id": "CVE-2022-36003",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "552bfced6ce4809db5f3ca305f60ff80dd40c5a3",
    "related_commits": [
      "552bfced6ce4809db5f3ca305f60ff80dd40c5a3",
      "552bfced6ce4809db5f3ca305f60ff80dd40c5a3"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3.patch",
    "fix_commit_details": {
      "sha": "552bfced6ce4809db5f3ca305f60ff80dd40c5a3",
      "commit_date": "2022-07-24T05:03:07Z",
      "author": {
        "login": "cantonios",
        "type": "User",
        "stats": {
          "total_commits": 299,
          "average_weekly_commits": 0.6229166666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 96
        }
      },
      "commit_message": {
        "title": "Fix size check for large input shape and rates.",
        "length": 178,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 26,
        "additions": 24,
        "deletions": 2
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/random_op.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -166,7 +166,7 @@ class RandomGammaOp : public OpKernel {\n     }\n     const int64_t samples_per_alpha = samples_shape.num_elements();\n \n-    samples_shape.AppendShape(alpha_t.shape());\n+    OP_REQUIRES_OK(ctx, samples_shape.AppendShapeWithStatus(alpha_t.shape()));\n     // Allocate output samples.\n     Tensor* samples_t = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, samples_shape, &samples_t));"
        },
        {
          "filename": "tensorflow/core/kernels/random_poisson_op.cc",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -296,8 +296,8 @@ class RandomPoissonOp : public OpKernel {\n     TensorShape samples_shape;\n     OP_REQUIRES_OK(ctx, tensor::MakeShape(shape_t, &samples_shape));\n     const int64_t num_samples = samples_shape.num_elements();\n+    OP_REQUIRES_OK(ctx, samples_shape.AppendShapeWithStatus(rate_t.shape()));\n \n-    samples_shape.AppendShape(rate_t.shape());\n     // Allocate output samples.\n     Tensor* samples_t = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, samples_shape, &samples_t));"
        },
        {
          "filename": "tensorflow/python/kernel_tests/random/random_gamma_test.py",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -16,7 +16,10 @@\n \n import numpy as np\n \n+from tensorflow.python.eager import context\n+from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import ops\n from tensorflow.python.framework import random_seed\n from tensorflow.python.framework import test_util\n@@ -216,6 +219,16 @@ def testPositive(self):\n         self.assertEqual(0, math_ops.reduce_sum(math_ops.cast(\n             math_ops.less_equal(x, 0.), dtype=dtypes.int64)).eval())\n \n+  def testSizeTooLarge(self):\n+    # Grappler asserts on size overflow, so this error is only caught when\n+    # running eagerly.\n+    if context.executing_eagerly():\n+      with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                  \"overflow\"):\n+        rate = constant_op.constant(1.0, shape=(4, 4, 4, 4, 4))\n+        self.evaluate(\n+            random_ops.random_gamma(\n+                shape=[46902, 51188, 34063, 59195], alpha=rate))\n \n if __name__ == \"__main__\":\n   test.main()"
        },
        {
          "filename": "tensorflow/python/kernel_tests/random/random_poisson_test.py",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -17,6 +17,7 @@\n \n from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import ops\n from tensorflow.python.framework import test_util\n from tensorflow.python.kernel_tests.random import util\n@@ -171,6 +172,14 @@ def testInfRate(self):\n     sample = random_ops.random_poisson(shape=[2], lam=np.inf)\n     self.assertAllEqual([np.inf, np.inf], self.evaluate(sample))\n \n+  def testSizeTooLarge(self):\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"overflow\"):\n+      rate = constant_op.constant(1.0, shape=(4, 4, 4, 4, 4))\n+      self.evaluate(\n+          random_ops.random_poisson(\n+              shape=[46902, 51188, 34063, 59195], lam=rate))\n+\n \n if __name__ == \"__main__\":\n   test.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c141307fbd02349cf4d83f9a73bdba73fcba9b87",
            "date": "2025-01-14T14:26:56Z",
            "author_login": "mooskagh"
          },
          {
            "sha": "9263c01097f54dbb932ac56d6d87a61a93409221",
            "date": "2025-01-14T14:18:52Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "e7f7cefc7d284c486f84596811d07bb5cd0890ca",
            "date": "2025-01-14T14:16:10Z",
            "author_login": "krasimirgg"
          },
          {
            "sha": "fd41705e0ad7a123a9d01b8be2a3b34b3266493e",
            "date": "2025-01-14T13:33:52Z",
            "author_login": "loislo"
          },
          {
            "sha": "af5275c5731565cbf2a2c01ee418a8cf62388431",
            "date": "2025-01-14T12:48:20Z",
            "author_login": "akuegel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-617",
    "description": "TensorFlow is an open source platform for machine learning. When `RandomPoissonV2` receives large input shape and rates, it gives a `CHECK` fail that can trigger a denial of service attack. We have patched the issue in GitHub commit 552bfced6ce4809db5f3ca305f60ff80dd40c5a3. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-16T23:15:10.823",
    "last_modified": "2024-11-21T07:12:09.590",
    "fix_date": "2022-07-24T05:03:07Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cv2p-32v3-vhwq",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cv2p-32v3-vhwq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.135096",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}