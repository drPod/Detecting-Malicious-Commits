{
  "cve_id": "CVE-2022-36009",
  "github_data": {
    "repository": "matrix-org/gomatrixserverlib",
    "fix_commit": "723fd495dde835d078b9f2074b6b62c06dea4575",
    "related_commits": [
      "723fd495dde835d078b9f2074b6b62c06dea4575",
      "723fd495dde835d078b9f2074b6b62c06dea4575"
    ],
    "patch_url": "https://github.com/matrix-org/gomatrixserverlib/commit/723fd495dde835d078b9f2074b6b62c06dea4575.patch",
    "fix_commit_details": {
      "sha": "723fd495dde835d078b9f2074b6b62c06dea4575",
      "commit_date": "2022-08-15T09:19:47Z",
      "author": {
        "login": "neilalexander",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix parsing of `\"events_default\"` level in `m.room.power_levels` events",
        "length": 71,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 60,
        "deletions": 1
      },
      "files": [
        {
          "filename": "eventauth_test.go",
          "status": "modified",
          "additions": 59,
          "deletions": 0,
          "patch": "@@ -1137,3 +1137,62 @@ func newMemberContent(\n \t\tThirdPartyInvite: thirdPartyInvite,\n \t}\n }\n+\n+var negativePowerLevelTestRoom = &testAuthEvents{\n+\tCreateJSON: json.RawMessage(`{\n+\t\t\"type\": \"m.room.create\",\n+\t\t\"state_key\": \"\",\n+\t\t\"sender\": \"@u1:a\",\n+\t\t\"room_id\": \"!r1:a\",\n+\t\t\"event_id\": \"$e1:a\",\n+\t\t\"content\": {\n+\t\t\t\"room_version\": \"10\"\n+\t\t}\n+\t}`),\n+\tPowerLevelsJSON: json.RawMessage(`{\n+\t\t\"type\": \"m.room.power_levels\",\n+\t\t\"state_key\": \"\",\n+\t\t\"sender\": \"@u1:a\",\n+\t\t\"room_id\": \"!r1:a\",\n+\t\t\"event_id\": \"$e3:a\",\n+\t\t\"content\": {\n+\t\t\t\"events_default\": -9007199254740990,\n+\t\t\t\"state_default\": -9007199254740990,\n+\t\t\t\"users_default\": -9007199254740990,\n+\t\t\t\"users\": {\n+\t\t\t}\n+\t\t}\n+\t}`),\n+\tMemberJSON: map[string]json.RawMessage{\n+\t\t\"@u1:a\": json.RawMessage(`{\n+\t\t\t\"type\": \"m.room.member\",\n+\t\t\t\"state_key\": \"@u1:a\",\n+\t\t\t\"sender\": \"@u1:a\",\n+\t\t\t\"room_id\": \"!r1:a\",\n+\t\t\t\"event_id\": \"$e2:a\",\n+\t\t\t\"content\": {\n+\t\t\t\t\"membership\": \"join\"\n+\t\t\t}\n+\t\t}`),\n+\t},\n+}\n+\n+func TestNegativePowerLevels(t *testing.T) {\n+\t// User should be able to demote the user default level\n+\t// below their own effective level.\n+\teventShouldSucceed, err := NewEventFromTrustedJSON(RawJSON(`{\n+\t\t\"type\": \"m.room.message\",\n+\t\t\"sender\": \"@u1:a\",\n+\t\t\"room_id\": \"!r1:a\",\n+\t\t\"event_id\": \"$e5:a\",\n+\t\t\"content\": {\n+\t\t\t\"stuff\": \"i am a message event\"\n+\t\t}\n+\t}`), false, RoomVersionV1)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif err = Allowed(eventShouldSucceed, negativePowerLevelTestRoom); err != nil {\n+\t\tt.Error(\"TestNegativePowerLevels should have succeeded but it didn't:\", err)\n+\t}\n+}"
        },
        {
          "filename": "eventcontent.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -431,7 +431,7 @@ func NewPowerLevelContentFromEvent(event *Event) (c PowerLevelContent, err error\n \t\t\tUsersDefaultLevel  levelJSONValue            `json:\"users_default\"`\n \t\t\tEventLevels        map[string]levelJSONValue `json:\"events\"`\n \t\t\tStateDefaultLevel  levelJSONValue            `json:\"state_default\"`\n-\t\t\tEventDefaultLevel  levelJSONValue            `json:\"event_default\"`\n+\t\t\tEventDefaultLevel  levelJSONValue            `json:\"events_default\"`\n \t\t\tNotificationLevels map[string]levelJSONValue `json:\"notifications\"`\n \t\t}\n \t\tif err = json.Unmarshal(event.Content(), &content); err != nil {"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bf86bc98b879fd13ed6c1f00207f0624d06e72c2",
            "date": "2025-01-06T19:00:28Z",
            "author_login": "S7evinK"
          },
          {
            "sha": "e86ab16eabe8311f525953635cfbab5904bfbb86",
            "date": "2024-12-15T09:48:29Z",
            "author_login": "neilalexander"
          },
          {
            "sha": "dbd5f31fefc031633c3418165e4ef6d343e03999",
            "date": "2024-11-06T18:54:10Z",
            "author_login": "richvdh"
          },
          {
            "sha": "6c4c6f7d0d301cef23e84d237b27d9e9ff4562d7",
            "date": "2024-11-06T18:25:40Z",
            "author_login": "richvdh"
          },
          {
            "sha": "be8877e9142667131eb7bcf50e076da1a9d0f43e",
            "date": "2024-11-06T14:43:21Z",
            "author_login": "S7evinK"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-863",
    "description": "gomatrixserverlib is a Go library for matrix protocol federation. Dendrite is a Matrix homeserver written in Go, an alternative to Synapse. The power level parsing within gomatrixserverlib was failing to parse the `\"events_default\"` key of the `m.room.power_levels` event, defaulting the event default power level to zero in all cases. Power levels are the matrix terminology for user access level. In rooms where the `\"events_default\"` power level had been changed, this could result in events either being incorrectly authorised or rejected by Dendrite servers. gomatrixserverlib contains a fix as of commit `723fd49` and Dendrite 0.9.3 has been updated accordingly. Matrix rooms where the `\"events_default\"` power level has not been changed from the default of zero are not vulnerable. Users are advised to upgrade. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-08-19T21:15:08.547",
    "last_modified": "2024-11-21T07:12:10.440",
    "fix_date": "2022-08-15T09:19:47Z"
  },
  "references": [
    {
      "url": "https://github.com/matrix-org/gomatrixserverlib/commit/723fd495dde835d078b9f2074b6b62c06dea4575",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-grvv-h2f9-7v9c",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://matrix.org/docs/guides/moderation/#power-levels",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/gomatrixserverlib/commit/723fd495dde835d078b9f2074b6b62c06dea4575",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-grvv-h2f9-7v9c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://matrix.org/docs/guides/moderation/#power-levels",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.241697",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gomatrixserverlib",
    "owner": "matrix-org",
    "created_at": "2016-10-18T15:40:58Z",
    "updated_at": "2025-01-06T19:00:32Z",
    "pushed_at": "2025-01-06T19:01:26Z",
    "size": 1461,
    "stars": 61,
    "forks": 51,
    "open_issues": 17,
    "watchers": 61,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 910944,
      "Shell": 441
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T19:14:54.047375"
  }
}