{
  "cve_id": "CVE-2022-36065",
  "github_data": {
    "repository": "growthbook/growthbook",
    "fix_commit": "1a5edff8786d141161bf880c2fd9ccbe2850a264",
    "related_commits": [
      "1a5edff8786d141161bf880c2fd9ccbe2850a264",
      "1a5edff8786d141161bf880c2fd9ccbe2850a264"
    ],
    "patch_url": "https://github.com/growthbook/growthbook/commit/1a5edff8786d141161bf880c2fd9ccbe2850a264.patch",
    "fix_commit_details": {
      "sha": "1a5edff8786d141161bf880c2fd9ccbe2850a264",
      "commit_date": "2022-08-29T21:30:29Z",
      "author": {
        "login": "jdorn",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Secure file uploads when NODE_ENV=dev (#487)",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 27,
        "additions": 25,
        "deletions": 2
      },
      "files": [
        {
          "filename": "packages/back-end/src/controllers/auth.ts",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -183,6 +183,14 @@ export async function postFirstTimeRegister(\n   >,\n   res: Response\n ) {\n+  // Only allow this API endpoint when it's a brand-new installation with no users yet\n+  const newInstallation = await isNewInstallation();\n+  if (!newInstallation) {\n+    throw new Error(\n+      \"An organization is already configured. Please refresh the page and try again.\"\n+    );\n+  }\n+\n   const { email, name, password, companyname } = req.body;\n \n   validatePasswordFormat(password);"
        },
        {
          "filename": "packages/back-end/src/services/files.ts",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -42,7 +42,21 @@ export async function uploadFile(\n     throw new Error(\"Invalid upload signature\");\n   }\n \n-  const fullPath = getUploadsDir() + \"/\" + filePath;\n+  // Watch out for poison null bytes\n+  if (filePath.indexOf(\"\\0\") !== -1) {\n+    throw new Error(\"Error: Filename must not contain null bytes\");\n+  }\n+\n+  const rootDirectory = getUploadsDir();\n+  const fullPath = path.join(rootDirectory, filePath);\n+\n+  // Prevent directory traversal\n+  if (fullPath.indexOf(rootDirectory) !== 0) {\n+    throw new Error(\n+      \"Error: Path must not escape out of the 'uploads' directory.\"\n+    );\n+  }\n+\n   const dir = path.dirname(fullPath);\n   await fs.promises.mkdir(dir, { recursive: true });\n   await fs.promises.writeFile(fullPath, contents);"
        },
        {
          "filename": "packages/back-end/src/util/secrets.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -29,6 +29,7 @@ if (!MONGODB_URI) {\n }\n \n export const APP_ORIGIN = process.env.APP_ORIGIN || \"http://localhost:3000\";\n+const isLocalhost = APP_ORIGIN.includes(\"localhost\");\n \n const corsOriginRegex = process.env.CORS_ORIGIN_REGEX;\n export const CORS_ORIGIN_REGEX = corsOriginRegex\n@@ -56,7 +57,7 @@ export const GCS_DOMAIN =\n   `https://storage.googleapis.com/${GCS_BUCKET_NAME}/`;\n \n export const JWT_SECRET = process.env.JWT_SECRET || \"dev\";\n-if (prod && !IS_CLOUD && JWT_SECRET === \"dev\") {\n+if ((prod || !isLocalhost) && !IS_CLOUD && JWT_SECRET === \"dev\") {\n   throw new Error(\n     \"Cannot use JWT_SECRET=dev in production. Please set to a long random string.\"\n   );"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "38b731e98826e52928e22abb3330327d486993bc",
            "date": "2025-01-14T08:14:34Z",
            "author_login": "Auz"
          },
          {
            "sha": "8c43648b56508d546d48cd14c0b8a53d4249c751",
            "date": "2025-01-14T06:23:37Z",
            "author_login": "Auz"
          },
          {
            "sha": "a1a59d76f413824fc0a8c0394189178651c249c1",
            "date": "2025-01-14T01:35:07Z",
            "author_login": "lukesonnet"
          },
          {
            "sha": "1a4445d1f0d18123387c7343d74d2dd3d68aac25",
            "date": "2025-01-13T19:39:00Z",
            "author_login": "Kevin-Chant"
          },
          {
            "sha": "6ad9f5367ae72bb6020a23481d8c948bb00259a4",
            "date": "2025-01-13T16:52:04Z",
            "author_login": "lukesonnet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "GrowthBook is an open-source platform for feature flagging and A/B testing. With some self-hosted configurations in versions prior to 2022-08-29, attackers can register new accounts and upload files to arbitrary directories within the container. If the attacker uploads a Python script to the right location, they can execute arbitrary code within the container. To be affected, ALL of the following must be true: Self-hosted deployment (GrowthBook Cloud is unaffected); using local file uploads (as opposed to S3 or Google Cloud Storage); NODE_ENV set to a non-production value and JWT_SECRET set to an easily guessable string like `dev`. This issue is patched in commit 1a5edff8786d141161bf880c2fd9ccbe2850a264 (2022-08-29). As a workaround, set `JWT_SECRET` environment variable to a long random string. This will stop arbitrary file uploads, but the only way to stop attackers from registering accounts is by updating to the latest build.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-09-06T21:15:08.760",
    "last_modified": "2024-11-21T07:12:18.210",
    "fix_date": "2022-08-29T21:30:29Z"
  },
  "references": [
    {
      "url": "https://github.com/growthbook/growthbook/commit/1a5edff8786d141161bf880c2fd9ccbe2850a264",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/growthbook/growthbook/pull/487",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/growthbook/growthbook/security/advisories/GHSA-j24q-55xh-wm4r",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/growthbook/growthbook/commit/1a5edff8786d141161bf880c2fd9ccbe2850a264",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/growthbook/growthbook/pull/487",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/growthbook/growthbook/security/advisories/GHSA-j24q-55xh-wm4r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Mitigation",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.083948",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "growthbook",
    "owner": "growthbook",
    "created_at": "2021-05-07T23:11:51Z",
    "updated_at": "2025-01-14T10:47:52Z",
    "pushed_at": "2025-01-14T15:04:38Z",
    "size": 97059,
    "stars": 6297,
    "forks": 523,
    "open_issues": 511,
    "watchers": 6297,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 8134314,
      "Python": 177501,
      "SCSS": 128948,
      "JavaScript": 23867,
      "Jinja": 16776,
      "Handlebars": 14785,
      "Dockerfile": 3910,
      "CSS": 1299,
      "Shell": 1192
    },
    "commit_activity": {
      "total_commits_last_year": 971,
      "avg_commits_per_week": 18.673076923076923,
      "days_active_last_year": 256
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:54:58.765207"
  }
}