{
  "cve_id": "CVE-2022-36092",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
    "related_commits": [
      "71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
      "9b7057d57a941592d763992d4299456300918208",
      "71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
      "9b7057d57a941592d763992d4299456300918208"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
      "commit_date": "2022-03-24T15:35:08Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 388,
          "average_weekly_commits": 0.40585774058577406,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 111
        }
      },
      "commit_message": {
        "title": "XWIKI-19549: Disallow template override for login, register and skin",
        "length": 136,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 125,
        "additions": 99,
        "deletions": 26
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/XWiki.java",
          "status": "modified",
          "additions": 31,
          "deletions": 21,
          "patch": "@@ -5917,31 +5917,41 @@ && getRightService().hasAccessLevel(\"view\", XWikiRightService.GUEST_USER_FULLNAM\n             }\n         }\n \n-        context.put(\"doc\", doc);\n-        context.put(\"cdoc\", doc);\n-        vcontext.put(\"doc\", doc.newDocument(context));\n-        vcontext.put(\"cdoc\", vcontext.get(\"doc\"));\n-        XWikiDocument tdoc;\n-\n-        // If the parameter language exists and is empty, it means we want to force loading the regular document\n-        // not a translation. This should be handled later by doing a better separation between locale used in the UI\n-        // and for loading the documents.\n-        if (\"\".equals(context.getRequest().getParameter(\"language\"))) {\n-            tdoc = doc;\n+        if (!\"skin\".equals(context.getAction()) && !this.getRightService().hasAccessLevel(\"view\",\n+            user.getFullName(), doc.getFullName(), context)) {\n+            // If for some reason (e.g., login action) the user has rights for the action but no view right on the\n+            // document, do not load the document into the context.\n+            setPhonyDocument(reference, context, vcontext);\n+            doc = context.getDoc();\n+            context.put(\"tdoc\", doc);\n+            context.put(\"cdoc\", doc);\n         } else {\n-            tdoc = doc.getTranslatedDocument(context);\n-        }\n+            context.put(\"doc\", doc);\n+            context.put(\"cdoc\", doc);\n+            vcontext.put(\"doc\", doc.newDocument(context));\n+            vcontext.put(\"cdoc\", vcontext.get(\"doc\"));\n+            XWikiDocument tdoc;\n+\n+            // If the parameter language exists and is empty, it means we want to force loading the regular document\n+            // not a translation. This should be handled later by doing a better separation between locale used in the UI\n+            // and for loading the documents.\n+            if (\"\".equals(context.getRequest().getParameter(\"language\"))) {\n+                tdoc = doc;\n+            } else {\n+                tdoc = doc.getTranslatedDocument(context);\n+            }\n \n-        try {\n-            String rev = (String) context.get(\"rev\");\n-            if (StringUtils.isNotEmpty(rev)) {\n-                tdoc = getDocument(tdoc, rev, context);\n+            try {\n+                String rev = (String) context.get(\"rev\");\n+                if (StringUtils.isNotEmpty(rev)) {\n+                    tdoc = getDocument(tdoc, rev, context);\n+                }\n+            } catch (Exception ex) {\n+                // Invalid version, just use the most recent one\n             }\n-        } catch (Exception ex) {\n-            // Invalid version, just use the most recent one\n+            context.put(\"tdoc\", tdoc);\n+            vcontext.put(\"tdoc\", tdoc.newDocument(context));\n         }\n-        context.put(\"tdoc\", tdoc);\n-        vcontext.put(\"tdoc\", tdoc.newDocument(context));\n \n         return true;\n     }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/LoginAction.java",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -37,6 +37,8 @@\n @Singleton\n public class LoginAction extends XWikiAction\n {\n+    private static final String LOGIN = \"login\";\n+\n     /**\n      * Default constructor.\n      */\n@@ -45,6 +47,18 @@ public LoginAction()\n         this.waitForXWikiInitialization = false;\n     }\n \n+    @Override\n+    public boolean action(XWikiContext context) throws XWikiException\n+    {\n+        // Disallow template override with xpage parameter.\n+        if (!LOGIN.equals(Utils.getPage(context.getRequest(), LOGIN))) {\n+            throw new XWikiException(XWikiException.MODULE_XWIKI, XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n+                String.format(\"Template may not be overriden with 'xpage' in [%s] action.\", LOGIN));\n+        }\n+\n+        return super.action(context);\n+    }\n+\n     @Override\n     public String render(XWikiContext context) throws XWikiException\n     {\n@@ -53,6 +67,6 @@ public String render(XWikiContext context) throws XWikiException\n         if (!\"1\".equals(context.getRequest().getParameter(\"loginLink\"))) {\n             context.getResponse().setStatus(401);\n         }\n-        return \"login\";\n+        return LOGIN;\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/LoginErrorAction.java",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -37,9 +37,23 @@\n @Singleton\n public class LoginErrorAction extends XWikiAction\n {\n+    private static final String LOGIN = \"login\";\n+\n+    @Override\n+    public boolean action(XWikiContext context) throws XWikiException\n+    {\n+        // Disallow template override with xpage parameter.\n+        if (!LOGIN.equals(Utils.getPage(context.getRequest(), LOGIN))) {\n+            throw new XWikiException(XWikiException.MODULE_XWIKI, XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n+                String.format(\"Template may not be overriden with 'xpage' in [%s] action.\", LOGIN));\n+        }\n+\n+        return super.action(context);\n+    }\n+\n     @Override\n     public String render(XWikiContext context) throws XWikiException\n     {\n-        return \"login\";\n+        return LOGIN;\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/LoginSubmitAction.java",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -42,13 +42,27 @@\n @Singleton\n public class LoginSubmitAction extends XWikiAction\n {\n+    private static final String LOGIN = \"login\";\n+\n+    @Override\n+    public boolean action(XWikiContext context) throws XWikiException\n+    {\n+        // Disallow template override with xpage parameter.\n+        if (!LOGIN.equals(Utils.getPage(context.getRequest(), LOGIN))) {\n+            throw new XWikiException(XWikiException.MODULE_XWIKI, XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n+                String.format(\"Template may not be overriden with 'xpage' in [%s] action.\", LOGIN));\n+        }\n+\n+        return super.action(context);\n+    }\n+\n     @Override\n     public String render(XWikiContext context) throws XWikiException\n     {\n         String msg = (String) context.get(\"message\");\n         if (StringUtils.isNotBlank(msg)) {\n             context.getResponse().setStatus(HttpServletResponse.SC_FORBIDDEN);\n         }\n-        return \"login\";\n+        return LOGIN;\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/RegisterAction.java",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -62,6 +62,12 @@ public boolean action(XWikiContext context) throws XWikiException\n         XWikiRequest request = context.getRequest();\n         XWikiResponse response = context.getResponse();\n \n+        // Disallow template override with xpage parameter.\n+        if (!REGISTER.equals(Utils.getPage(context.getRequest(), REGISTER))) {\n+            throw new XWikiException(XWikiException.MODULE_XWIKI, XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n+                String.format(\"Template may not be overriden with 'xpage' in [%s] action.\", REGISTER));\n+        }\n+\n         String register = request.getParameter(REGISTER);\n         if (register != null && register.equals(\"1\")) {\n             // CSRF prevention"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/SkinAction.java",
          "status": "modified",
          "additions": 17,
          "deletions": 2,
          "patch": "@@ -66,6 +66,7 @@\n @Singleton\n public class SkinAction extends XWikiAction\n {\n+\n     /** Logging helper. */\n     private static final Logger LOGGER = LoggerFactory.getLogger(SkinAction.class);\n \n@@ -83,14 +84,28 @@ public class SkinAction extends XWikiAction\n      */\n     private static final String ENCODING = \"UTF-8\";\n \n+    private static final String DOCDOESNOTEXIST = \"docdoesnotexist\";\n+\n+    @Override\n+    public boolean action(XWikiContext context) throws XWikiException\n+    {\n+        // Disallow template override with xpage parameter.\n+        if (!DOCDOESNOTEXIST.equals(Utils.getPage(context.getRequest(), DOCDOESNOTEXIST))) {\n+            throw new XWikiException(XWikiException.MODULE_XWIKI, XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n+                \"Template may not be overriden with 'xpage' in [skin] action.\");\n+        }\n+\n+        return super.action(context);\n+    }\n+\n     @Override\n     public String render(XWikiContext context) throws XWikiException\n     {\n         try {\n             return render(context.getRequest().getPathInfo(), context);\n         } catch (IOException e) {\n             context.getResponse().setStatus(404);\n-            return \"docdoesnotexist\";\n+            return DOCDOESNOTEXIST;\n         }\n     }\n \n@@ -177,7 +192,7 @@ public String render(String path, XWikiContext context) throws XWikiException, I\n         }\n         if (!found) {\n             context.getResponse().setStatus(404);\n-            return \"docdoesnotexist\";\n+            return DOCDOESNOTEXIST;\n         }\n         return null;\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-287",
    "description": "XWiki Platform Old Core is a core package for XWiki Platform, a generic wiki platform. Prior to versions 14.2 and 13.10.4, all rights checks that would normally prevent a user from viewing a document on a wiki can be bypassed using the login action and directly specified templates. This exposes title, content and comments of any document and properties of objects, though class and property name must be known. This is also exploitable on private wikis. This has been patched in versions 14.2 and 13.10.4 by properly checking view rights before loading documents and disallowing non-default templates in the login, registration and skin action. As a workaround, it would be possible to protect all templates individually by adding code to check access rights first.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-08T18:15:08.420",
    "last_modified": "2024-11-21T07:12:22.110",
    "fix_date": "2022-03-24T15:35:08Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/9b7057d57a941592d763992d4299456300918208",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-8h89-34w2-jpfm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-18602",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19549",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/71a6d0bb6f8ab718fcfaae0e9b8c16c2d69cd4bb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/9b7057d57a941592d763992d4299456300918208",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-8h89-34w2-jpfm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-18602",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19549",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.093507",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}