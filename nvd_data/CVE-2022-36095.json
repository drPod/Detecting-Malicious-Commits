{
  "cve_id": "CVE-2022-36095",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "7ca56e40cf79a468cea54d3480b6b403f259f9ae",
    "related_commits": [
      "7ca56e40cf79a468cea54d3480b6b403f259f9ae",
      "7ca56e40cf79a468cea54d3480b6b403f259f9ae"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/7ca56e40cf79a468cea54d3480b6b403f259f9ae.patch",
    "fix_commit_details": {
      "sha": "7ca56e40cf79a468cea54d3480b6b403f259f9ae",
      "commit_date": "2022-04-21T13:39:27Z",
      "author": {
        "login": "surli",
        "type": "User",
        "stats": {
          "total_commits": 1932,
          "average_weekly_commits": 2.0251572327044025,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 283
        }
      },
      "commit_message": {
        "title": "XWIKI-19550: Wrong error message in case of missing tag plugin",
        "length": 112,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 115,
        "additions": 67,
        "deletions": 48
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/documentTags.vm",
          "status": "modified",
          "additions": 67,
          "deletions": 48,
          "patch": "@@ -25,72 +25,91 @@\n ##\n ##\n #macro(displayTag $tag)\n-<span class=\"tag-wrapper\"><span class=\"tag\"><a href=\"$xwiki.getURL('Main.Tags', 'view', \"do=viewTag&amp;tag=$!{escapetool.url($tag)}\")\">$!{escapetool.xml($tag)}</a></span>#if($hasedit)<span class=\"separator\">[</span><a href=\"$doc.getURL('view', \"xpage=documentTags&amp;xaction=delete&amp;tag=$!{escapetool.url($tag)}&amp;xredirect=${xredirect}\")\" class=\"tag-tool tag-delete\" title=\"$services.localization.render('core.tags.remove.tooltip')\">X</a><span class=\"separator\">]</span>#end</span>\n+  #set ($viewTagUrl = $xwiki.getURL('Main.Tags', 'view', \"do=viewTag&amp;tag=$!{escapetool.url($tag)}\"))\n+  ## Note that the form_token parameter needs to be kept before the xredirect parameter since the JS code might replace the latter\n+  ## All that would need a cleaner fix in the javascript of tags.\n+  #set ($deleteTagUrl = $doc.getURL('view', \"xpage=documentTags&amp;xaction=delete&amp;tag=$!{escapetool.url($tag)}&amp;form_token=$!{escapetool.url($services.csrf.token)}&amp;xredirect=${xredirect}\"))\n+<span class=\"tag-wrapper\">\n+  <span class=\"tag\"><a href=\"$viewTagUrl\">$!{escapetool.xml($tag)}</a></span>\n+  #if($hasedit)<span class=\"separator\">[</span><a href=\"$deleteTagUrl\" class=\"tag-tool tag-delete\" title=\"$services.localization.render('core.tags.remove.tooltip')\">X</a><span class=\"separator\">]</span>#end\n+</span>\n #end\n ##\n #macro(removeTag $tag)\n-    #if($xwiki.tag)\n-        #set($result = $xwiki.tag.removeTagFromDocument($tag, $doc.fullName))\n-        #if($result == 'OK' && \"$!{request.ajax}\" != '')\n-            $response.setStatus(200)\n-            #set($responseMessage = 'OK')\n-        #elseif($result == 'NO_EFFECT')\n-            $response.setStatus(409)\n-            #set($responseMessage = $services.localization.render('core.tags.remove.error.notFound', [$tag]))\n-        #elseif($result == 'NOT_ALLOWED')\n-            $response.setStatus(403)\n-            #set($responseMessage = $services.localization.render('core.tags.remove.error.notAllowed', [$tag]))\n-        #elseif($result == 'FAILED')\n-            $response.setStatus(500)\n-            #set($responseMessage = $services.localization.render('core.tags.remove.error.failed', [$tag]))\n-        #end\n-        #if(\"$!{request.ajax}\" != '')\n-            $!responseMessage\n-        #elseif(\"$!{request.xredirect}\" != '')\n-            $response.sendRedirect($request.xredirect)\n+    #if ($services.csrf.isTokenValid($request.get('form_token')))\n+        #if($xwiki.tag)\n+            #set($result = $xwiki.tag.removeTagFromDocument($tag, $doc.fullName))\n+            #if($result == 'OK' && \"$!{request.ajax}\" != '')\n+                #set ($discard= $response.setStatus(200))\n+                #set($responseMessage = 'OK')\n+            #elseif($result == 'NO_EFFECT')\n+                #set ($discard= $response.setStatus(409))\n+                #set($responseMessage = $services.localization.render('core.tags.remove.error.notFound', [$tag]))\n+            #elseif($result == 'NOT_ALLOWED')\n+                #set ($discard= $response.setStatus(403))\n+                #set($responseMessage = $services.localization.render('core.tags.remove.error.notAllowed', [$tag]))\n+            #elseif($result == 'FAILED')\n+                #set ($discard= $response.setStatus(500))\n+                #set($responseMessage = $services.localization.render('core.tags.remove.error.failed', [$tag]))\n+            #end\n+        #else\n+            #set ($discard= $response.setStatus(501))\n+            #set ($responseMessage = \"Tag plugin is missing\")\n         #end\n     #else\n-        ## TODO\n+        #set ($discard= $response.setStatus(401))\n+        #set($responseMessage = $services.localization.render('core.tags.remove.error.notAllowed', [$tag]))\n+    #end\n+    #if(\"$!{request.ajax}\" != '')\n+        $!responseMessage\n+    #elseif(\"$!{request.xredirect}\" != '')\n+        $response.sendRedirect($request.xredirect)\n     #end\n #end\n ##\n #macro(addTag $tag)\n-    #if($xwiki.tag)\n-        #set($oldTags = $xwiki.tag.getTagsFromDocument($doc.fullName))\n-        #set($result = $xwiki.tag.addTagsToDocument($tag, $doc.fullName))\n-        #if($result == 'OK' && \"$!{request.ajax}\" != '')\n-            #set($newTags = $xwiki.tag.getTagsFromDocument($doc.fullName))\n-            #set($discard = $newTags.removeAll($oldTags))\n-            #foreach($t in $newTags)\n-                #if($t != '' && !$oldTags.contains($t))\n-                    #displayTag($t)\n+    #if ($services.csrf.isTokenValid($request.get('form_token')))\n+        #if($xwiki.tag)\n+            #set($oldTags = $xwiki.tag.getTagsFromDocument($doc.fullName))\n+            #set($result = $xwiki.tag.addTagsToDocument($tag, $doc.fullName))\n+            #if($result == 'OK' && \"$!{request.ajax}\" != '')\n+                #set($newTags = $xwiki.tag.getTagsFromDocument($doc.fullName))\n+                #set($discard = $newTags.removeAll($oldTags))\n+                #foreach($t in $newTags)\n+                    #if($t != '' && !$oldTags.contains($t))\n+                        #displayTag($t)\n+                    #end\n                 #end\n+            #elseif($result == 'NO_EFFECT')\n+                $response.setStatus(409)\n+                #set($tagErrorMessage = $services.localization.render('core.tags.add.error.alreadySet', [$tag]))\n+            #elseif($result == 'NOT_ALLOWED')\n+                $response.setStatus(403)\n+                #set($tagErrorMessage = $services.localization.render('core.tags.add.error.notAllowed', [$tag]))\n+            #elseif($result == 'FAILED')\n+                $response.setStatus(500)\n+                #set($tagErrorMessage = $services.localization.render('core.tags.add.error.failed', [$tag]))\n             #end\n-        #elseif($result == 'NO_EFFECT')\n-            $response.setStatus(409)\n-            #set($tagErrorMessage = $services.localization.render('core.tags.add.error.alreadySet', [$tag]))\n-        #elseif($result == 'NOT_ALLOWED')\n-            $response.setStatus(403)\n-            #set($tagErrorMessage = $services.localization.render('core.tags.add.error.notAllowed', [$tag]))\n-        #elseif($result == 'FAILED')\n-            $response.setStatus(500)\n-            #set($tagErrorMessage = $services.localization.render('core.tags.add.error.failed', [$tag]))\n-        #end\n-        #if(\"$!{request.ajax}\" != '')\n-            $tagErrorMessage\n-        #elseif(\"$!{request.xredirect}\" != '')\n-            $response.sendRedirect($request.xredirect)\n+            #if(\"$!{request.ajax}\" != '')\n+                $tagErrorMessage\n+            #elseif(\"$!{request.xredirect}\" != '')\n+                $response.sendRedirect($request.xredirect)\n+            #end\n+        #else\n+            #set ($discard= $response.setStatus(501))\n+            #set ($responseMessage = \"Tag plugin is missing\")\n         #end\n     #else\n-        ## TODO\n+        #set ($discard= $response.setStatus(401))\n+        #set($responseMessage = $services.localization.render('core.tags.add.error.notAllowed', [$tag]))\n     #end\n #end\n ##\n #macro(displayAddForm)\n-<form action=\"$doc.getURL('view', \"xpage=documentTags&amp;xaction=add&amp;xredirect=${xredirect}\")\" method=\"post\" class=\"tag-add-form\">\n+## Note that the form_token parameter needs to be kept before the xredirect parameter since the JS code might replace the latter\n+## All that would need a cleaner fix in the javascript of tags.\n+<form action=\"$doc.getURL('view', \"xpage=documentTags&amp;xaction=add&amp;form_token=$!{escapetool.url($services.csrf.token)}&amp;xredirect=${xredirect}\")\" method=\"post\" class=\"tag-add-form\">\n   <div>\n-      ## CSRF prevention\n-    <div class=\"hidden\"><input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" /></div>\n     <label for=\"tag\">$services.localization.render('core.tags.add.label')<br/>\n       <input class=\"input-tag\" type=\"text\" id=\"tag\" name=\"tag\" autocomplete=\"off\"/></label><br/>\n     <span class=\"buttonwrapper\"><input class=\"button button-add-tag\" type=\"submit\" value=\"$services.localization.render('core.tags.add.submit')\"/></span>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-352",
    "description": "XWiki Platform is a generic wiki platform. Prior to versions 13.10.5 and 14.3, it is possible to perform a Cross-Site Request Forgery (CSRF) attack for adding or removing tags on XWiki pages. The problem has been patched in XWiki 13.10.5 and 14.3. As a workaround, one may locally modify the `documentTags.vm` template in one's filesystem, to apply the changes exposed there.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-08T21:15:07.870",
    "last_modified": "2024-11-21T07:12:22.553",
    "fix_date": "2022-04-21T13:39:27Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/7ca56e40cf79a468cea54d3480b6b403f259f9ae",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fxwr-4vq9-9vhj",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19550",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/7ca56e40cf79a468cea54d3480b6b403f259f9ae",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fxwr-4vq9-9vhj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19550",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.094121",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}