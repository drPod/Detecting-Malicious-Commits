{
  "cve_id": "CVE-2022-36123",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "74a0032b8524ee2bd4443128c0bf9775928680b0",
    "related_commits": [
      "74a0032b8524ee2bd4443128c0bf9775928680b0",
      "96e8fc5818686d4a1591bb6907e7fdb64ef29884",
      "74a0032b8524ee2bd4443128c0bf9775928680b0",
      "96e8fc5818686d4a1591bb6907e7fdb64ef29884"
    ],
    "patch_url": "https://github.com/torvalds/linux/commit/74a0032b8524ee2bd4443128c0bf9775928680b0.patch",
    "fix_commit_details": {
      "sha": "74a0032b8524ee2bd4443128c0bf9775928680b0",
      "commit_date": "2022-07-10T15:43:52Z",
      "author": {
        "login": "torvalds",
        "type": "User",
        "stats": {
          "total_commits": 38386,
          "average_weekly_commits": 32.28427249789739,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 880
        }
      },
      "commit_message": {
        "title": "Merge tag 'x86_urgent_for_v5.19_rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip",
        "length": 1321,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 45,
        "additions": 29,
        "deletions": 16
      },
      "files": [
        {
          "filename": "arch/x86/boot/compressed/ident_map_64.c",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -110,6 +110,7 @@ void kernel_add_identity_map(unsigned long start, unsigned long end)\n void initialize_identity_maps(void *rmode)\n {\n \tunsigned long cmdline;\n+\tstruct setup_data *sd;\n \n \t/* Exclude the encryption mask from __PHYSICAL_MASK */\n \tphysical_mask &= ~sme_me_mask;\n@@ -163,6 +164,18 @@ void initialize_identity_maps(void *rmode)\n \tcmdline = get_cmd_line_ptr();\n \tkernel_add_identity_map(cmdline, cmdline + COMMAND_LINE_SIZE);\n \n+\t/*\n+\t * Also map the setup_data entries passed via boot_params in case they\n+\t * need to be accessed by uncompressed kernel via the identity mapping.\n+\t */\n+\tsd = (struct setup_data *)boot_params->hdr.setup_data;\n+\twhile (sd) {\n+\t\tunsigned long sd_addr = (unsigned long)sd;\n+\n+\t\tkernel_add_identity_map(sd_addr, sd_addr + sizeof(*sd) + sd->len);\n+\t\tsd = (struct setup_data *)sd->next;\n+\t}\n+\n \tsev_prep_identity_maps(top_level_pgt);\n \n \t/* Load the new page-table. */"
        },
        {
          "filename": "arch/x86/include/asm/setup.h",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -120,6 +120,9 @@ void *extend_brk(size_t size, size_t align);\n \tstatic char __brk_##name[size]\n \n extern void probe_roms(void);\n+\n+void clear_bss(void);\n+\n #ifdef __i386__\n \n asmlinkage void __init i386_start_kernel(void);"
        },
        {
          "filename": "arch/x86/include/uapi/asm/bootparam.h",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -15,7 +15,7 @@\n #define SETUP_INDIRECT\t\t\t(1<<31)\n \n /* SETUP_INDIRECT | max(SETUP_*) */\n-#define SETUP_TYPE_MAX\t\t\t(SETUP_INDIRECT | SETUP_JAILHOUSE)\n+#define SETUP_TYPE_MAX\t\t\t(SETUP_INDIRECT | SETUP_CC_BLOB)\n \n /* ram_size flags */\n #define RAMDISK_IMAGE_START_MASK\t0x07FF"
        },
        {
          "filename": "arch/x86/kernel/head64.c",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -426,10 +426,12 @@ void __init do_early_exception(struct pt_regs *regs, int trapnr)\n \n /* Don't add a printk in there. printk relies on the PDA which is not initialized \n    yet. */\n-static void __init clear_bss(void)\n+void __init clear_bss(void)\n {\n \tmemset(__bss_start, 0,\n \t       (unsigned long) __bss_stop - (unsigned long) __bss_start);\n+\tmemset(__brk_base, 0,\n+\t       (unsigned long) __brk_limit - (unsigned long) __brk_base);\n }\n \n static unsigned long get_cmd_line_ptr(void)"
        },
        {
          "filename": "arch/x86/kernel/vmlinux.lds.S",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -385,7 +385,7 @@ SECTIONS\n \t__end_of_kernel_reserve = .;\n \n \t. = ALIGN(PAGE_SIZE);\n-\t.brk (NOLOAD) : AT(ADDR(.brk) - LOAD_OFFSET) {\n+\t.brk : AT(ADDR(.brk) - LOAD_OFFSET) {\n \t\t__brk_base = .;\n \t\t. += 64 * 1024;\t\t/* 64k alignment slop space */\n \t\t*(.bss..brk)\t\t/* areas brk users have reserved */"
        },
        {
          "filename": "arch/x86/xen/enlighten_pv.c",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -1183,15 +1183,19 @@ static void __init xen_domu_set_legacy_features(void)\n extern void early_xen_iret_patch(void);\n \n /* First C function to be called on Xen boot */\n-asmlinkage __visible void __init xen_start_kernel(void)\n+asmlinkage __visible void __init xen_start_kernel(struct start_info *si)\n {\n \tstruct physdev_set_iopl set_iopl;\n \tunsigned long initrd_start = 0;\n \tint rc;\n \n-\tif (!xen_start_info)\n+\tif (!si)\n \t\treturn;\n \n+\tclear_bss();\n+\n+\txen_start_info = si;\n+\n \t__text_gen_insn(&early_xen_iret_patch,\n \t\t\tJMP32_INSN_OPCODE, &early_xen_iret_patch, &xen_iret,\n \t\t\tJMP32_INSN_SIZE);"
        },
        {
          "filename": "arch/x86/xen/xen-head.S",
          "status": "modified",
          "additions": 1,
          "deletions": 9,
          "patch": "@@ -48,15 +48,6 @@ SYM_CODE_START(startup_xen)\n \tANNOTATE_NOENDBR\n \tcld\n \n-\t/* Clear .bss */\n-\txor %eax,%eax\n-\tmov $__bss_start, %rdi\n-\tmov $__bss_stop, %rcx\n-\tsub %rdi, %rcx\n-\tshr $3, %rcx\n-\trep stosq\n-\n-\tmov %rsi, xen_start_info\n \tmov initial_stack(%rip), %rsp\n \n \t/* Set up %gs.\n@@ -71,6 +62,7 @@ SYM_CODE_START(startup_xen)\n \tcdq\n \twrmsr\n \n+\tmov\t%rsi, %rdi\n \tcall xen_start_kernel\n SYM_CODE_END(startup_xen)\n \t__FINIT"
        },
        {
          "filename": "tools/objtool/check.c",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -3826,8 +3826,7 @@ static int validate_ibt(struct objtool_file *file)\n \t\t    !strcmp(sec->name, \"__bug_table\")\t\t\t||\n \t\t    !strcmp(sec->name, \"__ex_table\")\t\t\t||\n \t\t    !strcmp(sec->name, \"__jump_table\")\t\t\t||\n-\t\t    !strcmp(sec->name, \"__mcount_loc\")\t\t\t||\n-\t\t    !strcmp(sec->name, \"__tracepoints\"))\n+\t\t    !strcmp(sec->name, \"__mcount_loc\"))\n \t\t\tcontinue;\n \n \t\tlist_for_each_entry(reloc, &sec->reloc->reloc_list, list)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7f5b6a8ec18e3add4c74682f60b90c31bdf849f2",
            "date": "2025-01-14T19:32:14Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c3812b15000cc5b7b17c7238f8b12f6a22df0b1d",
            "date": "2025-01-14T18:07:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "79a1d390f879563119bf2848b621bc7eed228c7d",
            "date": "2025-01-14T17:54:57Z",
            "author_login": "torvalds"
          },
          {
            "sha": "c45323b7560ec87c37c729b703c86ee65f136d75",
            "date": "2025-01-13T17:03:18Z",
            "author_login": "torvalds"
          },
          {
            "sha": "34c8e74cd6667ef5da90d448a1af702c4b873bd3",
            "date": "2025-01-13T08:52:08Z",
            "author_login": "YageGeng"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": null,
    "description": "The Linux kernel before 5.18.13 lacks a certain clear operation for the block starting symbol (.bss). This allows Xen PV guest OS users to cause a denial of service or gain privileges.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-07-29T14:15:08.303",
    "last_modified": "2024-11-21T07:12:26.720",
    "fix_date": "2022-07-10T15:43:52Z"
  },
  "references": [
    {
      "url": "https://cdn.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.18.13",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2022-128.md",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/74a0032b8524ee2bd4443128c0bf9775928680b0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/96e8fc5818686d4a1591bb6907e7fdb64ef29884",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20220901-0003/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sick.codes/sick-2022-128",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://cdn.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.18.13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/sickcodes/security/blob/master/advisories/SICK-2022-128.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/74a0032b8524ee2bd4443128c0bf9775928680b0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/torvalds/linux/commit/96e8fc5818686d4a1591bb6907e7fdb64ef29884",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20220901-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://sick.codes/sick-2022-128",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:14.182773",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-14T12:39:03Z",
    "pushed_at": "2025-01-13T17:27:04Z",
    "size": 5361369,
    "stars": 185823,
    "forks": 54743,
    "open_issues": 437,
    "watchers": 185823,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1326937103,
      "Assembly": 9568292,
      "Shell": 5072004,
      "Python": 2974128,
      "Makefile": 2713905,
      "Perl": 1253637,
      "Rust": 807711,
      "Roff": 202277,
      "C++": 173382,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71321,
      "Awk": 69539,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10172,
      "M4": 3329,
      "MATLAB": 2482,
      "sed": 2433,
      "Clojure": 2411,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 46007,
      "avg_commits_per_week": 884.75,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:53:59.486675"
  }
}