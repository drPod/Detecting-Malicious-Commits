{
  "cve_id": "CVE-2022-36436",
  "github_data": {
    "repository": "osuosl/twisted_vncauthproxy",
    "fix_commit": "edc149af29242178091b2d6fcd42c3ef0851644b",
    "related_commits": [
      "edc149af29242178091b2d6fcd42c3ef0851644b",
      "edc149af29242178091b2d6fcd42c3ef0851644b"
    ],
    "patch_url": "https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b.patch",
    "fix_commit_details": {
      "sha": "edc149af29242178091b2d6fcd42c3ef0851644b",
      "commit_date": "2022-07-29T15:40:09Z",
      "author": {
        "login": "mlevogiannis",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix CVE-2022-36436 - Authentication bypass in RFB security handshake (#1)",
        "length": 73,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 17,
        "deletions": 6
      },
      "files": [
        {
          "filename": "vncap/tests/test_protocol.py",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -13,6 +13,9 @@ def write(self, data):\n     def loseConnection(self):\n         self.lost = True\n \n+    def pauseProducing(self):\n+        pass\n+\n class TestVNCServerAuthenticator(unittest.TestCase):\n \n     def setUp(self):\n@@ -29,9 +32,20 @@ def test_connectionMade(self):\n     def test_check_version(self):\n         self.t.buf = \"\"\n         self.p.check_version(\"RFB 003.008\\n\")\n-        self.assertEqual(self.t.buf, \"\\x02\\x01\\x02\")\n+        self.assertEqual(self.t.buf, \"\\x01\\x02\")\n \n     def test_check_invalid_version(self):\n         self.t.buf = \"\"\n         self.p.check_version(\"RFB 002.000\\n\")\n         self.assertTrue(self.t.lost)\n+\n+    def test_select_security_type_none(self):\n+        self.t.buf = \"\"\n+        self.p.select_security_type(\"\\x01\")\n+        self.assertTrue(self.t.lost)\n+\n+    def test_select_security_type_vnc_auth(self):\n+        self.t.buf = \"\"\n+        self.p.select_security_type(\"\\x02\")\n+        self.assertFalse(self.t.lost)\n+        self.assertEqual(len(self.t.buf), 16)"
        },
        {
          "filename": "vncap/vnc/protocol.py",
          "status": "modified",
          "additions": 2,
          "deletions": 5,
          "patch": "@@ -73,8 +73,8 @@ def check_version(self, version):\n \n         if version == self.VERSION:\n             log.msg(\"Client version %s is valid\" % version.strip())\n-            # Hardcoded: 2 security types: None and VNC Auth.\n-            self.transport.write(\"\\x02\\x01\\x02\")\n+            # Hardcoded: 1 security type: VNC Auth.\n+            self.transport.write(\"\\x01\\x02\")\n             return self.select_security_type, 1\n         else:\n             log.err(\"Can't handle VNC version %r\" % version)\n@@ -93,9 +93,6 @@ def select_security_type(self, security_type):\n             self.transport.write(self.challenge)\n \n             return self.vnc_authentication_result, 16\n-        elif security_type == 1:\n-            # No authentication. Just move to the SecurityResult.\n-            self.authenticated()\n         else:\n             log.err(\"Couldn't agree on an authentication scheme!\")\n             self.transport.loseConnection()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c54a92b142a6f3cde1496e65d8db20e04b0e17c3",
            "date": "2022-07-29T17:14:48Z",
            "author_login": "ramereth"
          },
          {
            "sha": "62da479bf9a1c2948b830f811e6e130aca09b242",
            "date": "2022-07-29T15:40:35Z",
            "author_login": "mlevogiannis"
          },
          {
            "sha": "edc149af29242178091b2d6fcd42c3ef0851644b",
            "date": "2022-07-29T15:40:09Z",
            "author_login": "mlevogiannis"
          },
          {
            "sha": "3dffdffa2753e09bea351ef6e0f22bd06e32affb",
            "date": "2022-07-26T19:50:13Z",
            "author_login": "ramereth"
          },
          {
            "sha": "0416051ccccba3e0b8f0e5b9d8b2b57a03099672",
            "date": "2022-07-26T19:29:43Z",
            "author_login": "ramereth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-287",
    "description": "OSU Open Source Lab VNCAuthProxy through 1.1.1 is affected by an vncap/vnc/protocol.py VNCServerAuthenticator authentication-bypass vulnerability that could allow a malicious actor to gain unauthorized access to a VNC session or to disconnect a legitimate user from a VNC session. A remote attacker with network access to the proxy server could leverage this vulnerability to connect to VNC servers protected by the proxy server without providing any authentication credentials. Exploitation of this issue requires that the proxy server is currently accepting connections for the target VNC server.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-14T11:15:49.567",
    "last_modified": "2024-11-21T07:13:00.140",
    "fix_date": "2022-07-29T15:40:09Z"
  },
  "references": [
    {
      "url": "https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/osuosl/twisted_vncauthproxy/tree/release/1.1.1",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://pypi.org/project/VNCAuthProxy/",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://cert.grnet.gr/en/blog/cve-2022-36436-twisted-vnc-authentication-proxy-authentication-bypass/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/osuosl/twisted_vncauthproxy/commit/edc149af29242178091b2d6fcd42c3ef0851644b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/osuosl/twisted_vncauthproxy/tree/release/1.1.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://pypi.org/project/VNCAuthProxy/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:39.112234",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "twisted_vncauthproxy",
    "owner": "osuosl",
    "created_at": "2012-09-01T19:36:36Z",
    "updated_at": "2024-06-26T18:34:10Z",
    "pushed_at": "2022-07-29T17:39:47Z",
    "size": 113,
    "stars": 7,
    "forks": 4,
    "open_issues": 0,
    "watchers": 7,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 38069
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T19:32:45.332252"
  }
}