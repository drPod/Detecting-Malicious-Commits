{
  "cve_id": "CVE-2022-3741",
  "github_data": {
    "repository": "chatwoot/chatwoot",
    "fix_commit": "9525d4f0346a2fdac13a0253f9180d20104a72d3",
    "related_commits": [
      "9525d4f0346a2fdac13a0253f9180d20104a72d3",
      "9525d4f0346a2fdac13a0253f9180d20104a72d3"
    ],
    "patch_url": "https://github.com/chatwoot/chatwoot/commit/9525d4f0346a2fdac13a0253f9180d20104a72d3.patch",
    "fix_commit_details": {
      "sha": "9525d4f0346a2fdac13a0253f9180d20104a72d3",
      "commit_date": "2022-09-02T17:39:03Z",
      "author": {
        "login": "sojan-official",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "chore: Improve rack-attack configuration (#5389)",
        "length": 103,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 65,
        "additions": 41,
        "deletions": 24
      },
      "files": [
        {
          "filename": "config/initializers/rack_attack.rb",
          "status": "modified",
          "additions": 41,
          "deletions": 24,
          "patch": "@@ -24,6 +24,12 @@ def allowed_ip?\n       allowed_ips = ['127.0.0.1', '::1']\n       allowed_ips.include?(remote_ip)\n     end\n+\n+    # Rails would allow requests to paths with extentions, so lets compare against the path with extention stripped\n+    # example /auth & /auth.json would both work\n+    def path_without_extentions\n+      path[/^[^.]+/]\n+    end\n   end\n \n   ### Throttle Spammy Clients ###\n@@ -42,51 +48,62 @@ def allowed_ip?\n \n   throttle('req/ip', limit: 300, period: 1.minute, &:ip)\n \n-  ### Prevent Brute-Force Login Attacks ###\n-  throttle('login/ip', limit: 5, period: 20.seconds) do |req|\n-    req.ip if req.path == '/auth/sign_in' && req.post?\n-  end\n-\n-  ## Prevent Brute-Force Signup Attacks ###\n-  throttle('accounts/ip', limit: 5, period: 5.minutes) do |req|\n-    req.ip if req.path == '/api/v1/accounts' && req.post?\n-  end\n-\n-  ## Prevent Conversation Bombing on Widget APIs ###\n-  throttle('api/v1/widget/conversations', limit: 6, period: 12.hours) do |req|\n-    req.ip if req.path == '/api/v1/widget/conversations' && req.post?\n+  ### Prevent Brute-Force Super Admin Login Attacks ###\n+  throttle('super_admin_login/ip', limit: 5, period: 5.minutes) do |req|\n+    req.ip if req.path_without_extentions == '/super_admin/sign_in' && req.post?\n   end\n \n-  ## Prevent Contact update Bombing in Widget API ###\n-  throttle('api/v1/widget/contacts', limit: 60, period: 1.hour) do |req|\n-    req.ip if req.path == '/api/v1/widget/contacts' && (req.patch? || req.put?)\n-  end\n-\n-  # ref: https://github.com/rack/rack-attack/issues/399\n-  throttle('login/email', limit: 20, period: 5.minutes) do |req|\n-    if req.path == '/auth/sign_in' && req.post?\n+  throttle('super_admin_login/email', limit: 5, period: 15.minutes) do |req|\n+    if req.path_without_extentions == '/super_admin/sign_in' && req.post?\n       # NOTE: This line used to throw ArgumentError /rails/action_mailbox/sendgrid/inbound_emails : invalid byte sequence in UTF-8\n       # Hence placed in the if block\n+      # ref: https://github.com/rack/rack-attack/issues/399\n       email = req.params['email'].presence || ActionDispatch::Request.new(req.env).params['email'].presence\n       email.to_s.downcase.gsub(/\\s+/, '')\n     end\n   end\n \n-  throttle('super_admin_login/email', limit: 20, period: 5.minutes) do |req|\n-    if req.path == '/super_admin/sign_in' && req.post?\n+  # ### Prevent Brute-Force Login Attacks ###\n+  throttle('login/ip', limit: 5, period: 5.minutes) do |req|\n+    req.ip if req.path_without_extentions == '/auth/sign_in' && req.post?\n+  end\n+\n+  throttle('login/email', limit: 10, period: 15.minutes) do |req|\n+    if req.path_without_extentions == '/auth/sign_in' && req.post?\n+      # ref: https://github.com/rack/rack-attack/issues/399\n       # NOTE: This line used to throw ArgumentError /rails/action_mailbox/sendgrid/inbound_emails : invalid byte sequence in UTF-8\n       # Hence placed in the if block\n       email = req.params['email'].presence || ActionDispatch::Request.new(req.env).params['email'].presence\n       email.to_s.downcase.gsub(/\\s+/, '')\n     end\n   end\n \n+  ## Reset password throttling\n+  throttle('reset_password/ip', limit: 5, period: 30.minutes) do |req|\n+    req.ip if req.path_without_extentions == '/auth/password' && req.post?\n+  end\n+\n   throttle('reset_password/email', limit: 5, period: 1.hour) do |req|\n-    if req.path == '/auth/password' && req.post?\n+    if req.path_without_extentions == '/auth/password' && req.post?\n       email = req.params['email'].presence || ActionDispatch::Request.new(req.env).params['email'].presence\n       email.to_s.downcase.gsub(/\\s+/, '')\n     end\n   end\n+\n+  ## Prevent Brute-Force Signup Attacks ###\n+  throttle('accounts/ip', limit: 5, period: 30.minutes) do |req|\n+    req.ip if req.path_without_extentions == '/api/v1/accounts' && req.post?\n+  end\n+\n+  ## Prevent Conversation Bombing on Widget APIs ###\n+  throttle('api/v1/widget/conversations', limit: 6, period: 12.hours) do |req|\n+    req.ip if req.path_without_extentions == '/api/v1/widget/conversations' && req.post?\n+  end\n+\n+  ## Prevent Contact update Bombing in Widget API ###\n+  throttle('api/v1/widget/contacts', limit: 60, period: 1.hour) do |req|\n+    req.ip if req.path_without_extentions == '/api/v1/widget/contacts' && (req.patch? || req.put?)\n+  end\n end\n \n # Log blocked events"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "91dd92e318fc3e5f4614fce66897a786cd972fe8",
            "date": "2025-01-14T14:15:42Z",
            "author_login": "vishnu-narayanan"
          },
          {
            "sha": "03a938eb6092c988a1fb4e90cb3bfcbc34a26a81",
            "date": "2025-01-14T14:13:56Z",
            "author_login": "vishnu-narayanan"
          },
          {
            "sha": "26187c3ebf399ccec2e041d80a908fa94d8672c1",
            "date": "2025-01-14T10:58:29Z",
            "author_login": "scmmishra"
          },
          {
            "sha": "bffc24d119ac133f937ddce76b14dfc43d6d5ebc",
            "date": "2025-01-14T07:18:30Z",
            "author_login": "iamsivin"
          },
          {
            "sha": "dbcc55665aba40b4cea6a61545adca3dd01d877f",
            "date": "2025-01-14T03:35:29Z",
            "author_login": "scmmishra"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-307",
    "description": "Impact varies for each individual vulnerability in the application. For generation of accounts, it may be possible, depending on the amount of system resources available, to create a DoS event in the server. These accounts still need to be activated; however, it is possible to identify the output Status Code to separate accounts that are generated and waiting for email verification. \\n\\nFor the sign in directories, it is possible to brute force login attempts to either login portal, which could lead to account compromise.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-10-28T13:15:16.870",
    "last_modified": "2024-11-21T07:20:08.907",
    "fix_date": "2022-09-02T17:39:03Z"
  },
  "references": [
    {
      "url": "https://github.com/chatwoot/chatwoot/commit/9525d4f0346a2fdac13a0253f9180d20104a72d3",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/46f6e07e-f438-4540-938a-510047f987d0",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/chatwoot/chatwoot/commit/9525d4f0346a2fdac13a0253f9180d20104a72d3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/46f6e07e-f438-4540-938a-510047f987d0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:00.964143",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "chatwoot",
    "owner": "chatwoot",
    "created_at": "2019-08-14T06:50:51Z",
    "updated_at": "2025-01-14T12:56:36Z",
    "pushed_at": "2025-01-14T11:50:33Z",
    "size": 151937,
    "stars": 21934,
    "forks": 3740,
    "open_issues": 937,
    "watchers": 21934,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "3.x"
    ],
    "languages": {
      "Ruby": 2998525,
      "Vue": 2505452,
      "JavaScript": 2090105,
      "HTML": 162143,
      "SCSS": 105806,
      "Shell": 37442,
      "Liquid": 11120,
      "TypeScript": 5496,
      "Dockerfile": 4503,
      "Makefile": 1114,
      "Procfile": 283
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:00:34.446910"
  }
}