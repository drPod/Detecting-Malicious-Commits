{
  "cve_id": "CVE-2022-39229",
  "github_data": {
    "repository": "grafana/grafana",
    "fix_commit": "5644758f0c5ae9955a4e5480d71f9bef57fdce35",
    "related_commits": [
      "5644758f0c5ae9955a4e5480d71f9bef57fdce35",
      "5644758f0c5ae9955a4e5480d71f9bef57fdce35"
    ],
    "patch_url": "https://github.com/grafana/grafana/commit/5644758f0c5ae9955a4e5480d71f9bef57fdce35.patch",
    "fix_commit_details": {
      "sha": "5644758f0c5ae9955a4e5480d71f9bef57fdce35",
      "commit_date": "2022-09-16T06:57:22Z",
      "author": {
        "login": "linoman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add test for username/login field conflict",
        "length": 112,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 39,
        "additions": 39,
        "deletions": 0
      },
      "files": [
        {
          "filename": "pkg/services/sqlstore/user_test.go",
          "status": "modified",
          "additions": 39,
          "deletions": 0,
          "patch": "@@ -47,6 +47,45 @@ func TestUserDataAccess(t *testing.T) {\n \t\trequire.False(t, query.Result.IsDisabled)\n \t})\n \n+\tt.Run(\"Get User by login - user_2 uses user_1.email as login\", func(t *testing.T) {\n+\t\tss = InitTestDB(t)\n+\n+\t\t// create user_1\n+\t\tcmd := models.CreateUserCommand{\n+\t\t\tEmail:      \"user_1@mail.com\",\n+\t\t\tName:       \"user_1\",\n+\t\t\tLogin:      \"user_1\",\n+\t\t\tPassword:   \"user_1_password\",\n+\t\t\tIsDisabled: true,\n+\t\t}\n+\t\tuser_1, err := ss.CreateUser(context.Background(), cmd)\n+\t\trequire.Nil(t, err)\n+\n+\t\t// create user_2\n+\t\tcmd = models.CreateUserCommand{\n+\t\t\tEmail:      \"user_2@mail.com\",\n+\t\t\tName:       \"user_2\",\n+\t\t\tLogin:      \"user_1@mail.com\",\n+\t\t\tPassword:   \"user_2_password\",\n+\t\t\tIsDisabled: true,\n+\t\t}\n+\t\tuser_2, err := ss.CreateUser(context.Background(), cmd)\n+\t\trequire.Nil(t, err)\n+\n+\t\t// query user database for user_1 email\n+\t\tquery := models.GetUserByLoginQuery{LoginOrEmail: \"user_1@mail.com\"}\n+\t\terr = ss.GetUserByLogin(context.Background(), &query)\n+\t\trequire.Nil(t, err)\n+\n+\t\t// expect user_1 as result\n+\t\trequire.Equal(t, user_1.Email, query.Result.Email)\n+\t\trequire.Equal(t, user_1.Login, query.Result.Login)\n+\t\trequire.Equal(t, user_1.Name, query.Result.Name)\n+\t\trequire.NotEqual(t, user_2.Email, query.Result.Email)\n+\t\trequire.NotEqual(t, user_2.Login, query.Result.Login)\n+\t\trequire.NotEqual(t, user_2.Name, query.Result.Name)\n+\t})\n+\n \tt.Run(\"Testing DB - creates and loads disabled user\", func(t *testing.T) {\n \t\tss = InitTestDB(t)\n \t\tcmd := models.CreateUserCommand{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f7e0710f532ea3ae18083afc28c2516e9deb6135",
            "date": "2025-01-14T16:01:34Z",
            "author_login": "ifrost"
          },
          {
            "sha": "e38bab43dbfe07495fcbfaf01dad403ec0547659",
            "date": "2025-01-14T15:09:32Z",
            "author_login": "edvard-falkskar"
          },
          {
            "sha": "1ff4053f0391ed8b42cb1048a35a726da6ded97a",
            "date": "2025-01-14T15:06:41Z",
            "author_login": "gabor"
          },
          {
            "sha": "ce0d9866738334e78a832849b81ebf9969e0c6a9",
            "date": "2025-01-14T15:00:59Z",
            "author_login": "kalleep"
          },
          {
            "sha": "7151ea6abc4336f72b837adec679891483ab963b",
            "date": "2025-01-14T14:58:38Z",
            "author_login": "spinillos"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-287",
    "description": "Grafana is an open source data visualization platform for metrics, logs, and traces. Versions prior to 9.1.8 and 8.5.14 allow one user to block another user's login attempt by registering someone else'e email address as a username. A Grafana user\u2019s username and email address are unique fields, that means no other user can have the same username or email address as another user. A user can have an email address as a username. However, the login system allows users to log in with either username or email address. Since Grafana allows a user to log in with either their username or email address, this creates an usual behavior where `user_1` can register with one email address and `user_2` can register their username as `user_1`\u2019s email address. This prevents `user_1` logging into the application since `user_1`'s password won\u2019t match with `user_2`'s email address. Versions 9.1.8 and 8.5.14 contain a patch. There are no workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-10-13T23:15:10.937",
    "last_modified": "2024-11-21T07:17:50.027",
    "fix_date": "2022-09-16T06:57:22Z"
  },
  "references": [
    {
      "url": "https://github.com/grafana/grafana/commit/5644758f0c5ae9955a4e5480d71f9bef57fdce35",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/releases/tag/v9.1.8",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-gj7m-853r-289r",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/5644758f0c5ae9955a4e5480d71f9bef57fdce35",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/releases/tag/v9.1.8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-gj7m-853r-289r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.337070",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "grafana",
    "owner": "grafana",
    "created_at": "2013-12-11T15:59:56Z",
    "updated_at": "2025-01-14T13:04:53Z",
    "pushed_at": "2025-01-14T13:12:26Z",
    "size": 1292625,
    "stars": 65883,
    "forks": 12291,
    "open_issues": 4193,
    "watchers": 65883,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 29758164,
      "Go": 20683989,
      "Rich Text Format": 352348,
      "HTML": 334782,
      "CUE": 186863,
      "JavaScript": 170294,
      "Shell": 148477,
      "MDX": 147186,
      "Starlark": 132379,
      "SCSS": 112108,
      "Jsonnet": 39563,
      "Makefile": 24993,
      "Python": 23487,
      "Dockerfile": 21670,
      "Jinja": 11630,
      "HCL": 4097,
      "CSS": 3116,
      "Mustache": 2239,
      "Smarty": 2116,
      "PowerShell": 367,
      "Assembly": 168
    },
    "commit_activity": {
      "total_commits_last_year": 9810,
      "avg_commits_per_week": 188.65384615384616,
      "days_active_last_year": 302
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:16:15.724443"
  }
}