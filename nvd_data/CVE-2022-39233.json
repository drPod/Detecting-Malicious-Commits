{
  "cve_id": "CVE-2022-39233",
  "github_data": {
    "repository": "Enalean/tuleap",
    "fix_commit": "a06cb42d55c840d61a484472ed6b169ab23853ac",
    "related_commits": [
      "a06cb42d55c840d61a484472ed6b169ab23853ac",
      "a06cb42d55c840d61a484472ed6b169ab23853ac"
    ],
    "patch_url": "https://github.com/Enalean/tuleap/commit/a06cb42d55c840d61a484472ed6b169ab23853ac.patch",
    "fix_commit_details": {
      "sha": "a06cb42d55c840d61a484472ed6b169ab23853ac",
      "commit_date": "2022-09-20T14:46:38Z",
      "author": {
        "login": "yannis-rossetto",
        "type": "User",
        "stats": {
          "total_commits": 8598,
          "average_weekly_commits": 8.347572815533981,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 535
        }
      },
      "commit_message": {
        "title": "fix!: GitLab repository branch prefix can be updated by any user",
        "length": 410,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 75,
        "additions": 68,
        "deletions": 7
      },
      "files": [
        {
          "filename": "plugins/gitlab/include/Artifact/Action/CreateBranchPrefixUpdater.php",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -21,6 +21,9 @@\n \n namespace Tuleap\\Gitlab\\Artifact\\Action;\n \n+use GitPermissionsManager;\n+use GitUserNotAdminException;\n+use PFUser;\n use Tuleap\\Git\\Branch\\BranchName;\n use Tuleap\\Git\\Branch\\InvalidBranchNameException;\n use Tuleap\\Gitlab\\Repository\\GitlabRepositoryIntegrationFactory;\n@@ -32,21 +35,28 @@ final class CreateBranchPrefixUpdater\n \n     public function __construct(\n         private GitlabRepositoryIntegrationFactory $integration_factory,\n+        private GitPermissionsManager $git_permissions_manager,\n         private SaveIntegrationBranchPrefix $branch_prefix_saver,\n     ) {\n     }\n \n     /**\n      * @throws GitlabRepositoryIntegrationNotFoundException\n      * @throws InvalidBranchNameException\n+     * @throws GitUserNotAdminException\n      */\n-    public function updateBranchPrefix(int $integration_id, string $prefix): void\n+    public function updateBranchPrefix(PFUser $user, int $integration_id, string $prefix): void\n     {\n         $gitlab_repository = $this->integration_factory->getIntegrationById($integration_id);\n         if (! $gitlab_repository) {\n             throw new GitlabRepositoryIntegrationNotFoundException($integration_id);\n         }\n \n+        $project = $gitlab_repository->getProject();\n+        if (! $this->git_permissions_manager->userIsGitAdmin($user, $project)) {\n+            throw new GitUserNotAdminException();\n+        }\n+\n         BranchName::fromBranchNameShortHand($prefix . self::FAKE_BRANCH_NAME);\n \n         $this->branch_prefix_saver->setCreateBranchPrefixForIntegration("
        },
        {
          "filename": "plugins/gitlab/include/REST/v1/GitlabRepositoryResource.php",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -473,13 +473,15 @@ protected function patchId(\n             $prefix_updater = new CreateBranchPrefixUpdater(\n                 new GitlabRepositoryIntegrationFactory(\n                     new GitlabRepositoryIntegrationDao(),\n-                    ProjectManager::instance()\n+                    ProjectManager::instance(),\n                 ),\n-                new CreateBranchPrefixDao()\n+                $this->getGitPermissionsManager(),\n+                new CreateBranchPrefixDao(),\n             );\n \n             try {\n                 $prefix_updater->updateBranchPrefix(\n+                    $current_user,\n                     $id,\n                     $patch_representation->create_branch_prefix\n                 );\n@@ -490,6 +492,8 @@ protected function patchId(\n                     400,\n                     $exception->getMessage()\n                 );\n+            } catch (GitUserNotAdminException $exception) {\n+                throw new RestException(401, \"User must be Git administrator.\");\n             }\n         }\n "
        },
        {
          "filename": "plugins/gitlab/tests/unit/Artifact/Action/CreateBranchPrefixUpdaterTest.php",
          "status": "modified",
          "additions": 51,
          "deletions": 4,
          "patch": "@@ -22,11 +22,14 @@\n \n namespace Tuleap\\Gitlab\\Artifact\\Action;\n \n+use GitPermissionsManager;\n+use GitUserNotAdminException;\n use Tuleap\\Git\\Branch\\InvalidBranchNameException;\n use Tuleap\\Gitlab\\Repository\\GitlabRepositoryIntegrationFactory;\n use Tuleap\\Gitlab\\Repository\\GitlabRepositoryIntegrationNotFoundException;\n use Tuleap\\Gitlab\\Test\\Builder\\RepositoryIntegrationBuilder;\n use Tuleap\\Gitlab\\Test\\Stubs\\SaveIntegrationBranchPrefixStub;\n+use Tuleap\\Test\\Builders\\UserTestBuilder;\n use Tuleap\\Test\\PHPUnit\\TestCase;\n \n final class CreateBranchPrefixUpdaterTest extends TestCase\n@@ -38,11 +41,16 @@ final class CreateBranchPrefixUpdaterTest extends TestCase\n     private $integration_factory;\n     private SaveIntegrationBranchPrefixStub $branch_prefix_saver;\n     private string $branch_prefix;\n+    /**\n+     * @var GitPermissionsManager&\\PHPUnit\\Framework\\MockObject\\MockObject\n+     */\n+    private $git_permissions_manager;\n \n     protected function setUp(): void\n     {\n-        $this->integration_factory = $this->createMock(GitlabRepositoryIntegrationFactory::class);\n-        $this->branch_prefix_saver = SaveIntegrationBranchPrefixStub::withCallCount();\n+        $this->integration_factory     = $this->createMock(GitlabRepositoryIntegrationFactory::class);\n+        $this->git_permissions_manager = $this->createMock(GitPermissionsManager::class);\n+        $this->branch_prefix_saver     = SaveIntegrationBranchPrefixStub::withCallCount();\n \n         $this->branch_prefix = 'dev-';\n     }\n@@ -51,10 +59,15 @@ private function updateBranchPrefix(): void\n     {\n         $updater = new CreateBranchPrefixUpdater(\n             $this->integration_factory,\n-            $this->branch_prefix_saver\n+            $this->git_permissions_manager,\n+            $this->branch_prefix_saver,\n         );\n \n-        $updater->updateBranchPrefix(self::INTEGRATION_ID, $this->branch_prefix);\n+        $updater->updateBranchPrefix(\n+            UserTestBuilder::anActiveUser()->build(),\n+            self::INTEGRATION_ID,\n+            $this->branch_prefix,\n+        );\n     }\n \n     public function testItStoresTheBranchPrefix(): void\n@@ -65,6 +78,11 @@ public function testItStoresTheBranchPrefix(): void\n             ->with(self::INTEGRATION_ID)\n             ->willReturn(RepositoryIntegrationBuilder::aGitlabRepositoryIntegration(self::INTEGRATION_ID)->build());\n \n+        $this->git_permissions_manager\n+            ->expects(self::once())\n+            ->method('userIsGitAdmin')\n+            ->willReturn(true);\n+\n         $this->updateBranchPrefix();\n \n         self::assertSame(1, $this->branch_prefix_saver->getCallCount());\n@@ -78,6 +96,11 @@ public function testItStoresTheBranchPrefixWithSomeSpecialChars(): void\n             ->with(self::INTEGRATION_ID)\n             ->willReturn(RepositoryIntegrationBuilder::aGitlabRepositoryIntegration(self::INTEGRATION_ID)->build());\n \n+        $this->git_permissions_manager\n+            ->expects(self::once())\n+            ->method('userIsGitAdmin')\n+            ->willReturn(true);\n+\n         $this->branch_prefix = 'dev/';\n         $this->updateBranchPrefix();\n \n@@ -98,6 +121,25 @@ public function testItThrowsAnExceptionIfIntegrationNotFoundTheBranchPrefix(): v\n         self::assertSame(0, $this->branch_prefix_saver->getCallCount());\n     }\n \n+    public function testItThrowsAnExceptionIfUserIsNotGitAdministrator(): void\n+    {\n+        $this->integration_factory\n+            ->expects(self::once())\n+            ->method('getIntegrationById')\n+            ->with(self::INTEGRATION_ID)\n+            ->willReturn(RepositoryIntegrationBuilder::aGitlabRepositoryIntegration(self::INTEGRATION_ID)->build());\n+\n+        $this->git_permissions_manager\n+            ->expects(self::once())\n+            ->method('userIsGitAdmin')\n+            ->willReturn(false);\n+\n+        $this->expectException(GitUserNotAdminException::class);\n+        $this->updateBranchPrefix();\n+\n+        self::assertSame(0, $this->branch_prefix_saver->getCallCount());\n+    }\n+\n     public function testItThrowsAnExceptionIfBranchPrefixIsNotValid(): void\n     {\n         $this->integration_factory\n@@ -106,6 +148,11 @@ public function testItThrowsAnExceptionIfBranchPrefixIsNotValid(): void\n             ->with(self::INTEGRATION_ID)\n             ->willReturn(RepositoryIntegrationBuilder::aGitlabRepositoryIntegration(self::INTEGRATION_ID)->build());\n \n+        $this->git_permissions_manager\n+            ->expects(self::once())\n+            ->method('userIsGitAdmin')\n+            ->willReturn(true);\n+\n         $this->branch_prefix = 'dev:';\n \n         $this->expectException(InvalidBranchNameException::class);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "051276cb436588a4baff62939e527b88f3f40017",
            "date": "2025-01-14T13:00:48Z",
            "author_login": "magarnier"
          },
          {
            "sha": "aaf9917432f71eeb59a3e17eda2d0a53383216e9",
            "date": "2025-01-14T13:00:39Z",
            "author_login": "magarnier"
          },
          {
            "sha": "2238687f40ca2e7ebc48478356ef6c4abff3233b",
            "date": "2025-01-14T09:25:59Z",
            "author_login": "magarnier"
          },
          {
            "sha": "2c81587aad70e2d52b60dc0edac7b41c341e002e",
            "date": "2025-01-14T09:25:53Z",
            "author_login": "magarnier"
          },
          {
            "sha": "33818218db54e2a64bf71772ac19c612b3ba406a",
            "date": "2025-01-14T09:19:45Z",
            "author_login": "magarnier"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-862",
    "description": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In versions 12.9.99.228 and above, prior to 14.0.99.24, authorizations are not properly verified when updating the branch prefix used by the GitLab repository integration. Authenticated users can change the branch prefix of any of the GitLab repository integration they can see vie the REST endpoint `PATCH /gitlab_repositories/{id}`. This action should be restricted to Git administrators. This issue is patched in Tuleap Community Edition 14.0.99.24 and Tuleap Enterprise Edition 14.0-3. There are no known workarounds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-10-19T11:15:11.160",
    "last_modified": "2024-11-21T07:17:50.530",
    "fix_date": "2022-09-20T14:46:38Z"
  },
  "references": [
    {
      "url": "https://github.com/Enalean/tuleap/commit/a06cb42d55c840d61a484472ed6b169ab23853ac",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-3884-972x-3ccq",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=a06cb42d55c840d61a484472ed6b169ab23853ac",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=28848",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/commit/a06cb42d55c840d61a484472ed6b169ab23853ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Enalean/tuleap/security/advisories/GHSA-3884-972x-3ccq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/git/tuleap/tuleap/stable?a=commit&h=a06cb42d55c840d61a484472ed6b169ab23853ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://tuleap.net/plugins/tracker/?aid=28848",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:00.939947",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tuleap",
    "owner": "Enalean",
    "created_at": "2012-06-12T15:48:54Z",
    "updated_at": "2025-01-14T09:23:28Z",
    "pushed_at": "2025-01-14T09:23:22Z",
    "size": 382430,
    "stars": 1043,
    "forks": 285,
    "open_issues": 3,
    "watchers": 1043,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 64309783,
      "TypeScript": 12164261,
      "JavaScript": 4302645,
      "Vue": 3161023,
      "Mustache": 2174238,
      "SCSS": 1603030,
      "HTML": 502284,
      "CSS": 281155,
      "Shell": 126767,
      "Smarty": 121199,
      "MDX": 89474,
      "Nix": 48015,
      "Go": 44709,
      "Makefile": 41978,
      "Rust": 27741,
      "Groovy": 13947,
      "PEG.js": 12394,
      "Perl": 11384,
      "Dockerfile": 10302,
      "Python": 3977,
      "XSLT": 1077,
      "Awk": 597
    },
    "commit_activity": {
      "total_commits_last_year": 5447,
      "avg_commits_per_week": 104.75,
      "days_active_last_year": 255
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:46:56.606881"
  }
}