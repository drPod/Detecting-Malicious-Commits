{
  "cve_id": "CVE-2022-39243",
  "github_data": {
    "repository": "brettwooldridge/NuProcess",
    "fix_commit": "29bc09de561bf00ff9bf77123756363a9709f868",
    "related_commits": [
      "29bc09de561bf00ff9bf77123756363a9709f868",
      "29bc09de561bf00ff9bf77123756363a9709f868"
    ],
    "patch_url": "https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868.patch",
    "fix_commit_details": {
      "sha": "29bc09de561bf00ff9bf77123756363a9709f868",
      "commit_date": "2022-09-20T18:06:48Z",
      "author": {
        "login": "bturner",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #143 from benhumphreys/harden-null-injection",
        "length": 236,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 39,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/main/java/com/zaxxer/nuprocess/NuProcessBuilder.java",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -253,6 +253,7 @@ public void setCwd(Path cwd)\n     */\n    public NuProcess start()\n    {\n+      ensureNoNullCharacters(command);\n       ensureListener();\n       String[] env = prepareEnvironment();\n \n@@ -267,6 +268,7 @@ public NuProcess start()\n     */\n    public void run()\n    {\n+      ensureNoNullCharacters(command);\n       ensureListener();\n       String[] env = prepareEnvironment();\n \n@@ -280,6 +282,14 @@ private void ensureListener()\n       }\n    }\n \n+   private void ensureNoNullCharacters(List<String> commands) {\n+      for (String command : commands) {\n+         if (command.indexOf('\\u0000') >= 0) {\n+            throw new IllegalArgumentException(\"Commands may not contain null characters\");\n+         }\n+      }\n+   }\n+\n    private String[] prepareEnvironment()\n    {\n       String[] env = new String[environment.size()];"
        },
        {
          "filename": "src/test/java/com/zaxxer/nuprocess/RunTest.java",
          "status": "modified",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -316,6 +316,32 @@ public void softCloseStdinAfterWrite()\n       System.err.println(\"Completed test softCloseStdinAfterWrite()\");\n    }\n \n+   @Test(expected = IllegalArgumentException.class)\n+   public void nullCommandViaCommandMutationWithRun() {\n+      NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);\n+      pb.command().add(\"--foo\\0--bar\");\n+      pb.run();\n+   }\n+\n+   @Test(expected = IllegalArgumentException.class)\n+   public void nullCommandViaCommandMutationWithStart() {\n+      NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command);\n+      pb.command().add(\"--foo\\0--bar\");\n+      pb.start();\n+   }\n+\n+   @Test(expected = IllegalArgumentException.class)\n+   public void nullCommandViaConstructorWithRun() {\n+      NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");\n+      pb.run();\n+   }\n+\n+   @Test(expected = IllegalArgumentException.class)\n+   public void nullCommandViaConstructorWithStart() {\n+      NuProcessBuilder pb = new NuProcessBuilder(new NullProcessHandler(), command, \"--foo\\0--bar\");\n+      pb.start();\n+   }\n+\n    private static byte[] getLotsOfBytes()\n    {\n       StringBuilder sb = new StringBuilder();\n@@ -395,6 +421,9 @@ boolean checkAdlers()\n       }\n    }\n \n+   private static class NullProcessHandler extends NuAbstractProcessHandler {\n+   }\n+\n    private static class Utf8DecodingListener extends NuAbstractCharsetHandler\n    {\n       private final CharBuffer utf8Buffer;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7b3a958c22abc1228a34d6fb190b16ac27fafa17",
            "date": "2024-09-23T13:46:53Z",
            "author_login": "brettwooldridge"
          },
          {
            "sha": "46e142ba0831cdc207d12012dd4b9d88659f3522",
            "date": "2024-09-23T13:46:49Z",
            "author_login": "brettwooldridge"
          },
          {
            "sha": "3e71cf786bcfc5080c9437a7666951b0036cd295",
            "date": "2024-09-23T13:38:18Z",
            "author_login": "brettwooldridge"
          },
          {
            "sha": "d5236c854573ad4bdc164e8d01ff93365859d26e",
            "date": "2024-05-10T03:11:26Z",
            "author_login": "bturner"
          },
          {
            "sha": "805c861d8d5b23ca2371df26c7caddaf085b7041",
            "date": "2024-05-05T06:00:31Z",
            "author_login": "bturner"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.4,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-77",
    "description": "NuProcess is an external process execution implementation for Java. In all the versions of NuProcess where it forks processes by using the JVM's Java_java_lang_UNIXProcess_forkAndExec method (1.2.0+), attackers can use NUL characters in their strings to perform command line injection. Java's ProcessBuilder isn't vulnerable because of a check in ProcessBuilder.start. NuProcess is missing that check. This vulnerability can only be exploited to inject command line arguments on Linux. Version 2.0.5 contains a patch. As a workaround, users of the library can sanitize command strings to remove NUL characters prior to passing them to NuProcess for execution.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-26T14:15:10.407",
    "last_modified": "2024-11-21T07:17:51.717",
    "fix_date": "2022-09-20T18:06:48Z"
  },
  "references": [
    {
      "url": "https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/brettwooldridge/NuProcess/pull/143",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/brettwooldridge/NuProcess/security/advisories/GHSA-cxgf-v2p8-7ph7",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/brettwooldridge/NuProcess/commit/29bc09de561bf00ff9bf77123756363a9709f868",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/brettwooldridge/NuProcess/pull/143",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/brettwooldridge/NuProcess/security/advisories/GHSA-cxgf-v2p8-7ph7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.289260",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "NuProcess",
    "owner": "brettwooldridge",
    "created_at": "2013-08-07T07:50:14Z",
    "updated_at": "2024-12-28T22:02:46Z",
    "pushed_at": "2024-12-14T20:02:04Z",
    "size": 1003,
    "stars": 724,
    "forks": 84,
    "open_issues": 34,
    "watchers": 724,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 290090,
      "Shell": 1527,
      "HTML": 146
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T21:53:46.377872"
  }
}