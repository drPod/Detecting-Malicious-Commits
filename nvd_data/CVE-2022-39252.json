{
  "cve_id": "CVE-2022-39252",
  "github_data": {
    "repository": "matrix-org/matrix-rust-sdk",
    "fix_commit": "093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
    "related_commits": [
      "093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
      "41449d2cc360e347f5d4e1c154ec1e3185f11acd",
      "093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
      "41449d2cc360e347f5d4e1c154ec1e3185f11acd"
    ],
    "patch_url": "https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb.patch",
    "fix_commit_details": {
      "sha": "093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
      "commit_date": "2022-08-02T10:52:02Z",
      "author": {
        "login": "poljar",
        "type": "User",
        "stats": {
          "total_commits": 2425,
          "average_weekly_commits": 8.85036496350365,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 223
        }
      },
      "commit_message": {
        "title": "fix(crypto): Only accept forwarded room keys from our own trusted devices",
        "length": 73,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 31,
        "deletions": 2
      },
      "files": [
        {
          "filename": "crates/matrix-sdk-crypto/src/gossiping/machine.rs",
          "status": "modified",
          "additions": 31,
          "deletions": 2,
          "patch": "@@ -945,6 +945,21 @@ impl GossipMachine {\n         }\n     }\n \n+    async fn should_accept_forward(\n+        &self,\n+        info: &GossipRequest,\n+        sender_key: Curve25519PublicKey,\n+    ) -> Result<bool, CryptoStoreError> {\n+        let device =\n+            self.store.get_device_from_curve_key(&info.request_recipient, sender_key).await?;\n+\n+        if let Some(device) = device {\n+            Ok(device.user_id() == self.user_id() && device.is_verified())\n+        } else {\n+            Ok(false)\n+        }\n+    }\n+\n     /// Receive a forwarded room key event that was sent using any of our\n     /// supported content types.\n     async fn receive_supported_keys(\n@@ -956,8 +971,22 @@ impl GossipMachine {\n         let algorithm = event.content.algorithm();\n \n         if let Some(info) = self.get_key_info(event).await? {\n-            self.accept_forwarded_room_key(&info, &event.sender, sender_key, algorithm, content)\n-                .await\n+            if self.should_accept_forward(&info, sender_key).await? {\n+                self.accept_forwarded_room_key(&info, &event.sender, sender_key, algorithm, content)\n+                    .await\n+            } else {\n+                warn!(\n+                    sender = %event.sender,\n+                    %sender_key,\n+                    room_id = %content.room_id,\n+                    session_id = content.session_id.as_str(),\n+                    claimed_sender_key = %content.claimed_sender_key,\n+                    \"Received a forwarded room key from an unknown device, or \\\n+                     from a device that the key request recipient doesn't own\",\n+                );\n+\n+                Ok(None)\n+            }\n         } else {\n             warn!(\n                 sender = %event.sender,"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bd5d7aafee3cac797e709eadc2f914438211a526",
            "date": "2025-01-10T12:20:10Z",
            "author_login": "jmartinesp"
          },
          {
            "sha": "e015a531da018e6dece8be1e5369392c743475d9",
            "date": "2025-01-10T12:19:58Z",
            "author_login": "jmartinesp"
          },
          {
            "sha": "b9014a5e2a20b0c58cd5b8d0cf0f283c44498142",
            "date": "2025-01-14T10:15:08Z",
            "author_login": "bnjbvr"
          },
          {
            "sha": "e9487b085125d3cd2057c8258a5a1a2c25edc4eb",
            "date": "2025-01-13T16:32:07Z",
            "author_login": "jmartinesp"
          },
          {
            "sha": "c60bfb877af9f5aa34eac20725e50f857d640a8e",
            "date": "2025-01-13T16:16:37Z",
            "author_login": "poljar"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N",
    "cwe_id": "CWE-287",
    "description": "matrix-rust-sdk is an implementation of a Matrix client-server library in Rust, and matrix-sdk-crypto is the Matrix encryption library. Prior to version 0.6, when a user requests a room key from their devices, the software correctly remembers the request. When the user receives a forwarded room key, the software accepts it without checking who the room key came from. This allows homeservers to try to insert room keys of questionable validity, potentially mounting an impersonation attack. Version 0.6 fixes this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-29T15:15:10.203",
    "last_modified": "2024-11-21T07:17:52.873",
    "fix_date": "2022-08-02T10:52:02Z"
  },
  "references": [
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/releases/tag/matrix-sdk-0.6.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-vp68-2wrm-69qm",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/releases/tag/matrix-sdk-0.6.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-vp68-2wrm-69qm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.301701",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "matrix-rust-sdk",
    "owner": "matrix-org",
    "created_at": "2020-02-21T15:47:16Z",
    "updated_at": "2025-01-14T15:23:56Z",
    "pushed_at": "2025-01-14T16:44:52Z",
    "size": 59856,
    "stars": 1304,
    "forks": 267,
    "open_issues": 221,
    "watchers": 1304,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Rust": 9387606,
      "Shell": 5632,
      "Swift": 3872,
      "Python": 2588,
      "Ruby": 2075,
      "Perl": 782,
      "Makefile": 288,
      "Dockerfile": 125
    },
    "commit_activity": {
      "total_commits_last_year": 2761,
      "avg_commits_per_week": 53.09615384615385,
      "days_active_last_year": 272
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T20:52:29.886936"
  }
}