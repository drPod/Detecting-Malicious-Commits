{
  "cve_id": "CVE-2022-39264",
  "github_data": {
    "repository": "Nheko-Reborn/nheko",
    "fix_commit": "67bee15a389f9b8a9f6c3a340558d1e2319e7199",
    "related_commits": [
      "67bee15a389f9b8a9f6c3a340558d1e2319e7199",
      "67bee15a389f9b8a9f6c3a340558d1e2319e7199"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "67bee15a389f9b8a9f6c3a340558d1e2319e7199",
      "commit_date": "2022-09-28T11:36:52Z",
      "author": {
        "login": "deepbluev7",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevent the homeserver from inserting malicious secrets",
        "length": 1441,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 40,
        "additions": 25,
        "deletions": 15
      },
      "files": [
        {
          "filename": "src/encryption/Olm.cpp",
          "status": "modified",
          "additions": 25,
          "deletions": 15,
          "patch": "@@ -342,10 +342,13 @@ handle_olm_message(const OlmMessage &msg, const UserKeyCache &otherUserDeviceKey\n                 if (msg.sender != local_user.to_string())\n                     return;\n \n-                auto secret_name = request_id_to_secret_name.find(e->content.request_id);\n+                auto secret_name_it = request_id_to_secret_name.find(e->content.request_id);\n \n-                if (secret_name != request_id_to_secret_name.end()) {\n-                    nhlog::crypto()->info(\"Received secret: {}\", secret_name->second);\n+                if (secret_name_it != request_id_to_secret_name.end()) {\n+                    auto secret_name = secret_name_it->second;\n+                    request_id_to_secret_name.erase(secret_name_it);\n+\n+                    nhlog::crypto()->info(\"Received secret: {}\", secret_name);\n \n                     mtx::events::msg::SecretRequest secretRequest{};\n                     secretRequest.action = mtx::events::msg::RequestAction::Cancellation;\n@@ -358,15 +361,24 @@ handle_olm_message(const OlmMessage &msg, const UserKeyCache &otherUserDeviceKey\n                         return;\n \n                     auto deviceKeys = cache::userKeys(local_user.to_string());\n+                    if (!deviceKeys)\n+                        return;\n+\n                     std::string sender_device_id;\n-                    if (deviceKeys) {\n-                        for (auto &[dev, key] : deviceKeys->device_keys) {\n-                            if (key.keys[\"curve25519:\" + dev] == msg.sender_key) {\n-                                sender_device_id = dev;\n-                                break;\n-                            }\n+                    for (auto &[dev, key] : deviceKeys->device_keys) {\n+                        if (key.keys[\"curve25519:\" + dev] == msg.sender_key) {\n+                            sender_device_id = dev;\n+                            break;\n                         }\n                     }\n+                    if (!verificationStatus->verified_devices.count(sender_device_id) ||\n+                        !verificationStatus->verified_device_keys.count(msg.sender_key) ||\n+                        verificationStatus->verified_device_keys.at(msg.sender_key) !=\n+                          crypto::Trust::Verified) {\n+                        nhlog::net()->critical(\n+                          \"Received secret from unverified device {}! Ignoring!\", sender_device_id);\n+                        return;\n+                    }\n \n                     std::map<mtx::identifiers::User,\n                              std::map<std::string, mtx::events::msg::SecretRequest>>\n@@ -380,19 +392,17 @@ handle_olm_message(const OlmMessage &msg, const UserKeyCache &otherUserDeviceKey\n                     http::client()->send_to_device<mtx::events::msg::SecretRequest>(\n                       http::client()->generate_txn_id(),\n                       body,\n-                      [name = secret_name->second](mtx::http::RequestErr err) {\n+                      [secret_name](mtx::http::RequestErr err) {\n                           if (err) {\n                               nhlog::net()->error(\"Failed to send request cancellation \"\n                                                   \"for secrect \"\n                                                   \"'{}'\",\n-                                                  name);\n+                                                  secret_name);\n                           }\n                       });\n \n-                    nhlog::crypto()->info(\"Storing secret {}\", secret_name->second);\n-                    cache::client()->storeSecret(secret_name->second, e->content.secret);\n-\n-                    request_id_to_secret_name.erase(secret_name);\n+                    nhlog::crypto()->info(\"Storing secret {}\", secret_name);\n+                    cache::client()->storeSecret(secret_name, e->content.secret);\n                 }\n \n             } else if (auto sec_req = std::get_if<DeviceEvent<msg::SecretRequest>>(&device_event)) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be0a1bc39cfc97af839963a36227c2c035028a2e",
            "date": "2025-01-18T19:07:56Z",
            "author_login": "deepbluev7"
          },
          {
            "sha": "101934b2ba457cdceb61cf474a91698846877da1",
            "date": "2025-01-15T23:57:11Z",
            "author_login": "deepbluev7"
          },
          {
            "sha": "5fe8ebf335add0c90f2db6c23f165d4edd63691c",
            "date": "2025-01-10T00:15:56Z",
            "author_login": "deepbluev7"
          },
          {
            "sha": "e9bbd61110de00d97529db25567b818f20481a25",
            "date": "2025-01-09T23:06:17Z",
            "author_login": "deepbluev7"
          },
          {
            "sha": "76f19d879e8c48e4e6414f2c26592771f807d2db",
            "date": "2025-01-09T17:43:52Z",
            "author_login": "deepbluev7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N",
    "cwe_id": "CWE-287",
    "description": "nheko is a desktop client for the Matrix communication application. All versions below 0.10.2 are vulnerable homeservers inserting malicious secrets, which could lead to man-in-the-middle attacks. Users can upgrade to version 0.10.2 to protect against this issue. As a workaround, one may apply the patch manually, avoid doing verifications of one's own devices, and/or avoid pressing the request button in the settings menu.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-09-28T22:15:14.633",
    "last_modified": "2024-11-21T07:17:54.687",
    "fix_date": "2022-09-28T11:36:52Z"
  },
  "references": [
    {
      "url": "https://github.com/Nheko-Reborn/nheko/commit/67bee15a389f9b8a9f6c3a340558d1e2319e7199",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Nheko-Reborn/nheko/releases/tag/v0.10.2",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Nheko-Reborn/nheko/security/advisories/GHSA-8jcp-8jq4-5mm7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TA6A5ADUVAYKD3ZFLF2JPZOTIOFJOEU7/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YBOL6OOQGPZD2RLYT4EHAWTFXNIHLYEN/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Nheko-Reborn/nheko/commit/67bee15a389f9b8a9f6c3a340558d1e2319e7199",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Nheko-Reborn/nheko/releases/tag/v0.10.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/Nheko-Reborn/nheko/security/advisories/GHSA-8jcp-8jq4-5mm7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TA6A5ADUVAYKD3ZFLF2JPZOTIOFJOEU7/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YBOL6OOQGPZD2RLYT4EHAWTFXNIHLYEN/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:03:41.297584",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "nheko",
    "owner": "Nheko-Reborn",
    "created_at": "2019-01-10T23:09:21Z",
    "updated_at": "2025-01-26T05:09:25Z",
    "pushed_at": "2025-01-18T19:08:19Z",
    "size": 28952,
    "stars": 2003,
    "forks": 209,
    "open_issues": 411,
    "watchers": 2003,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 2637879,
      "QML": 633939,
      "CMake": 57521,
      "Python": 52134,
      "Shell": 18319,
      "Objective-C++": 10526,
      "Qt Script": 3294,
      "Batchfile": 2606,
      "Makefile": 1624,
      "PowerShell": 1060,
      "Objective-C": 540,
      "Ruby": 176
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:58:01.157705"
  }
}