{
  "cve_id": "CVE-2022-39324",
  "github_data": {
    "repository": "grafana/grafana",
    "fix_commit": "239888f22983010576bb3a9135a7294e88c0c74a",
    "related_commits": [
      "239888f22983010576bb3a9135a7294e88c0c74a",
      "d7dcea71ea763780dc286792a0afd560bff2985c",
      "239888f22983010576bb3a9135a7294e88c0c74a",
      "d7dcea71ea763780dc286792a0afd560bff2985c"
    ],
    "patch_url": "https://github.com/grafana/grafana/commit/239888f22983010576bb3a9135a7294e88c0c74a.patch",
    "fix_commit_details": {
      "sha": "239888f22983010576bb3a9135a7294e88c0c74a",
      "commit_date": "2022-12-13T13:48:54Z",
      "author": {
        "login": "dprokop",
        "type": "User",
        "stats": {
          "total_commits": 976,
          "average_weekly_commits": 1.6798623063683304,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 238
        }
      },
      "commit_message": {
        "title": "Snapshots: Build snapshot originalUrl on the backend  (#60232)",
        "length": 358,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 91,
        "additions": 76,
        "deletions": 15
      },
      "files": [
        {
          "filename": "packages/grafana-ui/src/components/ConfirmModal/ConfirmModal.tsx",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -21,8 +21,12 @@ export interface ConfirmModalProps {\n   description?: React.ReactNode;\n   /** Text for confirm button */\n   confirmText: string;\n+  /** Variant for confirm button */\n+  confirmVariant?: ButtonVariant;\n   /** Text for dismiss button */\n   dismissText?: string;\n+  /** Variant for dismiss button */\n+  dismissVariant?: ButtonVariant;\n   /** Icon for the modal header */\n   icon?: IconName;\n   /** Additional styling for modal container */\n@@ -47,8 +51,10 @@ export const ConfirmModal = ({\n   body,\n   description,\n   confirmText,\n+  confirmVariant = 'destructive',\n   confirmationText,\n   dismissText = 'Cancel',\n+  dismissVariant = 'secondary',\n   alternativeText,\n   modalClass,\n   icon = 'exclamation-triangle',\n@@ -85,7 +91,7 @@ export const ConfirmModal = ({\n         ) : null}\n       </div>\n       <Modal.ButtonRow>\n-        <Button variant=\"secondary\" onClick={onDismiss} fill=\"outline\">\n+        <Button variant={dismissVariant} onClick={onDismiss} fill=\"outline\">\n           {dismissText}\n         </Button>\n         <Button"
        },
        {
          "filename": "pkg/api/dashboard_snapshot.go",
          "status": "modified",
          "additions": 19,
          "deletions": 4,
          "patch": "@@ -84,6 +84,15 @@ func createExternalDashboardSnapshot(cmd dashboardsnapshots.CreateDashboardSnaps\n \treturn &createSnapshotResponse, nil\n }\n \n+func createOriginalDashboardURL(appURL string, cmd *dashboardsnapshots.CreateDashboardSnapshotCommand) (string, error) {\n+\tdashUID := cmd.Dashboard.Get(\"uid\").MustString(\"\")\n+\tif ok := util.IsValidShortUID(dashUID); !ok {\n+\t\treturn \"\", fmt.Errorf(\"invalid dashboard UID\")\n+\t}\n+\n+\treturn fmt.Sprintf(\"/d/%v\", dashUID), nil\n+}\n+\n // swagger:route POST /snapshots snapshots createDashboardSnapshot\n //\n // When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.\n@@ -104,10 +113,14 @@ func (hs *HTTPServer) CreateDashboardSnapshot(c *models.ReqContext) response.Res\n \t\tcmd.Name = \"Unnamed snapshot\"\n \t}\n \n-\tvar url string\n+\tvar snapshotUrl string\n \tcmd.ExternalUrl = \"\"\n \tcmd.OrgId = c.OrgID\n \tcmd.UserId = c.UserID\n+\toriginalDashboardURL, err := createOriginalDashboardURL(hs.Cfg.AppURL, &cmd)\n+\tif err != nil {\n+\t\treturn response.Error(http.StatusInternalServerError, \"Invalid app URL\", err)\n+\t}\n \n \tif cmd.External {\n \t\tif !setting.ExternalEnabled {\n@@ -121,7 +134,7 @@ func (hs *HTTPServer) CreateDashboardSnapshot(c *models.ReqContext) response.Res\n \t\t\treturn nil\n \t\t}\n \n-\t\turl = response.Url\n+\t\tsnapshotUrl = response.Url\n \t\tcmd.Key = response.Key\n \t\tcmd.DeleteKey = response.DeleteKey\n \t\tcmd.ExternalUrl = response.Url\n@@ -130,6 +143,8 @@ func (hs *HTTPServer) CreateDashboardSnapshot(c *models.ReqContext) response.Res\n \n \t\tmetrics.MApiDashboardSnapshotExternal.Inc()\n \t} else {\n+\t\tcmd.Dashboard.SetPath([]string{\"snapshot\", \"originalUrl\"}, originalDashboardURL)\n+\n \t\tif cmd.Key == \"\" {\n \t\t\tvar err error\n \t\t\tcmd.Key, err = util.GetRandomString(32)\n@@ -148,7 +163,7 @@ func (hs *HTTPServer) CreateDashboardSnapshot(c *models.ReqContext) response.Res\n \t\t\t}\n \t\t}\n \n-\t\turl = setting.ToAbsUrl(\"dashboard/snapshot/\" + cmd.Key)\n+\t\tsnapshotUrl = setting.ToAbsUrl(\"dashboard/snapshot/\" + cmd.Key)\n \n \t\tmetrics.MApiDashboardSnapshotCreate.Inc()\n \t}\n@@ -161,7 +176,7 @@ func (hs *HTTPServer) CreateDashboardSnapshot(c *models.ReqContext) response.Res\n \tc.JSON(http.StatusOK, util.DynMap{\n \t\t\"key\":       cmd.Key,\n \t\t\"deleteKey\": cmd.DeleteKey,\n-\t\t\"url\":       url,\n+\t\t\"url\":       snapshotUrl,\n \t\t\"deleteUrl\": setting.ToAbsUrl(\"api/snapshots-delete/\" + cmd.DeleteKey),\n \t\t\"id\":        cmd.Result.Id,\n \t})"
        },
        {
          "filename": "public/app/features/dashboard/components/DashNav/DashNav.tsx",
          "status": "modified",
          "additions": 50,
          "deletions": 6,
          "patch": "@@ -1,3 +1,4 @@\n+import { css } from '@emotion/css';\n import React, { FC, ReactNode, useContext, useEffect } from 'react';\n import { connect, ConnectedProps } from 'react-redux';\n import { useLocation } from 'react-router-dom';\n@@ -14,11 +15,14 @@ import {\n   Tag,\n   ToolbarButtonRow,\n   ModalsContext,\n+  ConfirmModal,\n } from '@grafana/ui';\n import { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\n import { NavToolbarSeparator } from 'app/core/components/AppChrome/NavToolbarSeparator';\n import config from 'app/core/config';\n import { useGrafana } from 'app/core/context/GrafanaContext';\n+import { useAppNotification } from 'app/core/copy/appNotification';\n+import { appEvents } from 'app/core/core';\n import { useBusEvent } from 'app/core/hooks/useBusEvent';\n import { t, Trans } from 'app/core/internationalization';\n import { DashboardCommentsModal } from 'app/features/dashboard/components/DashboardComments/DashboardCommentsModal';\n@@ -27,7 +31,7 @@ import { ShareModal } from 'app/features/dashboard/components/ShareModal';\n import { playlistSrv } from 'app/features/playlist/PlaylistSrv';\n import { updateTimeZoneForSession } from 'app/features/profile/state/reducers';\n import { KioskMode } from 'app/types';\n-import { DashboardMetaChangedEvent } from 'app/types/events';\n+import { DashboardMetaChangedEvent, ShowModalReactEvent } from 'app/types/events';\n \n import { setStarred } from '../../../../core/reducers/navBarTree';\n import { getDashboardSrv } from '../../services/DashboardSrv';\n@@ -83,6 +87,45 @@ export const DashNav = React.memo<Props>((props) => {\n   // We don't really care about the event payload here only that it triggeres a re-render of this component\n   useBusEvent(props.dashboard.events, DashboardMetaChangedEvent);\n \n+  const originalUrl = props.dashboard.snapshot?.originalUrl ?? '';\n+  const gotoSnapshotOrigin = () => {\n+    window.location.href = textUtil.sanitizeUrl(props.dashboard.snapshot.originalUrl);\n+  };\n+\n+  const notifyApp = useAppNotification();\n+  const onOpenSnapshotOriginal = () => {\n+    try {\n+      const sanitizedUrl = new URL(textUtil.sanitizeUrl(originalUrl), config.appUrl);\n+      const appUrl = new URL(config.appUrl);\n+      if (sanitizedUrl.host !== appUrl.host) {\n+        appEvents.publish(\n+          new ShowModalReactEvent({\n+            component: ConfirmModal,\n+            props: {\n+              title: 'Proceed to external site?',\n+              modalClass: modalStyles,\n+              body: (\n+                <>\n+                  <p>\n+                    {`This link connects to an external website at`} <code>{originalUrl}</code>\n+                  </p>\n+                  <p>{\"Are you sure you'd like to proceed?\"}</p>\n+                </>\n+              ),\n+              confirmVariant: 'primary',\n+              confirmText: 'Proceed',\n+              onConfirm: gotoSnapshotOrigin,\n+            },\n+          })\n+        );\n+      } else {\n+        gotoSnapshotOrigin();\n+      }\n+    } catch (err) {\n+      notifyApp.error('Invalid URL', err instanceof Error ? err.message : undefined);\n+    }\n+  };\n+\n   const onStarDashboard = () => {\n     const dashboardSrv = getDashboardSrv();\n     const { dashboard, setStarred } = props;\n@@ -316,7 +359,7 @@ export const DashNav = React.memo<Props>((props) => {\n       buttons.push(\n         <ToolbarButton\n           tooltip={t('dashboard.toolbar.open-original', 'Open original dashboard')}\n-          onClick={() => gotoSnapshotOrigin(snapshotUrl)}\n+          onClick={onOpenSnapshotOriginal}\n           icon=\"link\"\n           key=\"button-snapshot\"\n         />\n@@ -352,10 +395,6 @@ export const DashNav = React.memo<Props>((props) => {\n     return buttons;\n   };\n \n-  const gotoSnapshotOrigin = (snapshotUrl: string) => {\n-    window.location.href = textUtil.sanitizeUrl(snapshotUrl);\n-  };\n-\n   const { isFullscreen, title, folderTitle } = props;\n   // this ensures the component rerenders when the location changes\n   const location = useLocation();\n@@ -395,3 +434,8 @@ export const DashNav = React.memo<Props>((props) => {\n DashNav.displayName = 'DashNav';\n \n export default connector(DashNav);\n+\n+const modalStyles = css({\n+  width: 'max-content',\n+  maxWidth: '80vw',\n+});"
        },
        {
          "filename": "public/app/features/dashboard/components/ShareModal/ShareSnapshot.tsx",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -86,10 +86,6 @@ export class ShareSnapshot extends PureComponent<Props, State> {\n       timestamp: new Date(),\n     };\n \n-    if (!external) {\n-      this.dashboard.snapshot.originalUrl = window.location.href;\n-    }\n-\n     this.setState({ isLoading: true });\n     this.dashboard.startRefresh();\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b96a752db33b49add26f4e0588a989a9b04e8855",
            "date": "2025-01-14T14:36:58Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "125a11ca99e8f011ee6be1ceadda9397ddaeec86",
            "date": "2025-01-14T14:33:29Z",
            "author_login": "harisrozajac"
          },
          {
            "sha": "3884c0e89631bafede8a2d7aeb58ed1069058c4f",
            "date": "2025-01-14T14:08:01Z",
            "author_login": "jdbaldry"
          },
          {
            "sha": "037570b9c8fc36f2e58949b99166bb887237f639",
            "date": "2025-01-14T14:01:10Z",
            "author_login": "alexanderzobnin"
          },
          {
            "sha": "7c87ff1b84de579e4373ecf59e7e00b9ad951f76",
            "date": "2025-01-14T13:58:36Z",
            "author_login": "leonorfmartins"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:L",
    "cwe_id": "CWE-79",
    "description": "Grafana is an open-source platform for monitoring and observability. Prior to versions 8.5.16 and 9.2.8, malicious user can create a snapshot and arbitrarily choose the `originalUrl` parameter by editing the query, thanks to a web proxy. When another user opens the URL of the snapshot, they will be presented with the regular web interface delivered by the trusted Grafana server. The `Open original dashboard` button no longer points to the to the real original dashboard but to the attacker\u2019s injected URL. This issue is fixed in versions 8.5.16 and 9.2.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-01-27T23:15:08.723",
    "last_modified": "2024-11-21T07:18:02.360",
    "fix_date": "2022-12-13T13:48:54Z"
  },
  "references": [
    {
      "url": "https://github.com/grafana/grafana/commit/239888f22983010576bb3a9135a7294e88c0c74a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/d7dcea71ea763780dc286792a0afd560bff2985c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/pull/60232",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/pull/60256",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-4724-7jwc-3fpw",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/239888f22983010576bb3a9135a7294e88c0c74a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/commit/d7dcea71ea763780dc286792a0afd560bff2985c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/pull/60232",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/pull/60256",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grafana/grafana/security/advisories/GHSA-4724-7jwc-3fpw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230309-0010/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.948280",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "grafana",
    "owner": "grafana",
    "created_at": "2013-12-11T15:59:56Z",
    "updated_at": "2025-01-14T13:04:53Z",
    "pushed_at": "2025-01-14T13:12:26Z",
    "size": 1292625,
    "stars": 65883,
    "forks": 12291,
    "open_issues": 4193,
    "watchers": 65883,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 29758164,
      "Go": 20683989,
      "Rich Text Format": 352348,
      "HTML": 334782,
      "CUE": 186863,
      "JavaScript": 170294,
      "Shell": 148477,
      "MDX": 147186,
      "Starlark": 132379,
      "SCSS": 112108,
      "Jsonnet": 39563,
      "Makefile": 24993,
      "Python": 23487,
      "Dockerfile": 21670,
      "Jinja": 11630,
      "HCL": 4097,
      "CSS": 3116,
      "Mustache": 2239,
      "Smarty": 2116,
      "PowerShell": 367,
      "Assembly": 168
    },
    "commit_activity": {
      "total_commits_last_year": 9810,
      "avg_commits_per_week": 188.65384615384616,
      "days_active_last_year": 302
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:16:15.724443"
  }
}