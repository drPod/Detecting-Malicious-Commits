{
  "cve_id": "CVE-2022-39360",
  "github_data": {
    "repository": "metabase/metabase",
    "fix_commit": "edadf7303c3b068609f57ca073e67885d5c98730",
    "related_commits": [
      "edadf7303c3b068609f57ca073e67885d5c98730",
      "edadf7303c3b068609f57ca073e67885d5c98730"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "edadf7303c3b068609f57ca073e67885d5c98730",
      "commit_date": "2022-10-06T21:48:33Z",
      "author": {
        "login": "metabase-bot[bot]",
        "type": "Bot",
        "stats": null
      },
      "commit_message": {
        "title": "Refactor password reset login for SSO users (#25819) (#25826)",
        "length": 212,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 107,
        "additions": 65,
        "deletions": 42
      },
      "files": [
        {
          "filename": "src/metabase/api/session.clj",
          "status": "modified",
          "additions": 15,
          "deletions": 6,
          "patch": "@@ -199,12 +199,21 @@\n (defn- forgot-password-impl\n   [email]\n   (future\n-    (when-let [{user-id :id, google-auth? :google_auth, is-active? :is_active}\n-               (db/select-one [User :id :google_auth :is_active] :%lower.email (u/lower-case-en email))]\n-      (let [reset-token        (user/set-password-reset-token! user-id)\n-            password-reset-url (str (public-settings/site-url) \"/auth/reset_password/\" reset-token)]\n-        (log/info password-reset-url)\n-        (messages/send-password-reset-email! email google-auth? password-reset-url is-active?)))))\n+    (when-let [{user-id      :id\n+                google-auth? :google_auth\n+                ldap-auth?   :ldap_auth\n+                sso-source   :sso_source\n+                is-active?   :is_active}\n+               (db/select-one [User :id :google_auth :ldap_auth :sso_source :is_active]\n+                              :%lower.email\n+                              (u/lower-case-en email))]\n+      (if (or google-auth? ldap-auth? sso-source)\n+        ;; If user uses any SSO method to log in, no need to generate a reset token\n+        (messages/send-password-reset-email! email google-auth? (boolean (or ldap-auth? sso-source)) nil is-active?)\n+        (let [reset-token        (user/set-password-reset-token! user-id)\n+              password-reset-url (str (public-settings/site-url) \"/auth/reset_password/\" reset-token)]\n+          (log/info password-reset-url)\n+          (messages/send-password-reset-email! email false false password-reset-url is-active?))))))\n \n (api/defendpoint POST \"/forgot_password\"\n   \"Send a reset email when user has forgotten their password.\""
        },
        {
          "filename": "src/metabase/email/messages.clj",
          "status": "modified",
          "additions": 14,
          "deletions": 13,
          "patch": "@@ -56,12 +56,11 @@\n     (cond\n       (= url \"app/assets/img/logo.svg\") \"http://static.metabase.com/email_logo.png\"\n \n-      :else nil\n+      :else nil)))\n       ;; NOTE: disabling whitelabeled URLs for now since some email clients don't render them correctly\n       ;; We need to extract them and embed as attachments like we do in metabase.pulse.render.image-bundle\n       ;; (data-uri-svg? url)               (themed-image-url url color)\n       ;; :else                             url\n-      )))\n \n (defn- icon-bundle\n   [icon-name]\n@@ -172,15 +171,17 @@\n \n (defn send-password-reset-email!\n   \"Format and send an email informing the user how to reset their password.\"\n-  [email google-auth? password-reset-url is-active?]\n+  [email google-auth? non-google-sso? password-reset-url is-active?]\n   {:pre [(m/boolean? google-auth?)\n+         (m/boolean? non-google-sso?)\n          (u/email? email)\n-         (string? password-reset-url)]}\n+         ((some-fn string? nil?) password-reset-url)]}\n   (let [message-body (stencil/render-file\n                       \"metabase/email/password_reset\"\n                       (merge (common-context)\n                              {:emailType        \"password_reset\"\n-                              :sso              google-auth?\n+                              :google           google-auth?\n+                              :nonGoogleSSO     non-google-sso?\n                               :passwordResetUrl password-reset-url\n                               :logoHeader       true\n                               :isActive         is-active?\n@@ -497,14 +498,14 @@\n                  filters)\n         rows    (partition 2 2 nil cells)]\n     (html\n-      [:table {:style (style/style {:table-layout :fixed\n-                                    :border-collapse :collapse\n-                                    :cellpadding \"0\"\n-                                    :cellspacing \"0\"\n-                                    :width \"100%\"\n-                                    :font-size  \"12px\"\n-                                    :font-weight 700\n-                                    :margin-top \"8px\"})}\n+     [:table {:style (style/style {:table-layout :fixed\n+                                   :border-collapse :collapse\n+                                   :cellpadding \"0\"\n+                                   :cellspacing \"0\"\n+                                   :width \"100%\"\n+                                   :font-size  \"12px\"\n+                                   :font-weight 700\n+                                   :margin-top \"8px\"})}\n       (for [row rows]\n         [:tr {} row])])))\n "
        },
        {
          "filename": "src/metabase/email/password_reset.mustache",
          "status": "modified",
          "additions": 25,
          "deletions": 18,
          "patch": "@@ -1,24 +1,31 @@\n {{> metabase/email/_header }}\n   <div>\n-    {{#sso}}\n+    {{#google}}\n       <p>You're using Google to log in to {{applicationName}}, so you don't have a password. You can log in to {{applicationName}} by clicking \"Sign in with Google\"</p>\n       <a href=\"{{siteUrl}}\">Go to {{applicationName}}</a>\n-    {{/sso}}\n-    {{^sso}}\n-      {{#isActive}}\n-        <div style=\"text-align: center\">\n-          <p>Click the button below to reset the password for your {{applicationName}} account at {{siteUrl}}.</p>\n-          <a style=\"display: inline-block; box-sizing: border-box; font-size: 18px; padding: 8px 22px; cursor: pointer; text-decoration: none; border-radius: 4px; background-color: #4990E2; border-color: #4990E2; color: #fff;\" href=\"{{passwordResetUrl}}\">Reset password</a>\n-          <p style=\"padding-top: 2em; font-size: small;\">Didn't request this password reset? It's safe to ignore it.</p>\n-        </div>\n-      {{/isActive}}\n-      {{^isActive}}\n-        <p>Someone requested a password reset for your {{applicationName}} account at {{siteUrl}}, but your account\n-        has been deactivated. Contact an administrator for further assistance.</p>\n-        {{#adminEmailSet}}\n-          <a href=\"mailto:{{adminEmail}}\">Contact your administrator</a>\n-        {{/adminEmailSet}}\n-      {{/isActive}}\n-    {{/sso}}\n+    {{/google}}\n+    {{^google}}\n+      {{#nonGoogleSSO}}\n+        <p>We can't reset your password becase you're using single sign-on to log in to {{applicationName}}. Use the\n+        \"Sign in with SSO\" button on the log in page. To change your password, you'll need to contact an administrator.</p>\n+        <a href=\"{{siteUrl}}\">Go to {{applicationName}}</a>\n+      {{/nonGoogleSSO}}\n+      {{^nonGoogleSSO}}\n+        {{#isActive}}\n+          <div style=\"text-align: center\">\n+            <p>Click the button below to reset the password for your {{applicationName}} account at {{siteUrl}}.</p>\n+            <a style=\"display: inline-block; box-sizing: border-box; font-size: 18px; padding: 8px 22px; cursor: pointer; text-decoration: none; border-radius: 4px; background-color: #4990E2; border-color: #4990E2; color: #fff;\" href=\"{{passwordResetUrl}}\">Reset password</a>\n+            <p style=\"padding-top: 2em; font-size: small;\">Didn't request this password reset? It's safe to ignore it.</p>\n+          </div>\n+        {{/isActive}}\n+        {{^isActive}}\n+          <p>Someone requested a password reset for your {{applicationName}} account at {{siteUrl}}, but your account\n+          has been deactivated. Contact an administrator for further assistance.</p>\n+          {{#adminEmailSet}}\n+            <a href=\"mailto:{{adminEmail}}\">Contact your administrator</a>\n+          {{/adminEmailSet}}\n+        {{/isActive}}\n+      {{/nonGoogleSSO}}\n+    {{/google}}\n   </div>\n {{> metabase/email/_footer }}"
        },
        {
          "filename": "test/metabase/email/messages_test.clj",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -23,7 +23,7 @@\n (deftest password-reset-email\n   (testing \"password reset email can be sent successfully\"\n     (et/with-fake-inbox\n-      (messages/send-password-reset-email! \"test@test.com\" false \"http://localhost/some/url\" true)\n+      (messages/send-password-reset-email! \"test@test.com\" false false \"http://localhost/some/url\" true)\n       (is (= [{:from    \"notifications@metabase.com\",\n                :to      [\"test@test.com\"],\n                :subject \"[Metabase] Password Reset Request\",\n@@ -34,13 +34,19 @@\n   ;; that the contents changed in the tests below.\n   (testing \"password reset email tells user if they should log in with Google Sign-In\"\n     (et/with-fake-inbox\n-      (messages/send-password-reset-email! \"test@test.com\" true  \"http://localhost/some/url\" true)\n+      (messages/send-password-reset-email! \"test@test.com\" true false \"http://localhost/some/url\" true)\n       (is (-> (@et/inbox \"test@test.com\")\n               (get-in [0 :body 0 :content])\n               (str/includes? \"Google\")))))\n+  (testing \"password reset email tells user if they should log in with (non-Google) SSO\"\n+    (et/with-fake-inbox\n+      (messages/send-password-reset-email! \"test@test.com\" false true nil true)\n+      (is (-> (@et/inbox \"test@test.com\")\n+              (get-in [0 :body 0 :content])\n+              (str/includes? \"SSO\")))))\n   (testing \"password reset email tells user if their account is inactive\"\n     (et/with-fake-inbox\n-      (messages/send-password-reset-email! \"test@test.com\" false \"http://localhost/some/url\" false)\n+      (messages/send-password-reset-email! \"test@test.com\" false false \"http://localhost/some/url\" false)\n       (is (-> (@et/inbox \"test@test.com\")\n               (get-in [0 :body 0 :content])\n               (str/includes? \"deactivated\"))))))"
        },
        {
          "filename": "test/metabase/email_test.clj",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -66,8 +66,8 @@\n   [f]\n   (with-redefs [email/send-email! fake-inbox-email-fn]\n     (reset-inbox!)\n-    (tu/with-temporary-setting-values [email-smtp-host \"fake_smtp_host\"\n-                                       email-smtp-port 587]\n+    (tu/with-temporary-setting-values [email-smtp-host    \"fake_smtp_host\"\n+                                       email-smtp-port    587]\n       (f))))\n \n (defmacro with-fake-inbox"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bb909363a210a5d9206be3b610a7cf897a15794c",
            "date": "2025-01-25T05:39:51Z",
            "author_login": "johnswanson"
          },
          {
            "sha": "a99a7dd11791a0749a665d51664e4ebcd8bdbb37",
            "date": "2025-01-25T03:02:15Z",
            "author_login": "camsaul"
          },
          {
            "sha": "13e237e007817ccea210fa22939d657f8f9f36ff",
            "date": "2025-01-25T03:01:57Z",
            "author_login": "camsaul"
          },
          {
            "sha": "1a60acc0e604ff5c6ce6393821381c590980abfa",
            "date": "2025-01-25T01:04:26Z",
            "author_login": "camsaul"
          },
          {
            "sha": "91953b7c963440e9acf15fa98c42085c995e9309",
            "date": "2025-01-25T01:04:01Z",
            "author_login": "camsaul"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-287",
    "description": "Metabase is data visualization software. Prior to versions 0.44.5, 1.44.5, 0.43.7, 1.43.7, 0.42.6, 1.42.6, 0.41.9, and 1.41.9 single sign on (SSO) users were able to do password resets on Metabase, which could allow a user access without going through the SSO IdP. This issue is patched in versions 0.44.5, 1.44.5, 0.43.7, 1.43.7, 0.42.6, 1.42.6, 0.41.9, and 1.41.9. Metabase now blocks password reset for all users who use SSO for their Metabase login.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-10-26T19:15:13.657",
    "last_modified": "2024-11-21T07:18:06.940",
    "fix_date": "2022-10-06T21:48:33Z"
  },
  "references": [
    {
      "url": "https://github.com/metabase/metabase/commit/edadf7303c3b068609f57ca073e67885d5c98730",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/metabase/metabase/security/advisories/GHSA-gw4g-ww2m-v7vc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/metabase/metabase/commit/edadf7303c3b068609f57ca073e67885d5c98730",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/metabase/metabase/security/advisories/GHSA-gw4g-ww2m-v7vc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:00.956764",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "metabase",
    "owner": "metabase",
    "created_at": "2015-02-02T19:25:47Z",
    "updated_at": "2025-01-26T06:41:34Z",
    "pushed_at": "2025-01-26T07:43:01Z",
    "size": 788277,
    "stars": 39736,
    "forks": 5279,
    "open_issues": 4231,
    "watchers": 39736,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Clojure": 20834486,
      "TypeScript": 13973649,
      "JavaScript": 6493066,
      "CSS": 155555,
      "MDX": 50823,
      "Handlebars": 32145,
      "Shell": 26088,
      "HTML": 5501,
      "Emacs Lisp": 5492,
      "Dockerfile": 4301,
      "Mustache": 1273
    },
    "commit_activity": {
      "total_commits_last_year": 5305,
      "avg_commits_per_week": 102.01923076923077,
      "days_active_last_year": 289
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:11:37.751743"
  }
}