{
  "cve_id": "CVE-2022-39368",
  "github_data": {
    "repository": "eclipse-californium/californium",
    "fix_commit": "5648a0c27c2c2667c98419254557a14bac2b1f3f",
    "related_commits": [
      "5648a0c27c2c2667c98419254557a14bac2b1f3f",
      "726bac57659410da463dcf404b3e79a7312ac0b9",
      "5648a0c27c2c2667c98419254557a14bac2b1f3f",
      "726bac57659410da463dcf404b3e79a7312ac0b9"
    ],
    "patch_url": "https://github.com/eclipse-californium/californium/commit/5648a0c27c2c2667c98419254557a14bac2b1f3f.patch",
    "fix_commit_details": {
      "sha": "5648a0c27c2c2667c98419254557a14bac2b1f3f",
      "commit_date": "2022-09-16T07:06:33Z",
      "author": {
        "login": "boaks",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Run all pending job on removing connections.",
        "length": 151,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 30,
        "additions": 21,
        "deletions": 9
      },
      "files": [
        {
          "filename": "scandium-core/src/main/java/org/eclipse/californium/scandium/DTLSConnector.java",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -1035,7 +1035,7 @@ public void stop() {\n \t\tfor (Runnable job : pending) {\n \t\t\ttry {\n \t\t\t\tjob.run();\n-\t\t\t} catch (Exception e) {\n+\t\t\t} catch (Throwable e) {\n \t\t\t\tLOGGER.warn(\"Shutdown DTLS connector:\", e);\n \t\t\t}\n \t\t}\n@@ -1401,7 +1401,7 @@ public void run() {\n \n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\tif (running.get()) {\n+\t\t\t\t\t\tif (running.get() && connection.isExecuting()) {\n \t\t\t\t\t\t\tprocessRecord(record, connection);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n@@ -1971,7 +1971,7 @@ public void run() {\n \t\t\t\t\t\tconnection.getExecutor().execute(new Runnable() {\n \t\t\t\t\t\t\t@Override\n \t\t\t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\t\t\tif (running.get()) {\n+\t\t\t\t\t\t\t\tif (running.get() && connections.getConnectionByAddress().isExecuting()) {\n \t\t\t\t\t\t\t\t\tprocessClientHello(clientHello, record, connections);\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t}\n@@ -2399,7 +2399,7 @@ public void send(final RawData message) {\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void run() {\n \t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (running.get()) {\n+\t\t\t\t\t\t\tif (running.get() && connection.isExecuting()) {\n \t\t\t\t\t\t\t\tsendMessage(now, message, connection);\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\tDROP_LOGGER.trace(\"DTLSConnector drops {} outgoing bytes to {}:{}, connector not running!\", message.getSize(), message.getAddress(), message.getPort());\n@@ -2816,7 +2816,7 @@ private void processAsynchronousHandshakeResult(final HandshakeResult handshakeR\n \n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void run() {\n-\t\t\t\t\t\tif (running.get()) {\n+\t\t\t\t\t\tif (running.get() && connection.isExecuting()) {\n \t\t\t\t\t\t\tHandshaker handshaker = connection.getOngoingHandshake();\n \t\t\t\t\t\t\tif (handshaker != null) {\n \t\t\t\t\t\t\t\ttry {"
        },
        {
          "filename": "scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/InMemoryConnectionStore.java",
          "status": "modified",
          "additions": 16,
          "deletions": 4,
          "patch": "@@ -534,15 +534,27 @@ public boolean remove(final Connection connection) {\n \tpublic synchronized boolean remove(final Connection connection, final boolean removeFromSessionCache) {\n \t\tboolean removed = connections.remove(connection.getConnectionId(), connection) == connection;\n \t\tif (removed) {\n-\t\t\tList<Runnable> pendings = connection.getExecutor().shutdownNow();\n+\t\t\tint pending = 0;\n+\t\t\tSerialExecutor executor = connection.getExecutor();\n+\t\t\tif (executor != null) {\n+\t\t\t\tList<Runnable> pendings = connection.getExecutor().shutdownNow();\n+\t\t\t\tfor (Runnable job : pendings) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tjob.run();\n+\t\t\t\t\t} catch (Throwable e) {\n+\t\t\t\t\t\tLOG.warn(\"Removing connection:\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tpending = pendings.size();\n+\t\t\t}\n \t\t\tif (LOG.isTraceEnabled()) {\n \t\t\t\tLOG.trace(\"{}connection: remove {} (size {}, left jobs: {})\", tag, connection, connections.size(),\n-\t\t\t\t\t\tpendings.size(), new Throwable(\"connection removed!\"));\n-\t\t\t} else if (pendings.isEmpty()) {\n+\t\t\t\t\t\tpending, new Throwable(\"connection removed!\"));\n+\t\t\t} else if (pending == 0) {\n \t\t\t\tLOG.debug(\"{}connection: remove {} (size {})\", tag, connection, connections.size());\n \t\t\t} else {\n \t\t\t\tLOG.debug(\"{}connection: remove {} (size {}, left jobs: {})\", tag, connection, connections.size(),\n-\t\t\t\t\t\tpendings.size());\n+\t\t\t\t\t\tpending);\n \t\t\t}\n \t\t\tremoveFromEstablishedSessions(connection);\n \t\t\tremoveFromAddressConnections(connection);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b6d7246b136fe2abb96424316b0f58f3e41908fb",
            "date": "2025-01-08T15:33:53Z",
            "author_login": "boaks"
          },
          {
            "sha": "1ab7d8f1127dd0d9126aff931df816041b8f8d72",
            "date": "2025-01-08T16:31:56Z",
            "author_login": "boaks"
          },
          {
            "sha": "b748497c10473b99b5d037cfb7fb9751d004b173",
            "date": "2025-01-07T19:13:59Z",
            "author_login": "boaks"
          },
          {
            "sha": "edfa948e9e9e659ae5e06e048dc43944805f0b50",
            "date": "2025-01-07T19:13:45Z",
            "author_login": "boaks"
          },
          {
            "sha": "f6f8cfe67d08163b561a8421bc77425ea6937d2e",
            "date": "2025-01-06T19:11:50Z",
            "author_login": "boaks"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H",
    "cwe_id": "CWE-404",
    "description": "Eclipse Californium is a Java implementation of RFC7252 - Constrained Application Protocol for IoT Cloud services. In versions prior to 3.7.0, and 2.7.4, Californium is vulnerable to a Denial of Service. Failing handshakes don't cleanup counters for throttling, causing the threshold to be reached without being released again. This results in permanently dropping records. The issue was reported for certificate based handshakes, but may also affect PSK based handshakes. It generally affects client and server as well. This issue is patched in version 3.7.0 and 2.7.4. There are no known workarounds. main: commit 726bac57659410da463dcf404b3e79a7312ac0b9 2.7.x: commit 5648a0c27c2c2667c98419254557a14bac2b1f3f",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-10T00:15:10.283",
    "last_modified": "2024-11-21T07:18:08.903",
    "fix_date": "2022-09-16T07:06:33Z"
  },
  "references": [
    {
      "url": "https://github.com/eclipse-californium/californium/commit/5648a0c27c2c2667c98419254557a14bac2b1f3f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/eclipse-californium/californium/commit/726bac57659410da463dcf404b3e79a7312ac0b9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/eclipse-californium/californium/security/advisories/GHSA-p72g-cgh9-ghjg",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/eclipse-californium/californium/commit/5648a0c27c2c2667c98419254557a14bac2b1f3f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/eclipse-californium/californium/commit/726bac57659410da463dcf404b3e79a7312ac0b9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/eclipse-californium/californium/security/advisories/GHSA-p72g-cgh9-ghjg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:01.005923",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "californium",
    "owner": "eclipse-californium",
    "created_at": "2015-09-24T15:27:15Z",
    "updated_at": "2025-01-12T18:52:04Z",
    "pushed_at": "2025-01-12T18:52:00Z",
    "size": 27608,
    "stars": 730,
    "forks": 368,
    "open_issues": 16,
    "watchers": 730,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Java": 8843615,
      "JavaScript": 213221,
      "Shell": 159963,
      "HTML": 9889,
      "CSS": 3787,
      "Dockerfile": 1488
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:55:00.528817"
  }
}