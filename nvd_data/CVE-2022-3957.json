{
  "cve_id": "CVE-2022-3957",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "2191e66aa7df750e8ef01781b1930bea87b713bb",
    "related_commits": [
      "2191e66aa7df750e8ef01781b1930bea87b713bb",
      "2191e66aa7df750e8ef01781b1930bea87b713bb"
    ],
    "patch_url": "https://github.com/gpac/gpac/commit/2191e66aa7df750e8ef01781b1930bea87b713bb.patch",
    "fix_commit_details": {
      "sha": "2191e66aa7df750e8ef01781b1930bea87b713bb",
      "commit_date": "2022-11-07T07:59:52Z",
      "author": {
        "login": "jeanlf",
        "type": "User",
        "stats": {
          "total_commits": 11740,
          "average_weekly_commits": 11.521099116781159,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 832
        }
      },
      "commit_message": {
        "title": "fixed mem leak in sgv parse error",
        "length": 33,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 15,
        "deletions": 8
      },
      "files": [
        {
          "filename": "src/scene_manager/loader_svg.c",
          "status": "modified",
          "additions": 7,
          "deletions": 3,
          "patch": "@@ -449,6 +449,7 @@ static Bool svg_parse_animation(GF_SVG_Parser *parser, GF_SceneGraph *sg, SVG_De\n \t\tif (anim->to) {\n \t\t\t/* now that we have a target, if there is a to value to parse, create the attribute and parse it */\n \t\t\tgf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_to, GF_TRUE, GF_FALSE, &info);\n+\t\t\tif (!info.name) info.name = \"to\";\n \t\t\tgf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->to, anim_value_type);\n \t\t\tif (anim_value_type==XMLRI_datatype) {\n \t\t\t\tsvg_post_process_href(parser, (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);\n@@ -457,20 +458,23 @@ static Bool svg_parse_animation(GF_SVG_Parser *parser, GF_SceneGraph *sg, SVG_De\n \t\tif (anim->from) {\n \t\t\t/* now that we have a target, if there is a from value to parse, create the attribute and parse it */\n \t\t\tgf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_from, GF_TRUE, GF_FALSE, &info);\n+\t\t\tif (!info.name) info.name = \"from\";\n \t\t\tgf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->from, anim_value_type);\n \t\t\tif (anim_value_type==XMLRI_datatype)\n \t\t\t\tsvg_post_process_href(parser,  (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);\n \t\t}\n \t\tif (anim->by) {\n \t\t\t/* now that we have a target, if there is a by value to parse, create the attribute and parse it */\n \t\t\tgf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_by, GF_TRUE, GF_FALSE, &info);\n+\t\t\tif (!info.name) info.name = \"by\";\n \t\t\tgf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->by, anim_value_type);\n \t\t\tif (anim_value_type==XMLRI_datatype)\n \t\t\t\tsvg_post_process_href(parser,  (GF_Node *) anim->target, (XMLRI*)((SMIL_AnimateValue *)info.far_ptr)->value);\n \t\t}\n \t\tif (anim->values) {\n \t\t\t/* now that we have a target, if there is a 'values' value to parse, create the attribute and parse it */\n \t\t\tgf_node_get_attribute_by_tag((GF_Node *)anim->animation_elt, TAG_SVG_ATT_values, GF_TRUE, GF_FALSE, &info);\n+\t\t\tif (!info.name) info.name = \"values\";\n \t\t\tgf_svg_parse_attribute((GF_Node *)anim->animation_elt, &info, anim->values, anim_value_type);\n \t\t\tif (anim_value_type==XMLRI_datatype) {\n \t\t\t\tu32 i, count;\n@@ -2119,13 +2123,13 @@ GF_Err load_svg_run(GF_SceneLoader *load)\n \n \tin_time = gf_sys_clock();\n \te = gf_xml_sax_parse_file(parser->sax_parser, (const char *)load->fileName, svg_progress);\n+\tsvg_flush_animations(parser);\n+\tgf_sm_svg_flush_state(parser);\n \tif (parser->last_error<0) e = parser->last_error;\n-\t\n+\n \tif (e<0) return svg_report(parser, e, \"Unable to parse file %s: %s\", load->fileName, gf_xml_sax_get_error(parser->sax_parser) );\n \tGF_LOG(GF_LOG_INFO, GF_LOG_PARSER, (\"[Parser] Scene parsed and Scene Graph built in %d ms\\n\", gf_sys_clock() - in_time));\n \n-\tsvg_flush_animations(parser);\n-\tgf_sm_svg_flush_state(parser);\n \treturn e;\n \n }"
        },
        {
          "filename": "src/scenegraph/svg_attributes.c",
          "status": "modified",
          "additions": 7,
          "deletions": 4,
          "patch": "@@ -2994,7 +2994,7 @@ static void svg_parse_preserveaspectratio(SVG_PreserveAspectRatio *par, char *at\n \twhile (*content == ' ') content++;\n \tif (strstr(content, \"defer\")) {\n \t\tpar->defer = 1;\n-\t\tcontent += 4;\n+\t\tcontent += 5;\n \t} else {\n \t\tcontent = attribute_content;\n \t}\n@@ -3587,11 +3587,14 @@ GF_Err gf_svg_parse_attribute(GF_Node *n, GF_FieldInfo *info, char *attribute_co\n \t\t*(SVG_String *)info->far_ptr = gf_strdup(attribute_content);\n \t\tbreak;\n \tdefault:\n-\t\tGF_LOG(GF_LOG_WARNING, GF_LOG_PARSER, (\"[SVG Parsing] Cannot parse attribute %s\\n\", info->name ? info->name : \"\"));\n-\t\tbreak;\n+\t\tGF_LOG(GF_LOG_WARNING, GF_LOG_PARSER, (\"[SVG Parsing] Cannot parse attribute \\\"%s\\\"\\n\", info->name ? info->name : \"\"));\n+\t\treturn GF_OK;\n \t}\n \tif (e) {\n-\t\tGF_LOG(GF_LOG_ERROR, GF_LOG_PARSER, (\"[SVG Parsing] Cannot parse attribute %s value %s: %s\\n\", info->name ? info->name : \"\", attribute_content, gf_error_to_string(e)));\n+\t\tGF_LOG(GF_LOG_ERROR, GF_LOG_PARSER, (\"[SVG Parsing] Cannot parse attribute \\\"%s\\\" value %s: %s\\n\", info->name ? info->name : \"\", attribute_content, gf_error_to_string(e)));\n+\t\t//continue parsing if not test mode\n+\t\tif (!gf_sys_is_test_mode())\n+\t\t\te = GF_OK;\n \t}\n \treturn e;\n }"
        },
        {
          "filename": "testsuite",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-Subproject commit abdac4112e0832f67286480fd4677630cedb1a19\n+Subproject commit cc494a53f4d6c7a075c1a3f12d67d6bbdc910242"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e075efa1bd0984e0e87f6752f1e5b991ba3a7cf7",
            "date": "2025-01-14T15:00:34Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "7af1bfcdc25dd74e158437abd13858281ae1bea0",
            "date": "2025-01-14T12:33:00Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "08572e41a7eae3d7e4329bf88a455ba6cb209936",
            "date": "2025-01-14T12:18:43Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5f2c53efbc58ecfb01885c73b9507413efde6c81",
            "date": "2025-01-14T11:46:01Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "f2082beb80c470f4eaf2bb0421b56e8adcde303a",
            "date": "2025-01-14T11:45:02Z",
            "author_login": "aureliendavid"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-404",
    "description": "A vulnerability classified as problematic was found in GPAC. Affected by this vulnerability is the function svg_parse_preserveaspectratio of the file scenegraph/svg_attributes.c of the component SVG Parser. The manipulation leads to memory leak. The attack can be launched remotely. The name of the patch is 2191e66aa7df750e8ef01781b1930bea87b713bb. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-213463.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-11T16:15:16.707",
    "last_modified": "2024-11-21T07:20:36.820",
    "fix_date": "2022-11-07T07:59:52Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/2191e66aa7df750e8ef01781b1930bea87b713bb",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213463",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/gpac/gpac/commit/2191e66aa7df750e8ef01781b1930bea87b713bb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213463",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required",
        "Third Party Advisory",
        "VDB Entry"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5411",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:01.010177",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-14T12:51:06Z",
    "pushed_at": "2025-01-14T12:51:01Z",
    "size": 148655,
    "stars": 2857,
    "forks": 539,
    "open_issues": 84,
    "watchers": 2857,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29230795,
      "JavaScript": 1164507,
      "C++": 591365,
      "Roff": 570792,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1273,
      "avg_commits_per_week": 24.48076923076923,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:56:58.367536"
  }
}