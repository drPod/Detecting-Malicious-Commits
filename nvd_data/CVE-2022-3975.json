{
  "cve_id": "CVE-2022-3975",
  "github_data": {
    "repository": "nukeviet/nukeviet",
    "fix_commit": "0b3197fad950bb3383e83039a8ee4c9509b3ce02",
    "related_commits": [
      "0b3197fad950bb3383e83039a8ee4c9509b3ce02",
      "0b3197fad950bb3383e83039a8ee4c9509b3ce02"
    ],
    "patch_url": "https://github.com/nukeviet/nukeviet/commit/0b3197fad950bb3383e83039a8ee4c9509b3ce02.patch",
    "fix_commit_details": {
      "sha": "0b3197fad950bb3383e83039a8ee4c9509b3ce02",
      "commit_date": "2022-10-29T07:35:42Z",
      "author": {
        "login": "anhtunguyen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": " Ti\u1ebfp t\u1ee5c fix l\u1ed7i XSS",
        "length": 21,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 13,
        "additions": 9,
        "deletions": 4
      },
      "files": [
        {
          "filename": "vendor/vinades/nukeviet/Core/Request.php",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -743,8 +743,10 @@ private function filterAttr($attrSet, $tagName, &$isvalid)\n                 $attrSubSet[1] = preg_replace(\"/^\\'(.*)\\'$/\", '\\\\1', $attrSubSet[1]);\n                 $attrSubSet[1] = str_replace(['\"', '&quot;'], \"'\", $attrSubSet[1]);\n \n+                $value = $this->unhtmlentities($attrSubSet[1]);\n+\n                 // Security check Data URLs\n-                if (preg_match('/^[\\r\\n\\s\\t]*d\\s*a\\s*t\\s*a\\s*\\:([^\\,]*?)\\;*(base64)*?[\\r\\n\\s\\t]*\\,[\\r\\n\\s\\t]*(.*?)[\\r\\n\\s\\t]*$/isu', $attrSubSet[1], $m)) {\n+                if (preg_match('/^[\\r\\n\\s\\t]*d\\s*a\\s*t\\s*a\\s*\\:([^\\,]*?)\\;*[\\r\\n\\s\\t]*(base64)*?[\\r\\n\\s\\t]*\\,[\\r\\n\\s\\t]*(.*?)[\\r\\n\\s\\t]*$/isu', $value, $m)) {\n                     if (empty($m[2])) {\n                         $dataURLs = urldecode($m[3]);\n                     } else {\n@@ -758,7 +760,10 @@ private function filterAttr($attrSet, $tagName, &$isvalid)\n                     }\n                 }\n \n-                $value = $this->unhtmlentities($attrSubSet[1]);\n+                if (preg_replace('/\\<\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t([^\\>]*)\\>(.*)\\<\\s*\\/\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*\\>/isU', '', $value)) {\n+                    continue;\n+                }\n+\n                 $search = [\n                     'javascript' => '/j\\s*a\\s*v\\s*a\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t/si',\n                     'vbscript' => '/v\\s*b\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t/si',\n@@ -825,7 +830,7 @@ private function filterAttr($attrSet, $tagName, &$isvalid)\n     private function filterTags($source, &$isvalid = true)\n     {\n         $checkInvalid = 0;\n-        $source = preg_replace('/\\<script([^\\>]*)\\>(.*)\\<\\/script\\>/isU', '', $source, -1, $checkInvalid);\n+        $source = preg_replace('/\\<\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t([^\\>]*)\\>(.*)\\<\\s*\\/\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*\\>/isU', '', $source, -1, $checkInvalid);\n         if ($checkInvalid > 0) {\n             $isvalid = false;\n         }\n@@ -936,7 +941,7 @@ private function filterTags($source, &$isvalid = true)\n         }\n \n         $preTag .= $postTag;\n-        while (preg_match('/\\<script([^\\>]*)\\>(.*)\\<\\/script\\>/isU', $preTag)) {\n+        while (preg_match('/\\<\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t([^\\>]*)\\>(.*)\\<\\s*\\/\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\>/isU', $preTag)) {\n             $preTag = preg_replace('/\\<script([^\\>]*)\\>(.*)\\<\\/script\\>/isU', '', $preTag);\n         }\n         $preTag = str_replace([\"'\", '\"', '<', '>'], ['&#039;', '&quot;', '&lt;', '&gt;'], $preTag);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8bf783448a0d8773343de81e6d5ecb4f8f449f7b",
            "date": "2024-12-18T07:49:30Z",
            "author_login": "hoaquynhtim99"
          },
          {
            "sha": "56217c67bbc6184bf69035db3a5cff0e333a29d8",
            "date": "2024-12-18T03:21:59Z",
            "author_login": "hoaquynhtim99"
          },
          {
            "sha": "d12c3f93e5943ef197d0ba2125e4e3a5fef03338",
            "date": "2024-12-17T03:01:55Z",
            "author_login": "hoaquynhtim99"
          },
          {
            "sha": "fb03ae49e33f5d75d9dd725aac42d50ed442c2df",
            "date": "2024-11-28T08:32:23Z",
            "author_login": "hoaquynhtim99"
          },
          {
            "sha": "dd6e2833bf9c0c4abc2cecdbbe2f51d9b281d5a2",
            "date": "2024-11-28T08:14:01Z",
            "author_login": "hoaquynhtim99"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-707",
    "description": "A vulnerability, which was classified as problematic, has been found in NukeViet CMS. Affected by this issue is the function filterAttr of the file vendor/vinades/nukeviet/Core/Request.php of the component Data URL Handler. The manipulation of the argument attrSubSet leads to cross site scripting. The attack may be launched remotely. Upgrading to version 4.5 is able to address this issue. The name of the patch is 0b3197fad950bb3383e83039a8ee4c9509b3ce02. It is recommended to upgrade the affected component. VDB-213554 is the identifier assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-13T10:15:10.427",
    "last_modified": "2024-11-21T07:20:39.383",
    "fix_date": "2022-10-29T07:35:42Z"
  },
  "references": [
    {
      "url": "https://github.com/nukeviet/nukeviet",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nukeviet/nukeviet/commit/0b3197fad950bb3383e83039a8ee4c9509b3ce02",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213554",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nukeviet/nukeviet",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nukeviet/nukeviet/commit/0b3197fad950bb3383e83039a8ee4c9509b3ce02",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.213554",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:01.012881",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nukeviet",
    "owner": "nukeviet",
    "created_at": "2012-11-24T15:39:39Z",
    "updated_at": "2024-12-18T07:49:40Z",
    "pushed_at": "2025-01-12T04:53:24Z",
    "size": 180477,
    "stars": 150,
    "forks": 295,
    "open_issues": 114,
    "watchers": 150,
    "has_security_policy": false,
    "default_branch": "nukeviet4.5",
    "protected_branches": [
      "develop",
      "master",
      "nukeviet4.4",
      "nukeviet4.5",
      "nukeviet5.0"
    ],
    "languages": {
      "PHP": 13883410,
      "JavaScript": 2453816,
      "Smarty": 1606057,
      "CSS": 367270,
      "HTML": 77915,
      "XSLT": 9378
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:46:01.487831"
  }
}