{
  "cve_id": "CVE-2022-4066",
  "github_data": {
    "repository": "davidmoreno/onion",
    "fix_commit": "de8ea938342b36c28024fd8393ebc27b8442a161",
    "related_commits": [
      "de8ea938342b36c28024fd8393ebc27b8442a161",
      "de8ea938342b36c28024fd8393ebc27b8442a161"
    ],
    "patch_url": "https://github.com/davidmoreno/onion/commit/de8ea938342b36c28024fd8393ebc27b8442a161.patch",
    "fix_commit_details": {
      "sha": "de8ea938342b36c28024fd8393ebc27b8442a161",
      "commit_date": "2022-09-05T20:06:52Z",
      "author": {
        "login": "davidmoreno",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #308 from kulkom/master",
        "length": 87,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 66,
        "additions": 63,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/onion/low.h",
          "status": "modified",
          "additions": 60,
          "deletions": 0,
          "patch": "@@ -48,6 +48,66 @@\n extern \"C\" {\n #endif\n \n+/**\n+  * @short A portable macro for declaring thread-local variables.\n+  * @ingroup low\n+  * @{\n+  *\n+  * This macro should be used instead of C11-and-newer's _Thread_local \n+  * and GCC's __thread for portability's sake.\n+  */\n+  #if __STDC_VERSION__ >= 201112 && !defined(__STDC_NO_THREADS__)\n+  # define ONION_THREAD_LOCAL _Thread_local\n+  #elif defined(_WIN32) && ( \\\n+   defined(_MSC_VER) || \\\n+   defined(__ICL) || \\\n+   defined(__DMC__) || \\\n+   defined(__BORLANDC__) \\\n+  )\n+  # define ONION_THREAD_LOCAL __declspec(thread)\n+  #elif defined(__TINYC__) || defined (__SDCC) || defined (__CC65__) || defined (__TenDRA__) /* Might apply to other compilers. From a brief glance PCC supports __thread. */\n+  # error You are using an obsolete compiler that does not support thread-local variables. Onion will not compile. Consider using a different compiler.\n+  #else\n+  # define ONION_THREAD_LOCAL __thread\n+  #endif\n+/// @}\n+\n+/**\n+ * @short MACROS FOR CALLING A FUNCTION ONCE AT MOST EVERY X SECONDS IN EACH THREAD.\n+ * @{\n+ * \n+ * This is especially useful for preventing log-spamming, and possible DoS attacks\n+ * that can happen as a consequence of threads having to write out a massive log.\n+ * To use them you MUST include <time.h>.\n+ */\n+/**\n+ * @short Call a function once at most every X seconds in each thread - don't count or pass the calls that happened in between.\n+ * @ingroup low\n+ */\n+#define ONION_CALL_MAX_ONCE_PER_T(seconds, func, ...) do { \\\n+  static ONION_THREAD_LOCAL time_t last_func_call = 0; \\\n+  if (difftime(time(0), last_func_call) >= seconds) { \\\n+    func(__VA_ARGS__); \\\n+    time(&last_func_call); \\\n+  } \\\n+} while (0)\n+/**\n+ * @short Call a function once at most every X seconds in each thread and pass the number of ignored calls + 1 as the last argument (an unsigned int).\n+ * @ingroup low\n+ */\n+#define ONION_CALL_MAX_ONCE_PER_T_COUNT(seconds, func, ...) do { \\\n+  static ONION_THREAD_LOCAL time_t last_func_call = 0; \\\n+  static ONION_THREAD_LOCAL unsigned int func_calls_since = 0; \\\n+  if (difftime(time(0), last_func_call) >= seconds) { \\\n+    func(__VA_ARGS__, func_calls_since + 1); \\\n+    func_calls_since = 0; \\\n+    time(&last_func_call); \\\n+  } \\\n+  else \\\n+    ++func_calls_since; \\\n+} while (0)\n+/// @}\n+\n /**\n  * @short NEVER FAILING MEMORY ALLOCATORS\n  * @{"
        },
        {
          "filename": "src/onion/response.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -431,9 +431,9 @@ int onion_response_flush(onion_response * res) {\n     char tmp[16];\n     snprintf(tmp, sizeof(tmp), \"%X\\r\\n\", (unsigned int)res->buffer_pos);\n     if ((w = write(req, tmp, strlen(tmp))) <= 0) {\n-      ONION_WARNING(\"Error writing chunk encoding length (%X) %s. Aborting write.\",\n-\n-\t\t    (unsigned int)res->buffer_pos, strerror(errno));\n+      ONION_CALL_MAX_ONCE_PER_T_COUNT(1, ONION_WARNING, \"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\",\n+        (unsigned int)res->buffer_pos, strerror(errno));\n+      \n       return OCS_CLOSE_CONNECTION;\n     }\n     ONION_DEBUG0(\"Write %d-%d bytes\", res->buffer_pos, w);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "de8ea938342b36c28024fd8393ebc27b8442a161",
            "date": "2022-09-05T20:06:52Z",
            "author_login": "davidmoreno"
          },
          {
            "sha": "89cc1c0bdd9511563b0de4d713e57ebce6ebe6f3",
            "date": "2022-09-05T19:12:57Z",
            "author_login": "mkulko"
          },
          {
            "sha": "d80092496b46a01563a028ca4514c3fc933e881e",
            "date": "2022-08-29T19:49:36Z",
            "author_login": "kulkom"
          },
          {
            "sha": "98e5a9a38785f01195ad69ef479ef349afdb1b3a",
            "date": "2022-07-28T08:16:39Z",
            "author_login": "davidmoreno"
          },
          {
            "sha": "6d4da369ec2e757e8060bba34e6b9b8e916a13ef",
            "date": "2022-07-28T07:47:32Z",
            "author_login": "kulkom"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-404",
    "description": "A vulnerability was found in davidmoreno onion. It has been rated as problematic. Affected by this issue is the function onion_response_flush of the file src/onion/response.c of the component Log Handler. The manipulation leads to allocation of resources. The name of the patch is de8ea938342b36c28024fd8393ebc27b8442a161. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-214028.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-19T19:15:10.547",
    "last_modified": "2024-11-21T07:34:32.567",
    "fix_date": "2022-09-05T20:06:52Z"
  },
  "references": [
    {
      "url": "https://github.com/davidmoreno/onion/commit/de8ea938342b36c28024fd8393ebc27b8442a161",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/davidmoreno/onion/pull/308",
      "source": "cna@vuldb.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.214028",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/davidmoreno/onion/commit/de8ea938342b36c28024fd8393ebc27b8442a161",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/davidmoreno/onion/pull/308",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.214028",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.139689",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "onion",
    "owner": "davidmoreno",
    "created_at": "2010-10-04T18:19:26Z",
    "updated_at": "2025-01-14T06:28:17Z",
    "pushed_at": "2022-10-17T18:56:32Z",
    "size": 3665,
    "stars": 2033,
    "forks": 253,
    "open_issues": 62,
    "watchers": 2033,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 735422,
      "C++": 89135,
      "CMake": 64687,
      "Shell": 8953,
      "Scilab": 8719,
      "HTML": 2403
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T18:59:21.485256"
  }
}