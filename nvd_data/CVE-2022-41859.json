{
  "cve_id": "CVE-2022-41859",
  "github_data": {
    "repository": "FreeRADIUS/freeradius-server",
    "fix_commit": "9e5e8f2f",
    "related_commits": [
      "9e5e8f2f",
      "9e5e8f2f"
    ],
    "patch_url": "https://github.com/FreeRADIUS/freeradius-server/commit/9e5e8f2f.patch",
    "fix_commit_details": {
      "sha": "9e5e8f2f",
      "commit_date": "2022-02-04T14:36:26Z",
      "author": {
        "login": "alandekok",
        "type": "User",
        "stats": {
          "total_commits": 18816,
          "average_weekly_commits": 21.803012746234067,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 826
        }
      },
      "commit_message": {
        "title": "port fixes from master",
        "length": 118,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 90,
        "additions": 66,
        "deletions": 24
      },
      "files": [
        {
          "filename": "src/modules/rlm_eap/types/rlm_eap_pwd/eap_pwd.c",
          "status": "modified",
          "additions": 66,
          "deletions": 24,
          "patch": "@@ -248,18 +248,16 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t\t\t      char const *id_peer, int id_peer_len,\n \t\t\t      uint32_t *token)\n {\n-\tBIGNUM *x_candidate = NULL, *rnd = NULL, *y_sqrd = NULL, *qr = NULL, *qnr = NULL;\n-\tHMAC_CTX *ctx = NULL;\n-\tuint8_t pwe_digest[SHA256_DIGEST_LENGTH], *prfbuf = NULL, *xbuf = NULL, *pm1buf = NULL, ctr;\n-\tint nid, is_odd, primebitlen, primebytelen, ret = 0, found = 0, mask;\n-\tint save, i, rbits, qr_or_qnr, save_is_odd = 0, cmp;\n-\tunsigned int skip;\n-\n-\tctx = HMAC_CTX_new();\n-\tif (ctx == NULL) {\n-\t\tDEBUG(\"failed allocating HMAC context\");\n-\t\tgoto fail;\n-\t}\n+\tBIGNUM\t\t*x_candidate = NULL, *rnd = NULL, *y_sqrd = NULL, *qr = NULL, *qnr = NULL, *y1 = NULL, *y2 = NULL, *y = NULL, *exp = NULL;\n+\tEVP_MD_CTX\t*hmac_ctx;\n+\tEVP_PKEY\t*hmac_pkey;\n+\tuint8_t\t\tpwe_digest[SHA256_DIGEST_LENGTH], *prfbuf = NULL, *xbuf = NULL, *pm1buf = NULL, *y1buf = NULL, *y2buf = NULL, *ybuf = NULL, ctr;\n+\tint\t\tnid, is_odd, primebitlen, primebytelen, ret = 0, found = 0, mask;\n+\tint\t\tsave, i, rbits, qr_or_qnr, save_is_odd = 0, cmp;\n+\tunsigned int\tskip;\n+\n+\tMEM(hmac_ctx = EVP_MD_CTX_new());\n+\tMEM(hmac_pkey = EVP_PKEY_new_mac_key(EVP_PKEY_HMAC, NULL, allzero, sizeof(allzero)));\n \n \tswitch (grp_num) { /* from IANA registry for IKE D-H groups */\n \tcase 19:\n@@ -303,7 +301,11 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t    ((qr = consttime_BN()) == NULL) ||\n \t    ((qnr = consttime_BN()) == NULL) ||\n \t    ((x_candidate = consttime_BN()) == NULL) ||\n-\t    ((y_sqrd = consttime_BN()) == NULL)) {\n+\t    ((y_sqrd = consttime_BN()) == NULL) ||\n+\t    ((y1 = consttime_BN()) == NULL) ||\n+\t    ((y2 = consttime_BN()) == NULL) ||\n+\t    ((y = consttime_BN()) == NULL) ||\n+        ((exp = consttime_BN()) == NULL)) {\n \t\tDEBUG(\"unable to create bignums\");\n \t\tgoto fail;\n \t}\n@@ -332,6 +334,19 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t\tDEBUG(\"unable to alloc space for pm1 buffer\");\n \t\tgoto fail;\n \t}\n+\tif ((y1buf = talloc_zero_array(request, uint8_t, primebytelen)) == NULL) {\n+\t\tDEBUG(\"unable to alloc space for y1 buffer\");\n+\t\tgoto fail;\n+\t}\n+\tif ((y2buf = talloc_zero_array(request, uint8_t, primebytelen)) == NULL) {\n+\t\tDEBUG(\"unable to alloc space for y2 buffer\");\n+\t\tgoto fail;\n+\t}\n+\tif ((ybuf = talloc_zero_array(request, uint8_t, primebytelen)) == NULL) {\n+\t\tDEBUG(\"unable to alloc space for y buffer\");\n+\t\tgoto fail;\n+\t}\n+\n \n \t/*\n \t* derive random quadradic residue and quadratic non-residue\n@@ -361,13 +376,19 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t\t *\tpwd-seed = H(token | peer-id | server-id | password |\n \t\t *\t\t     counter)\n \t\t */\n-\t\tHMAC_Init_ex(ctx, allzero, SHA256_DIGEST_LENGTH, EVP_sha256(),NULL);\n-\t\tHMAC_Update(ctx, (uint8_t *)token, sizeof(*token));\n-\t\tHMAC_Update(ctx, (uint8_t const *)id_peer, id_peer_len);\n-\t\tHMAC_Update(ctx, (uint8_t const *)id_server, id_server_len);\n-\t\tHMAC_Update(ctx, (uint8_t const *)password, password_len);\n-\t\tHMAC_Update(ctx, (uint8_t *)&ctr, sizeof(ctr));\n-\t\tpwd_hmac_final(ctx, pwe_digest);\n+\t\tEVP_DigestSignInit(hmac_ctx, NULL, EVP_sha256(), NULL, hmac_pkey);\n+\t\tEVP_DigestSignUpdate(hmac_ctx, (uint8_t *)token, sizeof(*token));\n+\t\tEVP_DigestSignUpdate(hmac_ctx, (uint8_t const *)id_peer, id_peer_len);\n+\t\tEVP_DigestSignUpdate(hmac_ctx, (uint8_t const *)id_server, id_server_len);\n+\t\tEVP_DigestSignUpdate(hmac_ctx, (uint8_t const *)password, password_len);\n+\t\tEVP_DigestSignUpdate(hmac_ctx, (uint8_t *)&ctr, sizeof(ctr));\n+\n+\t\t{\n+\t\t\tsize_t mdlen = SHA256_DIGEST_LENGTH;\n+\n+\t\t\tEVP_DigestSignFinal(hmac_ctx, pwe_digest, &mdlen);\n+\t\t\tEVP_MD_CTX_reset(hmac_ctx);\n+\t\t}\n \n \t\tBN_bin2bn(pwe_digest, SHA256_DIGEST_LENGTH, rnd);\n \t\teap_pwd_kdf(pwe_digest, SHA256_DIGEST_LENGTH, \"EAP-pwd Hunting And Pecking\",\n@@ -401,7 +422,7 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t\t* need to unambiguously identify the solution, if there is\n \t\t* one..\n \t\t*/\n-\t\tis_odd = BN_is_odd(rnd) ? 1 : 0;\n+\t\tis_odd = BN_is_odd(rnd);\n \n \t\t/*\n \t\t* check whether x^3 + a*x + b is a quadratic residue\n@@ -444,8 +465,21 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \t* now we can savely construct PWE\n \t*/\n \tBN_bin2bn(xbuf, primebytelen, x_candidate);\n-\tif (!EC_POINT_set_compressed_coordinates(session->group, session->pwe,\n-\t\t\t\t\t\t     x_candidate, save_is_odd, NULL)) {\n+\tdo_equation(session->group, y_sqrd, x_candidate, session->bnctx);\n+\tif ( !BN_add(exp, session->prime, BN_value_one()) ||\n+\t\t !BN_rshift(exp, exp, 2) ||\n+\t\t !BN_mod_exp_mont_consttime(y1, y_sqrd, exp, session->prime, session->bnctx, NULL) ||\n+\t\t !BN_sub(y2, session->prime, y1) ||\n+\t\t !BN_bn2bin(y1, y1buf) ||\n+\t\t !BN_bn2bin(y2, y2buf)) {\n+\t\tDEBUG(\"unable to compute y\");\n+\t\tgoto fail;\n+\t}\n+\tmask = const_time_eq(save_is_odd, BN_is_odd(y1));\n+\tconst_time_select_bin(mask, y1buf, y2buf, primebytelen, ybuf);\n+\tif (BN_bin2bn(ybuf, primebytelen, y) == NULL ||\n+\t\t!EC_POINT_set_affine_coordinates(session->group, session->pwe, x_candidate, y, session->bnctx)) {\n+\t\tDEBUG(\"unable to set point coordinate\");\n \t\tgoto fail;\n \t}\n \n@@ -461,12 +495,20 @@ int compute_password_element (REQUEST *request, pwd_session_t *session, uint16_t\n \tBN_clear_free(qr);\n \tBN_clear_free(qnr);\n \tBN_clear_free(rnd);\n+\tBN_clear_free(y1);\n+\tBN_clear_free(y2);\n+\tBN_clear_free(y);\n+\tBN_clear_free(exp);\n \n \tif (prfbuf) talloc_free(prfbuf);\n \tif (xbuf) talloc_free(xbuf);\n \tif (pm1buf) talloc_free(pm1buf);\n+\tif (y1buf) talloc_free(y1buf);\n+\tif (y2buf) talloc_free(y2buf);\n+\tif (ybuf) talloc_free(ybuf);\n \n-\tHMAC_CTX_free(ctx);\n+\tEVP_MD_CTX_free(hmac_ctx);\n+\tEVP_PKEY_free(hmac_pkey);\n \n \treturn ret;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "396609977402aed0c5761ab35022d211fbf973ee",
            "date": "2025-01-13T21:21:52Z",
            "author_login": "alandekok"
          },
          {
            "sha": "eddceceeac1f77b3608a86b91af9536f4e14e6fc",
            "date": "2025-01-13T20:50:39Z",
            "author_login": "alandekok"
          },
          {
            "sha": "7cc983dd5455d0fab2c881408250fbcb3b058991",
            "date": "2025-01-13T20:49:58Z",
            "author_login": "alandekok"
          },
          {
            "sha": "2e46cbee220fc89857aedfa0d747dc9646c73f68",
            "date": "2025-01-13T20:49:13Z",
            "author_login": "alandekok"
          },
          {
            "sha": "0d0c3f0706819a6eb91d914962726d7aae9cd62d",
            "date": "2025-01-13T19:02:58Z",
            "author_login": "ethan-thompson"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "In freeradius, the EAP-PWD function compute_password_element() leaks information about the password which allows an attacker to substantially reduce the size of an offline dictionary attack.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-17T18:15:11.287",
    "last_modified": "2024-11-21T07:23:57.130",
    "fix_date": "2022-02-04T14:36:26Z"
  },
  "references": [
    {
      "url": "https://freeradius.org/security/",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRADIUS/freeradius-server/commit/9e5e8f2f",
      "source": "secalert@redhat.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://freeradius.org/security/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FreeRADIUS/freeradius-server/commit/9e5e8f2f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.565602",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "freeradius-server",
    "owner": "FreeRADIUS",
    "created_at": "2008-07-20T18:04:09Z",
    "updated_at": "2025-01-14T07:06:14Z",
    "pushed_at": "2025-01-13T21:39:31Z",
    "size": 157235,
    "stars": 2169,
    "forks": 1097,
    "open_issues": 58,
    "watchers": 2169,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "v1.1.x",
      "v2.x.x",
      "v2.1.x-apple",
      "v3.0.x",
      "v3.2.x"
    ],
    "languages": {
      "C": 13482819,
      "M4": 267096,
      "Makefile": 255998,
      "Perl": 199124,
      "Shell": 180821,
      "Python": 83761,
      "SCSS": 38185,
      "PLpgSQL": 28302,
      "Dockerfile": 17646,
      "TSQL": 15476,
      "Lua": 10013,
      "PLSQL": 7062,
      "SaltStack": 6314,
      "Roff": 6235,
      "Pawn": 2466,
      "Ruby": 1023,
      "SmPL": 1002,
      "BitBake": 856,
      "GDB": 223
    },
    "commit_activity": {
      "total_commits_last_year": 2525,
      "avg_commits_per_week": 48.55769230769231,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:06:00.129710"
  }
}