{
  "cve_id": "CVE-2022-41889",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "e9e95553e5411834d215e6770c81a83a3d0866ce",
    "related_commits": [
      "e9e95553e5411834d215e6770c81a83a3d0866ce",
      "e9e95553e5411834d215e6770c81a83a3d0866ce"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce.patch",
    "fix_commit_details": {
      "sha": "e9e95553e5411834d215e6770c81a83a3d0866ce",
      "commit_date": "2022-09-26T20:45:03Z",
      "author": {
        "login": "cantonios",
        "type": "User",
        "stats": {
          "total_commits": 299,
          "average_weekly_commits": 0.6229166666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 96
        }
      },
      "commit_message": {
        "title": "Fix pywrap attribute read security vulnerability.",
        "length": 305,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 27,
        "deletions": 5
      },
      "files": [
        {
          "filename": "tensorflow/python/eager/pywrap_tfe_src.cc",
          "status": "modified",
          "additions": 14,
          "deletions": 5,
          "patch": "@@ -397,11 +397,20 @@ bool SetOpAttrList(TFE_Context* ctx, TFE_Op* op, const char* key,\n   const int num_values = PySequence_Size(py_list);\n   if (attr_list_sizes != nullptr) (*attr_list_sizes)[key] = num_values;\n \n-#define PARSE_LIST(c_type, parse_fn)                                      \\\n-  std::unique_ptr<c_type[]> values(new c_type[num_values]);               \\\n-  for (int i = 0; i < num_values; ++i) {                                  \\\n-    tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));   \\\n-    if (!parse_fn(key, py_value.get(), status, &values[i])) return false; \\\n+#define PARSE_LIST(c_type, parse_fn)                                       \\\n+  std::unique_ptr<c_type[]> values(new c_type[num_values]);                \\\n+  for (int i = 0; i < num_values; ++i) {                                   \\\n+    tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));    \\\n+    if (py_value == nullptr) {                                             \\\n+      TF_SetStatus(status, TF_INVALID_ARGUMENT,                            \\\n+                   tensorflow::strings::StrCat(                            \\\n+                       \"Expecting sequence of \" #c_type \" for attr \", key, \\\n+                       \", got \", py_list->ob_type->tp_name)                \\\n+                       .c_str());                                          \\\n+      return false;                                                        \\\n+    } else if (!parse_fn(key, py_value.get(), status, &values[i])) {       \\\n+      return false;                                                        \\\n+    }                                                                      \\\n   }\n \n   if (type == TF_ATTR_STRING) {"
        },
        {
          "filename": "tensorflow/python/kernel_tests/image_ops/extract_image_patches_op_test.py",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -17,7 +17,9 @@\n import numpy as np\n \n from tensorflow.python.framework import constant_op\n+from tensorflow.python.framework import dtypes\n from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import math_ops\n from tensorflow.python.platform import test\n \n \n@@ -139,6 +141,17 @@ def testComplexDataTypes(self):\n             padding=padding,\n             patches=patches)\n \n+  def testInvalidAttributes(self):\n+    \"\"\"Test for passing weird things into ksizes.\"\"\"\n+    with self.assertRaisesRegex(TypeError, \"Expected list\"):\n+      image = constant_op.constant([0.0])\n+      ksizes = math_ops.cast(\n+          constant_op.constant(dtype=dtypes.int16, value=[[1, 4], [5, 2]]),\n+          dtype=dtypes.qint16)\n+      strides = [1, 1, 1, 1]\n+      self.evaluate(\n+          array_ops.extract_image_patches(\n+              image, ksizes=ksizes, strides=strides, padding=\"SAME\"))\n \n if __name__ == \"__main__\":\n   test.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2ed056484b967486920cc8be1740ab1bd13c9f64",
            "date": "2025-01-14T18:40:26Z",
            "author_login": "GleasonK"
          },
          {
            "sha": "f04ac71a7ba0972752968c52b299e9e53795c9bf",
            "date": "2025-01-14T18:36:27Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "af7f5e877165ab909d171a6ec560a8ce80f410b5",
            "date": "2025-01-14T18:29:16Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "29a59f3245aadc7db8c6cc3a3a0d214f2dd10d6b",
            "date": "2025-01-14T18:26:14Z",
            "author_login": "sergey-kozub"
          },
          {
            "sha": "56e196bc47a70e2f41926613f4cd370ddd734f3a",
            "date": "2025-01-14T18:00:32Z",
            "author_login": "loislo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-476",
    "description": "TensorFlow is an open source platform for machine learning. If a list of quantized tensors is assigned to an attribute, the pywrap code fails to parse the tensor and returns a `nullptr`, which is not caught. An example can be seen in `tf.compat.v1.extract_volume_patches` by passing in quantized tensors as input `ksizes`. We have patched the issue in GitHub commit e9e95553e5411834d215e6770c81a83a3d0866ce. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-18T22:15:15.667",
    "last_modified": "2024-11-21T07:24:00.047",
    "fix_date": "2022-09-26T20:45:03Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/generate_box_proposals_op.cu.cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xxcj-rhqg-m46g",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/generate_box_proposals_op.cu.cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xxcj-rhqg-m46g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.136055",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}