{
  "cve_id": "CVE-2022-41895",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "717ca98d8c3bba348ff62281fdf38dcb5ea1ec92",
    "related_commits": [
      "717ca98d8c3bba348ff62281fdf38dcb5ea1ec92",
      "717ca98d8c3bba348ff62281fdf38dcb5ea1ec92"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92.patch",
    "fix_commit_details": {
      "sha": "717ca98d8c3bba348ff62281fdf38dcb5ea1ec92",
      "commit_date": "2022-10-12T19:41:46Z",
      "author": {
        "login": "jsmeredith",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Adding missing requirement on inputs for MirrorPadGrad op and updating arithmetic to account for int32 padding values.",
        "length": 148,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 29,
        "additions": 26,
        "deletions": 3
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/image/mirror_pad_op.cc",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -297,13 +297,21 @@ class MirrorPadGradOp : public OpKernel {\n     TensorShape output_shape;\n     typename TTypes<Tpaddings>::ConstMatrix paddings = in1.matrix<Tpaddings>();\n     for (int d = 0; d < dims; ++d) {\n-      const Tpaddings before = paddings(d, 0);  // Pad before existing elements.\n-      const Tpaddings after = paddings(d, 1);   // Pad after existing elements.\n+      const int64_t before = paddings(d, 0);  // Pad before existing elements.\n+      const int64_t after = paddings(d, 1);   // Pad after existing elements.\n       OP_REQUIRES(context, before >= 0 && after >= 0,\n                   errors::InvalidArgument(\n                       \"Paddings must be non-negative: \", before, \", \", after));\n \n-      const int64_t out_size = in0.dim_size(d) - (before + after);\n+      const int64_t in_size = in0.dim_size(d);\n+      const int64_t total_padding = before + after;\n+      OP_REQUIRES(\n+          context, total_padding < in_size && total_padding >= 0,\n+          errors::InvalidArgument(\n+              \"Total paddings must be less than the input dimension size: \",\n+              total_padding, \" was not less than \", in_size));\n+\n+      const int64_t out_size = in_size - total_padding;\n       if (offset_ == 0) {  // SYMMETRIC mode.\n         OP_REQUIRES(context, before <= out_size && after <= out_size,\n                     errors::InvalidArgument(\"paddings must be no greater \""
        },
        {
          "filename": "tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -1617,6 +1617,21 @@ def testEager(self):\n                           [[0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 2, 3, 0, 0],\n                            [0, 0, 4, 5, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0]])\n \n+  # b/246325518: Bad shape size. Explicitly testing different execution paths.\n+  def testInvalidMirrorPadGradEagerMode(self):\n+    with context.eager_mode():\n+      with self.assertRaises(Exception):\n+        gen_array_ops.MirrorPadGrad(\n+            input=[1], paddings=[[0x77f00000, 0xa000000]], mode=\"REFLECT\")\n+\n+  # b/246325518: Bad shape size. Explicitly testing different execution paths.\n+  def testInvalidMirrorPadGradGraphMode(self):\n+    with context.graph_mode():\n+      with self.assertRaises(Exception):\n+        result = gen_array_ops.MirrorPadGrad(\n+            input=[1], paddings=[[0x77f00000, 0xa000000]], mode=\"REFLECT\")\n+        self.evaluate(result)\n+\n   def testSymmetricMirrorPadGrad(self):\n     t = np.broadcast_to(np.arange(0, 7), (3, 2, 1, 7))\n     paddings = constant_op.constant(["
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c141307fbd02349cf4d83f9a73bdba73fcba9b87",
            "date": "2025-01-14T14:26:56Z",
            "author_login": "mooskagh"
          },
          {
            "sha": "9263c01097f54dbb932ac56d6d87a61a93409221",
            "date": "2025-01-14T14:18:52Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "e7f7cefc7d284c486f84596811d07bb5cd0890ca",
            "date": "2025-01-14T14:16:10Z",
            "author_login": "krasimirgg"
          },
          {
            "sha": "fd41705e0ad7a123a9d01b8be2a3b34b3266493e",
            "date": "2025-01-14T13:33:52Z",
            "author_login": "loislo"
          },
          {
            "sha": "af5275c5731565cbf2a2c01ee418a8cf62388431",
            "date": "2025-01-14T12:48:20Z",
            "author_login": "akuegel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "TensorFlow is an open source platform for machine learning. If `MirrorPadGrad` is given outsize input `paddings`, TensorFlow will give a heap OOB error. We have patched the issue in GitHub commit 717ca98d8c3bba348ff62281fdf38dcb5ea1ec92. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-18T22:15:18.107",
    "last_modified": "2024-11-21T07:24:00.913",
    "fix_date": "2022-10-12T19:41:46Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/mirror_pad_op.cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gq2j-cr96-gvqx",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/mirror_pad_op.cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gq2j-cr96-gvqx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.136914",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}