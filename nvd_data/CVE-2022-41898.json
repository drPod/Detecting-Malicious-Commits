{
  "cve_id": "CVE-2022-41898",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "af4a6a3c8b95022c351edae94560acc61253a1b8",
    "related_commits": [
      "af4a6a3c8b95022c351edae94560acc61253a1b8",
      "af4a6a3c8b95022c351edae94560acc61253a1b8"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8.patch",
    "fix_commit_details": {
      "sha": "af4a6a3c8b95022c351edae94560acc61253a1b8",
      "commit_date": "2022-09-30T21:49:42Z",
      "author": {
        "login": "cantonios",
        "type": "User",
        "stats": {
          "total_commits": 299,
          "average_weekly_commits": 0.6229166666666667,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 96
        }
      },
      "commit_message": {
        "title": "Fix empty input crash for SparseFillEmptyRowsGrad.",
        "length": 80,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 33,
        "deletions": 17
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/sparse_fill_empty_rows_op_gpu.cu.cc",
          "status": "modified",
          "additions": 26,
          "deletions": 17,
          "patch": "@@ -297,9 +297,12 @@ struct SparseFillEmptyRows<GPUDevice, T, Tindex> {\n       empty_row_indicator = empty_row_indicator_t.vec<bool>().data();\n     }\n \n-    TF_RETURN_IF_ERROR(wrap_kernel_call(ComputeEmptyRowIndicatorKernel<Tindex>,\n-                                        /*device=*/device, /*size=*/dense_rows,\n-                                        elements_per_row, empty_row_indicator));\n+    if (dense_rows > 0) {\n+      TF_RETURN_IF_ERROR(\n+          wrap_kernel_call(ComputeEmptyRowIndicatorKernel<Tindex>,\n+                           /*device=*/device, /*size=*/dense_rows,\n+                           elements_per_row, empty_row_indicator));\n+    }\n \n     // For each row, the number of empty rows up to and including that row.\n     Tensor num_empty_rows_through_t;\n@@ -405,14 +408,16 @@ struct SparseFillEmptyRows<GPUDevice, T, Tindex> {\n             done);\n       }\n \n-      OP_REQUIRES_OK_ASYNC(\n-          context,\n-          wrap_kernel_call(ScatterNewElementsKernel<T, Tindex>,\n-                           /*device=*/device, /*size=*/dense_rows, rank,\n-                           default_value, num_empty_rows_through,\n-                           input_row_ends, empty_row_indicator, output_indices,\n-                           output_values),\n-          done);\n+      if (dense_rows > 0) {\n+        OP_REQUIRES_OK_ASYNC(\n+            context,\n+            wrap_kernel_call(ScatterNewElementsKernel<T, Tindex>,\n+                             /*device=*/device, /*size=*/dense_rows, rank,\n+                             default_value, num_empty_rows_through,\n+                             input_row_ends, empty_row_indicator,\n+                             output_indices, output_values),\n+            done);\n+      }\n \n       done();\n     };\n@@ -461,9 +466,11 @@ struct SparseFillEmptyRows<GPUDevice, T, Tindex> {\n     TF_RETURN_IF_ERROR(\n         context->allocate_temp(index_type, TensorShape({N}), &row_indices_t));\n     auto row_indices = row_indices_t.flat<Tindex>();\n-    TF_RETURN_IF_ERROR(wrap_kernel_call(CopyRowIndicesKernel<Tindex>,\n-                                        /*device=*/device, /*size=*/N, rank,\n-                                        indices, row_indices));\n+    if (N > 0) {\n+      TF_RETURN_IF_ERROR(wrap_kernel_call(CopyRowIndicesKernel<Tindex>,\n+                                          /*device=*/device, /*size=*/N, rank,\n+                                          indices, row_indices));\n+    }\n     // Allocate input_index_map.\n     TF_RETURN_IF_ERROR(context->allocate_temp(index_type, TensorShape({N}),\n                                               input_index_map_t));\n@@ -528,9 +535,11 @@ struct SparseFillEmptyRowsGrad<GPUDevice, T, Tindex> {\n     auto visited = visited_t.vec<bool>();\n     visited.device(device) = visited.constant(false);\n \n-    TF_RETURN_IF_ERROR(wrap_kernel_call(\n-        GatherOriginalGradValuesKernel<T, Tindex>, /*device=*/device,\n-        /*size=*/N, reverse_index_map, grad_values, d_values, visited));\n+    if (N > 0) {\n+      TF_RETURN_IF_ERROR(wrap_kernel_call(\n+          GatherOriginalGradValuesKernel<T, Tindex>, /*device=*/device,\n+          /*size=*/N, reverse_index_map, grad_values, d_values, visited));\n+    }\n \n     // Now we mask out the visited values and sum the remaining ones (which\n     // correspond to the empty rows in the forward input) to compute"
        },
        {
          "filename": "tensorflow/python/kernel_tests/sparse_ops/sparse_ops_test.py",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -514,6 +514,13 @@ def testFillNumber(self):\n         self.assertAllEqual(empty_row_indicator_out,\n                             np.array([0, 0, 1, 0, 1]).astype(np.bool_))\n \n+  def testSparseFillEmptyRowsGradEmpty(self):\n+    with test_util.use_gpu():\n+      grad, _ = self.evaluate(\n+          sparse_ops.sparse_fill_empty_rows_grad(\n+              reverse_index_map=[], grad_values=[]))\n+      self.assertAllEqual(grad, [])\n+\n   @test_util.run_deprecated_v1\n   def testFillFloat(self):\n     with self.session():"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d65ab241c92b18a8e82a53b03575775279713930",
            "date": "2025-01-14T16:17:42Z",
            "author_login": "akuegel"
          },
          {
            "sha": "7f1cdb4f94bf497a8f81b47cb0b0f6f33dfcdf2f",
            "date": "2025-01-14T15:43:26Z",
            "author_login": "vwbaker"
          },
          {
            "sha": "8f888e57d9fab1d2e4127fdeaabc3f8976471065",
            "date": "2025-01-14T15:28:59Z",
            "author_login": "ddunl"
          },
          {
            "sha": "4e74930bd620da4ea2bb691359aaa9b2dc6b0605",
            "date": "2025-01-14T15:28:20Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "251362e6c6746aaf6bffcfe514e79c6cc65336d7",
            "date": "2025-01-14T15:24:59Z",
            "author_login": "loislo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-20",
    "description": "TensorFlow is an open source platform for machine learning. If `SparseFillEmptyRowsGrad` is given empty inputs, TensorFlow will crash. We have patched the issue in GitHub commit af4a6a3c8b95022c351edae94560acc61253a1b8. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-18T22:15:19.420",
    "last_modified": "2024-11-21T07:24:01.313",
    "fix_date": "2022-09-30T21:49:42Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/sparse_fill_empty_rows_op_gpu.cu.cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hq7g-wwwp-q46h",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/sparse_fill_empty_rows_op_gpu.cu.cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hq7g-wwwp-q46h",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.137377",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}