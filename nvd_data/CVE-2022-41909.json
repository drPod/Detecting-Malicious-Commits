{
  "cve_id": "CVE-2022-41909",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "660ce5a89eb6766834bdc303d2ab3902aef99d3d",
    "related_commits": [
      "660ce5a89eb6766834bdc303d2ab3902aef99d3d",
      "bf594d08d377dc6a3354d9fdb494b32d45f91971",
      "660ce5a89eb6766834bdc303d2ab3902aef99d3d",
      "bf594d08d377dc6a3354d9fdb494b32d45f91971"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d.patch",
    "fix_commit_details": {
      "sha": "660ce5a89eb6766834bdc303d2ab3902aef99d3d",
      "commit_date": "2022-09-14T21:54:10Z",
      "author": {
        "login": "JXRiver",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[Security] Add a check for empty variant tensor input to CompositeTensorVariantToComponents.",
        "length": 175,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 20,
        "additions": 20,
        "deletions": 0
      },
      "files": [
        {
          "filename": "tensorflow/core/kernels/composite_tensor_ops.cc",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@ limitations under the License.\n \n #include \"tensorflow/core/framework/op.h\"\n #include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/op_requires.h\"\n #include \"tensorflow/core/framework/variant.h\"\n #include \"tensorflow/core/framework/variant_encode_decode.h\"\n #include \"tensorflow/core/kernels/composite_tensor_variant.h\"\n@@ -66,6 +67,11 @@ class CompositeTensorVariantToComponents : public OpKernel {\n \n   void Compute(OpKernelContext* context) override {\n     Tensor encoded_t = context->input(0);\n+    OP_REQUIRES(\n+        context, encoded_t.flat<Variant>().size() > 0,\n+        errors::InvalidArgument(\"Input `encoded` must not be an empty variant \"\n+                                \"tensor, but got \",\n+                                encoded_t.DebugString()));\n     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();\n \n     // Check that the encoded TypeSpec is compatible with the expected TypeSpec."
        },
        {
          "filename": "tensorflow/python/kernel_tests/composite_tensor_ops_test.py",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -18,11 +18,13 @@\n \n from tensorflow.python.eager import backprop\n from tensorflow.python.eager import context\n+from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n from tensorflow.python.framework import errors\n from tensorflow.python.framework import sparse_tensor\n from tensorflow.python.framework import test_util\n from tensorflow.python.ops import composite_tensor_ops\n+from tensorflow.python.ops import gen_composite_tensor_ops\n from tensorflow.python.ops import gradients_impl\n from tensorflow.python.ops import math_ops\n from tensorflow.python.ops import parsing_ops\n@@ -83,6 +85,18 @@ def testEncodingErrors(self, value, spec, message):\n     with self.assertRaisesRegex(ValueError, message):\n       composite_tensor_ops.composite_tensor_to_variants(value(), spec)\n \n+  def testDecodingEmptyNonScalarTensorError(self):\n+    if not context.executing_eagerly():\n+      # Creating a variant tensor of an empty list is not allowed in eager mode.\n+      return\n+\n+    with self.assertRaisesRegex(errors.InvalidArgumentError,\n+                                'must not be an empty variant tensor'):\n+      gen_composite_tensor_ops.CompositeTensorVariantToComponents(\n+          encoded=constant_op.constant([], dtype=dtypes.variant),\n+          metadata='',\n+          Tcomponents=[dtypes.int32])\n+\n   def testRoundTripThroughTensorProto(self):\n     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])\n     encoded = composite_tensor_ops.composite_tensor_to_variants(value)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "251362e6c6746aaf6bffcfe514e79c6cc65336d7",
            "date": "2025-01-14T15:24:59Z",
            "author_login": "loislo"
          },
          {
            "sha": "eaa68cb298188196e413abfb1606c38f785dfed4",
            "date": "2025-01-14T15:15:19Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "c141307fbd02349cf4d83f9a73bdba73fcba9b87",
            "date": "2025-01-14T14:26:56Z",
            "author_login": "mooskagh"
          },
          {
            "sha": "9263c01097f54dbb932ac56d6d87a61a93409221",
            "date": "2025-01-14T14:18:52Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "e7f7cefc7d284c486f84596811d07bb5cd0890ca",
            "date": "2025-01-14T14:16:10Z",
            "author_login": "krasimirgg"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-20",
    "description": "TensorFlow is an open source platform for machine learning. An input `encoded` that is not a valid `CompositeTensorVariant` tensor will trigger a segfault in `tf.raw_ops.CompositeTensorVariantToComponents`. We have patched the issue in GitHub commits bf594d08d377dc6a3354d9fdb494b32d45f91971 and 660ce5a89eb6766834bdc303d2ab3902aef99d3d. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-18T22:15:22.223",
    "last_modified": "2024-11-21T07:24:02.807",
    "fix_date": "2022-09-14T21:54:10Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/core/py_func.cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/bf594d08d377dc6a3354d9fdb494b32d45f91971",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjx6-v474-2ch9",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/core/py_func.cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/bf594d08d377dc6a3354d9fdb494b32d45f91971",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjx6-v474-2ch9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.138288",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}