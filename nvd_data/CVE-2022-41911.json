{
  "cve_id": "CVE-2022-41911",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "1be743703279782a357adbf9b77dcb994fe8b508",
    "related_commits": [
      "1be743703279782a357adbf9b77dcb994fe8b508",
      "1be743703279782a357adbf9b77dcb994fe8b508"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508.patch",
    "fix_commit_details": {
      "sha": "1be743703279782a357adbf9b77dcb994fe8b508",
      "commit_date": "2022-10-19T21:01:08Z",
      "author": {
        "login": "mihaimaruseac",
        "type": "User",
        "stats": {
          "total_commits": 1590,
          "average_weekly_commits": 3.3125,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 214
        }
      },
      "commit_message": {
        "title": "Resolve a sanitizer issue with invalid char -> bool conversion.",
        "length": 502,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 27,
        "deletions": 5
      },
      "files": [
        {
          "filename": "tensorflow/core/framework/tensor.cc",
          "status": "modified",
          "additions": 27,
          "deletions": 5,
          "patch": "@@ -29,6 +29,7 @@ limitations under the License.\n \n #include \"tensorflow/core/framework/tensor.h\"\n \n+#include <memory>\n #include <utility>\n \n #include \"absl/strings/escaping.h\"\n@@ -1183,12 +1184,10 @@ void PrintOneDimV2(int dim_index, const gtl::InlinedVector<int64, 4>& shape,\n }\n \n template <typename T>\n-string SummarizeArray(int64_t limit, int64_t num_elts,\n-                      const TensorShape& tensor_shape, const char* data,\n-                      const bool print_v2) {\n+string SummarizeArrayInternal(int64_t limit, int64_t num_elts,\n+                              const TensorShape& tensor_shape, const T* array,\n+                              const bool print_v2) {\n   string ret;\n-  const T* array = reinterpret_cast<const T*>(data);\n-\n   const gtl::InlinedVector<int64_t, 4> shape = tensor_shape.dim_sizes();\n   if (shape.empty()) {\n     for (int64_t i = 0; i < limit; ++i) {\n@@ -1211,6 +1210,29 @@ string SummarizeArray(int64_t limit, int64_t num_elts,\n \n   return ret;\n }\n+\n+template <typename T>\n+string SummarizeArray(int64_t limit, int64_t num_elts,\n+                      const TensorShape& tensor_shape, const char* data,\n+                      const bool print_v2) {\n+  const T* array = reinterpret_cast<const T*>(data);\n+  return SummarizeArrayInternal<T>(limit, num_elts, tensor_shape, array,\n+                                   print_v2);\n+}\n+\n+template <>\n+string SummarizeArray<bool>(int64_t limit, int64_t num_elts,\n+                            const TensorShape& tensor_shape, const char* data,\n+                            const bool print_v2) {\n+  // We first convert all chars to be 0/1 to not get InvalidEnumValue sanitizer\n+  // error\n+  auto mutable_data = std::unique_ptr<char[]>(new char[num_elts]);\n+  for (int64_t i = 0; i < num_elts; ++i)\n+    mutable_data.get()[i] = data[i] ? 1 : 0;\n+  bool* array = reinterpret_cast<bool*>(mutable_data.get());\n+  return SummarizeArrayInternal<bool>(limit, num_elts, tensor_shape, array,\n+                                      print_v2);\n+}\n }  // namespace\n \n string Tensor::SummarizeValue(int64_t max_entries, bool print_v2) const {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d93cc4f4f767f0d4a72f2fafcc59005be939c019",
            "date": "2025-01-14T20:36:32Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "d4e4516cc7d11a68a81a82227f3a432f7ab350a0",
            "date": "2025-01-14T19:59:15Z",
            "author_login": "ddunl"
          },
          {
            "sha": "65367823d999b6a36a685617100a7bb6ce03add4",
            "date": "2025-01-14T19:58:00Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "36cbae5466dbf356d91cf56127b2ab2ccd5a8b1f",
            "date": "2025-01-14T19:54:19Z",
            "author_login": "penpornk"
          },
          {
            "sha": "0a99598a8f76735ac32b5466385b0f5af08a06bb",
            "date": "2025-01-14T19:45:23Z",
            "author_login": "wangpengmit"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-704",
    "description": "TensorFlow is an open source platform for machine learning. When printing a tensor, we get it's data as a `const char*` array (since that's the underlying storage) and then we typecast it to the element type. However, conversions from `char` to `bool` are undefined if the `char` is not `0` or `1`, so sanitizers/fuzzers will crash. The issue has been patched in GitHub commit `1be74370327`. The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.10.1, TensorFlow 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-18T22:15:22.743",
    "last_modified": "2024-11-21T07:24:03.057",
    "fix_date": "2022-10-19T21:01:08Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/807cae8a807960fd7ac2313cde73a11fc15e7942/tensorflow/core/framework/tensor.cc#L1200-L1227",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pf36-r9c6-h97j",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/blob/807cae8a807960fd7ac2313cde73a11fc15e7942/tensorflow/core/framework/tensor.cc#L1200-L1227",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pf36-r9c6-h97j",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.138440",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}