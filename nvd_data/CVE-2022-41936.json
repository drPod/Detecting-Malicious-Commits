{
  "cve_id": "CVE-2022-41936",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff",
    "related_commits": [
      "38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff",
      "38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff.patch",
    "fix_commit_details": {
      "sha": "38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff",
      "commit_date": "2022-07-18T12:14:50Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 953,
          "average_weekly_commits": 0.9989517819706499,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "XWIKI-19997: Improved modifications rest endpoint history summary filtering",
        "length": 75,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 250,
        "additions": 236,
        "deletions": 14
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -32,7 +32,7 @@\n   <name>XWiki Platform - REST - Server</name>\n   <description>Service for accessing XWiki through a RESTful API</description>\n   <properties>\n-    <xwiki.jacoco.instructionRatio>0.26</xwiki.jacoco.instructionRatio>\n+    <xwiki.jacoco.instructionRatio>0.29</xwiki.jacoco.instructionRatio>\n   </properties>\n   <dependencies>\n     <dependency>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/resources/ModificationsResourceImpl.java",
          "status": "modified",
          "additions": 30,
          "deletions": 13,
          "patch": "@@ -23,9 +23,12 @@\n import java.util.Date;\n import java.util.List;\n \n+import javax.inject.Inject;\n import javax.inject.Named;\n \n import org.xwiki.component.annotation.Component;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.DocumentReferenceResolver;\n import org.xwiki.query.Query;\n import org.xwiki.query.QueryException;\n import org.xwiki.rest.XWikiResource;\n@@ -35,16 +38,25 @@\n import org.xwiki.rest.model.jaxb.History;\n import org.xwiki.rest.model.jaxb.HistorySummary;\n import org.xwiki.rest.resources.ModificationsResource;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n \n import com.xpn.xwiki.doc.rcs.XWikiRCSNodeId;\n \n+import static org.xwiki.security.authorization.Right.VIEW;\n+\n /**\n  * @version $Id$\n  */\n @Component\n @Named(\"org.xwiki.rest.internal.resources.ModificationsResourceImpl\")\n public class ModificationsResourceImpl extends XWikiResource implements ModificationsResource\n {\n+    @Inject\n+    private ContextualAuthorizationManager authorizationManager;\n+\n+    @Inject\n+    private DocumentReferenceResolver<String> resolver;\n+\n     @Override\n     public History getModifications(String wikiName, Integer start, Integer number, String order, Long ts,\n             Boolean withPrettyNames) throws XWikiRestException\n@@ -67,21 +79,26 @@ public History getModifications(String wikiName, Integer start, Integer number,\n                 String spaceId = (String) fields[0];\n                 List<String> spaces = Utils.getSpacesFromSpaceId(spaceId);\n                 String pageName = (String) fields[1];\n-                String language = (String) fields[2];\n-                if (language.equals(\"\")) {\n-                    language = null;\n-                }\n-                XWikiRCSNodeId nodeId = (XWikiRCSNodeId) fields[3];\n-                Timestamp timestamp = (Timestamp) fields[4];\n-                Date modified = new Date(timestamp.getTime());\n-                String modifier = (String) fields[5];\n-                String comment = (String) fields[6];\n \n-                HistorySummary historySummary = DomainObjectFactory.createHistorySummary(objectFactory,\n-                        uriInfo.getBaseUri(), wikiName, spaces, pageName, language, nodeId.getVersion(), modifier,\n-                        modified, comment, Utils.getXWikiApi(componentManager), withPrettyNames);\n+                DocumentReference documentReference =\n+                    this.resolver.resolve(Utils.getPageId(wikiName, spaces, pageName));\n+                if (this.authorizationManager.hasAccess(VIEW, documentReference)) {\n+                    String language = (String) fields[2];\n+                    if (language.equals(\"\")) {\n+                        language = null;\n+                    }\n+                    XWikiRCSNodeId nodeId = (XWikiRCSNodeId) fields[3];\n+                    Timestamp timestamp = (Timestamp) fields[4];\n+                    Date modified = new Date(timestamp.getTime());\n+                    String modifier = (String) fields[5];\n+                    String comment = (String) fields[6];\n \n-                history.getHistorySummaries().add(historySummary);\n+                    HistorySummary historySummary =\n+                        DomainObjectFactory.createHistorySummary(this.objectFactory, this.uriInfo.getBaseUri(),\n+                            wikiName, spaces, pageName, language, nodeId.getVersion(), modifier, modified, comment,\n+                            Utils.getXWikiApi(this.componentManager), withPrettyNames);\n+                    history.getHistorySummaries().add(historySummary);\n+                }\n             }\n \n             return history;"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/test/java/org/xwiki/rest/internal/resources/ModificationsResourceImplTest.java",
          "status": "added",
          "additions": 205,
          "deletions": 0,
          "patch": "@@ -0,0 +1,205 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.rest.internal.resources;\n+\n+import java.net.URI;\n+import java.sql.Timestamp;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import javax.inject.Named;\n+import javax.inject.Provider;\n+import javax.ws.rs.core.UriInfo;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+import org.suigeneris.jrcs.rcs.Version;\n+import org.xwiki.component.manager.ComponentManager;\n+import org.xwiki.component.util.ReflectionUtils;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.DocumentReferenceResolver;\n+import org.xwiki.model.reference.EntityReferenceSerializer;\n+import org.xwiki.model.reference.SpaceReference;\n+import org.xwiki.model.reference.SpaceReferenceResolver;\n+import org.xwiki.model.reference.WikiReference;\n+import org.xwiki.query.Query;\n+import org.xwiki.query.QueryManager;\n+import org.xwiki.rest.model.jaxb.History;\n+import org.xwiki.rest.model.jaxb.HistorySummary;\n+import org.xwiki.rest.model.jaxb.Link;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n+import org.xwiki.test.annotation.BeforeComponent;\n+import org.xwiki.test.junit5.mockito.ComponentTest;\n+import org.xwiki.test.junit5.mockito.InjectComponentManager;\n+import org.xwiki.test.junit5.mockito.InjectMockComponents;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.test.mockito.MockitoComponentManager;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.doc.rcs.XWikiRCSNodeId;\n+import com.xpn.xwiki.web.Utils;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.Collections.singleton;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyInt;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.xwiki.security.authorization.Right.VIEW;\n+\n+/**\n+ * Test of {@link ModificationsResourceImpl}.\n+ *\n+ * @version $Id$\n+ * @since 14.6\n+ * @since 14.4.3\n+ * @since 13.10.8\n+ */\n+@ComponentTest\n+class ModificationsResourceImplTest\n+{\n+    @InjectMockComponents\n+    private ModificationsResourceImpl modificationsResource;\n+\n+    @MockComponent\n+    private ContextualAuthorizationManager authorizationManager;\n+\n+    @MockComponent\n+    private DocumentReferenceResolver<String> resolver;\n+\n+    @MockComponent\n+    private QueryManager queryManager;\n+\n+    @MockComponent\n+    private SpaceReferenceResolver<String> spaceReferenceResolver;\n+\n+    @MockComponent\n+    private EntityReferenceSerializer<String> entityReferenceSerializer;\n+\n+    @MockComponent\n+    private Provider<XWikiContext> xcontextProvider;\n+\n+    @MockComponent\n+    @Named(\"local\")\n+    private EntityReferenceSerializer<String> localEntityReferenceSerializer;\n+\n+    @InjectComponentManager\n+    private MockitoComponentManager componentManager;\n+\n+    @Mock\n+    private Query query;\n+\n+    @Mock\n+    private XWikiContext xcontext;\n+\n+    @BeforeComponent\n+    void beforeComponent() throws Exception\n+    {\n+        this.xcontext = mock(XWikiContext.class);\n+        when(this.xcontextProvider.get()).thenReturn(this.xcontext);\n+        this.componentManager.registerComponent(ComponentManager.class, \"context\", this.componentManager);\n+    }\n+\n+    @Test\n+    void getModifications() throws Exception\n+    {\n+        when(this.xcontextProvider.get()).thenReturn(this.xcontext);\n+        UriInfo uriInfo = mock(UriInfo.class);\n+        when(uriInfo.getBaseUri()).thenReturn(new URI(\"/xwiki/rest\"));\n+        ReflectionUtils.setFieldValue(this.modificationsResource, \"uriInfo\", uriInfo);\n+        Utils.setComponentManager(this.componentManager);\n+\n+        when(this.queryManager.createQuery(\n+            \"select doc.space, doc.name, doc.language, rcs.id, rcs.date, rcs.author, rcs.comment \"\n+                + \"from XWikiRCSNodeInfo as rcs, XWikiDocument as doc \"\n+                + \"where rcs.id.docId = doc.id \"\n+                + \"and rcs.date > :date \"\n+                + \"order by rcs.date desc, rcs.id.version1 desc, rcs.id.version2 desc\",\n+            Query.XWQL)).thenReturn(this.query);\n+        when(this.query.bindValue(any(), any())).thenReturn(this.query);\n+        when(this.query.setLimit(anyInt())).thenReturn(this.query);\n+        when(this.query.setOffset(anyInt())).thenReturn(this.query);\n+        when(this.query.setWiki(any())).thenReturn(this.query);\n+        when(this.query.execute()).thenReturn(asList(\n+            new Object[] {\n+                \"Space\",\n+                \"Viewable\",\n+                \"en\",\n+                new XWikiRCSNodeId(new WikiReference(\"wikiId\"), 42, new Version(1, 1)),\n+                new Timestamp(1),\n+                \"modifierViewable\",\n+                \"commentViewable\"\n+            },\n+            new Object[] {\n+                \"Space\",\n+                \"NotViewable\",\n+                \"fr\",\n+                new XWikiRCSNodeId(new WikiReference(\"wikiId\"), 43, new Version(1, 2)),\n+                new Timestamp(2),\n+                \"modifierNotViewable\",\n+                \"commentNotViewable\"\n+            }\n+        ));\n+\n+        DocumentReference viewableDocumentReference = new DocumentReference(\"wikiId\", \"Space\", \"Viewable\");\n+        DocumentReference notViewableDocumentReference = new DocumentReference(\"wikiId\", \"Space\", \"NotViewable\");\n+        SpaceReference whateverSpaceReference = new SpaceReference(\"Space\", new WikiReference(\"whatever\"));\n+        String viewableSerializedReference = \"wikiId:Space.Viewable\";\n+        String notViewableSerializedReference = \"wikiId:Space.NotViewable\";\n+\n+        when(this.authorizationManager.hasAccess(VIEW, viewableDocumentReference)).thenReturn(true);\n+        when(this.authorizationManager.hasAccess(VIEW, notViewableDocumentReference)).thenReturn(false);\n+        when(this.spaceReferenceResolver.resolve(\"Space\", new WikiReference(\"whatever\")))\n+            .thenReturn(whateverSpaceReference);\n+        when(this.entityReferenceSerializer.serialize(viewableDocumentReference))\n+            .thenReturn(viewableSerializedReference);\n+        when(this.resolver.resolve(viewableSerializedReference)).thenReturn(viewableDocumentReference);\n+        when(this.entityReferenceSerializer.serialize(notViewableDocumentReference))\n+            .thenReturn(notViewableSerializedReference);\n+        when(this.resolver.resolve(notViewableSerializedReference)).thenReturn(notViewableDocumentReference);\n+        when(this.localEntityReferenceSerializer.serialize(whateverSpaceReference)).thenReturn(\"Space\");\n+\n+        History history = this.modificationsResource.getModifications(\"wikiId\", 0, 10, \"desc\", 1L, false);\n+\n+        HistorySummary expectedHistorySummary = new HistorySummary();\n+        expectedHistorySummary.setPageId(\"wikiId:Space.Viewable\");\n+        expectedHistorySummary.setWiki(\"wikiId\");\n+        expectedHistorySummary.setSpace(\"Space\");\n+        expectedHistorySummary.setName(\"Viewable\");\n+        expectedHistorySummary.setVersion(\"1.1\");\n+        expectedHistorySummary.setMajorVersion(1);\n+        expectedHistorySummary.setMinorVersion(1);\n+        Calendar expectedCalendar = Calendar.getInstance();\n+        expectedCalendar.setTime(new Date(new Timestamp(1).getTime()));\n+        expectedHistorySummary.setModified(expectedCalendar);\n+        expectedHistorySummary.setModifier(\"modifierViewable\");\n+        expectedHistorySummary.setLanguage(\"en\");\n+        expectedHistorySummary.setComment(\"commentViewable\");\n+        Link expectedLink = new Link();\n+        expectedLink.setHref(\"/xwiki/rest/wikis/wikiId/spaces/Space/pages/Viewable/translations/en/history/1.1\");\n+        expectedLink.setRel(\"http://www.xwiki.org/rel/page\");\n+        expectedHistorySummary.withLinks(expectedLink);\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        assertEquals(objectMapper.writeValueAsString(singleton(expectedHistorySummary)),\n+            objectMapper.writeValueAsString(history.getHistorySummaries()));\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-359",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The `modifications` rest endpoint does not filter out entries according to the user's rights. Therefore, information hidden from unauthorized users are exposed though the `modifications` rest endpoint (comments and page names etc). Users should upgrade to XWiki 14.6+, 14.4.3+, or 13.10.8+. Older versions have not been patched. There are no known workarounds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-22T01:15:34.130",
    "last_modified": "2024-11-21T07:24:06.490",
    "fix_date": "2022-07-18T12:14:50Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-p88w-fhxw-xvcc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19997",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/38dc1aa1a4435f24d58f5b8e4566cbcb0971f8ff",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-p88w-fhxw-xvcc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19997",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.146646",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}