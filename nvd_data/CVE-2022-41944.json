{
  "cve_id": "CVE-2022-41944",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "c6ee28ec756436cc9ce154dd2c8e4c441f92f693",
    "related_commits": [
      "c6ee28ec756436cc9ce154dd2c8e4c441f92f693",
      "c6ee28ec756436cc9ce154dd2c8e4c441f92f693"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/c6ee28ec756436cc9ce154dd2c8e4c441f92f693.patch",
    "fix_commit_details": {
      "sha": "c6ee28ec756436cc9ce154dd2c8e4c441f92f693",
      "commit_date": "2022-11-28T00:41:57Z",
      "author": {
        "login": "martin-brennan",
        "type": "User",
        "stats": {
          "total_commits": 1378,
          "average_weekly_commits": 1.9884559884559885,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 245
        }
      },
      "commit_message": {
        "title": "SECURITY: Hide notifications for inaccessible topics (#19208)",
        "length": 143,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 54,
        "additions": 53,
        "deletions": 1
      },
      "files": [
        {
          "filename": "app/controllers/notifications_controller.rb",
          "status": "modified",
          "additions": 9,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@ def index\n       end\n \n       if notifications.present? && !(params.has_key?(:silent) || @readonly_mode)\n-        if changed = current_user.bump_last_seen_notification!\n+        if current_user.bump_last_seen_notification!\n           current_user.reload\n           current_user.publish_notifications_state\n         end\n@@ -57,6 +57,8 @@ def index\n         end\n       end\n \n+      notifications = filter_inaccessible_notifications(notifications)\n+\n       json = {\n         notifications: serialize_data(notifications, NotificationSerializer),\n         seen_notification_id: current_user.seen_notification_id\n@@ -82,6 +84,7 @@ def index\n \n       total_rows = notifications.dup.count\n       notifications = notifications.offset(offset).limit(60)\n+      notifications = filter_inaccessible_notifications(notifications)\n       render_json_dump(notifications: serialize_data(notifications, NotificationSerializer),\n                        total_rows_notifications: total_rows,\n                        seen_notification_id: user.seen_notification_id,\n@@ -145,4 +148,9 @@ def render_notification\n     render_json_dump(NotificationSerializer.new(@notification, scope: guardian, root: false))\n   end\n \n+  def filter_inaccessible_notifications(notifications)\n+    topic_ids = notifications.map { |n| n.topic_id }.compact.uniq\n+    accessible_topic_ids = guardian.can_see_topic_ids(topic_ids: topic_ids)\n+    notifications.select { |n| n.topic_id.blank? || accessible_topic_ids.include?(n.topic_id) }\n+  end\n end"
        },
        {
          "filename": "spec/requests/notifications_controller_spec.rb",
          "status": "modified",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -339,6 +339,50 @@ def delete_notification(resp_code, matcher)\n             expect(response.status).to eq(404)\n           end\n         end\n+\n+        context \"with notifications for inaccessible topics\" do\n+          fab!(:sender) { Fabricate.build(:topic_allowed_user, user: Fabricate(:coding_horror)) }\n+          fab!(:allowed_user) { Fabricate.build(:topic_allowed_user, user: user) }\n+          fab!(:another_allowed_user) { Fabricate.build(:topic_allowed_user, user: Fabricate(:user)) }\n+          fab!(:allowed_pm) { Fabricate(:private_message_topic, topic_allowed_users: [sender, allowed_user, another_allowed_user]) }\n+          fab!(:forbidden_pm) { Fabricate(:private_message_topic, topic_allowed_users: [sender, another_allowed_user]) }\n+          fab!(:allowed_pm_notification) { Fabricate(:private_message_notification, user: user, topic: allowed_pm) }\n+          fab!(:forbidden_pm_notification) { Fabricate(:private_message_notification, user: user, topic: forbidden_pm) }\n+\n+          def expect_correct_notifications(response)\n+            notification_ids = response.parsed_body[\"notifications\"].map { |n| n[\"id\"] }\n+            expect(notification_ids).to include(allowed_pm_notification.id)\n+            expect(notification_ids).to_not include(forbidden_pm_notification.id)\n+          end\n+\n+          context \"with 'recent' filter\" do\n+            it \"doesn't include notifications from topics the user isn't allowed to see\" do\n+              SiteSetting.enable_experimental_sidebar_hamburger = true\n+              get \"/notifications.json\", params: { recent: true }\n+              expect(response.status).to eq(200)\n+              expect_correct_notifications(response)\n+\n+              SiteSetting.enable_experimental_sidebar_hamburger = false\n+              get \"/notifications.json\", params: { recent: true }\n+              expect(response.status).to eq(200)\n+              expect_correct_notifications(response)\n+            end\n+          end\n+\n+          context \"without 'recent' filter\" do\n+            it \"doesn't include notifications from topics the user isn't allowed to see\" do\n+              SiteSetting.enable_experimental_sidebar_hamburger = true\n+              get \"/notifications.json\"\n+              expect(response.status).to eq(200)\n+              expect_correct_notifications(response)\n+\n+              SiteSetting.enable_experimental_sidebar_hamburger = false\n+              get \"/notifications.json\"\n+              expect(response.status).to eq(200)\n+              expect_correct_notifications(response)\n+            end\n+          end\n+        end\n       end\n \n       it 'should succeed' do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1b19bf690a8e0a8cb1de3326078d863114516907",
            "date": "2025-01-14T19:14:55Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "496a739788d58a7f1c6bd59643d062ae37e982a0",
            "date": "2025-01-14T15:19:49Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "a89086f7996f95024827df61fb0d86a516b269f6",
            "date": "2025-01-14T15:19:19Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Discourse is an open-source discussion platform. In stable versions prior to 2.8.12 and beta or tests-passed versions prior to 2.9.0.beta.13, under certain conditions, a user can see notifications for topics they no longer have access to. If there is sensitive information in the topic title, it will therefore have been exposed. This issue is patched in stable version 2.8.12, beta version 2.9.0.beta13, and tests-passed version 2.9.0.beta13. There are no workarounds available.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-28T15:15:10.620",
    "last_modified": "2024-11-21T07:24:07.480",
    "fix_date": "2022-11-28T00:41:57Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/c6ee28ec756436cc9ce154dd2c8e4c441f92f693",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-354r-jpj5-53c2",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/c6ee28ec756436cc9ce154dd2c8e4c441f92f693",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-354r-jpj5-53c2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.171441",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}