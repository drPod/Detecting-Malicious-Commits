{
  "cve_id": "CVE-2022-41949",
  "github_data": {
    "repository": "dhis2/dhis2-core",
    "fix_commit": "dc3166c216da53e12a16bfdc51055823b838c1c3",
    "related_commits": [
      "dc3166c216da53e12a16bfdc51055823b838c1c3",
      "dc3166c216da53e12a16bfdc51055823b838c1c3"
    ],
    "patch_url": "https://github.com/dhis2/dhis2-core/commit/dc3166c216da53e12a16bfdc51055823b838c1c3.patch",
    "fix_commit_details": {
      "sha": "dc3166c216da53e12a16bfdc51055823b838c1c3",
      "commit_date": "2022-11-28T12:25:02Z",
      "author": {
        "login": "Philip-Larsen-Donnelly",
        "type": "User",
        "stats": {
          "total_commits": 62,
          "average_weekly_commits": 0.1415525114155251,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 46
        }
      },
      "commit_message": {
        "title": "Merge pull request #66 from netroms/final_sec_merge_2.36.12.1",
        "length": 110,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 893,
        "additions": 623,
        "deletions": 270
      },
      "files": [
        {
          "filename": ".github/workflows/analyse-pr.yml",
          "status": "removed",
          "additions": 0,
          "deletions": 63,
          "patch": "@@ -1,63 +0,0 @@\n-name: SonarQube analysis\n-\n-on:\n-  push:\n-    branches:\n-      - master\n-      - '2.3[1-9]'\n-  pull_request:\n-    branches:\n-      - master\n-      - '2.3[1-9]'\n-\n-jobs:\n-  cleanup-runs:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-      - uses: rokroskar/workflow-run-cleanup-action@035a48f84b47e111d72cf492a513179c92cd29ed\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        if: \"!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'\"\n-\n-  sonarqube:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-      - uses: actions/checkout@v2\n-        with:\n-          ref: ${{ github.event.pull_request.head.sha }}\n-          fetch-depth: 0\n-\n-      - name: Set up JDK 11\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 11\n-\n-      - name: Cache maven artifacts\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}\n-          restore-keys: ${{ runner.os }}-maven-\n-\n-      - name: Analyse PR\n-        env:\n-          BASE_BRANCH: ${{ github.base_ref }}\n-          BRANCH: ${{ github.ref }}\n-          PR: ${{ github.event.number }}\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n-        if: github.event_name == 'pull_request'\n-        run: |\n-          mvn -f dhis-2/pom.xml clean install -Psonarqube -Pjdk11\n-          mvn -f dhis-2/pom.xml sonar:sonar -Dsonar.internal.analysis.dbd=false -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }} -Dsonar.projectKey=dhis2_dhis2-core -Dsonar.coverage.jacoco.xmlReportPaths=$(find \"$(pwd)\" -path '*jacoco.xml' | sed 's/.*/&/' | tr '\\n' ',')\n-\n-      - name: Analyse long-living branch\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}\n-        if: github.event_name != 'pull_request'\n-        run: |\n-          mvn -f dhis-2/pom.xml clean install -Psonarqube -Pjdk11\n-          mvn -f dhis-2/pom.xml sonar:sonar -Dsonar.internal.analysis.dbd=false -Dsonar.branch.name=${GITHUB_REF#refs/heads/} -Dsonar.projectKey=dhis2_dhis2-core -Dsonar.coverage.jacoco.xmlReportPaths=$(find \"$(pwd)\" -path '*jacoco.xml' | sed 's/.*/&/' | tr '\\n' ',')"
        },
        {
          "filename": ".github/workflows/check-formatting.yml",
          "status": "removed",
          "additions": 0,
          "deletions": 26,
          "patch": "@@ -1,26 +0,0 @@\n-name: Check formatting\n-\n-on: [ pull_request ]\n-\n-jobs:\n-  check-formatting:\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v2\n-      - name: Set up JDK 11\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 11\n-\n-      - name: Cache maven artifacts\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}\n-          restore-keys: ${{ runner.os }}-maven-\n-\n-      - name: Check formatting in core\n-        run: mvn speedy-spotless:check -Pdefault -Pjdk11 --update-snapshots -q -f ./dhis-2/pom.xml\n-\n-      - name: Check formatting in web\n-        run: mvn speedy-spotless:check -Pdefault -Pjdk11 --update-snapshots -q -f ./dhis-2/dhis-web/pom.xml"
        },
        {
          "filename": ".github/workflows/codeql-analysis.yml",
          "status": "removed",
          "additions": 0,
          "deletions": 66,
          "patch": "@@ -1,66 +0,0 @@\n-# For most projects, this workflow file will not need changing; you simply need\n-# to commit it to your repository.\n-#\n-# You may wish to alter this file to override the set of languages analyzed,\n-# or to provide custom queries or build logic.\n-name: \"CodeQL\"\n-\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  schedule:\n-    - cron: '0 12 * * *'\n-\n-jobs:\n-  analyze:\n-    name: Analyze\n-    runs-on: ubuntu-latest\n-\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        # Override automatic language detection by changing the below list\n-        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']\n-        language: [ 'java' ]\n-        # Learn more...\n-        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection\n-\n-    steps:\n-      - name: Checkout repository\n-        uses: actions/checkout@v2\n-        with:\n-          # We must fetch at least the immediate parents so that if this is\n-          # a pull request then we can checkout the head.\n-          fetch-depth: 2\n-\n-      # If this run was triggered by a pull request event, then checkout\n-      # the head of the pull request instead of the merge commit.\n-      - run: git checkout HEAD^2\n-        if: ${{ github.event_name == 'pull_request' }}\n-\n-      - name: Cache maven artifacts\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}\n-          restore-keys: ${{ runner.os }}-maven-\n-\n-      - name: Setup-java\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 11\n-\n-      - name: Codeql-init\n-        uses: github/codeql-action/init@v1\n-        with:\n-          languages: java\n-          config-file: ./.github/codeql/codeql-config.yml\n-\n-      - name: Build core\n-        run: mvn clean install -f ./dhis-2/pom.xml -Pdev -Pjdk11 -DskipTests=true -Dmaven.javadoc.skip=true -B -V\n-      - name: Build web\n-        run: mvn clean install -f ./dhis-2/dhis-web/pom.xml -Pdev -Pjdk11 -DskipTests=true -Dmaven.javadoc.skip=true -B -V\n-\n-      - name: Perform CodeQL Analysis\n-        uses: github/codeql-action/analyze@v1"
        },
        {
          "filename": ".github/workflows/run-api-tests.yml",
          "status": "removed",
          "additions": 0,
          "deletions": 40,
          "patch": "@@ -1,40 +0,0 @@\n-name: Run api tests\n-\n-on:\n-  pull_request:\n-    types: [labeled, synchronize ]\n-jobs:\n-  api-test:\n-    env:\n-      CORE_IMAGE_NAME: \"dhis2/core:local\"\n-      TEST_IMAGE_NAME: \"dhis2/tests:local\"\n-    runs-on: ubuntu-latest\n-    if: contains(github.event.pull_request.labels.*.name, 'run-api-tests')\n-    steps:\n-      - uses: actions/checkout@v2\n-      - name: Set up JDK 11\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 11\n-      - name: Build core image\n-        run: |\n-          bash ./dhis-2/build-dev.sh\n-\n-      - name: Run tests\n-        run: |\n-          cd dhis-2/dhis-e2e-test\n-          IMAGE_NAME=$CORE_IMAGE_NAME docker-compose up -d\n-          docker build -t $TEST_IMAGE_NAME .\n-          IMAGE_NAME=$TEST_IMAGE_NAME docker-compose -f docker-compose.e2e.yml up --exit-code-from e2e-test\n-\n-      - name: Upload logs\n-        if: failure()\n-        run: |\n-          cd dhis-2/dhis-e2e-test\n-          docker-compose logs web > ~/logs.txt\n-\n-      - uses: actions/upload-artifact@v2\n-        if: failure()\n-        with:\n-          name: \"logs\"\n-          path: '~/logs.txt'"
        },
        {
          "filename": ".github/workflows/run-tests.yml",
          "status": "modified",
          "additions": 39,
          "deletions": 34,
          "patch": "@@ -1,53 +1,58 @@\n name: Test\n-\n-on: [ pull_request ]\n-\n+env:\n+  # This is to make sure Maven don't timeout fetching dependencies. See: https://github.com/actions/virtual-environments/issues/1499\n+  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=125\n+on:\n+  push:\n+    branches:\n+      - master\n+  pull_request:\n+concurrency:\n+  group: ${{ github.workflow}}-${{ github.ref }}\n+  cancel-in-progress: true\n jobs:\n-  cleanup-runs:\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: rokroskar/workflow-run-cleanup-action@035a48f84b47e111d72cf492a513179c92cd29ed\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        if: \"!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'\"\n-\n   unit-test:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: netroms/checkout@main\n       - name: Set up JDK 11\n-        uses: actions/setup-java@v1\n+        uses: netroms/setup-java@main\n         with:\n           java-version: 11\n-\n-      - name: Cache maven artifacts\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}\n-          restore-keys: ${{ runner.os }}-maven-\n-\n-      - name: Test core\n-        run: mvn clean install -Pdefault -Pjdk11 --update-snapshots -f ./dhis-2/pom.xml\n+          distribution: temurin\n+          cache: maven\n+      - name: Test core # NOTE: dhis-2/pom.xml needs to be installed as built artifacts are needed by dhis-web\n+        run: mvn clean install --threads 2C --batch-mode --no-transfer-progress --update-snapshots -f ./dhis-2/pom.xml\n+        timeout-minutes: 30\n \n       - name: Test dhis-web\n-        run: mvn clean install -Pdefault -Pjdk11 --update-snapshots -f ./dhis-2/dhis-web/pom.xml\n+        run: mvn test --threads 2C --batch-mode --no-transfer-progress --update-snapshots -f ./dhis-2/dhis-web/pom.xml\n+        timeout-minutes: 30\n \n   integration-test:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v2\n+      - uses: netroms/checkout@main\n       - name: Set up JDK 11\n-        uses: actions/setup-java@v1\n+        uses: netroms/setup-java@main\n         with:\n           java-version: 11\n+          distribution: temurin\n+          cache: maven\n+      - name: Run integration tests\n+        run: mvn clean verify --threads 2C --batch-mode --no-transfer-progress -Pintegration -f ./dhis-2/pom.xml\n+        timeout-minutes: 30\n \n-      - name: Cache maven artifacts\n-        uses: actions/cache@v2\n+  integration-h2-test:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: netroms/checkout@main\n+      - name: Set up JDK 11\n+        uses: netroms/setup-java@main\n         with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}\n-          restore-keys: ${{ runner.os }}-maven-\n-\n-      - name: Run integration tests\n-        run: mvn clean install -Pintegration -Pjdk11 -f ./dhis-2/pom.xml\n+          java-version: 11\n+          distribution: temurin\n+          cache: maven\n+      - name: Run integration h2 tests\n+        run: mvn clean verify --threads 2C --batch-mode --no-transfer-progress -PintegrationH2 -f ./dhis-2/pom.xml\n+        timeout-minutes: 30\n\\ No newline at end of file"
        },
        {
          "filename": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/common/CodeGenerator.java",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -93,6 +93,22 @@ public static String generateCode( int codeSize )\n         return new String( randomChars );\n     }\n \n+    /**\n+     * Generates a random token encoded in Base64\n+     *\n+     * @param lengthInBytes length in bytes of the token\n+     * @return a Base64 encoded string of the token\n+     */\n+    public static String getRandomNonSecureToken( int lengthInBytes )\n+    {\n+        ThreadLocalRandom random = ThreadLocalRandom.current();\n+        byte[] tokenBytes = new byte[lengthInBytes];\n+        random.nextBytes( tokenBytes );\n+\n+        Base64.Encoder encoder = Base64.getUrlEncoder().withoutPadding();\n+        return encoder.encodeToString( tokenBytes );\n+    }\n+\n     /**\n      * Generates a cryptographically strong random token encoded in Base64\n      *"
        },
        {
          "filename": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/feedback/ErrorCode.java",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -121,6 +121,7 @@ public enum ErrorCode\n     E3016( \"Data sharing is not enabled for this object\" ),\n     E3017( \"Invalid user group access string: `{0}`\" ),\n     E3018( \"Invalid user access string: `{0}`\" ),\n+    E3028( \"User `{0}` does not have access to user role\" ),\n \n     /* Metadata Validation */\n     E4000( \"Missing required property `{0}`.\" ),"
        },
        {
          "filename": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/fileresource/FileResourceContentStore.java",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -119,4 +119,14 @@ public interface FileResourceContentStore\n     void copyContent( String key, OutputStream output )\n         throws IOException,\n         NoSuchElementException;\n+\n+    /**\n+     * Copies the content of the resource stored under key to the byte array.\n+     *\n+     * @param key the key used to store a resource\n+     * @return byte array of the content\n+     */\n+    byte[] copyContent( String key )\n+        throws IOException,\n+        NoSuchElementException;\n }"
        },
        {
          "filename": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/fileresource/FileResourceService.java",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -69,6 +69,18 @@ void copyFileResourceContent( FileResource fileResource, OutputStream outputStre\n         throws IOException,\n         NoSuchElementException;\n \n+    /**\n+     * Copy fileResource content to a byte array\n+     *\n+     * @param fileResource\n+     * @return a byte array of the content\n+     * @throws IOException\n+     * @throws NoSuchElementException\n+     */\n+    byte[] copyFileResourceContent( FileResource fileResource )\n+        throws IOException,\n+        NoSuchElementException;\n+\n     boolean fileResourceExists( String uid );\n \n     void updateFileResource( FileResource fileResource );"
        },
        {
          "filename": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/security/utils/CspUtils.java",
          "status": "added",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2004-2022, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package org.hisp.dhis.security.utils;\n+\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+public class CspUtils\n+{\n+    public static final String DEFAULT_HEADER_VALUE = \"script-src 'none'; \";\n+\n+    public static final Pattern p1 = Pattern.compile( \"^.+/events/files$\" );\n+\n+    public static final Pattern p2 = Pattern.compile( \"^.+trackedEntityInstance/[a-zA-Z\\\\d]+/[a-zA-Z\\\\d]+/image$\" );\n+\n+    public static final Pattern p3 = Pattern.compile( \"^.+/dataValues/files$\" );\n+\n+    public static final Pattern p4 = Pattern.compile(\n+        \"^.+messageConversations/[a-zA-Z\\\\d]+/[a-zA-Z\\\\d]+/attachments/[a-zA-Z\\\\d]+$\" );\n+\n+    public static final Pattern p5 = Pattern.compile( \"^.+fileResources/[a-zA-Z\\\\d]+/data$\" );\n+\n+    public static final Pattern p6 = Pattern.compile( \"^.+audits/files/[a-zA-Z\\\\d]+$\" );\n+\n+    public static final Pattern p7 = Pattern.compile( \"^.+externalFileResources/[a-zA-Z\\\\d]+$\" );\n+\n+    public static final List<Pattern> DEFAULT_FILTERED_URL_PATTERNS = ImmutableList.of( p1, p2, p3, p4, p5, p6, p7 );\n+}"
        },
        {
          "filename": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/fileresource/DefaultFileResourceService.java",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -223,6 +223,15 @@ public void copyFileResourceContent( FileResource fileResource, OutputStream out\n         fileResourceContentStore.copyContent( fileResource.getStorageKey(), outputStream );\n     }\n \n+    @Override\n+    @Transactional( readOnly = true )\n+    public byte[] copyFileResourceContent( FileResource fileResource )\n+        throws IOException,\n+        NoSuchElementException\n+    {\n+        return fileResourceContentStore.copyContent( fileResource.getStorageKey() );\n+    }\n+\n     @Override\n     @Transactional\n     public boolean fileResourceExists( String uid )"
        },
        {
          "filename": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/fileresource/JCloudsFileResourceContentStore.java",
          "status": "modified",
          "additions": 17,
          "deletions": 3,
          "patch": "@@ -373,14 +373,28 @@ public void copyContent( String key, OutputStream output )\n             throw new NoSuchElementException( \"key '\" + key + \"' not found.\" );\n         }\n \n-        Blob blob = getBlob( key );\n-\n-        try ( InputStream in = blob.getPayload().openStream() )\n+        try ( InputStream in = getBlob( key ).getPayload().openStream() )\n         {\n             IOUtils.copy( in, output );\n         }\n     }\n \n+    @Override\n+    public byte[] copyContent( String key )\n+        throws IOException,\n+        NoSuchElementException\n+    {\n+        if ( !blobExists( key ) )\n+        {\n+            throw new NoSuchElementException( \"key '\" + key + \"' not found.\" );\n+        }\n+\n+        try ( InputStream in = getBlob( key ).getPayload().openStream() )\n+        {\n+            return IOUtils.toByteArray( in );\n+        }\n+    }\n+\n     // -------------------------------------------------------------------------\n     // Supportive methods\n     // -------------------------------------------------------------------------"
        },
        {
          "filename": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/DefaultUserService.java",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -736,7 +736,11 @@ public List<ErrorReport> validateUser( User user, User currentUser )\n             .getUserAuthorityGroups().stream().map( BaseIdentifiableObject::getUid ).collect( Collectors.toList() ) );\n \n         roles.forEach( ur -> {\n-            if ( !currentUser.getUserCredentials().canIssueUserRole( ur, canGrantOwnUserAuthorityGroups ) )\n+            if ( ur == null )\n+            {\n+                errors.add( new ErrorReport( UserAuthorityGroup.class, ErrorCode.E3028, user.getUsername() ) );\n+            }\n+            else if ( !currentUser.getUserCredentials().canIssueUserRole( ur, canGrantOwnUserAuthorityGroups ) )\n             {\n                 errors.add( new ErrorReport( UserAuthorityGroup.class, ErrorCode.E3003, currentUser.getUsername(),\n                     ur.getName() ) );"
        },
        {
          "filename": "dhis-2/dhis-support/dhis-support-external/src/main/java/org/hisp/dhis/external/conf/ConfigurationKey.java",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -32,6 +32,8 @@\n import java.util.Arrays;\n import java.util.Optional;\n \n+import org.hisp.dhis.security.utils.CspUtils;\n+\n /**\n  * @author Lars Helge Overland\n  */\n@@ -151,7 +153,22 @@ public enum ConfigurationKey\n     AUDIT_ENABLED( \"system.audit.enabled\", Constants.TRUE, false ),\n     TRACKER_IMPORT_PREHEAT_CACHE_ENABLED( \"tracker.import.preheat.cache.enabled\", Constants.ON, false ),\n     ENABLE_OAUTH2_AUTHORIZATION_SERVER( \"oauth2.authorization.server.enabled\", Constants.ON, false ),\n-    ENABLE_JWT_OIDC_TOKEN_AUTHENTICATION( \"oidc.jwt.token.authentication.enabled\", Constants.OFF, false );\n+    ENABLE_JWT_OIDC_TOKEN_AUTHENTICATION( \"oidc.jwt.token.authentication.enabled\", Constants.OFF, false ),\n+\n+    /**\n+     * Content Security Policy feature. Enable or disable the feature.\n+     */\n+    CSP_ENABLED( \"csp.enabled\", Constants.ON, true ),\n+\n+    /**\n+     * CSP upgrade insecure connections. Enable or disable the feature.\n+     */\n+    CSP_UPGRADE_INSECURE_ENABLED( \"csp.upgrade.insecure.enabled\", Constants.OFF, true ),\n+\n+    /**\n+     * CSP default header value/string. Enable or disable the feature.\n+     */\n+    CSP_HEADER_VALUE( \"csp.header.value\", CspUtils.DEFAULT_HEADER_VALUE, false );\n \n     private final String key;\n "
        },
        {
          "filename": "dhis-2/dhis-web-api-test/src/test/java/org/hisp/dhis/webapi/controller/FileResourceControllerMockTest.java",
          "status": "added",
          "additions": 102,
          "deletions": 0,
          "patch": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2004-2021, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package org.hisp.dhis.webapi.controller;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+\n+import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n+import org.hisp.dhis.fileresource.FileResource;\n+import org.hisp.dhis.fileresource.FileResourceDomain;\n+import org.hisp.dhis.fileresource.FileResourceService;\n+import org.hisp.dhis.user.CurrentUserService;\n+import org.hisp.dhis.webapi.utils.FileResourceUtils;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+\n+public class FileResourceControllerMockTest\n+{\n+    private FileResourceController controller;\n+\n+    @Mock\n+    private FileResourceService fileResourceService;\n+\n+    @Mock\n+    private CurrentUserService currentUserService;\n+\n+    @Mock\n+    private FileResourceUtils fileResourceUtils;\n+\n+    @Mock\n+    private DhisConfigurationProvider dhisConfig;\n+\n+    @Rule\n+    public MockitoRule mockitoRule = MockitoJUnit.rule();\n+\n+    @Test\n+    public void testGetOrgUnitImage()\n+        throws WebMessageException,\n+        IOException\n+    {\n+        controller = new FileResourceController( currentUserService, fileResourceService, fileResourceUtils,\n+            dhisConfig );\n+        FileResource fileResource = new FileResource();\n+        fileResource.setDomain( FileResourceDomain.ORG_UNIT );\n+        fileResource.setUid( \"id\" );\n+\n+        when( fileResourceService.getFileResource( \"id\" ) ).thenReturn( fileResource );\n+\n+        controller.getFileResourceData( \"id\", new MockHttpServletResponse(), null );\n+\n+        verify( fileResourceService ).copyFileResourceContent( any(), any() );\n+    }\n+\n+    @Test( expected = WebMessageException.class )\n+    public void testGetDataValue()\n+        throws WebMessageException,\n+        IOException\n+    {\n+        controller = new FileResourceController( currentUserService, fileResourceService, fileResourceUtils,\n+            dhisConfig );\n+        FileResource fileResource = new FileResource();\n+        fileResource.setDomain( FileResourceDomain.DATA_VALUE );\n+        fileResource.setUid( \"id\" );\n+\n+        when( fileResourceService.getFileResource( \"id\" ) ).thenReturn( fileResource );\n+\n+        controller.getFileResourceData( \"id\", new MockHttpServletResponse(), null );\n+    }\n+}"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/AuditController.java",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -57,6 +57,8 @@\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n import org.hisp.dhis.dxf2.webmessage.responses.FileResourceWebMessageResponse;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.fieldfilter.FieldFilterParams;\n import org.hisp.dhis.fieldfilter.FieldFilterService;\n import org.hisp.dhis.fileresource.FileResource;\n@@ -82,6 +84,7 @@\n import org.hisp.dhis.trackedentitydatavalue.TrackedEntityDataValueAuditService;\n import org.hisp.dhis.webapi.mvc.annotation.ApiVersion;\n import org.hisp.dhis.webapi.service.ContextService;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.springframework.http.HttpHeaders;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.PathVariable;\n@@ -120,14 +123,17 @@ public class AuditController\n \n     private final FileResourceService fileResourceService;\n \n+    private final DhisConfigurationProvider dhisConfig;\n+\n     public AuditController( IdentifiableObjectManager manager, ProgramStageInstanceService programStageInstanceService,\n         DataValueAuditService dataValueAuditService,\n         TrackedEntityDataValueAuditService trackedEntityDataValueAuditService,\n         TrackedEntityAttributeValueAuditService trackedEntityAttributeValueAuditService,\n         DataApprovalAuditService dataApprovalAuditService,\n         TrackedEntityInstanceAuditService trackedEntityInstanceAuditService,\n         FieldFilterService fieldFilterService,\n-        ContextService contextService, FileResourceService fileResourceService )\n+        ContextService contextService, FileResourceService fileResourceService,\n+        DhisConfigurationProvider dhisConfig )\n     {\n         checkNotNull( manager );\n         checkNotNull( programStageInstanceService );\n@@ -138,6 +144,7 @@ public AuditController( IdentifiableObjectManager manager, ProgramStageInstanceS\n         checkNotNull( fieldFilterService );\n         checkNotNull( contextService );\n         checkNotNull( fileResourceService );\n+        checkNotNull( dhisConfig );\n \n         this.manager = manager;\n         this.programStageInstanceService = programStageInstanceService;\n@@ -149,6 +156,7 @@ public AuditController( IdentifiableObjectManager manager, ProgramStageInstanceS\n         this.fieldFilterService = fieldFilterService;\n         this.contextService = contextService;\n         this.fileResourceService = fileResourceService;\n+        this.dhisConfig = dhisConfig;\n     }\n \n     /**\n@@ -183,6 +191,7 @@ public void getFileAudit( @PathVariable String uid, HttpServletResponse response\n         response.setContentType( fileResource.getContentType() );\n         response.setContentLength( new Long( fileResource.getContentLength() ).intValue() );\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n \n         try\n         {"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/DocumentController.java",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -39,12 +39,15 @@\n import org.hisp.dhis.document.Document;\n import org.hisp.dhis.document.DocumentService;\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n import org.hisp.dhis.external.location.LocationManager;\n import org.hisp.dhis.fileresource.FileResource;\n import org.hisp.dhis.fileresource.FileResourceService;\n import org.hisp.dhis.schema.descriptors.DocumentSchemaDescriptor;\n import org.hisp.dhis.webapi.utils.ContextUtils;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpHeaders;\n import org.springframework.stereotype.Controller;\n@@ -75,6 +78,9 @@ public class DocumentController\n     @Autowired\n     private ContextUtils contextUtils;\n \n+    @Autowired\n+    private DhisConfigurationProvider dhisConfig;\n+\n     @RequestMapping( value = \"/{uid}/data\", method = RequestMethod.GET )\n     public void getDocumentContent( @PathVariable( \"uid\" ) String uid, HttpServletResponse response )\n         throws Exception\n@@ -97,6 +103,7 @@ else if ( document.getFileResource() != null )\n             response.setContentType( fileResource.getContentType() );\n             response.setContentLength( new Long( fileResource.getContentLength() ).intValue() );\n             response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+            HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n \n             try\n             {"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/ExternalFileResourceController.java",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -37,13 +37,16 @@\n import org.hisp.dhis.common.DhisApiVersion;\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.feedback.Status;\n import org.hisp.dhis.fileresource.ExternalFileResource;\n import org.hisp.dhis.fileresource.ExternalFileResourceService;\n import org.hisp.dhis.fileresource.FileResource;\n import org.hisp.dhis.fileresource.FileResourceService;\n import org.hisp.dhis.schema.descriptors.ExternalFileResourceSchemaDescriptor;\n import org.hisp.dhis.webapi.mvc.annotation.ApiVersion;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpHeaders;\n import org.springframework.http.HttpStatus;\n@@ -66,6 +69,9 @@ public class ExternalFileResourceController\n     @Autowired\n     private FileResourceService fileResourceService;\n \n+    @Autowired\n+    private DhisConfigurationProvider dhisConfig;\n+\n     /**\n      * Returns a file associated with the externalFileResource resolved from the\n      * accessToken.\n@@ -103,6 +109,8 @@ public void getExternalFileResource( @PathVariable String accessToken,\n         response.setContentType( fileResource.getContentType() );\n         response.setContentLength( new Long( fileResource.getContentLength() ).intValue() );\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n         setNoStore( response );\n \n         try"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/FileResourceController.java",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -38,6 +38,8 @@\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n import org.hisp.dhis.dxf2.webmessage.responses.FileResourceWebMessageResponse;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.feedback.Status;\n import org.hisp.dhis.fileresource.FileResource;\n import org.hisp.dhis.fileresource.FileResourceDomain;\n@@ -48,6 +50,7 @@\n import org.hisp.dhis.user.User;\n import org.hisp.dhis.webapi.mvc.annotation.ApiVersion;\n import org.hisp.dhis.webapi.utils.FileResourceUtils;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpHeaders;\n import org.springframework.http.HttpStatus;\n@@ -79,6 +82,9 @@ public class FileResourceController\n     @Autowired\n     private FileResourceUtils fileResourceUtils;\n \n+    @Autowired\n+    private DhisConfigurationProvider dhisConfig;\n+\n     // -------------------------------------------------------------------------\n     // Controller methods\n     // -------------------------------------------------------------------------\n@@ -127,6 +133,7 @@ public void getFileResourceData( @PathVariable String uid, HttpServletResponse r\n         response.setHeader( HttpHeaders.CONTENT_LENGTH,\n             String.valueOf( fileResourceService.getFileResourceContentLength( fileResource ) ) );\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n \n         try\n         {"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/MessageConversationController.java",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -44,6 +44,7 @@\n import org.hisp.dhis.configuration.ConfigurationService;\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.fieldfilter.Defaults;\n import org.hisp.dhis.fileresource.FileResource;\n import org.hisp.dhis.fileresource.FileResourceDomain;\n@@ -122,6 +123,9 @@ public class MessageConversationController\n     @Autowired\n     private FileResourceService fileResourceService;\n \n+    @Autowired\n+    private DhisConfigurationProvider dhisConfig;\n+\n     @Override\n     protected void postProcessResponseEntity( org.hisp.dhis.message.MessageConversation entity, WebOptions options,\n         Map<String, String> parameters )\n@@ -940,7 +944,7 @@ public void getAttachment(\n             throw new WebMessageException( WebMessageUtils.conflict( \"Invalid messageattachment.\" ) );\n         }\n \n-        fileResourceUtils.configureFileResourceResponse( response, fr );\n+        fileResourceUtils.configureFileResourceResponse( response, fr, dhisConfig );\n     }\n \n     // --------------------------------------------------------------------------"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/SvgConversionController.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -35,6 +35,7 @@\n \n import javax.servlet.http.HttpServletResponse;\n \n+import org.apache.batik.transcoder.SVGAbstractTranscoder;\n import org.apache.batik.transcoder.TranscoderException;\n import org.apache.batik.transcoder.TranscoderInput;\n import org.apache.batik.transcoder.TranscoderOutput;\n@@ -94,7 +95,7 @@ private void convertToPng( String svg, OutputStream out )\n         svg = replaceUnsafeSvgText( svg );\n \n         PNGTranscoder transcoder = new PNGTranscoder();\n-\n+        transcoder.addTranscodingHint( SVGAbstractTranscoder.KEY_ALLOW_EXTERNAL_RESOURCES, false );\n         transcoder.addTranscodingHint( ImageTranscoder.KEY_BACKGROUND_COLOR, Color.WHITE );\n \n         TranscoderInput input = new TranscoderInput( new StringReader( svg ) );"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/datavalue/DataValueController.java",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -52,6 +52,8 @@\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n import org.hisp.dhis.dxf2.webmessage.responses.FileResourceWebMessageResponse;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.feedback.ErrorCode;\n import org.hisp.dhis.feedback.Status;\n import org.hisp.dhis.fileresource.FileResource;\n@@ -67,6 +69,7 @@\n import org.hisp.dhis.user.User;\n import org.hisp.dhis.webapi.mvc.annotation.ApiVersion;\n import org.hisp.dhis.webapi.utils.FileResourceUtils;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.hisp.dhis.webapi.webdomain.DataValueFollowUpRequest;\n import org.jclouds.rest.AuthorizationException;\n import org.springframework.http.HttpHeaders;\n@@ -113,10 +116,12 @@ public class DataValueController\n \n     private final FileResourceUtils fileResourceUtils;\n \n+    private final DhisConfigurationProvider dhisConfig;\n+\n     public DataValueController( final CurrentUserService currentUserService, final DataValueService dataValueService,\n         final SystemSettingManager systemSettingManager, final InputUtils inputUtils,\n         final FileResourceService fileResourceService, final DataValidator dataValueValidation,\n-        final FileResourceUtils fileResourceUtils )\n+        final FileResourceUtils fileResourceUtils, final DhisConfigurationProvider dhisConfig )\n     {\n         checkNotNull( currentUserService );\n         checkNotNull( dataValueService );\n@@ -125,6 +130,7 @@ public DataValueController( final CurrentUserService currentUserService, final D\n         checkNotNull( fileResourceService );\n         checkNotNull( dataValueValidation );\n         checkNotNull( fileResourceUtils );\n+        checkNotNull( dhisConfig );\n \n         this.currentUserService = currentUserService;\n         this.dataValueService = dataValueService;\n@@ -133,6 +139,7 @@ public DataValueController( final CurrentUserService currentUserService, final D\n         this.fileResourceService = fileResourceService;\n         this.dataValueValidation = dataValueValidation;\n         this.fileResourceUtils = fileResourceUtils;\n+        this.dhisConfig = dhisConfig;\n     }\n \n     // ---------------------------------------------------------------------\n@@ -616,7 +623,10 @@ public void getDataValueFile(\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n         response.setHeader( HttpHeaders.CONTENT_LENGTH,\n             String.valueOf( fileResourceService.getFileResourceContentLength( fileResource ) ) );\n+\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n         setNoStore( response );\n+\n         try\n         {\n             fileResourceService.copyFileResourceContent( fileResource, response.getOutputStream() );"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/event/EventController.java",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -83,6 +83,8 @@\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n import org.hisp.dhis.dxf2.webmessage.responses.FileResourceWebMessageResponse;\n import org.hisp.dhis.event.EventStatus;\n+import org.hisp.dhis.external.conf.ConfigurationKey;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.fieldfilter.FieldFilterParams;\n import org.hisp.dhis.fieldfilter.FieldFilterService;\n import org.hisp.dhis.fileresource.FileResource;\n@@ -114,6 +116,7 @@\n import org.hisp.dhis.webapi.service.WebMessageService;\n import org.hisp.dhis.webapi.utils.ContextUtils;\n import org.hisp.dhis.webapi.utils.FileResourceUtils;\n+import org.hisp.dhis.webapi.utils.HeaderUtils;\n import org.hisp.dhis.webapi.webdomain.WebOptions;\n import org.locationtech.jts.io.ParseException;\n import org.springframework.http.HttpHeaders;\n@@ -179,13 +182,15 @@ public class EventController\n \n     private final ContextUtils contextUtils;\n \n+    private final DhisConfigurationProvider dhisConfig;\n+\n     public EventController( CurrentUserService currentUserService, SchedulingManager schedulingManager,\n         EventService eventService, CsvEventService csvEventService, EventRowService eventRowService,\n         DataElementService dataElementService, WebMessageService webMessageService, InputUtils inputUtils,\n         RenderService renderService, ProgramStageInstanceService programStageInstanceService,\n         FileResourceService fileResourceService, FieldFilterService fieldFilterService, ContextService contextService,\n         SchemaService schemaService, TrackedEntityInstanceService entityInstanceService, ContextUtils contextUtils,\n-        RequestToSearchParamsMapper requestToSearchParamsMapper )\n+        RequestToSearchParamsMapper requestToSearchParamsMapper, DhisConfigurationProvider dhisConfig )\n     {\n         this.currentUserService = currentUserService;\n         this.schedulingManager = schedulingManager;\n@@ -204,6 +209,7 @@ public EventController( CurrentUserService currentUserService, SchedulingManager\n         this.entityInstanceService = entityInstanceService;\n         this.contextUtils = contextUtils;\n         this.requestToSearchParamsMapper = requestToSearchParamsMapper;\n+        this.dhisConfig = dhisConfig;\n     }\n \n     private Schema schema;\n@@ -796,6 +802,7 @@ public void getEventDataValueFile( @RequestParam String eventUid, @RequestParam\n         response.setContentType( fileResource.getContentType() );\n         response.setContentLength( new Long( fileResource.getContentLength() ).intValue() );\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n \n         try\n         {"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/filter/CspFilter.java",
          "status": "added",
          "additions": 128,
          "deletions": 0,
          "patch": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright (c) 2004-2021, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package org.hisp.dhis.webapi.filter;\n+\n+import static org.hisp.dhis.external.conf.ConfigurationKey.CSP_ENABLED;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.http.HttpServletResponseWrapper;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n+import org.hisp.dhis.security.oidc.DhisOidcProviderRepository;\n+import org.hisp.dhis.security.utils.CspUtils;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+\n+/**\n+ * @author Morten Svan\u00e6s <msvanaes@dhis2.org>\n+ */\n+@Slf4j\n+public class CspFilter\n+    extends OncePerRequestFilter\n+{\n+    public static final String CSP_REQUEST_NONCE_ATTR_NAME = \"cspRequestNonce\";\n+\n+    public static final String CONTENT_SECURITY_POLICY_HEADER_NAME = \"Content-Security-Policy\";\n+\n+    private final boolean enabled;\n+\n+    private final List<Pattern> filteredURLs;\n+\n+    public CspFilter( DhisConfigurationProvider dhisConfig,\n+        DhisOidcProviderRepository dhisOidcProviderRepository )\n+    {\n+        this.enabled = dhisConfig.isEnabled( CSP_ENABLED );\n+        this.filteredURLs = CspUtils.DEFAULT_FILTERED_URL_PATTERNS;\n+    }\n+\n+    @Override\n+    protected void doFilterInternal( HttpServletRequest req, HttpServletResponse res, FilterChain chain )\n+        throws ServletException,\n+        IOException\n+    {\n+        if ( enabled && shouldRemoveCSPHeaders( req.getRequestURL().toString() ) )\n+        {\n+            // Remove the CSP headers that are added in\n+            // DhisWebApiWebSecurityConfig#setHttpHeaders()\n+            // Unless they match our patterns.\n+            chain.doFilter( req,\n+                new RemoveCspHeaderResponseWrapper( res ) );\n+        }\n+        else\n+        {\n+            chain.doFilter( req, res );\n+        }\n+    }\n+\n+    // Returns false if URI matches one of the regexp patterns in the list\n+    private boolean shouldRemoveCSPHeaders( String requestURI )\n+    {\n+        for ( Pattern pattern : filteredURLs )\n+        {\n+            if ( pattern.matcher( requestURI ).matches() )\n+            {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static class RemoveCspHeaderResponseWrapper extends HttpServletResponseWrapper\n+    {\n+        public RemoveCspHeaderResponseWrapper( HttpServletResponse res )\n+        {\n+            super( res );\n+        }\n+\n+        @Override\n+        public void setHeader( String name, String value )\n+        {\n+            if ( !name.equals( CONTENT_SECURITY_POLICY_HEADER_NAME ) )\n+            {\n+                super.setHeader( name, value );\n+            }\n+        }\n+\n+        @Override\n+        public void addHeader( String name, String value )\n+        {\n+            if ( !name.equals( CONTENT_SECURITY_POLICY_HEADER_NAME ) )\n+            {\n+                super.addHeader( name, value );\n+            }\n+        }\n+    }\n+}"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/security/config/DhisWebApiWebSecurityConfig.java",
          "status": "modified",
          "additions": 33,
          "deletions": 5,
          "patch": "@@ -27,6 +27,8 @@\n  */\n package org.hisp.dhis.webapi.security.config;\n \n+import static org.hisp.dhis.external.conf.ConfigurationKey.CSP_ENABLED;\n+\n import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n@@ -45,6 +47,7 @@\n import org.hisp.dhis.security.oidc.OIDCLoginEnabledCondition;\n import org.hisp.dhis.security.spring2fa.TwoFactorAuthenticationProvider;\n import org.hisp.dhis.webapi.filter.CorsFilter;\n+import org.hisp.dhis.webapi.filter.CspFilter;\n import org.hisp.dhis.webapi.filter.CustomAuthenticationFilter;\n import org.hisp.dhis.webapi.oprovider.DhisOauthAuthenticationProvider;\n import org.hisp.dhis.webapi.security.DHIS2BasicAuthenticationEntryPoint;\n@@ -98,6 +101,7 @@\n import org.springframework.security.web.access.expression.WebExpressionVoter;\n import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n+import org.springframework.security.web.header.HeaderWriterFilter;\n \n import com.google.common.collect.ImmutableList;\n \n@@ -141,6 +145,9 @@ public static void setApiContextPath( String apiContextPath )\n     @Conditional( value = OAuth2AuthorizationServerEnabledCondition.class )\n     public class OAuth2SecurityConfig extends WebSecurityConfigurerAdapter implements AuthorizationServerConfigurer\n     {\n+        @Autowired\n+        private DhisConfigurationProvider dhisConfig;\n+\n         @Autowired\n         private TwoFactorAuthenticationProvider twoFactorAuthenticationProvider;\n \n@@ -184,7 +191,7 @@ protected void configure( HttpSecurity http )\n \n             http.apply( new AuthorizationServerAuthenticationManagerConfigurer() );\n \n-            setHttpHeaders( http );\n+            setHttpHeaders( http, dhisConfig );\n         }\n \n         private class AuthorizationServerAuthenticationManagerConfigurer\n@@ -268,6 +275,9 @@ public DefaultTokenServices tokenServices()\n     @Conditional( value = OIDCLoginEnabledCondition.class )\n     public static class OidcSecurityConfig extends WebSecurityConfigurerAdapter\n     {\n+        @Autowired\n+        private DhisConfigurationProvider dhisConfig;\n+\n         @Autowired\n         private DhisOidcProviderRepository dhisOidcProviderRepository;\n \n@@ -307,7 +317,7 @@ protected void configure( HttpSecurity http )\n \n                 .csrf().disable();\n \n-            setHttpHeaders( http );\n+            setHttpHeaders( http, dhisConfig );\n         }\n     }\n \n@@ -321,6 +331,9 @@ public static class ApiWebSecurityConfigurationAdapter extends WebSecurityConfig\n         @Autowired\n         private DhisConfigurationProvider dhisConfig;\n \n+        @Autowired\n+        private DhisOidcProviderRepository dhisOidcProviderRepository;\n+\n         @Autowired\n         @Qualifier( \"defaultTokenService\" )\n         private ResourceServerTokenServices tokenServices;\n@@ -438,6 +451,8 @@ protected void configure( HttpSecurity http )\n                 .authenticationEntryPoint( basicAuthenticationEntryPoint() )\n                 .and().csrf().disable();\n \n+            configureCspFilter( http, dhisConfig, dhisOidcProviderRepository );\n+\n             if ( dhisConfig.isEnabled( ConfigurationKey.ENABLE_OAUTH2_AUTHORIZATION_SERVER ) )\n             {\n                 http.exceptionHandling().accessDeniedHandler( new OAuth2AccessDeniedHandler() );\n@@ -449,7 +464,14 @@ protected void configure( HttpSecurity http )\n \n             configureOAuth2TokenFilter( http );\n \n-            setHttpHeaders( http );\n+            setHttpHeaders( http, dhisConfig );\n+        }\n+\n+        private void configureCspFilter( HttpSecurity http, DhisConfigurationProvider dhisConfig,\n+            DhisOidcProviderRepository dhisOidcProviderRepository )\n+        {\n+            http.addFilterBefore( new CspFilter( dhisConfig, dhisOidcProviderRepository ),\n+                HeaderWriterFilter.class );\n         }\n \n         private void configureOAuth2TokenFilter( HttpSecurity http )\n@@ -523,11 +545,12 @@ public DHIS2BasicAuthenticationEntryPoint basicAuthenticationEntryPoint()\n     /**\n      * Customizes various \"global\" security related headers.\n      *\n-     * @param http http config\n+     * @param http http security config builder\n+     * @param dhisConfig DHIS2 configuration provider\n      *\n      * @throws Exception\n      */\n-    public static void setHttpHeaders( HttpSecurity http )\n+    public static void setHttpHeaders( HttpSecurity http, DhisConfigurationProvider dhisConfig )\n         throws Exception\n     {\n         http\n@@ -540,5 +563,10 @@ public static void setHttpHeaders( HttpSecurity http )\n             .httpStrictTransportSecurity()\n             .and()\n             .frameOptions().sameOrigin();\n+\n+        if ( dhisConfig.isEnabled( CSP_ENABLED ) )\n+        {\n+            http.headers().contentSecurityPolicy( dhisConfig.getProperty( ConfigurationKey.CSP_HEADER_VALUE ) );\n+        }\n     }\n }"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/utils/FileResourceUtils.java",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -27,6 +27,10 @@\n  */\n package org.hisp.dhis.webapi.utils;\n \n+import static org.hisp.dhis.dxf2.webmessage.WebMessageUtils.conflict;\n+import static org.hisp.dhis.dxf2.webmessage.WebMessageUtils.error;\n+import static org.hisp.dhis.external.conf.ConfigurationKey.CSP_HEADER_VALUE;\n+\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -41,6 +45,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.hisp.dhis.dxf2.webmessage.WebMessageException;\n import org.hisp.dhis.dxf2.webmessage.WebMessageUtils;\n+import org.hisp.dhis.external.conf.DhisConfigurationProvider;\n import org.hisp.dhis.fileresource.FileResource;\n import org.hisp.dhis.fileresource.FileResourceDomain;\n import org.hisp.dhis.fileresource.FileResourceService;\n@@ -134,12 +139,14 @@ public static void setImageFileDimensions( FileResource fileResource, ImageFileD\n         }\n     }\n \n-    public void configureFileResourceResponse( HttpServletResponse response, FileResource fileResource )\n+    public void configureFileResourceResponse( HttpServletResponse response, FileResource fileResource,\n+        DhisConfigurationProvider dhisConfig )\n         throws WebMessageException\n     {\n         response.setContentType( fileResource.getContentType() );\n         response.setContentLength( new Long( fileResource.getContentLength() ).intValue() );\n         response.setHeader( HttpHeaders.CONTENT_DISPOSITION, \"filename=\" + fileResource.getName() );\n+        HeaderUtils.setSecurityHeaders( response, dhisConfig.getProperty( CSP_HEADER_VALUE ) );\n \n         try\n         {"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/utils/HeaderUtils.java",
          "status": "added",
          "additions": 41,
          "deletions": 0,
          "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2004-2022, University of Oslo\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n+ * Neither the name of the HISP project nor the names of its contributors may\n+ * be used to endorse or promote products derived from this software without\n+ * specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package org.hisp.dhis.webapi.utils;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+public class HeaderUtils\n+{\n+    public static void setSecurityHeaders( HttpServletResponse response, String cspHeaders )\n+    {\n+        response.setHeader( \"Content-Security-Policy\", cspHeaders );\n+        response.setHeader( \"X-Content-Type-Options\", \"nosniff\" );\n+        response.setHeader( \"X-Frame-Options\", \"SAMEORIGIN\" );\n+        response.setHeader( \"X-XSS-Protection\", \"1; mode=block\" );\n+    }\n+}"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-commons-resources/src/main/webapp/dhis-web-commons/security/login.vm",
          "status": "modified",
          "additions": 47,
          "deletions": 21,
          "patch": "@@ -7,29 +7,56 @@\n     <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n     <link rel=\"shortcut icon\" href=\"../../favicon.ico\"/>\n     <script type=\"text/javascript\" src=\"../javascripts/jQuery/jquery.min.js\"></script>\n-    <script>\n+    <script nonce=\"$cspNonce\">\n         $.ajaxSetup( {\n-          beforeSend: function(xhr) {\n-            xhr.setRequestHeader(\n-                'X-Requested-With',\n-                {\n-                  toString: function() {\n-                    return '';\n-                  }\n-                }\n-            );\n-          }\n+            beforeSend: function(xhr) {\n+                xhr.setRequestHeader(\n+                        'X-Requested-With',\n+                        {\n+                            toString: function() {\n+                                return '';\n+                            }\n+                        }\n+                );\n+            }\n         } );\n     </script>\n     <script type=\"text/javascript\" src=\"login.js\"></script>\n     <link type=\"text/css\" rel=\"stylesheet\" href=\"../css/widgets.css\">\n     <link type=\"text/css\" rel=\"stylesheet\" href=\"../css/login.css\">\n     <link type=\"text/css\" rel=\"stylesheet\" href=\"../../api/files/style/external\"/>\n+    <style nonce=\"$cspNonce\">\n+        .displayNoneClass {\n+            display: none;\n+        }\n+        .borderNoneClass {\n+            border: none;\n+        }\n+        .paddingTenClass {\n+            padding-bottom: 10px;\n+        }\n+        .whiteRedClass {\n+            color: white;\n+            background-color: red;\n+        }\n+        .marginLeftClass {\n+            margin-left: 30px;\n+        }\n+\n+            #foreach( $provider in $oidcConfig.providers )\n+            .oidc${provider.id}Class {\n+                width: 269px;\n+                height: 46px;\n+                border: none;\n+                background: url($provider.icon) no-repeat scroll $provider.iconPadding, #fff;\n+            }\n+            #end\n+    </style>\n </head>\n \n <body class=\"loginPage\">\n-<h1 style=\"display:none\">$!encoder.htmlEncode( ${applicationTitle} )</h1>\n-<div style=\"display:none\">DHIS 2</div>\n+<h1 class=\"displayNoneClass\">$!encoder.htmlEncode( ${applicationTitle} )</h1>\n+<div class=\"displayNoneClass\">DHIS 2</div>\n <div>\n     #if ( $keyFlag )\n         <img id=\"flagArea\" src=\"../flags/$!{keyFlagImage}\">\n@@ -50,7 +77,7 @@\n <div id=\"loginField\">\n     <div id=\"loginArea\">\n         <div id=\"bannerArea\">\n-            <a href=\"http://www.dhis2.org\"><img src=\"../../api/staticContent/logo_front\" style=\"border:none\"></a>\n+            <a href=\"http://www.dhis2.org\"><img src=\"../../api/staticContent/logo_front\" class=\"borderNoneClass\"></a>\n         </div>\n \n         <form id=\"loginForm\" action=\"../../dhis-web-commons-security/login.action\" method=\"post\">\n@@ -60,7 +87,7 @@\n                 <div><input type=\"password\" id=\"j_password\" name=\"j_password\" autocomplete=\"off\" placeholder=\"Password\"\n                             required></div>\n                 <div>\n-                  <input type=\"checkbox\" name=\"2fa\" value=\"2fa\" id=\"2fa\"/><label id=\"2FaLabel\">$i18n.getString('login_using_two_factor_authentication')</label>\n+                    <input type=\"checkbox\" name=\"2fa\" value=\"2fa\" id=\"2fa\"/><label id=\"2FaLabel\">$i18n.getString('login_using_two_factor_authentication')</label>\n                     <input type=\"code\" id=\"2fa_code\" name=\"2fa_code\"\n                            placeholder=\"$i18n.getString('two_factor_authentication_code')\" hidden readonly>\n                 </div>\n@@ -69,12 +96,12 @@\n                 <input id=\"submit\" class=\"button\" type=\"submit\" value=\"$i18n.getString('sign_in')\">\n             </div>\n             #if( $keyAccountRecovery )\n-                <div style=\"padding-bottom: 10px\">\n+                <div class=\"paddingTenClass\">\n                     <a id=\"forgotPasswordLink\" href=\"recovery.action\">$i18n.getString('forgot_password')</a>\n                 </div>\n             #end\n             #if( $keyConfig.selfRegistrationAllowed() )\n-                <div style=\"padding-bottom: 10px\">\n+                <div class=\"paddingTenClass\">\n                     <a id=\"createAccountLink\" href=\"account.action\">$i18n.getString('create_an_account')</a>\n                 </div>\n             #end\n@@ -83,8 +110,7 @@\n         #foreach( $provider in $oidcConfig.providers )\n             <form id=\"oidcProvider_$provider.id\" action=\"../../oauth2/authorization/$provider.id\" method=\"get\">\n                 <div id=\"submitDiv\">\n-                    <input style=\"width: 269px; height:46px; border:none; background: url($provider.icon) no-repeat scroll $provider.iconPadding, #fff;\"\n-                           id=\"submit\" class=\"button\" type=\"submit\"\n+                    <input id=\"submit\" class=\"button oidc${provider.id}Class\" type=\"submit\"\n                            value=\"$i18n.getString( $provider.loginText )\">\n                 </div>\n             </form>\n@@ -101,7 +127,7 @@\n             </div>\n         #end\n         <!--[if lte IE 8]>\n-            <div id=\"notificationArea\" style=\"color: white; background-color: red;\">$i18n.getString(\n+            <div id=\"notificationArea\" class=\"whiteRedClass\">$i18n.getString(\n             \"unsupported_browser\" )</div>\n             <![endif]-->\n     </div>\n@@ -113,7 +139,7 @@\n     </div>\n     <div id=\"rightFooterArea\" class=\"innerFooterArea\">\n         <span id=\"applicationRightFooter\">$!{keyApplicationRightFooter}</span>\n-        <select id=\"localeSelect\" onchange=\"login.localeChanged()\" style=\"margin-left: 30px\">\n+        <select id=\"localeSelect\" onchange=\"login.localeChanged()\" class=\"marginLeftClass\">\n             <option value=\"\">[ $i18n.getString( \"change_language\" ) ]</option>\n             #foreach( $locale in $availableLocales )\n                 <option value=\"${locale.language}\">${locale.displayName}</option>"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/security/action/LoginAction.java",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -27,6 +27,8 @@\n  */\n package org.hisp.dhis.security.action;\n \n+import static org.hisp.dhis.webapi.filter.CspFilter.CSP_REQUEST_NONCE_ATTR_NAME;\n+\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -75,6 +77,12 @@ public void setDeviceResolver( DeviceResolver deviceResolver )\n     // -------------------------------------------------------------------------\n     // Input & Output\n     // -------------------------------------------------------------------------\n+    private String cspNonce = \"\";\n+\n+    public String getCspNonce()\n+    {\n+        return cspNonce;\n+    }\n \n     private Boolean failed = false;\n \n@@ -112,6 +120,8 @@ public String execute()\n     {\n         addRegisteredProviders();\n \n+        cspNonce = (String) ServletActionContext.getRequest().getSession().getAttribute( CSP_REQUEST_NONCE_ATTR_NAME );\n+\n         Device device = deviceResolver.resolveDevice( ServletActionContext.getRequest() );\n \n         ServletActionContext.getResponse().addHeader( \"Login-Page\", \"true\" );"
        },
        {
          "filename": "dhis-2/dhis-web/dhis-web-commons/src/main/java/org/hisp/dhis/security/config/DhisWebCommonsWebSecurityConfig.java",
          "status": "modified",
          "additions": 14,
          "deletions": 4,
          "patch": "@@ -38,11 +38,13 @@\n import org.hisp.dhis.security.MappedRedirectStrategy;\n import org.hisp.dhis.security.ldap.authentication.CustomLdapAuthenticationProvider;\n import org.hisp.dhis.security.oidc.DhisOidcLogoutSuccessHandler;\n+import org.hisp.dhis.security.oidc.DhisOidcProviderRepository;\n import org.hisp.dhis.security.spring2fa.TwoFactorAuthenticationProvider;\n import org.hisp.dhis.security.spring2fa.TwoFactorWebAuthenticationDetailsSource;\n import org.hisp.dhis.security.vote.ActionAccessVoter;\n import org.hisp.dhis.security.vote.ModuleAccessVoter;\n import org.hisp.dhis.webapi.filter.CorsFilter;\n+import org.hisp.dhis.webapi.filter.CspFilter;\n import org.hisp.dhis.webapi.filter.CustomAuthenticationFilter;\n import org.hisp.dhis.webapi.handler.CustomExceptionMappingAuthenticationFailureHandler;\n import org.hisp.dhis.webapi.handler.DefaultAuthenticationSuccessHandler;\n@@ -72,7 +74,9 @@\n import org.springframework.security.web.access.expression.WebExpressionVoter;\n import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n+import org.springframework.security.web.header.HeaderWriterFilter;\n import org.springframework.security.web.util.matcher.RequestMatcher;\n+import org.springframework.session.web.http.DefaultCookieSerializer;\n \n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n@@ -139,7 +143,7 @@ public static class FormLoginWebSecurityConfigurerAdapter extends WebSecurityCon\n         private I18nManager i18nManager;\n \n         @Autowired\n-        private DhisConfigurationProvider configurationProvider;\n+        private DhisConfigurationProvider dhisConfig;\n \n         @Autowired\n         private ExternalAccessVoter externalAccessVoter;\n@@ -157,6 +161,9 @@ public static class FormLoginWebSecurityConfigurerAdapter extends WebSecurityCon\n         @Autowired\n         private DefaultAuthenticationEventPublisher authenticationEventPublisher;\n \n+        @Autowired\n+        private DhisOidcProviderRepository dhisOidcProviderRepository;\n+\n         public void configure( AuthenticationManagerBuilder auth )\n             throws Exception\n         {\n@@ -251,10 +258,13 @@ protected void configure( HttpSecurity http )\n                 .csrf()\n                 .disable()\n \n+                .addFilterBefore( new CspFilter( dhisConfig, dhisOidcProviderRepository ),\n+                    HeaderWriterFilter.class )\n+\n                 .addFilterBefore( CorsFilter.get(), BasicAuthenticationFilter.class )\n                 .addFilterBefore( CustomAuthenticationFilter.get(), UsernamePasswordAuthenticationFilter.class );\n \n-            setHttpHeaders( http );\n+            setHttpHeaders( http, dhisConfig );\n         }\n \n         @Bean\n@@ -270,10 +280,10 @@ public DefaultAuthenticationSuccessHandler authenticationSuccessHandler()\n         {\n             DefaultAuthenticationSuccessHandler successHandler = new DefaultAuthenticationSuccessHandler();\n             successHandler.setRedirectStrategy( mappedRedirectStrategy() );\n-            if ( configurationProvider.getProperty( ConfigurationKey.SYSTEM_SESSION_TIMEOUT ) != null )\n+            if ( dhisConfig.getProperty( ConfigurationKey.SYSTEM_SESSION_TIMEOUT ) != null )\n             {\n                 successHandler.setSessionTimeout(\n-                    Integer.parseInt( configurationProvider.getProperty( ConfigurationKey.SYSTEM_SESSION_TIMEOUT ) ) );\n+                    Integer.parseInt( dhisConfig.getProperty( ConfigurationKey.SYSTEM_SESSION_TIMEOUT ) ) );\n             }\n \n             return successHandler;"
        }
      ],
      "file_patterns": {
        "security_files": 6,
        "config_files": 8,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 18,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8067233d8e78f9769377211af02f97c22fa01be4",
            "date": "2025-01-14T14:31:47Z",
            "author_login": "jbee"
          },
          {
            "sha": "5b2be03d181d9c2d497817d79e2accfe1cbe67b7",
            "date": "2025-01-14T13:16:01Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b032630779a1bbc61f23e9ab5d170a702394dd3e",
            "date": "2025-01-14T08:27:14Z",
            "author_login": "Philip-Larsen-Donnelly"
          },
          {
            "sha": "092ca7f4868aa741b26c7fa44ba567f96ec20b2e",
            "date": "2025-01-14T08:25:16Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "10ca85f0088733d6ebdb03d36609977ea281a6e4",
            "date": "2025-01-14T08:24:51Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "DHIS 2 is an open source information system for data capture, management, validation, analytics and visualization. In affected versions an authenticated DHIS2 user can craft a request to DHIS2 to instruct the server to make requests to external resources (like third party servers). This could allow an attacker, for example, to identify vulnerable services which might not be otherwise exposed to the public internet or to determine whether a specific file is present on the DHIS2 server. DHIS2 administrators should upgrade to the following hotfix releases: 2.36.12.1, 2.37.8.1, 2.38.2.1, 2.39.0.1. At this time, there is no known workaround or mitigation for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-08T22:15:10.483",
    "last_modified": "2024-11-21T07:24:08.150",
    "fix_date": "2022-11-28T12:25:02Z"
  },
  "references": [
    {
      "url": "https://github.com/dhis2/dhis2-core/commit/dc3166c216da53e12a16bfdc51055823b838c1c3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dhis2/dhis2-core/security/advisories/GHSA-6qh9-rxc8-7943",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dhis2/dhis2-core/commit/dc3166c216da53e12a16bfdc51055823b838c1c3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dhis2/dhis2-core/security/advisories/GHSA-6qh9-rxc8-7943",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.216738",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dhis2-core",
    "owner": "dhis2",
    "created_at": "2016-08-30T12:57:05Z",
    "updated_at": "2025-01-14T14:31:52Z",
    "pushed_at": "2025-01-14T17:42:41Z",
    "size": 219461,
    "stars": 297,
    "forks": 355,
    "open_issues": 43,
    "watchers": 297,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.21",
      "2.22",
      "2.23",
      "2.24",
      "2.25",
      "2.26",
      "2.27",
      "2.28",
      "2.29",
      "2.30",
      "2.31",
      "2.32",
      "2.33",
      "2.34",
      "2.35-DHIS2-TECH842-backport",
      "2.35",
      "2.35.8_rwanda_eq",
      "2.35.9_log4j_upgrade_2.15.0",
      "2.35.11_rwanda_eq",
      "2.36_ks",
      "2.36",
      "2.37-DHIS2-10907",
      "2.37-DHIS2-12152-backport",
      "2.37-DHIS2-14805-backport",
      "2.37",
      "2.38-DHIS2-11190",
      "2.38-DHIS2-12656-2",
      "2.38-DHIS2-12853",
      "2.38-DHIS2-15268-backport",
      "2.38-DHIS2-15724"
    ],
    "languages": {
      "Java": 36883803,
      "JavaScript": 758945,
      "CSS": 169636,
      "PLpgSQL": 75232,
      "HTML": 61589,
      "Groovy": 33500,
      "Shell": 17966,
      "XSLT": 6968,
      "SCSS": 4229,
      "Ruby": 1011,
      "Dockerfile": 107
    },
    "commit_activity": {
      "total_commits_last_year": 1649,
      "avg_commits_per_week": 31.71153846153846,
      "days_active_last_year": 279
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T17:49:30.609715"
  }
}