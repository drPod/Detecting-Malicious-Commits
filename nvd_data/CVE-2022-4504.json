{
  "cve_id": "CVE-2022-4504",
  "github_data": {
    "repository": "openemr/openemr",
    "fix_commit": "37d7ed4855763fc588485f05b2e9cc0944f71879",
    "related_commits": [
      "37d7ed4855763fc588485f05b2e9cc0944f71879",
      "37d7ed4855763fc588485f05b2e9cc0944f71879"
    ],
    "patch_url": "https://github.com/openemr/openemr/commit/37d7ed4855763fc588485f05b2e9cc0944f71879.patch",
    "fix_commit_details": {
      "sha": "37d7ed4855763fc588485f05b2e9cc0944f71879",
      "commit_date": "2022-10-19T06:30:43Z",
      "author": {
        "login": "bradymiller",
        "type": "User",
        "stats": {
          "total_commits": 3166,
          "average_weekly_commits": 4.1878306878306875,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 593
        }
      },
      "commit_message": {
        "title": "bug fixes (#5846)",
        "length": 17,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 16,
        "additions": 8,
        "deletions": 8
      },
      "files": [
        {
          "filename": "interface/main/messages/messages.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -115,7 +115,7 @@\n         echo \"<title>\" . xlt('MedEx Setup') . \"</title>\";\n         $stage = $_REQUEST['stage'];\n         if (!is_numeric($stage)) {\n-            echo \"<br /><span class='title'>$stage \" . xlt('Warning') . \": \" . xlt('This is not a valid request') . \".</span>\";\n+            echo \"<br /><span class='title'>\" . text($stage) . \" \" . xlt('Warning') . \": \" . xlt('This is not a valid request') . \".</span>\";\n         } else {\n             $MedEx->setup->MedExBank($stage);\n         }"
        },
        {
          "filename": "interface/main/messages/save.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -248,7 +248,7 @@\n             sqlQuery($sql, array('recall_' . $pid, $_POST['item'], $_SESSION['authUserID'], 'Label printed locally'));\n         }\n     }\n-    echo json_encode($pidList);\n+    echo text(json_encode($pidList));\n     exit;\n }\n if ($_REQUEST['go'] == \"Messages\") {"
        },
        {
          "filename": "interface/patient_file/front_payment_cc.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -53,7 +53,7 @@\n         exit();\n     }\n \n-    echo $ccaudit;\n+    echo text($ccaudit);\n     exit();\n }\n "
        },
        {
          "filename": "library/classes/TreeMenu.php",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -680,17 +680,17 @@ function _nodeToHTML($nodeObj, $prefix, $return = 'newNode', $currentDepth = 0,\n         $expanded  = $this->isDynamic ? ($nodeObj->expanded  ? 'true' : 'false') : 'true';\n         $isDynamic = $this->isDynamic ? ($nodeObj->isDynamic ? 'true' : 'false') : 'false';\n         $html = sprintf(\n-            \"\\t %s = %s.addItem(new TreeNode('%s', %s, %s, %s, %s, '%s', '%s', %s));\\n\",\n+            \"\\t %s = %s.addItem(new TreeNode(jsAttr(%s), jsAttr(%s), jsAttr(%s), %s, %s, '%s', '%s', jsAttr(%s)));\\n\",\n             $return,\n             $prefix,\n-            attr($nodeObj->text),\n-            !empty($nodeObj->icon) ? \"'\" . $nodeObj->icon . \"'\" : 'null',\n-            !empty($nodeObj->link) ? \"'\" . attr($nodeObj->link) . \"'\" : 'null',\n+            js_escape($nodeObj->text),\n+            !empty($nodeObj->icon) ?  js_escape($nodeObj->icon) : 'null',\n+            !empty($nodeObj->link) ? js_escape($nodeObj->link) : 'null',\n             $expanded,\n             $isDynamic,\n             $nodeObj->cssClass,\n             $nodeObj->linkTarget,\n-            !empty($nodeObj->expandedIcon) ? \"'\" . $nodeObj->expandedIcon . \"'\" : 'null'\n+            !empty($nodeObj->expandedIcon) ? js_escape($nodeObj->expandedIcon) : 'null'\n         );\n \n         foreach ($nodeObj->events as $event => $handler) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5a6ce59033e28da4977509da60f4fc0cbf084b43",
            "date": "2025-01-12T07:59:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "48858bcad419eb537a0879d8261845df39d793f2",
            "date": "2025-01-10T22:28:46Z",
            "author_login": "stephenwaite"
          },
          {
            "sha": "ee3beb58f73619e04004e526c56423a14d6689fd",
            "date": "2025-01-09T07:11:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "1480ee627b317622a122abb293b74be50ad86795",
            "date": "2025-01-08T17:44:10Z",
            "author_login": "sjpadgett"
          },
          {
            "sha": "6a444b1c9ac5773008ab7a6c8fb81a4e9a365e6b",
            "date": "2025-01-06T12:49:47Z",
            "author_login": "NileshHake"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-20",
    "description": "Improper Input Validation in GitHub repository openemr/openemr prior to 7.0.0.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-15T01:15:11.023",
    "last_modified": "2024-11-21T07:35:23.717",
    "fix_date": "2022-10-19T06:30:43Z"
  },
  "references": [
    {
      "url": "https://github.com/openemr/openemr/commit/37d7ed4855763fc588485f05b2e9cc0944f71879",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f50538cb-99d3-411d-bd1a-5f36d1fa9f5d",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openemr/openemr/commit/37d7ed4855763fc588485f05b2e9cc0944f71879",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f50538cb-99d3-411d-bd1a-5f36d1fa9f5d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.162596",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openemr",
    "owner": "openemr",
    "created_at": "2010-05-21T19:54:08Z",
    "updated_at": "2025-01-12T07:59:39Z",
    "pushed_at": "2025-01-12T07:59:34Z",
    "size": 613406,
    "stars": 3249,
    "forks": 2204,
    "open_issues": 360,
    "watchers": 3249,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "rel-320",
      "rel-400",
      "rel-410",
      "rel-411",
      "rel-412",
      "rel-413",
      "rel-420",
      "rel-421"
    ],
    "languages": {
      "PHP": 38302611,
      "JavaScript": 2254920,
      "XSLT": 1868397,
      "HTML": 1450911,
      "Twig": 590132,
      "CSS": 530442,
      "SCSS": 189517,
      "Mustache": 127165,
      "Perl": 114453,
      "Shell": 79764,
      "Smarty": 70819,
      "Dockerfile": 57349,
      "Makefile": 1915,
      "Roff": 911
    },
    "commit_activity": {
      "total_commits_last_year": 325,
      "avg_commits_per_week": 6.25,
      "days_active_last_year": 161
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:15:48.369791"
  }
}