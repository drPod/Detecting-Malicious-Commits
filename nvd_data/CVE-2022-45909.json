{
  "cve_id": "CVE-2022-45909",
  "github_data": {
    "repository": "drachtio/drachtio-server",
    "fix_commit": "a63d01854987d9fd846cdc9265af38ee9eb72490",
    "related_commits": [
      "a63d01854987d9fd846cdc9265af38ee9eb72490",
      "a63d01854987d9fd846cdc9265af38ee9eb72490"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a63d01854987d9fd846cdc9265af38ee9eb72490",
      "commit_date": "2022-11-06T16:27:55Z",
      "author": {
        "login": "davehorton",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "sending an invite with a request-uri longer than 255 characters can cause a crash (#238)",
        "length": 88,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 20,
        "additions": 12,
        "deletions": 8
      },
      "files": [
        {
          "filename": "src/drachtio.cpp",
          "status": "modified",
          "additions": 9,
          "deletions": 7,
          "patch": "@@ -54,6 +54,8 @@ THE SOFTWARE.\n \n #define MAX_LINELEN 2047\n \n+#define MAX_SIP_URI_LEN (1024)\n+\n #define BOOST_UUID (1)\n \n using namespace std ;\n@@ -336,8 +338,8 @@ namespace drachtio {\n     bool normalizeSipUri( std::string& uri, int brackets ) {\n         su_home_t* home = theOneAndOnlyController->getHome() ;\n         char *s ;\n-        char buf[255];\n-        char obuf[255] ;\n+        char buf[MAX_SIP_URI_LEN];\n+        char obuf[MAX_SIP_URI_LEN] ;\n         char hp[64] ;\n         char const *display = NULL;\n         url_t url[1];\n@@ -346,7 +348,7 @@ namespace drachtio {\n         int rc ;\n \n         // buf gets passed into sip_name_addr_d which puts NULs in various locations so the url_t members can point to their bits\n-        s = strncpy( buf, uri.c_str(), 255 ) ;\n+        s = strncpy( buf, uri.c_str(), MAX_SIP_URI_LEN ) ;\n \n         // first we decode the string\n         rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;\n@@ -374,14 +376,14 @@ namespace drachtio {\n             return false ;\n         }\n         uri.assign( obuf ) ;\n-        return true ;\n+        return uri.length() < MAX_SIP_URI_LEN ;\n     }\n \n     bool replaceHostInUri( std::string& uri, const char* szHost, const char* szPort ) {\n         su_home_t* home = theOneAndOnlyController->getHome() ;\n         char *s ;\n-        char buf[255];\n-        char obuf[255] ;\n+        char buf[MAX_SIP_URI_LEN];\n+        char obuf[MAX_SIP_URI_LEN] ;\n         char hp[64] ;\n         char const *display = NULL;\n         url_t url[1];\n@@ -404,7 +406,7 @@ namespace drachtio {\n         url->url_port = szPort ;\n \n         // now we re-encode it\n-        int nChars = sip_name_addr_e(obuf, 255, 0, display, 1, url, params, comment) ;\n+        int nChars = sip_name_addr_e(obuf, MAX_SIP_URI_LEN, 0, display, 1, url, params, comment) ;\n \n         // cleanup: free the msg_params if any were allocated        \n         if( params ) {"
        },
        {
          "filename": "src/sip-dialog-controller.cpp",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -529,7 +529,9 @@ namespace drachtio {\n              }\n \n             //prevent looping messages\n-            normalizeSipUri( requestUri, 0 ) ;\n+            if (!normalizeSipUri( requestUri, 0 )) {\n+                throw std::runtime_error(string(\"invalid request-uri: \") + requestUri ) ;\n+            }\n             if( isLocalSipUri( requestUri ) ) {\n                 throw std::runtime_error(\"can not send request to myself\") ;\n             }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "63636e645f46f48133deac92b43ba72245faf2e6",
            "date": "2025-01-19T17:05:47Z",
            "author_login": "orgads"
          },
          {
            "sha": "c1a45fbf0f7324ebd8c53e3715d23c6c4554a08b",
            "date": "2025-01-19T16:59:14Z",
            "author_login": "orgads"
          },
          {
            "sha": "5aa3e7587727aab89d31564f29dfecb59f00663d",
            "date": "2025-01-17T14:33:49Z",
            "author_login": "orgads"
          },
          {
            "sha": "e00f2550605c7aa2812fa42c701e12d27a9438d2",
            "date": "2025-01-17T14:33:09Z",
            "author_login": "orgads"
          },
          {
            "sha": "bc294d40fe30d5edc6ad0d31743c30c895a2c8b9",
            "date": "2025-01-17T14:32:22Z",
            "author_login": "orgads"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-125",
    "description": "drachtio-server before 0.8.19 has a heap-based buffer over-read via a long Request-URI in an INVITE request.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-11-26T03:15:10.633",
    "last_modified": "2024-11-21T07:29:55.730",
    "fix_date": "2022-11-06T16:27:55Z"
  },
  "references": [
    {
      "url": "https://github.com/drachtio/drachtio-server/commit/a63d01854987d9fd846cdc9265af38ee9eb72490",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/drachtio/drachtio-server/compare/v0.8.18...v0.8.19",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/drachtio/drachtio-server/pull/238",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/drachtio/drachtio-server/commit/a63d01854987d9fd846cdc9265af38ee9eb72490",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/drachtio/drachtio-server/compare/v0.8.18...v0.8.19",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/drachtio/drachtio-server/pull/238",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.170117",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "drachtio-server",
    "owner": "drachtio",
    "created_at": "2013-12-09T09:33:02Z",
    "updated_at": "2025-01-19T17:05:49Z",
    "pushed_at": "2025-01-21T13:17:51Z",
    "size": 328631,
    "stars": 253,
    "forks": 97,
    "open_issues": 127,
    "watchers": 253,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "C++": 725786,
      "JavaScript": 62663,
      "Shell": 51548,
      "M4": 35637,
      "Makefile": 3289,
      "Dockerfile": 1468
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:35:00.193000"
  }
}