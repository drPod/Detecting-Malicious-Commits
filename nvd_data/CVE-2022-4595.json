{
  "cve_id": "CVE-2022-4595",
  "github_data": {
    "repository": "openipam/django-openipam",
    "fix_commit": "a6223a1150d60cd036106ba6a8e676c1bfc3cc85",
    "related_commits": [
      "a6223a1150d60cd036106ba6a8e676c1bfc3cc85",
      "a6223a1150d60cd036106ba6a8e676c1bfc3cc85"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a6223a1150d60cd036106ba6a8e676c1bfc3cc85",
      "commit_date": "2022-11-11T17:55:54Z",
      "author": {
        "login": "Simponic",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Exposed Hosts Improvements (#205)",
        "length": 306,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 132,
        "additions": 63,
        "deletions": 69
      },
      "files": [
        {
          "filename": "openipam/api/views/report.py",
          "status": "modified",
          "additions": 42,
          "deletions": 55,
          "patch": "@@ -11,26 +11,25 @@\n \n from rest_framework_csv.renderers import CSVRenderer\n \n+from django.db import connection\n from django.db.models.aggregates import Count\n from django.http import HttpResponse\n-from django.contrib.contenttypes.models import ContentType\n from django.contrib.auth import get_user_model\n+from django.contrib.auth.models import Permission\n from django.apps import apps\n-from django.db.models import Q, F\n+from django.db.models import Q\n from django.utils import timezone\n \n-from openipam.hosts.models import Host\n+from openipam.hosts.models import Host, Attribute\n from openipam.report.models import Ports\n from openipam.report.models import database_connect, database_close\n from openipam.network.models import Network, Lease, Address\n from openipam.dns.models import DnsRecord\n-from openipam.conf.ipam_settings import CONFIG, CONFIG_DEFAULTS\n+from openipam.conf.ipam_settings import CONFIG\n from openipam.conf.settings import get_buildingmap_data\n \n from functools import reduce\n \n-from guardian.models import UserObjectPermission, GroupObjectPermission\n-\n import copy\n \n import qsstats\n@@ -424,9 +423,10 @@ class ServerHostCSVRenderer(CSVRenderer):\n         \"hostname\",\n         \"mac\",\n         \"description\",\n-        \"master_ip_address\",\n+        \"addresses\",\n         \"user_owners\",\n         \"group_owners\",\n+        \"nac_profiles\",\n     ]\n \n \n@@ -435,56 +435,43 @@ class ServerHostView(APIView):\n     renderer_classes = (BrowsableAPIRenderer, JSONRenderer, ServerHostCSVRenderer)\n \n     def get(self, request, format=None, **kwargs):\n-        hosts = (\n-            Host.objects.prefetch_related(\"addresses\")\n-            .filter(\n-                structured_attributes__structured_attribute_value__attribute__name=\"nac-profile\",\n-                structured_attributes__structured_attribute_value__value__startswith=CONFIG_DEFAULTS[\n-                    \"NAC_PROFILE_IS_SERVER_PREFIX\"\n-                ],\n-            )\n-            .annotate(\n-                nac_profile=F(\n-                    \"structured_attributes__structured_attribute_value__value\"\n-                ),\n-            )\n-        )\n-\n-        user_perms_prefetch = UserObjectPermission.objects.select_related(\n-            \"permission\", \"user\"\n-        ).filter(\n-            content_type=ContentType.objects.get_for_model(Host),\n-            object_pk__in=[str(host.mac) for host in hosts],\n-            permission__codename=\"is_owner_host\",\n-        )\n-        group_perms_prefetch = GroupObjectPermission.objects.select_related(\n-            \"permission\", \"group\"\n-        ).filter(\n-            content_type=ContentType.objects.get_for_model(Host),\n-            object_pk__in=[str(host.mac) for host in hosts],\n-            permission__codename=\"is_owner_host\",\n+        nac_profile_attribute = Attribute.objects.get(name=\"nac-profile\")\n+        host_owner_permission = Permission.objects.get(codename=\"is_owner_host\")\n+\n+        cursor = connection.cursor()\n+        cursor.execute(\n+            \"\"\"\n+            SELECT hosts.hostname AS hostname,\n+                   hosts.mac AS mac,\n+                   hosts.description AS description,\n+                   STRING_AGG(DISTINCT((SELECT CAST(addresses.address AS VARCHAR))), ', ') AS addresses,\n+                   STRING_AGG(DISTINCT(users.username), ', ') AS users,\n+                   STRING_AGG(DISTINCT(groups.name), ', ') AS groups,\n+                   STRING_AGG(DISTINCT(host_attr_vals.value), ', ') AS nac_profiles\n+            FROM hosts\n+                JOIN structured_attributes_to_hosts AS host_attrs ON hosts.mac=host_attrs.mac\n+                JOIN structured_attribute_values AS host_attr_vals ON host_attrs.avid=host_attr_vals.id\n+                LEFT JOIN guardian_userobjectpermission AS uop ON uop.object_pk=(SELECT CAST(hosts.mac AS VARCHAR)) AND uop.permission_id = %s\n+                LEFT JOIN guardian_groupobjectpermission AS gop ON gop.object_pk=(SELECT CAST(hosts.mac AS VARCHAR)) AND gop.permission_id=%s\n+                LEFT JOIN addresses ON hosts.mac=addresses.mac\n+                LEFT JOIN users ON uop.user_id=users.id\n+                LEFT JOIN groups ON gop.group_id=groups.id\n+            WHERE host_attr_vals.aid = %s\n+            AND STARTS_WITH(host_attr_vals.value, %s)\n+            GROUP BY hosts.mac, hosts.hostname, hosts.description\n+            \"\"\",\n+            [\n+                host_owner_permission.id,\n+                host_owner_permission.id,\n+                nac_profile_attribute.id,\n+                CONFIG[\"NAC_PROFILE_IS_SERVER_PREFIX\"],\n+            ],\n         )\n \n-        data = []\n-        for host in hosts:\n-            owners = host.get_owners(\n-                name_only=True,\n-                user_perms_prefetch=user_perms_prefetch,\n-                group_perms_prefetch=group_perms_prefetch,\n-            )\n-            data.append(\n-                {\n-                    \"hostname\": host.hostname,\n-                    \"mac\": str(host.mac),\n-                    \"description\": host.description,\n-                    \"master_ip_address\": host.ip_addresses[0]\n-                    if host.ip_addresses\n-                    else None,\n-                    \"user_owners\": \", \".join(owners[0]),\n-                    \"group_owners\": \", \".join(owners[1]),\n-                    \"nac_profile\": host.nac_profile,\n-                }\n-            )\n+        data = [\n+            dict(zip([col[0] for col in cursor.description], row))\n+            for row in cursor.fetchall()\n+        ]\n \n         if request.accepted_renderer.format == \"json\":\n             return Response({\"data\": data}, status=status.HTTP_200_OK)"
        },
        {
          "filename": "openipam/report/templates/report/exposed_hosts.html",
          "status": "modified",
          "additions": 21,
          "deletions": 14,
          "patch": "@@ -19,36 +19,43 @@\n <script type=\"text/javascript\" src=\"{% static 'core/js/dataTables.bootstrap.js' %}\"></script>\n \n <script type=\"text/javascript\">\n+  const escapeHtml = (t) => $('<div />').text(t).html();  \n+\n   $(function () {\n     $(\"#server_link\").addClass(\"active\");\n     $(\"#reports_dropdown\").addClass(\"active\");\n \n     $(\"#result_list\").DataTable({\n       ajax: \"/api/reports/serverhosts?format=json\",\n       columns: [{\n-          data: \"hostname\"\n+          data: \"hostname\",\n+          orderable: true,\n         },\n         {\n-          data: \"mac\"\n+          data: \"mac\",\n+          orderable: true,\n+          render: (t) => `<a href=\"/hosts/${escapeHtml(t).replace(/\\:/g, \"\")}/detail\">${escapeHtml(t)}</a>`,\n         },\n         {\n           data: \"description\",\n-          orderable: false\n+          orderable: false,\n+          render: escapeHtml,\n         },\n         {\n-          data: \"master_ip_address\"\n+          data: \"addresses\",\n+          orderable: true,\n         },\n         {\n-          data: \"user_owners\",\n-          orderable: false\n+          data: \"users\",\n+          orderable: false,\n         },\n         {\n-          data: \"group_owners\",\n-          orderable: false\n+          data: \"groups\",\n+          orderable: false,\n         },\n         {\n-          data: \"nac_profile\",\n-          orderable: false\n+          data: \"nac_profiles\",\n+          orderable: false,\n         },\n       ],\n       paging: false,\n@@ -72,10 +79,10 @@ <h1>Exposed Hosts</h1>\n           <th scope=\"col\">Host</th>\n           <th scope=\"col\">Mac Address</th>\n           <th scope=\"col\">Description</th>\n-          <th scope=\"col\">IP Address</th>\n-          <th scope=\"col\">User Owners</th>\n-          <th scope=\"col\">Group Owners</th>\n-          <th scope=\"col\">NAC Profile</th>\n+          <th scope=\"col\">IP Address(es)</th>\n+          <th scope=\"col\">User Owner(s)</th>\n+          <th scope=\"col\">Group Owner(s)</th>\n+          <th scope=\"col\">NAC Profile(s)</th>\n         </thead>\n       </tr>\n       <tbody></tbody>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1f46fb4b577150ababd916d70ce0c45cfe702e1b",
            "date": "2024-12-09T23:33:03Z",
            "author_login": "jmacul2"
          },
          {
            "sha": "60625a28252e674dd2af3768e3d3a36abb5056a2",
            "date": "2024-10-24T01:51:12Z",
            "author_login": "jmacul2"
          },
          {
            "sha": "ca8ea83e9e808c23547b1607cae94351ec7b0034",
            "date": "2024-10-07T18:00:00Z",
            "author_login": "jmacul2"
          },
          {
            "sha": "12760d483e143f94b5d0703574a9ee90f5ccff97",
            "date": "2024-10-07T17:50:13Z",
            "author_login": "jmacul2"
          },
          {
            "sha": "9777ce79894e4d16e236424980680304a40b0f3b",
            "date": "2024-10-01T22:05:33Z",
            "author_login": "Treyson-Grange"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-707",
    "description": "A vulnerability classified as problematic has been found in django-openipam. This affects an unknown part of the file openipam/report/templates/report/exposed_hosts.html. The manipulation of the argument description leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is a6223a1150d60cd036106ba6a8e676c1bfc3cc85. It is recommended to apply a patch to fix this issue. The identifier VDB-216189 was assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-18T11:15:10.327",
    "last_modified": "2024-11-21T07:35:33.850",
    "fix_date": "2022-11-11T17:55:54Z"
  },
  "references": [
    {
      "url": "https://github.com/openipam/django-openipam/commit/a6223a1150d60cd036106ba6a8e676c1bfc3cc85",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openipam/django-openipam/pull/205",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216189",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openipam/django-openipam/commit/a6223a1150d60cd036106ba6a8e676c1bfc3cc85",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openipam/django-openipam/pull/205",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216189",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.179472",
    "processing_status": "enhanced"
  }
}