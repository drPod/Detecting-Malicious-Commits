{
  "cve_id": "CVE-2022-46149",
  "github_data": {
    "repository": "capnproto/capnproto",
    "fix_commit": "25d34c67863fd960af34fc4f82a7ca3362ee74b9",
    "related_commits": [
      "25d34c67863fd960af34fc4f82a7ca3362ee74b9",
      "25d34c67863fd960af34fc4f82a7ca3362ee74b9"
    ],
    "patch_url": "https://github.com/capnproto/capnproto/commit/25d34c67863fd960af34fc4f82a7ca3362ee74b9.patch",
    "fix_commit_details": {
      "sha": "25d34c67863fd960af34fc4f82a7ca3362ee74b9",
      "commit_date": "2022-11-23T18:02:29Z",
      "author": {
        "login": "kentonv",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Apply data offset for list-of-pointers at access time rather than ListReader creation time.",
        "length": 251,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 10,
        "additions": 5,
        "deletions": 5
      },
      "files": [
        {
          "filename": "c++/src/capnp/layout.c++",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -2360,10 +2360,6 @@ struct WireHelpers {\n             break;\n \n           case ElementSize::POINTER:\n-            // We expected a list of pointers but got a list of structs.  Assuming the first field\n-            // in the struct is the pointer we were looking for, we want to munge the pointer to\n-            // point at the first element's pointer section.\n-            ptr += tag->structRef.dataSize.get();\n             KJ_REQUIRE(tag->structRef.ptrCount.get() > ZERO * POINTERS,\n                        \"Schema mismatch: Expected a pointer list, but got a list of data-only \"\n                        \"structs.\") {"
        },
        {
          "filename": "c++/src/capnp/layout.h",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -1227,8 +1227,12 @@ inline Void ListReader::getDataElement<Void>(ElementCount index) const {\n }\n \n inline PointerReader ListReader::getPointerElement(ElementCount index) const {\n+  // If the list elements have data sections we need to skip those. Note that for pointers to be\n+  // present at all (which already must be true if we get here), then `structDataSize` must be a\n+  // whole number of words, so we don't have to worry about unaligned reads here.\n+  auto offset = structDataSize / BITS_PER_BYTE;\n   return PointerReader(segment, capTable, reinterpret_cast<const WirePointer*>(\n-      ptr + upgradeBound<uint64_t>(index) * step / BITS_PER_BYTE), nestingLimit);\n+      ptr + offset + upgradeBound<uint64_t>(index) * step / BITS_PER_BYTE), nestingLimit);\n }\n \n // -------------------------------------------------------------------"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f600d249496c55289fa07fd6a21cadeeb340edb9",
            "date": "2024-12-28T00:22:29Z",
            "author_login": "fhanau"
          },
          {
            "sha": "4c2071bf467cb81622c1d86e083e957027dee5bd",
            "date": "2024-12-27T17:07:32Z",
            "author_login": "kentonv"
          },
          {
            "sha": "1c676b2df7f97220607591a38c28ce7e4a968ad4",
            "date": "2024-12-24T17:12:47Z",
            "author_login": "kentonv"
          },
          {
            "sha": "d18ee6f53dfdb3244a5af7bd270b28246ede380a",
            "date": "2024-12-24T16:57:44Z",
            "author_login": "kentonv"
          },
          {
            "sha": "dd0d2ed0fae0e3556523205f07d14fabd024c516",
            "date": "2024-12-24T16:55:13Z",
            "author_login": "kentonv"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:N/A:L",
    "cwe_id": "CWE-125",
    "description": "Cap'n Proto is a data interchange format and remote procedure call (RPC) system. Cap'n Proro prior to versions 0.7.1, 0.8.1, 0.9.2, and 0.10.3, as well as versions of Cap'n Proto's Rust implementation prior to 0.13.7, 0.14.11, and 0.15.2 are vulnerable to out-of-bounds read due to logic error handling list-of-list. This issue may lead someone to remotely segfault a peer by sending it a malicious message, if the victim performs certain actions on a list-of-pointer type. Exfiltration of memory is possible if the victim performs additional certain actions on a list-of-pointer type. To be vulnerable, an application must perform a specific sequence of actions, described in the GitHub Security Advisory. The bug is present in inlined code, therefore the fix will require rebuilding dependent applications. Cap'n Proto has C++ fixes available in versions 0.7.1, 0.8.1, 0.9.2, and 0.10.3. The `capnp` Rust crate has fixes available in versions 0.13.7, 0.14.11, and 0.15.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2022-11-30T17:15:10.097",
    "last_modified": "2024-11-21T07:30:12.407",
    "fix_date": "2022-11-23T18:02:29Z"
  },
  "references": [
    {
      "url": "https://github.com/capnproto/capnproto/commit/25d34c67863fd960af34fc4f82a7ca3362ee74b9",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/capnproto/capnproto/security/advisories/GHSA-qqff-4vw4-f6hx",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EAHKLUMJAXJEV5BPBS5XXWBQ3ZTHGOLY/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PTS6TWD6K2NKXLEEFBPROQXMOFUTEYWY/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WKXM4JAFXLTXU5IQB3OUBQVCIICZWGYX/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZOCQQOPMVQOFUWBWAGVGN76OYAV3WXY4/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/capnproto/capnproto/commit/25d34c67863fd960af34fc4f82a7ca3362ee74b9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/capnproto/capnproto/security/advisories/GHSA-qqff-4vw4-f6hx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EAHKLUMJAXJEV5BPBS5XXWBQ3ZTHGOLY/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PTS6TWD6K2NKXLEEFBPROQXMOFUTEYWY/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WKXM4JAFXLTXU5IQB3OUBQVCIICZWGYX/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZOCQQOPMVQOFUWBWAGVGN76OYAV3WXY4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:21.183344",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "capnproto",
    "owner": "capnproto",
    "created_at": "2013-03-29T02:38:48Z",
    "updated_at": "2025-01-14T11:35:17Z",
    "pushed_at": "2025-01-09T11:43:20Z",
    "size": 22925,
    "stars": 11858,
    "forks": 933,
    "open_issues": 251,
    "watchers": 11858,
    "has_security_policy": false,
    "default_branch": "v2",
    "protected_branches": [],
    "languages": {
      "C++": 7786711,
      "Cap'n Proto": 215131,
      "Shell": 60601,
      "CMake": 52207,
      "Starlark": 32975,
      "Makefile": 31296,
      "M4": 30787,
      "Python": 3926,
      "Emacs Lisp": 2197,
      "C": 1631
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:18:38.447836"
  }
}