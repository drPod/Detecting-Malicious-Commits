{
  "cve_id": "CVE-2022-46177",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
    "related_commits": [
      "4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
      "83944213b2b2454af80d0407f60d67641b1f0b38",
      "4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
      "83944213b2b2454af80d0407f60d67641b1f0b38"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570.patch",
    "fix_commit_details": {
      "sha": "4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
      "commit_date": "2023-01-05T00:51:27Z",
      "author": {
        "login": "tgxworld",
        "type": "User",
        "stats": {
          "total_commits": 4679,
          "average_weekly_commits": 6.7518037518037515,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 404
        }
      },
      "commit_message": {
        "title": "SECURITY: Delete email tokens when a user's email is changed or deleted (#19736)",
        "length": 138,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 49,
        "additions": 39,
        "deletions": 10
      },
      "files": [
        {
          "filename": "app/models/user_email.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -18,6 +18,10 @@ class UserEmail < ActiveRecord::Base\n \n   scope :secondary, -> { where(primary: false) }\n \n+  before_save ->() { destroy_email_tokens(self.email_was) }, if: :will_save_change_to_email?\n+\n+  after_destroy { destroy_email_tokens(self.email) }\n+\n   def normalize_email\n     self.normalized_email = if self.email.present?\n       username, domain = self.email.split('@', 2)\n@@ -62,6 +66,10 @@ def user_id_not_changed\n       )\n     end\n   end\n+\n+  def destroy_email_tokens(email)\n+    EmailToken.where(email: email).destroy_all\n+  end\n end\n \n # == Schema Information"
        },
        {
          "filename": "spec/requests/users_controller_spec.rb",
          "status": "modified",
          "additions": 9,
          "deletions": 10,
          "patch": "@@ -3063,17 +3063,18 @@ def post_user(extra_params = {})\n       expect(user1.email_change_requests).to contain_exactly(request_1)\n     end\n \n-    it \"can destroy associated email tokens\" do\n+    it \"destroys associated email tokens and email change requests\" do\n       new_email = 'new.n.cool@example.com'\n       updater = EmailUpdater.new(guardian: user1.guardian, user: user1)\n+      updater.change_to(new_email)\n \n-      expect { updater.change_to(new_email) }\n-        .to change { user1.email_tokens.count }.by(1)\n+      email_token = updater.change_req.new_email_token\n+      expect(email_token).to be_present\n \n-      expect { delete \"/u/#{user1.username}/preferences/email.json\", params: { email: new_email } }\n-        .to change { user1.email_tokens.count }.by(-1)\n+      delete \"/u/#{user1.username}/preferences/email.json\", params: { email: new_email }\n \n-      expect(user1.email_tokens.first.email).to eq(user1.email)\n+      expect(EmailToken.find_by(id: email_token.id)).to eq(nil)\n+      expect(EmailChangeRequest.find_by(id: updater.change_req.id)).to eq(nil)\n     end\n   end\n \n@@ -3439,8 +3440,7 @@ def create_and_like_post(likee, liker)\n         expect(user.email).to eq('updatedemail@example.com')\n         expect(user.email_tokens.where(email: 'updatedemail@example.com', expired: false)).to be_present\n \n-        token.reload\n-        expect(token.expired?).to eq(true)\n+        expect(EmailToken.find_by(id: token.id)).to eq(nil)\n       end\n \n       it 'tells the user to slow down after many requests' do\n@@ -3530,8 +3530,7 @@ def create_and_like_post(likee, liker)\n         expect(user.email).to eq('updatedemail@example.com')\n         expect(user.email_tokens.where(email: 'updatedemail@example.com', expired: false)).to be_present\n \n-        token.reload\n-        expect(token.expired?).to eq(true)\n+        expect(EmailToken.find_by(id: token.id)).to eq(nil)\n       end\n \n       it 'tells the user to slow down after many requests' do"
        },
        {
          "filename": "spec/requests/users_email_controller_spec.rb",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -244,6 +244,28 @@\n         end\n       end\n     end\n+\n+    it \"destroys email tokens associated with the old email after the new email is confirmed\" do\n+      SiteSetting.enable_secondary_emails = true\n+\n+      email_token = user.email_tokens.create!(email: user.email, scope: EmailToken.scopes[:password_reset])\n+\n+      updater = EmailUpdater.new(guardian: user.guardian, user: user)\n+      updater.change_to('bubblegum@adventuretime.ooo')\n+\n+      sign_in(user)\n+      put \"/u/confirm-new-email\", params: {\n+        token: \"#{updater.change_req.new_email_token.token}\"\n+      }\n+\n+      new_password = SecureRandom.hex\n+      put \"/u/password-reset/#{email_token.token}.json\", params: {\n+        password: new_password\n+      }\n+      expect(response.parsed_body[\"success\"]).to eq(false)\n+      expect(response.parsed_body[\"message\"]).to eq(I18n.t(\"password_reset.no_token\", base_url: Discourse.base_url))\n+      expect(user.reload.confirm_password?(new_password)).to eq(false)\n+    end\n   end\n \n   describe '#confirm-old-email' do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "496a739788d58a7f1c6bd59643d062ae37e982a0",
            "date": "2025-01-14T15:19:49Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "a89086f7996f95024827df61fb0d86a516b269f6",
            "date": "2025-01-14T15:19:19Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          },
          {
            "sha": "7330cfa76a6e6ab7bf90702fb1db5e1a37a2eca1",
            "date": "2025-01-14T13:28:16Z",
            "author_login": "awesomerobot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-613",
    "description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 3.0.0.beta16 on the `beta` and `tests-passed` branches, when a user requests for a password reset link email, then changes their primary email, the old reset email is still valid. When the old reset email is used to reset the password, the Discourse account's primary email would be re-linked to the old email. If the old email address is compromised or has transferred ownership, this leads to an account takeover. This is however mitigated by the SiteSetting `email_token_valid_hours` which is currently 48 hours. Users should upgrade to versions 2.8.14 or 3.0.0.beta15 to receive a patch. As a workaround, lower `email_token_valid_hours ` as needed.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-01-05T20:15:18.587",
    "last_modified": "2024-11-21T07:30:16.043",
    "fix_date": "2023-01-05T00:51:27Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/83944213b2b2454af80d0407f60d67641b1f0b38",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-5www-jxvf-vrc3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/4bf306f0e3bf54a9ef9c5886bf1cfb85c20da570",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/83944213b2b2454af80d0407f60d67641b1f0b38",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-5www-jxvf-vrc3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.517136",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}