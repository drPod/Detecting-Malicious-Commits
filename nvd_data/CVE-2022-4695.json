{
  "cve_id": "CVE-2022-4695",
  "github_data": {
    "repository": "usememos/memos",
    "fix_commit": "65cc19c12efa392f792f6bb154b4838547e0af5e",
    "related_commits": [
      "65cc19c12efa392f792f6bb154b4838547e0af5e",
      "65cc19c12efa392f792f6bb154b4838547e0af5e"
    ],
    "patch_url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e.patch",
    "fix_commit_details": {
      "sha": "65cc19c12efa392f792f6bb154b4838547e0af5e",
      "commit_date": "2022-12-23T11:17:33Z",
      "author": {
        "login": "boojack",
        "type": "User",
        "stats": {
          "total_commits": 2202,
          "average_weekly_commits": 13.50920245398773,
          "total_additions": 418328,
          "total_deletions": 387434,
          "weeks_active": 155
        }
      },
      "commit_message": {
        "title": "chore: add escape to prevent XSS (#833)",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 11,
        "deletions": 10
      },
      "files": [
        {
          "filename": "web/src/components/SearchBar.tsx",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,7 +38,7 @@ const SearchBar = () => {\n   useEffect(() => {\n     const text = locationStore.getState().query.text;\n     setQueryText(text === undefined ? \"\" : text);\n-  }, [locationStore.getState().query.text]);\n+  }, [locationStore.state.query.text]);\n \n   const handleMemoTypeItemClick = (type: MemoSpecType | undefined) => {\n     const { type: prevType } = locationStore.getState().query ?? {};"
        },
        {
          "filename": "web/src/labs/highlighter/index.ts",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -1,6 +1,4 @@\n-const escapeRegExp = (str: string): string => {\n-  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n-};\n+import { escape } from \"lodash\";\n \n const walkthroughNodeWithKeyword = (node: HTMLElement, keyword: string) => {\n   if (node.nodeType === 3) {\n@@ -19,8 +17,8 @@ export const highlightWithWord = (html: string, keyword?: string): string => {\n   if (!keyword) {\n     return html;\n   }\n-  keyword = escapeRegExp(keyword);\n+  keyword = escape(keyword);\n   const wrap = document.createElement(\"div\");\n-  wrap.innerHTML = html;\n+  wrap.innerHTML = escape(html);\n   return walkthroughNodeWithKeyword(wrap, keyword);\n };"
        },
        {
          "filename": "web/src/labs/marked/parser/Bold.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,3 +1,4 @@\n+import { escape } from \"lodash\";\n import { marked } from \"..\";\n import Link from \"./Link\";\n \n@@ -14,7 +15,7 @@ const renderer = (rawStr: string): string => {\n     return rawStr;\n   }\n \n-  const parsedContent = marked(matchResult[1], [], [Link]);\n+  const parsedContent = marked(escape(matchResult[1]), [], [Link]);\n   return `<strong>${parsedContent}</strong>`;\n };\n "
        },
        {
          "filename": "web/src/labs/marked/parser/BoldEmphasis.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,3 +1,4 @@\n+import { escape } from \"lodash\";\n import { marked } from \"..\";\n import Link from \"./Link\";\n \n@@ -14,7 +15,7 @@ const renderer = (rawStr: string): string => {\n     return rawStr;\n   }\n \n-  const parsedContent = marked(matchResult[1], [], [Link]);\n+  const parsedContent = marked(escape(matchResult[1]), [], [Link]);\n   return `<strong><em>${parsedContent}</em></strong>`;\n };\n "
        },
        {
          "filename": "web/src/labs/marked/parser/Emphasis.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,3 +1,4 @@\n+import { escape } from \"lodash\";\n import { marked } from \"..\";\n import Link from \"./Link\";\n \n@@ -14,7 +15,7 @@ const renderer = (rawStr: string): string => {\n     return rawStr;\n   }\n \n-  const parsedContent = marked(matchResult[1], [], [Link]);\n+  const parsedContent = marked(escape(matchResult[1]), [], [Link]);\n   return `<em>${parsedContent}</em>`;\n };\n "
        },
        {
          "filename": "web/src/labs/marked/parser/Link.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -17,7 +17,7 @@ const renderer = (rawStr: string): string => {\n   if (!matchResult) {\n     return rawStr;\n   }\n-  const parsedContent = marked(matchResult[1], [], [InlineCode, BoldEmphasis, Emphasis, Bold]);\n+  const parsedContent = marked(escape(matchResult[1]), [], [InlineCode, BoldEmphasis, Emphasis, Bold]);\n   return `<a class='link' target='_blank' rel='noreferrer' href='${escape(matchResult[2])}'>${parsedContent}</a>`;\n };\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8b65d248b1e271f74fbd28df041c560cde1c6991",
            "date": "2025-01-13T16:05:33Z",
            "author_login": "boojack"
          },
          {
            "sha": "ee96465be06f0e69880ab5443676928cb8cb4bd2",
            "date": "2025-01-13T15:14:44Z",
            "author_login": "johnnyjoygh"
          },
          {
            "sha": "cde058c72ac5944a3d6909cf82f10942d0627ee3",
            "date": "2025-01-13T11:46:06Z",
            "author_login": "johnnyjoygh"
          },
          {
            "sha": "94517490f5bf65010a56a19889b2453e6952d622",
            "date": "2025-01-13T11:44:53Z",
            "author_login": "X1Vi"
          },
          {
            "sha": "d050a6fd4602d08573288cbb45b0856fe692b302",
            "date": "2025-01-11T12:12:02Z",
            "author_login": "johnnyjoygh"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository usememos/memos prior to 0.9.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-27T15:15:11.603",
    "last_modified": "2024-11-21T07:35:45.080",
    "fix_date": "2022-12-23T11:17:33Z"
  },
  "references": [
    {
      "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2559d548-b847-40fb-94d6-18c1ad58b789",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/usememos/memos/commit/65cc19c12efa392f792f6bb154b4838547e0af5e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2559d548-b847-40fb-94d6-18c1ad58b789",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.217583",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "memos",
    "owner": "usememos",
    "created_at": "2021-12-08T15:30:18Z",
    "updated_at": "2025-01-14T12:48:48Z",
    "pushed_at": "2025-01-13T16:05:42Z",
    "size": 32666,
    "stars": 35917,
    "forks": 2577,
    "open_issues": 27,
    "watchers": 35917,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 491864,
      "TypeScript": 430326,
      "Less": 2572,
      "JavaScript": 1558,
      "HTML": 1074,
      "Dockerfile": 900,
      "Shell": 500,
      "CSS": 439
    },
    "commit_activity": {
      "total_commits_last_year": 1082,
      "avg_commits_per_week": 20.807692307692307,
      "days_active_last_year": 257
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:15:47.491461"
  }
}