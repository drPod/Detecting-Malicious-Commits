{
  "cve_id": "CVE-2022-4767",
  "github_data": {
    "repository": "usememos/memos",
    "fix_commit": "f888c628408501daf639de07b90a72ab443b0f4c",
    "related_commits": [
      "f888c628408501daf639de07b90a72ab443b0f4c",
      "f888c628408501daf639de07b90a72ab443b0f4c"
    ],
    "patch_url": "https://github.com/usememos/memos/commit/f888c628408501daf639de07b90a72ab443b0f4c.patch",
    "fix_commit_details": {
      "sha": "f888c628408501daf639de07b90a72ab443b0f4c",
      "commit_date": "2022-12-27T13:51:43Z",
      "author": {
        "login": "boojack",
        "type": "User",
        "stats": {
          "total_commits": 2202,
          "average_weekly_commits": 13.50920245398773,
          "total_additions": 418328,
          "total_deletions": 387434,
          "weeks_active": 155
        }
      },
      "commit_message": {
        "title": "chore: update userinfo validator (#868)",
        "length": 121,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 99,
        "additions": 90,
        "deletions": 9
      },
      "files": [
        {
          "filename": ".github/workflows/backend-tests-default.yml",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+name: Backend Test\n+\n+on:\n+  pull_request:\n+    branches:\n+      - main\n+      - \"release/v*.*.*\"\n+    paths:\n+      - \"web/**\"\n+\n+jobs:\n+  go-static-checks:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - run: 'echo \"Not required\"'\n+\n+  go-tests:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - run: 'echo \"Not required\"'"
        },
        {
          "filename": ".github/workflows/backend-tests.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -1,12 +1,10 @@\n name: Backend Test\n \n on:\n-  push:\n+  pull_request:\n     branches:\n       - main\n       - \"release/v*.*.*\"\n-  pull_request:\n-    branches: [main]\n     paths-ignore:\n       - \"web/**\"\n "
        },
        {
          "filename": ".github/workflows/frontend-tests-default.yml",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+name: Frontend Test\n+\n+on:\n+  pull_request:\n+    branches:\n+      - main\n+      - \"release/v*.*.*\"\n+    paths-ignore:\n+      - \"web/**\"\n+\n+jobs:\n+  eslint-checks:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - run: 'echo \"Not required\"'\n+\n+  jest-tests:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - run: 'echo \"Not required\"'\n+\n+  frontend-build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - run: 'echo \"Not required\"'"
        },
        {
          "filename": ".github/workflows/frontend-tests.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -1,12 +1,10 @@\n name: Frontend Test\n \n on:\n-  push:\n+  pull_request:\n     branches:\n       - main\n       - \"release/v*.*.*\"\n-  pull_request:\n-    branches: [main]\n     paths:\n       - \"web/**\"\n "
        },
        {
          "filename": "api/user.go",
          "status": "modified",
          "additions": 41,
          "deletions": 0,
          "patch": "@@ -2,6 +2,8 @@ package api\n \n import (\n \t\"fmt\"\n+\n+\t\"github.com/usememos/memos/common\"\n )\n \n // Role is the type of a role.\n@@ -61,9 +63,23 @@ func (create UserCreate) Validate() error {\n \tif len(create.Username) < 4 {\n \t\treturn fmt.Errorf(\"username is too short, minimum length is 4\")\n \t}\n+\tif len(create.Username) > 32 {\n+\t\treturn fmt.Errorf(\"username is too long, maximum length is 32\")\n+\t}\n \tif len(create.Password) < 4 {\n \t\treturn fmt.Errorf(\"password is too short, minimum length is 4\")\n \t}\n+\tif len(create.Nickname) > 64 {\n+\t\treturn fmt.Errorf(\"nickname is too long, maximum length is 64\")\n+\t}\n+\tif create.Email != \"\" {\n+\t\tif len(create.Email) > 256 {\n+\t\t\treturn fmt.Errorf(\"email is too long, maximum length is 256\")\n+\t\t}\n+\t\tif common.ValidateEmail(create.Email) {\n+\t\t\treturn fmt.Errorf(\"invalid email format\")\n+\t\t}\n+\t}\n \n \treturn nil\n }\n@@ -85,6 +101,31 @@ type UserPatch struct {\n \tOpenID       *string\n }\n \n+func (patch UserPatch) Validate() error {\n+\tif patch.Username != nil && len(*patch.Username) < 4 {\n+\t\treturn fmt.Errorf(\"username is too short, minimum length is 4\")\n+\t}\n+\tif patch.Username != nil && len(*patch.Username) > 32 {\n+\t\treturn fmt.Errorf(\"username is too long, maximum length is 32\")\n+\t}\n+\tif patch.Password != nil && len(*patch.Password) < 4 {\n+\t\treturn fmt.Errorf(\"password is too short, minimum length is 4\")\n+\t}\n+\tif patch.Nickname != nil && len(*patch.Nickname) > 64 {\n+\t\treturn fmt.Errorf(\"nickname is too long, maximum length is 64\")\n+\t}\n+\tif patch.Email != nil {\n+\t\tif len(*patch.Email) > 256 {\n+\t\t\treturn fmt.Errorf(\"email is too long, maximum length is 256\")\n+\t\t}\n+\t\tif common.ValidateEmail(*patch.Email) {\n+\t\t\treturn fmt.Errorf(\"invalid email format\")\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n type UserFind struct {\n \tID *int `json:\"id\"`\n "
        },
        {
          "filename": "server/user.go",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -198,9 +198,8 @@ func (s *Server) registerUserRoutes(g *echo.Group) {\n \t\tif err := json.NewDecoder(c.Request().Body).Decode(userPatch); err != nil {\n \t\t\treturn echo.NewHTTPError(http.StatusBadRequest, \"Malformatted patch user request\").SetInternal(err)\n \t\t}\n-\n-\t\tif userPatch.Email != nil && *userPatch.Email != \"\" && !common.ValidateEmail(*userPatch.Email) {\n-\t\t\treturn echo.NewHTTPError(http.StatusBadRequest, \"Invalid email format\")\n+\t\tif err := userPatch.Validate(); err != nil {\n+\t\t\treturn echo.NewHTTPError(http.StatusBadRequest, \"Invalid user patch format.\").SetInternal(err)\n \t\t}\n \n \t\tif userPatch.Password != nil && *userPatch.Password != \"\" {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 4,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8b65d248b1e271f74fbd28df041c560cde1c6991",
            "date": "2025-01-13T16:05:33Z",
            "author_login": "boojack"
          },
          {
            "sha": "ee96465be06f0e69880ab5443676928cb8cb4bd2",
            "date": "2025-01-13T15:14:44Z",
            "author_login": "johnnyjoygh"
          },
          {
            "sha": "cde058c72ac5944a3d6909cf82f10942d0627ee3",
            "date": "2025-01-13T11:46:06Z",
            "author_login": "johnnyjoygh"
          },
          {
            "sha": "94517490f5bf65010a56a19889b2453e6952d622",
            "date": "2025-01-13T11:44:53Z",
            "author_login": "X1Vi"
          },
          {
            "sha": "d050a6fd4602d08573288cbb45b0856fe692b302",
            "date": "2025-01-11T12:12:02Z",
            "author_login": "johnnyjoygh"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "Denial of Service in GitHub repository usememos/memos prior to 0.9.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-27T15:15:12.847",
    "last_modified": "2024-11-21T07:35:54.057",
    "fix_date": "2022-12-27T13:51:43Z"
  },
  "references": [
    {
      "url": "https://github.com/usememos/memos/commit/f888c628408501daf639de07b90a72ab443b0f4c",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/75b4a085-923c-4ecc-bbf6-e049290db502",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/usememos/memos/commit/f888c628408501daf639de07b90a72ab443b0f4c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/75b4a085-923c-4ecc-bbf6-e049290db502",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.219937",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "memos",
    "owner": "usememos",
    "created_at": "2021-12-08T15:30:18Z",
    "updated_at": "2025-01-14T12:48:48Z",
    "pushed_at": "2025-01-13T16:05:42Z",
    "size": 32666,
    "stars": 35917,
    "forks": 2577,
    "open_issues": 27,
    "watchers": 35917,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 491864,
      "TypeScript": 430326,
      "Less": 2572,
      "JavaScript": 1558,
      "HTML": 1074,
      "Dockerfile": 900,
      "Shell": 500,
      "CSS": 439
    },
    "commit_activity": {
      "total_commits_last_year": 1082,
      "avg_commits_per_week": 20.807692307692307,
      "days_active_last_year": 257
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:15:47.491461"
  }
}