{
  "cve_id": "CVE-2022-4768",
  "github_data": {
    "repository": "dropbox/merou",
    "fix_commit": "d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
    "related_commits": [
      "d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
      "d93087973afa26bc0a2d0a5eb5c0fde748bdd107"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
      "commit_date": "2022-03-28T23:25:44Z",
      "author": {
        "login": "jingw",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Block injection attack in ssh public key handling (#673)",
        "length": 129,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 27,
        "deletions": 1
      },
      "files": [
        {
          "filename": "grouper/public_key.py",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -72,6 +72,13 @@ def add_public_key(session, user, public_key_str):\n     except sshpubkeys.InvalidKeyException as e:\n         raise PublicKeyParseError(str(e))\n \n+    # Allowing newlines can lead to injection attacks depending on how the key is\n+    # consumed, such as if it's dumped in an authorized_keys file with a `command`\n+    # restriction.\n+    # Note parsing the key is insufficient to block this.\n+    if \"\\r\" in public_key_str or \"\\n\" in public_key_str:\n+        raise PublicKeyParseError(\"Public key cannot have newlines\")\n+\n     try:\n         get_plugin_proxy().will_add_public_key(pubkey)\n     except PluginRejectedPublicKey as e:"
        },
        {
          "filename": "tests/constants.py",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -16,6 +16,15 @@\n \n SSH_KEY_BAD = \"ssh-rsa AAAblahblahkey some-comment\"\n \n+SSH_KEY_BAD_MULTILINE = SSH_KEY_1 + \"\\r\" + SSH_KEY_2\n+\n+SSH2_KEY_BAD = \"\"\"\\\n+---- BEGIN SSH2 PUBLIC KEY ----\n+foobar: this is a chance to hide bad things\n+AAAAC3NzaC1lZDI1NTE5AAAAIJ5O/AXibtVhySDYn60ATXftAU1oCe4BQubFYoV2juEb\n+---- END SSH2 PUBLIC KEY ----\n+\"\"\"\n+\n SSH_KEY_RSA_1024 = (\n     \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDhKgSsCJR9UyQa/Gsheb5F56hg23CVnCLpmpyC2JMqVEptG9CL83Oft\"\n     \"pOPvEb/785Act4En1VFvwMwTj25VurbG3XI984csiNdWPlM1ke4lHK2PQepSYyZVYn+hhXhzSILNDixhBYeDVv4GOfJM1\""
        },
        {
          "filename": "tests/public_key_test.py",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@\n     get_public_keys_of_user,\n     PublicKeyParseError,\n )\n-from tests.constants import SSH_KEY_1, SSH_KEY_BAD\n+from tests.constants import SSH2_KEY_BAD, SSH_KEY_1, SSH_KEY_BAD, SSH_KEY_BAD_MULTILINE\n from tests.fixtures import session, users  # noqa: F401\n \n \n@@ -41,6 +41,16 @@ def test_bad_key(session, users):  # noqa: F811\n     assert get_public_keys_of_user(session, user.id) == []\n \n \n+@pytest.mark.parametrize(\"key\", [SSH_KEY_BAD_MULTILINE, SSH2_KEY_BAD])\n+def test_multiline_key(key, session, users):  # noqa: F811\n+    user = users[\"cbguder@a.co\"]\n+\n+    with pytest.raises(PublicKeyParseError, match=\"Public key cannot have newlines\"):\n+        add_public_key(session, user, key)\n+\n+    assert get_public_keys_of_user(session, user.id) == []\n+\n+\n @patch(\"grouper.public_key.get_plugin_proxy\")\n def test_rejected_key(get_plugin_proxy, session, users):  # noqa: F811\n     get_plugin_proxy.return_value = PluginProxy([PublicKeyPlugin()])"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4dae2a016ced01399e491964e0d7516113670a8",
            "date": "2023-04-18T20:07:49Z",
            "author_login": "jeichenhofer"
          },
          {
            "sha": "94b2d187dd8f101f066b0521fedc9c252b5184e6",
            "date": "2023-03-17T17:23:11Z",
            "author_login": "akorzo-dbx"
          },
          {
            "sha": "546883b86a4cff5ece062a1f481fc2e0eb12bddd",
            "date": "2023-03-14T18:08:38Z",
            "author_login": "akorzo-dbx"
          },
          {
            "sha": "a603deeae2ef417d8554a7ddc1b728df8c931c2e",
            "date": "2023-03-14T17:55:09Z",
            "author_login": "akorzo-dbx"
          },
          {
            "sha": "2fa45872973c6559fe1b216cceb0bb94732a37cf",
            "date": "2022-12-06T19:48:26Z",
            "author_login": "jeichenhofer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-74",
    "description": "A vulnerability was found in Dropbox merou. It has been classified as critical. Affected is the function add_public_key of the file grouper/public_key.py of the component SSH Public Key Handler. The manipulation of the argument public_key_str leads to injection. It is possible to launch the attack remotely. The name of the patch is d93087973afa26bc0a2d0a5eb5c0fde748bdd107. It is recommended to apply a patch to fix this issue. VDB-216906 is the identifier assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-27T23:15:10.830",
    "last_modified": "2024-11-21T07:35:54.170",
    "fix_date": "2022-03-28T23:25:44Z"
  },
  "references": [
    {
      "url": "https://github.com/dropbox/merou/commit/d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dropbox/merou/pull/673",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.216906",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216906",
      "source": "cna@vuldb.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dropbox/merou/commit/d93087973afa26bc0a2d0a5eb5c0fde748bdd107",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/dropbox/merou/pull/673",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.216906",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://vuldb.com/?id.216906",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.225176",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "merou",
    "owner": "dropbox",
    "created_at": "2014-09-08T00:41:17Z",
    "updated_at": "2024-04-08T20:38:14Z",
    "pushed_at": "2023-04-19T22:06:44Z",
    "size": 3114,
    "stars": 96,
    "forks": 43,
    "open_issues": 0,
    "watchers": 96,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 1224881,
      "HTML": 174235,
      "JavaScript": 6556,
      "CSS": 5551,
      "Dockerfile": 2180,
      "Shell": 816
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:25:57.652928"
  }
}