{
  "cve_id": "CVE-2022-47945",
  "github_data": {
    "repository": "top-think/framework",
    "fix_commit": "c4acb8b4001b98a0078eda25840d33e295a7f099",
    "related_commits": [
      "c4acb8b4001b98a0078eda25840d33e295a7f099",
      "c4acb8b4001b98a0078eda25840d33e295a7f099"
    ],
    "patch_url": "https://github.com/top-think/framework/commit/c4acb8b4001b98a0078eda25840d33e295a7f099.patch",
    "fix_commit_details": {
      "sha": "c4acb8b4001b98a0078eda25840d33e295a7f099",
      "commit_date": "2022-09-14T05:33:59Z",
      "author": {
        "login": "liu21st",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "\u5220\u9664\u5e9f\u5f03\u65b9\u6cd5 \u4f18\u5316\u591a\u8bed\u8a00\u68c0\u6d4b",
        "length": 14,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 80,
        "additions": 13,
        "deletions": 67
      },
      "files": [
        {
          "filename": "src/think/Lang.php",
          "status": "modified",
          "additions": 0,
          "deletions": 54,
          "patch": "@@ -287,58 +287,4 @@ public function get(string $name = null, array $vars = [], string $range = '')\n         return $value;\n     }\n \n-    /**\n-     * \u81ea\u52a8\u4fa6\u6d4b\u8bbe\u7f6e\u83b7\u53d6\u8bed\u8a00\u9009\u62e9\n-     * @deprecated\n-     * @access public\n-     * @param Request $request\n-     * @return string\n-     */\n-    public function detect(Request $request): string\n-    {\n-        // \u81ea\u52a8\u4fa6\u6d4b\u8bbe\u7f6e\u83b7\u53d6\u8bed\u8a00\u9009\u62e9\n-        $langSet = '';\n-\n-        if ($request->get($this->config['detect_var'])) {\n-            // url\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->get($this->config['detect_var']));\n-        } elseif ($request->header($this->config['header_var'])) {\n-            // Header\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->header($this->config['header_var']));\n-        } elseif ($request->cookie($this->config['cookie_var'])) {\n-            // Cookie\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->cookie($this->config['cookie_var']));\n-        } elseif ($request->server('HTTP_ACCEPT_LANGUAGE')) {\n-            // \u81ea\u52a8\u4fa6\u6d4b\u6d4f\u89c8\u5668\u8bed\u8a00\n-            $match = preg_match('/^([a-z\\d\\-]+)/i', $request->server('HTTP_ACCEPT_LANGUAGE'), $matches);\n-            if ($match) {\n-                $langSet = strtolower($matches[1]);\n-                if (isset($this->config['accept_language'][$langSet])) {\n-                    $langSet = $this->config['accept_language'][$langSet];\n-                }\n-            }\n-        }\n-\n-        if (empty($this->config['allow_lang_list']) || in_array($langSet, $this->config['allow_lang_list'])) {\n-            // \u5408\u6cd5\u7684\u8bed\u8a00\n-            $this->range = $langSet;\n-        }\n-\n-        return $this->range;\n-    }\n-\n-    /**\n-     * \u4fdd\u5b58\u5f53\u524d\u8bed\u8a00\u5230Cookie\n-     * @deprecated\n-     * @access public\n-     * @param Cookie $cookie Cookie\u5bf9\u8c61\n-     * @return void\n-     */\n-    public function saveToCookie(Cookie $cookie)\n-    {\n-        if ($this->config['use_cookie']) {\n-            $cookie->set($this->config['cookie_var'], $this->range);\n-        }\n-    }\n-\n }"
        },
        {
          "filename": "src/think/middleware/LoadLangPack.php",
          "status": "modified",
          "additions": 13,
          "deletions": 13,
          "patch": "@@ -70,33 +70,33 @@ protected function detect(Request $request): string\n \n         if ($request->get($this->config['detect_var'])) {\n             // url\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->get($this->config['detect_var']));\n+            $langSet = $request->get($this->config['detect_var']);\n         } elseif ($request->header($this->config['header_var'])) {\n             // Header\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->header($this->config['header_var']));\n+            $langSet = $request->header($this->config['header_var']);\n         } elseif ($request->cookie($this->config['cookie_var'])) {\n             // Cookie\u4e2d\u8bbe\u7f6e\u4e86\u8bed\u8a00\u53d8\u91cf\n-            $langSet = strtolower($request->cookie($this->config['cookie_var']));\n+            $langSet = $request->cookie($this->config['cookie_var']);\n         } elseif ($request->server('HTTP_ACCEPT_LANGUAGE')) {\n             // \u81ea\u52a8\u4fa6\u6d4b\u6d4f\u89c8\u5668\u8bed\u8a00\n-            $match = preg_match('/^([a-z\\d\\-]+)/i', $request->server('HTTP_ACCEPT_LANGUAGE'), $matches);\n-            if ($match) {\n-                $langSet = strtolower($matches[1]);\n-                if (isset($this->config['accept_language'][$langSet])) {\n-                    $langSet = $this->config['accept_language'][$langSet];\n-                }\n+            $langSet = $request->server('HTTP_ACCEPT_LANGUAGE');\n+        }\n+\n+        if (preg_match('/^([a-z\\d\\-]+)/i', $langSet, $matches)) {\n+            $langSet = strtolower($matches[1]);\n+            if (isset($this->config['accept_language'][$langSet])) {\n+                $langSet = $this->config['accept_language'][$langSet];\n             }\n         }\n \n         if (empty($this->config['allow_lang_list']) || in_array($langSet, $this->config['allow_lang_list'])) {\n             // \u5408\u6cd5\u7684\u8bed\u8a00\n-            $range = $langSet;\n-            $this->lang->setLangSet($range);\n+            $this->lang->setLangSet($langSet);\n         } else {\n-            $range = $this->lang->getLangSet();\n+            $langSet = $this->lang->getLangSet();\n         }\n \n-        return $range;\n+        return $langSet;\n     }\n \n     /**"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8faec5c9b7a7f2a66ca3140a57e81bd6cd37567c",
            "date": "2025-01-14T08:04:03Z",
            "author_login": "liu21st"
          },
          {
            "sha": "37e43bf216be82da165c686161713ca638ed95bd",
            "date": "2025-01-14T04:39:13Z",
            "author_login": "liu21st"
          },
          {
            "sha": "3610b6fb01c3373c41c70db872e792420e77d059",
            "date": "2025-01-09T05:07:00Z",
            "author_login": "liu21st"
          },
          {
            "sha": "83f108a49dab99fbef3775d831868dfdc67ff9e7",
            "date": "2025-01-09T03:13:20Z",
            "author_login": "liu21st"
          },
          {
            "sha": "6a4606873233036c4d0412d23f180f0bab23974c",
            "date": "2025-01-08T06:20:46Z",
            "author_login": "liu21st"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "ThinkPHP Framework before 6.0.14 allows local file inclusion via the lang parameter when the language pack feature is enabled (lang_switch_on=true). An unauthenticated and remote attacker can exploit this to execute arbitrary operating system commands, as demonstrated by including pearcmd.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-23T21:15:09.203",
    "last_modified": "2024-11-21T07:32:36.703",
    "fix_date": "2022-09-14T05:33:59Z"
  },
  "references": [
    {
      "url": "https://github.com/top-think/framework/commit/c4acb8b4001b98a0078eda25840d33e295a7f099",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/top-think/framework/compare/v6.0.13...v6.0.14",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tttang.com/archive/1865/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/top-think/framework/commit/c4acb8b4001b98a0078eda25840d33e295a7f099",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/top-think/framework/compare/v6.0.13...v6.0.14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://tttang.com/archive/1865/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.205792",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "framework",
    "owner": "top-think",
    "created_at": "2015-12-24T07:12:35Z",
    "updated_at": "2025-01-14T08:04:23Z",
    "pushed_at": "2025-01-14T08:04:17Z",
    "size": 19057,
    "stars": 2737,
    "forks": 1053,
    "open_issues": 111,
    "watchers": 2737,
    "has_security_policy": false,
    "default_branch": "8.x",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 726954,
      "Smarty": 17443
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:13:12.205989"
  }
}