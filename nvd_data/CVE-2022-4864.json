{
  "cve_id": "CVE-2022-4864",
  "github_data": {
    "repository": "froxlor/froxlor",
    "fix_commit": "f2485ecd9aab8da544b5e12891d82ae6fcff5fc7",
    "related_commits": [
      "f2485ecd9aab8da544b5e12891d82ae6fcff5fc7",
      "f2485ecd9aab8da544b5e12891d82ae6fcff5fc7"
    ],
    "patch_url": "https://github.com/froxlor/froxlor/commit/f2485ecd9aab8da544b5e12891d82ae6fcff5fc7.patch",
    "fix_commit_details": {
      "sha": "f2485ecd9aab8da544b5e12891d82ae6fcff5fc7",
      "commit_date": "2022-12-30T20:43:27Z",
      "author": {
        "login": "d00p",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "adjust Request-class methods to be more flexible",
        "length": 100,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 144,
        "additions": 87,
        "deletions": 57
      },
      "files": [
        {
          "filename": "admin_admins.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if (($page == 'admins' || $page == 'overview') && $userinfo['change_serversettings'] == '1') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_configfiles.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -41,8 +41,8 @@\n \t}\n \n \t// get distro from URL param\n-\t$distribution = Request::get('distribution');\n-\t$reselect = Request::get('reselect', 0);\n+\t$distribution = Request::any('distribution');\n+\t$reselect = Request::any('reselect', 0);\n \n \t// check for possible setting\n \tif (empty($distribution)) {"
        },
        {
          "filename": "admin_cronjobs.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -34,7 +34,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'cronjobs' || $page == 'overview') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_customers.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -42,7 +42,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if (($page == 'customers' || $page == 'overview') && $userinfo['customers'] != '0') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_domains.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,7 +47,7 @@\n use Froxlor\\Validate\\Validate;\n use Froxlor\\CurrentUser;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'domains' || $page == 'overview') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_index.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n use Froxlor\\Validate\\Validate;\n use Froxlor\\Language;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($action == 'logout') {\n \t$log->logAction(FroxlorLogger::ADM_ACTION, LOG_NOTICE, \"logged out\");"
        },
        {
          "filename": "admin_ipsandports.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'ipsandports' || $page == 'overview') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_message.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -33,7 +33,7 @@\n use Froxlor\\UI\\Response;\n use Froxlor\\User;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n $note_type = null;\n $note_msg = null;"
        },
        {
          "filename": "admin_mysqlserver.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -36,7 +36,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'mysqlserver' || $page == 'overview') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_phpsettings.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'overview') {\n \tif ($action == '') {"
        },
        {
          "filename": "admin_plans.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -39,7 +39,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == '' || $page == 'overview') {\n \tif ($action == '') {\n@@ -263,7 +263,7 @@\n \t\t\t}\n \t\t}\n \t} elseif ($action == 'jqGetPlanValues') {\n-\t\t$planid = (int)Request::get('planid', 0);\n+\t\t$planid = (int)Request::any('planid', 0);\n \t\ttry {\n \t\t\t$json_result = HostingPlans::getLocal($userinfo, [\n \t\t\t\t'id' => $planid"
        },
        {
          "filename": "admin_settings.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -112,7 +112,7 @@\n \t\tif ($_part == '' || $_part == 'all') {\n \t\t\tUI::view('settings/index.html.twig', ['fields' => $fields]);\n \t\t} else {\n-\t\t\t$em = Request::get('em', '');\n+\t\t\t$em = Request::any('em', '');\n \t\t\tUI::view('settings/detailpart.html.twig', ['fields' => $fields, 'em' => $em]);\n \t\t}\n \t}"
        },
        {
          "filename": "admin_templates.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -39,9 +39,9 @@\n use Froxlor\\Validate\\Validate;\n use Froxlor\\CurrentUser;\n \n-$id = (int)Request::get('id');\n-$subjectid = intval(Request::get('subjectid'));\n-$mailbodyid = intval(Request::get('mailbodyid'));\n+$id = (int)Request::any('id');\n+$subjectid = intval(Request::any('subjectid'));\n+$mailbodyid = intval(Request::any('mailbodyid'));\n \n $available_templates = [\n \t'createcustomer',"
        },
        {
          "filename": "admin_traffic.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -31,7 +31,7 @@\n use Froxlor\\UI\\Request;\n use Froxlor\\UI\\Response;\n \n-$range = Request::get('range', 'currentmonth');\n+$range = Request::any('range', 'currentmonth');\n \n if ($page == 'overview' || $page == 'customers') {\n \ttry {"
        },
        {
          "filename": "api_keys.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -49,7 +49,7 @@\n // and therefore does not need to require lib/init.php\n \n $del_stmt = Database::prepare(\"DELETE FROM `\" . TABLE_API_KEYS . \"` WHERE id = :id\");\n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n // do the delete and then just show a success-message and the apikeys list again\n if ($action == 'delete' && $id > 0) {"
        },
        {
          "filename": "customer_domains.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -47,13 +47,13 @@\n \tResponse::redirectTo('customer_index.php');\n }\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'overview' || $page == 'domains') {\n \tif ($action == '') {\n \t\t$log->logAction(FroxlorLogger::USR_ACTION, LOG_NOTICE, \"viewed customer_domains::domains\");\n \n-\t\t$parentdomain_id = (int)Request::get('pid', '0');\n+\t\t$parentdomain_id = (int)Request::any('pid', '0');\n \n \t\ttry {\n \t\t\t$domain_list_data = include_once dirname(__FILE__) . '/lib/tablelisting/customer/tablelisting.domains.php';"
        },
        {
          "filename": "customer_email.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -47,7 +47,7 @@\n \tResponse::redirectTo('customer_index.php');\n }\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'overview' || $page == 'emails') {\n \tif ($action == '') {"
        },
        {
          "filename": "customer_extras.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -46,7 +46,7 @@\n \tResponse::redirectTo('customer_index.php');\n }\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'overview' || $page == 'htpasswds') {\n \t// redirect if this customer sub-page is hidden via settings"
        },
        {
          "filename": "customer_ftp.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -44,7 +44,7 @@\n \tResponse::redirectTo('customer_index.php');\n }\n \n-$id = (int)Request::get('id', 0);\n+$id = (int)Request::any('id', 0);\n \n if ($page == 'overview' || $page == 'accounts') {\n \tif ($action == '') {"
        },
        {
          "filename": "customer_mysql.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -50,7 +50,7 @@\n $sql_root = Database::getSqlData();\n Database::needRoot(false);\n \n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n if ($page == 'overview' || $page == 'mysqls') {\n \tif ($action == '') {"
        },
        {
          "filename": "customer_traffic.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n \tResponse::redirectTo('customer_index.php');\n }\n \n-$range = Request::get('range', 'currentyear');\n+$range = Request::any('range', 'currentyear');\n \n if ($page == 'current') {\n \t$range = 'currentmonth';"
        },
        {
          "filename": "dns_editor.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,7 +40,7 @@\n // This file is being included in admin_domains and customer_domains\n // and therefore does not need to require lib/init.php\n \n-$domain_id = (int)Request::get('domain_id');\n+$domain_id = (int)Request::any('domain_id');\n \n $record = isset($_POST['dns_record']) ? trim($_POST['dns_record']) : null;\n $type = isset($_POST['dns_type']) ? $_POST['dns_type'] : 'A';"
        },
        {
          "filename": "error_report.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@\n // This file is being included in admin_domains and customer_domains\n // and therefore does not need to require lib/init.php\n \n-$errid = Request::get('errorid');\n+$errid = Request::any('errorid');\n \n if (!empty($errid)) {\n \t// read error file"
        },
        {
          "filename": "lib/Froxlor/Ajax/Ajax.php",
          "status": "modified",
          "additions": 17,
          "deletions": 16,
          "patch": "@@ -53,8 +53,8 @@ class Ajax\n \t */\n \tpublic function __construct()\n \t{\n-\t\t$this->action = $_GET['action'] ?? $_POST['action'] ?? null;\n-\t\t$this->theme = $_GET['theme'] ?? 'Froxlor';\n+\t\t$this->action = Request::any('action');\n+\t\t$this->theme = Request::any('theme', 'Froxlor');\n \n \t\tUI::sendHeaders();\n \t\tUI::sendSslHeaders();\n@@ -112,7 +112,8 @@ private function getNewsfeed()\n \t\t$feed = \"https://inside.froxlor.org/news/\";\n \n \t\t// Set custom feed if provided\n-\t\tif (isset($_GET['role']) && $_GET['role'] == \"customer\") {\n+\t\t$role = Request::get('role');\n+\t\tif ($role == \"customer\") {\n \t\t\t$custom_feed = Settings::Get(\"customer.news_feed_url\");\n \t\t\tif (!empty(trim($custom_feed))) {\n \t\t\t\t$feed = $custom_feed;\n@@ -140,7 +141,7 @@ private function getNewsfeed()\n \n \t\tif ($news === false) {\n \t\t\t$err = [];\n-\t\t\tforeach(libxml_get_errors() as $error) {\n+\t\t\tforeach (libxml_get_errors() as $error) {\n \t\t\t\t$err[] = $error->message;\n \t\t\t}\n \t\t\treturn $this->errorResponse(\n@@ -205,7 +206,7 @@ private function getUpdateCheck()\n \t\t} catch (Exception $e) {\n \t\t\t// don't display anything if just not allowed due to permissions\n \t\t\tif ($e->getCode() != 403) {\n-\t\t\t\tResponse::dynamicError($e->getMessage());\n+\t\t\t\treturn $this->errorResponse($e->getMessage(), $e->getCode());\n \t\t\t}\n \t\t}\n \t}\n@@ -215,7 +216,7 @@ private function getUpdateCheck()\n \t */\n \tprivate function searchGlobal()\n \t{\n-\t\t$searchtext = Request::get('searchtext');\n+\t\t$searchtext = Request::any('searchtext');\n \n \t\t$result = [];\n \n@@ -236,27 +237,27 @@ private function searchGlobal()\n \tprivate function updateTablelisting()\n \t{\n \t\t$columns = [];\n-\t\tforeach ((Request::get('columns') ?? []) as $value) {\n+\t\tforeach ((Request::any('columns') ?? []) as $value) {\n \t\t\t$columns[] = $value;\n \t\t}\n \t\tif (!empty($columns)) {\n-\t\t\tListing::storeColumnListingForUser([Request::get('listing') => $columns]);\n+\t\t\tListing::storeColumnListingForUser([Request::any('listing') => $columns]);\n \t\t\treturn $this->jsonResponse($columns);\n \t\t}\n \t\treturn $this->errorResponse('At least one column must be selected', 406);\n \t}\n \n \tprivate function resetTablelisting()\n \t{\n-\t\tListing::deleteColumnListingForUser([Request::get('listing') => []]);\n+\t\tListing::deleteColumnListingForUser([Request::any('listing') => []]);\n \t\treturn $this->jsonResponse([]);\n \t}\n \n \tprivate function editApiKey()\n \t{\n-\t\t$keyid = isset($_POST['id']) ? (int)$_POST['id'] : 0;\n-\t\t$allowed_from = isset($_POST['allowed_from']) ? $_POST['allowed_from'] : \"\";\n-\t\t$valid_until = isset($_POST['valid_until']) ? $_POST['valid_until'] : \"\";\n+\t\t$keyid = Request::post('id', 0);\n+\t\t$allowed_from = Request::post('allowed_from', \"\");\n+\t\t$valid_until = Request::post('valid_until', \"\");\n \n \t\tif (empty($keyid)) {\n \t\t\treturn $this->errorResponse('Invalid call', 406);\n@@ -318,9 +319,9 @@ private function editApiKey()\n \tprivate function getConfigDetails()\n \t{\n \t\tif (isset($this->userinfo['adminsession']) && $this->userinfo['adminsession'] == 1 && $this->userinfo['change_serversettings'] == 1) {\n-\t\t\t$distribution = isset($_POST['distro']) ? $_POST['distro'] : \"\";\n-\t\t\t$section = isset($_POST['section']) ? $_POST['section'] : \"\";\n-\t\t\t$daemon = isset($_POST['daemon']) ? $_POST['daemon'] : \"\";\n+\t\t\t$distribution = Request::post('distro', \"\");\n+\t\t\t$section = Request::post('section', \"\");\n+\t\t\t$daemon = Request::post('daemon', \"\");\n \n \t\t\t// validate distribution config-xml exists\n \t\t\t$config_dir = FileDir::makeCorrectDir(Froxlor::getInstallDir() . '/lib/configfiles/');\n@@ -375,7 +376,7 @@ private function getConfigJsonExport()\n \t */\n \tprivate function loadLanguageString()\n \t{\n-\t\t$langid = isset($_POST['langid']) ? $_POST['langid'] : \"\";\n+\t\t$langid = Request::post('langid', \"\");\n \t\tif (preg_match('/^([a-zA-Z\\.]+)$/', $langid)) {\n \t\t\treturn $this->jsonResponse(lng($langid));\n \t\t}"
        },
        {
          "filename": "lib/Froxlor/Install/Install.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -80,8 +80,8 @@ public function __construct(array $cliData = [])\n \t\t$this->formfield = require dirname(__DIR__, 3) . '/lib/formfields/install/formfield.install.php';\n \n \t\t// set actual step\n-\t\t$this->currentStep = $cliData['step'] ?? Request::get('step', 0);\n-\t\t$this->extendedView = $cliData['extended'] ?? Request::get('extended', 0);\n+\t\t$this->currentStep = $cliData['step'] ?? Request::any('step', 0);\n+\t\t$this->extendedView = $cliData['extended'] ?? Request::any('extended', 0);\n \t\t$this->maxSteps = count($this->formfield['install']['sections']);\n \n \t\t// set actual php version and extensions\n@@ -114,7 +114,7 @@ public function __construct(array $cliData = [])\n \tpublic function handle(): void\n \t{\n \t\t// handle form data\n-\t\tif (!is_null(Request::get('submit')) && $this->currentStep) {\n+\t\tif (!is_null(Request::any('submit')) && $this->currentStep) {\n \t\t\ttry {\n \t\t\t\t$this->handleFormData($this->formfield['install']);\n \t\t\t} catch (Exception $e) {\n@@ -266,7 +266,7 @@ private function validateRequest(array $fields): array\n \t{\n \t\t$attributes = [];\n \t\tforeach ($fields as $name => $field) {\n-\t\t\t$attributes[$name] = $this->validateAttribute(Request::get($name), $field);\n+\t\t\t$attributes[$name] = $this->validateAttribute(Request::any($name), $field);\n \t\t\tif (isset($field['next_to'])) {\n \t\t\t\t$attributes = array_merge($attributes, $this->validateRequest($field['next_to']));\n \t\t\t}"
        },
        {
          "filename": "lib/Froxlor/UI/Request.php",
          "status": "modified",
          "additions": 30,
          "deletions": 2,
          "patch": "@@ -31,19 +31,47 @@\n class Request\n {\n \t/**\n-\t * Get key from current request.\n+\t * Get key from current $_GET or $_POST request.\n \t *\n \t * @param $key\n \t * @param string|null $default\n \t * @return mixed|string|null\n \t */\n-\tpublic static function get($key, string $default = null)\n+\tpublic static function any($key, string $default = null)\n \t{\n \t\tself::cleanAll();\n \n \t\treturn $_GET[$key] ?? $_POST[$key] ?? $default;\n \t}\n \n+\t/**\n+\t * Get key from current $_GET request.\n+\t *\n+\t * @param $key\n+\t * @param string|null $default\n+\t * @return mixed|string|null\n+\t */\n+\tpublic static function get($key, string $default = null)\n+\t{\n+\t\tself::cleanAll();\n+\n+\t\treturn $_GET[$key] ?? $default;\n+\t}\n+\n+\t/**\n+\t * Get key from current $_POST request.\n+\t *\n+\t * @param $key\n+\t * @param string|null $default\n+\t * @return mixed|string|null\n+\t */\n+\tpublic static function post($key, string $default = null)\n+\t{\n+\t\tself::cleanAll();\n+\n+\t\treturn $_POST[$key] ?? $default;\n+\t}\n+\n \t/**\n \t * Check for xss attempts and clean important globals and\n \t * unsetting every variable registered in $_REQUEST and as variable itself"
        },
        {
          "filename": "lib/ajax.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -42,5 +42,6 @@\n try {\n \techo (new Ajax)->handle();\n } catch (Exception $e) {\n+\theader(\"Content-Type: application/json\");\n \techo \\Froxlor\\Api\\Response::jsonErrorResponse($e->getMessage(), 500);\n }"
        },
        {
          "filename": "lib/functions.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,5 +43,5 @@ function old(string $identifier, string $default = null, string $session = null)\n \tif ($session && isset($_SESSION[$session])) {\n \t\treturn $_SESSION[$session][$identifier] ?? $default;\n \t}\n-\treturn Request::get($identifier, $default);\n+\treturn Request::any($identifier, $default);\n }"
        },
        {
          "filename": "lib/init.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -295,9 +295,9 @@\n unset($js);\n unset($css);\n \n-$action = Request::get('action');\n-$page = Request::get('page', 'overview');\n-$gSearchText = Request::get('searchtext');\n+$action = Request::any('action');\n+$page = Request::any('page', 'overview');\n+$gSearchText = Request::any('searchtext');\n \n // clear request data\n if (!$action && isset($_SESSION)) {"
        },
        {
          "filename": "logfiles_viewer.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -39,8 +39,8 @@\n // This file is being included in admin_domains and customer_domains\n // and therefore does not need to require lib/init.php\n \n-$domain_id = (int)Request::get('domain_id');\n-$last_n = (int)Request::get('number_of_lines', 100);\n+$domain_id = (int)Request::any('domain_id');\n+$last_n = (int)Request::any('number_of_lines', 100);\n \n // user's with logviewenabled = false\n if (AREA != 'admin' && $userinfo['logviewenabled'] != '1') {"
        },
        {
          "filename": "ssl_certificates.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -43,7 +43,7 @@\n // and therefore does not need to require lib/init.php\n \n $success_message = \"\";\n-$id = (int)Request::get('id');\n+$id = (int)Request::any('id');\n \n // do the delete and then just show a success-message and the certificates list again\n if ($action == 'delete') {"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec42003367df64c5645a9d5ee5bcd95c75a82b6c",
            "date": "2025-01-12T15:53:05Z",
            "author_login": "d00p"
          },
          {
            "sha": "fde43f80600f1035e1e3d2297411b666d805549a",
            "date": "2025-01-12T09:27:44Z",
            "author_login": "d00p"
          },
          {
            "sha": "a43d53d54034805e3e404702a01312fa0c40b623",
            "date": "2025-01-12T09:27:02Z",
            "author_login": "d00p"
          },
          {
            "sha": "3638dc08ea4fe55ce0d2458cdcb436cfb5697ed3",
            "date": "2024-12-24T08:34:59Z",
            "author_login": "d00p"
          },
          {
            "sha": "c2d166c86666f4c50c1402c1b3a2986ddabeee90",
            "date": "2024-12-19T07:59:00Z",
            "author_login": "d00p"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-88",
    "description": "Argument Injection in GitHub repository froxlor/froxlor prior to 2.0.0-beta1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2022-12-30T23:15:11.910",
    "last_modified": "2024-11-21T07:36:05.780",
    "fix_date": "2022-12-30T20:43:27Z"
  },
  "references": [
    {
      "url": "https://github.com/froxlor/froxlor/commit/f2485ecd9aab8da544b5e12891d82ae6fcff5fc7",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b7140709-8f84-4f19-9463-78669fa2175b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/froxlor/froxlor/commit/f2485ecd9aab8da544b5e12891d82ae6fcff5fc7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b7140709-8f84-4f19-9463-78669fa2175b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.239321",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Froxlor",
    "owner": "froxlor",
    "created_at": "2012-03-06T15:14:46Z",
    "updated_at": "2025-01-12T15:57:15Z",
    "pushed_at": "2025-01-12T15:57:10Z",
    "size": 28867,
    "stars": 1651,
    "forks": 457,
    "open_issues": 35,
    "watchers": 1651,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "extras",
      "main"
    ],
    "languages": {
      "PHP": 3752037,
      "Twig": 153143,
      "HTML": 28494,
      "SCSS": 8015,
      "JavaScript": 942
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:34:15.893221"
  }
}