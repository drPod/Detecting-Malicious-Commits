{
  "cve_id": "CVE-2022-4903",
  "github_data": {
    "repository": "codenameone/CodenameOne",
    "fix_commit": "dad49c9ef26a598619fc48d2697151a02987d478",
    "related_commits": [
      "dad49c9ef26a598619fc48d2697151a02987d478",
      "dad49c9ef26a598619fc48d2697151a02987d478"
    ],
    "patch_url": "https://github.com/codenameone/CodenameOne/commit/dad49c9ef26a598619fc48d2697151a02987d478.patch",
    "fix_commit_details": {
      "sha": "dad49c9ef26a598619fc48d2697151a02987d478",
      "commit_date": "2022-04-23T04:50:21Z",
      "author": {
        "login": "shai-almog",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed #3583 Pending Intent vulnerability",
        "length": 40,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 85,
        "additions": 54,
        "deletions": 31
      },
      "files": [
        {
          "filename": "Ports/Android/src/com/codename1/impl/android/AndroidImplementation.java",
          "status": "modified",
          "additions": 37,
          "deletions": 9,
          "patch": "@@ -775,7 +775,36 @@ private static PushActionCategory[] getInstalledPushActionCategories(Context con\n         }\r\n         return out.toArray(new PushActionCategory[out.size()]);\r\n     }\r\n-    \r\n+\r\n+    public static PendingIntent createPendingIntent(Context ctx, int value, Intent intent) {\r\n+        if (android.os.Build.VERSION.SDK_INT >= 23) {\r\n+            // PendingIntent.FLAG_IMMUTABLE\r\n+            return PendingIntent.getActivity(ctx, value, newIntent, 67108864);\r\n+        } else {\r\n+            return PendingIntent.getActivity(ctx, value, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n+        }\r\n+    }\r\n+\r\n+    public static PendingIntent getPendingIntent(Context ctx, int value, Intent intent) {\r\n+        if (android.os.Build.VERSION.SDK_INT >= 23) {\r\n+            // PendingIntent.FLAG_IMMUTABLE\r\n+            return PendingIntent.getService(ctx, value, newIntent, 67108864);\r\n+        } else {\r\n+            return PendingIntent.getService(ctx, value, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n+        }\r\n+        PendingIntent.getService\r\n+    }\r\n+\r\n+    public static PendingIntent getBroadcastPendingIntent(Context ctx, int value, Intent intent) {\r\n+        if (android.os.Build.VERSION.SDK_INT >= 23) {\r\n+            // PendingIntent.FLAG_IMMUTABLE\r\n+            return PendingIntent.getBroadcast(ctx, value, newIntent, 67108864);\r\n+        } else {\r\n+            return PendingIntent.getBroadcast(ctx, value, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n+        }\r\n+        PendingIntent.getService\r\n+    }\r\n+\r\n     /**\r\n      * Adds actions to a push notification.  This is called by the Push broadcast receiver probably before \r\n      * Codename One is initialized\r\n@@ -811,7 +840,7 @@ public static void addActionsToNotification(PushActionsProvider provider, String\n         for (PushAction action : category.getActions()) {\r\n             Intent newIntent = (Intent)targetIntent.clone();\r\n             newIntent.putExtra(\"pushActionId\", action.getId());\r\n-            PendingIntent contentIntent = PendingIntent.getActivity(context, requestCode++, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n+            PendingIntent contentIntent = createPendingIntent(context, requestCode++, newIntent);\r\n             try {\r\n                 int iconId = 0;\r\n                 try { iconId = Integer.parseInt(action.getIcon());} catch (Exception ex){}\r\n@@ -7093,7 +7122,7 @@ public Object notifyStatusBar(String tickerText, String contentTitle,\n \r\n         Intent notificationIntent = new Intent();\r\n         notificationIntent.setComponent(activityComponentName);\r\n-        PendingIntent contentIntent = PendingIntent.getActivity(getContext(), 0, notificationIntent, 0);\r\n+        PendingIntent contentIntent = createPendingIntent(getContext(), 0, notificationIntent);\r\n \r\n \r\n         NotificationCompat.Builder builder = new NotificationCompat.Builder(getContext())\r\n@@ -10416,20 +10445,19 @@ public void scheduleLocalNotification(LocalNotification notif, long firstTime, i\n             //intent.putExtra(\"backgroundClass\", getBackgroundLocationListener().getName());\r\n             //an ugly workaround to the putExtra bug \r\n             intent.setData(Uri.parse(\"http://codenameone.com/a?\" + getBackgroundFetchListener().getClass().getName()));\r\n-            PendingIntent pendingIntent = PendingIntent.getService(context, 0,\r\n-                    intent,\r\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\r\n+            PendingIntent pendingIntent = getPendingIntent(context, 0,\r\n+                    intent);\r\n             notificationIntent.putExtra(LocalNotificationPublisher.BACKGROUND_FETCH_INTENT, pendingIntent);\r\n \r\n         } else {\r\n             contentIntent.setData(Uri.parse(\"http://codenameone.com/a?LocalNotificationID=\"+Uri.encode(notif.getId())));\r\n         }\r\n-        PendingIntent pendingContentIntent = PendingIntent.getActivity(getContext(), 0, contentIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n+        PendingIntent pendingContentIntent = createPendingIntent(getContext(), 0, contentIntent);\r\n \r\n         notificationIntent.putExtra(LocalNotificationPublisher.NOTIFICATION_INTENT, pendingContentIntent);\r\n \r\n \r\n-        PendingIntent pendingIntent = PendingIntent.getBroadcast(getContext(), 0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n+        PendingIntent pendingIntent = getBroadcastPendingIntent(getContext(), 0, notificationIntent);\r\n \r\n         AlarmManager alarmManager = (AlarmManager) getContext().getSystemService(Context.ALARM_SERVICE);\r\n         if (BACKGROUND_FETCH_NOTIFICATION_ID.equals(notif.getId())) {\r\n@@ -10462,7 +10490,7 @@ public void cancelLocalNotification(String notificationId) {\n         Intent notificationIntent = new Intent(getContext(), LocalNotificationPublisher.class);\r\n         notificationIntent.setAction(getContext().getApplicationInfo().packageName + \".\" + notificationId);\r\n \r\n-        PendingIntent pendingIntent = PendingIntent.getBroadcast(getContext(), 0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n+        PendingIntent pendingIntent = getBroadcastPendingIntent(getContext(), 0, notificationIntent);\r\n         AlarmManager alarmManager = (AlarmManager) getContext().getSystemService(Context.ALARM_SERVICE);\r\n         alarmManager.cancel(pendingIntent);\r\n     }\r"
        },
        {
          "filename": "Ports/Android/src/com/codename1/impl/android/CodenameOneActivity.java",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -428,15 +428,15 @@ public boolean isBackground() {\n     public void registerForPush(String key) {\n         Intent registrationIntent = new Intent(\"com.google.android.c2dm.intent.REGISTER\");\n         registrationIntent.setPackage(\"com.google.android.gms\");\n-        registrationIntent.putExtra(\"app\", PendingIntent.getBroadcast(this, 0, new Intent(), 0)); // boilerplate\n+        registrationIntent.putExtra(\"app\", AndroidImplementation.getBroadcastPendingIntent(this, 0, new Intent())); // boilerplate\n         registrationIntent.putExtra(\"sender\", key);\n         startService(registrationIntent);\n     }\n \n     public void stopReceivingPush() {\n         Intent unregIntent = new Intent(\"com.google.android.c2dm.intent.UNREGISTER\");\n         unregIntent.setPackage(\"com.google.android.gms\");\n-        unregIntent.putExtra(\"app\", PendingIntent.getBroadcast(this, 0, new Intent(), 0));\n+        unregIntent.putExtra(\"app\", AndroidImplementation.getBroadcastPendingIntent(this, 0, new Intent()));\n         startService(unregIntent);\n     }\n "
        },
        {
          "filename": "Ports/Android/src/com/codename1/impl/android/PushNotificationService.java",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -103,7 +103,8 @@ public void onDestroy() {\n     \n     public abstract PushCallback getPushCallbackInstance();\n     public abstract Class getStubClass();\n-    \n+\n+\n     @Override\n     public void push(final String value) {\n         final PushCallback callback = getPushCallbackInstance();\n@@ -116,7 +117,7 @@ public void run() {\n         } else {\n             NotificationManager nm = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);\n             Intent newIntent = new Intent(this, getStubClass());\n-            PendingIntent contentIntent = PendingIntent.getActivity(this, 0, newIntent, PendingIntent.FLAG_CANCEL_CURRENT);\n+            PendingIntent contentIntent = AndroidImplementation.createPendingIntent(this, 0, newIntent);\n \n \n "
        },
        {
          "filename": "Ports/Android/src/com/codename1/location/AndroidLocationPlayServiceManager.java",
          "status": "modified",
          "additions": 10,
          "deletions": 14,
          "patch": "@@ -189,9 +189,8 @@ public void run() {\n                             if (bgListenerClass != null) {\r\n                                 intent.setData(Uri.parse(\"http://codenameone.com/a?\" + bgListenerClass.getName()));\r\n                             }\r\n-                            PendingIntent pendingIntent = PendingIntent.getService(context, 0,\r\n-                                    intent,\r\n-                                    PendingIntent.FLAG_UPDATE_CURRENT);\r\n+                            PendingIntent pendingIntent = AndroidImplementation.getPendingIntent(context, 0,\r\n+                                    intent);\r\n                             inMemoryBackgroundLocationListener = AndroidLocationPlayServiceManager.this;\r\n \r\n \r\n@@ -228,16 +227,15 @@ private PendingIntent createBackgroundPendingIntent(boolean forceService) {\n             Intent intent = new Intent(context, BackgroundLocationBroadcastReceiver.class);\r\n             intent.setData(Uri.parse(\"http://codenameone.com/a?\" + bgListenerClass.getName()));\r\n             intent.setAction(BackgroundLocationBroadcastReceiver.ACTION_PROCESS_UPDATES);\r\n-            PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n+            PendingIntent pendingIntent = AndroidImplementation.getBroadcastPendingIntent(context, 0, intent);\r\n             return pendingIntent;\r\n         } else {\r\n \r\n \r\n             Intent intent = new Intent(context, BackgroundLocationHandler.class);\r\n             intent.setData(Uri.parse(\"http://codenameone.com/a?\" + bgListenerClass.getName()));\r\n-            PendingIntent pendingIntent = PendingIntent.getService(context, 0,\r\n-                    intent,\r\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\r\n+            PendingIntent pendingIntent = AndroidImplementation.getPendingIntent(context, 0,\r\n+                    intent);\r\n             return pendingIntent;\r\n         }\r\n     }\r\n@@ -290,9 +288,8 @@ public void run() {\n                             if (bgListenerClass != null) {\r\n                                 intent.putExtra(\"backgroundClass\", bgListenerClass.getName());\r\n                             }\r\n-                            PendingIntent pendingIntent = PendingIntent.getService(context, 0,\r\n-                                    intent,\r\n-                                    PendingIntent.FLAG_UPDATE_CURRENT);\r\n+                            PendingIntent pendingIntent = AndroidImplementation.getPendingIntent(context, 0,\r\n+                                    intent);\r\n \r\n                             //LocationServices.FusedLocationApi.removeLocationUpdates(getmGoogleApiClient(), pendingIntent);\r\n                             removeLocationUpdates(context, pendingIntent);\r\n@@ -481,16 +478,15 @@ private PendingIntent createGeofencePendingIntent(Class geofenceListenerClass, c\n             intent.setAction(BackgroundLocationBroadcastReceiver.ACTION_PROCESS_GEOFENCE_TRANSITIONS);\r\n             intent.setData(Uri.parse(\"http://codenameone.com/a?\" + geofenceListenerClass.getName()));\r\n             //intent.setAction(BackgroundLocationBroadcastReceiver.ACTION_PROCESS_GEOFENCE_TRANSITIONS);\r\n-            geofencePendingIntent = PendingIntent.getBroadcast(AndroidNativeUtil.getContext().getApplicationContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n+            geofencePendingIntent = AndroidImplementation.getBroadcastPendingIntent(AndroidNativeUtil.getContext().getApplicationContext(), 0, intent);\r\n             return geofencePendingIntent;\r\n         } else {\r\n \r\n             Intent intent = new Intent(context, GeofenceHandler.class);\r\n             intent.putExtra(\"geofenceClass\", geofenceListenerClass.getName());\r\n             intent.putExtra(\"geofenceID\", gf.getId());\r\n-            PendingIntent pendingIntent = PendingIntent.getService(context, 0,\r\n-                    intent,\r\n-                    PendingIntent.FLAG_UPDATE_CURRENT);\r\n+            PendingIntent pendingIntent = AndroidImplementation.getPendingIntent(context, 0,\r\n+                    intent);\r\n \r\n \r\n             return pendingIntent;\r"
        },
        {
          "filename": "Ports/Android/src/com/codename1/media/BackgroundAudioService.java",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -53,6 +53,7 @@\n \n import android.text.TextUtils;\n \n+import com.codename1.impl.android.AndroidImplementation;\n import com.codename1.ui.Display;\n \n \n@@ -267,9 +268,6 @@ void showPausedNotification() {\n     }\n \n \n-\n-\n-\n     private void initMediaSession() {\n         ComponentName mediaButtonReceiver = new ComponentName(getApplicationContext(), MediaButtonReceiver.class);\n         mMediaSessionCompat = new MediaSessionCompat(getApplicationContext(), \"Tag\", mediaButtonReceiver, null);\n@@ -279,7 +277,7 @@ private void initMediaSession() {\n \n         Intent mediaButtonIntent = new Intent(Intent.ACTION_MEDIA_BUTTON);\n         mediaButtonIntent.setClass(this, MediaButtonReceiver.class);\n-        PendingIntent pendingIntent = PendingIntent.getBroadcast(this, 0, mediaButtonIntent, 0);\n+        PendingIntent pendingIntent = AndroidImplementation.getBroadcastPendingIntent(this, 0, mediaButtonIntent);\n         mMediaSessionCompat.setMediaButtonReceiver(pendingIntent);\n \n         setSessionToken(mMediaSessionCompat.getSessionToken());"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1ef5fffbb5ed71515aa4ec09f77745cf0d07bf0d",
            "date": "2024-12-15T16:28:08Z",
            "author_login": "shannah"
          },
          {
            "sha": "329216c760660a63198c26b0e87224476cfa2760",
            "date": "2024-11-24T22:53:53Z",
            "author_login": "shannah"
          },
          {
            "sha": "b4185aadeb1f7ac1eee71bc20fb6fd9f9bb4575a",
            "date": "2024-11-16T06:14:05Z",
            "author_login": "ImmediandoSrl"
          },
          {
            "sha": "ce30484f7cec4d7f8827a09037e4fdde6517b713",
            "date": "2024-10-26T15:09:41Z",
            "author_login": "shannah"
          },
          {
            "sha": "97c6c016f4bbc26e65ca5508efe709cf9b8ce4ce",
            "date": "2024-10-19T08:25:18Z",
            "author_login": "shai-almog"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-927",
    "description": "A vulnerability was found in CodenameOne 7.0.70. It has been classified as problematic. Affected is an unknown function. The manipulation leads to use of implicit intent for sensitive communication. It is possible to launch the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 7.0.71 is able to address this issue. The patch is identified as dad49c9ef26a598619fc48d2697151a02987d478. It is recommended to upgrade the affected component. VDB-220470 is the identifier assigned to this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-02-10T15:15:11.717",
    "last_modified": "2024-11-21T07:36:12.817",
    "fix_date": "2022-04-23T04:50:21Z"
  },
  "references": [
    {
      "url": "https://github.com/codenameone/CodenameOne/commit/dad49c9ef26a598619fc48d2697151a02987d478",
      "source": "cna@vuldb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/codenameone/CodenameOne/issues/3583",
      "source": "cna@vuldb.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/codenameone/CodenameOne/releases/tag/7.0.71",
      "source": "cna@vuldb.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.220470",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://vuldb.com/?id.220470",
      "source": "cna@vuldb.com",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://github.com/codenameone/CodenameOne/commit/dad49c9ef26a598619fc48d2697151a02987d478",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/codenameone/CodenameOne/issues/3583",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/codenameone/CodenameOne/releases/tag/7.0.71",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://vuldb.com/?ctiid.220470",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required"
      ]
    },
    {
      "url": "https://vuldb.com/?id.220470",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Permissions Required"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:04.011583",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "CodenameOne",
    "owner": "codenameone",
    "created_at": "2015-03-27T07:37:42Z",
    "updated_at": "2025-01-12T04:54:48Z",
    "pushed_at": "2024-12-20T05:01:10Z",
    "size": 223714,
    "stars": 1735,
    "forks": 414,
    "open_issues": 633,
    "watchers": 1735,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 26262592,
      "C#": 1923833,
      "Objective-C": 1147447,
      "C": 272453,
      "HTML": 254778,
      "C++": 73666,
      "Shell": 18048,
      "JavaScript": 4054,
      "PHP": 2999,
      "CSS": 2285,
      "Batchfile": 222
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T21:40:28.696796"
  }
}