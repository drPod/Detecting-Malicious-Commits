{
  "cve_id": "CVE-2022-4969",
  "github_data": {
    "repository": "bwoodsend/rockhopper",
    "fix_commit": "1a15fad5e06ae693eb9b8908363d2c8ef455104e",
    "related_commits": [
      "1a15fad5e06ae693eb9b8908363d2c8ef455104e",
      "1a15fad5e06ae693eb9b8908363d2c8ef455104e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1a15fad5e06ae693eb9b8908363d2c8ef455104e",
      "commit_date": "2022-05-22T18:58:16Z",
      "author": {
        "login": "bwoodsend",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix a potential security exploit in RaggedArray.loads(buffer, ldtype=np.uint64).",
        "length": 555,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 49,
        "additions": 47,
        "deletions": 2
      },
      "files": [
        {
          "filename": "rockhopper/src/ragged_array.c",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -59,8 +59,9 @@ int count_rows(void * raw, int raw_length, int length_power, int big_endian,\n \n   int rows = 0;\n \n+  void * start = raw;\n   void * end = raw + raw_length;\n-  while (raw <= end - (1 << length_power)) {\n+  while (raw <= end - (1 << length_power) && raw >= start) {\n     uint64_t length = read(raw);\n     raw += (1 << length_power);\n     raw += length * itemsize;"
        },
        {
          "filename": "setup.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -34,7 +34,7 @@\n     extras_require={\n         \"test\": [\n             'pytest>=3', 'pytest-order', 'coverage', 'pytest-cov',\n-            'coverage-conditional-plugin'\n+            'coverage-conditional-plugin', 'hypothesis'\n         ]\n     },\n     license=\"MIT license\","
        },
        {
          "filename": "tests/test_io.py",
          "status": "modified",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -7,6 +7,7 @@\n import numpy as np\n import pytest\n from cslug import ptr\n+from hypothesis import given, strategies, settings, Verbosity, example\n \n from rockhopper import RaggedArray\n from rockhopper._ragged_array import _2_power, _big_endian\n@@ -61,6 +62,49 @@ def test_dump_load(dtype, byteorder):\n     assert consumed == len(bin)\n \n \n+int_types = [\n+    np.uint8, np.uint16, np.uint32, np.uint64,\n+    np.int8, np.int16, np.int32, np.int64,\n+]\n+blob = bytes(range(256)) + bytes(range(256))[::-1]\n+\n+\n+@pytest.mark.parametrize(\"dtype\", int_types)\n+@pytest.mark.parametrize(\"ldtype\", int_types)\n+def test_loads_pointer_overflow_guard(dtype, ldtype):\n+    \"\"\"Test that the check for pointer overflowing caused by reading a huge row\n+    length works.\"\"\"\n+    for i in range(-30, len(blob)):\n+        try:\n+            RaggedArray.loads(blob[i: i+30], dtype=dtype, ldtype=ldtype)\n+        except ValueError:\n+            pass\n+\n+\n+@pytest.mark.parametrize(\"dtype\", int_types)\n+@pytest.mark.parametrize(\"ldtype\", int_types)\n+def test_fuzz_loads(dtype, ldtype):\n+    \"\"\"Scan for possible segfaults.\n+\n+    All invalid inputs must lead to a ValueError rather than a seg-fault or\n+    RaggedArray.loads() could be tricked into reading arbitrary memory addresses\n+    by a maliciously constructed invalid data file.\n+\n+    \"\"\"\n+    @given(strategies.binary())\n+    @example(b'\\xc0\\\\\\\\\\xb0\\x93\\x91\\xff\\xffpEfe\\x167\\xee')\n+    def fuzz(x):\n+        print(x)\n+        try:\n+            self, _ = RaggedArray.loads(x, dtype=dtype, ldtype=ldtype)\n+        except ValueError:\n+            pass\n+        else:\n+            assert self.dumps(ldtype=ldtype).tobytes() == x\n+\n+    fuzz()\n+\n+\n def test_dump_byteorder():\n     self = RaggedArray.from_nested([[0x0109, 0x0208, 0x0307]], dtype=np.uint16)\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c1a15b7087a248e9167a16ab255ca06c231ad5f3",
            "date": "2024-10-13T19:57:05Z",
            "author_login": "bwoodsend"
          },
          {
            "sha": "690edcdfded16d850d7461ddb83bab73c0b09319",
            "date": "2024-10-13T18:58:39Z",
            "author_login": "bwoodsend"
          },
          {
            "sha": "7ac7dcc6bf4654a184a105b9690e7ce7386697ac",
            "date": "2024-10-13T18:27:40Z",
            "author_login": "bwoodsend"
          },
          {
            "sha": "6c847f02b3b3a6e36e9b04bdb7752e2812893e20",
            "date": "2024-10-13T18:22:38Z",
            "author_login": "bwoodsend"
          },
          {
            "sha": "8394937ef2c31e795f203d477bc0d77b86bb2b19",
            "date": "2024-10-13T18:22:16Z",
            "author_login": "bwoodsend"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-120",
    "description": "A vulnerability, which was classified as critical, has been found in bwoodsend rockhopper up to 0.1.2. Affected by this issue is the function count_rows of the file rockhopper/src/ragged_array.c of the component Binary Parser. The manipulation of the argument raw leads to buffer overflow. Local access is required to approach this attack. Upgrading to version 0.2.0 is able to address this issue. The name of the patch is 1a15fad5e06ae693eb9b8908363d2c8ef455104e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-266312.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-27T17:15:09.157",
    "last_modified": "2024-11-21T07:36:21.240",
    "fix_date": "2022-05-22T18:58:16Z"
  },
  "references": [
    {
      "url": "https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?ctiid.266312",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?id.266312",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/bwoodsend/rockhopper/commit/1a15fad5e06ae693eb9b8908363d2c8ef455104e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/bwoodsend/rockhopper/releases/tag/v0.2.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?ctiid.266312",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?id.266312",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.294980",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rockhopper",
    "owner": "bwoodsend",
    "created_at": "2021-03-10T18:16:33Z",
    "updated_at": "2024-10-13T20:20:22Z",
    "pushed_at": "2024-10-13T20:20:17Z",
    "size": 111,
    "stars": 2,
    "forks": 1,
    "open_issues": 0,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 62832,
      "C": 7830,
      "Dockerfile": 1782
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:24:36.746037"
  }
}