{
  "cve_id": "CVE-2023-0227",
  "github_data": {
    "repository": "pyload/pyload",
    "fix_commit": "c035714c0596b704b11af0f8a669352f128ad2d9",
    "related_commits": [
      "c035714c0596b704b11af0f8a669352f128ad2d9",
      "c035714c0596b704b11af0f8a669352f128ad2d9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c035714c0596b704b11af0f8a669352f128ad2d9",
      "commit_date": "2023-01-12T00:00:29Z",
      "author": {
        "login": "GammaC0de",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix issue that caused the session not expire after user was deleted",
        "length": 67,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 20,
        "deletions": 4
      },
      "files": [
        {
          "filename": "src/pyload/core/api/__init__.py",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -1117,7 +1117,7 @@ def set_captcha_result(self, tid, result):\n     @permission(Perms.STATUS)\n     def get_events(self, uuid):\n         \"\"\"\n-        Lists occured events, may be affected to changes in future.\n+        Lists occurred events, may be affected to changes in the future.\n \n         :param uuid:\n         :return: list of `Events`\n@@ -1230,6 +1230,15 @@ def check_auth(self, username, password):\n         \"\"\"\n         return self.pyload.db.check_auth(username, password)\n \n+    def user_exists(self, username):\n+        \"\"\"\n+        Check if a user actually exists in the database.\n+\n+        :param username:\n+        :return: boolean\n+        \"\"\"\n+        return self.pyload.db.user_exists(username)\n+\n     @legacy(\"isAuthorized\")\n     def is_authorized(self, func, userdata):\n         \"\"\""
        },
        {
          "filename": "src/pyload/core/database/user_database.py",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -92,6 +92,11 @@ def set_permission(self, user, perms):\n     def set_role(self, user, role):\n         self.c.execute(\"UPDATE users SET role=? WHERE name=?\", (role, user))\n \n+    @style.queue\n+    def user_exists(self, user):\n+        self.c.execute(\"SELECT name FROM users WHERE name=?\", (user,))\n+        return self.c.fetchone() is not None\n+\n     @style.queue\n     def list_users(self):\n         self.c.execute(\"SELECT name FROM users\")"
        },
        {
          "filename": "src/pyload/webui/app/helpers.py",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -164,9 +164,11 @@ def wrapper(*args, **kwargs):\n \n \n def is_authenticated(session=flask.session):\n-    return session.get(\"name\") and session.get(\n-        \"authenticated\"\n-    )  # NOTE: why checks name?\n+    api = flask.current_app.config[\"PYLOAD_API\"]\n+    user = session.get(\"name\")\n+    authenticated = session.get(\"authenticated\")\n+\n+    return authenticated and api.user_exists(user)\n \n \n def login_required(perm):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b3235c001045b52b4c7f8bd06915130e1f9e6517",
            "date": "2025-01-18T14:05:01Z",
            "author_login": "GammaC0de"
          },
          {
            "sha": "caf2e75fa13ae82e0b5a336d2ceeca0c943b94cb",
            "date": "2025-01-12T23:31:47Z",
            "author_login": "GammaC0de"
          },
          {
            "sha": "52b220773a9eb94c71bee7dcd91f361911ee4279",
            "date": "2025-01-12T22:39:00Z",
            "author_login": "GammaC0de"
          },
          {
            "sha": "d2764813ff8e23da428aa4b4e2d0e66f1d78675b",
            "date": "2025-01-12T19:36:02Z",
            "author_login": "izderadicka"
          },
          {
            "sha": "9fb24de85dbe66277a35c41341ae5ec58b596174",
            "date": "2025-01-07T21:58:04Z",
            "author_login": "GammaC0de"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-613",
    "description": "Insufficient Session Expiration in GitHub repository pyload/pyload prior to 0.5.0b3.dev36.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-12T01:15:10.020",
    "last_modified": "2024-11-21T07:36:46.873",
    "fix_date": "2023-01-12T00:00:29Z"
  },
  "references": [
    {
      "url": "https://github.com/pyload/pyload/commit/c035714c0596b704b11af0f8a669352f128ad2d9",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af3101d7-fea6-463a-b7e4-a48be219e31b",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pyload/pyload/commit/c035714c0596b704b11af0f8a669352f128ad2d9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af3101d7-fea6-463a-b7e4-a48be219e31b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.543812",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pyload",
    "owner": "pyload",
    "created_at": "2013-02-10T13:12:02Z",
    "updated_at": "2025-01-26T03:27:21Z",
    "pushed_at": "2025-01-18T14:05:10Z",
    "size": 49401,
    "stars": 3399,
    "forks": 714,
    "open_issues": 205,
    "watchers": 3399,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "main",
      "old/master",
      "old/testing",
      "stable"
    ],
    "languages": {
      "Python": 1905441,
      "HTML": 175688,
      "JavaScript": 169537,
      "CSS": 44576,
      "Dockerfile": 3981
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:04:42.081157"
  }
}