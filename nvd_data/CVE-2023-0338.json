{
  "cve_id": "CVE-2023-0338",
  "github_data": {
    "repository": "lirantal/daloradius",
    "fix_commit": "e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe",
    "related_commits": [
      "e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe",
      "e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe"
    ],
    "patch_url": "https://github.com/lirantal/daloradius/commit/e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe.patch",
    "fix_commit_details": {
      "sha": "e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe",
      "commit_date": "2023-01-17T13:16:13Z",
      "author": {
        "login": "filippolauria",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed acct and hs management (#341)",
        "length": 123,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 858,
        "additions": 501,
        "deletions": 357
      },
      "files": [
        {
          "filename": "acct-date.php",
          "status": "modified",
          "additions": 66,
          "deletions": 39,
          "patch": "@@ -32,19 +32,19 @@\n     include(\"library/layout.php\");\n     \n     // validate this parameter before including menu\n-    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n-                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n+    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n+              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n     $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n \n-    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n-                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n+    $startdate = (array_key_exists('startdate', $_GET) && !empty(trim($_GET['startdate'])) &&\n+                  preg_match(DATE_REGEX, trim($_GET['startdate']), $m) !== false &&\n                   checkdate($m[2], $m[3], $m[1]))\n-               ? $_GET['startdate'] : \"\";\n+               ? trim($_GET['startdate']) : \"\";\n \n-    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n-                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n+    $enddate = (array_key_exists('enddate', $_GET) && !empty(trim($_GET['enddate'])) &&\n+                preg_match(DATE_REGEX, trim($_GET['enddate']), $m) !== false &&\n                 checkdate($m[2], $m[3], $m[1]))\n-             ? $_GET['enddate'] : \"\";\n+             ? trim($_GET['enddate']) : \"\";\n     \n     //feed the sidebar variables\n     $accounting_date_username = $username_enc;\n@@ -58,6 +58,8 @@\n \n \n     $extra_js = array(\n+        \"library/javascript/ajax.js\",\n+        \"library/javascript/ajaxGeneric.js\",\n         \"library/javascript/pages_common.js\",\n     );\n \n@@ -72,6 +74,7 @@\n     $cols = array(\n                     \"radacctid\" => t('all','ID'),\n                     \"hotspot\" => t('all','HotSpot'),\n+                    \"nasipaddress\" => t('all','NASIPAddress'),\n                     \"username\" => t('all','Username'),\n                     \"framedipaddress\" => t('all','IPAddress'),\n                     \"acctstarttime\" => t('all','StartTime'),\n@@ -80,16 +83,15 @@\n                     \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                     \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                     \"acctterminatecause\" => t('all','Termination'),\n-                    \"nasipaddress\" => t('all','NASIPAddress'),\n                  );\n     $colspan = count($cols);\n     $half_colspan = intval($colspan / 2);\n     \n-    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n+    $orderBy = (array_key_exists('orderBy', $_GET) && !empty($_GET['orderBy']) &&\n                 in_array($_GET['orderBy'], array_keys($cols)))\n              ? $_GET['orderBy'] : array_keys($cols)[0];\n \n-    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n+    $orderType = (array_key_exists('orderType', $_GET) && !empty($_GET['orderType']) &&\n                   preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n                ? strtolower($_GET['orderType']) : \"asc\";\n \n@@ -169,7 +171,7 @@\n             // page numbers are shown only if there is more than one page\n             if ($drawNumberLinks) {\n                 printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n-                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n+                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n                 echo '</td>';\n             }\n ?>\n@@ -188,51 +190,76 @@\n ?>\n     </thead>\n \n-    <tbody>\n <?php\n-            $simple_td_format = '<td>%s</td>';\n+            echo '<tbody>';\n+\n+            \n             $li_style = 'margin: 7px auto';\n+            $trs = array();\n \n             while ($row = $res->fetchRow()) {\n-                foreach ($row as $i => $value) {\n-                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n-                }\n                 \n-                echo \"<tr>\";\n-                printf($simple_td_format, $row[0]);\n+                list(\n+                        $radacctid, $hotspot, $username, $framedipaddress,\n+                        $acctstarttime, $acctstoptime, $acctsessiontime, $acctinputoctets,\n+                        $acctoutputoctets, $acctterminatecause, $nasipaddress\n+                    ) = $row;\n+                \n+                $tr = array();\n                 \n-                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n-                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n+                // radacctid\n+                $tr[] = intval($radacctid);\n+                \n+                // hotspot\n+                $hotspot = htmlspecialchars($hotspot, ENT_QUOTES, 'UTF-8');\n+                $onclick = \"ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n+                         . sprintf(\",'hotspot=%s');return false;\", $hotspot);\n                 $tooltip = '<ul style=\"list-style-type: none\">'\n                          . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n-                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n+                                   $li_style, urlencode($hotspot), t('Tooltip','HotspotEdit'))\n                          . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                    $li_style, t('all','Compare'))\n                          . '</ul>'\n                          . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                 \n-                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n-                       $onclick, $tooltip, $row[1]);\n+                $tr[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a>\",\n+                                $onclick, $tooltip, $hotspot);\n+                \n+                // nasipaddress\n+                $tr[] = htmlspecialchars($nasipaddress, ENT_QUOTES, 'UTF-8');\n                 \n+                // username\n+                $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n                 $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n-                         . sprintf(\"'username=%s');return false;\", $row[2]);\n-                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n+                         . sprintf(\"'username=%s');return false;\", $username);\n+                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', urlencode($username), t('Tooltip','UserEdit'))\n                          . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n-                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n-                       $onclick, $tooltip, $row[2]);\n+                $tr[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a>\",\n+                                $onclick, $tooltip, $username);\n+                \n+                // other values\n+                $tr[] = htmlspecialchars($framedipaddress, ENT_QUOTES, 'UTF-8');\n+                $tr[] = htmlspecialchars($acctstarttime, ENT_QUOTES, 'UTF-8');\n+                $tr[] = htmlspecialchars($acctstoptime, ENT_QUOTES, 'UTF-8');\n+                $tr[] = time2str($acctsessiontime);\n+                $tr[] = toxbyte($acctinputoctets);\n+                $tr[] = toxbyte($acctoutputoctets);\n+                $tr[] = htmlspecialchars($acctterminatecause, ENT_QUOTES, 'UTF-8');\n+                \n+                $trs[] = $tr;\n+            }\n+\n+            // draw tr(s)\n+            $simple_td_format = '<td>%s</td>' . \"\\n\";\n \n-                printf($simple_td_format, $row[3]);\n-                printf($simple_td_format, $row[4]);\n-                printf($simple_td_format, $row[5]);\n+            foreach ($trs as $tr) {\n+                echo '<tr>';\n                 \n-                printf($simple_td_format, time2str($row[6]));\n-                printf($simple_td_format, toxbyte($row[7]));\n-                printf($simple_td_format, toxbyte($row[8]));\n-                printf($simple_td_format, $row[9]);\n-                printf($simple_td_format, $row[10]);\n-            \n-                echo \"</tr>\";\n-            \n+                foreach ($tr as $td) {\n+                    printf($simple_td_format, $td);\n+                }\n+                \n+                echo '</tr>';\n             }\n \n             echo '</tbody>';"
        },
        {
          "filename": "acct-maintenance-cleanup.php",
          "status": "modified",
          "additions": 190,
          "deletions": 138,
          "patch": "@@ -22,82 +22,126 @@\n  *********************************************************************************************************\n  */\n \n-    include (\"library/checklogin.php\");\n+    include(\"library/checklogin.php\");\n     $operator = $_SESSION['operator_user'];\n \n     include('library/check_operator_perm.php');\n+    include_once('library/config_read.php');\n+    \n+    // init logging variables\n+    $logAction = \"\";\n+    $logDebugSQL = \"\";\n+    $log = \"visited page: \";\n \n-    isset($_REQUEST['username']) ? $username = trim($_REQUEST['username']) : $username = '';\n-    isset($_REQUEST['enddate']) ? $enddate = trim($_REQUEST['enddate']) : $enddate = \"\";\n-\n-    $logAction = '';\n-    $logDebugSQL = '';\n-\n-    if (isset($_POST['submit'])) {\n-\n-        if ($username != '') {\n-\n-            include 'library/opendb.php';\n-\n-            $sql = 'SELECT count(*) FROM ' . $configValues['CONFIG_DB_TBL_RADACCT'] .\n-                   ' WHERE username = \"' . $username . '\" AND acctstoptime is NULL;';\n-\n-            $res = $dbSocket->query($sql);\n-\n-            $logDebugSQL .= $sql . \"\\n\";\n-\n-            $row = $res->fetchRow();\n-\n-            if($row[0] > 0) {\n+    include_once(\"lang/main.php\");\n+    include(\"library/validation.php\");\n+    include(\"library/layout.php\");\n \n-                $sql = 'UPDATE ' . $configValues['CONFIG_DB_TBL_RADACCT'] .\n-                       ' SET acctstoptime = NOW(), acctterminatecause = \"Admin-Reset\"'.\n-                       ' WHERE username = \"' . $username . '\" AND acctstoptime is NULL;'; \n \n+    include('library/opendb.php');\n+    \n+    // valid min/max dates\n+    $sql = sprintf(\"SELECT DATE(MIN(acctstarttime)), DATE(MAX(acctstarttime)) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n+    $res = $dbSocket->query($sql);\n+    $logDebugSQL .= \"$sql;\\n\";\n+    \n+    list($mindate, $maxdate) = $res->fetchrow();\n+    \n+    // valid usernames\n+    $sql = sprintf(\"SELECT DISTINCT(username) FROM %s ORDER BY username ASC\", $configValues['CONFIG_DB_TBL_RADACCT']);\n+    $res = $dbSocket->query($sql);\n+    $logDebugSQL .= \"$sql;\\n\";\n+    \n+    $valid_usernames = array();\n+    while ($row = $res->fetchrow()) {\n+        $valid_usernames[] = $row[0];\n+    }\n+    \n+    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n+        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n+            \n+            $username = (array_key_exists('username', $_POST) && !empty(trim($_POST['username'])) &&\n+                         in_array(trim($_POST['username']), $valid_usernames))\n+                      ? trim($_POST['username']) : \"\";\n+            \n+            $enddate = (array_key_exists('enddate', $_POST) && isset($_POST['enddate']) &&\n+                        preg_match(DATE_REGEX, $_POST['enddate'], $m) !== false &&\n+                        checkdate($m[2], $m[3], $m[1]))\n+                     ? $_POST['enddate'] : \"\";\n+                     \n+            if (!empty($username)) {\n+                \n+                $username_enc = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n+                \n+                $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s WHERE username='%s' AND acctstoptime IS NULL\",\n+                               $configValues['CONFIG_DB_TBL_RADACCT'], $dbSocket->escapeSimple($username));\n                 $res = $dbSocket->query($sql);\n+                $logDebugSQL .= \"$sql;\\n\";\n                 \n-                $logDebugSQL .= $sql . \"\\n\";\n-\n-                $successMsg = \"Cleaned up stale sessions for username: <b> $username </b>\";\n-                $logAction .= \"Successfully cleaned up stale sessions for username [$username] on page: \";\n-            }\n-            else {\n-\n-                $failureMsg = \"There are no stale sessions for user [$username]\";\n-                $logAction .= \"Failed performing close stale sessions on user [$username] because there are no stale sessions for that user on page: \";\n+                $numrows = intval($res->fetchrow()[0]);\n+                \n+                if ($numrows > 0) {\n+                    $sql = sprintf(\"UPDATE %s SET acctstoptime=NOW(), acctterminatecause='Admin-Reset'\n+                                     WHERE username='%s' AND acctstoptime IS NULL\",\n+                                   $configValues['CONFIG_DB_TBL_RADACCT'],\n+                                   $dbSocket->escapeSimple($username)); \n+                    $res = $dbSocket->query($sql);\n+                    $logDebugSQL .= \"$sql;\\n\";\n+\n+                    if (!DB::isError($res)) {\n+                        $successMsg = \"Cleaned up stale sessions for user: $username_enc\";\n+                        $logAction .= \"Successfully cleaned up stale sessions for username [$username] on page: \";\n+                    } else {\n+                        $failureMsg = \"Cannot clean up stale sessions for user: $username_enc\";\n+                        $logAction .= \"$failureMsg page: \";\n+                    }\n+\n+                } else {\n+                    // nothing to delete\n+                    $failureMsg = \"There are no stale sessions for user [$username_enc]\";\n+                    $logAction .= \"Cannot clean up stale sessions for user $username [no stale sessions for this user] on page: \";\n+                }\n+                \n+            } else if (!empty($enddate)) {\n+                if ($enddate >= $mindate && $enddate <= $maxdate) {\n+                \n+                    // delete all stale sessions in the database that occur until $enddate\n+                    $sql = sprintf(\"DELETE FROM %s\n+                                          WHERE acctstarttime < '%s'\n+                                            AND (acctstoptime = '0000-00-00 00:00:00' OR acctstoptime IS NULL)\",\n+                                   $configValues['CONFIG_DB_TBL_RADACCT'], $enddate);\n+                    $res = $dbSocket->query($sql);\n+                    $logDebugSQL .= \"$sql\\n\";\n+\n+                    if (!DB::isError($res)) {\n+                        $successMsg = \"Cleaned up stale sessions until date: $enddate\";\n+                        $logAction .= \"Successfully cleaned up stale sessions until date [$enddate] on page: \";\n+                    } else {\n+                        $failureMsg = \"Cannot clean up stale sessions until date: $enddate\";\n+                        $logAction .= \"$failureMsg page: \";\n+                    }\n+\n+                    \n+                } else {\n+                    // invalid\n+                    $failureMsg = \"Cannot clean up stale sessions: $enddate is invalid\";\n+                    $logAction .= \"$failureMsg page: \";\n+                }\n+            } else {\n+                // invalid\n+                $failureMsg = \"Cannot clean up stale sessions: provided empty/invalid username or ending date\";\n+                $logAction .= \"$failureMsg page: \";\n             }\n-\n-            include 'library/closedb.php';\n-        }\n-        else if ($enddate != '') {\n-\n-            include 'library/opendb.php';\n-\n-            // delete all stale sessions in the database that occur until $enddate\n-            $sql = \"DELETE FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\n-                    \" WHERE AcctStartTime<'\".$dbSocket->escapeSimple($enddate).\"'\".\n-                    \" AND (AcctStopTime='0000-00-00 00:00:00' OR AcctStopTime IS NULL)\";\n-            $res = $dbSocket->query($sql);\n-            $logDebugSQL .= $sql . \"\\n\";\n-\n-            $successMsg = \"Cleaned up stale sessions until date: <b> $enddate </b>\";\n-            $logAction .= \"Successfully cleaned up stale sessions until date [$enddate] on page: \";\n-\n-            include 'library/closedb.php';\n-\n-        }\n-        else {\n-            $failureMsg = \"No username or ending date was entered, please specify a username or ending date for cleaning up stale sessions from the database\";\n-            $logAction .= \"Failed cleaning up stale sessions due to lack of username or ending date on page: \";\n+            \n+        } else {\n+            // csrf\n+            $failureMsg = \"CSRF token error\";\n+            $logAction .= \"$failureMsg on page: \";\n         }\n     }\n \n-    include_once('library/config_read.php');\n-    $log = \"visited page: \";\n-    \n-    include_once(\"lang/main.php\");\n-    \n-    include(\"library/layout.php\");\n+    include('library/closedb.php');\n+\n \n     // print HTML prologue\n     $extra_css = array(\n@@ -116,92 +160,100 @@\n     print_html_prologue($title, $langCode, $extra_css, $extra_js);\n \n     include(\"menu-accounting-maintenance.php\");\n+    \n     echo '<div id=\"contentnorightbar\">';\n     print_title_and_help($title, $help);\n     \n     include_once('include/management/actionMessages.php');\n     \n     // set navbar stuff\n-    $navbuttons = array(\n-                          'CleanupRecordsByUsername-tab' => t('title','CleanupRecordsByUsername'),\n-                          'CleanupRecordsByDate-tab' => t('title','CleanupRecordsByDate'),\n-                       );\n-\n-    print_tab_navbuttons($navbuttons);\n-?>\n-\n-\n-        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n-\n-            \n+    $navkeys = array( 'CleanupRecordsByUsername', 'CleanupRecordsByDate', );\n \n-                <div class=\"tabcontent\" id=\"CleanupRecordsByUsername-tab\" style=\"display: block\">\n-\n-                    <fieldset>\n-\n-                        <h302> <?php echo t('title','CleanupRecordsByUsername'); ?> </h302>\n-                        <br/>\n-\n-                        <label for='username' class='form'><?php echo t('all','Username')?></label>\n-                        <input name=\"username\" type=\"text\" id=\"usernameEdit\" autocomplete=\"off\"\n-                        tooltipText='<?php echo t('Tooltip','Username'); ?> <br/>'\n-                        value=\"<?php if (isset($username)) echo $username; ?>\" tabindex=100>\n+    // print navbar controls\n+    print_tab_header($navkeys);\n+    \n+    $options = $valid_usernames;\n+    array_unshift($options , '');\n+\n+    $input_descriptors0 = array();\n+    $input_descriptors0[] = array(\n+                                    'name' => 'username',\n+                                    'type' => 'select',\n+                                    'caption' => t('all','Username'),\n+                                    'options' => $options,\n+                                    'selected_value' => $username\n+                                 );\n+    \n+    $fieldset0_descriptor = array(\n+                                    \"title\" => t('title','CleanupRecordsByUsername'),\n+                                    \"disabled\" => (count($valid_usernames) == 0)\n+                                 );           \n+    \n+    $input_descriptors1 = array();\n+    $input_descriptors1[] = array(\n+                                    'name' => 'enddate',\n+                                    'caption' => t('all','CleanupSessions'),\n+                                    'type' => 'date',\n+                                    'value' => $enddate,\n+                                    'min' => $mindate,\n+                                    'max' => $maxdate,\n+                                 );\n+\n+    $fieldset1_descriptor = array(\n+                                    \"title\" => t('title','CleanupRecordsByDate'),\n+                                    \"disabled\" => (count($valid_usernames) == 0)\n+                                 );\n+\n+    open_form();\n+    \n+    // open tab 0\n+    open_tab($navkeys, 0, true);\n+    \n+    open_fieldset($fieldset0_descriptor);\n \n-<?php\n-    include_once(\"include/management/autocomplete.php\");\n-\n-    if ($autoComplete) {\n-        echo \"<script type=\\\"text/javascript\\\">\n-                /** Making usernameEdit interactive **/\n-                autoComEdit = new DHTMLSuite.autoComplete();\n-                autoComEdit.add('usernameEdit','include/management/dynamicAutocomplete.php','_small','getAjaxAutocompleteUsernames');\n-                </script>\";\n+    foreach ($input_descriptors0 as $input_descriptor) {\n+        print_form_component($input_descriptor);\n     }\n-?>\n-                        <br/><br/>\n-                        <hr><br/>\n-\n-                        <input type='submit' name='submit' value='<?php echo t('buttons','apply') ?>' class='button' />\n-\n-                    </fieldset>\n-\n-                </div>\n-\n-                <div class=\"tabcontent\" id=\"CleanupRecordsByDate-tab\">\n-\n-                    <fieldset>\n-                        <h302> <?php echo t('title','CleanupRecordsByDate') ?> </h302>\n-                        <br/>\n-\n-                        <label for='enddate' class='form'><?php echo t('all','CleanupSessions')?></label>\n-                        <input name='enddate' type='text' id='enddate' value='<?php echo $enddate ?>' tabindex=100 />\n-                        <img src=\"library/js_date/calendar.gif\" onclick=\n-                        \"showChooser(this, 'enddate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n-\n-                        <br/><br/>\n-                        <hr><br/>\n-                        <input type=\"submit\" name=\"submit\" value=\"<?php echo t('buttons','apply') ?>\" tabindex=1000 class='button' />\n-                    </fieldset>\n-\n-                    <div id=\"chooserSpan\" class=\"dateChooser select-free\"\n-                        style=\"display: none; visibility: hidden; width: 160px;\">\n-                    </div>\n+    \n+    close_fieldset();\n+    \n+    close_tab($navkeys, 0);\n \n-                </div>\n+    // open tab 1\n+    open_tab($navkeys, 1);\n+    \n+    open_fieldset($fieldset1_descriptor);\n \n+    foreach ($input_descriptors1 as $input_descriptor) {\n+        print_form_component($input_descriptor);\n+    }\n+    \n+    close_fieldset();\n+    \n+    close_tab($navkeys, 1);\n+    \n+    $input_descriptors2 = array();\n+    $input_descriptors2[] = array(\n+                                    \"name\" => \"csrf_token\",\n+                                    \"type\" => \"hidden\",\n+                                    \"value\" => dalo_csrf_token(),\n+                                 );\n+    \n+    $input_descriptors2[] = array(\n+                                    \"type\" => \"submit\",\n+                                    \"name\" => \"submit\",\n+                                    \"value\" => t('buttons','apply')\n+                                  );\n+\n+    foreach ($input_descriptors2 as $input_descriptor) {\n+        print_form_component($input_descriptor);\n+    }\n \n-    </form>\n+    close_form();\n+    \n+    print_back_to_previous_page();\n \n-        </div><!-- #contentnorightbar -->\n-        \n-        <div id=\"footer\">\n-<?php\n     include('include/config/logging.php');\n-    include('page-footer.php');\n-?>\n-        </div><!-- #footer -->\n-    </div>\n-</div>\n+    print_footer_and_html_epilogue();\n \n-</body>\n-</html>\n+?>"
        },
        {
          "filename": "acct-maintenance-delete.php",
          "status": "modified",
          "additions": 160,
          "deletions": 93,
          "patch": "@@ -20,65 +20,114 @@\n  *\n  *********************************************************************************************************\n  */\n-\n+ \n     include(\"library/checklogin.php\");\n     $operator = $_SESSION['operator_user'];\n \n     include('library/check_operator_perm.php');\n- \n-    isset($_REQUEST['enddate']) ? $enddate = $_REQUEST['enddate'] : $enddate = \"\";\n-    isset($_REQUEST['startdate']) ? $startdate = $_REQUEST['startdate'] : $startdate = \"\";\n-    isset($_REQUEST['username']) ? $username = $_REQUEST['username'] : $username = \"\";\n-\n-    $logAction =  \"\";\n+    include_once('library/config_read.php');\n+    \n+    // init logging variables\n+    $logAction = \"\";\n     $logDebugSQL = \"\";\n+    $log = \"visited page: \";\n \n-    if (isset($_POST['submit'])) {\n-\n-        if ( (trim($startdate) != \"\") || (trim($enddate) != \"\") || (trim($username) != \"\") ) {\n+    include_once(\"lang/main.php\");\n+    include(\"library/validation.php\");\n+    include(\"library/layout.php\");\n+    \n+    \n+    include('library/opendb.php');\n+    \n+    // valid min/max dates\n+    $sql = sprintf(\"SELECT DATE(MIN(acctstarttime)), DATE(MAX(acctstarttime)) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n+    $res = $dbSocket->query($sql);\n+    $logDebugSQL .= \"$sql;\\n\";\n+    \n+    list($mindate, $maxdate) = $res->fetchrow();\n+    \n+    // valid usernames\n+    $sql = sprintf(\"SELECT DISTINCT(username) FROM %s ORDER BY username ASC\", $configValues['CONFIG_DB_TBL_RADACCT']);\n+    $res = $dbSocket->query($sql);\n+    $logDebugSQL .= \"$sql;\\n\";\n+    \n+    $valid_usernames = array();\n+    while ($row = $res->fetchrow()) {\n+        $valid_usernames[] = $row[0];\n+    }\n+    \n+    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n+        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n+            $required_fields = array();\n+            $sql_WHERE = array();\n             \n-            include 'library/opendb.php';\n-\n-            $deleteUsername = \"\";\n-            if (trim($username) != \"\")\n-                $deleteUsername = \" AND Username='$username'\";\n-\n-            $deleteEnddate = \"\";\n-            if (trim($enddate) != \"\")\n-                $deleteEnddate = \" AND AcctStartTime<'\".$dbSocket->escapeSimple($enddate).\"'\";\n-\n-            $deleteStartdate = \"\";\n-            if (trim($startdate) != \"\")\n-                $deleteStartdate = \" AND AcctStartTime>'\".$dbSocket->escapeSimple($startdate).\"'\";\n-\n-\n-            $sql = \"DELETE FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\n-                \" WHERE 1=1\".\n-                \" $deleteStartdate\".\n-                \" $deleteEnddate\".\n-                \" $deleteUsername \";\n-            $res = $dbSocket->query($sql);\n-            $logDebugSQL .= $sql . \"\\n\";\n-\n-            $successMsg = \"Deleted records between <b>$startdate</b> to <b>$enddate</b> for user <b>$username</b>\";\n-            $logAction .= \"Successfully deleted records between [$startdate] and [$enddate] for user [$username] on page: \";\n-\n-            include 'library/closedb.php';\n-\n-        }  else { \n-            $failureMsg = \"no username, ending date or starting date was provided, please at least one of those\";\n-            $logAction .= \"Failed deleting records from database, missing fields on page: \";\n+            $username = (array_key_exists('username', $_POST) && !empty(trim($_POST['username'])) &&\n+                         in_array(trim($_POST['username']), $valid_usernames))\n+                      ? trim($_POST['username']) : \"\";\n+            if (empty($username)) {\n+                $required_fields['username'] = t('all','Username');\n+            } else {\n+                $username_enc = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n+                $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n+            }\n+            \n+            $startdate = (array_key_exists('startdate', $_POST) && isset($_POST['startdate']) &&\n+                          preg_match(DATE_REGEX, $_POST['startdate'], $m) !== false &&\n+                          checkdate($m[2], $m[3], $m[1]))\n+                       ? $_POST['startdate'] : \"\";\n+            if (empty($startdate)) {\n+                $required_fields['startdate'] = t('all','StartingDate');\n+            } else {\n+                $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $startdate);\n+            }\n+            \n+            $enddate = (array_key_exists('enddate', $_POST) && isset($_POST['enddate']) &&\n+                        preg_match(DATE_REGEX, $_POST['enddate'], $m) !== false &&\n+                        checkdate($m[2], $m[3], $m[1]))\n+                     ? $_POST['enddate'] : \"\";\n+            if (empty($enddate)) {\n+                $required_fields['enddate'] = t('all','EndingDate');\n+            } else {\n+                $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $enddate);\n+            }\n+            \n+            // further checks\n+            if (!empty($startdate) && !empty($enddate) && $startdate >= $mindate && $enddate <= $maxdate && $startdate > $enddate) {\n+                $required_fields['startdate'] = t('all','StartingDate');\n+                $required_fields['enddate'] = t('all','EndingDate');\n+            }\n+            \n+            if (count($required_fields) > 0) {\n+                // required/invalid\n+                $failureMsg = sprintf(\"Empty or invalid required field(s) [%s]\", implode(\", \", array_values($required_fields)));\n+                $logAction .= \"$failureMsg on page: \";\n+            } else {\n+                \n+                $sql = sprintf(\"DELETE FROM %s WHERE %s\", $configValues['CONFIG_DB_TBL_RADACCT'],\n+                                                          implode(\" AND \", $sql_WHERE));\n+                $res = $dbSocket->query($sql);\n+                $logDebugSQL .= \"$sql;\\n\";\n+                \n+                if (!DB::isError($res)) {\n+                    $successMsg = sprintf(\"Deleted accounting records for user %s [period: %s - %s]\",\n+                                          $username_enc, $startdate, $enddate);\n+                    $logAction .= \"$successMsg on page: \";\n+                } else {\n+                    $failureMsg = sprintf(\"Failed to deleted accounting records for user %s [period: %s - %s]\",\n+                                          $username_enc, $startdate, $enddate);\n+                    $logAction .= \"$failureMsg page: \";\n+                }\n+            }\n+            \n+        } else {\n+            // csrf\n+            $failureMsg = \"CSRF token error\";\n+            $logAction .= \"$failureMsg on page: \";\n         }\n-\n     }\n \n-\n-    include_once('library/config_read.php');\n-    $log = \"visited page: \";\n-\n-    include_once(\"lang/main.php\");\n+    include('library/closedb.php');\n     \n-    include(\"library/layout.php\");\n \n     // print HTML prologue\n     $title = t('Intro','acctmaintenancedelete.php');\n@@ -87,57 +136,75 @@\n     print_html_prologue($title, $langCode);\n \n     include(\"menu-accounting-maintenance.php\");\n+    \n     echo '<div id=\"contentnorightbar\">';\n     print_title_and_help($title, $help);\n     \n     include_once('include/management/actionMessages.php');\n-?>\n-\n-        \n-<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n-    <fieldset>\n-\n-        <h302> <?php echo t('title','DeleteRecords') ?> </h302>\n-        <br/>\n-\n-        <label for='username' class='form'><?php echo t('all','Username')?></label>\n-        <input name='username' type='text' id='username' value='<?php echo $username ?>' tabindex=100 />\n-        <br />\n-\n-        <label for='startdate' class='form'><?php echo t('all','StartingDate')?></label>\n-        <input name='startdate' type='text' id='startdate' value='<?php echo $startdate ?>' tabindex=100 />\n-        <img src=\"library/js_date/calendar.gif\" onclick=\n-        \"showChooser(this, 'startdate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n-        <br />\n-\n-        <label for='enddate' class='form'><?php echo t('all','EndingDate')?></label>\n-        <input name='enddate' type='text' id='enddate' value='<?php echo $enddate ?>' tabindex=100 />\n-        <img src=\"library/js_date/calendar.gif\" onclick=\n-        \"showChooser(this, 'enddate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n-        <br />\n-\n-        <br/><br/>\n-        <hr><br/>\n-        <input type=\"submit\" name=\"submit\" value=\"<?php echo t('buttons','apply') ?>\" tabindex=1000 class='button' />\n-\n-    </fieldset>\n+    \n+    $options = $valid_usernames;\n+    array_unshift($options , '');\n+    \n+    $input_descriptors0 = array();\n+\n+    $input_descriptors0[] = array(\n+                                    'name' => 'username',\n+                                    'type' => 'select',\n+                                    'caption' => t('all','Username'),\n+                                    'options' => $options,\n+                                    'selected_value' => $username\n+                                 );\n+\n+    $input_descriptors0[] = array(\n+                                    'name' => 'startdate',\n+                                    'caption' => t('all','StartingDate'),\n+                                    'type' => 'date',\n+                                    'value' => $startdate,\n+                                    'min' => $mindate,\n+                                    'max' => $maxdate,\n+                                 );\n+                                 \n+    $input_descriptors0[] = array(\n+                                    'name' => 'enddate',\n+                                    'caption' => t('all','EndingDate'),\n+                                    'type' => 'date',\n+                                    'value' => $enddate,\n+                                    'min' => $mindate,\n+                                    'max' => $maxdate,\n+                                 );\n+                                 \n+    $input_descriptors0[] = array(\n+                                    \"name\" => \"csrf_token\",\n+                                    \"type\" => \"hidden\",\n+                                    \"value\" => dalo_csrf_token(),\n+                                 );\n+    \n+    $input_descriptors0[] = array(\n+                                    \"type\" => \"submit\",\n+                                    \"name\" => \"submit\",\n+                                    \"value\" => t('buttons','apply')\n+                                  );\n+    \n+    $fieldset0_descriptor = array(\n+                                    \"title\" => t('title','DeleteRecords'),\n+                                    \"disabled\" => (count($valid_usernames) == 0)\n+                                 );\n+                                 \n+    open_form();\n+    \n+    open_fieldset($fieldset0_descriptor);\n \n-    <div id=\"chooserSpan\" class=\"dateChooser select-free\" \n-        style=\"display: none; visibility: hidden; width: 160px;\">\n-    </div>\n+    foreach ($input_descriptors0 as $input_descriptor) {\n+        print_form_component($input_descriptor);\n+    }\n+    \n+    close_fieldset();\n+    \n+    close_form();\n \n-</form>\n+    print_back_to_previous_page();\n \n-        </div><!-- #contentnorightbar -->\n-        \n-        <div id=\"footer\">\n-<?php\n     include('include/config/logging.php');\n-    include('page-footer.php');\n+    print_footer_and_html_epilogue();\n+    \n ?>\n-        </div><!-- #footer -->\n-    </div>\n-</div>\n-\n-</body>\n-</html>"
        },
        {
          "filename": "include/management/contactinfo.php",
          "status": "modified",
          "additions": 53,
          "deletions": 66,
          "patch": "@@ -27,81 +27,68 @@\n     exit;\n }\n \n-$input_descriptors1 = array();\n-$input_descriptors1[] = array( \"name\" => \"ownername\", \"caption\" => t('ContactInfo','OwnerName'),\n-                               \"type\" => \"text\", \"value\" => ((isset($owner)) ? $owner : \"\"), );\n-$input_descriptors1[] = array( \"name\" => \"emailowner\", \"caption\" => t('ContactInfo','OwnerEmail'),\n-                               \"type\" => \"text\", \"value\" => ((isset($email_owner)) ? $email_owner : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"managername\", \"caption\" => t('ContactInfo','ManagerName'),\n-                               \"type\" => \"text\", \"value\" => ((isset($manager)) ? $manager : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"emailmanager\", \"caption\" => t('ContactInfo','ManagerEmail'),\n-                               \"type\" => \"text\", \"value\" => ((isset($email_manager)) ? $email_manager : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"company\", \"caption\" => t('ContactInfo','Company'),\n-                               \"type\" => \"text\", \"value\" => ((isset($company)) ? $company : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"address\", \"caption\" => t('ContactInfo','Address'),\n-                               \"type\" => \"textarea\", \"content\" => ((isset($address)) ? $address : \"\"), );                               \n-$input_descriptors1[] = array( \"name\" => \"phone1\", \"caption\" => t('ContactInfo','Phone1'),\n-                               \"type\" => \"text\", \"value\" => ((isset($phone1)) ? $phone1 : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"phone2\", \"caption\" => t('ContactInfo','Phone2'),\n-                               \"type\" => \"text\", \"value\" => ((isset($phone2)) ? $phone2 : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"hotspot_type\", \"caption\" => t('ContactInfo','HotspotType'),\n-                               \"type\" => \"text\", \"value\" => ((isset($hotspot_type)) ? $hotspot_type : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"companywebsite\", \"caption\" => t('ContactInfo','CompanyWebsite'),\n-                               \"type\" => \"text\", \"value\" => ((isset($companywebsite)) ? $companywebsite : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"companyemail\", \"caption\" => t('ContactInfo','CompanyEmail'),\n-                               \"type\" => \"text\", \"value\" => ((isset($companyemail)) ? $companyemail : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"companyphone\", \"caption\" => t('ContactInfo','CompanyPhone'),\n-                               \"type\" => \"text\", \"value\" => ((isset($companyphone)) ? $companyphone : \"\") , );\n-$input_descriptors1[] = array( \"name\" => \"companycontact\", \"caption\" => t('ContactInfo','CompanyContact'),\n-                               \"type\" => \"text\", \"value\" => ((isset($companycontact)) ? $companycontact : \"\") , );\n+$_input_descriptors1 = array();\n+$_input_descriptors1[] = array( \"name\" => \"ownername\", \"caption\" => t('ContactInfo','OwnerName'),\n+                                \"type\" => \"text\", \"value\" => ((isset($owner)) ? $owner : \"\"), );\n+$_input_descriptors1[] = array( \"name\" => \"emailowner\", \"caption\" => t('ContactInfo','OwnerEmail'),\n+                                \"type\" => \"text\", \"value\" => ((isset($email_owner)) ? $email_owner : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"managername\", \"caption\" => t('ContactInfo','ManagerName'),\n+                                \"type\" => \"text\", \"value\" => ((isset($manager)) ? $manager : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"emailmanager\", \"caption\" => t('ContactInfo','ManagerEmail'),\n+                                \"type\" => \"text\", \"value\" => ((isset($email_manager)) ? $email_manager : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"company\", \"caption\" => t('ContactInfo','Company'),\n+                                \"type\" => \"text\", \"value\" => ((isset($company)) ? $company : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"address\", \"caption\" => t('ContactInfo','Address'),\n+                                \"type\" => \"textarea\", \"content\" => ((isset($address)) ? $address : \"\"), );                               \n+$_input_descriptors1[] = array( \"name\" => \"phone1\", \"caption\" => t('ContactInfo','Phone1'),\n+                                \"type\" => \"text\", \"value\" => ((isset($phone1)) ? $phone1 : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"phone2\", \"caption\" => t('ContactInfo','Phone2'),\n+                                \"type\" => \"text\", \"value\" => ((isset($phone2)) ? $phone2 : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"hotspot_type\", \"caption\" => t('ContactInfo','HotspotType'),\n+                                \"type\" => \"text\", \"value\" => ((isset($hotspot_type)) ? $hotspot_type : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"companywebsite\", \"caption\" => t('ContactInfo','CompanyWebsite'),\n+                                \"type\" => \"text\", \"value\" => ((isset($companywebsite)) ? $companywebsite : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"companyemail\", \"caption\" => t('ContactInfo','CompanyEmail'),\n+                                \"type\" => \"text\", \"value\" => ((isset($companyemail)) ? $companyemail : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"companyphone\", \"caption\" => t('ContactInfo','CompanyPhone'),\n+                                \"type\" => \"text\", \"value\" => ((isset($companyphone)) ? $companyphone : \"\") , );\n+$_input_descriptors1[] = array( \"name\" => \"companycontact\", \"caption\" => t('ContactInfo','CompanyContact'),\n+                                \"type\" => \"text\", \"value\" => ((isset($companycontact)) ? $companycontact : \"\") , );\n \n-$input_descriptors2 = array();\n-$input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n-                               'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n-$input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n-                               'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n-$input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n-                               'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n-$input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n-                               'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n \n-$button_descriptor = array(\n-                            \"type\" => \"submit\",\n-                            \"name\" => \"submit\",\n-                            \"value\" => t('buttons','apply')\n-                          );\n+$_fieldset1_descriptor = array(\n+                                \"title\" => t('title','ContactInfo'),\n+                              );\n+                          \n+open_fieldset($_fieldset1_descriptor);\n \n-?>\n+foreach ($_input_descriptors1 as $input_descriptor) {\n+    print_form_component($input_descriptor);\n+}\n \n-<fieldset>\n-    <h302>Contact Info</h302>\n-    <h301>Contact Info</h301>\n+close_fieldset();\n \n-    <ul>\n-<?php\n \n-    foreach ($input_descriptors1 as $input_descriptor) {\n-        print_form_component($input_descriptor);\n-    }\n+$_input_descriptors2 = array();\n+$_input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n+                                'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n+$_input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n+                                'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n+$_input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n+                                'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n+$_input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n+                                'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n \n-?>\n-    </ul>\n-</fieldset>\n+$_fieldset2_descriptor = array(\n+                                \"title\" => \"Other\",\n+                              );\n \n-<fieldset>\n-    <h302>Other</h302>\n-    <h301>Other</h301>\n-    <ul>\n-<?php\n+open_fieldset($_fieldset2_descriptor);\n \n-    foreach ($input_descriptors2 as $input_descriptor) {\n-        print_form_component($input_descriptor);\n-    }\n+foreach ($_input_descriptors2 as $input_descriptor) {\n+    print_form_component($input_descriptor);\n+}\n \n-?>\n-    </ul>\n-</fieldset>\n+close_fieldset();\n \n-<?php\n-    print_form_component($button_descriptor);\n ?>"
        },
        {
          "filename": "mng-hs-edit.php",
          "status": "modified",
          "additions": 19,
          "deletions": 14,
          "patch": "@@ -41,7 +41,7 @@\n \n     if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n         $name = (array_key_exists('name', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['name']))))\n-              ? str_replace(\"%\", \"\", trim($_POST['name']))) : \"\";\n+              ? str_replace(\"%\", \"\", trim($_POST['name'])) : \"\";\n     } else {\n         $name = (array_key_exists('name', $_REQUEST) && !empty(str_replace(\"%\", \"\", trim($_REQUEST['name']))))\n               ? str_replace(\"%\", \"\", trim($_REQUEST['name'])) : \"\";\n@@ -207,18 +207,6 @@\n         // set form component descriptors\n         $input_descriptors0 = array();\n         \n-        $input_descriptors0[] = array(\n-                                        \"type\" => \"hidden\",\n-                                        \"value\" => dalo_csrf_token(),\n-                                        \"name\" => \"csrf_token\"\n-                                     );\n-        \n-        $input_descriptors0[] = array(\n-                                        \"type\" => \"hidden\",\n-                                        \"value\" => $name_enc,\n-                                        \"name\" => \"name\"\n-                                     );\n-\n         $input_descriptors0[] = array(\n                                         \"name\" => \"name_presentation\",\n                                         \"caption\" => t('all','HotSpotName'),\n@@ -244,7 +232,20 @@\n                                         \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                      );\n         \n-        $input_descriptors0[] = array(\n+        $input_descriptors1 = array();\n+        $input_descriptors1[] = array(\n+                                        \"type\" => \"hidden\",\n+                                        \"value\" => dalo_csrf_token(),\n+                                        \"name\" => \"csrf_token\"\n+                                     );\n+        \n+        $input_descriptors1[] = array(\n+                                        \"type\" => \"hidden\",\n+                                        \"value\" => $name_enc,\n+                                        \"name\" => \"name\"\n+                                     );\n+        \n+        $input_descriptors1[] = array(\n                                         \"type\" => \"submit\",\n                                         \"name\" => \"submit\",\n                                         \"value\" => t('buttons','apply')\n@@ -284,6 +285,10 @@\n         \n         close_tab($navkeys, 1);\n         \n+        foreach ($input_descriptors1 as $input_descriptor) {\n+            print_form_component($input_descriptor);\n+        }\n+        \n         close_form();\n         \n     }"
        },
        {
          "filename": "mng-hs-new.php",
          "status": "modified",
          "additions": 13,
          "deletions": 7,
          "patch": "@@ -158,12 +158,6 @@\n         // set form component descriptors\n         $input_descriptors0 = array();\n         \n-        $input_descriptors0[] = array(\n-                                        \"type\" => \"hidden\",\n-                                        \"value\" => dalo_csrf_token(),\n-                                        \"name\" => \"csrf_token\"\n-                                     );\n-        \n         $input_descriptors0[] = array(\n                                         \"name\" => \"name\",\n                                         \"caption\" => t('all','HotSpotName'),\n@@ -188,7 +182,15 @@\n                                         \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                      );\n         \n-        $input_descriptors0[] = array(\n+        $input_descriptors1 = array();\n+        \n+        $input_descriptors1[] = array(\n+                                        \"type\" => \"hidden\",\n+                                        \"value\" => dalo_csrf_token(),\n+                                        \"name\" => \"csrf_token\"\n+                                     );\n+        \n+        $input_descriptors1[] = array(\n                                         \"type\" => \"submit\",\n                                         \"name\" => \"submit\",\n                                         \"value\" => t('buttons','apply')\n@@ -228,6 +230,10 @@\n         \n         close_tab($navkeys, 1);\n         \n+        foreach ($input_descriptors1 as $input_descriptor) {\n+            print_form_component($input_descriptor);\n+        }\n+        \n         close_form();\n \n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cda8c51659e296beeb56d69dea2f0fe978335f44",
            "date": "2025-01-03T15:57:00Z",
            "author_login": "dot-mike"
          },
          {
            "sha": "d9fb2eb77a340338e9307d2bfc436656797ad10e",
            "date": "2024-12-05T05:44:31Z",
            "author_login": "jahknem"
          },
          {
            "sha": "37e0dbbaa6831c6ea8c2d7aec75882f9fc263dec",
            "date": "2024-11-27T09:28:27Z",
            "author_login": "dpkrane"
          },
          {
            "sha": "5b99b4bcdd6f53864c1653d2d6cba45a9e9c4740",
            "date": "2024-11-24T11:47:00Z",
            "author_login": "parsa97"
          },
          {
            "sha": "30988bf24ac713039073a45526c97601fc5af238",
            "date": "2024-10-29T14:22:40Z",
            "author_login": "aweher"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository lirantal/daloradius prior to master-branch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-17T16:15:17.090",
    "last_modified": "2024-11-21T07:37:00.010",
    "fix_date": "2023-01-17T13:16:13Z"
  },
  "references": [
    {
      "url": "https://github.com/lirantal/daloradius/commit/e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/fcae1b67-db37-4d24-9137-8dda95573e77",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/lirantal/daloradius/commit/e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/fcae1b67-db37-4d24-9137-8dda95573e77",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.565302",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "daloradius",
    "owner": "lirantal",
    "created_at": "2015-05-02T09:06:40Z",
    "updated_at": "2025-01-13T13:09:54Z",
    "pushed_at": "2025-01-03T15:57:00Z",
    "size": 26603,
    "stars": 707,
    "forks": 350,
    "open_issues": 68,
    "watchers": 707,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 9561369,
      "HTML": 976444,
      "JavaScript": 234162,
      "Shell": 65413,
      "CSS": 47766,
      "Hack": 4356,
      "Dockerfile": 2182
    },
    "commit_activity": {
      "total_commits_last_year": 29,
      "avg_commits_per_week": 0.5576923076923077,
      "days_active_last_year": 24
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:25:23.249627"
  }
}