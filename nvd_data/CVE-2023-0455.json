{
  "cve_id": "CVE-2023-0455",
  "github_data": {
    "repository": "unilogies/bumsys",
    "fix_commit": "a5beff7868ab63bf4ec752a1102f8da033c66b28",
    "related_commits": [
      "a5beff7868ab63bf4ec752a1102f8da033c66b28",
      "a5beff7868ab63bf4ec752a1102f8da033c66b28"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "a5beff7868ab63bf4ec752a1102f8da033c66b28",
      "commit_date": "2023-01-22T09:02:01Z",
      "author": {
        "login": "kmkalam24",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update Security",
        "length": 15,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 158,
        "additions": 80,
        "deletions": 78
      },
      "files": [
        {
          "filename": "core/config.php",
          "status": "modified",
          "additions": 28,
          "deletions": 5,
          "patch": "@@ -50,21 +50,44 @@\n $_SETTINGS[\"MAX_UPLOAD_SIZE\"] = 8;\n \n /**\n- * Define allowed mime type.\n+ * Define allowed extension and mime type.\n  * \n  * Can be seen common mime type here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n  * or\n  *  https://www.iana.org/assignments/media-types/media-types.xhtml\n  * \n  */\n+\n // Vaild image type for upload. must be in lower case\n-$_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"] = array(\"jpeg\", \"jpg\", \"png\");\n+$_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"] = array(\n+    \"jpeg\"  => array(\"image/jpeg\"),\n+    \"jpg\"   => array(\"image/jpeg\"),\n+    \"png\"   => array(\"image/png\")\n+);\n \n // Valid document type for upload. must be in lower case\n-$_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"] = array(\"pdf\", \"msword\", \"vnd.openxmlformats-officedocument.wordprocessingml.document\", \"vnd.ms-excel\", \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n-\n+$_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"] = array(\n+    \"pdf\"   => array(\"application/pdf\"),\n+    \"doc\"   => array(\"application/msword\"),\n+    \"docx\"  => array(\"vnd.openxmlformats-officedocument.wordprocessingml.document\"),\n+    \"xls\"   => array(\"application/vnd.ms-excel\"),\n+    \"xlsx\"  => array(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")\n+);\n // Valid audio type for upload\n-$_SETTINGS[\"VALID_AUDIO_TYPE_FOR_UPLOAD\"] = array(\"mpeg\", \"ogg\", \"opus\", \"aac\", \"wav\", \"webm\");\n+$_SETTINGS[\"VALID_AUDIO_TYPE_FOR_UPLOAD\"] = array(\n+    \"oga\"   => array(\"audio/ogg\"),\n+    \"opus\"  => array(\"audio/opus\"),\n+    \"wav\"   => array(\"audio/wav\"),\n+    \"weba\"  => array(\"audio/webm\")\n+);\n+\n+// Valid video type for upload\n+$_SETTINGS[\"VALID_VIDEO_TYPE_FOR_UPLOAD\"] = array(\n+    \"mpeg\"  => array(\"video/mpeg\"),\n+    \"ogv\"   => array(\"video/ogg\"),\n+    \"webm\"  => array(\"video/webm\"),\n+    \"mp4\"   => array(\"video/mp4\")\n+);\n \n // Page title variable. All page title will be included here\n $_SETTINGS[\"PAGE_TITLE\"] = array();"
        },
        {
          "filename": "core/functions.php",
          "status": "modified",
          "additions": 52,
          "deletions": 73,
          "patch": "@@ -1464,7 +1464,8 @@ function save_deleted_date($table, $data) {\n  * @param string    $location       Optional. Where the uploaded file has stored. Default is db and return an blob string\n  * \n  */\n-function easyUpload( \n+\n+ function easyUpload( \n     array $file, \n     string $location=\"db\",\n     string $newFileName=\"\",\n@@ -1480,109 +1481,87 @@ function easyUpload(\n \n     global $_SETTINGS;\n \n-    $type = strtolower($type);\n-    $extensionName = strtolower(explode(\"/\", $file[\"type\"])[1]);\n+    $mimeType = strtolower($file[\"type\"]);\n+    $extension = explode(\".\", $file[\"name\"]);\n+    $extension = end($extension);\n     \n     $maxUploadSize = $_SETTINGS[\"MAX_UPLOAD_SIZE\"] * 1024 * 1024;\n \n     if ($maxUploadSize < $file[\"size\"]) {\n         return \"The file is exceeded the max upload size ({$_SETTINGS[\"MAX_UPLOAD_SIZE\"]} MB)\";\n     }\n \n-    $validExtensionForUpload = [];\n+    $validFileForUpload = [];\n     switch($type) {\n-        case \"image\":       $validExtensionForUpload = $_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"]; break;\n-        case \"document\":    $validExtensionForUpload = $_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"]; break;\n-        case \"video\":       $validExtensionForUpload = $_SETTINGS[\"VALID_VIDEO_TYPE_FOR_UPLOAD\"]; break;\n-        case \"audio\":       $validExtensionForUpload = $_SETTINGS[\"VALID_AUDIO_TYPE_FOR_UPLOAD\"]; break;\n-        case \"program\":     $validExtensionForUpload = $_SETTINGS[\"VALID_PROGRAM_TYPE_FOR_UPLOAD\"]; break;\n-        case 'all':         $validExtensionForUpload = array_merge($_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"], $_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"]); break;\n-    }\n-    \n-    if(!in_array($extensionName, $validExtensionForUpload)) {\n-\n-        $validExtensionNameList = join(\", \", $validExtensionForUpload);\n-\n-        return \"Invalid {$type} type. Only {$validExtensionNameList} {$type} type are allowed to upload\";\n+        case \"image\":       $validFileForUpload = $_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"]; break;\n+        case \"document\":    $validFileForUpload = $_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"]; break;\n+        case \"video\":       $validFileForUpload = $_SETTINGS[\"VALID_VIDEO_TYPE_FOR_UPLOAD\"]; break;\n+        case \"audio\":       $validFileForUpload = $_SETTINGS[\"VALID_AUDIO_TYPE_FOR_UPLOAD\"]; break;\n+        case \"program\":     $validFileForUpload = $_SETTINGS[\"VALID_PROGRAM_TYPE_FOR_UPLOAD\"]; break;\n+        case 'all':         $validFileForUpload = array_merge($_SETTINGS[\"VALID_IMAGE_TYPE_FOR_UPLOAD\"], $_SETTINGS[\"VALID_DOCUMENT_TYPE_FOR_UPLOAD\"]); break;\n     }\n \n-    /**\n-     * If location is set to db then return the image as blob string\n-     * Otherwise save the image in the desired location\n-     */\n-    if($location == \"db\") {\n-        \n-        return array (\n-            \"success\"       => true,\n-            \"imageType\"     => $file[\"type\"],\n-            \"blobString\"    => file_get_contents($file[\"tmp_name\"])\n-        );\n \n-    } else {\n-        \n-        $uploadDir = DIR_UPLOAD . $location;\n+    // Validate both file extension and mime type\n+    if( isset( $validFileForUpload[$extension] ) AND in_array( $mimeType, $validFileForUpload[$extension] )  ) {\n \n-        if(!is_dir($uploadDir) && !mkdir($uploadDir, 0777, true)) {\n-            return \"Error creating directory\";\n-        }\n-\n-        // If newFileName is not empty then change the file name by given\n-        $file_name = rand().$file[\"name\"];\n-        if(!empty($newFileName)) {\n-\n-            $file_extension = explode(\".\", $file_name);\n-            $file_extension = end($file_extension);\n-            $file_name = $newFileName . \".\" . $file_extension;\n-\n-        }\n-\n-\n-        if(move_uploaded_file($file[\"tmp_name\"], $uploadDir .\"/\" . $file_name )) {\n \n+        /**\n+         * If location is set to db then return the image as blob string\n+         * Otherwise save the image in the desired location\n+         */\n+        if($location == \"db\") {\n+            \n             return array (\n-                \"success\"      => true,\n-                \"fileName\"     => $file_name\n+                \"success\"       => true,\n+                \"imageType\"     => $file[\"type\"],\n+                \"blobString\"    => file_get_contents($file[\"tmp_name\"])\n             );\n \n         } else {\n+            \n+            $uploadDir = DIR_UPLOAD . $location;\n \n-            return \"Can not upload the file\";\n+            if(!is_dir($uploadDir) && !mkdir($uploadDir, 0777, true)) {\n+                return \"Error creating directory\";\n+            }\n \n-        }\n+            // If newFileName is not empty then change the file name by given\n+            $file_name = rand().$file[\"name\"];\n+            if(!empty($newFileName)) {\n \n-        /*\n-        //upload code here\n-        $data=file_get_contents($_FILES[$fileInputName][\"tmp_name\"]);\n+                $file_extension = explode(\".\", $file_name);\n+                $file_extension = end($file_extension);\n+                $file_name = $newFileName . \".\" . $file_extension;\n \n-        //upload webp\n-        imagewebp(imagecreatefromstring($data),$location.$uploadedFileName.\".webp\",75);\n+            }\n \n-        //upload orginal image\n \n-        switch($type){\n+            if(move_uploaded_file($file[\"tmp_name\"], $uploadDir .\"/\" . $file_name )) {\n \n-            case \"jpeg\":  imagejpeg(imagecreatefromstring($data),$location.$uploadedFileName.\".jpeg\",75);\n-                          imagejpeg(imagescale(imagecreatefromstring($data), 200, 200), $location.$uploadedFileName.\"_thumb.jpeg\",80);\n-                          \n-                          break;\n-            case \"png\":   imagepng(imagecreatefromstring($data),$location.$uploadedFileName.\".png\",75);\n-                          imagepng(imagescale(imagecreatefromstring($data), 200, 200), $location.$uploadedFileName.\"_thumb.png\",80);\n-                          break;\n-            default:      imagejpeg(imagecreatefromstring($data),$location.$uploadedFileName.\".jpg\",75);\n-                          imagejpeg(imagescale(imagecreatefromstring($data), 200, 200), $location.$uploadedFileName.\"_thumb.jpg\",80);\n-                          break;\n+                return array (\n+                    \"success\"      => true,\n+                    \"fileName\"     => $file_name\n+                );\n+\n+            } else {\n+\n+                return \"Can not upload the file\";\n+\n+            }\n \n         }\n \n-        //upload webp thumb\n-        imagewebp(imagescale(imagecreatefromstring($data), 200, 200), $location.$uploadedFileName.\"_thumb.webp\",80);\n-        \n \n-        */\n+    } else {\n \n-    }\n+        return \"Invalid {$type} type.\"; // Only {$validExtensionNameList} {$type} type are allowed to upload\";\n \n+    }\n+    \n }\n+\n+\n function easyUpload_back(\n     string $fileInputName, \n     string $type=\"image\","
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "112aa0b2637e485a6851a4c6734c3bf383607be9",
            "date": "2023-09-26T04:34:20Z",
            "author_login": "kmkalam24"
          },
          {
            "sha": "687051aa6970455771b2e0a3478d719ddfa27617",
            "date": "2023-09-26T04:28:49Z",
            "author_login": "kmkalam24"
          },
          {
            "sha": "c109613506dd04b2da8af8f49cc275cbe7e3b00b",
            "date": "2023-09-26T04:26:00Z",
            "author_login": "kmkalam24"
          },
          {
            "sha": "8d611503b9f71c3b2ec23cff99af5787aa4147a5",
            "date": "2023-09-26T04:25:24Z",
            "author_login": "kmkalam24"
          },
          {
            "sha": "97808dba96de03bd6a3da9696243063870d6fbbf",
            "date": "2023-09-04T09:57:24Z",
            "author_login": "kmkalam24"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-434",
    "description": "Unrestricted Upload of File with Dangerous Type in GitHub repository unilogies/bumsys prior to v1.0.3-beta.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-26T22:15:26.083",
    "last_modified": "2024-11-21T07:37:12.580",
    "fix_date": "2023-01-22T09:02:01Z"
  },
  "references": [
    {
      "url": "http://packetstormsecurity.com/files/172674/Bumsys-Business-Management-System-1.0.3-beta-Shell-Upload.html",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/unilogies/bumsys/commit/a5beff7868ab63bf4ec752a1102f8da033c66b28",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b5e9c578-1a33-4745-bf6b-e7cdb89793f7",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://packetstormsecurity.com/files/172674/Bumsys-Business-Management-System-1.0.3-beta-Shell-Upload.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/unilogies/bumsys/commit/a5beff7868ab63bf4ec752a1102f8da033c66b28",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/b5e9c578-1a33-4745-bf6b-e7cdb89793f7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.601133",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "bumsys",
    "owner": "unilogies",
    "created_at": "2022-10-21T06:15:58Z",
    "updated_at": "2023-09-26T06:07:34Z",
    "pushed_at": "2023-09-26T04:34:23Z",
    "size": 158429,
    "stars": 6,
    "forks": 4,
    "open_issues": 0,
    "watchers": 6,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {},
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:41:25.668884"
  }
}