{
  "cve_id": "CVE-2023-0569",
  "github_data": {
    "repository": "publify/publify",
    "fix_commit": "8905e4e639cf03b758da558568a86c9816253b2d",
    "related_commits": [
      "8905e4e639cf03b758da558568a86c9816253b2d",
      "8905e4e639cf03b758da558568a86c9816253b2d"
    ],
    "patch_url": "https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d.patch",
    "fix_commit_details": {
      "sha": "8905e4e639cf03b758da558568a86c9816253b2d",
      "commit_date": "2022-08-19T21:41:41Z",
      "author": {
        "login": "mvz",
        "type": "User",
        "stats": {
          "total_commits": 2865,
          "average_weekly_commits": 2.7442528735632186,
          "total_additions": 167894,
          "total_deletions": 304669,
          "weeks_active": 298
        }
      },
      "commit_message": {
        "title": "Require user passwords to be strong",
        "length": 121,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 63,
        "additions": 43,
        "deletions": 20
      },
      "files": [
        {
          "filename": "publify_core/app/models/user.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -12,7 +12,7 @@ class User < ApplicationRecord\n   # Include default devise modules. Others available are:\n   # :confirmable, :lockable, :timeoutable and :omniauthable\n   devise :database_authenticatable, :registerable,\n-         :recoverable, :rememberable, :trackable, :validatable\n+         :recoverable, :rememberable, :trackable, :validatable, :zxcvbnable\n   include ConfigManager\n   include StringLengthLimit\n "
        },
        {
          "filename": "publify_core/lib/publify_core.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n \n require \"devise\"\n require \"devise-i18n\"\n+require \"devise_zxcvbn\"\n \n require \"publify_core/version\"\n require \"publify_core/engine\""
        },
        {
          "filename": "publify_core/lib/publify_core/testing_support/factories.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -21,7 +21,7 @@\n     notify_via_email { false }\n     notify_on_new_articles { false }\n     notify_on_comments { false }\n-    password { \"top-secret\" }\n+    password { \"top-Secret12!$#\" }\n     state { \"active\" }\n     profile { User::CONTRIBUTOR }\n "
        },
        {
          "filename": "publify_core/publify_core.gemspec",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -28,6 +28,7 @@ Gem::Specification.new do |s|\n   s.add_dependency \"carrierwave\", \"~> 2.0\"\n   s.add_dependency \"devise\", \"~> 4.7.1\"\n   s.add_dependency \"devise-i18n\", \"~> 1.2\"\n+  s.add_dependency \"devise_zxcvbn\", \"~> 6.0\"\n   s.add_dependency \"dynamic_form\", \"~> 1.1.4\"\n   s.add_dependency \"fog-aws\", \"~> 3.2\"\n   s.add_dependency \"fog-core\", \"~> 2.2\""
        },
        {
          "filename": "publify_core/spec/controllers/admin/users_controller_spec.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -7,6 +7,7 @@\n   let(:admin) { create(:user, :as_admin) }\n   let(:publisher) { create(:user, :as_publisher) }\n   let(:contributor) { create(:user, :as_contributor) }\n+  let(:strong_password) { \"fhnehnhfiiuh\" }\n \n   render_views\n \n@@ -48,8 +49,8 @@\n     before do\n       sign_in admin\n       post :create, params: { user: { login: \"errand\", email: \"corey@test.com\",\n-                                      password: \"testpass\",\n-                                      password_confirmation: \"testpass\",\n+                                      password: strong_password,\n+                                      password_confirmation: strong_password,\n                                       profile: User::CONTRIBUTOR,\n                                       text_filter_name: \"markdown\",\n                                       nickname: \"fooo\", firstname: \"bar\" } }\n@@ -70,8 +71,9 @@\n     it \"redirects to index\" do\n       post :update, params: { id: contributor.id,\n                               user: { login: \"errand\",\n-                                      email: \"corey@test.com\", password: \"testpass\",\n-                                      password_confirmation: \"testpass\" } }\n+                                      email: \"corey@test.com\",\n+                                      password: strong_password,\n+                                      password_confirmation: strong_password } }\n       expect(response).to redirect_to(action: \"index\")\n     end\n "
        },
        {
          "filename": "publify_core/spec/controllers/setup_controller_spec.rb",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -3,6 +3,8 @@\n require \"rails_helper\"\n \n describe SetupController, type: :controller do\n+  let(:strong_password) { \"fhnehnhfiiuh\" }\n+\n   describe \"#index\" do\n     describe \"when no blog is configured\" do\n       before do\n@@ -35,7 +37,7 @@\n         before do\n           ActionMailer::Base.deliveries.clear\n           post :create, params: { setting: { blog_name: \"Foo\", email: \"foo@bar.net\",\n-                                             password: \"foo123bar\" } }\n+                                             password: strong_password } }\n         end\n \n         it \"correctly initializes blog and users\" do\n@@ -64,13 +66,13 @@\n       describe \"when passing incorrect parameters\" do\n         it \"empty blog name should raise an error\" do\n           post :create, params: { setting: { blog_name: \"\", email: \"foo@bar.net\",\n-                                             password: \"foobar123\" } }\n+                                             password: strong_password } }\n           expect(response).to redirect_to(action: \"index\")\n         end\n \n         it \"empty email should raise an error\" do\n           post :create, params: { setting: { blog_name: \"Foo\", email: \"\",\n-                                             password: \"foobar123\" } }\n+                                             password: strong_password } }\n           expect(response).to redirect_to(action: \"index\")\n         end\n \n@@ -79,6 +81,12 @@\n                                              password: \"\" } }\n           expect(response).to redirect_to(action: \"index\")\n         end\n+\n+        it \"weak password should raise an error\" do\n+          post :create, params: { setting: { blog_name: \"Foo\", email: \"foo@bar.net\",\n+                                             password: \"foo123bar\" } }\n+          expect(response).to redirect_to(action: \"index\")\n+        end\n       end\n     end\n "
        },
        {
          "filename": "publify_core/spec/features/login_spec.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -3,19 +3,21 @@\n require \"rails_helper\"\n \n RSpec.feature \"Logging in\", type: :feature do\n+  let(:strong_password) { \"fhnehnhfiiuh\" }\n+\n   before do\n     stub_request(:get,\n                  \"http://www.google.com/search?output=rss&q=link:www.example.com&tbm=blg\").\n       to_return(status: 200, body: \"\", headers: {})\n     load Rails.root.join(\"db/seeds.rb\")\n     Blog.first.update blog_name: \"Awesome!\", base_url: \"http://www.example.com/\"\n-    create :user, :as_admin, login: \"admin\", password: \"a-secret\"\n+    create :user, :as_admin, login: \"admin\", password: strong_password\n   end\n \n   scenario \"Admin logs in\" do\n     visit \"/admin\"\n     fill_in :user_login, with: \"admin\"\n-    fill_in :user_password, with: \"a-secret\"\n+    fill_in :user_password, with: strong_password\n \n     click_button I18n.t(\"devise.sessions.new.sign_in\")\n "
        },
        {
          "filename": "publify_core/spec/features/reset_password_spec.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -6,7 +6,7 @@\n   before do\n     load Rails.root.join(\"db/seeds.rb\")\n     Blog.first.update blog_name: \"Awesome!\", base_url: \"http://www.example.com/\"\n-    create :user, :as_admin, login: \"admin\", password: \"forget-me\"\n+    create :user, :as_admin, login: \"admin\", password: \"Fo_rgEt-1m5e2\"\n   end\n \n   scenario \"Admin resets password\" do\n@@ -23,8 +23,8 @@\n \n     visit url\n \n-    fill_in :user_password, with: \"a-secret\"\n-    fill_in :user_password_confirmation, with: \"a-secret\"\n+    fill_in :user_password, with: \"a5-SeCre1T4\"\n+    fill_in :user_password_confirmation, with: \"a5-SeCre1T4\"\n \n     click_button I18n.t(\"devise.passwords.edit.change_my_password\")\n     expect(page).to have_text I18n.t(\"devise.passwords.updated\")"
        },
        {
          "filename": "publify_core/spec/features/setup_spec.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -3,6 +3,8 @@\n require \"rails_helper\"\n \n RSpec.feature \"Blog setup\", type: :feature do\n+  let(:strong_password) { \"fhnehnhfiiuh\" }\n+\n   before do\n     stub_request(:get,\n                  \"http://www.google.com/search?output=rss&q=link:www.example.com&tbm=blg\").\n@@ -18,7 +20,7 @@\n     # Set up the blog\n     fill_in :setting_blog_name, with: \"Awesome blog\"\n     fill_in :setting_email, with: \"foo@bar.com\"\n-    fill_in :setting_password, with: \"test1234\"\n+    fill_in :setting_password, with: strong_password\n     click_button I18n.t!(\"generic.save\")\n \n     # Confirm set up success\n@@ -38,7 +40,7 @@\n \n     visit admin_dashboard_path\n     fill_in :user_login, with: \"admin\"\n-    fill_in :user_password, with: \"test1234\"\n+    fill_in :user_password, with: strong_password\n     find(\"input[type=submit]\").click\n     expect(page).to have_text I18n.t!(\"admin.dashboard.index.welcome_back\",\n                                       user_name: \"admin\")"
        },
        {
          "filename": "publify_core/spec/features/signup_spec.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -3,12 +3,14 @@\n require \"rails_helper\"\n \n RSpec.feature \"Signing up\", type: :feature do\n+  let(:strong_password) { \"whhefwhfwefhiu\" }\n+\n   before do\n     load Rails.root.join(\"db/seeds.rb\")\n     Blog.first.update(blog_name: \"Awesome!\",\n                       base_url: \"http://www.example.com/\",\n                       allow_signup: 1)\n-    create :user, :as_admin, login: \"admin\", password: \"a-secret\"\n+    create :user, :as_admin, login: \"admin\"\n   end\n \n   scenario \"User signs up for an account\" do\n@@ -18,8 +20,8 @@\n     # Create account\n     fill_in :user_login, with: \"hello\"\n     fill_in :user_email, with: \"hello@hello.com\"\n-    fill_in :user_password, with: \"hush-hush\"\n-    fill_in :user_password_confirmation, with: \"hush-hush\"\n+    fill_in :user_password, with: strong_password\n+    fill_in :user_password_confirmation, with: strong_password\n     click_button I18n.t!(\"devise.registrations.new.sign_up\")\n \n     # Confirm creation success\n@@ -32,7 +34,7 @@\n     # Confirm ability to sign in\n     visit admin_dashboard_path\n     fill_in :user_login, with: \"hello\"\n-    fill_in :user_password, with: \"hush-hush\"\n+    fill_in :user_password, with: strong_password\n     find(\"input[type=submit]\").click\n     expect(page).to have_text I18n.t!(\"devise.sessions.signed_in\")\n "
        },
        {
          "filename": "publify_core/spec/models/user_spec.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -98,6 +98,11 @@\n \n       expect(bar).not_to allow_value(\"foo@foo.com\").for(:email)\n     end\n+\n+    it \"requires a strong password\" do\n+      nearly_valid_user = build(:user)\n+      expect(nearly_valid_user).not_to allow_value(\"password01\").for(:password)\n+    end\n   end\n \n   describe \"#initialize\" do"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 8,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9514eaf5293956182bd58e70ae01b1a3b0633614",
            "date": "2025-01-12T11:19:19Z",
            "author_login": "mvz"
          },
          {
            "sha": "b13b6d705822f34c48d96813ec2dd5a3a66782eb",
            "date": "2025-01-10T09:41:19Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bc406080b2baff54e26f00a4ca36ac5a7c2ce36f",
            "date": "2024-12-28T11:33:09Z",
            "author_login": "mvz"
          },
          {
            "sha": "7c73543d855d0b2cac1baa690c7eb4c6cf6a49dd",
            "date": "2024-12-25T10:01:38Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "effb2f66c060b40d482885333c474c41c7bf5b1b",
            "date": "2024-12-13T14:31:38Z",
            "author_login": "mvz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-521",
    "description": "Weak Password Requirements in GitHub repository publify/publify prior to 9.2.10.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-29T17:15:08.633",
    "last_modified": "2024-11-21T07:37:25.190",
    "fix_date": "2022-08-19T21:41:41Z"
  },
  "references": [
    {
      "url": "https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9",
      "source": "security@huntr.dev",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/publify/publify/commit/8905e4e639cf03b758da558568a86c9816253b2d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/81b1e1da-10dd-435e-94ae-4bdd41df6df9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.951696",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "publify",
    "owner": "publify",
    "created_at": "2008-10-23T14:45:23Z",
    "updated_at": "2025-01-12T11:19:26Z",
    "pushed_at": "2025-01-12T11:19:21Z",
    "size": 32806,
    "stars": 1828,
    "forks": 3689,
    "open_issues": 86,
    "watchers": 1828,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Less": 189139,
      "Ruby": 136723,
      "HTML": 16246,
      "CSS": 1115
    },
    "commit_activity": {
      "total_commits_last_year": 41,
      "avg_commits_per_week": 0.7884615384615384,
      "days_active_last_year": 30
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:55:41.326580"
  }
}