{
  "cve_id": "CVE-2023-0760",
  "github_data": {
    "repository": "gpac/gpac",
    "fix_commit": "ea7395f39f601a7750d48d606e9d10ea0b7beefe",
    "related_commits": [
      "ea7395f39f601a7750d48d606e9d10ea0b7beefe",
      "ea7395f39f601a7750d48d606e9d10ea0b7beefe"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "ea7395f39f601a7750d48d606e9d10ea0b7beefe",
      "commit_date": "2023-02-08T15:52:00Z",
      "author": {
        "login": "aureliendavid",
        "type": "User",
        "stats": {
          "total_commits": 814,
          "average_weekly_commits": 0.7972575905974535,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 214
        }
      },
      "commit_message": {
        "title": "sgpd box entry: disallow null grouping_type (#2389)",
        "length": 51,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 12,
        "deletions": 9
      },
      "files": [
        {
          "filename": "src/isomedia/box_code_base.c",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -4429,7 +4429,7 @@ GF_Err video_sample_entry_box_size(GF_Box *s)\n \n \t/*VVC*/\n \tgf_isom_check_position(s, (GF_Box *)ptr->vvc_config, &pos);\n-\t\n+\n \t/*AV1*/\n \tgf_isom_check_position(s, (GF_Box *)ptr->av1_config, &pos);\n \n@@ -8857,7 +8857,7 @@ GF_Err dac3_box_write(GF_Box *s, GF_BitStream *bs)\n \te = gf_isom_box_write_header(s, bs);\n \tif (ptr->cfg.is_ec3) s->type = GF_ISOM_BOX_TYPE_DAC3;\n \tif (e) return e;\n-\t\n+\n \te = gf_odf_ac3_cfg_write_bs(&ptr->cfg, bs);\n \tif (e) return e;\n \n@@ -9983,6 +9983,9 @@ static void *sgpd_parse_entry(u32 grouping_type, GF_BitStream *bs, s32 bytes_in_\n \t\t}\n \t\treturn ptr;\n \t}\n+\tcase 0:\n+\t\tGF_LOG(GF_LOG_WARNING, GF_LOG_CONTAINER, (\"[iso file] sgpd entry null grouping_type is invalid\\n\") );\n+\t\treturn NULL;\n \tdefault:\n \t\tbreak;\n \t}"
        },
        {
          "filename": "src/isomedia/box_funcs.c",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -104,7 +104,7 @@ GF_Err gf_isom_box_parse_ex(GF_Box **outBox, GF_BitStream *bs, u32 parent_type,\n \tGF_Box *newBox;\n \tBool skip_logs = (gf_bs_get_cookie(bs) & GF_ISOM_BS_COOKIE_NO_LOGS ) ? GF_TRUE : GF_FALSE;\n \tBool is_special = GF_TRUE;\n-\t\n+\n \tif ((bs == NULL) || (outBox == NULL) ) return GF_BAD_PARAM;\n \t*outBox = NULL;\n \tif (gf_bs_available(bs) < 8) {\n@@ -1528,7 +1528,7 @@ static struct box_registry_entry {\n \tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_YVYU, video_sample_entry, \"stsd\", \"apple\"),\n \tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_RGBA, video_sample_entry, \"stsd\", \"apple\"),\n \tBOX_DEFINE_S_CHILD( GF_QT_SUBTYPE_ABGR, video_sample_entry, \"stsd\", \"apple\"),\n-\t\n+\n \tFBOX_DEFINE_S(GF_QT_BOX_TYPE_STPS, stss, \"stbl\", 0, \"apple\"),\n \n \t//dolby boxes\n@@ -1918,7 +1918,7 @@ void gf_isom_check_position(GF_Box *s, GF_Box *child, u32 *pos)\n \n \ts32 cur_pos = gf_list_find(s->child_boxes, child);\n \n-\t//happens when partially cloning boxes \n+\t//happens when partially cloning boxes\n \tif (cur_pos < 0) return;\n \n \tif (cur_pos != (s32) *pos) {\n@@ -1949,7 +1949,7 @@ GF_Err gf_isom_box_write(GF_Box *a, GF_BitStream *bs)\n \tif (!a) return GF_BAD_PARAM;\n \t//box has been disabled, do not write\n \tif (!a->size) return GF_OK;\n-\t\n+\n \tif (a->registry->disabled) {\n \t\tGF_LOG(GF_LOG_DEBUG, GF_LOG_CONTAINER, (\"[iso file] Box %s disabled registry, skip write\\n\", gf_4cc_to_str(a->type)));\n \t\treturn GF_OK;"
        },
        {
          "filename": "src/isomedia/isom_read.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -2304,7 +2304,7 @@ GF_Err gf_isom_get_sample_for_media_time(GF_ISOFile *the_file, u32 trackNumber,\n \t}\n \tif (static_sample && ! (*sample)->alloc_size )\n \t\t (*sample)->alloc_size =  (*sample)->dataLength;\n-\t\t \n+\n \treturn GF_OK;\n }\n \n@@ -4674,7 +4674,7 @@ const u32 *gf_isom_get_track_switch_parameter(GF_ISOFile *movie, u32 trackNumber\n \tif (!map) return NULL;\n \ttsel = (GF_TrackSelectionBox*)gf_list_get(map->boxes, group_index-1);\n \tif (!tsel) return NULL;\n-\t\n+\n \t*switchGroupID = tsel->switchGroup;\n \t*criteriaListSize = tsel->attributeListCount;\n \treturn (const u32 *) tsel->attributeList;\n@@ -5409,7 +5409,7 @@ GF_Err gf_isom_get_sample_cenc_info_internal(GF_TrackBox *trak, void *traf, GF_S\n \tif (skip_byte_block) *skip_byte_block = 0;\n \tif (key_info) *key_info = NULL;\n \tif (key_info_size) *key_info_size = 0;\n-\t\n+\n \tif (!trak) return GF_BAD_PARAM;\n \n #ifdef\tGPAC_DISABLE_ISOM_FRAGMENTS"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c5d9ff66f5774d9c2abef9069544b3a5228227c0",
            "date": "2025-01-23T17:17:00Z",
            "author_login": "rbouqueau"
          },
          {
            "sha": "ca802c463137bd497be16a623aa24eeea3a7b448",
            "date": "2025-01-23T14:31:26Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "ea54ea8df17e408119fd5d9aca5582b0d712c369",
            "date": "2025-01-23T14:31:03Z",
            "author_login": "aureliendavid"
          },
          {
            "sha": "5ff728a44c4a71eae0ae0ff4bb494e52beb68ac7",
            "date": "2025-01-23T14:34:18Z",
            "author_login": "jeanlf"
          },
          {
            "sha": "7529a44d9797a640672e25c3dbb6247e1e30ab6b",
            "date": "2025-01-09T13:57:28Z",
            "author_login": "jeanlf"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-122",
    "description": "Heap-based Buffer Overflow in GitHub repository gpac/gpac prior to V2.1.0-DEV.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-09T14:15:24.597",
    "last_modified": "2024-11-21T07:37:46.070",
    "fix_date": "2023-02-08T15:52:00Z"
  },
  "references": [
    {
      "url": "https://github.com/gpac/gpac/commit/ea7395f39f601a7750d48d606e9d10ea0b7beefe",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d06223df-a473-4c82-96d0-23726b844b21",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5452",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/gpac/gpac/commit/ea7395f39f601a7750d48d606e9d10ea0b7beefe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d06223df-a473-4c82-96d0-23726b844b21",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5452",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:04.007351",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "gpac",
    "owner": "gpac",
    "created_at": "2014-05-03T11:29:57Z",
    "updated_at": "2025-01-24T03:35:30Z",
    "pushed_at": "2025-01-25T22:34:55Z",
    "size": 148900,
    "stars": 2868,
    "forks": 541,
    "open_issues": 87,
    "watchers": 2868,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29236526,
      "JavaScript": 1166250,
      "C++": 591365,
      "Roff": 570704,
      "Python": 185337,
      "Makefile": 105620,
      "HTML": 100652,
      "Java": 92437,
      "GLSL": 90260,
      "Objective-C": 24884,
      "Shell": 21810,
      "NSIS": 17560,
      "Rez": 13704,
      "CSS": 4998,
      "Batchfile": 4898,
      "Dockerfile": 3216,
      "Nix": 1229
    },
    "commit_activity": {
      "total_commits_last_year": 1277,
      "avg_commits_per_week": 24.557692307692307,
      "days_active_last_year": 239
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:37:36.451192"
  }
}