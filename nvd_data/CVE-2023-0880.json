{
  "cve_id": "CVE-2023-0880",
  "github_data": {
    "repository": "thorsten/phpmyfaq",
    "fix_commit": "a67dca41576834a1ddfee61b9e799b686b75d4fa",
    "related_commits": [
      "a67dca41576834a1ddfee61b9e799b686b75d4fa",
      "a67dca41576834a1ddfee61b9e799b686b75d4fa"
    ],
    "patch_url": "https://github.com/thorsten/phpmyfaq/commit/a67dca41576834a1ddfee61b9e799b686b75d4fa.patch",
    "fix_commit_details": {
      "sha": "a67dca41576834a1ddfee61b9e799b686b75d4fa",
      "commit_date": "2023-01-27T17:02:47Z",
      "author": {
        "login": "thorsten",
        "type": "User",
        "stats": {
          "total_commits": 7352,
          "average_weekly_commits": 9.19,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 647
        }
      },
      "commit_message": {
        "title": "fix: added trim to avoid questions with a single space",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 9,
        "deletions": 9
      },
      "files": [
        {
          "filename": "phpmyfaq/ajaxservice.php",
          "status": "modified",
          "additions": 9,
          "deletions": 9,
          "patch": "@@ -317,21 +317,21 @@\n         $category = new Category($faqConfig);\n         $questionObject = new Question($faqConfig);\n \n-        $author = Filter::filterInput(INPUT_POST, 'name', FILTER_UNSAFE_RAW);\n-        $email = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n+        $author = trim(Filter::filterInput(INPUT_POST, 'name', FILTER_UNSAFE_RAW));\n+        $email = trim(Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL));\n         $faqId = Filter::filterInput(INPUT_POST, 'faqid', FILTER_VALIDATE_INT);\n         $faqLanguage = Filter::filterInput(INPUT_POST, 'lang', FILTER_UNSAFE_RAW);\n         $question = Filter::filterInput(INPUT_POST, 'question', FILTER_UNSAFE_RAW);\n-        $question = strip_tags($question);\n+        $question = trim(strip_tags($question));\n         if ($faqConfig->get('main.enableWysiwygEditorFrontend')) {\n             $answer = Filter::filterInput(INPUT_POST, 'answer', FILTER_SANITIZE_SPECIAL_CHARS);\n-            $answer = html_entity_decode($answer);\n+            $answer = trim(html_entity_decode($answer));\n         } else {\n             $answer = Filter::filterInput(INPUT_POST, 'answer', FILTER_UNSAFE_RAW);\n             $answer = strip_tags($answer);\n-            $answer = nl2br($answer);\n+            $answer = trim(nl2br($answer));\n         }\n-        $translatedAnswer = Filter::filterInput(INPUT_POST, 'translated_answer', FILTER_UNSAFE_RAW);\n+        $translatedAnswer = trim(Filter::filterInput(INPUT_POST, 'translated_answer', FILTER_UNSAFE_RAW));\n         $contentLink = Filter::filterInput(INPUT_POST, 'contentlink', FILTER_UNSAFE_RAW);\n         $contentLink = Filter::filterVar($contentLink, FILTER_VALIDATE_URL);\n         $keywords = Filter::filterInput(INPUT_POST, 'keywords', FILTER_UNSAFE_RAW);\n@@ -478,11 +478,11 @@\n         $faq = new Faq($faqConfig);\n         $cat = new Category($faqConfig);\n         $categories = $cat->getAllCategories();\n-        $author = Filter::filterInput(INPUT_POST, 'name', FILTER_UNSAFE_RAW);\n-        $email = Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL);\n+        $author = trim(Filter::filterInput(INPUT_POST, 'name', FILTER_UNSAFE_RAW));\n+        $email = trim(Filter::filterInput(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL));\n         $ucategory = Filter::filterInput(INPUT_POST, 'category', FILTER_VALIDATE_INT);\n         $question = Filter::filterInput(INPUT_POST, 'question', FILTER_UNSAFE_RAW);\n-        $question = strip_tags($question);\n+        $question = trim(strip_tags($question));\n         $save = Filter::filterInput(INPUT_POST, 'save', FILTER_VALIDATE_INT, 0);\n \n         // If e-mail address is set to optional"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0bde62632e8a6501702a5e0dc76b821b0e193cd1",
            "date": "2025-01-14T14:57:50Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "69ccf3a0310a91e580ba3fbae763cf6fc4e70e8c",
            "date": "2025-01-14T04:44:45Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0aff5a567446adbf5d024e0d8b2b132666f91464",
            "date": "2025-01-13T20:29:34Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "0ee934f2713e59ed829afa56b95697670cdcfad7",
            "date": "2025-01-13T19:58:07Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "471ebc8577558da4bcdbf45f7b18ab75e33f9a37",
            "date": "2025-01-13T19:57:09Z",
            "author_login": "modelrailroader"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L",
    "cwe_id": "CWE-115",
    "description": "Misinterpretation of Input in GitHub repository thorsten/phpmyfaq prior to 3.1.11.\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-17T03:15:09.950",
    "last_modified": "2024-11-21T07:38:01.653",
    "fix_date": "2023-01-27T17:02:47Z"
  },
  "references": [
    {
      "url": "https://github.com/thorsten/phpmyfaq/commit/a67dca41576834a1ddfee61b9e799b686b75d4fa",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/14fc4841-0f5d-4e12-bf9e-1b60d2ac6a6c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thorsten/phpmyfaq/commit/a67dca41576834a1ddfee61b9e799b686b75d4fa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/14fc4841-0f5d-4e12-bf9e-1b60d2ac6a6c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:04.069947",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "phpMyFAQ",
    "owner": "thorsten",
    "created_at": "2009-08-04T19:26:15Z",
    "updated_at": "2025-01-14T04:55:59Z",
    "pushed_at": "2025-01-14T04:56:02Z",
    "size": 56435,
    "stars": 589,
    "forks": 255,
    "open_issues": 19,
    "watchers": 589,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 9489706,
      "Twig": 348463,
      "JavaScript": 322766,
      "SCSS": 19741,
      "Shell": 9475,
      "Dockerfile": 2594,
      "CSS": 1125,
      "HTML": 205
    },
    "commit_activity": {
      "total_commits_last_year": 1338,
      "avg_commits_per_week": 25.73076923076923,
      "days_active_last_year": 282
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mpl-2.0"
    },
    "collected_at": "2025-01-14T13:07:11.405854"
  }
}