{
  "cve_id": "CVE-2023-1149",
  "github_data": {
    "repository": "btcpayserver/btcpayserver",
    "fix_commit": "ddb125f45892b4dafdbd5c072af1ce623758bb92",
    "related_commits": [
      "ddb125f45892b4dafdbd5c072af1ce623758bb92",
      "ddb125f45892b4dafdbd5c072af1ce623758bb92"
    ],
    "patch_url": "https://github.com/btcpayserver/btcpayserver/commit/ddb125f45892b4dafdbd5c072af1ce623758bb92.patch",
    "fix_commit_details": {
      "sha": "ddb125f45892b4dafdbd5c072af1ce623758bb92",
      "commit_date": "2023-02-22T15:35:34Z",
      "author": {
        "login": "NicolasDorier",
        "type": "User",
        "stats": {
          "total_commits": 3521,
          "average_weekly_commits": 9.169270833333334,
          "total_additions": 433020,
          "total_deletions": 300833,
          "weeks_active": 334
        }
      },
      "commit_message": {
        "title": "Fix: HTML injection in payment request/posData/receiptData (Close #4678) (#4679)",
        "length": 136,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 106,
        "additions": 28,
        "deletions": 78
      },
      "files": [
        {
          "filename": "BTCPayServer/Views/Shared/Bitcoin/BitcoinLikeMethodCheckoutNoScript.cshtml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n @model PaymentModel\n <div>\n-    <p>To complete payment, please send <b>@Safe.Raw(Model.IsUnsetTopUp? \"any amount of\": Model.BtcDue) @Model.CryptoCode</b> to <b style=\"word-break: break-word;\">@Model.BtcAddress</b></p>\n+    <p>To complete payment, please send <b>@(Model.IsUnsetTopUp ? \"any amount of\" : Model.BtcDue) @Model.CryptoCode</b> to <b style=\"word-break: break-word;\">@Model.BtcAddress</b></p>\n     <p>Time remaining: @Model.TimeLeft</p>\n     <p>\n         <a href=\"@Model.InvoiceBitcoinUrl\" style=\"word-break: break-word;\" rel=\"noreferrer noopener\">@Model.InvoiceBitcoinUrl</a>"
        },
        {
          "filename": "BTCPayServer/Views/Shared/Bitcoin/ViewBitcoinLikePaymentData.cshtml",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -77,7 +77,13 @@\n                     <td>@payment.Crypto</td>\n                     <td>@(payment.CryptoPaymentData.KeyPath?.ToString()?? \"Unknown\")</td>\n                     <td style=\"max-width:300px;\" data-bs-toggle=\"tooltip\" class=\"text-truncate\" title=\"@payment.DepositAddress\">@payment.DepositAddress</td>\n-                    <td class=\"payment-value\">@payment.CryptoPaymentData.GetValue() @Safe.Raw(payment.AdditionalInformation is string i ? $\"<br/>({i})\" : string.Empty)</td>\n+                    <td class=\"payment-value\">\n+                        @payment.CryptoPaymentData.GetValue()\n+                        @if (!string.IsNullOrEmpty(payment.AdditionalInformation))\n+                        {\n+                            <div>(@payment.AdditionalInformation)</div>\n+                        }\n+                    </td>\n                     @if (hasNetworkFee)\n                     {\n                         <td>@payment.NetworkFee</td>"
        },
        {
          "filename": "BTCPayServer/Views/Shared/PosData.cshtml",
          "status": "modified",
          "additions": 16,
          "deletions": 12,
          "patch": "@@ -16,16 +16,16 @@\n             {\n                 if (!string.IsNullOrEmpty(key))\n                 {\n-                    <th class=\"w-150px\">@Safe.Raw(key)</th>\n+                    <th class=\"w-150px\">@key</th>\n                 }\n                 <td>\n                     @if (IsValidURL(str))\n                     {\n-                        <a href=\"@Safe.Raw(str)\" target=\"_blank\" rel=\"noreferrer noopener\">@Safe.Raw(str)</a>\n+                        <a href=\"@str\" target=\"_blank\" rel=\"noreferrer noopener\">@str</a>\n                     }\n                     else\n                     {\n-                        @Safe.Raw(value?.ToString())\n+                        @value?.ToString()\n                     }\n                 </td>\n             }\n@@ -34,22 +34,26 @@\n                 @* This is the array case *@\n                 if (subItems.Count == 1 && subItems.First().Value is string str2)\n                 {\n-                    <th class=\"w-150px\">@Safe.Raw(key)</th>\n+                    <th class=\"w-150px\">@key</th>\n                     <td>\n                         @if (IsValidURL(str2))\n                         {\n-                            <a href=\"@Safe.Raw(str2)\" target=\"_blank\" rel=\"noreferrer noopener\">@Safe.Raw(str2)</a>\n+                            <a href=\"@str2\" target=\"_blank\" rel=\"noreferrer noopener\">@str2</a>\n                         }\n                         else\n                         {\n-                            @Safe.Raw(subItems.First().Value?.ToString())\n+                            @subItems.First().Value?.ToString()\n                         }\n-                    </td>\n-                }\n-                else\n-                {\n-                    <td colspan=\"2\" >\n-                        @Safe.Raw($\"<h{Model.Level + 3} class=\\\"mt-4 mb-3\\\">{key}</h{Model.Level + 3}>\")\n+\t\t\t\t\t</td>\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t{\n+\t\t\t\t\t<td colspan=\"2\" >\n+\t\t\t\t\t\t@{\n+\t\t\t\t\t\t\tWrite(Html.Raw($\"<h{Model.Level + 3} class=\\\"mt-4 mb-3\\\">\"));\n+\t\t\t\t\t\t\tWrite(key);\n+\t\t\t\t\t\t\tWrite(Html.Raw($\"</h{Model.Level + 3}>\"));\n+\t\t\t\t\t\t}\n                         <partial name=\"PosData\" model=\"(subItems, Model.Level + 1)\"/>\n                     </td>\n                 }"
        },
        {
          "filename": "BTCPayServer/Views/UIInvoice/PosData.cshtml",
          "status": "removed",
          "additions": 0,
          "deletions": 60,
          "patch": "@@ -1,60 +0,0 @@\n-@model (Dictionary<string, object> Items, int Level)\n-\n-@functions {\n-    private bool IsValidURL(string source)\n-    {\n-        return Uri.TryCreate(source, UriKind.Absolute, out var uriResult) && \n-            (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps);\n-    }\n-}\n-\n-<table class=\"table my-0\">\n-    @foreach (var (key, value) in Model.Items)\n-    {\n-        <tr>\n-            @if (value is string str)\n-            {\n-                if (!string.IsNullOrEmpty(key))\n-                {\n-                    <th class=\"w-150px\">@Safe.Raw(key)</th>\n-                }\n-                <td>\n-                    @if (IsValidURL(str))\n-                    {\n-                        <a href=\"@Safe.Raw(str)\" target=\"_blank\" rel=\"noreferrer noopener\">@Safe.Raw(str)</a>\n-                    }\n-                    else\n-                    {\n-                        @Safe.Raw(value?.ToString())\n-                    }\n-                </td>\n-            }\n-            else if (value is Dictionary<string, object>subItems)\n-            {\n-                @* This is the array case *@\n-                if (subItems.Count == 1 && subItems.First().Value is string str2)\n-                {\n-                    <th class=\"w-150px\">@Safe.Raw(key)</th>\n-                    <td>\n-                        @if (IsValidURL(str2))\n-                        {\n-                            <a href=\"@Safe.Raw(str2)\" target=\"_blank\" rel=\"noreferrer noopener\">@Safe.Raw(str2)</a>\n-                        }\n-                        else\n-                        {\n-                            @Safe.Raw(subItems.First().Value?.ToString())\n-                        }\n-                    </td>\n-                }\n-                else\n-                {\n-                    <td colspan=\"2\" >\n-                        @Safe.Raw($\"<h{Model.Level + 3} class=\\\"mt-4 mb-3\\\">{key}</h{Model.Level + 3}>\")\n-                        <partial name=\"PosData\" model=\"(subItems, Model.Level + 1)\"/>\n-                    </td>\n-                }\n-            }\n-        </tr>\n-    }\n-</table>\n-"
        },
        {
          "filename": "BTCPayServer/Views/UILNURL/EditLightningAddress.cshtml",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -69,7 +69,7 @@\n                 <div class=\"col-12 col-sm-auto\">\n                     <div class=\"form-group\">\n                         <label asp-for=\"Add.CurrencyCode\" class=\"form-label\"></label>\n-                        <input asp-for=\"Add.CurrencyCode\" class=\"form-control\" style=\"max-width:16ch;\"/>\n+                        <input asp-for=\"Add.CurrencyCode\" class=\"form-control w-auto\" currency-selection style=\"max-width:16ch;\"/>\n                         <span asp-validation-for=\"Add.CurrencyCode\" class=\"text-danger\"></span>\n                     </div>\n                 </div>\n@@ -126,15 +126,15 @@\n                             <td class=\"settings-holder align-middle\">\n                                 @if (Model.Items[index].Min.HasValue)\n                                 {\n-                                    <span>@Safe.Raw($\"{Model.Items[index].Min} min sats\")</span>\n+                                    <span>@Model.Items[index].Min min sats</span>\n                                 }\n                                 @if (Model.Items[index].Max.HasValue)\n                                 {\n-                                    <span> @Safe.Raw($\"{Model.Items[index].Max} max sats\")</span>\n+                                    <span>@Model.Items[index].Max max sats</span>\n                                 }\n                                 @if (!string.IsNullOrEmpty(Model.Items[index].CurrencyCode))\n                                 {\n-                                    <span> @Safe.Raw($\"tracked in {Model.Items[index].CurrencyCode}\")</span>\n+                                    <span>tracked in @Model.Items[index].CurrencyCode</span>\n                                 }\n                             </td>\n                             <td class=\"text-end\">"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e1f47b273812f462eac59acb457e4932629b5564",
            "date": "2025-01-13T03:41:13Z",
            "author_login": "NicolasDorier"
          },
          {
            "sha": "9d8a231274a8187ba2c8cc64328d775a6a1497cd",
            "date": "2025-01-10T15:16:17Z",
            "author_login": "NicolasDorier"
          },
          {
            "sha": "5a8c959b6baf0d8ed66167ecd263a945325da6d3",
            "date": "2025-01-10T15:15:04Z",
            "author_login": "NicolasDorier"
          },
          {
            "sha": "e0a51537a1b11ccd0057014a77f4288ddd8d799d",
            "date": "2025-01-10T11:21:33Z",
            "author_login": "NicolasDorier"
          },
          {
            "sha": "d2c52c10bdfa57a621aea392e75558e07bdd73b0",
            "date": "2025-01-10T10:16:48Z",
            "author_login": "NicolasDorier"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-76",
    "description": "Improper Neutralization of Equivalent Special Elements in GitHub repository btcpayserver/btcpayserver prior to 1.8.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-02T05:15:11.647",
    "last_modified": "2024-11-21T07:38:33.287",
    "fix_date": "2023-02-22T15:35:34Z"
  },
  "references": [
    {
      "url": "https://github.com/btcpayserver/btcpayserver/commit/ddb125f45892b4dafdbd5c072af1ce623758bb92",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2e734209-d7b0-4f57-a8be-c65c82208f2f",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/btcpayserver/btcpayserver/commit/ddb125f45892b4dafdbd5c072af1ce623758bb92",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2e734209-d7b0-4f57-a8be-c65c82208f2f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.794396",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "btcpayserver",
    "owner": "btcpayserver",
    "created_at": "2017-08-18T12:57:05Z",
    "updated_at": "2025-01-14T11:48:10Z",
    "pushed_at": "2025-01-13T17:17:36Z",
    "size": 58479,
    "stars": 6524,
    "forks": 1678,
    "open_issues": 93,
    "watchers": 6524,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C#": 5340493,
      "HTML": 1244587,
      "JavaScript": 243284,
      "CSS": 96829,
      "Shell": 25361,
      "PowerShell": 3706,
      "Dockerfile": 3563,
      "PLpgSQL": 2402
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:13:37.806553"
  }
}