{
  "cve_id": "CVE-2023-1754",
  "github_data": {
    "repository": "thorsten/phpmyfaq",
    "fix_commit": "d773df925cb74e874527458beed1f66f966ec491",
    "related_commits": [
      "d773df925cb74e874527458beed1f66f966ec491",
      "d773df925cb74e874527458beed1f66f966ec491"
    ],
    "patch_url": "https://github.com/thorsten/phpmyfaq/commit/d773df925cb74e874527458beed1f66f966ec491.patch",
    "fix_commit_details": {
      "sha": "d773df925cb74e874527458beed1f66f966ec491",
      "commit_date": "2023-03-10T06:13:21Z",
      "author": {
        "login": "thorsten",
        "type": "User",
        "stats": {
          "total_commits": 7352,
          "average_weekly_commits": 9.19,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 647
        }
      },
      "commit_message": {
        "title": "fix: added missing conversion to HTML entities, removed obsolete code",
        "length": 69,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 77,
        "additions": 5,
        "deletions": 72
      },
      "files": [
        {
          "filename": "phpmyfaq/admin/group.php",
          "status": "modified",
          "additions": 5,
          "deletions": 72,
          "patch": "@@ -18,6 +18,7 @@\n  */\n \n use phpMyFAQ\\Filter;\n+use phpMyFAQ\\Strings;\n use phpMyFAQ\\User;\n use phpMyFAQ\\User\\CurrentUser;\n \n@@ -171,7 +172,7 @@\n         <div class=\"col-lg-12\">\n           <h2 class=\"page-header\">\n             <i aria-hidden=\"true\" class=\"fa fa-users fa-fw\"></i>\n-              <?= $PMF_LANG['ad_group_deleteGroup'] ?> \"<?= $groupData['name'] ?>\"\n+              <?= $PMF_LANG['ad_group_deleteGroup'] ?> \"<?= Strings::htmlentities($groupData['name']) ?>\"\n           </h2>\n         </div>\n       </header>\n@@ -226,8 +227,8 @@\n     $user = new User($faqConfig);\n     $message = '';\n     $messages = [];\n-    $groupName = Filter::filterInput(INPUT_POST, 'group_name', FILTER_UNSAFE_RAW, '');\n-    $groupDescription = Filter::filterInput(INPUT_POST, 'group_description', FILTER_UNSAFE_RAW, '');\n+    $groupName = Filter::filterInput(INPUT_POST, 'group_name', FILTER_SANITIZE_SPECIAL_CHARS, '');\n+    $groupDescription = Filter::filterInput(INPUT_POST, 'group_description', FILTER_SANITIZE_SPECIAL_CHARS, '');\n     $groupAutoJoin = Filter::filterInput(INPUT_POST, 'group_auto_join', FILTER_UNSAFE_RAW, '');\n     $csrfOkay = true;\n     $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n@@ -236,7 +237,7 @@\n         $csrfOkay = false;\n     }\n     // check group name\n-    if ($groupName == '') {\n+    if ($groupName === '') {\n         $messages[] = $PMF_LANG['ad_group_error_noName'];\n     }\n     // ok, let's go\n@@ -336,60 +337,6 @@\n     <?php\n }\n \n-// Import LDAP groups\n-/*\n-if ('import-ldap-groups' === $groupAction && $user->perm->hasPermission($user->getUserId(), 'addgroup')) {\n-    $user = new CurrentUser($faqConfig);\n-    $message = '';\n-    $messages = [];\n-\n-    // Temporary data\n-    $groupName = 'LDAP Group';\n-    $groupDescription = 'This is a LDAP group import demo';\n-    $groupAutoJoin = false;\n-\n-    $csrfOkay = true;\n-    $csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n-\n-    if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n-        $csrfOkay = false;\n-    }\n-\n-    // check group name\n-    if ($groupName == '') {\n-        $messages[] = $PMF_LANG['ad_group_error_noName'];\n-    }\n-\n-    // ok, let's go\n-    if (count($messages) == 0 && $csrfOkay) {\n-        // create group\n-        $groupData = [\n-            'name' => $groupName,\n-            'description' => $groupDescription,\n-            'auto_join' => $groupAutoJoin,\n-        ];\n-\n-        if ($user->perm->addGroup($groupData) <= 0) {\n-            $messages[] = $PMF_LANG['ad_adus_dberr'];\n-        }\n-    }\n-\n-    // no errors, show list\n-    if (count($messages) == 0) {\n-        $groupAction = $defaultGroupAction;\n-        $message = sprintf('<p class=\"alert alert-success\">%s</p>', $PMF_LANG['ad_group_suc']);\n-        // display error messages and show form again\n-    } else {\n-        $groupAction = 'import-ldap-groups';\n-        $message = '<p class=\"alert alert-danger\">';\n-        foreach ($messages as $err) {\n-            $message .= $err . '<br>';\n-        }\n-        $message .= '</p>';\n-    }\n-}\n-*/\n-\n // show list of users\n if ('list' === $groupAction) {\n     ?>\n@@ -416,20 +363,6 @@\n \n     <div class=\"col-lg-4\" id=\"group_list\">\n \n-      <!--\n-      <div class=\"card mb-4\">\n-        <div class=\"card-header py-3\">\n-          <form id=\"group-import-ldap-groups\" method=\"post\"\n-                name=\"group-import-ldap-groups\" action=\"?action=group&amp;group_action=import-ldap-groups\">\n-            <input type=\"hidden\" name=\"csrf\" value=\"<?= $currentUser->getCsrfTokenFromSession() ?>\">\n-            <button class=\"btn btn-success\" type=\"submit\">\n-              Import LDAP groups\n-            </button>\n-          </form>\n-        </div>\n-      </div>\n-      -->\n-\n       <div class=\"card mb-4\">\n         <form id=\"group_select\" name=\"group_select\" action=\"?action=group&amp;group_action=delete_confirm\"\n               method=\"post\">"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0bde62632e8a6501702a5e0dc76b821b0e193cd1",
            "date": "2025-01-14T14:57:50Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "69ccf3a0310a91e580ba3fbae763cf6fc4e70e8c",
            "date": "2025-01-14T04:44:45Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0aff5a567446adbf5d024e0d8b2b132666f91464",
            "date": "2025-01-13T20:29:34Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "0ee934f2713e59ed829afa56b95697670cdcfad7",
            "date": "2025-01-13T19:58:07Z",
            "author_login": "modelrailroader"
          },
          {
            "sha": "471ebc8577558da4bcdbf45f7b18ab75e33f9a37",
            "date": "2025-01-13T19:57:09Z",
            "author_login": "modelrailroader"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "Improper Neutralization of Input During Web Page Generation in GitHub repository thorsten/phpmyfaq prior to 3.1.12.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-31T01:15:09.247",
    "last_modified": "2024-11-21T07:39:50.043",
    "fix_date": "2023-03-10T06:13:21Z"
  },
  "references": [
    {
      "url": "https://github.com/thorsten/phpmyfaq/commit/d773df925cb74e874527458beed1f66f966ec491",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/529f2361-eb2e-476f-b7ef-4e561a712e28",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/thorsten/phpmyfaq/commit/d773df925cb74e874527458beed1f66f966ec491",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/529f2361-eb2e-476f-b7ef-4e561a712e28",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.029209",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "phpMyFAQ",
    "owner": "thorsten",
    "created_at": "2009-08-04T19:26:15Z",
    "updated_at": "2025-01-14T04:55:59Z",
    "pushed_at": "2025-01-14T04:56:02Z",
    "size": 56435,
    "stars": 589,
    "forks": 255,
    "open_issues": 19,
    "watchers": 589,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 9489706,
      "Twig": 348463,
      "JavaScript": 322766,
      "SCSS": 19741,
      "Shell": 9475,
      "Dockerfile": 2594,
      "CSS": 1125,
      "HTML": 205
    },
    "commit_activity": {
      "total_commits_last_year": 1338,
      "avg_commits_per_week": 25.73076923076923,
      "days_active_last_year": 282
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mpl-2.0"
    },
    "collected_at": "2025-01-14T13:07:11.405854"
  }
}