{
  "cve_id": "CVE-2023-1881",
  "github_data": {
    "repository": "microweber/microweber",
    "fix_commit": "8d039de2d615956f6df8df0bb1045ff3be88f183",
    "related_commits": [
      "8d039de2d615956f6df8df0bb1045ff3be88f183",
      "8d039de2d615956f6df8df0bb1045ff3be88f183"
    ],
    "patch_url": "https://github.com/microweber/microweber/commit/8d039de2d615956f6df8df0bb1045ff3be88f183.patch",
    "fix_commit_details": {
      "sha": "8d039de2d615956f6df8df0bb1045ff3be88f183",
      "commit_date": "2023-02-23T11:53:40Z",
      "author": {
        "login": "peter-mw",
        "type": "User",
        "stats": {
          "total_commits": 7965,
          "average_weekly_commits": 15.0,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 408
        }
      },
      "commit_message": {
        "title": "update",
        "length": 6,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 54,
        "additions": 34,
        "deletions": 20
      },
      "files": [
        {
          "filename": "src/MicroweberPackages/User/helpers/helpers.php",
          "status": "modified",
          "additions": 28,
          "deletions": 18,
          "patch": "@@ -4,10 +4,11 @@\n function user_ip()\n {\n     $ipaddress = '127.0.0.1';\n+    $ipaddressDefault = '127.0.0.1';\n \n     if (isset($_SERVER['HTTP_CF_CONNECTING_IP'])) {\n         $ipaddress = $_SERVER['HTTP_CF_CONNECTING_IP'];\n-    }  else if (isset($_SERVER['HTTP_CLIENT_IP'])) {\n+    } else if (isset($_SERVER['HTTP_CLIENT_IP'])) {\n         $ipaddress = $_SERVER['HTTP_CLIENT_IP'];\n     } else if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {\n         $ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];\n@@ -25,6 +26,15 @@ function user_ip()\n         $ipaddress = $_SERVER['REMOTE_ADDR'];\n     }\n \n+    $ipv4_validation_regex = \"/^(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\";\n+    $ipv6_validation_regex = \"/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/\";\n+\n+    if (!preg_match($ipv4_validation_regex, $ipaddress) and !preg_match($ipv6_validation_regex, $ipaddress)) {\n+        //invalid ip is sent, so we return default ip\n+        return $ipaddressDefault;\n+    }\n+\n+\n     return $ipaddress;\n }\n \n@@ -241,7 +251,7 @@ function only_admin_access()\n \n function is_admin()\n {\n-    if(app()->bound('user_manager')){\n+    if (app()->bound('user_manager')) {\n         return app()->user_manager->is_admin();\n     }\n }\n@@ -264,12 +274,12 @@ function is_live_edit()\n         return true;\n     }\n \n-    $editModeParam2 = app()->url_manager->param('editmode',true);\n+    $editModeParam2 = app()->url_manager->param('editmode', true);\n     if ($editModeParam2 == 'y') {\n         return true;\n     }\n \n-    if(defined('IN_EDIT') and IN_EDIT){\n+    if (defined('IN_EDIT') and IN_EDIT) {\n         return true;\n     }\n \n@@ -334,16 +344,16 @@ function get_users($params = false)\n  *\n  * get_user get the user info from the DB\n  *\n- * @category users\n+ * @param bool $id\n  *\n- * @author   Microweber\n  *\n+ * @return array\n  * @link     http://microweber.com\n  *\n- * @param bool $id\n+ * @category users\n  *\n+ * @author   Microweber\n  *\n- * @return array\n  */\n function get_user($id = false)\n {\n@@ -363,7 +373,7 @@ function user_can_access($permission)\n     }\n \n     return false;\n-   // return $user->can($permission);\n+    // return $user->can($permission);\n }\n \n function module_permissions($module)\n@@ -374,7 +384,7 @@ function module_permissions($module)\n \n function user_can_destroy_module($module)\n {\n- //   $permissions = \\MicroweberPackages\\Role\\Repositories\\Permission::generateModulePermissionsSlugs($module);\n+    //   $permissions = \\MicroweberPackages\\Role\\Repositories\\Permission::generateModulePermissionsSlugs($module);\n \n     $user = \\Illuminate\\Support\\Facades\\Auth::user();\n     if (!$user) {\n@@ -385,9 +395,9 @@ function user_can_destroy_module($module)\n         return true;\n     }\n \n-   /* if ($user->can($permissions['destroy'])) {\n-        return true;\n-    }*/\n+    /* if ($user->can($permissions['destroy'])) {\n+         return true;\n+     }*/\n \n     return false;\n }\n@@ -406,17 +416,17 @@ function user_can_view_module($module)\n         return true;\n     }\n \n- /*   if ($user->can($permissions['index'])) {\n-        return true;\n-    }*/\n+    /*   if ($user->can($permissions['index'])) {\n+           return true;\n+       }*/\n \n     return false;\n \n }\n \n \n-\n-function detect_user_id_from_params($params){\n+function detect_user_id_from_params($params)\n+{\n \n     if (!empty($params)) {\n         if (isset($params['username']) || isset($params['email'])) {"
        },
        {
          "filename": "userfiles/modules/site_stats/src/Tracker.php",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -80,7 +80,9 @@ function process_buffer($track_data = false)\n                 $browser_id = false;\n                 $language = false;\n \n-                if (isset($item['language']) and $item['language']) {\n+                $item = array_map('strip_tags', $item);\n+                $item = array_map('e', $item);\n+                 if (isset($item['language']) and $item['language']) {\n                     $language = $item['language'];\n                 }\n                 if (isset($item['browser_agent']) and $item['browser_agent']) {\n@@ -256,9 +258,11 @@ private function _collect_user_data()\n                 $ref = $_POST['referrer'];\n             }\n         }\n-\n+        $ref = e($ref);\n \n         if ($last_page) {\n+            $last_page = e($last_page);\n+\n             $last_page = rtrim($last_page, '?');\n             $last_page = rtrim($last_page, '#');\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d4e8c4a13967ac9856c3e1179d4185e59b8d9311",
            "date": "2024-11-26T15:08:46Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "9a701a997a4041f040b00d989b19e446c34419e5",
            "date": "2024-06-26T12:33:18Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "5851e060318fb8065a478df6b63b335b1d3a52c2",
            "date": "2024-06-26T11:34:21Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "7c37d77e617d35cdefdcaf96c7a18a33a9758289",
            "date": "2024-06-26T11:14:53Z",
            "author_login": "Radanovn"
          },
          {
            "sha": "eff6fadcadd749e8f4295bec99bf173d2401f3ac",
            "date": "2024-06-26T11:11:53Z",
            "author_login": "Radanovn"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository microweber/microweber prior to 1.3.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-05T17:15:07.177",
    "last_modified": "2024-11-21T07:40:04.630",
    "fix_date": "2023-02-23T11:53:40Z"
  },
  "references": [
    {
      "url": "https://github.com/microweber/microweber/commit/8d039de2d615956f6df8df0bb1045ff3be88f183",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d5ebc2bd-8638-41c4-bf72-7c906c601344",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/8d039de2d615956f6df8df0bb1045ff3be88f183",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/d5ebc2bd-8638-41c4-bf72-7c906c601344",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.053146",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "microweber",
    "owner": "microweber",
    "created_at": "2010-10-07T09:04:43Z",
    "updated_at": "2025-01-13T15:04:29Z",
    "pushed_at": "2025-01-14T13:26:48Z",
    "size": 1026007,
    "stars": 3170,
    "forks": 887,
    "open_issues": 360,
    "watchers": 3170,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 12566636,
      "PHP": 11976208,
      "JavaScript": 8696748,
      "CSS": 3597687,
      "SCSS": 2178754,
      "Blade": 1663671,
      "Less": 518400,
      "Hack": 476030,
      "MDX": 387317,
      "Vue": 344860,
      "Ruby": 12504,
      "OCaml": 4815,
      "Dockerfile": 1548,
      "CoffeeScript": 950,
      "Batchfile": 61,
      "Shell": 59,
      "Sass": 1
    },
    "commit_activity": {
      "total_commits_last_year": 1332,
      "avg_commits_per_week": 25.615384615384617,
      "days_active_last_year": 106
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:59:40.368111"
  }
}