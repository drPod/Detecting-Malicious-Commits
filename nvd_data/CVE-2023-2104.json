{
  "cve_id": "CVE-2023-2104",
  "github_data": {
    "repository": "alextselegidis/easyappointments",
    "fix_commit": "75b24735767868344193fb2cc56e17ee4b9ac4be",
    "related_commits": [
      "75b24735767868344193fb2cc56e17ee4b9ac4be",
      "75b24735767868344193fb2cc56e17ee4b9ac4be"
    ],
    "patch_url": "https://github.com/alextselegidis/easyappointments/commit/75b24735767868344193fb2cc56e17ee4b9ac4be.patch",
    "fix_commit_details": {
      "sha": "75b24735767868344193fb2cc56e17ee4b9ac4be",
      "commit_date": "2023-04-15T12:39:12Z",
      "author": {
        "login": "alextselegidis",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Do not return appointments of a different user to the another provider or secretary on the default calendar screen.",
        "length": 115,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 56,
        "additions": 56,
        "deletions": 0
      },
      "files": [
        {
          "filename": "application/controllers/Calendar.php",
          "status": "modified",
          "additions": 56,
          "deletions": 0,
          "patch": "@@ -671,6 +671,62 @@ public function get_calendar_appointments()\n                 $unavailability['provider'] = $this->providers_model->find($unavailability['id_users_provider']);\n             }\n \n+            unset($appointment);\n+\n+            $user_id = session('user_id');\n+\n+            $role_slug = session('role_slug');\n+\n+            // If the current user is a provider he must only see his own appointments.\n+            if ($role_slug === DB_SLUG_PROVIDER)\n+            {\n+                foreach ($response['appointments'] as $index => $appointment)\n+                {\n+                    if ((int)$appointment['id_users_provider'] !== (int)$user_id)\n+                    {\n+                        unset($response['appointments'][$index]);\n+                    }\n+                }\n+\n+                $response['appointments'] = array_values($response['appointments']);\n+\n+                foreach ($response['unavailabilities'] as $index => $unavailability)\n+                {\n+                    if ((int)$unavailability['id_users_provider'] !== (int)$user_id)\n+                    {\n+                        unset($response['unavailabilities'][$index]);\n+                    }\n+                }\n+\n+                $response['unavailabilities'] = array_values($response['unavailabilities']);\n+            }\n+\n+            // If the current user is a secretary he must only see the appointments of his providers.\n+            if ($role_slug === DB_SLUG_SECRETARY)\n+            {\n+                $providers = $this->secretaries_model->find($user_id)['providers'];\n+\n+                foreach ($response['appointments'] as $index => $appointment)\n+                {\n+                    if ( ! in_array((int)$appointment['id_users_provider'], $providers))\n+                    {\n+                        unset($response['appointments'][$index]);\n+                    }\n+                }\n+\n+                $response['appointments'] = array_values($response['appointments']);\n+\n+                foreach ($response['unavailabilities'] as $index => $unavailability)\n+                {\n+                    if ( ! in_array((int)$unavailability['id_users_provider'], $providers))\n+                    {\n+                        unset($response['unavailabilities'][$index]);\n+                    }\n+                }\n+\n+                $response['unavailabilities'] = array_values($response['unavailabilities']);\n+            }\n+\n             json_response($response);\n         }\n         catch (Throwable $e)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "272300359409ae5624eb95e2c751b930a10f2d1a",
            "date": "2024-11-05T12:29:04Z",
            "author_login": "alextselegidis"
          },
          {
            "sha": "b6fbaf418c423bf2bffa0e982bbf5030798ed5ab",
            "date": "2024-08-28T23:48:27Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e45fcf30b579a9a2a03bbbb35efb96556f1ad426",
            "date": "2024-07-07T11:53:43Z",
            "author_login": "alextselegidis"
          },
          {
            "sha": "f4964193e151f3bffaac85d6a7cd22d8f9dc73ba",
            "date": "2024-07-07T11:47:58Z",
            "author_login": "alextselegidis"
          },
          {
            "sha": "5cda141356751af24287b73eab337435415b585e",
            "date": "2024-07-07T11:07:17Z",
            "author_login": "alextselegidis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-284",
    "description": "Improper Access Control in GitHub repository alextselegidis/easyappointments prior to 1.5.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-15T14:15:07.650",
    "last_modified": "2024-11-21T07:57:56.837",
    "fix_date": "2023-04-15T12:39:12Z"
  },
  "references": [
    {
      "url": "https://github.com/alextselegidis/easyappointments/commit/75b24735767868344193fb2cc56e17ee4b9ac4be",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/3099b8d1-c49c-41b8-a929-73ccded6fc7c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/alextselegidis/easyappointments/commit/75b24735767868344193fb2cc56e17ee4b9ac4be",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/3099b8d1-c49c-41b8-a929-73ccded6fc7c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.789933",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "easyappointments",
    "owner": "alextselegidis",
    "created_at": "2014-11-26T20:51:50Z",
    "updated_at": "2025-01-14T13:58:49Z",
    "pushed_at": "2025-01-10T18:26:21Z",
    "size": 39407,
    "stars": 3429,
    "forks": 1302,
    "open_issues": 144,
    "watchers": 3429,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "PHP": 5282409,
      "JavaScript": 609400,
      "SCSS": 118171,
      "HTML": 10492,
      "Dockerfile": 1424,
      "Shell": 414
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T14:13:37.249955"
  }
}