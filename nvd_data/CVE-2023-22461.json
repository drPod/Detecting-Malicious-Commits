{
  "cve_id": "CVE-2023-22461",
  "github_data": {
    "repository": "mattkrick/sanitize-svg",
    "fix_commit": "b107e453ede7b58adcccae74a3e474c012eec85d",
    "related_commits": [
      "b107e453ede7b58adcccae74a3e474c012eec85d",
      "b107e453ede7b58adcccae74a3e474c012eec85d"
    ],
    "patch_url": "https://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d.patch",
    "fix_commit_details": {
      "sha": "b107e453ede7b58adcccae74a3e474c012eec85d",
      "commit_date": "2022-12-15T19:48:10Z",
      "author": {
        "login": "mattkrick",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-h857-2g56-468g",
        "length": 86,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 79,
        "additions": 67,
        "deletions": 12
      },
      "files": [
        {
          "filename": "dist/lib/sanitizeSVG.js",
          "status": "modified",
          "additions": 31,
          "deletions": 5,
          "patch": "@@ -1,5 +1,31 @@\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n+const svgDisallowed = [\n+    'a',\n+    'animate',\n+    'color-profile',\n+    'cursor',\n+    'discard',\n+    'fedropshadow',\n+    'font-face',\n+    'font-face-format',\n+    'font-face-name',\n+    'font-face-src',\n+    'font-face-uri',\n+    'foreignobject',\n+    'hatch',\n+    'hatchpath',\n+    'mesh',\n+    'meshgradient',\n+    'meshpatch',\n+    'meshrow',\n+    'missing-glyph',\n+    'script',\n+    'set',\n+    'solidcolor',\n+    'unknown',\n+    'use',\n+];\n const getWindow = () => (typeof window === 'undefined' ? null : window);\n const readAsText = (svg) => new Promise((resolve) => {\n     if (!isFile(svg)) {\n@@ -24,13 +50,13 @@ const sanitizeSVG = async (svg, window = getWindow()) => {\n     const svgText = await readAsText(svg);\n     if (!svgText)\n         throw new Error('Image corrupt');\n-    const div = window.document.createElement('div');\n-    div.innerHTML = svgText;\n-    const svgEl = div.firstElementChild;\n+    const playground = window.document.createElement('template');\n+    playground.innerHTML = svgText;\n+    const svgEl = playground.content.firstElementChild;\n     const attributes = Array.from(svgEl.attributes).map(({ name }) => name);\n     const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'));\n-    const scripts = svgEl.getElementsByTagName('script');\n-    return scripts.length === 0 && !hasScriptAttr ? svg : null;\n+    const disallowedSvgElements = svgEl.querySelectorAll(svgDisallowed.join(','));\n+    return disallowedSvgElements.length === 0 && !hasScriptAttr ? svg : null;\n };\n exports.default = sanitizeSVG;\n //# sourceMappingURL=sanitizeSVG.js.map\n\\ No newline at end of file"
        },
        {
          "filename": "dist/lib/sanitizeSVG.js.map",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-{\"version\":3,\"file\":\"sanitizeSVG.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/sanitizeSVG.ts\"],\"names\":[],\"mappings\":\";;AAAA,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AACvE,MAAM,UAAU,GAAG,CAAC,GAAkB,EAAE,EAAE,CACxC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,EAAE;IACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;KAC/B;SAAM;QACL,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAA;QACnC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YACvB,OAAO,CAAC,UAAU,CAAC,MAAuB,CAAC,CAAA;QAC7C,CAAC,CAAA;QACD,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;KAC3B;AACH,CAAC,CAAC,CAAA;AAEJ,MAAM,MAAM,GAAG,CAAC,GAAkB,EAAe,EAAE;IACjD,OAAQ,GAAY,CAAC,IAAI,KAAK,SAAS,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,WAAW,GAAG,KAAK,EAAE,GAAkB,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,EAAE;IACrE,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;IACnD,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe;QAAE,OAAO,GAAG,CAAA;IAC3D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IAChD,GAAG,CAAC,SAAS,GAAG,OAAO,CAAA;IACvB,MAAM,KAAK,GAAG,GAAG,CAAC,iBAAkB,CAAA;IACpC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAA;IACvE,MAAM,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;IACxE,MAAM,OAAO,GAAG,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAA;IACpD,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAA;AAC5D,CAAC,CAAA;AAED,kBAAe,WAAW,CAAA\"}\n\\ No newline at end of file\n+{\"version\":3,\"file\":\"sanitizeSVG.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/sanitizeSVG.ts\"],\"names\":[],\"mappings\":\";;AAEA,MAAM,aAAa,GAAG;IACpB,GAAG;IACH,SAAS;IACT,eAAe;IACf,QAAQ;IACR,SAAS;IACT,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,eAAe;IACf,OAAO;IACP,WAAW;IACX,MAAM;IACN,cAAc;IACd,WAAW;IACX,SAAS;IACT,eAAe;IACf,QAAQ;IACR,KAAK;IACL,YAAY;IACZ,SAAS;IACT,KAAK;CACN,CAAA;AAED,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AACvE,MAAM,UAAU,GAAG,CAAC,GAAkB,EAAE,EAAE,CACxC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,EAAE;IACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;KAC/B;SAAM;QACL,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAA;QACnC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YACvB,OAAO,CAAC,UAAU,CAAC,MAAuB,CAAC,CAAA;QAC7C,CAAC,CAAA;QACD,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;KAC3B;AACH,CAAC,CAAC,CAAA;AAEJ,MAAM,MAAM,GAAG,CAAC,GAAkB,EAAe,EAAE;IACjD,OAAQ,GAAY,CAAC,IAAI,KAAK,SAAS,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,WAAW,GAAG,KAAK,EAAE,GAAkB,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,EAAE;IACrE,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;IACnD,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe;QAAE,OAAO,GAAG,CAAA;IAC3D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;IAC9C,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAC5D,UAAU,CAAC,SAAS,GAAG,OAAO,CAAA;IAC9B,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,iBAAkB,CAAA;IACnD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAA;IACrE,MAAM,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;IACxE,MAAM,qBAAqB,GAAG,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7E,OAAO,qBAAqB,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAA;AAC1E,CAAC,CAAA;AAED,kBAAe,WAAW,CAAA\"}\n\\ No newline at end of file"
        },
        {
          "filename": "dist/types/sanitizeSVG.d.ts.map",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-{\"version\":3,\"file\":\"sanitizeSVG.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../src/sanitizeSVG.ts\"],\"names\":[],\"mappings\":\";AAkBA,QAAA,MAAM,WAAW,+EAYhB,CAAA;AAED,eAAe,WAAW,CAAA\"}\n\\ No newline at end of file\n+{\"version\":3,\"file\":\"sanitizeSVG.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../src/sanitizeSVG.ts\"],\"names\":[],\"mappings\":\";AA+CA,QAAA,MAAM,WAAW,+EAYhB,CAAA;AAED,eAAe,WAAW,CAAA\"}\n\\ No newline at end of file"
        },
        {
          "filename": "src/sanitizeSVG.ts",
          "status": "modified",
          "additions": 34,
          "deletions": 5,
          "patch": "@@ -1,3 +1,32 @@\n+// List of disallowed SVG elements\n+// Adjusted from https://github.com/cure53/DOMPurify/blob/f6fcdb9f1c13b3559697db0038744a0a327d46ab/src/tags.js#L201\n+const svgDisallowed = [\n+  'a',\n+  'animate',\n+  'color-profile',\n+  'cursor',\n+  'discard',\n+  'fedropshadow',\n+  'font-face',\n+  'font-face-format',\n+  'font-face-name',\n+  'font-face-src',\n+  'font-face-uri',\n+  'foreignobject',\n+  'hatch',\n+  'hatchpath',\n+  'mesh',\n+  'meshgradient',\n+  'meshpatch',\n+  'meshrow',\n+  'missing-glyph',\n+  'script',\n+  'set',\n+  'solidcolor',\n+  'unknown',\n+  'use'\n+]\n+\n const getWindow = () => (typeof window === 'undefined' ? null : window)\n const readAsText = (svg: File | Buffer) =>\n   new Promise<string | null>((resolve) => {\n@@ -21,13 +50,13 @@ const sanitizeSVG = async (svg: File | Buffer, window = getWindow()) => {\n   if (isFile(svg) && svg.type !== 'image/svg+xml') return svg\n   const svgText = await readAsText(svg)\n   if (!svgText) throw new Error('Image corrupt')\n-  const div = window.document.createElement('div')\n-  div.innerHTML = svgText\n-  const svgEl = div.firstElementChild!\n+  const playground = window.document.createElement('template')\n+  playground.innerHTML = svgText\n+  const svgEl = playground.content.firstElementChild!\n   const attributes = Array.from(svgEl.attributes).map(({ name }) => name)\n   const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'))\n-  const scripts = svgEl.getElementsByTagName('script')\n-  return scripts.length === 0 && !hasScriptAttr ? svg : null\n+  const disallowedSvgElements = svgEl.querySelectorAll(svgDisallowed.join(','))\n+  return disallowedSvgElements.length === 0 && !hasScriptAttr ? svg : null\n }\n \n export default sanitizeSVG"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5555b66e1a99557340678410608364e923f9abe5",
            "date": "2022-12-15T19:50:39Z",
            "author_login": "mattkrick"
          },
          {
            "sha": "b107e453ede7b58adcccae74a3e474c012eec85d",
            "date": "2022-12-15T19:48:10Z",
            "author_login": "mattkrick"
          },
          {
            "sha": "8d704401728f61b9c803cae521b8d89d5709f022",
            "date": "2022-12-15T19:45:22Z",
            "author_login": "mattkrick"
          },
          {
            "sha": "9e05efb2bad3a8d5447db20c6711cefb8af21cf1",
            "date": "2022-12-14T21:03:06Z",
            "author_login": "lauritzh"
          },
          {
            "sha": "69c0e0f6b65623819afb42ebedd6c19d014df17a",
            "date": "2022-12-14T20:45:42Z",
            "author_login": "lauritzh"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "The `sanitize-svg` package, a small SVG sanitizer to prevent cross-site scripting attacks, uses a deny-list-pattern to sanitize SVGs to prevent XSS. In doing so, literal `<script>`-tags and on-event handlers were detected in versions prior to 0.4.0. As a result, downstream software that relies on `sanitize-svg` and expects resulting SVGs to be safe, may be vulnerable to cross-site scripting. This vulnerability was addressed in v0.4.0. There are no known workarounds\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-04T15:15:09.510",
    "last_modified": "2024-11-21T07:44:51.047",
    "fix_date": "2022-12-15T19:48:10Z"
  },
  "references": [
    {
      "url": "https://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mattkrick/sanitize-svg/security/advisories/GHSA-h857-2g56-468g",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mattkrick/sanitize-svg/security/advisories/GHSA-h857-2g56-468g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.251315",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sanitize-svg",
    "owner": "mattkrick",
    "created_at": "2019-01-24T22:14:33Z",
    "updated_at": "2024-08-01T07:11:54Z",
    "pushed_at": "2022-12-15T19:51:07Z",
    "size": 173,
    "stars": 26,
    "forks": 8,
    "open_issues": 13,
    "watchers": 26,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 1809
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:32:00.288184"
  }
}