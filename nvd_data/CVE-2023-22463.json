{
  "cve_id": "CVE-2023-22463",
  "github_data": {
    "repository": "KubeOperator/KubePi",
    "fix_commit": "3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b",
    "related_commits": [
      "3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b",
      "3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b"
    ],
    "patch_url": "https://github.com/KubeOperator/KubePi/commit/3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b.patch",
    "fix_commit_details": {
      "sha": "3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b",
      "commit_date": "2023-01-04T09:28:22Z",
      "author": {
        "login": "zhengkunwang223",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: \u89e3\u51b3 jwt \u786c\u7f16\u7801\u5bfc\u81f4\u7684 k8s \u96c6\u7fa4\u63a5\u7ba1\u6f0f\u6d1e",
        "length": 29,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 46,
        "additions": 36,
        "deletions": 10
      },
      "files": [
        {
          "filename": "conf/app.yml",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -12,4 +12,6 @@ spec:\n   db:\n     path: /var/lib/kubepi/db/kubepi.db\n   session:\n-    expires: 24\n\\ No newline at end of file\n+    expires: 24\n+  jwt:\n+    key:\n\\ No newline at end of file"
        },
        {
          "filename": "internal/api/v1/session/session.go",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -32,7 +32,6 @@ import (\n \tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n )\n \n-var JwtSigKey = []byte(\"signature_hmac_secret_shared_key\")\n var jwtMaxAge = 10 * time.Minute\n \n type Handler struct {\n@@ -51,7 +50,7 @@ func NewHandler() *Handler {\n \t\troleService:        role.NewService(),\n \t\trolebindingService: rolebinding.NewService(),\n \t\tldapService:        ldap.NewService(),\n-\t\tjwtSigner:          jwt.NewSigner(jwt.HS256, JwtSigKey, jwtMaxAge),\n+\t\tjwtSigner:          jwt.NewSigner(jwt.HS256, server.Config().Spec.Jwt.Key, jwtMaxAge),\n \t}\n }\n "
        },
        {
          "filename": "internal/api/v1/v1.go",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -401,8 +401,7 @@ func resourceNameInvalidHandler() iris.Handler {\n }\n \n func WarpedJwtHandler() iris.Handler {\n-\n-\tverifier := jwt.NewVerifier(jwt.HS256, session.JwtSigKey)\n+\tverifier := jwt.NewVerifier(jwt.HS256, server.Config().Spec.Jwt.Key)\n \tverifier.WithDefaultBlocklist()\n \tverifyMiddleware := verifier.Verify(func() interface{} {\n \t\treturn new(session.UserProfile)"
        },
        {
          "filename": "internal/config/config.go",
          "status": "modified",
          "additions": 25,
          "deletions": 5,
          "patch": "@@ -1,12 +1,15 @@\n package config\n \n import (\n+\t\"crypto/rand\"\n \t\"encoding/json\"\n \t\"fmt\"\n \t\"github.com/KubeOperator/kubepi/internal/model/v1/config\"\n \t\"github.com/KubeOperator/kubepi/pkg/file\"\n \t\"github.com/coreos/etcd/pkg/fileutil\"\n \t\"github.com/spf13/viper\"\n+\t\"math/big\"\n+\t\"strconv\"\n )\n \n const configNotFoundSkipErr = \"config file not found in %s, skip\"\n@@ -17,7 +20,7 @@ var configFilePaths = []string{\n \t\"/etc/kubepi\",\n }\n \n-func ReadConfig(c *config.Config, path ...string)  error {\n+func ReadConfig(c *config.Config, path ...string) error {\n \tv := viper.New()\n \tv.SetConfigName(\"app\")\n \tv.SetConfigType(\"yaml\")\n@@ -41,19 +44,36 @@ func ReadConfig(c *config.Config, path ...string)  error {\n \t\tif err := v.MergeInConfig(); err != nil {\n \t\t\tfmt.Println(fmt.Sprintf(configMergeErr, configFilePaths))\n \t\t}\n+\n \t}\n \n \tvar configMap map[string]interface{}\n \tif err := v.Unmarshal(&configMap); err != nil {\n-\t\treturn  err\n+\t\treturn err\n \t}\n \tstr, err := json.Marshal(&configMap)\n \tif err != nil {\n-\t\treturn  err\n+\t\treturn err\n \t}\n \tif err := json.Unmarshal(str, &c); err != nil {\n-\t\treturn  nil\n+\t\treturn nil\n+\t}\n+\tif c.Spec.Jwt.Key == \"\" {\n+\t\tv.Set(\"spec.jwt.key\", generate(32))\n+\t\tif err := v.WriteConfig(); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t}\n-\treturn  nil\n+\treturn nil\n }\n \n+func generate(length int) string {\n+\tconst base = 36\n+\tsize := big.NewInt(base)\n+\tn := make([]byte, length)\n+\tfor i := range n {\n+\t\tc, _ := rand.Int(rand.Reader, size)\n+\t\tn[i] = strconv.FormatInt(c.Int64(), base)[0]\n+\t}\n+\treturn string(n)\n+}"
        },
        {
          "filename": "internal/model/v1/config/config.go",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -12,6 +12,7 @@ type Spec struct {\n \tDB      DBConfig      `json:\"db\"`\n \tSession SessionConfig `json:\"session\"`\n \tLogger  LoggerConfig  `json:\"logger\"`\n+\tJwt     JwtConfig     `json:\"jwt\"`\n \tAppId   string        `json:\"appId\"`\n }\n \n@@ -42,3 +43,7 @@ type DBConfig struct {\n type SessionConfig struct {\n \tExpires int `json:\"expires\"`\n }\n+\n+type JwtConfig struct {\n+\tKey string `json:\"key\"`\n+}"
        },
        {
          "filename": "internal/server/server.go",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -340,6 +340,7 @@ func getDefaultConfig() *v1Config.Config {\n \t\t\t\tExpires: 72,\n \t\t\t},\n \t\t\tLogger: v1Config.LoggerConfig{Level: \"debug\"},\n+\t\t\tJwt:    v1Config.JwtConfig{},\n \t\t},\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "43e27cfb42e1168f5b27e41f17adb784951f997b",
            "date": "2024-12-30T09:06:50Z",
            "author_login": "wanghe-fit2cloud"
          },
          {
            "sha": "77cf8a52c244f4203345bd4c39e746b035648d7e",
            "date": "2024-12-30T08:27:10Z",
            "author_login": "wanghe-fit2cloud"
          },
          {
            "sha": "dc0b8a8aa4e07ad69d88a7a5f9d1929d75671d56",
            "date": "2024-09-23T06:22:28Z",
            "author_login": "awol2005ex"
          },
          {
            "sha": "08a53933ce12a0df0c5ce3c7688fb71d67a00cd7",
            "date": "2024-09-23T06:22:10Z",
            "author_login": "awol2005ex"
          },
          {
            "sha": "2513aab2e867018ca526284075465b0d3b992b7a",
            "date": "2024-09-23T06:21:21Z",
            "author_login": "awol2005ex"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-798",
    "description": "KubePi is a k8s panel. The jwt authentication function of KubePi through version 1.6.2 uses hard-coded Jwtsigkeys, resulting in the same Jwtsigkeys for all online projects. This means that an attacker can forge any jwt token to take over the administrator account of any online project. Furthermore, they may use the administrator to take over the k8s cluster of the target enterprise. `session.go`, the use of hard-coded JwtSigKey, allows an attacker to use this value to forge jwt tokens arbitrarily. The JwtSigKey is confidential and should not be hard-coded in the code. The vulnerability has been fixed in 1.6.3. In the patch, JWT key is specified in app.yml. If the user leaves it blank, a random key will be used. There are no workarounds aside from upgrading.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-04T16:15:09.143",
    "last_modified": "2024-11-21T07:44:51.303",
    "fix_date": "2023-01-04T09:28:22Z"
  },
  "references": [
    {
      "url": "https://github.com/KubeOperator/KubePi/blob/da784f5532ea2495b92708cacb32703bff3a45a3/internal/api/v1/session/session.go#L35",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/commit/3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/releases/tag/v1.6.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/security/advisories/GHSA-vjhf-8vqx-vqpq",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/blob/da784f5532ea2495b92708cacb32703bff3a45a3/internal/api/v1/session/session.go#L35",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/commit/3be58b8df5bc05d2343c30371dd5fcf6a9fbbf8b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/releases/tag/v1.6.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/KubeOperator/KubePi/security/advisories/GHSA-vjhf-8vqx-vqpq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:23.251933",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "KubePi",
    "owner": "KubeOperator",
    "created_at": "2021-05-20T02:57:47Z",
    "updated_at": "2025-01-08T19:17:53Z",
    "pushed_at": "2024-12-30T09:06:54Z",
    "size": 17903,
    "stars": 2765,
    "forks": 351,
    "open_issues": 36,
    "watchers": 2765,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 1851017,
      "Vue": 1468933,
      "JavaScript": 316208,
      "HTML": 43769,
      "TypeScript": 28056,
      "SCSS": 23430,
      "Dockerfile": 3424,
      "Shell": 2312,
      "Makefile": 1004
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T18:05:50.445354"
  }
}