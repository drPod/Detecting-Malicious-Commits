{
  "cve_id": "CVE-2023-22475",
  "github_data": {
    "repository": "thinkst/canarytokens",
    "fix_commit": "fb612906f2217bbb8863199694891d16e20bad3e",
    "related_commits": [
      "fb612906f2217bbb8863199694891d16e20bad3e",
      "fb612906f2217bbb8863199694891d16e20bad3e"
    ],
    "patch_url": "https://github.com/thinkst/canarytokens/commit/fb612906f2217bbb8863199694891d16e20bad3e.patch",
    "fix_commit_details": {
      "sha": "fb612906f2217bbb8863199694891d16e20bad3e",
      "commit_date": "2023-01-04T11:55:43Z",
      "author": {
        "login": "thinkst-devdua",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Use an autoescaped env for history page (#170)",
        "length": 116,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 12,
        "deletions": 9
      },
      "files": [
        {
          "filename": "httpd_site.py",
          "status": "modified",
          "additions": 12,
          "deletions": 9,
          "patch": "@@ -44,8 +44,11 @@\n import csv\n import wireguard as wg\n \n-env = Environment(loader=FileSystemLoader('templates'),\n+unsafe_env = Environment(loader=FileSystemLoader('templates'),\n                   extensions=['jinja2.ext.loopcontrols'])\n+env = Environment(loader=FileSystemLoader('templates'),\n+                  extensions=['jinja2.ext.loopcontrols'],\n+                  autoescape=True)\n \n with open('/srv/templates/error_http.html', 'r') as f:\n     twisted.web.resource.ErrorPage.template = f.read()\n@@ -59,7 +62,7 @@ def getChild(self, name, request):\n         return Resource.getChild(self, name, request)\n \n     def render_GET(self, request):\n-        template = env.get_template('generate_new.html')\n+        template = unsafe_env.get_template('generate_new.html')\n         sites_len = len(get_all_canary_sites())\n         now = datetime.datetime.now()\n         return template.render(settings=settings, sites_len=sites_len, now=now).encode('utf8')\n@@ -211,7 +214,7 @@ def render_POST(self, request):\n                 procname = request.args['cmd_process'][0]\n                 if not procname:\n                     raise KeyError\n-                \n+\n                 canarydrop['cmd_process'] = procname\n                 canarydrop['memo'] += \"\\r\\n\\r\\n(This token was created to monitor the execution of: \" + procname + \")\"\n                 save_canarydrop(canarydrop)\n@@ -537,7 +540,7 @@ def render_POST(self, request):\n \n         except Exception as e:\n             log.error('Unexpected error in POST download: {err}'.format(err=e))\n-            template = env.get_template('error.html')\n+            template = unsafe_env.get_template('error.html')\n             return template.render(error=e.message).encode('utf8')\n \n         return NoResource().render(request)\n@@ -570,9 +573,9 @@ def render_GET(self, request):\n         now = datetime.datetime.now()\n         try:\n             canarydrop['type']\n-            template = env.get_template('manage_new.html')\n+            template = unsafe_env.get_template('manage_new.html')\n         except KeyError:\n-            template = env.get_template('manage.html')\n+            template = unsafe_env.get_template('manage.html')\n         return template.render(canarydrop=canarydrop, API_KEY=g_api_key, now=now).encode('utf8')\n \n     def render_POST(self, request):\n@@ -621,14 +624,14 @@ def render_POST(self, request):\n             save_canarydrop(canarydrop=canarydrop)\n \n             g_api_key = get_canary_google_api_key()\n-            template = env.get_template('manage.html')\n+            template = unsafe_env.get_template('manage.html')\n             return template.render(canarydrop=canarydrop, saved=True,\n                                         settings=settings, API_KEY=g_api_key).encode('utf8')\n \n         except Exception as e:\n             import traceback\n             log.error('Exception in manage.html: {e}, {stack}'.format(e=e, stack=traceback.format_exc()))\n-            template = env.get_template('manage.html')\n+            template = unsafe_env.get_template('manage.html')\n             return template.render(canarydrop=canarydrop, error=e,\n                                         settings=settings).encode('utf8')\n \n@@ -741,7 +744,7 @@ def getChild(self, name, request):\n \n     def render_GET(self, request):\n         now = datetime.datetime.now()\n-        template = env.get_template('legal.html')\n+        template = unsafe_env.get_template('legal.html')\n         return template.render(now=now).encode('utf8')\n \n class CanarytokensHttpd():"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0a11a9a86e768243df90c5114131d82ed28c8349",
            "date": "2025-01-14T14:46:16Z",
            "author_login": "mclmax"
          },
          {
            "sha": "4116b92cb1902d843f43304b0e1f76cb7be4d784",
            "date": "2025-01-14T14:45:36Z",
            "author_login": "vittoriaThinkst"
          },
          {
            "sha": "b654f2722c15e502b5587c539ab7aea615df39ef",
            "date": "2025-01-08T10:45:59Z",
            "author_login": "thinkst-nick"
          },
          {
            "sha": "f2e492d3bb1401e98543f485b3d190d4606bd0f2",
            "date": "2024-12-13T10:30:53Z",
            "author_login": "mclmax"
          },
          {
            "sha": "9d758f4a1e7cc119ab6487f8dc975a445ab892ed",
            "date": "2024-12-13T10:30:11Z",
            "author_login": "wleightond"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "Canarytokens is an open source tool which helps track activity and actions on your network. A Cross-Site Scripting vulnerability was identified in the history page of triggered Canarytokens prior to sha-fb61290. An attacker who discovers an HTTP-based Canarytoken (a URL) can use this to execute Javascript in the Canarytoken's trigger history page (domain: canarytokens.org) when the history page is later visited by the Canarytoken's creator.\n\nThis vulnerability could be used to disable or delete the affected Canarytoken, or view its activation history. It might also be used as a stepping stone towards revealing more information about the Canarytoken's creator to the attacker. For example, an attacker could recover the email address tied to the Canarytoken, or place Javascript on the history page that redirect the creator towards an attacker-controlled Canarytoken to show the creator's network location.\n\nThis vulnerability is similar to CVE-2022-31113, but affected parameters reported differently from the Canarytoken trigger request. An attacker could only act on the discovered Canarytoken. This issue did not expose other Canarytokens or other Canarytoken creators. Canarytokens Docker images sha-fb61290 and later contain a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-06T15:15:09.903",
    "last_modified": "2024-11-21T07:44:52.847",
    "fix_date": "2023-01-04T11:55:43Z"
  },
  "references": [
    {
      "url": "https://github.com/thinkst/canarytokens/commit/fb612906f2217bbb8863199694891d16e20bad3e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-3h2c-3fgr-74vh",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-5675-3424-hpqr",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thinkst/canarytokens/commit/fb612906f2217bbb8863199694891d16e20bad3e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-3h2c-3fgr-74vh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/thinkst/canarytokens/security/advisories/GHSA-5675-3424-hpqr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.521107",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "canarytokens",
    "owner": "thinkst",
    "created_at": "2015-07-30T12:39:30Z",
    "updated_at": "2025-01-13T21:17:06Z",
    "pushed_at": "2025-01-14T08:12:03Z",
    "size": 65568,
    "stars": 1786,
    "forks": 258,
    "open_issues": 10,
    "watchers": 1786,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "HTML": 1043337,
      "Python": 803115,
      "Vue": 285241,
      "TypeScript": 127828,
      "CSS": 52795,
      "HCL": 27190,
      "Shell": 26863,
      "C#": 26638,
      "JavaScript": 12752,
      "PowerShell": 7228,
      "Dockerfile": 1957,
      "Makefile": 1297
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:24:14.931012"
  }
}