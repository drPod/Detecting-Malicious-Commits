{
  "cve_id": "CVE-2023-22493",
  "github_data": {
    "repository": "DIYgod/RSSHub",
    "fix_commit": "a66cbcf6eebc700bf97ab097f404f16ab415506a",
    "related_commits": [
      "a66cbcf6eebc700bf97ab097f404f16ab415506a",
      "a66cbcf6eebc700bf97ab097f404f16ab415506a"
    ],
    "patch_url": "https://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a.patch",
    "fix_commit_details": {
      "sha": "a66cbcf6eebc700bf97ab097f404f16ab415506a",
      "commit_date": "2023-01-10T11:45:05Z",
      "author": {
        "login": "TonyRL",
        "type": "User",
        "stats": {
          "total_commits": 1223,
          "average_weekly_commits": 3.4548022598870056,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 159
        }
      },
      "commit_message": {
        "title": "feat(config)!: unsafe domain toggle (#11588)",
        "length": 44,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 355,
        "additions": 339,
        "deletions": 16
      },
      "files": [
        {
          "filename": "docs/en/install/README.md",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -564,14 +564,16 @@ It is also valid to contain route parameters, e.g. `/weibo/user/2612249974`.\n \n ::: tip Experimental features\n \n-Configs in this sections are in beta stage, and are turn off by default. Please read corresponded description and turn on if necessary.\n+Configs in this sections are in beta stage, and **are turn off by default**. Please read corresponded description and turn on if necessary.\n \n :::\n \n `ALLOW_USER_HOTLINK_TEMPLATE`: [Parameters->Multimedia processing](/en/parameter.html#multimedia-processing)\n \n `FILTER_REGEX_ENGINE`: Define Regex engine used in [Parameters->filtering](/en/parameter.html#filtering). Valid value are `[re2, regexp]`. Default value is `re2`. We suggest public instance should leave this value to default, and this option right now is mainly for backward compatibility.\n \n+`ALLOW_USER_SUPPLY_UNSAFE_DOMAIN`: allow users to provide a domain as a parameter to routes that are not in their allow list, respectively. Public instances are suggested to leave this value default, as it may lead to [Server-Side Request Forgery (SSRF)](https://owasp.org/www-community/attacks/Server_Side_Request_Forgery)\n+\n ### Other Application Configurations\n \n `DISALLOW_ROBOT`: prevent indexing by search engine, default to enable, set false or 0 to disable"
        },
        {
          "filename": "docs/install/README.md",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -571,14 +571,16 @@ RSSHub \u652f\u6301\u4f7f\u7528\u8bbf\u95ee\u5bc6\u94a5 / \u7801\uff0c\u767d\u540d\u5355\u548c\u9ed1\u540d\u5355\u4e09\u79cd\u65b9\u5f0f\u8fdb\u884c\n \n ::: tip \u6d4b\u8bd5\u7279\u6027\n \n-\u8fd9\u4e2a\u677f\u5757\u63a7\u5236\u7684\u662f\u4e00\u4e9b\u65b0\u7279\u6027\u7684\u9009\u9879\uff0c\u9ed8\u8ba4\u4ed6\u4eec\u90fd\u662f\u5173\u95ed\u7684\u3002\u5982\u679c\u6709\u9700\u8981\u8bf7\u9605\u8bfb\u5bf9\u5e94\u8bf4\u660e\u540e\u6309\u9700\u5f00\u542f\n+\u8fd9\u4e2a\u677f\u5757\u63a7\u5236\u7684\u662f\u4e00\u4e9b\u65b0\u7279\u6027\u7684\u9009\u9879\uff0c\u4ed6\u4eec\u90fd\u662f**\u9ed8\u8ba4\u5173\u95ed**\u7684\u3002\u5982\u679c\u6709\u9700\u8981\u8bf7\u9605\u8bfb\u5bf9\u5e94\u8bf4\u660e\u540e\u6309\u9700\u5f00\u542f\n \n :::\n \n `ALLOW_USER_HOTLINK_TEMPLATE`: [\u901a\u7528\u53c2\u6570 -> \u591a\u5a92\u4f53\u5904\u7406](/parameter.html#duo-mei-ti-chu-li)\u7279\u6027\u63a7\u5236\n \n `FILTER_REGEX_ENGINE`: \u63a7\u5236 [\u901a\u7528\u53c2\u6570 -> \u5185\u5bb9\u8fc7\u6ee4](/parameter.html#nei-rong-guo-lu) \u4f7f\u7528\u7684\u6b63\u5219\u5f15\u64ce\u3002\u53ef\u9009`[re2, regexp]`\uff0c\u9ed8\u8ba4`re2`\u3002\u6211\u4eec\u63a8\u8350\u516c\u5f00\u5b9e\u4f8b\u4e0d\u8981\u8c03\u6574\u8fd9\u4e2a\u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u76ee\u524d\u4e3b\u8981\u7528\u4e8e\u5411\u540e\u517c\u5bb9\u3002\n \n+`ALLOW_USER_SUPPLY_UNSAFE_DOMAIN`: \u5141\u8bb8\u7528\u6237\u4e3a\u8def\u7531\u63d0\u4f9b\u57df\u540d\u4f5c\u4e3a\u53c2\u6570\u3002\u5efa\u8bae\u516c\u5171\u5b9e\u4f8b\u4e0d\u8981\u8c03\u6574\u6b64\u9009\u9879\uff0c\u5f00\u542f\u540e\u53ef\u80fd\u4f1a\u5bfc\u81f4 [\u670d\u52a1\u7aef\u8bf7\u6c42\u4f2a\u9020\uff08SSRF\uff09](https://owasp.org/www-community/attacks/Server_Side_Request_Forgery)\n+\n ### \u5176\u4ed6\u5e94\u7528\u914d\u7f6e\n \n `DISALLOW_ROBOT`: \u963b\u6b62\u641c\u7d22\u5f15\u64ce\u6536\u5f55\uff0c\u9ed8\u8ba4\u5f00\u542f\uff0c\u8bbe\u7f6e false \u6216 0 \u5173\u95ed"
        },
        {
          "filename": "lib/config.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -97,6 +97,7 @@ const calculateValue = () => {\n         feature: {\n             allow_user_hotlink_template: envs.ALLOW_USER_HOTLINK_TEMPLATE === 'true',\n             filter_regex_engine: envs.FILTER_REGEX_ENGINE || 're2',\n+            allow_user_supply_unsafe_domain: envs.ALLOW_USER_SUPPLY_UNSAFE_DOMAIN === 'true',\n         },\n         suffix: envs.SUFFIX,\n         titleLengthLimit: parseInt(envs.TITLE_LENGTH_LIMIT) || 150,"
        },
        {
          "filename": "lib/routes/bandisoft/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const lang = ctx.params.lang || 'en';\n     const id = ctx.params.id || 'bandizip';\n+    if (!isValidHost(lang)) {\n+        throw Error('Invalid language code');\n+    }\n \n     const rootUrl = `https://${lang}.bandisoft.com`;\n     const currentUrl = `${rootUrl}/${id}/history/`;"
        },
        {
          "filename": "lib/routes/biobio/others.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,7 +1,12 @@\n const cheerio = require('cheerio');\n const got = require('@/utils/got');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n+    if (!isValidHost(ctx.params.column)) {\n+        throw Error('Invalid column');\n+    }\n+\n     const url = `http://${ctx.params.column}.bio1000.com/${ctx.params.id}`;\n     const res = await got.get(url);\n     const $ = cheerio.load(res.data);"
        },
        {
          "filename": "lib/routes/blogs/hedwig.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -4,9 +4,13 @@ const md = require('markdown-it')({\n     html: true,\n });\n const dayjs = require('dayjs');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const type = ctx.params.type;\n+    if (!isValidHost(type)) {\n+        throw Error('Invalid type');\n+    }\n \n     const url = `https://${type}.hedwig.pub`;\n     const res = await got({"
        },
        {
          "filename": "lib/routes/blogs/wordpress.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,7 +1,12 @@\n const parser = require('@/utils/rss-parser');\n const config = require('@/config').value;\n+const allowDomain = ['lawrence.code.blog'];\n \n module.exports = async (ctx) => {\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowDomain.includes(ctx.params.domain)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n+\n     const scheme = ctx.params.https || 'https';\n     const cdn = config.wordpress.cdnUrl;\n "
        },
        {
          "filename": "lib/routes/booth-pm/shop.js",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -1,10 +1,13 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n-\n+const { isValidHost } = require('@/utils/valid-host');\n const maxPages = 5;\n \n module.exports = async (ctx) => {\n     const { subdomain } = ctx.params;\n+    if (!isValidHost(subdomain)) {\n+        throw Error('Invalid subdomain');\n+    }\n     const shopUrl = `https://${subdomain}.booth.pm`;\n \n     let shopName;"
        },
        {
          "filename": "lib/routes/caixin/blog.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n const got = require('@/utils/got');\n const parser = require('@/utils/rss-parser');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n async function load(link, need_feed_description) {\n     const response = await got.get(link);\n@@ -29,6 +30,9 @@ async function load(link, need_feed_description) {\n \n module.exports = async (ctx) => {\n     const { column } = ctx.params;\n+    if (!isValidHost(column)) {\n+        throw Error('Invalid column');\n+    }\n     const link = `http://${column}.blog.caixin.com`;\n     const feed_url = `${link}/feed`;\n     const feed = await parser.parseURL(feed_url);"
        },
        {
          "filename": "lib/routes/caixin/category.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,10 +1,14 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const category = ctx.params.category;\n     const column = ctx.params.column;\n     const url = `http://${column}.caixin.com/${category}`;\n+    if (!isValidHost(column)) {\n+        throw Error('Invalid column');\n+    }\n \n     const response = await got({\n         method: 'get',"
        },
        {
          "filename": "lib/routes/craigslist/search.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,7 +1,12 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n+    if (!isValidHost(ctx.params.location)) {\n+        throw Error('Invalid location');\n+    }\n+\n     const queryParams = ctx.request.querystring;\n     const queryUrl = `https://${ctx.params.location}.craigslist.org/search/${ctx.params.type}?${queryParams}`;\n     const { data } = await got.get(queryUrl);"
        },
        {
          "filename": "lib/routes/engadget/home.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const parser = require('@/utils/rss-parser');\n+const allowLang = ['chinese', 'cn', 'us', 'japanese', 'www'];\n \n module.exports = async (ctx) => {\n     const lang = ctx.params.lang === 'us' ? 'www' : ctx.params.lang || 'cn';\n+    if (!allowLang.includes(lang)) {\n+        throw Error('Invalid lang');\n+    }\n     const rssUrl = `https://${lang}.engadget.com/rss.xml`;\n     const feed = await parser.parseURL(rssUrl);\n "
        },
        {
          "filename": "lib/routes/fanbox/main.js",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -4,12 +4,15 @@\n // user?: fanbox domain name\n \n const got = require('@/utils/got');\n-\n+const { isValidHost } = require('@/utils/valid-host');\n const conv_item = require('./conv');\n const get_header = require('./header');\n \n module.exports = async (ctx) => {\n     const user = ctx.params.user || 'official'; // if no user specified, just go to official page\n+    if (!isValidHost(user)) {\n+        throw Error('Invalid user');\n+    }\n     const box_url = `https://${user}.fanbox.cc`;\n \n     // get user info"
        },
        {
          "filename": "lib/routes/fashionnetwork/headline.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,8 +1,12 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const country = ctx.params.country || 'ww';\n+    if (!isValidHost(country)) {\n+        throw Error('Invalid country');\n+    }\n \n     const rootUrl = `https://${country}.fashionnetwork.com`;\n     const response = await got({"
        },
        {
          "filename": "lib/routes/fashionnetwork/news.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,5 +1,6 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const country = ctx.params.country || 'ww';\n@@ -12,6 +13,10 @@ module.exports = async (ctx) => {\n     const sectorsUrl = sectors ? 'sectors%5B%5D=' + sectors.split(',').join('&sectors%5B%5D=') : '';\n     const categoriesUrl = categories ? 'categs%5B%5D=' + categories.split(',').join('&categs%5B%5D=') : '';\n \n+    if (!isValidHost(country)) {\n+        throw Error('Invalid country');\n+    }\n+\n     const rootUrl = `https://${country}.fashionnetwork.com`;\n     const currentUrl = `${rootUrl}/news/s.jsonp?${sectorsUrl}&${categoriesUrl}`;\n     const response = await got({"
        },
        {
          "filename": "lib/routes/gitlab/common.js",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+const allowHost = ['gitlab.com'];\n+\n+module.exports = {\n+    allowHost,\n+};"
        },
        {
          "filename": "lib/routes/gitlab/explore.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,5 +1,7 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const config = require('@/config').value;\n+const { allowHost } = require('./common');\n \n module.exports = async (ctx) => {\n     let { type, host } = ctx.params;\n@@ -10,6 +12,9 @@ module.exports = async (ctx) => {\n         starred: 'Most stars',\n         all: 'All',\n     };\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowHost.includes(new URL(host).hostname)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const res = await got({\n         method: 'get',"
        },
        {
          "filename": "lib/routes/gitlab/release.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,8 +1,13 @@\n const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n+const config = require('@/config').value;\n+const { allowHost } = require('./common');\n \n module.exports = async (ctx) => {\n     const { namespace, project, host } = ctx.params;\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowHost.includes(host)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const host_ = host ? host : 'gitlab.com';\n     const namespace_ = encodeURIComponent(namespace);"
        },
        {
          "filename": "lib/routes/gitlab/tag.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,8 +1,13 @@\n const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n+const config = require('@/config').value;\n+const { allowHost } = require('./common');\n \n module.exports = async (ctx) => {\n     const { namespace, project, host } = ctx.params;\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowHost.includes(host)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const host_ = host ? host : 'gitlab.com';\n     const namespace_ = encodeURIComponent(namespace);"
        },
        {
          "filename": "lib/routes/hexo/fluid.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,7 +1,11 @@\n const cheerio = require('cheerio');\n const got = require('@/utils/got');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n+    if (!config.feature.allow_user_supply_unsafe_domain) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n     const url = `http://${ctx.params.url}`;\n     const res = await got.get(`${url}/archives/`);\n     const $ = cheerio.load(res.data);"
        },
        {
          "filename": "lib/routes/hexo/next.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,7 +1,11 @@\n const cheerio = require('cheerio');\n const got = require('@/utils/got');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n+    if (!config.feature.allow_user_supply_unsafe_domain) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n     const url = `http://${ctx.params.url}`;\n     const res = await got.get(`${url}/archives/`);\n     const $ = cheerio.load(res.data);"
        },
        {
          "filename": "lib/routes/hexo/yilia.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,7 +1,11 @@\n const cheerio = require('cheerio');\n const got = require('@/utils/got');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n+    if (!config.feature.allow_user_supply_unsafe_domain) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n     const url = `http://${ctx.params.url}`;\n     const res = await got.get(url);\n     const $ = cheerio.load(res.data);"
        },
        {
          "filename": "lib/routes/mastodon/account_id.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const utils = require('./utils');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n     const site = ctx.params.site;\n     const account_id = ctx.params.account_id;\n     const only_media = ctx.params.only_media ? 'true' : 'false';\n+    if (!config.feature.allow_user_supply_unsafe_domain && !utils.allowSiteList.includes(site)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const { account_data, data } = await utils.getAccountStatuses(site, account_id, only_media);\n "
        },
        {
          "filename": "lib/routes/mastodon/timeline_local.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const utils = require('./utils');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n     const site = ctx.params.site;\n     const only_media = ctx.params.only_media ? 'true' : 'false';\n+    if (!config.feature.allow_user_supply_unsafe_domain && !utils.allowSiteList.includes(site)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const url = `http://${site}/api/v1/timelines/public?local=true&only_media=${only_media}`;\n "
        },
        {
          "filename": "lib/routes/mastodon/timeline_remote.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const utils = require('./utils');\n+const config = require('@/config').value;\n \n module.exports = async (ctx) => {\n     const site = ctx.params.site;\n     const only_media = ctx.params.only_media ? 'true' : 'false';\n+    if (!config.feature.allow_user_supply_unsafe_domain && !utils.allowSiteList.includes(site)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const url = `http://${site}/api/v1/timelines/public?remote=true&only_media=${only_media}`;\n "
        },
        {
          "filename": "lib/routes/mastodon/utils.js",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1,6 +1,8 @@\n const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n \n+const allowSiteList = ['mastodon.social', 'pawoo.net'];\n+\n const parseStatuses = (data) =>\n     data.map((item) => {\n         // docs on: https://docs.joinmastodon.org/entities/status/\n@@ -125,4 +127,5 @@ module.exports = {\n     parseStatuses,\n     getAccountStatuses,\n     getAccountIdByAcct,\n+    allowSiteList,\n };"
        },
        {
          "filename": "lib/routes/pornhub/category_url.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,10 +1,14 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const language = ctx.params.language || 'www';\n     const url = ctx.params.url || 'video';\n     const link = `https://${language}.pornhub.com/${url}`;\n+    if (!isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const response = await got.get(link);\n     const $ = cheerio.load(response.data);"
        },
        {
          "filename": "lib/routes/pornhub/model.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,11 +1,15 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const language = ctx.params.language || 'www';\n     const username = ctx.params.username;\n     const sort = ctx.params.sort || 'mr';\n     const link = `https://${language}.pornhub.com/model/${username}/videos?o=${sort}`;\n+    if (!isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const response = await got.get(link);\n     const $ = cheerio.load(response.data);"
        },
        {
          "filename": "lib/routes/pornhub/pornstar.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,11 +1,15 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const language = ctx.params.language || 'www';\n     const username = ctx.params.username;\n     const sort = ctx.params.sort || 'mr';\n     const link = `https://${language}.pornhub.com/pornstar/${username}/videos?o=${sort}`;\n+    if (!isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const response = await got.get(link);\n     const $ = cheerio.load(response.data);"
        },
        {
          "filename": "lib/routes/pornhub/users.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,10 +1,14 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const language = ctx.params.language || 'www';\n     const username = ctx.params.username;\n     const link = `https://${language}.pornhub.com/users/${username}/videos`;\n+    if (!isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const response = await got.get(link);\n     const $ = cheerio.load(response.data);"
        },
        {
          "filename": "lib/routes/touhougarakuta/index.js",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -11,6 +11,9 @@ const getBaseUrl = (language) => (language === 'ja' ? 'https://touhougarakuta.co\n \n module.exports = async (ctx) => {\n     const { language, type } = ctx.params;\n+    if (!Object.keys(languageCodes).includes(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const baseUrl = getBaseUrl(language);\n "
        },
        {
          "filename": "lib/routes/weforum/report.js",
          "status": "modified",
          "additions": 10,
          "deletions": 6,
          "patch": "@@ -1,13 +1,17 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n-    ctx.params.lang = ctx.params.lang || 'www';\n-    ctx.params.platform = ctx.params.platform || '';\n-    ctx.params.year = ctx.params.year || '';\n-\n-    const rootUrl = `https://${ctx.params.lang === 'en' ? 'www' : ctx.params.lang}.weforum.org`;\n-    const currentUrl = `${rootUrl}/reports?platform=${ctx.params.platform}&year=${ctx.params.year}`;\n+    const lang = ctx.params.lang || 'www';\n+    const platform = ctx.params.platform || '';\n+    const year = ctx.params.year || '';\n+    if (!isValidHost(lang)) {\n+        throw Error('Invalid lang');\n+    }\n+\n+    const rootUrl = `https://${lang === 'en' ? 'www' : lang}.weforum.org`;\n+    const currentUrl = `${rootUrl}/reports?platform=${platform}&year=${year}`;\n     const response = await got({\n         method: 'get',\n         url: currentUrl,"
        },
        {
          "filename": "lib/routes/yahoo-news/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const parser = require('@/utils/rss-parser');\n const cheerio = require('cheerio');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const region = ctx.params.region === 'en' ? '' : ctx.params.region.toLowerCase() + '.';\n+    if (!isValidHost(region)) {\n+        throw Error('Invalid region');\n+    }\n     const category = ctx.params.category ? ctx.params.category.toLowerCase() : '';\n     const rssUrl = `https://${region}news.yahoo.com/rss/${category}`;\n     const feed = await parser.parseURL(rssUrl);"
        },
        {
          "filename": "lib/routes/ziroom/room.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,4 +1,5 @@\n const got = require('@/utils/got');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const city = ctx.params.city || 'sh';\n@@ -7,6 +8,10 @@ module.exports = async (ctx) => {\n     const room = ctx.params.room || '1';\n     const domain = `${city === 'bj' ? '' : city + '.'}m.ziroom.com`;\n \n+    if (!isValidHost(city)) {\n+        throw Error('Invalid city');\n+    }\n+\n     const response = await got({\n         method: 'post',\n         url: `http://${domain}/list/ajax-get-data`,"
        },
        {
          "filename": "lib/utils/valid-host.js",
          "status": "added",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -0,0 +1,16 @@\n+/**\n+ * Check if a sub-domain is valid\n+ * @param {String} hostname sub-domain\n+ * @returns {Boolean} true if valid\n+ */\n+const isValidHost = (hostname) => {\n+    if (typeof hostname !== 'string') {\n+        return false;\n+    }\n+    const regex = /^[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/;\n+    return regex.test(hostname);\n+};\n+\n+module.exports = {\n+    isValidHost,\n+};"
        },
        {
          "filename": "lib/v2/19lou/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -3,6 +3,7 @@ const cheerio = require('cheerio');\n const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n const iconv = require('iconv-lite');\n+const { isValidHost } = require('@/utils/valid-host');\n \n const setCookie = function (cookieName, cookieValue, seconds, path, domain, secure) {\n     let expires = null;\n@@ -15,6 +16,9 @@ const setCookie = function (cookieName, cookieValue, seconds, path, domain, secu\n \n module.exports = async (ctx) => {\n     const city = ctx.params.city ?? 'www';\n+    if (!isValidHost(city)) {\n+        throw Error('Invalid city');\n+    }\n \n     const rootUrl = `https://${city}.19lou.com`;\n "
        },
        {
          "filename": "lib/v2/91porn/author.js",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -3,11 +3,13 @@ const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { domainValidation } = require('./utils');\n \n module.exports = async (ctx) => {\n     const { domain = '91porn.com' } = ctx.query;\n     const { uid, lang = 'en_US' } = ctx.params;\n     const siteUrl = `https://${domain}/uvideos.php?UID=${uid}&type=public`;\n+    domainValidation(domain, ctx);\n \n     const response = await got.post(siteUrl, {\n         form: {"
        },
        {
          "filename": "lib/v2/91porn/index.js",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -3,11 +3,13 @@ const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { domainValidation } = require('./utils');\n \n module.exports = async (ctx) => {\n     const { domain = '91porn.com' } = ctx.query;\n     const siteUrl = `https://${domain}/index.php`;\n     const { lang = 'en_US' } = ctx.params;\n+    domainValidation(domain, ctx);\n \n     const response = await got.post(siteUrl, {\n         form: {"
        },
        {
          "filename": "lib/v2/91porn/utils.js",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+const config = require('@/config').value;\n+const allowDomain = ['91porn.com', 'www.91porn.com', '0122.91p30.com', 'www.91zuixindizhi.com', 'w1218.91p46.com'];\n+\n+const domainValidation = (domain, ctx) => {\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowDomain.includes(domain)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n+};\n+\n+module.exports = {\n+    domainValidation,\n+};"
        },
        {
          "filename": "lib/v2/bendibao/news.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -2,9 +2,13 @@ const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const city = ctx.params.city;\n+    if (!isValidHost(city)) {\n+        throw Error('Invalid city');\n+    }\n \n     const rootUrl = `http://${city}.bendibao.com`;\n "
        },
        {
          "filename": "lib/v2/biquge/index.js",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -3,10 +3,31 @@ const cheerio = require('cheerio');\n const iconv = require('iconv-lite');\n const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n+const config = require('@/config').value;\n+const allowHost = [\n+    'www.xbiquwx.la',\n+    'www.biqu5200.net',\n+    'www.xbiquge.so',\n+    'www.biqugeu.net',\n+    'www.b520.cc',\n+    'www.ahfgb.com',\n+    'www.ibiquge.la',\n+    'www.biquge.tv',\n+    'www.bswtan.com',\n+    'www.biquge.co',\n+    'www.bqzhh.com',\n+    'www.biqugse.com',\n+    'www.ibiquge.info',\n+    'www.ishuquge.com',\n+    'www.mayiwxw.com',\n+];\n \n module.exports = async (ctx) => {\n     const rootUrl = ctx.path.split('/').slice(1, 4).join('/');\n     const currentUrl = ctx.path.slice(1);\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowHost.includes(new URL(rootUrl).hostname)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     const response = await got({\n         method: 'get',"
        },
        {
          "filename": "lib/v2/btzj/index.js",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -4,10 +4,15 @@ const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const config = require('@/config').value;\n+const allowDomain = ['btbtt15.com'];\n \n module.exports = async (ctx) => {\n     let category = ctx.params.category ?? '';\n-    let domain = ctx.query.domain ?? 'btbtt20.com';\n+    let domain = ctx.query.domain ?? 'btbtt15.com';\n+    if (!config.feature.allow_user_supply_unsafe_domain && !allowDomain.includes(new URL(domain).hostname)) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n     if (category === 'base') {\n         category = '';"
        },
        {
          "filename": "lib/v2/cnjxol/index.js",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -12,6 +12,9 @@ const categories = {\n module.exports = async (ctx) => {\n     const category = ctx.params.category ?? 'jxrb';\n     const id = ctx.params.id;\n+    if (!Object.keys(categories).includes(category)) {\n+        throw Error('Invalid category');\n+    }\n \n     const rootUrl = `https://${category}.cnjxol.com`;\n     const currentUrl = `${rootUrl}/${category}Paper/pc/layout`;"
        },
        {
          "filename": "lib/v2/dut/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -3,9 +3,13 @@ const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const defaults = require('./defaults');\n const shortcuts = require('./shortcuts');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const site = ctx.params[0] ?? 'news';\n+    if (!isValidHost(site)) {\n+        throw Error('Invalid site');\n+    }\n \n     let items;\n     let category = ctx.params[1] ?? (defaults.hasOwnProperty(site) ? defaults[site] : '');"
        },
        {
          "filename": "lib/v2/eagle/blog.js",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -1,16 +1,20 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n-\n+const { isValidHost } = require('@/utils/valid-host');\n const cateList = ['all', 'design-resources', 'learn-design', 'inside-eagle'];\n \n module.exports = async (ctx) => {\n     let cate = ctx.params.cate ?? 'all';\n     let language = ctx.params.language ?? 'cn';\n-    if (cateList.indexOf(cate) === -1) {\n+    if (!isValidHost(cate) || !isValidHost(language)) {\n+        throw Error('Invalid host');\n+    }\n+    if (!cateList.includes(cate)) {\n         language = cate;\n         cate = 'all';\n     }\n+\n     const host = `https://${language}.eagle.cool`;\n     const url = `${host}/blog/${cate === 'all' ? '' : cate}`;\n "
        },
        {
          "filename": "lib/v2/eprice/rss.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -4,9 +4,13 @@ const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const allowRegion = ['tw', 'hk'];\n \n module.exports = async (ctx) => {\n     const region = ctx.params.region ?? 'tw';\n+    if (!allowRegion.includes(region)) {\n+        throw Error('Invalid region');\n+    }\n \n     const feed = await parser.parseURL(`https://www.eprice.com.${region}/news/rss.xml`);\n "
        },
        {
          "filename": "lib/v2/ff14/ff14_global.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -2,11 +2,16 @@ const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const lang = ctx.params.lang;\n     const type = ctx.params.type ?? 'all';\n \n+    if (!isValidHost(lang)) {\n+        throw Error('Invalid lang');\n+    }\n+\n     const response = await got({\n         method: 'get',\n         url: `https://lodestonenews.com/news/${type}?locale=${lang}`,"
        },
        {
          "filename": "lib/v2/gamme/category.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const parser = require('@/utils/rss-parser');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const { domain = 'news', category } = ctx.params;\n+    if (!isValidHost(domain)) {\n+        throw Error('Invalid domain');\n+    }\n     const baseUrl = `https://${domain}.gamme.com.tw`;\n     const feed = await parser.parseURL(`${baseUrl + (category ? `/category/${category}` : '')}/feed`);\n "
        },
        {
          "filename": "lib/v2/gamme/tag.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const { domain = 'news', tag } = ctx.params;\n+    if (!isValidHost(domain)) {\n+        throw Error('Invalid domain');\n+    }\n     const baseUrl = `https://${domain}.gamme.com.tw`;\n     const pageUrl = `${baseUrl}/tag/${tag}`;\n "
        },
        {
          "filename": "lib/v2/gumroad/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -2,10 +2,14 @@ const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const username = ctx.params.username;\n     const products = ctx.params.products;\n+    if (!isValidHost(username)) {\n+        throw Error('Invalid username');\n+    }\n     const url = `https://${username}.gumroad.com/l/${products}`;\n \n     const response = await got(url);"
        },
        {
          "filename": "lib/v2/huanqiu/index.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n function getKeysRecursive(dic, key, attr, array) {\n     Object.values(dic).forEach((v) => {\n@@ -15,6 +16,10 @@ function getKeysRecursive(dic, key, attr, array) {\n \n module.exports = async (ctx) => {\n     const category = ctx.params.category ?? 'china';\n+    if (!isValidHost(category)) {\n+        throw Error('Invalid category');\n+    }\n+\n     const host = 'https://' + category + '.huanqiu.com';\n \n     const resp = await got({"
        },
        {
          "filename": "lib/v2/itch/devlog.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -4,10 +4,14 @@ const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const user = ctx.params.user ?? '';\n     const id = ctx.params.id ?? '';\n+    if (!isValidHost(user)) {\n+        throw Error('Invalid user');\n+    }\n \n     const rootUrl = `https://${user}.itch.io/${id}/devlog`;\n "
        },
        {
          "filename": "lib/v2/javbus/index.js",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -3,17 +3,27 @@ const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const config = require('@/config').value;\n \n const toSize = (raw) => {\n     const matches = raw.match(/(\\d+(\\.\\d+)?)(\\w+)/);\n     return matches[3] === 'GB' ? matches[1] * 1024 : matches[1];\n };\n \n+const allowDomain = ['javbus.com', 'javbus.org', 'javsee.icu', 'javsee.one'];\n+\n module.exports = async (ctx) => {\n     const isWestern = /^\\/western/.test(ctx.path);\n+    const domain = ctx.query.domain ?? 'javbus.com';\n+    const westernDomain = ctx.query.western_domain ?? 'javbus.org';\n+\n+    const rootUrl = `https://www.${domain}`;\n+    const westernUrl = `https://www.${westernDomain}`;\n+\n+    if (!config.feature.allow_user_supply_unsafe_domain && (!allowDomain.includes(new URL(domain).hostname) || !allowDomain.includes(new URL(westernDomain).hostname))) {\n+        ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+    }\n \n-    const rootUrl = `https://www.${ctx.query.domain ?? 'javbus.com'}`;\n-    const westernUrl = `https://www.${ctx.query.western_domain ?? 'javbus.org'}`;\n     const currentUrl = `${isWestern ? westernUrl : rootUrl}${ctx.path.replace(/^\\/western/, '').replace(/\\/home/, '')}`;\n \n     const response = await got({"
        },
        {
          "filename": "lib/v2/javdb/utils.js",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -1,10 +1,16 @@\n const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n+const config = require('@/config').value;\n+const allowDomain = ['javdb.com', 'javdb36.com', 'javdb007.com'];\n \n module.exports = {\n     ProcessItems: async (ctx, currentUrl, title) => {\n         const domain = ctx.query.domain ?? 'javdb.com';\n+        if (!config.feature.allow_user_supply_unsafe_domain && !allowDomain.includes(new URL(domain).hostname)) {\n+            ctx.throw(403, `This RSS is disabled unless 'ALLOW_USER_SUPPLY_UNSAFE_DOMAIN' is set to 'true'.`);\n+        }\n+\n         const rootUrl = `https://${domain}`;\n \n         const response = await got({"
        },
        {
          "filename": "lib/v2/lofter/user.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const name = ctx.params.name ?? 'i';\n     const limit = ctx.query.limit ? parseInt(ctx.query.limit) : '50';\n+    if (!isValidHost(name)) {\n+        throw Error('Invalid name');\n+    }\n \n     const rootUrl = `${name}.lofter.com`;\n "
        },
        {
          "filename": "lib/v2/mirror/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -4,10 +4,13 @@ const md = require('markdown-it')({\n     html: true,\n     linkify: true,\n });\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const id = ctx.params.id;\n-\n+    if (!id.endsWith('.eth') && !isValidHost(id)) {\n+        throw Error('Invalid id');\n+    }\n     const rootUrl = 'https://mirror.xyz';\n     const currentUrl = id.endsWith('.eth') ? `${rootUrl}/${id}` : `https://${id}.mirror.xyz`;\n "
        },
        {
          "filename": "lib/v2/myfigurecollection/activity.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -4,6 +4,7 @@ const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const category = ctx.params.category ?? '-1';\n@@ -13,6 +14,10 @@ module.exports = async (ctx) => {\n     const latestAlerts = ctx.params.latestAlerts ?? '1';\n     const latestPictures = ctx.params.latestPictures ?? '1';\n \n+    if (language && !isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n+\n     const rootUrl = `https://${language === 'en' || language === '' ? '' : `${language}.`}myfigurecollection.net`;\n     const currentUrl = `${rootUrl}/browse.v4.php?mode=activity&latestAdditions=${latestAdditions}&latestEdits=${latestEdits}&latestAlerts=${latestAlerts}&latestPictures=${latestPictures}&rootId=${category}`;\n "
        },
        {
          "filename": "lib/v2/myfigurecollection/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@ const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { art } = require('@/utils/render');\n const path = require('path');\n+const { isValidHost } = require('@/utils/valid-host');\n \n const shortcuts = {\n     potd: 'picture/browse/potd/',\n@@ -12,6 +13,9 @@ const shortcuts = {\n module.exports = async (ctx) => {\n     const language = ctx.params.language ?? '';\n     const category = ctx.params.category ?? 'figure';\n+    if (language && !isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const rootUrl = `https://${language === 'en' || language === '' ? '' : `${language}.`}myfigurecollection.net`;\n     const currentUrl = `${rootUrl}/${shortcuts.hasOwnProperty(category) ? shortcuts[category] : category}`;"
        },
        {
          "filename": "lib/v2/nikkei-cn/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@ const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n const cleanContent = (language, content) => {\n     switch (language) {\n@@ -23,6 +24,9 @@ module.exports = async (ctx) => {\n     const language = ctx.params.language ?? 'cn';\n     const category = ctx.params.category ?? '';\n     const type = ctx.params.type ?? '';\n+    if (!isValidHost(language)) {\n+        throw Error('Invalid language');\n+    }\n \n     const rootUrl = `https://${language === 'zh' ? `zh.cn` : language}.nikkei.com`;\n     const currentUrl = `${rootUrl}/${category ? (category === 'rss' ? 'rss.html' : `${category}${type ? `/${type}` : ''}.html`) : ''}`;"
        },
        {
          "filename": "lib/v2/people/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -3,12 +3,16 @@ const cheerio = require('cheerio');\n const iconv = require('iconv-lite');\n const timezone = require('@/utils/timezone');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const site = ctx.params[0] ?? 'www';\n     let category = ctx.params[1] ?? (site === 'www' ? '59476' : '');\n     category = site === 'cpc' && category === '24h' ? '87228' : category;\n \n+    if (!isValidHost(site)) {\n+        throw Error('Invalid site');\n+    }\n     const rootUrl = `http://${site}.people.com.cn`;\n     const currentUrl = `${rootUrl}/GB/${category}/index.html`;\n "
        },
        {
          "filename": "lib/v2/scitation/journal.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,12 +1,16 @@\n const cheerio = require('cheerio');\n const { puppeteerGet, renderDesc } = require('./utils');\n const config = require('@/config').value;\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const pub = ctx.params.pub;\n     const jrn = ctx.params.jrn;\n     const host = `https://${pub}.scitation.org`;\n     const jrnlUrl = `${host}/toc/${jrn}/current?size=all`;\n+    if (!isValidHost(pub)) {\n+        throw Error('Invalid pub');\n+    }\n \n     // use Puppeteer due to the obstacle by cloudflare challenge\n     const browser = await require('@/utils/puppeteer')();"
        },
        {
          "filename": "lib/v2/scitation/section.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,13 +1,17 @@\n const cheerio = require('cheerio');\n const { puppeteerGet, renderDesc } = require('./utils');\n const config = require('@/config').value;\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const pub = ctx.params.pub;\n     const jrn = ctx.params.jrn;\n     const sec = ctx.params.sec.split('+').join(' ');\n     const host = `https://${pub}.scitation.org`;\n     const jrnlUrl = `${host}/toc/${jrn}/current?size=all`;\n+    if (!isValidHost(pub)) {\n+        throw Error('Invalid pub');\n+    }\n \n     // use Puppeteer due to the obstacle by cloudflare challenge\n     const browser = await require('@/utils/puppeteer')();"
        },
        {
          "filename": "lib/v2/solidot/main.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -6,9 +6,14 @@\n const got = require('@/utils/got'); // get web content\n const cheerio = require('cheerio'); // html parser\n const get_article = require('./_article');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const type = ctx.params.type ?? 'www';\n+    if (!isValidHost(type)) {\n+        throw Error('Invalid type');\n+    }\n+\n     const base_url = `https://${type}.solidot.org`;\n     const response = await got({\n         method: 'get',"
        },
        {
          "filename": "lib/v2/zcool/user.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -2,11 +2,15 @@ const got = require('@/utils/got');\n const cheerio = require('cheerio');\n const { parseDate } = require('@/utils/parse-date');\n const { extractArticle, extractWork } = require('./utils');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const { uid } = ctx.params;\n     let pageUrl = `https://www.zcool.com.cn/u/${uid}`;\n     if (isNaN(uid)) {\n+        if (!isValidHost(uid)) {\n+            throw Error('Invalid uid');\n+        }\n         pageUrl = `https://${uid}.zcool.com.cn`;\n     }\n     const { data: response } = await got(pageUrl);"
        },
        {
          "filename": "lib/v2/zhubai/index.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,9 +1,13 @@\n const got = require('@/utils/got');\n const { parseDate } = require('@/utils/parse-date');\n+const { isValidHost } = require('@/utils/valid-host');\n \n module.exports = async (ctx) => {\n     const { id } = ctx.params;\n     const limit = ctx.query.limit ? parseInt(ctx.query.limit) : 20;\n+    if (!isValidHost(id)) {\n+        throw Error('Invalid id');\n+    }\n \n     const response = await got({\n         method: 'get',"
        },
        {
          "filename": "test/utils/valid-host.js",
          "status": "added",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -0,0 +1,21 @@\n+const { isValidHost } = require('../../lib/utils/valid-host');\n+\n+describe('valid-host', () => {\n+    it('validate hostname', () => {\n+        expect(isValidHost()).toBe(false);\n+        expect(isValidHost(123)).toBe(false);\n+        expect(isValidHost('')).toBe(false);\n+        expect(isValidHost('subd0main')).toBe(true);\n+        expect(isValidHost('-subd0main')).toBe(false);\n+        expect(isValidHost('sub-d0main')).toBe(true);\n+        expect(isValidHost('subd0main-')).toBe(false);\n+        expect(isValidHost('sub.d0main')).toBe(false);\n+        expect(isValidHost('sub-.d0main')).toBe(false);\n+        expect(isValidHost('s')).toBe(true);\n+        expect(isValidHost('-')).toBe(false);\n+        expect(isValidHost('0')).toBe(true);\n+        expect(isValidHost('s-')).toBe(false);\n+        expect(isValidHost('s-u')).toBe(true);\n+        expect(isValidHost('su')).toBe(true);\n+    });\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 47,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ddd2dbbd242a12833b543268b4a571a4499ad33c",
            "date": "2025-01-14T16:31:16Z",
            "author_login": "nczitzk"
          },
          {
            "sha": "698fcd54f8348194c33f06e300cf0e4af06e3ebd",
            "date": "2025-01-14T16:13:18Z",
            "author_login": "TonyRL"
          },
          {
            "sha": "1d7b470fa97619c33c436611bc893c7b538a15ad",
            "date": "2025-01-14T15:25:17Z",
            "author_login": "cscnk52"
          },
          {
            "sha": "1504ee3c63e13fbc9b48f95d3d0a6b2c22321a31",
            "date": "2025-01-14T15:24:30Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c690b5ab58850f777bd3d1047f5427e024f596ff",
            "date": "2025-01-14T14:52:26Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-918",
    "description": "RSSHub is an open source RSS feed generator. RSSHub is vulnerable to Server-Side Request Forgery (SSRF) attacks. This vulnerability allows an attacker to send arbitrary HTTP requests from the server to other servers or resources on the network. An attacker can exploit this vulnerability by sending a request to the affected routes with a malicious URL. An attacker could also use this vulnerability to send requests to internal or any other servers or resources on the network, potentially gain access to sensitive information that would not normally be accessible and amplifying the impact of the attack. The patch for this issue can be found in commit a66cbcf. ",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-13T15:15:09.233",
    "last_modified": "2024-11-21T07:44:55.237",
    "fix_date": "2023-01-10T11:45:05Z"
  },
  "references": [
    {
      "url": "https://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DIYgod/RSSHub/pull/11588",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-64wp-jh9p-5cg2",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DIYgod/RSSHub/pull/11588",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-64wp-jh9p-5cg2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:04:43.549422",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "RSSHub",
    "owner": "DIYgod",
    "created_at": "2018-04-02T14:43:21Z",
    "updated_at": "2025-01-14T12:00:05Z",
    "pushed_at": "2025-01-14T08:38:49Z",
    "size": 327515,
    "stars": 34752,
    "forks": 7676,
    "open_issues": 336,
    "watchers": 34752,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 9820093,
      "JavaScript": 1133550,
      "Dockerfile": 7866,
      "Shell": 606,
      "HTML": 418
    },
    "commit_activity": {
      "total_commits_last_year": 4516,
      "avg_commits_per_week": 86.84615384615384,
      "days_active_last_year": 360
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:46:03.088933"
  }
}