{
  "cve_id": "CVE-2023-23082",
  "github_data": {
    "repository": "xbmc/xbmc",
    "fix_commit": "8c2aafb6d4987833803e037c923aaf83f9ff41e1",
    "related_commits": [
      "8c2aafb6d4987833803e037c923aaf83f9ff41e1",
      "8c2aafb6d4987833803e037c923aaf83f9ff41e1"
    ],
    "patch_url": "https://github.com/xbmc/xbmc/commit/8c2aafb6d4987833803e037c923aaf83f9ff41e1.patch",
    "fix_commit_details": {
      "sha": "8c2aafb6d4987833803e037c923aaf83f9ff41e1",
      "commit_date": "2023-01-08T16:47:35Z",
      "author": {
        "login": "thexai",
        "type": "User",
        "stats": {
          "total_commits": 536,
          "average_weekly_commits": 0.67,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 182
        }
      },
      "commit_message": {
        "title": "Merge pull request #22380 from fritsch/at25",
        "length": 122,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 13,
        "deletions": 5
      },
      "files": [
        {
          "filename": "xbmc/pictures/ExifParse.cpp",
          "status": "modified",
          "additions": 13,
          "deletions": 5,
          "patch": "@@ -27,6 +27,7 @@\n #endif\n \n #include <math.h>\n+#include <stdint.h>\n #include <stdio.h>\n \n #ifndef min\n@@ -376,7 +377,7 @@ void CExifParse::ProcessDir(const unsigned char* const DirStart,\n       unsigned OffsetVal;\n       OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);\n       // If its bigger than 4 bytes, the dir entry contains an offset.\n-      if (OffsetVal+ByteCount > ExifLength)\n+      if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)\n       {\n         // Bogus pointer offset and / or bytecount value\n         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);\n@@ -787,10 +788,10 @@ bool CExifParse::Process (const unsigned char* const ExifSection, const unsigned\n   pos += sizeof(short);\n \n   unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);\n-  if (FirstOffset < 8 || FirstOffset > 16)\n+  if (FirstOffset < 8 || FirstOffset + 8 >= length)\n   {\n-    // Usually set to 8, but other values valid too.\n-//  CLog::Log(LOGERROR, \"ExifParse: suspicious offset of first IFD value\");\n+    ErrNonfatal(\"Invalid offset of first IFD value: %u\", FirstOffset, 0);\n+    return false;\n   }\n \n \n@@ -878,6 +879,13 @@ void CExifParse::ProcessGpsInfo(\n   {\n     const unsigned char* DirEntry = DIR_ENTRY_ADDR(DirStart, de);\n \n+    // Fix from aosp 34a2564d3268a5ca1472c5076675782fbaf724d6\n+    if (DirEntry + 12 > OffsetBase + ExifLength)\n+    {\n+      ErrNonfatal(\"GPS info directory goes past end of exif\", 0, 0);\n+      return;\n+    }\n+\n     unsigned Tag        = Get16(DirEntry, m_MotorolaOrder);\n     unsigned Format     = Get16(DirEntry+2, m_MotorolaOrder);\n     unsigned Components = (unsigned)Get32(DirEntry+4, m_MotorolaOrder);\n@@ -896,7 +904,7 @@ void CExifParse::ProcessGpsInfo(\n     {\n       unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);\n       // If its bigger than 4 bytes, the dir entry contains an offset.\n-      if (OffsetVal+ByteCount > ExifLength)\n+      if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)\n       {\n         // Bogus pointer offset and / or bytecount value\n         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "251a25f0022bd889012ddd2cdc7f8935020327ba",
            "date": "2025-01-14T05:39:43Z",
            "author_login": "ksooo"
          },
          {
            "sha": "9a01d915c99b1f72c53a75e29183227232eacd2f",
            "date": "2025-01-11T22:33:42Z",
            "author_login": "ksooo"
          },
          {
            "sha": "e7e6ee63bf222e4a5896598d5520dd509dbaef1d",
            "date": "2025-01-12T21:20:10Z",
            "author_login": "CrystalP"
          },
          {
            "sha": "ebf7d88df7e5a81dd5e2381a9aa1c906159b0032",
            "date": "2025-01-12T18:17:11Z",
            "author_login": "the-black-eagle"
          },
          {
            "sha": "6bbdf848334bf4a9b4fae907afe4ef1eb1170f23",
            "date": "2025-01-10T18:58:01Z",
            "author_login": "78andyp"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.6,
    "cvss_vector": "CVSS:3.1/AV:P/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-787",
    "description": "A heap buffer overflow vulnerability in Kodi Home Theater Software up to 19.5 allows attackers to cause a denial of service due to an improper length of the value passed to the offset argument.",
    "attack_vector": "PHYSICAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-03T22:15:12.277",
    "last_modified": "2024-11-21T07:45:50.890",
    "fix_date": "2023-01-08T16:47:35Z"
  },
  "references": [
    {
      "url": "https://github.com/xbmc/xbmc/commit/8c2aafb6d4987833803e037c923aaf83f9ff41e1",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/issues/22377",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380/commits/00fec1dbdd1df827872c7b55ad93059636dfc076",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380/commits/7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/01/msg00009.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/xbmc/xbmc/commit/8c2aafb6d4987833803e037c923aaf83f9ff41e1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/issues/22377",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380/commits/00fec1dbdd1df827872c7b55ad93059636dfc076",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xbmc/xbmc/pull/22380/commits/7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/01/msg00009.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.983880",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xbmc",
    "owner": "xbmc",
    "created_at": "2011-01-03T21:18:51Z",
    "updated_at": "2025-01-14T13:27:36Z",
    "pushed_at": "2025-01-14T05:39:43Z",
    "size": 1620923,
    "stars": 18776,
    "forks": 6326,
    "open_issues": 908,
    "watchers": 18776,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "Dharma",
      "Eden",
      "Eden-ATV2-iOS5",
      "Frodo",
      "Frodo-ATV2-iOS6",
      "Gotham_ios8",
      "Gotham",
      "Helix",
      "Helix-Android-x86",
      "Isengard",
      "Isengard-iOS9",
      "Jarvis",
      "Krypton",
      "Leia",
      "Matrix",
      "Nexus",
      "Omega",
      "master"
    ],
    "languages": {
      "C++": 33826210,
      "C": 1066285,
      "JavaScript": 912836,
      "CMake": 834807,
      "Objective-C++": 540843,
      "Python": 442903,
      "Makefile": 212583,
      "HTML": 199007,
      "Objective-C": 172686,
      "Shell": 84916,
      "GLSL": 80408,
      "Batchfile": 70133,
      "Groovy": 63874,
      "M4": 59606,
      "CSS": 53189,
      "Perl": 48426,
      "Java": 41252,
      "HLSL": 38797,
      "C#": 34342,
      "NSIS": 13913,
      "SWIG": 9889
    },
    "commit_activity": {
      "total_commits_last_year": 2006,
      "avg_commits_per_week": 38.57692307692308,
      "days_active_last_year": 348
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:31:05.010054"
  }
}