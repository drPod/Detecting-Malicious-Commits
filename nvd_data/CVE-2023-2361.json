{
  "cve_id": "CVE-2023-2361",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "6970649f5d3790a1db9ef4324bece0d4cb95366a",
    "related_commits": [
      "6970649f5d3790a1db9ef4324bece0d4cb95366a",
      "6970649f5d3790a1db9ef4324bece0d4cb95366a"
    ],
    "patch_url": "https://github.com/pimcore/pimcore/commit/6970649f5d3790a1db9ef4324bece0d4cb95366a.patch",
    "fix_commit_details": {
      "sha": "6970649f5d3790a1db9ef4324bece0d4cb95366a",
      "commit_date": "2023-04-24T13:38:21Z",
      "author": {
        "login": "Corepex",
        "type": "User",
        "stats": {
          "total_commits": 123,
          "average_weekly_commits": 0.24453280318091453,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 30
        }
      },
      "commit_message": {
        "title": "[Security] Fix xss in link editable (#14986)",
        "length": 286,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 60,
        "additions": 36,
        "deletions": 24
      },
      "files": [
        {
          "filename": "doc/Development_Documentation/03_Documents/01_Editables/18_Link.md",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -6,7 +6,7 @@ The link editable is used for dynamic link creation in documents.\n \n ## Configuration\n \n-You can pass every valid attribute an `<a>`-tag can have ([w3.org - Link](https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element)), \n+You can pass nearly every valid attribute an `<a>`-tag can have ([w3.org - Link](https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element)), \n such as: `class`, `target`, `id`, `style`, `accesskey`, `name`, `title`, `data-*`, `aria-*` and additionally the following: \n \n | Name     | Type     | Description                                                             |\n@@ -17,6 +17,8 @@ such as: `class`, `target`, `id`, `style`, `accesskey`, `name`, `title`, `data-*\n | `noText` | boolean  | If you need only the `<a>` tag without text (or only with an textSuffix/TextPrefix)    |\n | `required` | boolean/string  | (default: false) set to true to make link and text required for publish, set to \"linkonly\" to make only the link required for publish    |\n \n+> For security reasons we created an [allow list](https://github.com/pimcore/pimcore/blob/9bf18aca55e5303661c68835c950412a428cf616/models/Document/Editable/Link.php#L115-L141) to filter harmfull html attributes. For example all `on*` attributes will be filtered out!\n+\n ## Methods\n \n | Name              | Return      | Description                          |"
        },
        {
          "filename": "doc/Development_Documentation/23_Installation_and_Upgrade/09_Upgrade_Notes/README.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n \n ## 10.5.21\n - [Assets] The Asset `Import from Server` feature is now only available for admins. It will be removed in Pimcore 11\n+- [Editable] Removed all `on*` attributes from the `$allowedAttributes` list due to security reasons. These attributes are not allowed anymore in the \"attributes\" field.\n \n ## 10.5.13\n - [Web2Print] Print document twig expressions are now executed in a sandbox with restrictive security policies (just like Sending mails and Dataobject Text Layouts introduced in 10.5.9)."
        },
        {
          "filename": "lib/Security/SecurityHelper.php",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -37,4 +37,13 @@ public static function convertHtmlSpecialCharsArrayKeys(array &$array, array $ke\n             }\n         }\n     }\n+\n+    public static function sanitizeHtmlAttributes(?string $text): ?string\n+    {\n+        if(is_string($text)) {\n+            return preg_replace('/[\\/\"\\'\\\\\\]/', '', $text);\n+        }\n+\n+        return null;\n+    }\n }"
        },
        {
          "filename": "models/Document/Editable/Link.php",
          "status": "modified",
          "additions": 23,
          "deletions": 23,
          "patch": "@@ -19,6 +19,7 @@\n use Pimcore\\Model;\n use Pimcore\\Model\\Asset;\n use Pimcore\\Model\\Document;\n+use Pimcore\\Security\\SecurityHelper;\n \n /**\n  * @method \\Pimcore\\Model\\Document\\Editable\\Dao getDao()\n@@ -136,19 +137,7 @@ public function frontend()\n                 'ping',\n                 'type',\n                 'referrerpolicy',\n-                'xml:lang',\n-                'onblur',\n-                'onclick',\n-                'ondblclick',\n-                'onfocus',\n-                'onmousedown',\n-                'onmousemove',\n-                'onmouseout',\n-                'onmouseover',\n-                'onmouseup',\n-                'onkeydown',\n-                'onkeypress',\n-                'onkeyup',\n+                'xml:lang'\n             ];\n             $defaultAttributes = [];\n \n@@ -166,9 +155,9 @@ public function frontend()\n                         strpos($key, 'aria-') === 0 ||\n                         in_array($key, $allowedAttributes))) {\n                     if (!empty($this->data[$key]) && !empty($this->config[$key])) {\n-                        $attribs[] = $key.'=\"'. $this->data[$key] .' '. $this->config[$key] .'\"';\n+                        $attribs[] = $key.'=\"'. SecurityHelper::sanitizeHtmlAttributes($this->data[$key]) .' '. SecurityHelper::sanitizeHtmlAttributes($this->config[$key]) .'\"';\n                     } elseif (!empty($value)) {\n-                        $attribs[] = $key.'=\"'.$value.'\"';\n+                        $attribs[] = $key.'=\"'.SecurityHelper::sanitizeHtmlAttributes($value).'\"';\n                     }\n                 }\n             }\n@@ -242,8 +231,7 @@ public function getHref()\n         }\n \n         if (strlen($this->data['anchor'] ?? '') > 0) {\n-            $anchor = $this->getAnchor();\n-            $anchor = str_replace('\"', urlencode('\"'), $anchor);\n+            $anchor = str_replace('\"', urlencode('\"'), $this->getAnchor());\n             $url .= '#' . str_replace('#', '', $anchor);\n         }\n \n@@ -299,6 +287,10 @@ private function updatePathFromInternal($realPath = false, $editmode = false)\n             }\n         }\n \n+        if($editmode) {\n+            unset($this->data['attributes']);\n+        }\n+\n         // sanitize attributes\n         if (isset($this->data['attributes'])) {\n             $this->data['attributes'] = htmlspecialchars($this->data['attributes'], HTML_ENTITIES);\n@@ -340,15 +332,15 @@ public function getTarget()\n      */\n     public function getParameters()\n     {\n-        return $this->data['parameters'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['parameters']) ?? '';\n     }\n \n     /**\n      * @return string\n      */\n     public function getAnchor()\n     {\n-        return $this->data['anchor'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['anchor']) ?? '';\n     }\n \n     /**\n@@ -364,31 +356,31 @@ public function getTitle()\n      */\n     public function getRel()\n     {\n-        return $this->data['rel'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['rel']) ?? '';\n     }\n \n     /**\n      * @return string\n      */\n     public function getTabindex()\n     {\n-        return $this->data['tabindex'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['tabindex']) ?? '';\n     }\n \n     /**\n      * @return string\n      */\n     public function getAccesskey()\n     {\n-        return $this->data['accesskey'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['accesskey']) ?? '';\n     }\n \n     /**\n      * @return mixed\n      */\n     public function getClass()\n     {\n-        return $this->data['class'] ?? '';\n+        return SecurityHelper::sanitizeHtmlAttributes($this->data['class']) ?? '';\n     }\n \n     /**\n@@ -409,6 +401,14 @@ public function setDataFromResource($data)\n             $this->data = [];\n         }\n \n+        //sanitize fields\n+        $fieldsToExclude = ['path'];\n+        foreach($this->data as $key => $value) {\n+            if(!in_array($key, $fieldsToExclude)) {\n+                $this->data[$key] = SecurityHelper::sanitizeHtmlAttributes($value);\n+            }\n+        }\n+\n         return $this;\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a3c7544d81bc772dc53f7ea0e99c6eac37c59114",
            "date": "2025-01-14T13:54:55Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "081e73f14983613ed43e6ea9e40450063392b289",
            "date": "2025-01-14T13:53:00Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "bf1081a2c9a7de74ca965aa802ea07ac4e022b28",
            "date": "2025-01-14T13:52:39Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "7a232e673e963325610264dc760d8d0dbdd7a0d1",
            "date": "2025-01-14T13:52:17Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "cf380cd040bdbb134e62dd1fa9cb3954def8a595",
            "date": "2025-01-14T13:50:40Z",
            "author_login": "herbertroth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository pimcore/pimcore prior to 10.5.21.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-28T08:15:09.340",
    "last_modified": "2024-11-21T07:58:27.483",
    "fix_date": "2023-04-24T13:38:21Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/6970649f5d3790a1db9ef4324bece0d4cb95366a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/24d91b83-c3df-48f5-a713-9def733f2de7",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/6970649f5d3790a1db9ef4324bece0d4cb95366a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/24d91b83-c3df-48f5-a713-9def733f2de7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.849211",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-14T09:15:55Z",
    "pushed_at": "2025-01-13T14:41:25Z",
    "size": 524212,
    "stars": 3455,
    "forks": 1448,
    "open_issues": 480,
    "watchers": 3455,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "11.x",
      "11.5"
    ],
    "languages": {
      "PHP": 6722485,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 619,
      "avg_commits_per_week": 11.903846153846153,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:01:17.566039"
  }
}