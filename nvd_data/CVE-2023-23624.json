{
  "cve_id": "CVE-2023-23624",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "f55e0fe7910149c431861c18ce407d1be0d6091a",
    "related_commits": [
      "f55e0fe7910149c431861c18ce407d1be0d6091a",
      "f55e0fe7910149c431861c18ce407d1be0d6091a"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/f55e0fe7910149c431861c18ce407d1be0d6091a.patch",
    "fix_commit_details": {
      "sha": "f55e0fe7910149c431861c18ce407d1be0d6091a",
      "commit_date": "2023-01-25T16:56:22Z",
      "author": {
        "login": "nbianca",
        "type": "User",
        "stats": {
          "total_commits": 819,
          "average_weekly_commits": 1.1818181818181819,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 255
        }
      },
      "commit_message": {
        "title": "SECURITY: Update to exclude tag topic filter (#20006)",
        "length": 205,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 27,
        "additions": 19,
        "deletions": 8
      },
      "files": [
        {
          "filename": "lib/topic_query.rb",
          "status": "modified",
          "additions": 11,
          "deletions": 8,
          "patch": "@@ -735,14 +735,17 @@ def default_results(options = {})\n         result = result.where.not(id: TopicTag.distinct.pluck(:topic_id))\n       end\n \n-      result = result.where(<<~SQL, name: @options[:exclude_tag]) if @options[:exclude_tag].present?\n-        topics.id NOT IN (\n-          SELECT topic_tags.topic_id\n-          FROM topic_tags\n-          INNER JOIN tags ON tags.id = topic_tags.tag_id\n-          WHERE tags.name = :name\n-        )\n-        SQL\n+      if @options[:exclude_tag].present? &&\n+           !DiscourseTagging.hidden_tag_names(@guardian).include?(@options[:exclude_tag])\n+        result = result.where(<<~SQL, name: @options[:exclude_tag])\n+          topics.id NOT IN (\n+            SELECT topic_tags.topic_id\n+            FROM topic_tags\n+            INNER JOIN tags ON tags.id = topic_tags.tag_id\n+            WHERE tags.name = :name\n+          )\n+          SQL\n+      end\n     end\n \n     result = apply_ordering(result, options)"
        },
        {
          "filename": "spec/lib/topic_query_spec.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -409,13 +409,21 @@\n       fab!(:tagged_topic3) { Fabricate(:topic, tags: [tag, other_tag]) }\n       fab!(:tagged_topic4) { Fabricate(:topic, tags: [uppercase_tag]) }\n       fab!(:no_tags_topic) { Fabricate(:topic) }\n+      fab!(:tag_group) do\n+        Fabricate(:tag_group, permissions: { \"staff\" => 1 }, tag_names: [other_tag.name])\n+      end\n       let(:synonym) { Fabricate(:tag, target_tag: tag, name: \"synonym\") }\n \n       it \"excludes a tag if desired\" do\n         topics = TopicQuery.new(moderator, exclude_tag: tag.name).list_latest.topics\n         expect(topics.any? { |t| t.tags.include?(tag) }).to eq(false)\n       end\n \n+      it \"does not exclude a tagged topic without permission\" do\n+        topics = TopicQuery.new(user, exclude_tag: other_tag.name).list_latest.topics\n+        expect(topics.map(&:id)).to include(tagged_topic2.id)\n+      end\n+\n       it \"returns topics with the tag when filtered to it\" do\n         expect(TopicQuery.new(moderator, tags: tag.name).list_latest.topics).to contain_exactly(\n           tagged_topic1,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bad869dd81a390b87d1f2297ca6a032dabda5faa",
            "date": "2025-01-14T20:18:51Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "0fcb832244234f985d0b2628ddc63a382d1700c9",
            "date": "2025-01-14T20:17:13Z",
            "author_login": "davidtaylorhq"
          },
          {
            "sha": "912b002dcc5bc12698911b70e26912f3c6af990d",
            "date": "2025-01-14T20:00:12Z",
            "author_login": "awesomerobot"
          },
          {
            "sha": "c25e53db7ecc0d02d72e4e9b4a51419132b762a8",
            "date": "2025-01-14T19:23:08Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "1b19bf690a8e0a8cb1de3326078d863114516907",
            "date": "2025-01-14T19:14:55Z",
            "author_login": "markvanlan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches, someone can use the `exclude_tag param` to filter out topics and deduce which ones were using a specific hidden tag. This affects any Discourse site using hidden tags in public categories. This issue is patched in version 3.0.1 on the `stable` branch and version 3.1.0.beta2 on the `beta` and `tests-passed` branches. As a workaround, secure any categories that are using hidden tags, change any existing hidden tags to not include private data, or remove any hidden tags currently in use.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-01-28T00:15:09.470",
    "last_modified": "2024-11-21T07:46:33.553",
    "fix_date": "2023-01-25T16:56:22Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/f55e0fe7910149c431861c18ce407d1be0d6091a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20006",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-qgj5-g5vf-fm7q",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/f55e0fe7910149c431861c18ce407d1be0d6091a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20006",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-qgj5-g5vf-fm7q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.949525",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}