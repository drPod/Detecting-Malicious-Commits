{
  "cve_id": "CVE-2023-23913",
  "github_data": {
    "repository": "rails/rails",
    "fix_commit": "5037a13614d71727af8a175063bcf6ba1a74bdbd",
    "related_commits": [
      "5037a13614d71727af8a175063bcf6ba1a74bdbd"
    ],
    "patch_url": "https://github.com/rails/rails/commit/5037a13614d71727af8a175063bcf6ba1a74bdbd.patch",
    "fix_commit_details": {
      "sha": "5037a13614d71727af8a175063bcf6ba1a74bdbd",
      "commit_date": "2023-01-16T14:43:54Z",
      "author": {
        "login": "fresh-eggs",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ignore certain data-* attributes in rails-ujs when element is contenteditable",
        "length": 434,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 93,
        "additions": 91,
        "deletions": 2
      },
      "files": [
        {
          "filename": "actionview/app/assets/javascripts/rails-ujs/features/disable.coffee",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n #= require_tree ../utils\n \n-{ matches, getData, setData, stopEverything, formElements } = Rails\n+{ matches, getData, setData, stopEverything, formElements, isContentEditable } = Rails\n \n Rails.handleDisabledElement = (e) ->\n   element = this\n@@ -14,6 +14,9 @@ Rails.enableElement = (e) ->\n   else\n     element = e\n \n+  if isContentEditable(element)\n+    return\n+\n   if matches(element, Rails.linkDisableSelector)\n     enableLinkElement(element)\n   else if matches(element, Rails.buttonDisableSelector) or matches(element, Rails.formEnableSelector)\n@@ -24,6 +27,10 @@ Rails.enableElement = (e) ->\n # Unified function to disable an element (link, button and form)\n Rails.disableElement = (e) ->\n   element = if e instanceof Event then e.target else e\n+\n+  if isContentEditable(element)\n+    return\n+\n   if matches(element, Rails.linkDisableSelector)\n     disableLinkElement(element)\n   else if matches(element, Rails.buttonDisableSelector) or matches(element, Rails.formDisableSelector)"
        },
        {
          "filename": "actionview/app/assets/javascripts/rails-ujs/features/method.coffee",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n #= require_tree ../utils\n \n { stopEverything } = Rails\n+{ isContentEditable } = Rails\n \n # Handles \"data-method\" on links such as:\n # <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n@@ -9,6 +10,9 @@ Rails.handleMethod = (e) ->\n   method = link.getAttribute('data-method')\n   return unless method\n \n+  if isContentEditable(this)\n+    return\n+\n   href = Rails.href(link)\n   csrfToken = Rails.csrfToken()\n   csrfParam = Rails.csrfParam()"
        },
        {
          "filename": "actionview/app/assets/javascripts/rails-ujs/features/remote.coffee",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -4,7 +4,8 @@\n   matches, getData, setData\n   fire, stopEverything\n   ajax, isCrossDomain\n-  serializeElement\n+  serializeElement,\n+  isContentEditable\n } = Rails\n \n # Checks \"data-remote\" if true to handle the request through a XHR request.\n@@ -21,6 +22,10 @@ Rails.handleRemote = (e) ->\n     fire(element, 'ajax:stopped')\n     return false\n \n+  if isContentEditable(element)\n+    fire(element, 'ajax:stopped')\n+    return false\n+\n   withCredentials = element.getAttribute('data-with-credentials')\n   dataType = element.getAttribute('data-type') or 'script'\n "
        },
        {
          "filename": "actionview/app/assets/javascripts/rails-ujs/utils/dom.coffee",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -29,6 +29,18 @@ Rails.setData = (element, key, value) ->\n   element[expando] ?= {}\n   element[expando][key] = value\n \n+Rails.isContentEditable = (element) ->\n+  isEditable = false\n+  loop\n+    if(element.isContentEditable)\n+      isEditable = true\n+      break\n+\n+    element = element.parentElement\n+    break unless(element)\n+\n+  return isEditable\n+\n # a wrapper for document.querySelectorAll\n # returns an Array\n Rails.$ = (selector) ->"
        },
        {
          "filename": "actionview/test/ujs/public/test/data-disable-with.js",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -37,6 +37,10 @@ module('data-disable-with', {\n       'data-url': '/echo',\n       'data-disable-with': 'clicking...'\n     }))\n+\n+    $('#qunit-fixture').append($('<div />', {\n+      id: 'edit-div', 'contenteditable': 'true'\n+    }))\n   },\n   teardown: function() {\n     $(document).unbind('iframe:loaded')\n@@ -432,3 +436,21 @@ asyncTest('button[data-remote][data-disable-with] re-enables when `ajax:error` e\n     start()\n   }, 30)\n })\n+\n+asyncTest('form button with \"data-disable-with\" attribute and contenteditable is not modified', 6, function() {\n+  var form = $('form[data-remote]'), button = $('<button data-disable-with=\"submitting ...\" name=\"submit2\">Submit</button>')\n+\n+  var contenteditable_div = $('#qunit-fixture').find('div')\n+  form.append(button)\n+  contenteditable_div.append(form)\n+\n+  App.checkEnabledState(button, 'Submit')\n+\n+  setTimeout(function() {\n+    App.checkEnabledState(button, 'Submit')\n+    start()\n+  }, 13)\n+  form.triggerNative('submit')\n+\n+  App.checkEnabledState(button, 'Submit')\n+})"
        },
        {
          "filename": "actionview/test/ujs/public/test/data-method.js",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -5,6 +5,10 @@ module('data-method', {\n     $('#qunit-fixture').append($('<a />', {\n       href: '/echo', 'data-method': 'delete', text: 'destroy!'\n     }))\n+\n+    $('#qunit-fixture').append($('<div />', {\n+      id: 'edit-div', 'contenteditable': 'true'\n+    }))\n   },\n   teardown: function() {\n     $(document).unbind('iframe:loaded')\n@@ -82,4 +86,19 @@ asyncTest('link with \"data-method\" and cross origin', 1, function() {\n   notEqual(data.authenticity_token, 'cf50faa3fe97702ca1ae')\n })\n \n+asyncTest('do not interact with contenteditable elements', 6, function() {\n+  var contenteditable_div = $('#qunit-fixture').find('div')\n+  contenteditable_div.append('<a href=\"http://www.shouldnevershowindocument.com\" data-method=\"delete\">')\n+\n+  var link = $('#edit-div').find('a')\n+  link.triggerNative('click')\n+\n+  start()\n+\n+  collection = document.getElementsByTagName('form')\n+  for (const item of collection) {\n+    notEqual(item.action, \"http://www.shouldnevershowindocument.com/\")\n+  }\n+})\n+\n })()"
        },
        {
          "filename": "actionview/test/ujs/public/test/data-remote.js",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -41,6 +41,9 @@ module('data-remote', {\n       }))\n       .find('form').append($('<input type=\"text\" name=\"user_name\" value=\"john\">'))\n \n+    $('#qunit-fixture').append($('<div />', {\n+      id: 'edit-div', 'contenteditable': 'true'\n+    }))\n   }\n })\n \n@@ -508,4 +511,21 @@ asyncTest('inputs inside disabled fieldset are not submitted on remote forms', 3\n     .triggerNative('submit')\n })\n \n+asyncTest('clicking on a link with contenteditable attribute does not fire ajaxyness', 0, function() {\n+  var contenteditable_div = $('#qunit-fixture').find('div')\n+  var link = $('a[data-remote]')\n+  contenteditable_div.append(link)\n+\n+  link\n+    .bindNative('ajax:beforeSend', function() {\n+      ok(false, 'ajax should not be triggered')\n+    })\n+    .bindNative('click', function(e) {\n+      e.preventDefault()\n+    })\n+    .triggerNative('click')\n+\n+  setTimeout(function() { start() }, 20)\n+})\n+\n })()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20a0e51589536f26969ed799bdb866f31e7c746e",
            "date": "2025-01-14T19:10:01Z",
            "author_login": "gmcgibbon"
          },
          {
            "sha": "116a5e4309a189f9111c85334c418856b81cd91a",
            "date": "2025-01-14T17:51:07Z",
            "author_login": "rafaelfranca"
          },
          {
            "sha": "9b7bb7bdea55a6a30bc833e031101a672d4a2593",
            "date": "2025-01-14T17:45:10Z",
            "author_login": "fatkodima"
          },
          {
            "sha": "72d1704546e7d135950f24edb6c29bb2253aa6f8",
            "date": "2025-01-14T17:34:01Z",
            "author_login": "skipkayhil"
          },
          {
            "sha": "be42d45578d9f002cd3e6cd60ba0466392ae5d4a",
            "date": "2025-01-13T23:18:15Z",
            "author_login": "skipkayhil"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "There is a potential DOM based cross-site scripting issue in rails-ujs which leverages the Clipboard API to target HTML elements that are assigned the contenteditable attribute. This has the potential to occur when pasting malicious HTML content from the clipboard that includes a data-method, data-remote or data-disable-with attribute.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2025-01-09T01:15:07.257",
    "last_modified": "2025-01-09T18:15:24.993",
    "fix_date": "2023-01-16T14:43:54Z"
  },
  "references": [
    {
      "url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1033263",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://discuss.rubyonrails.org/t/cve-2023-23913-dom-based-cross-site-scripting-in-rails-ujs-for-contenteditable-html-elements/82468",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://github.com/rails/rails/commit/5037a13614d71727af8a175063bcf6ba1a74bdbd",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240605-0007/",
      "source": "support@hackerone.com",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5389",
      "source": "support@hackerone.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:58.233152",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rails",
    "owner": "rails",
    "created_at": "2008-04-11T02:19:47Z",
    "updated_at": "2025-01-14T12:51:57Z",
    "pushed_at": "2025-01-14T12:53:28Z",
    "size": 261740,
    "stars": 56313,
    "forks": 21746,
    "open_issues": 1251,
    "watchers": 56313,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0-5-stable",
      "0-6-stable",
      "0-7-stable",
      "0-8-stable",
      "1-2-stable",
      "2-0-stable",
      "2-1-stable",
      "2-2-stable",
      "2-3-stable",
      "3-0-stable",
      "3-1-stable",
      "3-2-stable",
      "4-0-stable",
      "4-1-stable",
      "4-2-stable",
      "5-0-stable",
      "5-1-stable",
      "5-2-stable",
      "6-0-stable",
      "6-1-stable",
      "7-0-stable",
      "7-1-stable",
      "7-2-stable"
    ],
    "languages": {
      "Ruby": 17127894,
      "JavaScript": 228210,
      "HTML": 196993,
      "SCSS": 50596,
      "CSS": 47127,
      "Dockerfile": 2019,
      "Shell": 668
    },
    "commit_activity": {
      "total_commits_last_year": 3989,
      "avg_commits_per_week": 76.71153846153847,
      "days_active_last_year": 351
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:56:52.447177"
  }
}