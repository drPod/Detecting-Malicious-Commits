{
  "cve_id": "CVE-2023-23934",
  "github_data": {
    "repository": "pallets/werkzeug",
    "fix_commit": "cf275f42acad1b5950c50ffe8ef58fe62cdce028",
    "related_commits": [
      "cf275f42acad1b5950c50ffe8ef58fe62cdce028",
      "cf275f42acad1b5950c50ffe8ef58fe62cdce028"
    ],
    "patch_url": "https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028.patch",
    "fix_commit_details": {
      "sha": "cf275f42acad1b5950c50ffe8ef58fe62cdce028",
      "commit_date": "2023-02-14T16:30:17Z",
      "author": {
        "login": "davidism",
        "type": "User",
        "stats": {
          "total_commits": 708,
          "average_weekly_commits": 0.7654054054054054,
          "total_additions": 96461,
          "total_deletions": 119550,
          "weeks_active": 136
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-px8h-6qxv-m22q",
        "length": 88,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 23,
        "additions": 14,
        "deletions": 9
      },
      "files": [
        {
          "filename": "CHANGES.rst",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -19,6 +19,8 @@ Unreleased\n     :issue:`2529`\n -   ``LimitedStream.read`` works correctly when wrapping a stream that may not return\n     the requested size in one ``read`` call. :issue:`2558`\n+-   A cookie header that starts with ``=`` is treated as an empty key and discarded,\n+    rather than stripping the leading ``==``.\n \n \n Version 2.2.2"
        },
        {
          "filename": "src/werkzeug/_internal.py",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -34,7 +34,7 @@\n _legal_cookie_chars_re = rb\"[\\w\\d!#%&\\'~_`><@,:/\\$\\*\\+\\-\\.\\^\\|\\)\\(\\?\\}\\{\\=]\"\n _cookie_re = re.compile(\n     rb\"\"\"\n-    (?P<key>[^=;]+)\n+    (?P<key>[^=;]*)\n     (?:\\s*=\\s*\n         (?P<val>\n             \"(?:[^\\\\\"]|\\\\.)*\" |\n@@ -382,16 +382,21 @@ def _cookie_parse_impl(b: bytes) -> t.Iterator[t.Tuple[bytes, bytes]]:\n     \"\"\"Lowlevel cookie parsing facility that operates on bytes.\"\"\"\n     i = 0\n     n = len(b)\n+    b += b\";\"\n \n     while i < n:\n-        match = _cookie_re.search(b + b\";\", i)\n+        match = _cookie_re.match(b, i)\n+\n         if not match:\n             break\n \n-        key = match.group(\"key\").strip()\n-        value = match.group(\"val\") or b\"\"\n         i = match.end(0)\n+        key = match.group(\"key\").strip()\n+\n+        if not key:\n+            continue\n \n+        value = match.group(\"val\") or b\"\"\n         yield key, _cookie_unquote(value)\n \n "
        },
        {
          "filename": "src/werkzeug/sansio/http.py",
          "status": "modified",
          "additions": 0,
          "deletions": 4,
          "patch": "@@ -126,10 +126,6 @@ def parse_cookie(\n     def _parse_pairs() -> t.Iterator[t.Tuple[str, str]]:\n         for key, val in _cookie_parse_impl(cookie):  # type: ignore\n             key_str = _to_str(key, charset, errors, allow_none_charset=True)\n-\n-            if not key_str:\n-                continue\n-\n             val_str = _to_str(val, charset, errors, allow_none_charset=True)\n             yield key_str, val_str\n "
        },
        {
          "filename": "tests/test_http.py",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -412,7 +412,8 @@ def test_is_resource_modified_for_range_requests(self):\n     def test_parse_cookie(self):\n         cookies = http.parse_cookie(\n             \"dismiss-top=6; CP=null*; PHPSESSID=0a539d42abc001cdc762809248d4beed;\"\n-            'a=42; b=\"\\\\\";\"; ; fo234{=bar;blub=Blah; \"__Secure-c\"=d'\n+            'a=42; b=\"\\\\\";\"; ; fo234{=bar;blub=Blah; \"__Secure-c\"=d;'\n+            \"==__Host-eq=bad;__Host-eq=good;\"\n         )\n         assert cookies.to_dict() == {\n             \"CP\": \"null*\",\n@@ -423,6 +424,7 @@ def test_parse_cookie(self):\n             \"fo234{\": \"bar\",\n             \"blub\": \"Blah\",\n             '\"__Secure-c\"': \"d\",\n+            \"__Host-eq\": \"good\",\n         }\n \n     def test_dump_cookie(self):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7868bef5d978093a8baa0784464ebe5d775ae92a",
            "date": "2024-11-08T15:53:55Z",
            "author_login": "davidism"
          },
          {
            "sha": "6b56ed571b338e68fc378e6348266ee99de26646",
            "date": "2024-11-08T15:52:32Z",
            "author_login": "davidism"
          },
          {
            "sha": "6389612fd1ee1bd93579eed5026e8fd471d04abd",
            "date": "2024-11-08T15:46:09Z",
            "author_login": "davidism"
          },
          {
            "sha": "ba15683fb30b51187fa7efa9d212a030ad6ddb94",
            "date": "2024-11-07T16:34:12Z",
            "author_login": "davidism"
          },
          {
            "sha": "d99f72d12698d86e7ebcb894f3c6c729e2b6c067",
            "date": "2024-11-07T16:01:56Z",
            "author_login": "davidism"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.6,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-20",
    "description": "Werkzeug is a comprehensive WSGI web application library. Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key. The issue is fixed in Werkzeug 2.2.3.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-02-14T20:15:17.370",
    "last_modified": "2024-11-21T07:47:07.947",
    "fix_date": "2023-02-14T16:30:17Z"
  },
  "references": [
    {
      "url": "https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pallets/werkzeug/releases/tag/2.2.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230818-0003/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5470",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pallets/werkzeug/commit/cf275f42acad1b5950c50ffe8ef58fe62cdce028",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pallets/werkzeug/releases/tag/2.2.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230818-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.debian.org/security/2023/dsa-5470",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:04.057810",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "werkzeug",
    "owner": "pallets",
    "created_at": "2010-10-18T11:42:40Z",
    "updated_at": "2025-01-14T07:44:16Z",
    "pushed_at": "2025-01-13T18:59:09Z",
    "size": 15910,
    "stars": 6687,
    "forks": 1734,
    "open_issues": 13,
    "watchers": 6687,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable"
    ],
    "languages": {
      "Python": 1061077,
      "JavaScript": 10068,
      "CSS": 6078,
      "Shell": 165,
      "HTML": 124
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:31:32.606928"
  }
}