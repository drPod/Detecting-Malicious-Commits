{
  "cve_id": "CVE-2023-24808",
  "github_data": {
    "repository": "michaelrsweet/pdfio",
    "fix_commit": "4f10021e7ee527c1aa24853e2947e38e154d9ccb",
    "related_commits": [
      "4f10021e7ee527c1aa24853e2947e38e154d9ccb",
      "4f10021e7ee527c1aa24853e2947e38e154d9ccb"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "4f10021e7ee527c1aa24853e2947e38e154d9ccb",
      "commit_date": "2023-02-04T01:39:04Z",
      "author": {
        "login": "michaelrsweet",
        "type": "User",
        "stats": {
          "total_commits": 457,
          "average_weekly_commits": 2.285,
          "total_additions": 70104,
          "total_deletions": 16263,
          "weeks_active": 62
        }
      },
      "commit_message": {
        "title": "Fix denial-of-service attack when reading corrupt PDF files.",
        "length": 60,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 43,
        "deletions": 18
      },
      "files": [
        {
          "filename": "CHANGES.md",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -2,9 +2,10 @@ Changes in PDFio\n ================\n \n \n-v1.1.0 (Month DD, YYYY)\n------------------------\n+v1.1.0 (February 3, 2023)\n+-------------------------\n \n+- CVE-2023-nnnn: Fixed a potential denial-of-service with corrupt PDF files.\n - Added `pdfioFileCreateTemporary` function (Issue #29)\n - Added `pdfioDictIterateKeys` function (Issue #31)\n - Added `pdfioContentPathEnd` function."
        },
        {
          "filename": "Makefile",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n #\n # Makefile for PDFio.\n #\n-# Copyright \u00a9\u00a02021-2022 by Michael R Sweet.\n+# Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n #\n # Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n # information.\n@@ -29,7 +29,7 @@ DSONAME\t\t=\n LDFLAGS\t\t=\n LIBS\t\t=\t-lm -lz\n RANLIB\t\t=\tranlib\n-VERSION\t\t=\t1.1\n+VERSION\t\t=\t1.1.0\n prefix\t\t=\t/usr/local\n \n "
        },
        {
          "filename": "NOTICE",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n PDFio - PDF Read/Write Library\n \n-Copyright \u00a9 2021-2022 by Michael R Sweet.\n+Copyright \u00a9 2021-2023 by Michael R Sweet.\n \n (Optional) Exceptions to the Apache 2.0 License:\n ================================================"
        },
        {
          "filename": "pdfio-common.c",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n //\n // Common support functions for pdfio.\n //\n-// Copyright \u00a9\u00a02021 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information.\n@@ -38,6 +38,8 @@ _pdfioFileConsume(pdfio_file_t *pdf,\t// I - PDF file\n   else if (_pdfioFileSeek(pdf, (off_t)bytes, SEEK_CUR) < 0)\n     return (false);\n \n+  PDFIO_DEBUG(\"_pdfioFileConsume: pos=%ld\\n\", (long)(pdf->bufpos + pdf->bufptr - pdf->buffer));\n+\n   return (true);\n }\n \n@@ -525,7 +527,7 @@ read_buffer(pdfio_file_t *pdf,\t\t// I - PDF file\n   return (rbytes);\n }\n \n-  \n+\n //\n // 'write_buffer()' - Write a buffer to a PDF file.\n //"
        },
        {
          "filename": "pdfio-dict.c",
          "status": "modified",
          "additions": 11,
          "deletions": 4,
          "patch": "@@ -1,7 +1,7 @@\n //\n // PDF dictionary functions for PDFio.\n //\n-// Copyright \u00a9\u00a02021-2022 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information.\n@@ -541,8 +541,15 @@ _pdfioDictRead(pdfio_file_t   *pdf,\t// I - PDF file\n       _pdfioFileError(pdf, \"Invalid dictionary contents.\");\n       break;\n     }\n+    else if (_pdfioDictGetValue(dict, key + 1))\n+    {\n+      _pdfioFileError(pdf, \"Duplicate dictionary key '%s'.\", key + 1);\n+      return (NULL);\n+    }\n \n     // Then get the next value...\n+    PDFIO_DEBUG(\"_pdfioDictRead: Reading value for '%s'.\\n\", key + 1);\n+\n     if (!_pdfioValueRead(pdf, obj, tb, &value, depth))\n     {\n       _pdfioFileError(pdf, \"Missing value for dictionary key.\");\n@@ -932,9 +939,9 @@ _pdfioDictSetValue(\n \n #ifdef DEBUG\n   PDFIO_DEBUG(\"_pdfioDictSetValue(%p): %lu pairs\\n\", (void *)dict, (unsigned long)dict->num_pairs);\n-  PDFIO_DEBUG(\"_pdfioDictSetValue(%p): \", (void *)dict);\n-  PDFIO_DEBUG_DICT(dict);\n-  PDFIO_DEBUG(\"\\n\");\n+//  PDFIO_DEBUG(\"_pdfioDictSetValue(%p): \", (void *)dict);\n+//  PDFIO_DEBUG_DICT(dict);\n+//  PDFIO_DEBUG(\"\\n\");\n #endif // DEBUG\n \n   return (true);"
        },
        {
          "filename": "pdfio-file.c",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n //\n // PDF file functions for PDFio.\n //\n-// Copyright \u00a9\u00a02021-2022 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information.\n@@ -1984,6 +1984,8 @@ load_xref(\n \treturn (false);\n       }\n \n+      PDFIO_DEBUG(\"load_xref: Got trailer dict.\\n\");\n+\n       _pdfioTokenFlush(&tb);\n \n       if (!pdf->trailer_dict)"
        },
        {
          "filename": "pdfio-object.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n //\n // PDF object functions for PDFio.\n //\n-// Copyright \u00a9\u00a02021-2022 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information."
        },
        {
          "filename": "pdfio-token.c",
          "status": "modified",
          "additions": 17,
          "deletions": 4,
          "patch": "@@ -1,7 +1,7 @@\n //\n // PDF token parsing functions for PDFio.\n //\n-// Copyright \u00a9\u00a02021 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information.\n@@ -129,9 +129,20 @@ _pdfioTokenGet(_pdfio_token_t *tb,\t// I - Token buffer/stack\n   if (tb->num_tokens > 0)\n   {\n     // Yes, return it...\n+    size_t len;\t\t\t\t// Length of token\n+\n     tb->num_tokens --;\n-    strncpy(buffer, tb->tokens[tb->num_tokens], bufsize - 1);\n-    buffer[bufsize - 1] = '\\0';\n+\n+    if ((len = strlen(tb->tokens[tb->num_tokens])) > (bufsize - 1))\n+    {\n+      // Value too large...\n+      PDFIO_DEBUG(\"_pdfioTokenGet(tb=%p, buffer=%p, bufsize=%u): Token '%s' from stack too large.\\n\", tb, buffer, (unsigned)bufsize, tb->tokens[tb->num_tokens]);\n+      *buffer = '\\0';\n+      return (false);\n+    }\n+\n+    memcpy(buffer, tb->tokens[tb->num_tokens], len);\n+    buffer[len] = '\\0';\n \n     PDFIO_DEBUG(\"_pdfioTokenGet(tb=%p, buffer=%p, bufsize=%u): Popping '%s' from stack.\\n\", tb, buffer, (unsigned)bufsize, buffer);\n \n@@ -536,7 +547,7 @@ _pdfioTokenRead(_pdfio_token_t *tb,\t// I - Token buffer/stack\n \n   *bufptr = '\\0';\n \n-  PDFIO_DEBUG(\"_pdfioTokenRead: Read '%s'.\\n\", buffer);\n+//  PDFIO_DEBUG(\"_pdfioTokenRead: Read '%s'.\\n\", buffer);\n \n   return (bufptr > buffer);\n }\n@@ -573,6 +584,7 @@ get_char(_pdfio_token_t *tb)\t\t// I - Token buffer\n     tb->bufptr = tb->buffer;\n     tb->bufend = tb->buffer + bytes;\n \n+#if 0\n #ifdef DEBUG\n     unsigned char *ptr;\t\t\t// Pointer into buffer\n \n@@ -586,6 +598,7 @@ get_char(_pdfio_token_t *tb)\t\t// I - Token buffer\n     }\n     PDFIO_DEBUG(\"'\\n\");\n #endif // DEBUG\n+#endif // 0\n   }\n \n   // Return the next character..."
        },
        {
          "filename": "pdfio-value.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n //\n // PDF value functions for PDFio.\n //\n-// Copyright \u00a9\u00a02021 by Michael R Sweet.\n+// Copyright \u00a9\u00a02021-2023 by Michael R Sweet.\n //\n // Licensed under Apache License v2.0.  See the file \"LICENSE\" for more\n // information."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "48fe8d1bc9d56189001600065cad84cc05851886",
            "date": "2025-01-24T20:31:31Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "a4026bfe00d9b2109eda79f74f63e8a9b76171fa",
            "date": "2025-01-24T20:30:59Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "1e945cb7501fc48ce120e391c9e97160b596ccab",
            "date": "2025-01-24T19:44:44Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "4cb4ceaadd2ba97b6cce800790e1ca771bff93b0",
            "date": "2025-01-24T19:42:41Z",
            "author_login": "michaelrsweet"
          },
          {
            "sha": "cca7383c73142e936aaf42d8acb797562483f760",
            "date": "2025-01-24T15:43:41Z",
            "author_login": "michaelrsweet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-835",
    "description": " PDFio is a C library for reading and writing PDF files. In versions prior to 1.1.0 a denial of service (DOS) vulnerability exists in the pdfio parser. Crafted pdf files can cause the program to run at 100% utilization and never terminate. The pdf which causes this crash found in testing is about 28kb in size and was discovered via fuzzing. Anyone who uses this library either as a standalone binary or as a library can be DOSed when attempting to parse this type of file. Web servers or other automated processes which rely on this code to turn pdf submissions into plaintext can be DOSed when an attacker uploads the pdf. Please see the linked GHSA for an example pdf. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-07T01:15:09.567",
    "last_modified": "2024-11-21T07:48:26.167",
    "fix_date": "2023-02-04T01:39:04Z"
  },
  "references": [
    {
      "url": "https://github.com/michaelrsweet/pdfio/commit/4f10021e7ee527c1aa24853e2947e38e154d9ccb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/pdfio/security/advisories/GHSA-cjc4-x96x-fvgf",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/pdfio/commit/4f10021e7ee527c1aa24853e2947e38e154d9ccb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/michaelrsweet/pdfio/security/advisories/GHSA-cjc4-x96x-fvgf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:03.997602",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pdfio",
    "owner": "michaelrsweet",
    "created_at": "2021-05-30T14:03:24Z",
    "updated_at": "2025-01-25T01:36:13Z",
    "pushed_at": "2025-01-24T20:31:36Z",
    "size": 8786,
    "stars": 216,
    "forks": 46,
    "open_issues": 13,
    "watchers": 216,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 635714,
      "M4": 8088,
      "Makefile": 7717,
      "Shell": 7663,
      "Batchfile": 395
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:43:14.829533"
  }
}