{
  "cve_id": "CVE-2023-24833",
  "github_data": {
    "repository": "facebook/hermes",
    "fix_commit": "a6dcafe6ded8e61658b40f5699878cd19a481f80",
    "related_commits": [
      "a6dcafe6ded8e61658b40f5699878cd19a481f80",
      "a6dcafe6ded8e61658b40f5699878cd19a481f80"
    ],
    "patch_url": "https://github.com/facebook/hermes/commit/a6dcafe6ded8e61658b40f5699878cd19a481f80.patch",
    "fix_commit_details": {
      "sha": "a6dcafe6ded8e61658b40f5699878cd19a481f80",
      "commit_date": "2023-02-02T20:07:13Z",
      "author": {
        "login": "facebook-github-bot",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Re-sync with internal repository (#908)",
        "length": 183,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 73,
        "additions": 66,
        "deletions": 7
      },
      "files": [
        {
          "filename": "lib/Support/BigIntSupport.cpp",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -192,7 +192,11 @@ double toDouble(ImmutableBigIntRef src) {\n   const uint32_t numBits = src.numDigits * BigIntDigitSizeInBits;\n   llvh::APInt tmp(numBits, llvh::makeArrayRef(src.digits, src.numDigits));\n   constexpr bool kSigned = true;\n-  return tmp.roundToDouble(kSigned);\n+  double val = tmp.roundToDouble(kSigned);\n+  // TODO(T142034196): APInt::roundToDouble doesn't implement proper conversion\n+  // when the number has more than 2 digits; we need to implement this\n+  // conversion.\n+  return std::isnan(val) ? std::numeric_limits<double>::quiet_NaN() : val;\n }\n \n namespace {"
        },
        {
          "filename": "lib/VM/JSLib/Array.cpp",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -1093,10 +1093,6 @@ class StandardSortModel : public SortModel {\n     JSObject::getComputedPrimitiveDescriptor(\n         obj_, runtime_, aHandle_, aDescObjHandle_, aTmpNameStorage_, aDesc);\n \n-    ComputedPropertyDescriptor bDesc;\n-    JSObject::getComputedPrimitiveDescriptor(\n-        obj_, runtime_, bHandle_, bDescObjHandle_, bTmpNameStorage_, bDesc);\n-\n     if (aDescObjHandle_) {\n       if (LLVM_LIKELY(!aDesc.flags.proxyObject)) {\n         auto res = JSObject::getComputedPropertyValue_RJS(\n@@ -1135,6 +1131,11 @@ class StandardSortModel : public SortModel {\n         }\n       }\n     }\n+\n+    ComputedPropertyDescriptor bDesc;\n+    JSObject::getComputedPrimitiveDescriptor(\n+        obj_, runtime_, bHandle_, bDescObjHandle_, bTmpNameStorage_, bDesc);\n+\n     if (bDescObjHandle_) {\n       if (LLVM_LIKELY(!bDesc.flags.proxyObject)) {\n         auto res = JSObject::getComputedPropertyValue_RJS("
        },
        {
          "filename": "lib/VM/Operations.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1272,8 +1272,8 @@ addOp_RJS(Runtime &runtime, Handle<> xHandle, Handle<> yHandle) {\n \n   return BigIntPrimitive::add(\n       runtime,\n-      runtime.makeHandle(resX->getBigInt()),\n-      runtime.makeHandle(resY->getBigInt()));\n+      runtime.makeHandle(xPrim->getBigInt()),\n+      runtime.makeHandle(yPrim->getBigInt()));\n }\n \n static const size_t MIN_RADIX = 2;"
        },
        {
          "filename": "test/hermes/regress-bigint-add-gc.js",
          "status": "added",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -0,0 +1,21 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+// RUN: %hermes -non-strict -O %s | %FileCheck %s\n+// RUN: %hermes -non-strict -O0 %s | %FileCheck %s\n+\n+const obj = {\n+    toString: () => {\n+        gc();\n+        return 0n;\n+    }\n+};\n+// trigger after obj.toString called and before addOp complete\n+let trigger_point = 1n + obj;\n+print(trigger_point);\n+\n+// CHECK: 1"
        },
        {
          "filename": "test/hermes/regress-bigint-to-double-nan.js",
          "status": "added",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -0,0 +1,13 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+// RUN: %hermes -non-strict -O %s | %FileCheck %s\n+// RUN: %hermes -non-strict -O0 %s | %FileCheck %s\n+\n+// TODO: fix BigInt to number conversion (it should never result in NaN).\n+print(Number(0xffffffffffffffffffffffffffffffffn));\n+// CHECK: NaN"
        },
        {
          "filename": "test/hermes/regress-invalidated-descriptor-std-sort-model-swap.js",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+// RUN: %hermes -O %s\n+\n+var a = [0,1]\n+a.sort(function(x,y){\n+  a.__defineGetter__(1, function(){\n+    delete a[0];\n+    return 1;\n+  });\n+  a.__defineGetter__(0, function(){\n+    return 1;\n+  });\n+  return -1;\n+})"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a942ef374897d85da38e9c8904574f8376555388",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "9f0b77fc801b1bed97e6097776a6baa1c4ed2e00",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "c995d195adaf07811cf35d81423a5a4afa7d60cf",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "e08fb5fc02177d55ca13fd71324a0e94e33ffb76",
            "date": "2025-01-09T13:15:51Z",
            "author_login": "tsaichien"
          },
          {
            "sha": "a49b895b12e3a9d6cfa79204daa480dcc831cbe0",
            "date": "2025-01-08T16:47:41Z",
            "author_login": "SamChou19815"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-416",
    "description": "A use-after-free in BigIntPrimitive addition in Hermes prior to commit a6dcafe6ded8e61658b40f5699878cd19a481f80 could have been used by an attacker to leak raw data from Hermes VM\u2019s heap. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-18T22:15:09.700",
    "last_modified": "2024-11-21T07:48:29.273",
    "fix_date": "2023-02-02T20:07:13Z"
  },
  "references": [
    {
      "url": "https://github.com/facebook/hermes/commit/a6dcafe6ded8e61658b40f5699878cd19a481f80",
      "source": "cve-assign@fb.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.facebook.com/security/advisories/cve-2023-24833",
      "source": "cve-assign@fb.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/facebook/hermes/commit/a6dcafe6ded8e61658b40f5699878cd19a481f80",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://www.facebook.com/security/advisories/cve-2023-24833",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.984475",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "hermes",
    "owner": "facebook",
    "created_at": "2018-10-22T19:13:00Z",
    "updated_at": "2025-01-13T03:07:27Z",
    "pushed_at": "2025-01-13T14:55:56Z",
    "size": 98978,
    "stars": 10032,
    "forks": 648,
    "open_issues": 161,
    "watchers": 10032,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "gh-pages",
      "main"
    ],
    "languages": {
      "C++": 10937781,
      "JavaScript": 7932464,
      "Rust": 1201532,
      "Python": 337453,
      "Java": 319660,
      "TypeScript": 184977,
      "Objective-C++": 113458,
      "CMake": 113065,
      "C": 41344,
      "Shell": 38189,
      "Swift": 22129,
      "NASL": 4993,
      "Ruby": 3189,
      "DTrace": 574,
      "Objective-C": 303,
      "D": 225
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:50:37.887799"
  }
}