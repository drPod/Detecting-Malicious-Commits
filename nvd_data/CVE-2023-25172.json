{
  "cve_id": "CVE-2023-25172",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
    "related_commits": [
      "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
      "c186a46910431020e8efc425dec2133e7a99fa9a",
      "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
      "c186a46910431020e8efc425dec2133e7a99fa9a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
      "commit_date": "2023-01-25T17:17:22Z",
      "author": {
        "login": "nbianca",
        "type": "User",
        "stats": {
          "total_commits": 819,
          "average_weekly_commits": 1.1784172661870504,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 255
        }
      },
      "commit_message": {
        "title": "SECURITY: Prevent XSS in local oneboxes (#20009)",
        "length": 106,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 101,
        "additions": 97,
        "deletions": 4
      },
      "files": [
        {
          "filename": "db/post_migrate/20230105153520_trigger_post_rebake_local_onebox_xss.rb",
          "status": "added",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -0,0 +1,22 @@\n+# frozen_string_literal: true\n+\n+class TriggerPostRebakeLocalOneboxXss < ActiveRecord::Migration[7.0]\n+  def up\n+    val =\n+      DB.query_single(\n+        \"SELECT value FROM site_settings WHERE name = 'content_security_policy'\",\n+      ).first\n+\n+    return if val == nil || val == \"t\"\n+\n+    DB.exec(<<~SQL)\n+      UPDATE posts\n+      SET baked_version = NULL\n+      WHERE cooked LIKE '%<a href=%'\n+    SQL\n+  end\n+\n+  def down\n+    raise ActiveRecord::IrreversibleMigration\n+  end\n+end"
        },
        {
          "filename": "lib/oneboxer.rb",
          "status": "modified",
          "additions": 15,
          "deletions": 4,
          "patch": "@@ -343,7 +343,8 @@ def self.local_onebox(url, opts = {})\n         end\n       end\n \n-    html = html.presence || \"<a href='#{URI(url).to_s}'>#{URI(url).to_s}</a>\"\n+    normalized_url = ::Onebox::Helpers.normalize_url_for_output(URI(url).to_s)\n+    html = html.presence || \"<a href='#{normalized_url}'>#{normalized_url}</a>\"\n     { onebox: html, preview: html }\n   end\n \n@@ -355,18 +356,28 @@ def self.local_upload_html(url)\n         \"\"\n       end\n \n+    normalized_url = ::Onebox::Helpers.normalize_url_for_output(url)\n     case File.extname(URI(url).path || \"\")\n     when VIDEO_REGEX\n       <<~HTML\n         <div class=\"onebox video-onebox\">\n           <video #{additional_controls} width=\"100%\" height=\"100%\" controls=\"\">\n-            <source src='#{url}'>\n-            <a href='#{url}'>#{url}</a>\n+            <source src='#{normalized_url}'>\n+            <a href='#{normalized_url}'>\n+              #{normalized_url}\n+            </a>\n           </video>\n         </div>\n       HTML\n     when AUDIO_REGEX\n-      \"<audio #{additional_controls} controls><source src='#{url}'><a href='#{url}'>#{url}</a></audio>\"\n+      <<~HTML\n+        <audio #{additional_controls} controls>\n+          <source src='#{normalized_url}'>\n+          <a href='#{normalized_url}'>\n+            #{normalized_url}\n+          </a>\n+        </audio>\n+      HTML\n     end\n   end\n "
        },
        {
          "filename": "spec/lib/oneboxer_spec.rb",
          "status": "modified",
          "additions": 60,
          "deletions": 0,
          "patch": "@@ -198,6 +198,66 @@ def preview(url, user = nil, category = nil, topic = nil)\n         \"<p><a href=\\\"#{Discourse.base_url}/new?%27class=black\\\">http://test.localhost/new?%27class=black</a></p>\",\n       )\n     end\n+\n+    it \"escapes URLs of local audio uploads\" do\n+      result =\n+        described_class.onebox_raw(\n+          \"#{Discourse.base_url}/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#'<>\",\n+        )\n+      expect(result[:onebox]).to eq(<<~HTML)\n+        <audio  controls>\n+          <source src='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E'>\n+          <a href='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E'>\n+            http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E\n+          </a>\n+        </audio>\n+      HTML\n+      expect(result[:preview]).to eq(<<~HTML)\n+        <audio  controls>\n+          <source src='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E'>\n+          <a href='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E'>\n+            http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.wav#&apos;%3C%3E\n+          </a>\n+        </audio>\n+      HTML\n+    end\n+\n+    it \"escapes URLs of local video uploads\" do\n+      result =\n+        described_class.onebox_raw(\n+          \"#{Discourse.base_url}/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#'<>\",\n+        )\n+      expect(result[:onebox]).to eq(<<~HTML)\n+        <div class=\"onebox video-onebox\">\n+          <video  width=\"100%\" height=\"100%\" controls=\"\">\n+            <source src='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E'>\n+            <a href='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E'>\n+              http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E\n+            </a>\n+          </video>\n+        </div>\n+      HTML\n+      expect(result[:preview]).to eq(<<~HTML)\n+        <div class=\"onebox video-onebox\">\n+          <video  width=\"100%\" height=\"100%\" controls=\"\">\n+            <source src='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E'>\n+            <a href='http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E'>\n+              http://test.localhost/uploads/default/original/1X/a1c31803be81b85ecafc4f77b1008eee9b3b82f4.mp4#&apos;%3C%3E\n+            </a>\n+          </video>\n+        </div>\n+      HTML\n+    end\n+\n+    it \"escapes URLs of generic local links\" do\n+      result = described_class.onebox_raw(\"#{Discourse.base_url}/g/somegroup#'onerror='\")\n+      expect(result[:onebox]).to eq(\n+        \"<a href='http://test.localhost/g/somegroup#&apos;onerror=&apos;'>http://test.localhost/g/somegroup#&apos;onerror=&apos;</a>\",\n+      )\n+      expect(result[:preview]).to eq(\n+        \"<a href='http://test.localhost/g/somegroup#&apos;onerror=&apos;'>http://test.localhost/g/somegroup#&apos;onerror=&apos;</a>\",\n+      )\n+    end\n   end\n \n   describe \".external_onebox\" do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d2efdf5282a868d80e916caaeb51d40d1ea256a2",
            "date": "2025-01-24T21:33:06Z",
            "author_login": "awesomerobot"
          },
          {
            "sha": "4c1c4ba8d42db4d1c732af69c39740d2aee91410",
            "date": "2025-01-24T19:50:52Z",
            "author_login": "featheredtoast"
          },
          {
            "sha": "59a67758489683457e7dca5fd712710034c08631",
            "date": "2025-01-24T19:42:22Z",
            "author_login": "xfalcox"
          },
          {
            "sha": "9cc99ef6db77d82b4af95911ee503e227cceae62",
            "date": "2025-01-24T18:36:35Z",
            "author_login": "SamSaffron"
          },
          {
            "sha": "5a94ceda542e5a0d0d8b90219bb835a51780b502",
            "date": "2025-01-24T18:05:47Z",
            "author_login": "xfalcox"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Discourse is an open-source discussion platform. Prior to version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches, a maliciously crafted URL can be included in a user's full name field to to carry out cross-site scripting attacks on sites with a disabled or overly permissive CSP (Content Security Policy). Discourse's default CSP prevents this vulnerability. The vulnerability is patched in version 3.0.1 of the `stable` branch and version 3.1.0.beta2 of the `beta` and `tests-passed` branches. As a workaround, enable and/or restore your site's CSP to the default one provided with Discourse.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-03-17T17:15:11.423",
    "last_modified": "2024-11-21T07:49:14.957",
    "fix_date": "2023-01-25T17:17:22Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/c186a46910431020e8efc425dec2133e7a99fa9a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20008",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20009",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-7pm2-prxw-wrvp",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/1a5a6f66cb821ed29a737311d6fdc2eba5adc915",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/c186a46910431020e8efc425dec2133e7a99fa9a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20008",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20009",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-7pm2-prxw-wrvp",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.857712",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-26T07:21:20Z",
    "pushed_at": "2025-01-25T09:40:42Z",
    "size": 701178,
    "stars": 42998,
    "forks": 8411,
    "open_issues": 82,
    "watchers": 42998,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20337451,
      "JavaScript": 9453662,
      "HTML": 1461712,
      "Handlebars": 1061673,
      "SCSS": 987048,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5042,
      "avg_commits_per_week": 96.96153846153847,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T07:34:08.623080"
  }
}