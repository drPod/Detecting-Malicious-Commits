{
  "cve_id": "CVE-2023-25575",
  "github_data": {
    "repository": "api-platform/core",
    "fix_commit": "5723d68369722feefeb11e42528d9580db5dd0fb",
    "related_commits": [
      "5723d68369722feefeb11e42528d9580db5dd0fb",
      "5723d68369722feefeb11e42528d9580db5dd0fb"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "5723d68369722feefeb11e42528d9580db5dd0fb",
      "commit_date": "2023-02-27T14:37:39Z",
      "author": {
        "login": "soyuka",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-vr2x-7687-h6qv",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 60,
        "additions": 49,
        "deletions": 11
      },
      "files": [
        {
          "filename": "features/authorization/deny.feature",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -181,3 +181,25 @@ Feature: Authorization checking\n     Then the response status code should be 200\n     And the response should contain \"ownerOnlyProperty\"\n     And the JSON node \"ownerOnlyProperty\" should be equal to the string \"updated\"\n+\n+  Scenario: A user retrieves a resource with an admin only viewable property\n+    When I add \"Accept\" header equal to \"application/json\"\n+    And I add \"Authorization\" header equal to \"Basic ZHVuZ2xhczprZXZpbg==\"\n+    And I send a \"GET\" request to \"/secured_dummies\"\n+    Then the response status code should be 200\n+    And the response should contain \"ownerOnlyProperty\"\n+\n+  Scenario: A user retrieves a resource with an admin only viewable property\n+    When I add \"Accept\" header equal to \"application/hal+json\"\n+    And I add \"Authorization\" header equal to \"Basic ZHVuZ2xhczprZXZpbg==\"\n+    And I send a \"GET\" request to \"/secured_dummies\"\n+    Then the response status code should be 200\n+    And the response should contain \"ownerOnlyProperty\"\n+\n+  Scenario: A user retrieves a resource with an admin only viewable property\n+    Given I add \"Accept\" header equal to \"application/vnd.api+json\"\n+    And I add \"Authorization\" header equal to \"Basic ZHVuZ2xhczprZXZpbg==\"\n+    And I send a \"GET\" request to \"/secured_dummies\"\n+    Then the response status code should be 200\n+    And the response should contain \"ownerOnlyProperty\"\n+"
        },
        {
          "filename": "src/Hal/Serializer/ItemNormalizer.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -62,10 +62,6 @@ public function normalize($object, $format = null, array $context = [])\n             return parent::normalize($object, $format, $context);\n         }\n \n-        if (!isset($context['cache_key'])) {\n-            $context['cache_key'] = $this->getCacheKey($format, $context);\n-        }\n-\n         if ($this->resourceClassResolver->isResourceClass($resourceClass)) {\n             $resourceClass = $this->resourceClassResolver->getResourceClass($object, $context['resource_class'] ?? null);\n         }\n@@ -75,6 +71,10 @@ public function normalize($object, $format = null, array $context = [])\n         $context['iri'] = $iri;\n         $context['api_normalize'] = true;\n \n+        if (!isset($context['cache_key'])) {\n+            $context['cache_key'] = $this->getCacheKey($format, $context);\n+        }\n+\n         $data = parent::normalize($object, $format, $context);\n         if (!\\is_array($data)) {\n             return $data;"
        },
        {
          "filename": "src/JsonApi/Serializer/ItemNormalizer.php",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -78,11 +78,7 @@ public function normalize($object, $format = null, array $context = [])\n             return parent::normalize($object, $format, $context);\n         }\n \n-        if (!isset($context['cache_key'])) {\n-            $context['cache_key'] = $this->getCacheKey($format, $context);\n-        }\n-\n-        if ($isResourceClass = $this->resourceClassResolver->isResourceClass($resourceClass)) {\n+        if ($this->resourceClassResolver->isResourceClass($resourceClass)) {\n             $resourceClass = $this->resourceClassResolver->getResourceClass($object, $context['resource_class'] ?? null);\n         }\n \n@@ -91,6 +87,10 @@ public function normalize($object, $format = null, array $context = [])\n         $context['iri'] = $iri;\n         $context['api_normalize'] = true;\n \n+        if (!isset($context['cache_key'])) {\n+            $context['cache_key'] = $this->getCacheKey($format, $context);\n+        }\n+\n         $data = parent::normalize($object, $format, $context);\n         if (!\\is_array($data)) {\n             return $data;"
        },
        {
          "filename": "src/Serializer/AbstractItemNormalizer.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -27,6 +27,7 @@\n use ApiPlatform\\Exception\\InvalidValueException;\n use ApiPlatform\\Exception\\ItemNotFoundException;\n use ApiPlatform\\Metadata\\ApiProperty;\n+use ApiPlatform\\Metadata\\CollectionOperationInterface;\n use ApiPlatform\\Metadata\\Property\\Factory\\PropertyMetadataFactoryInterface;\n use ApiPlatform\\Metadata\\Property\\Factory\\PropertyNameCollectionFactoryInterface;\n use ApiPlatform\\Metadata\\Resource\\Factory\\ResourceMetadataCollectionFactoryInterface;\n@@ -207,6 +208,11 @@ public function normalize($object, $format = null, array $context = [])\n             $context = $this->initContext($resourceClass, $context);\n         }\n \n+        if (isset($context['operation']) && $context['operation'] instanceof CollectionOperationInterface) {\n+            unset($context['operation']);\n+            unset($context['iri']);\n+        }\n+\n         $iri = null;\n         if (isset($context['iri'])) {\n             $iri = $context['iri'];"
        },
        {
          "filename": "src/Serializer/CacheKeyTrait.php",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -13,6 +13,12 @@\n \n namespace ApiPlatform\\Serializer;\n \n+/**\n+ * Used to override Symfony\\Component\\Serializer\\Normalizer\\AbstractObjectNormalizer::getCacheKey which is private\n+ * We need the cache_key in JsonApi and Hal before it is computed in Symfony.\n+ *\n+ * @see https://github.com/symfony/symfony/blob/49b6ab853d81e941736a1af67845efa3401e7278/src/Symfony/Component/Serializer/Normalizer/AbstractObjectNormalizer.php#L723 which isn't protected\n+ */\n trait CacheKeyTrait\n {\n     /**\n@@ -24,11 +30,15 @@ private function getCacheKey(?string $format, array $context)\n             unset($context[$key]);\n         }\n         unset($context[self::EXCLUDE_FROM_CACHE_KEY]);\n+        unset($context[self::OBJECT_TO_POPULATE]);\n         unset($context['cache_key']); // avoid artificially different keys\n \n         try {\n-            return md5($format.serialize($context));\n-        } catch (\\Exception $exception) {\n+            return hash('xxh128', $format.serialize([\n+                'context' => $context,\n+                'ignored' => $context[self::IGNORED_ATTRIBUTES] ?? $this->defaultContext[self::IGNORED_ATTRIBUTES],\n+            ]));\n+        } catch (\\Exception) {\n             // The context cannot be serialized, skip the cache\n             return false;\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a8d0c8471060039bdd0b8d118dcf7f0e97709276",
            "date": "2025-01-10T14:47:21Z",
            "author_login": "soyuka"
          },
          {
            "sha": "361fd6c19360dfe1a8ffe4ba16725e87de9f576a",
            "date": "2025-01-10T14:46:58Z",
            "author_login": "soyuka"
          },
          {
            "sha": "1a8dea7c861754d2ca07c8a5bff12b994b98b772",
            "date": "2025-01-10T14:44:55Z",
            "author_login": "soyuka"
          },
          {
            "sha": "9b073807219eb474e743f82aca64c1b089c6b03d",
            "date": "2025-01-10T14:33:49Z",
            "author_login": "soyuka"
          },
          {
            "sha": "a6b84610364b4782eea85a21286d79e0d4e07152",
            "date": "2025-01-10T14:26:40Z",
            "author_login": "soyuka"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-842",
    "description": "API Platform Core is the server component of API Platform: hypermedia and GraphQL APIs. Resource properties secured with the `security` option of the `ApiPlatform\\Metadata\\ApiProperty` attribute can be disclosed to unauthorized users. The problem affects most serialization formats, including raw JSON, which is enabled by default when installing API Platform. Custom serialization formats may also be impacted. Only collection endpoints are affected by the issue, item endpoints are not. The JSON-LD format is not affected by the issue. The result of the security rule is only executed for the first item of the collection. The result of the rule is then cached and reused for the next items. This bug can leak data to unauthorized users when the rule depends on the value of a property of the item. This bug can also hide properties that should be displayed to authorized users. This issue impacts the 2.7, 3.0 and 3.1 branches. Please upgrade to versions 2.7.10, 3.0.12 or 3.1.3. As a workaround, replace the `cache_key` of the context array of the Serializer inside a custom normalizer that works on objects if the security option of the `ApiPlatform\\Metadata\\ApiProperty` attribute is used.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-28T23:15:11.553",
    "last_modified": "2024-11-21T07:49:45.510",
    "fix_date": "2023-02-27T14:37:39Z"
  },
  "references": [
    {
      "url": "https://github.com/api-platform/core/commit/5723d68369722feefeb11e42528d9580db5dd0fb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/api-platform/core/security/advisories/GHSA-vr2x-7687-h6qv",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/api-platform/core/commit/5723d68369722feefeb11e42528d9580db5dd0fb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/api-platform/core/security/advisories/GHSA-vr2x-7687-h6qv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.786815",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "core",
    "owner": "api-platform",
    "created_at": "2015-01-19T23:05:56Z",
    "updated_at": "2025-01-22T10:13:36Z",
    "pushed_at": "2025-01-17T14:22:01Z",
    "size": 53285,
    "stars": 2469,
    "forks": 893,
    "open_issues": 193,
    "watchers": 2469,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.0",
      "4.1",
      "main"
    ],
    "languages": {
      "PHP": 6241805,
      "Gherkin": 985694,
      "CSS": 70893,
      "JavaScript": 48325,
      "Blade": 35008,
      "Twig": 20973,
      "Shell": 7070,
      "HTML": 5430
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:01:06.987203"
  }
}