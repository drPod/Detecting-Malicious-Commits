{
  "cve_id": "CVE-2023-25662",
  "github_data": {
    "repository": "tensorflow/tensorflow",
    "fix_commit": "08b8e18643d6dcde00890733b270ff8d9960c56c",
    "related_commits": [
      "08b8e18643d6dcde00890733b270ff8d9960c56c",
      "08b8e18643d6dcde00890733b270ff8d9960c56c"
    ],
    "patch_url": "https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c.patch",
    "fix_commit_details": {
      "sha": "08b8e18643d6dcde00890733b270ff8d9960c56c",
      "commit_date": "2023-01-24T21:53:58Z",
      "author": {
        "login": "ishark",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix security vulnerability in EditDistance op shape function.",
        "length": 91,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 77,
        "additions": 75,
        "deletions": 2
      },
      "files": [
        {
          "filename": "tensorflow/core/ops/array_ops.cc",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -25,6 +25,7 @@ limitations under the License.\n #include \"tensorflow/core/framework/types.h\"\n #include \"tensorflow/core/framework/types.pb.h\"\n #include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/platform/status.h\"\n #include \"tensorflow/core/platform/types.h\"\n #include \"tensorflow/core/util/mirror_pad_mode.h\"\n #include \"tensorflow/core/util/padding.h\"\n@@ -1072,13 +1073,24 @@ REGISTER_OP(\"EditDistance\")\n         // or else the output shape is unknown.\n         return shape_inference::UnknownShape(c);\n       }\n-\n       if (hypothesis_shape_t->NumElements() != truth_shape_t->NumElements()) {\n         return errors::InvalidArgument(\n             \"Num elements of hypothesis_shape does not match truth_shape: \",\n             hypothesis_shape_t->NumElements(), \" vs. \",\n             truth_shape_t->NumElements());\n       }\n+      if (hypothesis_shape_t->NumElements() < 2) {\n+        return errors::InvalidArgument(\n+            \"Input Hypothesis SparseTensors must have rank at least 2, but \"\n+            \"hypothesis_shape rank is: \",\n+            hypothesis_shape_t->NumElements());\n+      }\n+      if (truth_shape_t->NumElements() < 2) {\n+        return errors::InvalidArgument(\n+            \"Input Truth SparseTensors must have rank at least 2, but \"\n+            \"truth_shape rank is: \",\n+            truth_shape_t->NumElements());\n+      }\n \n       auto h_values = hypothesis_shape_t->flat<int64_t>();\n       auto t_values = truth_shape_t->flat<int64_t>();"
        },
        {
          "filename": "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "status": "modified",
          "additions": 62,
          "deletions": 1,
          "patch": "@@ -15,8 +15,9 @@\n \"\"\"Tests for tensorflow.kernels.edit_distance_op.\"\"\"\n \n import numpy as np\n-\n+from tensorflow.python.eager import def_function\n from tensorflow.python.framework import constant_op\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import ops\n from tensorflow.python.framework import sparse_tensor\n from tensorflow.python.ops import array_ops\n@@ -225,6 +226,66 @@ def testEditDistanceBadIndices(self):\n                          \"to outside of the buffer for the output tensor|\"\n                          r\"Dimension -\\d+ must be >= 0\"))\n \n+  def testEmptyShapeWithEditDistanceRaisesError(self):\n+    para = {\n+        \"hypothesis_indices\": [[]],\n+        \"hypothesis_values\": [\"tmp/\"],\n+        \"hypothesis_shape\": [],\n+        \"truth_indices\": [[]],\n+        \"truth_values\": [\"\"],\n+        \"truth_shape\": [],\n+        \"normalize\": False,\n+    }\n+\n+    # Check edit distance raw op with empty shape in eager mode.\n+    with self.assertRaisesRegex(\n+        (errors.InvalidArgumentError, ValueError),\n+        (\n+            r\"Input Hypothesis SparseTensors must have rank at least 2, but\"\n+            \" hypothesis_shape rank is: 0|Input SparseTensors must have rank \"\n+            \"at least 2, but truth_shape rank is: 0\"\n+        ),\n+    ):\n+      array_ops.gen_array_ops.EditDistance(**para)\n+\n+    # Check raw op with tf.function\n+    @def_function.function\n+    def TestFunction():\n+      \"\"\"Wrapper function for edit distance call.\"\"\"\n+      array_ops.gen_array_ops.EditDistance(**para)\n+\n+    with self.assertRaisesRegex(\n+        ValueError,\n+        (\n+            \"Input Hypothesis SparseTensors must have rank at least 2, but\"\n+            \" hypothesis_shape rank is: 0\"\n+        ),\n+    ):\n+      TestFunction()\n+\n+    # Check with python wrapper API\n+    hypothesis_indices = [[]]\n+    hypothesis_values = [0]\n+    hypothesis_shape = []\n+    truth_indices = [[]]\n+    truth_values = [1]\n+    truth_shape = []\n+    expected_output = []  # dummy ignored\n+\n+    with self.assertRaisesRegex(\n+        ValueError,\n+        (\n+            \"Input Hypothesis SparseTensors must have rank at least 2, but\"\n+            \" hypothesis_shape rank is: 0\"\n+        ),\n+    ):\n+      self._testEditDistance(\n+          hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),\n+          truth=(truth_indices, truth_values, truth_shape),\n+          normalize=False,\n+          expected_output=expected_output,\n+      )\n+\n \n if __name__ == \"__main__\":\n   test.main()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "359517872b9281259b49f7186a9de6382598d7ee",
            "date": "2025-01-14T22:18:13Z",
            "author_login": "tensorflower-gardener"
          },
          {
            "sha": "d93cc4f4f767f0d4a72f2fafcc59005be939c019",
            "date": "2025-01-14T20:36:32Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "d4e4516cc7d11a68a81a82227f3a432f7ab350a0",
            "date": "2025-01-14T19:59:15Z",
            "author_login": "ddunl"
          },
          {
            "sha": "65367823d999b6a36a685617100a7bb6ce03add4",
            "date": "2025-01-14T19:58:00Z",
            "author_login": "sdasgup3"
          },
          {
            "sha": "36cbae5466dbf356d91cf56127b2ab2ccd5a8b1f",
            "date": "2025-01-14T19:54:19Z",
            "author_login": "penpornk"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-190",
    "description": "TensorFlow is an open source platform for machine learning. Versions prior to 2.12.0 and 2.11.1 are vulnerable to integer overflow in EditDistance. A fix is included in TensorFlow version 2.12.0 and version 2.11.1.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-25T00:15:07.260",
    "last_modified": "2024-11-21T07:49:53.717",
    "fix_date": "2023-01-24T21:53:58Z"
  },
  "references": [
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.005650",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tensorflow",
    "owner": "tensorflow",
    "created_at": "2015-11-07T01:19:20Z",
    "updated_at": "2025-01-14T12:53:26Z",
    "pushed_at": "2025-01-14T12:53:14Z",
    "size": 1120707,
    "stars": 187254,
    "forks": 74432,
    "open_issues": 6569,
    "watchers": 187254,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 101199988,
      "Python": 45779571,
      "MLIR": 10763008,
      "HTML": 7662661,
      "Starlark": 7430486,
      "Go": 2171370,
      "C": 1288066,
      "Java": 1178817,
      "Jupyter Notebook": 805736,
      "Shell": 701425,
      "Objective-C++": 279654,
      "Objective-C": 169202,
      "CMake": 148610,
      "Smarty": 121630,
      "Swift": 81659,
      "Dockerfile": 37903,
      "C#": 13585,
      "Batchfile": 12126,
      "Ruby": 8898,
      "Perl": 7536,
      "Roff": 5034,
      "Cython": 3899,
      "Makefile": 2845,
      "CSS": 2761,
      "Vim Snippet": 58
    },
    "commit_activity": {
      "total_commits_last_year": 15729,
      "avg_commits_per_week": 302.4807692307692,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:54:01.412891"
  }
}