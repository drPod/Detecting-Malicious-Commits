{
  "cve_id": "CVE-2023-26043",
  "github_data": {
    "repository": "GeoNode/geonode",
    "fix_commit": "2fdfe919f299b21f1609bf898f9dcfde58770ac0",
    "related_commits": [
      "2fdfe919f299b21f1609bf898f9dcfde58770ac0",
      "2fdfe919f299b21f1609bf898f9dcfde58770ac0"
    ],
    "patch_url": "https://github.com/GeoNode/geonode/commit/2fdfe919f299b21f1609bf898f9dcfde58770ac0.patch",
    "fix_commit_details": {
      "sha": "2fdfe919f299b21f1609bf898f9dcfde58770ac0",
      "commit_date": "2022-12-22T10:05:42Z",
      "author": {
        "login": "github-actions[bot]",
        "type": "Bot",
        "stats": {
          "total_commits": 308,
          "average_weekly_commits": 0.402088772845953,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 28
        }
      },
      "commit_message": {
        "title": "[Fixes #10462] GeoNode is vulnerable to an XML External Entity (XXE) injection (#10463) (#10467)",
        "length": 169,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 26,
        "additions": 21,
        "deletions": 5
      },
      "files": [
        {
          "filename": "geonode/geoserver/helpers.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -238,7 +238,7 @@ def extract_name_from_sld(gs_catalog, sld, sld_file=None):\n                     sld = sld_file.read()\n             if isinstance(sld, str):\n                 sld = sld.encode('utf-8')\n-            dom = etree.XML(sld)\n+            dom = etree.XML(sld, parser=etree.XMLParser(resolve_entities=False))\n         elif sld_file and isfile(sld_file):\n             with open(sld_file, \"rb\") as sld_file:\n                 sld = sld_file.read()\n@@ -378,7 +378,7 @@ def set_dataset_style(saved_dataset, title, sld, base_file=None):\n             elif isinstance(sld, str):\n                 sld = sld.strip('b\\'\\n')\n                 sld = re.sub(r'(\\\\r)|(\\\\n)', '', sld).encode(\"UTF-8\")\n-            etree.XML(sld)\n+            etree.XML(sld, parser=etree.XMLParser(resolve_entities=False))\n         elif base_file and isfile(base_file):\n             with open(base_file, \"rb\") as sld_file:\n                 sld = sld_file.read()"
        },
        {
          "filename": "geonode/geoserver/tests/test_helpers.py",
          "status": "modified",
          "additions": 17,
          "deletions": 1,
          "patch": "@@ -28,7 +28,10 @@\n from geonode.decorators import on_ogc_backend\n from geonode.tests.base import GeoNodeBaseTestSupport\n from geonode.geoserver.views import _response_callback\n-from geonode.geoserver.helpers import get_dataset_storetype\n+from geonode.geoserver.helpers import (\n+    gs_catalog,\n+    get_dataset_storetype,\n+    extract_name_from_sld)\n from geonode.layers.populate_datasets_data import create_dataset_data\n \n from geonode.geoserver.ows import (\n@@ -71,6 +74,19 @@ def setUp(self):\n         self.passwd = 'admin'\n         create_dataset_data()\n \n+    @on_ogc_backend(geoserver.BACKEND_PACKAGE)\n+    def test_extract_name_from_sld(self):\n+        content = \"\"\"<?xml version=\"1.0\" standalone=\"yes\"?>\n+<!DOCTYPE foo [ <!ENTITY ent SYSTEM \"/etc/passwd\" > ]>\n+<foo xmlns=\"http://www.opengis.net/sld\">\n+<NamedLayer>\n+    <UserStyle>\n+        <Name>&ent;</Name>\n+    </UserStyle>\n+</NamedLayer>\n+</foo>\"\"\"\n+        self.assertIsNone(extract_name_from_sld(gs_catalog, content))\n+\n     @on_ogc_backend(geoserver.BACKEND_PACKAGE)\n     def test_replace_callback(self):\n         content = f\"\"\"<Layer>"
        },
        {
          "filename": "geonode/geoserver/views.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -179,7 +179,7 @@ def respond(*args, **kw):\n                 if isfile(sld):\n                     with open(sld) as sld_file:\n                         sld = sld_file.read()\n-                etree.XML(sld)\n+                etree.XML(sld, parser=etree.XMLParser(resolve_entities=False))\n         except Exception:\n             logger.exception(\"The uploaded SLD file is not valid XML\")\n             raise Exception(\n@@ -799,7 +799,7 @@ def get_capabilities(request, layerid=None, user=None,\n                     }\n                     gc_str = tpl.render(ctx)\n                     gc_str = gc_str.encode(\"utf-8\", \"replace\")\n-                    layerelem = etree.XML(gc_str)\n+                    layerelem = etree.XML(gc_str, parser=etree.XMLParser(resolve_entities=False))\n                     rootdoc = etree.ElementTree(layerelem)\n             except Exception as e:\n                 import traceback"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "91f32c64e8d8e6f159368243d8dfac96fe5a8aca",
            "date": "2024-12-06T10:50:40Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "eb352184f5948103f680a0f33600cdf1a7fbad5c",
            "date": "2024-12-02T13:20:03Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "051efddcc61037600c6cc722819572f22a5b1c80",
            "date": "2024-11-29T13:39:23Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "993364a44c8afa1085dccd2366794789b36a2b39",
            "date": "2024-11-26T14:56:26Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "0b792cf7d575684050469c382c57636bb7d41b22",
            "date": "2024-11-22T17:05:49Z",
            "author_login": "mattiagiupponi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-611",
    "description": "GeoNode is an open source platform that facilitates the creation, sharing, and collaborative use of geospatial data. GeoNode is vulnerable to an XML External Entity (XXE) injection in the style upload functionality of GeoServer leading to Arbitrary File Read. This issue has been patched in version 4.0.3.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-02-27T21:15:12.103",
    "last_modified": "2024-11-21T07:50:38.857",
    "fix_date": "2022-12-22T10:05:42Z"
  },
  "references": [
    {
      "url": "https://github.com/GeoNode/geonode/commit/2fdfe919f299b21f1609bf898f9dcfde58770ac0",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-mcmc-c59m-pqq8",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/commit/2fdfe919f299b21f1609bf898f9dcfde58770ac0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-mcmc-c59m-pqq8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.783499",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "geonode",
    "owner": "GeoNode",
    "created_at": "2010-06-03T18:14:47Z",
    "updated_at": "2025-01-13T06:44:38Z",
    "pushed_at": "2025-01-14T15:06:36Z",
    "size": 462743,
    "stars": 1483,
    "forks": 1129,
    "open_issues": 356,
    "watchers": 1483,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.6.x",
      "2.8.x",
      "2.10.x",
      "3.2.x",
      "3.3.x",
      "4.0.x",
      "4.1.x",
      "4.2.x",
      "4.3.x"
    ],
    "languages": {
      "JavaScript": 8573163,
      "Python": 5466464,
      "HTML": 569637,
      "CSS": 547762,
      "XSLT": 67411,
      "Less": 62479,
      "Shell": 54446,
      "Makefile": 4529,
      "SCSS": 3477,
      "Scheme": 3155,
      "Dockerfile": 2891,
      "Gherkin": 529
    },
    "commit_activity": {
      "total_commits_last_year": 436,
      "avg_commits_per_week": 8.384615384615385,
      "days_active_last_year": 108
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:42:19.248585"
  }
}