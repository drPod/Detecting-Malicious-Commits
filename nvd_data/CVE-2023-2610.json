{
  "cve_id": "CVE-2023-2610",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a",
    "related_commits": [
      "ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a",
      "ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a"
    ],
    "patch_url": "https://github.com/vim/vim/commit/ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a.patch",
    "fix_commit_details": {
      "sha": "ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a",
      "commit_date": "2023-05-09T20:15:30Z",
      "author": {
        "login": "brammool",
        "type": "User",
        "stats": {
          "total_commits": 16567,
          "average_weekly_commits": 15.411162790697674,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 874
        }
      },
      "commit_message": {
        "title": "patch 9.0.1532: crash when expanding \"~\" in substitute causes very long text",
        "length": 196,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 46,
        "additions": 35,
        "deletions": 11
      },
      "files": [
        {
          "filename": "src/regexp.c",
          "status": "modified",
          "additions": 19,
          "deletions": 11,
          "patch": "@@ -1767,10 +1767,7 @@ do_Lower(int *d, int c)\n regtilde(char_u *source, int magic)\n {\n     char_u\t*newsub = source;\n-    char_u\t*tmpsub;\n     char_u\t*p;\n-    int\t\tlen;\n-    int\t\tprevlen;\n \n     for (p = newsub; *p; ++p)\n     {\n@@ -1779,24 +1776,35 @@ regtilde(char_u *source, int magic)\n \t    if (reg_prev_sub != NULL)\n \t    {\n \t\t// length = len(newsub) - 1 + len(prev_sub) + 1\n-\t\tprevlen = (int)STRLEN(reg_prev_sub);\n-\t\ttmpsub = alloc(STRLEN(newsub) + prevlen);\n+\t\t// Avoid making the text longer than MAXCOL, it will cause\n+\t\t// trouble at some point.\n+\t\tsize_t\tprevsublen = STRLEN(reg_prev_sub);\n+\t\tsize_t  newsublen = STRLEN(newsub);\n+\t\tif (prevsublen > MAXCOL || newsublen > MAXCOL\n+\t\t\t\t\t    || newsublen + prevsublen > MAXCOL)\n+\t\t{\n+\t\t    emsg(_(e_resulting_text_too_long));\n+\t\t    break;\n+\t\t}\n+\n+\t\tchar_u *tmpsub = alloc(newsublen + prevsublen);\n \t\tif (tmpsub != NULL)\n \t\t{\n \t\t    // copy prefix\n-\t\t    len = (int)(p - newsub);\t// not including ~\n-\t\t    mch_memmove(tmpsub, newsub, (size_t)len);\n+\t\t    size_t prefixlen = p - newsub;\t// not including ~\n+\t\t    mch_memmove(tmpsub, newsub, prefixlen);\n \t\t    // interpret tilde\n-\t\t    mch_memmove(tmpsub + len, reg_prev_sub, (size_t)prevlen);\n+\t\t    mch_memmove(tmpsub + prefixlen, reg_prev_sub,\n+\t\t\t\t\t\t\t       prevsublen);\n \t\t    // copy postfix\n \t\t    if (!magic)\n \t\t\t++p;\t\t\t// back off backslash\n-\t\t    STRCPY(tmpsub + len + prevlen, p + 1);\n+\t\t    STRCPY(tmpsub + prefixlen + prevsublen, p + 1);\n \n-\t\t    if (newsub != source)\t// already allocated newsub\n+\t\t    if (newsub != source)\t// allocated newsub before\n \t\t\tvim_free(newsub);\n \t\t    newsub = tmpsub;\n-\t\t    p = newsub + len + prevlen;\n+\t\t    p = newsub + prefixlen + prevsublen;\n \t\t}\n \t    }\n \t    else if (magic)"
        },
        {
          "filename": "src/testdir/test_substitute.vim",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -1414,6 +1414,20 @@ func Test_substitute_short_cmd()\n   bw!\n endfunc\n \n+\" Check handling expanding \"~\" resulting in extremely long text.\n+func Test_substitute_tilde_too_long()\n+  enew!\n+\n+  s/.*/ixxx\n+  s//~~~~~~~~~AAAAAAA@(\n+\n+  \" Either fails with \"out of memory\" or \"text too long\".\n+  \" This can take a long time.\n+  call assert_fails('sil! norm &&&&&&&&&', ['E1240:\\|E342:'])\n+\n+  bwipe!\n+endfunc\n+\n \" This should be done last to reveal a memory leak when vim_regsub_both() is\n \" called to evaluate an expression but it is not used in a second call.\n func Test_z_substitute_expr_leak()"
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -695,6 +695,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    1532,\n /**/\n     1531,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-190",
    "description": "Integer Overflow or Wraparound in GitHub repository vim/vim prior to 9.0.1532.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-09T22:15:10.197",
    "last_modified": "2024-11-29T12:15:05.820",
    "fix_date": "2023-05-09T20:15:30Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/31e67340-935b-4f6c-a923-f7246bc29c7d",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/06/msg00015.html",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PCLJN4QINITA3ZASKLEJ64C5TFNKELMO/",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT213844",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT213845",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/vim/vim/commit/ab9a2d884b3a4abe319606ea95a5a6d6b01cd73a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/31e67340-935b-4f6c-a923-f7246bc29c7d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/06/msg00015.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PCLJN4QINITA3ZASKLEJ64C5TFNKELMO/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20241129-0006/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT213844",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://support.apple.com/kb/HT213845",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.947341",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}