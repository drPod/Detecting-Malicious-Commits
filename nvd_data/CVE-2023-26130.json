{
  "cve_id": "CVE-2023-26130",
  "github_data": {
    "repository": "yhirose/cpp-httplib",
    "fix_commit": "5b397d455d25a391ba346863830c1949627b4d08",
    "related_commits": [
      "5b397d455d25a391ba346863830c1949627b4d08",
      "5b397d455d25a391ba346863830c1949627b4d08"
    ],
    "patch_url": "https://github.com/yhirose/cpp-httplib/commit/5b397d455d25a391ba346863830c1949627b4d08.patch",
    "fix_commit_details": {
      "sha": "5b397d455d25a391ba346863830c1949627b4d08",
      "commit_date": "2023-05-22T13:56:16Z",
      "author": {
        "login": "yhirose",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix more CRLF injection problems.",
        "length": 33,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 84,
        "additions": 63,
        "deletions": 21
      },
      "files": [
        {
          "filename": "httplib.h",
          "status": "modified",
          "additions": 17,
          "deletions": 21,
          "patch": "@@ -5925,8 +5925,8 @@ inline void Server::apply_ranges(const Request &req, Response &res,\n       res.headers.erase(it);\n     }\n \n-    res.headers.emplace(\"Content-Type\",\n-                        \"multipart/byteranges; boundary=\" + boundary);\n+    res.set_header(\"Content-Type\",\n+                   \"multipart/byteranges; boundary=\" + boundary);\n   }\n \n   auto type = detail::encoding_type(req, res);\n@@ -6616,32 +6616,32 @@ inline bool ClientImpl::write_request(Stream &strm, Request &req,\n   // Prepare additional headers\n   if (close_connection) {\n     if (!req.has_header(\"Connection\")) {\n-      req.headers.emplace(\"Connection\", \"close\");\n+      req.set_header(\"Connection\", \"close\");\n     }\n   }\n \n   if (!req.has_header(\"Host\")) {\n     if (is_ssl()) {\n       if (port_ == 443) {\n-        req.headers.emplace(\"Host\", host_);\n+        req.set_header(\"Host\", host_);\n       } else {\n-        req.headers.emplace(\"Host\", host_and_port_);\n+        req.set_header(\"Host\", host_and_port_);\n       }\n     } else {\n       if (port_ == 80) {\n-        req.headers.emplace(\"Host\", host_);\n+        req.set_header(\"Host\", host_);\n       } else {\n-        req.headers.emplace(\"Host\", host_and_port_);\n+        req.set_header(\"Host\", host_and_port_);\n       }\n     }\n   }\n \n-  if (!req.has_header(\"Accept\")) { req.headers.emplace(\"Accept\", \"*/*\"); }\n+  if (!req.has_header(\"Accept\")) { req.set_header(\"Accept\", \"*/*\"); }\n \n #ifndef CPPHTTPLIB_NO_DEFAULT_USER_AGENT\n   if (!req.has_header(\"User-Agent\")) {\n     auto agent = std::string(\"cpp-httplib/\") + CPPHTTPLIB_VERSION;\n-    req.headers.emplace(\"User-Agent\", agent);\n+    req.set_header(\"User-Agent\", agent);\n   }\n #endif\n \n@@ -6650,23 +6650,23 @@ inline bool ClientImpl::write_request(Stream &strm, Request &req,\n       if (!req.is_chunked_content_provider_) {\n         if (!req.has_header(\"Content-Length\")) {\n           auto length = std::to_string(req.content_length_);\n-          req.headers.emplace(\"Content-Length\", length);\n+          req.set_header(\"Content-Length\", length);\n         }\n       }\n     } else {\n       if (req.method == \"POST\" || req.method == \"PUT\" ||\n           req.method == \"PATCH\") {\n-        req.headers.emplace(\"Content-Length\", \"0\");\n+        req.set_header(\"Content-Length\", \"0\");\n       }\n     }\n   } else {\n     if (!req.has_header(\"Content-Type\")) {\n-      req.headers.emplace(\"Content-Type\", \"text/plain\");\n+      req.set_header(\"Content-Type\", \"text/plain\");\n     }\n \n     if (!req.has_header(\"Content-Length\")) {\n       auto length = std::to_string(req.body.size());\n-      req.headers.emplace(\"Content-Length\", length);\n+      req.set_header(\"Content-Length\", length);\n     }\n   }\n \n@@ -6734,12 +6734,10 @@ inline std::unique_ptr<Response> ClientImpl::send_with_content_provider(\n     ContentProvider content_provider,\n     ContentProviderWithoutLength content_provider_without_length,\n     const std::string &content_type, Error &error) {\n-  if (!content_type.empty()) {\n-    req.headers.emplace(\"Content-Type\", content_type);\n-  }\n+  if (!content_type.empty()) { req.set_header(\"Content-Type\", content_type); }\n \n #ifdef CPPHTTPLIB_ZLIB_SUPPORT\n-  if (compress_) { req.headers.emplace(\"Content-Encoding\", \"gzip\"); }\n+  if (compress_) { req.set_header(\"Content-Encoding\", \"gzip\"); }\n #endif\n \n #ifdef CPPHTTPLIB_ZLIB_SUPPORT\n@@ -6800,7 +6798,7 @@ inline std::unique_ptr<Response> ClientImpl::send_with_content_provider(\n       req.content_provider_ = detail::ContentProviderAdapter(\n           std::move(content_provider_without_length));\n       req.is_chunked_content_provider_ = true;\n-      req.headers.emplace(\"Transfer-Encoding\", \"chunked\");\n+      req.set_header(\"Transfer-Encoding\", \"chunked\");\n     } else {\n       req.body.assign(body, content_length);\n       ;\n@@ -7423,9 +7421,7 @@ inline Result ClientImpl::Delete(const std::string &path,\n   req.headers = headers;\n   req.path = path;\n \n-  if (!content_type.empty()) {\n-    req.headers.emplace(\"Content-Type\", content_type);\n-  }\n+  if (!content_type.empty()) { req.set_header(\"Content-Type\", content_type); }\n   req.body.assign(body, content_length);\n \n   return send_(std::move(req));"
        },
        {
          "filename": "test/test.cc",
          "status": "modified",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -6116,3 +6116,49 @@ TEST(RedirectTest, RedirectToUrlWithQueryParameters) {\n     EXPECT_EQ(\"val&key2=val2\", res->body);\n   }\n }\n+\n+TEST(VulnerabilityTest, CRLFInjection) {\n+  Server svr;\n+\n+  svr.Post(\"/test1\", [](const Request &/*req*/, Response &res) {\n+    res.set_content(\"Hello 1\", \"text/plain\");\n+  });\n+\n+  svr.Delete(\"/test2\", [](const Request &/*req*/, Response &res) {\n+    res.set_content(\"Hello 2\", \"text/plain\");\n+  });\n+\n+  svr.Put(\"/test3\", [](const Request &/*req*/, Response &res) {\n+    res.set_content(\"Hello 3\", \"text/plain\");\n+  });\n+\n+  svr.Patch(\"/test4\", [](const Request &/*req*/, Response &res) {\n+    res.set_content(\"Hello 4\", \"text/plain\");\n+  });\n+\n+  svr.set_logger([](const Request &req, const Response & /*res*/) {\n+    for (const auto &x : req.headers) {\n+      auto key = x.first;\n+      EXPECT_STRNE(\"evil\", key.c_str());\n+    }\n+  });\n+\n+  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });\n+  auto se = detail::scope_exit([&] {\n+    svr.stop();\n+    thread.join();\n+    ASSERT_FALSE(svr.is_running());\n+  });\n+\n+  std::this_thread::sleep_for(std::chrono::seconds(1));\n+\n+  {\n+    Client cli(HOST, PORT);\n+\n+    cli.Post(\"/test1\", \"A=B\",\n+             \"application/x-www-form-urlencoded\\r\\nevil: hello1\");\n+    cli.Delete(\"/test2\", \"A=B\", \"text/plain\\r\\nevil: hello2\");\n+    cli.Put(\"/test3\", \"text\", \"text/plain\\r\\nevil: hello3\");\n+    cli.Patch(\"/test4\", \"content\", \"text/plain\\r\\nevil: hello4\");\n+  }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9b5f76f8337d54c8f6a0920df2232ac74eff613b",
            "date": "2024-12-27T22:19:23Z",
            "author_login": "yhirose"
          },
          {
            "sha": "d647f484a48ae59b429e7e3a86e2b8b3fc493167",
            "date": "2024-12-24T14:38:59Z",
            "author_login": "sinnren"
          },
          {
            "sha": "8794792baa1b2a14eceedd590f6d2f2b837dce39",
            "date": "2024-12-23T18:14:36Z",
            "author_login": "bobrofon"
          },
          {
            "sha": "b85768c1f34f8b7ff60dfe0e2938b35b50e2610b",
            "date": "2024-12-16T22:03:45Z",
            "author_login": "yhirose"
          },
          {
            "sha": "e6d71bd702d4ec224940c2c34e3d0b55c06eeb8b",
            "date": "2024-12-12T23:15:22Z",
            "author_login": "yhirose"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-93",
    "description": "Versions of the package yhirose/cpp-httplib before 0.12.4 are vulnerable to CRLF Injection when untrusted user input is used to set the content-type header in the HTTP .Patch, .Post, .Put and .Delete requests. This can lead to logical errors and other misbehaviors.\r\r**Note:** This issue is present due to an incomplete fix for [CVE-2020-11709](https://security.snyk.io/vuln/SNYK-UNMANAGED-YHIROSECPPHTTPLIB-2366507).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-30T05:15:10.640",
    "last_modified": "2024-11-21T07:50:50.233",
    "fix_date": "2023-05-22T13:56:16Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/dellalibera/094aece17a86069a7d27f93c8aba2280",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/yhirose/cpp-httplib/commit/5b397d455d25a391ba346863830c1949627b4d08",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/yhirose/cpp-httplib/releases/tag/v0.12.4",
      "source": "report@snyk.io",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2RY6PKBU73I45L6YWNYCUK2XBEXEFX7L/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JY2E7EIRWQMKH6GY4OZOWWBZBY3Q7CGS/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NYODHZECXYFC2BNODZPZXZAXOKGMCYAP/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U6MO4FSKYNSAJVUXYP7LRY7ARUIGKBFL/",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-UNMANAGED-YHIROSECPPHTTPLIB-5591194",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://gist.github.com/dellalibera/094aece17a86069a7d27f93c8aba2280",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/yhirose/cpp-httplib/commit/5b397d455d25a391ba346863830c1949627b4d08",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/yhirose/cpp-httplib/releases/tag/v0.12.4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2RY6PKBU73I45L6YWNYCUK2XBEXEFX7L/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JY2E7EIRWQMKH6GY4OZOWWBZBY3Q7CGS/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NYODHZECXYFC2BNODZPZXZAXOKGMCYAP/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U6MO4FSKYNSAJVUXYP7LRY7ARUIGKBFL/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-UNMANAGED-YHIROSECPPHTTPLIB-5591194",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.268459",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cpp-httplib",
    "owner": "yhirose",
    "created_at": "2012-09-22T02:38:32Z",
    "updated_at": "2025-01-14T09:37:35Z",
    "pushed_at": "2024-12-27T22:20:05Z",
    "size": 3420,
    "stars": 13442,
    "forks": 2341,
    "open_issues": 17,
    "watchers": 13442,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 2407753,
      "CMake": 28300,
      "Meson": 9514,
      "Makefile": 8212,
      "Python": 1992,
      "Shell": 1475,
      "HTML": 938,
      "Dockerfile": 531
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:30:06.528373"
  }
}