{
  "cve_id": "CVE-2023-26132",
  "github_data": {
    "repository": "mickhansen/dottie.js",
    "fix_commit": "7d3aee1c9c3c842720506e131de7e181e5c8db68",
    "related_commits": [
      "7d3aee1c9c3c842720506e131de7e181e5c8db68",
      "7d3aee1c9c3c842720506e131de7e181e5c8db68"
    ],
    "patch_url": "https://github.com/mickhansen/dottie.js/commit/7d3aee1c9c3c842720506e131de7e181e5c8db68.patch",
    "fix_commit_details": {
      "sha": "7d3aee1c9c3c842720506e131de7e181e5c8db68",
      "commit_date": "2023-06-08T14:51:18Z",
      "author": {
        "login": "mickhansen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "rudimentary __proto__ guarding",
        "length": 30,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 27,
        "additions": 27,
        "deletions": 0
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -32,6 +32,7 @@ dottie.get(values, ['some.dot.included', 'key']); // returns 'barfoo'\n *Note: lodash.get() also works fine for this* \n \n ### Set value\n+\n Sets nested value, creates nested structure if needed\n \n ```js\n@@ -42,6 +43,8 @@ dottie.set(values, 'some.nested.object', someValue, {\n });\n ```\n \n+If you accept arbitrary/user-defined paths to `set` you should call `Object.preventExtensions(values)` first to guard against potential pollution.\n+\n ### Transform object\n Transform object from keys with dottie notation to nested objects\n "
        },
        {
          "filename": "dottie.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -72,6 +72,7 @@\n   // Set nested value\n   Dottie.set = function(object, path, value, options) {\n     var pieces = Array.isArray(path) ? path : path.split('.'), current = object, piece, length = pieces.length;\n+    if (pieces[0] === '__proto__') return;\n \n     if (typeof current !== 'object') {\n         throw new Error('Parent is not an object.');\n@@ -140,6 +141,9 @@\n \n       if (key.indexOf(options.delimiter) !== -1) {\n         pieces = key.split(options.delimiter);\n+\n+        if (pieces[0] === '__proto__') break;\n+\n         piecesLength = pieces.length;\n         current = transformed;\n "
        },
        {
          "filename": "test/set.test.js",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -65,4 +65,12 @@ describe(\"dottie.set\", function () {\n     });\n     expect(data.foo.bar.baz).to.equal('someValue');\n   });\n+\n+  it('should not attempt to set __proto__', function () {\n+    var data = {};\n+\n+    dottie.set(data, '__proto__.pollution', 'polluted');\n+\n+    expect(data.__proto__.pollution).to.be.undefined;\n+  });\n });\n\\ No newline at end of file"
        },
        {
          "filename": "test/transform.test.js",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -145,4 +145,16 @@ describe(\"dottie.transform\", function () {\n     expect(transformed.user.location.city).to.equal('Zanzibar City');\n     expect(transformed.project.title).to.equal('dottie');\n   });\n+\n+  it(\"should guard against prototype pollution\", function () {\n+    var values = {\n+      'user.name': 'John Doe',\n+      '__proto__.pollution': 'pollution'\n+    };\n+\n+    var transformed = dottie.transform(values);\n+    expect(transformed.user).not.to.equal(undefined);\n+    expect(transformed.user.name).to.equal('John Doe');\n+    expect(transformed.__proto__.pollution).to.be.undefined;\n+  });\n });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a72eb993212939d60a2801843ce3e968dfc5c6a6",
            "date": "2023-06-13T06:31:02Z",
            "author_login": "coliff"
          },
          {
            "sha": "03d7ee70d66e620783074d5bb7b276231549b35d",
            "date": "2023-06-13T05:42:05Z",
            "author_login": "mickhansen"
          },
          {
            "sha": "0371a92098a183c4eff2c684c6d9b2bb0e1dfb89",
            "date": "2023-06-13T05:41:08Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0715d4cec2e95bc4a2ee374000c2433110b233e3",
            "date": "2023-06-13T05:39:14Z",
            "author_login": "mickhansen"
          },
          {
            "sha": "10e4b1491f3d8a415ceeccca2cffe4766c292c92",
            "date": "2023-06-13T05:39:12Z",
            "author_login": "mickhansen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-1321",
    "description": "Versions of the package dottie before 2.0.4 are vulnerable to Prototype Pollution due to insufficient checks, via the set() function and the current variable in the /dottie.js file.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-10T05:15:08.970",
    "last_modified": "2025-01-06T17:15:11.647",
    "fix_date": "2023-06-08T14:51:18Z"
  },
  "references": [
    {
      "url": "https://github.com/mickhansen/dottie.js/blob/b48e22714aae4489ea6276452f22cc61980ba5a4/dottie.js%23L107",
      "source": "report@snyk.io",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/mickhansen/dottie.js/commit/7d3aee1c9c3c842720506e131de7e181e5c8db68",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DOTTIE-3332763",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mickhansen/dottie.js/blob/b48e22714aae4489ea6276452f22cc61980ba5a4/dottie.js%23L107",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Broken Link"
      ]
    },
    {
      "url": "https://github.com/mickhansen/dottie.js/commit/7d3aee1c9c3c842720506e131de7e181e5c8db68",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DOTTIE-3332763",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.350985",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dottie.js",
    "owner": "mickhansen",
    "created_at": "2012-06-09T21:13:06Z",
    "updated_at": "2024-11-08T14:14:35Z",
    "pushed_at": "2024-07-17T05:13:54Z",
    "size": 9217,
    "stars": 252,
    "forks": 24,
    "open_issues": 3,
    "watchers": 252,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 19615
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:45:17.251805"
  }
}