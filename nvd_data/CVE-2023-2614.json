{
  "cve_id": "CVE-2023-2614",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7",
    "related_commits": [
      "c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7",
      "c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7"
    ],
    "patch_url": "https://github.com/pimcore/pimcore/commit/c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7.patch",
    "fix_commit_details": {
      "sha": "c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7",
      "commit_date": "2023-04-25T09:11:18Z",
      "author": {
        "login": "aryaantony92",
        "type": "User",
        "stats": {
          "total_commits": 178,
          "average_weekly_commits": 0.3538767395626243,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 64
        }
      },
      "commit_message": {
        "title": "Fix name field in custom reports (#15007)",
        "length": 41,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 17,
        "additions": 15,
        "deletions": 2
      },
      "files": [
        {
          "filename": "bundles/AdminBundle/Controller/Reports/CustomReportController.php",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -76,6 +76,8 @@ public function addAction(Request $request)\n \n         $success = false;\n \n+        $this->isValidConfigName($request->get('name'));\n+\n         $report = CustomReport\\Config::getByName($request->get('name'));\n \n         if (!$report) {\n@@ -129,6 +131,7 @@ public function cloneAction(Request $request)\n         $this->checkPermission('reports_config');\n \n         $newName = $request->get('newName');\n+        $this->isValidConfigName($newName);\n         $report = CustomReport\\Config::getByName($newName);\n         if ($report) {\n             throw new \\Exception('report already exists');\n@@ -187,7 +190,7 @@ public function getAction(Request $request)\n     public function updateAction(Request $request)\n     {\n         $this->checkPermission('reports_config');\n-\n+        $this->isValidConfigName($request->get('name'));\n         $report = CustomReport\\Config::getByName($request->get('name'));\n         if (!$report) {\n             throw $this->createNotFoundException();\n@@ -519,4 +522,13 @@ public function downloadCsvAction(Request $request)\n \n         throw new FileNotFoundException(\"File \\\"$exportFile\\\" not found!\");\n     }\n+\n+    /**\n+     * @throws \\Exception\n+     */\n+    public function isValidConfigName(string $configName) {\n+        if(!preg_match('/^[a-zA-Z0-9_\\-]+$/', $configName)) {\n+            throw new \\Exception('The customer report name is invalid');\n+        }\n+    }\n }"
        },
        {
          "filename": "bundles/AdminBundle/Resources/public/js/pimcore/report/custom/panel.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -206,7 +206,8 @@ pimcore.report.custom.panel = Class.create({\n     },\n \n     deleteField: function (tree, record) {\n-        Ext.Msg.confirm(t('delete'), sprintf(t('delete_message_advanced'), t('portlet_customreport'), record.data.text), function (btn) {\n+        const decodedName = Ext.util.Format.htmlDecode(record.data.text);\n+        Ext.Msg.confirm(t('delete'), sprintf(t('delete_message_advanced'), t('portlet_customreport'), Ext.util.Format.htmlEncode(decodedName)), function (btn) {\n             if (btn == 'yes') {\n                 Ext.Ajax.request({\n                     url: Routing.generate('pimcore_admin_reports_customreport_delete'),"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a3c7544d81bc772dc53f7ea0e99c6eac37c59114",
            "date": "2025-01-14T13:54:55Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "081e73f14983613ed43e6ea9e40450063392b289",
            "date": "2025-01-14T13:53:00Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "bf1081a2c9a7de74ca965aa802ea07ac4e022b28",
            "date": "2025-01-14T13:52:39Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "7a232e673e963325610264dc760d8d0dbdd7a0d1",
            "date": "2025-01-14T13:52:17Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "cf380cd040bdbb134e62dd1fa9cb3954def8a595",
            "date": "2025-01-14T13:50:40Z",
            "author_login": "herbertroth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - DOM in GitHub repository pimcore/pimcore prior to 10.5.21.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-10T06:15:15.007",
    "last_modified": "2024-11-21T07:58:56.087",
    "fix_date": "2023-04-25T09:11:18Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1a5e6c65-2c5e-4617-9411-5b47a7e743a6",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/c36ef54ce33f7b5e74b7b0ab9eabfed47c018fc7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1a5e6c65-2c5e-4617-9411-5b47a7e743a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.948047",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-14T09:15:55Z",
    "pushed_at": "2025-01-13T14:41:25Z",
    "size": 524212,
    "stars": 3455,
    "forks": 1448,
    "open_issues": 480,
    "watchers": 3455,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "11.x",
      "11.5"
    ],
    "languages": {
      "PHP": 6722485,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 619,
      "avg_commits_per_week": 11.903846153846153,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:01:17.566039"
  }
}