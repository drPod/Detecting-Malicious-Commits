{
  "cve_id": "CVE-2023-26140",
  "github_data": {
    "repository": "excalidraw/excalidraw",
    "fix_commit": "b33fa6d6f64d27adc3a47b25c0aa55711740d0af",
    "related_commits": [
      "b33fa6d6f64d27adc3a47b25c0aa55711740d0af",
      "b33fa6d6f64d27adc3a47b25c0aa55711740d0af"
    ],
    "patch_url": "https://github.com/excalidraw/excalidraw/commit/b33fa6d6f64d27adc3a47b25c0aa55711740d0af.patch",
    "fix_commit_details": {
      "sha": "b33fa6d6f64d27adc3a47b25c0aa55711740d0af",
      "commit_date": "2023-06-29T10:14:42Z",
      "author": {
        "login": "vjeux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: stronger enforcement of normalizeLink (#6728)",
        "length": 98,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 96,
        "additions": 72,
        "deletions": 24
      },
      "files": [
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -19,6 +19,7 @@\n     ]\n   },\n   \"dependencies\": {\n+    \"@braintree/sanitize-url\": \"6.0.2\",\n     \"@excalidraw/random-username\": \"1.0.0\",\n     \"@radix-ui/react-popover\": \"1.0.3\",\n     \"@radix-ui/react-tabs\": \"1.0.2\","
        },
        {
          "filename": "src/components/App.tsx",
          "status": "modified",
          "additions": 11,
          "deletions": 5,
          "patch": "@@ -291,13 +291,12 @@ import {\n } from \"../element/textElement\";\n import { isHittingElementNotConsideringBoundingBox } from \"../element/collision\";\n import {\n-  normalizeLink,\n   showHyperlinkTooltip,\n   hideHyperlinkToolip,\n   Hyperlink,\n   isPointHittingLinkIcon,\n-  isLocalLink,\n } from \"../element/Hyperlink\";\n+import { isLocalLink, normalizeLink } from \"../data/url\";\n import { shouldShowBoundingBox } from \"../element/transformHandles\";\n import { actionUnlockAllElements } from \"../actions/actionElementLock\";\n import { Fonts } from \"../scene/Fonts\";\n@@ -3352,20 +3351,27 @@ class App extends React.Component<AppProps, AppState> {\n       this.device.isMobile,\n     );\n     if (lastPointerDownHittingLinkIcon && lastPointerUpHittingLinkIcon) {\n-      const url = this.hitLinkElement.link;\n+      let url = this.hitLinkElement.link;\n       if (url) {\n+        url = normalizeLink(url);\n         let customEvent;\n         if (this.props.onLinkOpen) {\n           customEvent = wrapEvent(EVENT.EXCALIDRAW_LINK, event.nativeEvent);\n-          this.props.onLinkOpen(this.hitLinkElement, customEvent);\n+          this.props.onLinkOpen(\n+            {\n+              ...this.hitLinkElement,\n+              link: url,\n+            },\n+            customEvent,\n+          );\n         }\n         if (!customEvent?.defaultPrevented) {\n           const target = isLocalLink(url) ? \"_self\" : \"_blank\";\n           const newWindow = window.open(undefined, target);\n           // https://mathiasbynens.github.io/rel-noopener/\n           if (newWindow) {\n             newWindow.opener = null;\n-            newWindow.location = normalizeLink(url);\n+            newWindow.location = url;\n           }\n         }\n       }"
        },
        {
          "filename": "src/data/restore.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -41,6 +41,7 @@ import {\n   measureBaseline,\n } from \"../element/textElement\";\n import { COLOR_PALETTE } from \"../colors\";\n+import { normalizeLink } from \"./url\";\n \n type RestoredAppState = Omit<\n   AppState,\n@@ -142,7 +143,7 @@ const restoreElementWithProperties = <\n       ? element.boundElementIds.map((id) => ({ type: \"arrow\", id }))\n       : element.boundElements ?? [],\n     updated: element.updated ?? getUpdatedTimestamp(),\n-    link: element.link ?? null,\n+    link: element.link ? normalizeLink(element.link) : null,\n     locked: element.locked ?? false,\n   };\n "
        },
        {
          "filename": "src/data/url.test.tsx",
          "status": "added",
          "additions": 30,
          "deletions": 0,
          "patch": "@@ -0,0 +1,30 @@\n+import { normalizeLink } from \"./url\";\n+\n+describe(\"normalizeLink\", () => {\n+  // NOTE not an extensive XSS test suite, just to check if we're not\n+  // regressing in sanitization\n+  it(\"should sanitize links\", () => {\n+    expect(\n+      // eslint-disable-next-line no-script-url\n+      normalizeLink(`javascript://%0aalert(document.domain)`).startsWith(\n+        // eslint-disable-next-line no-script-url\n+        `javascript:`,\n+      ),\n+    ).toBe(false);\n+    expect(normalizeLink(\"ola\")).toBe(\"ola\");\n+    expect(normalizeLink(\" ola\")).toBe(\"ola\");\n+\n+    expect(normalizeLink(\"https://www.excalidraw.com\")).toBe(\n+      \"https://www.excalidraw.com\",\n+    );\n+    expect(normalizeLink(\"www.excalidraw.com\")).toBe(\"www.excalidraw.com\");\n+    expect(normalizeLink(\"/ola\")).toBe(\"/ola\");\n+    expect(normalizeLink(\"http://test\")).toBe(\"http://test\");\n+    expect(normalizeLink(\"ftp://test\")).toBe(\"ftp://test\");\n+    expect(normalizeLink(\"file://\")).toBe(\"file://\");\n+    expect(normalizeLink(\"file://\")).toBe(\"file://\");\n+    expect(normalizeLink(\"[test](https://test)\")).toBe(\"[test](https://test)\");\n+    expect(normalizeLink(\"[[test]]\")).toBe(\"[[test]]\");\n+    expect(normalizeLink(\"<test>\")).toBe(\"<test>\");\n+  });\n+});"
        },
        {
          "filename": "src/data/url.ts",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+import { sanitizeUrl } from \"@braintree/sanitize-url\";\n+\n+export const normalizeLink = (link: string) => {\n+  return sanitizeUrl(link);\n+};\n+\n+export const isLocalLink = (link: string | null) => {\n+  return !!(link?.includes(location.origin) || link?.startsWith(\"/\"));\n+};"
        },
        {
          "filename": "src/element/Hyperlink.tsx",
          "status": "modified",
          "additions": 9,
          "deletions": 17,
          "patch": "@@ -29,6 +29,7 @@ import { getTooltipDiv, updateTooltipPosition } from \"../components/Tooltip\";\n import { getSelectedElements } from \"../scene\";\n import { isPointHittingElementBoundingBox } from \"./collision\";\n import { getElementAbsoluteCoords } from \"./\";\n+import { isLocalLink, normalizeLink } from \"../data/url\";\n \n import \"./Hyperlink.scss\";\n import { trackEvent } from \"../analytics\";\n@@ -166,7 +167,7 @@ export const Hyperlink = ({\n         />\n       ) : (\n         <a\n-          href={element.link || \"\"}\n+          href={normalizeLink(element.link || \"\")}\n           className={clsx(\"excalidraw-hyperlinkContainer-link\", {\n             \"d-none\": isEditing,\n           })}\n@@ -177,7 +178,13 @@ export const Hyperlink = ({\n                 EVENT.EXCALIDRAW_LINK,\n                 event.nativeEvent,\n               );\n-              onLinkOpen(element, customEvent);\n+              onLinkOpen(\n+                {\n+                  ...element,\n+                  link: normalizeLink(element.link),\n+                },\n+                customEvent,\n+              );\n               if (customEvent.defaultPrevented) {\n                 event.preventDefault();\n               }\n@@ -231,21 +238,6 @@ const getCoordsForPopover = (\n   return { x, y };\n };\n \n-export const normalizeLink = (link: string) => {\n-  link = link.trim();\n-  if (link) {\n-    // prefix with protocol if not fully-qualified\n-    if (!link.includes(\"://\") && !/^[[\\\\/]/.test(link)) {\n-      link = `https://${link}`;\n-    }\n-  }\n-  return link;\n-};\n-\n-export const isLocalLink = (link: string | null) => {\n-  return !!(link?.includes(location.origin) || link?.startsWith(\"/\"));\n-};\n-\n export const actionLink = register({\n   name: \"hyperlink\",\n   perform: (elements, appState) => {"
        },
        {
          "filename": "src/packages/excalidraw/CHANGELOG.md",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@ Please add the latest change on the top under the correct section.\n \n ### Features\n \n+- Properly sanitize element `link` urls. [#6728](https://github.com/excalidraw/excalidraw/pull/6728).\n - Sidebar component now supports tabs \u2014 for more detailed description of new behavior and breaking changes, see the linked PR. [#6213](https://github.com/excalidraw/excalidraw/pull/6213)\n - Exposed `DefaultSidebar` component to allow modifying the default sidebar, such as adding custom tabs to it. [#6213](https://github.com/excalidraw/excalidraw/pull/6213)\n "
        },
        {
          "filename": "src/packages/excalidraw/index.tsx",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -247,3 +247,5 @@ export { WelcomeScreen };\n export { LiveCollaborationTrigger };\n \n export { DefaultSidebar } from \"../../components/DefaultSidebar\";\n+\n+export { normalizeLink } from \"../../data/url\";"
        },
        {
          "filename": "src/renderer/renderElement.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -50,6 +50,7 @@ import {\n } from \"../element/textElement\";\n import { LinearElementEditor } from \"../element/linearElementEditor\";\n import { getContainingFrame } from \"../frame\";\n+import { normalizeLink } from \"../data/url\";\n \n // using a stronger invert (100% vs our regular 93%) and saturate\n // as a temp hack to make images in dark theme look closer to original\n@@ -1203,7 +1204,7 @@ export const renderElementToSvg = (\n   // if the element has a link, create an anchor tag and make that the new root\n   if (element.link) {\n     const anchorTag = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"a\");\n-    anchorTag.setAttribute(\"href\", element.link);\n+    anchorTag.setAttribute(\"href\", normalizeLink(element.link));\n     root.appendChild(anchorTag);\n     root = anchorTag;\n   }"
        },
        {
          "filename": "yarn.lock",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1086,6 +1086,11 @@\n   resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\n   integrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n \n+\"@braintree/sanitize-url@6.0.2\":\n+  version \"6.0.2\"\n+  resolved \"https://registry.yarnpkg.com/@braintree/sanitize-url/-/sanitize-url-6.0.2.tgz#6110f918d273fe2af8ea1c4398a88774bb9fc12f\"\n+  integrity sha512-Tbsj02wXCbqGmzdnXNk0SOF19ChhRU70BsroIi4Pm6Ehp56in6vch94mfbdQ17DozxkL3BAVjbZ4Qc1a0HFRAg==\n+\n \"@csstools/normalize.css@*\":\n   version \"12.0.0\"\n   resolved \"https://registry.yarnpkg.com/@csstools/normalize.css/-/normalize.css-12.0.0.tgz#a9583a75c3f150667771f30b60d9f059473e62c4\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 6,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ae6bee340329850fdeacb4f41a275a435a9edce8",
            "date": "2025-01-14T20:08:25Z",
            "author_login": "dwelle"
          },
          {
            "sha": "46f42ef8d79a09976a99dc138878b0f409ba40a9",
            "date": "2025-01-14T18:36:47Z",
            "author_login": "dwelle"
          },
          {
            "sha": "00b5b0a0ca556a527feb3f768fbec5842df86549",
            "date": "2025-01-13T15:03:56Z",
            "author_login": "ryan-di"
          },
          {
            "sha": "c92f3bebf5fc4e9a1512be368f05d800ae1b92f7",
            "date": "2025-01-09T13:26:12Z",
            "author_login": "yongjoon-km"
          },
          {
            "sha": "2ac55067cd412650178d3276bbec593f6ecccf34",
            "date": "2025-01-07T11:22:36Z",
            "author_login": "Mrazator"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Versions of the package @excalidraw/excalidraw from 0.0.0 are vulnerable to Cross-site Scripting (XSS) via embedded links in whiteboard objects due to improper input sanitization.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-08-16T05:15:09.810",
    "last_modified": "2024-11-21T07:50:51.643",
    "fix_date": "2023-06-29T10:14:42Z"
  },
  "references": [
    {
      "url": "https://github.com/excalidraw/excalidraw/commit/b33fa6d6f64d27adc3a47b25c0aa55711740d0af",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/excalidraw/excalidraw/pull/6728",
      "source": "report@snyk.io",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-EXCALIDRAWEXCALIDRAW-5841658",
      "source": "report@snyk.io",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/excalidraw/excalidraw/commit/b33fa6d6f64d27adc3a47b25c0aa55711740d0af",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/excalidraw/excalidraw/pull/6728",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-EXCALIDRAWEXCALIDRAW-5841658",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:06.435402",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "excalidraw",
    "owner": "excalidraw",
    "created_at": "2020-01-02T01:04:43Z",
    "updated_at": "2025-01-14T21:43:45Z",
    "pushed_at": "2025-01-14T20:21:44Z",
    "size": 87398,
    "stars": 89776,
    "forks": 8563,
    "open_issues": 2002,
    "watchers": 89776,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 5613358,
      "SCSS": 157685,
      "MDX": 129906,
      "JavaScript": 92339,
      "HTML": 8004,
      "CSS": 1455,
      "Dockerfile": 556,
      "Shell": 29
    },
    "commit_activity": {
      "total_commits_last_year": 294,
      "avg_commits_per_week": 5.653846153846154,
      "days_active_last_year": 151
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:48:58.368285"
  }
}