{
  "cve_id": "CVE-2023-2615",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "7a799399e6843cd049e85da27ceb75b78505317f",
    "related_commits": [
      "7a799399e6843cd049e85da27ceb75b78505317f",
      "7a799399e6843cd049e85da27ceb75b78505317f"
    ],
    "patch_url": "https://github.com/pimcore/pimcore/commit/7a799399e6843cd049e85da27ceb75b78505317f.patch",
    "fix_commit_details": {
      "sha": "7a799399e6843cd049e85da27ceb75b78505317f",
      "commit_date": "2023-04-19T12:14:18Z",
      "author": {
        "login": "Corepex",
        "type": "User",
        "stats": {
          "total_commits": 123,
          "average_weekly_commits": 0.24453280318091453,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 30
        }
      },
      "commit_message": {
        "title": "[Security] Fix xss in predefined properties panel (#14943)",
        "length": 284,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 21,
        "deletions": 16
      },
      "files": [
        {
          "filename": "bundles/AdminBundle/Resources/public/js/pimcore/settings/properties/predefined.js",
          "status": "modified",
          "additions": 15,
          "deletions": 11,
          "patch": "@@ -57,8 +57,8 @@ pimcore.settings.properties.predefined = Class.create({\n \n         this.store = pimcore.helpers.grid.buildDefaultStore(\n             url,\n-            ['id',\n-\n+            [\n+                'id',\n                 {name: 'name', allowBlank: false},'description',\n                 {name: 'key', allowBlank: false},\n                 {name: 'type', allowBlank: false}, 'data', 'config',\n@@ -108,25 +108,25 @@ pimcore.settings.properties.predefined = Class.create({\n \n \n         var propertiesColumns = [\n-            {text: t(\"name\"), flex: 100, sortable: true, dataIndex: 'name', editor: new Ext.form.TextField({})},\n-            {text: t(\"description\"), sortable: true, dataIndex: 'description', editor: new Ext.form.TextArea({}),\n+            {text: t(\"name\"), flex: 100, sortable: true, dataIndex: 'name', editor: new Ext.form.TextField({listeners: {'change': pimcore.helpers.htmlEncodeTextField}})},\n+            {text: t(\"description\"), sortable: true, dataIndex: 'description', editor: new Ext.form.TextArea({listeners: {'change': pimcore.helpers.htmlEncodeTextField}}),\n                 renderer: function (value, metaData, record, rowIndex, colIndex, store) {\n                     if(empty(value)) {\n                         return \"\";\n                     }\n                     return nl2br(Ext.util.Format.htmlEncode(value));\n                }\n             },\n-            {text: t(\"key\"), flex: 50, sortable: true, dataIndex: 'key', editor: new Ext.form.TextField({})},\n+            {text: t(\"key\"), flex: 50, sortable: true, dataIndex: 'key', editor: new Ext.form.TextField({listeners: {'change': pimcore.helpers.htmlEncodeTextField}})},\n             {text: t(\"type\"), flex: 50, sortable: true, dataIndex: 'type',\n                 editor: new Ext.form.ComboBox({\n                     triggerAction: 'all',\n                     editable: false,\n                     store: [\"text\",\"document\",\"asset\",\"object\",\"bool\",\"select\"]\n \n             })},\n-            {text: t(\"value\"), flex: 50, sortable: true, dataIndex: 'data', editor: new Ext.form.TextField({})},\n-            {text: t(\"configuration\"), flex: 50, sortable: false, dataIndex: 'config', editor: new Ext.form.TextField({})},\n+            {text: t(\"value\"), flex: 50, sortable: true, dataIndex: 'data', editor: new Ext.form.TextField({listeners: {'change': pimcore.helpers.htmlEncodeTextField}})},\n+            {text: t(\"configuration\"), flex: 50, sortable: false, dataIndex: 'config', editor: new Ext.form.TextField({listeners: {'change': pimcore.helpers.htmlEncodeTextField}})},\n             {text: t(\"content_type\"), flex: 50, sortable: true, dataIndex: 'ctype',\n                 editor: new Ext.ux.form.MultiSelect({\n                     store: new Ext.data.ArrayStore({\n@@ -165,11 +165,15 @@ pimcore.settings.properties.predefined = Class.create({\n                     tooltip: t('delete'),\n                     handler: function (grid, rowIndex) {\n                         let data = grid.getStore().getAt(rowIndex);\n-                        pimcore.helpers.deleteConfirm(t('predefined_properties'),\n-                            Ext.util.Format.htmlEncode(data.data.name),\n+                        const decodedName = Ext.util.Format.htmlDecode(data.data.name);\n+                        \n+                        pimcore.helpers.deleteConfirm(\n+                            t('predefined_properties'),\n+                            Ext.util.Format.htmlEncode(decodedName),\n                             function () {\n-                            grid.getStore().removeAt(rowIndex);\n-                        }.bind(this));\n+                                grid.getStore().removeAt(rowIndex);\n+                            }.bind(this)\n+                        );\n                     }.bind(this)\n                 }]\n             },{"
        },
        {
          "filename": "models/Property/Predefined.php",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -16,6 +16,7 @@\n namespace Pimcore\\Model\\Property;\n \n use Pimcore\\Model;\n+use Pimcore\\Security\\SecurityHelper;\n \n /**\n  * @internal\n@@ -177,7 +178,7 @@ public function getData()\n      */\n     public function setKey($key)\n     {\n-        $this->key = $key;\n+        $this->key = SecurityHelper::convertHtmlSpecialChars($key);\n \n         return $this;\n     }\n@@ -189,7 +190,7 @@ public function setKey($key)\n      */\n     public function setName($name)\n     {\n-        $this->name = $name;\n+        $this->name = SecurityHelper::convertHtmlSpecialChars($name);\n \n         return $this;\n     }\n@@ -213,7 +214,7 @@ public function setType($type)\n      */\n     public function setData($data)\n     {\n-        $this->data = $data;\n+        $this->data = SecurityHelper::convertHtmlSpecialChars($data);\n \n         return $this;\n     }\n@@ -253,7 +254,7 @@ public function getConfig()\n      */\n     public function setConfig($config)\n     {\n-        $this->config = $config;\n+        $this->config = SecurityHelper::convertHtmlSpecialChars($config);\n \n         return $this;\n     }\n@@ -305,7 +306,7 @@ public function setInheritable($inheritable)\n      */\n     public function setDescription($description)\n     {\n-        $this->description = $description;\n+        $this->description = SecurityHelper::convertHtmlSpecialChars($description);\n \n         return $this;\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a3c7544d81bc772dc53f7ea0e99c6eac37c59114",
            "date": "2025-01-14T13:54:55Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "081e73f14983613ed43e6ea9e40450063392b289",
            "date": "2025-01-14T13:53:00Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "bf1081a2c9a7de74ca965aa802ea07ac4e022b28",
            "date": "2025-01-14T13:52:39Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "7a232e673e963325610264dc760d8d0dbdd7a0d1",
            "date": "2025-01-14T13:52:17Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "cf380cd040bdbb134e62dd1fa9cb3954def8a595",
            "date": "2025-01-14T13:50:40Z",
            "author_login": "herbertroth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository pimcore/pimcore prior to 10.5.21.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-10T06:15:16.380",
    "last_modified": "2024-11-21T07:58:56.197",
    "fix_date": "2023-04-19T12:14:18Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/7a799399e6843cd049e85da27ceb75b78505317f",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af9c360a-87f8-4e97-a24b-6db675ee942a",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/7a799399e6843cd049e85da27ceb75b78505317f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/af9c360a-87f8-4e97-a24b-6db675ee942a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.948198",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-14T09:15:55Z",
    "pushed_at": "2025-01-13T14:41:25Z",
    "size": 524212,
    "stars": 3455,
    "forks": 1448,
    "open_issues": 480,
    "watchers": 3455,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "11.x",
      "11.5"
    ],
    "languages": {
      "PHP": 6722485,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 619,
      "avg_commits_per_week": 11.903846153846153,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:01:17.566039"
  }
}