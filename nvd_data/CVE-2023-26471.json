{
  "cve_id": "CVE-2023-26471",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "00532d9f1404287cf3ec3a05056640d809516006",
    "related_commits": [
      "00532d9f1404287cf3ec3a05056640d809516006",
      "00532d9f1404287cf3ec3a05056640d809516006"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/00532d9f1404287cf3ec3a05056640d809516006.patch",
    "fix_commit_details": {
      "sha": "00532d9f1404287cf3ec3a05056640d809516006",
      "commit_date": "2022-10-18T09:33:04Z",
      "author": {
        "login": "tmortagne",
        "type": "User",
        "stats": {
          "total_commits": 12783,
          "average_weekly_commits": 13.39937106918239,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 847
        }
      },
      "commit_message": {
        "title": "XWIKI-20234: It's possible to execute anything with superadmin right through comments and async macro",
        "length": 101,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 155,
        "additions": 151,
        "deletions": 4
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-async/xwiki-platform-rendering-async-api/src/main/java/org/xwiki/rendering/async/internal/block/BlockAsyncRendererConfiguration.java",
          "status": "modified",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -61,6 +61,8 @@ public class BlockAsyncRendererConfiguration extends AsyncRendererConfiguration\n \n     private boolean inline;\n \n+    private boolean resricted;\n+\n     private BlockAsyncRendererDecorator decorator;\n \n     private Set<EntityReference> references;\n@@ -238,6 +240,28 @@ public void setInline(boolean inline)\n         this.inline = inline;\n     }\n \n+    /**\n+     * @return indicator of whether the transformation context is restricted or not\n+     * @since 14.9\n+     * @since 14.4.6\n+     * @since 13.10.10\n+     */\n+    public boolean isResricted()\n+    {\n+        return this.resricted;\n+    }\n+\n+    /**\n+     * @param resricted indicator of whether the transformation context is restricted or not\n+     * @since 14.9\n+     * @since 14.4.6\n+     * @since 13.10.10\n+     */\n+    public void setResricted(boolean resricted)\n+    {\n+        this.resricted = resricted;\n+    }\n+\n     /**\n      * @return the decorator\n      */"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-async/xwiki-platform-rendering-async-api/src/main/java/org/xwiki/rendering/async/internal/block/DefaultBlockAsyncRenderer.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -147,7 +147,7 @@ public Block execute(boolean async, boolean cached) throws RenderingException\n     private Block tranform(XDOM xdom, Block block) throws RenderingException\n     {\n         TransformationContext transformationContext =\n-            new TransformationContext(xdom, this.configuration.getDefaultSyntax(), false);\n+            new TransformationContext(xdom, this.configuration.getDefaultSyntax(), this.configuration.isResricted());\n         transformationContext.setTargetSyntax(this.configuration.getTargetSyntax());\n         transformationContext.setId(this.configuration.getTransformationId());\n "
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-async/xwiki-platform-rendering-async-macro/src/main/java/org/xwiki/rendering/async/internal/AbstractExecutedContentMacro.java",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -142,6 +142,9 @@ protected BlockAsyncRendererConfiguration createBlockAsyncRendererConfiguration(\n         // Set the transformation id\n         configuration.setTransformationId(context.getTransformationContext().getId());\n \n+        // Indicate if we are in a restricted mode\n+        configuration.setResricted(context.getTransformationContext().isRestricted());\n+\n         return configuration;\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-async/xwiki-platform-rendering-async-macro/src/test/java/org/xwiki/rendering/async/AsyncMacroTest.java",
          "status": "added",
          "additions": 107,
          "deletions": 0,
          "patch": "@@ -0,0 +1,107 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.rendering.async;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.xwiki.rendering.async.internal.AsyncMacro;\n+import org.xwiki.rendering.async.internal.block.BlockAsyncRendererConfiguration;\n+import org.xwiki.rendering.async.internal.block.BlockAsyncRendererExecutor;\n+import org.xwiki.rendering.block.MacroBlock;\n+import org.xwiki.rendering.block.WordBlock;\n+import org.xwiki.rendering.block.XDOM;\n+import org.xwiki.rendering.listener.MetaData;\n+import org.xwiki.rendering.macro.MacroContentParser;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.rendering.transformation.MacroTransformationContext;\n+import org.xwiki.test.TestEnvironment;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.junit5.mockito.ComponentTest;\n+import org.xwiki.test.junit5.mockito.InjectComponentManager;\n+import org.xwiki.test.junit5.mockito.InjectMockComponents;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.test.mockito.MockitoComponentManager;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.ArgumentMatchers.same;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Unit tests for {@link AsyncMacro}.\n+ *\n+ * @version $Id$\n+ * @since 8.3RC1\n+ */\n+@ComponentTest\n+@ComponentList(TestEnvironment.class)\n+class AsyncMacroTest\n+{\n+    @InjectMockComponents\n+    private AsyncMacro macro;\n+\n+    @InjectComponentManager\n+    private MockitoComponentManager componentManager;\n+\n+    @MockComponent\n+    private MacroContentParser parser;\n+\n+    private BlockAsyncRendererExecutor executor;\n+\n+    @BeforeEach\n+    public void beforeEach() throws Exception\n+    {\n+        this.executor = this.componentManager.getInstance(BlockAsyncRendererExecutor.class);\n+    }\n+\n+    @Test\n+    void executeInRestrictedMode() throws Exception\n+    {\n+        MacroBlock macroBlock = new MacroBlock(\"async\", Collections.<String, String>emptyMap(), false);\n+        MetaData metadata = new MetaData();\n+        metadata.addMetaData(MetaData.SOURCE, \"source\");\n+        XDOM pageXDOM = new XDOM(Arrays.asList(macroBlock), metadata);\n+        MacroTransformationContext macroContext = new MacroTransformationContext();\n+        macroContext.setSyntax(Syntax.XWIKI_2_0);\n+        macroContext.setCurrentMacroBlock(macroBlock);\n+        macroContext.setXDOM(pageXDOM);\n+        macroContext.getTransformationContext().setRestricted(true);\n+\n+        XDOM contentXDOM = new XDOM(Arrays.asList(new WordBlock(\"test\")), metadata);\n+        when(this.parser.parse(eq(\"\"), same(macroContext), eq(false), eq(false))).thenReturn(contentXDOM);\n+\n+        when(this.executor.execute(any())).thenReturn(new WordBlock(\"result\"));\n+\n+        this.macro.execute(new AsyncMacroParameters(), \"\", macroContext);\n+\n+        ArgumentCaptor<BlockAsyncRendererConfiguration> configurationCaptor =\n+            ArgumentCaptor.forClass(BlockAsyncRendererConfiguration.class);\n+        verify(this.executor).execute(configurationCaptor.capture());\n+\n+        BlockAsyncRendererConfiguration configuration = configurationCaptor.getValue();\n+        assertTrue(configuration.isResricted());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-async/xwiki-platform-rendering-async-macro/src/test/java/org/xwiki/rendering/async/IntegrationTests.java",
          "status": "renamed",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -17,7 +17,7 @@\n  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n-package org.xwiki.rendering.macro.box;\n+package org.xwiki.rendering.async;\n \n import java.util.List;\n \n@@ -33,7 +33,6 @@\n import org.xwiki.model.reference.EntityReference;\n import org.xwiki.observation.ObservationManager;\n import org.xwiki.observation.event.Event;\n-import org.xwiki.rendering.async.AsyncContext;\n import org.xwiki.rendering.async.internal.AsyncRendererJobRequest;\n import org.xwiki.rendering.async.internal.AsyncRendererJobStatus;\n import org.xwiki.rendering.test.integration.RenderingTestSuite;"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-macros/xwiki-platform-rendering-macro-context/src/test/java/org/xwiki/rendering/internal/macro/context/ContextMacroTest.java",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -162,6 +162,17 @@ void executeWithReferencedDocumentNotViewableByTheAuthor() throws Exception\n \n     @Test\n     void executeOk() throws Exception\n+    {\n+        execute(false);\n+    }\n+\n+    @Test\n+    void executeInRestrictedMode() throws Exception\n+    {\n+        execute(true);\n+    }\n+\n+    private void execute(boolean restricted) throws Exception\n     {\n         MacroBlock macroBlock = new MacroBlock(\"context\", Collections.<String, String>emptyMap(), false);\n         MetaData metadata = new MetaData();\n@@ -171,12 +182,14 @@ void executeOk() throws Exception\n         macroContext.setSyntax(Syntax.XWIKI_2_0);\n         macroContext.setCurrentMacroBlock(macroBlock);\n         macroContext.setXDOM(pageXDOM);\n+        macroContext.getTransformationContext().setRestricted(restricted);\n \n         DocumentModelBridge dmb = mock(DocumentModelBridge.class);\n         when(this.dab.getTranslatedDocumentInstance(TARGET_REFERENCE)).thenReturn(dmb);\n \n         XDOM contentXDOM = new XDOM(Arrays.asList(new WordBlock(\"test\")), metadata);\n-        when(this.parser.parse(eq(\"\"), same(macroContext), eq(false), any(MetaData.class), eq(false))).thenReturn(contentXDOM);\n+        when(this.parser.parse(eq(\"\"), same(macroContext), eq(false), any(MetaData.class), eq(false)))\n+            .thenReturn(contentXDOM);\n \n         ContextMacroParameters parameters = new ContextMacroParameters();\n         parameters.setDocument(\"target\");\n@@ -193,5 +206,6 @@ void executeOk() throws Exception\n         assertEquals(AUTHOR, configuration.getSecureAuthorReference());\n         assertEquals(SOURCE_REFERENCE, configuration.getSecureDocumentReference());\n         assertSame(pageXDOM, configuration.getXDOM());\n+        assertEquals(restricted, configuration.isResricted());\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 4,
        "max_directory_depth": 13
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-284",
    "description": "XWiki Platform is a generic wiki platform. Starting in version 11.6-rc-1, comments are supposed to be executed with the right of superadmin but in restricted mode (anything dangerous is disabled), but the async macro does not take into account the restricted mode. This means that any user with comment right can use the async macro to make it execute any wiki content with the right of superadmin. This has been patched in XWiki 14.9, 14.4.6, and 13.10.10. The only known workaround consists of applying a patch and rebuilding and redeploying `org.xwiki.platform:xwiki-platform-rendering-async-macro`.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-02T19:15:11.137",
    "last_modified": "2024-11-21T07:51:34.553",
    "fix_date": "2022-10-18T09:33:04Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/00532d9f1404287cf3ec3a05056640d809516006",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-9cqm-5wf7-wcj7",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20234",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/00532d9f1404287cf3ec3a05056640d809516006",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-9cqm-5wf7-wcj7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20234",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.796814",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}