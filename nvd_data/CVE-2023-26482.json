{
  "cve_id": "CVE-2023-26482",
  "github_data": {
    "repository": "nextcloud/server",
    "fix_commit": "5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60",
    "related_commits": [
      "5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60",
      "5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60"
    ],
    "patch_url": "https://github.com/nextcloud/server/commit/5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60.patch",
    "fix_commit_details": {
      "sha": "5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60",
      "commit_date": "2023-02-15T12:20:20Z",
      "author": {
        "login": "nickvergessen",
        "type": "User",
        "stats": {
          "total_commits": 5084,
          "average_weekly_commits": 6.654450261780105,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 493
        }
      },
      "commit_message": {
        "title": "Validate the scope when validating operations",
        "length": 98,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 126,
        "additions": 118,
        "deletions": 8
      },
      "files": [
        {
          "filename": "apps/workflowengine/lib/Manager.php",
          "status": "modified",
          "additions": 10,
          "deletions": 3,
          "patch": "@@ -310,7 +310,7 @@ public function addOperation(\n \t\tstring $entity,\n \t\tarray $events\n \t) {\n-\t\t$this->validateOperation($class, $name, $checks, $operation, $entity, $events);\n+\t\t$this->validateOperation($class, $name, $checks, $operation, $scope, $entity, $events);\n \n \t\t$this->connection->beginTransaction();\n \n@@ -383,7 +383,7 @@ public function updateOperation(\n \t\t\tthrow new \\DomainException('Target operation not within scope');\n \t\t};\n \t\t$row = $this->getOperation($id);\n-\t\t$this->validateOperation($row['class'], $name, $checks, $operation, $entity, $events);\n+\t\t$this->validateOperation($row['class'], $name, $checks, $operation, $scopeContext, $entity, $events);\n \n \t\t$checkIds = [];\n \t\ttry {\n@@ -483,9 +483,12 @@ protected function validateEvents(string $entity, array $events, IOperation $ope\n \t * @param string $name\n \t * @param array[] $checks\n \t * @param string $operation\n+\t * @param ScopeContext $scope\n+\t * @param string $entity\n+\t * @param array $events\n \t * @throws \\UnexpectedValueException\n \t */\n-\tpublic function validateOperation($class, $name, array $checks, $operation, string $entity, array $events) {\n+\tpublic function validateOperation($class, $name, array $checks, $operation, ScopeContext $scope, string $entity, array $events) {\n \t\ttry {\n \t\t\t/** @var IOperation $instance */\n \t\t\t$instance = $this->container->query($class);\n@@ -497,6 +500,10 @@ public function validateOperation($class, $name, array $checks, $operation, stri\n \t\t\tthrow new \\UnexpectedValueException($this->l->t('Operation %s is invalid', [$class]));\n \t\t}\n \n+\t\tif (!$instance->isAvailableForScope($scope->getScope())) {\n+\t\t\tthrow new \\UnexpectedValueException($this->l->t('Operation %s is invalid', [$class]));\n+\t\t}\n+\n \t\t$this->validateEvents($entity, $events, $instance);\n \n \t\tif (count($checks) === 0) {"
        },
        {
          "filename": "apps/workflowengine/tests/ManagerTest.php",
          "status": "modified",
          "additions": 108,
          "deletions": 5,
          "patch": "@@ -288,11 +288,20 @@ public function testUpdateOperation() {\n \t\t$userScope = $this->buildScope('jackie');\n \t\t$entity = File::class;\n \n+\t\t$operationMock = $this->createMock(IOperation::class);\n+\t\t$operationMock->expects($this->any())\n+\t\t\t->method('isAvailableForScope')\n+\t\t\t->withConsecutive(\n+\t\t\t\t[IManager::SCOPE_ADMIN],\n+\t\t\t\t[IManager::SCOPE_USER]\n+\t\t\t)\n+\t\t\t->willReturn(true);\n+\n \t\t$this->container->expects($this->any())\n \t\t\t->method('query')\n-\t\t\t->willReturnCallback(function ($class) {\n+\t\t\t->willReturnCallback(function ($class) use ($operationMock) {\n \t\t\t\tif (substr($class, -2) === 'Op') {\n-\t\t\t\t\treturn $this->createMock(IOperation::class);\n+\t\t\t\t\treturn $operationMock;\n \t\t\t\t} elseif ($class === File::class) {\n \t\t\t\t\treturn $this->getMockBuilder(File::class)\n \t\t\t\t\t\t->setConstructorArgs([\n@@ -453,6 +462,16 @@ public function testValidateOperationOK() {\n \t\t$entityMock = $this->createMock(IEntity::class);\n \t\t$eventEntityMock = $this->createMock(IEntityEvent::class);\n \t\t$checkMock = $this->createMock(ICheck::class);\n+\t\t$scopeMock = $this->createMock(ScopeContext::class);\n+\n+\t\t$scopeMock->expects($this->any())\n+\t\t\t->method('getScope')\n+\t\t\t->willReturn(IManager::SCOPE_ADMIN);\n+\n+\t\t$operationMock->expects($this->once())\n+\t\t\t->method('isAvailableForScope')\n+\t\t\t->with(IManager::SCOPE_ADMIN)\n+\t\t\t->willReturn(true);\n \n \t\t$operationMock->expects($this->once())\n \t\t\t->method('validateOperation')\n@@ -489,7 +508,7 @@ public function testValidateOperationOK() {\n \t\t\t\t}\n \t\t\t});\n \n-\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], 'operationData', IEntity::class, ['MyEvent']);\n+\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], 'operationData', $scopeMock, IEntity::class, ['MyEvent']);\n \t}\n \n \tpublic function testValidateOperationCheckInputLengthError() {\n@@ -503,6 +522,16 @@ public function testValidateOperationCheckInputLengthError() {\n \t\t$entityMock = $this->createMock(IEntity::class);\n \t\t$eventEntityMock = $this->createMock(IEntityEvent::class);\n \t\t$checkMock = $this->createMock(ICheck::class);\n+\t\t$scopeMock = $this->createMock(ScopeContext::class);\n+\n+\t\t$scopeMock->expects($this->any())\n+\t\t\t->method('getScope')\n+\t\t\t->willReturn(IManager::SCOPE_ADMIN);\n+\n+\t\t$operationMock->expects($this->once())\n+\t\t\t->method('isAvailableForScope')\n+\t\t\t->with(IManager::SCOPE_ADMIN)\n+\t\t\t->willReturn(true);\n \n \t\t$operationMock->expects($this->once())\n \t\t\t->method('validateOperation')\n@@ -540,7 +569,7 @@ public function testValidateOperationCheckInputLengthError() {\n \t\t\t});\n \n \t\ttry {\n-\t\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], 'operationData', IEntity::class, ['MyEvent']);\n+\t\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], 'operationData', $scopeMock, IEntity::class, ['MyEvent']);\n \t\t} catch (\\UnexpectedValueException $e) {\n \t\t\t$this->assertSame('The provided check value is too long', $e->getMessage());\n \t\t}\n@@ -558,6 +587,16 @@ public function testValidateOperationDataLengthError() {\n \t\t$entityMock = $this->createMock(IEntity::class);\n \t\t$eventEntityMock = $this->createMock(IEntityEvent::class);\n \t\t$checkMock = $this->createMock(ICheck::class);\n+\t\t$scopeMock = $this->createMock(ScopeContext::class);\n+\n+\t\t$scopeMock->expects($this->any())\n+\t\t\t->method('getScope')\n+\t\t\t->willReturn(IManager::SCOPE_ADMIN);\n+\n+\t\t$operationMock->expects($this->once())\n+\t\t\t->method('isAvailableForScope')\n+\t\t\t->with(IManager::SCOPE_ADMIN)\n+\t\t\t->willReturn(true);\n \n \t\t$operationMock->expects($this->never())\n \t\t\t->method('validateOperation');\n@@ -594,9 +633,73 @@ public function testValidateOperationDataLengthError() {\n \t\t\t});\n \n \t\ttry {\n-\t\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], $operationData, IEntity::class, ['MyEvent']);\n+\t\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], $operationData, $scopeMock, IEntity::class, ['MyEvent']);\n \t\t} catch (\\UnexpectedValueException $e) {\n \t\t\t$this->assertSame('The provided operation data is too long', $e->getMessage());\n \t\t}\n \t}\n+\n+\tpublic function testValidateOperationScopeNotAvailable() {\n+\t\t$check = [\n+\t\t\t'class' => ICheck::class,\n+\t\t\t'operator' => 'is',\n+\t\t\t'value' => 'barfoo',\n+\t\t];\n+\t\t$operationData = str_pad('', IManager::MAX_OPERATION_VALUE_BYTES + 1, 'FooBar');\n+\n+\t\t$operationMock = $this->createMock(IOperation::class);\n+\t\t$entityMock = $this->createMock(IEntity::class);\n+\t\t$eventEntityMock = $this->createMock(IEntityEvent::class);\n+\t\t$checkMock = $this->createMock(ICheck::class);\n+\t\t$scopeMock = $this->createMock(ScopeContext::class);\n+\n+\t\t$scopeMock->expects($this->any())\n+\t\t\t->method('getScope')\n+\t\t\t->willReturn(IManager::SCOPE_ADMIN);\n+\n+\t\t$operationMock->expects($this->once())\n+\t\t\t->method('isAvailableForScope')\n+\t\t\t->with(IManager::SCOPE_ADMIN)\n+\t\t\t->willReturn(false);\n+\n+\t\t$operationMock->expects($this->never())\n+\t\t\t->method('validateOperation');\n+\n+\t\t$entityMock->expects($this->any())\n+\t\t\t->method('getEvents')\n+\t\t\t->willReturn([$eventEntityMock]);\n+\n+\t\t$eventEntityMock->expects($this->any())\n+\t\t\t->method('getEventName')\n+\t\t\t->willReturn('MyEvent');\n+\n+\t\t$checkMock->expects($this->any())\n+\t\t\t->method('supportedEntities')\n+\t\t\t->willReturn([IEntity::class]);\n+\t\t$checkMock->expects($this->never())\n+\t\t\t->method('validateCheck');\n+\n+\t\t$this->container->expects($this->any())\n+\t\t\t->method('query')\n+\t\t\t->willReturnCallback(function ($className) use ($operationMock, $entityMock, $eventEntityMock, $checkMock) {\n+\t\t\t\tswitch ($className) {\n+\t\t\t\t\tcase IOperation::class:\n+\t\t\t\t\t\treturn $operationMock;\n+\t\t\t\t\tcase IEntity::class:\n+\t\t\t\t\t\treturn $entityMock;\n+\t\t\t\t\tcase IEntityEvent::class:\n+\t\t\t\t\t\treturn $eventEntityMock;\n+\t\t\t\t\tcase ICheck::class:\n+\t\t\t\t\t\treturn $checkMock;\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\treturn $this->createMock($className);\n+\t\t\t\t}\n+\t\t\t});\n+\n+\t\ttry {\n+\t\t\t$this->manager->validateOperation(IOperation::class, 'test', [$check], $operationData, $scopeMock, IEntity::class, ['MyEvent']);\n+\t\t} catch (\\UnexpectedValueException $e) {\n+\t\t\t$this->assertSame('Operation OCP\\WorkflowEngine\\IOperation is invalid', $e->getMessage());\n+\t\t}\n+\t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9cb57a4c68cd01e1435a1a474a601b0c3e60dc9a",
            "date": "2025-01-14T14:45:22Z",
            "author_login": "skjnldsv"
          },
          {
            "sha": "7993ab9453894fb7690d6ad74352810a577a857c",
            "date": "2025-01-14T14:27:01Z",
            "author_login": "skjnldsv"
          },
          {
            "sha": "40dd2a93bd176ea37151fa238130a1d2c4ff3370",
            "date": "2025-01-14T12:13:50Z",
            "author_login": "st3iny"
          },
          {
            "sha": "0bb7be28f0cd7586b445cc3af1d7a18c7b916d3d",
            "date": "2025-01-13T09:52:16Z",
            "author_login": "st3iny"
          },
          {
            "sha": "d4b862e513d9b548be11b55cf490d56e7f57461a",
            "date": "2025-01-14T11:00:04Z",
            "author_login": "icewind1991"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "Nextcloud server is an open source home cloud implementation. In affected versions a missing scope validation allowed users to create workflows which are designed to be only available for administrators. Some workflows are designed to be RCE by invoking defined scripts, in order to generate PDFs, invoking webhooks or running scripts on the server. Due to this combination depending on the available apps the issue can result in a RCE at the end. It is recommended that the Nextcloud Server is upgraded to 24.0.10 or 25.0.4. Users unable to upgrade should disable app `workflow_scripts` and `workflow_pdf_converter` as a mitigation.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-30T19:15:06.523",
    "last_modified": "2024-11-21T07:51:36.513",
    "fix_date": "2023-02-15T12:20:20Z"
  },
  "references": [
    {
      "url": "https://github.com/nextcloud/security-advisories/security/advisories/GHSA-h3c9-cmh8-7qpj",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/nextcloud/server/commit/5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/nextcloud/security-advisories/security/advisories/GHSA-h3c9-cmh8-7qpj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/nextcloud/server/commit/5a06b50b10cc9278bbe68bbf897a0c4aeb0c4e60",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.026974",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "server",
    "owner": "nextcloud",
    "created_at": "2016-06-02T07:44:14Z",
    "updated_at": "2025-01-14T12:13:57Z",
    "pushed_at": "2025-01-14T12:17:20Z",
    "size": 4884750,
    "stars": 27939,
    "forks": 4113,
    "open_issues": 2572,
    "watchers": 27939,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 22391764,
      "JavaScript": 14448704,
      "Vue": 1226343,
      "TypeScript": 861776,
      "Gherkin": 433358,
      "SCSS": 158244,
      "Shell": 81434,
      "HTML": 64175,
      "CSS": 25415,
      "Handlebars": 3817,
      "Dockerfile": 2908,
      "Makefile": 1649
    },
    "commit_activity": {
      "total_commits_last_year": 6549,
      "avg_commits_per_week": 125.9423076923077,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:06:55.727793"
  }
}