{
  "cve_id": "CVE-2023-28111",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a",
    "related_commits": [
      "fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a",
      "fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a.patch",
    "fix_commit_details": {
      "sha": "fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a",
      "commit_date": "2023-03-06T01:20:12Z",
      "author": {
        "login": "tgxworld",
        "type": "User",
        "stats": {
          "total_commits": 4679,
          "average_weekly_commits": 6.7518037518037515,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 404
        }
      },
      "commit_message": {
        "title": "SECURITY: SSRF protection bypass with IPv4-mapped IPv6 addresses",
        "length": 338,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 74,
        "additions": 56,
        "deletions": 18
      },
      "files": [
        {
          "filename": "lib/final_destination/ssrf_detector.rb",
          "status": "modified",
          "additions": 43,
          "deletions": 15,
          "patch": "@@ -7,18 +7,47 @@ class DisallowedIpError < SocketError\n     class LookupFailedError < SocketError\n     end\n \n-    def self.standard_private_ranges\n-      @private_ranges ||= [\n-        IPAddr.new(\"0.0.0.0/8\"),\n-        IPAddr.new(\"127.0.0.1\"),\n-        IPAddr.new(\"172.16.0.0/12\"),\n-        IPAddr.new(\"192.168.0.0/16\"),\n-        IPAddr.new(\"10.0.0.0/8\"),\n-        IPAddr.new(\"::1\"),\n-        IPAddr.new(\"fc00::/7\"),\n-        IPAddr.new(\"fe80::/10\"),\n-      ]\n-    end\n+    # This is a list of private IPv4 IP ranges that are not allowed to be globally reachable as given by\n+    # https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml.\n+    PRIVATE_IPV4_RANGES = [\n+      IPAddr.new(\"0.0.0.0/8\"),\n+      IPAddr.new(\"10.0.0.0/8\"),\n+      IPAddr.new(\"100.64.0.0/10\"),\n+      IPAddr.new(\"127.0.0.0/8\"),\n+      IPAddr.new(\"169.254.0.0/16\"),\n+      IPAddr.new(\"172.16.0.0/12\"),\n+      IPAddr.new(\"192.0.0.0/24\"),\n+      IPAddr.new(\"192.0.0.0/29\"),\n+      IPAddr.new(\"192.0.0.8/32\"),\n+      IPAddr.new(\"192.0.0.170/32\"),\n+      IPAddr.new(\"192.0.0.171/32\"),\n+      IPAddr.new(\"192.0.2.0/24\"),\n+      IPAddr.new(\"192.168.0.0/16\"),\n+      IPAddr.new(\"192.175.48.0/24\"),\n+      IPAddr.new(\"198.18.0.0/15\"),\n+      IPAddr.new(\"198.51.100.0/24\"),\n+      IPAddr.new(\"203.0.113.0/24\"),\n+      IPAddr.new(\"240.0.0.0/4\"),\n+      IPAddr.new(\"255.255.255.255/32\"),\n+    ]\n+\n+    # This is a list of private IPv6 IP ranges that are not allowed to be globally reachable as given by\n+    # https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml.\n+    #\n+    # ::ffff:0:0/96 is excluded from the list because it is used for IPv4-mapped IPv6 addresses which is something we want to allow.\n+    PRIVATE_IPV6_RANGES = [\n+      IPAddr.new(\"::1/128\"),\n+      IPAddr.new(\"::/128\"),\n+      IPAddr.new(\"64:ff9b:1::/48\"),\n+      IPAddr.new(\"100::/64\"),\n+      IPAddr.new(\"2001::/23\"),\n+      IPAddr.new(\"2001:2::/48\"),\n+      IPAddr.new(\"2001:db8::/32\"),\n+      IPAddr.new(\"fc00::/7\"),\n+      IPAddr.new(\"fe80::/10\"),\n+    ]\n+\n+    PRIVATE_IP_RANGES = PRIVATE_IPV4_RANGES + PRIVATE_IPV6_RANGES\n \n     def self.blocked_ip_blocks\n       SiteSetting\n@@ -54,10 +83,9 @@ def self.host_bypasses_checks?(hostname)\n \n     def self.ip_allowed?(ip)\n       ip = ip.is_a?(IPAddr) ? ip : IPAddr.new(ip)\n+      ip = ip.native\n \n-      if ip_in_ranges?(ip, blocked_ip_blocks) || ip_in_ranges?(ip, standard_private_ranges)\n-        return false\n-      end\n+      return false if ip_in_ranges?(ip, blocked_ip_blocks) || ip_in_ranges?(ip, PRIVATE_IP_RANGES)\n \n       true\n     end"
        },
        {
          "filename": "spec/lib/final_destination/ssrf_detector_spec.rb",
          "status": "modified",
          "additions": 13,
          "deletions": 3,
          "patch": "@@ -43,9 +43,19 @@\n       expect(subject.ip_allowed?(\"9001:82f3:8873::3\")).to eq(false)\n     end\n \n-    it \"returns false for standard internal IPs\" do\n-      expect(subject.ip_allowed?(\"172.31.100.31\")).to eq(false)\n-      expect(subject.ip_allowed?(\"fd02:77fa:ffea::f\")).to eq(false)\n+    %w[0.0.0.0 10.0.0.0 127.0.0.0 172.31.100.31 255.255.255.255 ::1 ::].each do |internal_ip|\n+      it \"returns false for '#{internal_ip}'\" do\n+        expect(subject.ip_allowed?(internal_ip)).to eq(false)\n+      end\n+    end\n+\n+    it \"returns false for private IPv4-mapped IPv6 addresses\" do\n+      expect(subject.ip_allowed?(\"::ffff:172.31.100.31\")).to eq(false)\n+      expect(subject.ip_allowed?(\"::ffff:0.0.0.0\")).to eq(false)\n+    end\n+\n+    it \"returns true for public IPv4-mapped IPv6 addresses\" do\n+      expect(subject.ip_allowed?(\"::ffff:52.52.167.244\")).to eq(true)\n     end\n   end\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "496a739788d58a7f1c6bd59643d062ae37e982a0",
            "date": "2025-01-14T15:19:49Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "a89086f7996f95024827df61fb0d86a516b269f6",
            "date": "2025-01-14T15:19:19Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          },
          {
            "sha": "7330cfa76a6e6ab7bf90702fb1db5e1a37a2eca1",
            "date": "2025-01-14T13:28:16Z",
            "author_login": "awesomerobot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "Discourse is an open-source discussion platform. Prior to version 3.1.0.beta3 of the `beta` and `tests-passed` branches, attackers are able to bypass Discourse's server-side request forgery (SSRF) protection for private IPv4 addresses by using a IPv4-mapped IPv6 address. The issue is patched in the latest beta and tests-passed version of Discourse. version 3.1.0.beta3 of the `beta` and `tests-passed` branches. There are no known workarounds.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-17T17:15:11.613",
    "last_modified": "2024-11-21T07:54:25.660",
    "fix_date": "2023-03-06T01:20:12Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20710",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-26h3-8ww8-v5fc",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/fd16eade7fcc6bba4b71e71106a2eb13cdfdae4a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/pull/20710",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-26h3-8ww8-v5fc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:06.858190",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}