{
  "cve_id": "CVE-2023-28443",
  "github_data": {
    "repository": "directus/directus",
    "fix_commit": "349536303983ccba68ecb3e4fb35315424011afc",
    "related_commits": [
      "349536303983ccba68ecb3e4fb35315424011afc",
      "349536303983ccba68ecb3e4fb35315424011afc"
    ],
    "patch_url": "https://github.com/directus/directus/commit/349536303983ccba68ecb3e4fb35315424011afc.patch",
    "fix_commit_details": {
      "sha": "349536303983ccba68ecb3e4fb35315424011afc",
      "commit_date": "2023-03-23T17:54:02Z",
      "author": {
        "login": "JohnHillegass",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-8vg2-wf3q-mwv7",
        "length": 524,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 69,
        "additions": 67,
        "deletions": 2
      },
      "files": [
        {
          "filename": "api/src/logger.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 2,
          "patch": "@@ -1,11 +1,12 @@\n import { toArray } from '@directus/shared/utils';\n-import type { Request, RequestHandler } from 'express';\n import { merge } from 'lodash';\n-import pino, { LoggerOptions } from 'pino';\n+import pino, { LoggerOptions, SerializedResponse } from 'pino';\n+import type { Request, RequestHandler } from 'express';\n import pinoHTTP, { stdSerializers } from 'pino-http';\n import { URL } from 'url';\n import env from './env';\n import { getConfigFromEnv } from './utils/get-config-from-env';\n+import { redactHeaderCookie } from './utils/redact-header-cookies';\n \n const pinoOptions: LoggerOptions = {\n \tlevel: env.LOG_LEVEL || 'info',\n@@ -86,8 +87,23 @@ export const expressLogger = pinoHTTP({\n \t\treq(request: Request) {\n \t\t\tconst output = stdSerializers.req(request);\n \t\t\toutput.url = redactQuery(output.url);\n+\t\t\tif (output.headers?.cookie) {\n+\t\t\t\toutput.headers.cookie = redactHeaderCookie(output.headers.cookie, [\n+\t\t\t\t\t'access_token',\n+\t\t\t\t\t`${env.REFRESH_TOKEN_COOKIE_NAME}`,\n+\t\t\t\t]);\n+\t\t\t}\n \t\t\treturn output;\n \t\t},\n+\t\tres(response: SerializedResponse) {\n+\t\t\tif (response.headers?.['set-cookie']) {\n+\t\t\t\tresponse.headers['set-cookie'] = redactHeaderCookie(response.headers['set-cookie'], [\n+\t\t\t\t\t'access_token',\n+\t\t\t\t\t`${env.REFRESH_TOKEN_COOKIE_NAME}`,\n+\t\t\t\t]);\n+\t\t\t}\n+\t\t\treturn response;\n+\t\t},\n \t},\n }) as RequestHandler;\n "
        },
        {
          "filename": "api/src/utils/redact-header-cookies.test.ts",
          "status": "added",
          "additions": 42,
          "deletions": 0,
          "patch": "@@ -0,0 +1,42 @@\n+import { describe, expect, test } from 'vitest';\n+import env from '../env';\n+import { redactHeaderCookie } from './redact-header-cookies';\n+\n+describe('redactHeaderCookie', () => {\n+\tdescribe('Given auth cookies', () => {\n+\t\ttest('When it finds a refresh_token, it should redact the value', () => {\n+\t\t\tconst tokenKey = env.REFRESH_TOKEN_COOKIE_NAME;\n+\t\t\tconst cookieHeader = `${tokenKey}=shh;`;\n+\t\t\tconst cookieNames = [`${tokenKey}`];\n+\n+\t\t\tconst redactedCookie = redactHeaderCookie(cookieHeader, cookieNames);\n+\t\t\texpect(redactedCookie).toBe(`${tokenKey}=--redacted--;`);\n+\t\t});\n+\t\ttest('When it finds an access_token, it should redact the value', () => {\n+\t\t\tconst tokenKey = 'access_token';\n+\t\t\tconst cookieHeader = `${tokenKey}=secret;`;\n+\t\t\tconst cookieNames = [`${tokenKey}`];\n+\n+\t\t\tconst redactedCookie = redactHeaderCookie(cookieHeader, cookieNames);\n+\t\t\texpect(redactedCookie).toBe(`${tokenKey}=--redacted--;`);\n+\t\t});\n+\t\ttest('When it finds both an access_token and refresh_token, it should redact both values', () => {\n+\t\t\tconst cookieHeader = `access_token=secret; ${env.REFRESH_TOKEN_COOKIE_NAME}=shhhhhhh; randomCookie=Erdtree;`;\n+\t\t\tconst cookieNames = ['access_token', `${env.REFRESH_TOKEN_COOKIE_NAME}`];\n+\n+\t\t\tconst redactedCookie = redactHeaderCookie(cookieHeader, cookieNames);\n+\t\t\texpect(redactedCookie).toBe(\n+\t\t\t\t`access_token=--redacted--; ${env.REFRESH_TOKEN_COOKIE_NAME}=--redacted--; randomCookie=Erdtree;`\n+\t\t\t);\n+\t\t});\n+\t});\n+\tdescribe('Given negligible cookies', () => {\n+\t\ttest('It should return the orignal value', () => {\n+\t\t\tconst originalCookie = `Crown=Swords; Hail=Sithis;`;\n+\t\t\tconst cookieNames = [env.REFRESH_TOKEN_COOKIE_NAME, 'access_token'];\n+\n+\t\t\tconst redactedCookie = redactHeaderCookie(originalCookie, cookieNames);\n+\t\t\texpect(redactedCookie).toBe(originalCookie);\n+\t\t});\n+\t});\n+});"
        },
        {
          "filename": "api/src/utils/redact-header-cookies.ts",
          "status": "added",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -0,0 +1,7 @@\n+export function redactHeaderCookie(cookieHeader: string, cookieNames: string[]) {\n+\tfor (const cookieName of cookieNames) {\n+\t\tconst re = new RegExp(`(${cookieName}=)([^;]+)`);\n+\t\tcookieHeader = cookieHeader.replace(re, `$1--redacted--`);\n+\t}\n+\treturn cookieHeader;\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "95687907fe6abdc2102fece5c9a0c4f637a48cda",
            "date": "2025-01-13T18:35:02Z",
            "author_login": "Dominic-Marcelino"
          },
          {
            "sha": "f6e54ecfc937f519d8cdf44cf10d110c5bbb14d1",
            "date": "2025-01-13T15:24:41Z",
            "author_login": "joselcvarela"
          },
          {
            "sha": "c2b35c42341ec304a83d7175360141e654a50912",
            "date": "2025-01-13T14:33:43Z",
            "author_login": "connorwinston"
          },
          {
            "sha": "2560b86e5fb76e11a645f0b1bf70803a5ead56a7",
            "date": "2025-01-13T12:07:30Z",
            "author_login": "paescuj"
          },
          {
            "sha": "6da92d939898bcf3ec2358f33630f829dbc17b87",
            "date": "2025-01-13T11:02:10Z",
            "author_login": "formfcw"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-284",
    "description": "Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 9.23.3, the `directus_refresh_token` is not redacted properly from the log outputs and can be used to impersonate users without their permission. This issue is patched in version 9.23.3.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-24T00:15:15.553",
    "last_modified": "2024-11-21T07:55:05.200",
    "fix_date": "2023-03-23T17:54:02Z"
  },
  "references": [
    {
      "url": "https://github.com/directus/directus/blob/7c479c5161639aac466c763b6b958a9524201d74/api/src/logger.ts#L13",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/directus/directus/commit/349536303983ccba68ecb3e4fb35315424011afc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/directus/directus/security/advisories/GHSA-8vg2-wf3q-mwv7",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/directus/directus/blob/7c479c5161639aac466c763b6b958a9524201d74/api/src/logger.ts#L13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/directus/directus/commit/349536303983ccba68ecb3e4fb35315424011afc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/directus/directus/security/advisories/GHSA-8vg2-wf3q-mwv7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.001148",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "directus",
    "owner": "directus",
    "created_at": "2012-12-12T01:35:36Z",
    "updated_at": "2025-01-14T12:22:36Z",
    "pushed_at": "2025-01-14T01:57:44Z",
    "size": 402534,
    "stars": 28706,
    "forks": 4004,
    "open_issues": 560,
    "watchers": 28706,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 5077921,
      "Vue": 1872125,
      "SCSS": 55791,
      "Liquid": 28677,
      "CSS": 28575,
      "JavaScript": 26426,
      "Dockerfile": 1905,
      "HTML": 1189
    },
    "commit_activity": {
      "total_commits_last_year": 1775,
      "avg_commits_per_week": 34.13461538461539,
      "days_active_last_year": 258
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:01:10.212039"
  }
}