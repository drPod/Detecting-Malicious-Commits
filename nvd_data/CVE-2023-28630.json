{
  "cve_id": "CVE-2023-28630",
  "github_data": {
    "repository": "gocd/gocd",
    "fix_commit": "6545481e7b36817dd6033bf614585a8db242070d",
    "related_commits": [
      "6545481e7b36817dd6033bf614585a8db242070d",
      "6545481e7b36817dd6033bf614585a8db242070d"
    ],
    "patch_url": "https://github.com/gocd/gocd/commit/6545481e7b36817dd6033bf614585a8db242070d.patch",
    "fix_commit_details": {
      "sha": "6545481e7b36817dd6033bf614585a8db242070d",
      "commit_date": "2022-11-24T15:50:21Z",
      "author": {
        "login": "chadlwilson",
        "type": "User",
        "stats": {
          "total_commits": 5215,
          "average_weekly_commits": 8.991379310344827,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 185
        }
      },
      "commit_message": {
        "title": "Improve error messages on failure to launch backup process",
        "length": 142,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 74,
        "additions": 43,
        "deletions": 31
      },
      "files": [
        {
          "filename": "db-support/db-support-base/src/main/java/com/thoughtworks/go/server/database/BackupProcessor.java",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -23,4 +23,12 @@ public interface BackupProcessor {\n     void backup(File targetDir, DataSource dataSource, DbProperties dbProperties) throws Exception;\n \n     boolean accepts(String url);\n+\n+    default void throwBackupError(String command, int errorCode) {\n+        throwBackupError(command, errorCode, null);\n+    }\n+\n+    default void throwBackupError(String command, int errorCode, Throwable cause) {\n+        throw new RuntimeException(String.format(\"There was an error backing up the database using `%s`. The `%s` process failed with code %s. Please see the server logs for more detail.\", command, command, errorCode), cause);\n+    }\n }"
        },
        {
          "filename": "db-support/db-support-mysql/src/main/java/com/thoughtworks/go/server/database/mysql/MySQLBackupProcessor.java",
          "status": "modified",
          "additions": 18,
          "deletions": 16,
          "patch": "@@ -23,32 +23,35 @@\n import lombok.extern.slf4j.Slf4j;\n import org.apache.tools.ant.types.Commandline;\n import org.zeroturnaround.exec.ProcessExecutor;\n+import org.zeroturnaround.exec.ProcessInitException;\n import org.zeroturnaround.exec.ProcessResult;\n import org.zeroturnaround.exec.stream.slf4j.Slf4jStream;\n \n import javax.sql.DataSource;\n import java.io.File;\n import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.LinkedHashMap;\n+import java.util.*;\n import java.util.concurrent.TimeoutException;\n \n import static org.apache.commons.lang3.StringUtils.isNotBlank;\n \n @Slf4j\n public class MySQLBackupProcessor implements BackupProcessor {\n \n+    private static final String COMMAND = \"mysqldump\";\n+\n     @Override\n     public void backup(File targetDir, DataSource dataSource, DbProperties dbProperties) throws InterruptedException, TimeoutException, IOException {\n-        ProcessResult processResult = createProcessExecutor(targetDir, dbProperties).execute();\n-\n-        if (processResult.getExitValue() == 0) {\n-            log.info(\"MySQL backup finished successfully.\");\n-        } else {\n-            log.warn(\"There was an error backing up the database using `mysqldump`. The `mysqldump` process exited with status code {}.\", processResult.getExitValue());\n-            throw new RuntimeException(\"There was an error backing up the database using `mysqldump`. The `mysqldump` process exited with status code \" + processResult.getExitValue() +\n-                    \". Please see the server logs for more errors\");\n+        try {\n+            ProcessResult processResult = createProcessExecutor(targetDir, dbProperties).execute();\n+\n+            if (processResult.getExitValue() == 0) {\n+                log.info(\"MySQL backup finished successfully.\");\n+            } else {\n+                throwBackupError(COMMAND, processResult.getExitValue());\n+            }\n+        } catch (ProcessInitException e) {\n+            throwBackupError(COMMAND, e.getErrorCode(), e.getCause());\n         }\n     }\n \n@@ -60,16 +63,15 @@ public boolean accepts(String url) {\n     private ProcessExecutor createProcessExecutor(File targetDir, DbProperties dbProperties) {\n         ConnectionUrl connectionUrlInstance = ConnectionUrl.getConnectionUrlInstance(dbProperties.url(), dbProperties.connectionProperties());\n \n-        LinkedHashMap<String, String> env = new LinkedHashMap<>();\n+        Map<String, String> env = new LinkedHashMap<>();\n         if (isNotBlank(dbProperties.password())) {\n             env.put(\"MYSQL_PWD\", dbProperties.password());\n         }\n         // override with any user specified environment\n         env.putAll(dbProperties.extraBackupEnv());\n \n-        ArrayList<String> argv = new ArrayList<>();\n-        argv.add(\"mysqldump\");\n-\n+        List<String> argv = new ArrayList<>();\n+        argv.add(COMMAND);\n \n         String dbName = connectionUrlInstance.getDatabase();\n         HostInfo mainHost = connectionUrlInstance.getMainHost();\n@@ -87,7 +89,7 @@ private ProcessExecutor createProcessExecutor(File targetDir, DbProperties dbPro\n             Collections.addAll(argv, Commandline.translateCommandline(dbProperties.extraBackupCommandArgs()));\n         }\n \n-        argv.add(\"--result-file=\" + new File(targetDir, \"db.\" + dbName).toString());\n+        argv.add(\"--result-file=\" + new File(targetDir, \"db.\" + dbName));\n         argv.add(connectionUrlInstance.getDatabase());\n \n         ProcessExecutor processExecutor = new ProcessExecutor();"
        },
        {
          "filename": "db-support/db-support-postgresql/src/main/java/com/thoughtworks/go/server/database/pg/PostgresqlBackupProcessor.java",
          "status": "modified",
          "additions": 17,
          "deletions": 15,
          "patch": "@@ -22,32 +22,33 @@\n import org.apache.tools.ant.types.Commandline;\n import org.postgresql.Driver;\n import org.zeroturnaround.exec.ProcessExecutor;\n+import org.zeroturnaround.exec.ProcessInitException;\n import org.zeroturnaround.exec.ProcessResult;\n import org.zeroturnaround.exec.stream.slf4j.Slf4jStream;\n \n import javax.sql.DataSource;\n import java.io.File;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.LinkedHashMap;\n-import java.util.Properties;\n+import java.util.*;\n \n import static org.apache.commons.lang3.StringUtils.isNotBlank;\n \n @Slf4j\n public class PostgresqlBackupProcessor implements BackupProcessor {\n \n+    private static final String COMMAND = \"pg_dump\";\n+\n     @Override\n     public void backup(File targetDir, DataSource dataSource, DbProperties dbProperties) throws Exception {\n-        ProcessResult processResult = createProcessExecutor(targetDir, dbProperties).execute();\n-\n-        if (processResult.getExitValue() == 0) {\n-            log.info(\"PostgreSQL backup finished successfully.\");\n-        } else {\n-            log.warn(\"There was an error backing up the database using `pg_dump`. The `pg_dump` process exited with status code {}.\", processResult.getExitValue());\n-            throw new RuntimeException(\"There was an error backing up the database using `pg_dump`. The `pg_dump` process exited with status code \" + processResult.getExitValue() +\n-                    \". Please see the server logs for more errors.\");\n+        try {\n+            ProcessResult processResult = createProcessExecutor(targetDir, dbProperties).execute();\n \n+            if (processResult.getExitValue() == 0) {\n+                log.info(\"PostgreSQL backup finished successfully.\");\n+            } else {\n+                throwBackupError(COMMAND, processResult.getExitValue());\n+            }\n+        } catch (ProcessInitException e) {\n+            throwBackupError(COMMAND, e.getErrorCode(), e.getCause());\n         }\n     }\n \n@@ -60,17 +61,18 @@ ProcessExecutor createProcessExecutor(File targetDir, DbProperties dbProperties)\n         Properties connectionProperties = dbProperties.connectionProperties();\n         Properties pgProperties = Driver.parseURL(dbProperties.url(), connectionProperties);\n \n-        ArrayList<String> argv = new ArrayList<>();\n-        LinkedHashMap<String, String> env = new LinkedHashMap<>();\n+        Map<String, String> env = new LinkedHashMap<>();\n         if (isNotBlank(dbProperties.password())) {\n             env.put(\"PGPASSWORD\", dbProperties.password());\n         }\n \n         // override with any user specified environment\n         env.putAll(dbProperties.extraBackupEnv());\n \n+        List<String> argv = new ArrayList<>();\n+        argv.add(COMMAND);\n+\n         String dbName = pgProperties.getProperty(\"PGDBNAME\");\n-        argv.add(\"pg_dump\");\n         argv.add(\"--host=\" + pgProperties.getProperty(\"PGHOST\"));\n         argv.add(\"--port=\" + pgProperties.getProperty(\"PGPORT\"));\n         argv.add(\"--dbname=\" + dbName);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "745b8846335e2d352bd17223122b3585ba63bc18",
            "date": "2025-01-14T11:10:03Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "7e0e0c87401d8ce8d76c651194e9165523416037",
            "date": "2025-01-14T11:09:46Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "99aa6ecc886d9c30f79601e30c06224112da3045",
            "date": "2025-01-14T11:09:29Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "6e87477e6527985cddd634b48bd3505be1079d4d",
            "date": "2025-01-14T11:09:11Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "90fccf4ddc5b1641b3fcaadd6eaeff34501aefb6",
            "date": "2025-01-14T10:44:32Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-532",
    "description": "GoCD is an open source continuous delivery server. In GoCD versions from 20.5.0 and below 23.1.0, if the server environment is not correctly configured by administrators to provide access to the relevant PostgreSQL or MySQL backup tools, the credentials for database access may be unintentionally leaked to admin alerts on the GoCD user interface. The vulnerability is triggered only if the GoCD server host is misconfigured to have backups enabled, but does not have access to the `pg_dump` or `mysqldump` utility tools to backup the configured database type (PostgreSQL or MySQL respectively). In such cases, failure to launch the expected backup utility reports the shell environment used to attempt to launch in the server admin alert, which includes the plaintext database password supplied to the configured tool. This vulnerability does not affect backups of the default on-disk H2 database that GoCD is configured to use. This issue has been addressed and fixed in GoCD 23.1.0. Users are advised to upgrade. Users unable to upgrade may disable backups, or administrators should ensure that the required `pg_dump` (PostgreSQL) or `mysqldump` (MySQL) binaries are available on the GoCD server when backups are triggered.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-03-27T21:15:12.543",
    "last_modified": "2024-11-21T07:55:42.050",
    "fix_date": "2022-11-24T15:50:21Z"
  },
  "references": [
    {
      "url": "https://github.com/gocd/gocd/commit/6545481e7b36817dd6033bf614585a8db242070d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gocd/gocd/releases/tag/23.1.0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/gocd/gocd/security/advisories/GHSA-p95w-gh78-qjmv",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.gocd.org/releases/#23-1-0",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/gocd/gocd/commit/6545481e7b36817dd6033bf614585a8db242070d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gocd/gocd/releases/tag/23.1.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/gocd/gocd/security/advisories/GHSA-p95w-gh78-qjmv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://www.gocd.org/releases/#23-1-0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:09.016958",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gocd",
    "owner": "gocd",
    "created_at": "2013-12-13T05:26:16Z",
    "updated_at": "2025-01-14T12:47:48Z",
    "pushed_at": "2025-01-14T11:10:10Z",
    "size": 393992,
    "stars": 7159,
    "forks": 972,
    "open_issues": 82,
    "watchers": 7159,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 20251061,
      "TypeScript": 4424594,
      "Groovy": 2080119,
      "JavaScript": 753678,
      "SCSS": 564746,
      "Ruby": 364252,
      "HTML": 253777,
      "XSLT": 202698,
      "NSIS": 24216,
      "Shell": 15469,
      "FreeMarker": 13061,
      "EJS": 1626,
      "CSS": 1575,
      "Batchfile": 474
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:11:02.445502"
  }
}