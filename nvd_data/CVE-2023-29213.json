{
  "cve_id": "CVE-2023-29213",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "49fdfd633ddfa346c522d2fe71754dc72c9496ca",
    "related_commits": [
      "49fdfd633ddfa346c522d2fe71754dc72c9496ca",
      "49fdfd633ddfa346c522d2fe71754dc72c9496ca"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/49fdfd633ddfa346c522d2fe71754dc72c9496ca.patch",
    "fix_commit_details": {
      "sha": "49fdfd633ddfa346c522d2fe71754dc72c9496ca",
      "commit_date": "2022-10-28T13:05:16Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 953,
          "average_weekly_commits": 0.9989517819706499,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "XWIKI-20291: Improved translations of logging administration",
        "length": 60,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 424,
        "additions": 409,
        "deletions": 15
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-script/pom.xml",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -62,4 +62,26 @@\n       <scope>test</scope>\n     </dependency>\n   </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-jar-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>test-jar</id>\n+            <goals>\n+              <goal>test-jar</goal>\n+            </goals>\n+            <configuration>\n+              <includes>\n+                <include>**/LoggingScriptServiceComponentList.class</include>\n+                <include>**/NullLoggerManager.class</include>\n+              </includes>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-script/src/test/java/org/xwiki/logging/LoggingScriptServiceComponentList.java",
          "status": "added",
          "additions": 53,
          "deletions": 0,
          "patch": "@@ -0,0 +1,53 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.logging;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import org.xwiki.logging.script.LoggingScriptService;\n+import org.xwiki.test.annotation.ComponentList;\n+\n+import static java.lang.annotation.ElementType.ANNOTATION_TYPE;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * Component list for {@link LoggingScriptService}.\n+ * \n+ * @version $Id$\n+ * @since 13.10.11\n+ * @since 14.4.7\n+ * @since 14.10RC1\n+ */\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ TYPE, METHOD, ANNOTATION_TYPE })\n+@ComponentList({\n+    LoggingScriptService.class,\n+    NullLoggerManager.class\n+})\n+@Inherited\n+public @interface LoggingScriptServiceComponentList\n+{\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-script/src/test/java/org/xwiki/logging/NullLoggerManager.java",
          "status": "added",
          "additions": 66,
          "deletions": 0,
          "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.logging;\n+\n+import java.util.Collection;\n+\n+import org.slf4j.Logger;\n+import org.xwiki.observation.EventListener;\n+\n+/**\n+ * Null logger manager, to be overridden if need be.\n+ * \n+ * @version $Id$\n+ * @since 13.10.11\n+ * @since 14.4.7\n+ * @since 14.10RC1\n+ */\n+public class NullLoggerManager implements LoggerManager\n+{\n+    @Override\n+    public void pushLogListener(EventListener listener)\n+    {\n+        \n+    }\n+\n+    @Override\n+    public EventListener popLogListener()\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public void setLoggerLevel(String loggerName, LogLevel level)\n+    {\n+\n+    }\n+\n+    @Override\n+    public LogLevel getLoggerLevel(String loggerName)\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public Collection<Logger> getLoggers()\n+    {\n+        return null;\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-ui/pom.xml",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -80,5 +80,36 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <!-- Test dependencies. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-test-page</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- Provides the component list for RenderingScriptService. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-xwiki</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- Provides the component list for the LiveData macro. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-livedata-macro</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- Required for LoggingScriptService. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-logging-script</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-ui/src/main/resources/XWiki/Logging/Code/Translations.xml",
          "status": "added",
          "additions": 79,
          "deletions": 0,
          "patch": "@@ -0,0 +1,79 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n+\n+<!--\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+-->\n+\n+<xwikidoc version=\"1.5\" reference=\"XWiki.Logging.Code.Translations\" locale=\"\">\n+  <web>XWiki.Logging.Code</web>\n+  <name>Translations</name>\n+  <language/>\n+  <defaultLanguage>en</defaultLanguage>\n+  <translation>0</translation>\n+  <creator>xwiki:XWiki.Admin</creator>\n+  <parent>WebHome</parent>\n+  <author>xwiki:XWiki.Admin</author>\n+  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n+  <version>1.1</version>\n+  <title>Translations</title>\n+  <comment/>\n+  <minorEdit>false</minorEdit>\n+  <syntaxId>plain/1.0</syntaxId>\n+  <hidden>true</hidden>\n+  <content>logging.admin.unsetLevel.success=Logger \"{0}\" level has been unset.\n+logging.admin.setLevel.success=Logger \"{0}\" level has been set to \"{1}\".\n+logging.admin.setLevel.error=Failed to set log level: the logger \"{0}\" doesn't exist.</content>\n+  <object>\n+    <name>XWiki.Logging.Code.Translations</name>\n+    <number>0</number>\n+    <className>XWiki.TranslationDocumentClass</className>\n+    <guid>fc29bfac-011a-4573-80ba-3f5713f1e847</guid>\n+    <class>\n+      <name>XWiki.TranslationDocumentClass</name>\n+      <customClass/>\n+      <customMapping/>\n+      <defaultViewSheet/>\n+      <defaultEditSheet/>\n+      <defaultWeb/>\n+      <nameField/>\n+      <validationScript/>\n+      <scope>\n+        <cache>0</cache>\n+        <disabled>0</disabled>\n+        <displayType>select</displayType>\n+        <freeText>forbidden</freeText>\n+        <largeStorage>0</largeStorage>\n+        <multiSelect>0</multiSelect>\n+        <name>scope</name>\n+        <number>1</number>\n+        <prettyName>Scope</prettyName>\n+        <relationalStorage>0</relationalStorage>\n+        <separator> </separator>\n+        <separators>|, </separators>\n+        <size>1</size>\n+        <unmodifiable>0</unmodifiable>\n+        <values>GLOBAL|WIKI|USER|ON_DEMAND</values>\n+        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>\n+      </scope>\n+    </class>\n+    <property>\n+      <scope>WIKI</scope>\n+    </property>\n+  </object>\n+</xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-ui/src/main/resources/XWiki/LoggingAdmin.xml",
          "status": "modified",
          "additions": 17,
          "deletions": 8,
          "patch": "@@ -44,20 +44,28 @@\n ##\n ## Setting the logger level if button has been pressed ##\n ##\n-#if ($request.loggeraction_set &amp;&amp; $request.logger_name &amp;&amp; $xwiki.hasAccessLevel('programming'))\n+#set ($loggerName = $request.logger_name)\n+#set ($loggerNameEscaped = $services.rendering.escape($escapetool.java($loggerName), 'xwiki/2.1'))\n+#set ($loggerLevel = $request.logger_level)\n+#set ($loggerLevelEscaped = $services.rendering.escape($escapetool.java($loggerLevel), 'xwiki/2.1'))\n+#if ($request.loggeraction_set &amp;&amp; $loggerName &amp;&amp; $xwiki.hasAccessLevel('programming'))\n   #set($logger_list = $logging.getLevels())\n-  #if ($!logger_list.containsKey($request.logger_name))\n+  #if ($!logger_list.containsKey($loggerName))\n     #if ($request.logger_level == '')\n-      {{success}}Logger ${request.logger_name} level has been unset.{{/success}}\n-      #set($void = $logging.setLevel($request.logger_name, $null))\n+      {{success}}\n+        {{translation key='logging.admin.unsetLevel.success' parameters=\"~\"${loggerNameEscaped}~\"\"/}}\n+      {{/success}}\n+      #set($void = $logging.setLevel($loggerName, $null))\n     #else\n-      {{success}}Logger ${request.logger_name} level has been set to ${request.logger_level}.{{/success}}\n-      #set($void = $logging.setLevel($request.logger_name, $request.logger_level))\n+      {{success}}\n+        {{translation key='logging.admin.setLevel.success'\n+          parameters=\"~\"${loggerNameEscaped}~\",~\"${loggerLevelEscaped}~\"\"/}}\n+      {{/success}}\n+      #set($void = $logging.setLevel($loggerName, $request.logger_level))\n     #end\n   #else\n-    {{error}}Failed to set log level: the logger \"$request.logger_name\" doesn't exist.{{/error}}\n+    {{error}}{{translation key='logging.admin.setLevel.error' parameters=\"~\"${loggerNameEscaped}~\"\"/}}{{/error}}\n   #end\n-\n #end\n ##\n ## Live Data\n@@ -77,6 +85,7 @@\n     'filterable': false\n   }))\n #end\n+\n {{liveData\n   id=\"logging\"\n   properties=\"$stringtool.join($properties, ',')\""
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-logging/xwiki-platform-logging-ui/src/test/java/org/xwiki/logging/LoggingAdminPageTest.java",
          "status": "added",
          "additions": 138,
          "deletions": 0,
          "patch": "@@ -0,0 +1,138 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.logging;\n+\n+import java.util.HashMap;\n+\n+import org.jsoup.nodes.Document;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.icon.IconManager;\n+import org.xwiki.livedata.internal.macro.LiveDataMacroComponentList;\n+import org.xwiki.localization.macro.internal.TranslationMacro;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.properties.internal.converter.EnumConverter;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.ErrorMessageMacro;\n+import org.xwiki.rendering.internal.macro.message.SuccessMessageMacro;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.plugin.skinx.SkinExtensionPluginApi;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test of {@code XWiki.LoggingAdmin}.\n+ *\n+ * @version $Id$\n+ * @since 13.10.11\n+ * @since 14.4.7\n+ * @since 14.10RC1\n+ */\n+@XWikiSyntax21ComponentList\n+@HTML50ComponentList\n+@RenderingScriptServiceComponentList\n+@LiveDataMacroComponentList\n+@LoggingScriptServiceComponentList\n+@ComponentList({\n+    TranslationMacro.class,\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    ErrorMessageMacro.class,\n+    SuccessMessageMacro.class,\n+    EnumConverter.class\n+})\n+class LoggingAdminPageTest extends PageTest\n+{\n+    private LoggerManager loggerManager;\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        // Spy the jsfx plugin used during the macro rendering to return a mock of its API when required. \n+        when(this.oldcore.getSpyXWiki().getPluginApi(\"jsfx\", this.context))\n+            .thenReturn(mock(SkinExtensionPluginApi.class));\n+        // Return minimal icons metadata since this is not what we want to test here.\n+        IconManager iconManager = this.componentManager.registerMockComponent(IconManager.class);\n+        doReturn(new HashMap<>()).when(iconManager).getMetaData(anyString());\n+        // Setting all rights as allowed by default.\n+        when(this.xwiki.getRightService().hasAccessLevel(any(), any(), anyString(), eq(this.context)))\n+            .thenReturn(true);\n+        when(this.componentManager.<ContextualAuthorizationManager>getInstance(ContextualAuthorizationManager.class)\n+            .hasAccess(any())).thenReturn(true);\n+        // Register a mocked LoggerManager as we want to control the logger level. \n+        this.loggerManager = this.componentManager.registerMockComponent(LoggerManager.class);\n+        Logger loggerA = mock(Logger.class);\n+        when(loggerA.getName()).thenReturn(\"loggerA\");\n+        when(this.loggerManager.getLoggers()).thenReturn(asList(loggerA));\n+    }\n+\n+    @Test\n+    void unknownLogger() throws Exception\n+    {\n+        this.request.put(\"loggeraction_set\", \"1\");\n+        this.request.put(\"logger_name\", \"{{cache}}{{groovy}}new File(\\\"/tmp/exploit.txt\\\").withWriter { out -> \"\n+            + \"out.println(\\\"created from notification filter preferences!\\\"); \"\n+            + \"}{{/groovy}}{{/cache}}<strong>bold</strong>\\\"'\");\n+        this.request.put(\"logger_level\", \"TRACE\");\n+        Document document = renderHTMLPage(new DocumentReference(\"xwiki\", \"XWiki\", \"LoggingAdmin\"));\n+        assertEquals(\"logging.admin.setLevel.error [{{cache}}{{groovy}}new File(\\\"/tmp/exploit.txt\\\")\"\n+            + \".withWriter { out -> out.println(\\\"created from notification filter preferences!\\\"); }{{/groovy}}\"\n+            + \"{{/cache}}<strong>bold</strong>\\\"']\", document.select(\".box.errormessage\").text());\n+        verify(this.loggerManager, never()).setLoggerLevel(any(), any());\n+    }\n+\n+    @Test\n+    void unsetLogger() throws Exception\n+    {\n+        this.request.put(\"loggeraction_set\", \"1\");\n+        this.request.put(\"logger_name\", \"loggerA\");\n+        this.request.put(\"logger_level\", \"\");\n+        Document document = renderHTMLPage(new DocumentReference(\"xwiki\", \"XWiki\", \"LoggingAdmin\"));\n+        assertEquals(\"logging.admin.unsetLevel.success [loggerA]\", document.select(\".box.successmessage\").text());\n+        verify(this.loggerManager).setLoggerLevel(\"loggerA\", null);\n+    }\n+\n+    @Test\n+    void setLogger() throws Exception\n+    {\n+        this.request.put(\"loggeraction_set\", \"1\");\n+        this.request.put(\"logger_name\", \"loggerA\");\n+        this.request.put(\"logger_level\", \"TRACE\");\n+        Document document = renderHTMLPage(new DocumentReference(\"xwiki\", \"XWiki\", \"LoggingAdmin\"));\n+        assertEquals(\"logging.admin.setLevel.success [loggerA, TRACE]\", document.select(\".box.successmessage\").text());\n+        verify(this.loggerManager).setLoggerLevel(\"loggerA\", LogLevel.TRACE);\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-test/xwiki-platform-test-page/src/main/java/org/xwiki/test/page/LocalizationSetup.java",
          "status": "modified",
          "additions": 3,
          "deletions": 7,
          "patch": "@@ -127,13 +127,9 @@ private static String renderString(String translationKey, Object[] parameters)\n     private static Object[] getVarArgs(InvocationOnMock invocationOnMockRender, int i)\n     {\n         Object[] parameters;\n-        if (invocationOnMockRender.getArguments().length > i) {\n-            Object argument = invocationOnMockRender.getArgument(i);\n-            if (argument instanceof String) {\n-                parameters = new Object[] { argument };\n-            } else {\n-                parameters = (Object[]) argument;\n-            }\n+        Object[] arguments = invocationOnMockRender.getArguments();\n+        if (arguments.length > i) {\n+            parameters = Arrays.copyOfRange(arguments, i, arguments.length);\n         } else {\n             parameters = new Object[] {};\n         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 7,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions of `org.xwiki.platform:xwiki-platform-logging-ui` it is possible to trick a user with programming rights into visiting a constructed url where e.g., by embedding an image with this URL in a document that is viewed by a user with programming rights which will evaluate an expression in the constructed url and execute it. This issue has been addressed in versions 13.10.11, 14.4.7, and 14.10. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-17T22:15:10.017",
    "last_modified": "2024-11-21T07:56:43.620",
    "fix_date": "2022-10-28T13:05:16Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/49fdfd633ddfa346c522d2fe71754dc72c9496ca",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-4655-wh7v-3vmg",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20291",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/49fdfd633ddfa346c522d2fe71754dc72c9496ca",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-4655-wh7v-3vmg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20291",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.802493",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}