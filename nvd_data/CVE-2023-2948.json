{
  "cve_id": "CVE-2023-2948",
  "github_data": {
    "repository": "openemr/openemr",
    "fix_commit": "af1ecf78d1342519791bda9d3079e88f7d859015",
    "related_commits": [
      "af1ecf78d1342519791bda9d3079e88f7d859015",
      "af1ecf78d1342519791bda9d3079e88f7d859015"
    ],
    "patch_url": "https://github.com/openemr/openemr/commit/af1ecf78d1342519791bda9d3079e88f7d859015.patch",
    "fix_commit_details": {
      "sha": "af1ecf78d1342519791bda9d3079e88f7d859015",
      "commit_date": "2023-04-09T05:23:39Z",
      "author": {
        "login": "bradymiller",
        "type": "User",
        "stats": {
          "total_commits": 3166,
          "average_weekly_commits": 4.1878306878306875,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 593
        }
      },
      "commit_message": {
        "title": "fixes: couple more misc fixes (#6336)",
        "length": 37,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 22,
        "additions": 11,
        "deletions": 11
      },
      "files": [
        {
          "filename": "interface/forms/eye_mag/js/eye_base.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -369,7 +369,7 @@ function create_task(to_id,task,to_type) {\n     var url = \"../../forms/eye_mag/taskman.php\";\n     var formData = {\n         'action'            : \"make_task\",\n-        'from_id'           : <?php echo js_escape($providerID); ?>,\n+        'from_id'           : <?php echo attr_js($providerID); ?>,\n         'to_id'             : to_id,\n         'pid'               : $('#pid').val(),\n         'doc_type'          : task,"
        },
        {
          "filename": "interface/main/finder/dynamic_finder.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -250,10 +250,10 @@\n     $(function () {\n         // Initializing the DataTable.\n         //\n-        let serverUrl = \"dynamic_finder_ajax.php?csrf_token_form=\" + <?php echo js_url(CsrfUtils::collectCsrfToken()); ?>;\n+        let serverUrl = \"dynamic_finder_ajax.php\";\n         let srcAny = <?php echo js_url($searchAny); ?>;\n         if (srcAny) {\n-            serverUrl += \"&search_any=\" + srcAny;\n+            serverUrl += \"?search_any=\" + srcAny;\n         }\n         var oTable = $('#pt_table').dataTable({\n             \"processing\": true,"
        },
        {
          "filename": "interface/main/finder/dynamic_finder_ajax.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -23,10 +23,10 @@\n use OpenEMR\\Events\\PatientFinder\\PatientFinderFilterEvent;\n use OpenEMR\\Events\\PatientFinder\\ColumnFilter;\n \n-// Not checking csrf for good reasons.\n-//  1. Not needed since no state changes in this script\n-//  2. It will cause potential session clash fails because it throws a popup which messes things up\n-//     when opening a patient in a new window.\n+// Not checking csrf since it breaks when opening up a patient in a new frame.\n+//  Also note that csrf checking is not needed in this script because of following 2 reasons.\n+//  1. cookie_samesite in OpenEMR is set to 'Strict', which is an effective security measure to stop csrf vulnerabilities.\n+//  2. Additionally, in this script there are no state changes, thus it is not even sensitive to csrf vulnerabilities.\n \n $popup = empty($_REQUEST['popup']) ? 0 : 1;\n $searchAny = !empty($_GET['search_any']) && empty($_GET['sSearch']) ? $_GET['search_any'] : \"\";"
        },
        {
          "filename": "library/custom_template/share_template.php",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -55,7 +55,7 @@ function add_template(){\n                 url: \"ajax_code.php\",\n                 dataType: \"html\",\n                 data: {\n-                     list_id: <?php echo htmlspecialchars($list_id, ENT_QUOTES);?>,\n+                     list_id: <?php echo js_escape($list_id); ?>,\n                      multi: val,\n                      source: \"save_provider\"\n                 },\n@@ -71,7 +71,7 @@ function add_template(){\n                 return;\n                 }\n                 else{\n-                    alert(\"<?php echo addslashes(xl('You should select at least one Provider'));?>\");\n+                    alert(<?php echo xlj('You should select at least one Provider');?>);\n                 }\n \n         }\n@@ -97,13 +97,13 @@ function add_template(){\n                                         $sel = '';\n                                     }\n                                 }\n-                                echo \"<option value='\" . htmlspecialchars($row['id'], ENT_QUOTES) . \"' $sel>\" . htmlspecialchars($row['lname'] . \",\" . $row['fname'], ENT_QUOTES) . \"</option>\";\n+                                echo \"<option value='\" . attr($row['id']) . \"' $sel>\" . text($row['lname'] . \",\" . $row['fname']) . \"</option>\";\n                             }\n                             ?>\n                         </select>\n                     </td>\n                     <td>\n-                    <a href=\"#\" onclick=\"add_template()\" class=\"btn btn-primary\"><span><?php echo htmlspecialchars(xl('Save'), ENT_QUOTES);?></span></a>\n+                    <a href=\"#\" onclick=\"add_template()\" class=\"btn btn-primary\"><span><?php echo xlt('Save');?></span></a>\n                     </td>\n                 </tr>\n             </table>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5a6ce59033e28da4977509da60f4fc0cbf084b43",
            "date": "2025-01-12T07:59:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "48858bcad419eb537a0879d8261845df39d793f2",
            "date": "2025-01-10T22:28:46Z",
            "author_login": "stephenwaite"
          },
          {
            "sha": "ee3beb58f73619e04004e526c56423a14d6689fd",
            "date": "2025-01-09T07:11:34Z",
            "author_login": "bradymiller"
          },
          {
            "sha": "1480ee627b317622a122abb293b74be50ad86795",
            "date": "2025-01-08T17:44:10Z",
            "author_login": "sjpadgett"
          },
          {
            "sha": "6a444b1c9ac5773008ab7a6c8fb81a4e9a365e6b",
            "date": "2025-01-06T12:49:47Z",
            "author_login": "NileshHake"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Cross-site Scripting (XSS) - Generic in GitHub repository openemr/openemr prior to 7.0.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-28T04:15:12.117",
    "last_modified": "2024-11-21T07:59:37.673",
    "fix_date": "2023-04-09T05:23:39Z"
  },
  "references": [
    {
      "url": "https://github.com/openemr/openemr/commit/af1ecf78d1342519791bda9d3079e88f7d859015",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2393e4d9-9e9f-455f-bf50-f20f77b0a64d",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/openemr/openemr/commit/af1ecf78d1342519791bda9d3079e88f7d859015",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2393e4d9-9e9f-455f-bf50-f20f77b0a64d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.264171",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openemr",
    "owner": "openemr",
    "created_at": "2010-05-21T19:54:08Z",
    "updated_at": "2025-01-12T07:59:39Z",
    "pushed_at": "2025-01-12T07:59:34Z",
    "size": 613406,
    "stars": 3249,
    "forks": 2204,
    "open_issues": 360,
    "watchers": 3249,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "rel-320",
      "rel-400",
      "rel-410",
      "rel-411",
      "rel-412",
      "rel-413",
      "rel-420",
      "rel-421"
    ],
    "languages": {
      "PHP": 38302611,
      "JavaScript": 2254920,
      "XSLT": 1868397,
      "HTML": 1450911,
      "Twig": 590132,
      "CSS": 530442,
      "SCSS": 189517,
      "Mustache": 127165,
      "Perl": 114453,
      "Shell": 79764,
      "Smarty": 70819,
      "Dockerfile": 57349,
      "Makefile": 1915,
      "Roff": 911
    },
    "commit_activity": {
      "total_commits_last_year": 325,
      "avg_commits_per_week": 6.25,
      "days_active_last_year": 161
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:15:48.369791"
  }
}