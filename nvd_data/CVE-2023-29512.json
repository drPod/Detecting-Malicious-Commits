{
  "cve_id": "CVE-2023-29512",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "e4bbdc23fea0be4ef1921d1a58648028ce753344",
    "related_commits": [
      "e4bbdc23fea0be4ef1921d1a58648028ce753344",
      "e4bbdc23fea0be4ef1921d1a58648028ce753344"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/e4bbdc23fea0be4ef1921d1a58648028ce753344.patch",
    "fix_commit_details": {
      "sha": "e4bbdc23fea0be4ef1921d1a58648028ce753344",
      "commit_date": "2022-11-30T14:48:58Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 953,
          "average_weekly_commits": 0.9989517819706499,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "XWIKI-20267: Improved escaping in importinline.vm",
        "length": 49,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 273,
        "additions": 228,
        "deletions": 45
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/pom.xml",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -128,5 +128,12 @@\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n+    <!-- Required to use the xar script service in the tests. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-xar-script</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/imported.vm",
          "status": "modified",
          "additions": 8,
          "deletions": 6,
          "patch": "@@ -20,7 +20,9 @@\n #template(\"xwikivars.vm\")\n #macro(showfilelist $list $text)\n   #if($list.size()>0)\n-    <h4 class=\"legend\">$services.localization.render(\"import_listof${text}files\")</h4>\n+    <h4 class=\"legend\">\n+      $escapetool.xml($services.localization.render(\"import_listof${text}files\"))\n+    </h4>\n     <ul>\n       #foreach($item in $list)\n         <li><a href=\"$xwiki.getURL($item)\">$escapetool.xml($item)</a></li>\n@@ -29,12 +31,12 @@\n   #end\n #end\n #if($hasAdmin)\n-  #set($status = $services.localization.render(\"import_install_${xwiki.package.status}\"))\n-  #info(\"$services.localization.render('importing') $!escapetool.xml($request.name): $status\")\n+  #set($status = $escapetool.xml($services.localization.render(\"import_install_${xwiki.package.status}\")))\n+  #info(\"$escapetool.xml($services.localization.render('importing')) $!escapetool.xml($request.name): $status\")\n   <ul>\n-    <li>$xwiki.package.installed.size() $services.localization.render('import_documentinstalled')</li>\n-    <li>$xwiki.package.skipped.size() $services.localization.render('import_documentskipped')</li>\n-    <li>$xwiki.package.errors.size() $services.localization.render('import_documenterrors')</li>\n+    <li>$xwiki.package.installed.size() $escapetool.xml($services.localization.render('import_documentinstalled'))</li>\n+    <li>$xwiki.package.skipped.size() $escapetool.xml($services.localization.render('import_documentskipped'))</li>\n+    <li>$xwiki.package.errors.size() $escapetool.xml($services.localization.render('import_documenterrors'))</li>\n   </ul>\n   #showfilelist($xwiki.package.installed 'installed')\n   #showfilelist($xwiki.package.skipped 'skipped')"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/importinline.vm",
          "status": "modified",
          "additions": 58,
          "deletions": 34,
          "patch": "@@ -42,7 +42,8 @@\n ## Import the documents from the selected XAR.\n ## ---------------------------------------------------------------------------\n #if(\"$!{request.action}\" == 'import')\n-<p class=\"legend\">$services.localization.render('import') #if(\"$!{request.withversions}\" == '1')$services.localization.render('export_addhistory')#end</p>\n+<p class=\"legend\">$escapetool.xml($services.localization.render('import')) #if(\"$!{request.withversions}\" == '1')\n+  $escapetool.xml($services.localization.render('export_addhistory'))#end</p>\n #template(\"imported.vm\")\n ## ---------------------------------------------------------------------------\n ## Browse the XARs and let the user select a XAR and the list of documents\n@@ -56,28 +57,35 @@\n   $xwiki.ssfx.use('uicomponents/widgets/upload.css', true)##\n   <div id=\"import\" class=\"row\">\n     <div id=\"packagelist\" class=\"col-xs-12 col-sm-6 col-md-6\">\n-      <div class=\"legend\">$services.localization.render('core.importer.uploadPackage')</div>\n+      <div class=\"legend\">\n+        $escapetool.xml($services.localization.render('core.importer.uploadPackage'))\n+      </div>\n       ## Let the user upload XAR files.\n       <form action=\"$doc.getURL('upload')\" enctype=\"multipart/form-data\" method=\"post\" id=\"AddAttachment\">\n         <div>\n           ## CSRF prevention\n-          <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n+          <input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" />\n           <input type=\"hidden\" name=\"xredirect\" value=\"$!{escapetool.xml($redirect)}\" />\n           <fieldset id=\"attachform\">\n             ## Temporarily disabled, until we fix attachment name handling\n             ## <div><label id=\"xwikiuploadnamelabel\" for=\"xwikiuploadname\">$services.localization.render('core.viewers.attachments.upload.filename')</label></div>\n             <div><input id=\"xwikiuploadname\" type=\"hidden\" name=\"filename\" value=\"\" /></div>\n             <div class=\"package-upload\">\n-               <label for=\"xwikiuploadfile\" class=\"hidden\">$services.localization.render('core.viewers.attachments.upload.file')</label>\n-               <input id=\"xwikiuploadfile\" type=\"file\" name=\"filepath\" class=\"uploadFileInput noitems\" data-max-file-size=\"$!escapetool.xml($xwiki.getSpacePreference('upload_maxsize'))\" />\n-               <span class=\"buttonwrapper\">\n-                 <input type=\"submit\" value=\"Upload\" class=\"button\" />\n-               </span>\n+              <label for=\"xwikiuploadfile\" class=\"hidden\">\n+                $escapetool.xml($services.localization.render('core.viewers.attachments.upload.file'))\n+              </label>\n+              <input id=\"xwikiuploadfile\" type=\"file\" name=\"filepath\" class=\"uploadFileInput noitems\"\n+                     data-max-file-size=\"$!escapetool.xml($xwiki.getSpacePreference('upload_maxsize'))\"/>\n+              <span class=\"buttonwrapper\">\n+                <input type=\"submit\" value=\"Upload\" class=\"button\"/>\n+              </span>\n             </div>\n           </fieldset>\n         </div>\n       </form>\n-    <div class=\"legend\">$services.localization.render('core.importer.availablePackages')</div>\n+    <div class=\"legend\">\n+      $escapetool.xml($services.localization.render('core.importer.availablePackages'))\n+    </div>\n     <div id=\"packagelistcontainer\">\n       #template('packagelist.vm')\n     </div> ## packagelistcontainer\n@@ -94,42 +102,54 @@\n           #if(!$package)\n             #error(\"There was an error reading the file ${escapetool.xml(${request.file})}. $!xcontext.import_error\")\n           #else\n-          <div class=\"legend\">$services.localization.render('core.importer.availableDocuments')</div>\n+          <div class=\"legend\">\n+            $escapetool.xml($services.localization.render('core.importer.availableDocuments'))\n+          </div>\n           <div id=\"packageDescription\">\n             <div class=\"packageinfos\">\n               <div>\n-                <span class=\"label\">$services.localization.render('core.importer.package')</span>\n-                <span class=\"filename\">$attach.filename</span>\n+                <span class=\"label\">\n+                  $escapetool.xml($services.localization.render('core.importer.package'))\n+                </span>\n+                <span class=\"filename\">$escapetool.xml($attach.filename)</span>\n               </div>\n               #if(\"$!package.packageName\" != '')\n               <div>\n-                <span class=\"label\">$services.localization.render('core.importer.package.description')</span>\n-                <span class=\"name\">$package.packageName</span>\n+                <span class=\"label\">\n+                  $escapetool.xml($services.localization.render('core.importer.package.description'))\n+                </span>\n+                <span class=\"name\">$escapetool.xml($package.packageName)</span>\n               </div>\n               #end\n               #if(\"$!package.packageVersion\" != '')\n               <div>\n-                <span class=\"label\">$services.localization.render('core.importer.package.version')</span>\n-                <span class=\"version\">$package.packageVersion</span>\n+                <span class=\"label\">\n+                  $escapetool.xml($services.localization.render('core.importer.package.version'))\n+                </span>\n+                <span class=\"version\">$escapetool.xml($package.packageVersion)</span>\n               </div>\n               #end\n               #if(\"$!package.packageAuthor\" != '')\n               <div>\n-                <span class=\"label\">$services.localization.render('core.importer.package.author')</span>\n-                <span class=\"author\">$package.packageAuthor</span>\n+                <span class=\"label\">\n+                  $escapetool.xml($services.localization.render('core.importer.package.author'))\n+                </span>\n+                <span class=\"author\">$escapetool.xml($package.packageAuthor)</span>\n               </div>\n               #end\n               #if(\"$!package.packageLicense\" != '')\n               <div>\n-                <span class=\"label\">$services.localization.render('core.importer.package.licence')</span>\n-                <span class=\"licence\">$package.packageLicense</span>\n+                <span class=\"label\">\n+                  $escapetool.xml($services.localization.render('core.importer.package.licence'))\n+                </span>\n+                <span class=\"licence\">$escapetool.xml($package.packageLicense)</span>\n               </div>\n               #end\n             </div>\n-            <form action=\"$!{importaction}\" method=\"post\" class=\"static-importer\">\n+            <form action=\"$!escapetool.xml($importaction)\" method=\"post\" class=\"static-importer\">\n               <div>\n                 ## CSRF prevention\n-                <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n+                <input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.token)\" />\n                 <input type=\"hidden\" name=\"action\" value=\"import\" />\n                 <input type=\"hidden\" name=\"name\" value=\"$!{escapetool.xml($request.file)}\" />\n                 <div id=\"package\">\n@@ -151,7 +171,7 @@\n                           </span>\n                           <span class=\"documentName\">\n                             <input type=\"hidden\" name=\"$!{escapetool.xml($services.model.serialize($locale, 'local'))}:$!{escapetool.xml($locale.locale)}\" value=\"$!{escapetool.xml($locale.locale)}\" />\n-                            $document #if(\"$!locale.locale\" != '') - $locale.locale #end\n+                            $escapetool.xml($document) #if(\"$!locale.locale\" != '') - $locale.locale #end\n                           </span>\n                           <div class=\"clearfloats\"></div>\n                         </div>\n@@ -163,7 +183,7 @@\n                       #set($space = $spaceNode.reference.name)\n                       <li class=\"xitem xunderline\">\n                         <div class=\"xitemcontainer\">\n-                        <div class=\"spacename\">$space</div>\n+                        <div class=\"spacename\">$escapetool.xml($space)</div>\n                         <div class=\"clearfloats\"></div>\n                         <div class=\"pages\">\n                         <ul class=\"xlist pages\">\n@@ -182,34 +202,38 @@\n                         #displaySpaceNode($node)\n                       #end                      \n                     #end\n-                    #foreach($node in $services.model.toTree($package.entries).children)\n+                    #set ($tree = $services.model.toTree($package.entries))\n+                    #foreach($node in $tree.children)\n                       #displayNode($node)\n                     #end\n                   </ul>\n                 <div class=\"importOption\">\n-                  <em>$services.localization.render('core.importer.whenDocumentAlreadyExists')</em>\n+                  <em>\n+                    $escapetool.xml($services.localization.render('core.importer.whenDocumentAlreadyExists'))\n+                  </em>\n                   <div class=\"historyStrategyOption\">\n-                     <input type=\"radio\" name=\"historyStrategy\" value=\"add\" checked=\"checked\" />\n-                     $services.localization.render('core.importer.addNewVersion')\n+                    <input type=\"radio\" name=\"historyStrategy\" value=\"add\" checked=\"checked\" />\n+                    $escapetool.xml($services.localization.render('core.importer.addNewVersion'))\n                   </div>\n                   <div class=\"historyStrategyOption\">\n-                     <input type=\"radio\" name=\"historyStrategy\" value=\"replace\" />\n-                     $services.localization.render('core.importer.replaceDocumentHistory')\n+                    <input type=\"radio\" name=\"historyStrategy\" value=\"replace\" />\n+                    $escapetool.xml($services.localization.render('core.importer.replaceDocumentHistory'))\n                   </div>\n                   <div class=\"historyStrategyOption\">\n-                     <input type=\"radio\" name=\"historyStrategy\" value=\"reset\" />\n-                     $services.localization.render('core.importer.resetHistory')\n+                    <input type=\"radio\" name=\"historyStrategy\" value=\"reset\" />\n+                    $escapetool.xml($services.localization.render('core.importer.resetHistory'))\n                   </div>\n                 </div>\n                 ## TODO: replace with a new API to introduce (impossible to safely test right on a different wiki from velocity without PR)\n                 #if($xwiki.package.hasBackupPackImportRights())\n                 <div class=\"importOption\">\n                   <input type=\"checkbox\" name=\"importAsBackup\" value=\"true\" #if($packager.isBackupPack())checked=\"checked\"#end/>\n-                  $services.localization.render('core.importer.importAsBackup')\n+                  $escapetool.xml($services.localization.render('core.importer.importAsBackup'))\n                 </div>\n                 #end\n                 <span class=\"buttonwrapper\">\n-                  <input class=\"button\" type=\"submit\" value=\"$services.localization.render('core.importer.import')\" />\n+                  <input class=\"button\" type=\"submit\" \n+                         value=\"$escapetool.xml($services.localization.render('core.importer.import'))\" />\n                 </span>\n               </div>\n               </div>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/packagelist.vm",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -29,9 +29,10 @@\n         <div class=\"name\">\n           <a href=\"$!url\" class=\"package\" title=\"$services.localization.render('core.importer.selectThisPackage')\">\n             #set($maxnamelength = 40)\n-            #packName($attach.filename)\n+            #set ($packName = \"#packName($attach.filename)\")\n+            $escapetool.xml($packName)\n           </a>\n-          <span class=\"version\">$attach.version</span>\n+          <span class=\"version\">$escapetool.xml($attach.version)</span>\n           <span class=\"xwikibuttonlinks\">\n             #set($redirect = $doc.getURL('import', 'section=Import'))\n             #set($attachurl = $doc.getAttachmentURL(${attach.filename}, 'delattachment', \"xredirect=$!{redirect}&amp;form_token=$!{services.csrf.getToken()}\"))\n@@ -40,15 +41,15 @@\n           </span>\n         </div>\n         <div class=\"infos\">\n-          $services.localization.render('core.importer.packageInformationExtract', [\n+          $escapetool.xml($services.localization.render('core.importer.packageInformationExtract', [\n             $xwiki.getUserName($attach.author, true),\n             $!xwiki.formatDate($attach.date)\n-          ]) - <span class=\"size\">(#dynamicsize($attach.longSize))</span>\n+          ])) - <span class=\"size\">(#dynamicsize($attach.longSize))</span>\n         </div>\n       </div>\n     </li>\n   #end\n   </ul>\n #else\n-  <span class=\"noitems\">$services.localization.render('core.importer.noPackageAvailable')</span>\n+  <span class=\"noitems\">$escapetool.xml($services.localization.render('core.importer.noPackageAvailable'))</span>\n #end\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/test/java/org/xwiki/web/ImportInlinePageTest.java",
          "status": "added",
          "additions": 149,
          "deletions": 0,
          "patch": "@@ -0,0 +1,149 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.web;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.stream.Collectors;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.LocalDocumentReference;\n+import org.xwiki.model.script.ModelScriptService;\n+import org.xwiki.script.service.ScriptService;\n+import org.xwiki.skinx.internal.async.SkinExtensionAsync;\n+import org.xwiki.template.TemplateManager;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.xar.XarEntry;\n+import org.xwiki.xar.XarPackage;\n+import org.xwiki.xar.script.XarScriptService;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.plugin.XWikiPluginManager;\n+import com.xpn.xwiki.plugin.skinx.CssSkinFileExtensionPlugin;\n+import com.xpn.xwiki.plugin.skinx.JsSkinFileExtensionPlugin;\n+\n+import static java.util.Collections.singletonList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyBoolean;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test of template {@code importinline.vm}.\n+ *\n+ * @version $Id$\n+ * @since 15.0-rc-1\n+ * @since 14.10.1\n+ * @since 14.4.8\n+ * @since 13.10.11\n+ */\n+@ComponentList({\n+    SkinExtensionAsync.class,\n+    ModelScriptService.class\n+})\n+class ImportInlinePageTest extends PageTest\n+{\n+    private TemplateManager templateManager;\n+\n+    @Mock\n+    private XarScriptService xarScriptService;\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        this.templateManager = this.oldcore.getMocker().getInstance(TemplateManager.class);\n+        // Enable the ssfx/jsfx plugins.\n+        XWikiPluginManager pluginManager = this.oldcore.getSpyXWiki().getPluginManager();\n+        pluginManager.addPlugin(\"ssfx\", CssSkinFileExtensionPlugin.class.getName(), this.context);\n+        pluginManager.addPlugin(\"jsfx\", JsSkinFileExtensionPlugin.class.getName(), this.context);\n+        // Initialize XWiki.XWikiPreferences \n+        XWikiDocument xWikiPreferencesDocument =\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiPreferences\"), this.context);\n+        this.xwiki.saveDocument(xWikiPreferencesDocument, this.context);\n+        // Initialize the current document\n+        XWikiDocument currentDocument = this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Doc\", \"Space\"\n+            + \"\\\"'/><script>console.log('docTitle'</script>{{html}}{{noscript/}}\"), this.context);\n+        currentDocument.setAttachment(\"attachment.xar\", new ByteArrayInputStream(\"xar content\".getBytes()),\n+            this.context);\n+        currentDocument.setAttachment(\"\\\"'/><script>console.log('secondAttachment')</script>{{/html}}{{noscript/}}\",\n+            new ByteArrayInputStream(\"file content\".getBytes()), this.context);\n+        this.xwiki.saveDocument(currentDocument, this.context);\n+        this.context.setDoc(currentDocument);\n+        this.componentManager.registerComponent(ScriptService.class, \"xar\", this.xarScriptService);\n+    }\n+\n+    @Test\n+    void escape() throws Exception\n+    {\n+        String packageAuthor = \"\\\"'><script>console.log('package author');</script>{{/html}}{{noscript/}}\";\n+        String packageName = \"\\\"'><script>console.log('package name');</script>{{/html}}{{noscript/}}\";\n+        String packageLicense = \"\\\"'><script>console.log('package licence');</script>{{/html}}{{noscript/}}\";\n+        String spaceName = \"\\\"'><script>console.log('space name');</script>{{/html}}{{noscript/}}\";\n+        String pageName = \"\\\"'><script>console.log('page name');</script>{{/html}}{{noscript/}}\";\n+        LocalDocumentReference reference = new LocalDocumentReference(spaceName, pageName, Locale.FRANCE);\n+        XarEntry xarEntry = new XarEntry(reference);\n+\n+        XarPackage xarPackage = new XarPackage(singletonList(xarEntry));\n+        xarPackage.setPackageAuthor(packageAuthor);\n+        xarPackage.setPackageName(packageName);\n+        xarPackage.setPackageDescription(\"packageDescription\");\n+        xarPackage.setPackageLicense(packageLicense);\n+        xarPackage.setPackageExtensionId(\"packageExtensionId\");\n+\n+        when(this.xarScriptService.getXarPackage(any(InputStream.class), anyBoolean())).thenReturn(xarPackage);\n+        this.request.put(\"file\", \"attachment.xar\");\n+        Document document = Jsoup.parse(this.templateManager.render(\"importinline.vm\"));\n+\n+        assertEquals(\"/xwiki/bin/upload/Doc/Space%22%27%2F%3E%3Cscript%3Econsole.log%28%27docTitle\"\n+                + \"%27%3C%2Fscript%3E%7B%7Bhtml%7D%7D%7B%7Bnoscript%2F%7D%7D\",\n+            document.selectFirst(\"form\").attr(\"action\"));\n+        Element packageinfos = document.selectFirst(\".packageinfos\");\n+        assertEquals(packageAuthor, packageinfos.selectFirst(\".author\").text());\n+        assertEquals(packageName, packageinfos.selectFirst(\".name\").text());\n+        assertEquals(packageLicense, packageinfos.selectFirst(\".licence\").text());\n+        Element packageDiv = document.getElementById(\"package\");\n+        assertEquals(spaceName, packageDiv.selectFirst(\".spacename\").text());\n+        Element xitemLi = packageDiv.selectFirst(\".xitem\");\n+        assertEquals(\"\\\"'><script>console\\\\.log('space name');</script>{{/html}}{{noscript/}}.\\\"'>\"\n+                + \"<script>console\\\\.log('page name');</script>{{/html}}{{noscript/}}:fr_FR\",\n+            xitemLi.selectFirst(\"input[type='hidden']\").attr(\"name\"));\n+        assertEquals(\"\\\"'><script>console.log('space name');</script>{{/html}}{{noscript/}} \\\"'>\"\n+            + \"<script>console.log('page name');</script>{{/html}}{{noscript/}} - fr_FR\", xitemLi.text());\n+        List<String> attachmentLinksText =\n+            document.select(\"#packagelistcontainer .xitemcontainer.package .name>a\")\n+                .stream()\n+                .map(Element::text)\n+                .collect(Collectors.toList());\n+        assertThat(attachmentLinksText,\n+            containsInAnyOrder(\"><script>console.log('secondAttachment')</script>{{/html}}{{noscript/}}\",\n+                \"attachment.xar\"));\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-74",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with edit rights on a page (e.g., it's own user page), can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation. The root cause is improper escaping of the information loaded from attachments in `imported.vm`, `importinline.vm`, and `packagelist.vm`. This page is installed by default. This vulnerability has been patched in XWiki 15.0-rc-1, 14.10.1, 14.4.8, and 13.10.11. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-19T00:15:08.110",
    "last_modified": "2024-11-21T07:57:12.420",
    "fix_date": "2022-11-30T14:48:58Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/e4bbdc23fea0be4ef1921d1a58648028ce753344",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-hg5x-3w3x-7g96",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20267",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/e4bbdc23fea0be4ef1921d1a58648028ce753344",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-hg5x-3w3x-7g96",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20267",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.810263",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}