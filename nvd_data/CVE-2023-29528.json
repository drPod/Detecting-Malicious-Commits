{
  "cve_id": "CVE-2023-29528",
  "github_data": {
    "repository": "xwiki/xwiki-commons",
    "fix_commit": "8ff1a9d7e5d7b45b690134a537d53dc05cae04ab",
    "related_commits": [
      "8ff1a9d7e5d7b45b690134a537d53dc05cae04ab",
      "8ff1a9d7e5d7b45b690134a537d53dc05cae04ab"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-commons/commit/8ff1a9d7e5d7b45b690134a537d53dc05cae04ab.patch",
    "fix_commit_details": {
      "sha": "8ff1a9d7e5d7b45b690134a537d53dc05cae04ab",
      "commit_date": "2022-11-16T17:20:53Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "XCOMMONS-2568: Improve comment handling in HTMLCleaner (#306)",
        "length": 61,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 77,
        "additions": 75,
        "deletions": 2
      },
      "files": [
        {
          "filename": "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/html/HTMLUtils.java",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -26,6 +26,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n+import org.jdom.Comment;\n import org.jdom.DocType;\n import org.jdom.Element;\n import org.jdom.input.DOMBuilder;\n@@ -179,6 +180,22 @@ protected void printElement(Writer out, Element element, int level, NamespaceSta\n                 currentFormat.setExpandEmptyElements(currentFormatPolicy);\n             }\n         }\n+\n+        @Override\n+        protected void printComment(Writer out, Comment comment) throws IOException\n+        {\n+            String commentText = comment.getText();\n+\n+            // TODO: remove this again when https://sourceforge.net/p/htmlcleaner/bugs/234/ has been fixed.\n+            // Make sure that the comment text conforms to the HTML specification, in particular: \"Optionally, text,\n+            // with the additional restriction that the text must not start with the string \">\", nor start with the\n+            // string \"->\", nor contain the strings \"<!--\", \"-->\", or \"--!>\", nor end with the string \"<!-\".\"\n+            while (commentText.startsWith(\">\") || commentText.startsWith(\"->\")) {\n+                commentText = commentText.substring(1);\n+            }\n+\n+            super.printComment(out, new Comment(commentText));\n+        }\n     }\n \n     /**"
        },
        {
          "filename": "xwiki-commons-core/xwiki-commons-xml/src/main/java/org/xwiki/xml/internal/html/DefaultHTMLCleaner.java",
          "status": "modified",
          "additions": 18,
          "deletions": 2,
          "patch": "@@ -267,6 +267,13 @@ private CleanerProperties getDefaultCleanerProperties(HTMLCleanerConfiguration c\n \n         defaultProperties.setDeserializeEntities(true);\n \n+        // Omit comments in restricted mode to avoid any potential parser confusion.\n+        // Any part of the filtered HTML that contains unfiltered input is potentially dangerous/a candidate for\n+        // parser confusion. Comments, style and script elements seem to be frequently found ingredients in successful\n+        // attacks against good sanitizers. We're already removing style and script elements, so removing comments\n+        // seems like a good defense against future attacks.\n+        defaultProperties.setOmitComments(isRestricted(configuration));\n+\n         return defaultProperties;\n     }\n \n@@ -314,8 +321,7 @@ private TrimAttributeCleanerTransformations getDefaultCleanerTransformations(HTM\n             defaultTransformations.addTransformation(tt);\n         }\n \n-        String restricted = configuration.getParameters().get(HTMLCleanerConfiguration.RESTRICTED);\n-        if (\"true\".equalsIgnoreCase(restricted)) {\n+        if (isRestricted(configuration)) {\n \n             tt = new TagTransformation(HTMLConstants.TAG_SCRIPT, HTMLConstants.TAG_PRE, false);\n             defaultTransformations.addTransformation(tt);\n@@ -336,6 +342,16 @@ private boolean isHTML5(HTMLCleanerConfiguration configuration)\n         return getHTMLVersion(configuration) == 5;\n     }\n \n+    /**\n+     * @param configuration the configuration to parse\n+     * @return if the parsing should happen in restricted mode\n+     */\n+    private boolean isRestricted(HTMLCleanerConfiguration configuration)\n+    {\n+        String restricted = configuration.getParameters().get(HTMLCleanerConfiguration.RESTRICTED);\n+        return \"true\".equalsIgnoreCase(restricted);\n+    }\n+\n     /**\n      * @param configuration The configuration to parse.\n      * @return The HTML version specified in the configuration."
        },
        {
          "filename": "xwiki-commons-core/xwiki-commons-xml/src/test/java/org/xwiki/xml/internal/html/DefaultHTMLCleanerTest.java",
          "status": "modified",
          "additions": 40,
          "deletions": 0,
          "patch": "@@ -33,6 +33,8 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n import org.w3c.dom.Document;\n import org.w3c.dom.NodeList;\n import org.xwiki.component.manager.ComponentManager;\n@@ -327,6 +329,44 @@ void restrictedAttributesAndTags() throws Exception\n                 + \"</mi></math>\");\n     }\n \n+    /**\n+     * Verify comment handling in restricted mode.\n+     */\n+    @ParameterizedTest\n+    @CsvSource({\n+        \"<p><strong>Hello  World</strong></p>,<strong>Hello <!-- a comment --> World</strong>\",\n+        \"'', <!--My favorite operators are > and <!-->\",\n+        // FIXME: Actually, just the comment should be removed but due to erroneous parsing in HTMLCleaner, the whole\n+        // string is treated as a comment.\n+        \"'', <!--> <a href=\\\"#\\\">no comment</a>\",\n+        \"'', <!---> <a href=\\\"#\\\">no comment</a>\"\n+    })\n+    void restrictedComments(String expected, String actual)\n+    {\n+        Map<String, String> parameters = new HashMap<>(this.cleanerConfiguration.getParameters());\n+        parameters.put(\"restricted\", \"true\");\n+        this.cleanerConfiguration.setParameters(parameters);\n+\n+        assertHTML(expected, actual);\n+    }\n+\n+    @ParameterizedTest\n+    @CsvSource({\n+        \"<!--My favorite operators are > and <!-->, <!--My favorite operators are > and <!-->\",\n+        \"<!-- a comment ==!> not a comment-->, <!-- a comment --!> not a comment\",\n+        // FIXME: this is wrongly parsed as a full comment.\n+        \"<!-- <a foo=`bar`>not a comment</a>-->, <!--> <a foo=`bar`>not a comment</a>\",\n+        \"<!--=>-->, <!--->\",\n+        // FIXME: according to the HTML specification, this should be a comment.\n+        \"'', <! fake comment >\",\n+        \"<!-- <!== comment -->, <!-- <!-- comment -->\",\n+        \"<!--My favorite operators are > and <!=-->, <!--My favorite operators are > and <!--->\"\n+    })\n+    void comments(String expected, String actual)\n+    {\n+        assertHTML(expected, actual);\n+    }\n+\n     /**\n      * Verify that passing a fully-formed XHTML header works fine.\n      */"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "85b59159bb4fb19b6419bac3169b4d40f3d348b2",
            "date": "2025-01-13T15:52:46Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "f3fd1088356deb08a7ef9f13100339111922fc82",
            "date": "2025-01-13T15:51:12Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "0ecc68313bbc332ad0920eb13df5036bee737b02",
            "date": "2025-01-10T16:43:17Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "c6c8a421e5ce215f3e62c8ea7d12254e5483f3b5",
            "date": "2025-01-10T14:52:33Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "eaf8b5b360fd57d5c262f0830766b92fcf334d04",
            "date": "2025-01-10T14:08:59Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "XWiki Commons are technical libraries common to several other top level XWiki projects. The \"restricted\" mode of the HTML cleaner in XWiki, introduced in version 4.2-milestone-1 and massively improved in version 14.6-rc-1, allowed the injection of arbitrary HTML code and thus cross-site scripting via invalid HTML comments. As a consequence, any code relying on this \"restricted\" mode for security is vulnerable to JavaScript injection (\"cross-site scripting\"/XSS). When a privileged user with programming rights visits such a comment in XWiki, the malicious JavaScript code is executed in the context of the user session. This allows server-side code execution with programming rights, impacting the confidentiality, integrity and availability of the XWiki instance. This problem has been patched in XWiki 14.10, HTML comments are now removed in restricted mode and a check has been introduced that ensures that comments don't start with `>`. There are no known workarounds apart from upgrading to a version including the fix.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-20T18:15:07.307",
    "last_modified": "2024-11-21T07:57:14.260",
    "fix_date": "2022-11-16T17:20:53Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-commons/commit/8ff1a9d7e5d7b45b690134a537d53dc05cae04ab",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-commons/security/advisories/GHSA-x37v-36wv-6v6h",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XCOMMONS-2568",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20348",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-commons/commit/8ff1a9d7e5d7b45b690134a537d53dc05cae04ab",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-commons/security/advisories/GHSA-x37v-36wv-6v6h",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XCOMMONS-2568",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20348",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.817694",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-commons",
    "owner": "xwiki",
    "created_at": "2011-03-04T21:31:54Z",
    "updated_at": "2025-01-13T15:52:59Z",
    "pushed_at": "2025-01-13T15:52:55Z",
    "size": 38500,
    "stars": 85,
    "forks": 123,
    "open_issues": 27,
    "watchers": 85,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-14.10.x",
      "stable-15.10.x",
      "stable-16.4.x",
      "stable-16.10.x"
    ],
    "languages": {
      "Java": 7553862,
      "AspectJ": 6773,
      "AMPL": 4949,
      "Groovy": 1367,
      "JavaScript": 911,
      "CSS": 21
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T16:59:29.086917"
  }
}