{
  "cve_id": "CVE-2023-30186",
  "github_data": {
    "repository": "ONLYOFFICE/core",
    "fix_commit": "2b6ad83b36afd9845085b536969d366d1d61150a",
    "related_commits": [
      "2b6ad83b36afd9845085b536969d366d1d61150a",
      "2b6ad83b36afd9845085b536969d366d1d61150a"
    ],
    "patch_url": "https://github.com/ONLYOFFICE/core/commit/2b6ad83b36afd9845085b536969d366d1d61150a.patch",
    "fix_commit_details": {
      "sha": "2b6ad83b36afd9845085b536969d366d1d61150a",
      "commit_date": "2023-02-04T20:49:41Z",
      "author": {
        "login": "K0R0L",
        "type": "User",
        "stats": {
          "total_commits": 4536,
          "average_weekly_commits": 7.780445969125214,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 493
        }
      },
      "commit_message": {
        "title": "Fix bug 60433",
        "length": 13,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 349,
        "additions": 200,
        "deletions": 149
      },
      "files": [
        {
          "filename": "DesktopEditor/doctrenderer/docbuilder_p.cpp",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -76,8 +76,8 @@ bool CV8RealTimeWorker::ExecuteCommand(const std::wstring& command, NSDoctRender\n {\n \tLOGGER_SPEED_START\n \n-\t\t\tif (retValue)\n-\t\t\tretValue->Clear();\n+\tif (retValue)\n+\t\tretValue->Clear();\n \n \tstd::string commandA = U_TO_UTF8(command);\n \t//commandA = \"Api.\" + commandA;\n@@ -87,7 +87,7 @@ bool CV8RealTimeWorker::ExecuteCommand(const std::wstring& command, NSDoctRender\n \n \tLOGGER_SPEED_LAP(\"compile_command\")\n \n-\t\t\tJSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);\n+\tJSSmart<CJSValue> retNativeVal = m_context->runScript(commandA, try_catch);\n \tif(try_catch->Check())\n \t\treturn false;\n \n@@ -100,7 +100,7 @@ bool CV8RealTimeWorker::ExecuteCommand(const std::wstring& command, NSDoctRender\n \n \tLOGGER_SPEED_LAP(\"run_command\")\n \n-\t\t\treturn true;\n+\treturn true;\n }\n \n std::string CV8RealTimeWorker::GetGlobalVariable()\n@@ -139,7 +139,7 @@ bool CV8RealTimeWorker::OpenFile(const std::wstring& sBasePath, const std::wstri\n {\n \tLOGGER_SPEED_START\n \n-\t\t\tJSSmart<CJSContextScope> context_scope = m_context->CreateContextScope();\n+\tJSSmart<CJSContextScope> context_scope = m_context->CreateContextScope();\n \tJSSmart<CJSTryCatch>         try_catch = m_context->GetExceptions();\n \n \tLOGGER_SPEED_LAP(\"compile\");\n@@ -150,7 +150,7 @@ bool CV8RealTimeWorker::OpenFile(const std::wstring& sBasePath, const std::wstri\n \n \tLOGGER_SPEED_LAP(\"run\")\n \n-\t\t\tif (true)\n+\tif (true)\n \t{\n \t\tstd::string sArg = m_sUtf8ArgumentJSON;\n \t\tif (sArg.empty())\n@@ -249,7 +249,7 @@ bool CV8RealTimeWorker::OpenFile(const std::wstring& sBasePath, const std::wstri\n \n \tLOGGER_SPEED_LAP(\"open\")\n \n-\t\t\treturn !bIsBreak;\n+\treturn !bIsBreak;\n }\n \n bool CV8RealTimeWorker::SaveFileWithChanges(int type, const std::wstring& _path, const std::wstring& sJsonParams)"
        },
        {
          "filename": "DesktopEditor/doctrenderer/docbuilder_p.h",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -890,7 +890,7 @@ namespace NSDoctRenderer\n \n \t\t\tLOGGER_SPEED_START\n \n-\t\t\t\t\tCheckFileDir();\n+\t\t\tCheckFileDir();\n \t\t\tNSDirectory::CreateDirectory(m_sFileDir + L\"/changes\");\n \n \t\t\tstd::wstring sExtCopy = GetFileCopyExt(path);\n@@ -912,8 +912,8 @@ namespace NSDoctRenderer\n \n \t\t\tLOGGER_SPEED_LAP(\"open_convert\")\n \n-\t\t\t\t\tif (0 == nReturnCode)\n-\t\t\t\t\treturn 0;\n+\t\t\tif (0 == nReturnCode)\n+\t\t\t\treturn 0;\n \n \t\t\tNSDirectory::DeleteDirectory(m_sFileDir);\n \t\t\tm_sFileDir = L\"\";"
        },
        {
          "filename": "DesktopEditor/doctrenderer/embed/jsc/jsc_NativeControl.mm",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -14,8 +14,8 @@ -(JSValue*) GetEditorType;\n -(JSValue*) CheckNextChange;\n -(JSValue*) GetCountChanges;\n -(JSValue*) GetChangesFile : (JSValue*)index;\n--(JSValue*) Save_AllocNative : (JSValue*)len;\n--(JSValue*) Save_ReAllocNative : (JSValue*)pos : (JSValue*)len;\n+//-(JSValue*) Save_AllocNative : (JSValue*)len;\n+//-(JSValue*) Save_ReAllocNative : (JSValue*)pos : (JSValue*)len;\n -(JSValue*) Save_End : (JSValue*)pos : (JSValue*)len;\n -(JSValue*) AddImageInChanges : (JSValue*)img;\n -(JSValue*) ConsoleLog : (JSValue*)message;\n@@ -54,8 +54,8 @@ @implementation CJSCNativeControl\n FUNCTION_WRAPPER_JS(CheckNextChange, CheckNextChange)\n FUNCTION_WRAPPER_JS(GetCountChanges, GetCountChanges)\n FUNCTION_WRAPPER_JS_1(GetChangesFile, GetChangesFile)\n-FUNCTION_WRAPPER_JS_1(Save_AllocNative, Save_AllocNative)\n-FUNCTION_WRAPPER_JS_2(Save_ReAllocNative, Save_ReAllocNative)\n+//FUNCTION_WRAPPER_JS_1(Save_AllocNative, Save_AllocNative)\n+//FUNCTION_WRAPPER_JS_2(Save_ReAllocNative, Save_ReAllocNative)\n FUNCTION_WRAPPER_JS_2(Save_End, Save_End)\n FUNCTION_WRAPPER_JS_1(AddImageInChanges, AddImageInChanges)\n FUNCTION_WRAPPER_JS_1(ConsoleLog, ConsoleLog)"
        },
        {
          "filename": "DesktopEditor/doctrenderer/embed/v8/v8_NativeControl.cpp",
          "status": "modified",
          "additions": 147,
          "deletions": 135,
          "patch": "@@ -3,147 +3,159 @@\n \n namespace NSNativeControl\n {\n-    #define CURRENTWRAPPER CNativeControlEmbed\n-\n-    FUNCTION_WRAPPER_V8(_GetFilePath, GetFilePath)\n-    FUNCTION_WRAPPER_V8_1(_SetFilePath, SetFilePath)\n-    FUNCTION_WRAPPER_V8(_GetFileId, GetFileId)\n-    FUNCTION_WRAPPER_V8_1(_SetFileId, SetFileId)\n-    FUNCTION_WRAPPER_V8_1(_GetFileArrayBuffer, GetFileBinary)\n-    FUNCTION_WRAPPER_V8_1(_GetFontArrayBuffer, GetFontBinary)\n-    FUNCTION_WRAPPER_V8(_GetFontsDirectory, GetFontsDirectory)\n-    FUNCTION_WRAPPER_V8_1(_GetFileString, GetFileString)\n-    FUNCTION_WRAPPER_V8(_GetEditorType, GetEditorType)\n-    FUNCTION_WRAPPER_V8(_CheckNextChange, CheckNextChange)\n-    FUNCTION_WRAPPER_V8(_GetChangesCount, GetCountChanges)\n-    FUNCTION_WRAPPER_V8_1(_GetChangesFile, GetChangesFile)\n-    FUNCTION_WRAPPER_V8_1(_Save_AllocNative, Save_AllocNative)\n-    FUNCTION_WRAPPER_V8_2(_Save_ReAllocNative, Save_ReAllocNative)\n-    FUNCTION_WRAPPER_V8_2(_Save_End, Save_End)\n-    FUNCTION_WRAPPER_V8_1(_AddImageInChanges, AddImageInChanges)\n-    FUNCTION_WRAPPER_V8_1(_ConsoleLog, ConsoleLog)\n-    FUNCTION_WRAPPER_V8_3(_SaveChanges, SaveChanges)\n-    FUNCTION_WRAPPER_V8_1(_zipOpenFile, zipOpenFile)\n-    FUNCTION_WRAPPER_V8_1(_zipOpenFileBase64, zipOpenFileBase64)\n-    FUNCTION_WRAPPER_V8_1(_zipGetFileAsString, zipGetFileAsString)\n-    FUNCTION_WRAPPER_V8_1(_zipGetFileAsBinary, zipGetFileAsBinary)\n-    FUNCTION_WRAPPER_V8(_zipCloseFile, zipCloseFile)\n-    FUNCTION_WRAPPER_V8_1(_GetImageUrl, GetImageUrl)\n-    FUNCTION_WRAPPER_V8_1(_GetImageOriginalSize, GetImageOriginalSize)\n-    FUNCTION_WRAPPER_V8(_GetImagesPath, GetImagesPath)\n-\n-    v8::Handle<v8::ObjectTemplate> CreateNativeControlTemplate(v8::Isolate* isolate)\n-    {\n-        v8::EscapableHandleScope handle_scope(isolate);\n-\n-        v8::Local<v8::ObjectTemplate> result = v8::ObjectTemplate::New(V8IsolateOneArg);\n-        result->SetInternalFieldCount(1);\n-\n-        NSV8Objects::Template_Set(result, \"SetFilePath\",        _SetFilePath);\n-        NSV8Objects::Template_Set(result, \"GetFilePath\",        _GetFilePath);\n-        NSV8Objects::Template_Set(result, \"SetFileId\",          _SetFileId);\n-        NSV8Objects::Template_Set(result, \"GetFileId\",          _GetFileId);\n-        NSV8Objects::Template_Set(result, \"GetFileBinary\",      _GetFileArrayBuffer);\n-        NSV8Objects::Template_Set(result, \"GetFontBinary\",      _GetFontArrayBuffer);\n-        NSV8Objects::Template_Set(result, \"GetFontsDirectory\",  _GetFontsDirectory);\n-        NSV8Objects::Template_Set(result, \"GetFileString\",      _GetFileString);\n-        NSV8Objects::Template_Set(result, \"GetEditorType\",      _GetEditorType);\n-        NSV8Objects::Template_Set(result, \"CheckNextChange\",    _CheckNextChange);\n-        NSV8Objects::Template_Set(result, \"GetCountChanges\",    _GetChangesCount);\n-        NSV8Objects::Template_Set(result, \"GetChangesFile\",     _GetChangesFile);\n-        NSV8Objects::Template_Set(result, \"Save_AllocNative\",   _Save_AllocNative);\n-        NSV8Objects::Template_Set(result, \"Save_ReAllocNative\", _Save_ReAllocNative);\n-        NSV8Objects::Template_Set(result, \"Save_End\",           _Save_End);\n-        NSV8Objects::Template_Set(result, \"AddImageInChanges\",  _AddImageInChanges);\n-        NSV8Objects::Template_Set(result, \"ConsoleLog\",         _ConsoleLog);\n-        NSV8Objects::Template_Set(result, \"SaveChanges\",        _SaveChanges);\n-        NSV8Objects::Template_Set(result, \"ZipOpen\",            _zipOpenFile);\n-        NSV8Objects::Template_Set(result, \"ZipOpenBase64\",      _zipOpenFileBase64);\n-        NSV8Objects::Template_Set(result, \"ZipFileAsString\",    _zipGetFileAsString);\n-        NSV8Objects::Template_Set(result, \"ZipFileAsBinary\",    _zipGetFileAsBinary);\n-        NSV8Objects::Template_Set(result, \"ZipClose\",           _zipCloseFile);\n-        NSV8Objects::Template_Set(result, \"getImageUrl\",        _GetImageUrl);\n-        NSV8Objects::Template_Set(result, \"getImagesDirectory\", _GetImagesPath);\n-        NSV8Objects::Template_Set(result, \"GetImageOriginalSize\", _GetImageOriginalSize);\n-\n-        return handle_scope.Escape(result);\n-    }\n-\n-    // \u0411\u0435\u0437 SaveChanges\n-    v8::Handle<v8::ObjectTemplate> CreateNativeControlTemplateBuilder(v8::Isolate* isolate)\n-    {\n-        v8::EscapableHandleScope handle_scope(isolate);\n-\n-        v8::Local<v8::ObjectTemplate> result = v8::ObjectTemplate::New(V8IsolateOneArg);\n-        result->SetInternalFieldCount(1);\n-\n-        NSV8Objects::Template_Set(result, \"SetFilePath\",        _SetFilePath);\n-        NSV8Objects::Template_Set(result, \"GetFilePath\",        _GetFilePath);\n-        NSV8Objects::Template_Set(result, \"SetFileId\",          _SetFileId);\n-        NSV8Objects::Template_Set(result, \"GetFileId\",          _GetFileId);\n-        NSV8Objects::Template_Set(result, \"GetFileBinary\",      _GetFileArrayBuffer);\n-        NSV8Objects::Template_Set(result, \"GetFontBinary\",      _GetFontArrayBuffer);\n-        NSV8Objects::Template_Set(result, \"GetFontsDirectory\",  _GetFontsDirectory);\n-        NSV8Objects::Template_Set(result, \"GetFileString\",      _GetFileString);\n-        NSV8Objects::Template_Set(result, \"GetEditorType\",      _GetEditorType);\n-        NSV8Objects::Template_Set(result, \"CheckNextChange\",    _CheckNextChange);\n-        NSV8Objects::Template_Set(result, \"GetCountChanges\",    _GetChangesCount);\n-        NSV8Objects::Template_Set(result, \"GetChangesFile\",     _GetChangesFile);\n-        NSV8Objects::Template_Set(result, \"Save_AllocNative\",   _Save_AllocNative);\n-        NSV8Objects::Template_Set(result, \"Save_ReAllocNative\", _Save_ReAllocNative);\n-        NSV8Objects::Template_Set(result, \"Save_End\",           _Save_End);\n-        NSV8Objects::Template_Set(result, \"AddImageInChanges\",  _AddImageInChanges);\n-        NSV8Objects::Template_Set(result, \"ConsoleLog\",         _ConsoleLog);\n-        NSV8Objects::Template_Set(result, \"ZipOpen\",            _zipOpenFile);\n-        NSV8Objects::Template_Set(result, \"ZipOpenBase64\",      _zipOpenFileBase64);\n-        NSV8Objects::Template_Set(result, \"ZipFileAsString\",    _zipGetFileAsString);\n-        NSV8Objects::Template_Set(result, \"ZipFileAsBinary\",    _zipGetFileAsBinary);\n-        NSV8Objects::Template_Set(result, \"ZipClose\",           _zipCloseFile);\n-        NSV8Objects::Template_Set(result, \"getImageUrl\",        _GetImageUrl);\n-        NSV8Objects::Template_Set(result, \"getImagesDirectory\", _GetImagesPath);\n-        NSV8Objects::Template_Set(result, \"GetImageOriginalSize\", _GetImageOriginalSize);\n-\n-        return handle_scope.Escape(result);\n-    }\n-\n-    void CreateNativeObject(const v8::FunctionCallbackInfo<v8::Value>& args)\n-    {\n-        v8::Isolate* isolate = args.GetIsolate();\n-        v8::HandleScope scope(isolate);\n-\n-        v8::Handle<v8::ObjectTemplate> NativeObjectTemplate = CreateNativeControlTemplate(isolate);\n-        CNativeControlEmbed* pNativeObject = new CNativeControlEmbed();\n-\n-        v8::Local<v8::Object> obj = NativeObjectTemplate->NewInstance(isolate->GetCurrentContext()).ToLocalChecked();\n-        obj->SetInternalField(0, v8::External::New(CV8Worker::GetCurrent(), pNativeObject));\n-\n-        args.GetReturnValue().Set(obj);\n-    }\n-\n-    // \u0411\u0435\u0437 SaveChanges\n-    void CreateNativeObjectBuilder(const v8::FunctionCallbackInfo<v8::Value>& args)\n-    {\n-        v8::Isolate* isolate = args.GetIsolate();\n-        v8::HandleScope scope(isolate);\n-\n-        v8::Handle<v8::ObjectTemplate> NativeObjectTemplate = CreateNativeControlTemplateBuilder(isolate);\n-        CNativeControlEmbed* pNativeObject = new CNativeControlEmbed();\n-\n-        v8::Local<v8::Object> obj = NativeObjectTemplate->NewInstance(isolate->GetCurrentContext()).ToLocalChecked();\n-        obj->SetInternalField(0, v8::External::New(CV8Worker::GetCurrent(), pNativeObject));\n-\n-        args.GetReturnValue().Set(obj);\n-    }\n+#define CURRENTWRAPPER CNativeControlEmbed\n+\n+\tFUNCTION_WRAPPER_V8(_GetFilePath, GetFilePath)\n+\tFUNCTION_WRAPPER_V8_1(_SetFilePath, SetFilePath)\n+\tFUNCTION_WRAPPER_V8(_GetFileId, GetFileId)\n+\tFUNCTION_WRAPPER_V8_1(_SetFileId, SetFileId)\n+\tFUNCTION_WRAPPER_V8_1(_GetFileArrayBuffer, GetFileBinary)\n+\tFUNCTION_WRAPPER_V8_1(_GetFontArrayBuffer, GetFontBinary)\n+\tFUNCTION_WRAPPER_V8(_GetFontsDirectory, GetFontsDirectory)\n+\tFUNCTION_WRAPPER_V8_1(_GetFileString, GetFileString)\n+\tFUNCTION_WRAPPER_V8(_GetEditorType, GetEditorType)\n+\tFUNCTION_WRAPPER_V8(_CheckNextChange, CheckNextChange)\n+\tFUNCTION_WRAPPER_V8(_GetChangesCount, GetCountChanges)\n+\tFUNCTION_WRAPPER_V8_1(_GetChangesFile, GetChangesFile)\n+\tFUNCTION_WRAPPER_V8_1(_Save_AllocNative, Save_AllocNative)\n+\tFUNCTION_WRAPPER_V8_2(_Save_ReAllocNative, Save_ReAllocNative)\n+\tFUNCTION_WRAPPER_V8_2(_Save_End, Save_End)\n+\tFUNCTION_WRAPPER_V8_1(_AddImageInChanges, AddImageInChanges)\n+\tFUNCTION_WRAPPER_V8_1(_ConsoleLog, ConsoleLog)\n+\tFUNCTION_WRAPPER_V8_3(_SaveChanges, SaveChanges)\n+\tFUNCTION_WRAPPER_V8_1(_zipOpenFile, zipOpenFile)\n+\tFUNCTION_WRAPPER_V8_1(_zipOpenFileBase64, zipOpenFileBase64)\n+\tFUNCTION_WRAPPER_V8_1(_zipGetFileAsString, zipGetFileAsString)\n+\tFUNCTION_WRAPPER_V8_1(_zipGetFileAsBinary, zipGetFileAsBinary)\n+\tFUNCTION_WRAPPER_V8(_zipCloseFile, zipCloseFile)\n+\tFUNCTION_WRAPPER_V8_1(_GetImageUrl, GetImageUrl)\n+\tFUNCTION_WRAPPER_V8_1(_GetImageOriginalSize, GetImageOriginalSize)\n+\tFUNCTION_WRAPPER_V8(_GetImagesPath, GetImagesPath)\n+\n+\tv8::Handle<v8::ObjectTemplate> CreateNativeControlTemplate(v8::Isolate* isolate)\n+\t{\n+\t\tv8::EscapableHandleScope handle_scope(isolate);\n+\n+\t\tv8::Local<v8::ObjectTemplate> result = v8::ObjectTemplate::New(V8IsolateOneArg);\n+\t\tresult->SetInternalFieldCount(1);\n+\n+\t\tNSV8Objects::Template_Set(result, \"SetFilePath\",        _SetFilePath);\n+\t\tNSV8Objects::Template_Set(result, \"GetFilePath\",        _GetFilePath);\n+\t\tNSV8Objects::Template_Set(result, \"SetFileId\",          _SetFileId);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileId\",          _GetFileId);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileBinary\",      _GetFileArrayBuffer);\n+\t\tNSV8Objects::Template_Set(result, \"GetFontBinary\",      _GetFontArrayBuffer);\n+\t\tNSV8Objects::Template_Set(result, \"GetFontsDirectory\",  _GetFontsDirectory);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileString\",      _GetFileString);\n+\t\tNSV8Objects::Template_Set(result, \"GetEditorType\",      _GetEditorType);\n+\t\tNSV8Objects::Template_Set(result, \"CheckNextChange\",    _CheckNextChange);\n+\t\tNSV8Objects::Template_Set(result, \"GetCountChanges\",    _GetChangesCount);\n+\t\tNSV8Objects::Template_Set(result, \"GetChangesFile\",     _GetChangesFile);\n+\t\t//NSV8Objects::Template_Set(result, \"Save_AllocNative\",   _Save_AllocNative);\n+\t\t//NSV8Objects::Template_Set(result, \"Save_ReAllocNative\", _Save_ReAllocNative);\n+\t\tNSV8Objects::Template_Set(result, \"Save_End\",           _Save_End);\n+\t\tNSV8Objects::Template_Set(result, \"AddImageInChanges\",  _AddImageInChanges);\n+\t\tNSV8Objects::Template_Set(result, \"ConsoleLog\",         _ConsoleLog);\n+\t\tNSV8Objects::Template_Set(result, \"SaveChanges\",        _SaveChanges);\n+\t\tNSV8Objects::Template_Set(result, \"ZipOpen\",            _zipOpenFile);\n+\t\tNSV8Objects::Template_Set(result, \"ZipOpenBase64\",      _zipOpenFileBase64);\n+\t\tNSV8Objects::Template_Set(result, \"ZipFileAsString\",    _zipGetFileAsString);\n+\t\tNSV8Objects::Template_Set(result, \"ZipFileAsBinary\",    _zipGetFileAsBinary);\n+\t\tNSV8Objects::Template_Set(result, \"ZipClose\",           _zipCloseFile);\n+\t\tNSV8Objects::Template_Set(result, \"getImageUrl\",        _GetImageUrl);\n+\t\tNSV8Objects::Template_Set(result, \"getImagesDirectory\", _GetImagesPath);\n+\t\tNSV8Objects::Template_Set(result, \"GetImageOriginalSize\", _GetImageOriginalSize);\n+\n+\t\treturn handle_scope.Escape(result);\n+\t}\n+\n+\t// \u0411\u0435\u0437 SaveChanges\n+\tv8::Handle<v8::ObjectTemplate> CreateNativeControlTemplateBuilder(v8::Isolate* isolate)\n+\t{\n+\t\tv8::EscapableHandleScope handle_scope(isolate);\n+\n+\t\tv8::Local<v8::ObjectTemplate> result = v8::ObjectTemplate::New(V8IsolateOneArg);\n+\t\tresult->SetInternalFieldCount(1);\n+\n+\t\tNSV8Objects::Template_Set(result, \"SetFilePath\",        _SetFilePath);\n+\t\tNSV8Objects::Template_Set(result, \"GetFilePath\",        _GetFilePath);\n+\t\tNSV8Objects::Template_Set(result, \"SetFileId\",          _SetFileId);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileId\",          _GetFileId);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileBinary\",      _GetFileArrayBuffer);\n+\t\tNSV8Objects::Template_Set(result, \"GetFontBinary\",      _GetFontArrayBuffer);\n+\t\tNSV8Objects::Template_Set(result, \"GetFontsDirectory\",  _GetFontsDirectory);\n+\t\tNSV8Objects::Template_Set(result, \"GetFileString\",      _GetFileString);\n+\t\tNSV8Objects::Template_Set(result, \"GetEditorType\",      _GetEditorType);\n+\t\tNSV8Objects::Template_Set(result, \"CheckNextChange\",    _CheckNextChange);\n+\t\tNSV8Objects::Template_Set(result, \"GetCountChanges\",    _GetChangesCount);\n+\t\tNSV8Objects::Template_Set(result, \"GetChangesFile\",     _GetChangesFile);\n+\t\t//NSV8Objects::Template_Set(result, \"Save_AllocNative\",   _Save_AllocNative);\n+\t\t//NSV8Objects::Template_Set(result, \"Save_ReAllocNative\", _Save_ReAllocNative);\n+\t\tNSV8Objects::Template_Set(result, \"Save_End\",           _Save_End);\n+\t\tNSV8Objects::Template_Set(result, \"AddImageInChanges\",  _AddImageInChanges);\n+\t\tNSV8Objects::Template_Set(result, \"ConsoleLog\",         _ConsoleLog);\n+\t\tNSV8Objects::Template_Set(result, \"ZipOpen\",            _zipOpenFile);\n+\t\tNSV8Objects::Template_Set(result, \"ZipOpenBase64\",      _zipOpenFileBase64);\n+\t\tNSV8Objects::Template_Set(result, \"ZipFileAsString\",    _zipGetFileAsString);\n+\t\tNSV8Objects::Template_Set(result, \"ZipFileAsBinary\",    _zipGetFileAsBinary);\n+\t\tNSV8Objects::Template_Set(result, \"ZipClose\",           _zipCloseFile);\n+\t\tNSV8Objects::Template_Set(result, \"getImageUrl\",        _GetImageUrl);\n+\t\tNSV8Objects::Template_Set(result, \"getImagesDirectory\", _GetImagesPath);\n+\t\tNSV8Objects::Template_Set(result, \"GetImageOriginalSize\", _GetImageOriginalSize);\n+\n+\t\treturn handle_scope.Escape(result);\n+\t}\n+\n+\tvoid CreateNativeObject(const v8::FunctionCallbackInfo<v8::Value>& args)\n+\t{\n+\t\tv8::Isolate* isolate = args.GetIsolate();\n+\t\tv8::HandleScope scope(isolate);\n+\n+\t\tif (CIsolateAdditionalData::CheckSingletonType(isolate, CIsolateAdditionalData::iadtSingletonNative))\n+\t\t{\n+\t\t\targs.GetReturnValue().Set(v8::Undefined(isolate));\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tv8::Handle<v8::ObjectTemplate> NativeObjectTemplate = CreateNativeControlTemplate(isolate);\n+\t\tCNativeControlEmbed* pNativeObject = new CNativeControlEmbed();\n+\n+\t\tv8::Local<v8::Object> obj = NativeObjectTemplate->NewInstance(isolate->GetCurrentContext()).ToLocalChecked();\n+\t\tobj->SetInternalField(0, v8::External::New(CV8Worker::GetCurrent(), pNativeObject));\n+\n+\t\targs.GetReturnValue().Set(obj);\n+\t}\n+\n+\t// \u0411\u0435\u0437 SaveChanges\n+\tvoid CreateNativeObjectBuilder(const v8::FunctionCallbackInfo<v8::Value>& args)\n+\t{\n+\t\tv8::Isolate* isolate = args.GetIsolate();\n+\t\tv8::HandleScope scope(isolate);\n+\n+\t\tif (CIsolateAdditionalData::CheckSingletonType(isolate, CIsolateAdditionalData::iadtSingletonNative))\n+\t\t{\n+\t\t\targs.GetReturnValue().Set(v8::Undefined(isolate));\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tv8::Handle<v8::ObjectTemplate> NativeObjectTemplate = CreateNativeControlTemplateBuilder(isolate);\n+\t\tCNativeControlEmbed* pNativeObject = new CNativeControlEmbed();\n+\n+\t\tv8::Local<v8::Object> obj = NativeObjectTemplate->NewInstance(isolate->GetCurrentContext()).ToLocalChecked();\n+\t\tobj->SetInternalField(0, v8::External::New(CV8Worker::GetCurrent(), pNativeObject));\n+\n+\t\targs.GetReturnValue().Set(obj);\n+\t}\n }\n \n void CNativeControlEmbed::CreateObjectInContext(const std::string& name, JSSmart<CJSContext> context)\n {\n-    v8::Isolate* current = CV8Worker::GetCurrent();\n-    context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObject));\n+\tv8::Isolate* current = CV8Worker::GetCurrent();\n+\tcontext->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObject));\n }\n \n void CNativeControlEmbed::CreateObjectBuilderInContext(const std::string& name, JSSmart<CJSContext> context)\n {\n-    v8::Isolate* current = CV8Worker::GetCurrent();\n-    context->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));\n+\tv8::Isolate* current = CV8Worker::GetCurrent();\n+\tcontext->m_internal->m_global->Set(current, name.c_str(), v8::FunctionTemplate::New(current, NSNativeControl::CreateNativeObjectBuilder));\n }"
        },
        {
          "filename": "DesktopEditor/doctrenderer/js_internal/v8/v8_base.cpp",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -219,6 +219,13 @@ namespace NSJSBase\n #ifdef V8_INSPECTOR\n \t\tv8_debug::disposeInspector(m_internal->m_context);\n #endif\n+\t\tunsigned int nEmbedDataCount = m_internal->m_isolate->GetNumberOfDataSlots();\n+\t\tfor (unsigned int i = 0; i < nEmbedDataCount; ++i)\n+\t\t{\n+\t\t\tCIsolateAdditionalData* pAdditionData = (CIsolateAdditionalData*)m_internal->m_isolate->GetData(i);\n+\t\t\tdelete pAdditionData;\n+\t\t}\n+\n \t\tm_internal->m_isolate->Dispose();\n \t\tm_internal->m_isolate = NULL;\n \t}"
        },
        {
          "filename": "DesktopEditor/doctrenderer/js_internal/v8/v8_base.h",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -72,6 +72,38 @@ class MallocArrayBufferAllocator : public v8::ArrayBuffer::Allocator\n };\n #endif\n \n+class CIsolateAdditionalData\n+{\n+public:\n+\tenum IsolateAdditionlDataType {\n+\t\tiadtSingletonNative = 0,\n+\t\tiadtUndefined = 255\n+\t};\n+\n+\tIsolateAdditionlDataType m_eType;\n+public:\n+\tCIsolateAdditionalData(const IsolateAdditionlDataType& type = iadtUndefined) { m_eType = type; }\n+\tvirtual ~CIsolateAdditionalData() {}\n+\n+\tstatic bool CheckSingletonType(v8::Isolate* isolate, const IsolateAdditionlDataType& type, const bool& isAdd = true)\n+\t{\n+\t\tunsigned int nCount = isolate->GetNumberOfDataSlots();\n+\t\tfor (unsigned int i = 0; i < nCount; ++i)\n+\t\t{\n+\t\t\tCIsolateAdditionalData* pData = (CIsolateAdditionalData*)isolate->GetData(i);\n+\t\t\tif (pData->m_eType == type)\n+\t\t\t\treturn true;\n+\t\t}\n+\n+\t\tif (isAdd)\n+\t\t{\n+\t\t\tisolate->SetData(nCount, (void*)(new CIsolateAdditionalData(type)));\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n+};\n+\n class CV8Initializer\n {\n private:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "87b5ae8f75c2813d5ccaf05609b7094d9c3121a3",
            "date": "2024-11-28T12:16:10Z",
            "author_login": "papacarlo"
          },
          {
            "sha": "182cd8d74a9396bd54dffa63057b50a0f3f0bf11",
            "date": "2024-11-11T09:46:29Z",
            "author_login": "K1rillProkhorov"
          },
          {
            "sha": "361bc70fe38da1fb1bdc335c212f05e5cc0fe004",
            "date": "2024-11-22T10:46:56Z",
            "author_login": "papacarlo"
          },
          {
            "sha": "6b21323e8c6a070f17405e47f7729a7aae3ec386",
            "date": "2024-11-22T10:46:53Z",
            "author_login": "papacarlo"
          },
          {
            "sha": "6d68d7aee5d662085b63bedabc2420d956268d0f",
            "date": "2024-11-19T20:58:51Z",
            "author_login": "ElenaSubbotina"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-416",
    "description": "A use after free issue discovered in ONLYOFFICE DocumentServer 4.0.3 through 7.3.2 allows remote attackers to run arbitrary code via crafted JavaScript file.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-08-14T13:15:10.420",
    "last_modified": "2024-11-21T07:59:52.057",
    "fix_date": "2023-02-04T20:49:41Z"
  },
  "references": [
    {
      "url": "http://onlyoffice.com",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://gist.github.com/merrychap/25eba8c4dd97c9e545edad1b8f0eadc2",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/DocumentServer",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/blob/8ca40a44ce47a86168327a46db91253cf6bb205d/DesktopEditor/doctrenderer/",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/blob/8ca40a44ce47a86168327a46db91253cf6bb205d/DesktopEditor/doctrenderer/embed/NativeControlEmbed.cpp#L110",
      "source": "cve@mitre.org",
      "tags": [
        "Not Applicable"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/commit/2b6ad83b36afd9845085b536969d366d1d61150a",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "http://onlyoffice.com",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://gist.github.com/merrychap/25eba8c4dd97c9e545edad1b8f0eadc2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/DocumentServer",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/blob/8ca40a44ce47a86168327a46db91253cf6bb205d/DesktopEditor/doctrenderer/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/blob/8ca40a44ce47a86168327a46db91253cf6bb205d/DesktopEditor/doctrenderer/embed/NativeControlEmbed.cpp#L110",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Not Applicable"
      ]
    },
    {
      "url": "https://github.com/ONLYOFFICE/core/commit/2b6ad83b36afd9845085b536969d366d1d61150a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:06.427961",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "core",
    "owner": "ONLYOFFICE",
    "created_at": "2016-03-25T13:17:48Z",
    "updated_at": "2025-01-14T09:01:47Z",
    "pushed_at": "2025-01-14T12:17:33Z",
    "size": 700501,
    "stars": 295,
    "forks": 226,
    "open_issues": 11,
    "watchers": 295,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "C++": 92006731,
      "C": 50721058,
      "HTML": 18212219,
      "C#": 1817142,
      "Python": 941403,
      "Shell": 847701,
      "Makefile": 608706,
      "QMake": 535433,
      "Assembly": 409390,
      "JavaScript": 303522,
      "Roff": 297075,
      "XSLT": 178310,
      "Objective-C": 120700,
      "DIGITAL Command Language": 120102,
      "Java": 117626,
      "M4": 112166,
      "Ada": 89079,
      "CMake": 86283,
      "Objective-C++": 84654,
      "Perl": 64805,
      "Awk": 52665,
      "CSS": 46269,
      "Pascal": 42413,
      "Tcl": 28357,
      "PHP": 21056,
      "Kotlin": 14208,
      "Batchfile": 12090,
      "Meson": 10876,
      "Dockerfile": 10437,
      "Emacs Lisp": 9098,
      "Clean": 6980,
      "ASP.NET": 4316,
      "VCL": 4275,
      "Module Management System": 3620,
      "Inno Setup": 1876,
      "SAS": 1847,
      "PowerShell": 1217,
      "1C Enterprise": 714,
      "sed": 477,
      "Max": 356,
      "ReScript": 244,
      "VBScript": 233
    },
    "commit_activity": {
      "total_commits_last_year": 1709,
      "avg_commits_per_week": 32.86538461538461,
      "days_active_last_year": 244
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:15:56.206515"
  }
}