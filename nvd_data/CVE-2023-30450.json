{
  "cve_id": "CVE-2023-30450",
  "github_data": {
    "repository": "redpanda-data/redpanda",
    "fix_commit": "58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
    "related_commits": [
      "58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
      "a839056381ea7cd71e68495854e388daf7a08ba7",
      "cf82b99457e2434d3674e424ab560fe201e6c365",
      "58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
      "a839056381ea7cd71e68495854e388daf7a08ba7",
      "cf82b99457e2434d3674e424ab560fe201e6c365"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
      "commit_date": "2022-11-29T20:09:58Z",
      "author": {
        "login": "r-vasquez",
        "type": "User",
        "stats": {
          "total_commits": 728,
          "average_weekly_commits": 2.3184713375796178,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 130
        }
      },
      "commit_message": {
        "title": "rpk: do not modify redpanda.rpc_server_tls field",
        "length": 190,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 39,
        "additions": 27,
        "deletions": 12
      },
      "files": [
        {
          "filename": "src/go/rpk/pkg/cli/cmd/debug/bundle_linux.go",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -392,7 +392,6 @@ func saveConfig(ps *stepParams, conf *config.Config) step {\n \t\t// We want to redact any blindly decoded parameters.\n \t\tredactOtherMap(conf.Other)\n \t\tredactOtherMap(conf.Redpanda.Other)\n-\t\tredactServerTLSSlice(conf.Redpanda.RPCServerTLS)\n \t\tredactServerTLSSlice(conf.Redpanda.KafkaAPITLS)\n \t\tredactServerTLSSlice(conf.Redpanda.AdminAPITLS)\n \t\tif conf.SchemaRegistry != nil {"
        },
        {
          "filename": "src/go/rpk/pkg/config/schema.go",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -59,7 +59,6 @@ type RedpandaNodeConfig struct {\n \tRack                       string                    `yaml:\"rack,omitempty\" json:\"rack\"`\n \tSeedServers                []SeedServer              `yaml:\"seed_servers\" json:\"seed_servers\"`\n \tRPCServer                  SocketAddress             `yaml:\"rpc_server,omitempty\" json:\"rpc_server\"`\n-\tRPCServerTLS               []ServerTLS               `yaml:\"rpc_server_tls,omitempty\" json:\"rpc_server_tls\"`\n \tKafkaAPI                   []NamedAuthNSocketAddress `yaml:\"kafka_api,omitempty\" json:\"kafka_api\"`\n \tKafkaAPITLS                []ServerTLS               `yaml:\"kafka_api_tls,omitempty\" json:\"kafka_api_tls\"`\n \tAdminAPI                   []NamedSocketAddress      `yaml:\"admin,omitempty\" json:\"admin\"`"
        },
        {
          "filename": "src/go/rpk/pkg/config/weak.go",
          "status": "modified",
          "additions": 14,
          "deletions": 2,
          "patch": "@@ -12,8 +12,10 @@ package config\n import (\n \t\"errors\"\n \t\"fmt\"\n+\t\"os\"\n \t\"reflect\"\n \t\"strconv\"\n+\t\"sync\"\n \n \t\"gopkg.in/yaml.v3\"\n )\n@@ -325,14 +327,16 @@ func (c *Config) UnmarshalYAML(n *yaml.Node) error {\n \treturn nil\n }\n \n+// once is used to ensure that we only print the rpc_server_tls bug warning once.\n+var once sync.Once\n+\n func (rpc *RedpandaNodeConfig) UnmarshalYAML(n *yaml.Node) error {\n \tvar internal struct {\n \t\tDirectory                  weakString                `yaml:\"data_directory\"`\n \t\tID                         weakInt                   `yaml:\"node_id\" `\n \t\tRack                       weakString                `yaml:\"rack\"`\n \t\tSeedServers                seedServers               `yaml:\"seed_servers\"`\n \t\tRPCServer                  SocketAddress             `yaml:\"rpc_server\"`\n-\t\tRPCServerTLS               serverTLSArray            `yaml:\"rpc_server_tls\"`\n \t\tKafkaAPI                   namedAuthNSocketAddresses `yaml:\"kafka_api\"`\n \t\tKafkaAPITLS                serverTLSArray            `yaml:\"kafka_api_tls\"`\n \t\tAdminAPI                   namedSocketAddresses      `yaml:\"admin\"`\n@@ -350,12 +354,20 @@ func (rpc *RedpandaNodeConfig) UnmarshalYAML(n *yaml.Node) error {\n \tif err := n.Decode(&internal); err != nil {\n \t\treturn err\n \t}\n+\n+\t// redpanda won't recognize rpc_server_tls if is a list.\n+\tv := reflect.ValueOf(internal.Other[\"rpc_server_tls\"])\n+\tif v.Kind() == reflect.Slice {\n+\t\tonce.Do(func() {\n+\t\t\tfmt.Fprintf(os.Stderr, \"WARNING: Due to an old rpk bug, your redpanda.yaml's redpanda.rpc_server_tls property is an array, and redpanda reads the field as a struct. rpk cannot automatically fix this: brokers would not be able to rejoin the cluster during a rolling upgrade. To enable TLS on broker RPC ports, you must turn off your cluster, switch the redpanda.rpc_server_tls field to a struct, and then turn your cluster back on. To switch from a list to a struct, replace the single dash under redpanda.rpc_server_tls with a space. This message will continue to appear while redpanda.rpc_server_tls exists and is an array\\n\")\n+\t\t})\n+\t}\n+\n \trpc.Directory = string(internal.Directory)\n \trpc.ID = int(internal.ID)\n \trpc.Rack = string(internal.Rack)\n \trpc.SeedServers = internal.SeedServers\n \trpc.RPCServer = internal.RPCServer\n-\trpc.RPCServerTLS = internal.RPCServerTLS\n \trpc.KafkaAPI = internal.KafkaAPI\n \trpc.KafkaAPITLS = internal.KafkaAPITLS\n \trpc.AdminAPI = internal.AdminAPI"
        },
        {
          "filename": "src/go/rpk/pkg/config/weak_test.go",
          "status": "modified",
          "additions": 13,
          "deletions": 8,
          "patch": "@@ -980,10 +980,7 @@ rpk:\n \t\t\t\t\tAdminAPITLS: []ServerTLS{\n \t\t\t\t\t\t{Enabled: false, CertFile: \"certs/tls-cert.pem\"},\n \t\t\t\t\t},\n-\t\t\t\t\tRPCServer: SocketAddress{\"0.0.0.0\", 33145},\n-\t\t\t\t\tRPCServerTLS: []ServerTLS{\n-\t\t\t\t\t\t{RequireClientAuth: false, TruststoreFile: \"certs/tls-ca.pem\"},\n-\t\t\t\t\t},\n+\t\t\t\t\tRPCServer:        SocketAddress{\"0.0.0.0\", 33145},\n \t\t\t\t\tAdvertisedRPCAPI: &SocketAddress{\"0.0.0.0\", 33145},\n \t\t\t\t\tKafkaAPI: []NamedAuthNSocketAddress{\n \t\t\t\t\t\t{\"0.0.0.0\", 9092, \"internal\", nil},\n@@ -1002,6 +999,13 @@ rpk:\n \t\t\t\t\t},\n \t\t\t\t\tOther: map[string]interface{}{\n \t\t\t\t\t\t\"enable_admin_api\": true,\n+\t\t\t\t\t\t// This one is a slice\n+\t\t\t\t\t\t\"rpc_server_tls\": []interface{}{\n+\t\t\t\t\t\t\tmap[string]interface{}{\n+\t\t\t\t\t\t\t\t\"require_client_auth\": false,\n+\t\t\t\t\t\t\t\t\"truststore_file\":     \"certs/tls-ca.pem\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n \t\t\t\t},\n \t\t\t\tPandaproxy: &Pandaproxy{\n@@ -1212,10 +1216,7 @@ rpk:\n \t\t\t\t\tAdminAPITLS: []ServerTLS{\n \t\t\t\t\t\t{Enabled: false, CertFile: \"certs/tls-cert.pem\"},\n \t\t\t\t\t},\n-\t\t\t\t\tRPCServer: SocketAddress{\"0.0.0.0\", 33145},\n-\t\t\t\t\tRPCServerTLS: []ServerTLS{\n-\t\t\t\t\t\t{RequireClientAuth: false, TruststoreFile: \"certs/tls-ca.pem\"},\n-\t\t\t\t\t},\n+\t\t\t\t\tRPCServer:        SocketAddress{\"0.0.0.0\", 33145},\n \t\t\t\t\tAdvertisedRPCAPI: &SocketAddress{\"0.0.0.0\", 33145},\n \t\t\t\t\tKafkaAPI: []NamedAuthNSocketAddress{\n \t\t\t\t\t\t{\"0.0.0.0\", 9092, \"internal\", nil},\n@@ -1236,6 +1237,10 @@ rpk:\n \t\t\t\t\t},\n \t\t\t\t\tOther: map[string]interface{}{\n \t\t\t\t\t\t\"enable_admin_api\": true,\n+\t\t\t\t\t\t\"rpc_server_tls\": map[string]interface{}{\n+\t\t\t\t\t\t\t\"require_client_auth\": false,\n+\t\t\t\t\t\t\t\"truststore_file\":     \"certs/tls-ca.pem\",\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n \t\t\t\t},\n \t\t\t\tPandaproxy: &Pandaproxy{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ede5c92b797364502584236a6ba69959ec7054d9",
            "date": "2025-01-25T23:54:18Z",
            "author_login": "rockwotj"
          },
          {
            "sha": "9c416929f637cfc28e0c776f6b6856f1a5c444be",
            "date": "2025-01-25T02:25:54Z",
            "author_login": "dotnwat"
          },
          {
            "sha": "795947529491ff8555af22908109711305649205",
            "date": "2025-01-25T02:20:14Z",
            "author_login": "dotnwat"
          },
          {
            "sha": "dd088e4b21aa81c7c7d9c143c4ed41430755bed7",
            "date": "2025-01-24T23:33:59Z",
            "author_login": "ztlpn"
          },
          {
            "sha": "bfe7a51a3c584bb541142201540a4446e5ecbc8d",
            "date": "2025-01-24T21:32:40Z",
            "author_login": "rpdevmp"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": null,
    "description": "rpk in Redpanda before 23.1.2 mishandles the redpanda.rpc_server_tls field, leading to (for example) situations in which there is a data type mismatch that cannot be automatically fixed by rpk, and instead a user must reconfigure (while a cluster is turned off) in order to have TLS on broker RPC ports. NOTE: the fix was also backported to the 22.2 and 22.3 branches.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-08T23:15:06.930",
    "last_modified": "2024-11-21T08:00:12.513",
    "fix_date": "2022-11-29T20:09:58Z"
  },
  "references": [
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/a839056381ea7cd71e68495854e388daf7a08ba7",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/cf82b99457e2434d3674e424ab560fe201e6c365",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/compare/v23.1.1...v23.1.2",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/pull/7719",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/58795aa07e88e0a63cebf4e1d9fcc717ceef0557",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/a839056381ea7cd71e68495854e388daf7a08ba7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/commit/cf82b99457e2434d3674e424ab560fe201e6c365",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/compare/v23.1.1...v23.1.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/redpanda-data/redpanda/pull/7719",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.720922",
    "processing_status": "enhanced"
  }
}