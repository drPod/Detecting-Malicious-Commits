{
  "cve_id": "CVE-2023-30547",
  "github_data": {
    "repository": "patriksimek/vm2",
    "fix_commit": "4b22e87b102d97d45d112a0931dba1aef7eea049",
    "related_commits": [
      "4b22e87b102d97d45d112a0931dba1aef7eea049",
      "f3db4dee4d76b19869df05ba7880d638a880edd5",
      "4b22e87b102d97d45d112a0931dba1aef7eea049",
      "f3db4dee4d76b19869df05ba7880d638a880edd5"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "4b22e87b102d97d45d112a0931dba1aef7eea049",
      "commit_date": "2023-04-12T08:25:46Z",
      "author": {
        "login": "XmiliaH",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ensure every catch block is protected",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 26,
        "additions": 13,
        "deletions": 13
      },
      "files": [
        {
          "filename": "lib/transformer.js",
          "status": "modified",
          "additions": 13,
          "deletions": 13,
          "patch": "@@ -113,30 +113,30 @@ function transformer(args, body, isAsync, isGenerator, filename) {\n \t\tif (nodeType === 'CatchClause') {\n \t\t\tconst param = node.param;\n \t\t\tif (param) {\n-\t\t\t\tif (param.type === 'ObjectPattern') {\n+\t\t\t\tif (param.type === 'Identifier') {\n+\t\t\t\t\tconst name = assertType(param, 'Identifier').name;\n+\t\t\t\t\tconst cBody = assertType(node.body, 'BlockStatement');\n+\t\t\t\t\tif (cBody.body.length > 0) {\n+\t\t\t\t\t\tinsertions.push({\n+\t\t\t\t\t\t\t__proto__: null,\n+\t\t\t\t\t\t\tpos: cBody.body[0].start,\n+\t\t\t\t\t\t\torder: TO_LEFT,\n+\t\t\t\t\t\t\tcoder: () => `${name}=${INTERNAL_STATE_NAME}.handleException(${name});`\n+\t\t\t\t\t\t});\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n \t\t\t\t\tinsertions.push({\n \t\t\t\t\t\t__proto__: null,\n \t\t\t\t\t\tpos: node.start,\n \t\t\t\t\t\torder: TO_RIGHT,\n-\t\t\t\t\t\tcoder: () => `catch(${tmpname}){try{throw(${tmpname}=${INTERNAL_STATE_NAME}.handleException(${tmpname}));}`\n+\t\t\t\t\t\tcoder: () => `catch(${tmpname}){${tmpname}=${INTERNAL_STATE_NAME}.handleException(${tmpname});try{throw ${tmpname};}`\n \t\t\t\t\t});\n \t\t\t\t\tinsertions.push({\n \t\t\t\t\t\t__proto__: null,\n \t\t\t\t\t\tpos: node.body.end,\n \t\t\t\t\t\torder: TO_LEFT,\n \t\t\t\t\t\tcoder: () => `}`\n \t\t\t\t\t});\n-\t\t\t\t} else {\n-\t\t\t\t\tconst name = assertType(param, 'Identifier').name;\n-\t\t\t\t\tconst cBody = assertType(node.body, 'BlockStatement');\n-\t\t\t\t\tif (cBody.body.length > 0) {\n-\t\t\t\t\t\tinsertions.push({\n-\t\t\t\t\t\t\t__proto__: null,\n-\t\t\t\t\t\t\tpos: cBody.body[0].start,\n-\t\t\t\t\t\t\torder: TO_LEFT,\n-\t\t\t\t\t\t\tcoder: () => `${name}=${INTERNAL_STATE_NAME}.handleException(${name});`\n-\t\t\t\t\t\t});\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t} else if (nodeType === 'WithStatement') {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b51d33c49b61e03cf67a075741790e9b938dd80f",
            "date": "2023-07-10T22:41:05Z",
            "author_login": "patriksimek"
          },
          {
            "sha": "642b2002397d36f650c40917f174aec63feb5b89",
            "date": "2023-07-09T14:55:57Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "1663f231ec02db473ed5b743e3b91b8a2ffc7982",
            "date": "2023-05-16T05:27:48Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "cfa3fc6f81be05ce9ed08a79a406ebe3b61ead3e",
            "date": "2023-05-16T05:27:39Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "2f446e5d19e6539b5164b45b1f8bd4ded4dfc085",
            "date": "2023-05-15T11:09:44Z",
            "author_login": "XmiliaH"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "vm2 is a sandbox that can run untrusted code with whitelisted Node's built-in modules. There exists a vulnerability in exception sanitization of vm2 for versions up to 3.9.16, allowing attackers to raise an unsanitized host exception inside `handleException()` which can be used to escape the sandbox and run arbitrary code in host context. This vulnerability was patched in the release of version `3.9.17` of `vm2`. There are no known workarounds for this vulnerability. Users are advised to upgrade.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-17T22:15:10.487",
    "last_modified": "2024-11-21T08:00:24.030",
    "fix_date": "2023-04-12T08:25:46Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.803571",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "vm2",
    "owner": "patriksimek",
    "created_at": "2014-01-14T11:31:39Z",
    "updated_at": "2025-01-25T21:04:49Z",
    "pushed_at": "2024-08-05T12:21:56Z",
    "size": 633,
    "stars": 3891,
    "forks": 298,
    "open_issues": 28,
    "watchers": 3891,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 241704,
      "TypeScript": 7
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:25:16.420073"
  }
}