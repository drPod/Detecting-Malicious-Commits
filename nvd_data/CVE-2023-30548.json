{
  "cve_id": "CVE-2023-30548",
  "github_data": {
    "repository": "gatsbyjs/gatsby",
    "fix_commit": "5f442081b227cc0879babb96858f970c4ce94c6b",
    "related_commits": [
      "5f442081b227cc0879babb96858f970c4ce94c6b",
      "dcf88ed01df2c26e0c93a41e1a2a840076d8247e",
      "5f442081b227cc0879babb96858f970c4ce94c6b",
      "dcf88ed01df2c26e0c93a41e1a2a840076d8247e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "5f442081b227cc0879babb96858f970c4ce94c6b",
      "commit_date": "2023-03-29T11:08:27Z",
      "author": {
        "login": "gatsbybot",
        "type": "User",
        "stats": {
          "total_commits": 127,
          "average_weekly_commits": 0.2504930966469428,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 78
        }
      },
      "commit_message": {
        "title": "fix(gatsby-plugin-sharp): don't serve static assets that are not result of currently triggered deferred job (#37796) (#37799)",
        "length": 390,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 24,
        "additions": 16,
        "deletions": 8
      },
      "files": [
        {
          "filename": "e2e-tests/development-runtime/SHOULD_NOT_SERVE",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+this file shouldn't be allowed to be served"
        },
        {
          "filename": "e2e-tests/development-runtime/package.json",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -32,14 +32,15 @@\n   \"license\": \"MIT\",\n   \"scripts\": {\n     \"build\": \"gatsby build\",\n-    \"develop\": \"cross-env CYPRESS_SUPPORT=y ENABLE_GATSBY_REFRESH_ENDPOINT=y GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI=y gatsby develop\",\n+    \"develop\": \"cross-env CYPRESS_SUPPORT=y ENABLE_GATSBY_REFRESH_ENDPOINT=y GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI=y GATSBY_ENABLE_LAZY_IMAGES_IN_CI=y gatsby develop\",\n     \"serve-static-files\": \"node ./serve-static-files.mjs\",\n     \"serve\": \"gatsby serve\",\n     \"clean\": \"gatsby clean\",\n     \"typecheck\": \"tsc --noEmit\",\n     \"start\": \"npm run develop\",\n     \"format\": \"prettier --write \\\"src/**/*.js\\\"\",\n     \"test\": \"npm run start-server-and-test || (npm run reset && exit 1)\",\n+    \"test:dir-traversel-access\": \"! curl -f http://localhost:8000/%2e%2e/SHOULD_NOT_SERVE\",\n     \"posttest\": \"npm run reset\",\n     \"reset\": \"node scripts/reset.js\",\n     \"reset:preview\": \"curl -X POST http://localhost:8000/__refresh\",\n@@ -55,7 +56,7 @@\n     \"playwright:debug\": \"playwright test --project=chromium --debug\",\n     \"start-server-and-test:playwright\": \"start-server-and-test develop http://localhost:8000 serve-static-files http://localhost:8888 playwright\",\n     \"start-server-and-test:playwright-debug\": \"start-server-and-test develop http://localhost:8000 serve-static-files http://localhost:8888 playwright:debug\",\n-    \"combined\": \"npm run playwright && npm run cy:run\",\n+    \"combined\": \"npm run playwright && npm run cy:run && npm run test:dir-traversel-access\",\n     \"postinstall\": \"playwright install chromium\"\n   },\n   \"devDependencies\": {"
        },
        {
          "filename": "e2e-tests/production-runtime/SHOULD_NOT_SERVE",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+this file shouldn't be allowed to be served"
        },
        {
          "filename": "e2e-tests/production-runtime/package.json",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -36,6 +36,7 @@\n     \"start\": \"npm run develop\",\n     \"clean\": \"gatsby clean\",\n     \"test\": \"npm run build && npm run start-server-and-test && npm run test-env-vars\",\n+    \"test:dir-traversel-access\": \"! curl -f http://localhost:9000/%2e%2e/SHOULD_NOT_SERVE\",\n     \"test:offline\": \"npm run build:offline && yarn start-server-and-test:offline && npm run test-env-vars\",\n     \"test-env-vars\": \" node __tests__/env-vars.js\",\n     \"start-server-and-test\": \"start-server-and-test serve http://localhost:9000 serve-static-files http://localhost:8888 combined\",\n@@ -51,7 +52,7 @@\n     \"playwright:debug\": \"playwright test --project=chromium --debug\",\n     \"start-server-and-test:playwright\": \"start-server-and-test serve http://localhost:9000 serve-static-files http://localhost:8888 playwright\",\n     \"start-server-and-test:playwright-debug\": \"start-server-and-test serve http://localhost:9000 serve-static-files http://localhost:8888 playwright:debug\",\n-    \"combined\": \"npm run playwright && npm run cy:run\",\n+    \"combined\": \"npm run playwright && npm run cy:run && npm run test:dir-traversel-access\",\n     \"postinstall\": \"playwright install chromium\"\n   },\n   \"devDependencies\": {"
        },
        {
          "filename": "packages/gatsby-plugin-sharp/src/gatsby-node.js",
          "status": "modified",
          "additions": 8,
          "deletions": 4,
          "patch": "@@ -33,16 +33,17 @@ exports.onCreateDevServer = async ({ app, cache, reporter }) => {\n     const decodedURI = decodeURIComponent(req.path)\n     const pathOnDisk = path.resolve(path.join(`./public/`, decodedURI))\n \n-    if (await pathExists(pathOnDisk)) {\n-      return res.sendFile(pathOnDisk)\n-    }\n-\n     const jobContentDigest = await cache.get(decodedURI)\n     const cacheResult = jobContentDigest\n       ? await cache.get(jobContentDigest)\n       : null\n \n     if (!cacheResult) {\n+      // this handler is meant to handle lazy images only (images that were registered for\n+      // processing, but deffered to be processed only on request in develop server).\n+      // If we don't have cache result - it means that this is not lazy image or that\n+      // image was already handled in which case `express.static` handler (that is earlier\n+      // than this handler) should take care of handling request.\n       return next()\n     }\n \n@@ -64,6 +65,9 @@ exports.onCreateDevServer = async ({ app, cache, reporter }) => {\n       await removeCachedValue(cache, jobContentDigest)\n     }\n \n+    // we reach this point only when this is a lazy image that we just processed\n+    // because `express.static` is earlier handler, we do have to manually serve\n+    // produced file for current request\n     return res.sendFile(pathOnDisk)\n   })\n }"
        },
        {
          "filename": "packages/gatsby-plugin-sharp/src/index.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -149,7 +149,7 @@ function createJob(job, { reporter }) {\n function lazyJobsEnabled() {\n   return (\n     process.env.gatsby_executing_command === `develop` &&\n-    !isCI() &&\n+    (!isCI() || process.env.GATSBY_ENABLE_LAZY_IMAGES_IN_CI) &&\n     !(\n       process.env.ENABLE_GATSBY_EXTERNAL_JOBS === `true` ||\n       process.env.ENABLE_GATSBY_EXTERNAL_JOBS === `1`"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 2,
        "test_files": 4,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa403a4145286782d0989462f9bf3bb1525bc2e3",
            "date": "2025-01-09T09:11:00Z",
            "author_login": "pieh"
          },
          {
            "sha": "4753a5f6270f81c9fff2ab0f88a4796c86fe9ebe",
            "date": "2025-01-07T07:21:12Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "9b97d855056987a922e8bd9683e29cff584b9d35",
            "date": "2025-01-07T07:11:41Z",
            "author_login": "gatsbybot"
          },
          {
            "sha": "baa1b8e00780228d4f4bb7cb12624f1050bea894",
            "date": "2025-01-02T14:51:20Z",
            "author_login": "pieh"
          },
          {
            "sha": "8252e826a25535de032fc3cbc685d9476e4474ce",
            "date": "2025-01-02T12:07:44Z",
            "author_login": "serhalp"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "gatsby-plugin-sharp is a plugin for the gatsby framework which exposes functions built on the Sharp image processing library. The gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (`gatsby develop`). It should be noted that by default gatsby develop is only accessible via the localhost 127.0.0.1, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as --host 0.0.0.0, -H 0.0.0.0, or the GATSBY_HOST=0.0.0.0 environment variable. Attackers exploiting this vulnerability will have read access to all files within the scope of the server process. A patch has been introduced in gatsby-plugin-sharp@5.8.1 and gatsby-plugin-sharp@4.25.1 which mitigates the issue by ensuring that included paths remain within the project directory. As stated above, by default gatsby develop is only exposed to the localhost 127.0.0.1. For those using the develop server in the default configuration no risk is posed. If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability. Users are non the less encouraged to upgrade to a safe version.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-17T21:15:07.923",
    "last_modified": "2024-11-21T08:00:24.187",
    "fix_date": "2023-03-29T11:08:27Z"
  },
  "references": [
    {
      "url": "https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.801728",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "gatsby",
    "owner": "gatsbyjs",
    "created_at": "2015-05-21T22:43:05Z",
    "updated_at": "2025-01-26T00:57:05Z",
    "pushed_at": "2025-01-24T05:49:04Z",
    "size": 1143563,
    "stars": 55632,
    "forks": 10306,
    "open_issues": 401,
    "watchers": 55632,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 5322282,
      "TypeScript": 3484556,
      "CSS": 94587,
      "HTML": 62235,
      "MDX": 40139,
      "Shell": 11157,
      "Dockerfile": 2751,
      "PHP": 2010,
      "EJS": 461,
      "Python": 281,
      "Less": 218,
      "SCSS": 218,
      "Stylus": 206
    },
    "commit_activity": {
      "total_commits_last_year": 89,
      "avg_commits_per_week": 1.7115384615384615,
      "days_active_last_year": 43
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:56:45.156027"
  }
}