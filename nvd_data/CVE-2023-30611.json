{
  "cve_id": "CVE-2023-30611",
  "github_data": {
    "repository": "discourse/discourse-reactions",
    "fix_commit": "01aca15b2774c088f3673118e92e9469f37d2fb6",
    "related_commits": [
      "01aca15b2774c088f3673118e92e9469f37d2fb6",
      "01aca15b2774c088f3673118e92e9469f37d2fb6"
    ],
    "patch_url": "https://github.com/discourse/discourse-reactions/commit/01aca15b2774c088f3673118e92e9469f37d2fb6.patch",
    "fix_commit_details": {
      "sha": "01aca15b2774c088f3673118e92e9469f37d2fb6",
      "commit_date": "2023-04-03T17:34:28Z",
      "author": {
        "login": "oblakeerickson",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "SECURITY: Publish reactions based on topic permissions (#218)",
        "length": 135,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 48,
        "deletions": 11
      },
      "files": [
        {
          "filename": "app/controllers/discourse_reactions/custom_reactions_controller.rb",
          "status": "modified",
          "additions": 10,
          "deletions": 7,
          "patch": "@@ -138,7 +138,7 @@ def reactions_received\n   def post_reactions_users\n     id = params.require(:id).to_i\n     reaction_value = params[:reaction_value]\n-    post = Post.find_by(id: id)\n+    post = fetch_post_from_params\n \n     raise Discourse::InvalidParameters if !post\n \n@@ -237,17 +237,20 @@ def format_likes_users(likes)\n   end\n \n   def fetch_post_from_params\n-    post = Post.find(params[:post_id])\n+    post_id = params[:post_id] || params[:id]\n+    post = Post.find(post_id)\n     guardian.ensure_can_see!(post)\n     post\n   end\n \n   def publish_change_to_clients!(post, reaction: nil, previous_reaction: nil)\n-    MessageBus.publish(\n-      \"/topic/#{post.topic.id}/reactions\",\n-      post_id: post.id,\n-      reactions: [reaction, previous_reaction].compact.uniq,\n-    )\n+    message = { post_id: post.id, reactions: [reaction, previous_reaction].compact.uniq }\n+\n+    opts = {}\n+    secure_audience = post.topic.secure_audience_publish_messages\n+    opts = secure_audience if secure_audience[:user_ids] != [] && secure_audience[:group_ids] != []\n+\n+    MessageBus.publish(\"/topic/#{post.topic.id}/reactions\", message, opts)\n   end\n \n   def secure_reaction_users!(reaction_users)"
        },
        {
          "filename": "plugin.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@\n \n # name: discourse-reactions\n # about: Allows users to react with emojis to a post\n-# version: 0.2\n+# version: 0.3\n # author: Ahmed Gagan, Rafael dos Santos Silva, Kris Aubuchon, Joffrey Jaffeux, Kris Kotlarek, Jordan Vidrine\n # url: https://github.com/discourse/discourse-reactions\n # transpile_js: true"
        },
        {
          "filename": "spec/requests/custom_reactions_controller_spec.rb",
          "status": "modified",
          "additions": 37,
          "deletions": 3,
          "patch": "@@ -9,10 +9,14 @@\n   fab!(:user_3) { Fabricate(:user) }\n   fab!(:user_4) { Fabricate(:user) }\n   fab!(:user_5) { Fabricate(:user) }\n+  fab!(:admin) { Fabricate(:admin) }\n   fab!(:post_2) { Fabricate(:post, user: user_1) }\n+  fab!(:private_topic) { Fabricate(:private_message_topic, user: user_2, recipient: admin) }\n+  fab!(:private_post) { Fabricate(:post, topic: private_topic) }\n   fab!(:reaction_1) { Fabricate(:reaction, post: post_2, reaction_value: \"laughing\") }\n   fab!(:reaction_2) { Fabricate(:reaction, post: post_2, reaction_value: \"open_mouth\") }\n   fab!(:reaction_3) { Fabricate(:reaction, post: post_2, reaction_value: \"hugs\") }\n+  fab!(:reaction_4) { Fabricate(:reaction, post: private_post, reaction_value: \"hugs\") }\n   fab!(:like) do\n     Fabricate(\n       :post_action,\n@@ -33,6 +37,9 @@\n   fab!(:reaction_user_4) do\n     Fabricate(:reaction_user, reaction: reaction_2, user: user_3, post: post_2)\n   end\n+  fab!(:reaction_user_5) do\n+    Fabricate(:reaction_user, reaction: reaction_4, user: admin, post: private_post)\n+  end\n \n   before do\n     SiteSetting.discourse_reactions_enabled = true\n@@ -43,6 +50,7 @@\n \n   describe \"#toggle\" do\n     let(:payload_with_user) { [{ \"id\" => \"hugs\", \"type\" => \"emoji\", \"count\" => 1 }] }\n+    let(:api_key) { Fabricate(:api_key, user: admin, created_by: admin) }\n \n     it \"toggles reaction\" do\n       sign_in(user_1)\n@@ -118,6 +126,21 @@\n       expect(messages[1].data[:reactions]).to contain_exactly(\"cry\", \"angry\")\n     end\n \n+    it \"publishes MessageBus messages securely\" do\n+      sign_in(user_1)\n+      messages =\n+        MessageBus.track_publish(\"/topic/#{private_post.topic.id}/reactions\") do\n+          put \"/discourse-reactions/posts/#{private_post.id}/custom-reactions/cry/toggle.json\",\n+              headers: {\n+                \"HTTP_API_KEY\" => api_key.key,\n+                \"HTTP_API_USERNAME\" => api_key.user.username,\n+              }\n+        end\n+      user_1_messages = messages.find { |m| m.user_ids.include?(user_1.id) }\n+      expect(messages.count).to eq(1)\n+      expect(user_1_messages).to eq(nil)\n+    end\n+\n     it \"errors when reaction is invalid\" do\n       sign_in(user_1)\n       expect do\n@@ -388,12 +411,12 @@\n       )\n     end\n \n-    it \"gives 400 ERROR when the post_id OR reaction_value is invalid\" do\n+    it \"gives 404 ERROR when the post_id OR reaction_value is invalid\" do\n       get \"/discourse-reactions/posts/1000000/reactions-users.json\"\n-      expect(response.status).to eq(400)\n+      expect(response.status).to eq(404)\n \n       get \"/discourse-reactions/posts/1000000/reactions-users.json?reaction_value=test\"\n-      expect(response.status).to eq(400)\n+      expect(response.status).to eq(404)\n     end\n \n     it \"merges identic custom reaction into likes\" do\n@@ -413,6 +436,17 @@\n       parsed = response.parsed_body\n       expect(parsed[\"reaction_users\"][0][\"count\"]).to eq(like_count + reaction_count)\n     end\n+\n+    it \"does not show reaction_users on PMs without permission\" do\n+      get \"/discourse-reactions/posts/#{private_post.id}/reactions-users.json\"\n+      expect(response.status).to eq(403)\n+    end\n+\n+    it \"shows reaction_users on PMs with permission\" do\n+      sign_in(user_2)\n+      get \"/discourse-reactions/posts/#{private_post.id}/reactions-users.json\"\n+      expect(response.status).to eq(200)\n+    end\n   end\n \n   describe \"positive notifications\" do"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d34356646221897bdb9cffa11613a802fe1c93d6",
            "date": "2025-01-09T16:42:43Z",
            "author_login": "davidtaylorhq"
          },
          {
            "sha": "c754dc988b243cecea8f82f413f1037a62537237",
            "date": "2025-01-03T13:02:29Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "fac3464f47008e20c96bd08b1bfaf13131a38db0",
            "date": "2024-12-30T19:22:49Z",
            "author_login": "megothss"
          },
          {
            "sha": "9ed228b02da0297a29d902abab37c5f34626c691",
            "date": "2024-12-09T08:27:55Z",
            "author_login": "OsamaSayegh"
          },
          {
            "sha": "433a07a5e426a63b8e189e41470b3eec21ca750a",
            "date": "2024-12-04T01:44:47Z",
            "author_login": "tyb-talks"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Discourse-reactions is a plugin that allows user to add their reactions to the post in the Discourse messaging platform. In affected versions data about what reactions were performed on a post in a private topic could be leaked. This issue has been addressed in version 0.3. Users are advised to upgrade. Users unable to upgrade should disable the discourse-reactions plugin to fully mitigate the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-04-19T18:15:07.490",
    "last_modified": "2024-11-21T08:00:30.280",
    "fix_date": "2023-04-03T17:34:28Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse-reactions/commit/01aca15b2774c088f3673118e92e9469f37d2fb6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-reactions/security/advisories/GHSA-4cgc-c7vh-94g6",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-reactions/commit/01aca15b2774c088f3673118e92e9469f37d2fb6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse-reactions/security/advisories/GHSA-4cgc-c7vh-94g6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:11.815531",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse-reactions",
    "owner": "discourse",
    "created_at": "2020-12-01T19:35:29Z",
    "updated_at": "2025-01-09T16:42:47Z",
    "pushed_at": "2025-01-09T16:42:45Z",
    "size": 1254,
    "stars": 37,
    "forks": 19,
    "open_issues": 3,
    "watchers": 37,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Ruby": 164790,
      "JavaScript": 97692,
      "SCSS": 10233,
      "Handlebars": 1832
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:19:26.765965"
  }
}