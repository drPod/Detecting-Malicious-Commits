{
  "cve_id": "CVE-2023-31143",
  "github_data": {
    "repository": "mage-ai/mage-ai",
    "fix_commit": "f63cd00f6a3be372397d37a4c9a49bfaf50d7650",
    "related_commits": [
      "f63cd00f6a3be372397d37a4c9a49bfaf50d7650",
      "f63cd00f6a3be372397d37a4c9a49bfaf50d7650"
    ],
    "patch_url": "https://github.com/mage-ai/mage-ai/commit/f63cd00f6a3be372397d37a4c9a49bfaf50d7650.patch",
    "fix_commit_details": {
      "sha": "f63cd00f6a3be372397d37a4c9a49bfaf50d7650",
      "commit_date": "2023-05-04T18:26:49Z",
      "author": {
        "login": "dy46",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[dy] Fix terminal user authentication (#2586)",
        "length": 111,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 75,
        "additions": 59,
        "deletions": 16
      },
      "files": [
        {
          "filename": "mage_ai/frontend/components/Terminal/index.tsx",
          "status": "modified",
          "additions": 22,
          "deletions": 12,
          "patch": "@@ -1,6 +1,7 @@\n import Ansi from 'ansi-to-react';\n import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n \n+import AuthToken from '@api/utils/AuthToken';\n import ClickOutside from '@oracle/components/ClickOutside';\n import Text from '@oracle/elements/Text';\n import {\n@@ -26,6 +27,7 @@ import {\n   KEY_CODE_META,\n   KEY_CODE_V,\n } from '@utils/hooks/keyboardShortcuts/constants';\n+import { OAUTH2_APPLICATION_CLIENT_ID } from '@api/constants';\n import { onlyKeysPresent } from '@utils/hooks/keyboardShortcuts/utils';\n import { pauseEvent } from '@utils/events';\n import { useKeyboardContext } from '@context/Keyboard';\n@@ -58,6 +60,14 @@ function Terminal({\n \n   const [stdout, setStdout] = useState<string>();\n \n+  const token = useMemo(() => new AuthToken(), []);\n+  const oauthWebsocketData = useMemo(() => ({\n+    api_key: OAUTH2_APPLICATION_CLIENT_ID,\n+    token: token.decodedToken.token,\n+  }), [\n+    token,\n+  ]);\n+\n   useEffect(() => {\n     if (lastMessage) {\n       const msg = JSON.parse(lastMessage.data);\n@@ -122,12 +132,10 @@ function Terminal({\n   }, [command]);\n \n   const sendCommand = useCallback((cmd) => {\n-    sendMessage(JSON.stringify([\n-      'stdin', cmd,\n-    ]));\n-    sendMessage(JSON.stringify([\n-      'stdin', '\\r',\n-    ]));\n+    sendMessage(JSON.stringify({\n+      ...oauthWebsocketData,\n+      command: ['stdin', cmd + '\\r'],\n+    }));\n     if (cmd?.length >= 2) {\n       setCommandIndex(commandHistory.length + 1);\n       setCommandHistory(prev => prev.concat(cmd));\n@@ -174,12 +182,14 @@ function Terminal({\n         pauseEvent(event);\n         if (onlyKeysPresent([KEY_CODE_CONTROL, KEY_CODE_C], keyMapping)) {\n           if (command?.length >= 0) {\n-            sendMessage(JSON.stringify([\n-              'stdin', command,\n-            ]));\n-            sendMessage(JSON.stringify([\n-              'stdin', '\\x03',\n-            ]));\n+            sendMessage(JSON.stringify({\n+              ...oauthWebsocketData,\n+              command: ['stdin', command],\n+            }));\n+            sendMessage(JSON.stringify({\n+              ...oauthWebsocketData,\n+              command: ['stdin', '\\x03'],\n+            }));\n             setCursorIndex(0);\n           }\n           setCommand('');"
        },
        {
          "filename": "mage_ai/server/terminal_server.py",
          "status": "modified",
          "additions": 37,
          "deletions": 4,
          "patch": "@@ -1,6 +1,14 @@\n-from mage_ai.api.utils import authenticate_client_and_token\n+from mage_ai.api.utils import (\n+    authenticate_client_and_token,\n+    has_at_least_editor_role,\n+)\n from mage_ai.orchestration.db.models.oauth import Oauth2Application\n-from mage_ai.settings import REQUIRE_USER_AUTHENTICATION\n+from mage_ai.settings import (\n+    is_disable_pipeline_edit_access,\n+    REQUIRE_USER_AUTHENTICATION,\n+)\n+from tornado import gen\n+import json\n import terminado\n import tornado.websocket\n import re\n@@ -78,8 +86,6 @@ def open(self, *args, **kwargs):\n                     oauth_token.user\n                 if valid:\n                     user = oauth_token.user\n-                else:\n-                    raise Exception('Invalid token')\n \n         self.term_name = term_name if term_name else 'tty'\n         if user:\n@@ -91,6 +97,33 @@ def open(self, *args, **kwargs):\n         self.terminal.clients.append(self)\n         self.__initiate_terminal(self.terminal)\n \n+    @gen.coroutine\n+    def on_message(self, raw_message):\n+        message = json.loads(raw_message)\n+\n+        api_key = message.get('api_key')\n+        token = message.get('token')\n+        command = message.get('command')\n+\n+        if REQUIRE_USER_AUTHENTICATION or is_disable_pipeline_edit_access():\n+            valid = False\n+\n+            if api_key and token:\n+                oauth_client = Oauth2Application.query.filter(\n+                    Oauth2Application.client_id == api_key,\n+                ).first()\n+                if oauth_client:\n+                    oauth_token, valid = authenticate_client_and_token(oauth_client.id, token)\n+                    valid = valid and \\\n+                        oauth_token and \\\n+                        oauth_token.user and \\\n+                        has_at_least_editor_role(oauth_token.user)\n+            if not valid or is_disable_pipeline_edit_access():\n+                return self.send_json_message(\n+                    ['stdout', f'{command[1]}\\nUnauthorized access to the terminal.'])\n+\n+        super().on_message(json.dumps(command))\n+\n     def __initiate_terminal(self, terminal):\n         self.send_json_message([\"setup\", {}])\n         self._logger.info(\"TermSocket.open: Opened %s\", self.term_name)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "703ffda8571b3b54afae65c791244375b008c434",
            "date": "2025-01-10T09:45:53Z",
            "author_login": "wangxiaoyou1993"
          },
          {
            "sha": "c48d5999fcf0ce7f38e545a9b937e1a3bdf35c86",
            "date": "2025-01-08T07:59:38Z",
            "author_login": "wangxiaoyou1993"
          },
          {
            "sha": "ed18aa252716a70a5f9c6a9bc74a5fe3f5999a91",
            "date": "2025-01-06T21:28:31Z",
            "author_login": "colefreeman"
          },
          {
            "sha": "bcd3d83119a50211ff0eab445412537799ed9e3b",
            "date": "2025-01-03T22:28:27Z",
            "author_login": "colefreeman"
          },
          {
            "sha": "f4a172dafe3246b6245d735e93d1c59deb34bf4f",
            "date": "2024-12-22T21:00:20Z",
            "author_login": "wangxiaoyou1993"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-306",
    "description": "mage-ai is an open-source data pipeline tool for transforming and integrating data. Those who use Mage starting in version 0.8.34 and prior to 0.8.72 with user authentication enabled may be affected by a vulnerability. The terminal could be accessed by users who are not signed in or do not have editor permissions. Version 0.8.72 contains a fix for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-05-09T15:15:10.303",
    "last_modified": "2024-11-21T08:01:28.940",
    "fix_date": "2023-05-04T18:26:49Z"
  },
  "references": [
    {
      "url": "https://github.com/mage-ai/mage-ai/commit/f63cd00f6a3be372397d37a4c9a49bfaf50d7650",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mage-ai/mage-ai/security/advisories/GHSA-c6mm-2g84-v4m7",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/mage-ai/mage-ai/commit/f63cd00f6a3be372397d37a4c9a49bfaf50d7650",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mage-ai/mage-ai/security/advisories/GHSA-c6mm-2g84-v4m7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.943867",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mage-ai",
    "owner": "mage-ai",
    "created_at": "2022-05-16T22:11:39Z",
    "updated_at": "2025-01-14T06:10:57Z",
    "pushed_at": "2025-01-13T17:57:11Z",
    "size": 243794,
    "stars": 8075,
    "forks": 786,
    "open_issues": 497,
    "watchers": 8075,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "alpha"
    ],
    "languages": {
      "Python": 8939187,
      "TypeScript": 6082267,
      "HTML": 1429837,
      "CSS": 113518,
      "SCSS": 77261,
      "JavaScript": 34527,
      "Shell": 20509,
      "Dockerfile": 17535,
      "Jinja": 16315,
      "Jupyter Notebook": 8996,
      "Mako": 510,
      "Makefile": 258,
      "R": 134
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:27:45.406003"
  }
}