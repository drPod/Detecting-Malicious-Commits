{
  "cve_id": "CVE-2023-3173",
  "github_data": {
    "repository": "froxlor/froxlor",
    "fix_commit": "464216072456efb35b4541c58e7016463dfbd9a6",
    "related_commits": [
      "464216072456efb35b4541c58e7016463dfbd9a6",
      "464216072456efb35b4541c58e7016463dfbd9a6"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "464216072456efb35b4541c58e7016463dfbd9a6",
      "commit_date": "2023-05-12T08:36:27Z",
      "author": {
        "login": "d00p",
        "type": "User",
        "stats": {
          "total_commits": 3464,
          "average_weekly_commits": 4.412738853503185,
          "total_additions": 571558,
          "total_deletions": 439864,
          "weeks_active": 530
        }
      },
      "commit_message": {
        "title": "add same loginfail restrictions for entering 2fa code as for user/pwd login",
        "length": 127,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 70,
        "additions": 60,
        "deletions": 10
      },
      "files": [
        {
          "filename": "index.php",
          "status": "modified",
          "additions": 51,
          "deletions": 10,
          "patch": "@@ -53,9 +53,15 @@\n \t\tResponse::redirectTo('index.php');\n \t\texit();\n \t}\n+\t$smessage = isset($_GET['showmessage']) ? (int)$_GET['showmessage'] : 0;\n+\t$message = \"\";\n+\tif ($smessage > 0) {\n+\t\t$message = lng('error.2fa_wrongcode');\n+\t}\n \t// show template to enter code\n \tUI::view('login/enter2fa.html.twig', [\n-\t\t'pagetitle' => lng('login.2fa')\n+\t\t'pagetitle' => lng('login.2fa'),\n+\t\t'message' => $message\n \t]);\n } elseif ($action == '2fa_verify') {\n \t// verify code from 2fa code-enter form\n@@ -68,25 +74,25 @@\n \t// verify entered code\n \t$tfa = new FroxlorTwoFactorAuth('Froxlor ' . Settings::Get('system.hostname'));\n \t$result = ($_SESSION['secret_2fa'] == 'email' ? true : $tfa->verifyCode($_SESSION['secret_2fa'], $code, 3));\n+\t// get user-data\n+\t$table = $_SESSION['uidtable_2fa'];\n+\t$field = $_SESSION['uidfield_2fa'];\n+\t$uid = $_SESSION['uid_2fa'];\n+\t$isadmin = $_SESSION['unfo_2fa'];\n \t// either the code is valid when using authenticator-app, or we will select userdata by id and entered code\n \t// which is temporarily stored for the customer when using email-2fa\n \tif ($result) {\n-\t\t// get user-data\n-\t\t$table = $_SESSION['uidtable_2fa'];\n-\t\t$field = $_SESSION['uidfield_2fa'];\n-\t\t$uid = $_SESSION['uid_2fa'];\n-\t\t$isadmin = $_SESSION['unfo_2fa'];\n \t\t$sel_param = [\n \t\t\t'uid' => $uid\n \t\t];\n \t\tif ($_SESSION['secret_2fa'] == 'email') {\n \t\t\t// verify code by selecting user by id and the temp. stored code,\n \t\t\t// so only if it's the correct code, we get the user-data\n-\t\t\t$sel_stmt = Database::prepare(\"SELECT * FROM $table WHERE `\" . $field . \"` = :uid AND `data_2fa` = :code\");\n+\t\t\t$sel_stmt = Database::prepare(\"SELECT * FROM \" . $table . \" WHERE `\" . $field . \"` = :uid AND `data_2fa` = :code\");\n \t\t\t$sel_param['code'] = $code;\n \t\t} else {\n \t\t\t// Authenticator-verification has already happened at this point, so just get the user-data\n-\t\t\t$sel_stmt = Database::prepare(\"SELECT * FROM $table WHERE `\" . $field . \"` = :uid\");\n+\t\t\t$sel_stmt = Database::prepare(\"SELECT * FROM \" . $table . \" WHERE `\" . $field . \"` = :uid\");\n \t\t}\n \t\t$userinfo = Database::pexecute_first($sel_stmt, $sel_param);\n \t\t// whoops, no (valid) user? Start again\n@@ -108,15 +114,50 @@\n \n \t\t// when using email-2fa, remove the one-time-code\n \t\tif ($userinfo['type_2fa'] == '1') {\n-\t\t\t$del_stmt = Database::prepare(\"UPDATE $table SET `data_2fa` = '' WHERE `\" . $field . \"` = :uid\");\n+\t\t\t$del_stmt = Database::prepare(\"UPDATE \" . $table . \" SET `data_2fa` = '' WHERE `\" . $field . \"` = :uid\");\n \t\t\t$userinfo = Database::pexecute_first($del_stmt, [\n \t\t\t\t'uid' => $uid\n \t\t\t]);\n \t\t}\n \t\texit();\n \t}\n+\t// wrong 2fa code - treat like \"wrong password\"\n+\t$stmt = Database::prepare(\"\n+\t\tUPDATE \" . $table . \"\n+\t\tSET `lastlogin_fail`= :lastlogin_fail, `loginfail_count`=`loginfail_count`+1\n+\t\tWHERE `\" . $field . \"`= :uid\n+\t\");\n+\tDatabase::pexecute($stmt, [\n+\t\t\"lastlogin_fail\" => time(),\n+\t\t\"uid\" => $uid\n+\t]);\n+\n+\t// get data for processing further\n+\t$stmt = Database::prepare(\"\n+\t\tSELECT `loginname`, `loginfail_count`, `lastlogin_fail` FROM \" . $table . \"\n+\t\tWHERE `\" . $field . \"`= :uid\n+\t\");\n+\t$fail_user = Database::pexecute_first($stmt, [\n+\t\t\"uid\" => $uid\n+\t]);\n+\n+\tif ($fail_user['loginfail_count'] >= Settings::Get('login.maxloginattempts') && $fail_user['lastlogin_fail'] > (time() - Settings::Get('login.deactivatetime'))) {\n+\t\t// Log failed login\n+\t\t$rstlog = FroxlorLogger::getInstanceOf([\n+\t\t\t'loginname' => $_SERVER['REMOTE_ADDR']\n+\t\t]);\n+\t\t$rstlog->logAction(FroxlorLogger::LOGIN_ACTION, LOG_WARNING, \"User '\" . $fail_user['loginname'] . \"' entered wrong 2fa code too often.\");\n+\t\tunset($fail_user);\n+\t\tResponse::redirectTo('index.php', [\n+\t\t\t'showmessage' => '3'\n+\t\t]);\n+\t\texit();\n+\t}\n+\tunset($fail_user);\n+\t// back to form\n \tResponse::redirectTo('index.php', [\n-\t\t'showmessage' => '2'\n+\t\t'action' => '2fa_entercode',\n+\t\t'showmessage' => '1'\n \t]);\n \texit();\n } elseif ($action == 'login') {"
        },
        {
          "filename": "lng/de.lng.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -926,6 +926,7 @@\n \t\t'domaincannotbeedited' => 'Keine Berechtigung, um die Domain %s zu bearbeiten',\n \t\t'invalidcronjobintervalvalue' => 'Cronjob Intervall muss einer der folgenden Werte sein: %s',\n \t\t'phpgdextensionnotavailable' => 'Die PHP GD Extension ist nicht verf\u00fcgbar. Bild-Daten k\u00f6nnen nicht validiert werden.',\n+\t\t'2fa_wrongcode' => 'Der angegebene Code ist nicht korrekt',\n \t],\n \t'extras' => [\n \t\t'description' => 'Hier k\u00f6nnen Sie zus\u00e4tzliche Extras einrichten, wie zum Beispiel einen Verzeichnisschutz.<br />Die \u00c4nderungen sind erst nach einer kurzen Zeit wirksam.',"
        },
        {
          "filename": "lng/en.lng.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -995,6 +995,7 @@\n \t\t'domaincannotbeedited' => 'You are not permitted to edit the domain %s',\n \t\t'invalidcronjobintervalvalue' => 'Cronjob interval must be one of: %s',\n \t\t'phpgdextensionnotavailable' => 'The PHP GD extension is not available. Unable to validate image-data',\n+\t\t'2fa_wrongcode' => 'The code entered is not valid',\n \t],\n \t'extras' => [\n \t\t'description' => 'Here you can add some extras, for example directory protection.<br />The system will need some time to apply the new settings after every change.',"
        },
        {
          "filename": "templates/Froxlor/login/enter2fa.html.twig",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -10,6 +10,13 @@\n \t\t\t\t\t<div class=\"card-body\">\n \t\t\t\t\t\t<h5 class=\"card-title\">{{ pagetitle }}</h5>\n \n+\t\t\t\t\t\t{% if message is not empty %}\n+\t\t\t\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n+\t\t\t\t\t\t\t\t<h4 class=\"alert-heading\">{{ lng('error.error') }}</h4>\n+\t\t\t\t\t\t\t\t<p>{{ message|raw }}</p>\n+\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t{% endif %}\n+\n \t\t\t\t\t\t<div class=\"mb-3\">\n \t\t\t\t\t\t\t<label for=\"2fa_code\" class=\"col-form-label\">{{ lng('login.2facode') }}</label>\n \t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"2fa_code\" id=\"2fa_code\" value=\"\" autocomplete=\"off\" autofocus required/>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2eda4ae972fc53ded421a1ef61b567c65bb51885",
            "date": "2025-01-22T08:14:23Z",
            "author_login": "d00p"
          },
          {
            "sha": "aab98e4dae0b25e3672838c3b7eceb3d3dac7717",
            "date": "2025-01-22T08:09:14Z",
            "author_login": "d00p"
          },
          {
            "sha": "4b930375b7134cea8917e9fe08243f6784b53300",
            "date": "2025-01-22T07:53:37Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "ec42003367df64c5645a9d5ee5bcd95c75a82b6c",
            "date": "2025-01-12T15:53:05Z",
            "author_login": "d00p"
          },
          {
            "sha": "fde43f80600f1035e1e3d2297411b666d805549a",
            "date": "2025-01-12T09:27:44Z",
            "author_login": "d00p"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-307",
    "description": "Improper Restriction of Excessive Authentication Attempts in GitHub repository froxlor/froxlor prior to 2.0.20.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-09T02:15:09.233",
    "last_modified": "2024-11-21T08:16:37.493",
    "fix_date": "2023-05-12T08:36:27Z"
  },
  "references": [
    {
      "url": "https://github.com/froxlor/froxlor/commit/464216072456efb35b4541c58e7016463dfbd9a6",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4d715f76-950d-4251-8139-3dffea798f14",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/froxlor/froxlor/commit/464216072456efb35b4541c58e7016463dfbd9a6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4d715f76-950d-4251-8139-3dffea798f14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.346308",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "Froxlor",
    "owner": "froxlor",
    "created_at": "2012-03-06T15:14:46Z",
    "updated_at": "2025-01-23T17:20:57Z",
    "pushed_at": "2025-01-22T08:17:37Z",
    "size": 28908,
    "stars": 1655,
    "forks": 458,
    "open_issues": 35,
    "watchers": 1655,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "extras",
      "main"
    ],
    "languages": {
      "PHP": 3752037,
      "Twig": 153143,
      "HTML": 28494,
      "SCSS": 8015,
      "JavaScript": 942
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T08:05:52.700993"
  }
}