{
  "cve_id": "CVE-2023-3224",
  "github_data": {
    "repository": "nuxt/nuxt",
    "fix_commit": "65a8f4eb3ef1b249a95fd59e323835a96428baff",
    "related_commits": [
      "65a8f4eb3ef1b249a95fd59e323835a96428baff",
      "65a8f4eb3ef1b249a95fd59e323835a96428baff"
    ],
    "patch_url": "https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff.patch",
    "fix_commit_details": {
      "sha": "65a8f4eb3ef1b249a95fd59e323835a96428baff",
      "commit_date": "2023-04-27T10:31:52Z",
      "author": {
        "login": "danielroe",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(nuxt): restrict access to single renderer outside of test/rootDir (#20543)",
        "length": 78,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 22,
        "additions": 19,
        "deletions": 3
      },
      "files": [
        {
          "filename": "packages/nuxt/src/app/components/nuxt-root.vue",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -23,7 +23,7 @@ const nuxtApp = useNuxtApp()\n const onResolve = nuxtApp.deferHydration()\n \n const url = process.server ? nuxtApp.ssrContext.url : window.location.pathname\n-const SingleRenderer = process.dev && process.server && url.startsWith('/__nuxt_component_test__/') && defineAsyncComponent(() => import('#build/test-component-wrapper.mjs')\n+const SingleRenderer = process.test && process.dev && process.server && url.startsWith('/__nuxt_component_test__/') && /* #__PURE__ */ defineAsyncComponent(() => import('#build/test-component-wrapper.mjs')\n   .then(r => r.default(process.server ? url : window.location.href)))\n \n // Inject default route (outside of pages) as active route"
        },
        {
          "filename": "packages/nuxt/src/app/components/test-component-wrapper.ts",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -1,13 +1,20 @@\n import { parseURL } from 'ufo'\n import { defineComponent, h } from 'vue'\n import { parseQuery } from 'vue-router'\n+import { resolve } from 'pathe'\n+// @ts-expect-error virtual file\n+import { devRootDir } from '#build/nuxt.config.mjs'\n \n-export default (url:string) => defineComponent({\n+export default (url: string) => defineComponent({\n   name: 'NuxtTestComponentWrapper',\n \n   async setup (props, { attrs }) {\n     const query = parseQuery(parseURL(url).search)\n     const urlProps = query.props ? JSON.parse(query.props as string) : {}\n+    const path = resolve(query.path as string)\n+    if (!path.startsWith(devRootDir)) {\n+      throw new Error(`[nuxt] Cannot access path outside of project root directory: \\`${path}\\`.`)\n+    }\n     const comp = await import(/* @vite-ignore */ query.path as string).then(r => r.default)\n     return () => [\n       h('div', 'Component Test Wrapper for ' + query.path),"
        },
        {
          "filename": "packages/nuxt/src/core/templates.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -299,7 +299,8 @@ export const nuxtConfigTemplate = {\n     return [\n       ...Object.entries(ctx.nuxt.options.app).map(([k, v]) => `export const ${camelCase('app-' + k)} = ${JSON.stringify(v)}`),\n       `export const renderJsonPayloads = ${!!ctx.nuxt.options.experimental.renderJsonPayloads}`,\n-      `export const devPagesDir = ${ctx.nuxt.options.dev ? JSON.stringify(ctx.nuxt.options.dir.pages) : 'null'}`\n+      `export const devPagesDir = ${ctx.nuxt.options.dev ? JSON.stringify(ctx.nuxt.options.dir.pages) : 'null'}`,\n+      `export const devRootDir = ${ctx.nuxt.options.dev ? JSON.stringify(ctx.nuxt.options.rootDir) : 'null'}`\n     ].join('\\n\\n')\n   }\n }"
        },
        {
          "filename": "packages/schema/src/config/vite.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -1,4 +1,5 @@\n import { resolve } from 'pathe'\n+import { isTest } from 'std-env'\n import { withoutLeadingSlash } from 'ufo'\n import { defineUntypedSchema } from 'untyped'\n \n@@ -21,6 +22,7 @@ export default defineUntypedSchema({\n     define: {\n       $resolve: async (val, get) => ({\n         'process.dev': await get('dev'),\n+        'process.test': isTest,\n         ...val || {}\n       })\n     },"
        },
        {
          "filename": "packages/webpack/package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -45,6 +45,7 @@\n     \"postcss-import\": \"^15.1.0\",\n     \"postcss-loader\": \"^7.2.4\",\n     \"postcss-url\": \"^10.1.3\",\n+    \"std-env\": \"^3.3.2\",\n     \"time-fix-plugin\": \"^2.0.7\",\n     \"ufo\": \"^1.1.1\",\n     \"unplugin\": \"^1.3.1\","
        },
        {
          "filename": "packages/webpack/src/presets/base.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -10,6 +10,7 @@ import FriendlyErrorsWebpackPlugin from '@nuxt/friendly-errors-webpack-plugin'\n import escapeRegExp from 'escape-string-regexp'\n import { joinURL } from 'ufo'\n import type { NuxtOptions } from '@nuxt/schema'\n+import { isTest } from 'std-env'\n import type { WarningFilter } from '../plugins/warning-ignore'\n import WarningIgnorePlugin from '../plugins/warning-ignore'\n import type { WebpackConfigContext } from '../utils/config'\n@@ -233,6 +234,7 @@ function getEnv (ctx: WebpackConfigContext) {\n     'process.env.NODE_ENV': JSON.stringify(ctx.config.mode),\n     'process.mode': JSON.stringify(ctx.config.mode),\n     'process.dev': options.dev,\n+    'process.test': isTest,\n     __NUXT_VERSION__: JSON.stringify(ctx.nuxt._version),\n     'process.env.VUE_ENV': JSON.stringify(ctx.name),\n     'process.browser': ctx.isClient,"
        },
        {
          "filename": "pnpm-lock.yaml",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1044,6 +1044,9 @@ importers:\n       postcss-url:\n         specifier: ^10.1.3\n         version: 10.1.3(postcss@8.4.23)\n+      std-env:\n+        specifier: ^3.3.2\n+        version: 3.3.2\n       time-fix-plugin:\n         specifier: ^2.0.7\n         version: 2.0.7(webpack@5.80.0)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "07146ddf48284361c9ea2ae6fa07efdc53eda776",
            "date": "2025-01-14T17:36:18Z",
            "author_login": "antfu"
          },
          {
            "sha": "4187f681394fdfb710f6213496b03f0956f0d9a3",
            "date": "2025-01-14T17:36:00Z",
            "author_login": "danielroe"
          },
          {
            "sha": "0a2b01fbc470789eeb88818a8d3fd571d7cc41c6",
            "date": "2025-01-14T14:36:09Z",
            "author_login": "Mini-ghost"
          },
          {
            "sha": "2448e86f8463e79b55db91986ede1c660aa559a3",
            "date": "2025-01-14T14:35:45Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "5a535e83c800c7f2f7cf80abf55b9a3108824bcb",
            "date": "2025-01-14T14:09:09Z",
            "author_login": "danielroe"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Code Injection in GitHub repository nuxt/nuxt prior to 3.5.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-13T18:15:22.370",
    "last_modified": "2024-11-21T08:16:44.247",
    "fix_date": "2023-04-27T10:31:52Z"
  },
  "references": [
    {
      "url": "https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.357938",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "nuxt",
    "owner": "nuxt",
    "created_at": "2016-10-26T11:18:47Z",
    "updated_at": "2025-01-14T19:48:03Z",
    "pushed_at": "2025-01-14T17:46:07Z",
    "size": 118085,
    "stars": 55701,
    "forks": 5092,
    "open_issues": 895,
    "watchers": 55701,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2.x"
    ],
    "languages": {
      "TypeScript": 1347918,
      "HTML": 26149,
      "JavaScript": 13545,
      "Vue": 8979,
      "Shell": 2611,
      "Dockerfile": 468
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:15:27.015048"
  }
}