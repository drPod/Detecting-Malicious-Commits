{
  "cve_id": "CVE-2023-32303",
  "github_data": {
    "repository": "planetlabs/planet-client-python",
    "fix_commit": "d71415a83119c5e89d7b80d5f940d162376ee3b7",
    "related_commits": [
      "d71415a83119c5e89d7b80d5f940d162376ee3b7",
      "d71415a83119c5e89d7b80d5f940d162376ee3b7"
    ],
    "patch_url": "https://github.com/planetlabs/planet-client-python/commit/d71415a83119c5e89d7b80d5f940d162376ee3b7.patch",
    "fix_commit_details": {
      "sha": "d71415a83119c5e89d7b80d5f940d162376ee3b7",
      "commit_date": "2023-05-10T20:14:06Z",
      "author": {
        "login": "jreiberkyle",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "enforce restricting secret file permissions to user read/write",
        "length": 62,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 52,
        "additions": 47,
        "deletions": 5
      },
      "files": [
        {
          "filename": "planet/auth.py",
          "status": "modified",
          "additions": 30,
          "deletions": 4,
          "patch": "@@ -19,15 +19,16 @@\n import logging\n import os\n import pathlib\n+import stat\n import typing\n+from typing import Optional\n \n import httpx\n import jwt\n \n from . import http\n from .constants import ENV_API_KEY, PLANET_BASE_URL, SECRET_FILE_PATH\n from .exceptions import AuthException\n-from typing import Optional\n \n LOGGER = logging.getLogger(__name__)\n \n@@ -226,8 +227,15 @@ def value(self):\n \n class _SecretFile:\n \n-    def __init__(self, path):\n-        self.path = path\n+    def __init__(self, path: typing.Union[str, pathlib.Path]):\n+        self.path = pathlib.Path(path)\n+\n+        self.permissions = stat.S_IRUSR | stat.S_IWUSR  # user rw\n+\n+        # in sdk versions <=2.0.0, secret file was created with the wrong\n+        # permissions, fix this automatically as well as catching the unlikely\n+        # cases where the permissions get changed externally\n+        self._enforce_permissions()\n \n     def write(self, contents: dict):\n         try:\n@@ -240,11 +248,29 @@ def write(self, contents: dict):\n \n     def _write(self, contents: dict):\n         LOGGER.debug(f'Writing to {self.path}')\n-        with open(self.path, 'w') as fp:\n+\n+        def opener(path, flags):\n+            return os.open(path, flags, self.permissions)\n+\n+        with open(self.path, 'w', opener=opener) as fp:\n             fp.write(json.dumps(contents))\n \n     def read(self) -> dict:\n         LOGGER.debug(f'Reading from {self.path}')\n         with open(self.path, 'r') as fp:\n             contents = json.loads(fp.read())\n         return contents\n+\n+    def _enforce_permissions(self):\n+        '''if the file's permissions are not what they should be, fix them'''\n+        try:\n+            # in octal, permissions is the last three bits of the mode\n+            file_permissions = self.path.stat().st_mode & 0o777\n+            if file_permissions != self.permissions:\n+                LOGGER.debug(\n+                    f'{self.path} permissions are {oct(file_permissions)}, '\n+                    f'should be {oct(self.permissions)}. Fixing.')\n+                self.path.chmod(self.permissions)\n+        except FileNotFoundError:\n+            # just skip it if the secret file doesn't exist\n+            pass"
        },
        {
          "filename": "tests/unit/test_auth.py",
          "status": "modified",
          "additions": 17,
          "deletions": 1,
          "patch": "@@ -31,7 +31,7 @@ def test_secretfile_read():\n \n @pytest.fixture\n def secret_path(monkeypatch, tmp_path):\n-    secret_path = str(tmp_path / '.test')\n+    secret_path = tmp_path / '.test'\n     monkeypatch.setattr(auth, 'SECRET_FILE_PATH', secret_path)\n     yield secret_path\n \n@@ -138,3 +138,19 @@ def test_Auth_store_exists(tmp_path):\n \n     with open(secret_path, 'r') as fp:\n         assert json.loads(fp.read()) == {\"key\": \"test\", \"existing\": \"exists\"}\n+\n+\n+def test__SecretFile_permissions_doesnotexist(secret_path):\n+    '''No exception is raised if the file doesn't exist'''\n+    auth._SecretFile(secret_path)\n+\n+\n+def test__SecretFile_permissions_incorrect(secret_path):\n+    '''Incorrect permissions are fixed'''\n+    with open(secret_path, 'w') as fp:\n+        fp.write('{\"existing\": \"exists\"}')\n+\n+    secret_path.chmod(0o666)\n+\n+    auth._SecretFile(secret_path)\n+    assert secret_path.stat().st_mode & 0o777 == 0o600"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "837b24d888de905bb836cb2c951bfc0cb2b1544c",
            "date": "2025-01-06T17:18:40Z",
            "author_login": "stephenhillier"
          },
          {
            "sha": "97b93ca21427724e704197eabd8ff4511aac3fc2",
            "date": "2025-01-03T22:45:57Z",
            "author_login": "stephenhillier"
          },
          {
            "sha": "b58146abec3082e6056181a7dc3494b93372126d",
            "date": "2025-01-03T22:30:50Z",
            "author_login": "stephenhillier"
          },
          {
            "sha": "d4e1b0ea728b7ee57d17ee856311f3f5df5328ba",
            "date": "2025-01-03T22:24:17Z",
            "author_login": "stephenhillier"
          },
          {
            "sha": "4928b93a575e1319b362646089a039cfae28be3e",
            "date": "2025-01-03T22:09:46Z",
            "author_login": "stephenhillier"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-732",
    "description": "Planet is software that provides satellite data. The secret file stores the user's Planet API authentication information. It should only be accessible by the user, but before version 2.0.1, its permissions allowed the user's group and non-group to read the file as well. This issue was patched in version 2.0.1. As a workaround, set the secret file permissions to only user read/write by hand.\n",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-12T21:15:09.560",
    "last_modified": "2024-11-21T08:03:04.357",
    "fix_date": "2023-05-10T20:14:06Z"
  },
  "references": [
    {
      "url": "https://github.com/planetlabs/planet-client-python/commit/d71415a83119c5e89d7b80d5f940d162376ee3b7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/planetlabs/planet-client-python/releases/tag/2.0.1",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/planetlabs/planet-client-python/security/advisories/GHSA-j5fj-rfh6-qj85",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/planetlabs/planet-client-python/commit/d71415a83119c5e89d7b80d5f940d162376ee3b7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/planetlabs/planet-client-python/releases/tag/2.0.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/planetlabs/planet-client-python/security/advisories/GHSA-j5fj-rfh6-qj85",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.964470",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "planet-client-python",
    "owner": "planetlabs",
    "created_at": "2015-06-10T20:58:37Z",
    "updated_at": "2025-01-13T22:06:35Z",
    "pushed_at": "2025-01-14T07:00:46Z",
    "size": 6635,
    "stars": 277,
    "forks": 93,
    "open_issues": 72,
    "watchers": 277,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "maint-2.0"
    ],
    "languages": {
      "Python": 588890,
      "Shell": 936
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T22:12:46.135634"
  }
}