{
  "cve_id": "CVE-2023-32305",
  "github_data": {
    "repository": "aiven/aiven-extras",
    "fix_commit": "8682ae01bec0791708bf25791786d776e2fb0250",
    "related_commits": [
      "8682ae01bec0791708bf25791786d776e2fb0250",
      "8682ae01bec0791708bf25791786d776e2fb0250"
    ],
    "patch_url": "https://github.com/aiven/aiven-extras/commit/8682ae01bec0791708bf25791786d776e2fb0250.patch",
    "fix_commit_details": {
      "sha": "8682ae01bec0791708bf25791786d776e2fb0250",
      "commit_date": "2023-05-08T16:04:11Z",
      "author": {
        "login": "tkren",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Qualify function calls with pg_catalog schema",
        "length": 462,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 16,
        "additions": 8,
        "deletions": 8
      },
      "files": [
        {
          "filename": "sql/aiven_extras.sql",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -426,16 +426,16 @@ DECLARE\n   l_parsed_ident TEXT[];\n   l_parsed_arg_tables TEXT[];\n BEGIN\n-    l_table_count = array_length(arg_tables, 1);\n+    l_table_count = pg_catalog.array_length(arg_tables, 1);\n     IF l_table_count >= 1\n     THEN\n         l_parsed_arg_tables = ARRAY[]::TEXT[];\n         l_tables_command = 'CREATE PUBLICATION %I FOR TABLE ';\n         FOREACH l_ident IN ARRAY arg_tables LOOP\n             l_parsed_ident = parse_ident(l_ident);\n-            ASSERT array_length(l_parsed_ident, 1) <= 2, 'Only simple table names or tables qualified with schema names allowed';\n+            ASSERT pg_catalog.array_length(l_parsed_ident, 1) <= 2, 'Only simple table names or tables qualified with schema names allowed';\n             -- Make sure we pass in a simple list of identifiers, so separate the tables from parent schemas\n-            IF array_length(l_parsed_ident, 1) = 2\n+            IF pg_catalog.array_length(l_parsed_ident, 1) = 2\n             THEN\n                 l_tables_command = l_tables_command || '%I.%I, ';\n             ELSE\n@@ -444,12 +444,12 @@ BEGIN\n             l_parsed_arg_tables = l_parsed_arg_tables || l_parsed_ident;\n         END LOOP;\n         -- Remove trailing comma and whitespace, add the rest\n-        l_tables_command = left(l_tables_command, -2) || ' WITH (publish = %I)';\n-        EXECUTE format(l_tables_command, VARIADIC array[arg_publication_name] || l_parsed_arg_tables || arg_publish);\n+        l_tables_command = pg_catalog.left(l_tables_command, -2) || ' WITH (publish = %I)';\n+        EXECUTE pg_catalog.format(l_tables_command, VARIADIC array[arg_publication_name] || l_parsed_arg_tables || arg_publish);\n     ELSE\n-        EXECUTE format('CREATE PUBLICATION %I WITH (publish = %I)', arg_publication_name, arg_publish);\n+        EXECUTE pg_catalog.format('CREATE PUBLICATION %I WITH (publish = %I)', arg_publication_name, arg_publish);\n     END IF;\n-    EXECUTE format('ALTER PUBLICATION %I OWNER TO %I', arg_publication_name, session_user);\n+    EXECUTE pg_catalog.format('ALTER PUBLICATION %I OWNER TO %I', arg_publication_name, session_user);\n END;\n $$;\n \n@@ -489,7 +489,7 @@ BEGIN\n         RAISE EXCEPTION 'Invalid parameter: %', arg_parameter;\n     END IF;\n \n-    EXECUTE format('ALTER DATABASE %I SET pgaudit.%I = %L',\n+    EXECUTE pg_catalog.format('ALTER DATABASE %I SET pgaudit.%I = %L',\n         arg_database,\n         arg_parameter,\n         arg_value"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "90755d5b2e1fb5ad6d2758f76f60dad7de40ef1a",
            "date": "2024-12-05T16:59:32Z",
            "author_login": "packi"
          },
          {
            "sha": "05d021586a17a3b909f7d8c90a8ef78eccf969b9",
            "date": "2024-12-05T14:08:02Z",
            "author_login": "rdunklau"
          },
          {
            "sha": "3ca1c6aed02db98c48f50fc5d4639026bc25a04b",
            "date": "2024-12-05T14:01:55Z",
            "author_login": "rdunklau"
          },
          {
            "sha": "c51cbeb127acef663c53dbe89d2726d9109e421b",
            "date": "2024-08-02T09:15:52Z",
            "author_login": "packi"
          },
          {
            "sha": "09fef1ef408356ccc991b27c61924c3726a4941f",
            "date": "2024-08-01T13:23:05Z",
            "author_login": "kathia-barahona"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-20",
    "description": "aiven-extras is a PostgreSQL extension. Versions prior to 1.1.9 contain a privilege escalation vulnerability, allowing elevation to superuser inside PostgreSQL databases that use the aiven-extras package. The vulnerability leverages missing schema qualifiers on privileged functions called by the aiven-extras extension. A low privileged user can create objects that collide with existing function names, which will then be executed instead. Exploiting this vulnerability could allow a low privileged user to acquire `superuser` privileges, which would allow full, unrestricted access to all data and database functions. And could lead to arbitrary code execution or data access on the underlying host as the `postgres` user. The issue has been patched as of version 1.1.9.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-12T19:15:08.953",
    "last_modified": "2024-11-21T08:03:04.473",
    "fix_date": "2023-05-08T16:04:11Z"
  },
  "references": [
    {
      "url": "https://github.com/aiven/aiven-extras/commit/8682ae01bec0791708bf25791786d776e2fb0250",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/aiven/aiven-extras/security/advisories/GHSA-7r4w-fw4h-67gp",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230616-0006/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/aiven/aiven-extras/commit/8682ae01bec0791708bf25791786d776e2fb0250",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/aiven/aiven-extras/security/advisories/GHSA-7r4w-fw4h-67gp",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230616-0006/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.964113",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "aiven-extras",
    "owner": "aiven",
    "created_at": "2018-08-08T07:44:22Z",
    "updated_at": "2025-01-11T18:08:46Z",
    "pushed_at": "2024-12-06T06:26:18Z",
    "size": 157,
    "stars": 15,
    "forks": 7,
    "open_issues": 7,
    "watchers": 15,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PLpgSQL": 39684,
      "C": 5960,
      "Makefile": 2045,
      "Shell": 254
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T22:36:26.048364"
  }
}