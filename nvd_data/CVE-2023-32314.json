{
  "cve_id": "CVE-2023-32314",
  "github_data": {
    "repository": "patriksimek/vm2",
    "fix_commit": "d88105f99752305c5b8a77b63ddee3ec86912daf",
    "related_commits": [
      "d88105f99752305c5b8a77b63ddee3ec86912daf",
      "d88105f99752305c5b8a77b63ddee3ec86912daf"
    ],
    "patch_url": "https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf.patch",
    "fix_commit_details": {
      "sha": "d88105f99752305c5b8a77b63ddee3ec86912daf",
      "commit_date": "2023-05-13T19:15:04Z",
      "author": {
        "login": "XmiliaH",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ensure host array does not leak through proxy",
        "length": 45,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 58,
        "additions": 58,
        "deletions": 0
      },
      "files": [
        {
          "filename": "lib/setup-sandbox.js",
          "status": "modified",
          "additions": 58,
          "deletions": 0,
          "patch": "@@ -21,6 +21,7 @@ const {\n const {\n \tgetPrototypeOf: localReflectGetPrototypeOf,\n \tapply: localReflectApply,\n+\tconstruct: localReflectConstruct,\n \tdeleteProperty: localReflectDeleteProperty,\n \thas: localReflectHas,\n \tdefineProperty: localReflectDefineProperty,\n@@ -432,6 +433,63 @@ if (AsyncGeneratorFunction) {\n \toverrideWithProxy(AsyncGeneratorFunction.prototype, 'constructor', AsyncGeneratorFunction, makeCheckFunction(true, true));\n }\n \n+function makeSafeHandlerArgs(args) {\n+\tconst sArgs = ensureThis(args);\n+\tif (sArgs === args) return args;\n+\tconst a = [];\n+\tfor (let i=0; i < sArgs.length; i++) {\n+\t\tlocalReflectDefineProperty(a, i, {\n+\t\t\t__proto__: null,\n+\t\t\tvalue: sArgs[i],\n+\t\t\tenumerable: true,\n+\t\t\tconfigurable: true,\n+\t\t\twritable: true\n+\t\t});\n+\t}\n+\treturn a;\n+}\n+\n+const makeSafeArgs = Object.freeze({\n+\t__proto__: null,\n+\tapply(target, thiz, args) {\n+\t\treturn localReflectApply(target, thiz, makeSafeHandlerArgs(args));\n+\t},\n+\tconstruct(target, args, newTarget) {\n+\t\treturn localReflectConstruct(target, makeSafeHandlerArgs(args), newTarget);\n+\t}\n+});\n+\n+const proxyHandlerHandler = Object.freeze({\n+\t__proto__: null,\n+\tget(target, name, receiver) {\n+\t\tconst value = target.handler[name];\n+\t\tif (typeof value !== 'function') return value;\n+\t\treturn new LocalProxy(value, makeSafeArgs);\n+\t}\n+});\n+\n+function wrapProxyHandler(args) {\n+\tif (args.length < 2) return args;\n+\tconst handler = args[1];\n+\targs[1] = new LocalProxy({__proto__: null, handler}, proxyHandlerHandler);\n+\treturn args;\n+}\n+\n+const proxyHandler = Object.freeze({\n+\t__proto__: null,\n+\tapply(target, thiz, args) {\n+\t\treturn localReflectApply(target, thiz, wrapProxyHandler(args));\n+\t},\n+\tconstruct(target, args, newTarget) {\n+\t\treturn localReflectConstruct(target, wrapProxyHandler(args), newTarget);\n+\t}\n+});\n+\n+const proxiedProxy = new LocalProxy(LocalProxy, proxyHandler);\n+\n+overrideWithProxy(LocalProxy, 'revocable', LocalProxy.revocable, proxyHandler);\n+\n+global.Proxy = proxiedProxy;\n global.Function = proxiedFunction;\n global.eval = new LocalProxy(localEval, EvalHandler);\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b51d33c49b61e03cf67a075741790e9b938dd80f",
            "date": "2023-07-10T22:41:05Z",
            "author_login": "patriksimek"
          },
          {
            "sha": "642b2002397d36f650c40917f174aec63feb5b89",
            "date": "2023-07-09T14:55:57Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "1663f231ec02db473ed5b743e3b91b8a2ffc7982",
            "date": "2023-05-16T05:27:48Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "cfa3fc6f81be05ce9ed08a79a406ebe3b61ead3e",
            "date": "2023-05-16T05:27:39Z",
            "author_login": "XmiliaH"
          },
          {
            "sha": "2f446e5d19e6539b5164b45b1f8bd4ded4dfc085",
            "date": "2023-05-15T11:09:44Z",
            "author_login": "XmiliaH"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "vm2 is a sandbox that can run untrusted code with Node's built-in modules. A sandbox escape vulnerability exists in vm2 for versions up to and including 3.9.17. It abuses an unexpected creation of a host object based on the specification of `Proxy`. As a result a threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox. This vulnerability was patched in the release of version `3.9.18` of `vm2`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-15T20:15:09.177",
    "last_modified": "2024-11-21T08:03:05.643",
    "fix_date": "2023-05-13T19:15:04Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/security/advisories/GHSA-whpj-8f3w-67p5",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/releases/tag/3.9.18",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/patriksimek/vm2/security/advisories/GHSA-whpj-8f3w-67p5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.972110",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vm2",
    "owner": "patriksimek",
    "created_at": "2014-01-14T11:31:39Z",
    "updated_at": "2025-01-13T06:00:32Z",
    "pushed_at": "2024-08-05T12:21:56Z",
    "size": 633,
    "stars": 3888,
    "forks": 297,
    "open_issues": 28,
    "watchers": 3888,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 241704,
      "TypeScript": 7
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:15:34.687776"
  }
}