{
  "cve_id": "CVE-2023-32675",
  "github_data": {
    "repository": "vyperlang/vyper",
    "fix_commit": "02339dfda0f3caabad142060d511d10bfe93c520",
    "related_commits": [
      "02339dfda0f3caabad142060d511d10bfe93c520",
      "02339dfda0f3caabad142060d511d10bfe93c520"
    ],
    "patch_url": "https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520.patch",
    "fix_commit_details": {
      "sha": "02339dfda0f3caabad142060d511d10bfe93c520",
      "commit_date": "2023-01-20T16:06:25Z",
      "author": {
        "login": "emc415",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "refactor: optimize calldatasize check (#3104)",
        "length": 372,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 24,
        "deletions": 9
      },
      "files": [
        {
          "filename": "tests/parser/features/test_init.py",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -15,12 +15,13 @@ def __init__(a: uint256):\n     assert c.val() == 123\n \n     # Make sure the init code does not access calldata\n-    opcodes = vyper.compile_code(code, [\"opcodes\"])[\"opcodes\"].split(\" \")\n-    ir_return_idx = opcodes.index(\"JUMP\")\n+    assembly = vyper.compile_code(code, [\"asm\"])[\"asm\"].split(\" \")\n+    ir_return_idx_start = assembly.index(\"{\")\n+    ir_return_idx_end = assembly.index(\"}\")\n \n-    assert \"CALLDATALOAD\" in opcodes\n-    assert \"CALLDATACOPY\" not in opcodes[:ir_return_idx]\n-    assert \"CALLDATALOAD\" not in opcodes[:ir_return_idx]\n+    assert \"CALLDATALOAD\" in assembly\n+    assert \"CALLDATACOPY\" not in assembly[:ir_return_idx_start] + assembly[ir_return_idx_end:]\n+    assert \"CALLDATALOAD\" not in assembly[:ir_return_idx_start] + assembly[ir_return_idx_end:]\n \n \n def test_init_calls_internal(get_contract, assert_compile_failed, assert_tx_failed):"
        },
        {
          "filename": "vyper/codegen/function_definitions/external_function.py",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -123,7 +123,24 @@ def handler_for(calldata_kwargs, default_kwargs):\n \n         ret.append([\"goto\", sig.external_function_base_entry_label])\n \n-        ret = [\"if\", [\"eq\", \"_calldata_method_id\", method_id], ret]\n+        method_id_check = [\"eq\", \"_calldata_method_id\", method_id]\n+\n+        # if there is a function whose selector is 0, it won't be distinguished\n+        # from the case where nil calldata is supplied, b/c calldataload loads\n+        # 0s past the end of physical calldata (cf. yellow paper).\n+        # since supplying 0 calldata is expected to trigger the fallback fn,\n+        # we check that calldatasize > 0, which distinguishes the 0 selector\n+        # from the fallback function \"selector\"\n+        # (equiv. to \"all selectors not in the selector table\").\n+\n+        # note: cases where not enough calldata is supplied (besides\n+        # calldatasize==0) are not addressed here b/c a calldatasize\n+        # well-formedness check is already present in the function body\n+        # as part of abi validation\n+        if method_id.value == 0:\n+            method_id_check = [\"and\", [\"gt\", \"calldatasize\", 0], method_id_check]\n+\n+        ret = [\"if\", method_id_check, ret]\n         return ret\n \n     ret = [\"seq\"]"
        },
        {
          "filename": "vyper/codegen/module.py",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -120,9 +120,6 @@ def _runtime_ir(runtime_functions, all_sigs, global_ctx):\n \n     runtime = [\n         \"seq\",\n-        # check that calldatasize is at least 4, otherwise\n-        # calldataload will load zeros (cf. yellow paper).\n-        [\"if\", [\"lt\", \"calldatasize\", 4], [\"goto\", \"fallback\"]],\n         [\"with\", \"_calldata_method_id\", shr(224, [\"calldataload\", 0]), selector_section],\n         close_selector_section,\n         [\"label\", \"fallback\", [\"var_list\"], fallback_ir],"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c208b954564e8fffdd4c86cc3c497e0c3df1aeec",
            "date": "2025-01-14T17:09:31Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "db8dcc713168b16977b5b07267653c9024f6acea",
            "date": "2025-01-12T17:01:49Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "10e91d5a2ba6eaab2f7194fd86cefb7a0ff19964",
            "date": "2025-01-12T16:34:14Z",
            "author_login": "tserg"
          },
          {
            "sha": "43259f8953672ef7a19167c6c048d020d82e05da",
            "date": "2025-01-12T16:32:46Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "9b5523e6131335c81714e7e8af63cc49404f5ce7",
            "date": "2025-01-12T16:19:30Z",
            "author_login": "charles-cooper"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-670",
    "description": "Vyper is a pythonic Smart Contract Language for the ethereum virtual machine. In contracts with more than one regular nonpayable function, it is possible to send funds to the default function, even if the default function is marked `nonpayable`. This applies to contracts compiled with vyper versions prior to 0.3.8. This issue was fixed by the removal of the global `calldatasize` check in commit `02339dfda`. Users are advised to upgrade to version 0.3.8. Users unable to upgrade should avoid use of nonpayable default functions.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-05-19T20:15:09.230",
    "last_modified": "2024-11-21T08:03:49.630",
    "fix_date": "2023-01-20T16:06:25Z"
  },
  "references": [
    {
      "url": "https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-vxmm-cwh2-q762",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/commit/02339dfda0f3caabad142060d511d10bfe93c520",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-vxmm-cwh2-q762",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.986375",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vyper",
    "owner": "vyperlang",
    "created_at": "2016-11-11T08:56:41Z",
    "updated_at": "2025-01-13T17:32:27Z",
    "pushed_at": "2025-01-12T17:01:50Z",
    "size": 11939,
    "stars": 4948,
    "forks": 817,
    "open_issues": 489,
    "watchers": 4948,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 2662211,
      "Makefile": 2222,
      "Batchfile": 1614,
      "Dockerfile": 1145,
      "Shell": 472
    },
    "commit_activity": {
      "total_commits_last_year": 317,
      "avg_commits_per_week": 6.096153846153846,
      "days_active_last_year": 154
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:48:09.728520"
  }
}