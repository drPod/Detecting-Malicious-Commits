{
  "cve_id": "CVE-2023-32787",
  "github_data": {
    "repository": "OPCFoundation/UA-Java-Legacy",
    "fix_commit": "6f176f2b445a27c157f1a32f225accc9ce8873c0",
    "related_commits": [
      "6f176f2b445a27c157f1a32f225accc9ce8873c0",
      "6f176f2b445a27c157f1a32f225accc9ce8873c0"
    ],
    "patch_url": "https://github.com/OPCFoundation/UA-Java-Legacy/commit/6f176f2b445a27c157f1a32f225accc9ce8873c0.patch",
    "fix_commit_details": {
      "sha": "6f176f2b445a27c157f1a32f225accc9ce8873c0",
      "commit_date": "2023-04-28T10:59:55Z",
      "author": {
        "login": "jouniaro",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #229 from OPCFoundation/224-maxconnectioncount-should-be-limited",
        "length": 95,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 26,
        "deletions": 7
      },
      "files": [
        {
          "filename": "src/main/java/org/opcfoundation/ua/transport/tcp/nio/OpcTcpServer.java",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -191,9 +191,13 @@ public void onOpen() {\n \t          if (tmp.size() > maxConnections) {\r\n \t            logger.trace(\"We are at over limit, unable to purge enough old connections, closing this connection\");\r\n \t            conn.close();\r\n-\t          } else if (tmp.size() == maxConnections) {\r\n-\t            logger.trace(\"We are exactly at maximum connections (including this connection). \"\r\n-\t                + \"No older connections could be purged. Keeping this connection open.\");\r\n+\t          } else {\r\n+\t        \t  if (tmp.size() == maxConnections) {\r\n+\t        \t\tlogger.trace(\"We are exactly at maximum connections (including this connection). \")\t;\r\n+\t        \t  } else {\r\n+\t        \t\tlogger.trace(\"We are below maximum connection limit\");\r\n+\t        \t  }\r\n+\t              conn.init();\t        \t  \r\n \t          }\r\n \t    }};\r\n \tConnectionCollection connections = new ConnectionCollection(this);\t\r\n@@ -297,6 +301,8 @@ public void onClosed(ServiceResultException closeError) {\n \t\t\t\t\t@Override\r\n \t\t\t\t\tpublic void onOpen() {\r\n \t\t\t\t\t}});\r\n+\t\t        // start listening to messages\r\n+\t\t\t\tconn.init();\r\n \t\t\t\t//async, do last, others listen on socket state.\r\n \t\t\t\tsocketHandle.socket.connect(socketHandle.socketAddress);\r\n \t\t\t}catch(IOException e) {\r"
        },
        {
          "filename": "src/main/java/org/opcfoundation/ua/transport/tcp/nio/OpcTcpServerConnection.java",
          "status": "modified",
          "additions": 17,
          "deletions": 4,
          "patch": "@@ -311,15 +311,27 @@ public void onStateTransition(IStatefulObject<SocketState, ?> monitor, SocketSta\n \r\n \t\t\t\tsetState(CloseableObjectState.Opening);\r\n \r\n+\t\t\t}\r\n+\t\t\t\r\n+\t\t\t/**\r\n+\t\t\t * Start listening for data from the connection, note that data might be processed already before\r\n+\t\t\t * this method returns.\r\n+\t\t\t */\r\n+\t\t\tpublic void init() {\r\n \t\t\t\ts.getStateMonitor().addStateListener(socketListener);\r\n-\t\t\t\ts.getInputStream().createMonitor(8, inputListener);\r\n \t\t\t\t\r\n+\t\t\t    // must set timeout timer here, because it might be canceled before the below monitor\r\n+\t\t\t    // is triggered\r\n \t\t\t\tif(rh == null) {\r\n \t\t\t\t\ttimeoutTimer = TimerUtil.schedule(\r\n \t\t\t\t\t\t\ttimer, timeout,\r\n \t\t\t\t\t\t\tStackUtils.getBlockingWorkExecutor(),\r\n \t\t\t\t\t\t\tSystem.currentTimeMillis() + handshakeTimeout);\r\n \t\t\t\t}\r\n+\r\n+\t\t\t    // Start listening for the Hello (the inputListener will schedule itself again)\r\n+\t\t\t\ts.getInputStream().createMonitor(8, inputListener);\r\n+\r\n \t\t\t\tif(rh != null) {\r\n \t\t\t\t\ts.getStateMonitor().addStateListener(new StateListener<SocketState>() {\r\n \t\t\t\t\t\t@Override\r\n@@ -335,8 +347,8 @@ public void onStateTransition(\n \t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t});\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n+\t\t\t\t}\t\r\n+\t\t\t  }\t\t\t\r\n \r\n \t\t\t/** {@inheritDoc} */\r\n \t\t\t@Override\r\n@@ -1234,7 +1246,8 @@ public void run() {\n \t\t\t\t\t\t\t// number of supported SecureChannels. \")\r\n \t\t\t\t\t\t\tif (msg.getMessage() instanceof ActivateSessionResponse) {\r\n \t\t\t\t\t\t\t\tActivateSessionResponse res = (ActivateSessionResponse) msg.getMessage();\r\n-\t\t\t\t\t\t\t\tif (res.getResponseHeader().getServiceResult().isGood()) {\r\n+\t\t\t\t\t\t\t\tif ((res.getResponseHeader() != null) && (res.getResponseHeader().getServiceResult() != null) && \r\n+\t\t\t\t\t\t\t\t\t\t(res.getResponseHeader().getServiceResult().isGood())) {\r\n \t\t\t\t\t\t\t\t\thasBeenSuccessfullySessionActivated.set(true);\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "221fb3f196b336debfa9aa53cda6996845aee8df",
            "date": "2024-05-30T14:43:32Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "63e496496a65d6113ee67fbc5878dca202c7eff0",
            "date": "2024-05-30T14:43:18Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4f2cbd2c368fadc893f8d7b9e0d391122ddd0e37",
            "date": "2024-05-30T14:36:07Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "50752022047121c029e424c4b9cc1cbfe8845573",
            "date": "2024-05-30T14:21:42Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "162f763ff449829f297ea0ccb1cab2d456ed023a",
            "date": "2024-05-30T14:17:19Z",
            "author_login": "jouniaro"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "The OPC UA Legacy Java Stack before 6f176f2 enables an attacker to block OPC UA server applications via uncontrolled resource consumption so that they can no longer serve client applications.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-05-15T15:15:12.823",
    "last_modified": "2024-11-21T08:04:01.600",
    "fix_date": "2023-04-28T10:59:55Z"
  },
  "references": [
    {
      "url": "https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2023-32787.pdf",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/OPCFoundation/UA-Java-Legacy",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/OPCFoundation/UA-Java-Legacy/commit/6f176f2b445a27c157f1a32f225accc9ce8873c0",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2023-32787.pdf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/OPCFoundation/UA-Java-Legacy",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/OPCFoundation/UA-Java-Legacy/commit/6f176f2b445a27c157f1a32f225accc9ce8873c0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:32.971606",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "UA-Java-Legacy",
    "owner": "OPCFoundation",
    "created_at": "2015-11-11T15:38:48Z",
    "updated_at": "2025-01-03T02:31:54Z",
    "pushed_at": "2025-01-03T19:16:47Z",
    "size": 14091,
    "stars": 357,
    "forks": 227,
    "open_issues": 53,
    "watchers": 357,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 7690352
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:19:46.527031"
  }
}