{
  "cve_id": "CVE-2023-3303",
  "github_data": {
    "repository": "admidio/admidio",
    "fix_commit": "3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a",
    "related_commits": [
      "3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a",
      "3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a",
      "commit_date": "2023-06-08T05:21:41Z",
      "author": {
        "login": "Fasse",
        "type": "User",
        "stats": {
          "total_commits": 6698,
          "average_weekly_commits": 6.638255698711595,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 829
        }
      },
      "commit_message": {
        "title": " ecard could sent if album is logged #1432",
        "length": 42,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 49,
        "additions": 26,
        "deletions": 23
      },
      "files": [
        {
          "filename": "adm_program/modules/ecards/ecard_send.php",
          "status": "modified",
          "additions": 14,
          "deletions": 7,
          "patch": "@@ -11,6 +11,12 @@\n require_once(__DIR__ . '/../../system/common.php');\n require_once(__DIR__ . '/ecard_function.php');\n \n+// check if the module is enabled and disallow access if it's disabled\n+if (!$gSettingsManager->getBool('enable_ecard_module')) {\n+    $gMessage->show($gL10n->get('SYS_MODULE_DISABLED'));\n+    // => EXIT\n+}\n+\n // Initialize and check the parameters\n $postTemplateName = admFuncVariableIsValid($_POST, 'ecard_template', 'file', array('requireValue' => true));\n $postPhotoUuid    = admFuncVariableIsValid($_POST, 'photo_uuid', 'string', array('requireValue' => true));\n@@ -33,14 +39,15 @@\n     // => EXIT\n }\n \n-// check if the module is enabled and disallow access if it's disabled\n-if (!$gSettingsManager->getBool('enable_ecard_module')) {\n-    $gMessage->show($gL10n->get('SYS_MODULE_DISABLED'));\n+// check if user has right to view the album\n+if (!$photoAlbum->isVisible()) {\n+    $gMessage->show($gL10n->get('SYS_INVALID_PAGE_VIEW'));\n     // => EXIT\n }\n-// pruefen ob User eingeloggt ist\n-if (!$gValidLogin) {\n-    $gMessage->show($gL10n->get('SYS_INVALID_PAGE_VIEW'));\n+\n+// the logged-in user has no valid mail address stored in his profile, which can be used as sender\n+if ($gValidLogin && $gCurrentUser->getValue('EMAIL') === '') {\n+    $gMessage->show($gL10n->get('SYS_CURRENT_USER_NO_EMAIL', array('<a href=\"'.ADMIDIO_URL.FOLDER_MODULES.'/profile/profile.php\">', '</a>')));\n     // => EXIT\n }\n \n@@ -58,7 +65,7 @@\n     // => EXIT\n }\n \n-// Template wird geholt\n+// read template from file system\n $ecardDataToParse = $funcClass->getEcardTemplate($postTemplateName);\n \n // if template was not found then show error"
        },
        {
          "filename": "adm_program/modules/ecards/ecards.php",
          "status": "modified",
          "additions": 10,
          "deletions": 14,
          "patch": "@@ -19,7 +19,7 @@\n require(__DIR__ . '/../../system/login_valid.php');\n \n // Initialize and check the parameters\n-$getPhotoUuid = admFuncVariableIsValid($_GET, 'photo_uuid', 'string');\n+$getPhotoUuid = admFuncVariableIsValid($_GET, 'photo_uuid', 'string', array('requireValue' => true));\n $getUserUuid  = admFuncVariableIsValid($_GET, 'user_uuid', 'string');\n $getPhotoNr   = admFuncVariableIsValid($_GET, 'photo_nr', 'int', array('requireValue' => true));\n $showPage     = admFuncVariableIsValid($_GET, 'show_page', 'int', array('defaultValue' => 1));\n@@ -35,47 +35,43 @@\n     // => EXIT\n }\n \n-// URL auf Navigationstack ablegen\n+// Drop URL on navigation stack\n $gNavigation->addUrl(CURRENT_URL, $headline);\n \n-// Fotoveranstaltungs-Objekt erzeugen oder aus Session lesen\n+// Create photo album object or read from session\n if (isset($_SESSION['photo_album']) && (int) $_SESSION['photo_album']->getValue('pho_uuid') === $getPhotoUuid) {\n     $photoAlbum =& $_SESSION['photo_album'];\n } else {\n-    // einlesen des Albums falls noch nicht in Session gespeichert\n     $photoAlbum = new TablePhotos($gDb);\n-    if ($getPhotoUuid !== '') {\n-        $photoAlbum->readDataByUuid($getPhotoUuid);\n-    }\n+    $photoAlbum->readDataByUuid($getPhotoUuid);\n \n     $_SESSION['photo_album'] = $photoAlbum;\n }\n \n-// pruefen, ob Album zur aktuellen Organisation gehoert\n-if ($getPhotoUuid !== '' && (int) $photoAlbum->getValue('pho_org_id') !== $gCurrentOrgId) {\n+// check if user has right to view the album\n+if (!$photoAlbum->isVisible()) {\n     $gMessage->show($gL10n->get('SYS_INVALID_PAGE_VIEW'));\n     // => EXIT\n }\n \n if ($gValidLogin && $gCurrentUser->getValue('EMAIL') === '') {\n-    // der eingeloggte Benutzer hat in seinem Profil keine gueltige Mailadresse hinterlegt,\n-    // die als Absender genutzt werden kann...\n+    // the logged in user has no valid mail address stored in his profile, which can be used as sender\n     $gMessage->show($gL10n->get('SYS_CURRENT_USER_NO_EMAIL', array('<a href=\"'.ADMIDIO_URL.FOLDER_MODULES.'/profile/profile.php\">', '</a>')));\n     // => EXIT\n }\n \n if ($getUserUuid !== '') {\n-    // usr_id wurde uebergeben, dann Kontaktdaten des Users aus der DB fischen\n+    // UUID was set than read contact data of this user\n     $user = new User($gDb, $gProfileFields);\n     $user->readDataByUuid($getUserUuid);\n \n-    // darf auf die User-Id zugegriffen werden\n+    // check if the current user has the right communicate with that member\n     if ((!$gCurrentUser->editUsers() && !isMember((int) $user->getValue('usr_id'))) || strlen($user->getValue('usr_id')) === 0) {\n         $gMessage->show($gL10n->get('SYS_USER_ID_NOT_FOUND'));\n         // => EXIT\n     }\n \n-    // besitzt der User eine gueltige E-Mail-Adresse\n+    // check if the member has a valid email address\n     if (!StringUtils::strValidCharacters($user->getValue('EMAIL'), 'email')) {\n         $gMessage->show($gL10n->get('SYS_USER_NO_EMAIL', array($user->getValue('FIRST_NAME').' '.$user->getValue('LAST_NAME'))));\n         // => EXIT"
        },
        {
          "filename": "adm_program/modules/photos/photos.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -59,7 +59,7 @@\n \n     $headline = $photoAlbum->getValue('pho_name');\n \n-    // URL auf Navigationstack ablegen\n+    // Drop URL on navigation stack\n     $gNavigation->addUrl(CURRENT_URL, $headline);\n } else {\n     $headline = $getHeadline;"
        },
        {
          "filename": "adm_program/system/classes/TablePhotos.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -232,7 +232,7 @@ public function isVisible()\n             return false;\n         }\n         // locked photo album could only be viewed by module administrators\n-        elseif ((int) $this->getValue('pho_locked') === 1 && !$GLOBALS['gCurrentUser']->editPhotoRight()) {\n+        elseif ($this->getValue('pho_locked') && !$GLOBALS['gCurrentUser']->editPhotoRight()) {\n             return false;\n         }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "00eed34b64f4edfc34441c80fde054751de0e546",
            "date": "2025-01-23T19:53:46Z",
            "author_login": "Fasse"
          },
          {
            "sha": "8af815bf5111ad7c35737b3830b10e565a778928",
            "date": "2025-01-21T15:57:22Z",
            "author_login": "kainhofer"
          },
          {
            "sha": "a720ec9e6204387e926c648640d694430178d105",
            "date": "2025-01-23T05:41:31Z",
            "author_login": "Fasse"
          },
          {
            "sha": "59ff38abc905a8c88cd88e161a71b4fe2ed8a756",
            "date": "2025-01-23T05:35:20Z",
            "author_login": "Fasse"
          },
          {
            "sha": "31390c4fdf8d5d00d6ab4f798b8f014acff285d2",
            "date": "2025-01-22T21:02:26Z",
            "author_login": "kainhofer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-284",
    "description": "Improper Access Control in GitHub repository admidio/admidio prior to 4.2.9.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-23T13:15:10.587",
    "last_modified": "2024-11-21T08:16:58.010",
    "fix_date": "2023-06-08T05:21:41Z"
  },
  "references": [
    {
      "url": "https://github.com/admidio/admidio/commit/3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/65d260cc-55a9-4e71-888d-cb2f66c071af",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/admidio/admidio/commit/3d8bafaa4e9b7a314ffdf548622a8c7b38faee8a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/65d260cc-55a9-4e71-888d-cb2f66c071af",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.856560",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "admidio",
    "owner": "admidio",
    "created_at": "2015-01-05T11:03:46Z",
    "updated_at": "2025-01-14T08:00:57Z",
    "pushed_at": "2025-01-14T06:12:48Z",
    "size": 122123,
    "stars": 349,
    "forks": 134,
    "open_issues": 157,
    "watchers": 349,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 3162563,
      "JavaScript": 806324,
      "Smarty": 240740,
      "CSS": 89897,
      "HTML": 37144,
      "Shell": 12111,
      "Dockerfile": 3439
    },
    "commit_activity": {
      "total_commits_last_year": 581,
      "avg_commits_per_week": 11.173076923076923,
      "days_active_last_year": 183
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T14:42:13.964136"
  }
}