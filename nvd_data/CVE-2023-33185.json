{
  "cve_id": "CVE-2023-33185",
  "github_data": {
    "repository": "django-ses/django-ses",
    "fix_commit": "b71b5f413293a13997b6e6314086cb9c22629795",
    "related_commits": [
      "b71b5f413293a13997b6e6314086cb9c22629795",
      "b71b5f413293a13997b6e6314086cb9c22629795"
    ],
    "patch_url": "https://github.com/django-ses/django-ses/commit/b71b5f413293a13997b6e6314086cb9c22629795.patch",
    "fix_commit_details": {
      "sha": "b71b5f413293a13997b6e6314086cb9c22629795",
      "commit_date": "2023-05-21T15:35:36Z",
      "author": {
        "login": "pcraciunoiu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Restrict amazonaws allowed certificate URLs.",
        "length": 44,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 82,
        "additions": 50,
        "deletions": 32
      },
      "files": [
        {
          "filename": "django_ses/utils.py",
          "status": "modified",
          "additions": 50,
          "deletions": 32,
          "patch": "@@ -1,21 +1,25 @@\n import base64\n import logging\n+import re\n import warnings\n from builtins import bytes\n-\n-from django_ses.deprecation import RemovedInDjangoSES20Warning\n-\n+from urllib.error import URLError\n from urllib.parse import urlparse\n from urllib.request import urlopen\n-from urllib.error import URLError\n \n from django.core.exceptions import ImproperlyConfigured\n+\n from django_ses import settings\n+from django_ses.deprecation import RemovedInDjangoSES20Warning\n \n logger = logging.getLogger(__name__)\n \n _CERT_CACHE = {}\n \n+SES_REGEX_CERT_URL = re.compile(\n+    \"(?i)^https://sns\\.[a-z0-9\\-]+\\.amazonaws\\.com(\\.cn)?/SimpleNotificationService\\-[a-z0-9]+\\.pem$\"\n+)\n+\n \n def clear_cert_cache():\n     \"\"\"Clear the certificate cache.\n@@ -183,6 +187,17 @@ def _get_cert_url(self):\n         url_obj = urlparse(cert_url)\n         for trusted_domain in settings.EVENT_CERT_DOMAINS:\n             parts = trusted_domain.split(\".\")\n+            if \"amazonaws.com\" in trusted_domain:\n+                if not SES_REGEX_CERT_URL.match(cert_url):\n+                    if len(parts) < 4:\n+                        return None\n+                    else:\n+                        logger.warning('Possible security risk for: \"%s\"', cert_url)\n+                        logger.warning(\n+                            \"It is strongly recommended to configure the full domain in EVENT_CERT_DOMAINS. \"\n+                            \"See v3.5.0 release notes for more details.\"\n+                        )\n+\n             if url_obj.netloc.split(\".\")[-len(parts) :] == parts:\n                 return cert_url\n \n@@ -196,26 +211,28 @@ def _get_bytes_to_sign(self):\n \n         # Depending on the message type the fields to add to the message\n         # differ so we handle that here.\n-        msg_type = self._data.get('Type')\n-        if msg_type == 'Notification':\n+        msg_type = self._data.get(\"Type\")\n+        if msg_type == \"Notification\":\n             fields_to_sign = [\n-                'Message',\n-                'MessageId',\n-                'Subject',\n-                'Timestamp',\n-                'TopicArn',\n-                'Type',\n+                \"Message\",\n+                \"MessageId\",\n+                \"Subject\",\n+                \"Timestamp\",\n+                \"TopicArn\",\n+                \"Type\",\n             ]\n-        elif (msg_type == 'SubscriptionConfirmation' or\n-              msg_type == 'UnsubscribeConfirmation'):\n+        elif (\n+            msg_type == \"SubscriptionConfirmation\"\n+            or msg_type == \"UnsubscribeConfirmation\"\n+        ):\n             fields_to_sign = [\n-                'Message',\n-                'MessageId',\n-                'SubscribeURL',\n-                'Timestamp',\n-                'Token',\n-                'TopicArn',\n-                'Type',\n+                \"Message\",\n+                \"MessageId\",\n+                \"SubscribeURL\",\n+                \"Timestamp\",\n+                \"Token\",\n+                \"TopicArn\",\n+                \"Type\",\n             ]\n         else:\n             # Unrecognized type\n@@ -237,14 +254,14 @@ def _get_bytes_to_sign(self):\n \n def BounceMessageVerifier(*args, **kwargs):\n     warnings.warn(\n-        'utils.BounceMessageVerifier is deprecated. It is renamed to EventMessageVerifier.',\n+        \"utils.BounceMessageVerifier is deprecated. It is renamed to EventMessageVerifier.\",\n         RemovedInDjangoSES20Warning,\n     )\n \n     # parameter name is renamed from bounce_dict to notification.\n-    if 'bounce_dict' in kwargs:\n-        kwargs['notification'] = kwargs['bounce_dict']\n-        del kwargs['bounce_dict']\n+    if \"bounce_dict\" in kwargs:\n+        kwargs[\"notification\"] = kwargs[\"bounce_dict\"]\n+        del kwargs[\"bounce_dict\"]\n \n     return EventMessageVerifier(*args, **kwargs)\n \n@@ -262,31 +279,32 @@ def verify_bounce_message(msg):\n     Verify an SES/SNS bounce(event) notification message.\n     \"\"\"\n     warnings.warn(\n-        'utils.verify_bounce_message is deprecated. It is renamed to verify_event_message.',\n+        \"utils.verify_bounce_message is deprecated. It is renamed to verify_event_message.\",\n         RemovedInDjangoSES20Warning,\n     )\n     return verify_event_message(msg)\n \n \n def confirm_sns_subscription(notification):\n     logger.info(\n-        'Received subscription confirmation: TopicArn: %s',\n-        notification.get('TopicArn'),\n+        \"Received subscription confirmation: TopicArn: %s\",\n+        notification.get(\"TopicArn\"),\n         extra={\n-            'notification': notification,\n+            \"notification\": notification,\n         },\n     )\n \n     # Get the subscribe url and hit the url to confirm the subscription.\n-    subscribe_url = notification.get('SubscribeURL')\n+    subscribe_url = notification.get(\"SubscribeURL\")\n     try:\n         urlopen(subscribe_url).read()\n     except URLError as e:\n         # Some kind of error occurred when confirming the request.\n         logger.error(\n-            'Could not confirm subscription: \"%s\"', e,\n+            'Could not confirm subscription: \"%s\"',\n+            e,\n             extra={\n-                'notification': notification,\n+                \"notification\": notification,\n             },\n             exc_info=True,\n         )"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0cef39cc2daada5059dbf6c1288cdd08b1077ef6",
            "date": "2025-01-13T16:41:39Z",
            "author_login": "pcraciunoiu"
          },
          {
            "sha": "6a6479546f3cbc32b93f86e43fd76fdf15f90bc8",
            "date": "2025-01-13T16:40:27Z",
            "author_login": "pcraciunoiu"
          },
          {
            "sha": "948755389f9375b07c3f12f343e0e66d63e15e45",
            "date": "2025-01-13T16:36:46Z",
            "author_login": "alexandernst"
          },
          {
            "sha": "35cc617d1d9c83fa28a43e2e74bd69fc9836fd07",
            "date": "2024-12-13T16:29:05Z",
            "author_login": "pcraciunoiu"
          },
          {
            "sha": "6eb332fe754769a9982cd8dea9adb3d810b0f937",
            "date": "2024-12-13T16:26:57Z",
            "author_login": "ezet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-347",
    "description": "Django-SES is a drop-in mail backend for Django. The django_ses library implements a mail backend for Django using AWS Simple Email Service. The library exports the `SESEventWebhookView class` intended to receive signed requests from AWS to handle email bounces, subscriptions, etc. These requests are signed by AWS and are verified by django_ses, however the verification of this signature was found to be flawed as it allowed users to specify arbitrary public certificates. This issue was patched in version 3.5.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-05-26T21:15:20.527",
    "last_modified": "2024-11-21T08:05:04.537",
    "fix_date": "2023-05-21T15:35:36Z"
  },
  "references": [
    {
      "url": "https://github.com/django-ses/django-ses/blob/3d627067935876487f9938310d5e1fbb249a7778/CVE/001-cert-url-signature-verification.md",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/django-ses/django-ses/commit/b71b5f413293a13997b6e6314086cb9c22629795",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/django-ses/django-ses/security/advisories/GHSA-qg36-9jxh-fj25",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/django-ses/django-ses/blob/3d627067935876487f9938310d5e1fbb249a7778/CVE/001-cert-url-signature-verification.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/django-ses/django-ses/commit/b71b5f413293a13997b6e6314086cb9c22629795",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/django-ses/django-ses/security/advisories/GHSA-qg36-9jxh-fj25",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.256800",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "django-ses",
    "owner": "django-ses",
    "created_at": "2011-01-25T19:41:40Z",
    "updated_at": "2025-01-13T16:41:54Z",
    "pushed_at": "2025-01-13T16:41:50Z",
    "size": 543,
    "stars": 1024,
    "forks": 229,
    "open_issues": 53,
    "watchers": 1024,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 161018,
      "HTML": 6165
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:45:21.166227"
  }
}