{
  "cve_id": "CVE-2023-33970",
  "github_data": {
    "repository": "kanboard/kanboard",
    "fix_commit": "b501ef44bc28ee9cf603a4fa446ee121d66f652f",
    "related_commits": [
      "b501ef44bc28ee9cf603a4fa446ee121d66f652f",
      "b501ef44bc28ee9cf603a4fa446ee121d66f652f"
    ],
    "patch_url": "https://github.com/kanboard/kanboard/commit/b501ef44bc28ee9cf603a4fa446ee121d66f652f.patch",
    "fix_commit_details": {
      "sha": "b501ef44bc28ee9cf603a4fa446ee121d66f652f",
      "commit_date": "2023-05-30T02:39:28Z",
      "author": {
        "login": "fguillot",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Add missing permission check when creating/updating internal links",
        "length": 66,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 31,
        "additions": 31,
        "deletions": 0
      },
      "files": [
        {
          "filename": "app/Api/Procedure/TaskLinkProcedure.php",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -51,6 +51,15 @@ public function getAllTaskLinks($task_id)\n     public function createTaskLink($task_id, $opposite_task_id, $link_id)\n     {\n         TaskAuthorization::getInstance($this->container)->check($this->getClassName(), 'createTaskLink', $task_id);\n+\n+        if ($this->userSession->isLogged()) {\n+            $opposite_task = $this->taskFinderModel->getById($opposite_task_id);\n+\n+            if (! $this->projectPermissionModel->isUserAllowed($opposite_task['project_id'], $this->userSession->getId())) {\n+                return false;\n+            }\n+        }\n+\n         return $this->taskLinkModel->create($task_id, $opposite_task_id, $link_id);\n     }\n \n@@ -67,6 +76,15 @@ public function createTaskLink($task_id, $opposite_task_id, $link_id)\n     public function updateTaskLink($task_link_id, $task_id, $opposite_task_id, $link_id)\n     {\n         TaskAuthorization::getInstance($this->container)->check($this->getClassName(), 'updateTaskLink', $task_id);\n+\n+        if ($this->userSession->isLogged()) {\n+            $opposite_task = $this->taskFinderModel->getById($opposite_task_id);\n+\n+            if (! $this->projectPermissionModel->isUserAllowed($opposite_task['project_id'], $this->userSession->getId())) {\n+                return false;\n+            }\n+        }\n+\n         return $this->taskLinkModel->update($task_link_id, $task_id, $opposite_task_id, $link_id);\n     }\n "
        },
        {
          "filename": "app/Controller/TaskInternalLinkController.php",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n \n namespace Kanboard\\Controller;\n \n+use Kanboard\\Core\\Controller\\AccessForbiddenException;\n use Kanboard\\Core\\Controller\\PageNotFoundException;\n \n /**\n@@ -53,6 +54,12 @@ public function save()\n         list($valid, $errors) = $this->taskLinkValidator->validateCreation($values);\n \n         if ($valid) {\n+            $opposite_task = $this->taskFinderModel->getById($values['opposite_task_id']);\n+\n+            if (! $this->projectPermissionModel->isUserAllowed($opposite_task['project_id'], $this->userSession->getId())) {\n+                throw new AccessForbiddenException();\n+            }\n+\n             if ($this->taskLinkModel->create($values['task_id'], $values['opposite_task_id'], $values['link_id']) !== false) {\n                 $this->flash->success(t('Link added successfully.'));\n \n@@ -121,6 +128,12 @@ public function update()\n         list($valid, $errors) = $this->taskLinkValidator->validateModification($values);\n \n         if ($valid) {\n+            $opposite_task = $this->taskFinderModel->getById($values['opposite_task_id']);\n+\n+            if (! $this->projectPermissionModel->isUserAllowed($opposite_task['project_id'], $this->userSession->getId())) {\n+                throw new AccessForbiddenException();\n+            }\n+\n             if ($this->taskLinkModel->update($values['id'], $values['task_id'], $values['opposite_task_id'], $values['link_id'])) {\n                 $this->flash->success(t('Link updated successfully.'));\n                 return $this->response->redirect($this->helper->url->to('TaskViewController', 'show', array('task_id' => $task['id'])).'#links');"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d65a57ac658570dd0bbd6f60393937b0b90bea8d",
            "date": "2025-01-12T00:47:10Z",
            "author_login": "lourdas"
          },
          {
            "sha": "2a97f35f900fbcc33ffce54b12ec54fec3bb4cda",
            "date": "2024-12-20T20:17:14Z",
            "author_login": "fguillot"
          },
          {
            "sha": "e49e6968a587594ed62af193f639313293104e6a",
            "date": "2024-12-18T21:30:14Z",
            "author_login": "fguillot"
          },
          {
            "sha": "acf2be83765663b10fc1d6403aa2dba359275e08",
            "date": "2024-12-18T03:58:47Z",
            "author_login": "fguillot"
          },
          {
            "sha": "4d438cd2785942fa0dc4c408774f6749dfe2c8a6",
            "date": "2024-12-18T03:49:04Z",
            "author_login": "fguillot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-862",
    "description": "Kanboard is open source project management software that focuses on the Kanban methodology. A vulnerability related to a `missing access control` was found, which allows a User with the lowest privileges to leak all the tasks and projects titles within the software, even if they are not invited or it's a personal project. This could also lead to private/critical information being leaked if such information is in the title. This issue has been addressed in version 1.2.30. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-05T20:15:09.980",
    "last_modified": "2024-11-21T08:06:19.160",
    "fix_date": "2023-05-30T02:39:28Z"
  },
  "references": [
    {
      "url": "https://github.com/kanboard/kanboard/commit/b501ef44bc28ee9cf603a4fa446ee121d66f652f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/kanboard/kanboard/security/advisories/GHSA-wfch-8rhv-v286",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/kanboard/kanboard/commit/b501ef44bc28ee9cf603a4fa446ee121d66f652f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/kanboard/kanboard/security/advisories/GHSA-wfch-8rhv-v286",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.305915",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "kanboard",
    "owner": "kanboard",
    "created_at": "2014-01-25T19:58:30Z",
    "updated_at": "2025-01-14T13:08:14Z",
    "pushed_at": "2025-01-12T00:47:10Z",
    "size": 92688,
    "stars": 8610,
    "forks": 1826,
    "open_issues": 158,
    "watchers": 8610,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 8473579,
      "JavaScript": 128907,
      "CSS": 67936,
      "Dockerfile": 2671,
      "Makefile": 2660,
      "Shell": 1368
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:20:14.048868"
  }
}