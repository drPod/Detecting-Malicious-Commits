{
  "cve_id": "CVE-2023-34092",
  "github_data": {
    "repository": "vitejs/vite",
    "fix_commit": "813ddd6155c3d54801e264ba832d8347f6f66b32",
    "related_commits": [
      "813ddd6155c3d54801e264ba832d8347f6f66b32",
      "813ddd6155c3d54801e264ba832d8347f6f66b32"
    ],
    "patch_url": "https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32.patch",
    "fix_commit_details": {
      "sha": "813ddd6155c3d54801e264ba832d8347f6f66b32",
      "commit_date": "2023-05-26T10:17:52Z",
      "author": {
        "login": "patak-dev",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: fs.deny with leading double slash (#13348)",
        "length": 47,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 38,
        "deletions": 3
      },
      "files": [
        {
          "filename": "packages/vite/src/node/server/middlewares/static.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -100,7 +100,7 @@ export function serveStaticMiddleware(\n       return next()\n     }\n \n-    const url = new URL(req.url!, 'http://example.com')\n+    const url = new URL(req.url!.replace(/^\\/+/, '/'), 'http://example.com')\n     const pathname = decodeURIComponent(url.pathname)\n \n     // apply aliases to static requests as well\n@@ -153,7 +153,7 @@ export function serveRawFsMiddleware(\n \n   // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n   return function viteServeRawFsMiddleware(req, res, next) {\n-    const url = new URL(req.url!, 'http://example.com')\n+    const url = new URL(req.url!.replace(/^\\/+/, '/'), 'http://example.com')\n     // In some cases (e.g. linked monorepos) files outside of root will\n     // reference assets that are also out of served root. In such cases\n     // the paths are rewritten to `/@fs/` prefixed paths and must be served by"
        },
        {
          "filename": "playground/assets-sanitize/.env",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+KEY=unsafe"
        },
        {
          "filename": "playground/assets-sanitize/__tests__/assets-sanitize.spec.ts",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -25,3 +25,8 @@ if (!isBuild) {\n     expect(Object.keys(manifest).length).toBe(3) // 2 svg, 1 index.js\n   })\n }\n+\n+test.runIf(!isBuild)('denied .env', async () => {\n+  expect(await page.textContent('.unsafe-dotenv')).toBe('403')\n+  expect(await page.textContent('.unsafe-dotenv-double-slash')).toBe('403')\n+})"
        },
        {
          "filename": "playground/assets-sanitize/index.html",
          "status": "modified",
          "additions": 30,
          "deletions": 1,
          "patch": "@@ -6,6 +6,35 @@\n     margin-bottom: 1rem;\n   }\n </style>\n-<h1>test elements below should show circles and their url</h1>\n+<h3>test elements below should show circles and their url</h3>\n <div class=\"test-el plus-circle\"></div>\n <div class=\"test-el underscore-circle\"></div>\n+\n+<h3>Denied .env</h3>\n+<div class=\"unsafe-dotenv\"></div>\n+<div class=\"unsafe-dotenv-double-slash\"></div>\n+\n+<script type=\"module\">\n+  // .env, denied by default. See fs-serve playground for other fs tests\n+  // these checks ensure that a project without a custom root respects fs.deny\n+\n+  fetch('/.env')\n+    .then((r) => {\n+      text('.unsafe-dotenv', r.status)\n+    })\n+    .catch((e) => {\n+      console.error(e)\n+    })\n+\n+  fetch(window.location + '/.env')\n+    .then((r) => {\n+      text('.unsafe-dotenv-double-slash', r.status)\n+    })\n+    .catch((e) => {\n+      console.error(e)\n+    })\n+\n+  function text(el, text) {\n+    document.querySelector(el).textContent = text\n+  }\n+</script>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "080266213288ea2bb2c8061865ec47dc287081b0",
            "date": "2025-01-14T10:21:01Z",
            "author_login": "jahredhope"
          },
          {
            "sha": "db81c2dada961f40c0882b5182adf2f34bb5c178",
            "date": "2025-01-14T09:59:08Z",
            "author_login": "bluwy"
          },
          {
            "sha": "47039f4643179be31a8d7c7fbff83c5c13deb787",
            "date": "2025-01-14T09:38:57Z",
            "author_login": "bluwy"
          },
          {
            "sha": "3bd55bcb7e831d2c4f66c90d7bbb3e1fbf7a02b6",
            "date": "2025-01-14T06:34:21Z",
            "author_login": "patak-dev"
          },
          {
            "sha": "76082e3d3033b09b02b6db64de6e36942593c753",
            "date": "2025-01-13T07:03:33Z",
            "author_login": "pacexy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-50",
    "description": "Vite provides frontend tooling. Prior to versions 2.9.16, 3.2.7, 4.0.5, 4.1.5, 4.2.3, and 4.3.9, Vite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default `fs.deny` settings (`['.env', '.env.*', '*.{crt,pem}']`). Only users explicitly exposing the Vite dev server to the network (using `--host` or `server.host` config option) are affected, and only files in the immediate Vite project root folder could be exposed. This issue is fixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5, vite@3.2.7, and vite@2.9.16.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-01T17:15:10.947",
    "last_modified": "2024-11-21T08:06:31.573",
    "fix_date": "2023-05-26T10:17:52Z"
  },
  "references": [
    {
      "url": "https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vitejs/vite/pull/13348",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vitejs/vite/pull/13348",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.293481",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vite",
    "owner": "vitejs",
    "created_at": "2020-04-21T05:03:57Z",
    "updated_at": "2025-01-14T12:10:58Z",
    "pushed_at": "2025-01-14T10:21:01Z",
    "size": 43459,
    "stars": 69971,
    "forks": 6348,
    "open_issues": 638,
    "watchers": 69971,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "TypeScript": 1910071,
      "JavaScript": 229467,
      "HTML": 118058,
      "CSS": 30179,
      "Vue": 3535,
      "AppleScript": 2691,
      "Svelte": 2510,
      "SCSS": 1894,
      "Less": 970,
      "Stylus": 531,
      "SugarSS": 274,
      "Shell": 244,
      "Pug": 165,
      "Sass": 140,
      "Astro": 114
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:03:39.007676"
  }
}