{
  "cve_id": "CVE-2023-34104",
  "github_data": {
    "repository": "NaturalIntelligence/fast-xml-parser",
    "fix_commit": "39b0e050bb909e8499478657f84a3076e39ce76c",
    "related_commits": [
      "39b0e050bb909e8499478657f84a3076e39ce76c",
      "a4bdced80369892ee413bf08e28b78795a2b0d5b",
      "39b0e050bb909e8499478657f84a3076e39ce76c",
      "a4bdced80369892ee413bf08e28b78795a2b0d5b"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "39b0e050bb909e8499478657f84a3076e39ce76c",
      "commit_date": "2023-06-05T05:44:13Z",
      "author": {
        "login": "amitguptagwl",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix security bug",
        "length": 16,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 32,
        "additions": 31,
        "deletions": 1
      },
      "files": [
        {
          "filename": "spec/entities_spec.js",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -376,6 +376,24 @@ describe(\"XMLParser Entities\", function() {\n \n         expect(result).toEqual(expected);\n     });\n+    it(\"should throw error if an entity name contains special char\", function() {\n+        const xmlData = `\n+        <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+        <!DOCTYPE note [\n+        <!ENTITY nj$ \"writer;\">\n+        <!ENTITY wr?er \"Writer: Donald Duck.\">\n+        ]>`;\n+\n+        const options = {\n+            processEntities: true,\n+        };\n+\n+        expect(() =>{\n+            const parser = new XMLParser(options);\n+            parser.parse(xmlData);\n+        }).toThrowError(\"Invalid character $ in entity name\")\n+    });\n });\n \n describe(\"XMLParser External Entites\", function() {"
        },
        {
          "filename": "src/xmlparser/DocTypeReader.js",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -19,7 +19,7 @@ function readDocType(xmlData, i){\n                     i += 7; \n                     [entityName, val,i] = readEntityExp(xmlData,i+1);\n                     if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n-                        entities[ entityName ] = {\n+                        entities[ validateEntityName(entityName) ] = {\n                             regx : RegExp( `&${entityName};`,\"g\"),\n                             val: val\n                         };\n@@ -140,4 +140,16 @@ function isNotation(xmlData, i){\n     return false\n }\n \n+//an entity name should not contains special characters that may be used in regex\n+//Eg !?\\\\\\/[]$%{}^&*()<>\n+const specialChar = \"!?\\\\\\/[]$%{}^&*()<>\";\n+\n+function validateEntityName(name){\n+    for (let i = 0; i < specialChar.length; i++) {\n+        const ch = specialChar[i];\n+        if(name.indexOf(ch) !== -1) throw new Error(`Invalid character ${ch} in entity name`);\n+    }\n+    return name;\n+}\n+\n module.exports = readDocType;\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "280cd63b8df2a6ad1f17ee95cc9f7cf9b4094fba",
            "date": "2024-12-20T05:47:14Z",
            "author_login": "Kelgors"
          },
          {
            "sha": "e132656533533886f7dc9eadbd8e790ae5572b4c",
            "date": "2024-12-15T07:12:54Z",
            "author_login": "amitguptagwl"
          },
          {
            "sha": "74e2651811c5ff969b782417a1632e03e67b5969",
            "date": "2024-12-14T09:26:00Z",
            "author_login": "jhulford"
          },
          {
            "sha": "408290231ed0aeb38cdfc55f9866dda1669c123c",
            "date": "2024-11-22T06:11:10Z",
            "author_login": "LivioGama"
          },
          {
            "sha": "eb8aa89a3cdf195164d120c60d4bf0d6e730488f",
            "date": "2024-11-14T12:28:40Z",
            "author_login": "ThePlenkov"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "fast-xml-parser is an open source, pure javascript xml parser. fast-xml-parser allows special characters in entity names, which are not escaped or sanitized. Since the entity name is used for creating a regex for searching and replacing entities in the XML body, an attacker can abuse it for denial of service (DoS) attacks. By crafting an entity name that results in an intentionally bad performing regex and utilizing it in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time. This problem has been resolved in v4.2.4. Users are advised to upgrade. Users unable to upgrade should avoid using DOCTYPE parsing by setting the `processEntities: false` option.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-06T18:15:11.643",
    "last_modified": "2024-11-21T08:06:33.287",
    "fix_date": "2023-06-05T05:44:13Z"
  },
  "references": [
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/commit/a4bdced80369892ee413bf08e28b78795a2b0d5b",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/commit/a4bdced80369892ee413bf08e28b78795a2b0d5b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.311140",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "fast-xml-parser",
    "owner": "NaturalIntelligence",
    "created_at": "2017-01-28T23:25:42Z",
    "updated_at": "2025-01-24T20:40:11Z",
    "pushed_at": "2024-12-20T05:47:14Z",
    "size": 6879,
    "stars": 2647,
    "forks": 309,
    "open_issues": 65,
    "watchers": 2647,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "JavaScript": 354230,
      "HTML": 15007,
      "TypeScript": 869
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:53:59.282325"
  }
}