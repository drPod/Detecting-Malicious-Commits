{
  "cve_id": "CVE-2023-34237",
  "github_data": {
    "repository": "sabnzbd/sabnzbd",
    "fix_commit": "422b4fce7bfd56e95a315be0400cdfdc585df7cc",
    "related_commits": [
      "422b4fce7bfd56e95a315be0400cdfdc585df7cc",
      "e3a722664819d1c7c8fab97144cc299b1c18b429",
      "422b4fce7bfd56e95a315be0400cdfdc585df7cc",
      "e3a722664819d1c7c8fab97144cc299b1c18b429"
    ],
    "patch_url": "https://github.com/sabnzbd/sabnzbd/commit/422b4fce7bfd56e95a315be0400cdfdc585df7cc.patch",
    "fix_commit_details": {
      "sha": "422b4fce7bfd56e95a315be0400cdfdc585df7cc",
      "commit_date": "2023-05-31T19:16:15Z",
      "author": {
        "login": "Safihre",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Notification Script did not get environment variables",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 12,
        "additions": 5,
        "deletions": 7
      },
      "files": [
        {
          "filename": "sabnzbd/newsunpack.py",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -1908,9 +1908,6 @@ def create_env(nzo: Optional[NzbObject] = None, extra_env_fields: Dict[str, Any]\n             del env[\"PYTHONPATH\"]\n         if \"PYTHONHOME\" in env:\n             del env[\"PYTHONHOME\"]\n-    elif not nzo:\n-        # No modification\n-        return None\n \n     return env\n "
        },
        {
          "filename": "sabnzbd/notifier.py",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -350,10 +350,10 @@ def send_nscript(title, msg, gtype, force=False, test=None):\n     \"\"\"Run user's notification script\"\"\"\n     if test:\n         script = test.get(\"nscript_script\")\n-        env = {\"notification_parameters\": test.get(\"nscript_parameters\")}\n+        env_params = {\"notification_parameters\": test.get(\"nscript_parameters\")}\n     else:\n         script = sabnzbd.cfg.nscript_script()\n-        env = {\"notification_parameters\": sabnzbd.cfg.nscript_parameters()}\n+        env_params = {\"notification_parameters\": sabnzbd.cfg.nscript_parameters()}\n \n     if not script:\n         return T(\"Cannot send, missing required data\")\n@@ -365,17 +365,18 @@ def send_nscript(title, msg, gtype, force=False, test=None):\n             ret = -1\n             output = None\n             try:\n-                p = build_and_run_command([script_path, gtype, title, msg], env=create_env(extra_env_fields=env))\n+                p = build_and_run_command([script_path, gtype, title, msg], env=create_env(extra_env_fields=env_params))\n                 output = p.stdout.read()\n                 ret = p.wait()\n             except:\n-                logging.info(\"Failed script %s, Traceback: \", script, exc_info=True)\n+                logging.info(\"Failed to run script %s\", script, exc_info=True)\n \n             if ret:\n                 logging.error(T('Script returned exit code %s and output \"%s\"'), ret, output)\n                 return T('Script returned exit code %s and output \"%s\"') % (ret, output)\n             else:\n                 logging.info(\"Successfully executed notification script %s\", script_path)\n+                logging.debug(\"Script output: %s\", output)\n         else:\n             return T('Notification script \"%s\" does not exist') % script_path\n     return \"\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "22800ae411eace74d1ff3d399e50c7205e07fc9c",
            "date": "2025-01-14T10:59:36Z",
            "author_login": "Safihre"
          },
          {
            "sha": "e8a4d9517792631bd12a60468806e585fb30edc3",
            "date": "2025-01-14T10:16:44Z",
            "author_login": "sabnzbd-automation"
          },
          {
            "sha": "026a606e7f0e906cefd69b9c151e842734a9e946",
            "date": "2025-01-14T10:15:54Z",
            "author_login": "Safihre"
          },
          {
            "sha": "9551f9a3b9ad2b9bc2aeeff592c082d67a9415f6",
            "date": "2025-01-14T08:58:57Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "f62e7ab560f968c45807f61a7c569b35f003f8e5",
            "date": "2025-01-14T08:08:21Z",
            "author_login": "sabnzbd-automation"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "SABnzbd is an open source automated Usenet download tool. A design flaw was discovered in SABnzbd that could allow remote code execution. Manipulating the Parameters setting in the Notification Script functionality allows code execution with the privileges of the SABnzbd process. Exploiting the vulnerabilities requires access to the web interface. Remote exploitation is possible if users[exposed their setup to the internet or other untrusted networks without setting a username/password. By default SABnzbd is only accessible from `localhost`, with no authentication required for the web interface. This issue has been patched in commits `e3a722` and `422b4f` which have been included in the 4.0.2 release. Users are advised to upgrade. Users unable to upgrade should ensure that a username and password have been set if their instance is web accessible.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-06-07T20:15:10.097",
    "last_modified": "2024-11-21T08:06:50.027",
    "fix_date": "2023-05-31T19:16:15Z"
  },
  "references": [
    {
      "url": "https://github.com/sabnzbd/sabnzbd/commit/422b4fce7bfd56e95a315be0400cdfdc585df7cc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sabnzbd/sabnzbd/commit/e3a722664819d1c7c8fab97144cc299b1c18b429",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sabnzbd/sabnzbd/security/advisories/GHSA-hhgh-xgh3-985r",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://sabnzbd.org/wiki/configuration/4.0/general",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202312-11",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/sabnzbd/sabnzbd/commit/422b4fce7bfd56e95a315be0400cdfdc585df7cc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sabnzbd/sabnzbd/commit/e3a722664819d1c7c8fab97144cc299b1c18b429",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/sabnzbd/sabnzbd/security/advisories/GHSA-hhgh-xgh3-985r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://sabnzbd.org/wiki/configuration/4.0/general",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202312-11",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.341339",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sabnzbd",
    "owner": "sabnzbd",
    "created_at": "2011-08-10T20:28:06Z",
    "updated_at": "2025-01-14T11:07:20Z",
    "pushed_at": "2025-01-14T11:00:02Z",
    "size": 194735,
    "stars": 2372,
    "forks": 342,
    "open_issues": 34,
    "watchers": 2372,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop",
      "master"
    ],
    "languages": {
      "Python": 1946230,
      "JavaScript": 229219,
      "CSS": 85784,
      "NSIS": 30943,
      "HTML": 11096,
      "Shell": 1323,
      "Batchfile": 545,
      "SRecode Template": 2
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:11:26.689879"
  }
}