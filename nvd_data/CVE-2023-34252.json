{
  "cve_id": "CVE-2023-34252",
  "github_data": {
    "repository": "getgrav/grav",
    "fix_commit": "244758d4383034fe4cd292d41e477177870b65ec",
    "related_commits": [
      "244758d4383034fe4cd292d41e477177870b65ec",
      "244758d4383034fe4cd292d41e477177870b65ec"
    ],
    "patch_url": "https://github.com/getgrav/grav/commit/244758d4383034fe4cd292d41e477177870b65ec.patch",
    "fix_commit_details": {
      "sha": "244758d4383034fe4cd292d41e477177870b65ec",
      "commit_date": "2023-06-14T17:08:17Z",
      "author": {
        "login": "rhukster",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "also handle SSTI in reduce twig filter + function",
        "length": 49,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 35,
        "additions": 29,
        "deletions": 6
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -4,10 +4,11 @@\n 1. [](#new)\n    * Added a new `system.languages.debug` option that adds a `<span class=\"translate-debug\"></span>` around strings translated with `|t`. This can be styled by the theme as needed.\n 1. [](#improved)\n-   * More robust SSTI handling in `|filter` and `|map`\n+   * More robust SSTI handling in `filter`, `map`, and `reduce` Twig filters and functions\n    * Various SSTI improvements `Utils::isDangerousFunction()`\n 1. [](#bugfix)\n    * Fixed Twig `|map()` allowing code execution\n+   * Fixed Twig `|reduce()` allowing code execution\n \n # v1.7.41.2\n ## 06/01/2023"
        },
        {
          "filename": "system/src/Grav/Common/Twig/Extension/GravExtension.php",
          "status": "modified",
          "additions": 27,
          "deletions": 5,
          "patch": "@@ -171,9 +171,10 @@ public function getFilters(): array\n             new TwigFilter('count', 'count'),\n             new TwigFilter('array_diff', 'array_diff'),\n \n-            // Security fix\n-            new TwigFilter('filter', [$this, 'filterFilter'], ['needs_environment' => true]),\n-            new TwigFilter('map', [$this, 'mapFilter'], ['needs_environment' => true]),\n+            // Security fixes\n+            new TwigFilter('filter', [$this, 'filterFunc'], ['needs_environment' => true]),\n+            new TwigFilter('map', [$this, 'mapFunc'], ['needs_environment' => true]),\n+            new TwigFilter('reduce', [$this, 'reduceFunc'], ['needs_environment' => true]),\n         ];\n     }\n \n@@ -250,6 +251,11 @@ public function getFunctions(): array\n             new TwigFunction('count', 'count'),\n             new TwigFunction('array_diff', 'array_diff'),\n             new TwigFunction('parse_url', 'parse_url'),\n+\n+            // Security fixes\n+            new TwigFunction('filter', [$this, 'filterFunc'], ['needs_environment' => true]),\n+            new TwigFunction('map', [$this, 'mapFunc'], ['needs_environment' => true]),\n+            new TwigFunction('reduce', [$this, 'reduceFunc'], ['needs_environment' => true]),\n         ];\n     }\n \n@@ -1706,7 +1712,7 @@ public function ofTypeFunc($var, $typeTest = null, $className = null)\n      * @return array|CallbackFilterIterator\n      * @throws RuntimeError\n      */\n-    function filterFilter(Environment $env, $array, $arrow)\n+    function filterFunc(Environment $env, $array, $arrow)\n     {\n         if (!$arrow instanceof \\Closure && !is_string($arrow) || Utils::isDangerousFunction($arrow)) {\n             throw new RuntimeError('Twig |filter(\"' . $arrow . '\") is not allowed.');\n@@ -1722,12 +1728,28 @@ function filterFilter(Environment $env, $array, $arrow)\n      * @return array|CallbackFilterIterator\n      * @throws RuntimeError\n      */\n-    function mapFilter(Environment $env, $array, $arrow)\n+    function mapFunc(Environment $env, $array, $arrow)\n     {\n         if (!$arrow instanceof \\Closure && !is_string($arrow) || Utils::isDangerousFunction($arrow)) {\n             throw new RuntimeError('Twig |map(\"' . $arrow . '\") is not allowed.');\n         }\n \n         return twig_array_map($env, $array, $arrow);\n     }\n+\n+    /**\n+     * @param Environment $env\n+     * @param array $array\n+     * @param callable|string $arrow\n+     * @return array|CallbackFilterIterator\n+     * @throws RuntimeError\n+     */\n+    function reduceFunc(Environment $env, $array, $arrow)\n+    {\n+        if (!$arrow instanceof \\Closure && !is_string($arrow) || Utils::isDangerousFunction($arrow)) {\n+            throw new RuntimeError('Twig |reduce(\"' . $arrow . '\") is not allowed.');\n+        }\n+\n+        return twig_array_map($env, $array, $arrow);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7e723eb7f57414e8236ccd08804895d75a827990",
            "date": "2025-01-13T12:30:17Z",
            "author_login": "rhukster"
          },
          {
            "sha": "1d1d8da431ec0f63b38685ef0e911603dcf7a804",
            "date": "2025-01-07T13:53:09Z",
            "author_login": "Rotzbua"
          },
          {
            "sha": "4097d85daa4597acef44451416d42a8c671f5226",
            "date": "2025-01-06T14:14:42Z",
            "author_login": "rhukster"
          },
          {
            "sha": "2e975dfa90712e8c84667a4841f2a630ef4b1e48",
            "date": "2024-12-03T22:33:32Z",
            "author_login": "rhukster"
          },
          {
            "sha": "a1e583f657f28305e5cbaa4c6b73aa70e1706d62",
            "date": "2024-11-13T21:01:07Z",
            "author_login": "NicholasWilsonDEV"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-184",
    "description": "Grav is a flat-file content management system. Prior to version 1.7.42, there is a logic flaw in the `GravExtension.filterFilter()` function whereby validation against a denylist of unsafe functions is only performed when the argument passed to filter is a string. However, passing an array as a callable argument allows the validation check to be skipped. Consequently, a low privileged attacker with login access to Grav Admin panel and page creation/update permissions is able to inject malicious templates to obtain remote code execution. The vulnerability can be found in the `GravExtension.filterFilter()` function declared in `/system/src/Grav/Common/Twig/Extension/GravExtension.php`. Version 1.7.42 contains a patch for this issue. End users should also ensure that `twig.undefined_functions` and `twig.undefined_filters` properties in `/path/to/webroot/system/config/system.yaml` configuration file are set to `false` to disallow Twig from treating undefined filters/functions as PHP functions and executing them.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-14T22:15:09.397",
    "last_modified": "2024-11-21T08:06:51.900",
    "fix_date": "2023-06-14T17:08:17Z"
  },
  "references": [
    {
      "url": "https://github.com/getgrav/grav/blob/1.7.40/system/src/Grav/Common/Twig/Extension/GravExtension.php#L1692-L1698",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/blob/1.7.40/system/src/Grav/Common/Utils.php#L1956-L2074",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/commit/244758d4383034fe4cd292d41e477177870b65ec",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/security/advisories/GHSA-96xv-rmwj-6p9w",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/blob/1.7.40/system/src/Grav/Common/Twig/Extension/GravExtension.php#L1692-L1698",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/blob/1.7.40/system/src/Grav/Common/Utils.php#L1956-L2074",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/commit/244758d4383034fe4cd292d41e477177870b65ec",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/getgrav/grav/security/advisories/GHSA-96xv-rmwj-6p9w",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.367979",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "grav",
    "owner": "getgrav",
    "created_at": "2014-08-02T18:29:10Z",
    "updated_at": "2025-01-13T21:59:40Z",
    "pushed_at": "2025-01-13T12:30:23Z",
    "size": 29213,
    "stars": 14651,
    "forks": 1420,
    "open_issues": 428,
    "watchers": 14651,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "PHP": 2924876,
      "CSS": 8627,
      "Twig": 1772,
      "JavaScript": 1393,
      "Logos": 908
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:18:52.449936"
  }
}