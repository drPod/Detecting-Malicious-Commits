{
  "cve_id": "CVE-2023-34455",
  "github_data": {
    "repository": "xerial/snappy-java",
    "fix_commit": "3bf67857fcf70d9eea56eed4af7c925671e8eaea",
    "related_commits": [
      "3bf67857fcf70d9eea56eed4af7c925671e8eaea",
      "3bf67857fcf70d9eea56eed4af7c925671e8eaea"
    ],
    "patch_url": "https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea.patch",
    "fix_commit_details": {
      "sha": "3bf67857fcf70d9eea56eed4af7c925671e8eaea",
      "commit_date": "2023-06-14T17:49:52Z",
      "author": {
        "login": "aidancch",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-qcwq-55hx-v3vh",
        "length": 624,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 64,
        "additions": 62,
        "deletions": 2
      },
      "files": [
        {
          "filename": "src/main/java/org/xerial/snappy/SnappyInputStream.java",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -417,9 +417,20 @@ protected boolean hasNextChunk()\n             }\n         }\n \n+        // chunkSize is negative\n+        if (chunkSize < 0) {\n+            throw new SnappyError(SnappyErrorCode.INVALID_CHUNK_SIZE, \"chunkSize is too big or negative : \" + chunkSize);\n+        }\n+\n         // extend the compressed data buffer size\n         if (compressed == null || chunkSize > compressed.length) {\n-            compressed = new byte[chunkSize];\n+            // chunkSize exceeds limit\n+            try {\n+                compressed = new byte[chunkSize];\n+            }\n+            catch (java.lang.OutOfMemoryError e) {\n+                throw new SnappyError(SnappyErrorCode.INVALID_CHUNK_SIZE, e.getMessage());\n+            }\n         }\n         readBytes = 0;\n         while (readBytes < chunkSize) {"
        },
        {
          "filename": "src/test/java/org/xerial/snappy/SnappyTest.java",
          "status": "modified",
          "additions": 50,
          "deletions": 1,
          "patch": "@@ -26,6 +26,7 @@\n \n import static org.junit.Assert.*;\n \n+import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n \n@@ -330,14 +331,61 @@ public void isValidCompressedData()\n         }\n     }\n \n+    /*\n+\n+    Tests happy cases for SnappyInputStream.read method\n+    - {0}\n+     */\n+    @Test\n+    public void isValidChunkLengthForSnappyInputStreamIn()\n+            throws Exception {\n+        byte[] data = {0};\n+        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n+        byte[] out = new byte[50];\n+        in.read(out);\n+    }\n+\n+    /*\n+    Tests sad cases for SnappyInputStream.read method\n+    - Expects a java.lang.NegativeArraySizeException catched into a SnappyError\n+    - {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff}\n+     */\n+    @Test(expected = SnappyError.class)\n+    public void isInvalidChunkLengthForSnappyInputStreamInNegative()\n+            throws Exception {\n+        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff};\n+        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n+        byte[] out = new byte[50];\n+        in.read(out);\n+    }\n+\n+    /*\n+    Tests sad cases for SnappyInputStream.read method\n+    - Expects a java.lang.OutOfMemoryError\n+    - {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff}\n+     */\n+    @Test(expected = SnappyError.class)\n+    public void isInvalidChunkLengthForSnappyInputStreamOutOfMemory()\n+            throws Exception {\n+        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0, (byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff};\n+        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n+        byte[] out = new byte[50];\n+        try {\n+            in.read(out);\n+        } catch (Exception ignored) {\n+            // Exception here will be catched\n+            // But OutOfMemoryError will not be caught, and will still be thrown\n+        }\n+    }\n+\n     /*\n     Tests happy cases for BitShuffle.shuffle method\n     - double: 0, 10\n     - float: 0, 10\n     - int: 0, 10\n     - long: 0, 10\n     - short: 0, 10\n-     */\n+    */\n     @Test\n     public void isValidArrayInputLengthForBitShuffleShuffle()\n             throws Exception\n@@ -386,5 +434,6 @@ public void isTooLargeLongArrayInputLengthForBitShuffleShuffle() throws Exceptio\n     @Test(expected = SnappyError.class)\n     public void isTooLargeShortArrayInputLengthForBitShuffleShuffle() throws Exception {\n         BitShuffle.shuffle(new short[Integer.MAX_VALUE / 2 + 1]);\n+\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec23d7c611563bedce536ca4d02ebdb9a690ea91",
            "date": "2025-01-08T19:46:21Z",
            "author_login": "xerial-bot"
          },
          {
            "sha": "192e0ee28647cf47972810b1104646031bfdffcc",
            "date": "2025-01-08T19:46:12Z",
            "author_login": "xerial-bot"
          },
          {
            "sha": "dfbf67a4cb49930aa7be2bf6c6d9e77e6aba79e2",
            "date": "2024-12-20T00:16:05Z",
            "author_login": "xerial-bot"
          },
          {
            "sha": "f6b188896cd6f7fa93aebd1c9d29916687a84e78",
            "date": "2024-12-19T17:33:33Z",
            "author_login": "xerial-bot"
          },
          {
            "sha": "1fe7685ae729513b9640ec235dc34f56a751e16a",
            "date": "2024-12-19T17:33:16Z",
            "author_login": "xerial-bot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.\n\nThe code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn\u2019t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.\n\nIn the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn\u2019t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.\n\nVersion 1.1.10.1 contains a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-15T18:15:09.347",
    "last_modified": "2024-11-21T08:07:17.493",
    "fix_date": "2023-06-14T17:49:52Z"
  },
  "references": [
    {
      "url": "https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230818-0009/",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20230818-0009/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.369708",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "snappy-java",
    "owner": "xerial",
    "created_at": "2012-09-06T01:30:21Z",
    "updated_at": "2025-01-08T19:46:26Z",
    "pushed_at": "2025-01-13T16:03:43Z",
    "size": 37531,
    "stars": 1044,
    "forks": 234,
    "open_issues": 55,
    "watchers": 1044,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 318875,
      "C++": 227887,
      "Shell": 94403,
      "Makefile": 9706,
      "Scala": 6541,
      "C": 5658,
      "CSS": 1554,
      "CMake": 525
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:48:15.891299"
  }
}