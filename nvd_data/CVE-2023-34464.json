{
  "cve_id": "CVE-2023-34464",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "53e8292a31ec70fba5e1d705a4ac443658b9e6df",
    "related_commits": [
      "53e8292a31ec70fba5e1d705a4ac443658b9e6df",
      "53e8292a31ec70fba5e1d705a4ac443658b9e6df"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "53e8292a31ec70fba5e1d705a4ac443658b9e6df",
      "commit_date": "2023-02-06T13:18:39Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 388,
          "average_weekly_commits": 0.40585774058577406,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 111
        }
      },
      "commit_message": {
        "title": "XWIKI-20290: Set correct content type in rendercontent.vm",
        "length": 148,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 146,
        "additions": 145,
        "deletions": 1
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/rendercontent.vm",
          "status": "modified",
          "additions": 14,
          "deletions": 1,
          "patch": "@@ -33,7 +33,20 @@\n   $services.progress.pushLevel(1)\n #end\n $services.progress.startStep('Compute the content to display')\n-## Make sure we don't escape the content since we want HTML to be rendered\n+## Set the content type to text/plain when the output syntax is not HTML to avoid that other content is interpreted\n+## as HTML by the browser. This needs to be done before calling contentvars.vm as rendering the content can modify\n+## the content type when the document, e.g., produces JSON.\n+#if ($response.getContentType() != 'text/plain')\n+  #set ($outputSyntax = $xwiki.getAvailableRendererSyntax($request.outputSyntax, $request.outputSyntaxVersion))\n+  #if ($outputSyntax)\n+    #set ($syntaxType = $outputSyntax.type.toIdString())\n+    #if ($syntaxType != \"xhtml\" && $syntaxType != \"html\")\n+      $response.setContentType('text/plain')\n+    #end\n+  #end\n+#end\n+## Make sure we don't escape the content since non-HTML output like JSON is produced by some documents when plain\n+## output syntax is specified.\n #set ($noEscapeContent = true)\n #template(\"contentvars.vm\")\n $services.progress.endStep()"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/test/java/org/xwiki/web/DisplaycontentPageTest.java",
          "status": "added",
          "additions": 131,
          "deletions": 0,
          "patch": "@@ -0,0 +1,131 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.web;\n+\n+import javax.inject.Inject;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.job.script.ProgressScripService;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.template.TemplateManager;\n+import org.xwiki.template.script.TemplateScriptService;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.XWikiException;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.web.XWikiServletResponseStub;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Tests the {@code displaycontent.vm} template.\n+ *\n+ * @version $Id$\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@ComponentList({\n+    TemplateScriptService.class,\n+    ProgressScripService.class\n+})\n+class DisplaycontentPageTest extends PageTest\n+{\n+    private static final DocumentReference TEST_REFERENCE = new DocumentReference(\"xwiki\", \"space\", \"page\");\n+\n+    private static final String TEMPLATE_NAME = \"displaycontent.vm\";\n+\n+    private static final String HTML_CONTENT_TYPE = \"text/html; charset=utf-8\";\n+\n+    private XWikiDocument document;\n+\n+    @Inject\n+    private TemplateManager templateManager;\n+\n+    @BeforeEach\n+    void setUp() throws XWikiException\n+    {\n+        this.document = new XWikiDocument(TEST_REFERENCE);\n+        this.document.setSyntax(Syntax.XWIKI_2_1);\n+        this.xwiki.saveDocument(this.document, this.context);\n+        this.context.setDoc(this.document);\n+\n+        // Allow setting the content type in the response, so we can assert it later. The default is consistent with\n+        // Utils#parseTemplate(String, boolean, XWikiContext).\n+        this.response = new XWikiServletResponseStub()\n+        {\n+            private String contentType = HTML_CONTENT_TYPE;\n+\n+            @Override\n+            public String getContentType()\n+            {\n+                return this.contentType;\n+            }\n+\n+            @Override\n+            public void setContentType(String type)\n+            {\n+                this.contentType = type;\n+            }\n+        };\n+        this.context.setResponse(this.response);\n+    }\n+\n+    @Test\n+    void renderHTML() throws Exception\n+    {\n+        this.document.setContent(\"Hello World\");\n+        this.xwiki.saveDocument(this.document, this.context);\n+\n+        String result = this.templateManager.render(TEMPLATE_NAME).trim();\n+        assertEquals(\"<p>Hello World</p>\", result);\n+        assertEquals(HTML_CONTENT_TYPE, this.response.getContentType());\n+    }\n+\n+    @Test\n+    void renderJSON() throws Exception\n+    {\n+        String json = \"{\\\"hello\\\": \\\"world\\\"}\";\n+        this.document.setContent(json\n+            + \" {{velocity}}#set ($discard = $response.setContentType('application/json')){{/velocity}}\");\n+        this.xwiki.saveDocument(this.document, this.context);\n+        this.request.put(\"outputSyntax\", \"plain\");\n+\n+        String result = this.templateManager.render(TEMPLATE_NAME).trim();\n+        assertEquals(json, result);\n+        assertEquals(\"application/json\", this.response.getContentType());\n+    }\n+\n+    @Test\n+    void renderPlain() throws Exception\n+    {\n+        this.document.setContent(\"<strong>Some HTML</strong>\");\n+        this.xwiki.saveDocument(this.document, this.context);\n+        this.request.put(\"outputSyntax\", \"plain\");\n+\n+        String result = this.templateManager.render(TEMPLATE_NAME).trim();\n+        assertEquals(this.document.getContent(), result);\n+        assertEquals(\"text/plain\", this.response.getContentType());\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Starting in version 2.2.1 until versions 14.4.8, 14.10.5, and 15.1RC1 of org.xwiki.platform:xwiki-platform-web and any version prior to 14.4.8, 14.10.5, and 15.1.RC1 of org.xwiki.platform:xwiki-platform-web-templates, any user who can edit a document in a wiki like the user profile can create a stored cross-site scripting attack. The attack occurs by putting plain HTML code into that document and then tricking another user to visit that document with the `displaycontent` or `rendercontent` template and plain output syntax. If a user with programming rights is tricked into visiting such a URL, arbitrary actions be performed with this user's rights, impacting the confidentiality, integrity, and availability of the whole XWiki installation. This has been patched in XWiki 14.4.8, 14.10.5 and 15.1RC1 by setting the content type of the response to plain text when the output syntax is not an HTML syntax.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-23T15:15:09.200",
    "last_modified": "2024-11-21T08:07:18.623",
    "fix_date": "2023-02-06T13:18:39Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/53e8292a31ec70fba5e1d705a4ac443658b9e6df",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fp7h-f9f5-x4q7",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20290",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/53e8292a31ec70fba5e1d705a4ac443658b9e6df",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fp7h-f9f5-x4q7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20290",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.856828",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}