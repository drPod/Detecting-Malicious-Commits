{
  "cve_id": "CVE-2023-34467",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "71f889db9962df2d385f4298e29cfbc9050b828a",
    "related_commits": [
      "71f889db9962df2d385f4298e29cfbc9050b828a",
      "71f889db9962df2d385f4298e29cfbc9050b828a"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/71f889db9962df2d385f4298e29cfbc9050b828a.patch",
    "fix_commit_details": {
      "sha": "71f889db9962df2d385f4298e29cfbc9050b828a",
      "commit_date": "2023-01-13T15:53:48Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 953,
          "average_weekly_commits": 0.9989517819706499,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "XWIKI-20333: Improved filtering and sorting of emails in Livetable",
        "length": 66,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 225,
        "additions": 223,
        "deletions": 2
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-livetable/xwiki-platform-livetable-ui/pom.xml",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -62,6 +62,12 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-mail-script</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n     <!-- Test Dependencies -->\n     <dependency>\n       <groupId>javax.servlet</groupId>\n@@ -88,5 +94,13 @@\n       <type>test-jar</type>\n       <scope>test</scope>\n     </dependency>\n+    <!-- Mail Script Service Component List for the Page Tests -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-mail-script</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-livetable/xwiki-platform-livetable-ui/src/main/resources/XWiki/LiveTableResultsMacros.xml",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -76,7 +76,10 @@\n     ## If a classname is defined and the class field corresponding to the column name,\n     ## we check the type of the field and skip it if it's Password.\n     #if ($className != '' &amp;&amp; $class.get($colname))\n-      #if ($class.get($colname).classType != 'Password')\n+      #set ($isPasswordType = $class.get($colname).classType == 'Password')\n+      #set ($isEmailType = $class.get($colname).classType == 'Email')\n+      #set ($emailObfuscated = $services.mail.general.shouldObfuscate())\n+      #if (!($isPasswordType || ($isEmailType &amp;&amp; $emailObfuscated)))\n         #livetable_addColumnToQuery($colname)\n       #end\n     #else\n@@ -488,6 +491,8 @@\n     #set($fieldProperty = $fieldObject.getProperty($colname))\n     #if ($fieldProperty.getPropertyClass().classType == 'Password')\n       #set($fieldValue = '********')\n+    #elseif ($fieldProperty.getPropertyClass().classType == 'Email' &amp;&amp; $services.mail.general.shouldObfuscate())\n+      #set ($fieldValue = $services.mail.general.obfuscate(\"$!fieldProperty.getValue()\"))\n     #else\n       #set($fieldValue = \"$!fieldProperty.getValue()\")\n     #end"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-livetable/xwiki-platform-livetable-ui/src/test/java/org/xwiki/livetable/LiveTableResultsTest.java",
          "status": "modified",
          "additions": 113,
          "deletions": 1,
          "patch": "@@ -24,12 +24,19 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.stream.Stream;\n \n import org.apache.commons.lang3.StringUtils;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n import org.mockito.ArgumentCaptor;\n import org.mockito.Mock;\n+import org.xwiki.mail.GeneralMailConfiguration;\n+import org.xwiki.mail.MailSender;\n+import org.xwiki.mail.script.MailScriptServiceComponentList;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.model.script.ModelScriptService;\n import org.xwiki.query.internal.ScriptQuery;\n@@ -39,17 +46,20 @@\n import org.xwiki.security.authorization.Right;\n import org.xwiki.security.script.SecurityScriptServiceComponentList;\n import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n import org.xwiki.test.page.PageTest;\n import org.xwiki.test.page.XWikiSyntax20ComponentList;\n import org.xwiki.velocity.tools.JSONTool;\n \n import com.xpn.xwiki.XWikiContext;\n import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.objects.BaseObject;\n import com.xpn.xwiki.objects.classes.BaseClass;\n import com.xpn.xwiki.objects.classes.StaticListClass;\n import com.xpn.xwiki.plugin.tag.TagPluginApi;\n \n import static java.util.Collections.emptyList;\n+import static java.util.Collections.singletonList;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -63,14 +73,16 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_1;\n \n /**\n  * Unit tests for the {@code LiveTableResults} page.\n- * \n+ *\n  * @version $Id$\n  */\n @XWikiSyntax20ComponentList\n @SecurityScriptServiceComponentList\n+@MailScriptServiceComponentList\n @ComponentList({\n     ModelScriptService.class\n })\n@@ -83,6 +95,9 @@ class LiveTableResultsTest extends PageTest\n     @Mock\n     private ScriptQuery query;\n \n+    @MockComponent\n+    private GeneralMailConfiguration generalMailConfiguration;\n+\n     @BeforeEach\n     @SuppressWarnings(\"deprecation\")\n     public void setUp() throws Exception\n@@ -103,6 +118,10 @@ public void setUp() throws Exception\n         doReturn(tagPluginApi).when(this.oldcore.getSpyXWiki()).getPluginApi(eq(\"tag\"), any(XWikiContext.class));\n \n         loadPage(new DocumentReference(\"xwiki\", \"XWiki\", \"LiveTableResultsMacros\"));\n+\n+        // Mock this component as we are not interested in mail sending in this test suite.\n+        this.componentManager.registerMockComponent(MailSender.class);\n+        this.componentManager.registerMockComponent(ScriptService.class, \"mail.storage\");\n     }\n \n     @Test\n@@ -531,6 +550,99 @@ void cleanupAccessToPasswordFields() throws Exception\n             + \"and doc.fullName not in (:classTemplate1, :classTemplate2)  \");\n     }\n \n+    private static Stream<Arguments> provideObfuscateEmails()\n+    {\n+        return Stream.of(\n+            Arguments.of(\n+                true,\n+                \", BaseObject as obj , StringProperty as prop_name  \"\n+                    + \"where obj.name=doc.fullName \"\n+                    + \"and obj.className = :className \"\n+                    + \"and doc.fullName not in (:classTemplate1, :classTemplate2)  \"\n+                    + \"and obj.id = prop_name.id.id \"\n+                    + \"and prop_name.id.name = :prop_name_id_name \"\n+                    + \"and (upper(prop_name.value) like upper(:prop_name_value_1)) \",\n+                Map.of(\n+                    \"className\", \"Space.MyClass\",\n+                    \"classTemplate1\", \"Space.MyClassTemplate\",\n+                    \"classTemplate2\", \"Space.MyTemplate\",\n+                    \"prop_name_id_name\", \"name\",\n+                    \"prop_name_value_1\", \"%filtername%\"\n+                ),\n+                \"t...@mail.com\",\n+                \"t...@mail.com\"\n+            ),\n+            Arguments.of(\n+                false,\n+                \", BaseObject as obj , StringProperty as prop_mail, StringProperty as prop_name  \"\n+                    + \"where obj.name=doc.fullName \"\n+                    + \"and obj.className = :className \"\n+                    + \"and doc.fullName not in (:classTemplate1, :classTemplate2)  \"\n+                    + \"and obj.id = prop_mail.id.id \"\n+                    + \"and prop_mail.id.name = :prop_mail_id_name \"\n+                    + \"and (upper(prop_mail.value) like upper(:prop_mail_value_1)) \"\n+                    + \"and obj.id = prop_name.id.id \"\n+                    + \"and prop_name.id.name = :prop_name_id_name \"\n+                    + \"and (upper(prop_name.value) like upper(:prop_name_value_1)) \",\n+                Map.of(\n+                    \"className\", \"Space.MyClass\",\n+                    \"classTemplate1\", \"Space.MyClassTemplate\",\n+                    \"classTemplate2\", \"Space.MyTemplate\",\n+                    \"prop_mail_id_name\", \"mail\",\n+                    \"prop_mail_value_1\", \"%filtermail%\",\n+                    \"prop_name_id_name\", \"name\",\n+                    \"prop_name_value_1\", \"%filtername%\"),\n+                \"<a href=\\\"mailto:test@mail.com\\\">test@mail.com</a>\",\n+                \"test@mail.com\"\n+            )\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"provideObfuscateEmails\")\n+    void obfuscateEmails(boolean obfuscate, String expectedHql, Map<String, Object> expectedBindValues,\n+        String expectedMail, String expectedMailValue) throws Exception\n+    {\n+        // TODO: We mock the mail configuration as it relies on document that are loaded through xar files from external\n+        //  modules, which is currently not possible (would it be loaded using a mandatory document initializer, it \n+        //  would work though).\n+        when(this.generalMailConfiguration.shouldObfuscate()).thenReturn(obfuscate);\n+\n+        DocumentReference myClassReference = new DocumentReference(\"xwiki\", \"Space\", \"MyClass\");\n+        XWikiDocument xClassDocument = new XWikiDocument(myClassReference);\n+        xClassDocument.getXClass().addEmailField(\"mail\", \"Email\", 100);\n+        xClassDocument.getXClass().addTextField(\"name\", \"Name\", 100);\n+        this.xwiki.saveDocument(xClassDocument, this.context);\n+\n+        XWikiDocument xObjectDocument = new XWikiDocument(new DocumentReference(\"xwiki\", \"Space\", \"MyObject\"));\n+        xObjectDocument.setSyntax(XWIKI_2_1);\n+        BaseObject baseObject = xObjectDocument.newXObject(myClassReference, this.context);\n+        baseObject.set(\"mail\", \"test@mail.com\", this.context);\n+        baseObject.set(\"name\", \"testName\", this.context);\n+        this.xwiki.saveDocument(xObjectDocument, this.context);\n+\n+        setColumns(\"mail,name\");\n+        setClassName(\"Space.MyClass\");\n+        setFilter(\"mail\", \"filtermail\");\n+        setFilter(\"name\", \"filtername\");\n+\n+        when(this.queryService.hql(anyString())).thenReturn(this.query);\n+        when(this.query.setLimit(anyInt())).thenReturn(this.query);\n+        when(this.query.setOffset(anyInt())).thenReturn(this.query);\n+        when(this.query.bindValues(any(Map.class))).thenReturn(this.query);\n+        when(this.query.count()).thenReturn(1L);\n+        when(this.query.execute()).thenReturn(singletonList(\"Space.MyObject\"));\n+\n+        renderPage();\n+\n+        List<Map<String, Object>> rows = getRows();\n+        assertEquals(expectedMail, StringUtils.trim((String) rows.get(0).get(\"mail\")));\n+        assertEquals(expectedMailValue, rows.get(0).get(\"mail_value\"));\n+\n+        verify(this.queryService).hql(expectedHql);\n+        verify(this.query).bindValues(expectedBindValues);\n+    }\n+\n     //\n     // Helper methods\n     //"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-script/pom.xml",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -60,4 +60,25 @@\n       <scope>test</scope>\n     </dependency>\n   </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-jar-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>test-jar</id>\n+            <goals>\n+              <goal>test-jar</goal>\n+            </goals>\n+            <configuration>\n+              <includes>\n+                <include>**/MailScriptServiceComponentList.class</include>\n+              </includes>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-script/src/test/java/org/xwiki/mail/script/MailScriptServiceComponentList.java",
          "status": "added",
          "additions": 69,
          "deletions": 0,
          "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.mail.script;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import org.xwiki.mail.internal.DefaultEmailAddressObfuscator;\n+import org.xwiki.mail.internal.DefaultSessionFactory;\n+import org.xwiki.mail.internal.InternetAddressConverter;\n+import org.xwiki.mail.internal.configuration.DefaultMailSenderConfiguration;\n+import org.xwiki.mail.internal.configuration.GeneralMailConfigClassDocumentConfigurationSource;\n+import org.xwiki.mail.internal.configuration.MainWikiGeneralMailConfigClassDocumentConfigurationSource;\n+import org.xwiki.mail.internal.configuration.MainWikiSendMailConfigClassDocumentConfigurationSource;\n+import org.xwiki.mail.internal.configuration.SendMailConfigClassDocumentConfigurationSource;\n+import org.xwiki.test.annotation.ComponentList;\n+\n+import static java.lang.annotation.ElementType.ANNOTATION_TYPE;\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * Pack of default components list for {@link MailScriptService}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.3\n+ */\n+@Documented\n+@Retention(RUNTIME)\n+@Target({ TYPE, METHOD, ANNOTATION_TYPE })\n+@ComponentList({\n+    MailScriptService.class,\n+    MailSenderScriptService.class,\n+    DefaultSessionFactory.class,\n+    DefaultMailSenderConfiguration.class,\n+    SendMailConfigClassDocumentConfigurationSource.class,\n+    MainWikiSendMailConfigClassDocumentConfigurationSource.class,\n+    GeneralMailConfigClassDocumentConfigurationSource.class,\n+    MainWikiGeneralMailConfigClassDocumentConfigurationSource.class,\n+    DefaultEmailAddressObfuscator.class,\n+    GeneralMailScriptService.class,\n+    InternetAddressConverter.class\n+})\n+@Inherited\n+public @interface MailScriptServiceComponentList\n+{\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-402",
    "description": "XWiki Platform is a generic wiki platform. Starting in version 3.5-milestone-1 and prior to versions 14.4.8, 14.10.4, and 15.0-rc-1, the mail obfuscation configuration was not fully taken into account. While the mail displayed to the end user was obfuscated, the rest response was also containing the mail unobfuscated and users were able to filter and sort on the unobfuscated, allowing them to infer the mail content. The consequence was the possibility to retrieve the email addresses of all users even when obfuscated. This has been patched in XWiki 14.4.8, 14.10.4, and 15.0-rc-1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-23T17:15:09.310",
    "last_modified": "2024-11-21T08:07:19.053",
    "fix_date": "2023-01-13T15:53:48Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/71f889db9962df2d385f4298e29cfbc9050b828a#diff-5a739e5865b1f1ad9d79b724791be51b0095a0170cc078911c940478b13b949a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-7vr7-cghh-ch63",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20333",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/71f889db9962df2d385f4298e29cfbc9050b828a#diff-5a739e5865b1f1ad9d79b724791be51b0095a0170cc078911c940478b13b949a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-7vr7-cghh-ch63",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20333",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.858238",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}