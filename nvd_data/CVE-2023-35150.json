{
  "cve_id": "CVE-2023-35150",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "b65220a4d86b8888791c3b643074ebca5c089a3a",
    "related_commits": [
      "b65220a4d86b8888791c3b643074ebca5c089a3a",
      "b65220a4d86b8888791c3b643074ebca5c089a3a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b65220a4d86b8888791c3b643074ebca5c089a3a",
      "commit_date": "2023-01-24T07:38:28Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 957,
          "average_weekly_commits": 1.0010460251046025,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 181
        }
      },
      "commit_message": {
        "title": "XWIKI-20285: Improve escaping of the Invitation Application",
        "length": 374,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 1387,
        "additions": 1253,
        "deletions": 134
      },
      "files": [
        {
          "filename": "xwiki-platform-core/pom.xml",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -179,6 +179,22 @@\n                 </item>\n               </differences>\n             </revapi.differences>\n+            <revapi.differences>\n+              <justification>Moved to xwiki-platform-index-default</justification>\n+              <criticality>allowed</criticality>\n+              <differences>\n+                <item>\n+                  <ignore>true</ignore>\n+                  <code>java.class.removed</code>\n+                  <old>class org.xwiki.index.migration.R140300000XWIKI19614DataMigration</old>\n+                </item>\n+                <item>\n+                  <ignore>true</ignore>\n+                  <code>java.class.removed</code>\n+                  <old>class org.xwiki.index.migration.R140300001XWIKI19571DataMigration</old>\n+                </item>\n+              </differences>\n+            </revapi.differences>\n           </analysisConfiguration>\n         </configuration>\n       </plugin>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-handlers/xwiki-platform-extension-handler-xar/src/main/java/org/xwiki/extension/xar/internal/DefaultXARExtensionIndex.java",
          "status": "added",
          "additions": 56,
          "deletions": 0,
          "patch": "@@ -0,0 +1,56 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.extension.xar.internal;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.extension.repository.InstalledExtensionRepository;\n+import org.xwiki.extension.xar.internal.handler.XarExtensionHandler;\n+import org.xwiki.extension.xar.internal.repository.XarInstalledExtensionRepository;\n+import org.xwiki.internal.extension.XARExtensionIndex;\n+import org.xwiki.model.reference.DocumentReference;\n+\n+/**\n+ * Default implementation of {@link XARExtensionIndex}. Uses {@link XarInstalledExtensionRepository} to implement the\n+ * operations.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@Component\n+@Singleton\n+public class DefaultXARExtensionIndex implements XARExtensionIndex\n+{\n+    @Inject\n+    @Named(XarExtensionHandler.TYPE)\n+    private InstalledExtensionRepository installedXARs;\n+\n+    @Override\n+    public boolean isExtensionDocument(DocumentReference documentReference)\n+    {\n+        return !((XarInstalledExtensionRepository) this.installedXARs).getXarInstalledExtensions(documentReference)\n+            .isEmpty();\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-handlers/xwiki-platform-extension-handler-xar/src/main/resources/META-INF/components.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,4 +1,5 @@\n org.xwiki.extension.xar.internal.DefaultXarExtensionConfiguration\n+org.xwiki.extension.xar.internal.DefaultXARExtensionIndex\n org.xwiki.extension.xar.internal.delete.DocumentsDeletingListener\n org.xwiki.extension.xar.internal.doc.XarDocumentRevisionProvider\n org.xwiki.extension.xar.internal.doc.InstalledExtensionDocumentCustomizationDetector"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -33,6 +33,7 @@\n   <description>XWiki Platform - Index - Parent POM</description>\n   <modules>\n     <module>xwiki-platform-index-api</module>\n+    <module>xwiki-platform-index-default</module>\n     <module>xwiki-platform-index-ui</module>\n     <module>xwiki-platform-index-tree</module>\n   </modules>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-api/pom.xml",
          "status": "modified",
          "additions": 4,
          "deletions": 34,
          "patch": "@@ -32,7 +32,7 @@\n   <description>API to queue asynchronous tasks dedicated to the analysis of wiki pages.</description>\n   <packaging>jar</packaging>\n   <properties>\n-    <xwiki.jacoco.instructionRatio>0.85</xwiki.jacoco.instructionRatio>\n+    <xwiki.jacoco.instructionRatio>0.04</xwiki.jacoco.instructionRatio>\n     <!-- Name to display by the Extension Manager -->\n     <xwiki.extension.name>Index API</xwiki.extension.name>\n     <xwiki.extension.category>api</xwiki.extension.category>\n@@ -50,15 +50,9 @@\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.xwiki.platform</groupId>\n-      <artifactId>xwiki-platform-query-manager</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n-    <!-- Required to have access to XWikiDocumentIndexingTask. -->\n-    <dependency>\n-      <groupId>org.xwiki.platform</groupId>\n-      <artifactId>xwiki-platform-oldcore</artifactId>\n-      <version>${project.version}</version>\n+      <groupId>org.xwiki.commons</groupId>\n+      <artifactId>xwiki-commons-stability</artifactId>\n+      <version>${commons.version}</version>\n     </dependency>\n     <!-- Test dependencies. -->\n     <dependency>\n@@ -67,29 +61,5 @@\n       <version>${commons.version}</version>\n       <scope>test</scope>\n     </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>javax.servlet-api</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n   </dependencies>\n-  <build>\n-    <plugins>\n-      <plugin>\n-        <!-- Apply the Checkstyle configurations defined in the top level pom.xml file -->\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-checkstyle-plugin</artifactId>\n-        <executions>\n-          <execution>\n-            <!-- Specify the \"default\" execution id so that the \"blocker\" one is always executed -->\n-            <id>default</id>\n-            <configuration>\n-              <failsOnError>true</failsOnError>\n-              <suppressionsLocation>${basedir}/src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>\n-            </configuration>\n-          </execution>\n-        </executions>\n-      </plugin>\n-    </plugins>\n-  </build>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-api/src/main/java/org/xwiki/index/TaskConsumerScriptService.java",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -23,14 +23,12 @@\n \n import javax.inject.Inject;\n import javax.inject.Named;\n-import javax.inject.Provider;\n import javax.inject.Singleton;\n \n import org.xwiki.component.annotation.Component;\n import org.xwiki.script.service.ScriptService;\n import org.xwiki.stability.Unstable;\n-\n-import com.xpn.xwiki.XWikiContext;\n+import org.xwiki.wiki.descriptor.WikiDescriptorManager;\n \n /**\n  * Provides the operations to interact with the task consumer from the scripts.\n@@ -48,13 +46,13 @@ public class TaskConsumerScriptService implements ScriptService\n     private TaskManager taskManager;\n \n     @Inject\n-    private Provider<XWikiContext> xcontextProvider;\n+    private WikiDescriptorManager wikiDescriptorManager;\n \n     /**\n      * @return the count of queued tasks, grouped by task type\n      */\n     public Map<String, Long> getQueueSizePerType()\n     {\n-        return this.taskManager.getQueueSizePerType(this.xcontextProvider.get().getWikiId());\n+        return this.taskManager.getQueueSizePerType(this.wikiDescriptorManager.getCurrentWikiId());\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-api/src/main/resources/META-INF/components.txt",
          "status": "modified",
          "additions": 0,
          "deletions": 8,
          "patch": "@@ -1,9 +1 @@\n-org.xwiki.index.internal.DefaultTasksManager\n-org.xwiki.index.internal.TasksStore\n-org.xwiki.index.internal.TaskExecutor\n-org.xwiki.index.internal.TaskApplicationReadyListener\n-org.xwiki.index.internal.DefaultLinksTaskConsumer\n-org.xwiki.index.internal.listener.LinksUpdateListener\n-org.xwiki.index.migration.R140300000XWIKI19614DataMigration\n-org.xwiki.index.migration.R140300001XWIKI19571DataMigration\n org.xwiki.index.TaskConsumerScriptService"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-api/src/test/java/org/xwiki/index/TaskConsumerScriptServiceTest.java",
          "status": "modified",
          "additions": 3,
          "deletions": 10,
          "patch": "@@ -21,16 +21,12 @@\n \n import java.util.Map;\n \n-import javax.inject.Provider;\n-\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.mockito.Mock;\n import org.xwiki.test.junit5.mockito.ComponentTest;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n import org.xwiki.test.junit5.mockito.MockComponent;\n-\n-import com.xpn.xwiki.XWikiContext;\n+import org.xwiki.wiki.descriptor.WikiDescriptorManager;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.Mockito.when;\n@@ -51,16 +47,13 @@ class TaskConsumerScriptServiceTest\n     private TaskManager taskManager;\n \n     @MockComponent\n-    private Provider<XWikiContext> xcontextProvider;\n+    private WikiDescriptorManager wikiDescriptorManager;\n \n-    @Mock\n-    private XWikiContext xcontext;\n \n     @BeforeEach\n     void setUp()\n     {\n-        when(this.xcontextProvider.get()).thenReturn(this.xcontext);\n-        when(this.xcontext.getWikiId()).thenReturn(\"xwiki\");\n+        when(this.wikiDescriptorManager.getCurrentWikiId()).thenReturn(\"xwiki\");\n     }\n \n     @Test"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/pom.xml",
          "status": "added",
          "additions": 87,
          "deletions": 0,
          "patch": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.xwiki.platform</groupId>\n+    <artifactId>xwiki-platform-index</artifactId>\n+    <version>15.1-SNAPSHOT</version>\n+  </parent>\n+  <artifactId>xwiki-platform-index-default</artifactId>\n+  <name>XWiki Platform - Index - Default</name>\n+  <description>Default implementation of the API to queue asynchronous tasks dedicated to the analysis of wiki pages.</description>\n+  <packaging>jar</packaging>\n+  <properties>\n+    <xwiki.jacoco.instructionRatio>0.84</xwiki.jacoco.instructionRatio>\n+    <!-- Name to display by the Extension Manager -->\n+    <xwiki.extension.name>Default implementation of the Index API</xwiki.extension.name>\n+  </properties>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-index-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.commons</groupId>\n+      <artifactId>xwiki-commons-component-api</artifactId>\n+      <version>${commons.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-oldcore</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <!-- Test dependencies. -->\n+    <dependency>\n+      <groupId>org.xwiki.commons</groupId>\n+      <artifactId>xwiki-commons-tool-test-component</artifactId>\n+      <version>${commons.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <!-- Apply the Checkstyle configurations defined in the top level pom.xml file -->\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <!-- Specify the \"default\" execution id so that the \"blocker\" one is always executed -->\n+            <id>default</id>\n+            <configuration>\n+              <failsOnError>true</failsOnError>\n+              <suppressionsLocation>${basedir}/src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/checkstyle/checkstyle-suppressions.xml",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/DefaultLinksTaskConsumer.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/DefaultTasksManager.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/TaskApplicationReadyListener.java",
          "status": "renamed",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -27,7 +27,6 @@\n import org.xwiki.bridge.event.ApplicationReadyEvent;\n import org.xwiki.component.annotation.Component;\n import org.xwiki.component.phase.Initializable;\n-import org.xwiki.component.phase.InitializationException;\n import org.xwiki.index.TaskManager;\n import org.xwiki.observation.AbstractEventListener;\n import org.xwiki.observation.event.Event;\n@@ -73,7 +72,7 @@ public void onEvent(Event event, Object source, Object data)\n     }\n \n     @Override\n-    public void initialize() throws InitializationException\n+    public void initialize()\n     {\n         // If the application is already initialized we start the threads immediately (e.g. in case of extension\n         // install) and the implementation of type DefaultTasksManager."
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/TaskExecutor.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/TasksStore.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/jmx/JMXTasks.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/jmx/JMXTasksMBean.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/internal/listener/LinksUpdateListener.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/migration/R140300000XWIKI19614DataMigration.java",
          "status": "renamed",
          "additions": 31,
          "deletions": 39,
          "patch": "@@ -21,21 +21,19 @@\n \n import java.util.List;\n \n-import javax.inject.Inject;\n import javax.inject.Named;\n-import javax.inject.Provider;\n import javax.inject.Singleton;\n \n import org.xwiki.component.annotation.Component;\n-import org.xwiki.index.TaskManager;\n+import org.xwiki.internal.migration.AbstractDocumentsMigration;\n import org.xwiki.query.Query;\n import org.xwiki.query.QueryException;\n-import org.xwiki.query.QueryManager;\n \n+import com.xpn.xwiki.XWiki;\n import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.doc.XWikiDocument;\n import com.xpn.xwiki.store.migration.DataMigrationException;\n import com.xpn.xwiki.store.migration.XWikiDBVersion;\n-import com.xpn.xwiki.store.migration.hibernate.HibernateDataMigration;\n \n import static org.xwiki.index.internal.DefaultLinksTaskConsumer.LINKS_TASK_TYPE;\n \n@@ -46,27 +44,17 @@\n  * @since 14.2RC1\n  * @deprecated link storage and indexing moved to Solr (implemented in xwiki-platform-search-solr-api)\n  */\n-// TODO: Implement DataMigration once XWIKI-19399 is fixed.\n @Component\n @Singleton\n @Named(R140300000XWIKI19614DataMigration.HINT)\n @Deprecated(since = \"14.8RC1\")\n-public class R140300000XWIKI19614DataMigration implements HibernateDataMigration\n+public class R140300000XWIKI19614DataMigration extends AbstractDocumentsMigration\n {\n     /**\n      * The hint for this component.\n      */\n     public static final String HINT = \"R140300000XWIKI19614\";\n \n-    @Inject\n-    private QueryManager queryManager;\n-\n-    @Inject\n-    private TaskManager taskManager;\n-\n-    @Inject\n-    private Provider<XWikiContext> contextProvider;\n-\n     @Override\n     public String getName()\n     {\n@@ -86,43 +74,47 @@ public XWikiDBVersion getVersion()\n     }\n \n     @Override\n-    public void migrate() throws DataMigrationException\n+    protected String getTaskType()\n+    {\n+        return LINKS_TASK_TYPE;\n+    }\n+\n+    @Override\n+    protected List<String> selectDocuments() throws DataMigrationException\n     {\n-        XWikiContext context = this.contextProvider.get();\n-        // No need to migrate if the wiki does not support backlinks.\n+        List<String> documents;\n+        XWikiContext context = getXWikiContext();\n+        XWiki wiki = getXWikiContext().getWiki();\n         if (context.getWiki().hasBacklinks(context)) {\n-            String wikiId = context.getWikiId();\n             try {\n-                List<Long> ids =\n-                    this.queryManager.createQuery(\"SELECT doc.id FROM XWikiDocument doc\", Query.HQL).setWiki(wikiId)\n-                        .execute();\n-                for (Long id : ids) {\n-                    this.taskManager.addTask(wikiId, id, LINKS_TASK_TYPE);\n-                }\n+                documents = wiki.getStore().getQueryManager()\n+                    .createQuery(\"SELECT doc.fullName FROM XWikiDocument doc\", Query.HQL)\n+                    .setWiki(context.getWikiId())\n+                    .execute();\n             } catch (QueryException e) {\n                 throw new DataMigrationException(\n-                    String.format(\"Failed retrieve the list of all the documents for wiki [%s].\", wikiId), e);\n+                    String.format(\"Failed retrieve the list of all the documents for wiki [%s].\", wiki.getName()), e);\n             }\n+        } else {\n+            documents = List.of();\n         }\n+        return documents;\n     }\n \n     @Override\n-    public boolean shouldExecute(XWikiDBVersion startupVersion)\n+    protected void logBeforeQueuingTask(XWikiDocument document)\n     {\n-        return true;\n+        // No logs here as it would be too verbose (all documents of the wiki are queued).\n     }\n \n     @Override\n-    public String getPreHibernateLiquibaseChangeLog()\n+    protected void logBeforeQueuingTasks(List<XWikiDocument> documents)\n     {\n-        // TODO: Remove once XWIKI-19399 is fixed.\n-        return null;\n-    }\n-\n-    @Override\n-    public String getLiquibaseChangeLog()\n-    {\n-        // TODO: Remove once XWIKI-19399 is fixed.\n-        return null;\n+        XWikiContext context = getXWikiContext();\n+        if (context.getWiki().hasBacklinks(context)) {\n+            super.logBeforeQueuingTasks(documents);\n+        } else {\n+            this.logger.info(\"Skipped because backlinks are not supported on [{}]\", context.getWikiId());\n+        }\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/java/org/xwiki/index/migration/R140300001XWIKI19571DataMigration.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/main/resources/META-INF/components.txt",
          "status": "added",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -0,0 +1,8 @@\n+org.xwiki.index.internal.DefaultTasksManager\n+org.xwiki.index.internal.TasksStore\n+org.xwiki.index.internal.TaskExecutor\n+org.xwiki.index.internal.TaskApplicationReadyListener\n+org.xwiki.index.internal.DefaultLinksTaskConsumer\n+org.xwiki.index.internal.listener.LinksUpdateListener\n+org.xwiki.index.migration.R140300000XWIKI19614DataMigration\n+org.xwiki.index.migration.R140300001XWIKI19571DataMigration"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/internal/DefaultLinksTaskConsumerTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/internal/DefaultTasksManagerTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/internal/TaskExecutorTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/internal/TasksStoreTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/internal/listener/LinksUpdateListenerTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/migration/R140300000XWIKI19614DataMigrationTest.java",
          "status": "renamed",
          "additions": 53,
          "deletions": 10,
          "patch": "@@ -21,27 +21,37 @@\n \n import java.util.List;\n \n-import javax.inject.Provider;\n-\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n import org.mockito.Mock;\n+import org.xwiki.context.Execution;\n+import org.xwiki.context.ExecutionContext;\n import org.xwiki.index.TaskManager;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.DocumentReferenceResolver;\n import org.xwiki.query.Query;\n import org.xwiki.query.QueryException;\n import org.xwiki.query.QueryManager;\n+import org.xwiki.test.LogLevel;\n+import org.xwiki.test.junit5.LogCaptureExtension;\n import org.xwiki.test.junit5.mockito.ComponentTest;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n import org.xwiki.test.junit5.mockito.MockComponent;\n \n import com.xpn.xwiki.XWiki;\n import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.store.XWikiStoreInterface;\n import com.xpn.xwiki.store.migration.DataMigrationException;\n import com.xpn.xwiki.store.migration.hibernate.HibernateDataMigration;\n \n+import ch.qos.logback.classic.Level;\n+\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.verifyNoInteractions;\n import static org.mockito.Mockito.when;\n@@ -58,14 +68,20 @@ class R140300000XWIKI19614DataMigrationTest\n     @InjectMockComponents(role = HibernateDataMigration.class)\n     private R140300000XWIKI19614DataMigration migration;\n \n-    @MockComponent\n+    @Mock\n     private QueryManager queryManager;\n \n     @MockComponent\n     private TaskManager taskManager;\n \n     @MockComponent\n-    private Provider<XWikiContext> contextProvider;\n+    private Execution execution;\n+\n+    @MockComponent\n+    private DocumentReferenceResolver<String> resolver;\n+\n+    @RegisterExtension\n+    LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.INFO);\n \n     @Mock\n     private XWikiContext context;\n@@ -79,26 +95,48 @@ class R140300000XWIKI19614DataMigrationTest\n     @BeforeEach\n     void setUp() throws Exception\n     {\n-        when(this.contextProvider.get()).thenReturn(this.context);\n+        ExecutionContext executionContext = mock(ExecutionContext.class);\n+        XWikiStoreInterface xWikiStoreInterface = mock(XWikiStoreInterface.class);\n+\n+        when(this.execution.getContext()).thenReturn(executionContext);\n+        when(executionContext.getProperty(\"xwikicontext\")).thenReturn(this.context);\n         when(this.context.getWiki()).thenReturn(this.wiki);\n+        when(this.wiki.getName()).thenReturn(\"wiki1\");\n         when(this.context.getWikiId()).thenReturn(\"wiki1\");\n-        when(this.queryManager.createQuery(\"SELECT doc.id FROM XWikiDocument doc\",\n+        when(this.wiki.getStore()).thenReturn(xWikiStoreInterface);\n+        when(xWikiStoreInterface.getQueryManager()).thenReturn(this.queryManager);\n+\n+        when(this.queryManager.createQuery(\"SELECT doc.fullName FROM XWikiDocument doc\",\n             Query.HQL)).thenReturn(this.query);\n         when(this.query.setWiki(any())).thenReturn(this.query);\n     }\n \n     @Test\n     void migrate() throws Exception\n     {\n+        DocumentReference doc42 = new DocumentReference(\"xwiki\", \"XWiki\", \"Doc42\");\n+        DocumentReference doc43 = new DocumentReference(\"xwiki\", \"XWiki\", \"Doc43\");\n+        XWikiDocument xWikiDocument42 = mock(XWikiDocument.class);\n+        XWikiDocument xWikiDocument43 = mock(XWikiDocument.class);\n+\n         when(this.wiki.hasBacklinks(this.context)).thenReturn(true);\n \n-        when(this.query.execute()).thenReturn(List.of(42L, 43L));\n+        when(this.query.execute()).thenReturn(List.of(\"xwiki.XWiki.Doc42\", \"xwiki.XWiki.Doc43\"));\n+        when(this.resolver.resolve(\"xwiki.XWiki.Doc42\")).thenReturn(doc42);\n+        when(this.resolver.resolve(\"xwiki.XWiki.Doc43\")).thenReturn(doc43);\n+        when(this.wiki.getDocument(doc42, this.context)).thenReturn(xWikiDocument42);\n+        when(this.wiki.getDocument(doc43, this.context)).thenReturn(xWikiDocument43);\n+        when(xWikiDocument42.getId()).thenReturn(42L);\n+        when(xWikiDocument43.getId()).thenReturn(43L);\n \n         this.migration.migrate();\n \n         verify(this.query).setWiki(\"wiki1\");\n-        verify(this.taskManager).addTask(\"wiki1\", 42L,  \"links\");\n+        verify(this.taskManager).addTask(\"wiki1\", 42L, \"links\");\n         verify(this.taskManager).addTask(\"wiki1\", 43L, \"links\");\n+\n+        assertEquals(\"[2] documents queued to task [links]\", this.logCapture.getMessage(0));\n+        assertEquals(Level.INFO, this.logCapture.getLogEvent(0).getLevel());\n     }\n \n     @Test\n@@ -111,8 +149,11 @@ void migrateQueryException() throws Exception\n         DataMigrationException queryException =\n             assertThrows(DataMigrationException.class, () -> this.migration.migrate());\n \n-        assertEquals(\"Failed retrieve the list of all the documents for wiki [wiki1].\", queryException.getMessage());\n-        assertEquals(QueryException.class, queryException.getCause().getClass());\n+        assertEquals(\"Data migration R140300000XWIKI19614 failed\", queryException.getMessage());\n+        assertEquals(\"Failed retrieve the list of all the documents for wiki [wiki1].\",\n+            queryException.getCause().getMessage());\n+        assertEquals(DataMigrationException.class, queryException.getCause().getClass());\n+        assertEquals(QueryException.class, queryException.getCause().getCause().getClass());\n \n         verify(this.query).setWiki(\"wiki1\");\n         verifyNoInteractions(this.taskManager);\n@@ -125,5 +166,7 @@ void migrateNotHasBacklinks() throws Exception\n         this.migration.migrate();\n         verifyNoInteractions(this.queryManager);\n         verifyNoInteractions(this.taskManager);\n+        assertEquals(\"Skipped because backlinks are not supported on [wiki1]\", this.logCapture.getMessage(0));\n+        assertEquals(Level.INFO, this.logCapture.getLogEvent(0).getLevel());\n     }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-index/xwiki-platform-index-default/src/test/java/org/xwiki/index/migration/R140300001XWIKI19571DataMigrationTest.java",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml",
          "status": "modified",
          "additions": 11,
          "deletions": 5,
          "patch": "@@ -57,7 +57,9 @@\n   {{info}}testLoadInvitationConfig{{/info}}\n   #testLoadInvitationConfig()\n #elseif($doc.documentReference.name == 'InvitationCommon')\n-  {{info}}$services.localization.render('xe.invitation.internalDocument', [\"${doc.getSpace()}.WebHome\"]){{/info}}\n+  #set ($linkTarget = \"${doc.getSpace()}.WebHome\")\n+  #set ($linkTarget = $services.rendering.escape($linkTarget, 'xwiki/2.1'))\n+  {{info}}$services.localization.render('xe.invitation.internalDocument', [$linkTarget]){{/info}}\n #end\n ##\n #*\n@@ -186,8 +188,10 @@\n         $config.put($element.getName(), $defaultConfigObj.getProperty($element.getName()).getValue())\n       #end\n       ##\n-      #set($configDocContent = '{{velo' + 'city}}{{info}}$services.localization.render(''xe.invitation.internalDocument'', [\"'\n-                               + \"$!config.get('mainPage')\" + '\"]){{/info}}{{/velo' + 'city}}')\n+      #set($configDocContent = \n+        '{{velocity}}{{info}}$services.localization.render(''xe.invitation.internalDocument'','\n+          + '[$services.rendering.escape(\"' + \"$!config.get('mainPage')\" \n+          + '\", ''xwiki/2.1'')]){{/info}}{{/velocity}}')\n       $configDoc.setContent($configDocContent)\n       $configDoc.setParent($configClassNameInternal)\n       #set($configObj = $configDoc.newObject($configClassNameInternal))\n@@ -275,8 +279,10 @@\n #macro(loadInvitationMail, $config, $emailContainer, $mail)\n   ## If this doesn't already exist, it's created.\n   #if($emailContainer.isNew())\n-    #set($emailContainerContent = '{{velo' + 'city}}{{info}}$services.localization.render(''xe.invitation.internalDocument'', [\"'\n-                                  + \"$config.get('emailContainer')\" + '\"]){{/info}}{{/velo' + 'city}}')\n+    #set($emailContainerContent = \n+      '{{velocity}}{{info}}$services.localization.render(''xe.invitation.internalDocument'','\n+        + '[$services.rendering.escape(\"' + \"$config.get('emailContainer')\" \n+        + '\", ''xwiki/2.1'')]){{/info}}{{/velocity}}')\n     #set($discard = $emailContainer.setContent($emailContainerContent))\n     #set($discard = $emailContainer.setHidden(true))\n     #set($discard = $emailContainer.saveAsAuthor())"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.4\" reference=\"Invitation.InvitationConfig\" locale=\"\">\n+<xwikidoc version=\"1.5\" reference=\"Invitation.InvitationConfig\" locale=\"\">\n   <web>Invitation</web>\n   <name>InvitationConfig</name>\n   <language/>\n@@ -34,7 +34,7 @@\n   <title/>\n   <comment/>\n   <minorEdit>false</minorEdit>\n-  <syntaxId>xwiki/2.0</syntaxId>\n+  <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n   <content>{{velocity}}{{info}}$services.localization.render('xe.invitation.internalDocument', ['Invitation.WebHome']){{/info}}{{/velocity}}</content>\n   <attachment>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationGuestActions.xml",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.3\" reference=\"Invitation.InvitationGuestActions\" locale=\"\">\n+<xwikidoc version=\"1.5\" reference=\"Invitation.InvitationGuestActions\" locale=\"\">\n   <web>Invitation</web>\n   <name>InvitationGuestActions</name>\n   <language/>\n@@ -34,9 +34,9 @@\n   <title/>\n   <comment/>\n   <minorEdit>false</minorEdit>\n-  <syntaxId>xwiki/2.0</syntaxId>\n+  <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n-  <content>{{include reference=\"Invitation.InvitationCommon\" /}}\n+  <content>{{include reference=\"Invitation.InvitationCommon\"/}}\n \n {{velocity}}\n #*\n@@ -93,7 +93,9 @@\n             $mail,\n             $emailContainer)\n #else\n-  {{info}}$services.localization.render('xe.invitation.internalDocument', [\"${doc.getSpace()}.WebHome\"]){{/info}}\n+  #set ($linkTarget = \"${doc.getSpace()}.WebHome\")\n+  #set ($linkTarget = $services.rendering.escape($linkTarget, 'xwiki/2.1'))\n+  {{info}}$services.localization.render('xe.invitation.internalDocument', [$linkTarget]){{/info}}\n #end\n ##\n ##---------------------------------------------------------------------"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationMailClass.xml",
          "status": "modified",
          "additions": 8,
          "deletions": 4,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.3\" reference=\"Invitation.InvitationMailClass\" locale=\"\">\n+<xwikidoc version=\"1.5\" reference=\"Invitation.InvitationMailClass\" locale=\"\">\n   <web>Invitation</web>\n   <name>InvitationMailClass</name>\n   <language/>\n@@ -34,9 +34,13 @@\n   <title>InvitationMailClass</title>\n   <comment/>\n   <minorEdit>false</minorEdit>\n-  <syntaxId>xwiki/2.0</syntaxId>\n+  <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n-  <content>{{velocity}}{{info}}$services.localization.render('xe.invitation.internalDocument', [\"${doc.getSpace()}.WebHome\"]){{/info}}{{/velocity}}</content>\n+  <content>{{velocity}}\n+  #set ($linkTarget = \"${doc.getSpace()}.WebHome\")\n+  #set ($linkTarget = $services.rendering.escape($linkTarget, 'xwiki/2.1'))\n+  {{info}}$services.localization.render('xe.invitation.internalDocument', [$linkTarget]){{/info}}\n+{{/velocity}}</content>\n   <class>\n     <name>Invitation.InvitationMailClass</name>\n     <customClass/>\n@@ -121,10 +125,10 @@\n       <number>3</number>\n       <picker>1</picker>\n       <prettyName>sendingUser</prettyName>\n-      <size>30</size>\n       <relationalStorage>0</relationalStorage>\n       <separator> </separator>\n       <separators/>\n+      <size>30</size>\n       <sort>none</sort>\n       <unmodifiable>0</unmodifiable>\n       <usesList>0</usesList>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationMemberActions.xml",
          "status": "modified",
          "additions": 7,
          "deletions": 5,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.3\" reference=\"Invitation.InvitationMemberActions\" locale=\"\">\n+<xwikidoc version=\"1.5\" reference=\"Invitation.InvitationMemberActions\" locale=\"\">\n   <web>Invitation</web>\n   <name>InvitationMemberActions</name>\n   <language/>\n@@ -34,11 +34,11 @@\n   <title>$services.localization.render('xe.invitation.tools.heading')</title>\n   <comment/>\n   <minorEdit>false</minorEdit>\n-  <syntaxId>xwiki/2.0</syntaxId>\n+  <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n-  <content>{{include reference=\"Invitation.InvitationCommon\" /}}\n+  <content>{{include reference=\"Invitation.InvitationCommon\"/}}\n \n-{{include reference=\"Invitation.InvitationMembersCommon\" /}}\n+{{include reference=\"Invitation.InvitationMembersCommon\"/}}\n \n {{velocity}}\n #*\n@@ -120,7 +120,9 @@ $xwiki.get('ssx').use($config.get('commonPage'))\n   #else\n     ##\n     ## No orders, Lets just explain what this page is for.\n-    {{info}}$services.localization.render('xe.invitation.internalDocument', [\"${doc.getSpace()}.WebHome\"]){{/info}}\n+    #set ($linkTarget = \"${doc.getSpace()}.WebHome\")\n+    #set ($linkTarget = $services.rendering.escape($linkTarget, 'xwiki/2.1'))\n+    {{info}}$services.localization.render('xe.invitation.internalDocument', [$linkTarget]){{/info}}\n   #end\n #end\n ##"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationMembersCommon.xml",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.3\" reference=\"Invitation.InvitationMembersCommon\" locale=\"\">\n+<xwikidoc version=\"1.5\" reference=\"Invitation.InvitationMembersCommon\" locale=\"\">\n   <web>Invitation</web>\n   <name>InvitationMembersCommon</name>\n   <language/>\n@@ -34,7 +34,7 @@\n   <title/>\n   <comment/>\n   <minorEdit>false</minorEdit>\n-  <syntaxId>xwiki/2.0</syntaxId>\n+  <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n   <content>{{velocity}}\n #*\n@@ -53,7 +53,9 @@\n  * Macros also depend on other macros but only other macros which are contained in this script.\n  *###\n #if($doc.documentReference.name == 'InvitationMembersCommon')\n-  {{info}}$services.localization.render('xe.invitation.internalDocument', [\"${doc.getSpace()}.WebHome\"]){{/info}}\n+  #set ($linkTarget = \"${doc.getSpace()}.WebHome\")\n+  #set ($linkTarget = $services.rendering.escape($linkTarget, 'xwiki/2.1'))\n+  {{info}}$services.localization.render('xe.invitation.internalDocument', [$linkTarget]){{/info}}\n #end\n ##\n #*"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -89,11 +89,11 @@ void setUp() throws Exception\n     void testEq0() throws Exception\n     {\n         this.context.setDoc(this.xwiki.getDocument(\n-            new DocumentReference(\"xwiki\", \"<script>console.log</script>\", \"InvitationCommon\"), this.context));\n+            new DocumentReference(\"xwiki\", \"]]  {{noscript/}}\", \"InvitationCommon\"), this.context));\n \n         DocumentReference invitationCommonReference = new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n         Document document = Jsoup.parse(loadPage(invitationCommonReference).getRenderedContent(this.context));\n-        assertEquals(\"xe.invitation.internalDocument [<script>console\\\\.log</script>.WebHome]\",\n+        assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\",\n             document.selectFirst(\".infomessage\").text());\n     }\n "
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java",
          "status": "added",
          "additions": 78,
          "deletions": 0,
          "patch": "@@ -0,0 +1,78 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.invitation;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@code Invitation.InvitationConfig}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    TestNoScriptMacro.class,\n+    // Start - Required in addition of RenderingScriptServiceComponentList\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    // End - Required in additional of RenderingScriptServiceComponentList\n+})\n+class InvitationConfigPageTest extends PageTest\n+{\n+    private static final DocumentReference INVITATION_CONFIG_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationConfig\");\n+\n+    @Test\n+    void escapeInfoMessageInternalDocumentParameter() throws Exception\n+    {\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_CONFIG_DOCUMENT_REFERENCE);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"]] {{noscript/}}\", \"Page\"), this.context));\n+\n+        Document document = Jsoup.parse(invitationGuestActionsDocument.getRenderedContent(this.context));\n+        Element infomessage = document.selectFirst(\".infomessage\");\n+        assertEquals(\"xe.invitation.internalDocument [Invitation.WebHome]\", infomessage.text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationGuestActionsPageTest.java",
          "status": "added",
          "additions": 88,
          "deletions": 0,
          "patch": "@@ -0,0 +1,88 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.invitation;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@code Invitation.InvitationGuestActions}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    TestNoScriptMacro.class,\n+    // Start - Required in addition of RenderingScriptServiceComponentList\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    // End - Required in additional of RenderingScriptServiceComponentList\n+})\n+class InvitationGuestActionsPageTest extends PageTest\n+{\n+    private static final DocumentReference INVITATION_COMMON_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n+\n+    private static final DocumentReference INVITATION_GUEST_ACTIONS_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationGuestActions\");\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        loadPage(INVITATION_COMMON_DOCUMENT_REFERENCE);\n+    }\n+\n+    @Test\n+    void escapeInfoMessageInternalDocumentParameter() throws Exception\n+    {\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_GUEST_ACTIONS_DOCUMENT_REFERENCE);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"]] {{noscript/}}\", \"Page\"), this.context));\n+\n+        Document document = Jsoup.parse(invitationGuestActionsDocument.getRenderedContent(this.context));\n+        Element infomessage = document.selectFirst(\".infomessage\");\n+        assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\", infomessage.text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationMailClassPageTest.java",
          "status": "added",
          "additions": 78,
          "deletions": 0,
          "patch": "@@ -0,0 +1,78 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.invitation;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@code Invitation.InvitationMailClass}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    TestNoScriptMacro.class,\n+    // Start - Required in addition of RenderingScriptServiceComponentList\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    // End - Required in additional of RenderingScriptServiceComponentList\n+})\n+class InvitationMailClassPageTest extends PageTest\n+{\n+    private static final DocumentReference INVITATION_MAIL_CLASS_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationMailClass\");\n+\n+    @Test\n+    void escapeInfoMessageInternalDocumentParameter() throws Exception\n+    {\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_MAIL_CLASS_DOCUMENT_REFERENCE);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"]] {{noscript/}}\", \"Page\"), this.context));\n+\n+        Document document = Jsoup.parse(invitationGuestActionsDocument.getRenderedContent(this.context));\n+        Element infomessage = document.selectFirst(\".infomessage\");\n+        assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\", infomessage.text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationMemberActionsPageTest.java",
          "status": "added",
          "additions": 91,
          "deletions": 0,
          "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.invitation;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@code Invitation.InvitationMemberActions}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    TestNoScriptMacro.class,\n+    // Start - Required in addition of RenderingScriptServiceComponentList\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    // End - Required in additional of RenderingScriptServiceComponentList\n+})\n+class InvitationMemberActionsPageTest extends PageTest\n+{\n+    private static final DocumentReference INVITATION_COMMON_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n+\n+    private static final DocumentReference INVITATION_MEMBER_ACTIONS_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationMemberActions\");\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        loadPage(INVITATION_COMMON_DOCUMENT_REFERENCE);\n+    }\n+\n+    @Test\n+    void escapeInfoMessageInternalDocumentParameter() throws Exception\n+    {\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_MEMBER_ACTIONS_DOCUMENT_REFERENCE);\n+\n+        // Set a non-guest user as otherwise the rendering stops early.\n+        this.context.setUserReference(new DocumentReference(\"xwiki\", \"XWiki\", \"U1\"));\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"]] {{noscript/}}\", \"Page\"), this.context));\n+\n+        Document document = Jsoup.parse(invitationGuestActionsDocument.getRenderedContent(this.context));\n+        Element infomessage = document.selectFirst(\".infomessage\");\n+        assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\", infomessage.text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationMembersCommonPageTest.java",
          "status": "added",
          "additions": 81,
          "deletions": 0,
          "patch": "@@ -0,0 +1,81 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.invitation;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@code Invitation.InvitationMembersCommon}.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    TestNoScriptMacro.class,\n+    // Start - Required in addition of RenderingScriptServiceComponentList\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    // End - Required in additional of RenderingScriptServiceComponentList\n+})\n+class InvitationMembersCommonPageTest extends PageTest\n+{\n+    private static final DocumentReference INVITATION_MEMBER_COMMON_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationMembersCommon\");\n+\n+    @Test\n+    void escapeInfoMessageInternalDocumentParameter() throws Exception\n+    {\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_MEMBER_COMMON_DOCUMENT_REFERENCE);\n+\n+        // Set a non-guest user as otherwise the rendering stops early.\n+        this.context.setUserReference(new DocumentReference(\"xwiki\", \"XWiki\", \"U1\"));\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"]] {{noscript/}}\", \"InvitationMembersCommon\"),\n+                this.context));\n+\n+        Document document = Jsoup.parse(invitationGuestActionsDocument.getRenderedContent(this.context));\n+        assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\",\n+            document.selectFirst(\".infomessage\").text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-minimaldependencies/pom.xml",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -349,6 +349,13 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <!-- The default document task analysis implementation -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-index-default</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n \n     <!-- ********************************************************************** -->\n     <!-- Plugins, hard to install as extensions (we need to get rid of all that) -->"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/pom.xml",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -640,6 +640,11 @@\n       <artifactId>apache-el</artifactId>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-index-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n   </dependencies>\n   <build>\n     <plugins>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/extension/XARExtensionIndex.java",
          "status": "added",
          "additions": 41,
          "deletions": 0,
          "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.extension;\n+\n+import org.xwiki.component.annotation.Role;\n+import org.xwiki.model.reference.DocumentReference;\n+\n+/**\n+ * Provides operation to access to information relative to XARs provided by extensions.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@Role\n+public interface XARExtensionIndex\n+{\n+    /**\n+     * @param documentReference a document reference\n+     * @return {@code true} if a given document reference is provided by an extension\n+     */\n+    boolean isExtensionDocument(DocumentReference documentReference);\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/migration/AbstractDocumentsMigration.java",
          "status": "added",
          "additions": 120,
          "deletions": 0,
          "patch": "@@ -0,0 +1,120 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.migration;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javax.inject.Inject;\n+\n+import org.slf4j.Logger;\n+import org.xwiki.index.TaskManager;\n+import org.xwiki.model.reference.DocumentReferenceResolver;\n+\n+import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.XWikiException;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.store.migration.DataMigrationException;\n+import com.xpn.xwiki.store.migration.hibernate.AbstractHibernateDataMigration;\n+\n+import static java.util.stream.Collectors.toList;\n+\n+/**\n+ * Allow to easily queue a document analysis task on a set documents to migrate. Sub-classes need to implement two\n+ * methods:\n+ * <ul>\n+ *     <li>{@link #selectDocuments()}: return the list of document ids to queue for migration</li>\n+ *     <li>{@link #getTaskType()}: the type of the task to queue documents to</li>\n+ * </ul>\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+public abstract class AbstractDocumentsMigration extends AbstractHibernateDataMigration\n+{\n+    @Inject\n+    protected Logger logger;\n+\n+    @Inject\n+    protected DocumentReferenceResolver<String> documentReferenceResolver;\n+\n+    @Inject\n+    private TaskManager taskManager;\n+\n+    @Override\n+    protected void hibernateMigrate() throws DataMigrationException\n+    {\n+        List<XWikiDocument> documents = selectDocuments()\n+            .stream()\n+            .map(this::convert)\n+            .filter(Optional::isPresent)\n+            .map(Optional::get)\n+            .collect(toList());\n+        logBeforeQueuingTasks(documents);\n+        for (XWikiDocument document : documents) {\n+            logBeforeQueuingTask(document);\n+            this.taskManager.addTask(this.getXWikiContext().getWikiId(), document.getId(), getTaskType());\n+        }\n+    }\n+\n+    private Optional<XWikiDocument> convert(String documentReference)\n+    {\n+        XWikiContext context = getXWikiContext();\n+        try {\n+            return Optional.of(\n+                context.getWiki().getDocument(this.documentReferenceResolver.resolve(documentReference), context));\n+        } catch (XWikiException e) {\n+            this.logger.error(\"Failed to resolve [{}]\", documentReference, e);\n+            return Optional.empty();\n+        }\n+    }\n+\n+    /**\n+     * @return the id of the task type to queue documents to\n+     */\n+    protected abstract String getTaskType();\n+\n+    /**\n+     * @return the list of document ids to migrate\n+     */\n+    protected abstract List<String> selectDocuments() throws DataMigrationException;\n+\n+    /**\n+     * Prints an info log with the number of queued documents and the type of the task.\n+     *\n+     * @param documents the full list of documents that will be queued\n+     */\n+    protected void logBeforeQueuingTasks(List<XWikiDocument> documents)\n+    {\n+        this.logger.info(\"[{}] documents queued to task [{}]\", documents.size(), getTaskType());\n+    }\n+\n+    /**\n+     * Prints an info logs with an individual document and well as its queued task.\n+     *\n+     * @param document a individual document that will be queued\n+     */\n+    protected void logBeforeQueuingTask(XWikiDocument document)\n+    {\n+        this.logger.info(\"document [{}] queued to task [{}]\", document, getTaskType());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/migration/InvitationInternalDocumentParameterEscapingFixer.java",
          "status": "added",
          "additions": 76,
          "deletions": 0,
          "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.migration;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.regex.Pattern;\n+\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.rendering.syntax.Syntax;\n+\n+import static java.util.regex.Matcher.quoteReplacement;\n+\n+/**\n+ * Fix a content by looking for localization of {@code xe.invitation.internalDocument} and escaping its parameter. The\n+ * translation fixed by this method is initially introduced by the invitation application but the fix is localed in\n+ * oldcore so that the fix is applied on pages even if the invitation application has been uninstalled.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@Component(roles = InvitationInternalDocumentParameterEscapingFixer.class)\n+@Singleton\n+public class InvitationInternalDocumentParameterEscapingFixer\n+{\n+    private static final Pattern PATTERN = Pattern.compile(\"(\\\\{\\\\{info}}\"\n+        + \"\\\\$services\\\\.localization\\\\.render\\\\('xe\\\\.invitation\\\\.internalDocument', \\\\[)(\\\"[^\\\"]+\\\")(]\\\\)\\\\\"\n+        + \"{\\\\{/info}})\");\n+\n+    /**\n+     * @param content the context to fix\n+     * @param syntax the syntax of the context to fix (xwiki/2.0 or xwiki/2.1)\n+     * @return the context with the fix applied, or {@link Optional#empty()} if nothing needs to be fixed\n+     */\n+    public Optional<String> fix(String content, Syntax syntax)\n+    {\n+        String escapedContent = PATTERN.matcher(content).replaceAll(matchResult -> {\n+            if (matchResult.group(2).contains(\"services.rendering.escape\")) {\n+                return matchResult.group();\n+            } else {\n+                // Concatenate the various groups of the regex while wrapping the localization argument with a\n+                // call to the escaping script service.\n+                String format = String.format(\"%s$services.rendering.escape(%s, '%s')%s\", matchResult.group(1),\n+                    matchResult.group(2), syntax.toIdString(), matchResult.group(3));\n+                return quoteReplacement(format);\n+            }\n+        });\n+\n+        if (Objects.equals(escapedContent, content)) {\n+            return Optional.empty();\n+        } else {\n+            return Optional.of(escapedContent);\n+        }\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/migration/InvitationInternalDocumentParameterEscapingTaskConsumer.java",
          "status": "added",
          "additions": 106,
          "deletions": 0,
          "patch": "@@ -0,0 +1,106 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.migration;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Provider;\n+import javax.inject.Singleton;\n+\n+import org.slf4j.Logger;\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.index.IndexException;\n+import org.xwiki.index.TaskConsumer;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.syntax.Syntax;\n+\n+import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.XWikiException;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+/**\n+ * Apply {@link InvitationInternalDocumentParameterEscapingFixer} on the documents queued by\n+ * {@link R150000000XWIKI20285DataMigration} if applicable, and log the skipped ones. This translation key is initially\n+ * introduced by the invitation application but the fix is localed in oldcore so that the fix is applied on pages even\n+ * if the invitation application has been uninstalled.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@Component\n+@Singleton\n+@Named(InvitationInternalDocumentParameterEscapingTaskConsumer.HINT)\n+public class InvitationInternalDocumentParameterEscapingTaskConsumer implements TaskConsumer\n+{\n+    /**\n+     * This task consumer hint.\n+     */\n+    public static final String HINT = \"internal-document-parameter-escaping\";\n+\n+    @Inject\n+    private Logger logger;\n+\n+    @Inject\n+    private Provider<XWikiContext> contextProvider;\n+\n+    @Inject\n+    private InvitationInternalDocumentParameterEscapingFixer invitationInternalDocumentParameterEscapingFixer;\n+\n+    @Override\n+    public void consume(DocumentReference documentReference, String version) throws IndexException\n+    {\n+        try {\n+            XWikiContext context = this.contextProvider.get();\n+            task(context.getWiki().getDocument(documentReference, context));\n+        } catch (XWikiException e) {\n+            throw new IndexException(String.format(\"Failed to resolve document [%s]\", documentReference), e);\n+        }\n+    }\n+\n+    private void task(XWikiDocument document)\n+    {\n+        Syntax syntax = document.getSyntax();\n+        if (List.of(Syntax.XWIKI_2_1, Syntax.XWIKI_2_0).contains(syntax)) {\n+            try {\n+                this.invitationInternalDocumentParameterEscapingFixer.fix(document.getContent(), document.getSyntax())\n+                    .ifPresent(content -> {\n+                        document.setContent(content);\n+                        try {\n+                            XWikiContext context = this.contextProvider.get();\n+                            context.getWiki().saveDocument(document, \"Automatic bad escaping fix.\", true, context);\n+                            this.logger.info(\"[{}] successfully fixed.\", document);\n+                        } catch (XWikiException e) {\n+                            this.logger.error(\"Failed to save document [{}]\", document, e);\n+                        }\n+                    });\n+            } catch (Exception e) {\n+                this.logger.error(\"Unexpected error while fixing [{}]\", document, e);\n+            }\n+        } else {\n+            this.logger.warn(\n+                \"[{}] skipped because escaping for syntax [{}] is not supported. It is advised to review this file.\",\n+                document, syntax);\n+        }\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/migration/R150000000XWIKI20285DataMigration.java",
          "status": "added",
          "additions": 97,
          "deletions": 0,
          "patch": "@@ -0,0 +1,97 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.migration;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.internal.extension.XARExtensionIndex;\n+import org.xwiki.query.QueryException;\n+\n+import com.xpn.xwiki.XWiki;\n+import com.xpn.xwiki.store.migration.DataMigrationException;\n+import com.xpn.xwiki.store.migration.XWikiDBVersion;\n+\n+import static org.xwiki.query.Query.XWQL;\n+\n+/**\n+ * Search for documents with a known invalid content produced by code generation (i.e., that cannot be fixed by editing\n+ * a xar file), and apply an automatic escaping fix.\n+ *\n+ * @version $Id$\n+ * @since 15.0RC1\n+ * @since 14.4.8\n+ * @since 14.10.4\n+ */\n+@Component\n+@Named(\"R150000000XWIKI20285\")\n+@Singleton\n+public class R150000000XWIKI20285DataMigration extends AbstractDocumentsMigration\n+{\n+    @Inject\n+    private XARExtensionIndex installedXARs;\n+\n+    @Override\n+    public String getDescription()\n+    {\n+        return \"Patch the InvitationConfig documents with improper escaping.\";\n+    }\n+\n+    @Override\n+    public XWikiDBVersion getVersion()\n+    {\n+        return new XWikiDBVersion(150000000);\n+    }\n+\n+    @Override\n+    protected String getTaskType()\n+    {\n+        return InvitationInternalDocumentParameterEscapingTaskConsumer.HINT;\n+    }\n+\n+    @Override\n+    protected List<String> selectDocuments() throws DataMigrationException\n+    {\n+        XWiki wiki = getXWikiContext().getWiki();\n+        try {\n+            // We select potentially impacted documents using like wildcards. This selection might lead to false \n+            // positive that wild be filtered out by the more accurate regex in\n+            // InvitationInternalDocumentParameterEscapingFixer.\n+            return wiki.getStore().getQueryManager()\n+                .createQuery(\"where doc.content \"\n+                    + \"like '%{{info}}%services.localization.render%xe.invitation.internalDocument%{{/info}}%'\", XWQL)\n+                .<String>execute()\n+                .stream()\n+                // Exclude document that are provided by extensions, because they are fixed using the usual xar upgrade\n+                // mechanism.\n+                .filter(documentReference -> !this.installedXARs.isExtensionDocument(\n+                    this.documentReferenceResolver.resolve(documentReference)))\n+                .collect(Collectors.toList());\n+        } catch (QueryException e) {\n+            throw new DataMigrationException(\n+                String.format(\"Failed retrieve the list of all the documents for wiki [%s].\", wiki.getName()), e);\n+        }\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/resources/META-INF/components.txt",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -267,3 +267,6 @@ com.xpn.xwiki.web.ViewAction\n com.xpn.xwiki.web.ViewAttachRevAction\n 2000:org.xwiki.internal.attachment.validation.VoidAttachmentValidator\n org.xwiki.internal.template.ActionTemplateRequirement\n+org.xwiki.internal.migration.R150000000XWIKI20285DataMigration\n+org.xwiki.internal.migration.InvitationInternalDocumentParameterEscapingFixer\n+org.xwiki.internal.migration.InvitationInternalDocumentParameterEscapingTaskConsumer"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/org/xwiki/internal/migration/InvitationInternalDocumentParameterEscapingFixerTest.java",
          "status": "added",
          "additions": 76,
          "deletions": 0,
          "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.internal.migration;\n+\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.test.junit5.mockito.ComponentTest;\n+import org.xwiki.test.junit5.mockito.InjectMockComponents;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Test of {@link InvitationInternalDocumentParameterEscapingFixer}.\n+ *\n+ * @version $Id$\n+ */\n+@ComponentTest\n+class InvitationInternalDocumentParameterEscapingFixerTest\n+{\n+    @InjectMockComponents\n+    private InvitationInternalDocumentParameterEscapingFixer fixer;\n+\n+    public static Stream<Arguments> fixSource()\n+    {\n+        return Stream.of(\n+            Arguments.of(\n+                \"nothing to change 1\\n\"\n+                    + \"{{info}}$services.localization.render('xe.invitation.internalDocument', [$noChange]){{/info}}\"\n+                    + \"nothing to change 2\\n\"\n+                    + \"{{info}}$services.localization.render('xe.invitation.internalDocument', [\\\"$change\\\"]){{/info}}\"\n+                    + \"nothing to change 3\",\n+                Optional.of(\n+                    \"nothing to change 1\\n\"\n+                        + \"{{info}}$services.localization.render('xe.invitation.internalDocument', [$noChange]){{/info}}nothing to change 2\\n\"\n+                        + \"{{info}}$services.localization.render('xe.invitation.internalDocument', [$services.rendering.escape(\\\"$change\\\", 'xwiki/2.1')]){{/info}}nothing to change 3\"\n+                )\n+            ),\n+            Arguments.of(\n+                \"nothing to change 1\\n\"\n+                    + \"{{info}}$services.localization.render('xe.invitation.internalDocument', [$noChange]){{/info}}\"\n+                    + \"nothing to change 2\\n\"\n+                    + \"nothing to change 3\",\n+                Optional.empty()\n+            )\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"fixSource\")\n+    void fix(String value, Optional<String> expected)\n+    {\n+        assertEquals(expected, this.fixer.fix(value, Syntax.XWIKI_2_1));\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-tools/xwiki-platform-tool-packager-plugin/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -117,7 +117,7 @@\n     </dependency>\n     <dependency>\n       <groupId>org.xwiki.platform</groupId>\n-      <artifactId>xwiki-platform-index-api</artifactId>\n+      <artifactId>xwiki-platform-index-default</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 15,
        "unique_directories": 27,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-95",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Starting in version 2.40m-2 and prior to versions 14.4.8, 14.10.4, and 15.0, any user with view rights on any document can execute code with programming rights, leading to remote code execution by crafting an url with a dangerous payload. The problem has been patched in XWiki 15.0, 14.10.4 and 14.4.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-23T17:15:09.380",
    "last_modified": "2024-11-21T08:08:02.300",
    "fix_date": "2023-01-24T07:38:28Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/b65220a4d86b8888791c3b643074ebca5c089a3a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-6mf5-36v9-3h2w",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20285",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/b65220a4d86b8888791c3b643074ebca5c089a3a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-6mf5-36v9-3h2w",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20285",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.858383",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}