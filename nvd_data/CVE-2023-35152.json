{
  "cve_id": "CVE-2023-35152",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "0993a7ab3c102f9ac37ffe361a83a3dc302c0e45",
    "related_commits": [
      "0993a7ab3c102f9ac37ffe361a83a3dc302c0e45",
      "6ce2d04a5779e07f6d3ed3f37d4761049b4fc3ac",
      "0993a7ab3c102f9ac37ffe361a83a3dc302c0e45",
      "6ce2d04a5779e07f6d3ed3f37d4761049b4fc3ac"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/0993a7ab3c102f9ac37ffe361a83a3dc302c0e45.patch",
    "fix_commit_details": {
      "sha": "0993a7ab3c102f9ac37ffe361a83a3dc302c0e45",
      "commit_date": "2020-10-13T08:41:46Z",
      "author": {
        "login": "surli",
        "type": "User",
        "stats": {
          "total_commits": 1932,
          "average_weekly_commits": 2.0251572327044025,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 283
        }
      },
      "commit_message": {
        "title": "XWIKI-17733: Use a LiveTable to display the page liked in user profile",
        "length": 231,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 340,
        "additions": 298,
        "deletions": 42
      },
      "files": [
        {
          "filename": "xwiki-platform-core/pom.xml",
          "status": "modified",
          "additions": 8,
          "deletions": 3,
          "patch": "@@ -494,24 +494,29 @@\n                 <new>method java.util.Optional&lt;org.xwiki.ratings.Rating&gt; org.xwiki.ratings.script.AbstractScriptRatingsManager::setRating(org.xwiki.model.reference.EntityReference, int) @ org.xwiki.ratings.script.RatingsScriptService</new>\n                 <justification>Redesign of Ratings API: use new best practices for script service return if type is nullable.</justification>\n               </item>\n-                <item>\n+              <item>\n                 <code>java.method.parameterTypeChanged</code>\n                 <old>parameter org.xwiki.ratings.script.RatingApi org.xwiki.ratings.script.RatingsScriptService::setRating(===org.xwiki.model.reference.DocumentReference===, org.xwiki.model.reference.DocumentReference, int)</old>\n                 <new>parameter java.util.Optional&lt;org.xwiki.ratings.Rating&gt; org.xwiki.ratings.script.AbstractScriptRatingsManager::setRating(===org.xwiki.model.reference.EntityReference===, org.xwiki.user.UserReference, int) @ org.xwiki.ratings.script.RatingsScriptService</new>\n                 <justification>Redesign of Ratings API: allow to set rating for any reference (not only DocumentReference)</justification>\n               </item>\n-                <item>\n+              <item>\n                 <code>java.method.parameterTypeChanged</code>\n                 <old>parameter org.xwiki.ratings.script.RatingApi org.xwiki.ratings.script.RatingsScriptService::setRating(org.xwiki.model.reference.DocumentReference, ===org.xwiki.model.reference.DocumentReference===, int)</old>\n                 <new>parameter java.util.Optional&lt;org.xwiki.ratings.Rating&gt; org.xwiki.ratings.script.AbstractScriptRatingsManager::setRating(org.xwiki.model.reference.EntityReference, ===org.xwiki.user.UserReference===, int) @ org.xwiki.ratings.script.RatingsScriptService</new>\n                 <justification>Redesign of Ratings API: use new best practices for specifying a user by using the UserReference.</justification>\n               </item>\n-                <item>\n+              <item>\n                 <code>java.method.returnTypeChanged</code>\n                 <old>method org.xwiki.ratings.script.RatingApi org.xwiki.ratings.script.RatingsScriptService::setRating(org.xwiki.model.reference.DocumentReference, org.xwiki.model.reference.DocumentReference, int)</old>\n                 <new>method java.util.Optional&lt;org.xwiki.ratings.Rating&gt; org.xwiki.ratings.script.AbstractScriptRatingsManager::setRating(org.xwiki.model.reference.EntityReference, org.xwiki.user.UserReference, int) @ org.xwiki.ratings.script.RatingsScriptService</new>\n                 <justification>Redesign of Ratings API: use new best practices for script service return if type is nullable.</justification>\n               </item>\n+              <item>\n+                <code>java.method.addedToInterface</code>\n+                <new>method long org.xwiki.like.LikeManager::countUserLikes(org.xwiki.user.UserReference) throws org.xwiki.like.LikeException</new>\n+                <justification>Unstable API.</justification>\n+              </item>\n             </revapi.ignore>\n           </analysisConfiguration>\n         </configuration>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/main/java/org/xwiki/like/LikeManager.java",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -58,6 +58,17 @@ public interface LikeManager\n      */\n     List<EntityReference> getUserLikes(UserReference source, int offset, int limit) throws LikeException;\n \n+    /**\n+     * Retrieve the total number of likes performed by a user.\n+     *\n+     * @param source the user who performs the likes to count.\n+     * @return the total number of likes performed.\n+     * @throws LikeException in case of problem when getting the information.\n+     * @since 12.9RC1\n+     */\n+    @Unstable\n+    long countUserLikes(UserReference source) throws LikeException;\n+\n     /**\n      * Retrieve like information a specific entity.\n      *\n@@ -95,7 +106,9 @@ public interface LikeManager\n      * @param limit the limit used for pagination.\n      * @return a list of user references of users who liked this page.\n      * @throws LikeException in case of problem for performing the query.\n+     * @since 12.9RC1\n      */\n+    @Unstable\n     List<UserReference> getLikers(EntityReference target, int offset, int limit) throws LikeException;\n \n     /**"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/main/java/org/xwiki/like/internal/DefaultLikeManager.java",
          "status": "modified",
          "additions": 13,
          "deletions": 9,
          "patch": "@@ -34,8 +34,6 @@\n import org.xwiki.cache.CacheManager;\n import org.xwiki.cache.config.LRUCacheConfiguration;\n import org.xwiki.component.annotation.Component;\n-import org.xwiki.component.manager.ComponentLifecycleException;\n-import org.xwiki.component.phase.Disposable;\n import org.xwiki.component.phase.Initializable;\n import org.xwiki.component.phase.InitializationException;\n import org.xwiki.like.LikeConfiguration;\n@@ -65,7 +63,7 @@\n  */\n @Component\n @Singleton\n-public class DefaultLikeManager implements LikeManager, Initializable, Disposable\n+public class DefaultLikeManager implements LikeManager, Initializable\n {\n     private static final int DEFAULT_LIKE_VOTE = 1;\n \n@@ -126,12 +124,6 @@ public void initialize() throws InitializationException\n         }\n     }\n \n-    @Override\n-    public void dispose() throws ComponentLifecycleException\n-    {\n-        //this.authorizationManager.\n-    }\n-\n     private String getExistCacheKey(UserReference source, EntityReference target)\n     {\n         return String.format(\"%s_%s\",\n@@ -176,6 +168,18 @@ public List<EntityReference> getUserLikes(UserReference source, int offset, int\n         }\n     }\n \n+    @Override\n+    public long countUserLikes(UserReference source) throws LikeException\n+    {\n+        try {\n+            return this.ratingsManager.countRatings(\n+                Collections.singletonMap(RatingsManager.RatingQueryField.USER_REFERENCE, source));\n+        } catch (RatingsException e) {\n+            throw new LikeException(\n+                String.format(\"Error when trying to count user likes for user [%s]\", source), e);\n+        }\n+    }\n+\n     @Override\n     public long getEntityLikes(EntityReference target) throws LikeException\n     {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/main/java/org/xwiki/like/script/LikeScriptService.java",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -214,6 +214,26 @@ public List<EntityReference> getUserLikes(UserReference userReference, int offse\n         return Collections.emptyList();\n     }\n \n+    /**\n+     * Count the number of likes performed by the given user.\n+     *\n+     * @param userReference the user for whom to count likes.\n+     * @return the number of likes performed.\n+     * @since 12.9RC1\n+     */\n+    @Unstable\n+    public Optional<Long> countUserLikes(UserReference userReference)\n+    {\n+        Optional<Long> result = Optional.empty();\n+        try {\n+            result = Optional.of(this.likeManager.countUserLikes(userReference));\n+        } catch (LikeException e) {\n+            this.logger.warn(\"Error while counting likes for user [{}]\", userReference,\n+                ExceptionUtils.getRootCause(e));\n+        }\n+        return result;\n+    }\n+\n     /**\n      * Determine if the current user already liked the given reference.\n      * @param entityReference the reference for which to check if the current liked it or not already."
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/main/resources/templates/likers.vm",
          "status": "modified",
          "additions": 91,
          "deletions": 14,
          "patch": "@@ -17,19 +17,96 @@\n ## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n ## 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n ## ---------------------------------------------------------------------------\n-#set ($likers = $services.like.getLikers($doc, 0, 50))\n-<div id=\"document-title\"><h1>$services.localization.render('like.likers.title', [$doc.title])</h1></div>\n-<div id=\"likers-content\">\n-    #if ($likers.isEmpty())\n-        $services.localization.render('like.likers.empty')\n+#if ($request.livetable == \"true\")\n+    #macro (displayUserAliasWithAvatar $userReference $disabled)\n+    <div class=\"user#if ($disabled) disabled#end\" data-reference=\"$escapetool.xml($userReference)\">\n+    <span class=\"user-avatar-wrapper\">\n+      #getUserAvatarURL($userReference $avatarURL 120)\n+      <img class=\"user-avatar\" src=\"$escapetool.xml($avatarURL.url)\" />\n+    </span>\n+      <a href=\"$xwiki.getURL($userReference)\">$escapetool.xml($userReference.name)</a>\n+    </div>\n+    #end\n+    $response.setContentType('application/json')\n+    #set ($documentReference = $doc.documentReference)\n+    ##==============================\n+    ## Offset = item # at which to start displaying data\n+    ##==============================\n+    #set($offset = $numbertool.toNumber($request.get('offset')))\n+    ## offset starts from 0 in velocity and 1 in javascript\n+    #set($offset = $offset - 1)\n+    #if($offset < 0)\n+        #set($offset = 0)\n+    #end\n+    ##==================\n+    ## Limit = # of items to display\n+    ##==================\n+    #set($limit = $numbertool.toNumber($request.get('limit')))\n+    ##==========\n+    ## Sort direction\n+    ##==========\n+    #set($order = \"$!request.sort\")\n+    #if($order != '')\n+        #set($orderDirection = \"$!{request.get('dir').toLowerCase()}\")\n+        #if(\"$!orderDirection\" != '' && \"$!orderDirection\" != 'asc')\n+            #set($orderDirection = 'desc')\n+        #end\n+    #end\n+    #set ($likeRecords = $services.like.getLikers($documentReference, $offset, $limit))\n+    #set ($userRows = [])\n+    #foreach($userReference in $likeRecords)\n+        #set ($grayed = $xcontext.userReference == $userReference.reference)\n+        #set ($userDoc = $xwiki.getDocument($userReference.reference))\n+        #set ($userProperties = $services.user.getProperties($userReference))\n+        #set ($userObject = $user.getObject('XWiki.XWikiUsers'))\n+        #set ($row = {\n+            'grayed': $grayed,\n+            'doc_fullName': $userDoc.fullName,\n+            'doc_wiki': $userDoc.wiki,\n+            'doc_url': $userDoc.getURL(),\n+            'doc_viewable': $services.security.authorization.hasAccess('view', $userDoc.documentReference),\n+            'name': \"#displayUserAliasWithAvatar($userDoc.documentReference $disabled)\",\n+            'first_name': $userProperties.firstName,\n+            'last_name': $userProperties.lastName\n+        })\n+        #set ($discard = $userRows.add($row))\n+    #end\n+    ## ===\n+    ## JSON\n+    ## ===\n+    #set ($newOffset = $offset + 1)\n+    #set ($optLikesNumber = $services.like.getLikes($documentReference))\n+    #if ($optLikesNumber.isPresent())\n+      #set ($totalRows = $optLikesNumber.get())\n     #else\n-      <p>\n-          $services.localization.render('like.likers.number', [$likers.size()])\n-      </p>\n-      <ul>\n-          #foreach($liker in $likers)\n-            <li>#displayUserLink($liker)</li>\n-          #end\n-      </ul>\n+      #set ($totalRows = $likeRecords.size())\n     #end\n-</div>\n\\ No newline at end of file\n+    {\n+        \"totalrows\": $totalRows,\n+        \"returnedrows\":  $likeRecords.size(),\n+        \"offset\": $newOffset,\n+        \"reqNo\": $numbertool.toNumber($request.reqNo),\n+        \"rows\": $jsontool.serialize($userRows)\n+    }\n+#else\n+    <h1>$escapetool.xml($services.localization.render('like.likers.title', [$doc.plainTitle]))</h1>\n+    #set($columns = [\"name\", \"first_name\", \"last_name\"])\n+    #set($columnsProperties = {\n+        \"name\" : { \"type\" : \"text\", \"sortable\": false, \"filterable\": false, \"html\": true },\n+        \"first_name\" : { \"type\" : \"text\", \"sortable\": false, \"filterable\": false},\n+        \"last_name\" : { \"type\" : \"text\", \"sortable\": false, \"filterable\": false}\n+    })\n+    #set ($queryParams = {\n+        \"livetable\": \"true\",\n+        \"xpage\": \"likers\",\n+        \"outputSyntax\": \"plain\"\n+    })\n+    ## We rely on the same column name than the Users administration, so we use same translation prefix for now.\n+    #set($options = {\n+        'url': $doc.getURL('get', $escapetool.url($queryParams)),\n+        'outputOnlyHtml': true,\n+        'translationPrefix' : \"xe.admin.users.\"\n+    })\n+\n+    #livetable(\"likers\" $columns $columnsProperties $options)\n+#end\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/test/java/org/xwiki/like/internal/DefaultLikeManagerTest.java",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -308,4 +308,14 @@ void getLikers() throws Exception\n         assertEquals(Arrays.asList(userReference1, userReference2, userReference3),\n             this.defaultLikeManager.getLikers(this.target, 12, 4));\n     }\n+\n+    @Test\n+    void countUserLikes() throws Exception\n+    {\n+        when(this.ratingsManager.countRatings(\n+            Collections.singletonMap(RatingsManager.RatingQueryField.USER_REFERENCE, this.userReference)))\n+            .thenReturn(42L);\n+\n+        assertEquals(42L, this.defaultLikeManager.countUserLikes(this.userReference));\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-api/src/test/java/org/xwiki/like/script/LikeScriptServiceTest.java",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -20,6 +20,7 @@\n package org.xwiki.like.script;\n \n import java.util.Arrays;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Optional;\n \n@@ -54,6 +55,7 @@\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertSame;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n@@ -284,4 +286,22 @@ void cleanCache()\n             Locale.ROOT);\n         verify(this.asyncRendererCache).cleanCache(uixReference);\n     }\n+\n+    @Test\n+    void countUserLikes() throws LikeException\n+    {\n+        when(this.likeManager.countUserLikes(userReference)).thenReturn(43L);\n+        assertEquals(Optional.of(43L), this.likeScriptService.countUserLikes(this.userReference));\n+    }\n+\n+    @Test\n+    void getUserLikes() throws LikeException\n+    {\n+        List<EntityReference> expectedList = Arrays.asList(\n+            mock(EntityReference.class),\n+            mock(EntityReference.class),\n+            mock(EntityReference.class));\n+        when(this.likeManager.getUserLikes(this.userReference, 2, 32)).thenReturn(expectedList);\n+        assertEquals(expectedList, this.likeScriptService.getUserLikes(this.userReference, 2, 32));\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.de.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -57,5 +57,4 @@ XWiki.Like.LikeConfigurationClass_alwaysDisplayButton=\"Gef\u00e4llt mir\" Schaltfl\u00e4c\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Die \"Gef\u00e4llt mir\" Schaltfl\u00e4che immer anzeigen - selbst wenn der Nutzer kein Recht hat diese zu benutzen. Anschalten, um die Anzahl der \"Gef\u00e4llt mir\" immer anzuzeigen.\n XWiki.Like.LikeConfigurationClass_cacheCapacity=Cache-Gr\u00f6\u00dfe\n XWiki.Like.LikeConfigurationClass_cacheCapacity.hint=Anzahl der \"Gef\u00e4llt mir\"-Informationen im Cache. Sie m\u00fcssen XWiki neustarten, damit ver\u00e4nderte Einstellungen angewendet werden.</content>\n-  \n </xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.es.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -57,5 +57,4 @@ XWiki.Like.LikeConfigurationClass_alwaysDisplayButton=Mostrar siempre el bot\u00f3n\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Mostrar el bot\u00f3n incluso si el usuario no tiene derecho de interaccionar con \u00e9l.  \u00dasalo si deseas mostrar siempre el contador de \"Me gusta\".\n XWiki.Like.LikeConfigurationClass_cacheCapacity=Capacidad de la cach\u00e9\n XWiki.Like.LikeConfigurationClass_cacheCapacity.hint=N\u00famero de informaci\u00f3n de \"Me gusta\" guardada en la cach\u00e9. Ten en cuenta que tienes que reiniciar XWiki para que se activen los cambios de esta opci\u00f3n.</content>\n-  \n </xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.fr.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -57,5 +57,4 @@ XWiki.Like.LikeConfigurationClass_alwaysDisplayButton=Toujours afficher le bouto\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Afficher le bouton m\u00eame si l'utilisateur n'a pas les droits pour int\u00e9ragir avec. Utilisez cette option si vous souhaitez toujours afficher le compteur de J'aime.\n XWiki.Like.LikeConfigurationClass_cacheCapacity=Capacit\u00e9 du Cache\n XWiki.Like.LikeConfigurationClass_cacheCapacity.hint=Nombre d'information J'aime \u00e0 conserver dans le cache. Notez que vous devrez red\u00e9marrer XWiki pour que cette option soit prise en compte.</content>\n-  \n </xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.no.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -57,5 +57,4 @@ XWiki.Like.LikeConfigurationClass_alwaysDisplayButton=Vis alltid Liker-knappen\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Vis knappen selv om brukeren ikke har rettigheter til \u00e5 bruke den. Bruk hvis du alltid vil vise Liker-telleren.\n XWiki.Like.LikeConfigurationClass_cacheCapacity=Hurtigbufferkapasitet\n XWiki.Like.LikeConfigurationClass_cacheCapacity.hint=Antall Liker-informasjon som er lagret i hurtigbufferen. Merk at du m\u00e5 starte XWiki p\u00e5 nytt for at dette valget skal aktiveres.</content>\n-  \n </xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.ru.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -57,5 +57,4 @@ like.newlike.error=\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \"\u041d\u0440\u0430\n ### Missing: XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Display the button even if the user doesn't have the rights to interact with it. Use it if you wish to always display the Likes counter.\n ### Missing: XWiki.Like.LikeConfigurationClass_cacheCapacity=Cache capacity\n ### Missing: XWiki.Like.LikeConfigurationClass_cacheCapacity.hint=Number of Like information kept in cache. Note that you have to restart XWiki for this option change to be taken into account.</content>\n-  \n </xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeTranslations.xml",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -52,7 +52,10 @@ like.button.title.like=Click to like the current page. Number of likes on this p\n like.button.title.unlike=Click to unlike the current page. Number of likes on this page: {0}.\n like.likers.empty=No one likes this page yet.\n like.likers.number={0} person(s) like this page:\n-like.likers.title=Likes on {0}\n+like.likers.title=Likers of {0}\n+like.livetable.column.title=Title\n+like.livetable.column.location=Location\n+like.livetable.column.likes=Likes\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton=Always display Like button\n XWiki.Like.LikeConfigurationClass_alwaysDisplayButton.hint=Display the button even if the user doesn't have the rights to interact with it. Use it if you wish to always display the Likes counter.\n XWiki.Like.LikeConfigurationClass_cacheCapacity=Cache capacity"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/LikeViewersMenuUIX.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -183,4 +183,4 @@\n       <scope>wiki</scope>\n     </property>\n   </object>\n-</xwikidoc>\n\\ No newline at end of file\n+</xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-like/xwiki-platform-like-ui/src/main/resources/XWiki/Like/UserProfileUIX.xml",
          "status": "modified",
          "additions": 118,
          "deletions": 9,
          "patch": "@@ -36,7 +36,96 @@\n   <minorEdit>false</minorEdit>\n   <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n-  <content/>\n+  <content>{{velocity}}\n+#if ($request.livetable == \"true\")\n+  #template('hierarchy_macros.vm')\n+  #if(\"$!{request.xpage}\" == 'plain')\n+    $response.setContentType('application/json')\n+  #end\n+  #set ($documentReference = $services.model.resolveDocument($request.user))\n+  ##==============================\n+  ## Offset = item # at which to start displaying data\n+  ##==============================\n+  #set($offset = $numbertool.toNumber($request.get('offset')))\n+  ## offset starts from 0 in velocity and 1 in javascript\n+  #set($offset = $offset - 1)\n+  #if($offset &lt; 0)\n+    #set($offset = 0)\n+  #end\n+  ##==================\n+  ## Limit = # of items to display\n+  ##==================\n+  #set($limit = $numbertool.toNumber($request.get('limit')))\n+  #set ($likedPages = $services.like.getUserLikes($documentReference, $offset, $limit))\n+  #set ($optUserLikes = $services.like.countUserLikes($documentReference))\n+  #if ($optUserLikes.isPresent())\n+    #set ($totalRows = $optUserLikes.get())\n+  #else\n+    #set ($totalRows = $likedPages.size())\n+  #end\n+  ##==========\n+  ## Sort direction\n+  ##==========\n+  #set($order = \"$!request.sort\")\n+  #if($order != '')\n+    #set($orderDirection = \"$!{request.get('dir').toLowerCase()}\")\n+    #if(\"$!orderDirection\" != '' &amp;&amp; \"$!orderDirection\" != 'asc')\n+      #set($orderDirection = 'desc')\n+    #end\n+  #end\n+  #set ($pagesRows = [])\n+  #foreach($likedPage in $likedPages)\n+    #set ($likedDoc = $xwiki.getDocument($likedPage))\n+    #set ($optDocumentLikes = $services.like.getLikes($likedPage))\n+    #if ($optDocumentLikes.isPresent())\n+      #set ($documentLikes = $optDocumentLikes.get())\n+    #else\n+      #set ($documentLikes = \"N/A\")\n+    #end\n+    ## code inspired from getdocuments.vm\n+    #set ($viewable = $xwiki.hasAccessLevel('view', $xcontext.user, $services.model.serialize($likedPage, \"default\")))\n+    #set ($row = {'doc_viewable' : $viewable})\n+    #if (!$viewable)\n+      #set ($discard = $row.put('doc_fullName', $likedDoc.fullName))\n+    #else\n+      #set ($translatedDoc = $likedDoc.translatedDocument)\n+      #set ($fullname = $services.model.serialize($likedDoc.documentReference, 'default'))\n+      #set ($discard = $row.put('doc_name', $likedDoc.documentReference.name))\n+      #set ($discard = $row.put('doc_fullName', $fullname))\n+      #set ($location = \"#hierarchy($likedDoc.documentReference, {'limit': 5, 'plain': false, 'local': true, 'displayTitle': false})\")\n+      #set ($discard = $row.put('doc_location', $location))\n+      #set ($discard = $row.put('doc_space', $likedDoc.space))\n+      #set ($discard = $row.put('doc_url', $xwiki.getURL($likedDoc)))\n+      #set ($discard = $row.put('doc_space_url', $xwiki.getURL($services.model.createDocumentReference($!likedDoc.wiki, $!likedDoc.space, 'WebHome'))))\n+      #set ($discard = $row.put('doc_wiki', $likedDoc.wiki))\n+      #set ($discard = $row.put('doc_wiki_url', $xwiki.getURL($services.model.resolveDocument('', 'default', $likedDoc.documentReference.extractReference('WIKI')))))\n+      #set ($discard = $row.put('doc_author_url', $xwiki.getURL($translatedDoc.author)))\n+      #set ($discard = $row.put('doc_date', $xwiki.formatDate($translatedDoc.date)))\n+      #set ($discard = $row.put('doc_title', $translatedDoc.plainTitle))\n+      #set ($rawTitle = $translatedDoc.title)\n+      #if ($rawTitle != $row['doc_title'])\n+        #set ($discard = $row.put('doc_title_raw', $rawTitle))\n+      #end\n+      #set ($discard = $row.put('doc_author', $xwiki.getUserName($translatedDoc.author, false)))\n+      #set ($discard = $row.put('doc_creationDate', $xwiki.formatDate($translatedDoc.creationDate)))\n+      #set ($discard = $row.put('doc_creator', $xwiki.getUserName($translatedDoc.creator, false)))\n+    #end\n+    #set ($discard = $row.put('like', $documentLikes))\n+    #set ($discard = $pagesRows.add($row))\n+  #end\n+  #set ($newOffset = $offset + 1)\n+  ## ===\n+  ## JSON\n+  ## ===\n+  {\n+    \"totalrows\": $totalRows,\n+    \"returnedrows\":  $pagesRows.size(),\n+    \"offset\": $newOffset,\n+    \"reqNo\": $numbertool.toNumber($request.reqNo),\n+    \"rows\": $jsontool.serialize($pagesRows)\n+  }\n+#end\n+{{/velocity}}</content>\n   <object>\n     <name>XWiki.Like.UserProfileUIX</name>\n     <number>0</number>\n@@ -66,6 +155,8 @@\n         <cache>0</cache>\n         <disabled>0</disabled>\n         <displayType>select</displayType>\n+        <freeText>forbidden</freeText>\n+        <largeStorage>0</largeStorage>\n         <multiSelect>1</multiSelect>\n         <name>async_context</name>\n         <number>4</number>\n@@ -154,21 +245,39 @@\n     </property>\n     <property>\n       <async_context>\n+        <value>doc.reference</value>\n         <value>user</value>\n-        <value>wiki</value>\n       </async_context>\n     </property>\n     <property>\n-      <async_enabled>1</async_enabled>\n+      <async_enabled>0</async_enabled>\n     </property>\n     <property>\n       <content>{{velocity}}\n-#set ($likedReferences = $services.like.getUserLikes($services.user.currentUserReference, 0, 50))\n-|=Page\n-#foreach ($likeReference in $likedReferences)\n-  #set ($likedDocument = $xwiki.getDocument($likeReference))\n-  |[[$likedDocument.title&gt;&gt;$services.model.serialize($likeReference)]]\n-#end\n+=$escapetool.xml($services.localization.render(\"like.userprofile.menu\"))=\n+#set($columns = [\"doc.title\", \"doc.location\", \"like\"])\n+#set ($docTitleDisplayName = $escapetool.xml($services.localization.render('like.livetable.column.title')))\n+#set ($docLocationDisplayName = $escapetool.xml($services.localization.render('like.livetable.column.location')))\n+#set ($likesDisplayName = $escapetool.xml($services.localization.render('like.livetable.column.likes')))\n+#set($columnsProperties = {\n+  \"doc.title\" : { \"displayName\": $docTitleDisplayName, \"type\": \"text\", \"size\": 30, \"link\": \"view\", \"sortable\": false, \"filterable\": false },\n+  \"doc.location\" : { \"displayName\": $docLocationDisplayName, \"type\": \"text\", \"size\": 30, \"html\": true, \"sortable\": false, \"filterable\": false },\n+  \"like\" : { \"displayName\": $likesDisplayName, \"type\" : \"number\", \"sortable\": false, \"filterable\": false }\n+})\n+\n+#set ($currentUser = $services.model.serialize($doc.documentReference, \"default\"))\n+#set ($pageToCallReference = $services.model.resolveDocument(\"XWiki.Like.UserProfileUIX\"))\n+#set ($pageToCall = $xwiki.getDocument($pageToCallReference))\n+#set ($queryParams = {\n+  \"user\": $currentUser,\n+  \"livetable\": \"true\",\n+  \"xpage\": \"plain\",\n+  \"outputSyntax\": \"plain\"\n+})\n+#set($options = {\n+  'url': $pageToCall.getURL('get', $escapetool.url($queryParams))\n+})\n+#livetable(\"likedPages\" $columns $columnsProperties $options)\n {{/velocity}}</content>\n     </property>\n     <property>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 8,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-95",
    "description": "XWiki Platform is a generic wiki platform. Starting in version 12.9-rc-1 and prior to versions 14.4.8, 14.10.6, and 15.1, any logged in user can add dangerous content in their first name field and see it executed with programming rights. Leading to rights escalation. The vulnerability has been fixed on XWiki 14.4.8, 14.10.6, and 15.1. As a workaround, one may apply the patch manually.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-23T17:15:09.533",
    "last_modified": "2024-11-21T08:08:02.600",
    "fix_date": "2020-10-13T08:41:46Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/0993a7ab3c102f9ac37ffe361a83a3dc302c0e45#diff-0b51114cb27f7a5c599cf40c59d658eae6ddc5c0836532c3b35e163f40a4854fR39",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/6ce2d04a5779e07f6d3ed3f37d4761049b4fc3ac#diff-ef7f8b911bb8e584fda22aac5876a329add35ca0d1d32e0fdb62a439b78cfa49",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rf8j-q39g-7xfm",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19900",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20611",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/0993a7ab3c102f9ac37ffe361a83a3dc302c0e45#diff-0b51114cb27f7a5c599cf40c59d658eae6ddc5c0836532c3b35e163f40a4854fR39",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/6ce2d04a5779e07f6d3ed3f37d4761049b4fc3ac#diff-ef7f8b911bb8e584fda22aac5876a329add35ca0d1d32e0fdb62a439b78cfa49",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rf8j-q39g-7xfm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-19900",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20611",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.858663",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}