{
  "cve_id": "CVE-2023-3520",
  "github_data": {
    "repository": "it-novum/openitcockpit",
    "fix_commit": "6c717f3c352e55257fc3fef2c5dec111f7d2ee6b",
    "related_commits": [
      "6c717f3c352e55257fc3fef2c5dec111f7d2ee6b",
      "6c717f3c352e55257fc3fef2c5dec111f7d2ee6b"
    ],
    "patch_url": "https://github.com/it-novum/openitcockpit/commit/6c717f3c352e55257fc3fef2c5dec111f7d2ee6b.patch",
    "fix_commit_details": {
      "sha": "6c717f3c352e55257fc3fef2c5dec111f7d2ee6b",
      "commit_date": "2023-06-15T08:03:44Z",
      "author": {
        "login": "nook24",
        "type": "User",
        "stats": {
          "total_commits": 3540,
          "average_weekly_commits": 7.195121951219512,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 345
        }
      },
      "commit_message": {
        "title": "ITC-3039 Set all cookies with secure=true. Many thanks to https://github.com/uonghoangminhchau for reporting this",
        "length": 113,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 195,
        "additions": 11,
        "deletions": 184
      },
      "files": [
        {
          "filename": "config/routes.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -56,6 +56,7 @@\n     // Register scoped middleware for in scopes.\n     $csrf = new CsrfProtectionMiddleware([\n         'httponly' => true,\n+        'secure'   => true\n     ]);\n \n     // Token check will be skipped when callback returns `true`."
        },
        {
          "filename": "src/Application.php",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -111,7 +111,8 @@ public function bootstrap(): void {\n     public function routes($routes): void {\n         // Register scoped middleware for use in routes.php\n         $routes->registerMiddleware('csrf', new CsrfProtectionMiddleware([\n-            'httponly' => true\n+            'httponly' => true,\n+            'secure'   => true\n         ]));\n \n         parent::routes($routes);\n@@ -189,7 +190,9 @@ public function getAuthenticationService(ServerRequestInterface $request): Authe\n             'rememberMeField' => 'remember_me',\n             'fields'          => $fields,\n             'cookie'          => [\n-                'expires' => $expireAt\n+                'expires'  => $expireAt,\n+                'httponly' => true,\n+                'secure'   => true\n             ]\n         ]);\n         $service->loadAuthenticator('Authentication.Session');"
        },
        {
          "filename": "src/Controller/StatisticsController.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -98,7 +98,9 @@ public function saveStatisticDecision() {\n                 'askAgainForHelp',\n                 'Remind me later',\n                 new \\DateTime('+16 hours'),\n-                '/'\n+                '/',\n+                null,\n+                true\n             ));\n         }\n "
        },
        {
          "filename": "src/itnovum/openITCOCKPIT/Core/Security/CSRF.php",
          "status": "removed",
          "additions": 0,
          "deletions": 179,
          "patch": "@@ -1,179 +0,0 @@\n-<?php\n-// Copyright (C) <2018>  <it-novum GmbH>\n-//\n-// This file is dual licensed\n-//\n-// 1.\n-//  This program is free software: you can redistribute it and/or modify\n-//  it under the terms of the GNU General Public License as published by\n-//  the Free Software Foundation, version 3 of the License.\n-//\n-//  This program is distributed in the hope that it will be useful,\n-//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-//  GNU General Public License for more details.\n-//\n-//  You should have received a copy of the GNU General Public License\n-//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-//\n-// 2.\n-//  If you purchased an openITCOCKPIT Enterprise Edition you can use this file\n-//  under the terms of the openITCOCKPIT Enterprise Edition license agreement.\n-//  License agreement and license key will be shipped with the order\n-//  confirmation.\n-\n-namespace itnovum\\openITCOCKPIT\\Core\\Security;\n-\n-\n-class CSRF {\n-\n-    /**\n-     * @var \\SessionComponent\n-     */\n-    protected $Session;\n-\n-    /**\n-     * strtotime compatible string\n-     * Set time how long a token is valide\n-     * @var string\n-     */\n-    protected $csrfExpires = '+30 minutes';\n-\n-    /**\n-     * Maximum number of tokens stored in session\n-     * @var int\n-     */\n-    protected $csrfLimit = 150;\n-\n-    /**\n-     * Remove CSRF tokens after use\n-     * Can cause issues for Single Page applications\n-     * @var boolean\n-     */\n-    protected $csrfUseOnce = true;\n-\n-    /**\n-     * Token length\n-     * @var int\n-     */\n-    protected $length = 16;\n-\n-    /**\n-     * Token storage from and for $_SESSION\n-     * @var array\n-     */\n-    protected $tokens = [];\n-\n-    /**\n-     * CSRF constructor.\n-     * @param \\SessionComponent $Session\n-     */\n-    public function __construct(\\SessionComponent $Session) {\n-        $this->Session = $Session;\n-\n-        $tokens = $this->readTokens();\n-        $this->tokens = $this->expireTokens($tokens);\n-    }\n-\n-    /**\n-     * @return array\n-     */\n-    protected function readTokens() {\n-        $csrf = $this->Session->read('_csrf');\n-\n-        $tokens = [];\n-        if (isset($csrf['csrfTokens'])) {\n-            $tokens = $csrf['csrfTokens'];\n-            if (!is_array($tokens)) {\n-                $tokens = [];\n-            }\n-        }\n-\n-        return $tokens;\n-    }\n-\n-    /**\n-     * @param array $tokens\n-     * @return array\n-     */\n-    protected function expireTokens($tokens) {\n-        $now = time();\n-        foreach ($tokens as $nonce => $expires) {\n-            if ($expires < $now) {\n-                unset($tokens[$nonce]);\n-            }\n-        }\n-        $overflow = count($tokens) - $this->csrfLimit;\n-        if ($overflow > 0) {\n-            //Remove oldest tokens\n-            asort($tokens);\n-            $tokens = array_slice($tokens, $overflow + 1, null, true);\n-        }\n-        return $tokens;\n-    }\n-\n-    /**\n-     * @return string\n-     */\n-    private function _generateToken() {\n-        if ($this->length < 16) {\n-            throw new \\SecurityException('Token length needs to be >= 16!');\n-        }\n-\n-        return hash('sha512', openssl_random_pseudo_bytes($this->length));\n-    }\n-\n-    /**\n-     * @param \\Controller $Controller\n-     * @return bool\n-     */\n-    public function validateCsrfToken(\\Controller $Controller) {\n-        $requestToken = $Controller->request->data('_csrfToken');\n-\n-        if (!$requestToken) {\n-            throw new \\SecurityException('Missing CSRF token');\n-        }\n-\n-        if (!isset($this->tokens[$requestToken])) {\n-            throw new \\SecurityException('CSRF token mismatch');\n-        }\n-\n-        if ($this->tokens[$requestToken] < time()) {\n-            throw new \\SecurityException('CSRF token expired');\n-        }\n-\n-        if (isset($this->tokens[$requestToken])) {\n-\n-            if ($this->csrfUseOnce) {\n-                unset($this->tokens[$requestToken]);\n-            }\n-            return true;\n-        }\n-\n-        $this->blackhole();\n-    }\n-\n-    /**\n-     * Generate a new Token stores it to $_SESSION and return the current token\n-     * @return string\n-     */\n-    public function generateToken() {\n-        $newToken = $this->_generateToken();\n-        $this->tokens[$newToken] = strtotime($this->csrfExpires);\n-\n-        $csrf = [\n-            'latestToken' => $newToken,\n-            'csrfTokens'  => $this->tokens\n-        ];\n-\n-        $this->Session->write('_csrf', $csrf);\n-\n-        return $newToken;\n-    }\n-\n-\n-    public function blackhole() {\n-        throw new \\BadRequestException(__d('cake_dev', 'The request has been black-holed'));\n-    }\n-\n-}"
        },
        {
          "filename": "webroot/js/scripts/controllers/Administrator/AdministratorsDebugController.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -312,12 +312,12 @@ angular.module('openITCOCKPIT')\n         });\n \n         $scope.setXdebugCookie = function(){\n-            $.cookie('XDEBUG_TRIGGER', 'true');\n+            $.cookie('XDEBUG_TRIGGER', 'true', {secure: true});\n             $scope.hasXdebugCookie = true;\n         };\n \n         $scope.removeXdebugCookie = function(){\n-            $.removeCookie('XDEBUG_TRIGGER');\n+            $.removeCookie('XDEBUG_TRIGGER', {secure: true});\n             $scope.hasXdebugCookie = false;\n         };\n "
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b7dcfb08781d36b1ee2933c7799af7ec4ccabb40",
            "date": "2025-01-13T08:25:28Z",
            "author_login": "nook24"
          },
          {
            "sha": "246d2cada8e62c105e18d07268d92d98474a7e12",
            "date": "2025-01-10T10:28:39Z",
            "author_login": "nook24"
          },
          {
            "sha": "ff001df4bb8657aaf44cf735782b46de6cb44f9b",
            "date": "2025-01-10T09:19:57Z",
            "author_login": "nook24"
          },
          {
            "sha": "20f7f93956cb15c732b685a51faf9b92fb630bb7",
            "date": "2025-01-07T14:23:51Z",
            "author_login": "ibering"
          },
          {
            "sha": "cb68aefbf0e877de2b346a2053b53cf98657af59",
            "date": "2025-01-06T16:50:49Z",
            "author_login": "ibering"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-614",
    "description": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute in GitHub repository it-novum/openitcockpit prior to 4.6.6.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-06T01:15:08.930",
    "last_modified": "2024-11-21T08:17:26.760",
    "fix_date": "2023-06-15T08:03:44Z"
  },
  "references": [
    {
      "url": "https://github.com/it-novum/openitcockpit/commit/6c717f3c352e55257fc3fef2c5dec111f7d2ee6b",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f3b277bb-91db-419e-bcc4-fe0b055d2551",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/it-novum/openitcockpit/commit/6c717f3c352e55257fc3fef2c5dec111f7d2ee6b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/f3b277bb-91db-419e-bcc4-fe0b055d2551",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.893899",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "openITCOCKPIT",
    "owner": "it-novum",
    "created_at": "2015-08-19T12:16:06Z",
    "updated_at": "2025-01-13T08:25:32Z",
    "pushed_at": "2025-01-14T09:22:18Z",
    "size": 214063,
    "stars": 279,
    "forks": 51,
    "open_issues": 51,
    "watchers": 279,
    "has_security_policy": false,
    "default_branch": "development",
    "protected_branches": [
      "3.x-dev",
      "3.x-master"
    ],
    "languages": {
      "PHP": 13900213,
      "JavaScript": 2755346,
      "CSS": 1195499,
      "Shell": 138781,
      "Smarty": 70268,
      "Python": 10017,
      "Batchfile": 835,
      "Hack": 612
    },
    "commit_activity": {
      "total_commits_last_year": 532,
      "avg_commits_per_week": 10.23076923076923,
      "days_active_last_year": 113
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:14:09.091373"
  }
}