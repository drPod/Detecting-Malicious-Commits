{
  "cve_id": "CVE-2023-35847",
  "github_data": {
    "repository": "virtualsquare/picotcp",
    "fix_commit": "eaf166009e44641e6570c576ba071217f100fd99",
    "related_commits": [
      "eaf166009e44641e6570c576ba071217f100fd99",
      "eaf166009e44641e6570c576ba071217f100fd99"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "eaf166009e44641e6570c576ba071217f100fd99",
      "commit_date": "2023-05-12T20:24:11Z",
      "author": {
        "login": "danielinux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "TCP: Fixed MSS size calculation. Set MSS lower bound.",
        "length": 97,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 17,
        "additions": 14,
        "deletions": 3
      },
      "files": [
        {
          "filename": "modules/pico_tcp.c",
          "status": "modified",
          "additions": 13,
          "deletions": 3,
          "patch": "@@ -1085,7 +1085,11 @@ struct pico_socket *pico_tcp_open(struct pico_stack *S, uint16_t family)\n     t->sock.stack = S;\n     t->sock.timestamp = TCP_TIME;\n     pico_socket_set_family(&t->sock, family);\n-    t->mss = (uint16_t)(pico_socket_get_mss(&t->sock) - PICO_SIZE_TCPHDR);\n+    t->mss = (uint16_t)(pico_socket_get_mss(&t->sock));\n+    if (t->mss > PICO_SIZE_TCPHDR + PICO_TCP_MIN_MSS)\n+        t->mss -= (uint16_t)PICO_SIZE_TCPHDR;\n+    else\n+        t->mss = PICO_TCP_MIN_MSS;\n     t->tcpq_in.pool.root = t->tcpq_hold.pool.root = t->tcpq_out.pool.root = &LEAF;\n     t->tcpq_hold.pool.compare = t->tcpq_out.pool.compare = segment_compare;\n     t->tcpq_in.pool.compare = input_segment_compare;\n@@ -1254,7 +1258,10 @@ int pico_tcp_initconn(struct pico_socket *s)\n     ts->snd_last = ts->snd_nxt;\n     ts->cwnd = PICO_TCP_IW;\n     mtu = (uint16_t)pico_socket_get_mss(s);\n-    ts->mss = (uint16_t)(mtu - PICO_SIZE_TCPHDR);\n+    if (mtu > PICO_SIZE_TCPHDR + PICO_TCP_MIN_MSS)\n+        ts->mss = (uint16_t)(mtu - PICO_SIZE_TCPHDR);\n+    else\n+        ts->mss = PICO_TCP_MIN_MSS;\n     ts->ssthresh = (uint16_t)((uint16_t)(PICO_DEFAULT_SOCKETQ / ts->mss) -  (((uint16_t)(PICO_DEFAULT_SOCKETQ / ts->mss)) >> 3u));\n     syn->sock = s;\n     hdr->seq = long_be(ts->snd_nxt);\n@@ -2446,7 +2453,10 @@ static int tcp_syn(struct pico_socket *s, struct pico_frame *f)\n #endif\n     f->sock = &new->sock;\n     mtu = (uint16_t)pico_socket_get_mss(&new->sock);\n-    new->mss = (uint16_t)(mtu - PICO_SIZE_TCPHDR);\n+    if (mtu > PICO_SIZE_TCPHDR + PICO_TCP_MIN_MSS)\n+        new->mss = (uint16_t)(mtu - PICO_SIZE_TCPHDR);\n+    else\n+        new->mss = PICO_TCP_MIN_MSS;\n     if (tcp_parse_options(f) < 0)\n         return -1;\n     new->sock.stack = s->stack;"
        },
        {
          "filename": "modules/pico_tcp.h",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -55,6 +55,7 @@ PACKED_STRUCT_DEF tcp_pseudo_hdr_ipv4\n #define PICO_TCPHDR_SIZE 20\n #define PICO_SIZE_TCPOPT_SYN 20\n #define PICO_SIZE_TCPHDR (uint32_t)(sizeof(struct pico_tcp_hdr))\n+#define PICO_TCP_MIN_MSS (64 - PICO_SIZE_TCPHDR)\n \n /* TCP options */\n #define PICO_TCP_OPTION_END         0x00"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eec11dcaebfb3398a2b4c5709c218b593a1cf5f5",
            "date": "2024-12-19T09:25:00Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "aa34a305ee66dc8eb24458bfba6cb884b5b2a972",
            "date": "2024-12-07T21:57:07Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "cc923d2a1221d2066dc9270fb86c5c43635ce06e",
            "date": "2024-12-07T21:42:56Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "cd6ec86ffacfd60f8aaa5d7973dd3ec88c34780c",
            "date": "2024-05-31T07:37:57Z",
            "author_login": "scribam"
          },
          {
            "sha": "123cfe3ab499f0d7805aa64c43070c1cc856cd86",
            "date": "2024-02-19T13:28:50Z",
            "author_login": "FelixSchladt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-908",
    "description": "VirtualSquare picoTCP (aka PicoTCP-NG) through 2.1 does not have an MSS lower bound (e.g., it could be zero).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-19T03:15:09.280",
    "last_modified": "2024-11-21T08:08:48.827",
    "fix_date": "2023-05-12T20:24:11Z"
  },
  "references": [
    {
      "url": "https://github.com/virtualsquare/picotcp/commit/eaf166009e44641e6570c576ba071217f100fd99",
      "source": "cve@mitre.org",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/virtualsquare/picotcp/commit/eaf166009e44641e6570c576ba071217f100fd99",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.376305",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "picotcp",
    "owner": "virtualsquare",
    "created_at": "2020-08-23T10:09:15Z",
    "updated_at": "2025-01-04T21:12:56Z",
    "pushed_at": "2024-12-19T17:04:21Z",
    "size": 10537,
    "stars": 66,
    "forks": 17,
    "open_issues": 6,
    "watchers": 66,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 2819880,
      "Python": 29783,
      "Shell": 26259,
      "Makefile": 25814
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:05:58.119890"
  }
}