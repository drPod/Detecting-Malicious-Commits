{
  "cve_id": "CVE-2023-35849",
  "github_data": {
    "repository": "virtualsquare/picotcp",
    "fix_commit": "4b9a16764f2b12b611de9c34a50b4713d10ca401",
    "related_commits": [
      "4b9a16764f2b12b611de9c34a50b4713d10ca401",
      "4b9a16764f2b12b611de9c34a50b4713d10ca401"
    ],
    "patch_url": "https://github.com/virtualsquare/picotcp/commit/4b9a16764f2b12b611de9c34a50b4713d10ca401.patch",
    "fix_commit_details": {
      "sha": "4b9a16764f2b12b611de9c34a50b4713d10ca401",
      "commit_date": "2023-05-12T20:24:28Z",
      "author": {
        "login": "danielinux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "More checks for correct header sizes",
        "length": 80,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 12,
        "additions": 12,
        "deletions": 0
      },
      "files": [
        {
          "filename": "modules/pico_ipv4.c",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -668,6 +668,11 @@ static int pico_ipv4_process_in(struct pico_stack *S, struct pico_protocol *self\n     f->transport_hdr = ((uint8_t *)f->net_hdr) + PICO_SIZE_IP4HDR + option_len;\n     f->transport_len = (uint16_t)(short_be(hdr->len) - PICO_SIZE_IP4HDR - option_len);\n     f->net_len = (uint16_t)(PICO_SIZE_IP4HDR + option_len);\n+\n+    if ((f->net_hdr + f->net_len) > (f->buffer + f->buffer_len)) {\n+        pico_frame_discard(f);\n+        return 0;\n+    }\n #if defined(PICO_SUPPORT_IPV4FRAG) || defined(PICO_SUPPORT_IPV6FRAG)\n     f->frag = short_be(hdr->frag);\n #endif"
        },
        {
          "filename": "modules/pico_tcp.c",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -868,6 +868,9 @@ static inline void tcp_parse_option_mss(struct pico_socket_tcp *t, uint8_t len,\n     if (tcpopt_len_check(idx, len, PICO_TCPOPTLEN_MSS) < 0)\n         return;\n \n+    if ((*idx + PICO_TCPOPTLEN_MSS) > len)\n+        return;\n+\n     t->mss_ok = 1;\n     mss = short_from(opt + *idx);\n     *idx += (uint32_t)sizeof(uint16_t);\n@@ -896,6 +899,10 @@ static int tcp_parse_options(struct pico_frame *f)\n     uint8_t *opt = f->transport_hdr + PICO_SIZE_TCPHDR;\n     uint32_t i = 0;\n     f->timestamp = 0;\n+\n+    if (f->buffer + f->buffer_len > f->transport_hdr + f->transport_len)\n+        return -1;\n+\n     while (i < (f->transport_len - PICO_SIZE_TCPHDR)) {\n         uint8_t type =  opt[i++];\n         uint8_t len;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eec11dcaebfb3398a2b4c5709c218b593a1cf5f5",
            "date": "2024-12-19T09:25:00Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "aa34a305ee66dc8eb24458bfba6cb884b5b2a972",
            "date": "2024-12-07T21:57:07Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "cc923d2a1221d2066dc9270fb86c5c43635ce06e",
            "date": "2024-12-07T21:42:56Z",
            "author_login": "Diebbo"
          },
          {
            "sha": "cd6ec86ffacfd60f8aaa5d7973dd3ec88c34780c",
            "date": "2024-05-31T07:37:57Z",
            "author_login": "scribam"
          },
          {
            "sha": "123cfe3ab499f0d7805aa64c43070c1cc856cd86",
            "date": "2024-02-19T13:28:50Z",
            "author_login": "FelixSchladt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-754",
    "description": "VirtualSquare picoTCP (aka PicoTCP-NG) through 2.1 does not properly check whether header sizes would result in accessing data outside of a packet.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-19T03:15:09.370",
    "last_modified": "2024-11-21T08:08:49.110",
    "fix_date": "2023-05-12T20:24:28Z"
  },
  "references": [
    {
      "url": "https://github.com/virtualsquare/picotcp/commit/4b9a16764f2b12b611de9c34a50b4713d10ca401",
      "source": "cve@mitre.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/virtualsquare/picotcp/commit/4b9a16764f2b12b611de9c34a50b4713d10ca401",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:05:59.376692",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "picotcp",
    "owner": "virtualsquare",
    "created_at": "2020-08-23T10:09:15Z",
    "updated_at": "2025-01-04T21:12:56Z",
    "pushed_at": "2024-12-19T17:04:21Z",
    "size": 10537,
    "stars": 66,
    "forks": 17,
    "open_issues": 6,
    "watchers": 66,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 2819880,
      "Python": 29783,
      "Shell": 26259,
      "Makefile": 25814
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:27:56.444341"
  }
}