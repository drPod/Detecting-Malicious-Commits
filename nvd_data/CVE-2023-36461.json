{
  "cve_id": "CVE-2023-36461",
  "github_data": {
    "repository": "mastodon/mastodon",
    "fix_commit": "c5929798bf7e56cc2c79b15bed0c4692ded3dcb6",
    "related_commits": [
      "c5929798bf7e56cc2c79b15bed0c4692ded3dcb6",
      "c5929798bf7e56cc2c79b15bed0c4692ded3dcb6"
    ],
    "patch_url": "https://github.com/mastodon/mastodon/commit/c5929798bf7e56cc2c79b15bed0c4692ded3dcb6.patch",
    "fix_commit_details": {
      "sha": "c5929798bf7e56cc2c79b15bed0c4692ded3dcb6",
      "commit_date": "2023-07-06T13:06:23Z",
      "author": {
        "login": "ClearlyClaire",
        "type": "User",
        "stats": {
          "total_commits": 2258,
          "average_weekly_commits": 4.84549356223176,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 355
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-9pxv-6qvf-pjwc",
        "length": 136,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 37,
        "additions": 37,
        "deletions": 0
      },
      "files": [
        {
          "filename": "app/lib/request.rb",
          "status": "modified",
          "additions": 37,
          "deletions": 0,
          "patch": "@@ -7,11 +7,48 @@\n # Monkey-patch the HTTP.rb timeout class to avoid using a timeout block\n # around the Socket#open method, since we use our own timeout blocks inside\n # that method\n+#\n+# Also changes how the read timeout behaves so that it is cumulative (closer\n+# to HTTP::Timeout::Global, but still having distinct timeouts for other\n+# operation types)\n class HTTP::Timeout::PerOperation\n   def connect(socket_class, host, port, nodelay = false)\n     @socket = socket_class.open(host, port)\n     @socket.setsockopt(Socket::IPPROTO_TCP, Socket::TCP_NODELAY, 1) if nodelay\n   end\n+\n+  # Reset deadline when the connection is re-used for different requests\n+  def reset_counter\n+    @deadline = nil\n+  end\n+\n+  # Read data from the socket\n+  def readpartial(size, buffer = nil)\n+    @deadline ||= Process.clock_gettime(Process::CLOCK_MONOTONIC) + @read_timeout\n+\n+    timeout = false\n+    loop do\n+      result = @socket.read_nonblock(size, buffer, exception: false)\n+\n+      return :eof if result.nil?\n+\n+      remaining_time = @deadline - Process.clock_gettime(Process::CLOCK_MONOTONIC)\n+      raise HTTP::TimeoutError, \"Read timed out after #{@read_timeout} seconds\" if timeout || remaining_time <= 0\n+      return result if result != :wait_readable\n+\n+      # marking the socket for timeout. Why is this not being raised immediately?\n+      # it seems there is some race-condition on the network level between calling\n+      # #read_nonblock and #wait_readable, in which #read_nonblock signalizes waiting\n+      # for reads, and when waiting for x seconds, it returns nil suddenly without completing\n+      # the x seconds. In a normal case this would be a timeout on wait/read, but it can\n+      # also mean that the socket has been closed by the server. Therefore we \"mark\" the\n+      # socket for timeout and try to read more bytes. If it returns :eof, it's all good, no\n+      # timeout. Else, the first timeout was a proper timeout.\n+      # This hack has to be done because io/wait#wait_readable doesn't provide a value for when\n+      # the socket is closed by the server, and HTTP::Parser doesn't provide the limit for the chunks.\n+      timeout = true unless @socket.to_io.wait_readable(remaining_time)\n+    end\n+  end\n end\n \n class Request"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e2f085e2b2cec08dc1f5ae825730c2a3bf62e054",
            "date": "2025-01-14T10:42:06Z",
            "author_login": "ClearlyClaire"
          },
          {
            "sha": "a9a8b6b701026e41b2ee8edb897834b9c799cd2e",
            "date": "2025-01-14T10:27:21Z",
            "author_login": "mjankowski"
          },
          {
            "sha": "4a2813158d16914450b6bc4c00e1b3e7edfa26ba",
            "date": "2025-01-14T09:14:00Z",
            "author_login": "p1gp1g"
          },
          {
            "sha": "ee4edbb94f4006670c819a4db653a8dea347259e",
            "date": "2025-01-14T08:44:58Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "74da9e9281d549bc59453be71bf386d74946bdb7",
            "date": "2025-01-14T08:24:00Z",
            "author_login": "tribela"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "Mastodon is a free, open-source social network server based on ActivityPub. When performing outgoing HTTP queries, Mastodon sets a timeout on individual read operations. Prior to versions 3.5.9, 4.0.5, and 4.1.3, a malicious server can indefinitely extend the duration of the response through slowloris-type attacks. This vulnerability can be used to keep all Mastodon workers busy for an extended duration of time, leading to the server becoming unresponsive. Versions 3.5.9, 4.0.5, and 4.1.3 contain a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-06T19:15:10.880",
    "last_modified": "2024-11-21T08:09:45.617",
    "fix_date": "2023-07-06T13:06:23Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2023/07/06/7",
      "source": "security-advisories@github.com",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/commit/c5929798bf7e56cc2c79b15bed0c4692ded3dcb6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v3.5.9",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v4.0.5",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v4.1.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/security/advisories/GHSA-9pxv-6qvf-pjwc",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2023/07/06/7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/commit/c5929798bf7e56cc2c79b15bed0c4692ded3dcb6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v3.5.9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v4.0.5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/releases/tag/v4.1.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/security/advisories/GHSA-9pxv-6qvf-pjwc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.899418",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mastodon",
    "owner": "mastodon",
    "created_at": "2016-02-22T15:01:25Z",
    "updated_at": "2025-01-14T12:09:56Z",
    "pushed_at": "2025-01-14T10:53:29Z",
    "size": 274975,
    "stars": 47503,
    "forks": 7054,
    "open_issues": 3992,
    "watchers": 47503,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 4639671,
      "JavaScript": 1261807,
      "TypeScript": 625967,
      "SCSS": 341977,
      "Haml": 320352,
      "Dockerfile": 18716,
      "HTML": 13453,
      "Shell": 2288,
      "Procfile": 911,
      "CSS": 51
    },
    "commit_activity": {
      "total_commits_last_year": 3020,
      "avg_commits_per_week": 58.07692307692308,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:56:02.769793"
  }
}