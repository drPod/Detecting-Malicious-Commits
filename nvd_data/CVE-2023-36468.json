{
  "cve_id": "CVE-2023-36468",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "15a6f845d8206b0ae97f37aa092ca43d4f9d6e59",
    "related_commits": [
      "15a6f845d8206b0ae97f37aa092ca43d4f9d6e59",
      "15a6f845d8206b0ae97f37aa092ca43d4f9d6e59"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "15a6f845d8206b0ae97f37aa092ca43d4f9d6e59",
      "commit_date": "2023-03-10T16:19:00Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 388,
          "average_weekly_commits": 0.40585774058577406,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 111
        }
      },
      "commit_message": {
        "title": "XWIKI-20594: Mark old revisions and deleted documents as restricted",
        "length": 577,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 345,
        "additions": 333,
        "deletions": 12
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-bridge/src/main/java/org/xwiki/bridge/DocumentModelBridge.java",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -179,4 +179,15 @@ default Date getDate()\n     {\n         return null;\n     }\n+\n+    /**\n+     * @return {@code true} if the document is restricted, i.e., transformations should be executed in restricted mode\n+     * @since 15.2RC1\n+     * @since 14.10.7\n+     */\n+    @Unstable\n+    default boolean isRestricted()\n+    {\n+        return false;\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-display/xwiki-platform-display-api/src/main/java/org/xwiki/display/internal/AbstractDocumentTitleDisplayer.java",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -173,9 +173,11 @@ private XDOM displayTitle(DocumentModelBridge document, DocumentDisplayerParamet\n         if (!StringUtils.isEmpty(rawTitle)) {\n             try {\n                 String title = rawTitle;\n-                // Evaluate the title only if the document has script rights, otherwise use the raw title.\n-                if (authorizationManager.hasAccess(Right.SCRIPT, document.getContentAuthorReference(),\n-                    document.getDocumentReference())) {\n+                // Evaluate the title only if the document is not restricted and its content's author has script\n+                // right, otherwise use the raw title.\n+                if (!document.isRestricted() && this.authorizationManager.hasAccess(Right.SCRIPT,\n+                    document.getContentAuthorReference(), document.getDocumentReference()))\n+                {\n                     title = evaluateTitle(rawTitle, document, parameters);\n                 }\n                 return parseTitle(title);"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-display/xwiki-platform-display-api/src/main/java/org/xwiki/display/internal/DocumentContentAsyncRenderer.java",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -77,6 +77,11 @@ public Set<String> initialize(DocumentModelBridge document, DocumentDisplayerPar\n     {\n         this.parameters = parameters;\n \n+        // Make sure the restricted property of the document is properly taken into account.\n+        if (document.isRestricted()) {\n+            parameters.setTransformationContextRestricted(true);\n+        }\n+\n         this.asyncProperties = this.asyncParser.getAsyncProperties(document);\n \n         String transformationId = this.defaultEntityReferenceSerializer"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-display/xwiki-platform-display-api/src/main/java/org/xwiki/display/internal/DocumentTitleDisplayer.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -77,7 +77,7 @@ protected XDOM extractTitleFromContent(DocumentModelBridge document, DocumentDis\n                 try {\n                     TransformationContext txContext =\n                         new TransformationContext(headingXDOM, document.getSyntax(),\n-                                                  parameters.isTransformationContextRestricted());\n+                            parameters.isTransformationContextRestricted() || document.isRestricted());\n                     txContext.setTargetSyntax(parameters.getTargetSyntax());\n                     transformationManager.performTransformations(headingXDOM, txContext);\n "
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-resources/src/main/resources/flamingo/contentheader.vm",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -51,4 +51,11 @@\n     </div>\n   #end\n </div>\n+## Display a warning regarding restricted mode for advanced users or when there is an actual error to not to confuse\n+## simple users. Also, only display the warning for the content viewer as other viewers shouldn't display\n+## rendered content of old revisions and this would thus only confuse users.\n+#if ($viewer == 'content' && $doc.isRestricted()\n+  && ($isAdvancedUser || $stringtool.contains($renderedContent, 'xwikirenderingerror')))\n+  #warning($escapetool.xml($services.localization.render('core.document.restrictedInfo')))\n+#end\n <hr/>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/RecycleBinIT.java",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -39,6 +39,8 @@\n import org.xwiki.test.ui.po.HistoryPane;\n import org.xwiki.test.ui.po.ViewPage;\n \n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.startsWith;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -284,4 +286,34 @@ void viewDeletedPage(TestUtils testUtils, TestReference parentReference)\n         assertTrue(deletedPagesEntries.get(0).canBeRestored());\n         assertTrue(deletedTerminalPagesEntries.get(0).canBeRestored());\n     }\n+\n+    @Test\n+    @Order(3)\n+    void deletedDocumentIsRestricted(TestUtils testUtils, TestReference testReference)\n+    {\n+        testUtils.loginAsSuperAdmin();\n+\n+        ViewPage viewPage = testUtils.createPage(testReference, \"{{velocity}}Velocity content{{/velocity}}\", \"Title\");\n+        // Make sure the Velocity macro is executed normally.\n+        assertEquals(\"Velocity content\", viewPage.getContent());\n+\n+        viewPage.deletePage().confirmDeletePage().waitUntilFinished();\n+\n+        testUtils.gotoPage(testReference);\n+        DeletePageOutcomePage recycleBinPage = new DeletePageOutcomePage();\n+\n+        List<DeletedPageEntry> deletedPageEntries = recycleBinPage.getDeletedPagesEntries();\n+        assertFalse(deletedPageEntries.isEmpty());\n+        viewPage = deletedPageEntries.get(0).clickView();\n+\n+        assertEquals(\"Title\", viewPage.getDocumentTitle());\n+        // In the preview the Velocity macro should be forbidden.\n+        assertThat(viewPage.getContent(), startsWith(\"Failed to execute the [velocity] macro.\"));\n+\n+        testUtils.gotoPage(testReference);\n+        recycleBinPage = new DeletePageOutcomePage();\n+        viewPage = recycleBinPage.getDeletedPagesEntries().get(0).clickRestore();\n+        // Assert that in the restored document, scripts are allowed again.\n+        assertEquals(\"Velocity content\", viewPage.getContent());\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/VersionIT.java",
          "status": "modified",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -33,6 +33,8 @@\n import org.xwiki.test.ui.po.ViewPage;\n import org.xwiki.test.ui.po.editor.WikiEditPage;\n \n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.startsWith;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n@@ -238,4 +240,50 @@ void rollbackAttachmentWithSameNameAndVersion(TestUtils utils, TestReference tes\n         attachmentsPane.getAttachmentLink(\"file.txt\").click();\n         assertEquals(\"1\", utils.getDriver().findElement(By.tagName(\"html\")).getText());\n     }\n+\n+    @Test\n+    @Order(5)\n+    void oldRevisionsAreRestricted(TestUtils utils, TestReference testReference) throws Exception\n+    {\n+        utils.loginAsSuperAdmin();\n+\n+        utils.rest().delete(testReference);\n+\n+        // Create first version of the page\n+        ViewPage vp = utils.createPage(testReference, \"{{velocity}}\" + CONTENT1 + \"{{/velocity}}\", TITLE);\n+        assertEquals(CONTENT1, vp.getContent());\n+\n+        // Adds second version\n+        WikiEditPage wikiEditPage = vp.editWiki();\n+        wikiEditPage.setContent(\"{{velocity}}\" + CONTENT2 + \"{{velocity}}\");\n+        vp = wikiEditPage.clickSaveAndView();\n+\n+        assertEquals(CONTENT2, vp.getContent());\n+\n+        // TODO: Remove when XWIKI-6688 (Possible race condition when clicking on a tab at the bottom of a page in\n+        // view mode) is fixed.\n+        vp.waitForDocExtraPaneActive(\"comments\");\n+\n+        HistoryPane historyTab = vp.openHistoryDocExtraPane();\n+        vp = historyTab.viewVersion(\"1.1\");\n+\n+        // In the preview the Velocity macro should be forbidden.\n+        assertThat(vp.getContent(), startsWith(\"Failed to execute the [velocity] macro.\"));\n+\n+        // TODO: Remove when XWIKI-6688 (Possible race condition when clicking on a tab at the bottom of a page in\n+        // view mode) is fixed.\n+        vp.waitForDocExtraPaneActive(\"comments\");\n+\n+        historyTab = vp.openHistoryDocExtraPane();\n+        vp = historyTab.rollbackToVersion(\"1.1\");\n+\n+        // Rollback doesn't wait...\n+        // Wait for the comment tab to be selected since we're currently on the history tab and rolling\n+        // back is going to load a new page and make the focus active on the comments tab.\n+        vp.waitForDocExtraPaneActive(\"comments\");\n+\n+        // Assert that scripts are executed again after restoring the version.\n+        assertEquals(CONTENT1, vp.getContent());\n+    }\n+\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-legacy/xwiki-platform-legacy-oldcore/src/main/aspect/com/xpn/xwiki/doc/XWikiDocumentCompatibilityAspect.aj",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -282,7 +282,8 @@ privileged public aspect XWikiDocumentCompatibilityAspect\n                         XDOM headerXDOM = new XDOM(Collections.<Block> singletonList(header));\n \n                         // transform\n-                        TransformationContext context = new TransformationContext(headerXDOM, getSyntax());\n+                        TransformationContext context =\n+                            new TransformationContext(headerXDOM, getSyntax(), isRestricted());\n                         Utils.getComponent(TransformationManager.class).performTransformations(headerXDOM, context);\n \n                         // render"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/api/Document.java",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -3200,6 +3200,17 @@ public boolean isMostRecent()\n         return this.doc.isMostRecent();\n     }\n \n+    /**\n+     * @return if rendering transformations shall be executed in restricted mode and the title not be executed\n+     * @since 14.10.7\n+     * @since 15.2RC1\n+     */\n+    @Unstable\n+    public boolean isRestricted()\n+    {\n+        return this.doc.isRestricted();\n+    }\n+\n     @Override\n     public String toString()\n     {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/doc/XWikiDocument.java",
          "status": "modified",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -624,6 +624,11 @@ public Set<Entry<DocumentReference, List<BaseObject>>> entrySet()\n      */\n     private XWikiDocument originalDocument;\n \n+    /**\n+     * If the document should always be rendered in restricted mode.\n+     */\n+    private boolean restricted;\n+\n     /**\n      * Used to display the title and the content of this document. Do not inject the component here to avoid any simple\n      * new XWikiDocument to cause many useless initialization, in particular, during initialization of the stub context\n@@ -1337,6 +1342,7 @@ private String display(Syntax targetSyntax, boolean executionContextIsolated, bo\n                 DocumentDisplayerParameters parameters = new DocumentDisplayerParameters();\n                 parameters.setExecutionContextIsolated(executionContextIsolated);\n                 parameters.setTransformationContextIsolated(transformationContextIsolated);\n+                // Don't consider isRestricted() here as this could invoke a sheet.\n                 parameters.setTransformationContextRestricted(transformationContextRestricted);\n                 // Render the translated content (matching the current language) using this document's syntax.\n                 parameters.setContentTranslated(tdoc != this);\n@@ -1664,6 +1670,7 @@ public String getRenderedContent(String text, Syntax sourceSyntaxId, Syntax targ\n             XWikiDocument fakeDocument = new XWikiDocument(getDocumentReference());\n             fakeDocument.setSyntax(sourceSyntaxId);\n             fakeDocument.setContent(text);\n+            fakeDocument.setRestricted(sDocument != null && sDocument.isRestricted());\n \n             // We don't let displayer take care of the context isolation because we don't want the fake document to be\n             // context document\n@@ -4583,6 +4590,7 @@ private XWikiDocument cloneInternal(DocumentReference newDocumentReference,\n             doc.setMinorEdit(isMinorEdit());\n             doc.setSyntax(getSyntax());\n             doc.setHidden(isHidden());\n+            doc.setRestricted(isRestricted());\n \n             if (this.xClass != null) {\n                 doc.setXClass(this.xClass.clone());\n@@ -4744,6 +4752,14 @@ public void loadAttachments(XWikiContext context) throws XWikiException\n         }\n     }\n \n+    /**\n+     * Indicates whether some other document is \"equal to\" this one.\n+     * <p>\n+     * This ignores the {@link #isRestricted()} property as it is not considered to be part of the data.\n+     *\n+     * @param object the document to compare to\n+     * @return {@code true} if this document is the same as the object argument; {@code false} otherwise\n+     */\n     @Override\n     public boolean equals(Object object)\n     {\n@@ -9516,4 +9532,32 @@ public void initialize()\n         // There is no syntax by default in a new document and the default one is retrieved from the configuration\n         setSyntax(getSyntax());\n     }\n+\n+    /**\n+     * @return if rendering transformations shall be executed in restricted mode and the title not be executed\n+     * @since 14.10.7\n+     * @since 15.2RC1\n+     */\n+    @Override\n+    @Unstable\n+    public boolean isRestricted()\n+    {\n+        return this.restricted;\n+    }\n+\n+    /**\n+     * Set the restricted property that disables scripts and other dangerous content.\n+     * <p>\n+     * This property is not stored in the database as it is only supposed to be {@code true} on documents that do not\n+     * correspond to the current version of the document.\n+     *\n+     * @param restricted if rendering transformations shall be executed in restricted mode and the title not be executed\n+     * @since 14.10.7\n+     * @since 15.2RC1\n+     */\n+    @Unstable\n+    public void setRestricted(boolean restricted)\n+    {\n+        this.restricted = restricted;\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/internal/filter/output/XWikiDocumentOutputFilterStream.java",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -233,6 +233,10 @@ private void begin(FilterEventParameters parameters) throws FilterException\n             this.entity.setLocale(this.currentLocale);\n         }\n \n+        // Mark the document as restricted to avoid that any scripts are executed as scripts should only be executed\n+        // on the current, saved version, see https://jira.xwiki.org/browse/XWIKI-20594\n+        this.entity.setRestricted(true);\n+\n         // Find default author\n         DocumentReference defaultAuthorDocumentReference;\n         // TODO: move to UserReference based APIs in DocumentInstanceOutputProperties"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/XWikiHibernateStore.java",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -714,6 +714,9 @@ public void saveXWikiDoc(XWikiDocument doc, XWikiContext inputxcontext, boolean\n \n                     doc.setNew(false);\n \n+                    // Make sure that properly saved documents aren't restricted.\n+                    doc.setRestricted(false);\n+\n                     // We need to ensure that the saved document becomes the original document\n                     doc.setOriginalDocument(doc.clone());\n                 } finally {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/resources/ApplicationResources.properties",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -740,6 +740,8 @@ core.footer.creation=Created by {0} on {1}\n core.footer.translationCreation=Translated into {0} by {1} on {2}\n core.footer.modification=Last modified by {0} on {1}\n core.document.modificationWithVersion=Version {0} by {1} on {2}\n+core.document.restrictedInfo=For security reasons, the document is displayed in restricted mode as it is not the \\\n+  current version. There may be differences and errors due to this.\n \n core.document.error.failedParse=Failed to parse document content\n \n@@ -1685,6 +1687,8 @@ web.history.changes.privateInformation=Private information\n web.history.changes.attachment.notAvailable=The content diff is not available. One attachment might have been deleted from the recycle bin.\n web.history.changes.showContext=Show context\n web.history.changes.hideContext=Hide context\n+web.history.changes.restrictedInfo=For security reasons, at least one of the compared documents is displayed in \\\n+  restricted mode as it is not the current version. There may be differences and errors due to this.\n \n core.viewers.diff.title=Changes for page <a href=\"{1}\">{0}</a>\n core.viewers.diff.from=From version {0}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/doc/XWikiDocumentMockitoTest.java",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1583,6 +1583,9 @@ void tofromXMLDocument() throws XWikiException\n         newDocument.fromXML(document, false);\n \n         assertEquals(this.document, newDocument);\n+        // Assert that the document restored from XML is restricted in contrast to the original document.\n+        assertFalse(this.document.isRestricted());\n+        assertTrue(newDocument.isRestricted());\n     }\n \n     @Test"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/doc/XWikiDocumentRenderingTest.java",
          "status": "modified",
          "additions": 76,
          "deletions": 1,
          "patch": "@@ -21,6 +21,7 @@\n \n import java.io.Reader;\n import java.util.Arrays;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Properties;\n \n@@ -31,6 +32,8 @@\n import org.xwiki.display.internal.DisplayConfiguration;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.rendering.transformation.RenderingContext;\n+import org.xwiki.security.authorization.Right;\n import org.xwiki.test.annotation.AllComponents;\n import org.xwiki.test.junit5.mockito.InjectComponentManager;\n import org.xwiki.test.mockito.MockitoComponentManager;\n@@ -47,6 +50,8 @@\n import com.xpn.xwiki.test.junit5.mockito.InjectMockitoOldcore;\n import com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n \n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.startsWith;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n@@ -134,7 +139,14 @@ public void setup() throws Exception\n         this.oldcore.getXWikiContext().put(\"isInRenderingEngine\", true);\n \n         when(this.oldcore.getMockAuthorizationManager().hasAccess(any(), any(), any())).thenReturn(true);\n-        when(this.oldcore.getMockContextualAuthorizationManager().hasAccess(any())).thenReturn(true);\n+        when(this.oldcore.getMockContextualAuthorizationManager().hasAccess(any())).thenAnswer(invocationOnMock -> {\n+            if (List.of(Right.SCRIPT, Right.PROGRAM).contains(invocationOnMock.getArgument(0))) {\n+                RenderingContext renderingContext = this.oldcore.getMocker().getInstance(RenderingContext.class);\n+                return !renderingContext.isRestricted();\n+            } else {\n+                return true;\n+            }\n+        });\n         when(this.xwiki.getRightService().hasProgrammingRights(any())).thenReturn(true);\n \n         this.componentManager\n@@ -174,6 +186,16 @@ public void getRenderedTitleWhenTitleIsSet()\n         assertEquals(\"title\", this.document.getRenderedTitle(Syntax.XHTML_1_0, this.oldcore.getXWikiContext()));\n     }\n \n+    @Test\n+    void getRenderedTitleRestricted()\n+    {\n+        this.document.setRestricted(true);\n+        // Title with velocity that shouldn't be evaluated\n+        String title = \"#set($key = \\\"title\\\")$key\";\n+        this.document.setTitle(title);\n+        assertEquals(title, this.document.getRenderedTitle(Syntax.XHTML_1_0, this.oldcore.getXWikiContext()));\n+    }\n+\n     @Test\n     public void getRenderedTitleInHTMLWhenExtractedFromContent()\n     {\n@@ -208,6 +230,19 @@ public void getRenderedTitleInHTMLWhenExtractedFromContent()\n         assertEquals(\"Page\", this.document.getRenderedTitle(Syntax.XHTML_1_0, this.oldcore.getXWikiContext()));\n     }\n \n+    @Test\n+    void getRenderedTitleWhenRestricted()\n+    {\n+        // Configure XWiki to extract title from content\n+        this.oldcore.getConfigurationSource().setProperty(\"xwiki.title.compatibility\", \"1\");\n+        this.document.setRestricted(true);\n+\n+        this.document.setContent(\"content not in section\\n\"\n+            + \"= {{groovy}}print \\\"value\\\"{{/groovy}}=\\nheader 1 content\\n\" + \"== header 2==\\nheader 2 content\");\n+        assertThat(this.document.getRenderedTitle(Syntax.XHTML_1_0, this.oldcore.getXWikiContext()),\n+            startsWith(\"<span class=\\\"xwikirenderingerror\\\">Failed to execute the [groovy] macro.\"));\n+    }\n+\n     @Test\n     public void getRenderedTitleInPlainWhenExtractedFromContent()\n     {\n@@ -347,6 +382,46 @@ public void getRenderedContentIsForcingCurrentDocumentAsTheSecurityDocument() th\n         assertEquals(\"<p>Space.Page</p>\", this.document.getRenderedContent(this.oldcore.getXWikiContext()));\n     }\n \n+    @Test\n+    void getRenderedContentSetsRestrictedRendering() throws Exception\n+    {\n+        XWikiDocument otherDocument = new XWikiDocument(new DocumentReference(\"otherwiki\", \"otherspace\", \"otherpage\"));\n+        otherDocument.setContentAuthorReference(new DocumentReference(\"otherwiki\", \"XWiki\", \"othercontentauthor\"));\n+        XWikiDocument sdoc = new XWikiDocument(new DocumentReference(\"callerwiki\", \"callerspace\", \"callerpage\"));\n+        Document apiDocument = this.document.newDocument(this.oldcore.getXWikiContext());\n+\n+        String content = \"{{velocity}}test{{/velocity}}\";\n+\n+        this.document.setRestricted(true);\n+        this.document.setContent(content);\n+        this.oldcore.getXWikiContext().setDoc(null);\n+\n+        // Verify that the Velocity macro is not executed.\n+        assertThat(this.document.getRenderedContent(this.oldcore.getXWikiContext()),\n+            startsWith(\"<div class=\\\"xwikirenderingerror\\\">Failed to execute the [velocity] macro.\"));\n+\n+        this.document.setRestricted(false);\n+\n+        assertEquals(\"<p>test</p>\", this.document.getRenderedContent(this.oldcore.getXWikiContext()));\n+\n+        this.oldcore.getXWikiContext().setDoc(otherDocument);\n+\n+        assertEquals(\"<p>test</p>\", apiDocument.getRenderedContent(content, Syntax.XWIKI_2_1.toIdString()));\n+\n+        otherDocument.setRestricted(true);\n+\n+        assertThat(apiDocument.getRenderedContent(content, Syntax.XWIKI_2_1.toIdString()),\n+            startsWith(\"<div class=\\\"xwikirenderingerror\\\">Failed to execute the [velocity] macro.\"));\n+\n+        this.oldcore.getXWikiContext().put(\"sdoc\", sdoc);\n+        assertEquals(\"<p>test</p>\", apiDocument.getRenderedContent(content, Syntax.XWIKI_2_1.toIdString()));\n+\n+        sdoc.setRestricted(true);\n+\n+        assertThat(apiDocument.getRenderedContent(content, Syntax.XWIKI_2_1.toIdString()),\n+            startsWith(\"<div class=\\\"xwikirenderingerror\\\">Failed to execute the [velocity] macro.\"));\n+    }\n+\n     @Test\n     public void getRenderedContentTextWithSourceSyntaxSpecified()\n     {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/test/MockitoOldcore.java",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -629,6 +629,8 @@ public Void answer(InvocationOnMock invocation) throws Throwable\n                 document.setStore(getMockStore());\n \n                 XWikiDocument savedDocument = document.clone();\n+                // Make sure the saved version is not restricted.\n+                savedDocument.setRestricted(false);\n \n                 documents.put(document.getDocumentReferenceWithLocale(), savedDocument);\n \n@@ -832,6 +834,9 @@ public Void answer(InvocationOnMock invocation) throws Throwable\n                     }\n \n                     XWikiDocument savedDocument = document.clone();\n+                    // Make sure the saved version is not restricted.\n+                    savedDocument.setRestricted(false);\n+\n                     documents.put(document.getDocumentReferenceWithLocale(), savedDocument);\n \n                     if (isNew) {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-macros/xwiki-platform-rendering-macro-context/src/main/java/org/xwiki/rendering/internal/macro/context/ContextMacro.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -199,7 +199,8 @@ private List<Block> executeContext(XDOM xdom, ContextMacroParameters parameters,\n                     // IMPORTANT: This can be dangerous since it means executing macros, and thus also script macros\n                     // defined in the referenced document. To be used with caution.\n                     TransformationContext referencedTxContext =\n-                        new TransformationContext(referencedXDOM, referencedDoc.getSyntax());\n+                        new TransformationContext(referencedXDOM, referencedDoc.getSyntax(),\n+                            referencedDoc.isRestricted());\n                     this.transformationManager.performTransformations(referencedXDOM, referencedTxContext);\n                 }\n "
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-bridge/src/main/java/org/xwiki/security/authorization/internal/DefaultContextualAuthorizationManager.java",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -136,11 +136,9 @@ private EntityReference getFullReference(EntityReference reference)\n     private boolean checkPreAccess(Right right)\n     {\n         if (CONTENT_AUTHOR_RIGHTS.contains(right)) {\n-            if (this.renderingContext.isRestricted()) {\n-                return false;\n-            } else if (right == Right.PROGRAM && this.xcontextProvider.get().hasDroppedPermissions()) {\n-                return false;\n-            }\n+            XWikiDocument doc = getProgrammingDocument();\n+            boolean restricted = this.renderingContext.isRestricted() || (doc != null && doc.isRestricted());\n+            return !(restricted || (right == Right.PROGRAM && this.xcontextProvider.get().hasDroppedPermissions()));\n         }\n \n         return true;"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-bridge/src/test/java/org/xwiki/security/authorization/internal/DefaultContextualAuthorizationManagerTest.java",
          "status": "modified",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -19,25 +19,36 @@\n  */\n package org.xwiki.security.authorization.internal;\n \n+import java.util.stream.Stream;\n+\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.model.reference.LocalDocumentReference;\n import org.xwiki.model.reference.WikiReference;\n+import org.xwiki.rendering.transformation.RenderingContext;\n import org.xwiki.security.authorization.AuthorizationManager;\n import org.xwiki.security.authorization.Right;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n import org.xwiki.test.junit5.mockito.MockComponent;\n \n+import com.xpn.xwiki.doc.XWikiDocument;\n import com.xpn.xwiki.test.MockitoOldcore;\n import com.xpn.xwiki.test.junit5.mockito.InjectMockitoOldcore;\n import com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n import com.xpn.xwiki.test.reference.ReferenceComponentList;\n \n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.ArgumentMatchers.isNull;\n import static org.mockito.ArgumentMatchers.same;\n+import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n /**\n  * Validate {@link DefaultContextualAuthorizationManager}.\n@@ -51,6 +62,9 @@ class DefaultContextualAuthorizationManagerTest\n     @MockComponent\n     private AuthorizationManager authorizationManager;\n \n+    @MockComponent\n+    private RenderingContext renderingContext;\n+\n     @InjectMockComponents\n     private DefaultContextualAuthorizationManager contextualAuthorizationManager;\n \n@@ -89,4 +103,38 @@ void hasAccess()\n         verify(this.authorizationManager).hasAccess(same(Right.VIEW), isNull(),\n             eq(new DocumentReference(localReference, this.currentWikiReference)));\n     }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"contentRightsSource\")\n+    void contentAuthorRightPreAccess(Right right)\n+    {\n+        when(this.authorizationManager.hasAccess(eq(right), any(), any())).thenReturn(true);\n+\n+        assertTrue(this.contextualAuthorizationManager.hasAccess(right));\n+\n+        // Check restricted rendering context (once).\n+        when(this.renderingContext.isRestricted()).thenReturn(true).thenReturn(false);\n+        assertFalse(this.contextualAuthorizationManager.hasAccess(right));\n+\n+        XWikiDocument contextDocument = mock(XWikiDocument.class);\n+        this.oldcore.getXWikiContext().setDoc(contextDocument);\n+        assertTrue(this.contextualAuthorizationManager.hasAccess(right));\n+        verify(contextDocument).isRestricted();\n+        // Check restricted document denies script right.\n+        when(contextDocument.isRestricted()).thenReturn(true).thenReturn(false);\n+        assertFalse(this.contextualAuthorizationManager.hasAccess(right));\n+\n+        // Check dropping permissions keeps script but not programming right\n+        this.oldcore.getXWikiContext().dropPermissions();\n+        if (right == Right.PROGRAM) {\n+            assertFalse(this.contextualAuthorizationManager.hasAccess(right));\n+        } else {\n+            assertTrue(this.contextualAuthorizationManager.hasAccess(right));\n+        }\n+    }\n+\n+    static Stream<Right> contentRightsSource()\n+    {\n+        return Stream.of(Right.SCRIPT, Right.PROGRAM);\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-test/xwiki-platform-test-ui/src/main/java/org/xwiki/test/ui/po/HistoryPane.java",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -116,6 +116,21 @@ public ViewPage rollbackToVersion(String version)\n         return new ViewPage();\n     }\n \n+    /**\n+     * View the document at the given version.\n+     *\n+     * @param version the version to view\n+     * @return the viewpage\n+     * @since 14.10.7\n+     * @since 15.2RC1\n+     */\n+    public ViewPage viewVersion(String version)\n+    {\n+        this.pane.findElement(By.xpath(\".//table//tr//td[position()=3]/a[contains(., '\" + version + \"')]\")).click();\n+\n+        return new ViewPage();\n+    }\n+\n     public HistoryPane deleteVersion(String version)\n     {\n         getDriver().makeConfirmDialogSilent(true);"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/changesdoc.vm",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -136,6 +136,10 @@\n             $escapetool.xml($services.localization.render('web.history.changes.failedToCompute'))\n           </div>\n         #else\n+          #if (($origdoc.isRestricted() || $newdoc.isRestricted()) && ($services.user.allProperties.type == 'ADVANCED'\n+            || $stringtool.contains($htmlDiff, 'xwikirenderingerror')))\n+            #warning($escapetool.xml($services.localization.render('web.history.changes.restrictedInfo')))\n+          #end\n           $htmlDiff\n         #end\n       #end"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 8,
        "unique_directories": 17,
        "max_directory_depth": 13
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-459",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. When an XWiki installation is upgraded and that upgrade contains a fix for a bug in a document, just a new version of that document is added. In some cases, it's still possible to exploit the vulnerability that was fixed in the new version. The severity of this depends on the fixed vulnerability, for the purpose of this advisory take CVE-2022-36100/GHSA-2g5c-228j-p52x as example - it is easily exploitable with just view rights and critical. When XWiki is upgraded from a version before the fix for it (e.g., 14.3) to a version including the fix (e.g., 14.4), the vulnerability can still be reproduced by adding `rev=1.1` to the URL used in the reproduction steps so remote code execution is possible even after upgrading. Therefore, this affects the confidentiality, integrity and availability of the whole XWiki installation. This vulnerability also affects manually added script macros that contained security vulnerabilities that were later fixed by changing the script macro without deleting the versions with the security vulnerability from the history. This vulnerability doesn't affect freshly installed versions of XWiki. Further, this vulnerability doesn't affect content that is only loaded from the current version of a document like the code of wiki macros or UI extensions. This vulnerability has been patched in XWiki 14.10.7 and 15.2RC1 by forcing old revisions to be executed in a restricted mode that disables all script macros. As a workaround, admins can manually delete old revisions of affected documents. A script could be used to identify all installed documents and delete the history for them. However, also manually added and later corrected code may be affected by this vulnerability so it is easy to miss documents.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-29T21:15:09.703",
    "last_modified": "2024-11-21T08:09:46.523",
    "fix_date": "2023-03-10T16:19:00Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/15a6f845d8206b0ae97f37aa092ca43d4f9d6e59",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-2g5c-228j-p52x",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-8q9q-r9v2-644m",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20594",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/15a6f845d8206b0ae97f37aa092ca43d4f9d6e59",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-2g5c-228j-p52x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-8q9q-r9v2-644m",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20594",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.879409",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}