{
  "cve_id": "CVE-2023-36469",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
    "related_commits": [
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "commit_date": "2023-02-23T13:21:55Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 388,
          "average_weekly_commits": 0.40585774058577406,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 111
        }
      },
      "commit_message": {
        "title": "XWIKI-20610: Notification RSS feed is parsed as XWiki syntax",
        "length": 167,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 180,
        "additions": 172,
        "deletions": 8
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-mentions/xwiki-platform-mentions-notifications/src/main/resources/templates/notification/rss/mentions.mention.vm",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -62,7 +62,7 @@\n           #set ($externalURL = $newdoc.getExternalURL('view',\n             \"viewer=changes&rev1=${origdoc.version}&rev2=${newdoc.version}\"))\n           #set ($diffLink = \"<a href='$externalURL'>${newdoc.version}</a>\")\n-          $services.localization.render('notifications.rss.seeChanges', 'xwiki/2.1', [$diffLink])\n+          $services.localization.render('notifications.rss.seeChanges', [$diffLink])\n         #end\n     #end\n </p>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-notifications/xwiki-platform-notifications-ui/pom.xml",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -126,5 +126,18 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <!-- Needed for NotificationRSSService. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-macro-code</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-test-page</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-notifications/xwiki-platform-notifications-ui/src/main/resources/XWiki/Notifications/Code/NotificationRSSService.xml",
          "status": "modified",
          "additions": 15,
          "deletions": 6,
          "patch": "@@ -37,14 +37,23 @@\n   <syntaxId>xwiki/2.1</syntaxId>\n   <hidden>true</hidden>\n   <content>{{velocity}}\n+#set ($feedContent = $services.notification.notifiers.getFeed(20))\n #if ($xcontext.action == 'get' &amp;&amp; \"$request.outputSyntax\" == 'plain')\n-  #set($discard = $response.setContentType('application/xml'))\n+  #set ($characterEncoding = 'utf-8')\n+  #set ($discard = $response.setContentType('application/xml'))\n+  ## Make sure the Character Encoding response header matches the character encoding used to write the response and\n+  ## compute its length.\n+  #set ($discard = $response.setCharacterEncoding($characterEncoding))\n+  ## We write the output directly to the response to avoid the execution of the Rendering Transformations.\n+  #set ($discard = $response.writer.print($feedContent))\n+  ## The content length is measured in bytes and one character can use more than one byte.\n+  #set ($discard = $response.setContentLength($feedContent.getBytes($characterEncoding).size()))\n+  ## Make sure the entire content is send back to the client.\n+  #set ($discard = $response.flushBuffer())\n+  ## Make sure XWiki doesn't write any more content to the response.\n+  #set ($discard = $xcontext.setFinished(true))\n #else\n-  {{code language=\"xml\"}}\n-#end\n-$services.notification.notifiers.getFeed(20)\n-#if ($xcontext.action != 'get' || \"$request.outputSyntax\" != 'plain')\n-  {{/code}}\n+  {{code language=\"xml\" source=\"script:feedContent\" /}}\n #end\n {{/velocity}}\n </content>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-notifications/xwiki-platform-notifications-ui/src/test/java/org/xwiki/notifications/NotificationRSSServicePageTest.java",
          "status": "added",
          "additions": 142,
          "deletions": 0,
          "patch": "@@ -0,0 +1,142 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.notifications;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Reader;\n+import java.io.StringWriter;\n+import java.util.List;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.notifications.notifiers.script.NotificationNotifiersScriptService;\n+import org.xwiki.notifications.script.NotificationScriptService;\n+import org.xwiki.rendering.block.WordBlock;\n+import org.xwiki.rendering.internal.code.layout.PlainLayoutHandler;\n+import org.xwiki.rendering.internal.macro.code.CodeMacro;\n+import org.xwiki.rendering.internal.macro.code.source.DefaultCodeMacroSourceFactory;\n+import org.xwiki.rendering.internal.macro.code.source.ScriptCodeMacroSourceFactory;\n+import org.xwiki.rendering.internal.macro.script.source.ScriptMacroContentWikiSourceFactory;\n+import org.xwiki.rendering.internal.macro.source.MacroContentSourceReferenceConverter;\n+import org.xwiki.rendering.parser.HighlightParser;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.script.service.ScriptService;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.test.mockito.MockitoComponentManager;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+import org.xwiki.text.StringUtils;\n+\n+import com.xpn.xwiki.web.XWikiServletResponseStub;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyInt;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Test for {@code NotificationRSSService}.\n+ *\n+ * @version $Id$\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@ComponentList({\n+    CodeMacro.class,\n+    DefaultCodeMacroSourceFactory.class,\n+    ScriptCodeMacroSourceFactory.class,\n+    ScriptMacroContentWikiSourceFactory.class,\n+    MacroContentSourceReferenceConverter.class,\n+    PlainLayoutHandler.class\n+})\n+class NotificationRSSServicePageTest extends PageTest\n+{\n+    private static final DocumentReference RSS_DOCUMENT_REFERENCE =\n+        new DocumentReference(\"xwiki\", List.of(\"XWiki\", \"Notifications\", \"Code\"), \"NotificationRSSService\");\n+\n+    private static final String NOTIFIERS_HINT = \"notification.notifiers\";\n+\n+    private NotificationNotifiersScriptService notifiersScriptService;\n+\n+    @MockComponent\n+    private HighlightParser highlightParser;\n+\n+    @BeforeEach\n+    public void setUp(MockitoComponentManager componentManager) throws Exception\n+    {\n+        NotificationScriptService notificationScriptService =\n+            componentManager.registerMockComponent(ScriptService.class, \"notification\",\n+                NotificationScriptService.class, false);\n+        this.notifiersScriptService = componentManager.registerMockComponent(ScriptService.class,\n+            NOTIFIERS_HINT, NotificationNotifiersScriptService.class, false);\n+        when(notificationScriptService.get(\"notifiers\")).thenReturn(this.notifiersScriptService);\n+    }\n+\n+    @Test\n+    void rssResult() throws Exception\n+    {\n+        loadPage(RSS_DOCUMENT_REFERENCE);\n+        this.request.put(\"outputSyntax\", \"plain\");\n+        this.setOutputSyntax(Syntax.PLAIN_1_0);\n+        this.context.setAction(\"get\");\n+\n+        String testContent = \"//Test//\";\n+        when(this.notifiersScriptService.getFeed(anyInt())).thenReturn(testContent);\n+\n+        StringWriter out = new StringWriter();\n+        PrintWriter writer = new PrintWriter(out);\n+\n+        this.response = new XWikiServletResponseStub() {\n+            @Override\n+            public PrintWriter getWriter() throws IOException\n+            {\n+                return writer;\n+            }\n+        };\n+        this.context.setResponse(this.response);\n+\n+        String result = renderPage(RSS_DOCUMENT_REFERENCE);\n+        assertTrue(StringUtils.isAllBlank(result));\n+        assertEquals(testContent, out.toString());\n+    }\n+\n+    @Test\n+    void codeMacroResult() throws Exception\n+    {\n+        loadPage(RSS_DOCUMENT_REFERENCE);\n+\n+        String testContent = \"{{/code}}\";\n+        when(this.notifiersScriptService.getFeed(anyInt())).thenReturn(testContent);\n+        when(this.highlightParser.highlight(eq(\"xml\"), any())).then(invocation ->\n+        {\n+            Reader source = invocation.getArgument(1);\n+            return List.of(new WordBlock(IOUtils.toString(source)));\n+        });\n+        String result = renderPage(RSS_DOCUMENT_REFERENCE);\n+        assertEquals(\"<div class=\\\"box\\\"><div class=\\\"code\\\">&#123;&#123;/code}}</div></div>\", result);\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/notification/rss/default.vm",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -67,7 +67,7 @@\n   #set ($externalURL = $newdoc.getExternalURL('view',\n     \"viewer=changes&rev1=${origdoc.version}&rev2=${newdoc.version}\"))\n   #set ($diffLink = \"<a href='$externalURL'>${newdoc.version}</a>\")\n-  $services.localization.render('notifications.rss.seeChanges', 'xwiki/2.1', [$diffLink])\n+  $services.localization.render('notifications.rss.seeChanges', [$diffLink])\n #end\n #end\n </p>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 5,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user who can edit their own user profile and notification settings can execute arbitrary script macros including Groovy and Python macros that allow remote code execution including unrestricted read and write access to all wiki contents. This has been patched in XWiki 14.10.6 and 15.2RC1. Users are advised to update. As a workaround the main security fix can be manually applied by patching the affected document `XWiki.Notifications.Code.NotificationRSSService`. This will break the link to the differences, though as this requires additional changes to Velocity templates as shown in the patch. While the default template is available in the instance and can be easily patched, the template for mentions is contained in a `.jar`-file and thus cannot be fixed without replacing that jar.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-29T21:15:09.773",
    "last_modified": "2024-11-21T08:09:46.640",
    "fix_date": "2023-02-23T13:21:55Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c#diff-7221a548809fa2ba34348556f4b5bd436463c559ebdf691197932ee7ce4478ca",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c#diff-b261c6eac3108c3e6e734054c28a78f59d3439ab72fe8582dadf87670a0d15a4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-94pf-92hw-2hjc",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20610",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c#diff-7221a548809fa2ba34348556f4b5bd436463c559ebdf691197932ee7ce4478ca",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c#diff-b261c6eac3108c3e6e734054c28a78f59d3439ab72fe8582dadf87670a0d15a4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-94pf-92hw-2hjc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20610",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.879606",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}