{
  "cve_id": "CVE-2023-36470",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "46b542854978e9caa687a5c2b8817b8b17877d94",
    "related_commits": [
      "46b542854978e9caa687a5c2b8817b8b17877d94",
      "79418dd92ca11941b46987ef881bf50424898ff4",
      "b0cdfd893912baaa053d106a92e39fa1858843c7",
      "46b542854978e9caa687a5c2b8817b8b17877d94",
      "79418dd92ca11941b46987ef881bf50424898ff4",
      "b0cdfd893912baaa053d106a92e39fa1858843c7"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94.patch",
    "fix_commit_details": {
      "sha": "46b542854978e9caa687a5c2b8817b8b17877d94",
      "commit_date": "2023-03-02T12:47:57Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 378,
          "average_weekly_commits": 0.39622641509433965,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 108
        }
      },
      "commit_message": {
        "title": "XWIKI-20682: Introduce an icon macro",
        "length": 186,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 878,
        "additions": 878,
        "deletions": 0
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -34,6 +34,7 @@\n   <modules>\n     <module>xwiki-platform-icon-api</module>\n     <module>xwiki-platform-icon-default</module>\n+    <module>xwiki-platform-icon-macro</module>\n     <module>xwiki-platform-icon-script</module>\n     <module>xwiki-platform-icon-ui</module>\n     <module>xwiki-platform-icon-rest</module>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/pom.xml",
          "status": "added",
          "additions": 114,
          "deletions": 0,
          "patch": "@@ -0,0 +1,114 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.xwiki.platform</groupId>\n+    <artifactId>xwiki-platform-icon</artifactId>\n+    <version>15.2-SNAPSHOT</version>\n+  </parent>\n+  <artifactId>xwiki-platform-icon-macro</artifactId>\n+  <name>XWiki Platform - Icon - Macro</name>\n+  <description>Macro to display icons.</description>\n+  <properties>\n+    <xwiki.jacoco.instructionRatio>1.00</xwiki.jacoco.instructionRatio>\n+    <!-- Name to display by the Extension Manager -->\n+    <xwiki.extension.name>Icon Macro</xwiki.extension.name>\n+    <xwiki.extension.category>macro</xwiki.extension.category>\n+  </properties>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-icon-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-bridge</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.rendering</groupId>\n+      <artifactId>xwiki-rendering-transformation-macro</artifactId>\n+      <version>${rendering.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-model-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-async-macro</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.rendering</groupId>\n+      <artifactId>xwiki-rendering-test</artifactId>\n+      <version>${rendering.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.rendering</groupId>\n+      <artifactId>xwiki-rendering-syntax-xwiki21</artifactId>\n+      <version>${rendering.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.rendering</groupId>\n+      <artifactId>xwiki-rendering-syntax-event</artifactId>\n+      <version>${rendering.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-icon-default</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mortbay.jasper</groupId>\n+      <artifactId>apache-el</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- For UserReferenceSerializer -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-user-default</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-oldcore</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+      <type>test-jar</type>\n+    </dependency>\n+  </dependencies>\n+</project>\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/main/java/org/xwiki/icon/macro/DisplayIconMacroParameters.java",
          "status": "added",
          "additions": 103,
          "deletions": 0,
          "patch": "@@ -0,0 +1,103 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.icon.macro;\n+\n+import org.xwiki.icon.macro.internal.DisplayIconMacro;\n+import org.xwiki.properties.annotation.PropertyAdvanced;\n+import org.xwiki.properties.annotation.PropertyDescription;\n+import org.xwiki.properties.annotation.PropertyMandatory;\n+import org.xwiki.properties.annotation.PropertyName;\n+import org.xwiki.stability.Unstable;\n+\n+/**\n+ * Parameters for the {@link DisplayIconMacro} Macro.\n+ *\n+ * @version $Id$\n+ * @since 14.10.6\n+ * @since 15.2RC1\n+ */\n+@Unstable\n+public class DisplayIconMacroParameters\n+{\n+    private String name;\n+\n+    private String iconSet;\n+\n+    private boolean fallback = true;\n+\n+    /**\n+     * @return the name of the icon\n+     */\n+    public String getName()\n+    {\n+        return this.name;\n+    }\n+\n+    /**\n+     * @param name the name of the icon\n+     */\n+    @PropertyName(\"Name\")\n+    @PropertyDescription(\"The name of the icon.\")\n+    @PropertyMandatory\n+    public void setName(String name)\n+    {\n+        this.name = name;\n+    }\n+\n+    /**\n+     * @return the name of the icon theme\n+     */\n+    public String getIconSet()\n+    {\n+        return this.iconSet;\n+    }\n+\n+    /**\n+     * @param iconSet the name of the icon theme\n+     */\n+    @PropertyName(\"Icon Set\")\n+    @PropertyDescription(\"The name of the icon set\")\n+    public void setIconSet(String iconSet)\n+    {\n+        this.iconSet = iconSet;\n+    }\n+\n+    /**\n+     * @return if the icon shall be loaded from the default icon set when the icon or icon set is not available, true\n+     * by default\n+     */\n+    public boolean isFallback()\n+    {\n+        return this.fallback;\n+    }\n+\n+    /**\n+     * @param fallback if the icon shall be loaded from the default icon set when the icon or icon set is not available\n+     * icon set\n+     */\n+    @PropertyName(\"Fallback\")\n+    @PropertyDescription(\"If the icon shall be loaded from the default icon set when the icon or icon set is not \"\n+        + \"available, true by default\")\n+    @PropertyAdvanced\n+    public void setFallback(boolean fallback)\n+    {\n+        this.fallback = fallback;\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/main/java/org/xwiki/icon/macro/internal/DisplayIconMacro.java",
          "status": "added",
          "additions": 193,
          "deletions": 0,
          "patch": "@@ -0,0 +1,193 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.icon.macro.internal;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.bridge.DocumentModelBridge;\n+import org.xwiki.bridge.internal.DocumentContextExecutor;\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.icon.IconException;\n+import org.xwiki.icon.IconRenderer;\n+import org.xwiki.icon.IconSet;\n+import org.xwiki.icon.IconSetManager;\n+import org.xwiki.icon.macro.DisplayIconMacroParameters;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.EntityReferenceSerializer;\n+import org.xwiki.rendering.async.internal.AbstractExecutedContentMacro;\n+import org.xwiki.rendering.async.internal.block.BlockAsyncRendererConfiguration;\n+import org.xwiki.rendering.block.Block;\n+import org.xwiki.rendering.block.XDOM;\n+import org.xwiki.rendering.listener.MetaData;\n+import org.xwiki.rendering.macro.MacroExecutionException;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.rendering.transformation.MacroTransformationContext;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.user.UserReferenceSerializer;\n+\n+/**\n+ * Macro for displaying an icon.\n+ *\n+ * @version $Id$\n+ * @since 14.10.6\n+ * @since 15.2RC1\n+ */\n+@Component\n+@Named(\"displayIcon\")\n+@Singleton\n+public class DisplayIconMacro extends AbstractExecutedContentMacro<DisplayIconMacroParameters>\n+{\n+    private static final String DESCRIPTION = \"Display an icon.\";\n+\n+    @Inject\n+    private IconSetManager iconSetManager;\n+\n+    @Inject\n+    private IconRenderer iconRenderer;\n+\n+    @Inject\n+    private EntityReferenceSerializer<String> defaultEntityReferenceSerializer;\n+\n+    @Inject\n+    private ContextualAuthorizationManager contextualAuthorization;\n+\n+    @Inject\n+    @Named(\"document\")\n+    private UserReferenceSerializer<DocumentReference> documentUserSerializer;\n+\n+    @Inject\n+    private DocumentContextExecutor documentContextExecutor;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public DisplayIconMacro()\n+    {\n+        super(\"Icon\", DESCRIPTION, null, DisplayIconMacroParameters.class);\n+\n+        setDefaultCategories(Set.of(DEFAULT_CATEGORY_CONTENT));\n+    }\n+\n+    @Override\n+    public List<Block> execute(DisplayIconMacroParameters parameters, String content,\n+        MacroTransformationContext context) throws MacroExecutionException\n+    {\n+        List<Block> result;\n+\n+        try {\n+            IconSet iconSet = getIconSet(parameters);\n+\n+            if (iconSet == null) {\n+                result = List.of();\n+            } else {\n+                XDOM iconBlock = parseIcon(parameters, context, iconSet);\n+\n+                BlockAsyncRendererConfiguration rendererConfiguration =\n+                    createBlockAsyncRendererConfiguration(null, iconBlock, null, context);\n+                rendererConfiguration.setAsyncAllowed(false);\n+                rendererConfiguration.setCacheAllowed(false);\n+\n+                if (iconSet.getSourceDocumentReference() != null) {\n+                    DocumentReference sourceDocumentReference = iconSet.getSourceDocumentReference();\n+\n+                    DocumentModelBridge sourceDocument =\n+                        this.documentAccessBridge.getDocumentInstance(sourceDocumentReference);\n+                    DocumentReference authorReference =\n+                        this.documentUserSerializer.serialize(sourceDocument.getAuthors().getContentAuthor());\n+\n+                    rendererConfiguration.setSecureReference(sourceDocumentReference, authorReference);\n+                    rendererConfiguration.useEntity(sourceDocumentReference);\n+\n+                    String stringDocumentReference =\n+                        this.defaultEntityReferenceSerializer.serialize(iconSet.getSourceDocumentReference());\n+                    rendererConfiguration.setTransformationId(stringDocumentReference);\n+                    rendererConfiguration.setResricted(false);\n+\n+                    result = this.documentContextExecutor.call(\n+                        () -> List.of(this.executor.execute(rendererConfiguration)),\n+                        sourceDocument\n+                    );\n+                } else {\n+                    result = List.of(this.executor.execute(rendererConfiguration));\n+                }\n+            }\n+        } catch (MacroExecutionException e) {\n+            throw e;\n+        } catch (Exception e) {\n+            throw new MacroExecutionException(\"Failed parsing and executing the icon.\", e);\n+        }\n+\n+        return result;\n+    }\n+\n+    private XDOM parseIcon(DisplayIconMacroParameters parameters, MacroTransformationContext context, IconSet iconSet)\n+        throws IconException, MacroExecutionException\n+    {\n+        String iconContent = this.iconRenderer.render(parameters.getName(), iconSet);\n+        MetaData metaData = null;\n+\n+        if (iconSet.getSourceDocumentReference() != null) {\n+            String stringReference =\n+                this.defaultEntityReferenceSerializer.serialize(iconSet.getSourceDocumentReference());\n+            metaData = new MetaData(Map.of(MetaData.SOURCE, stringReference));\n+        }\n+\n+        return this.parser.parse(iconContent, Syntax.XWIKI_2_1, context, false, metaData,\n+            context.isInline());\n+    }\n+\n+    private IconSet getIconSet(DisplayIconMacroParameters parameters) throws IconException, MacroExecutionException\n+    {\n+        IconSet iconSet;\n+\n+        if (parameters.getIconSet() == null) {\n+            iconSet = this.iconSetManager.getCurrentIconSet();\n+        } else {\n+            iconSet = this.iconSetManager.getIconSet(parameters.getIconSet());\n+        }\n+\n+        // Check if the current user can access the icon theme. If not, fall back to the default icon theme or throw\n+        // an exception when the fallback is disabled.\n+        if (iconSet != null && iconSet.getSourceDocumentReference() != null\n+            && !this.contextualAuthorization.hasAccess(Right.VIEW, iconSet.getSourceDocumentReference()))\n+        {\n+            if (parameters.isFallback()) {\n+                iconSet = null;\n+            } else {\n+                throw new MacroExecutionException(\n+                    String.format(\"Current user [%s] doesn't have view rights on the icon set's document [%s]\",\n+                        this.documentAccessBridge.getCurrentUserReference(), iconSet.getSourceDocumentReference()));\n+            }\n+        }\n+\n+        if (parameters.isFallback() && (iconSet == null || !iconSet.hasIcon(parameters.getName()))) {\n+            iconSet = this.iconSetManager.getDefaultIconSet();\n+        }\n+\n+        return iconSet;\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/main/resources/ApplicationResources.properties",
          "status": "added",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -0,0 +1,29 @@\n+# ---------------------------------------------------------------------------\n+# See the NOTICE file distributed with this work for additional\n+# information regarding copyright ownership.\n+#\n+# This is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU Lesser General Public License as\n+# published by the Free Software Foundation; either version 2.1 of\n+# the License, or (at your option) any later version.\n+#\n+# This software is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+# Lesser General Public License for more details.\n+#\n+# You should have received a copy of the GNU Lesser General Public\n+# License along with this software; if not, write to the Free\n+# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+# 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+# ---------------------------------------------------------------------------\n+rendering.macro.displayIcon.name=Icon\n+rendering.macro.displayIcon.description=Display an icon.\n+rendering.macro.displayIcon.parameter.name.name=Name\n+rendering.macro.displayIcon.parameter.name.description=The name of the icon.\n+rendering.macro.displayIcon.parameter.iconSet.name=Icon Set\n+rendering.macro.displayIcon.parameter.iconSet.description=The name of the icon set.\n+rendering.macro.displayIcon.parameter.fallback.name=Fallback\n+rendering.macro.displayIcon.parameter.fallback.description=If the icon shall be loaded from the default icon set when \\\n+  the icon or icon set is not available, true by default.\n+"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/main/resources/META-INF/components.txt",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+org.xwiki.icon.macro.internal.DisplayIconMacro"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/java/org/xwiki/icon/macro/IntegrationTests.java",
          "status": "added",
          "additions": 124,
          "deletions": 0,
          "patch": "@@ -0,0 +1,124 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+\n+package org.xwiki.icon.macro;\n+\n+import org.xwiki.bridge.DocumentAccessBridge;\n+import org.xwiki.icon.Icon;\n+import org.xwiki.icon.IconException;\n+import org.xwiki.icon.IconSet;\n+import org.xwiki.icon.IconSetCache;\n+import org.xwiki.icon.IconSetManager;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.observation.ObservationManager;\n+import org.xwiki.rendering.test.integration.junit5.RenderingTests;\n+import org.xwiki.script.ScriptContextInitializer;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.skin.SkinManager;\n+import org.xwiki.skinx.SkinExtension;\n+import org.xwiki.test.annotation.AllComponents;\n+import org.xwiki.test.mockito.MockitoComponentManager;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Run all tests found in {@code *.test} files located in the classpath. These {@code *.test} files must follow the\n+ * conventions described in {@link org.xwiki.rendering.test.integration.TestDataParser}.\n+ *\n+ * @version $Id$\n+ */\n+@AllComponents\n+public class IntegrationTests implements RenderingTests\n+{\n+    private static final DocumentReference ICON_DOCUMENT_REFERENCE = new DocumentReference(\"xwiki\", \"Icon\", \"Document\");\n+\n+    /**\n+     * Initializes various mocks to prevent errors in the integration tests.\n+     *\n+     * @param componentManager the component manager of the tests\n+     * @throws Exception when the initialization fails\n+     */\n+    @RenderingTests.Initialized\n+    public void initialize(MockitoComponentManager componentManager) throws Exception\n+    {\n+        // Mock the authorization managers as they try initializing a cache which fails (infinispan is not available\n+        // in rendering tests).\n+        ContextualAuthorizationManager authorizationManager =\n+            componentManager.registerMockComponent(ContextualAuthorizationManager.class);\n+        // Grant view right on the icon document.\n+        when(authorizationManager.hasAccess(Right.VIEW, ICON_DOCUMENT_REFERENCE)).thenReturn(true);\n+        componentManager.registerMockComponent(AuthorizationManager.class);\n+\n+        // Mock the icon set cache as it fails.\n+        componentManager.registerMockComponent(IconSetCache.class);\n+\n+        // Mock skin extensions.\n+        componentManager.registerMockComponent(SkinExtension.class, \"ssx\");\n+        componentManager.registerMockComponent(SkinExtension.class, \"jsx\");\n+        componentManager.registerMockComponent(SkinExtension.class, \"linkx\");\n+\n+        // Mock various components for the script context initialization.\n+        componentManager.registerMockComponent(SkinManager.class);\n+        componentManager.registerMockComponent(ScriptContextInitializer.class, \"xwiki\");\n+        componentManager.registerMockComponent(ObservationManager.class);\n+\n+        DocumentAccessBridge documentAccessBridge = componentManager.registerMockComponent(DocumentAccessBridge.class);\n+        XWikiDocument testDocument = new XWikiDocument(ICON_DOCUMENT_REFERENCE);\n+        when(documentAccessBridge.getDocumentInstance(ICON_DOCUMENT_REFERENCE)).thenReturn(testDocument);\n+\n+        // Mock the icon set manager as we're not in a real enviornment where icon sets can be loaded.\n+        IconSetManager iconSetManager = componentManager.registerMockComponent(IconSetManager.class);\n+        setupIconThemes(iconSetManager);\n+    }\n+\n+    private void setupIconThemes(IconSetManager iconSetManager) throws IconException\n+    {\n+        // The current icon set, the test icon set.\n+        IconSet iconSet = new IconSet(\"test\");\n+        iconSet.addIcon(\"home\", new Icon(\"homeIcon\"));\n+        iconSet.addIcon(\"page\", new Icon(\"pageIcon\"));\n+        iconSet.setRenderWiki(\"(% class=\\\"icon\\\" data-xwiki-icon=\\\"$icon\\\" %)i(%%)\");\n+        when(iconSetManager.getCurrentIconSet()).thenReturn(iconSet);\n+\n+        // A special icon set to test loading icons from a different icon set.\n+        IconSet specialSet = new IconSet(\"special\");\n+        specialSet.addIcon(\"home\", new Icon(\"home\"));\n+        specialSet.setRenderWiki(\"special $icon\");\n+        when(iconSetManager.getIconSet(\"special\")).thenReturn(specialSet);\n+\n+        // A document-based icon set to test executing in the context of a document.\n+        IconSet documentIconSet = new IconSet(\"document\");\n+        documentIconSet.addIcon(\"document\", new Icon(\"executed\"));\n+        documentIconSet.setRenderWiki(\"document $icon\");\n+        documentIconSet.setSourceDocumentReference(new DocumentReference(ICON_DOCUMENT_REFERENCE));\n+        when(iconSetManager.getIconSet(\"document\")).thenReturn(documentIconSet);\n+\n+        // The default icon set to test fallback to the default when the current or specified icon set doesn't\n+        // contain an icon.\n+        IconSet defaultSet = new IconSet(\"default\");\n+        defaultSet.addIcon(\"fallback\", new Icon(\"fallbackIcon\"));\n+        defaultSet.setRenderWiki(\"fallback $icon\");\n+        when(iconSetManager.getDefaultIconSet()).thenReturn(defaultSet);\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/java/org/xwiki/icon/macro/internal/DisplayIconMacroTest.java",
          "status": "added",
          "additions": 200,
          "deletions": 0,
          "patch": "@@ -0,0 +1,200 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.icon.macro.internal;\n+\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.bridge.DocumentAccessBridge;\n+import org.xwiki.bridge.internal.DocumentContextExecutor;\n+import org.xwiki.icon.Icon;\n+import org.xwiki.icon.IconException;\n+import org.xwiki.icon.IconRenderer;\n+import org.xwiki.icon.IconSet;\n+import org.xwiki.icon.IconSetManager;\n+import org.xwiki.icon.macro.DisplayIconMacroParameters;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.EntityReferenceSerializer;\n+import org.xwiki.rendering.async.internal.block.BlockAsyncRendererConfiguration;\n+import org.xwiki.rendering.async.internal.block.BlockAsyncRendererExecutor;\n+import org.xwiki.rendering.block.Block;\n+import org.xwiki.rendering.block.MetaDataBlock;\n+import org.xwiki.rendering.block.WordBlock;\n+import org.xwiki.rendering.block.XDOM;\n+import org.xwiki.rendering.macro.MacroContentParser;\n+import org.xwiki.rendering.macro.MacroExecutionException;\n+import org.xwiki.rendering.syntax.Syntax;\n+import org.xwiki.rendering.transformation.MacroTransformationContext;\n+import org.xwiki.security.authorization.ContextualAuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.test.junit5.mockito.InjectMockComponents;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.user.UserReferenceSerializer;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.test.MockitoOldcore;\n+import com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyBoolean;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Unit test for {@link DisplayIconMacro}.\n+ *\n+ * @version $Id$\n+ */\n+@OldcoreTest\n+class DisplayIconMacroTest\n+{\n+    private static final DocumentReference ICON_DOCUMENT_REFERENCE = new DocumentReference(\"xwiki\", \"Icon\", \"Document\");\n+\n+    private static final DocumentReference AUTHOR = new DocumentReference(\"xwiki\", \"XWiki\", \"Author\");\n+\n+    @MockComponent\n+    private ContextualAuthorizationManager contextualAuthorizationManager;\n+\n+    @MockComponent\n+    private IconSetManager iconSetManager;\n+\n+    @MockComponent\n+    private IconRenderer iconRenderer;\n+\n+    @MockComponent\n+    private MacroContentParser macroContentParser;\n+\n+    @MockComponent\n+    private DocumentContextExecutor documentContextExecutor;\n+\n+    @MockComponent\n+    private BlockAsyncRendererExecutor blockAsyncRendererExecutor;\n+\n+    @MockComponent\n+    private EntityReferenceSerializer<String> defaultEntityReferenceSerializer;\n+\n+    @MockComponent\n+    @Named(\"document\")\n+    private UserReferenceSerializer<DocumentReference> documentUserSerializer;\n+\n+    @MockComponent\n+    private DocumentAccessBridge documentAccessBridge;\n+\n+    @InjectMockComponents\n+    private DisplayIconMacro displayIconMacro;\n+\n+    private final DisplayIconMacroParameters displayIconMacroParameters = new DisplayIconMacroParameters();\n+\n+    private XWikiDocument iconDocument;\n+\n+    @BeforeEach\n+    public void before(MockitoOldcore oldcore) throws Exception\n+    {\n+        this.iconDocument = new XWikiDocument(ICON_DOCUMENT_REFERENCE);\n+        this.iconDocument.setContentAuthorReference(AUTHOR);\n+        oldcore.getSpyXWiki().saveDocument(this.iconDocument, oldcore.getXWikiContext());\n+\n+        IconSet documentIconSet = new IconSet(\"document\");\n+        documentIconSet.addIcon(\"home\", new Icon(\"homeIcon\"));\n+        documentIconSet.setRenderWiki(\"icon $icon context {{contextDocumentAuthor /}}\");\n+        documentIconSet.setSourceDocumentReference(ICON_DOCUMENT_REFERENCE);\n+        when(this.iconSetManager.getIconSet(\"document\")).thenReturn(documentIconSet);\n+\n+        this.displayIconMacroParameters.setName(\"home\");\n+        this.displayIconMacroParameters.setIconSet(\"document\");\n+\n+        when(this.iconRenderer.render(anyString(), any(IconSet.class)))\n+            .then(invocation -> invocation.getArgument(0, String.class));\n+        when(this.macroContentParser.parse(anyString(), eq(Syntax.XWIKI_2_1), any(), eq(false), any(), anyBoolean()))\n+            .then(invocation -> new XDOM(List.of(new WordBlock(invocation.getArgument(0)))));\n+        when(this.documentContextExecutor.call(any(), any()))\n+            .then(invocation -> invocation.getArgument(0, Callable.class).call());\n+        when(this.blockAsyncRendererExecutor.execute(any())).then(invocation -> invocation.getArgument(0,\n+            BlockAsyncRendererConfiguration.class).getBlock());\n+        when(this.defaultEntityReferenceSerializer.serialize(ICON_DOCUMENT_REFERENCE))\n+            .thenReturn(\"xwiki:Icon.Document\");\n+        when(this.documentUserSerializer.serialize(any())).thenReturn(AUTHOR);\n+        when(this.documentAccessBridge.getDocumentInstance(ICON_DOCUMENT_REFERENCE)).thenReturn(this.iconDocument);\n+    }\n+\n+    @Test\n+    void accessDenied()\n+    {\n+        when(this.contextualAuthorizationManager.hasAccess(Right.VIEW, ICON_DOCUMENT_REFERENCE)).thenReturn(false);\n+        this.displayIconMacroParameters.setFallback(false);\n+\n+        MacroExecutionException executionException = assertThrows(MacroExecutionException.class,\n+            () -> this.displayIconMacro.execute(this.displayIconMacroParameters, null,\n+                mock(MacroTransformationContext.class)));\n+        assertEquals(String.format(\"Current user [%s] doesn't have view rights on the icon set's document [%s]\", null,\n+            ICON_DOCUMENT_REFERENCE), executionException.getMessage());\n+    }\n+\n+    @Test\n+    void fallbackWhenAccessDenied() throws MacroExecutionException, IconException\n+    {\n+        when(this.contextualAuthorizationManager.hasAccess(Right.VIEW, ICON_DOCUMENT_REFERENCE)).thenReturn(false);\n+        IconSet defaultIconSet = mock(IconSet.class);\n+        when(this.iconSetManager.getDefaultIconSet()).thenReturn(defaultIconSet);\n+\n+        List<Block> result =\n+            this.displayIconMacro.execute(this.displayIconMacroParameters, null, new MacroTransformationContext());\n+        assertEquals(result, List.of(new MetaDataBlock(List.of(new WordBlock(\"home\")))));\n+        verify(this.iconRenderer).render(\"home\", defaultIconSet);\n+        verifyNoInteractions(this.documentContextExecutor);\n+    }\n+\n+    @Test\n+    void throwsWhenRenderingIconFails() throws IconException\n+    {\n+        when(this.contextualAuthorizationManager.hasAccess(Right.VIEW, ICON_DOCUMENT_REFERENCE)).thenReturn(true);\n+\n+        IconException testException = new IconException(\"Test\");\n+        when(this.iconRenderer.render(\"home\", this.iconSetManager.getIconSet(\"document\"))).thenThrow(testException);\n+\n+        MacroExecutionException result = assertThrows(MacroExecutionException.class, () ->\n+            this.displayIconMacro.execute(this.displayIconMacroParameters, null, new MacroTransformationContext()));\n+\n+        assertEquals(\"Failed parsing and executing the icon.\", result.getMessage());\n+        assertSame(testException, result.getCause());\n+    }\n+\n+    @Test\n+    void executesInContext() throws Exception\n+    {\n+        when(this.contextualAuthorizationManager.hasAccess(Right.VIEW, ICON_DOCUMENT_REFERENCE)).thenReturn(true);\n+\n+        List<Block> result =\n+            this.displayIconMacro.execute(this.displayIconMacroParameters, null, new MacroTransformationContext());\n+        assertEquals(result, List.of(new MetaDataBlock(List.of(new WordBlock(\"home\")))));\n+        verify(this.documentContextExecutor).call(any(), eq(this.iconDocument));\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/resources/macrodisplayicon1.test",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -0,0 +1,36 @@\n+.runTransformations\n+.#-----------------------------------------------------\n+.input|xwiki/2.1\n+.# Verify the icon macro basic functionality\n+.#-----------------------------------------------------\n+Home icon: {{displayIcon name=\"home\" /}}\n+\n+{{displayIcon name=\"page\" /}}\n+.#-----------------------------------------------------\n+.expect|event/1.0\n+.#-----------------------------------------------------\n+beginDocument\n+beginParagraph\n+onWord [Home]\n+onSpace\n+onWord [icon]\n+onSpecialSymbol [:]\n+onSpace\n+beginMacroMarkerInline [displayIcon] [name=home]\n+beginMetaData [[syntax]=[XWiki 2.1]]\n+beginFormat [NONE] [[class]=[icon][data-xwiki-icon]=[homeIcon]]\n+onWord [i]\n+endFormat [NONE] [[class]=[icon][data-xwiki-icon]=[homeIcon]]\n+endMetaData [[syntax]=[XWiki 2.1]]\n+endMacroMarkerInline [displayIcon] [name=home]\n+endParagraph\n+beginMacroMarkerStandalone [displayIcon] [name=page]\n+beginMetaData [[syntax]=[XWiki 2.1]]\n+beginParagraph\n+beginFormat [NONE] [[class]=[icon][data-xwiki-icon]=[pageIcon]]\n+onWord [i]\n+endFormat [NONE] [[class]=[icon][data-xwiki-icon]=[pageIcon]]\n+endParagraph\n+endMetaData [[syntax]=[XWiki 2.1]]\n+endMacroMarkerStandalone [displayIcon] [name=page]\n+endDocument\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/resources/macrodisplayicon2.test",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+.runTransformations\n+.#-----------------------------------------------------\n+.input|xwiki/2.1\n+.# Verify that the icon set can be specified.\n+.#-----------------------------------------------------\n+{{displayIcon name=\"home\" iconSet=\"special\" /}}\n+.#-----------------------------------------------------\n+.expect|event/1.0\n+.#-----------------------------------------------------\n+beginDocument\n+beginMacroMarkerStandalone [displayIcon] [name=home|iconSet=special]\n+beginMetaData [[syntax]=[XWiki 2.1]]\n+beginParagraph\n+onWord [special]\n+onSpace\n+onWord [home]\n+endParagraph\n+endMetaData [[syntax]=[XWiki 2.1]]\n+endMacroMarkerStandalone [displayIcon] [name=home|iconSet=special]\n+endDocument\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/resources/macrodisplayicon3.test",
          "status": "added",
          "additions": 37,
          "deletions": 0,
          "patch": "@@ -0,0 +1,37 @@\n+.runTransformations\n+.#-----------------------------------------------------\n+.input|xwiki/2.1\n+.# Verify that the fallback to the default works and can be disabled.\n+.#-----------------------------------------------------\n+{{displayIcon name=\"fallback\" iconSet=\"special\" /}} {{displayIcon name=\"fallback\" /}} {{displayIcon name=\"fallback\" fallback=\"false\" /}}\n+\n+{{displayIcon name=\"home\" iconSet=\"none\" fallback=\"false\" /}}\n+.#-----------------------------------------------------\n+.expect|event/1.0\n+.#-----------------------------------------------------\n+beginDocument\n+beginParagraph\n+beginMacroMarkerInline [displayIcon] [name=fallback|iconSet=special]\n+beginMetaData [[syntax]=[XWiki 2.1]]\n+onWord [fallback]\n+onSpace\n+onWord [fallbackIcon]\n+endMetaData [[syntax]=[XWiki 2.1]]\n+endMacroMarkerInline [displayIcon] [name=fallback|iconSet=special]\n+onSpace\n+beginMacroMarkerInline [displayIcon] [name=fallback]\n+beginMetaData [[syntax]=[XWiki 2.1]]\n+onWord [fallback]\n+onSpace\n+onWord [fallbackIcon]\n+endMetaData [[syntax]=[XWiki 2.1]]\n+endMacroMarkerInline [displayIcon] [name=fallback]\n+onSpace\n+beginMacroMarkerInline [displayIcon] [name=fallback|fallback=false]\n+beginMetaData\n+endMetaData\n+endMacroMarkerInline [displayIcon] [name=fallback|fallback=false]\n+endParagraph\n+beginMacroMarkerStandalone [displayIcon] [name=home|iconSet=none|fallback=false]\n+endMacroMarkerStandalone [displayIcon] [name=home|iconSet=none|fallback=false]\n+endDocument\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-icon/xwiki-platform-icon-macro/src/test/resources/macrodisplayicon4.test",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+.runTransformations\n+.#-----------------------------------------------------\n+.input|xwiki/2.1\n+.# Verify the document-based icon set is rendered in document context\n+.#-----------------------------------------------------\n+{{displayIcon name=\"document\" iconSet=\"document\" /}}\n+.#-----------------------------------------------------\n+.expect|event/1.0\n+.#-----------------------------------------------------\n+beginDocument\n+beginMacroMarkerStandalone [displayIcon] [name=document|iconSet=document]\n+beginMetaData [[source]=[xwiki:Icon.Document][syntax]=[XWiki 2.1]]\n+beginParagraph\n+onWord [document]\n+onSpace\n+onWord [executed]\n+endParagraph\n+endMetaData [[source]=[xwiki:Icon.Document][syntax]=[XWiki 2.1]]\n+endMacroMarkerStandalone [displayIcon] [name=document|iconSet=document]\n+endDocument\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 6,
        "unique_directories": 9,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. By either creating a new or editing an existing document with an icon set, an attacker can inject XWiki syntax and Velocity code that is executed with programming rights and thus allows remote code execution. There are different attack vectors, the simplest is the Velocity code in the icon set's HTML or XWiki syntax definition. The [icon picker](https://extensions.xwiki.org/xwiki/bin/view/Extension/Icon%20Theme%20Application#HIconPicker) can be used to trigger the rendering of any icon set. The XWiki syntax variant of the icon set is also used without any escaping in some documents, allowing to inject XWiki syntax including script macros into a document that might have programming right, for this the currently used icon theme needs to be edited. Further, the HTML output of the icon set is output as JSON in the icon picker and this JSON is interpreted as XWiki syntax, allowing again the injection of script macros into a document with programming right and thus allowing remote code execution. This impacts the confidentiality, integrity and availability of the whole XWiki instance. This issue has been patched in XWiki 14.10.6 and 15.1. Icon themes now require script right and the code in the icon theme is executed within the context of the icon theme, preventing any rights escalation. A macro for displaying icons has been introduced to avoid injecting the raw wiki syntax of an icon set into another document. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-06-29T21:15:09.843",
    "last_modified": "2024-11-21T08:09:46.753",
    "fix_date": "2023-03-02T12:47:57Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/79418dd92ca11941b46987ef881bf50424898ff4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/b0cdfd893912baaa053d106a92e39fa1858843c7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fm68-j7ww-h9xf",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20524",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/79418dd92ca11941b46987ef881bf50424898ff4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/b0cdfd893912baaa053d106a92e39fa1858843c7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-fm68-j7ww-h9xf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20524",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:01.879807",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}