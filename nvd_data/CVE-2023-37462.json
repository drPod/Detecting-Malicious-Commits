{
  "cve_id": "CVE-2023-37462",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "d9c88ddc4c0c78fa534bd33237e95dea66003d29",
    "related_commits": [
      "d9c88ddc4c0c78fa534bd33237e95dea66003d29",
      "d9c88ddc4c0c78fa534bd33237e95dea66003d29"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/d9c88ddc4c0c78fa534bd33237e95dea66003d29.patch",
    "fix_commit_details": {
      "sha": "d9c88ddc4c0c78fa534bd33237e95dea66003d29",
      "commit_date": "2022-12-20T17:08:45Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 378,
          "average_weekly_commits": 0.39622641509433965,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 108
        }
      },
      "commit_message": {
        "title": "XWIKI-20457: Improve escaping in SkinsCode.XWikiSkinsSheet",
        "length": 106,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 350,
        "additions": 341,
        "deletions": 9
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-skin/xwiki-platform-skin-ui/pom.xml",
          "status": "modified",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -42,6 +42,18 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-localization-macro</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.rendering</groupId>\n+      <artifactId>xwiki-rendering-macro-message</artifactId>\n+      <version>${rendering.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.xwiki.platform</groupId>\n       <artifactId>xwiki-platform-rendering-macro-velocity</artifactId>\n@@ -60,6 +72,38 @@\n       <version>${rendering.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-xwiki</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-icon-script</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <!-- Test dependencies. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-test-page</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-web-templates</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-xwiki</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+      <type>test-jar</type>\n+    </dependency>\n   </dependencies>\n \n   <build>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-skin/xwiki-platform-skin-ui/src/main/resources/SkinsCode/XWikiSkinsSheet.xml",
          "status": "modified",
          "additions": 11,
          "deletions": 9,
          "patch": "@@ -66,8 +66,8 @@\n #####################\n #macro(view)\n   ## Call getDefaultEditMode() for backward compatibility with existing skins.\n-  * [[{{translation key=\"xe.admin.skin.editskin\"/}}&gt;&gt;path:${doc.getURL($doc.getDefaultEditMode())}]]\n-  * [[{{translation key=\"xe.admin.skin.testskin\"/}}&gt;&gt;${services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI'))}||queryString=\"skin=${doc.fullName}\"]]\n+  * [[{{translation key=\"xe.admin.skin.editskin\"/}}&gt;&gt;path:${services.rendering.escape($doc.getURL($doc.getDefaultEditMode()), 'xwiki/2.1')}]]\n+  * [[{{translation key=\"xe.admin.skin.testskin\"/}}&gt;&gt;${services.rendering.escape($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI')), 'xwiki/2.1')}||queryString=\"${services.rendering.escape($escapetool.url({\"skin\": $doc.fullName}), 'xwiki/2.1')}\"]]\n #end\n #####################\n ##      EDIT\n@@ -80,8 +80,10 @@\n   #set ($class = $doc.getObject($className).xWikiClass)\n   #foreach ($prop in $class.properties)\n     #if ($prop.classType != 'TextArea')\n-    ; $prop.prettyName\n-    : #if($prop.name == 'logo'){{attachmentSelector classname=\"${className}\" property=\"${prop.name}\" filter=\"png,jpg,gif,svg\" displayImage=\"true\"/}}#else $doc.display($prop.name)#end\n+    ; $services.rendering.escape($prop.prettyName, 'xwiki/2.1')\n+    : #if($prop.name == 'logo')## Avoid line break\n+      {{attachmentSelector classname=\"${className}\" property=\"${services.rendering.escape($prop.name, 'xwiki/2.1')}\" filter=\"png,jpg,gif,svg\" displayImage=\"true\"/}}## Avoid line break\n+    #else$doc.display($prop.name)#end\n     \n     #else\n       #set($discard = $deprecatedProperties.add($prop))\n@@ -98,16 +100,16 @@\n     {{html}}\n     &lt;noscript&gt;\n       &lt;div class=\"box errormessage\"&gt;\n-        $services.localization.render('skin.sheet.nojs', [\"&lt;a href='$doc.getURL('edit', 'editor=object')'&gt;\", '&lt;/a&gt;', 'XWiki.XWikiSkinFileOverrideClass'])\n+        $escapetool.xml($services.localization.render('skin.sheet.nojs', ['LINK_START', 'LINK_END', 'XWiki.XWikiSkinFileOverrideClass'])).replace('LINK_START', \"&lt;a href='$escapetool.xml($doc.getURL('edit', 'editor=object'))'&gt;\").replace('LINK_END', '&lt;/a&gt;')\n       &lt;/div&gt;\n     &lt;/noscript&gt;\n     {{/html}}\n     \n     {{html}}\n     &lt;div id=\"addOverride\"&gt;\n-      &lt;label for=\"newPath\" class=\"newPathLabel\"&gt;$services.icon.renderHTML('add') $services.localization.render(\"skin.sheet.addTemplate\")&lt;/label&gt;\n+      &lt;label for=\"newPath\" class=\"newPathLabel\"&gt;$services.icon.renderHTML('add') $escapetool.xml($services.localization.render(\"skin.sheet.addTemplate\"))&lt;/label&gt;\n       &lt;input placeholder=\"file.vm\" id=\"newPath\" name=\"newPath\" value=\"file.vm\" size=\"20\" class=\"withTip\" type=\"text\" /&gt;\n-      &lt;button class=\"btn btn-primary\" id=\"newPathAdd\"&gt;$services.localization.render(\"skin.sheet.add\")&lt;/button&gt;\n+      &lt;button class=\"btn btn-primary\" id=\"newPathAdd\"&gt;$escapetool.xml($services.localization.render(\"skin.sheet.add\"))&lt;/button&gt;\n     &lt;/div&gt;\n     {{/html}}\n     ## Display the XWiki.XWikiSkinFileOverrideClass objects\n@@ -127,7 +129,7 @@\n       \n       #foreach ($prop in $deprecatedProperties)\n         #if ($prop.classType == 'TextArea')\n-        ; $services.icon.render('file-white') $prop.prettyName\n+        ; $services.icon.render('file-white') $services.rendering.escape($prop.prettyName, 'xwiki/2.1')\n         : $doc.display($prop.name)\n         \n         #end\n@@ -152,7 +154,7 @@\n       #set ($className = 'XWiki.XWikiSkinFileOverrideClass')\n       #set ($class = $doc.getObject($className).xWikiClass)\n       #foreach ($prop in $class.properties)\n-        ; $prop.prettyName\n+        ; $services.rendering.escape($prop.prettyName, 'xwiki/2.1')\n         : $obj.display($prop.name, 'edit')\n     \n       #end"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-skin/xwiki-platform-skin-ui/src/test/java/org/xwiki/skin/XWikiSkinsSheetPageTest.java",
          "status": "added",
          "additions": 286,
          "deletions": 0,
          "patch": "@@ -0,0 +1,286 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.skin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.jsoup.Jsoup;\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.jsoup.select.Elements;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mock;\n+import org.xwiki.component.internal.ContextComponentManagerProvider;\n+import org.xwiki.edit.EditConfiguration;\n+import org.xwiki.edit.internal.DefaultEditorDescriptorBuilder;\n+import org.xwiki.edit.internal.DefaultEditorManager;\n+import org.xwiki.edit.internal.PureTextSyntaxContentEditor;\n+import org.xwiki.icon.IconManager;\n+import org.xwiki.icon.IconManagerScriptService;\n+import org.xwiki.icon.IconRenderer;\n+import org.xwiki.icon.IconSetManager;\n+import org.xwiki.localization.macro.internal.TranslationMacro;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.script.ModelScriptService;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultExtendedRenderingConfiguration;\n+import org.xwiki.rendering.internal.configuration.RenderingConfigClassDocumentConfigurationSource;\n+import org.xwiki.rendering.internal.macro.message.WarningMessageMacro;\n+import org.xwiki.rendering.internal.parser.reference.type.PathResourceReferenceTypeParser;\n+import org.xwiki.rendering.internal.renderer.xhtml.link.DocumentXHTMLLinkTypeRenderer;\n+import org.xwiki.rendering.internal.renderer.xhtml.link.PathXHTMLLinkTypeRenderer;\n+import org.xwiki.rendering.internal.resolver.DefaultResourceReferenceEntityReferenceResolver;\n+import org.xwiki.rendering.internal.resolver.DocumentResourceReferenceEntityReferenceResolver;\n+import org.xwiki.rendering.internal.wiki.XWikiWikiModel;\n+import org.xwiki.rendering.macro.Macro;\n+import org.xwiki.rendering.macro.MacroId;\n+import org.xwiki.rendering.macro.descriptor.DefaultMacroDescriptor;\n+import org.xwiki.template.script.TemplateScriptService;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.DefaultSkinAccessBridge;\n+import com.xpn.xwiki.XWikiException;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.internal.mandatory.XWikiSkinFileOverrideClassDocumentInitializer;\n+import com.xpn.xwiki.internal.mandatory.XWikiSkinsDocumentInitializer;\n+import com.xpn.xwiki.objects.BaseObject;\n+import com.xpn.xwiki.objects.classes.BaseClass;\n+import com.xpn.xwiki.test.reference.ReferenceComponentList;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Page test for SkinsCode.XWikiSkinsSheet.\n+ *\n+ * @version $Id$\n+ */\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@RenderingScriptServiceComponentList\n+@ReferenceComponentList\n+@ComponentList({\n+    // Class initializers\n+    XWikiSkinsDocumentInitializer.class,\n+    XWikiSkinFileOverrideClassDocumentInitializer.class,\n+    // Test macro\n+    TestNoScriptMacro.class,\n+    // Various classes to prevent errors in the displayed document\n+    ModelScriptService.class,\n+    IconManagerScriptService.class,\n+    TranslationMacro.class,\n+    WarningMessageMacro.class,\n+    DefaultExtendedRenderingConfiguration.class,\n+    RenderingConfigClassDocumentConfigurationSource.class,\n+    PathXHTMLLinkTypeRenderer.class,\n+    DocumentXHTMLLinkTypeRenderer.class,\n+    PathResourceReferenceTypeParser.class,\n+    // Provide a WikiModel implementation to get document links to work.\n+    XWikiWikiModel.class,\n+    ContextComponentManagerProvider.class,\n+    DefaultSkinAccessBridge.class,\n+    DefaultResourceReferenceEntityReferenceResolver.class,\n+    DocumentResourceReferenceEntityReferenceResolver.class,\n+    // For displaying text area editors\n+    PureTextSyntaxContentEditor.class,\n+    DefaultEditorDescriptorBuilder.class,\n+    DefaultEditorManager.class,\n+    TemplateScriptService.class\n+})\n+class XWikiSkinsSheetPageTest extends PageTest\n+{\n+    private static final DocumentReference XWIKI_SKINS_SHEET = new DocumentReference(\"xwiki\", \"SkinsCode\",\n+        \"XWikiSkinsSheet\");\n+\n+    private static final DocumentReference XWIKI_SKINS = new DocumentReference(\"xwiki\", \"XWiki\", \"XWikiSkins\");\n+\n+    private static final DocumentReference XWIKI_SKIN_FILE_OVERRIDE = new DocumentReference(\"xwiki\", \"XWiki\",\n+        \"XWikiSkinFileOverrideClass\");\n+\n+    private static final String NASTY_INPUT = \"\\\"]]<img onerror=\\\"alert(1)\\\"/>{{/html}}{{noscript/}}\";\n+\n+    /**\n+     * Mock components for IconManagerScriptService.\n+     */\n+    @MockComponent\n+    private IconManager iconManager;\n+\n+    @MockComponent\n+    private IconSetManager iconSetManager;\n+\n+    @MockComponent\n+    private IconRenderer iconRenderer;\n+\n+    /**\n+     * Mock the editor configuration.\n+     */\n+    @MockComponent\n+    private EditConfiguration editConfiguration;\n+\n+    /**\n+     * Mock attachment selector macro to avoid rendering errors.\n+     */\n+    @Mock\n+    private Macro<Object> attachmentSelectorMacro;\n+\n+    @BeforeEach\n+    void setup() throws Exception\n+    {\n+        this.xwiki.initializeMandatoryDocuments(this.context);\n+\n+        // Register fake attachment selector.\n+        when(this.attachmentSelectorMacro.supportsInlineMode()).thenReturn(true);\n+        when(this.attachmentSelectorMacro.execute(any(), any(), any())).thenReturn(Collections.emptyList());\n+        when(this.attachmentSelectorMacro.getDescriptor()).thenReturn(\n+            new DefaultMacroDescriptor(new MacroId(\"attachmentSelector\"), \"Attachment Selector Macro\"));\n+        this.oldcore.getMocker().registerComponent(Macro.class, \"attachmentSelector\", this.attachmentSelectorMacro);\n+\n+        // Make sure icons can be rendered.\n+        when(this.iconManager.renderHTML(anyString())).then(call -> \"HTML_ICON:\" + call.getArgument(0, String.class));\n+        when(this.iconManager.render(anyString())).then(call -> \"ICON:\" + call.getArgument(0, String.class));\n+    }\n+\n+    @Test\n+    void escapesDocumentReference() throws Exception\n+    {\n+        XWikiDocument xwikiDocument =\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", NASTY_INPUT), this.context);\n+        String encodedName =\n+            \"%22%5D%5D%3Cimg%20onerror%3D%22alert%281%29%22%2F%3E%7B%7B%2Fhtml%7D%7D%7B%7Bnoscript%2F%7D%7D\";\n+        XWikiDocument doc = loadPage(XWIKI_SKINS_SHEET);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(xwikiDocument);\n+\n+        Document document = render(doc);\n+        Elements links = document.getElementsByTag(\"a\");\n+        assertEquals(2, links.size());\n+\n+        assertEquals(\"xe.admin.skin.editskin\", links.get(0).text());\n+        // Verify that the link has exactly one attribute, which is the expected URL (and not also a part of the URL as\n+        // a separate attribute).\n+        assertEquals(1, links.get(0).attributes().size());\n+        assertEquals(xwikiDocument.getURL(xwikiDocument.getDefaultEditMode(this.context), this.context),\n+            links.get(0).attr(\"href\"));\n+\n+        assertEquals(\"xe.admin.skin.testskin\", links.get(1).text());\n+        // Verify that the link has exactly one attribute, which is the expected URL (and not also the queryString or\n+        // a part of the URL as a separate attribute).\n+        assertEquals(1, links.get(1).attributes().size());\n+        XWikiDocument mainDoc = this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Main\", \"WebHome\"), this.context);\n+        assertEquals(mainDoc.getURL(\"create\", \"skin=Space.\" + encodedName, this.context), links.get(1).attr(\"href\"));\n+    }\n+\n+    @Test\n+    void editMode() throws Exception\n+    {\n+        // Add the object to test.\n+        XWikiDocument xwikiDocument =\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", NASTY_INPUT), this.context);\n+        BaseObject baseObject = new BaseObject();\n+        baseObject.setXClassReference(XWIKI_SKINS);\n+        xwikiDocument.addXObject(baseObject);\n+\n+        // Add properties with nasty names to test escaping.\n+        XWikiDocument classDocument = this.xwiki.getDocument(XWIKI_SKINS, this.context);\n+        BaseClass xClass = classDocument.getXClass();\n+        String textName = NASTY_INPUT + \"_text\";\n+        xClass.addTextField(textName, NASTY_INPUT, 20);\n+        String templateName = NASTY_INPUT + \"_template\";\n+        xClass.addTemplateField(templateName, NASTY_INPUT);\n+        this.xwiki.saveDocument(classDocument, this.context);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(xwikiDocument);\n+        this.context.setAction(\"edit\");\n+        this.context.put(\"display\", \"edit\");\n+\n+        XWikiDocument doc = loadPage(XWIKI_SKINS_SHEET);\n+        Document document = render(doc);\n+        verifyNoErrors(document);\n+\n+        Elements nastyLabels = document.getElementsContainingOwnText(NASTY_INPUT);\n+        assertEquals(2, nastyLabels.size());\n+        assertEquals(NASTY_INPUT, nastyLabels.get(0).text());\n+        assertEquals(\"ICON:file-white \" + NASTY_INPUT, nastyLabels.get(1).text());\n+\n+        for (String suffix : List.of(textName, templateName)) {\n+            String id = \"XWiki.XWikiSkins_0_\" + suffix;\n+            Element input = document.getElementById(id);\n+            assertNotNull(input);\n+            assertEquals(id, input.attr(\"name\"));\n+        }\n+    }\n+\n+    @Test\n+    void displayObject() throws Exception\n+    {\n+        XWikiDocument xwikiDocument =\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", NASTY_INPUT), this.context);\n+        BaseObject baseObject = new BaseObject();\n+        baseObject.setXClassReference(XWIKI_SKIN_FILE_OVERRIDE);\n+        xwikiDocument.addXObject(baseObject);\n+\n+        // Add a property with nasty name to test escaping.\n+        XWikiDocument classDocument = this.xwiki.getDocument(XWIKI_SKIN_FILE_OVERRIDE, this.context);\n+        BaseClass xClass = classDocument.getXClass();\n+        xClass.addTextField(NASTY_INPUT + \"_text\", NASTY_INPUT, 20);\n+        this.xwiki.saveDocument(classDocument, this.context);\n+\n+        // Set up the current doc in the context so that $doc is bound in scripts\n+        this.context.setDoc(xwikiDocument);\n+        // Trigger displaying the object.\n+        this.context.setAction(\"get\");\n+        this.request.put(\"action\", \"displayObj\");\n+        this.request.put(\"objNumber\", \"0\");\n+\n+        XWikiDocument doc = loadPage(XWIKI_SKINS_SHEET);\n+        Document document = render(doc);\n+        verifyNoErrors(document);\n+        Elements propertyLabel = document.getElementsContainingOwnText(NASTY_INPUT);\n+        assertEquals(1, propertyLabel.size());\n+        assertEquals(\"dt\", propertyLabel.get(0).tagName());\n+        assertEquals(NASTY_INPUT, propertyLabel.text());\n+    }\n+\n+    private void verifyNoErrors(Document document)\n+    {\n+        assertTrue(document.getElementsByTag(\"img\").isEmpty());\n+        assertEquals(0, document.getElementsByClass(\"xwikirenderingerror\").size());\n+        assertEquals(0, document.getElementsContainingText(\"{{html\").size());\n+        assertEquals(0, document.getElementsContainingText(\"$\").size());\n+    }\n+\n+    private Document render(XWikiDocument doc) throws XWikiException\n+    {\n+        return Jsoup.parse(doc.getRenderedContent(this.context));\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Improper escaping in the document `SkinsCode.XWikiSkinsSheet` leads to an injection vector from view right on that document to programming rights, or in other words, it is possible to execute arbitrary script macros including Groovy and Python macros that allow remote code execution including unrestricted read and write access to all wiki contents. The attack works by opening a non-existing page with a name crafted to contain a dangerous payload. It is possible to check if an existing installation is vulnerable. See the linked GHSA for instructions on testing an installation. This issue has been patched in XWiki 14.4.8, 14.10.4 and 15.0-rc-1. Users are advised to upgrade. The fix commit `d9c88ddc` can also be applied manually to the impacted document `SkinsCode.XWikiSkinsSheet` and users unable to upgrade are advised to manually patch their installations.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-14T21:15:08.820",
    "last_modified": "2024-11-21T08:11:45.433",
    "fix_date": "2022-12-20T17:08:45Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/d9c88ddc4c0c78fa534bd33237e95dea66003d29",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h4vp-69r8-gvjg",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20457",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/d9c88ddc4c0c78fa534bd33237e95dea66003d29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h4vp-69r8-gvjg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20457",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:04.243799",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}