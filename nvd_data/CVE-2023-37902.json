{
  "cve_id": "CVE-2023-37902",
  "github_data": {
    "repository": "vyperlang/vyper",
    "fix_commit": "019a37ab98ff53f04fecfadf602b6cd5ac748f7f",
    "related_commits": [
      "019a37ab98ff53f04fecfadf602b6cd5ac748f7f",
      "019a37ab98ff53f04fecfadf602b6cd5ac748f7f"
    ],
    "patch_url": "https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f.patch",
    "fix_commit_details": {
      "sha": "019a37ab98ff53f04fecfadf602b6cd5ac748f7f",
      "commit_date": "2023-07-25T14:41:12Z",
      "author": {
        "login": "charles-cooper",
        "type": "User",
        "stats": {
          "total_commits": 1086,
          "average_weekly_commits": 2.5373831775700935,
          "total_additions": 171892,
          "total_deletions": 132147,
          "weeks_active": 180
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-f5x6-7qgp-jhf3",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 48,
        "additions": 28,
        "deletions": 20
      },
      "files": [
        {
          "filename": "tests/parser/functions/test_ecrecover.py",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -40,3 +40,21 @@ def test_ecrecover_uints2() -> address:\n     assert c.test_ecrecover_uints2() == local_account.address\n \n     print(\"Passed ecrecover test\")\n+\n+\n+def test_invalid_signature(get_contract):\n+    code = \"\"\"\n+dummies: HashMap[address, HashMap[address, uint256]]\n+\n+@external\n+def test_ecrecover(hash: bytes32, v: uint8, r: uint256) -> address:\n+    # read from hashmap to put garbage in 0 memory location\n+    s: uint256 = self.dummies[msg.sender][msg.sender]\n+    return ecrecover(hash, v, r, s)\n+    \"\"\"\n+    c = get_contract(code)\n+    hash_ = bytes(i for i in range(32))\n+    v = 0  # invalid v! ecrecover precompile will not write to output buffer\n+    r = 0\n+    # note web3.py decoding of 0x000..00 address is None.\n+    assert c.test_ecrecover(hash_, v, r) is None"
        },
        {
          "filename": "vyper/builtins/functions.py",
          "status": "modified",
          "additions": 10,
          "deletions": 20,
          "patch": "@@ -764,29 +764,19 @@ def infer_arg_types(self, node):\n \n     @process_inputs\n     def build_IR(self, expr, args, kwargs, context):\n-        placeholder_node = IRnode.from_list(\n-            context.new_internal_variable(BytesT(128)), typ=BytesT(128), location=MEMORY\n-        )\n+        input_buf = context.new_internal_variable(get_type_for_exact_size(128))\n+        output_buf = MemoryPositions.FREE_VAR_SPACE\n         return IRnode.from_list(\n             [\n                 \"seq\",\n-                [\"mstore\", placeholder_node, args[0]],\n-                [\"mstore\", [\"add\", placeholder_node, 32], args[1]],\n-                [\"mstore\", [\"add\", placeholder_node, 64], args[2]],\n-                [\"mstore\", [\"add\", placeholder_node, 96], args[3]],\n-                [\n-                    \"pop\",\n-                    [\n-                        \"staticcall\",\n-                        [\"gas\"],\n-                        1,\n-                        placeholder_node,\n-                        128,\n-                        MemoryPositions.FREE_VAR_SPACE,\n-                        32,\n-                    ],\n-                ],\n-                [\"mload\", MemoryPositions.FREE_VAR_SPACE],\n+                # clear output memory first, ecrecover can return 0 bytes\n+                [\"mstore\", output_buf, 0],\n+                [\"mstore\", input_buf, args[0]],\n+                [\"mstore\", input_buf + 32, args[1]],\n+                [\"mstore\", input_buf + 64, args[2]],\n+                [\"mstore\", input_buf + 96, args[3]],\n+                [\"staticcall\", \"gas\", 1, input_buf, 128, output_buf, 32],\n+                [\"mload\", output_buf],\n             ],\n             typ=AddressT(),\n         )"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "db8dcc713168b16977b5b07267653c9024f6acea",
            "date": "2025-01-12T17:01:49Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "10e91d5a2ba6eaab2f7194fd86cefb7a0ff19964",
            "date": "2025-01-12T16:34:14Z",
            "author_login": "tserg"
          },
          {
            "sha": "43259f8953672ef7a19167c6c048d020d82e05da",
            "date": "2025-01-12T16:32:46Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "9b5523e6131335c81714e7e8af63cc49404f5ce7",
            "date": "2025-01-12T16:19:30Z",
            "author_login": "charles-cooper"
          },
          {
            "sha": "f444c8fa3b02f34181cfa8768bcf572aedc29659",
            "date": "2025-01-11T20:14:12Z",
            "author_login": "charles-cooper"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-252",
    "description": "Vyper is a Pythonic programming language that targets the Ethereum Virtual Machine (EVM). Prior to version 0.3.10, the ecrecover precompile does not fill the output buffer if the signature does not verify. However, the ecrecover builtin will still return whatever is at memory location 0. This means that the if the compiler has been convinced to write to the 0 memory location with specially crafted data (generally, this can happen with a hashmap access or immutable read) just before the ecrecover, a signature check might pass on an invalid signature. Version 0.3.10 contains a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-25T21:15:10.550",
    "last_modified": "2024-11-21T08:12:25.897",
    "fix_date": "2023-07-25T14:41:12Z"
  },
  "references": [
    {
      "url": "https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:04.271986",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vyper",
    "owner": "vyperlang",
    "created_at": "2016-11-11T08:56:41Z",
    "updated_at": "2025-01-13T17:32:27Z",
    "pushed_at": "2025-01-12T17:01:50Z",
    "size": 11939,
    "stars": 4948,
    "forks": 817,
    "open_issues": 489,
    "watchers": 4948,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 2662211,
      "Makefile": 2222,
      "Batchfile": 1614,
      "Dockerfile": 1145,
      "Shell": 472
    },
    "commit_activity": {
      "total_commits_last_year": 317,
      "avg_commits_per_week": 6.096153846153846,
      "days_active_last_year": 154
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:48:09.728520"
  }
}