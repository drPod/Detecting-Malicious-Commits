{
  "cve_id": "CVE-2023-37910",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "d7720219d60d7201c696c3196c9d4a86d0881325",
    "related_commits": [
      "d7720219d60d7201c696c3196c9d4a86d0881325",
      "d7720219d60d7201c696c3196c9d4a86d0881325"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/d7720219d60d7201c696c3196c9d4a86d0881325.patch",
    "fix_commit_details": {
      "sha": "d7720219d60d7201c696c3196c9d4a86d0881325",
      "commit_date": "2023-01-10T15:43:05Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 378,
          "average_weekly_commits": 0.39622641509433965,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 108
        }
      },
      "commit_message": {
        "title": "XWIKI-20334: Add rights check to MoveAttachmentJob",
        "length": 50,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 106,
        "additions": 96,
        "deletions": 10
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-attachment/xwiki-platform-attachment-api/src/main/java/org/xwiki/attachment/internal/refactoring/job/MoveAttachmentJob.java",
          "status": "modified",
          "additions": 31,
          "deletions": 8,
          "patch": "@@ -38,6 +38,7 @@\n import org.xwiki.model.reference.EntityReferenceSerializer;\n import org.xwiki.refactoring.internal.job.AbstractEntityJob;\n import org.xwiki.refactoring.job.EntityJobStatus;\n+import org.xwiki.security.authorization.Right;\n import org.xwiki.user.UserReference;\n import org.xwiki.user.UserReferenceResolver;\n \n@@ -106,19 +107,41 @@ protected void process(EntityReference source)\n         // Update the author for the attribution of the attachment uploader.\n         this.modelBridge.setContextUserReference(this.request.getUserReference());\n         try {\n-            this.progressManager.startStep(this);\n-            moveAttachment(source, destination, autoRedirect, wiki);\n-            this.progressManager.endStep(this);\n-\n-            this.progressManager.startStep(this);\n-            this.observationManager.notify(new AttachmentMovedEvent((AttachmentReference) source, destination), this,\n-                this.request);\n-            this.progressManager.endStep(this);\n+            if (checkMoveRights(source, destination)) {\n+                this.progressManager.startStep(this);\n+                moveAttachment(source, destination, autoRedirect, wiki);\n+                this.progressManager.endStep(this);\n+\n+                this.progressManager.startStep(this);\n+                this.observationManager.notify(new AttachmentMovedEvent((AttachmentReference) source, destination),\n+                    this,\n+                    this.request);\n+                this.progressManager.endStep(this);\n+            }\n         } finally {\n             this.progressManager.popLevelProgress(this);\n         }\n     }\n \n+    private boolean checkMoveRights(EntityReference source, EntityReference destination)\n+    {\n+        // Check view and edit right on source to ensure that the user doesn't get view right through the move.\n+        // While edit right implies view right, the view right might be explicitly denied.\n+        boolean hasSourceRight = hasAccess(Right.VIEW, source) && hasAccess(Right.EDIT, source);\n+        boolean hasDestinationRight = hasAccess(Right.EDIT, destination);\n+\n+        if (!hasSourceRight) {\n+            this.logger.error(\"You don't have sufficient permissions over the source attachment [{}].\", source);\n+        } else if (!hasDestinationRight) {\n+            // The destination's document might be the same as the source, therefore, only log the error when there is\n+            // no error regarding the source.\n+            this.logger.error(\"You don't have sufficient permissions over the destination attachment [{}].\",\n+                destination);\n+        }\n+\n+        return hasSourceRight && hasDestinationRight;\n+    }\n+\n     private void moveAttachment(EntityReference source, AttachmentReference destination, boolean autoRedirect,\n         XWiki wiki)\n     {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-attachment/xwiki-platform-attachment-api/src/test/java/org/xwiki/attachment/internal/refactoring/job/MoveAttachmentJobTest.java",
          "status": "modified",
          "additions": 65,
          "deletions": 2,
          "patch": "@@ -25,6 +25,8 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n import org.mockito.Mock;\n import org.xwiki.attachment.internal.AttachmentsManager;\n import org.xwiki.attachment.internal.RedirectAttachmentClassDocumentInitializer;\n@@ -36,6 +38,8 @@\n import org.xwiki.model.reference.EntityReference;\n import org.xwiki.model.reference.EntityReferenceSerializer;\n import org.xwiki.refactoring.internal.ModelBridge;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n import org.xwiki.test.LogLevel;\n import org.xwiki.test.junit5.LogCaptureExtension;\n import org.xwiki.test.junit5.mockito.ComponentTest;\n@@ -54,8 +58,11 @@\n \n import static java.util.Collections.singletonList;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n import static org.mockito.Mockito.doThrow;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.verifyNoInteractions;\n@@ -77,6 +84,8 @@ class MoveAttachmentJobTest\n \n     private static final DocumentReference AUTHOR_REFERENCE = new DocumentReference(\"xwiki\", \"XWiki\", \"User1\");\n \n+    private static final DocumentReference USER2_REFERENCE = new DocumentReference(\"xwiki\", \"XWiki\", \"User2\");\n+\n     private static final DocumentReference TARGET_LOCATION = new DocumentReference(\"xwiki\", \"Space\", \"Target\");\n \n     private static final AttachmentReference TARGET_ATTACHMENT_LOCATION =\n@@ -101,12 +110,15 @@ class MoveAttachmentJobTest\n     private AttachmentsManager attachmentsManager;\n \n     @MockComponent\n-    protected ModelBridge modelBridge;\n+    private ModelBridge modelBridge;\n \n     @MockComponent\n     @Named(\"document\")\n     private UserReferenceResolver<DocumentReference> documentReferenceUserReferenceResolver;\n \n+    @MockComponent\n+    private AuthorizationManager authorizationManager;\n+\n     @Mock\n     private XWikiContext context;\n \n@@ -129,7 +141,7 @@ class MoveAttachmentJobTest\n     private UserReference authorReference;\n \n     @RegisterExtension\n-    LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);\n+    private LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);\n \n     private MoveAttachmentRequest request;\n \n@@ -153,6 +165,12 @@ void setUp() throws Exception\n         when(this.referenceSerializer.serialize(TARGET_LOCATION)).thenReturn(\"xwiki:Space.Target\");\n         when(this.referenceSerializer.serialize(SOURCE_LOCATION)).thenReturn(\"xwiki:Space.Source\");\n         when(this.documentReferenceUserReferenceResolver.resolve(AUTHOR_REFERENCE)).thenReturn(this.authorReference);\n+\n+        // Grant global view and edit right.\n+        when(this.authorizationManager.hasAccess(eq(Right.VIEW), eq(AUTHOR_REFERENCE), any(AttachmentReference.class)))\n+            .thenReturn(true);\n+        when(this.authorizationManager.hasAccess(eq(Right.EDIT), eq(AUTHOR_REFERENCE), any(AttachmentReference.class)))\n+            .thenReturn(true);\n     }\n \n     @Test\n@@ -164,6 +182,7 @@ void process() throws Exception\n         this.request.setProperty(MoveAttachmentRequest.AUTO_REDIRECT, true);\n         this.request.setInteractive(false);\n         this.request.setUserReference(AUTHOR_REFERENCE);\n+        this.request.setAuthorReference(AUTHOR_REFERENCE);\n \n         XWikiAttachment sourceAttachment = mock(XWikiAttachment.class);\n         XWikiAttachment targetAttachment = mock(XWikiAttachment.class);\n@@ -204,6 +223,8 @@ void processTargetSaveFail() throws Exception\n         this.request.setProperty(MoveAttachmentRequest.DESTINATION, TARGET_ATTACHMENT_LOCATION);\n         this.request.setProperty(MoveAttachmentRequest.AUTO_REDIRECT, true);\n         this.request.setInteractive(false);\n+        this.request.setUserReference(AUTHOR_REFERENCE);\n+        this.request.setAuthorReference(AUTHOR_REFERENCE);\n \n         XWikiAttachment sourceAttachment = mock(XWikiAttachment.class);\n         XWikiAttachment targetAttachment = mock(XWikiAttachment.class);\n@@ -257,6 +278,7 @@ void processRename() throws Exception\n         this.request.setProperty(MoveAttachmentRequest.AUTO_REDIRECT, true);\n         this.request.setInteractive(false);\n         this.request.setUserReference(AUTHOR_REFERENCE);\n+        this.request.setAuthorReference(AUTHOR_REFERENCE);\n \n         XWikiAttachment sourceAttachment = mock(XWikiAttachment.class);\n         XWikiAttachment targetAttachment = mock(XWikiAttachment.class);\n@@ -282,4 +304,45 @@ void processRename() throws Exception\n         verify(this.sourceAuthors, times(2)).setEffectiveMetadataAuthor(this.authorReference);\n         verify(this.sourceAuthors, times(2)).setOriginalMetadataAuthor(this.authorReference);\n     }\n+\n+    @ParameterizedTest\n+    @CsvSource({\n+        \"true, true\",\n+        \"false, true\",\n+        \"true, false\",\n+        \"false, false\"\n+    })\n+    void failWithoutRights(boolean canView, boolean canEdit) throws Exception\n+    {\n+        // Request initialization.\n+        this.request.setEntityReferences(singletonList(SOURCE_ATTACHMENT_LOCATION));\n+        this.request.setProperty(MoveAttachmentRequest.DESTINATION, TARGET_ATTACHMENT_LOCATION);\n+        this.request.setProperty(MoveAttachmentRequest.AUTO_REDIRECT, true);\n+        this.request.setInteractive(false);\n+        this.request.setUserReference(USER2_REFERENCE);\n+        this.request.setAuthorReference(AUTHOR_REFERENCE);\n+\n+        when(this.authorizationManager.hasAccess(Right.EDIT, USER2_REFERENCE, SOURCE_ATTACHMENT_LOCATION))\n+            .thenReturn(canEdit);\n+        when(this.authorizationManager.hasAccess(Right.VIEW, USER2_REFERENCE, SOURCE_ATTACHMENT_LOCATION))\n+            .thenReturn(canView);\n+        when(this.authorizationManager.hasAccess(Right.EDIT, USER2_REFERENCE, TARGET_ATTACHMENT_LOCATION))\n+            .thenReturn(false);\n+\n+        this.job.process(SOURCE_ATTACHMENT_LOCATION);\n+\n+        // Verify nothing has been modified.\n+        verifyNoInteractions(this.sourceDocument, this.targetDocument);\n+        verifyNoInteractions(this.attachmentsManager);\n+        verify(this.wiki, never()).saveDocument(any(), any(), any());\n+        verifyNoInteractions(this.targetAuthors, this.sourceAuthors);\n+\n+        if (!canEdit || !canView) {\n+            assertEquals(\"You don't have sufficient permissions over the source attachment \"\n+                + \"[Attachment xwiki:Space.Source@oldName].\", this.logCapture.getMessage(0));\n+        } else {\n+            assertEquals(\"You don't have sufficient permissions over the destination attachment \"\n+                + \"[Attachment xwiki:Space.Target@newName].\", this.logCapture.getMessage(0));\n+        }\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-862",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Starting with the introduction of attachment move support in version 14.0-rc-1 and prior to versions 14.4.8, 14.10.4, and 15.0-rc-1, an attacker with edit access on any document (can be the user profile which is editable by default) can move any attachment of any other document to this attacker-controlled document. This allows the attacker to access and possibly publish any attachment of which the name is known, regardless if the attacker has view or edit rights on the source document of this attachment. Further, the attachment is deleted from the source document. This vulnerability has been patched in XWiki 14.4.8, 14.10.4, and 15.0 RC1. There is no workaround apart from upgrading to a fixed version.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-25T18:17:28.477",
    "last_modified": "2024-11-21T08:12:27.047",
    "fix_date": "2023-01-10T15:43:05Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/d7720219d60d7201c696c3196c9d4a86d0881325",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rwwx-6572-mp29",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20334",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/d7720219d60d7201c696c3196c9d4a86d0881325",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rwwx-6572-mp29",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20334",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.927206",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}