{
  "cve_id": "CVE-2023-37912",
  "github_data": {
    "repository": "xwiki/xwiki-rendering",
    "fix_commit": "5f558b8fac8b716d19999225f38cb8ed0814116e",
    "related_commits": [
      "5f558b8fac8b716d19999225f38cb8ed0814116e",
      "5f558b8fac8b716d19999225f38cb8ed0814116e"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-rendering/commit/5f558b8fac8b716d19999225f38cb8ed0814116e.patch",
    "fix_commit_details": {
      "sha": "5f558b8fac8b716d19999225f38cb8ed0814116e",
      "commit_date": "2023-02-16T12:46:00Z",
      "author": {
        "login": "michitux",
        "type": "User",
        "stats": {
          "total_commits": 102,
          "average_weekly_commits": 0.13060179257362356,
          "total_additions": 10449,
          "total_deletions": 2854,
          "weeks_active": 46
        }
      },
      "commit_message": {
        "title": "XRENDERING-688: Improve footnote rendering (#246)",
        "length": 428,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 522,
        "additions": 417,
        "deletions": 105
      },
      "files": [
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/pom.xml",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -34,8 +34,6 @@\n     <xwiki.jacoco.instructionRatio>0.92</xwiki.jacoco.instructionRatio>\n     <!-- Name to display by the Extension Manager -->\n     <xwiki.extension.name>Footnote Macro</xwiki.extension.name>\n-    <!-- {{putFootnotes}} is a complex macro that needs to instantiate several different XDOM classes -->\n-    <checkstyle.suppressions.location>${basedir}/src/main/checkstyle/checkstyle-suppressions.xml</checkstyle.suppressions.location>\n   </properties>\n \n   <!-- Test dependencies -->"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/main/checkstyle/checkstyle-suppressions.xml",
          "status": "removed",
          "additions": 0,
          "deletions": 30,
          "patch": "@@ -1,30 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- * See the NOTICE file distributed with this work for additional\n- * information regarding copyright ownership.\n- *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU Lesser General Public License as\n- * published by the Free Software Foundation; either version 2.1 of\n- * the License, or (at your option) any later version.\n- *\n- * This software is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this software; if not, write to the Free\n- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n--->\n-\n-<!DOCTYPE suppressions PUBLIC\n-     \"-//Puppy Crawl//DTD Suppressions 1.0//EN\"\n-     \"http://www.puppycrawl.com/dtds/suppressions_1_0.dtd\">\n-\n-<suppressions>\n-  <!-- {{putFootnotes}} is a complex macro that needs to instantiate several different XDOM classes -->\n-  <suppress checks=\"ClassDataAbstractionCoupling\" files=\"PutFootnotesMacro.java\" />\n-</suppressions>"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/main/java/org/xwiki/rendering/internal/macro/footnote/FootnoteMacro.java",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Set;\n \n+import javax.inject.Inject;\n import javax.inject.Named;\n import javax.inject.Singleton;\n \n@@ -33,6 +34,7 @@\n import org.xwiki.rendering.block.match.MacroBlockMatcher;\n import org.xwiki.rendering.block.match.MacroMarkerBlockMatcher;\n import org.xwiki.rendering.macro.AbstractMacro;\n+import org.xwiki.rendering.macro.MacroContentParser;\n import org.xwiki.rendering.macro.MacroExecutionException;\n import org.xwiki.rendering.macro.descriptor.DefaultContentDescriptor;\n import org.xwiki.rendering.macro.footnote.FootnoteMacroParameters;\n@@ -81,6 +83,12 @@ public class FootnoteMacro extends AbstractMacro<FootnoteMacroParameters>\n     private static final BlockMatcher PUTFOOTNOTE_MARKER_MATCHER =\n         new MacroMarkerBlockMatcher(PutFootnotesMacro.MACRO_NAME);\n \n+    /**\n+     * Used to parse the content of the footnote.\n+     */\n+    @Inject\n+    private MacroContentParser contentParser;\n+\n     /**\n      * Create and initialize the descriptor of the macro.\n      */\n@@ -116,6 +124,7 @@ public List<Block> execute(FootnoteMacroParameters parameters, String content, M\n                 root.addChild(putFootnotesMacro);\n             }\n         }\n-        return Collections.emptyList();\n+\n+        return this.contentParser.parse(content, context, true, true).getChildren();\n     }\n }"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/main/java/org/xwiki/rendering/internal/macro/footnote/PutFootnotesMacro.java",
          "status": "modified",
          "additions": 173,
          "deletions": 65,
          "patch": "@@ -20,32 +20,37 @@\n package org.xwiki.rendering.internal.macro.footnote;\n \n import java.util.Collections;\n+import java.util.LinkedHashMap;\n import java.util.List;\n-import java.util.ListIterator;\n+import java.util.Map;\n+import java.util.Objects;\n import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n \n import javax.inject.Inject;\n import javax.inject.Named;\n import javax.inject.Singleton;\n \n import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n import org.xwiki.component.annotation.Component;\n import org.xwiki.rendering.block.Block;\n+import org.xwiki.rendering.block.CompositeBlock;\n import org.xwiki.rendering.block.FormatBlock;\n import org.xwiki.rendering.block.LinkBlock;\n import org.xwiki.rendering.block.ListItemBlock;\n import org.xwiki.rendering.block.MacroMarkerBlock;\n import org.xwiki.rendering.block.NumberedListBlock;\n import org.xwiki.rendering.block.SpaceBlock;\n import org.xwiki.rendering.block.WordBlock;\n-import org.xwiki.rendering.block.match.ClassBlockMatcher;\n+import org.xwiki.rendering.block.match.MacroMarkerBlockMatcher;\n import org.xwiki.rendering.listener.Format;\n import org.xwiki.rendering.listener.reference.DocumentResourceReference;\n+import org.xwiki.rendering.listener.reference.ResourceReference;\n import org.xwiki.rendering.macro.AbstractMacro;\n-import org.xwiki.rendering.macro.MacroContentParser;\n-import org.xwiki.rendering.macro.MacroExecutionException;\n import org.xwiki.rendering.macro.footnote.FootnoteMacroParameters;\n import org.xwiki.rendering.transformation.MacroTransformationContext;\n+import org.xwiki.rendering.util.IdGenerator;\n \n /**\n  * List footnotes at the end of the page.\n@@ -77,11 +82,68 @@ public class PutFootnotesMacro extends AbstractMacro<FootnoteMacroParameters>\n     /** Prefix for the ID of the footnote. */\n     private static final String FOOTNOTE_REFERENCE_ID_PREFIX = \"x_footnote_ref_\";\n \n+    /** Class name for the reference to the footnote. */\n+    private static final String FOOTNOTE_REF_CLASS_NAME = \"footnoteRef\";\n+\n     /**\n-     * Used to parse the content of the macro.\n+     * Internal data structure for representing a footnote.\n      */\n+    private static class Footnote\n+    {\n+        /**\n+         * The HTML id of the footnote.\n+         */\n+        private String id;\n+\n+        /**\n+         * The HTML id of the reference to the footnote (for jumping back).\n+         */\n+        private String referenceId;\n+\n+        /**\n+         * The macro marker block of the footnote macro.\n+         */\n+        private final MacroMarkerBlock macroMarkerBlock;\n+\n+        /**\n+         * The content of the footnote.\n+         */\n+        private CompositeBlock content;\n+\n+        /**\n+         * Create a new footnote for the given footnote macro marker block.\n+         * <p>\n+         * If the only child is a format block with a reference id, the ids are extracted from the format block and\n+         * its link child, otherwise the content of the macro marker is set as content and ids should be set later.\n+         *\n+         * @param macroMarkerBlock the footnote macro marker block\n+         */\n+        Footnote(MacroMarkerBlock macroMarkerBlock)\n+        {\n+            this.macroMarkerBlock = macroMarkerBlock;\n+\n+            if (macroMarkerBlock.getChildren().size() == 1\n+                && macroMarkerBlock.getChildren().get(0) instanceof FormatBlock\n+                && StringUtils.startsWith(macroMarkerBlock.getChildren().get(0).getParameter(ID_ATTRIBUTE_NAME),\n+                FOOTNOTE_REFERENCE_ID_PREFIX))\n+            {\n+                Block formatBlock = macroMarkerBlock.getChildren().get(0);\n+                if (!formatBlock.getChildren().isEmpty() && formatBlock.getChildren().get(0) instanceof LinkBlock) {\n+                    LinkBlock linkBlock = (LinkBlock) formatBlock.getChildren().get(0);\n+                    ResourceReference reference = linkBlock.getReference();\n+                    if (reference instanceof DocumentResourceReference) {\n+                        this.id = ((DocumentResourceReference) reference).getAnchor();\n+                    }\n+                }\n+                this.referenceId = formatBlock.getParameter(ID_ATTRIBUTE_NAME);\n+            } else {\n+                this.content = new CompositeBlock(macroMarkerBlock.getChildren());\n+            }\n+        }\n+    }\n+\n     @Inject\n-    private MacroContentParser contentParser;\n+    private Logger logger;\n \n     /**\n      * Create and initialize the descriptor of the macro.\n@@ -103,69 +165,121 @@ public boolean supportsInlineMode()\n \n     @Override\n     public List<Block> execute(FootnoteMacroParameters parameters, String content, MacroTransformationContext context)\n-        throws MacroExecutionException\n     {\n         List<Block> result = Collections.emptyList();\n \n-        // Get the list of footnotes in the document\n         Block root = context.getXDOM();\n-        List<MacroMarkerBlock> footnotes =\n-            root.getBlocks(new ClassBlockMatcher(MacroMarkerBlock.class), Block.Axes.DESCENDANT);\n-        for (ListIterator<MacroMarkerBlock> it = footnotes.listIterator(); it.hasNext();) {\n-            MacroMarkerBlock macro = it.next();\n-            if (FootnoteMacro.MACRO_NAME.equals(macro.getId())) {\n-                continue;\n-            } else if (PutFootnotesMacro.MACRO_NAME.equals(macro.getId())) {\n-                macro.getParent().replaceChild(Collections.<Block>emptyList(), macro);\n-            }\n-            it.remove();\n+        List<MacroMarkerBlock> macroMarkerBlocks =\n+            root.getBlocks(new MacroMarkerBlockMatcher(PutFootnotesMacro.MACRO_NAME, FootnoteMacro.MACRO_NAME),\n+                Block.Axes.DESCENDANT);\n+\n+        Map<String, Footnote> footnotes = new LinkedHashMap<>();\n+\n+        // Give footnotes without id temporary, numeric ids, we don't need to retrieve them by id.\n+        AtomicInteger temporaryId = new AtomicInteger(0);\n+        // Get the list of footnotes in the document\n+        macroMarkerBlocks.stream()\n+            .filter(macro -> FootnoteMacro.MACRO_NAME.equals(macro.getId()))\n+            .map(Footnote::new)\n+            .forEach(footnote -> footnotes.put(\n+                Objects.requireNonNullElseGet(footnote.id, () -> String.valueOf(temporaryId.getAndIncrement())),\n+                footnote));\n+\n+        // Collect the footnote content from the existing footnote lists and remove them.\n+        macroMarkerBlocks.stream()\n+            .filter(macro -> PutFootnotesMacro.MACRO_NAME.equals(macro.getId()))\n+            .forEach(macro -> collectFootnoteContents(macro, footnotes));\n+\n+        IdGenerator idGenerator = null;\n+        if (context.getXDOM() != null) {\n+            idGenerator = context.getXDOM().getIdGenerator();\n         }\n-        if (footnotes.isEmpty()) {\n-            return result;\n+\n+        if (!footnotes.isEmpty()) {\n+            NumberedListBlock container = new NumberedListBlock(Collections.emptyList());\n+            container.setParameter(CLASS_ATTRIBUTE_NAME, \"footnotes\");\n+            result = Collections.singletonList(container);\n+\n+            int counter = 1;\n+            for (Footnote footnote : footnotes.values()) {\n+                if (footnote.content != null) {\n+                    Block footnoteResult = processFootnote(footnote, counter, idGenerator);\n+                    container.addChild(footnoteResult);\n+                    counter++;\n+                } else {\n+                    this.logger.warn(\"No content for footnote [{}] found, ignoring it.\",\n+                        footnote.macroMarkerBlock);\n+                }\n+            }\n         }\n \n-        NumberedListBlock container = new NumberedListBlock(Collections.<Block>emptyList());\n-        container.setParameter(CLASS_ATTRIBUTE_NAME, \"footnotes\");\n-        Block footnoteResult;\n+        return result;\n+    }\n \n-        int counter = 1;\n-        for (MacroMarkerBlock footnote : footnotes) {\n-            footnoteResult = processFootnote(footnote, counter, context);\n-            if (footnoteResult != null) {\n-                container.addChild(footnoteResult);\n-                counter++;\n+    /**\n+     * Collect and remove footnote contents from the given putFootnotes macro marker block.\n+     *\n+     * @param macro the putFootnotes macro marker block from which footnote contents shall be collected\n+     * @param footnotes the footnotes where the content shall be collected\n+     */\n+    private void collectFootnoteContents(MacroMarkerBlock macro, Map<String, Footnote> footnotes)\n+    {\n+        if (macro.getChildren().size() == 1 && macro.getChildren().get(0) instanceof NumberedListBlock) {\n+            for (Block listItemBlock : macro.getChildren().get(0).getChildren()) {\n+                if (listItemBlock.getChildren().size() == 3\n+                    && listItemBlock.getChildren().get(2) instanceof CompositeBlock\n+                    && StringUtils.startsWith(listItemBlock.getChildren().get(0).getParameter(ID_ATTRIBUTE_NAME),\n+                    FOOTNOTE_ID_PREFIX))\n+                {\n+                    CompositeBlock footnoteContent = (CompositeBlock) listItemBlock.getChildren().get(2);\n+                    String id = listItemBlock.getChildren().get(0).getParameter(ID_ATTRIBUTE_NAME);\n+                    if (footnotes.containsKey(id)) {\n+                        footnotes.get(id).content = footnoteContent;\n+                    } else {\n+                        this.logger.warn(\"Could not find footnote marker for footnote [{}], ignoring it.\",\n+                            footnoteContent);\n+                    }\n+                }\n             }\n         }\n \n-        return Collections.<Block>singletonList(container);\n+        macro.getParent().removeBlock(macro);\n     }\n \n     /**\n-     * Processes a {{footnote}} macro, by generating a footnote element to insert in the footnote list and a reference\n+     * Processes a footnote macro, by generating a footnote element to insert in the footnote list and a reference\n      * to it, which is placed instead of the macro call.\n      *\n-     * @param footnoteMacro the {{footnote}} macro element\n+     * @param footnote the footnote\n      * @param counter the current footnote counter\n-     * @param context the execution context of the macro\n      * @return the footnote element which should be inserted in the footnote list\n-     * @throws MacroExecutionException if the footnote content cannot be further processed\n      */\n-    private ListItemBlock processFootnote(MacroMarkerBlock footnoteMacro, int counter,\n-        MacroTransformationContext context) throws MacroExecutionException\n+    private ListItemBlock processFootnote(Footnote footnote, int counter, IdGenerator idGenerator)\n     {\n-        String content = footnoteMacro.getContent();\n-        if (StringUtils.isBlank(content)) {\n-            content = \" \";\n+        if (footnote.referenceId == null) {\n+            footnote.referenceId = generateId(counter, FOOTNOTE_REFERENCE_ID_PREFIX, idGenerator);\n         }\n+\n+        if (footnote.id == null) {\n+            footnote.id = generateId(counter, FOOTNOTE_ID_PREFIX, idGenerator);\n+        }\n+\n         // Construct the footnote and reference blocks\n-        Block referenceBlock = createFootnoteReferenceBlock(counter);\n-        ListItemBlock footnoteBlock = createFootnoteBlock(content, counter, context);\n+        Block referenceBlock = createFootnoteReferenceBlock(counter, footnote.id, footnote.referenceId);\n+        ListItemBlock footnoteBlock = createFootnoteBlock(footnote.content, footnote.id, footnote.referenceId);\n         // Insert the footnote and the reference in the document.\n-        if (referenceBlock != null && footnoteBlock != null) {\n-            addFootnoteRef(footnoteMacro, referenceBlock);\n-            return footnoteBlock;\n+        addFootnoteRef(footnote.macroMarkerBlock, referenceBlock);\n+        return footnoteBlock;\n+    }\n+\n+    private String generateId(int counter, String idPrefix, IdGenerator idGenerator)\n+    {\n+        String footnoteId = idPrefix + counter;\n+        if (idGenerator != null) {\n+            footnoteId = idGenerator.generateUniqueId(footnoteId.substring(0, 1), footnoteId.substring(1));\n         }\n-        return null;\n+\n+        return footnoteId;\n     }\n \n     /**\n@@ -186,48 +300,42 @@ private void addFootnoteRef(MacroMarkerBlock footnoteMacro, Block footnoteRef)\n      * the actual footnote at the end of the document.\n      *\n      * @param counter the current footnote counter\n+     * @param footnoteId the id of the footnote\n+     * @param referenceId the id of the reference\n      * @return the generated reference element, displayed as {@code (superscript(link(footnote index)))}\n      */\n-    private Block createFootnoteReferenceBlock(int counter)\n+    private Block createFootnoteReferenceBlock(int counter, String footnoteId, String referenceId)\n     {\n         Block result = new WordBlock(String.valueOf(counter));\n         DocumentResourceReference reference = new DocumentResourceReference(null);\n-        reference.setAnchor(FOOTNOTE_ID_PREFIX + counter);\n+        reference.setAnchor(footnoteId);\n         result = new LinkBlock(Collections.singletonList(result), reference, false);\n         result = new FormatBlock(Collections.singletonList(result), Format.SUPERSCRIPT);\n-        result.setParameter(ID_ATTRIBUTE_NAME, FOOTNOTE_REFERENCE_ID_PREFIX + counter);\n-        result.setParameter(CLASS_ATTRIBUTE_NAME, \"footnoteRef\");\n+        result.setParameter(ID_ATTRIBUTE_NAME, referenceId);\n+        result.setParameter(CLASS_ATTRIBUTE_NAME, FOOTNOTE_REF_CLASS_NAME);\n         return result;\n     }\n \n     /**\n      * Generate the footnote block, a numbered list item containing a backlink to the footnote's reference, and the\n-     * actual footnote text, parsed into XDOM.\n+     * actual footnote content.\n      *\n-     * @param content the string representation of the actual footnote text; the content of the macro\n-     * @param counter the current footnote counter\n-     * @param context the macro transformation context, used for obtaining the correct parser for parsing the content\n+     * @param content the block with the actual footnote content\n+     * @param footnoteId the id of the footnote\n+     * @param referenceId the id of the reference\n      * @return the generated footnote block\n-     * @throws MacroExecutionException if parsing the content fails\n      */\n-    private ListItemBlock createFootnoteBlock(String content, int counter, MacroTransformationContext context)\n-        throws MacroExecutionException\n+    private ListItemBlock createFootnoteBlock(CompositeBlock content, String footnoteId, String referenceId)\n     {\n-        List<Block> parsedContent;\n-        try {\n-            parsedContent = this.contentParser.parse(content, context, false, true).getChildren();\n-        } catch (MacroExecutionException e) {\n-            parsedContent = Collections.<Block>singletonList(new WordBlock(content));\n-        }\n         Block result = new WordBlock(\"^\");\n         DocumentResourceReference reference = new DocumentResourceReference(null);\n-        reference.setAnchor(FOOTNOTE_REFERENCE_ID_PREFIX + counter);\n+        reference.setAnchor(referenceId);\n         result = new LinkBlock(Collections.singletonList(result), reference, false);\n-        result.setParameter(ID_ATTRIBUTE_NAME, FOOTNOTE_ID_PREFIX + counter);\n+        result.setParameter(ID_ATTRIBUTE_NAME, footnoteId);\n         result.setParameter(CLASS_ATTRIBUTE_NAME, \"footnoteBackRef\");\n         result = new ListItemBlock(Collections.singletonList(result));\n         result.addChild(new SpaceBlock());\n-        result.addChildren(parsedContent);\n+        result.addChild(content);\n         return (ListItemBlock) result;\n     }\n }"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/test/java/org/xwiki/rendering/macro/footnote/ExecutedContentMacro.java",
          "status": "added",
          "additions": 75,
          "deletions": 0,
          "patch": "@@ -0,0 +1,75 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.rendering.macro.footnote;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.rendering.block.Block;\n+import org.xwiki.rendering.macro.AbstractNoParameterMacro;\n+import org.xwiki.rendering.macro.MacroContentParser;\n+import org.xwiki.rendering.macro.MacroExecutionException;\n+import org.xwiki.rendering.macro.descriptor.DefaultContentDescriptor;\n+import org.xwiki.rendering.transformation.MacroTransformationContext;\n+\n+/**\n+ * Executed content macro used in some {@code *.test} files.\n+ * <p>\n+ * This macro executes its content and thus allows putFootnotes macros to be executed early.\n+ *\n+ * @version $Id$\n+ */\n+@Component\n+@Named(\"executedcontent\")\n+@Singleton\n+public class ExecutedContentMacro extends AbstractNoParameterMacro\n+{\n+    /**\n+     * The parser used to parse the content.\n+     */\n+    @Inject\n+    private MacroContentParser contentParser;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public ExecutedContentMacro()\n+    {\n+        super(\"Executed Content Macro\", \"Executes its content.\",\n+            new DefaultContentDescriptor(\"Content\", true, Block.LIST_BLOCK_TYPE));\n+    }\n+\n+    @Override\n+    public boolean supportsInlineMode()\n+    {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<Block> execute(Object parameters, String content, MacroTransformationContext context)\n+        throws MacroExecutionException\n+    {\n+        return this.contentParser.parse(content, context, true, context.isInline()).getChildren();\n+    }\n+}"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/test/resources/META-INF/components.txt",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+org.xwiki.rendering.macro.footnote.ExecutedContentMacro\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/test/resources/macrofootnote3.test",
          "status": "modified",
          "additions": 20,
          "deletions": 7,
          "patch": "@@ -13,24 +13,37 @@ beginParagraph\n onWord [Nested]\n onSpace\n beginMacroMarkerInline [footnote] [] [footnote{{footnote}} content]\n-beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n-beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-1]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-1]]] [false]\n onWord [1]\n-endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n-endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-1]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-1]]\n endMacroMarkerInline [footnote] [] [footnote{{footnote}} content]\n endParagraph\n beginMacroMarkerStandalone [putFootnotes] []\n beginList [NUMBERED] [[class]=[footnotes]]\n beginListItem\n-beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-1]]\n onWord [^]\n-endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-1]]\n onSpace\n onWord [footnote]\n beginMacroMarkerInline [footnote] [] [ content]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n+onWord [2]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n endMacroMarkerInline [footnote] [] [ content]\n endListItem\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+onSpace\n+onSpace\n+onWord [content]\n+endListItem\n endList [NUMBERED] [[class]=[footnotes]]\n endMacroMarkerStandalone [putFootnotes] []\n-endDocument\n+endDocument\n\\ No newline at end of file"
        },
        {
          "filename": "xwiki-rendering-macros/xwiki-rendering-macro-footnotes/src/test/resources/macrofootnote6.test",
          "status": "added",
          "additions": 138,
          "deletions": 0,
          "patch": "@@ -0,0 +1,138 @@\n+.runTransformations\n+.#-----------------------------------------------------\n+.input|xwiki/2.0\n+.# Verify that several footnotes and putFootnotes markers work.\n+.#-----------------------------------------------------\n+Footnote{{footnote}}content 1{{/footnote}} {{footnote}}content 2{{/footnote}}\n+\n+{{putFootnotes/}}\n+\n+{{executedcontent}}\n+{{footnote}}Inner footnote{{/footnote}}\n+{{/executedcontent}}\n+\n+{{executedcontent}}\n+{{footnote}}Second inner footnote{{/footnote}}\n+{{/executedcontent}}\n+\n+\n+{{footnote}}These are the footnotes:\n+\n+{{putFootnotes/}}\n+\n+{{/footnote}}\n+\n+{{putFootnotes/}}\n+.#-----------------------------------------------------\n+.expect|event/1.0\n+.#-----------------------------------------------------\n+beginDocument\n+beginParagraph\n+onWord [Footnote]\n+beginMacroMarkerInline [footnote] [] [content 1]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-2]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-2]]] [false]\n+onWord [1]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-2]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-2]]\n+endMacroMarkerInline [footnote] [] [content 1]\n+onSpace\n+beginMacroMarkerInline [footnote] [] [content 2]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_2]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_2]]] [false]\n+onWord [2]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_2]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_2]]\n+endMacroMarkerInline [footnote] [] [content 2]\n+endParagraph\n+beginMacroMarkerStandalone [executedcontent] [] [{{footnote}}Inner footnote{{/footnote}}]\n+beginMacroMarkerStandalone [footnote] [] [Inner footnote]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n+onWord [3]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1]]\n+endMacroMarkerStandalone [footnote] [] [Inner footnote]\n+endMacroMarkerStandalone [executedcontent] [] [{{footnote}}Inner footnote{{/footnote}}]\n+beginMacroMarkerStandalone [executedcontent] [] [{{footnote}}Second inner footnote{{/footnote}}]\n+beginMacroMarkerStandalone [footnote] [] [Second inner footnote]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-1]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-1]]] [false]\n+onWord [4]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_1-1]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_1-1]]\n+endMacroMarkerStandalone [footnote] [] [Second inner footnote]\n+endMacroMarkerStandalone [executedcontent] [] [{{footnote}}Second inner footnote{{/footnote}}]\n+onEmptyLines [1]\n+beginMacroMarkerStandalone [footnote] [] [These are the footnotes:\n+\n+{{putFootnotes/}}\n+]\n+beginFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_5]]\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_5]]] [false]\n+onWord [5]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_5]]] [false]\n+endFormat [SUPERSCRIPT] [[class]=[footnoteRef][id]=[x_footnote_ref_5]]\n+endMacroMarkerStandalone [footnote] [] [These are the footnotes:\n+\n+{{putFootnotes/}}\n+]\n+beginMacroMarkerStandalone [putFootnotes] []\n+beginList [NUMBERED] [[class]=[footnotes]]\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-2]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-2]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-2]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-2]]\n+onSpace\n+onWord [content]\n+onSpace\n+onWord [1]\n+endListItem\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_2]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_2]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_2]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_2]]\n+onSpace\n+onWord [content]\n+onSpace\n+onWord [2]\n+endListItem\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1]]\n+onSpace\n+onWord [Inner]\n+onSpace\n+onWord [footnote]\n+endListItem\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-1]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_1-1]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_1-1]]\n+onSpace\n+onWord [Second]\n+onSpace\n+onWord [inner]\n+onSpace\n+onWord [footnote]\n+endListItem\n+beginListItem\n+beginLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_5]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_5]]\n+onWord [^]\n+endLink [Typed = [true] Type = [doc] Parameters = [[anchor] = [x_footnote_ref_5]]] [false] [[class]=[footnoteBackRef][id]=[x_footnote_5]]\n+onSpace\n+beginParagraph\n+onWord [These]\n+onSpace\n+onWord [are]\n+onSpace\n+onWord [the]\n+onSpace\n+onWord [footnotes]\n+onSpecialSymbol [:]\n+endParagraph\n+endListItem\n+endList [NUMBERED] [[class]=[footnotes]]\n+endMacroMarkerStandalone [putFootnotes] []\n+endDocument"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 6,
        "max_directory_depth": 11
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "92d286fe9c6aefd715d03921c2988433504118cd",
            "date": "2025-01-10T12:59:46Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "891a0a0c7b3af8eb17ef5331ab3431f7c7ca7a5e",
            "date": "2025-01-09T14:50:47Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "40c52310238ed3385e15abdffde6a8fe7789e338",
            "date": "2024-12-13T09:53:28Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "1becaee2355b2947804fbf7c36e977a0c99f5b64",
            "date": "2024-12-13T08:10:46Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "7acc35338dc3f6739080ffe56a25c1a282f081e9",
            "date": "2024-12-12T17:34:45Z",
            "author_login": "renovate-bot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-270",
    "description": "XWiki Rendering is a generic Rendering system that converts textual input in a given syntax into another syntax. Prior to version 14.10.6 of `org.xwiki.platform:xwiki-core-rendering-macro-footnotes` and `org.xwiki.platform:xwiki-rendering-macro-footnotes` and prior to version 15.1-rc-1 of `org.xwiki.platform:xwiki-rendering-macro-footnotes`, the footnote macro executed its content in a potentially different context than the one in which it was defined. In particular in combination with the include macro, this allows privilege escalation from a simple user account in XWiki to programming rights and thus remote code execution, impacting the confidentiality, integrity and availability of the whole XWiki installation. This vulnerability has been patched in XWiki 14.10.6 and 15.1-rc-1. There is no workaround apart from upgrading to a fixed version of the footnote macro.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-25T18:17:28.613",
    "last_modified": "2024-11-21T08:12:27.327",
    "fix_date": "2023-02-16T12:46:00Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-rendering/commit/5f558b8fac8b716d19999225f38cb8ed0814116e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-rendering/security/advisories/GHSA-35j5-m29r-xfq5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XRENDERING-688",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-rendering/commit/5f558b8fac8b716d19999225f38cb8ed0814116e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-rendering/security/advisories/GHSA-35j5-m29r-xfq5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XRENDERING-688",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.927578",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-rendering",
    "owner": "xwiki",
    "created_at": "2011-02-24T10:25:20Z",
    "updated_at": "2025-01-10T12:59:50Z",
    "pushed_at": "2025-01-10T13:00:48Z",
    "size": 15023,
    "stars": 72,
    "forks": 80,
    "open_issues": 7,
    "watchers": 72,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-14.10.x",
      "stable-15.10.x",
      "stable-16.4.x",
      "stable-16.10.x"
    ],
    "languages": {
      "Java": 3229064,
      "AspectJ": 12229,
      "Groovy": 1367
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T17:53:36.375300"
  }
}