{
  "cve_id": "CVE-2023-37914",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "ff1d8a1790c6ee534c6a4478360a06efeb2d3591",
    "related_commits": [
      "ff1d8a1790c6ee534c6a4478360a06efeb2d3591",
      "ff1d8a1790c6ee534c6a4478360a06efeb2d3591"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/ff1d8a1790c6ee534c6a4478360a06efeb2d3591.patch",
    "fix_commit_details": {
      "sha": "ff1d8a1790c6ee534c6a4478360a06efeb2d3591",
      "commit_date": "2023-02-28T16:13:51Z",
      "author": {
        "login": "manuelleduc",
        "type": "User",
        "stats": {
          "total_commits": 953,
          "average_weekly_commits": 0.9989517819706499,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 179
        }
      },
      "commit_message": {
        "title": "XWIKI-20421: Improved escaping of subjectLineTemplate",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 69,
        "additions": 53,
        "deletions": 16
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -825,7 +825,7 @@ $services.localization.render('xe.invitation.emailContent.reportMessage', [\"&lt;\n       <smtp_server_username/>\n     </property>\n     <property>\n-      <subjectLineTemplate>{{velocity}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll(\"^[^\\.]*.\", \"\"), $xwiki.getRequestURL().replaceAll(\"https?://([^/:]*).*$\", \"$1\"), $!subjectLine]){{/velocity}}</subjectLineTemplate>\n+      <subjectLineTemplate>{{velocity wiki='false'}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll(\"^[^\\.]*.\", \"\"), $xwiki.getRequestURL().replaceAll(\"https?://([^/:]*).*$\", \"$1\"), $!subjectLine]){{/velocity}}</subjectLineTemplate>\n     </property>\n     <property>\n       <usersMayPersonalizeMessage>1</usersMayPersonalizeMessage>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -420,7 +420,7 @@ $services.localization.render('xe.invitation.emailContent.reportMessage', [\"&lt;\n       <smtp_server_username/>\n     </property>\n     <property>\n-      <subjectLineTemplate>{{velocity}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll(\"^[^\\.]*.\", \"\"), $xwiki.getRequestURL().replaceAll(\"https?://([^/:]*).*$\", \"$1\"), $!subjectLine]){{/velocity}}</subjectLineTemplate>\n+      <subjectLineTemplate>{{velocity wiki='false'}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll(\"^[^\\.]*.\", \"\"), $xwiki.getRequestURL().replaceAll(\"https?://([^/:]*).*$\", \"$1\"), $!subjectLine]){{/velocity}}</subjectLineTemplate>\n     </property>\n     <property>\n       <usersMayPersonalizeMessage>1</usersMayPersonalizeMessage>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java",
          "status": "modified",
          "additions": 31,
          "deletions": 12,
          "patch": "@@ -33,7 +33,6 @@\n import org.xwiki.rendering.internal.configuration.DefaultRenderingConfigurationComponentList;\n import org.xwiki.rendering.internal.macro.message.ErrorMessageMacro;\n import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n-import org.xwiki.rendering.syntax.Syntax;\n import org.xwiki.script.ScriptContextManager;\n import org.xwiki.security.authorization.AuthorizationManager;\n import org.xwiki.test.annotation.ComponentList;\n@@ -51,6 +50,9 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.Mockito.when;\n+import static org.xwiki.rendering.syntax.Syntax.PLAIN_1_0;\n+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_0;\n+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_1;\n \n /**\n  * Test of {@code Invitation.InvitationCommon}.\n@@ -73,6 +75,9 @@\n })\n class InvitationCommonPageTest extends PageTest\n {\n+    public static final DocumentReference INVITATION_COMMON_REFERENCE =\n+        new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n+\n     private ScriptContext scriptContext;\n \n     @BeforeEach\n@@ -91,8 +96,7 @@ void testEq0() throws Exception\n         this.context.setDoc(this.xwiki.getDocument(\n             new DocumentReference(\"xwiki\", \"]]  {{noscript/}}\", \"InvitationCommon\"), this.context));\n \n-        DocumentReference invitationCommonReference = new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n-        Document document = Jsoup.parse(loadPage(invitationCommonReference).getRenderedContent(this.context));\n+        Document document = Jsoup.parse(loadPage(INVITATION_COMMON_REFERENCE).getRenderedContent(this.context));\n         assertEquals(\"xe.invitation.internalDocument []] {{noscript/}}.WebHome]\",\n             document.selectFirst(\".infomessage\").text());\n     }\n@@ -101,7 +105,6 @@ void testEq0() throws Exception\n     void testEq1ConfigClassIsNew() throws Exception\n     {\n         String spaceName = \"<script>console.log</script>]]{{noscript/}}\";\n-        DocumentReference invitationCommonReference = new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n \n         XWikiDocument doc =\n             this.xwiki.getDocument(new DocumentReference(\"xwiki\", spaceName, \"InvitationCommon\"), this.context);\n@@ -110,7 +113,7 @@ void testEq1ConfigClassIsNew() throws Exception\n \n         this.request.put(\"test\", \"1\");\n \n-        Document document = Jsoup.parse(loadPage(invitationCommonReference).getRenderedContent(this.context));\n+        Document document = Jsoup.parse(loadPage(INVITATION_COMMON_REFERENCE).getRenderedContent(this.context));\n \n         assertEquals(\"testLoadInvitationConfig\", document.selectFirst(\".infomessage\").text());\n         Element errorMessage = document.selectFirst(\".errormessage\");\n@@ -148,7 +151,7 @@ void testEq1ConfigClassExistsInvalidFromAddress() throws Exception\n \n         this.request.put(\"test\", \"1\");\n \n-        XWikiDocument invitationCommonDoc = loadPage(new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\"));\n+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);\n         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));\n \n         assertEquals(\"testLoadInvitationConfig\", document.selectFirst(\".infomessage\").text());\n@@ -187,8 +190,7 @@ void testEq1ConfigClassExistsConfigMapTooSmall() throws Exception\n \n         this.request.put(\"test\", \"1\");\n \n-        DocumentReference reference = new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n-        XWikiDocument invitationCommonDoc = loadPage(reference);\n+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);\n         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));\n \n         assertEquals(\"testLoadInvitationConfig\", document.selectFirst(\".infomessage\").text());\n@@ -229,8 +231,7 @@ void testEq1ConfigClassExistsNewInvitationConfig() throws Exception\n \n         this.request.put(\"test\", \"1\");\n \n-        DocumentReference reference = new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\");\n-        XWikiDocument invitationCommonDoc = loadPage(reference);\n+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);\n         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));\n \n         assertEquals(\"testLoadInvitationConfig\", document.selectFirst(\".infomessage\").text());\n@@ -241,15 +242,15 @@ void testEq1ConfigClassExistsNewInvitationConfig() throws Exception\n     @Test\n     void displayMessageVelocityMacro() throws Exception\n     {\n-        loadPage(new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationCommon\"));\n+        loadPage(INVITATION_COMMON_REFERENCE);\n         DocumentReference invitationMailClassDocumentReference =\n             new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationMailClass\");\n         loadPage(invitationMailClassDocumentReference);\n \n         XWikiDocument page = this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", \"Page\"), this.context);\n         BaseObject invitationMailXObject = page.newXObject(invitationMailClassDocumentReference, this.context);\n         invitationMailXObject.set(\"messageBody\", \"<strong>message body</strong>\", this.context);\n-        page.setSyntax(Syntax.XWIKI_2_1);\n+        page.setSyntax(XWIKI_2_1);\n         page.setContent(\"{{include reference=\\\"Invitation.InvitationCommon\\\"/}}\\n\"\n             + \"\\n\"\n             + \"{{velocity}}\\n\"\n@@ -262,4 +263,22 @@ void displayMessageVelocityMacro() throws Exception\n         Document document = renderHTMLPage(page);\n         assertEquals(\"<strong>message body</strong>\", document.selectFirst(\"#preview-messagebody-field\").html());\n     }\n+\n+    /**\n+     * Check if the value of subjectLine correctly escape its parameters.\n+     */\n+    @Test\n+    void subjectLineTemplate() throws Exception\n+    {\n+        com.xpn.xwiki.api.Document invitationCommonDocument =\n+            new com.xpn.xwiki.api.Document(loadPage(INVITATION_COMMON_REFERENCE), this.context);\n+        String value = String.valueOf(\n+            invitationCommonDocument.getObject(\"xwiki:Invitation.WebHome\").getProperty(\"subjectLineTemplate\")\n+                .getValue());\n+        this.oldcore.getScriptContext().setAttribute(\"subjectLine\", \"{{noscript/}}\", GLOBAL_SCOPE);\n+        com.xpn.xwiki.api.Document testDocument = new com.xpn.xwiki.api.Document(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", \"Test\"), this.context), this.context);\n+        String renderedContent = testDocument.getRenderedContent(value, XWIKI_2_0.toIdString(), PLAIN_1_0.toIdString());\n+        assertEquals(\"xe.invitation.emailContent.subjectLine [XWikiGuest, null, {{noscript/}}]\", renderedContent);\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java",
          "status": "modified",
          "additions": 20,
          "deletions": 2,
          "patch": "@@ -36,7 +36,10 @@\n \n import com.xpn.xwiki.doc.XWikiDocument;\n \n+import static javax.script.ScriptContext.GLOBAL_SCOPE;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.xwiki.rendering.syntax.Syntax.PLAIN_1_0;\n+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_0;\n \n /**\n  * Test of {@code Invitation.InvitationConfig}.\n@@ -59,13 +62,13 @@\n })\n class InvitationConfigPageTest extends PageTest\n {\n-    private static final DocumentReference INVITATION_CONFIG_DOCUMENT_REFERENCE =\n+    private static final DocumentReference INVITATION_CONFIG_REFERENCE =\n         new DocumentReference(\"xwiki\", \"Invitation\", \"InvitationConfig\");\n \n     @Test\n     void escapeInfoMessageInternalDocumentParameter() throws Exception\n     {\n-        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_CONFIG_DOCUMENT_REFERENCE);\n+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_CONFIG_REFERENCE);\n \n         // Set up the current doc in the context so that $doc is bound in scripts\n         this.context.setDoc(\n@@ -75,4 +78,19 @@ void escapeInfoMessageInternalDocumentParameter() throws Exception\n         Element infomessage = document.selectFirst(\".infomessage\");\n         assertEquals(\"xe.invitation.internalDocument [Invitation.WebHome]\", infomessage.text());\n     }\n+\n+    @Test\n+    void subjectLineTemplate() throws Exception\n+    {\n+        com.xpn.xwiki.api.Document invitationConfigDocument =\n+            new com.xpn.xwiki.api.Document(loadPage(INVITATION_CONFIG_REFERENCE), this.context);\n+        String value = String.valueOf(\n+            invitationConfigDocument.getObject(\"xwiki:Invitation.WebHome\").getProperty(\"subjectLineTemplate\")\n+                .getValue());\n+        this.oldcore.getScriptContext().setAttribute(\"subjectLine\", \"{{noscript/}}\", GLOBAL_SCOPE);\n+        com.xpn.xwiki.api.Document testDocument = new com.xpn.xwiki.api.Document(\n+            this.xwiki.getDocument(new DocumentReference(\"xwiki\", \"Space\", \"Test\"), this.context), this.context);\n+        String renderedContent = testDocument.getRenderedContent(value, XWIKI_2_0.toIdString(), PLAIN_1_0.toIdString());\n+        assertEquals(\"xe.invitation.emailContent.subjectLine [XWikiGuest, null, {{noscript/}}]\", renderedContent);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-94",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user who can view `Invitation.WebHome` can execute arbitrary script macros including Groovy and Python macros that allow remote code execution including unrestricted read and write access to all wiki contents. This vulnerability has been patched on XWiki 14.4.8, 15.2-rc-1, and 14.10.6. Users are advised to upgrade. Users unable to upgrade may manually apply the patch on `Invitation.InvitationCommon` and `Invitation.InvitationConfig`, but there are otherwise no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-08-17T18:15:14.810",
    "last_modified": "2024-11-21T08:12:27.607",
    "fix_date": "2023-02-28T16:13:51Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/ff1d8a1790c6ee534c6a4478360a06efeb2d3591",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-7954-6m9q-gpvf",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20421",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/ff1d8a1790c6ee534c6a4478360a06efeb2d3591",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-7954-6m9q-gpvf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20421",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:06.438160",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}