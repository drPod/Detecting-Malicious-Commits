{
  "cve_id": "CVE-2023-38489",
  "github_data": {
    "repository": "getkirby/kirby",
    "fix_commit": "7a0a2014c69fdb925ea02f30e7793bb50115e931",
    "related_commits": [
      "7a0a2014c69fdb925ea02f30e7793bb50115e931",
      "7a0a2014c69fdb925ea02f30e7793bb50115e931"
    ],
    "patch_url": "https://github.com/getkirby/kirby/commit/7a0a2014c69fdb925ea02f30e7793bb50115e931.patch",
    "fix_commit_details": {
      "sha": "7a0a2014c69fdb925ea02f30e7793bb50115e931",
      "commit_date": "2023-07-23T19:37:48Z",
      "author": {
        "login": "lukasbestle",
        "type": "User",
        "stats": {
          "total_commits": 1397,
          "average_weekly_commits": 4.449044585987261,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 202
        }
      },
      "commit_message": {
        "title": "Invalidate session on password change",
        "length": 112,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 235,
        "additions": 217,
        "deletions": 18
      },
      "files": [
        {
          "filename": "src/Cms/Auth.php",
          "status": "modified",
          "additions": 27,
          "deletions": 6,
          "patch": "@@ -279,18 +279,39 @@ public function currentUserFromSession($session = null)\n \n \t\t$id = $session->data()->get('kirby.userId');\n \n+\t\t// if no user is logged in, return immediately\n \t\tif (is_string($id) !== true) {\n \t\t\treturn null;\n \t\t}\n \n-\t\tif ($user = $this->kirby->users()->find($id)) {\n-\t\t\t// in case the session needs to be updated, do it now\n-\t\t\t// for better performance\n-\t\t\t$session->commit();\n-\t\t\treturn $user;\n+\t\t// a user is logged in, ensure it exists\n+\t\t$user = $this->kirby->users()->find($id);\n+\t\tif ($user === null) {\n+\t\t\treturn null;\n \t\t}\n \n-\t\treturn null;\n+\t\tif ($passwordTimestamp = $user->passwordTimestamp()) {\n+\t\t\t$loginTimestamp = $session->data()->get('kirby.loginTimestamp');\n+\t\t\tif (is_int($loginTimestamp) !== true) {\n+\t\t\t\t// session that was created before Kirby\n+\t\t\t\t// 3.5.8.3, 3.6.6.3, 3.7.5.2, 3.8.4.1 or 3.9.6\n+\t\t\t\t// or when the user didn't have a password set\n+\t\t\t\t$user->logout();\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\t// invalidate the session if the password\n+\t\t\t// changed since the login\n+\t\t\tif ($loginTimestamp < $passwordTimestamp) {\n+\t\t\t\t$user->logout();\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t}\n+\n+\t\t// in case the session needs to be updated, do it now\n+\t\t// for better performance\n+\t\t$session->commit();\n+\t\treturn $user;\n \t}\n \n \t/**"
        },
        {
          "filename": "src/Cms/User.php",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -441,6 +441,9 @@ public function loginPasswordless($session = null): void\n \n \t\t$session->regenerateToken(); // privilege change\n \t\t$session->data()->set('kirby.userId', $this->id());\n+\t\tif ($this->passwordTimestamp() !== null) {\n+\t\t\t$session->data()->set('kirby.loginTimestamp', time());\n+\t\t}\n \t\t$this->kirby()->auth()->setUser($this);\n \n \t\t$kirby->trigger('user.login:after', ['user' => $this, 'session' => $session]);\n@@ -461,6 +464,7 @@ public function logout($session = null): void\n \n \t\t// remove the user from the session for future requests\n \t\t$session->data()->remove('kirby.userId');\n+\t\t$session->data()->remove('kirby.loginTimestamp');\n \n \t\t// clear the cached user object from the app state of the current request\n \t\t$this->kirby()->auth()->flush();\n@@ -607,6 +611,26 @@ public function password(): string|null\n \t\treturn $this->password = $this->readPassword();\n \t}\n \n+\t/**\n+\t * Returns the timestamp when the password\n+\t * was last changed\n+\t */\n+\tpublic function passwordTimestamp(): int|null\n+\t{\n+\t\t$file = $this->passwordFile();\n+\n+\t\t// ensure we have the latest information\n+\t\t// to prevent cache attacks\n+\t\tclearstatcache();\n+\n+\t\t// user does not have a password\n+\t\tif (is_file($file) === false) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\treturn filemtime($file);\n+\t}\n+\n \t/**\n \t * @return \\Kirby\\Cms\\UserPermissions\n \t */\n@@ -881,4 +905,12 @@ public function validatePassword(\n \n \t\treturn true;\n \t}\n+\n+\t/**\n+\t * Returns the path to the password file\n+\t */\n+\tprotected function passwordFile(): string\n+\t{\n+\t\treturn $this->root() . '/.htpasswd';\n+\t}\n }"
        },
        {
          "filename": "src/Cms/UserActions.php",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -118,6 +118,13 @@ public function changePassword(\n \t\t\t// update the users collection\n \t\t\t$user->kirby()->users()->set($user->id(), $user);\n \n+\t\t\t// keep the user logged in to the current browser\n+\t\t\t// if they changed their own password\n+\t\t\t// (regenerate the session token, update the login timestamp)\n+\t\t\tif ($user->isLoggedIn() === true) {\n+\t\t\t\t$user->loginPasswordless();\n+\t\t\t}\n+\n \t\t\treturn $user;\n \t\t});\n \t}\n@@ -323,7 +330,7 @@ protected function readCredentials(): array\n \t */\n \tprotected function readPassword()\n \t{\n-\t\treturn F::read($this->root() . '/.htpasswd');\n+\t\treturn F::read($this->passwordFile());\n \t}\n \n \t/**\n@@ -384,6 +391,6 @@ protected function writePassword(\n \t\t#[SensitiveParameter]\n \t\tstring $password = null\n \t): bool {\n-\t\treturn F::write($this->root() . '/.htpasswd', $password);\n+\t\treturn F::write($this->passwordFile(), $password);\n \t}\n }"
        },
        {
          "filename": "tests/Cms/Auth/AuthTest.php",
          "status": "modified",
          "additions": 52,
          "deletions": 7,
          "patch": "@@ -5,6 +5,7 @@\n use Kirby\\Exception\\NotFoundException;\n use Kirby\\Exception\\PermissionException;\n use Kirby\\Filesystem\\Dir;\n+use Kirby\\Filesystem\\F;\n use Kirby\\Session\\AutoSession;\n use Throwable;\n \n@@ -15,13 +16,13 @@ class AuthTest extends TestCase\n {\n \tprotected $app;\n \tprotected $auth;\n-\tprotected $fixtures;\n+\tprotected $tmp;\n \n \tpublic function setUp(): void\n \t{\n \t\t$this->app = new App([\n \t\t\t'roots' => [\n-\t\t\t\t'index' => $this->fixtures = __DIR__ . '/fixtures/AuthTest'\n+\t\t\t\t'index' => $this->tmp = __DIR__ . '/tmp'\n \t\t\t],\n \t\t\t'options' => [\n \t\t\t\t'api' => [\n@@ -41,19 +42,21 @@ public function setUp(): void\n \t\t\t\t[\n \t\t\t\t\t'email'    => 'homer@simpsons.com',\n \t\t\t\t\t'id'       => 'homer',\n-\t\t\t\t\t'password' => password_hash('springfield123', PASSWORD_DEFAULT)\n+\t\t\t\t\t'password' => $hash = password_hash('springfield123', PASSWORD_DEFAULT)\n \t\t\t\t]\n \t\t\t]\n \t\t]);\n-\t\tDir::make($this->fixtures . '/site/accounts');\n+\t\tDir::make($this->tmp . '/site/accounts/homer');\n+\t\tF::write($this->tmp . '/site/accounts/homer/.htpasswd', $hash);\n+\t\ttouch($this->tmp . '/site/accounts/homer/.htpasswd', 1337000000);\n \n \t\t$this->auth = $this->app->auth();\n \t}\n \n \tpublic function tearDown(): void\n \t{\n \t\t$this->app->session()->destroy();\n-\t\tDir::remove($this->fixtures);\n+\t\tDir::remove($this->tmp);\n \t\tApp::destroy();\n \t}\n \n@@ -254,7 +257,7 @@ public function testTypeSession()\n \t * @covers ::status\n \t * @covers ::user\n \t */\n-\tpublic function testUserSession1()\n+\tpublic function testUserSession()\n \t{\n \t\t$session = $this->app->session();\n \t\t$session->set('kirby.userId', 'marge');\n@@ -286,10 +289,11 @@ public function testUserSession1()\n \t * @covers ::status\n \t * @covers ::user\n \t */\n-\tpublic function testUserSession2()\n+\tpublic function testUserSessionManualSession()\n \t{\n \t\t$session = (new AutoSession($this->app->root('sessions')))->createManually();\n \t\t$session->set('kirby.userId', 'homer');\n+\t\t$session->set('kirby.loginTimestamp', 1337000000);\n \n \t\t$user = $this->auth->user($session);\n \t\t$this->assertSame('homer@simpsons.com', $user->email());\n@@ -300,6 +304,47 @@ public function testUserSession2()\n \t\t], $this->auth->status()->toArray());\n \t}\n \n+\t/**\n+\t * @covers ::status\n+\t * @covers ::user\n+\t */\n+\tpublic function testUserSessionOldTimestamp()\n+\t{\n+\t\t$session = $this->app->session();\n+\t\t$session->set('kirby.userId', 'homer');\n+\t\t$session->set('kirby.loginTimestamp', 1000000000);\n+\n+\t\t$this->assertNull($this->auth->user());\n+\t\t$this->assertSame([\n+\t\t\t'challenge' => null,\n+\t\t\t'email'     => null,\n+\t\t\t'status'    => 'inactive'\n+\t\t], $this->auth->status()->toArray());\n+\n+\t\t// user should be logged out completely\n+\t\t$this->assertSame([], $session->data()->get());\n+\t}\n+\n+\t/**\n+\t * @covers ::status\n+\t * @covers ::user\n+\t */\n+\tpublic function testUserSessionNoTimestamp()\n+\t{\n+\t\t$session = $this->app->session();\n+\t\t$session->set('kirby.userId', 'homer');\n+\n+\t\t$this->assertNull($this->auth->user());\n+\t\t$this->assertSame([\n+\t\t\t'challenge' => null,\n+\t\t\t'email'     => null,\n+\t\t\t'status'    => 'inactive'\n+\t\t], $this->auth->status()->toArray());\n+\n+\t\t// user should be logged out completely\n+\t\t$this->assertSame([], $session->data()->get());\n+\t}\n+\n \t/**\n \t * @covers ::status\n \t * @covers ::user"
        },
        {
          "filename": "tests/Cms/Users/UserActionsTest.php",
          "status": "modified",
          "additions": 42,
          "deletions": 3,
          "patch": "@@ -42,6 +42,7 @@ public function setUp(): void\n \n \tpublic function tearDown(): void\n \t{\n+\t\t$this->app->session()->destroy();\n \t\tDir::remove($this->tmp);\n \t}\n \n@@ -390,15 +391,53 @@ public function testChangePasswordHooks()\n \t\t\t\t'user.changePassword:after' => function (User $newUser, User $oldUser) use ($phpunit, &$calls) {\n \t\t\t\t\t$phpunit->assertTrue($newUser->validatePassword('topsecret2018'));\n \t\t\t\t\t$phpunit->assertEmpty($oldUser->password());\n-\t\t\t\t\t$calls++;\n-\t\t\t\t}\n+\t\t\t\t\t$calls += 2;\n+\t\t\t\t},\n+\t\t\t\t'user.login:before' => function () use (&$calls) {\n+\t\t\t\t\t$calls += 4;\n+\t\t\t\t},\n+\t\t\t\t'user.login:after' => function () use (&$calls) {\n+\t\t\t\t\t$calls += 8;\n+\t\t\t\t},\n \t\t\t]\n \t\t]);\n \n \t\t$user = $app->user('editor@domain.com');\n \t\t$user->changePassword('topsecret2018');\n \n-\t\t$this->assertSame(2, $calls);\n+\t\t$this->assertSame(3, $calls);\n+\t}\n+\n+\tpublic function testChangePasswordHooksCurrentUser()\n+\t{\n+\t\t$calls = 0;\n+\t\t$phpunit = $this;\n+\n+\t\t$this->app = $this->app->clone([\n+\t\t\t'hooks' => [\n+\t\t\t\t'user.changePassword:before' => function (User $user, $password) use ($phpunit, &$calls) {\n+\t\t\t\t\t$phpunit->assertEmpty($user->password());\n+\t\t\t\t\t$phpunit->assertSame('topsecret2018', $password);\n+\t\t\t\t\t$calls++;\n+\t\t\t\t},\n+\t\t\t\t'user.changePassword:after' => function (User $newUser, User $oldUser) use ($phpunit, &$calls) {\n+\t\t\t\t\t$phpunit->assertTrue($newUser->validatePassword('topsecret2018'));\n+\t\t\t\t\t$phpunit->assertEmpty($oldUser->password());\n+\t\t\t\t\t$calls += 2;\n+\t\t\t\t},\n+\t\t\t\t'user.login:before' => function () use (&$calls) {\n+\t\t\t\t\t$calls += 4;\n+\t\t\t\t},\n+\t\t\t\t'user.login:after' => function () use (&$calls) {\n+\t\t\t\t\t$calls += 8;\n+\t\t\t\t},\n+\t\t\t]\n+\t\t]);\n+\n+\t\t$user = $this->app->user('admin@domain.com');\n+\t\t$user->changePassword('topsecret2018');\n+\n+\t\t$this->assertSame(15, $calls);\n \t}\n \n \tpublic function testChangeRoleHooks()"
        },
        {
          "filename": "tests/Cms/Users/UserAuthTest.php",
          "status": "modified",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -2,6 +2,8 @@\n \n namespace Kirby\\Cms;\n \n+use Kirby\\Filesystem\\F;\n+\n class UserAuthTest extends TestCase\n {\n \tprotected $app;\n@@ -19,6 +21,7 @@ public function setUp(): void\n \t\t\t'users' => [\n \t\t\t\t[\n \t\t\t\t\t'email' => 'test@getkirby.com',\n+\t\t\t\t\t'id'    => 'testuser',\n \t\t\t\t\t'role'  => 'admin'\n \t\t\t\t]\n \t\t\t]\n@@ -96,4 +99,30 @@ public function testLoginLogoutHooks()\n \t\t// each hook needs to be called exactly twice\n \t\t$this->assertSame((1 + 2 + 4 + 8) * 2, $calls);\n \t}\n+\n+\tpublic function testSessionData()\n+\t{\n+\t\t$user    = $this->app->user('test@getkirby.com');\n+\t\t$session = $this->app->session();\n+\n+\t\t$this->assertSame([], $session->data()->get());\n+\t\t$user->loginPasswordless();\n+\t\t$this->assertSame(['kirby.userId' => 'testuser'], $session->data()->get());\n+\t\t$user->logout();\n+\t\t$this->assertSame([], $session->data()->get());\n+\t}\n+\n+\tpublic function testSessionDataWithPassword()\n+\t{\n+\t\tF::write($this->tmp . '/accounts/testuser/.htpasswd', 'a very secure hash');\n+\n+\t\t$user    = $this->app->user('test@getkirby.com');\n+\t\t$session = $this->app->session();\n+\n+\t\t$this->assertSame([], $session->data()->get());\n+\t\t$user->loginPasswordless();\n+\t\t$this->assertSame(['kirby.userId' => 'testuser', 'kirby.loginTimestamp' => 1337000000], $session->data()->get());\n+\t\t$user->logout();\n+\t\t$this->assertSame([], $session->data()->get());\n+\t}\n }"
        },
        {
          "filename": "tests/Cms/Users/UserTest.php",
          "status": "modified",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -193,6 +193,32 @@ public function testModifiedSpecifyingLanguage()\n \t\tDir::remove($index);\n \t}\n \n+\tpublic function testPasswordTimestamp()\n+\t{\n+\t\t$app = new App([\n+\t\t\t'roots' => [\n+\t\t\t\t'index'    => $this->tmp,\n+\t\t\t\t'accounts' => $this->tmp\n+\t\t\t]\n+\t\t]);\n+\n+\t\t// create a user file\n+\t\tF::write($this->tmp . '/test/index.php', '<?php return [];');\n+\n+\t\t$user = $app->user('test');\n+\t\t$this->assertNull($user->passwordTimestamp());\n+\n+\t\t// create a password file\n+\t\tF::write($this->tmp . '/test/.htpasswd', 'a very secure hash');\n+\t\ttouch($this->tmp . '/test/.htpasswd', 1337000000);\n+\n+\t\t$this->assertSame(1337000000, $user->passwordTimestamp());\n+\n+\t\t// timestamp is not cached\n+\t\ttouch($this->tmp . '/test/.htpasswd', 1338000000);\n+\t\t$this->assertSame(1338000000, $user->passwordTimestamp());\n+\t}\n+\n \tpublic function passwordProvider()\n \t{\n \t\treturn ["
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "94cc37ee7c3004ebb4950a53f14e1329ed4d28d3",
            "date": "2024-11-28T10:10:23Z",
            "author_login": "bastianallgeier"
          },
          {
            "sha": "7512f22b46f8a065af3e22ba8ef942d6a0b21c9a",
            "date": "2024-11-27T13:20:40Z",
            "author_login": "bastianallgeier"
          },
          {
            "sha": "470b395c27d7dc79b457ca7b854a27d455398e10",
            "date": "2024-11-27T13:20:04Z",
            "author_login": "bastianallgeier"
          },
          {
            "sha": "24bba50eecfcfbe5316b51bc08e167e336b1cab9",
            "date": "2024-11-27T13:14:11Z",
            "author_login": "bastianallgeier"
          },
          {
            "sha": "41353f79c838270f0e82f5a87992ebd83704ce8d",
            "date": "2024-11-26T10:31:52Z",
            "author_login": "bastianallgeier"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-613",
    "description": "Kirby is a content management system. A vulnerability in versions prior to 3.5.8.3, 3.6.6.3, 3.7.5.2, 3.8.4.1, and 3.9.6 affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be abused if a Kirby user is logged in on a device or browser that is shared with potentially untrusted users or if an attacker already maliciously used a previous password to log in to a Kirby site as the affected user.\n\nInsufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization. In the variation described in this advisory, it allows attackers to stay logged in to a Kirby site on another device even if the logged in user has since changed their password. Kirby did not invalidate user sessions that were created with a password that was since changed by the user or by a site admin. If a user changed their password to lock out an attacker who was already in possession of the previous password or of a login session on another device or browser, the attacker would not be reliably prevented from accessing the Kirby site as the affected user.\n\nThe problem has been patched in Kirby 3.5.8.3, 3.6.6.3, 3.7.5.2, 3.8.4.1, and 3.9.6. In all of the mentioned releases, the maintainers have updated the authentication implementation to keep track of the hashed password in each active session. If the password changed since the login, the session is invalidated. To enforce this fix even if the vulnerability was previously abused, all users are logged out from the Kirby site after updating to one of the patched releases.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-27T15:15:12.220",
    "last_modified": "2024-11-21T08:13:40.620",
    "fix_date": "2023-07-23T19:37:48Z"
  },
  "references": [
    {
      "url": "https://github.com/getkirby/kirby/commit/7a0a2014c69fdb925ea02f30e7793bb50115e931",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.5.8.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.6.6.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.7.5.2",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.8.4.1",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.9.6",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/security/advisories/GHSA-5mvj-rvp8-rf45",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/commit/7a0a2014c69fdb925ea02f30e7793bb50115e931",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.5.8.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.6.6.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.7.5.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.8.4.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/releases/tag/3.9.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/getkirby/kirby/security/advisories/GHSA-5mvj-rvp8-rf45",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:04.276270",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "kirby",
    "owner": "getkirby",
    "created_at": "2017-10-06T11:35:25Z",
    "updated_at": "2025-01-13T22:44:14Z",
    "pushed_at": "2025-01-14T08:52:45Z",
    "size": 48636,
    "stars": 1335,
    "forks": 173,
    "open_issues": 173,
    "watchers": 1335,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "develop-minor",
      "develop-patch",
      "main"
    ],
    "languages": {
      "PHP": 4627131,
      "Vue": 996369,
      "JavaScript": 426063,
      "CSS": 33910,
      "HTML": 11552,
      "Shell": 1881,
      "Hack": 901
    },
    "commit_activity": {
      "total_commits_last_year": 1670,
      "avg_commits_per_week": 32.11538461538461,
      "days_active_last_year": 194
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:53:49.566873"
  }
}