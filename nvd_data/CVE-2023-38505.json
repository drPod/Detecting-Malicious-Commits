{
  "cve_id": "CVE-2023-38505",
  "github_data": {
    "repository": "ravenclaw900/DietPi-Dashboard",
    "fix_commit": "79cd78615d28f577454415e4baafe4dcd9d09666",
    "related_commits": [
      "79cd78615d28f577454415e4baafe4dcd9d09666",
      "79cd78615d28f577454415e4baafe4dcd9d09666"
    ],
    "patch_url": "https://github.com/ravenclaw900/DietPi-Dashboard/commit/79cd78615d28f577454415e4baafe4dcd9d09666.patch",
    "fix_commit_details": {
      "sha": "79cd78615d28f577454415e4baafe4dcd9d09666",
      "commit_date": "2023-07-26T19:40:59Z",
      "author": {
        "login": "ravenclaw900",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(backend): replace TLS implementation with `flexible-hyper-server-tls`",
        "length": 132,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 493,
        "additions": 220,
        "deletions": 273
      },
      "files": [
        {
          "filename": "Cargo.lock",
          "status": "modified",
          "additions": 198,
          "deletions": 89,
          "patch": "@@ -2,6 +2,15 @@\n # It is not intended for manual editing.\n version = 3\n \n+[[package]]\n+name = \"addr2line\"\n+version = \"0.15.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e7a2e47a1fbe209ee101dd6d61285226744c6c8d3c21c8dc878ba6cb9f467f3a\"\n+dependencies = [\n+ \"gimli\",\n+]\n+\n [[package]]\n name = \"adler\"\n version = \"1.0.2\"\n@@ -34,16 +43,37 @@ dependencies = [\n \n [[package]]\n name = \"autocfg\"\n-version = \"1.0.1\"\n+version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n+checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n+\n+[[package]]\n+name = \"backtrace\"\n+version = \"0.3.59\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"4717cfcbfaa661a0fd48f8453951837ae7e8f81e481fbb136e3202d72805a744\"\n+dependencies = [\n+ \"addr2line\",\n+ \"cc\",\n+ \"cfg-if\",\n+ \"libc\",\n+ \"miniz_oxide 0.4.4\",\n+ \"object\",\n+ \"rustc-demangle\",\n+]\n \n [[package]]\n name = \"base64\"\n version = \"0.13.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\"\n \n+[[package]]\n+name = \"base64\"\n+version = \"0.21.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"604178f6c5c21f02dc555784810edfb88d34ac2c73b2eae109655649ee73ce3d\"\n+\n [[package]]\n name = \"bitflags\"\n version = \"1.3.2\"\n@@ -155,7 +185,7 @@ checksum = \"4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n ]\n \n [[package]]\n@@ -165,6 +195,7 @@ dependencies = [\n  \"anyhow\",\n  \"figment\",\n  \"flate2\",\n+ \"flexible-hyper-server-tls\",\n  \"futures\",\n  \"getrandom\",\n  \"hex\",\n@@ -178,11 +209,9 @@ dependencies = [\n  \"pty-process\",\n  \"rerun_in_except\",\n  \"ring\",\n- \"rustls-pemfile\",\n  \"serde\",\n  \"serde_json\",\n  \"tokio\",\n- \"tokio-rustls\",\n  \"tokio-tungstenite\",\n  \"tracing\",\n  \"tracing-subscriber\",\n@@ -221,7 +250,21 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f82b0f4c27ad9f8bfd1f3208d882da2b09c301bc1c828fd3a00d0216d2fbbff6\"\n dependencies = [\n  \"crc32fast\",\n- \"miniz_oxide\",\n+ \"miniz_oxide 0.5.3\",\n+]\n+\n+[[package]]\n+name = \"flexible-hyper-server-tls\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"87651e5b8ed9cb4a20c04296bfae1a4d10cf2546f0e057328ccb742c55fbc91e\"\n+dependencies = [\n+ \"futures-util\",\n+ \"hyper\",\n+ \"rustls-pemfile\",\n+ \"thiserror\",\n+ \"tokio\",\n+ \"tokio-rustls\",\n ]\n \n [[package]]\n@@ -257,19 +300,19 @@ dependencies = [\n \n [[package]]\n name = \"futures-channel\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2bfc52cbddcfd745bf1740338492bb0bd83d76c67b445f91c5fb29fae29ecaa1\"\n+checksum = \"955518d47e09b25bbebc7a18df10b81f0c766eaf4c4f1cccef2fca5f2a4fb5f2\"\n dependencies = [\n  \"futures-core\",\n  \"futures-sink\",\n ]\n \n [[package]]\n name = \"futures-core\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d2acedae88d38235936c3922476b10fced7b2b68136f5e3c03c2d5be348a1115\"\n+checksum = \"4bca583b7e26f571124fe5b7561d49cb2868d79116cfa0eefce955557c6fee8c\"\n \n [[package]]\n name = \"futures-executor\"\n@@ -284,38 +327,38 @@ dependencies = [\n \n [[package]]\n name = \"futures-io\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"93a66fc6d035a26a3ae255a6d2bca35eda63ae4c5512bef54449113f7a1228e5\"\n+checksum = \"4fff74096e71ed47f8e023204cfd0aa1289cd54ae5430a9523be060cdb849964\"\n \n [[package]]\n name = \"futures-macro\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0db9cce532b0eae2ccf2766ab246f114b56b9cf6d445e00c2549fbc100ca045d\"\n+checksum = \"89ca545a94061b6365f2c7355b4b32bd20df3ff95f02da9329b34ccc3bd6ee72\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 2.0.27\",\n ]\n \n [[package]]\n name = \"futures-sink\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ca0bae1fe9752cf7fd9b0064c674ae63f97b37bc714d745cbde0afb7ec4e6765\"\n+checksum = \"f43be4fe21a13b9781a69afa4985b0f6ee0e1afab2c6f454a8cf30e2b2237b6e\"\n \n [[package]]\n name = \"futures-task\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"842fc63b931f4056a24d59de13fb1272134ce261816e063e634ad0c15cdc5306\"\n+checksum = \"76d3d132be6c0e6aa1534069c705a74a5997a356c0dc2f86a47765e5617c5b65\"\n \n [[package]]\n name = \"futures-util\"\n-version = \"0.3.23\"\n+version = \"0.3.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f0828a5471e340229c11c77ca80017937ce3c58cb788a17e5f1c2d5c485a9577\"\n+checksum = \"26b01e40b772d54cf6c6d721c1d1abd0647a0106a12ecaa1c186273392a69533\"\n dependencies = [\n  \"futures-channel\",\n  \"futures-core\",\n@@ -350,6 +393,12 @@ dependencies = [\n  \"wasi\",\n ]\n \n+[[package]]\n+name = \"gimli\"\n+version = \"0.24.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"0e4075386626662786ddb0ec9081e7c7eeb1ba31951f447ca780ef9f5d568189\"\n+\n [[package]]\n name = \"glob\"\n version = \"0.3.0\"\n@@ -395,9 +444,9 @@ dependencies = [\n \n [[package]]\n name = \"httparse\"\n-version = \"1.7.1\"\n+version = \"1.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"496ce29bb5a52785b44e0f7ca2847ae0bb839c9bd28f69acac9b99d461c0c04c\"\n+checksum = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\"\n \n [[package]]\n name = \"httpdate\"\n@@ -407,9 +456,9 @@ checksum = \"c4a1e36c821dbe04574f602848a19f742f4fb3c98d40449f11bcad18d6b17421\"\n \n [[package]]\n name = \"hyper\"\n-version = \"0.14.20\"\n+version = \"0.14.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"02c929dc5c39e335a03c405292728118860721b10190d98c2a0f0efd5baafbac\"\n+checksum = \"ffb1cfd654a8219eaef89881fdb3bb3b1cdc5fa75ded05d6933b2b382e395468\"\n dependencies = [\n  \"bytes\",\n  \"futures-channel\",\n@@ -501,7 +550,7 @@ version = \"8.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"1aa4b4af834c6cfd35d8763d359661b90f2e45d8f750a0849156c7f4671af09c\"\n dependencies = [\n- \"base64\",\n+ \"base64 0.13.0\",\n  \"ring\",\n  \"serde\",\n  \"serde_json\",\n@@ -515,9 +564,9 @@ checksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.127\"\n+version = \"0.2.147\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"505e71a4706fa491e9b1b55f51b95d4037d0821ee40131190475f692b35b009b\"\n+checksum = \"b4668fb0ea861c1df094127ac5f1da3409a82116a4ba74fca2e58ef927159bb3\"\n \n [[package]]\n name = \"log\"\n@@ -558,6 +607,16 @@ dependencies = [\n  \"autocfg\",\n ]\n \n+[[package]]\n+name = \"miniz_oxide\"\n+version = \"0.4.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a92518e98c078586bc6c934028adcca4c92a53d6a958196de835170a01d84e4b\"\n+dependencies = [\n+ \"adler\",\n+ \"autocfg\",\n+]\n+\n [[package]]\n name = \"miniz_oxide\"\n version = \"0.5.3\"\n@@ -569,12 +628,11 @@ dependencies = [\n \n [[package]]\n name = \"mio\"\n-version = \"0.8.4\"\n+version = \"0.8.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"57ee1c23c7c63b0c9250c339ffdc69255f110b298b901b9f6c82547b7b87caaf\"\n+checksum = \"927a765cd3fc26206e66b296465fa9d3e5ab003e651c1b3c060e7956d96b19d2\"\n dependencies = [\n  \"libc\",\n- \"log\",\n  \"wasi\",\n  \"windows-sys\",\n ]\n@@ -611,6 +669,12 @@ dependencies = [\n  \"libc\",\n ]\n \n+[[package]]\n+name = \"object\"\n+version = \"0.24.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1a5b3dd1c072ee7963717671d1ca129f1048fda25edea6b752bfc71ac8854170\"\n+\n [[package]]\n name = \"once_cell\"\n version = \"1.13.1\"\n@@ -637,7 +701,7 @@ dependencies = [\n  \"proc-macro2\",\n  \"proc-macro2-diagnostics\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n ]\n \n [[package]]\n@@ -672,11 +736,11 @@ checksum = \"eb9f9e6e233e5c4a35559a617bf40a4ec447db2e84c20b55a6f83167b7e57872\"\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"1.0.32\"\n+version = \"1.0.66\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ba508cc11742c0dc5c1659771673afbab7a0efab23aa17e854cbab0837ed0b43\"\n+checksum = \"18fb31db3f9bddb2ea821cde30a9f70117e3f119938b5ee630b7403aa6e2ead9\"\n dependencies = [\n- \"unicode-xid\",\n+ \"unicode-ident\",\n ]\n \n [[package]]\n@@ -687,7 +751,7 @@ checksum = \"4bf29726d67464d49fa6224a1d07936a8c08bb3fba727c7493f6cf1616fdaada\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n  \"version_check\",\n  \"yansi\",\n ]\n@@ -723,9 +787,9 @@ dependencies = [\n \n [[package]]\n name = \"quote\"\n-version = \"1.0.10\"\n+version = \"1.0.32\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"38bc8cc6a5f2e3655e0899c1b848643b2562f853f114bfec7be120678e3ace05\"\n+checksum = \"50f3b39ccfb720540debaa0164757101c08ecb8d326b15358ce76a62c7e85965\"\n dependencies = [\n  \"proc-macro2\",\n ]\n@@ -781,25 +845,41 @@ dependencies = [\n  \"winapi\",\n ]\n \n+[[package]]\n+name = \"rustc-demangle\"\n+version = \"0.1.23\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n+\n [[package]]\n name = \"rustls\"\n-version = \"0.20.6\"\n+version = \"0.21.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5aab8ee6c7097ed6057f43c187a62418d0c05a4bd5f18b3571db50ee0f9ce033\"\n+checksum = \"79ea77c539259495ce8ca47f53e66ae0330a8819f67e23ac96ca02f50e7b7d36\"\n dependencies = [\n  \"log\",\n  \"ring\",\n+ \"rustls-webpki\",\n  \"sct\",\n- \"webpki\",\n ]\n \n [[package]]\n name = \"rustls-pemfile\"\n-version = \"1.0.1\"\n+version = \"1.0.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2d3987094b1d07b653b7dfdc3f70ce9a1da9c51ac18c1b06b662e4f9a0e9f4b2\"\n+dependencies = [\n+ \"base64 0.21.2\",\n+]\n+\n+[[package]]\n+name = \"rustls-webpki\"\n+version = \"0.101.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0864aeff53f8c05aa08d86e5ef839d3dfcf07aeba2db32f12db0ef716e87bd55\"\n+checksum = \"513722fd73ad80a71f72b61009ea1b584bcfa1483ca93949c8f290298837fa59\"\n dependencies = [\n- \"base64\",\n+ \"ring\",\n+ \"untrusted\",\n ]\n \n [[package]]\n@@ -844,7 +924,7 @@ checksum = \"d3d8e8de557aee63c26b85b947f5e59b690d0454c753f3adeb5cd7835ab88391\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n ]\n \n [[package]]\n@@ -901,9 +981,9 @@ checksum = \"cc88c725d61fc6c3132893370cac4a0200e3fedf5da8331c570664b1987f5ca2\"\n \n [[package]]\n name = \"socket2\"\n-version = \"0.4.4\"\n+version = \"0.4.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"66d72b759436ae32898a2af0a14218dbf55efde3feeb170eb623637db85ee1e0\"\n+checksum = \"64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662\"\n dependencies = [\n  \"libc\",\n  \"winapi\",\n@@ -926,24 +1006,35 @@ dependencies = [\n  \"unicode-xid\",\n ]\n \n+[[package]]\n+name = \"syn\"\n+version = \"2.0.27\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b60f673f44a8255b9c8c657daf66a596d435f2da81a555b06dc644d080ba45e0\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"unicode-ident\",\n+]\n+\n [[package]]\n name = \"thiserror\"\n-version = \"1.0.30\"\n+version = \"1.0.44\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"854babe52e4df1653706b98fcfc05843010039b406875930a70e4d9644e5c417\"\n+checksum = \"611040a08a0439f8248d1990b111c95baa9c704c805fa1f62104b39655fd7f90\"\n dependencies = [\n  \"thiserror-impl\",\n ]\n \n [[package]]\n name = \"thiserror-impl\"\n-version = \"1.0.30\"\n+version = \"1.0.44\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aa32fd3f627f367fe16f893e2597ae3c05020f8bba2666a4e6ea73d377e5714b\"\n+checksum = \"090198534930841fab3a5d1bb637cde49e339654e606195f8d9c76eeb081dc96\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 2.0.27\",\n ]\n \n [[package]]\n@@ -990,42 +1081,41 @@ checksum = \"cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c\"\n \n [[package]]\n name = \"tokio\"\n-version = \"1.19.2\"\n+version = \"1.29.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c51a52ed6686dd62c320f9b89299e9dfb46f730c7a48e635c19f21d116cb1439\"\n+checksum = \"532826ff75199d5833b9d2c5fe410f29235e25704ee5f0ef599fb51c21f4a4da\"\n dependencies = [\n+ \"autocfg\",\n+ \"backtrace\",\n  \"bytes\",\n  \"libc\",\n- \"memchr\",\n  \"mio\",\n- \"once_cell\",\n  \"pin-project-lite\",\n  \"signal-hook-registry\",\n  \"socket2\",\n  \"tokio-macros\",\n- \"winapi\",\n+ \"windows-sys\",\n ]\n \n [[package]]\n name = \"tokio-macros\"\n-version = \"1.7.0\"\n+version = \"2.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b557f72f448c511a979e2564e55d74e6c4432fc96ff4f6241bc6bded342643b7\"\n+checksum = \"630bdcf245f78637c13ec01ffae6187cca34625e8c63150d424b59e55af2675e\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 2.0.27\",\n ]\n \n [[package]]\n name = \"tokio-rustls\"\n-version = \"0.23.4\"\n+version = \"0.24.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c43ee83903113e03984cb9e5cebe6c04a5116269e900e3ddba8f068a62adda59\"\n+checksum = \"c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081\"\n dependencies = [\n  \"rustls\",\n  \"tokio\",\n- \"webpki\",\n ]\n \n [[package]]\n@@ -1075,7 +1165,7 @@ checksum = \"11c75893af559bc8e10716548bdef5cb2b983f8e637db9d0e15126b61b484ee2\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n ]\n \n [[package]]\n@@ -1125,7 +1215,7 @@ version = \"0.17.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"e27992fd6a8c29ee7eef28fc78349aa244134e10ad447ce3b9f0ac0ed0fa4ce0\"\n dependencies = [\n- \"base64\",\n+ \"base64 0.13.0\",\n  \"byteorder\",\n  \"bytes\",\n  \"http\",\n@@ -1165,6 +1255,12 @@ version = \"0.3.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"099b7128301d285f79ddd55b9a83d5e6b9e97c92e0ea0daebee7263e932de992\"\n \n+[[package]]\n+name = \"unicode-ident\"\n+version = \"1.0.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"301abaae475aa91687eb82514b328ab47a211a533026cb25fc3e519b86adfc3c\"\n+\n [[package]]\n name = \"unicode-normalization\"\n version = \"0.1.21\"\n@@ -1264,7 +1360,7 @@ dependencies = [\n  \"log\",\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n  \"wasm-bindgen-shared\",\n ]\n \n@@ -1286,7 +1382,7 @@ checksum = \"7803e0eea25835f8abdc585cd3021b3deb11543c6fe226dcd30b228857c5c5ab\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"syn\",\n+ \"syn 1.0.92\",\n  \"wasm-bindgen-backend\",\n  \"wasm-bindgen-shared\",\n ]\n@@ -1307,16 +1403,6 @@ dependencies = [\n  \"wasm-bindgen\",\n ]\n \n-[[package]]\n-name = \"webpki\"\n-version = \"0.22.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f095d78192e208183081cc07bc5515ef55216397af48b873e5edcd72637fa1bd\"\n-dependencies = [\n- \"ring\",\n- \"untrusted\",\n-]\n-\n [[package]]\n name = \"winapi\"\n version = \"0.3.9\"\n@@ -1350,46 +1436,69 @@ checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \n [[package]]\n name = \"windows-sys\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\n+dependencies = [\n+ \"windows-targets\",\n+]\n+\n+[[package]]\n+name = \"windows-targets\"\n+version = \"0.48.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ea04155a16a59f9eab786fe12a4a450e75cdb175f9e0d80da1e17db09f55b8d2\"\n+checksum = \"05d4b17490f70499f20b9e791dcf6a299785ce8af4d709018206dc5b4953e95f\"\n dependencies = [\n+ \"windows_aarch64_gnullvm\",\n  \"windows_aarch64_msvc\",\n  \"windows_i686_gnu\",\n  \"windows_i686_msvc\",\n  \"windows_x86_64_gnu\",\n+ \"windows_x86_64_gnullvm\",\n  \"windows_x86_64_msvc\",\n ]\n \n+[[package]]\n+name = \"windows_aarch64_gnullvm\"\n+version = \"0.48.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"91ae572e1b79dba883e0d315474df7305d12f569b400fcf90581b06062f7e1bc\"\n+\n [[package]]\n name = \"windows_aarch64_msvc\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9bb8c3fd39ade2d67e9874ac4f3db21f0d710bee00fe7cab16949ec184eeaa47\"\n+checksum = \"b2ef27e0d7bdfcfc7b868b317c1d32c641a6fe4629c171b8928c7b08d98d7cf3\"\n \n [[package]]\n name = \"windows_i686_gnu\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"180e6ccf01daf4c426b846dfc66db1fc518f074baa793aa7d9b9aaeffad6a3b6\"\n+checksum = \"622a1962a7db830d6fd0a69683c80a18fda201879f0f447f065a3b7467daa241\"\n \n [[package]]\n name = \"windows_i686_msvc\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e2e7917148b2812d1eeafaeb22a97e4813dfa60a3f8f78ebe204bcc88f12f024\"\n+checksum = \"4542c6e364ce21bf45d69fdd2a8e455fa38d316158cfd43b3ac1c5b1b19f8e00\"\n \n [[package]]\n name = \"windows_x86_64_gnu\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ca2b8a661f7628cbd23440e50b05d705db3686f894fc9580820623656af974b1\"\n+\n+[[package]]\n+name = \"windows_x86_64_gnullvm\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4dcd171b8776c41b97521e5da127a2d86ad280114807d0b2ab1e462bc764d9e1\"\n+checksum = \"7896dbc1f41e08872e9d5e8f8baa8fdd2677f29468c4e156210174edc7f7b953\"\n \n [[package]]\n name = \"windows_x86_64_msvc\"\n-version = \"0.36.1\"\n+version = \"0.48.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c811ca4a8c853ef420abd8592ba53ddbbac90410fab6903b3e79972a631f7680\"\n+checksum = \"1a515f5799fe4961cb532f983ce2b23082366b898e52ffbce459c86f67c8378a\"\n \n [[package]]\n name = \"yansi\""
        },
        {
          "filename": "Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -26,10 +26,9 @@ tracing = { version = \"0.1.36\", features = [\"release_max_level_debug\"] }\n tracing-subscriber = \"0.3.15\"\n hyper = { version = \"0.14.20\", features = [\"server\", \"http1\", \"tcp\"] }\n tokio-tungstenite = \"0.17.2\"\n-tokio-rustls = \"0.23.4\"\n-rustls-pemfile = \"1.0.1\"\n getrandom = \"0.2.7\"\n hex = \"0.4.3\"\n+flexible-hyper-server-tls = \"0.1.1\"\n \n [features]\n default = [\"frontend\"]"
        },
        {
          "filename": "src/main.rs",
          "status": "modified",
          "additions": 21,
          "deletions": 182,
          "patch": "@@ -4,9 +4,7 @@\n #![warn(rust_2018_idioms)]\n use crate::shared::CONFIG;\n use anyhow::Context;\n-use futures::FutureExt;\n use hyper::service::{make_service_fn, service_fn};\n-use std::task::Poll;\n use std::{net::IpAddr, str::FromStr};\n \n mod config;\n@@ -19,144 +17,6 @@ mod systemdata;\n #[cfg(feature = \"frontend\")]\n static DIR: include_dir::Dir<'_> = include_dir::include_dir!(\"$CARGO_MANIFEST_DIR/frontend/dist\");\n \n-enum TlsOrTcpConnection {\n-    Plain(tokio::net::TcpStream, std::net::SocketAddr),\n-    Tls(\n-        Box<tokio_rustls::server::TlsStream<tokio::net::TcpStream>>,\n-        std::net::SocketAddr,\n-    ),\n-}\n-\n-struct HyperTlsOrTcpAcceptor {\n-    listener: tokio::net::TcpListener,\n-    acceptor: Option<tokio_rustls::TlsAcceptor>,\n-    accept_future: Option<tokio_rustls::Accept<tokio::net::TcpStream>>,\n-    remote_addr: Option<std::net::SocketAddr>,\n-}\n-\n-impl HyperTlsOrTcpAcceptor {\n-    const fn new(\n-        listener: tokio::net::TcpListener,\n-        acceptor: Option<tokio_rustls::TlsAcceptor>,\n-    ) -> Self {\n-        Self {\n-            listener,\n-            acceptor,\n-            accept_future: None,\n-            remote_addr: None,\n-        }\n-    }\n-}\n-\n-impl TlsOrTcpConnection {\n-    const fn remote_addr(&self) -> std::net::SocketAddr {\n-        match self {\n-            Self::Plain(_, remote_addr) | Self::Tls(_, remote_addr) => *remote_addr,\n-        }\n-    }\n-}\n-\n-impl tokio::io::AsyncRead for TlsOrTcpConnection {\n-    fn poll_read(\n-        self: std::pin::Pin<&mut Self>,\n-        cx: &mut std::task::Context<'_>,\n-        buf: &mut tokio::io::ReadBuf<'_>,\n-    ) -> Poll<std::io::Result<()>> {\n-        match self.get_mut() {\n-            Self::Plain(tcp, _) => std::pin::Pin::new(tcp).poll_read(cx, buf),\n-            Self::Tls(tls, _) => std::pin::Pin::new(tls).poll_read(cx, buf),\n-        }\n-    }\n-}\n-\n-impl tokio::io::AsyncWrite for TlsOrTcpConnection {\n-    fn poll_write(\n-        self: std::pin::Pin<&mut Self>,\n-        cx: &mut std::task::Context<'_>,\n-        buf: &[u8],\n-    ) -> Poll<Result<usize, std::io::Error>> {\n-        match self.get_mut() {\n-            Self::Plain(tcp, _) => std::pin::Pin::new(tcp).poll_write(cx, buf),\n-            Self::Tls(tls, _) => std::pin::Pin::new(tls).poll_write(cx, buf),\n-        }\n-    }\n-\n-    fn poll_flush(\n-        self: std::pin::Pin<&mut Self>,\n-        cx: &mut std::task::Context<'_>,\n-    ) -> Poll<Result<(), std::io::Error>> {\n-        match self.get_mut() {\n-            Self::Plain(tcp, _) => std::pin::Pin::new(tcp).poll_flush(cx),\n-            Self::Tls(tls, _) => std::pin::Pin::new(tls).poll_flush(cx),\n-        }\n-    }\n-\n-    fn poll_shutdown(\n-        self: std::pin::Pin<&mut Self>,\n-        cx: &mut std::task::Context<'_>,\n-    ) -> Poll<Result<(), std::io::Error>> {\n-        match self.get_mut() {\n-            Self::Plain(tcp, _) => std::pin::Pin::new(tcp).poll_shutdown(cx),\n-            Self::Tls(tls, _) => std::pin::Pin::new(tls).poll_shutdown(cx),\n-        }\n-    }\n-}\n-\n-impl hyper::server::accept::Accept for &mut HyperTlsOrTcpAcceptor {\n-    type Conn = TlsOrTcpConnection;\n-    type Error = anyhow::Error;\n-\n-    fn poll_accept(\n-        mut self: std::pin::Pin<&mut Self>,\n-        cx: &mut std::task::Context<'_>,\n-    ) -> Poll<Option<Result<Self::Conn, Self::Error>>> {\n-        if self.accept_future.is_none() {\n-            match self.listener.poll_accept(cx) {\n-                Poll::Ready(stream) => match stream {\n-                    Ok(stream) => {\n-                        if let Some(acceptor) = &self.acceptor {\n-                            self.accept_future = Some(acceptor.accept(stream.0));\n-                            self.remote_addr = Some(stream.1);\n-                        } else {\n-                            return Poll::Ready(Some(Ok(TlsOrTcpConnection::Plain(\n-                                stream.0, stream.1,\n-                            ))));\n-                        }\n-                    }\n-                    Err(err) => {\n-                        return Poll::Ready(Some(Err(err).context(\"Couldn't make TCP connection\")));\n-                    }\n-                },\n-                Poll::Pending => return Poll::Pending,\n-            }\n-        }\n-        if let Some(accept_future) = &mut self.accept_future {\n-            match accept_future.poll_unpin(cx) {\n-                Poll::Pending => return Poll::Pending,\n-                Poll::Ready(tls) => {\n-                    self.accept_future = None;\n-                    let tls = match tls {\n-                        Ok(tls) => tls,\n-                        Err(err) => {\n-                            return Poll::Ready(Some(\n-                                Err(err).context(\"Couldn't encrypt TCP connection\"),\n-                            ));\n-                        }\n-                    };\n-                    let remote_addr = self.remote_addr.take().unwrap_or_else(|| {\n-                        std::net::SocketAddr::from((std::net::Ipv4Addr::UNSPECIFIED, 0))\n-                    });\n-                    return Poll::Ready(Some(Ok(TlsOrTcpConnection::Tls(\n-                        Box::new(tls),\n-                        remote_addr,\n-                    ))));\n-                }\n-            }\n-        }\n-        Poll::Pending\n-    }\n-}\n-\n #[tokio::main(flavor = \"current_thread\")]\n async fn main() -> anyhow::Result<()> {\n     tracing::subscriber::set_global_default(\n@@ -176,7 +36,7 @@ async fn main() -> anyhow::Result<()> {\n         .await\n         .with_context(|| format!(\"Couldn't bind to {}\", &addr))?;\n \n-    let make_svc = make_service_fn(|conn: &TlsOrTcpConnection| {\n+    let make_svc = make_service_fn(|conn: &flexible_hyper_server_tls::HttpOrHttpsConnection| {\n         let remote_addr = conn.remote_addr();\n         async move {\n             Ok::<_, std::convert::Infallible>(service_fn(move |req| async move {\n@@ -195,51 +55,30 @@ async fn main() -> anyhow::Result<()> {\n         }\n     });\n \n-    let mut acceptor = if CONFIG.tls {\n-        let tls_cfg = {\n-            let certs = rustls_pemfile::certs(&mut std::io::BufReader::new(\n-                std::fs::File::open(&CONFIG.cert).context(\"Couldn't open cert file\")?,\n-            ))\n-            .context(\"Couldn't read certs\")?\n-            .into_iter()\n-            .map(tokio_rustls::rustls::Certificate)\n-            .collect();\n-\n-            let key = match rustls_pemfile::read_one(&mut std::io::BufReader::new(\n-                std::fs::File::open(&CONFIG.key).context(\"Couldn't open cert file\")?,\n-            ))\n-            .context(\"Couldn't read key\")?\n-            .context(\"No private key\")?\n-            {\n-                rustls_pemfile::Item::PKCS8Key(vec) | rustls_pemfile::Item::RSAKey(vec) => {\n-                    tokio_rustls::rustls::PrivateKey(vec)\n-                }\n-                _ => anyhow::bail!(\"No PKCS8 or RSA formatted private key\"),\n-            };\n-\n-            let mut cfg = tokio_rustls::rustls::ServerConfig::builder()\n-                .with_safe_defaults()\n-                .with_no_client_auth()\n-                .with_single_cert(certs, key)\n-                .context(\"Couldn't build TLS config\")?;\n-            cfg.alpn_protocols = vec![b\"http/1.1\".to_vec()];\n-            std::sync::Arc::new(cfg)\n-        };\n-\n-        HyperTlsOrTcpAcceptor::new(tcp, Some(tokio_rustls::TlsAcceptor::from(tls_cfg)))\n+    let acceptor = if CONFIG.tls {\n+        let tls_acceptor = flexible_hyper_server_tls::tlsconfig::get_tlsacceptor_from_files(\n+            &CONFIG.cert,\n+            &CONFIG.key,\n+            flexible_hyper_server_tls::tlsconfig::HttpProtocol::Http1,\n+        )\n+        .context(\"Couldn't get TLS config\")?;\n+\n+        flexible_hyper_server_tls::HyperHttpOrHttpsAcceptor::new_https(\n+            tcp,\n+            tls_acceptor,\n+            std::time::Duration::from_secs(10),\n+        )\n     } else {\n-        HyperTlsOrTcpAcceptor::new(tcp, None)\n+        flexible_hyper_server_tls::HyperHttpOrHttpsAcceptor::new_http(tcp)\n     };\n \n+    let mut server = hyper::server::Server::builder(acceptor).serve(make_svc);\n+\n     // Ignore result, because it will never be an error\n     loop {\n-        let _res = hyper::server::Server::builder(&mut acceptor)\n-            .serve(make_svc)\n-            .await\n-            .context(\"Server error\")\n-            .or_else(|e| {\n-                tracing::warn!(\"{:?}\", e);\n-                anyhow::Ok(())\n-            });\n+        let _res = (&mut server).await.context(\"Server error\").or_else(|e| {\n+            tracing::warn!(\"{:?}\", e);\n+            anyhow::Ok(())\n+        });\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c7820229d99e601ede1de9a57985f3d63d37ccbe",
            "date": "2025-01-11T10:49:38Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "f27d3267ba75a965933c7feaed30c1748c2f5b5b",
            "date": "2025-01-11T06:44:08Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "5d19baf8a24dce573a62addbae802a844a14c740",
            "date": "2025-01-10T09:43:57Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "4130a475267aef20e0d7879581edc34adf1b0a82",
            "date": "2025-01-10T06:25:40Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "e4e39b60d7fdbb63de9f1c29e8bcac175590f76f",
            "date": "2025-01-07T08:28:44Z",
            "author_login": "renovate[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-410",
    "description": "DietPi-Dashboard is a web dashboard for the operating system DietPi. The dashboard only allows for one TLS handshake to be in process at a given moment. Once a TCP connection is established in HTTPS mode, it will assume that it should be waiting for a handshake, and will stay this way indefinitely until a handshake starts or some error occurs. In version 0.6.1, this can be exploited by simply not starting the handshake, preventing any other TLS handshakes from getting through. An attacker can lock the dashboard in a state where it is waiting for a TLS handshake from the attacker, who won't provide it. This prevents any legitimate traffic from getting to the dashboard, and can last indefinitely. Version 0.6.2 has a patch for this issue. As a workaround, do not use HTTPS mode on the open internet where anyone can connect. Instead, put a reverse proxy in front of the dashboard, and have it handle any HTTPS connections.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-07-27T19:15:10.217",
    "last_modified": "2024-11-21T08:13:42.947",
    "fix_date": "2023-07-26T19:40:59Z"
  },
  "references": [
    {
      "url": "https://asciinema.org/a/8nRKbdf7AkPLmP3QxFZUSmPwp?t=7",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/commit/79cd78615d28f577454415e4baafe4dcd9d09666",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/pull/606",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/security/advisories/GHSA-3jr4-9rxf-fr44",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://asciinema.org/a/8nRKbdf7AkPLmP3QxFZUSmPwp?t=7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/commit/79cd78615d28f577454415e4baafe4dcd9d09666",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/pull/606",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ravenclaw900/DietPi-Dashboard/security/advisories/GHSA-3jr4-9rxf-fr44",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:04.277938",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "DietPi-Dashboard",
    "owner": "ravenclaw900",
    "created_at": "2021-08-14T18:14:22Z",
    "updated_at": "2025-01-11T10:49:42Z",
    "pushed_at": "2025-01-12T06:19:56Z",
    "size": 511935,
    "stars": 129,
    "forks": 18,
    "open_issues": 47,
    "watchers": 129,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Rust": 70119,
      "Svelte": 69338,
      "TypeScript": 7736,
      "Just": 881,
      "JavaScript": 512,
      "HTML": 378
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T21:33:39.485880"
  }
}