{
  "cve_id": "CVE-2023-40029",
  "github_data": {
    "repository": "argoproj/argo-cd",
    "fix_commit": "4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4",
    "related_commits": [
      "4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4",
      "4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4"
    ],
    "patch_url": "https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4.patch",
    "fix_commit_details": {
      "sha": "4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4",
      "commit_date": "2023-09-07T14:14:57Z",
      "author": {
        "login": "alexmt",
        "type": "User",
        "stats": {
          "total_commits": 475,
          "average_weekly_commits": 1.3121546961325967,
          "total_additions": 243825,
          "total_deletions": 121309,
          "weeks_active": 147
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-fwr2-64vr-xv9m",
        "length": 503,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 40,
        "additions": 40,
        "deletions": 0
      },
      "files": [
        {
          "filename": "util/db/cluster.go",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -345,6 +345,9 @@ func clusterToSecret(c *appv1.Cluster, secret *apiv1.Secret) error {\n \tsecret.Data = data\n \n \tsecret.Labels = c.Labels\n+\tif c.Annotations != nil && c.Annotations[apiv1.LastAppliedConfigAnnotation] != \"\" {\n+\t\treturn status.Errorf(codes.InvalidArgument, \"annotation %s cannot be set\", apiv1.LastAppliedConfigAnnotation)\n+\t}\n \tsecret.Annotations = c.Annotations\n \n \tif secret.Annotations == nil {\n@@ -403,6 +406,8 @@ func SecretToCluster(s *apiv1.Secret) (*appv1.Cluster, error) {\n \tannotations := map[string]string{}\n \tif s.Annotations != nil {\n \t\tannotations = collections.CopyStringMap(s.Annotations)\n+\t\t// delete system annotations\n+\t\tdelete(annotations, apiv1.LastAppliedConfigAnnotation)\n \t\tdelete(annotations, common.AnnotationKeyManagedBy)\n \t}\n "
        },
        {
          "filename": "util/db/cluster_test.go",
          "status": "modified",
          "additions": 35,
          "deletions": 0,
          "patch": "@@ -7,6 +7,8 @@ import (\n \n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n+\t\"google.golang.org/grpc/codes\"\n+\t\"google.golang.org/grpc/status\"\n \tv1 \"k8s.io/api/core/v1\"\n \tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n \t\"k8s.io/client-go/kubernetes/fake\"\n@@ -56,6 +58,24 @@ func Test_secretToCluster(t *testing.T) {\n \t})\n }\n \n+func Test_secretToCluster_LastAppliedConfigurationDropped(t *testing.T) {\n+\tsecret := &v1.Secret{\n+\t\tObjectMeta: metav1.ObjectMeta{\n+\t\t\tName:        \"mycluster\",\n+\t\t\tNamespace:   fakeNamespace,\n+\t\t\tAnnotations: map[string]string{v1.LastAppliedConfigAnnotation: \"val2\"},\n+\t\t},\n+\t\tData: map[string][]byte{\n+\t\t\t\"name\":   []byte(\"test\"),\n+\t\t\t\"server\": []byte(\"http://mycluster\"),\n+\t\t\t\"config\": []byte(\"{\\\"username\\\":\\\"foo\\\"}\"),\n+\t\t},\n+\t}\n+\tcluster, err := SecretToCluster(secret)\n+\trequire.NoError(t, err)\n+\tassert.Len(t, cluster.Annotations, 0)\n+}\n+\n func TestClusterToSecret(t *testing.T) {\n \tcluster := &appv1.Cluster{\n \t\tServer:      \"server\",\n@@ -78,6 +98,21 @@ func TestClusterToSecret(t *testing.T) {\n \tassert.Equal(t, cluster.Labels, s.Labels)\n }\n \n+func TestClusterToSecret_LastAppliedConfigurationRejected(t *testing.T) {\n+\tcluster := &appv1.Cluster{\n+\t\tServer:      \"server\",\n+\t\tAnnotations: map[string]string{v1.LastAppliedConfigAnnotation: \"val2\"},\n+\t\tName:        \"test\",\n+\t\tConfig:      v1alpha1.ClusterConfig{},\n+\t\tProject:     \"project\",\n+\t\tNamespaces:  []string{\"default\"},\n+\t}\n+\ts := &v1.Secret{}\n+\terr := clusterToSecret(cluster, s)\n+\trequire.Error(t, err)\n+\trequire.Equal(t, codes.InvalidArgument, status.Code(err))\n+}\n+\n func Test_secretToCluster_NoConfig(t *testing.T) {\n \tsecret := &v1.Secret{\n \t\tObjectMeta: metav1.ObjectMeta{"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d23e6ac79bb95a911b988551ba33bfc9939c5f18",
            "date": "2025-01-14T16:10:14Z",
            "author_login": "crenshaw-dev"
          },
          {
            "sha": "9a51757049dc028596d4950d7a6c7cd5a446301a",
            "date": "2025-01-14T15:41:32Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c3600d240a42a4708ec65091ffb23689b4513f85",
            "date": "2025-01-14T12:37:06Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b77d9d9f5f9cf3862ef75e14a5877a3fcf60fa40",
            "date": "2025-01-14T12:16:41Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "2f579404f68ded0b0156fc25d6e554640c4ad009",
            "date": "2025-01-14T12:12:38Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-200",
    "description": "Argo CD is a declarative continuous deployment for Kubernetes. Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in`kubectl.kubernetes.io/last-applied-configuration` annotation. pull request #7139 introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the `kubectl.kubernetes.io/last-applied-configuration` annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have `clusters, get` RBAC access. **Note:** In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive. The bug has been patched in versions 2.8.3, 2.7.14, and 2.6.15. Users are advised to upgrade. Users unable to upgrade should update/deploy cluster secret with `server-side-apply` flag which does not use or rely on `kubectl.kubernetes.io/last-applied-configuration` annotation. Note: annotation for existing secrets will require manual removal.\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-07T23:15:09.763",
    "last_modified": "2024-11-21T08:18:33.403",
    "fix_date": "2023-09-07T14:14:57Z"
  },
  "references": [
    {
      "url": "https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-cd/pull/7139",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-cd/pull/7139",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.391871",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "argo-cd",
    "owner": "argoproj",
    "created_at": "2018-02-09T11:12:01Z",
    "updated_at": "2025-01-14T12:37:12Z",
    "pushed_at": "2025-01-14T12:37:08Z",
    "size": 125601,
    "stars": 18420,
    "forks": 5620,
    "open_issues": 3601,
    "watchers": 18420,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 6686751,
      "TypeScript": 1298168,
      "Lua": 199797,
      "SCSS": 92938,
      "Shell": 58329,
      "Makefile": 24983,
      "Dockerfile": 15204,
      "Procfile": 10040,
      "JavaScript": 5975,
      "CSS": 2209,
      "Mustache": 1066,
      "HTML": 895
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:15:10.212233"
  }
}