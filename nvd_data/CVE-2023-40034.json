{
  "cve_id": "CVE-2023-40034",
  "github_data": {
    "repository": "woodpecker-ci/woodpecker",
    "fix_commit": "6e4c2f84cc84661d58cf1c0e5c421a46070bb105",
    "related_commits": [
      "6e4c2f84cc84661d58cf1c0e5c421a46070bb105",
      "6e4c2f84cc84661d58cf1c0e5c421a46070bb105"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6e4c2f84cc84661d58cf1c0e5c421a46070bb105",
      "commit_date": "2023-08-16T14:19:10Z",
      "author": {
        "login": "6543",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Validate webhook before change any data (#2221) (#2222)",
        "length": 71,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 63,
        "additions": 46,
        "deletions": 17
      },
      "files": [
        {
          "filename": "server/api/hook.go",
          "status": "modified",
          "additions": 46,
          "deletions": 17,
          "patch": "@@ -108,6 +108,10 @@ func PostHook(c *gin.Context) {\n \t_store := store.FromContext(c)\n \tforge := server.Config.Services.Forge\n \n+\t//\n+\t// 1. Parse webhook\n+\t//\n+\n \ttmpRepo, tmpBuild, err := forge.Hook(c, c.Request)\n \tif err != nil {\n \t\tif errors.Is(err, &types.ErrIgnoreEvent{}) {\n@@ -136,6 +140,11 @@ func PostHook(c *gin.Context) {\n \t\treturn\n \t}\n \n+\t//\n+\t// Skip if commit message contains skip-ci\n+\t// TODO: move into global pipeline conditions logic\n+\t//\n+\n \t// skip the tmpBuild if any case-insensitive combination of the words \"skip\" and \"ci\"\n \t// wrapped in square brackets appear in the commit message\n \tskipMatch := skipRe.FindString(tmpBuild.Message)\n@@ -146,6 +155,10 @@ func PostHook(c *gin.Context) {\n \t\treturn\n \t}\n \n+\t//\n+\t// 2. Get related repo from store and take repo renaming into account\n+\t//\n+\n \trepo, err := _store.GetRepoNameFallback(tmpRepo.ForgeRemoteID, tmpRepo.FullName)\n \tif err != nil {\n \t\tmsg := fmt.Sprintf(\"failure to get repo %s from store\", tmpRepo.FullName)\n@@ -159,24 +172,19 @@ func PostHook(c *gin.Context) {\n \t\tc.String(http.StatusNoContent, msg)\n \t\treturn\n \t}\n-\n \toldFullName := repo.FullName\n-\tif oldFullName != tmpRepo.FullName {\n-\t\t// create a redirection\n-\t\terr = _store.CreateRedirection(&model.Redirection{RepoID: repo.ID, FullName: repo.FullName})\n-\t\tif err != nil {\n-\t\t\t_ = c.AbortWithError(http.StatusInternalServerError, err)\n-\t\t\treturn\n-\t\t}\n-\t}\n \n-\trepo.Update(tmpRepo)\n-\terr = _store.UpdateRepo(repo)\n-\tif err != nil {\n-\t\tc.String(http.StatusInternalServerError, err.Error())\n+\tif repo.UserID == 0 {\n+\t\tmsg := fmt.Sprintf(\"ignoring hook. repo %s has no owner.\", repo.FullName)\n+\t\tlog.Warn().Msg(msg)\n+\t\tc.String(http.StatusNoContent, msg)\n \t\treturn\n \t}\n \n+\t//\n+\t// 3. Check if the webhook is a valid and authorized one\n+\t//\n+\n \t// get the token and verify the hook is authorized\n \tparsed, err := token.ParseRequest(c.Request, func(_ *token.Token) (string, error) {\n \t\treturn repo.Hash, nil\n@@ -205,20 +213,41 @@ func PostHook(c *gin.Context) {\n \t\treturn\n \t}\n \n-\tif repo.UserID == 0 {\n-\t\tmsg := fmt.Sprintf(\"ignoring hook. repo %s has no owner.\", repo.FullName)\n-\t\tlog.Warn().Msg(msg)\n-\t\tc.String(http.StatusNoContent, msg)\n+\t//\n+\t// 4. Update repo\n+\t//\n+\n+\tif oldFullName != tmpRepo.FullName {\n+\t\t// create a redirection\n+\t\terr = _store.CreateRedirection(&model.Redirection{RepoID: repo.ID, FullName: repo.FullName})\n+\t\tif err != nil {\n+\t\t\t_ = c.AbortWithError(http.StatusInternalServerError, err)\n+\t\t\treturn\n+\t\t}\n+\t}\n+\n+\trepo.Update(tmpRepo)\n+\terr = _store.UpdateRepo(repo)\n+\tif err != nil {\n+\t\tc.String(http.StatusInternalServerError, err.Error())\n \t\treturn\n \t}\n \n+\t//\n+\t// 5. Check if pull requests are allowed for this repo\n+\t//\n+\n \tif tmpBuild.Event == model.EventPull && !repo.AllowPull {\n \t\tmsg := \"ignoring hook: pull requests are disabled for this repo in woodpecker\"\n \t\tlog.Debug().Str(\"repo\", repo.FullName).Msg(msg)\n \t\tc.String(http.StatusNoContent, msg)\n \t\treturn\n \t}\n \n+\t//\n+\t// 6. Finally create a pipeline\n+\t//\n+\n \tpl, err := pipeline.Create(c, _store, repo, tmpBuild)\n \tif err != nil {\n \t\thandlePipelineErr(c, err)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8c59acdc965803e59e08470253e28f4ff13c9c01",
            "date": "2025-01-26T00:51:14Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "f24fa544638672156c779ef09ce3a65f4b925d16",
            "date": "2025-01-25T18:26:55Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "fa31afdcfbd35806f6ec7df1dcf33f565410e9ec",
            "date": "2025-01-25T02:24:08Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "3a175ac4cb4631512d2666174a5ad137e7b7a153",
            "date": "2025-01-25T02:19:38Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "9e46f599ad65a8d4d691814b2ecc706f2aa23a27",
            "date": "2025-01-25T01:36:57Z",
            "author_login": "renovate[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-20",
    "description": "Woodpecker is a community fork of the Drone CI system. In affected versions an attacker can post malformed webhook data witch lead to an update of the repository data that can e.g. allow the takeover of an repo. This is only critical if the CI is configured for public usage and connected to a forge witch is also in public usage. This issue has been addressed in version 1.0.2. Users are advised to upgrade. Users unable to upgrade should secure the CI system by making it inaccessible to untrusted entities, for example, by placing it behind a firewall.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-08-16T21:15:10.087",
    "last_modified": "2024-11-21T08:18:33.990",
    "fix_date": "2023-08-16T14:19:10Z"
  },
  "references": [
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/commit/6e4c2f84cc84661d58cf1c0e5c421a46070bb105",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/pull/2221",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/pull/2222",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-4gcf-5m39-98mc",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/commit/6e4c2f84cc84661d58cf1c0e5c421a46070bb105",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/pull/2221",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/pull/2222",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-4gcf-5m39-98mc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:06.437244",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "woodpecker",
    "owner": "woodpecker-ci",
    "created_at": "2019-04-03T18:06:38Z",
    "updated_at": "2025-01-26T00:51:19Z",
    "pushed_at": "2025-01-26T07:11:19Z",
    "size": 108340,
    "stars": 4569,
    "forks": 386,
    "open_issues": 330,
    "watchers": 4569,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "release/v0.14",
      "release/v0.15",
      "release/v1.0",
      "release/v2.0",
      "release/v2.6",
      "release/v2.7",
      "release/v2.8"
    ],
    "languages": {
      "Go": 2502912,
      "Vue": 239551,
      "TypeScript": 88055,
      "Makefile": 17667,
      "CSS": 12281,
      "JavaScript": 3721,
      "Nix": 1086,
      "HTML": 688
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:12:09.469643"
  }
}