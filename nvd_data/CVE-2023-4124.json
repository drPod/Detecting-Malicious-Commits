{
  "cve_id": "CVE-2023-4124",
  "github_data": {
    "repository": "answerdev/answer",
    "fix_commit": "964195fd859ee5d7171fac847374dfa31893e793",
    "related_commits": [
      "964195fd859ee5d7171fac847374dfa31893e793",
      "964195fd859ee5d7171fac847374dfa31893e793"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "964195fd859ee5d7171fac847374dfa31893e793",
      "commit_date": "2023-07-04T06:33:31Z",
      "author": {
        "login": "LinkinStars",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat(init): set default privileges when init",
        "length": 44,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 53,
        "additions": 43,
        "deletions": 10
      },
      "files": [
        {
          "filename": "internal/migrations/init.go",
          "status": "modified",
          "additions": 29,
          "deletions": 0,
          "patch": "@@ -4,6 +4,8 @@ import (\n \t\"context\"\n \t\"encoding/json\"\n \t\"fmt\"\n+\t\"github.com/answerdev/answer/internal/schema\"\n+\t\"github.com/segmentfault/pacman/log\"\n \n \t\"github.com/answerdev/answer/internal/entity\"\n \t\"golang.org/x/crypto/bcrypt\"\n@@ -38,6 +40,7 @@ func (m *Mentor) InitDB() error {\n \tm.do(\"init version table\", m.initVersionTable)\n \tm.do(\"init admin user\", m.initAdminUser)\n \tm.do(\"init config\", m.initConfig)\n+\tm.do(\"init default privileges config\", m.initDefaultRankPrivileges)\n \tm.do(\"init role\", m.initRole)\n \tm.do(\"init power\", m.initPower)\n \tm.do(\"init role power rel\", m.initRolePowerRel)\n@@ -48,6 +51,7 @@ func (m *Mentor) InitDB() error {\n \tm.do(\"init site info theme config\", m.initSiteInfoThemeConfig)\n \tm.do(\"init site info seo config\", m.initSiteInfoSEOConfig)\n \tm.do(\"init site info user config\", m.initSiteInfoUsersConfig)\n+\tm.do(\"init site info privilege rank\", m.initSiteInfoPrivilegeRank)\n \treturn m.err\n }\n \n@@ -95,6 +99,19 @@ func (m *Mentor) initConfig() {\n \t_, m.err = m.engine.Context(m.ctx).Insert(defaultConfigTable)\n }\n \n+func (m *Mentor) initDefaultRankPrivileges() {\n+\tchooseOption := schema.DefaultPrivilegeOptions.Choose(schema.PrivilegeLevel2)\n+\tfor _, privilege := range chooseOption.Privileges {\n+\t\t_, err := m.engine.Context(m.ctx).Update(\n+\t\t\t&entity.Config{Value: fmt.Sprintf(\"%d\", privilege.Value)},\n+\t\t\t&entity.Config{Key: privilege.Key},\n+\t\t)\n+\t\tif err != nil {\n+\t\t\tlog.Error(err)\n+\t\t}\n+\t}\n+}\n+\n func (m *Mentor) initRole() {\n \t_, m.err = m.engine.Context(m.ctx).Insert(roles)\n }\n@@ -192,3 +209,15 @@ func (m *Mentor) initSiteInfoUsersConfig() {\n \t\tStatus:  1,\n \t})\n }\n+\n+func (m *Mentor) initSiteInfoPrivilegeRank() {\n+\tprivilegeRankData := map[string]interface{}{\n+\t\t\"level\": schema.PrivilegeLevel2,\n+\t}\n+\tprivilegeRankDataBytes, _ := json.Marshal(privilegeRankData)\n+\t_, m.err = m.engine.Context(m.ctx).Insert(&entity.SiteInfo{\n+\t\tType:    \"privileges\",\n+\t\tContent: string(privilegeRankDataBytes),\n+\t\tStatus:  1,\n+\t})\n+}"
        },
        {
          "filename": "internal/migrations/init_data.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -232,7 +232,7 @@ var (\n \t\t{ID: 48, Key: \"rank.comment.edit\", Value: `-1`},\n \t\t{ID: 49, Key: \"rank.comment.delete\", Value: `-1`},\n \t\t{ID: 50, Key: \"rank.report.add\", Value: `1`},\n-\t\t{ID: 51, Key: \"rank.tag.add\", Value: `1`},\n+\t\t{ID: 51, Key: \"rank.tag.add\", Value: `1500`},\n \t\t{ID: 52, Key: \"rank.tag.edit\", Value: `100`},\n \t\t{ID: 53, Key: \"rank.tag.delete\", Value: `-1`},\n \t\t{ID: 54, Key: \"rank.tag.synonym\", Value: `20000`},"
        },
        {
          "filename": "internal/migrations/v3.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -117,7 +117,7 @@ ON \"question\" (\n \t\t{ID: 48, Key: \"rank.comment.edit\", Value: `-1`},\n \t\t{ID: 49, Key: \"rank.comment.delete\", Value: `-1`},\n \t\t{ID: 50, Key: \"rank.report.add\", Value: `1`},\n-\t\t{ID: 51, Key: \"rank.tag.add\", Value: `1`},\n+\t\t{ID: 51, Key: \"rank.tag.add\", Value: `1500`},\n \t\t{ID: 52, Key: \"rank.tag.edit\", Value: `100`},\n \t\t{ID: 53, Key: \"rank.tag.delete\", Value: `-1`},\n \t\t{ID: 54, Key: \"rank.tag.synonym\", Value: `20000`},"
        },
        {
          "filename": "internal/schema/siteinfo_schema.go",
          "status": "modified",
          "additions": 11,
          "deletions": 1,
          "patch": "@@ -265,6 +265,16 @@ const (\n )\n \n type PrivilegeLevel int\n+type PrivilegeOptions []*PrivilegeOption\n+\n+func (p PrivilegeOptions) Choose(level PrivilegeLevel) (option *PrivilegeOption) {\n+\tfor _, op := range p {\n+\t\tif op.Level == level {\n+\t\t\treturn op\n+\t\t}\n+\t}\n+\treturn nil\n+}\n \n // GetPrivilegesConfigResp get privileges config response\n type GetPrivilegesConfigResp struct {\n@@ -285,7 +295,7 @@ type UpdatePrivilegesConfigReq struct {\n }\n \n var (\n-\tDefaultPrivilegeOptions      []*PrivilegeOption\n+\tDefaultPrivilegeOptions      PrivilegeOptions\n \tprivilegeOptionsLevelMapping = map[string][]int{\n \t\tconstant.RankQuestionAddKey:               {1, 1, 1},\n \t\tconstant.RankAnswerAddKey:                 {1, 1, 1},"
        },
        {
          "filename": "internal/service/siteinfo/siteinfo_service.go",
          "status": "modified",
          "additions": 1,
          "deletions": 7,
          "patch": "@@ -322,13 +322,7 @@ func (s *SiteInfoService) translatePrivilegeOptions(ctx context.Context) (option\n }\n \n func (s *SiteInfoService) UpdatePrivilegesConfig(ctx context.Context, req *schema.UpdatePrivilegesConfigReq) (err error) {\n-\tvar chooseOption *schema.PrivilegeOption\n-\tfor _, option := range schema.DefaultPrivilegeOptions {\n-\t\tif option.Level == req.Level {\n-\t\t\tchooseOption = option\n-\t\t\tbreak\n-\t\t}\n-\t}\n+\tchooseOption := schema.DefaultPrivilegeOptions.Choose(req.Level)\n \tif chooseOption == nil {\n \t\treturn nil\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5886c1ec53087520ac02cbdaf9811a0cfebc829e",
            "date": "2025-01-13T03:44:57Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "bbb2e66233730ed7dd9c8e3de138369ba341d8cb",
            "date": "2025-01-13T03:19:25Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "0618947350917ecd58a5797365058da17bf8169a",
            "date": "2025-01-07T02:37:14Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "f7731bc675930f9cb9fa7a6f6346c102246b2c4d",
            "date": "2024-12-09T09:31:10Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "6ae189010b8e87d303465dbdb91e164954826373",
            "date": "2024-12-09T06:40:43Z",
            "author_login": "LinkinStars"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-862",
    "description": "Missing Authorization in GitHub repository answerdev/answer prior to v1.1.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-08-03T04:15:11.340",
    "last_modified": "2024-11-21T08:34:26.690",
    "fix_date": "2023-07-04T06:33:31Z"
  },
  "references": [
    {
      "url": "https://github.com/answerdev/answer/commit/964195fd859ee5d7171fac847374dfa31893e793",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2c684f99-d181-4106-8ee2-64a76ae6a348",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/answerdev/answer/commit/964195fd859ee5d7171fac847374dfa31893e793",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/2c684f99-d181-4106-8ee2-64a76ae6a348",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:04.290455",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "answer",
    "owner": "answerdev",
    "created_at": "2022-09-29T05:16:19Z",
    "updated_at": "2025-01-26T07:50:44Z",
    "pushed_at": "2025-01-22T02:47:12Z",
    "size": 13168,
    "stars": 13747,
    "forks": 1082,
    "open_issues": 91,
    "watchers": 13747,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 1939709,
      "TypeScript": 1249527,
      "HTML": 56622,
      "SCSS": 41263,
      "JavaScript": 16504,
      "Shell": 4175,
      "Smarty": 2499,
      "Dockerfile": 2223,
      "CSS": 1876,
      "Makefile": 1586
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:15:01.140430"
  }
}