{
  "cve_id": "CVE-2023-4198",
  "github_data": {
    "repository": "Dolibarr/dolibarr",
    "fix_commit": "3065b9ca6ade988e8d7a8a8550415c0abb56b9cb",
    "related_commits": [
      "3065b9ca6ade988e8d7a8a8550415c0abb56b9cb",
      "3065b9ca6ade988e8d7a8a8550415c0abb56b9cb"
    ],
    "patch_url": "https://github.com/Dolibarr/dolibarr/commit/3065b9ca6ade988e8d7a8a8550415c0abb56b9cb.patch",
    "fix_commit_details": {
      "sha": "3065b9ca6ade988e8d7a8a8550415c0abb56b9cb",
      "commit_date": "2023-04-27T17:30:34Z",
      "author": {
        "login": "eldy",
        "type": "User",
        "stats": {
          "total_commits": 81587,
          "average_weekly_commits": 68.79173693086004,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 1074
        }
      },
      "commit_message": {
        "title": "Clean code",
        "length": 10,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 577,
        "additions": 241,
        "deletions": 336
      },
      "files": [
        {
          "filename": "htdocs/categories/viewcat.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -590,7 +590,8 @@\n \t\t\t\tprint '<table class=\"noborder centpercent\">';\n \t\t\t\tprint '<tr class=\"liste_titre\"><td>';\n \t\t\t\tprint $langs->trans(\"AddCustomerIntoCategory\").' &nbsp;';\n-\t\t\t\tprint $form->select_company('', 'elemid', 's.client IN (1,3)');\n+\t\t\t\t$filter = 's.client IN (1,3)';\n+\t\t\t\tprint $form->select_company('', 'elemid', $filter);\n \t\t\t\tprint '<input type=\"submit\" class=\"button buttongen\" value=\"'.$langs->trans(\"ClassifyInCategory\").'\"></td>';\n \t\t\t\tprint '</tr>';\n \t\t\t\tprint '</table>';\n@@ -670,7 +671,8 @@\n \t\t\t\tprint '<table class=\"noborder centpercent\">';\n \t\t\t\tprint '<tr class=\"liste_titre\"><td>';\n \t\t\t\tprint $langs->trans(\"AddSupplierIntoCategory\").' &nbsp;';\n-\t\t\t\tprint $form->select_company('', 'elemid', 's.fournisseur = 1');\n+\t\t\t\t$filter ='s.fournisseur = 1';\n+\t\t\t\tprint $form->select_company('', 'elemid', $filter);\n \t\t\t\tprint '<input type=\"submit\" class=\"button buttongen\" value=\"'.$langs->trans(\"ClassifyInCategory\").'\"></td>';\n \t\t\t\tprint '</tr>';\n \t\t\t\tprint '</table>';"
        },
        {
          "filename": "htdocs/comm/propal/card.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1810,7 +1810,8 @@\n \t\t//$warehouse_id       = $soc->warehouse_id;\n \t} else {\n \t\tprint '<td class=\"valuefieldcreate\">';\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', '((s.client = 1 OR s.client = 2 OR s.client = 3) AND status=1)', 'SelectThirdParty', 1, 0, null, 0, 'minwidth300 maxwidth500 widthcentpercentminusxx');\n+\t\t$filter = '((s.client = 1 OR s.client = 2 OR s.client = 3) AND status=1)';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', $filter, 'SelectThirdParty', 1, 0, null, 0, 'minwidth300 maxwidth500 widthcentpercentminusxx');\n \t\t// reload page to retrieve customer informations\n \t\tif (empty($conf->global->RELOAD_PAGE_ON_CUSTOMER_CHANGE_DISABLED)) {\n \t\t\tprint '<script>\n@@ -2133,10 +2134,11 @@\n \t// Clone confirmation\n \tif ($action == 'clone') {\n \t\t// Create an array for form\n+\t\t$filter = '(s.client=1 OR s.client=2 OR s.client=3)';\n \t\t$formquestion = array(\n \t\t\t// 'text' => $langs->trans(\"ConfirmClone\"),\n \t\t\t// array('type' => 'checkbox', 'name' => 'clone_content', 'label' => $langs->trans(\"CloneMainAttributes\"), 'value' => 1),\n-\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', '(s.client=1 OR s.client=2 OR s.client=3)', '', 0, 0, null, 0, 'maxwidth300')),\n+\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', $filter, '', 0, 0, null, 0, 'maxwidth300')),\n \t\t\tarray('type' => 'checkbox', 'name' => 'update_prices', 'label' => $langs->trans('PuttingPricesUpToDate'), 'value' => 0),\n \t\t\tarray('type' => 'checkbox', 'name' => 'update_desc', 'label' => $langs->trans('PuttingDescUpToDate'), 'value' => 0),\n \t\t);"
        },
        {
          "filename": "htdocs/comm/propal/stats/index.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -263,8 +263,8 @@\n print '<tr class=\"liste_titre\"><td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Filter\").'</td></tr>';\n // Company\n print '<tr><td class=\"left\">'.$langs->trans(\"ThirdParty\").'</td><td class=\"left\">';\n-$filter = 's.client IN (1,2,3)';\n print img_picto('', 'company', 'class=\"pictofixedwidth\"');\n+$filter = 's.client IN (1,2,3)';\n print $form->select_company($socid, 'socid', $filter, 1, 0, 0, array(), 0, 'widthcentpercentminusx maxwidth300', '');\n print '</td></tr>';\n // ThirdParty Type"
        },
        {
          "filename": "htdocs/commande/card.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1788,7 +1788,8 @@\n \t\tprint '</td>';\n \t} else {\n \t\tprint '<td>';\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', '((s.client = 1 OR s.client = 2 OR s.client = 3) AND s.status=1)', 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 maxwidth500 widthcentpercentminusxx');\n+\t\t$filter = '((s.client = 1 OR s.client = 2 OR s.client = 3) AND s.status=1)';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', $filter, 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 maxwidth500 widthcentpercentminusxx');\n \t\t// reload page to retrieve customer informations\n \t\tif (empty($conf->global->RELOAD_PAGE_ON_CUSTOMER_CHANGE_DISABLED)) {\n \t\t\tprint '<script>\n@@ -2337,9 +2338,10 @@\n \n \t\t// Clone confirmation\n \t\tif ($action == 'clone') {\n+\t\t\t$filter = '(s.client=1 OR s.client = 2 OR s.client=3)';\n \t\t\t// Create an array for form\n \t\t\t$formquestion = array(\n-\t\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', '(s.client=1 OR s.client = 2 OR s.client=3)', '', 0, 0, null, 0, 'maxwidth300'))\n+\t\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', $filter, '', 0, 0, null, 0, 'maxwidth300'))\n \t\t\t);\n \t\t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id, $langs->trans('ToClone'), $langs->trans('ConfirmCloneOrder', $object->ref), 'confirm_clone', $formquestion, 'yes', 1);\n \t\t}"
        },
        {
          "filename": "htdocs/commande/stats/index.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -295,6 +295,7 @@\n print '<tr class=\"liste_titre\"><td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Filter\").'</td></tr>';\n // Company\n print '<tr><td class=\"left\">'.$langs->trans(\"ThirdParty\").'</td><td class=\"left\">';\n+$filter = '';\n if ($mode == 'customer') {\n \t$filter = 's.client IN (1,2,3)';\n }"
        },
        {
          "filename": "htdocs/compta/deplacement/stats/index.php",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -242,9 +242,8 @@\n print '<tr class=\"liste_titre\"><td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Filter\").'</td></tr>';\n // Company\n print '<tr><td>'.$langs->trans(\"ThirdParty\").'</td><td>';\n-$filter = '';\n print img_picto('', 'company', 'class=\"pictofixedwidth\"');\n-print $form->select_company($socid, 'socid', $filter, 1, 1, 0, array(), 0, 'widthcentpercentminusx maxwidth300', '');\n+print $form->select_company($socid, 'socid', '', 1, 1, 0, array(), 0, 'widthcentpercentminusx maxwidth300', '');\n print '</td></tr>';\n // User\n print '<tr><td>'.$langs->trans(\"User\").'</td><td>';"
        },
        {
          "filename": "htdocs/compta/facture/card.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -3205,7 +3205,8 @@\n \t} else {\n \t\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans('Customer').'</td>';\n \t\tprint '<td colspan=\"2\">';\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company($soc->id, 'socid', '((s.client = 1 OR s.client = 3) AND s.status = 1)', 'SelectThirdParty', 1, 0, null, 0, 'minwidth300 widthcentpercentminusxx maxwidth500');\n+\t\t$filter = '((s.client = 1 OR s.client = 3) AND s.status = 1)';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company($soc->id, 'socid', $filter, 'SelectThirdParty', 1, 0, null, 0, 'minwidth300 widthcentpercentminusxx maxwidth500');\n \t\t// Option to reload page to retrieve customer informations.\n \t\tif (empty($conf->global->RELOAD_PAGE_ON_CUSTOMER_CHANGE_DISABLED)) {\n \t\t\tprint '<script>\n@@ -4319,9 +4320,10 @@ function setRadioForTypeOfIncoice() {\n \n \t// Clone confirmation\n \tif ($action == 'clone') {\n+\t\t$filter = '(s.client=1 OR s.client=2 OR s.client=3)';\n \t\t// Create an array for form\n \t\t$formquestion = array(\n-\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company($object->socid, 'socid', '(s.client=1 OR s.client=2 OR s.client=3)', 1)),\n+\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company($object->socid, 'socid', $filter, 1)),\n \t\t\tarray('type' => 'date', 'name' => 'newdate', 'label' => $langs->trans(\"Date\"), 'value' => dol_now())\n \t\t);\n \t\t// Request confirmation to clone"
        },
        {
          "filename": "htdocs/compta/facture/stats/index.php",
          "status": "modified",
          "additions": 7,
          "deletions": 9,
          "patch": "@@ -265,15 +265,6 @@\n \n print dol_get_fiche_head($head, 'byyear', $langs->trans(\"Statistics\"), -1);\n \n-// We use select_thirdparty_list instead of select_company so we can use $filter and share same code for customer and supplier.\n-$filter = '';\n-if ($mode == 'customer') {\n-\t$filter = 's.client in (1,2,3)';\n-}\n-if ($mode == 'supplier') {\n-\t$filter = 's.fournisseur = 1';\n-}\n-\n print '<div class=\"fichecenter\"><div class=\"fichethirdleft\">';\n \n \n@@ -286,6 +277,13 @@\n print '<tr class=\"liste_titre\"><td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Filter\").'</td></tr>';\n // Company\n print '<tr><td>'.$langs->trans(\"ThirdParty\").'</td><td>';\n+$filter = '';\n+if ($mode == 'customer') {\n+\t$filter = 's.client in (1,2,3)';\n+}\n+if ($mode == 'supplier') {\n+\t$filter = 's.fournisseur = 1';\n+}\n print img_picto('', 'company', 'class=\"pictofixedwidth\"');\n print $form->select_company($socid, 'socid', $filter, 1, 0, 0, array(), 0, 'widthcentpercentminusx maxwidth300');\n print '</td></tr>';"
        },
        {
          "filename": "htdocs/compta/stats/cabyprodserv.php",
          "status": "modified",
          "additions": 2,
          "deletions": 5,
          "patch": "@@ -418,12 +418,9 @@\n \n \tprint '<td colspan=\"5\" class=\"right\">';\n \tprint '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.img_picto($langs->trans(\"Search\"), 'search.png', '', '', 1).'\"  value=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\" title=\"'.dol_escape_htmltag($langs->trans(\"Search\")).'\">';\n+\tprint '</td>';\n \n-\t$parameters = array();\n-\t$reshook = $hookmanager->executeHooks('printFieldListeTitle', $parameters);\n-\tprint $hookmanager->resPrint;\n-\n-\tprint '</td></tr>';\n+\tprint '</tr>';\n \n \t// Array header\n \tprint \"<tr class=\\\"liste_titre\\\">\";"
        },
        {
          "filename": "htdocs/compta/stats/supplier_turnover_by_prodserv.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -377,7 +377,7 @@\n \tprint '</td></tr>';\n \n \t// Array header\n-\tprint \"<tr class=\\\"liste_titre\\\">\";\n+\tprint '<tr class=\"liste_titre\">';\n \tprint_liste_field_titre(\n \t\t$langs->trans(\"Product\"),\n \t\t$_SERVER[\"PHP_SELF\"],"
        },
        {
          "filename": "htdocs/contact/card.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -996,7 +996,7 @@\n \t\t\tif (empty($conf->global->SOCIETE_DISABLE_CONTACTS)) {\n \t\t\t\tprint '<tr><td><label for=\"socid\">'.$langs->trans(\"ThirdParty\").'</label></td>';\n \t\t\t\tprint '<td colspan=\"3\" class=\"maxwidthonsmartphone\">';\n-\t\t\t\tprint img_picto('', 'company').$form->select_company(GETPOST('socid', 'int') ?GETPOST('socid', 'int') : ($object->socid ? $object->socid : -1), 'socid', '', $langs->trans(\"SelectThirdParty\"));\n+\t\t\t\tprint img_picto('', 'company').$form->select_company(GETPOST('socid', 'int') ? GETPOST('socid', 'int') : ($object->socid ? $object->socid : -1), 'socid', '', $langs->trans(\"SelectThirdParty\"));\n \t\t\t\tprint '</td>';\n \t\t\t\tprint '</tr>';\n \t\t\t}"
        },
        {
          "filename": "htdocs/contrat/card.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1332,8 +1332,9 @@\n \t\t\t);\n \t\t\t$formconfirm = $form->formconfirm($_SERVER['PHP_SELF'].\"?id=\".$object->id, $langs->trans(\"ActivateAllOnContract\"), $langs->trans(\"ConfirmActivateAllOnContract\"), \"confirm_activate\", $formquestion, 'yes', 1, 280);\n \t\t} elseif ($action == 'clone') {\n+\t\t\t$filter = '(s.client=1 OR s.client=2 OR s.client=3)';\n \t\t\t// Clone confirmation\n-\t\t\t$formquestion = array(array('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', '(s.client=1 OR s.client=2 OR s.client=3)')));\n+\t\t\t$formquestion = array(array('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', $filter)));\n \t\t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id, $langs->trans('ToClone'), $langs->trans('ConfirmCloneContract', $object->ref), 'confirm_clone', $formquestion, 'yes', 1);\n \t\t}\n "
        },
        {
          "filename": "htdocs/core/ajax/ajaxcompanies.php",
          "status": "removed",
          "additions": 0,
          "deletions": 135,
          "patch": "@@ -1,135 +0,0 @@\n-<?php\n-/* Copyright (C) 2006      Andre Cianfarani     <acianfa@free.fr>\n- * Copyright (C) 2005-2009 Regis Houssin        <regis.houssin@inodbox.com>\n- * Copyright (C) 2007-2010 Laurent Destailleur  <eldy@users.sourceforge.net>\n- * Copyright (C) 2010      Cyrille de Lambert   <info@auguria.net>\n- *\n- * This program is free software; you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation; either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License\n- * along with this program. If not, see <https://www.gnu.org/licenses/>.\n- */\n-\n-/**\n- *       \\file       htdocs/core/ajax/ajaxcompanies.php\n- *       \\brief      File to return Ajax response on third parties request\n- */\n-\n-if (!defined('NOTOKENRENEWAL')) define('NOTOKENRENEWAL', 1); // Disables token renewal\n-if (!defined('NOREQUIREMENU'))  define('NOREQUIREMENU', '1');\n-if (!defined('NOREQUIREHTML'))  define('NOREQUIREHTML', '1');\n-if (!defined('NOREQUIREAJAX'))  define('NOREQUIREAJAX', '1');\n-if (!defined('NOREQUIRESOC'))   define('NOREQUIRESOC', '1');\n-\n-// Load Dolibarr environment\n-require '../../main.inc.php';\n-require_once DOL_DOCUMENT_ROOT.'/societe/class/societe.class.php';\n-\n-$object = new Societe($db);\n-\n-$usesublevelpermission = '';\n-\n-// Security check\n-restrictedArea($user, $object->module, $object, $object->table_element, $usesublevelpermission);\n-\n-\n-/*\n- * View\n- */\n-\n-// Ajout directives pour resoudre bug IE\n-//header('Cache-Control: Public, must-revalidate');\n-//header('Pragma: public');\n-\n-//top_htmlhead(\"\", \"\", 1);  // Replaced with top_httphead. An ajax page does not need html header.\n-top_httphead();\n-\n-//print '<!-- Ajax page called with url '.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]).' -->'.\"\\n\";\n-\n-dol_syslog(join(',', $_GET));\n-\n-\n-// Generation liste des societes\n-if (GETPOST('newcompany') || GETPOST('socid', 'int') || GETPOST('id_fourn')) {\n-\t$return_arr = array();\n-\n-\t// Define filter on text typed\n-\t$socid = GETPOST('newcompany');\n-\tif (!$socid) $socid = GETPOST('socid');\n-\tif (!$socid) $socid = GETPOST('id_fourn');\n-\n-\t$sql = \"SELECT s.rowid, s.nom, s.name_alias, s.code_client, s.code_fournisseur, s.address, s.zip, s.town, s.email, s.siren, s.siret, s.ape, s.idprof4, s.client, s.fournisseur, s.datec, s.logo\";\n-\t$sql .= \" , c.label as country, d.nom as departement\";\n-\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n-\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid = s.fk_pays\";\n-\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_departements as d ON d.rowid = s.fk_departement\";\n-\t$sql .= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n-\tif ($socid) {\n-\t\t$sql .= \" AND (\";\n-\t\t// Add criteria on name/code\n-\t\tif (!empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE)) {   // Can use index\n-\t\t\t$sql .= \"s.nom LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t\t$sql .= \" OR s.code_client LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t\t$sql .= \" OR s.code_fournisseur LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t} else {\n-\t\t\t$sql .= \"s.nom LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t\t$sql .= \" OR s.code_client LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t\t$sql .= \" OR s.code_fournisseur LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n-\t\t}\n-\t\tif (!empty($conf->global->SOCIETE_ALLOW_SEARCH_ON_ROWID)) {\n-\t\t\t$sql .= \" OR s.rowid = \".((int) $socid);\n-\t\t}\n-\t\t$sql .= \")\";\n-\t}\n-\tif ($user->socid > 0) {\n-\t\t$sql .= \" AND s.rowid = \".((int) $user->socid);\n-\t}\n-\t//if (GETPOST(\"filter\")) $sql.= \" AND (\".GETPOST(\"filter\", \"alpha\").\")\"; // Add other filters\n-\t$sql .= \" ORDER BY s.nom ASC\";\n-\n-\t//dol_syslog(\"ajaxcompanies\", LOG_DEBUG);\n-\t$resql = $db->query($sql);\n-\n-\tif ($resql) {\n-\t\twhile ($row = $db->fetch_array($resql)) {\n-\t\t\t$label = $row['nom'];\n-\t\t\tif ($socid) $label = $label;\n-\t\t\t$row_array['label'] = $label;\n-\t\t\t$row_array['value'] = $row['nom'];\n-\t\t\t$row_array['key'] = $row['rowid'];\n-\t\t\t$row_array['name_alias'] = $row['name_alias'];\n-\t\t\t$row_array['code_client'] = $row['code_client'];\n-\t\t\t$row_array['code_fournisseur'] = $row['code_fournisseur'];\n-\t\t\t$row_array['address'] = $row['address'];\n-\t\t\t$row_array['zip'] = $row['zip'];\n-\t\t\t$row_array['town'] = $row['town'];\n-\t\t\t$row_array['email'] = $row['email'];\n-\t\t\t$row_array['siren'] = $row['siren'];\n-\t\t\t$row_array['siret'] = $row['siret'];\n-\t\t\t$row_array['ape'] = $row['ape'];\n-\t\t\t$row_array['idprof4'] = $row['idprof4'];\n-\t\t\t$row_array['client'] = $row['client'];\n-\t\t\t$row_array['fournisseur'] = $row['fournisseur'];\n-\t\t\t$row_array['datec'] = $row['datec'];\n-\t\t\t$row_array['logo'] = $row['logo'];\n-\t\t\t$row_array['country'] = $row['country'];\n-\t\t\t$row_array['departement'] = $row['departement'];\n-\n-\t\t\tarray_push($return_arr, $row_array);\n-\t\t}\n-\n-\t\techo json_encode($return_arr);\n-\t} else {\n-\t\techo json_encode(array('nom'=>'Error', 'label'=>'Error', 'key'=>'Error', 'value'=>'Error'));\n-\t}\n-} else {\n-\techo json_encode(array('nom'=>'ErrorBadParameter', 'label'=>'ErrorBadParameter', 'key'=>'ErrorBadParameter', 'value'=>'ErrorBadParameter'));\n-}"
        },
        {
          "filename": "htdocs/core/class/html.form.class.php",
          "status": "modified",
          "additions": 63,
          "deletions": 59,
          "patch": "@@ -1290,23 +1290,23 @@ public function select_type_fees($selected = '', $htmlname = 'type', $showempty\n \t/**\n \t *  Output html form to select a third party\n \t *\n-\t * @param string $selected Preselected type\n-\t * @param string $htmlname Name of field in form\n-\t * @param string $filter Optional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)')\n-\t * @param string $showempty Add an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n-\t * @param int $showtype Show third party type in combolist (customer, prospect or supplier)\n-\t * @param int $forcecombo Force to load all values and output a standard combobox (with no beautification)\n-\t * @param array $events Ajax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n-\t * @param int $limit Maximum number of elements\n-\t * @param string $morecss Add more css styles to the SELECT component\n-\t * @param string $moreparam Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n-\t * @param string $selected_input_value Value of preselected input text (for use with ajax)\n-\t * @param int $hidelabel Hide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n-\t * @param array $ajaxoptions Options for ajax_autocompleter\n-\t * @param bool $multiple add [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n-\t * @param array $excludeids Exclude IDs from the select combo\n-\t * @param int $showcode Show code\n-\t * @return    string                            HTML string with select box for thirdparty.\n+\t * @param string \t$selected \t\t\tPreselected type\n+\t * @param string \t$htmlname \t\t\tName of field in form\n+\t * @param string \t$filter \t\t\tOptional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>()] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n+\t * @param string \t$showempty \t\t\tAdd an empty field (Can be '1' or text key to use on empty line like 'SelectThirdParty')\n+\t * @param int \t\t$showtype \t\t\tShow third party type in combolist (customer, prospect or supplier)\n+\t * @param int \t\t$forcecombo \t\tForce to load all values and output a standard combobox (with no beautification)\n+\t * @param array \t$events \t\t\tAjax event options to run on change. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n+\t * @param int \t\t$limit \t\t\t\tMaximum number of elements\n+\t * @param string \t$morecss \t\t\tAdd more css styles to the SELECT component\n+\t * @param string \t$moreparam \t\t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n+\t * @param string \t$selected_input_value \tValue of preselected input text (for use with ajax)\n+\t * @param int \t\t$hidelabel \t\t\tHide label (0=no, 1=yes, 2=show search icon (before) and placeholder, 3 search icon after)\n+\t * @param array \t$ajaxoptions \t\tOptions for ajax_autocompleter\n+\t * @param bool \t\t$multiple \t\t\tadd [] in the name of element and add 'multiple' attribut (not working with ajax_autocompleter)\n+\t * @param array \t$excludeids \t\tExclude IDs from the select combo\n+\t * @param int \t\t$showcode \t\t\tShow code\n+\t * @return string  \t\t                HTML string with select box for thirdparty.\n \t */\n \tpublic function select_company($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $limit = 0, $morecss = 'minwidth100', $moreparam = '', $selected_input_value = '', $hidelabel = 1, $ajaxoptions = array(), $multiple = false, $excludeids = array(), $showcode = 0)\n \t{\n@@ -1366,22 +1366,22 @@ public function select_company($selected = '', $htmlname = 'socid', $filter = ''\n \t *  Output html form to select a third party.\n \t *  Note, you must use the select_company to get the component to select a third party. This function must only be called by select_company.\n \t *\n-\t * @param string $selected Preselected type\n-\t * @param string $htmlname Name of field in form\n-\t * @param string $filter Optional filters criteras (example: 's.rowid NOT IN (x)', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n-\t * @param string $showempty Add an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n-\t * @param int $showtype Show third party type in combolist (customer, prospect or supplier)\n-\t * @param int $forcecombo Force to use standard HTML select component without beautification\n-\t * @param array $events Event options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n-\t * @param string $filterkey Filter on key value\n-\t * @param int $outputmode 0=HTML select string, 1=Array\n-\t * @param int $limit Limit number of answers\n-\t * @param string $morecss Add more css styles to the SELECT component\n-\t * @param string $moreparam Add more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n-\t * @param bool $multiple add [] in the name of element and add 'multiple' attribut\n-\t * @param array $excludeids Exclude IDs from the select combo\n-\t * @param int $showcode Show code in list\n-\t * @return    array|string            HTML string with\n+\t * @param string \t$selected \t\tPreselected type\n+\t * @param string \t$htmlname \t\tName of field in form\n+\t * @param string \t$filter \t\tOptional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>()] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n+\t * @param string \t$showempty \t\tAdd an empty field (Can be '1' or text to use on empty line like 'SelectThirdParty')\n+\t * @param int \t\t$showtype \t\tShow third party type in combolist (customer, prospect or supplier)\n+\t * @param int \t\t$forcecombo \tForce to use standard HTML select component without beautification\n+\t * @param array \t$events \t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n+\t * @param string \t$filterkey \t\tFilter on key value\n+\t * @param int \t\t$outputmode \t0=HTML select string, 1=Array\n+\t * @param int \t\t$limit \t\t\tLimit number of answers\n+\t * @param string \t$morecss \t\tAdd more css styles to the SELECT component\n+\t * @param string \t$moreparam \t\tAdd more parameters onto the select tag. For example 'style=\"width: 95%\"' to avoid select2 component to go over parent container\n+\t * @param bool \t\t$multiple \t\tadd [] in the name of element and add 'multiple' attribut\n+\t * @param array \t$excludeids \tExclude IDs from the select combo\n+\t * @param int \t\t$showcode \t\tShow code in list\n+\t * @return array|string            \tHTML string with\n \t */\n \tpublic function select_thirdparty_list($selected = '', $htmlname = 'socid', $filter = '', $showempty = '', $showtype = 0, $forcecombo = 0, $events = array(), $filterkey = '', $outputmode = 0, $limit = 0, $morecss = 'minwidth100', $moreparam = '', $multiple = false, $excludeids = array(), $showcode = 0)\n \t{\n@@ -1403,9 +1403,13 @@ public function select_thirdparty_list($selected = '', $htmlname = 'socid', $fil\n \t\tif (function_exists('testSqlAndScriptInject')) {\n \t\t\tif (testSqlAndScriptInject($filter, 3) > 0) {\n \t\t\t\t$filter = '';\n+\t\t\t\treturn 'SQLInjectionTryDetected';\n \t\t\t}\n \t\t}\n \n+\t\t//$errormsg = '';\n+\t\t//$filter = forgeSQLFromUniversalSearchCriteria($filter, $errormsg);\n+\n \t\t// We search companies\n \t\t$sql = \"SELECT s.rowid, s.nom as name, s.name_alias, s.tva_intra, s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n \t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n@@ -1470,7 +1474,7 @@ public function select_thirdparty_list($selected = '', $htmlname = 'socid', $fil\n \t\t$sql .= $this->db->plimit($limit, 0);\n \n \t\t// Build output string\n-\t\tdol_syslog(get_class($this) . \"::select_thirdparty_list\", LOG_DEBUG);\n+\t\tdol_syslog(get_class($this).\"::select_thirdparty_list\", LOG_DEBUG);\n \t\t$resql = $this->db->query($sql);\n \t\tif ($resql) {\n \t\t\tif (!$forcecombo) {\n@@ -6070,18 +6074,18 @@ public function form_contacts($page, $societe, $selected = '', $htmlname = 'cont\n \t/**\n \t *  Output html select to select thirdparty\n \t *\n-\t * @param string $page Page\n-\t * @param string $selected Id preselected\n-\t * @param string $htmlname Name of HTML select\n-\t * @param string $filter Optional filters criteras. Do not use a filter coming from input of users.\n-\t * @param int $showempty Add an empty field\n-\t * @param int $showtype Show third party type in combolist (customer, prospect or supplier)\n-\t * @param int $forcecombo Force to use combo box\n-\t * @param array $events Event options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n-\t * @param int $nooutput No print output. Return it only.\n-\t * @param array $excludeids Exclude IDs from the select combo\n-\t * @param string $textifnothirdparty Text to show if no thirdparty\n-\t * @return    string                            HTML output or ''\n+\t * @param string \t$page \t\t\t\t\tPage\n+\t * @param string \t$selected \t\t\t\tId preselected\n+\t * @param string \t$htmlname \t\t\t\tName of HTML select\n+\t * @param string\t$filter \t\t\t\tOptional filters criteras. WARNING: To avoid SQL injection, only few chars [.a-z0-9 =<>()] are allowed here (example: 's.rowid <> x', 's.client IN (1,3)'). Do not use a filter coming from input of users.\n+\t * @param int \t\t$showempty \t\t\t\tAdd an empty field\n+\t * @param int \t\t$showtype \t\t\t\tShow third party type in combolist (customer, prospect or supplier)\n+\t * @param int \t\t$forcecombo \t\t\tForce to use combo box\n+\t * @param array \t$events \t\t\t\tEvent options. Example: array(array('method'=>'getContacts', 'url'=>dol_buildpath('/core/ajax/contacts.php',1), 'htmlname'=>'contactid', 'params'=>array('add-customer-contact'=>'disabled')))\n+\t * @param int \t\t$nooutput \t\t\t\tNo print output. Return it only.\n+\t * @param array \t$excludeids \t\t\tExclude IDs from the select combo\n+\t * @param string \t$textifnothirdparty \tText to show if no thirdparty\n+\t * @return    string                        HTML output or ''\n \t */\n \tpublic function form_thirdparty($page, $selected = '', $htmlname = 'socid', $filter = '', $showempty = 0, $showtype = 0, $forcecombo = 0, $events = array(), $nooutput = 0, $excludeids = array(), $textifnothirdparty = '')\n \t{\n@@ -7825,19 +7829,19 @@ protected function constructMemberListOption(&$objp, &$opt, &$optJson, $selected\n \t * Can use autocomplete with ajax after x key pressed or a full combo, depending on setup.\n \t * This is the generic method that will replace all specific existing methods.\n \t *\n-\t * @param string $objectdesc ObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter[:Sortfield]]]\n-\t * @param string $htmlname Name of HTML select component\n-\t * @param int $preselectedvalue Preselected value (ID of element)\n-\t * @param string $showempty ''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n-\t * @param string $searchkey Search criteria\n-\t * @param string $placeholder Place holder\n-\t * @param string $morecss More CSS\n-\t * @param string $moreparams More params provided to ajax call\n-\t * @param int $forcecombo Force to load all values and output a standard combobox (with no beautification)\n-\t * @param int $disabled 1=Html component is disabled\n-\t * @param string $selected_input_value Value of preselected input text (for use with ajax)\n-\t * @return    string                                Return HTML string\n-\t * @see selectForFormsList() select_thirdparty_list()\n+\t * @param \tstring \t$objectdesc \t\tObjectClass:PathToClass[:AddCreateButtonOrNot[:Filter[:Sortfield]]]\n+\t * @param \tstring \t$htmlname \t\t\tName of HTML select component\n+\t * @param \tint \t$preselectedvalue \tPreselected value (ID of element)\n+\t * @param \tstring \t$showempty \t\t\t''=empty values not allowed, 'string'=value show if we allow empty values (for example 'All', ...)\n+\t * @param \tstring \t$searchkey \t\t\tSearch criteria\n+\t * @param \tstring \t$placeholder \t\tPlace holder\n+\t * @param \tstring \t$morecss \t\t\tMore CSS\n+\t * @param \tstring \t$moreparams \t\tMore params provided to ajax call\n+\t * @param \tint \t$forcecombo \t\tForce to load all values and output a standard combobox (with no beautification)\n+\t * @param \tint \t$disabled \t\t\t1=Html component is disabled\n+\t * @param \tstring \t$selected_input_value Value of preselected input text (for use with ajax)\n+\t * @return  string                      Return HTML string\n+\t * @see selectForFormsList(), select_thirdparty_list()\n \t */\n \tpublic function selectForForms($objectdesc, $htmlname, $preselectedvalue, $showempty = '', $searchkey = '', $placeholder = '', $morecss = '', $moreparams = '', $forcecombo = 0, $disabled = 0, $selected_input_value = '')\n \t{"
        },
        {
          "filename": "htdocs/core/lib/functions.lib.php",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -11785,7 +11785,9 @@ function jsonOrUnserialize($stringtodecode)\n /**\n  * forgeSQLFromUniversalSearchCriteria\n  *\n- * @param \tstring\t\t$filter\t\tString with universal search string. Must be  (aaa:bbb:...) with aaa is a field name (with alias or not) and bbb is one of this operator '=', '<', '>', '<=', '>=', '!=', 'in', 'notin', 'like', 'notlike', 'is', 'isnot'.\n+ * @param \tstring\t\t$filter\t\tString with universal search string. Must be  (aaa:bbb:...) with\n+ * \t\t\t\t\t\t\t\t\taaa is a field name (with alias or not) and\n+ * \t\t\t\t\t\t\t\t\tbbb is one of this operator '=', '<', '>', '<=', '>=', '!=', 'in', 'notin', 'like', 'notlike', 'is', 'isnot'.\n  * @param\tstring\t\t$error\t\tError message\n  * @return\tstring\t\t\t\t\tReturn forged SQL string\n  */"
        },
        {
          "filename": "htdocs/don/card.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -440,7 +440,8 @@\n \t\t} else {\n \t\t\tprint '<td class=\"fieldrequired\">'.$langs->trans('ThirdParty').'</td>';\n \t\t\tprint '<td>';\n-\t\t\tprint $form->select_company($soc->id, 'socid', '(s.client = 1 OR s.client = 3) AND status=1', 'SelectThirdParty', 0, 0, null, 0, 'minwidth300');\n+\t\t\t$filter = '(s.client = 1 OR s.client = 3) AND status=1';\n+\t\t\tprint $form->select_company($soc->id, 'socid', $filter, 'SelectThirdParty', 0, 0, null, 0, 'minwidth300');\n \t\t\t// Option to reload page to retrieve customer informations. Note, this clear other input\n \t\t\tif (!empty($conf->global->RELOAD_PAGE_ON_CUSTOMER_CHANGE_DISABLED)) {\n \t\t\t\tprint '<script type=\"text/javascript\">"
        },
        {
          "filename": "htdocs/fourn/commande/card.php",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -1694,7 +1694,8 @@\n \t\tprint $societe->getNomUrl(1, 'supplier');\n \t\tprint '<input type=\"hidden\" name=\"socid\" value=\"'.$societe->id.'\">';\n \t} else {\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company((empty($socid) ? '' : $socid), 'socid', '(s.fournisseur=1 AND s.status=1)', 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 maxwidth500 widthcentpercentminusxx');\n+\t\t$filter = '(s.fournisseur=1 AND s.status=1)';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company((empty($socid) ? '' : $socid), 'socid', $filter, 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 maxwidth500 widthcentpercentminusxx');\n \t\t// reload page to retrieve customer informations\n \t\tif (empty($conf->global->RELOAD_PAGE_ON_SUPPLIER_CHANGE_DISABLED)) {\n \t\t\tprint '<script>\n@@ -1898,9 +1899,10 @@\n \n \t// Clone confirmation\n \tif ($action == 'clone') {\n+\t\t$filter = '(s.fournisseur=1)';\n \t\t// Create an array for form\n \t\t$formquestion = array(\n-\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', '(s.fournisseur=1)'))\n+\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', $filter))\n \t\t);\n \t\t// Paiement incomplet. On demande si motif = escompte ou autre\n \t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id, $langs->trans('ToClone'), $langs->trans('ConfirmCloneOrder', $object->ref), 'confirm_clone', $formquestion, 'yes', 1);\n@@ -2034,7 +2036,8 @@\n \t\t$morehtmlref .= '<form method=\"post\" action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\">';\n \t\t$morehtmlref .= '<input type=\"hidden\" name=\"action\" value=\"set_thirdparty\">';\n \t\t$morehtmlref .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n-\t\t$morehtmlref .= $form->select_company($object->thirdparty->id, 'new_socid', 's.fournisseur=1', '', 0, 0, array(), 0, 'minwidth300');\n+\t\t$filter = 's.fournisseur=1';\n+\t\t$morehtmlref .= $form->select_company($object->thirdparty->id, 'new_socid', $filter, '', 0, 0, array(), 0, 'minwidth300');\n \t\t$morehtmlref .= '<input type=\"submit\" class=\"button valignmiddle\" value=\"'.$langs->trans(\"Modify\").'\">';\n \t\t$morehtmlref .= '</form>';\n \t}"
        },
        {
          "filename": "htdocs/fourn/facture/card.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -2199,7 +2199,8 @@\n \t\tprint $societe->getNomUrl(1, 'supplier');\n \t\tprint '<input type=\"hidden\" name=\"socid\" value=\"'.$societe->id.'\">';\n \t} else {\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company(empty($societe->id) ? 0 : $societe->id, 'socid', '(s.fournisseur = 1 AND s.status = 1)', 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 widthcentpercentminusxx maxwidth500');\n+\t\t$filter = '(s.fournisseur = 1 AND s.status = 1)';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company(empty($societe->id) ? 0 : $societe->id, 'socid', $filter, 'SelectThirdParty', 1, 0, null, 0, 'minwidth175 widthcentpercentminusxx maxwidth500');\n \t\t// reload page to retrieve supplier informations\n \t\tif (empty($conf->global->RELOAD_PAGE_ON_SUPPLIER_CHANGE_DISABLED)) {\n \t\t\tprint '<script type=\"text/javascript\">"
        },
        {
          "filename": "htdocs/margin/customerMargins.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -110,7 +110,8 @@\n \tif ($soc->client) {\n \t\tprint '<tr><td class=\"titlefield\">'.$langs->trans('ThirdPartyName').'</td>';\n \t\tprint '<td class=\"maxwidthonsmartphone\" colspan=\"4\">';\n-\t\tprint img_picto('', 'company').$form->select_company($socid, 'socid', '(client=1 OR client=3)', 1, 0, 0);\n+\t\t$filter = '(client=1 OR client=3)';\n+\t\tprint img_picto('', 'company').$form->select_company($socid, 'socid', $filter, 1, 0, 0);\n \t\tprint '</td></tr>';\n \n \t\t$client = true;"
        },
        {
          "filename": "htdocs/product/fournisseurs.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -501,7 +501,8 @@\n \t\t\t\t} else {\n \t\t\t\t\t$events = array();\n \t\t\t\t\t$events[] = array('method' => 'getVatRates', 'url' => dol_buildpath('/core/ajax/vatrates.php', 1), 'htmlname' => 'tva_tx', 'params' => array());\n-\t\t\t\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company(GETPOST(\"id_fourn\", 'alpha'), 'id_fourn', 'fournisseur=1', 'SelectThirdParty', 0, 0, $events);\n+\t\t\t\t\t$filter = 'fournisseur=1';\n+\t\t\t\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company(GETPOST(\"id_fourn\", 'alpha'), 'id_fourn', $filter, 'SelectThirdParty', 0, 0, $events);\n \n \t\t\t\t\t$parameters = array('filtre'=>\"fournisseur=1\", 'html_name'=>'id_fourn', 'selected'=>GETPOST(\"id_fourn\"), 'showempty'=>1, 'prod_id'=>$object->id);\n \t\t\t\t\t$reshook = $hookmanager->executeHooks('formCreateThirdpartyOptions', $parameters, $object, $action);"
        },
        {
          "filename": "htdocs/product/price.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1944,7 +1944,8 @@ function on_change() {\n \t\tprint '<tr>';\n \t\tprint '<td class=\"fieldrequired\">'.$langs->trans('ThirdParty').'</td>';\n \t\tprint '<td>';\n-\t\tprint img_picto('', 'company').$form->select_company('', 'socid', 's.client IN (1,2,3)', 'SelectThirdParty', 0, 0, array(), 0, 'minwidth300');\n+\t\t$filter = 's.client IN (1,2,3)';\n+\t\tprint img_picto('', 'company').$form->select_company('', 'socid', $filter, 'SelectThirdParty', 0, 0, array(), 0, 'minwidth300');\n \t\tprint '</td>';\n \t\tprint '</tr>';\n "
        },
        {
          "filename": "htdocs/product/stock/replenish.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -615,7 +615,8 @@\n \tprint '</div>';\n }\n print '<div class=\"inline-block valignmiddle\" style=\"padding-right: 20px;\">';\n-print $langs->trans('Supplier').' '.$form->select_company($fk_supplier, 'fk_supplier', 'fournisseur=1', 1);\n+$filter = 'fournisseur=1';\n+print $langs->trans('Supplier').' '.$form->select_company($fk_supplier, 'fk_supplier', $filter, 1);\n print '</div>';\n \n $parameters = array();"
        },
        {
          "filename": "htdocs/projet/card.php",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -698,11 +698,11 @@\n \t\tprint $langs->trans(\"ThirdParty\");\n \t\tprint (empty($conf->global->PROJECT_THIRDPARTY_REQUIRED) ? '' : '</span>');\n \t\tprint '</td><td class=\"maxwidthonsmartphone\">';\n-\t\t$filteronlist = '';\n+\t\t$filter = '';\n \t\tif (!empty($conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST)) {\n-\t\t\t$filteronlist = $conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST;\n+\t\t\t$filter = $conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST;\n \t\t}\n-\t\t$text = img_picto('', 'company').$form->select_company(GETPOST('socid', 'int'), 'socid', $filteronlist, 'SelectThirdParty', 1, 0, array(), 0, 'minwidth300 widthcentpercentminusxx maxwidth500');\n+\t\t$text = img_picto('', 'company').$form->select_company(GETPOST('socid', 'int'), 'socid', $filter, 'SelectThirdParty', 1, 0, array(), 0, 'minwidth300 widthcentpercentminusxx maxwidth500');\n \t\tif (empty($conf->global->PROJECT_CAN_ALWAYS_LINK_TO_ALL_SUPPLIERS) && empty($conf->dol_use_jmobile)) {\n \t\t\t$texthelp = $langs->trans(\"IfNeedToUseOtherObjectKeepEmpty\");\n \t\t\tprint $form->textwithtooltip($text.' '.img_help(), $texthelp, 1);\n@@ -910,7 +910,7 @@ function change_percent()\n \tif ($action == 'clone') {\n \t\t$formquestion = array(\n \t\t\t'text' => $langs->trans(\"ConfirmClone\"),\n-\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int') > 0 ?GETPOST('socid', 'int') : $object->socid, 'socid', '', \"None\", 0, 0, null, 0, 'minwidth200 maxwidth250')),\n+\t\t\tarray('type' => 'other', 'name' => 'socid', 'label' => $langs->trans(\"SelectThirdParty\"), 'value' => $form->select_company(GETPOST('socid', 'int') > 0 ? GETPOST('socid', 'int') : $object->socid, 'socid', '', \"None\", 0, 0, null, 0, 'minwidth200 maxwidth250')),\n \t\t\tarray('type' => 'checkbox', 'name' => 'clone_contacts', 'label' => $langs->trans(\"CloneContacts\"), 'value' => true),\n \t\t\tarray('type' => 'checkbox', 'name' => 'clone_tasks', 'label' => $langs->trans(\"CloneTasks\"), 'value' => true),\n \t\t\tarray('type' => 'checkbox', 'name' => 'move_date', 'label' => $langs->trans(\"CloneMoveDate\"), 'value' => true),\n@@ -1077,12 +1077,12 @@ function set_usage_event() {\n \t\t\tprint $langs->trans(\"ThirdParty\");\n \t\t\tprint (empty($conf->global->PROJECT_THIRDPARTY_REQUIRED) ? '' : '</span>');\n \t\t\tprint '</td><td>';\n-\t\t\t$filteronlist = '';\n+\t\t\t$filter = '';\n \t\t\tif (!empty($conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST)) {\n-\t\t\t\t$filteronlist = $conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST;\n+\t\t\t\t$filter = $conf->global->PROJECT_FILTER_FOR_THIRDPARTY_LIST;\n \t\t\t}\n \t\t\t$text = img_picto('', 'company', 'class=\"pictofixedwidth\"');\n-\t\t\t$text .= $form->select_company($object->thirdparty->id, 'socid', $filteronlist, 'None', 1, 0, array(), 0, 'minwidth300');\n+\t\t\t$text .= $form->select_company($object->thirdparty->id, 'socid', $filter, 'None', 1, 0, array(), 0, 'minwidth300');\n \t\t\tif (empty($conf->global->PROJECT_CAN_ALWAYS_LINK_TO_ALL_SUPPLIERS) && empty($conf->dol_use_jmobile)) {\n \t\t\t\t$texthelp = $langs->trans(\"IfNeedToUseOtherObjectKeepEmpty\");\n \t\t\t\tprint $form->textwithtooltip($text.' '.img_help(), $texthelp, 1, 0, '', '', 2);"
        },
        {
          "filename": "htdocs/societe/ajax/ajaxcompanies.php",
          "status": "modified",
          "additions": 101,
          "deletions": 81,
          "patch": "@@ -20,7 +20,7 @@\n \n /**\n  *       \\file       htdocs/societe/ajax/ajaxcompanies.php\n- *       \\brief      File to return Ajax response on third parties request\n+ *       \\brief      File to return Ajax response on third parties request. Search is done on name|name_alias|code_client|code_fournisseur\n  */\n \n if (!defined('NOTOKENRENEWAL')) {\n@@ -53,107 +53,127 @@\n // Security check\n if ($user->socid > 0) {\n \t$socid = $user->socid;\n-\t$object->id = $socid;\n+\tif ($object->socid && $socid != $object->socid) {\n+\t\taccessforbidden('Not allowed to access thirdparty id '.$id.' with an external user on id '.$socid);\n+\t}\n }\n-restrictedArea($user, 'societe', $object->id, '&societe');\n+restrictedArea($user, 'societe', $object, '&societe');\n \n \n /*\n  * View\n  */\n \n-// Ajout directives pour resoudre bug IE\n-//header('Cache-Control: Public, must-revalidate');\n-//header('Pragma: public');\n-\n //top_htmlhead(\"\", \"\", 1);  // Replaced with top_httphead. An ajax page does not need html header.\n-top_httphead();\n+top_httphead('application/json');\n \n //print '<!-- Ajax page called with url '.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]).' -->'.\"\\n\";\n \n \n-// Generate list of companies\n-if (GETPOST('newcompany') || GETPOST('socid', 'int') || GETPOST('id_fourn', 'int')) {\n-\t$return_arr = array();\n+$return_arr = array();\n \n-\t// Define filter on text typed\n-\t$socid = GETPOST('newcompany');\n-\tif (!$socid) {\n-\t\t$socid = GETPOST('socid', 'int');\n-\t}\n-\tif (!$socid) {\n-\t\t$socid = GETPOST('id_fourn', 'int');\n-\t}\n+// Define filter on text typed\n+$socid = GETPOST('newcompany');\n+if (!$socid) {\n+\t$socid = GETPOST('socid', 'int');\n+}\n+if (!$socid) {\n+\t$socid = GETPOST('id_fourn', 'int');\n+}\n \n-\t$sql = \"SELECT s.rowid, s.nom\";\n-\tif (!empty($conf->global->SOCIETE_ADD_REF_IN_LIST)) {\n-\t\t$sql .= \", s.client, s.fournisseur, s.code_client, s.code_fournisseur\";\n-\t}\n-\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n-\t\t$sql .= \", s.address, s.zip, s.town\";\n-\t\t$sql .= \", dictp.code as country_code\";\n-\t}\n-\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n-\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n-\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as dictp ON dictp.rowid = s.fk_pays\";\n+// Generate list of companies\n+if (! $socid) {\n+\techo json_encode(array('nom'=>'ErrorBadParameter', 'label'=>'ErrorBadParameter', 'key'=>'ErrorBadParameter', 'value'=>'ErrorBadParameter'));\n+\texit;\n+}\n+\n+$sql = \"SELECT s.rowid, s.nom, s.name_alias, s.code_client, s.code_fournisseur, s.address, s.zip, s.town, s.email, s.siren, s.siret, s.ape, s.idprof4, s.idprof5, s.idprof6, s.client, s.fournisseur, s.datec, s.logo\";\n+if (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n+\t$sql .= \", dictp.code as country_code\";\n+}\n+$sql .= \" FROM \".MAIN_DB_PREFIX.\"societe as s\";\n+if (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n+\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as dictp ON dictp.rowid = s.fk_pays\";\n+}\n+$sql .= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n+if ($socid) {\n+\t$sql .= \" AND (\";\n+\t// Add criteria on name/code\n+\tif (!empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE)) {   // Can use index\n+\t\t$sql .= \"s.nom LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.name_alias LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.code_client LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.code_fournisseur LIKE '\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t} else {\n+\t\t$sql .= \"s.nom LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.name_alias LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.code_client LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n+\t\t$sql .= \" OR s.code_fournisseur LIKE '%\".$db->escape($db->escapeforlike($socid)).\"%'\";\n \t}\n-\t$sql .= \" WHERE s.entity IN (\".getEntity('societe').\")\";\n-\tif ($socid) {\n-\t\t$sql .= \" AND (\";\n-\t\t// Add criteria on name/code\n-\t\tif (!empty($conf->global->COMPANY_DONOTSEARCH_ANYWHERE)) {   // Can use index\n-\t\t\t$sql .= \"nom LIKE '\".$db->escape($socid).\"%'\";\n-\t\t\t$sql .= \" OR code_client LIKE '\".$db->escape($socid).\"%'\";\n-\t\t\t$sql .= \" OR code_fournisseur LIKE '\".$db->escape($socid).\"%'\";\n-\t\t} else {\n-\t\t\t$sql .= \"nom LIKE '%\".$db->escape($socid).\"%'\";\n-\t\t\t$sql .= \" OR code_client LIKE '%\".$db->escape($socid).\"%'\";\n-\t\t\t$sql .= \" OR code_fournisseur LIKE '%\".$db->escape($socid).\"%'\";\n-\t\t}\n-\t\tif (!empty($conf->global->SOCIETE_ALLOW_SEARCH_ON_ROWID)) {\n-\t\t\t$sql .= \" OR rowid = \".((int) $socid);\n-\t\t}\n-\t\t$sql .= \")\";\n+\tif (!empty($conf->global->SOCIETE_ALLOW_SEARCH_ON_ROWID)) {\n+\t\t$sql .= \" OR s.rowid = \".((int) $socid);\n \t}\n-\t//if (GETPOST(\"filter\")) $sql.= \" AND (\".GETPOST(\"filter\", \"alpha\").\")\"; // Add other filters\n-\t$sql .= \" ORDER BY nom ASC\";\n-\n-\t//dol_syslog(\"ajaxcompanies\", LOG_DEBUG);\n-\t$resql = $db->query($sql);\n-\tif ($resql) {\n-\t\twhile ($row = $db->fetch_array($resql)) {\n-\t\t\t$label = '';\n-\t\t\tif (!empty($conf->global->SOCIETE_ADD_REF_IN_LIST)) {\n-\t\t\t\tif (($row['client']) && (!empty($row['code_client']))) {\n-\t\t\t\t\t$label = $row['code_client'].' - ';\n-\t\t\t\t}\n-\t\t\t\tif (($row['fournisseur']) && (!empty($row['code_fournisseur']))) {\n-\t\t\t\t\t$label .= $row['code_fournisseur'].' - ';\n-\t\t\t\t}\n+\t$sql .= \")\";\n+}\n+// Protection for external user access\n+if ($user->socid > 0) {\n+\t$sql .= \" AND s.rowid = \".((int) $user->socid);\n+}\n+//if (GETPOST(\"filter\")) $sql.= \" AND (\".GETPOST(\"filter\", \"alpha\").\")\"; // Add other filters\n+$sql .= \" ORDER BY s.nom ASC\";\n+\n+//dol_syslog(\"ajaxcompanies\", LOG_DEBUG);\n+$resql = $db->query($sql);\n+if ($resql) {\n+\twhile ($row = $db->fetch_array($resql)) {\n+\t\t$label = '';\n+\t\tif (!empty($conf->global->SOCIETE_ADD_REF_IN_LIST)) {\n+\t\t\tif (($row['client']) && (!empty($row['code_client']))) {\n+\t\t\t\t$label = $row['code_client'].' - ';\n \t\t\t}\n+\t\t\tif (($row['fournisseur']) && (!empty($row['code_fournisseur']))) {\n+\t\t\t\t$label .= $row['code_fournisseur'].' - ';\n+\t\t\t}\n+\t\t}\n \n-\t\t\t$label .= $row['nom'];\n+\t\t$label .= $row['nom'];\n \n-\t\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n-\t\t\t\t$label .= ($row['address'] ? ' - '.$row['address'] : '').($row['zip'] ? ' - '.$row['zip'] : '').($row['town'] ? ' '.$row['town'] : '');\n-\t\t\t\tif (!empty($row['country_code'])) {\n-\t\t\t\t\t$label .= ', '.$langs->trans('Country'.$row['country_code']);\n-\t\t\t\t}\n+\t\tif (!empty($conf->global->COMPANY_SHOW_ADDRESS_SELECTLIST)) {\n+\t\t\t$label .= ($row['address'] ? ' - '.$row['address'] : '').($row['zip'] ? ' - '.$row['zip'] : '').($row['town'] ? ' '.$row['town'] : '');\n+\t\t\tif (!empty($row['country_code'])) {\n+\t\t\t\t$label .= ', '.$langs->trans('Country'.$row['country_code']);\n \t\t\t}\n-\t\t\tif ($socid) {\n-\t\t\t\t$label = preg_replace('/('.preg_quote($socid, '/').')/i', '<strong>$1</strong>', $label, 1);\n-\t\t\t}\n-\t\t\t$row_array['label'] = $label;\n-\t\t\t$row_array['value'] = $row['nom'];\n-\t\t\t$row_array['key'] = $row['rowid'];\n-\n-\t\t\tarray_push($return_arr, $row_array);\n \t\t}\n-\n-\t\techo json_encode($return_arr);\n-\t} else {\n-\t\techo json_encode(array('nom'=>'Error', 'label'=>'Error', 'key'=>'Error', 'value'=>'Error'));\n+\t\tif ($socid) {\n+\t\t\t$label = preg_replace('/('.preg_quote($socid, '/').')/i', '<strong>$1</strong>', $label, 1);\n+\t\t}\n+\t\t$row_array['label'] = $label;\n+\n+\t\t$row_array['value'] = $row['nom'];\n+\t\t$row_array['key'] = $row['rowid'];\n+\n+\t\t$row_array['name_alias'] = $row['name_alias'];\n+\t\t$row_array['client'] = $row['client'];\n+\t\t$row_array['fournisseur'] = $row['fournisseur'];\n+\t\t$row_array['code_client'] = $row['code_client'];\n+\t\t$row_array['code_fournisseur'] = $row['code_fournisseur'];\n+\t\t$row_array['address'] = $row['address'];\n+\t\t$row_array['zip'] = $row['zip'];\n+\t\t$row_array['town'] = $row['town'];\n+\t\t$row_array['email'] = $row['email'];\n+\t\t$row_array['siren'] = $row['siren'];\n+\t\t$row_array['siret'] = $row['siret'];\n+\t\t$row_array['ape'] = $row['ape'];\n+\t\t$row_array['idprof4'] = $row['idprof4'];\n+\t\t$row_array['idprof5'] = $row['idprof5'];\n+\t\t$row_array['idprof6'] = $row['idprof6'];\n+\t\t$row_array['datec'] = $row['datec'];\n+\t\t$row_array['logo'] = $row['logo'];\n+\n+\t\tarray_push($return_arr, $row_array);\n \t}\n+\n+\techo json_encode($return_arr);\n } else {\n-\techo json_encode(array('nom'=>'ErrorBadParameter', 'label'=>'ErrorBadParameter', 'key'=>'ErrorBadParameter', 'value'=>'ErrorBadParameter'));\n+\techo json_encode(array('nom'=>'Error', 'label'=>'Error', 'key'=>'Error', 'value'=>'Error'));\n }"
        },
        {
          "filename": "htdocs/societe/ajax/company.php",
          "status": "modified",
          "additions": 8,
          "deletions": 9,
          "patch": "@@ -19,7 +19,8 @@\n \n /**\n  *       \\file       htdocs/societe/ajax/company.php\n- *       \\brief      File to return Ajax response on thirdparty list request\n+ *       \\brief      File to return Ajax response on thirdparty list request. Used by the combo list of thirdparties.\n+ *       \t\t\t Search done on name, name_alias, barcode, tva_intra, ...\n  */\n \n if (!defined('NOTOKENRENEWAL')) {\n@@ -48,8 +49,8 @@\n $action = GETPOST('action', 'aZ09');\n $id = GETPOST('id', 'int');\n $excludeids = GETPOST('excludeids', 'intcomma');\n-$showtype = GETPOSTINT('showtype');\n-$showcode = GETPOSTINT('showcode');\n+$showtype = GETPOSTINT('showtype', 'alpha');\n+$showcode = GETPOSTINT('showcode', 'alpha');\n \n $object = new Societe($db);\n if ($id > 0) {\n@@ -69,6 +70,8 @@\n  * View\n  */\n \n+top_httphead('application/json');\n+\n //print '<!-- Ajax page called with url '.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]).' -->'.\"\\n\";\n //print_r($_GET);\n \n@@ -90,10 +93,6 @@\n } else {\n \trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';\n \n-\t$langs->load(\"companies\");\n-\n-\ttop_httphead();\n-\n \tif (empty($htmlname)) {\n \t\treturn;\n \t}\n@@ -124,9 +123,9 @@\n \n \t$arrayresult = $form->select_thirdparty_list(0, $htmlname, $filter, 1, $showtype, 0, null, $searchkey, $outjson, 0, 'minwidth100', '', false, $excludeids, $showcode);\n \n-\t$db->close();\n-\n \tif ($outjson) {\n \t\tprint json_encode($arrayresult);\n \t}\n }\n+\n+$db->close();"
        },
        {
          "filename": "htdocs/societe/card.php",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -1368,10 +1368,9 @@ function init_check_no_email(input) {\n \t\tprint '</td><td'.(empty($conf->global->SOCIETE_USEPREFIX) ? ' colspan=\"3\"' : '').'>';\n \n \t\tprint '<input type=\"text\" class=\"minwidth300\" maxlength=\"128\" name=\"name\" id=\"name\" value=\"'.dol_escape_htmltag($object->name).'\" autofocus=\"autofocus\">';\n-\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\n-\t\t/* Disabled. Must be implenteted by keeping the input text but calling ajax on a keydown of the input and output\n-\t\t   data of duplicate into a div under the input. We need to keep the widgetForTranslation also for some countries.\n-\t\t */\n+\t\tprint $form->widgetForTranslation(\"name\", $object, $permissiontoadd, 'string', 'alpahnohtml', 'minwidth300');\t// For some countries that need the company name in 2 languages\n+\t\t// This implementation of the feature to search already existing company has been disabled. It must be implemented by keeping the \"input text\" and we must call the search ajax societe/ajax/ajaxcompanies.php\n+\t\t// on a keydown of the input. We should show data about a duplicate found if we found less than 5 answers into a div under the input.\n \t\t/*\n \t\tprint '<select class=\"name\" name=\"name\" id=\"name\" style=\"min-width:500px\"></select>';\n \t\tprint \"\\n\".'<script type=\"text/javascript\">';"
        },
        {
          "filename": "htdocs/supplier_proposal/card.php",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1273,7 +1273,8 @@\n \t\tprint '</td>';\n \t} else {\n \t\tprint '<td colspan=\"2\">';\n-\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', 's.fournisseur=1', 'SelectThirdParty', 0, 0, null, 0, 'minwidth300');\n+\t\t$filter = 's.fournisseur=1';\n+\t\tprint img_picto('', 'company', 'class=\"pictofixedwidth\"').$form->select_company('', 'socid', $filter, 'SelectThirdParty', 0, 0, null, 0, 'minwidth300');\n \t\t// reload page to retrieve customer informations\n \t\tif (!empty($conf->global->RELOAD_PAGE_ON_SUPPLIER_CHANGE)) {\n \t\t\tprint '<script>\n@@ -1525,6 +1526,7 @@\n \n \t// Clone confirmation\n \tif ($action == 'clone') {\n+\t\t$filter = 's.fournisseur=1';\n \t\t// Create an array for form\n \t\t$formquestion = array(\n \t\t\t// 'text' => $langs->trans(\"ConfirmClone\"),\n@@ -1535,7 +1537,7 @@\n \t\t\t\t'type' => 'other',\n \t\t\t\t'name' => 'socid',\n \t\t\t\t'label' => $langs->trans(\"SelectThirdParty\"),\n-\t\t\t\t'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', 's.fournisseur=1'))\n+\t\t\t\t'value' => $form->select_company(GETPOST('socid', 'int'), 'socid', $filter))\n \t\t\t);\n \t\t// Paiement incomplet. On demande si motif = escompte ou autre\n \t\t$formconfirm = $form->formconfirm($_SERVER[\"PHP_SELF\"].'?id='.$object->id, $langs->trans('ToClone'), $langs->trans('ConfirmCloneAsk', $object->ref), 'confirm_clone', $formquestion, 'yes', 1);"
        },
        {
          "filename": "htdocs/takepos/admin/terminal.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -159,7 +159,8 @@\n \n print '<tr class=\"oddeven\"><td class=\"fieldrequired\">'.$langs->trans(\"CashDeskThirdPartyForSell\").'</td>';\n print '<td>';\n-print $form->select_company(getDolGlobalInt('CASHDESK_ID_THIRDPARTY'.$terminaltouse), 'socid', '(s.client IN (1, 3) AND s.status = 1)', 1, 0, 0, array(), 0);\n+$filter = '(s.client IN (1, 3) AND s.status = 1)';\n+print $form->select_company(getDolGlobalInt('CASHDESK_ID_THIRDPARTY'.$terminaltouse), 'socid', $filter, 1, 0, 0, array(), 0);\n print '</td></tr>';\n \n $atleastonefound = 0;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 25,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1198ae576900a672d95bc4750dbdffb80d5cd30e",
            "date": "2025-01-14T11:03:57Z",
            "author_login": "eldy"
          },
          {
            "sha": "84940c6f84946601d0d3bc3912ab1fedd2f0f456",
            "date": "2025-01-14T11:02:52Z",
            "author_login": "eldy"
          },
          {
            "sha": "ad36bdadad6e158a2043d88d98ff58cf2c7cd863",
            "date": "2025-01-14T08:26:48Z",
            "author_login": "eldy"
          },
          {
            "sha": "2edee4dba19d198be86aa986a354b78c765beb3c",
            "date": "2025-01-14T08:26:09Z",
            "author_login": "eldy"
          },
          {
            "sha": "a3fd2ad245fd01f60508aef183a35771ca9946f9",
            "date": "2025-01-14T06:40:08Z",
            "author_login": "hregis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-862",
    "description": "Improper Access Control in Dolibarr ERP CRM <= v17.0.3 allows an unauthorized authenticated user to read a database table containing customer data",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-11-01T09:15:09.477",
    "last_modified": "2024-11-21T08:34:36.330",
    "fix_date": "2023-04-27T17:30:34Z"
  },
  "references": [
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/3065b9ca6ade988e8d7a8a8550415c0abb56b9cb#diff-7d68365a708c954051853ade884c7e97c6ff13150ee92657d6ffc8603e0f947b",
      "source": "info@starlabs.sg",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://starlabs.sg/advisories/23/23-4198",
      "source": "info@starlabs.sg",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/Dolibarr/dolibarr/commit/3065b9ca6ade988e8d7a8a8550415c0abb56b9cb#diff-7d68365a708c954051853ade884c7e97c6ff13150ee92657d6ffc8603e0f947b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://starlabs.sg/advisories/23/23-4198",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.977145",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dolibarr",
    "owner": "Dolibarr",
    "created_at": "2011-06-26T21:55:03Z",
    "updated_at": "2025-01-14T11:04:10Z",
    "pushed_at": "2025-01-14T11:04:06Z",
    "size": 1507317,
    "stars": 5629,
    "forks": 2830,
    "open_issues": 1162,
    "watchers": 5629,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "18.0"
    ],
    "languages": {
      "PHP": 72587948,
      "JavaScript": 19205220,
      "CSS": 416812,
      "SCSS": 227818,
      "Less": 206987,
      "Shell": 115721,
      "Perl": 111381,
      "Inno Setup": 72215,
      "HTML": 36084,
      "Promela": 24625,
      "PLpgSQL": 23627,
      "Gherkin": 10705,
      "Makefile": 8752,
      "C++": 8363,
      "Batchfile": 4681,
      "Python": 4235,
      "Dockerfile": 3723
    },
    "commit_activity": {
      "total_commits_last_year": 12583,
      "avg_commits_per_week": 241.98076923076923,
      "days_active_last_year": 350
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:10:40.684709"
  }
}