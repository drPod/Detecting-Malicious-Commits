{
  "cve_id": "CVE-2023-42439",
  "github_data": {
    "repository": "GeoNode/geonode",
    "fix_commit": "79ac6e70419c2e0261548bed91c159b54ff35b8d",
    "related_commits": [
      "79ac6e70419c2e0261548bed91c159b54ff35b8d",
      "79ac6e70419c2e0261548bed91c159b54ff35b8d"
    ],
    "patch_url": "https://github.com/GeoNode/geonode/commit/79ac6e70419c2e0261548bed91c159b54ff35b8d.patch",
    "fix_commit_details": {
      "sha": "79ac6e70419c2e0261548bed91c159b54ff35b8d",
      "commit_date": "2023-09-14T11:17:12Z",
      "author": {
        "login": "afabiani",
        "type": "User",
        "stats": {
          "total_commits": 776,
          "average_weekly_commits": 1.0130548302872062,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 123
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-pxg5-h34r-7q8p",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 29,
        "deletions": 2
      },
      "files": [
        {
          "filename": "geonode/proxy/tests.py",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -213,6 +213,16 @@ class Response:\n         response = self.client.get(f\"{self.proxy_url}?url={url}\")\n         self.assertEqual(response.status_code, 403)\n \n+        url = f\"{settings.SITEURL.rstrip('/')}@geoserver:8080/web/index.html\"\n+\n+        response = self.client.get(f\"{self.proxy_url}?url={url}\")\n+        self.assertEqual(response.status_code, 403)\n+\n+        url = f\"{settings.SITEURL.rstrip('/')}%40geoserver:8080/web/index.html\"\n+\n+        response = self.client.get(f\"{self.proxy_url}?url={url}\")\n+        self.assertEqual(response.status_code, 403)\n+\n         # Legit requests using the local host (SITEURL)\n         url = f\"/\\\\@%23{urlsplit(settings.SITEURL).hostname}\"\n "
        },
        {
          "filename": "geonode/utils.py",
          "status": "modified",
          "additions": 19,
          "deletions": 2,
          "patch": "@@ -88,6 +88,7 @@\n     urlparse,\n     urlsplit,\n     urlencode,\n+    urlunparse,\n     parse_qsl,\n     ParseResult,\n )\n@@ -1907,11 +1908,27 @@ def build_absolute_uri(url):\n     return url\n \n \n+def remove_credentials_from_url(url):\n+    # Parse the URL\n+    parsed_url = urlparse(url)\n+\n+    # Remove the username and password from the parsed URL\n+    parsed_url = parsed_url._replace(netloc=parsed_url.netloc.split(\"@\")[-1])\n+\n+    # Reconstruct the URL without credentials\n+    cleaned_url = urlunparse(parsed_url)\n+\n+    return cleaned_url\n+\n+\n def extract_ip_or_domain(url):\n+    # Decode the URL to handle percent-encoded characters\n+    _url = remove_credentials_from_url(unquote(url))\n+\n     ip_regex = re.compile(\"^(?:http://|https://)(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})\")\n     domain_regex = re.compile(\"^(?:http://|https://)([a-zA-Z0-9.-]+)\")\n \n-    match = ip_regex.findall(url)\n+    match = ip_regex.findall(_url)\n     if len(match):\n         ip_address = match[0]\n         try:\n@@ -1920,7 +1937,7 @@ def extract_ip_or_domain(url):\n         except ValueError:\n             pass\n \n-    match = domain_regex.findall(url)\n+    match = domain_regex.findall(_url)\n     if len(match):\n         return match[0]\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "91f32c64e8d8e6f159368243d8dfac96fe5a8aca",
            "date": "2024-12-06T10:50:40Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "eb352184f5948103f680a0f33600cdf1a7fbad5c",
            "date": "2024-12-02T13:20:03Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "051efddcc61037600c6cc722819572f22a5b1c80",
            "date": "2024-11-29T13:39:23Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "993364a44c8afa1085dccd2366794789b36a2b39",
            "date": "2024-11-26T14:56:26Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "0b792cf7d575684050469c382c57636bb7d41b22",
            "date": "2024-11-22T17:05:49Z",
            "author_login": "mattiagiupponi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "GeoNode is an open source platform that facilitates the creation, sharing, and collaborative use of geospatial data. A SSRF vulnerability exists starting in version 3.2.0, bypassing existing controls on the software. This can allow a user to request internal services for a full read SSRF, returning any data from the internal network. The application is using a whitelist, but the whitelist can be bypassed. The bypass will trick the application that the first host is a whitelisted address, but the browser will use `@` or `%40` as a credential to the host geoserver on port 8080, this will return the data to that host on the response. Version 4.1.3.post1 is the first available version that contains a patch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-15T21:15:11.780",
    "last_modified": "2024-11-21T08:22:31.963",
    "fix_date": "2023-09-14T11:17:12Z"
  },
  "references": [
    {
      "url": "https://github.com/GeoNode/geonode/commit/79ac6e70419c2e0261548bed91c159b54ff35b8d",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/releases/tag/4.1.3",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-pxg5-h34r-7q8p",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/commit/79ac6e70419c2e0261548bed91c159b54ff35b8d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/releases/tag/4.1.3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-pxg5-h34r-7q8p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.417409",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "geonode",
    "owner": "GeoNode",
    "created_at": "2010-06-03T18:14:47Z",
    "updated_at": "2025-01-13T06:44:38Z",
    "pushed_at": "2025-01-14T15:06:36Z",
    "size": 462743,
    "stars": 1483,
    "forks": 1129,
    "open_issues": 356,
    "watchers": 1483,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.6.x",
      "2.8.x",
      "2.10.x",
      "3.2.x",
      "3.3.x",
      "4.0.x",
      "4.1.x",
      "4.2.x",
      "4.3.x"
    ],
    "languages": {
      "JavaScript": 8573163,
      "Python": 5466464,
      "HTML": 569637,
      "CSS": 547762,
      "XSLT": 67411,
      "Less": 62479,
      "Shell": 54446,
      "Makefile": 4529,
      "SCSS": 3477,
      "Scheme": 3155,
      "Dockerfile": 2891,
      "Gherkin": 529
    },
    "commit_activity": {
      "total_commits_last_year": 436,
      "avg_commits_per_week": 8.384615384615385,
      "days_active_last_year": 108
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:42:19.248585"
  }
}