{
  "cve_id": "CVE-2023-4322",
  "github_data": {
    "repository": "radareorg/radare2",
    "fix_commit": "ba919adb74ac368bf76b150a00347ded78b572dd",
    "related_commits": [
      "ba919adb74ac368bf76b150a00347ded78b572dd",
      "ba919adb74ac368bf76b150a00347ded78b572dd"
    ],
    "patch_url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd.patch",
    "fix_commit_details": {
      "sha": "ba919adb74ac368bf76b150a00347ded78b572dd",
      "commit_date": "2023-08-14T13:56:13Z",
      "author": {
        "login": "radare",
        "type": "User",
        "stats": {
          "total_commits": 16353,
          "average_weekly_commits": 19.631452581032413,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 785
        }
      },
      "commit_message": {
        "title": "Fix 1byte heap oobread in the brainfuck disassembler",
        "length": 155,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 48,
        "additions": 25,
        "deletions": 23
      },
      "files": [
        {
          "filename": "libr/arch/p/bf/plugin.c",
          "status": "modified",
          "additions": 19,
          "deletions": 15,
          "patch": "@@ -13,8 +13,8 @@ static size_t countChar(const ut8 *buf, int len, char ch) {\n }\n \n static int getid(char ch) {\n-\tconst char *keys = \"[]<>+-,.\";\n-\tconst char *cidx = strchr (keys, ch);\n+\tconst char *const keys = \"[]<>+-,.\";\n+\tconst char *const cidx = strchr (keys, ch);\n \treturn cidx? cidx - keys + 1: 0;\n }\n \n@@ -136,13 +136,11 @@ static int assemble(const char *buf, ut8 **outbuf) {\n #define BUFSIZE_INC 32\n static bool decode(RArchSession *as, RAnalOp *op, RArchDecodeMask mask) {\n \tint len = op->size;\n-\tconst ut8 *_buf = op->bytes;\n-\tconst ut64 addr = op->addr;\n \tif (len < 1) {\n \t\treturn false;\n \t}\n-\n-\tut8 *buf = (ut8*)_buf; // XXX\n+\tut8 *buf = op->bytes;\n+\tconst ut64 addr = op->addr;\n \tut64 dst = 0LL;\n \tif (!op) {\n \t\treturn 1;\n@@ -169,29 +167,32 @@ static bool decode(RArchSession *as, RAnalOp *op, RArchDecodeMask mask) {\n \t\t}\n \t\tr_strbuf_set (&op->esil, \"1,pc,-,brk,=[4],4,brk,+=\");\n #if 1\n-\t\t{\n+\t\tif (len > 1) {\n \t\t\tconst ut8 *p = buf + 1;\n \t\t\tint lev = 0, i = 1;\n \t\t\tlen--;\n \t\t\twhile (i < len && *p) {\n-\t\t\t\tif (*p == '[') {\n+\t\t\t\tswitch (*p) {\n+\t\t\t\tcase '[':\n \t\t\t\t\tlev++;\n-\t\t\t\t}\n-\t\t\t\tif (*p == ']') {\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase ']':\n \t\t\t\t\tlev--;\n-\t\t\t\t\tif (lev == -1) {\n-\t\t\t\t\t\tdst = addr + (size_t)(p - buf) + 1;\n+\t\t\t\t\tif (lev < 1) {\n+\t\t\t\t\t\tsize_t delta = p - buf;\n+\t\t\t\t\t\tdst = addr + (size_t)delta + 1;\n \t\t\t\t\t\top->jump = dst;\n \t\t\t\t\t\tr_strbuf_set (&op->esil, \"1,pc,-,brk,=[4],4,brk,+=,\");\n \t\t\t\t\t\tgoto beach;\n \t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tif (*p == 0x00 || *p == 0xff) {\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase 0:\n+\t\t\t\tcase 0xff:\n \t\t\t\t\top->type = R_ANAL_OP_TYPE_ILL;\n \t\t\t\t\tgoto beach;\n \t\t\t\t}\n \t\t\t\tif (read_at && i == len - 1) {\n-\t\t\t\t\tbreak;\n+#if 0\n \t\t\t\t\t// XXX unnecessary just break\n \t\t\t\t\tint new_buf_len = len + 1 + BUFSIZE_INC;\n \t\t\t\t\tut8 *new_buf = calloc (new_buf_len, 1);\n@@ -203,6 +204,9 @@ static bool decode(RArchSession *as, RAnalOp *op, RArchDecodeMask mask) {\n \t\t\t\t\t\tp = buf + i;\n \t\t\t\t\t\tlen += BUFSIZE_INC;\n \t\t\t\t\t}\n+#else\n+\t\t\t\t\tbreak;\n+#endif\n \t\t\t\t}\n \t\t\t\tp++;\n \t\t\t\ti++;"
        },
        {
          "filename": "libr/core/cmd_anal.c",
          "status": "modified",
          "additions": 6,
          "deletions": 8,
          "patch": "@@ -8719,9 +8719,9 @@ static void _anal_calls(RCore *core, ut64 addr, ut64 addr_end, bool printCommand\n \t\t\t\t\tisValidCall = false;\n \t\t\t\t}\n \t\t\t\tif (isValidCall) {\n-\t\t\t\t\tut8 buf[4] = {0};\n-\t\t\t\t\tr_io_read_at (core->io, op.jump, buf, 4);\n-\t\t\t\t\tisValidCall = memcmp (buf, \"\\x00\\x00\\x00\\x00\", 4);\n+\t\t\t\t\tut8 zbuf[4] = {0};\n+\t\t\t\t\tr_io_read_at (core->io, op.jump, zbuf, 4);\n+\t\t\t\t\tisValidCall = memcmp (zbuf, \"\\x00\\x00\\x00\\x00\", 4);\n \t\t\t\t}\n \t\t\t\tif (isValidCall) {\n #if JAYRO_03\n@@ -8817,9 +8817,8 @@ static void cmd_anal_calls(RCore *core, const char *input, bool printCommands, b\n }\n \n static void cmd_sdbk(Sdb *db, const char *input) {\n-\tchar *out = (input[0] == ' ')\n-\t\t? sdb_querys (db, NULL, 0, input + 1)\n-\t\t: sdb_querys (db, NULL, 0, \"*\");\n+\tconst char *arg = (input[0] == ' ')? input + 1: \"*\";\n+\tchar *out = sdb_querys (db, NULL, 0, arg);\n \tif (out) {\n \t\tr_cons_println (out);\n \t\tfree (out);\n@@ -9118,7 +9117,7 @@ static void anal_axg(RCore *core, const char *input, int level, Sdb *db, int opt\n }\n \n static void cmd_anal_ucall_ref(RCore *core, ut64 addr) {\n-\tRAnalFunction * fcn = r_anal_get_function_at (core->anal, addr);\n+\tRAnalFunction *fcn = r_anal_get_function_at (core->anal, addr);\n \tif (fcn) {\n \t\tr_cons_printf (\" ; %s\", fcn->name);\n \t} else {\n@@ -9257,7 +9256,6 @@ static void axfm(RCore *core) {\n \t\t\tlast_addr = ref->addr;\n \t\t}\n \t}\n-\n \tRVecAnalRef_free (refs);\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bf6227e9295110ab97c8cf3237914acd6cfa09b0",
            "date": "2024-12-27T21:02:32Z",
            "author_login": "dennis-doyensec"
          },
          {
            "sha": "a7e958f9ebdf9771c36e8376078f027792981fea",
            "date": "2025-01-14T17:22:24Z",
            "author_login": "radare"
          },
          {
            "sha": "0f85675c7a5d542a89318b62d4a4bc997e595e03",
            "date": "2025-01-14T11:01:39Z",
            "author_login": "radare"
          },
          {
            "sha": "92d45a6034fe60123adc23bf49b398809fe36d25",
            "date": "2025-01-14T11:11:00Z",
            "author_login": "radare"
          },
          {
            "sha": "07be136859c56f96a692c8d5d1a3531345f16a0c",
            "date": "2025-01-14T10:46:07Z",
            "author_login": "radare"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-122",
    "description": "Heap-based Buffer Overflow in GitHub repository radareorg/radare2 prior to 5.9.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-08-14T16:15:09.497",
    "last_modified": "2024-11-21T08:34:51.173",
    "fix_date": "2023-08-14T13:56:13Z"
  },
  "references": [
    {
      "url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/64KUV6OGEVQ75QOV35PUVVDOJTKSJHYN/",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SOZ6XCADVAPAIHMVSV3FUAN742BHXF55/",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/radareorg/radare2/commit/ba919adb74ac368bf76b150a00347ded78b572dd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/06e2484c-d6f1-4497-af67-26549be9fffd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/64KUV6OGEVQ75QOV35PUVVDOJTKSJHYN/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SOZ6XCADVAPAIHMVSV3FUAN742BHXF55/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:06.428611",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "radare2",
    "owner": "radareorg",
    "created_at": "2012-07-03T07:42:26Z",
    "updated_at": "2025-01-14T11:39:09Z",
    "pushed_at": "2025-01-14T11:39:05Z",
    "size": 182812,
    "stars": 20990,
    "forks": 3027,
    "open_issues": 874,
    "watchers": 20990,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 29143253,
      "Makefile": 262919,
      "Shell": 145034,
      "Meson": 123192,
      "C++": 82794,
      "HTML": 55704,
      "Rebol": 54153,
      "Python": 38146,
      "Roff": 36722,
      "JavaScript": 23584,
      "CSS": 19465,
      "Batchfile": 8970,
      "Perl": 6449,
      "sed": 4448,
      "R": 1960,
      "Rez": 1386,
      "Assembly": 939,
      "Vala": 839,
      "Wren": 460,
      "Gnuplot": 429,
      "C#": 164,
      "Dart": 125,
      "Rascal": 45
    },
    "commit_activity": {
      "total_commits_last_year": 1594,
      "avg_commits_per_week": 30.653846153846153,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:16.054007"
  }
}