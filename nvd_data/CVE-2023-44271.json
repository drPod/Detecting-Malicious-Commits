{
  "cve_id": "CVE-2023-44271",
  "github_data": {
    "repository": "python-pillow/Pillow",
    "fix_commit": "1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
    "related_commits": [
      "1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
      "1fe1bb49c452b0318cad12ea9d97c3bef188e9a7"
    ],
    "patch_url": "https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7.patch",
    "fix_commit_details": {
      "sha": "1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
      "commit_date": "2023-06-30T13:32:26Z",
      "author": {
        "login": "radarhere",
        "type": "User",
        "stats": {
          "total_commits": 6995,
          "average_weekly_commits": 9.252645502645503,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 500
        }
      },
      "commit_message": {
        "title": "Added ImageFont.MAX_STRING_LENGTH",
        "length": 33,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 64,
        "additions": 64,
        "deletions": 0
      },
      "files": [
        {
          "filename": "Tests/test_imagefont.py",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -1038,6 +1038,25 @@ def test_render_mono_size():\n     assert_image_equal_tofile(im, \"Tests/images/text_mono.gif\")\n \n \n+def test_too_many_characters(font):\n+    with pytest.raises(ValueError):\n+        font.getlength(\"A\" * 1000001)\n+    with pytest.raises(ValueError):\n+        font.getbbox(\"A\" * 1000001)\n+    with pytest.raises(ValueError):\n+        font.getmask2(\"A\" * 1000001)\n+\n+    transposed_font = ImageFont.TransposedFont(font)\n+    with pytest.raises(ValueError):\n+        transposed_font.getlength(\"A\" * 1000001)\n+\n+    default_font = ImageFont.load_default()\n+    with pytest.raises(ValueError):\n+        default_font.getlength(\"A\" * 1000001)\n+    with pytest.raises(ValueError):\n+        default_font.getbbox(\"A\" * 1000001)\n+\n+\n @pytest.mark.parametrize(\n     \"test_file\",\n     ["
        },
        {
          "filename": "docs/reference/ImageFont.rst",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -18,6 +18,15 @@ OpenType fonts (as well as other font formats supported by the FreeType\n library). For earlier versions, TrueType support is only available as part of\n the imToolkit package.\n \n+.. warning::\n+    To protect against potential DOS attacks when using arbitrary strings as\n+    text input, Pillow will raise a ``ValueError`` if the number of characters\n+    is over a certain limit, :py:data:`MAX_STRING_LENGTH`.\n+\n+    This threshold can be changed by setting\n+    :py:data:`MAX_STRING_LENGTH`. It can be disabled by setting\n+    ``ImageFont.MAX_STRING_LENGTH = None``.\n+\n Example\n -------\n \n@@ -73,3 +82,12 @@ Constants\n \n     Requires Raqm, you can check support using\n     :py:func:`PIL.features.check_feature` with ``feature=\"raqm\"``.\n+\n+Constants\n+---------\n+\n+.. data:: MAX_STRING_LENGTH\n+\n+    Set to 1,000,000, to protect against potential DOS attacks. Pillow will\n+    raise a ``ValueError`` if the number of characters is over this limit. The\n+    check can be disabled by setting ``ImageFont.MAX_STRING_LENGTH = None``."
        },
        {
          "filename": "docs/releasenotes/10.0.0.rst",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -170,6 +170,18 @@ now been fixed.\n This effectively dates to the PIL fork, since problem images would still have\n been processed before Pillow started checking for decompression bombs.\n \n+Added ImageFont.MAX_STRING_LENGTH\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+To protect against potential DOS attacks when using arbitrary strings as text\n+input, Pillow will now raise a ``ValueError`` if the number of characters\n+passed into ImageFont methods is over a certain limit,\n+:py:data:`PIL.ImageFont.MAX_STRING_LENGTH`.\n+\n+This threshold can be changed by setting\n+:py:data:`PIL.ImageFont.MAX_STRING_LENGTH`. It can be disabled by setting\n+``ImageFont.MAX_STRING_LENGTH = None``.\n+\n Other Changes\n =============\n "
        },
        {
          "filename": "src/PIL/ImageFont.py",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -41,6 +41,9 @@ class Layout(IntEnum):\n     RAQM = 1\n \n \n+MAX_STRING_LENGTH = 1000000\n+\n+\n try:\n     from . import _imagingft as core\n except ImportError as ex:\n@@ -49,6 +52,12 @@ class Layout(IntEnum):\n     core = DeferredError(ex)\n \n \n+def _string_length_check(text):\n+    if MAX_STRING_LENGTH is not None and len(text) > MAX_STRING_LENGTH:\n+        msg = \"too many characters in string\"\n+        raise ValueError(msg)\n+\n+\n # FIXME: add support for pilfont2 format (see FontFile.py)\n \n # --------------------------------------------------------------------\n@@ -152,6 +161,7 @@ def getbbox(self, text, *args, **kwargs):\n \n         :return: ``(left, top, right, bottom)`` bounding box\n         \"\"\"\n+        _string_length_check(text)\n         width, height = self.font.getsize(text)\n         return 0, 0, width, height\n \n@@ -162,6 +172,7 @@ def getlength(self, text, *args, **kwargs):\n \n         .. versionadded:: 9.2.0\n         \"\"\"\n+        _string_length_check(text)\n         width, height = self.font.getsize(text)\n         return width\n \n@@ -309,6 +320,7 @@ def getlength(self, text, mode=\"\", direction=None, features=None, language=None)\n \n         :return: Width for horizontal, height for vertical text.\n         \"\"\"\n+        _string_length_check(text)\n         return self.font.getlength(text, mode, direction, features, language) / 64\n \n     def getbbox(\n@@ -368,6 +380,7 @@ def getbbox(\n \n         :return: ``(left, top, right, bottom)`` bounding box\n         \"\"\"\n+        _string_length_check(text)\n         size, offset = self.font.getsize(\n             text, mode, direction, features, language, anchor\n         )\n@@ -546,6 +559,7 @@ def getmask2(\n                  :py:mod:`PIL.Image.core` interface module, and the text offset, the\n                  gap between the starting coordinate and the first marking\n         \"\"\"\n+        _string_length_check(text)\n         if start is None:\n             start = (0, 0)\n         im, size, offset = self.font.render(\n@@ -684,6 +698,7 @@ def getlength(self, text, *args, **kwargs):\n         if self.orientation in (Image.Transpose.ROTATE_90, Image.Transpose.ROTATE_270):\n             msg = \"text length is undefined for text rotated by 90 or 270 degrees\"\n             raise ValueError(msg)\n+        _string_length_check(text)\n         return self.font.getlength(text, *args, **kwargs)\n \n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "bdfd881c6df81c10697f68f204582aa16a451d1e",
            "date": "2025-01-14T14:24:41Z",
            "author_login": "hugovk"
          },
          {
            "sha": "f521a4be7db5fb1b6060d1dc48e69ee3bdec25ab",
            "date": "2025-01-13T19:21:06Z",
            "author_login": "hugovk"
          },
          {
            "sha": "2ce2ff297c9d3577e3bcc8f723107f661590afd2",
            "date": "2025-01-13T09:37:26Z",
            "author_login": "radarhere"
          },
          {
            "sha": "513a72abb5c56d8d34e4286cd62a3ddd6dcc6f51",
            "date": "2025-01-13T17:08:28Z",
            "author_login": "hugovk"
          },
          {
            "sha": "a4018d192cf8a305c3da622a53df7d144d11432c",
            "date": "2025-01-13T10:07:32Z",
            "author_login": "radarhere"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-11-03T05:15:30.137",
    "last_modified": "2024-11-21T08:25:33.610",
    "fix_date": "2023-06-30T13:32:26Z"
  },
  "references": [
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2023-44271/",
      "source": "cve@mitre.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/python-pillow/Pillow/pull/7244",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00021.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N2JOEDUJDQLCUII2LQYZYSM7RJL2I3P4/",
      "source": "cve@mitre.org",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2023-44271/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/python-pillow/Pillow/pull/7244",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00021.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N2JOEDUJDQLCUII2LQYZYSM7RJL2I3P4/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.984615",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Pillow",
    "owner": "python-pillow",
    "created_at": "2012-07-24T21:38:39Z",
    "updated_at": "2025-01-14T09:28:37Z",
    "pushed_at": "2025-01-13T19:21:06Z",
    "size": 206276,
    "stars": 12469,
    "forks": 2245,
    "open_issues": 126,
    "watchers": 12469,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 2250345,
      "C": 1274070,
      "HTML": 16910,
      "PostScript": 11949,
      "Shell": 8022,
      "Makefile": 3825,
      "CMake": 3740,
      "Gnuplot": 1105,
      "Batchfile": 166
    },
    "commit_activity": {
      "total_commits_last_year": 2117,
      "avg_commits_per_week": 40.71153846153846,
      "days_active_last_year": 333
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:39:48.765812"
  }
}