{
  "cve_id": "CVE-2023-44400",
  "github_data": {
    "repository": "louislam/uptime-kuma",
    "fix_commit": "88afab6571ef7d4d41bb395cdb6ecd3968835a4a",
    "related_commits": [
      "88afab6571ef7d4d41bb395cdb6ecd3968835a4a",
      "88afab6571ef7d4d41bb395cdb6ecd3968835a4a"
    ],
    "patch_url": "https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a.patch",
    "fix_commit_details": {
      "sha": "88afab6571ef7d4d41bb395cdb6ecd3968835a4a",
      "commit_date": "2023-10-08T23:01:54Z",
      "author": {
        "login": "louislam",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-g9v2-wqcj-j99g",
        "length": 76,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 47,
        "deletions": 9
      },
      "files": [
        {
          "filename": "server/model/user.js",
          "status": "modified",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -1,6 +1,8 @@\n const { BeanModel } = require(\"redbean-node/dist/bean-model\");\n const passwordHash = require(\"../password-hash\");\n const { R } = require(\"redbean-node\");\n+const jwt = require(\"jsonwebtoken\");\n+const { shake256, SHAKE256_LENGTH } = require(\"../util-server\");\n \n class User extends BeanModel {\n     /**\n@@ -27,6 +29,19 @@ class User extends BeanModel {\n         this.password = newPassword;\n     }\n \n+    /**\n+     * Create a new JWT for a user\n+     * @param {User} user\n+     * @param {string} jwtSecret\n+     * @return {string}\n+     */\n+    static createJWT(user, jwtSecret) {\n+        return jwt.sign({\n+            username: user.username,\n+            h: shake256(user.password, SHAKE256_LENGTH),\n+        }, jwtSecret);\n+    }\n+\n }\n \n module.exports = User;"
        },
        {
          "filename": "server/server.js",
          "status": "modified",
          "additions": 14,
          "deletions": 9,
          "patch": "@@ -83,8 +83,11 @@ const app = server.app;\n log.info(\"server\", \"Importing this project modules\");\n log.debug(\"server\", \"Importing Monitor\");\n const Monitor = require(\"./model/monitor\");\n+const User = require(\"./model/user\");\n+\n log.debug(\"server\", \"Importing Settings\");\n-const { getSettings, setSettings, setting, initJWTSecret, checkLogin, startUnitTest, FBSD, doubleCheckPassword, startE2eTests } = require(\"./util-server\");\n+const { getSettings, setSettings, setting, initJWTSecret, checkLogin, startUnitTest, FBSD, doubleCheckPassword, startE2eTests, shake256, SHAKE256_LENGTH\n+} = require(\"./util-server\");\n \n log.debug(\"server\", \"Importing Notification\");\n const { Notification } = require(\"./notification\");\n@@ -296,6 +299,11 @@ let needSetup = false;\n                     decoded.username,\n                 ]);\n \n+                // Check if the password changed\n+                if (decoded.h !== shake256(user.password, SHAKE256_LENGTH)) {\n+                    throw new Error(\"The token is invalid due to password change or old token\");\n+                }\n+\n                 if (user) {\n                     log.debug(\"auth\", \"afterLogin\");\n                     afterLogin(socket, user);\n@@ -316,9 +324,10 @@ let needSetup = false;\n                     });\n                 }\n             } catch (error) {\n-\n                 log.error(\"auth\", `Invalid token. IP=${clientIP}`);\n-\n+                if (error.message) {\n+                    log.error(\"auth\", error.message, `IP=${clientIP}`);\n+                }\n                 callback({\n                     ok: false,\n                     msg: \"Invalid token.\",\n@@ -357,9 +366,7 @@ let needSetup = false;\n \n                     callback({\n                         ok: true,\n-                        token: jwt.sign({\n-                            username: data.username,\n-                        }, server.jwtSecret),\n+                        token: User.createJWT(user, server.jwtSecret),\n                     });\n                 }\n \n@@ -387,9 +394,7 @@ let needSetup = false;\n \n                         callback({\n                             ok: true,\n-                            token: jwt.sign({\n-                                username: data.username,\n-                            }, server.jwtSecret),\n+                            token: User.createJWT(user, server.jwtSecret),\n                         });\n                     } else {\n "
        },
        {
          "filename": "server/util-server.js",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -33,6 +33,7 @@ const dayjs = require(\"dayjs\");\n // SASLOptions used in JSDoc\n // eslint-disable-next-line no-unused-vars\n const { Kafka, SASLOptions } = require(\"kafkajs\");\n+const crypto = require(\"crypto\");\n \n const isWindows = process.platform === /^win/.test(process.platform);\n /**\n@@ -1055,6 +1056,23 @@ module.exports.grpcQuery = async (options) => {\n     });\n };\n \n+module.exports.SHAKE256_LENGTH = 16;\n+\n+/**\n+ *\n+ * @param {string} data\n+ * @param {number} len\n+ * @return {string}\n+ */\n+module.exports.shake256 = (data, len) => {\n+    if (!data) {\n+        return \"\";\n+    }\n+    return crypto.createHash(\"shake256\", { outputLength: len })\n+        .update(data)\n+        .digest(\"hex\");\n+};\n+\n // For unit test, export functions\n if (process.env.TEST_BACKEND) {\n     module.exports.__test = {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "be2faf64ce8973d49d6c4b29dacdedbffc57855e",
            "date": "2024-12-22T05:46:13Z",
            "author_login": "louislam"
          },
          {
            "sha": "0b76e1940105117ed59c42105f4c8211ff4823d5",
            "date": "2024-12-22T05:45:19Z",
            "author_login": "louislam"
          },
          {
            "sha": "97cbaac5d94b5107c3b7da6ad4fca7cc7f2c8859",
            "date": "2024-12-21T11:26:36Z",
            "author_login": "Ionys320"
          },
          {
            "sha": "fd55659c2b209bc6780151f7c8c18378bffb8c44",
            "date": "2024-12-20T08:47:00Z",
            "author_login": "louislam"
          },
          {
            "sha": "20da4d29ab9c7325050f158f8af6ad1eed353002",
            "date": "2024-12-20T08:42:59Z",
            "author_login": "louislam"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.7,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-384",
    "description": "Uptime Kuma is a self-hosted monitoring tool. Prior to version 1.23.3, attackers with access to a user's device can gain persistent account access. This is caused by missing verification of Session Tokens after password changes and/or elapsed inactivity periods. Version 1.23.3 has a patch for the issue.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-09T16:15:10.567",
    "last_modified": "2024-11-21T08:25:49.577",
    "fix_date": "2023-10-08T23:01:54Z"
  },
  "references": [
    {
      "url": "https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/louislam/uptime-kuma/issues/3481",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Mitigation"
      ]
    },
    {
      "url": "https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/louislam/uptime-kuma/issues/3481",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Mitigation"
      ]
    },
    {
      "url": "https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:10.583848",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "uptime-kuma",
    "owner": "louislam",
    "created_at": "2021-07-03T01:02:42Z",
    "updated_at": "2025-01-14T13:35:01Z",
    "pushed_at": "2025-01-02T14:43:40Z",
    "size": 27366,
    "stars": 62522,
    "forks": 5572,
    "open_issues": 773,
    "watchers": 62522,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "1.23.X",
      "1.23.X-npm-update",
      "1.23.X-to-2",
      "2.0-last-part",
      "2.0.X",
      "2.1.X",
      "ansible-unofficial",
      "api-via-socketio-client",
      "async-fs",
      "check-lang-json",
      "convert-backend-test",
      "custom-head",
      "escaped-debug",
      "extracted-grpc-monitor",
      "fix-2.0.0-docs-update",
      "fix-check-migrate",
      "fix-data-type",
      "fix-knex",
      "fix-push-examples",
      "fix-weblate-conflict",
      "improve-heartbeat-msg",
      "master",
      "nfs-warning",
      "node22",
      "npm-publish",
      "queue",
      "release",
      "revert-4376-progress-bar-redesign",
      "revert-4704-dynamic_prometheus_labels",
      "testcontainers"
    ],
    "languages": {
      "JavaScript": 905295,
      "Vue": 681744,
      "TypeScript": 22221,
      "SCSS": 15534,
      "Dockerfile": 4408,
      "Go": 2699,
      "Shell": 2058,
      "HTML": 1102,
      "Java": 908,
      "C#": 557,
      "PowerShell": 387,
      "PHP": 322,
      "Python": 216
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:41:21.643142"
  }
}