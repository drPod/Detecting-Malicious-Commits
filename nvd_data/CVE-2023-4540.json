{
  "cve_id": "CVE-2023-4540",
  "github_data": {
    "repository": "daurnimator/lua-http",
    "fix_commit": "ddab2835c583d45dec62680ca8d3cbde55e0bae6",
    "related_commits": [
      "ddab2835c583d45dec62680ca8d3cbde55e0bae6",
      "ddab2835c583d45dec62680ca8d3cbde55e0bae6"
    ],
    "patch_url": "https://github.com/daurnimator/lua-http/commit/ddab2835c583d45dec62680ca8d3cbde55e0bae6.patch",
    "fix_commit_details": {
      "sha": "ddab2835c583d45dec62680ca8d3cbde55e0bae6",
      "commit_date": "2023-08-22T13:30:20Z",
      "author": {
        "login": "daurnimator",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "http/h1_stream: handle EOF when `body_read_type==length`",
        "length": 251,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 29,
        "additions": 29,
        "deletions": 0
      },
      "files": [
        {
          "filename": "http/h1_stream.lua",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -861,6 +861,8 @@ function stream_methods:read_next_chunk(timeout)\n \t\t\tif chunk ~= nil then\n \t\t\t\tself.body_read_left = length_n - #chunk\n \t\t\t\tend_stream = (self.body_read_left == 0)\n+\t\t\telseif err == nil then\n+\t\t\t\treturn nil, ce.strerror(ce.EPIPE), ce.EPIPE\n \t\t\tend\n \t\telseif length_n == 0 then\n \t\t\tchunk = \"\""
        },
        {
          "filename": "spec/h1_stream_spec.lua",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -295,6 +295,33 @@ describe(\"http1 stream\", function()\n \t\tserver:close()\n \t\tclient:close()\n \tend)\n+\tit(\"Doesn't hang when a content-length delimited stream is closed\", function()\n+\t\tlocal server, client = new_pair(1.1)\n+\t\tlocal cq = cqueues.new()\n+\t\tcq:wrap(function()\n+\t\t\tlocal stream = client:new_stream()\n+\t\t\tlocal headers = new_headers()\n+\t\t\theaders:append(\":method\", \"GET\")\n+\t\t\theaders:append(\":scheme\", \"http\")\n+\t\t\theaders:append(\":authority\", \"myauthority\")\n+\t\t\theaders:append(\":path\", \"/a\")\n+\t\t\tassert(stream:write_headers(headers, true))\n+\t\tend)\n+\t\tcq:wrap(function()\n+\t\t\tlocal stream = server:get_next_incoming_stream()\n+\t\t\tassert(stream:get_headers())\n+\t\t\tlocal res_headers = new_headers()\n+\t\t\tres_headers:append(\":status\", \"200\")\n+\t\t\tres_headers:append(\"content-length\", \"100\")\n+\t\t\tassert(stream:write_headers(res_headers, false))\n+\t\t\tassert(stream:write_chunk(\"foo\", false))\n+\t\t\tassert(stream:shutdown())\n+\t\tend)\n+\t\tassert_loop(cq, TEST_TIMEOUT)\n+\t\tassert.truthy(cq:empty())\n+\t\tserver:close()\n+\t\tclient:close()\n+\tend)\n \tit(\"allows pipelining\", function()\n \t\tlocal server, client = new_pair(1.1)\n \t\tlocal cq = cqueues.new()"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ee3cf4b4992479b8ebfb39b530694af3bbd1d1eb",
            "date": "2024-09-08T13:37:31Z",
            "author_login": "daurnimator"
          },
          {
            "sha": "059ae00f23bd9f77771d0284394974fbfa0705fd",
            "date": "2024-09-05T22:04:49Z",
            "author_login": "menakite"
          },
          {
            "sha": "ddab2835c583d45dec62680ca8d3cbde55e0bae6",
            "date": "2023-08-22T13:30:20Z",
            "author_login": "daurnimator"
          },
          {
            "sha": "f33b1867530dc7e255fff47afb25b84cdd38728d",
            "date": "2023-08-22T13:37:40Z",
            "author_login": "daurnimator"
          },
          {
            "sha": "1c691a1c13d1eaaf9adc08608cb198238f1c3280",
            "date": "2023-08-22T13:36:01Z",
            "author_login": "daurnimator"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "Improper Handling of Exceptional Conditions vulnerability in Daurnimator lua-http library allows Excessive Allocation and a denial of service (DoS) attack to be executed by sending a properly crafted request to the server. \nSuch a request causes the program to enter an infinite loop. \n\nThis issue affects lua-http: all versions before commit ddab283.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-05T08:15:40.017",
    "last_modified": "2024-11-21T08:35:22.637",
    "fix_date": "2023-08-22T13:30:20Z"
  },
  "references": [
    {
      "url": "https://cert.pl/en/posts/2023/09/CVE-2023-4540/",
      "source": "cvd@cert.pl",
      "tags": []
    },
    {
      "url": "https://cert.pl/posts/2023/09/CVE-2023-4540/",
      "source": "cvd@cert.pl",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/daurnimator/lua-http/commit/ddab2835c583d45dec62680ca8d3cbde55e0bae6",
      "source": "cvd@cert.pl",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://cert.pl/posts/2023/09/CVE-2023-4540/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/daurnimator/lua-http/commit/ddab2835c583d45dec62680ca8d3cbde55e0bae6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://https://cert.pl/en/posts/2023/09/CVE-2023-4540/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.382731",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lua-http",
    "owner": "daurnimator",
    "created_at": "2015-01-29T02:09:13Z",
    "updated_at": "2025-01-07T16:04:53Z",
    "pushed_at": "2024-09-08T14:17:59Z",
    "size": 1987,
    "stars": 810,
    "forks": 82,
    "open_issues": 60,
    "watchers": 810,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Lua": 525670
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:35:21.324436"
  }
}