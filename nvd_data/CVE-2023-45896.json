{
  "cve_id": "CVE-2023-45896",
  "github_data": {
    "repository": "torvalds/linux",
    "fix_commit": "013ff63b649475f0ee134e2c8d0c8e65284ede50",
    "related_commits": [
      "013ff63b649475f0ee134e2c8d0c8e65284ede50"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "013ff63b649475f0ee134e2c8d0c8e65284ede50",
      "commit_date": "2023-06-30T12:17:02Z",
      "author": {
        "login": "aalexandrovich",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fs/ntfs3: Add more attributes checks in mi_enum_attr()",
        "length": 132,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 68,
        "additions": 52,
        "deletions": 16
      },
      "files": [
        {
          "filename": "fs/ntfs3/record.c",
          "status": "modified",
          "additions": 52,
          "deletions": 16,
          "patch": "@@ -193,8 +193,9 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n {\n \tconst struct MFT_REC *rec = mi->mrec;\n \tu32 used = le32_to_cpu(rec->used);\n-\tu32 t32, off, asize;\n+\tu32 t32, off, asize, prev_type;\n \tu16 t16;\n+\tu64 data_size, alloc_size, tot_size;\n \n \tif (!attr) {\n \t\tu32 total = le32_to_cpu(rec->total);\n@@ -213,6 +214,7 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n \t\tif (!is_rec_inuse(rec))\n \t\t\treturn NULL;\n \n+\t\tprev_type = 0;\n \t\tattr = Add2Ptr(rec, off);\n \t} else {\n \t\t/* Check if input attr inside record. */\n@@ -226,11 +228,11 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n \t\t\treturn NULL;\n \t\t}\n \n-\t\tif (off + asize < off) {\n-\t\t\t/* Overflow check. */\n+\t\t/* Overflow check. */\n+\t\tif (off + asize < off)\n \t\t\treturn NULL;\n-\t\t}\n \n+\t\tprev_type = le32_to_cpu(attr->type);\n \t\tattr = Add2Ptr(attr, asize);\n \t\toff += asize;\n \t}\n@@ -250,7 +252,11 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n \n \t/* 0x100 is last known attribute for now. */\n \tt32 = le32_to_cpu(attr->type);\n-\tif ((t32 & 0xf) || (t32 > 0x100))\n+\tif (!t32 || (t32 & 0xf) || (t32 > 0x100))\n+\t\treturn NULL;\n+\n+\t/* attributes in record must be ordered by type */\n+\tif (t32 < prev_type)\n \t\treturn NULL;\n \n \t/* Check overflow and boundary. */\n@@ -259,16 +265,15 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n \n \t/* Check size of attribute. */\n \tif (!attr->non_res) {\n+\t\t/* Check resident fields. */\n \t\tif (asize < SIZEOF_RESIDENT)\n \t\t\treturn NULL;\n \n \t\tt16 = le16_to_cpu(attr->res.data_off);\n-\n \t\tif (t16 > asize)\n \t\t\treturn NULL;\n \n-\t\tt32 = le32_to_cpu(attr->res.data_size);\n-\t\tif (t16 + t32 > asize)\n+\t\tif (t16 + le32_to_cpu(attr->res.data_size) > asize)\n \t\t\treturn NULL;\n \n \t\tt32 = sizeof(short) * attr->name_len;\n@@ -278,21 +283,52 @@ struct ATTRIB *mi_enum_attr(struct mft_inode *mi, struct ATTRIB *attr)\n \t\treturn attr;\n \t}\n \n-\t/* Check some nonresident fields. */\n-\tif (attr->name_len &&\n-\t    le16_to_cpu(attr->name_off) + sizeof(short) * attr->name_len >\n-\t\t    le16_to_cpu(attr->nres.run_off)) {\n+\t/* Check nonresident fields. */\n+\tif (attr->non_res != 1)\n+\t\treturn NULL;\n+\n+\tt16 = le16_to_cpu(attr->nres.run_off);\n+\tif (t16 > asize)\n+\t\treturn NULL;\n+\n+\tt32 = sizeof(short) * attr->name_len;\n+\tif (t32 && le16_to_cpu(attr->name_off) + t32 > t16)\n+\t\treturn NULL;\n+\n+\t/* Check start/end vcn. */\n+\tif (le64_to_cpu(attr->nres.svcn) > le64_to_cpu(attr->nres.evcn) + 1)\n+\t\treturn NULL;\n+\n+\tdata_size = le64_to_cpu(attr->nres.data_size);\n+\tif (le64_to_cpu(attr->nres.valid_size) > data_size)\n \t\treturn NULL;\n-\t}\n \n-\tif (attr->nres.svcn || !is_attr_ext(attr)) {\n+\talloc_size = le64_to_cpu(attr->nres.alloc_size);\n+\tif (data_size > alloc_size)\n+\t\treturn NULL;\n+\n+\tt32 = mi->sbi->cluster_mask;\n+\tif (alloc_size & t32)\n+\t\treturn NULL;\n+\n+\tif (!attr->nres.svcn && is_attr_ext(attr)) {\n+\t\t/* First segment of sparse/compressed attribute */\n+\t\tif (asize + 8 < SIZEOF_NONRESIDENT_EX)\n+\t\t\treturn NULL;\n+\n+\t\ttot_size = le64_to_cpu(attr->nres.total_size);\n+\t\tif (tot_size & t32)\n+\t\t\treturn NULL;\n+\n+\t\tif (tot_size > alloc_size)\n+\t\t\treturn NULL;\n+\t} else {\n \t\tif (asize + 8 < SIZEOF_NONRESIDENT)\n \t\t\treturn NULL;\n \n \t\tif (attr->nres.c_unit)\n \t\t\treturn NULL;\n-\t} else if (asize + 8 < SIZEOF_NONRESIDENT_EX)\n-\t\treturn NULL;\n+\t}\n \n \treturn attr;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa22f4da2a46b484a257d167c67a2adc1b7aaf68",
            "date": "2025-01-26T00:23:38Z",
            "author_login": "torvalds"
          },
          {
            "sha": "eda061cccd146fcbe71051bb4aa5a8672b71216e",
            "date": "2025-01-26T00:19:10Z",
            "author_login": "torvalds"
          },
          {
            "sha": "08de7f9d4d39fd9aa5e747a13acc891214fa2d5f",
            "date": "2025-01-26T00:12:07Z",
            "author_login": "torvalds"
          },
          {
            "sha": "647d69605c70368d54fc012fce8a43e8e5955b04",
            "date": "2025-01-26T00:03:40Z",
            "author_login": "torvalds"
          },
          {
            "sha": "184a0997fb77f4a9527fc867fcd16806776c27ce",
            "date": "2025-01-25T23:59:46Z",
            "author_login": "torvalds"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H",
    "cwe_id": "CWE-276",
    "description": "ntfs3 in the Linux kernel through 6.8.0 allows a physically proximate attacker to read kernel memory by mounting a filesystem (e.g., if a Linux distribution is configured to allow unprivileged mounts of removable media) and then leveraging local access to trigger an out-of-bounds read. A length value can be larger than the amount of memory allocated. NOTE: the supplier's perspective is that there is no vulnerability when an attack requires an attacker-modified filesystem image.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-28T05:15:13.657",
    "last_modified": "2024-11-01T08:35:03.997",
    "fix_date": "2023-06-30T12:17:02Z"
  },
  "references": [
    {
      "url": "https://cdn.kernel.org/pub/linux/kernel/v6.x/ChangeLog-6.5.11",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://dfir.ru/2024/06/19/vulnerabilities-in-7-zip-and-ntfs3/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=013ff63b649475f0ee134e2c8d0c8e65284ede50",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/torvalds/linux/commit/013ff63b649475f0ee134e2c8d0c8e65284ede50",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.407326",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "linux",
    "owner": "torvalds",
    "created_at": "2011-09-04T22:48:12Z",
    "updated_at": "2025-01-26T06:54:23Z",
    "pushed_at": "2025-01-26T01:00:03Z",
    "size": 5386838,
    "stars": 186472,
    "forks": 54875,
    "open_issues": 441,
    "watchers": 186472,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 1331921668,
      "Assembly": 9611819,
      "Shell": 5108035,
      "Python": 2992085,
      "Makefile": 2706967,
      "Perl": 1253833,
      "Rust": 816450,
      "Roff": 202277,
      "C++": 173994,
      "SmPL": 165946,
      "Yacc": 127472,
      "Lex": 71397,
      "Awk": 69555,
      "Jinja": 30138,
      "UnrealScript": 16848,
      "Gherkin": 10902,
      "M4": 3329,
      "MATLAB": 2482,
      "Clojure": 2442,
      "sed": 2433,
      "XS": 1239,
      "RPC": 962
    },
    "commit_activity": {
      "total_commits_last_year": 48379,
      "avg_commits_per_week": 930.3653846153846,
      "days_active_last_year": 357
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:34:00.817711"
  }
}