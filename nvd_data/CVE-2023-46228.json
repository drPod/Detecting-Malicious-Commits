{
  "cve_id": "CVE-2023-46228",
  "github_data": {
    "repository": "zchunk/zchunk",
    "fix_commit": "08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe",
    "related_commits": [
      "08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe",
      "08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe"
    ],
    "patch_url": "https://github.com/zchunk/zchunk/commit/08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe.patch",
    "fix_commit_details": {
      "sha": "08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe",
      "commit_date": "2023-10-05T18:52:18Z",
      "author": {
        "login": "jdieter",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Handle overflow errors in malformed zchunk files",
        "length": 156,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 31,
        "additions": 30,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/lib/comp/comp.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -115,6 +115,12 @@ static bool comp_add_to_data(zckCtx *zck, zckComp *comp, const char *src,\n     ALLOCD_BOOL(zck, comp);\n     ALLOCD_BOOL(zck, src);\n \n+    if((comp->data_size > comp->data_size + src_size) ||\n+       (src_size > comp->data_size + src_size)) {\n+        zck_log(ZCK_LOG_ERROR, \"Integer overflow when reading data\");\n+        return false;\n+    }\n+\n     comp->data = zrealloc(comp->data, comp->data_size + src_size);\n     if (!comp->data) {\n         zck_log(ZCK_LOG_ERROR, \"OOM in %s\", __func__);"
        },
        {
          "filename": "src/lib/comp/zstd/zstd.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -117,6 +117,12 @@ static ssize_t compress(zckCtx *zck, zckComp *comp, const char *src,\n     ALLOCD_INT(zck, dst_size);\n     ALLOCD_INT(zck, comp);\n \n+    if((comp->dc_data_size > comp->dc_data_size + src_size) ||\n+       (src_size > comp->dc_data_size + src_size)) {\n+        zck_log(ZCK_LOG_ERROR, \"Integer overflow when reading decompressed data\");\n+        return false;\n+    }\n+\n     comp->dc_data = zrealloc(comp->dc_data, comp->dc_data_size + src_size);\n     if (!comp->dc_data) {\n         zck_log(ZCK_LOG_ERROR, \"OOM in %s\", __func__);"
        },
        {
          "filename": "src/lib/dl/multipart.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -119,6 +119,12 @@ size_t multipart_extract(zckDL *dl, char *b, size_t l) {\n \n     /* Add new data to stored buffer */\n     if(mp->buffer) {\n+        if((mp->buffer_len > mp->buffer_len + l) ||\n+           (l > mp->buffer_len + l)) {\n+            zck_log(ZCK_LOG_ERROR, \"Integer overflow when extracting multipart data\");\n+            return 0;\n+        }\n+\n         buf = zrealloc(mp->buffer, mp->buffer_len + l);\n         if (!buf) {\n             zck_log(ZCK_LOG_ERROR, \"OOM in %s\", __func__);"
        },
        {
          "filename": "src/lib/header.c",
          "status": "modified",
          "additions": 12,
          "deletions": 1,
          "patch": "@@ -74,11 +74,16 @@ static bool read_optional_element(zckCtx *zck, size_t id, size_t data_size,\n }\n \n static bool read_header_from_file(zckCtx *zck) {\n-    /* Verify that lead_size and header_length have been set */\n+    /* Verify that lead_size and header_length have been set and are legit */\n     if(zck->lead_size == 0 || zck->header_length == 0) {\n         set_error(zck, \"Lead and header sizes are both 0.  Have you run zck_read_lead() yet?\");\n         return false;\n     }\n+    if((zck->lead_size > zck->lead_size + zck->header_length) ||\n+       (zck->header_length > zck->lead_size + zck->header_length)) {\n+        zck_log(ZCK_LOG_ERROR, \"Integer overflow when reading header\");\n+        return false;\n+    }\n \n     /* Allocate header and store any extra bytes at beginning of header */\n     zck->header = zrealloc(zck->header, zck->lead_size + zck->header_length);\n@@ -533,6 +538,12 @@ static bool read_lead(zckCtx *zck) {\n     /* Set header digest location */\n     zck->hdr_digest_loc = length;\n \n+    /* Verify that we're not going to overflow */\n+    if(length > length + zck->hash_type.digest_size) {\n+        zck_log(ZCK_LOG_ERROR, \"Integer overflow when reading lead\");\n+        return false;\n+    }\n+\n     /* Read header digest */\n     zck_log(ZCK_LOG_DEBUG, \"Reading header digest\");\n     header = zrealloc(header, length + zck->hash_type.digest_size);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "69dd7d6764e333413dd12848607d72cab310e406",
            "date": "2024-07-20T03:30:47Z",
            "author_login": "jdieter"
          },
          {
            "sha": "64100f61d98bcf256f66a65cab42628ef8e7da6e",
            "date": "2024-07-20T03:20:56Z",
            "author_login": "jdieter"
          },
          {
            "sha": "d16bdae842ec43ed7c99eecbe154f8fb39de1a56",
            "date": "2024-07-19T06:58:09Z",
            "author_login": "kontura"
          },
          {
            "sha": "0ba8765ae9895fd0890970a6a0561948e8617a1a",
            "date": "2024-07-18T01:37:45Z",
            "author_login": "jdieter"
          },
          {
            "sha": "01765654d2df4364ffc02b9df23decca3b5b1ccc",
            "date": "2024-07-07T04:55:26Z",
            "author_login": "jdieter"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-190",
    "description": "zchunk before 1.3.2 has multiple integer overflows via malformed zchunk files to lib/comp/comp.c, lib/comp/zstd/zstd.c, lib/dl/multipart.c, or lib/header.c.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-19T05:15:58.663",
    "last_modified": "2024-11-21T08:28:07.157",
    "fix_date": "2023-10-05T18:52:18Z"
  },
  "references": [
    {
      "url": "https://bugzilla.suse.com/show_bug.cgi?id=1216268",
      "source": "cve@mitre.org",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zchunk/zchunk/commit/08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/zchunk/zchunk/compare/1.3.1...1.3.2",
      "source": "cve@mitre.org",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://bugzilla.suse.com/show_bug.cgi?id=1216268",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/zchunk/zchunk/commit/08aec2b4dfd7f709b6e3d511411ffcc83ed4efbe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/zchunk/zchunk/compare/1.3.1...1.3.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.906748",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "zchunk",
    "owner": "zchunk",
    "created_at": "2018-03-07T07:46:20Z",
    "updated_at": "2024-12-06T03:00:30Z",
    "pushed_at": "2024-07-20T03:31:54Z",
    "size": 4325,
    "stars": 248,
    "forks": 35,
    "open_issues": 12,
    "watchers": 248,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "C": 582297,
      "Meson": 23204,
      "HTML": 13325,
      "Shell": 10064,
      "Dockerfile": 2545,
      "Python": 1643
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-14T16:13:14.290083"
  }
}