{
  "cve_id": "CVE-2023-46236",
  "github_data": {
    "repository": "FOGProject/fogproject",
    "fix_commit": "9125f35ff649a3e7fd7771b1c8e5add3c726f763",
    "related_commits": [
      "9125f35ff649a3e7fd7771b1c8e5add3c726f763",
      "9125f35ff649a3e7fd7771b1c8e5add3c726f763"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "9125f35ff649a3e7fd7771b1c8e5add3c726f763",
      "commit_date": "2023-01-28T22:52:14Z",
      "author": {
        "login": "0x41c",
        "type": "User",
        "stats": {
          "total_commits": 6,
          "average_weekly_commits": 0.010638297872340425,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 2
        }
      },
      "commit_message": {
        "title": "[getversion/kernelvers] Prevent unauthenticated clients from making arbitrary requests, thanks @0x41c",
        "length": 101,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 33,
        "deletions": 11
      },
      "files": [
        {
          "filename": "packages/web/service/getversion.php",
          "status": "modified",
          "additions": 14,
          "deletions": 4,
          "patch": "@@ -28,20 +28,30 @@\n  * @link     https://fogproject.org\n  */\n require '../commons/base.inc.php';\n-$clientUpdate = (bool)FOGCore::getSetting('FOG_CLIENT_AUTOUPDATE');\n+$clientUpdate = (bool) FOGCore::getSetting('FOG_CLIENT_AUTOUPDATE');\n if (isset($_REQUEST['client'])) {\n     $ver = (\n-        $clientUpdate ?\n+        $clientUpdate ? \n         '9.9.99' :\n         '0.0.0'\n     );\n } elseif (isset($_REQUEST['clientver'])) {\n     $ver = (\n-        $clientUpdate ?\n+        $clientUpdate ? \n         FOG_CLIENT_VERSION :\n         '0.0.0'\n     );\n } elseif (isset($_REQUEST['url'])) {\n+\n+    // Prevent an unauthenticated user from making arbitrary requests.\n+    $unauthorized = !$currentUser->isValid() || empty($_SERVER['HTTP_X_REQUESTED_WITH'])\n+        || strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) !== 'xmlhttprequest';\n+\n+    if ($unauthorized) {\n+        echo _('Unauthorized');\n+        exit;\n+    }\n+\n     $url = $_REQUEST['url'];\n     $res = $FOGURLRequests\n         ->process($_REQUEST['url']);\n@@ -50,4 +60,4 @@\n     $ver = FOG_VERSION;\n }\n echo $ver;\n-exit;\n+exit;\n\\ No newline at end of file"
        },
        {
          "filename": "packages/web/status/kernelvers.php",
          "status": "modified",
          "additions": 19,
          "deletions": 7,
          "patch": "@@ -24,16 +24,28 @@\n ignore_user_abort(true);\n set_time_limit(0);\n header('Content-Type: text/event-stream');\n-$url = filter_input(INPUT_POST, 'url');\n-if ($url) {\n+\n+if (isset($_POST['url'])) {\n+\n+    // Prevent an unauthenticated user from making arbitrary requests.\n+    $unauthorized = !$currentUser->isValid() || empty($_SERVER['HTTP_X_REQUESTED_WITH'])\n+        || strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) !== 'xmlhttprequest';\n+\n+    if ($unauthorized) {\n+        echo _('Unauthorized');\n+        exit;\n+    }\n+\n     $res = $FOGURLRequests\n-        ->process($url);\n-    foreach ((array)$res as &$response) {\n+        ->process(filter_input(INPUT_POST, 'url'));\n+    foreach ((array) $res as &$response) {\n         echo $response;\n         unset($response);\n     }\n+    \n     exit;\n }\n+\n $kernelvers = function ($kernel) {\n     $currpath = sprintf(\n         '%s%sservice%sipxe%s%s',\n@@ -57,9 +69,9 @@\n );\n printf(\n     \"bzImage Version: %s\\n\",\n-    $kernelvers('bzImage')\n+        $kernelvers('bzImage')\n );\n printf(\n     \"bzImage32 Version: %s\",\n-    $kernelvers('bzImage32')\n-);\n+        $kernelvers('bzImage32')\n+);\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6a66e4311a3a9afc0bb07d5999b724655e359e6f",
            "date": "2025-01-15T15:52:06Z",
            "author_login": "fog-workflows[bot]"
          },
          {
            "sha": "09341f23eeafbb4f83767a2070d71362ff89cd44",
            "date": "2025-01-14T13:09:39Z",
            "author_login": "mastacontrola"
          },
          {
            "sha": "423a55d2e21bffe2ca3da2a27ce68ff2322a2e18",
            "date": "2024-11-18T11:08:58Z",
            "author_login": "mastacontrola"
          },
          {
            "sha": "2fac87db8ee3df1db5bc0ecbe80f5e214f631c01",
            "date": "2024-11-15T14:52:44Z",
            "author_login": "osiktech"
          },
          {
            "sha": "fb6325a48bde86dd44589903528dce4177e5447f",
            "date": "2024-11-15T14:41:27Z",
            "author_login": "fog-workflows[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-918",
    "description": "FOG is a free open-source cloning/imaging/rescue suite/inventory management system. Prior to version 1.5.10, a server-side-request-forgery (SSRF) vulnerability allowed an unauthenticated user to trigger a GET request as the server to an arbitrary endpoint and URL scheme. This also allows remote access to files visible to the Apache user group. Other impacts vary based on server configuration. Version 1.5.10 contains a patch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-10-31T15:15:09.630",
    "last_modified": "2024-11-21T08:28:08.280",
    "fix_date": "2023-01-28T22:52:14Z"
  },
  "references": [
    {
      "url": "https://github.com/FOGProject/fogproject/commit/9125f35ff649a3e7fd7771b1c8e5add3c726f763",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/FOGProject/fogproject/security/advisories/GHSA-8qg4-9363-873h",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/FOGProject/fogproject/commit/9125f35ff649a3e7fd7771b1c8e5add3c726f763",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/FOGProject/fogproject/security/advisories/GHSA-8qg4-9363-873h",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:36.971486",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "fogproject",
    "owner": "FOGProject",
    "created_at": "2014-04-15T18:28:09Z",
    "updated_at": "2025-01-26T00:50:41Z",
    "pushed_at": "2025-01-20T16:51:14Z",
    "size": 4511714,
    "stars": 1193,
    "forks": 229,
    "open_issues": 42,
    "watchers": 1193,
    "has_security_policy": false,
    "default_branch": "stable",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 3144789,
      "JavaScript": 610298,
      "Shell": 240487,
      "Makefile": 90209,
      "SCSS": 79489,
      "Less": 78481,
      "CSS": 45725,
      "C": 18292,
      "HTML": 2693,
      "Awk": 375
    },
    "commit_activity": {
      "total_commits_last_year": 216,
      "avg_commits_per_week": 4.153846153846154,
      "days_active_last_year": 51
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-26T07:52:59.047540"
  }
}