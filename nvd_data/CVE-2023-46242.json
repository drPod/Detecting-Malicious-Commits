{
  "cve_id": "CVE-2023-46242",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "cf8eb861998ea423c3645d2e5e974420b0e882be",
    "related_commits": [
      "cf8eb861998ea423c3645d2e5e974420b0e882be",
      "cf8eb861998ea423c3645d2e5e974420b0e882be"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/cf8eb861998ea423c3645d2e5e974420b0e882be.patch",
    "fix_commit_details": {
      "sha": "cf8eb861998ea423c3645d2e5e974420b0e882be",
      "commit_date": "2023-03-16T15:53:19Z",
      "author": {
        "login": "tmortagne",
        "type": "User",
        "stats": {
          "total_commits": 12783,
          "average_weekly_commits": 13.39937106918239,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 847
        }
      },
      "commit_message": {
        "title": "XWIKI-20386: CSRF privilege escalation/RCE via the edit action",
        "length": 62,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 64,
        "additions": 51,
        "deletions": 13
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/EditAction.java",
          "status": "modified",
          "additions": 26,
          "deletions": 12,
          "patch": "@@ -29,6 +29,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.xwiki.component.annotation.Component;\n+import org.xwiki.csrf.CSRFToken;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.rendering.syntax.Syntax;\n import org.xwiki.user.UserReference;\n@@ -58,6 +59,9 @@ public class EditAction extends XWikiAction\n     @Named(\"document\")\n     private UserReferenceResolver<DocumentReference> documentReferenceUserReferenceResolver;\n \n+    @Inject\n+    private CSRFToken csrf;\n+\n     /**\n      * Default constructor.\n      */\n@@ -116,19 +120,29 @@ protected XWikiDocument prepareEditedDocument(XWikiContext context) throws XWiki\n         updateDocumentTitleAndContentFromRequest(editedDocument, context);\n         editedDocument.readAddedUpdatedAndRemovedObjectsFromForm(editForm, context);\n \n-        // If the metadata is modified, modify the effective metadata author\n-        if (editedDocument.isMetaDataDirty()) {\n-            UserReference userReference =\n-                this.documentReferenceUserReferenceResolver.resolve(context.getUserReference());\n-            editedDocument.getAuthors().setEffectiveMetadataAuthor(userReference);\n-            editedDocument.getAuthors().setOriginalMetadataAuthor(userReference);\n-        }\n+        // Check if the document in modified\n+        if (editedDocument.isMetaDataDirty() || editedDocument.isContentDirty()) {\n+            // If the document is modified make sure a valid CSRF is provided\n+            String token = context.getRequest().getParameter(\"form_token\");\n+            if (!this.csrf.isTokenValid(token)) {\n+                // or make the document restricted\n+                editedDocument.setRestricted(true);\n+            }\n \n-        // If the content is modified, modify the content author\n-        if (editedDocument.isContentDirty()) {\n-            UserReference userReference =\n-                this.documentReferenceUserReferenceResolver.resolve(context.getUserReference());\n-            editedDocument.getAuthors().setContentAuthor(userReference);\n+            // If the metadata is modified, modify the effective metadata author\n+            if (editedDocument.isMetaDataDirty()) {\n+                UserReference userReference =\n+                    this.documentReferenceUserReferenceResolver.resolve(context.getUserReference());\n+                editedDocument.getAuthors().setEffectiveMetadataAuthor(userReference);\n+                editedDocument.getAuthors().setOriginalMetadataAuthor(userReference);\n+            }\n+\n+            // If the content is modified, modify the content author\n+            if (editedDocument.isContentDirty()) {\n+                UserReference userReference =\n+                    this.documentReferenceUserReferenceResolver.resolve(context.getUserReference());\n+                editedDocument.getAuthors().setContentAuthor(userReference);\n+            }\n         }\n \n         // Set the current user as creator, author and contentAuthor when the edited document is newly created to avoid"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/EditActionTest.java",
          "status": "modified",
          "additions": 25,
          "deletions": 1,
          "patch": "@@ -19,11 +19,14 @@\n  */\n package com.xpn.xwiki.web;\n \n+import java.util.Map;\n+\n import javax.inject.Named;\n \n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.mockito.Mock;\n+import org.xwiki.csrf.CSRFToken;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.store.TemporaryAttachmentSessionsManager;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n@@ -39,6 +42,7 @@\n import com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n import com.xpn.xwiki.test.reference.ReferenceComponentList;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertSame;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n@@ -75,6 +79,9 @@ public class EditActionTest\n     @Named(\"document\")\n     private UserReferenceSerializer<DocumentReference> documentReferenceUserReferenceSerializer;\n \n+    @MockComponent\n+    private CSRFToken csrf;\n+\n     @Mock\n     private XWikiRequest request;\n \n@@ -85,6 +92,9 @@ public void beforeEach()\n         when(this.documentReferenceUserReferenceSerializer.serialize(USER_REFERENCE)).thenReturn(USER_DOCUMENT_REFERENCE);\n \n         this.oldcore.getXWikiContext().setUserReference(USER_DOCUMENT_REFERENCE);\n+\n+        this.oldcore.getXWikiContext().setRequest(new XWikiServletRequestStub.Builder().\n+            setRequestParameters(Map.of(\"form_token\", new String[] {\"tokenvalue\"})).build());\n     }\n \n     private String initAndRenderAction() throws XWikiException\n@@ -141,7 +151,18 @@ void documentAuthorsWhenDocumentExist() throws XWikiException\n     }\n \n     @Test\n-    void documentAuthorsWhenDocumentExistAndContentIsModified() throws XWikiException\n+    void documentAuthorsWhenDocumentExistAndContentIsModifiedAndInvalidValidCSRF() throws XWikiException\n+    {\n+        documentAuthorsWhenDocumentExistAndContentIsModified(false);\n+    }\n+\n+    @Test\n+    void documentAuthorsWhenDocumentExistAndContentIsModifiedAndValidCSRF() throws XWikiException\n+    {\n+        documentAuthorsWhenDocumentExistAndContentIsModified(true);\n+    }\n+\n+    void documentAuthorsWhenDocumentExistAndContentIsModified(boolean validToken) throws XWikiException\n     {\n         XWikiDocument document = this.oldcore.getSpyXWiki().getDocument(new DocumentReference(\"wiki\", \"space\", \"page\"),\n             this.oldcore.getXWikiContext());\n@@ -158,6 +179,8 @@ void documentAuthorsWhenDocumentExistAndContentIsModified() throws XWikiExceptio\n \n         when(this.request.getParameter(\"content\")).thenReturn(\"modified content\");\n \n+        when(this.csrf.isTokenValid(\"tokenvalue\")).thenReturn(validToken);\n+\n         initAndRenderAction();\n \n         document = this.oldcore.getXWikiContext().getDoc();\n@@ -166,5 +189,6 @@ void documentAuthorsWhenDocumentExistAndContentIsModified() throws XWikiExceptio\n         assertSame(OTHERUSER_REFERENCE, document.getAuthors().getCreator());\n         assertSame(OTHERUSER_REFERENCE, document.getAuthors().getEffectiveMetadataAuthor());\n         assertSame(OTHERUSER_REFERENCE, document.getAuthors().getOriginalMetadataAuthor());\n+        assertEquals(!validToken, document.isRestricted());\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions it's possible to execute a content with the right of any user via a crafted URL. A user must have `programming` privileges in order to exploit this vulnerability. This issue has been patched in XWiki 14.10.7 and 15.2RC1. Users are advised to upgrade. There are no known workarounds for for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-11-07T19:15:10.163",
    "last_modified": "2024-11-21T08:28:09.033",
    "fix_date": "2023-03-16T15:53:19Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/cf8eb861998ea423c3645d2e5e974420b0e882be",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-hgpw-6p4h-j6h5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20386",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/cf8eb861998ea423c3645d2e5e974420b0e882be",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-hgpw-6p4h-j6h5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20386",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.239467",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}