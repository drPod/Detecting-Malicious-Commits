{
  "cve_id": "CVE-2023-46244",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "11a9170dfe63e59f4066db67f84dbfce4ed619c6",
    "related_commits": [
      "11a9170dfe63e59f4066db67f84dbfce4ed619c6",
      "41d7dca2d30084966ca6a7ee537f39ee8354a7e3",
      "11a9170dfe63e59f4066db67f84dbfce4ed619c6",
      "41d7dca2d30084966ca6a7ee537f39ee8354a7e3"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/11a9170dfe63e59f4066db67f84dbfce4ed619c6.patch",
    "fix_commit_details": {
      "sha": "11a9170dfe63e59f4066db67f84dbfce4ed619c6",
      "commit_date": "2023-03-09T16:19:11Z",
      "author": {
        "login": "tmortagne",
        "type": "User",
        "stats": {
          "total_commits": 12783,
          "average_weekly_commits": 13.39937106918239,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 847
        }
      },
      "commit_message": {
        "title": "XWIKI-20624: Improve title display for modified documents",
        "length": 57,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 92,
        "additions": 86,
        "deletions": 6
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-display/xwiki-platform-display-api/src/main/java/org/xwiki/display/internal/AbstractDocumentTitleDisplayer.java",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -176,7 +176,7 @@ private XDOM displayTitle(DocumentModelBridge document, DocumentDisplayerParamet\n                 // Evaluate the title only if the document has script rights, otherwise use the raw title.\n                 if (authorizationManager.hasAccess(Right.SCRIPT, document.getContentAuthorReference(),\n                     document.getDocumentReference())) {\n-                    title = evaluateTitle(rawTitle, document.getDocumentReference(), parameters);\n+                    title = evaluateTitle(rawTitle, document, parameters);\n                 }\n                 return parseTitle(title);\n             } catch (Exception e) {\n@@ -226,12 +226,12 @@ protected XDOM parseTitle(String title)\n      * @param parameters display parameters\n      * @return the result of evaluating the Velocity script from the given title\n      */\n-    protected String evaluateTitle(String title, DocumentReference documentReference,\n+    protected String evaluateTitle(String title, DocumentModelBridge document,\n         DocumentDisplayerParameters parameters)\n     {\n         StringWriter writer = new StringWriter();\n         String namespace = defaultEntityReferenceSerializer.serialize(parameters.isTransformationContextIsolated()\n-            ? documentReference : documentAccessBridge.getCurrentDocumentReference());\n+            ? document.getDocumentReference() : documentAccessBridge.getCurrentDocumentReference());\n \n         // Get the velocity engine\n         VelocityEngine velocityEngine;\n@@ -249,11 +249,11 @@ protected String evaluateTitle(String title, DocumentReference documentReference\n             if (parameters.isExecutionContextIsolated()) {\n                 backupObjects = new HashMap<>();\n                 // The following method call also clones the execution context.\n-                documentAccessBridge.pushDocumentInContext(backupObjects, documentReference);\n+                documentAccessBridge.pushDocumentInContext(backupObjects, document);\n                 // Pop the document from the context only if the push was successful!\n                 canPop = true;\n                 // Make sure to synchronize the context wiki with the context document's wiki.\n-                modelContext.setCurrentEntityReference(documentReference.getWikiReference());\n+                modelContext.setCurrentEntityReference(document.getDocumentReference().getWikiReference());\n             }\n             velocityEngine.evaluate(velocityManager.getVelocityContext(), writer, namespace, title);\n         } catch (Exception e) {"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-display/xwiki-platform-display-api/src/test/java/org/xwiki/display/internal/DocumentTitleDisplayerTest.java",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -51,6 +51,7 @@\n import static org.junit.Assert.assertSame;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.ArgumentMatchers.same;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n@@ -134,7 +135,7 @@ public void whenSettingTheContextDocumentTheContextWikiIsAlsoSet() throws Except\n         this.mocker.getComponentUnderTest().display(document, params);\n \n         // Check that the context is set.\n-        verify(dab).pushDocumentInContext(any(), eq(documentReference));\n+        verify(dab).pushDocumentInContext(any(), same(document));\n         verify(modelContext).setCurrentEntityReference(documentReference.getWikiReference());\n \n         // Check that the context is restored."
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -188,4 +188,10 @@ class NestedTextAreaIT extends TextAreaIT\n     class NestedSheetIT extends SheetIT\n     {\n     }\n+\n+    @Nested\n+    @DisplayName(\"Script author Tests\")\n+    class NestedScriptAuthorIT extends ScriptAuthorIT\n+    {\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/ScriptAuthorIT.java",
          "status": "added",
          "additions": 73,
          "deletions": 0,
          "patch": "@@ -0,0 +1,73 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.flamingo.test.docker;\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.test.docker.junit5.TestReference;\n+import org.xwiki.test.docker.junit5.UITest;\n+import org.xwiki.test.ui.TestUtils;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * Make sure a script end up being executed by the right author in various use cases.\n+ *\n+ * @version $Id$\n+ */\n+@UITest\n+class ScriptAuthorIT\n+{\n+    @BeforeAll\n+    public void setup(TestUtils setup)\n+    {\n+        setup.loginAsSuperAdmin();\n+    }\n+\n+    @Test\n+    @Order(1)\n+    void renderTitleInModifiedDocument(TestUtils setup, TestReference reference) throws Exception\n+    {\n+        // Give a page programming right\n+        setup.loginAsSuperAdmin();\n+        DocumentReference programmingReference = reference;\n+        setup.rest().savePage(programmingReference);\n+\n+        // Write a script without programming right\n+        setup.createUser(\"renderTitleInModifiedDocument\", \"renderTitleInModifiedDocument\", null);\n+        setup.setGlobalRights(null, \"renderTitleInModifiedDocument\", \"script\", true);\n+        setup.login(\"renderTitleInModifiedDocument\", \"renderTitleInModifiedDocument\");\n+        DocumentReference scriptReference =\n+            new DocumentReference(\"Script\", programmingReference.getLastSpaceReference());\n+        StringBuilder source = new StringBuilder();\n+        source.append(\"{{velocity}}\\n\");\n+        source.append(\"#set($main = $xwiki.getDocument('\" + setup.serializeReference(programmingReference) + \"'))\\n\");\n+        source.append(\"$main.setTitle('$doc.document.authors.contentAuthor')\\n\");\n+        source.append(\"$main.getPlainTitle()\\n\");\n+        source.append(\"{{/velocity}}\");\n+        setup.rest().savePage(scriptReference, source.toString(), \"sheet title\");\n+\n+        StringBuilder result = new StringBuilder();\n+        result.append(\"<p>$doc.document.authors.contentAuthor</p>\");\n+        assertEquals(result.toString(), setup.executeAndGetBodyAsString(scriptReference, null));\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 13
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-863",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions it's possible for a user to write a script in which any velocity content is executed with the right of any other document content author. Since this API require programming right and the user does not have it, the expected result is `$doc.document.authors.contentAuthor` (not executed script), unfortunately with the security vulnerability it is possible for the attacker to get `XWiki.superadmin` which shows that the title was executed with the right of the unmodified document. This has been patched in XWiki versions 14.10.7 and 15.2RC1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-11-07T19:15:10.923",
    "last_modified": "2024-11-21T08:28:09.307",
    "fix_date": "2023-03-09T16:19:11Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/11a9170dfe63e59f4066db67f84dbfce4ed619c6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/41d7dca2d30084966ca6a7ee537f39ee8354a7e3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rmxw-c48h-2vf5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20624",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20625",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/11a9170dfe63e59f4066db67f84dbfce4ed619c6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/41d7dca2d30084966ca6a7ee537f39ee8354a7e3",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rmxw-c48h-2vf5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20624",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20625",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.239618",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}