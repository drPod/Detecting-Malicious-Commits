{
  "cve_id": "CVE-2023-46726",
  "github_data": {
    "repository": "glpi-project/glpi",
    "fix_commit": "42ba2b031bec0b3889317db25f3adf9080fc11b2",
    "related_commits": [
      "42ba2b031bec0b3889317db25f3adf9080fc11b2",
      "42ba2b031bec0b3889317db25f3adf9080fc11b2"
    ],
    "patch_url": "https://github.com/glpi-project/glpi/commit/42ba2b031bec0b3889317db25f3adf9080fc11b2.patch",
    "fix_commit_details": {
      "sha": "42ba2b031bec0b3889317db25f3adf9080fc11b2",
      "commit_date": "2023-12-13T07:19:00Z",
      "author": {
        "login": "cedric-anne",
        "type": "User",
        "stats": {
          "total_commits": 2969,
          "average_weekly_commits": 2.716376944190302,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 324
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-qc92-gxc6-5f95",
        "length": 43,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 252,
        "additions": 216,
        "deletions": 36
      },
      "files": [
        {
          "filename": "src/AuthLDAP.php",
          "status": "modified",
          "additions": 44,
          "deletions": 34,
          "patch": "@@ -35,6 +35,7 @@\n \n use Glpi\\Application\\ErrorHandler;\n use Glpi\\Application\\View\\TemplateRenderer;\n+use Glpi\\Toolbox\\Filesystem;\n use Glpi\\Toolbox\\Sanitizer;\n \n /**\n@@ -306,7 +307,10 @@ public function prepareInputForUpdate($input)\n             };\n         }\n \n-        $this->checkFilesExist($input);\n+        if (!$this->checkFilesExist($input)) {\n+            return false;\n+        }\n+\n         return $input;\n     }\n \n@@ -3119,19 +3123,24 @@ public static function connectToServer(\n                 );\n             }\n         }\n-        if (\n-            !empty($tls_certfile)\n-            && file_exists($tls_certfile)\n-            && !@ldap_set_option(null, LDAP_OPT_X_TLS_CERTFILE, $tls_certfile)\n-        ) {\n-            trigger_error(\"Unable to set LDAP option `LDAP_OPT_X_TLS_CERTFILE`\", E_USER_WARNING);\n+\n+        if (!empty($tls_certfile)) {\n+            if (!Filesystem::isFilepathSafe($tls_certfile)) {\n+                trigger_error(\"TLS certificate path is not safe.\", E_USER_WARNING);\n+            } elseif (!file_exists($tls_certfile)) {\n+                trigger_error(\"TLS certificate path is not valid.\", E_USER_WARNING);\n+            } elseif (!@ldap_set_option(null, LDAP_OPT_X_TLS_CERTFILE, $tls_certfile)) {\n+                trigger_error(\"Unable to set LDAP option `LDAP_OPT_X_TLS_CERTFILE`\", E_USER_WARNING);\n+            }\n         }\n-        if (\n-            !empty($tls_keyfile)\n-            && file_exists($tls_keyfile)\n-            && !@ldap_set_option(null, LDAP_OPT_X_TLS_KEYFILE, $tls_keyfile)\n-        ) {\n-            trigger_error(\"Unable to set LDAP option `LDAP_OPT_X_TLS_KEYFILE`\", E_USER_WARNING);\n+        if (!empty($tls_keyfile)) {\n+            if (!Filesystem::isFilepathSafe($tls_keyfile)) {\n+                trigger_error(\"TLS key file path is not safe.\", E_USER_WARNING);\n+            } elseif (!file_exists($tls_keyfile)) {\n+                trigger_error(\"TLS key file path is not valid.\", E_USER_WARNING);\n+            } elseif (!@ldap_set_option(null, LDAP_OPT_X_TLS_KEYFILE, $tls_keyfile)) {\n+                trigger_error(\"Unable to set LDAP option `LDAP_OPT_X_TLS_KEYFILE`\", E_USER_WARNING);\n+            }\n         }\n \n         if ($use_tls) {\n@@ -4759,30 +4768,31 @@ public static function getUsers($values, &$results, &$limitexceeded)\n \n     public function checkFilesExist(&$input)\n     {\n-\n-        if (isset($input['tls_certfile'])) {\n-            $file = realpath($input['tls_certfile']);\n-            if (!file_exists($file)) {\n-                Session::addMessageAfterRedirect(\n-                    __('TLS certificate path is incorrect'),\n-                    false,\n-                    ERROR\n-                );\n-                return false;\n-            }\n+        if (\n+            isset($input['tls_certfile'])\n+            && (!Filesystem::isFilepathSafe($input['tls_certfile']) || !file_exists($input['tls_certfile']))\n+        ) {\n+            Session::addMessageAfterRedirect(\n+                __('TLS certificate path is incorrect'),\n+                false,\n+                ERROR\n+            );\n+            return false;\n         }\n \n-        if (isset($input['tls_keyfile'])) {\n-            $file = realpath($input['tls_keyfile']);\n-            if (!file_exists($file)) {\n-                Session::addMessageAfterRedirect(\n-                    __('TLS key file path is incorrect'),\n-                    false,\n-                    ERROR\n-                );\n-                return false;\n-            }\n+        if (\n+            isset($input['tls_keyfile'])\n+            && (!Filesystem::isFilepathSafe($input['tls_keyfile']) || !file_exists($input['tls_keyfile']))\n+        ) {\n+            Session::addMessageAfterRedirect(\n+                __('TLS key file path is incorrect'),\n+                false,\n+                ERROR\n+            );\n+            return false;\n         }\n+\n+        return true;\n     }\n \n "
        },
        {
          "filename": "src/Toolbox/Filesystem.php",
          "status": "modified",
          "additions": 61,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@\n \n namespace Glpi\\Toolbox;\n \n-class Filesystem\n+final class Filesystem\n {\n     /**\n      * Checks if the file with given path can be written.\n@@ -80,4 +80,64 @@ public static function canWriteFiles(array $paths): bool\n \n         return true;\n     }\n+\n+    /**\n+     * Checks if the given file path is safe.\n+     *\n+     * @param string $path\n+     * @param string $restricted_directory\n+     *\n+     * @return bool\n+     */\n+    public static function isFilepathSafe(string $path, ?string $restricted_directory = null): bool\n+    {\n+        $parsed_scheme = parse_url($path, PHP_URL_SCHEME);\n+\n+        if ($parsed_scheme === 'file') {\n+            // If scheme is `file://`, parse the path again to validate that it does not contains itself\n+            // an unexpected scheme.\n+            $path = parse_url($path, PHP_URL_PATH);\n+            $parsed_scheme = parse_url($path, PHP_URL_SCHEME);\n+        }\n+\n+        if ($parsed_scheme !== null && preg_match('/^[a-z]$/i', $parsed_scheme) !== 1) {\n+            // As soon as the path contains a scheme, it is not considered as safe,\n+            // unless the scheme is 1 letter (corresponds to a drive letter on Windows system).\n+            return false;\n+        }\n+\n+        if ($restricted_directory === null) {\n+            // All directories are allowed.\n+            return true;\n+        }\n+\n+        $restricted_directory = self::normalizePath($restricted_directory);\n+        if (!str_ends_with($restricted_directory, '/')) {\n+            // Ensure directory ends with a `/`, to prevent false positives:\n+            // - /path/to/dir/file is inside /path/to/dir\n+            // - /path/to/dir_file is not inside /path/to/dir\n+            $restricted_directory .= '/';\n+        }\n+\n+        return str_starts_with(self::normalizePath($path), $restricted_directory);\n+    }\n+\n+    /**\n+     * Normalize a path, to make comparisons and relative paths computation easier.\n+     *\n+     * @param string $path\n+     * @return string\n+     */\n+    private static function normalizePath(string $path): string\n+    {\n+        $realpath = realpath($path);\n+        if ($realpath !== false) {\n+            // Use realpath if possible (not always possible, for instance when file not exists).\n+            $path = $realpath;\n+        }\n+\n+        // Normalize all directory separators to `/`.\n+        $path = preg_replace('/\\\\\\/', '/', $path);\n+        return $path;\n+    }\n }"
        },
        {
          "filename": "tests/units/Glpi/Toolbox/Filesystem.php",
          "status": "modified",
          "additions": 111,
          "deletions": 1,
          "patch": "@@ -39,7 +39,7 @@\n \n class Filesystem extends \\GLPITestCase\n {\n-    public function testCanWriteFile()\n+    public function testCanWriteFile(): void\n     {\n         $config_dir = vfsStream::setup('config');\n \n@@ -70,4 +70,114 @@ public function testCanWriteFile()\n         $this->boolean($this->testedInstance->canWriteFile(vfsStream::url('config/whatever.yml')))->isEqualTo(true);\n         $this->boolean($this->testedInstance->canWriteFiles([vfsStream::url('config/config_db.php'), vfsStream::url('config/whatever.yml')]))->isEqualTo(true);\n     }\n+\n+    protected function isFilepathSafeProvider(): iterable\n+    {\n+        // Unix paths and file scheme\n+        foreach (['', 'file://'] as $prefix) {\n+            yield [\n+                'path'                  => $prefix . '/path/to/whatever/file',\n+                'restricted_directory'  => null,\n+                'is_safe'               => true,\n+            ];\n+            yield [\n+                'path'                  => $prefix . '/path/to/whatever/file',\n+                'restricted_directory'  => '/path/to/whatever',\n+                'is_safe'               => true,\n+            ];\n+            yield [\n+                'path'                  => $prefix . '/path/to/whatever/file/in/a/subdir',\n+                'restricted_directory'  => '/path/to/whatever',\n+                'is_safe'               => true,\n+            ];\n+            yield [\n+                'path'                  => $prefix . '/path/to/whatever_file',\n+                'restricted_directory'  => '/path/to/whatever',\n+                'is_safe'               => false,\n+            ];\n+            yield [\n+                'path'                  => $prefix . '/path/to/whatever/file',\n+                'restricted_directory'  => '/safedir',\n+                'is_safe'               => false,\n+            ];\n+        }\n+\n+        // Windows paths (`\\` separator)\n+        yield [\n+            'path'                  => 'C:\\\\path\\\\to\\\\whatever\\\\file',\n+            'restricted_directory'  => null,\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'C:\\\\path\\\\to\\\\whatever\\\\file',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'C:\\\\path\\\\to\\\\whatever\\\\file\\\\in\\\\a\\\\subdir',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'C:\\\\path\\\\to\\\\whatever_file',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => false,\n+        ];\n+        yield [\n+            'path'                  => 'C:\\\\path\\\\to\\\\whatever\\\\file',\n+            'restricted_directory'  => 'C:\\\\safedir',\n+            'is_safe'               => false,\n+        ];\n+\n+        // Windows path on file scheme\n+        yield [\n+            'path'                  => 'file:///C:/path/to/whatever/file',\n+            'restricted_directory'  => null,\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'file:///C:/path/to/whatever/file',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'file:///C:/path/to/whatever/file/in/a/subdir',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => true,\n+        ];\n+        yield [\n+            'path'                  => 'file:///C:/path/to/whatever_file',\n+            'restricted_directory'  => 'C:\\\\path\\\\to\\\\whatever',\n+            'is_safe'               => false,\n+        ];\n+        yield [\n+            'path'                  => 'file:///C:/path/to/whatever/file',\n+            'restricted_directory'  => 'C:\\\\safedir',\n+            'is_safe'               => false,\n+        ];\n+\n+        // Streams and remote paths\n+        foreach (['ftp', 'http', 'https', 'phar', 'whateverstream'] as $scheme) {\n+            yield [\n+                'path'                  => $scheme . '://path/to/whatever/file',\n+                'restricted_directory'  => null,\n+                'is_safe'               => false, // path using scheme is never considered to be safe\n+            ];\n+\n+            yield [\n+                'path'                  => $scheme . '://path/to/whatever/file',\n+                'restricted_directory'  => $scheme . '://path/to/whatever',\n+                'is_safe'               => false, // path using scheme is never considered to be safe\n+            ];\n+        }\n+    }\n+\n+    /**\n+     * @dataProvider isFilepathSafeProvider\n+     */\n+    public function testIsFilepathSafe(string $path, ?string $restricted_directory, bool $is_safe): void\n+    {\n+        $this->newTestedInstance();\n+        $this->boolean($this->testedInstance->isFilepathSafe($path, $restricted_directory))->isEqualTo($is_safe);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec0e2a11b56e8ef9d1d28f503a363e4ba64fd4ab",
            "date": "2025-01-14T16:55:01Z",
            "author_login": "ccailly"
          },
          {
            "sha": "50989595d9386f3eed353125d7a693ef1241b517",
            "date": "2025-01-14T15:16:58Z",
            "author_login": "cconard96"
          },
          {
            "sha": "515f37f98fdfc8fdc1eb2f090252b2f3af1fdfa4",
            "date": "2025-01-14T14:43:36Z",
            "author_login": "ccailly"
          },
          {
            "sha": "9869867f24c899d79e4675ad93131bbb2cba53a2",
            "date": "2025-01-14T14:39:56Z",
            "author_login": "ccailly"
          },
          {
            "sha": "4b9fbaea0bb355b49990ee51c690fed5e7302443",
            "date": "2025-01-14T13:22:29Z",
            "author_login": "SebSept"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "GLPI is a free asset and IT management software package. Starting in version 10.0.0 and prior to version 10.0.11, on PHP 7.4 only, the LDAP server configuration form can be used to execute arbitrary code previously uploaded as a GLPI document. Version 10.0.11 contains a patch for the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-13T19:15:07.830",
    "last_modified": "2024-11-21T08:29:10.017",
    "fix_date": "2023-12-13T07:19:00Z"
  },
  "references": [
    {
      "url": "https://github.com/glpi-project/glpi/commit/42ba2b031bec0b3889317db25f3adf9080fc11b2",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/releases/tag/10.0.11",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-qc92-gxc6-5f95",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/commit/42ba2b031bec0b3889317db25f3adf9080fc11b2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/releases/tag/10.0.11",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-qc92-gxc6-5f95",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:41.565816",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "glpi",
    "owner": "glpi-project",
    "created_at": "2015-07-16T07:20:21Z",
    "updated_at": "2025-01-14T12:00:43Z",
    "pushed_at": "2025-01-14T12:00:37Z",
    "size": 864638,
    "stars": 4447,
    "forks": 1324,
    "open_issues": 223,
    "watchers": 4447,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0.70/bugfixes",
      "0.71/bugfixes",
      "0.72/bugfixes",
      "0.78/bugfixes",
      "0.80/bugfixes",
      "0.83/bugfixes",
      "0.84/bugfixes",
      "0.85/bugfixes",
      "0.90/bugfixes",
      "9.1/bugfixes",
      "9.2/bugfixes",
      "9.3/bugfixes",
      "9.4/bugfixes",
      "9.5/bugfixes",
      "10.0/bugfixes",
      "main"
    ],
    "languages": {
      "PHP": 24867216,
      "Twig": 1834187,
      "JavaScript": 1339721,
      "SCSS": 362786,
      "Vue": 188168,
      "Shell": 24779,
      "Makefile": 2692,
      "CSS": 1716,
      "Dockerfile": 638
    },
    "commit_activity": {
      "total_commits_last_year": 1737,
      "avg_commits_per_week": 33.40384615384615,
      "days_active_last_year": 259
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:16:26.208966"
  }
}