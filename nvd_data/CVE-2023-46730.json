{
  "cve_id": "CVE-2023-46730",
  "github_data": {
    "repository": "Intermesh/groupoffice",
    "fix_commit": "99205535e8cec6592fd7f1469837926f27c72d50",
    "related_commits": [
      "99205535e8cec6592fd7f1469837926f27c72d50",
      "99205535e8cec6592fd7f1469837926f27c72d50"
    ],
    "patch_url": "https://github.com/Intermesh/groupoffice/commit/99205535e8cec6592fd7f1469837926f27c72d50.patch",
    "fix_commit_details": {
      "sha": "99205535e8cec6592fd7f1469837926f27c72d50",
      "commit_date": "2023-11-03T09:50:50Z",
      "author": {
        "login": "mschering",
        "type": "User",
        "stats": {
          "total_commits": 12336,
          "average_weekly_commits": 34.362116991643454,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 334
        }
      },
      "commit_message": {
        "title": "Fix security issue GHSA-vw6c-h82w-mvfv",
        "length": 38,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 108,
        "additions": 37,
        "deletions": 71
      },
      "files": [
        {
          "filename": "www/api/upload.php",
          "status": "modified",
          "additions": 26,
          "deletions": 44,
          "patch": "@@ -22,56 +22,38 @@\n \t\tthrow new \\go\\core\\http\\Exception(401);\n \t}\n \n-\tif (isset($_GET['url'])) {\n-\t\t$tmpFile = \\go\\core\\fs\\File::tempFile('tmp');\n+\t//raise max_execution_time for calculating hash of large files\n+\tini_set('max_execution_time', 300);\n \n-\t\ttry {\n-\t\t\t$httpClient = new Client();\n-\t\t\t$response = $httpClient->download($_GET['url'], $tmpFile);\n+\t$filename = Request::get()->getHeader('X-File-Name');\n+\t$filename = Request::headerDecode($filename);\n+\t$tmpFile = \\go\\core\\fs\\File::tempFile($filename);\n \n-\t\t\t$blob = Blob::fromTmp($tmpFile);\n-\t\t\t$blob->name = $response['name'];\n-\t\t\t$blob->type = $response['type'];\n-\t\t} catch(\\Exception $e) {\n-\t\t\tthrow new \\Exception(\"Failed to download from given URL \" .  $_GET['url']);\n-\t\t}\n+\t$input = fopen('php://input', \"r\");\n+\t$fp = $tmpFile->open(\"w+\");\n+\twhile ($data = fread($input, 4096)) { // 4kb at the time\n+\t\tfwrite($fp, $data);\n+\t}\n+\tfclose($fp);\n+\tfclose($input);\n+\n+\tif (\\go\\core\\jmap\\Capabilities::get()->maxSizeUpload && $tmpFile->getSize() > \\go\\core\\jmap\\Capabilities::get()->maxSizeUpload) {\n+\t\t$tmpFile->delete();\n+\t\tResponse::get()->setStatus(413);\n+\t\tResponse::get()->output([\n+\t\t\t\"error\" => \"File exceeds maximum size of \" . \\go\\core\\jmap\\Capabilities::get()->maxSizeUpload . \" bytes\"\n+\t\t]);\n+\t\texit();\n+\t}\n \n+\t$blob = Blob::fromTmp($tmpFile);\n+\t$blob->name = $filename;\n+\tif (Request::get()->getHeader('X-File-LastModified') == null) {\n+\t\t$blob->modifiedAt = new \\go\\core\\util\\DateTime();\n \t} else {\n-\n-\t\t//raise max_execution_time for calculating hash of large files\n-\t\tini_set('max_execution_time', 300);\n-\n-\t\t$filename = Request::get()->getHeader('X-File-Name');\n-\t\t$filename = Request::headerDecode($filename);\n-\t\t$tmpFile = \\go\\core\\fs\\File::tempFile($filename);\n-\n-\t\t$input = fopen('php://input', \"r\");\n-\t\t$fp = $tmpFile->open(\"w+\");\n-\t\twhile ($data = fread($input, 4096)) { // 4kb at the time\n-\t\t\tfwrite($fp, $data);\n-\t\t}\n-\t\tfclose($fp);\n-\t\tfclose($input);\n-\n-\t\tif (\\go\\core\\jmap\\Capabilities::get()->maxSizeUpload && $tmpFile->getSize() > \\go\\core\\jmap\\Capabilities::get()->maxSizeUpload) {\n-\t\t\t$tmpFile->delete();\n-\t\t\tResponse::get()->setStatus(413);\n-\t\t\tResponse::get()->output([\n-\t\t\t\t\"error\" => \"File exceeds maximum size of \" . \\go\\core\\jmap\\Capabilities::get()->maxSizeUpload . \" bytes\"\n-\t\t\t]);\n-\t\t\texit();\n-\t\t}\n-\n-\t\t$blob = Blob::fromTmp($tmpFile);\n-\t\t$blob->name = $filename;\n-\t\tif (Request::get()->getHeader('X-File-LastModified') == null) {\n-\t\t\t$blob->modifiedAt = new \\go\\core\\util\\DateTime();\n-\t\t} else {\n-\t\t\t$blob->modifiedAt = new \\go\\core\\util\\DateTime('@' . Request::get()->getHeader('X-File-LastModified'));\n-\t\t}\n+\t\t$blob->modifiedAt = new \\go\\core\\util\\DateTime('@' . Request::get()->getHeader('X-File-LastModified'));\n \t}\n \n-\n \tif ($blob->save()) {\n \t\tResponse::get()->setStatus(201, 'Created');\n \t\t$response = $blob->toArray();"
        },
        {
          "filename": "www/go/core/model/Settings.php",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -306,8 +306,15 @@ public function resetLocale(): string\n \t * The full URL to Group-Office. With trailing /.\n \t * \n \t * eg. https://my.groupoffice.net/\n-\t * \n-\t * @var string \n+\t *\n+\t * Alternatively to generate a URL based on the request you can use:\n+\t *\n+\t * @example\n+\t * ```\n+\t * Extjs3::get()->getBaseUrl();\n+\t * ```\n+\t *\n+\t * @var string\n \t */\n \tpublic $URL;\n "
        },
        {
          "filename": "www/go/core/views/extjs3/form/ImageField.js",
          "status": "modified",
          "additions": 0,
          "deletions": 25,
          "patch": "@@ -79,31 +79,6 @@ go.form.ImageField = Ext.extend(Ext.BoxComponent, {\n \t\t\t\t\t});\n \t\t\t\t},\n \t\t\t\tscope: this\n-\t\t\t}, {\n-\t\t\t\ticonCls: 'ic-link',\n-\t\t\t\ttext: t(\"From URL\"),\n-\t\t\t\thandler: function () {\n-\t\t\t\t\tExt.MessageBox.prompt(t(\"Set Image From URL\"), t(\"Enter URL\"), function(btn, url) {\n-\n-\t\t\t\t\t\t\n-\t\t\t\t\t\tif(btn != \"ok\" || !url) {\n-\t\t\t\t\t\t\treturn;\n-\t\t\t\t\t\t}\n-\n-\n-\t\t\t\t\t\tExt.Ajax.request({\n-\t\t\t\t\t\t\turl: go.User.uploadUrl + \"?url=\" + encodeURIComponent(url),\n-\t\t\t\t\t\t\tmethod: \"GET\",\n-\t\t\t\t\t\t\tsuccess: function(response) {\n-\t\t\t\t\t\t\t\tdata = Ext.decode(response.responseText);\n-\t\t\t\t\t\t\t\tthis.setValue(data.blobId);\t\t\t\t\t\t\t\t\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\tscope: this\n-\t\t\t\t\t\t});\n-\n-\t\t\t\t\t}, this);\n-\t\t\t\t},\n-\t\t\t\tscope: this\n \t\t\t},\n \t\t\t{\n \t\t\t\ticonCls: 'ic-delete',"
        },
        {
          "filename": "www/go/core/webclient/Extjs3.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -179,6 +179,8 @@ public function getLanguageJS() {\n \t/**\n \t * Get URL to webclient\n \t *\n+\t * eg. https://groupoffice.example.com/groupoffice/\n+\t *\n \t * @return string\n \t */\n \tpublic function getBaseUrl() {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5916425b7e7d24b38aaf5f362ffe977a0ea94c7c",
            "date": "2025-01-14T15:31:22Z",
            "author_login": "mschering"
          },
          {
            "sha": "517250a440bb6d02737f2c93bcb77a7be3e1d911",
            "date": "2025-01-14T15:30:11Z",
            "author_login": "mschering"
          },
          {
            "sha": "55f00cc89172c03ff71c4740eac05c552d6469d6",
            "date": "2025-01-14T15:29:51Z",
            "author_login": "mschering"
          },
          {
            "sha": "0592efe7aeaf0b684a8b2686851279c28ec9a9d4",
            "date": "2025-01-13T12:09:40Z",
            "author_login": "mschering"
          },
          {
            "sha": "aced0649b610cf45fef9b8e6455750856866a216",
            "date": "2025-01-13T12:08:23Z",
            "author_login": "mschering"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L",
    "cwe_id": "CWE-918",
    "description": "Group-Office is an enterprise CRM and groupware tool. In affected versions there is full Server-Side Request Forgery (SSRF) vulnerability in the /api/upload.php endpoint. The /api/upload.php endpoint does not filter URLs which allows a malicious user to cause the server to make resource requests to untrusted domains. Note that protocols like file:// can also be used to access the server disk. The request result (on success) can then be retrieved using /api/download.php. This issue has been addressed in versions 6.8.15, 6.7.54, and 6.6.177. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-11-07T18:15:08.973",
    "last_modified": "2024-11-21T08:29:10.773",
    "fix_date": "2023-11-03T09:50:50Z"
  },
  "references": [
    {
      "url": "https://github.com/Intermesh/groupoffice/commit/99205535e8cec6592fd7f1469837926f27c72d50",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Intermesh/groupoffice/security/advisories/GHSA-vw6c-h82w-mvfv",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/Intermesh/groupoffice/commit/99205535e8cec6592fd7f1469837926f27c72d50",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Intermesh/groupoffice/security/advisories/GHSA-vw6c-h82w-mvfv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.239050",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "groupoffice",
    "owner": "Intermesh",
    "created_at": "2018-03-08T14:50:33Z",
    "updated_at": "2025-01-14T15:31:28Z",
    "pushed_at": "2025-01-14T15:40:38Z",
    "size": 118410,
    "stars": 202,
    "forks": 47,
    "open_issues": 106,
    "watchers": 202,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 9522845,
      "JavaScript": 5759362,
      "SCSS": 215542,
      "CSS": 87670,
      "Perl": 12650,
      "TypeScript": 9959,
      "HTML": 9326,
      "Shell": 6686,
      "Smarty": 6349,
      "Hack": 125,
      "Makefile": 30
    },
    "commit_activity": {
      "total_commits_last_year": 1332,
      "avg_commits_per_week": 25.615384615384617,
      "days_active_last_year": 167
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T19:35:49.266468"
  }
}