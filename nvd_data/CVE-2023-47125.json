{
  "cve_id": "CVE-2023-47125",
  "github_data": {
    "repository": "TYPO3/html-sanitizer",
    "fix_commit": "b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
    "related_commits": [
      "b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
      "b8f90717251d968c49dc77f8c1e5912e2fbe0dff"
    ],
    "patch_url": "https://github.com/TYPO3/html-sanitizer/commit/b8f90717251d968c49dc77f8c1e5912e2fbe0dff.patch",
    "fix_commit_details": {
      "sha": "b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
      "commit_date": "2023-09-21T15:24:21Z",
      "author": {
        "login": "ohader",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[SECURITY] Deny processing instructions",
        "length": 128,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 34,
        "additions": 33,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/Behavior.php",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -62,6 +62,11 @@ class Behavior\n      */\n     public const ENCODE_INVALID_CDATA_SECTION = 32;\n \n+    /**\n+     * in case an unexpected processing instruction (e.g. `<?xml>`) was found, encode the whole node as HTML\n+     */\n+    public const ENCODE_INVALID_PROCESSING_INSTRUCTION = 64;\n+\n     /**\n      * @var int\n      */\n@@ -224,6 +229,11 @@ public function shallEncodeInvalidCdataSection(): bool\n         return ($this->flags & self::ENCODE_INVALID_CDATA_SECTION) === self::ENCODE_INVALID_CDATA_SECTION;\n     }\n \n+    public function shallEncodeInvalidProcessingInstruction(): bool\n+    {\n+        return ($this->flags & self::ENCODE_INVALID_PROCESSING_INSTRUCTION) === self::ENCODE_INVALID_PROCESSING_INSTRUCTION;\n+    }\n+\n     public function shallRemoveUnexpectedChildren(): bool\n     {\n         return ($this->flags & self::REMOVE_UNEXPECTED_CHILDREN) === self::REMOVE_UNEXPECTED_CHILDREN;"
        },
        {
          "filename": "src/Builder/CommonBuilder.php",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -76,7 +76,11 @@ public function build(): Sanitizer\n     protected function createBehavior(): Behavior\n     {\n         return (new Behavior())\n-            ->withFlags(Behavior::ENCODE_INVALID_TAG | Behavior::REMOVE_UNEXPECTED_CHILDREN)\n+            ->withFlags(\n+                Behavior::ENCODE_INVALID_TAG\n+                | Behavior::REMOVE_UNEXPECTED_CHILDREN\n+                | Behavior::ENCODE_INVALID_PROCESSING_INSTRUCTION\n+            )\n             ->withName('common')\n             ->withTags(...array_values($this->createBasicTags()))\n             ->withTags(...array_values($this->createMediaTags()))"
        },
        {
          "filename": "src/Visitor/CommonVisitor.php",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -19,6 +19,7 @@\n use DOMComment;\n use DOMElement;\n use DOMNode;\n+use DOMProcessingInstruction;\n use DOMText;\n use Psr\\Log\\LoggerAwareInterface;\n use Psr\\Log\\LoggerAwareTrait;\n@@ -64,6 +65,10 @@ public function beforeTraverse(Context $context): void\n \n     public function enterNode(DOMNode $domNode): ?DOMNode\n     {\n+        if ($domNode instanceof DOMProcessingInstruction) {\n+            return $this->handleInvalidNode($domNode);\n+        }\n+\n         if (!$domNode instanceof DOMCdataSection\n             && !$domNode instanceof DOMComment\n             && !$domNode instanceof DOMElement\n@@ -219,6 +224,7 @@ protected function handleInvalidNode(DOMNode $domNode): ?DOMNode\n         if (\n             ($domNode instanceof DOMComment && $this->behavior->shallEncodeInvalidComment())\n             || ($domNode instanceof DOMCdataSection && $this->behavior->shallEncodeInvalidCdataSection())\n+            || ($domNode instanceof DOMProcessingInstruction && $this->behavior->shallEncodeInvalidProcessingInstruction())\n         ) {\n             $this->log('Found unexpected node {nodeName}', [\n                 'behavior' => $this->behavior->getName(),"
        },
        {
          "filename": "tests/CommonBuilderTest.php",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -263,6 +263,14 @@ public function isSanitizedDataProvider(): array\n                 '<!-- &lt;&quot;comment&quot;&gt; -->',\n                 '<!-- &lt;&quot;comment&quot;&gt; -->',\n             ],\n+            '#912' => [\n+                '<!---><p>',\n+                '<!---&gt;&lt;p&gt;-->',\n+            ],\n+            '#913' => [\n+                '<!---!><p>',\n+                '<!---!&gt;&lt;p&gt;-->',\n+            ],\n             '#915' => [\n                 '#text',\n                 '#text',\n@@ -303,6 +311,10 @@ public function isSanitizedDataProvider(): array\n                 '<p class=\"{&quot;json&quot;:true}\">value</p>',\n                 '<p class=\"{&quot;json&quot;:true}\">value</p>',\n             ],\n+            '#941' => [\n+                '<?xml >s<img src=x onerror=alert(1)> ?>',\n+                '&lt;?xml &gt;s&lt;img src=x onerror=alert(1)&gt; ?&gt;',\n+            ],\n         ];\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c672a2e02925de8eed0dcaeb3a3c90d3642049a0",
            "date": "2024-07-12T15:25:35Z",
            "author_login": "lolli42"
          },
          {
            "sha": "39cc77c04327971dbd66f841028e8a262402165a",
            "date": "2024-07-12T15:18:45Z",
            "author_login": "lolli42"
          },
          {
            "sha": "d68db1c4e68c6a50ba171740bb09aa491b9f69b1",
            "date": "2024-07-12T15:17:29Z",
            "author_login": "lolli42"
          },
          {
            "sha": "e3e1e9b5493b3f28f6caa9d3e0cebaa03f8bf33b",
            "date": "2024-07-12T15:16:33Z",
            "author_login": "lolli42"
          },
          {
            "sha": "b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
            "date": "2023-09-21T15:24:21Z",
            "author_login": "ohader"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. In affected versions DOM processing instructions are not handled correctly. This allows bypassing the cross-site scripting mechanism of typo3/html-sanitizer. This vulnerability has been addressed in versions 1.5.3 and 2.1.4. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-11-14T20:15:07.837",
    "last_modified": "2024-11-21T08:29:49.810",
    "fix_date": "2023-09-21T15:24:21Z"
  },
  "references": [
    {
      "url": "https://github.com/TYPO3/html-sanitizer/commit/b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-mm79-jhqm-9j54",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://typo3.org/security/advisory/typo3-core-sa-2023-007",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/TYPO3/html-sanitizer/commit/b8f90717251d968c49dc77f8c1e5912e2fbe0dff",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-mm79-jhqm-9j54",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://typo3.org/security/advisory/typo3-core-sa-2023-007",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.256907",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "html-sanitizer",
    "owner": "TYPO3",
    "created_at": "2021-07-06T10:50:14Z",
    "updated_at": "2024-11-28T02:16:17Z",
    "pushed_at": "2024-07-12T15:54:54Z",
    "size": 171,
    "stars": 27,
    "forks": 14,
    "open_issues": 9,
    "watchers": 27,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "v1"
    ],
    "languages": {
      "PHP": 133157
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:36:05.247432"
  }
}