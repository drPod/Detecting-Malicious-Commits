{
  "cve_id": "CVE-2023-4750",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "fc68299d436cf87453e432daa77b6d545df4d7ed",
    "related_commits": [
      "fc68299d436cf87453e432daa77b6d545df4d7ed",
      "fc68299d436cf87453e432daa77b6d545df4d7ed"
    ],
    "patch_url": "https://github.com/vim/vim/commit/fc68299d436cf87453e432daa77b6d545df4d7ed.patch",
    "fix_commit_details": {
      "sha": "fc68299d436cf87453e432daa77b6d545df4d7ed",
      "commit_date": "2023-09-03T18:20:52Z",
      "author": {
        "login": "chrisbra",
        "type": "User",
        "stats": {
          "total_commits": 629,
          "average_weekly_commits": 0.5851162790697675,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 115
        }
      },
      "commit_message": {
        "title": "patch 9.0.1857: [security] heap-use-after-free in is_qf_win()",
        "length": 210,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 49,
        "additions": 40,
        "deletions": 9
      },
      "files": [
        {
          "filename": "src/main.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1646,7 +1646,7 @@ getout(int exitval)\n \t    next_tp = tp->tp_next;\n \t    FOR_ALL_WINDOWS_IN_TAB(tp, wp)\n \t    {\n-\t\tif (wp->w_buffer == NULL)\n+\t\tif (wp->w_buffer == NULL || !buf_valid(wp->w_buffer))\n \t\t    // Autocmd must have close the buffer already, skip.\n \t\t    continue;\n \t\tbuf = wp->w_buffer;"
        },
        {
          "filename": "src/quickfix.c",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4492,7 +4492,7 @@ is_qf_win(win_T *win, qf_info_T *qi)\n     // set to NULL.\n     // A window displaying a location list buffer will have the w_llist_ref\n     // pointing to the location list.\n-    if (bt_quickfix(win->w_buffer))\n+    if (buf_valid(win->w_buffer) && bt_quickfix(win->w_buffer))\n \tif ((IS_QF_STACK(qi) && win->w_llist_ref == NULL)\n \t\t|| (IS_LL_STACK(qi) && win->w_llist_ref == qi))\n \t    return TRUE;"
        },
        {
          "filename": "src/testdir/crash/bt_quickfix_poc",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+comman!-narg=* Xexpr <mods>lex<args>\n+auto BufReadPre * exe\"sn\" ..expand(\"<abuf>\") \n+fu Xautocmd_changelist()\n+cal writefile(['Xtestfile2:4:4'],'Xerr')\n+  sil! edi Xerr\n+Xexpr 'Xtestfile:4:4'\n+endf\n+call Xautocmd_changelist()\n+call Xautocmd_changelist()\n\\ No newline at end of file"
        },
        {
          "filename": "src/testdir/test_crash.vim",
          "status": "modified",
          "additions": 27,
          "deletions": 7,
          "patch": "@@ -5,38 +5,58 @@ source screendump.vim\n CheckScreendump\n \n func Test_crash1()\n+  if !executable('sh')\n+    throw 'Skipped: sh not executable!'\n+  endif\n   \" The following used to crash Vim\n-  \" let opts = #{wait_for_ruler: 0, rows: 20, cmd: 'sh'}\n   let opts = #{cmd: 'sh'}\n-  let args = 'bash'\n   let vim  = GetVimProg()\n \n-  let buf = RunVimInTerminal(args, opts)\n+  let buf = RunVimInTerminal('sh', opts)\n \n   let file = 'crash/poc_huaf1'\n   let cmn_args = \"%s -u NONE -i NONE -n -e -s -S %s -c ':qa!'\"\n   let args = printf(cmn_args, vim, file)\n   call term_sendkeys(buf, args ..\n-    \\ '  && echo \"crash 1: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")\n+    \\ '  && echo \"crash 1: [OK]\" > X_crash1_result.txt' .. \"\\<cr>\")\n+  call TermWait(buf, 50)\n \n   let file = 'crash/poc_huaf2'\n   let args = printf(cmn_args, vim, file)\n   call term_sendkeys(buf, args ..\n     \\ '  && echo \"crash 2: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")\n+  call TermWait(buf, 50)\n \n   let file = 'crash/poc_huaf3'\n   let args = printf(cmn_args, vim, file)\n   call term_sendkeys(buf, args ..\n     \\ '  && echo \"crash 3: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")\n+  call TermWait(buf, 100)\n \n-  call TermWait(buf, 50)\n+  let file = 'crash/bt_quickfix_poc'\n+  let args = printf(cmn_args, vim, file)\n+  call term_sendkeys(buf, args ..\n+    \\ '  && echo \"crash 4: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")\n+  \" clean up\n+  call delete('Xerr')\n+\n+  \" This test takes a bit longer\n+  call TermWait(buf, 200)\n \n   \" clean up\n+  call delete('Xerr')\n   exe buf .. \"bw!\"\n \n   sp X_crash1_result.txt\n-  call assert_equal(['crash 1: [OK]', 'crash 2: [OK]', 'crash 3: [OK]'],\n-    \\ getline(1, '$'))\n+\n+  let expected = [\n+      \\ 'crash 1: [OK]',\n+      \\ 'crash 2: [OK]',\n+      \\ 'crash 3: [OK]',\n+      \\ 'crash 4: [OK]',\n+      \\ ]\n+\n+  call assert_equal(expected, getline(1, '$'))\n   bw!\n \n   call delete('X_crash1_result.txt')"
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -699,6 +699,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    1857,\n /**/\n     1856,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-416",
    "description": "Use After Free in GitHub repository vim/vim prior to 9.0.1857.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-04T14:15:08.263",
    "last_modified": "2024-11-21T08:35:53.867",
    "fix_date": "2023-09-03T18:20:52Z"
  },
  "references": [
    {
      "url": "http://seclists.org/fulldisclosure/2023/Oct/24",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vim/vim/commit/fc68299d436cf87453e432daa77b6d545df4d7ed",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1ab3ebdf-fe7d-4436-b483-9a586e03b0ea",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I56ITJAFMFAQ2G3BMGTCGM3GS62V2DTR/",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ITRVK4FB74RZDIGTZJXOZMUW6X6F4TNF/",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFE3LDFRZ7EGWA5AU7YHYL62ELBOFZWQ/",
      "source": "security@huntr.dev",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://support.apple.com/kb/HT213984",
      "source": "security@huntr.dev",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "http://seclists.org/fulldisclosure/2023/Oct/24",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/vim/vim/commit/fc68299d436cf87453e432daa77b6d545df4d7ed",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/1ab3ebdf-fe7d-4436-b483-9a586e03b0ea",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I56ITJAFMFAQ2G3BMGTCGM3GS62V2DTR/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ITRVK4FB74RZDIGTZJXOZMUW6X6F4TNF/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFE3LDFRZ7EGWA5AU7YHYL62ELBOFZWQ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mailing List"
      ]
    },
    {
      "url": "https://support.apple.com/kb/HT213984",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.379467",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}