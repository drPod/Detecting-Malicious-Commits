{
  "cve_id": "CVE-2023-47641",
  "github_data": {
    "repository": "aio-libs/aiohttp",
    "fix_commit": "f016f0680e4ace6742b03a70cb0382ce86abe371",
    "related_commits": [
      "f016f0680e4ace6742b03a70cb0382ce86abe371",
      "f016f0680e4ace6742b03a70cb0382ce86abe371"
    ],
    "patch_url": "https://github.com/aio-libs/aiohttp/commit/f016f0680e4ace6742b03a70cb0382ce86abe371.patch",
    "fix_commit_details": {
      "sha": "f016f0680e4ace6742b03a70cb0382ce86abe371",
      "commit_date": "2021-10-31T17:03:06Z",
      "author": {
        "login": "asvetlov",
        "type": "User",
        "stats": {
          "total_commits": 4585,
          "average_weekly_commits": 7.771186440677966,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 274
        }
      },
      "commit_message": {
        "title": "Raise '400: Content-Length can't be present with Transfer-Encoding' if both Content-Length and Transfer-Encoding are sent by peer (#6182)",
        "length": 137,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 25,
        "deletions": 3
      },
      "files": [
        {
          "filename": "CHANGES/6182.bugfix",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+Raise ``400: Content-Length can't be present with Transfer-Encoding`` if both ``Content-Length`` and ``Transfer-Encoding`` are sent by peer by both C and Python implementations"
        },
        {
          "filename": "aiohttp/http_parser.py",
          "status": "modified",
          "additions": 10,
          "deletions": 2,
          "patch": "@@ -28,6 +28,7 @@\n from .base_protocol import BaseProtocol\n from .helpers import NO_EXTENSIONS, BaseTimerContext\n from .http_exceptions import (\n+    BadHttpMessage,\n     BadStatusLine,\n     ContentEncodingError,\n     ContentLengthError,\n@@ -489,8 +490,15 @@ def parse_headers(\n \n         # chunking\n         te = headers.get(hdrs.TRANSFER_ENCODING)\n-        if te and \"chunked\" in te.lower():\n-            chunked = True\n+        if te is not None:\n+            te_lower = te.lower()\n+            if \"chunked\" in te_lower:\n+                chunked = True\n+\n+            if hdrs.CONTENT_LENGTH in headers:\n+                raise BadHttpMessage(\n+                    \"Content-Length can't be present with Transfer-Encoding\",\n+                )\n \n         return (headers, raw_headers, close_conn, encoding, upgrade, chunked)\n "
        },
        {
          "filename": "tests/test_http_parser.py",
          "status": "modified",
          "additions": 14,
          "deletions": 1,
          "patch": "@@ -291,7 +291,20 @@ def test_request_chunked(parser) -> None:\n     assert isinstance(payload, streams.StreamReader)\n \n \n-def test_conn_upgrade(parser) -> None:\n+def test_request_te_chunked_with_content_length(parser: Any) -> None:\n+    text = (\n+        b\"GET /test HTTP/1.1\\r\\n\"\n+        b\"content-length: 1234\\r\\n\"\n+        b\"transfer-encoding: chunked\\r\\n\\r\\n\"\n+    )\n+    with pytest.raises(\n+        http_exceptions.BadHttpMessage,\n+        match=\"Content-Length can't be present with Transfer-Encoding\",\n+    ):\n+        parser.feed_data(text)\n+\n+\n+def test_conn_upgrade(parser: Any) -> None:\n     text = (\n         b\"GET /test HTTP/1.1\\r\\n\"\n         b\"connection: upgrade\\r\\n\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9482755b40ce69814eea6f65bfbd4c12d1878174",
            "date": "2025-01-10T10:46:29Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "76f4309a6cbfc12d918c65b5bffdcf0d4bb691c6",
            "date": "2025-01-10T10:39:38Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c5c204f8b661bb1c9d183e17b37013ee222b2cbd",
            "date": "2025-01-10T10:37:48Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "a91dc8f78e97f9be30e13c39e457e8e2a2651702",
            "date": "2025-01-08T10:27:45Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "237d46722a0e56363c4a07dcf31e73fe4c2ea392",
            "date": "2025-01-07T11:14:58Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-444",
    "description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Affected versions of aiohttp have a security vulnerability regarding the inconsistent interpretation of the http protocol. HTTP/1.1 is a persistent protocol, if both Content-Length(CL) and Transfer-Encoding(TE) header values are present it can lead to incorrect interpretation of two entities that parse the HTTP and we can poison other sockets with this incorrect interpretation. A possible Proof-of-Concept (POC) would be a configuration with a reverse proxy(frontend) that accepts both CL and TE headers and aiohttp as backend. As aiohttp parses anything with chunked, we can pass a chunked123 as TE, the frontend entity will ignore this header and will parse Content-Length. The impact of this vulnerability is that it is possible to bypass any proxy rule, poisoning sockets to other users like passing Authentication Headers, also if it is present an Open Redirect an attacker could combine it to redirect random users to another website and log the request. This vulnerability has been addressed in release 3.8.0 of aiohttp. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-11-14T21:15:13.713",
    "last_modified": "2024-11-21T08:30:35.137",
    "fix_date": "2021-10-31T17:03:06Z"
  },
  "references": [
    {
      "url": "https://github.com/aio-libs/aiohttp/commit/f016f0680e4ace6742b03a70cb0382ce86abe371",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/aio-libs/aiohttp/security/advisories/GHSA-xx9p-xxvh-7g8j",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/aio-libs/aiohttp/commit/f016f0680e4ace6742b03a70cb0382ce86abe371",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/aio-libs/aiohttp/security/advisories/GHSA-xx9p-xxvh-7g8j",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.258633",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "aiohttp",
    "owner": "aio-libs",
    "created_at": "2013-10-01T23:04:01Z",
    "updated_at": "2025-01-14T07:45:00Z",
    "pushed_at": "2025-01-13T11:21:32Z",
    "size": 31707,
    "stars": 15317,
    "forks": 2050,
    "open_issues": 250,
    "watchers": 15317,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "3.8",
      "3.9",
      "3.10",
      "3.11",
      "3.12",
      "master"
    ],
    "languages": {
      "Python": 2241563,
      "Cython": 41302,
      "Makefile": 5839,
      "Gherkin": 1248,
      "Dockerfile": 298,
      "C": 170,
      "Shell": 148
    },
    "commit_activity": {
      "total_commits_last_year": 2401,
      "avg_commits_per_week": 46.17307692307692,
      "days_active_last_year": 226
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:12:57.567310"
  }
}