{
  "cve_id": "CVE-2023-4815",
  "github_data": {
    "repository": "answerdev/answer",
    "fix_commit": "e75142a55546e01d8904f59db228422561f51666",
    "related_commits": [
      "e75142a55546e01d8904f59db228422561f51666",
      "e75142a55546e01d8904f59db228422561f51666"
    ],
    "patch_url": "https://github.com/answerdev/answer/commit/e75142a55546e01d8904f59db228422561f51666.patch",
    "fix_commit_details": {
      "sha": "e75142a55546e01d8904f59db228422561f51666",
      "commit_date": "2023-08-29T03:39:51Z",
      "author": {
        "login": "LinkinStars",
        "type": "User",
        "stats": {
          "total_commits": 919,
          "average_weekly_commits": 7.595041322314049,
          "total_additions": 145454,
          "total_deletions": 68498,
          "weeks_active": 95
        }
      },
      "commit_message": {
        "title": "fix(answer): fix incorrect notification's triggerUserID when cancel accepted answer",
        "length": 83,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 11,
        "additions": 4,
        "deletions": 7
      },
      "files": [
        {
          "filename": "internal/base/middleware/auth.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -126,7 +126,7 @@ func (am *AuthUserMiddleware) AdminAuth() gin.HandlerFunc {\n \t\t\treturn\n \t\t}\n \t\tuserInfo, err := am.authService.GetAdminUserCacheInfo(ctx, token)\n-\t\tif err != nil {\n+\t\tif err != nil || userInfo == nil {\n \t\t\thandler.HandleResponse(ctx, errors.Forbidden(reason.UnauthorizedError), nil)\n \t\t\tctx.Abort()\n \t\t\treturn"
        },
        {
          "filename": "internal/repo/activity/answer_repo.go",
          "status": "modified",
          "additions": 3,
          "deletions": 6,
          "patch": "@@ -55,7 +55,6 @@ func (ar *AnswerActivityRepo) SaveAcceptAnswerActivity(ctx context.Context, op *\n \t\treturn nil\n \t}\n \n-\tar.data.DB.ShowSQL(true)\n \t// save activity\n \t_, err = ar.data.DB.Transaction(func(session *xorm.Session) (result any, err error) {\n \t\tsession = session.Context(ctx)\n@@ -311,12 +310,11 @@ func (ar *AnswerActivityRepo) sendAcceptAnswerNotification(\n \t\t\tType:           schema.NotificationTypeAchievement,\n \t\t\tObjectID:       op.AnswerObjectID,\n \t\t\tReceiverUserID: act.ActivityUserID,\n+\t\t\tTriggerUserID:  act.TriggerUserID,\n \t\t}\n \t\tif act.ActivityUserID == op.QuestionUserID {\n-\t\t\tmsg.TriggerUserID = op.AnswerUserID\n \t\t\tmsg.ObjectType = constant.AnswerObjectType\n \t\t} else {\n-\t\t\tmsg.TriggerUserID = op.QuestionUserID\n \t\t\tmsg.ObjectType = constant.AnswerObjectType\n \t\t}\n \t\tif msg.TriggerUserID != msg.ReceiverUserID {\n@@ -329,9 +327,9 @@ func (ar *AnswerActivityRepo) sendAcceptAnswerNotification(\n \t\t\tReceiverUserID: act.ActivityUserID,\n \t\t\tType:           schema.NotificationTypeInbox,\n \t\t\tObjectID:       op.AnswerObjectID,\n+\t\t\tTriggerUserID:  op.TriggerUserID,\n \t\t}\n \t\tif act.ActivityUserID != op.QuestionUserID {\n-\t\t\tmsg.TriggerUserID = op.QuestionUserID\n \t\t\tmsg.ObjectType = constant.AnswerObjectType\n \t\t\tmsg.NotificationAction = constant.NotificationAcceptAnswer\n \t\t\tar.notificationQueueService.Send(ctx, msg)\n@@ -343,15 +341,14 @@ func (ar *AnswerActivityRepo) sendCancelAcceptAnswerNotification(\n \tctx context.Context, op *schema.AcceptAnswerOperationInfo) {\n \tfor _, act := range op.Activities {\n \t\tmsg := &schema.NotificationMsg{\n+\t\t\tTriggerUserID:  act.TriggerUserID,\n \t\t\tReceiverUserID: act.ActivityUserID,\n \t\t\tType:           schema.NotificationTypeAchievement,\n \t\t\tObjectID:       op.AnswerObjectID,\n \t\t}\n \t\tif act.ActivityUserID == op.QuestionObjectID {\n-\t\t\tmsg.TriggerUserID = op.AnswerObjectID\n \t\t\tmsg.ObjectType = constant.QuestionObjectType\n \t\t} else {\n-\t\t\tmsg.TriggerUserID = op.QuestionObjectID\n \t\t\tmsg.ObjectType = constant.AnswerObjectType\n \t\t}\n \t\tif msg.TriggerUserID != msg.ReceiverUserID {"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5886c1ec53087520ac02cbdaf9811a0cfebc829e",
            "date": "2025-01-13T03:44:57Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "bbb2e66233730ed7dd9c8e3de138369ba341d8cb",
            "date": "2025-01-13T03:19:25Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "0618947350917ecd58a5797365058da17bf8169a",
            "date": "2025-01-07T02:37:14Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "f7731bc675930f9cb9fa7a6f6346c102246b2c4d",
            "date": "2024-12-09T09:31:10Z",
            "author_login": "LinkinStars"
          },
          {
            "sha": "6ae189010b8e87d303465dbdb91e164954826373",
            "date": "2024-12-09T06:40:43Z",
            "author_login": "LinkinStars"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-306",
    "description": "Missing Authentication for Critical Function in GitHub repository answerdev/answer prior to v1.1.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-07T07:15:08.747",
    "last_modified": "2024-11-21T08:36:01.793",
    "fix_date": "2023-08-29T03:39:51Z"
  },
  "references": [
    {
      "url": "https://github.com/answerdev/answer/commit/e75142a55546e01d8904f59db228422561f51666",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4cd3eeb4-57c9-4af2-ad19-2166c9e0fd2c",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/answerdev/answer/commit/e75142a55546e01d8904f59db228422561f51666",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/4cd3eeb4-57c9-4af2-ad19-2166c9e0fd2c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.390867",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "answer",
    "owner": "answerdev",
    "created_at": "2022-09-29T05:16:19Z",
    "updated_at": "2025-01-14T13:14:48Z",
    "pushed_at": "2025-01-14T02:13:53Z",
    "size": 13085,
    "stars": 13559,
    "forks": 1070,
    "open_issues": 90,
    "watchers": 13559,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 1939709,
      "TypeScript": 1249527,
      "HTML": 56622,
      "SCSS": 41263,
      "JavaScript": 16504,
      "Shell": 4175,
      "Smarty": 2499,
      "Dockerfile": 2223,
      "CSS": 1876,
      "Makefile": 1586
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:52:07.729674"
  }
}