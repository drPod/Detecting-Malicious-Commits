{
  "cve_id": "CVE-2023-4898",
  "github_data": {
    "repository": "mintplex-labs/anything-llm",
    "fix_commit": "dc3dfbf31495fe316b21ee184b9317b38101d30e",
    "related_commits": [
      "dc3dfbf31495fe316b21ee184b9317b38101d30e",
      "dc3dfbf31495fe316b21ee184b9317b38101d30e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "dc3dfbf31495fe316b21ee184b9317b38101d30e",
      "commit_date": "2023-09-11T23:27:04Z",
      "author": {
        "login": "timothycarambat",
        "type": "User",
        "stats": {
          "total_commits": 928,
          "average_weekly_commits": 10.545454545454545,
          "total_additions": 195202,
          "total_deletions": 87044,
          "weeks_active": 82
        }
      },
      "commit_message": {
        "title": "patch SQL injection opportunities [LOW RISK] (#234)",
        "length": 51,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 110,
        "additions": 69,
        "deletions": 41
      },
      "files": [
        {
          "filename": "server/endpoints/admin.js",
          "status": "modified",
          "additions": 11,
          "deletions": 7,
          "patch": "@@ -1,3 +1,4 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n const { ApiKey } = require(\"../models/apiKeys\");\n const { Document } = require(\"../models/documents\");\n const { Invite } = require(\"../models/invite\");\n@@ -203,7 +204,7 @@ function adminEndpoints(app) {\n         const { workspaceId } = request.params;\n         const { userIds } = reqBody(request);\n         const { success, error } = await Workspace.updateUsers(\n-          workspaceId,\n+          escape(Number(workspaceId)),\n           userIds\n         );\n         response.status(200).json({ success, error });\n@@ -227,16 +228,16 @@ function adminEndpoints(app) {\n \n         const { id } = request.params;\n         const VectorDb = getVectorDbClass();\n-        const workspace = Workspace.get(`id = ${id}`);\n+        const workspace = Workspace.get(`id = ${escape(id)}`);\n         if (!workspace) {\n           response.sendStatus(404).end();\n           return;\n         }\n \n-        await Workspace.delete(`id = ${id}`);\n-        await DocumentVectors.deleteForWorkspace(id);\n-        await Document.delete(`workspaceId = ${Number(id)}`);\n-        await WorkspaceChats.delete(`workspaceId = ${Number(id)}`);\n+        await Workspace.delete(`id = ${workspace.id}`);\n+        await DocumentVectors.deleteForWorkspace(workspace.id);\n+        await Document.delete(`workspaceId = ${Number(workspace.id)}`);\n+        await WorkspaceChats.delete(`workspaceId = ${Number(workspace.id)}`);\n         try {\n           await VectorDb[\"delete-namespace\"]({ namespace: workspace.slug });\n         } catch (e) {\n@@ -262,7 +263,10 @@ function adminEndpoints(app) {\n           return;\n         }\n         const { offset = 0 } = reqBody(request);\n-        const chats = await WorkspaceChats.whereWithData(`id >= ${offset}`, 20);\n+        const chats = await WorkspaceChats.whereWithData(\n+          `id >= ${escape(offset)}`,\n+          20\n+        );\n         const hasPages = (await WorkspaceChats.count()) > 20;\n         response.status(200).json({ chats: chats.reverse(), hasPages });\n       } catch (e) {"
        },
        {
          "filename": "server/endpoints/api/admin/index.js",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -1,3 +1,4 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n const { Invite } = require(\"../../../models/invite\");\n const { SystemSettings } = require(\"../../../models/systemSettings\");\n const { User } = require(\"../../../models/user\");\n@@ -456,7 +457,7 @@ function apiAdminEndpoints(app) {\n         const { workspaceId } = request.params;\n         const { userIds } = reqBody(request);\n         const { success, error } = await Workspace.updateUsers(\n-          workspaceId,\n+          escape(Number(workspaceId)),\n           userIds\n         );\n         response.status(200).json({ success, error });\n@@ -515,7 +516,10 @@ function apiAdminEndpoints(app) {\n         }\n \n         const { offset = 0 } = reqBody(request);\n-        const chats = await WorkspaceChats.whereWithData(`id >= ${offset}`, 20);\n+        const chats = await WorkspaceChats.whereWithData(\n+          `id >= ${escape(offset)}`,\n+          20\n+        );\n         const hasPages = (await WorkspaceChats.count()) > 20;\n         response.status(200).json({ chats: chats.reverse(), hasPages });\n       } catch (e) {"
        },
        {
          "filename": "server/endpoints/api/workspace/index.js",
          "status": "modified",
          "additions": 10,
          "deletions": 7,
          "patch": "@@ -1,3 +1,4 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n const { Document } = require(\"../../../models/documents\");\n const { Telemetry } = require(\"../../../models/telemetry\");\n const { DocumentVectors } = require(\"../../../models/vectors\");\n@@ -153,7 +154,7 @@ function apiWorkspaceEndpoints(app) {\n     */\n     try {\n       const { slug } = request.params;\n-      const workspace = await Workspace.get(`slug = '${slug}'`);\n+      const workspace = await Workspace.get(`slug = ${escape(slug)}`);\n       response.status(200).json({ workspace });\n     } catch (e) {\n       console.log(e.message, e);\n@@ -184,14 +185,14 @@ function apiWorkspaceEndpoints(app) {\n       try {\n         const { slug = \"\" } = request.params;\n         const VectorDb = getVectorDbClass();\n-        const workspace = await Workspace.get(`slug = '${slug}'`);\n+        const workspace = await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!workspace) {\n           response.sendStatus(400).end();\n           return;\n         }\n \n-        await Workspace.delete(`slug = '${slug.toLowerCase()}'`);\n+        await Workspace.delete(`id = ${Number(workspace.id)}`);\n         await DocumentVectors.deleteForWorkspace(workspace.id);\n         await Document.delete(`workspaceId = ${Number(workspace.id)}`);\n         await WorkspaceChats.delete(`workspaceId = ${Number(workspace.id)}`);\n@@ -269,7 +270,7 @@ function apiWorkspaceEndpoints(app) {\n       try {\n         const { slug = null } = request.params;\n         const data = reqBody(request);\n-        const currWorkspace = await Workspace.get(`slug = '${slug}'`);\n+        const currWorkspace = await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!currWorkspace) {\n           response.sendStatus(400).end();\n@@ -333,7 +334,7 @@ function apiWorkspaceEndpoints(app) {\n     */\n       try {\n         const { slug } = request.params;\n-        const workspace = await Workspace.get(`slug = '${slug}'`);\n+        const workspace = await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!workspace) {\n           response.sendStatus(400).end();\n@@ -408,7 +409,7 @@ function apiWorkspaceEndpoints(app) {\n       try {\n         const { slug = null } = request.params;\n         const { adds = [], deletes = [] } = reqBody(request);\n-        const currWorkspace = await Workspace.get(`slug = '${slug}'`);\n+        const currWorkspace = await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!currWorkspace) {\n           response.sendStatus(400).end();\n@@ -417,7 +418,9 @@ function apiWorkspaceEndpoints(app) {\n \n         await Document.removeDocuments(currWorkspace, deletes);\n         await Document.addDocuments(currWorkspace, adds);\n-        const updatedWorkspace = await Workspace.get(`slug = '${slug}'`);\n+        const updatedWorkspace = await Workspace.get(\n+          `id = ${Number(currWorkspace.id)}`\n+        );\n         response.status(200).json({ workspace: updatedWorkspace });\n       } catch (e) {\n         console.log(e.message, e);"
        },
        {
          "filename": "server/endpoints/chat.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -6,6 +6,7 @@ const { validatedRequest } = require(\"../utils/middleware/validatedRequest\");\n const { WorkspaceChats } = require(\"../models/workspaceChats\");\n const { SystemSettings } = require(\"../models/systemSettings\");\n const { Telemetry } = require(\"../models/telemetry\");\n+const { escape } = require(\"sqlstring-sqlite\");\n \n function chatEndpoints(app) {\n   if (!app) return;\n@@ -19,8 +20,8 @@ function chatEndpoints(app) {\n         const { slug } = request.params;\n         const { message, mode = \"query\" } = reqBody(request);\n         const workspace = multiUserMode(response)\n-          ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-          : await Workspace.get(`slug = '${slug}'`);\n+          ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+          : await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!workspace) {\n           response.sendStatus(400).end();"
        },
        {
          "filename": "server/endpoints/invite.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -1,3 +1,4 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n const { Invite } = require(\"../models/invite\");\n const { User } = require(\"../models/user\");\n const { reqBody } = require(\"../utils/http\");\n@@ -8,7 +9,7 @@ function inviteEndpoints(app) {\n   app.get(\"/invite/:code\", async (request, response) => {\n     try {\n       const { code } = request.params;\n-      const invite = await Invite.get(`code = '${code}'`);\n+      const invite = await Invite.get(`code = ${escape(code)}`);\n       if (!invite) {\n         response.status(200).json({ invite: null, error: \"Invite not found.\" });\n         return;\n@@ -34,7 +35,7 @@ function inviteEndpoints(app) {\n     try {\n       const { code } = request.params;\n       const userParams = reqBody(request);\n-      const invite = await Invite.get(`code = '${code}'`);\n+      const invite = await Invite.get(`code = ${escape(code)}`);\n       if (!invite || invite.status !== \"pending\") {\n         response\n           .status(200)"
        },
        {
          "filename": "server/endpoints/system.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -38,6 +38,7 @@ const {\n const { Telemetry } = require(\"../models/telemetry\");\n const { WelcomeMessages } = require(\"../models/welcomeMessages\");\n const { ApiKey } = require(\"../models/apiKeys\");\n+const { escape } = require(\"sqlstring-sqlite\");\n \n function systemEndpoints(app) {\n   if (!app) return;\n@@ -96,7 +97,7 @@ function systemEndpoints(app) {\n     try {\n       if (await SystemSettings.isMultiUserMode()) {\n         const { username, password } = reqBody(request);\n-        const existingUser = await User.get(`username = '${username}'`);\n+        const existingUser = await User.get(`username = ${escape(username)}`);\n \n         if (!existingUser) {\n           response.status(200).json({"
        },
        {
          "filename": "server/endpoints/workspaces.js",
          "status": "modified",
          "additions": 15,
          "deletions": 12,
          "patch": "@@ -13,6 +13,7 @@ const {\n const { validatedRequest } = require(\"../utils/middleware/validatedRequest\");\n const { SystemSettings } = require(\"../models/systemSettings\");\n const { Telemetry } = require(\"../models/telemetry\");\n+const { escape } = require(\"sqlstring-sqlite\");\n const { handleUploads } = setupMulter();\n \n function workspaceEndpoints(app) {\n@@ -44,8 +45,8 @@ function workspaceEndpoints(app) {\n         const { slug = null } = request.params;\n         const data = reqBody(request);\n         const currWorkspace = multiUserMode(response)\n-          ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-          : await Workspace.get(`slug = '${slug}'`);\n+          ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+          : await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!currWorkspace) {\n           response.sendStatus(400).end();\n@@ -105,8 +106,8 @@ function workspaceEndpoints(app) {\n         const { slug = null } = request.params;\n         const { adds = [], deletes = [] } = reqBody(request);\n         const currWorkspace = multiUserMode(response)\n-          ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-          : await Workspace.get(`slug = '${slug}'`);\n+          ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+          : await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!currWorkspace) {\n           response.sendStatus(400).end();\n@@ -115,7 +116,9 @@ function workspaceEndpoints(app) {\n \n         await Document.removeDocuments(currWorkspace, deletes);\n         await Document.addDocuments(currWorkspace, adds);\n-        const updatedWorkspace = await Workspace.get(`slug = '${slug}'`);\n+        const updatedWorkspace = await Workspace.get(\n+          `id = ${currWorkspace.id}`\n+        );\n         response.status(200).json({ workspace: updatedWorkspace });\n       } catch (e) {\n         console.log(e.message, e);\n@@ -133,8 +136,8 @@ function workspaceEndpoints(app) {\n         const user = await userFromSession(request, response);\n         const VectorDb = getVectorDbClass();\n         const workspace = multiUserMode(response)\n-          ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-          : await Workspace.get(`slug = '${slug}'`);\n+          ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+          : await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!workspace) {\n           response.sendStatus(400).end();\n@@ -151,7 +154,7 @@ function workspaceEndpoints(app) {\n           }\n         }\n \n-        await Workspace.delete(`slug = '${slug.toLowerCase()}'`);\n+        await Workspace.delete(`id = ${Number(workspace.id)}`);\n         await DocumentVectors.deleteForWorkspace(workspace.id);\n         await Document.delete(`workspaceId = ${Number(workspace.id)}`);\n         await WorkspaceChats.delete(`workspaceId = ${Number(workspace.id)}`);\n@@ -187,8 +190,8 @@ function workspaceEndpoints(app) {\n       const { slug } = request.params;\n       const user = await userFromSession(request, response);\n       const workspace = multiUserMode(response)\n-        ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-        : await Workspace.get(`slug = '${slug}'`);\n+        ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+        : await Workspace.get(`slug = ${escape(slug)}`);\n \n       response.status(200).json({ workspace });\n     } catch (e) {\n@@ -205,8 +208,8 @@ function workspaceEndpoints(app) {\n         const { slug } = request.params;\n         const user = await userFromSession(request, response);\n         const workspace = multiUserMode(response)\n-          ? await Workspace.getWithUser(user, `slug = '${slug}'`)\n-          : await Workspace.get(`slug = '${slug}'`);\n+          ? await Workspace.getWithUser(user, `slug = ${escape(slug)}`)\n+          : await Workspace.get(`slug = ${escape(slug)}`);\n \n         if (!workspace) {\n           response.sendStatus(400).end();"
        },
        {
          "filename": "server/models/invite.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1,3 +1,5 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n+\n const Invite = {\n   tablename: \"invites\",\n   writable: [],\n@@ -69,7 +71,7 @@ const Invite = {\n     return { invite, error: null };\n   },\n   deactivate: async function (inviteId = null) {\n-    const invite = await this.get(`id = ${inviteId}`);\n+    const invite = await this.get(`id = ${escape(inviteId)}`);\n     if (!invite) return { success: false, error: \"Invite does not exist.\" };\n     if (invite.status !== \"pending\")\n       return { success: false, error: \"Invite is not in pending status.\" };\n@@ -96,7 +98,7 @@ const Invite = {\n     return { success: true, error: null };\n   },\n   markClaimed: async function (inviteId = null, user) {\n-    const invite = await this.get(`id = ${inviteId}`);\n+    const invite = await this.get(`id = ${escape(inviteId)}`);\n     if (!invite) return { success: false, error: \"Invite does not exist.\" };\n     if (invite.status !== \"pending\")\n       return { success: false, error: \"Invite is not in pending status.\" };"
        },
        {
          "filename": "server/models/user.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1,3 +1,5 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n+\n const User = {\n   tablename: \"users\",\n   writable: [],\n@@ -66,13 +68,13 @@ const User = {\n     return { user, error: null };\n   },\n   update: async function (userId, updates = {}) {\n-    const user = await this.get(`id = ${userId}`);\n+    const user = await this.get(`id = ${escape(userId)}`);\n     if (!user) return { success: false, error: \"User does not exist.\" };\n     const { username, password, role, suspended = 0 } = updates;\n     const toUpdate = { suspended };\n \n     if (user.username !== username && username?.length > 0) {\n-      const usedUsername = !!(await this.get(`username = '${username}'`));\n+      const usedUsername = !!(await this.get(`username = ${escape(username)}`));\n       if (usedUsername)\n         return { success: false, error: `${username} is already in use.` };\n       toUpdate.username = username;"
        },
        {
          "filename": "server/models/workspace.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -2,6 +2,7 @@ const slugify = require(\"slugify\");\n const { Document } = require(\"./documents\");\n const { checkForMigrations } = require(\"../utils/database\");\n const { WorkspaceUser } = require(\"./workspaceUsers\");\n+const { escape } = require(\"sqlstring-sqlite\");\n \n const Workspace = {\n   tablename: \"workspaces\",\n@@ -81,7 +82,7 @@ const Workspace = {\n     if (!name) return { result: null, message: \"name cannot be null\" };\n     var slug = slugify(name, { lower: true });\n \n-    const existingBySlug = await this.get(`slug = '${slug}'`);\n+    const existingBySlug = await this.get(`slug = ${escape(slug)}`);\n     if (existingBySlug !== null) {\n       const slugSeed = Math.floor(10000000 + Math.random() * 90000000);\n       slug = slugify(`${name}-${slugSeed}`, { lower: true });"
        },
        {
          "filename": "server/package.json",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -42,6 +42,7 @@\n     \"slugify\": \"^1.6.6\",\n     \"sqlite\": \"^4.2.1\",\n     \"sqlite3\": \"^5.1.6\",\n+    \"sqlstring-sqlite\": \"^0.1.1\",\n     \"swagger-autogen\": \"^2.23.5\",\n     \"swagger-ui-express\": \"^5.0.0\",\n     \"uuid\": \"^9.0.0\",\n@@ -53,4 +54,4 @@\n     \"nodemon\": \"^2.0.22\",\n     \"prettier\": \"^2.4.1\"\n   }\n-}\n\\ No newline at end of file\n+}"
        },
        {
          "filename": "server/utils/middleware/validApiKey.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,3 +1,4 @@\n+const { escape } = require(\"sqlstring-sqlite\");\n const { ApiKey } = require(\"../../models/apiKeys\");\n const { SystemSettings } = require(\"../../models/systemSettings\");\n \n@@ -14,8 +15,7 @@ async function validApiKey(request, response, next) {\n     return;\n   }\n \n-  const apiKey = await ApiKey.get(`secret = '${bearerKey}'`);\n-  if (!apiKey) {\n+  if (!(await ApiKey.get(`secret = ${escape(bearerKey)}`))) {\n     response.status(403).json({\n       error: \"No valid api key found.\",\n     });"
        },
        {
          "filename": "server/yarn.lock",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -2385,6 +2385,11 @@ sqlite@^4.2.1:\n   resolved \"https://registry.yarnpkg.com/sqlite/-/sqlite-4.2.1.tgz#d4eedfd1ad702f79110792375f4241a90c75c828\"\n   integrity sha512-Tll0Ndvnwkuv5Hn6WIbh26rZiYQORuH1t5m/or9LUpSmDmmyFG89G9fKrSeugMPxwmEIXoVxqTun4LbizTs4uw==\n \n+sqlstring-sqlite@^0.1.1:\n+  version \"0.1.1\"\n+  resolved \"https://registry.yarnpkg.com/sqlstring-sqlite/-/sqlstring-sqlite-0.1.1.tgz#c8c61810663f2e59a6b0d737b70a8752bda3a078\"\n+  integrity sha512-9CAYUJ0lEUPYJrswqiqdINNSfq3jqWo/bFJ7tufdoNeSK0Fy+d1kFTxjqO9PIqza0Kri+ZtYMfPVf1aZaFOvrQ==\n+\n ssri@^8.0.0, ssri@^8.0.1:\n   version \"8.0.1\"\n   resolved \"https://registry.yarnpkg.com/ssri/-/ssri-8.0.1.tgz#638e4e439e2ffbd2cd289776d5ca457c4f51a2af\""
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "22d5891cccfc85c0e8fe6a3bc053445d1bce4cd6",
            "date": "2025-01-24T22:17:52Z",
            "author_login": "shatfield4"
          },
          {
            "sha": "2ca22abc9cb1736794d91989b408d95328ea2f79",
            "date": "2025-01-24T21:41:37Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "48dcb22b25612191aba79209fa3d5f08f2454f98",
            "date": "2025-01-24T19:06:59Z",
            "author_login": "shatfield4"
          },
          {
            "sha": "273d116586693d36366022da143c1159d3cd4ffc",
            "date": "2025-01-24T00:43:18Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "57f4f46a39b737f850ab5cf5ac5c24af2344a3b4",
            "date": "2025-01-24T00:35:38Z",
            "author_login": "shatfield4"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-305",
    "description": "Authentication Bypass by Primary Weakness in GitHub repository mintplex-labs/anything-llm prior to 0.0.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-09-12T00:15:09.917",
    "last_modified": "2024-11-21T08:36:12.940",
    "fix_date": "2023-09-11T23:27:04Z"
  },
  "references": [
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/dc3dfbf31495fe316b21ee184b9317b38101d30e",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/a3dda692-7e8a-44a9-bd96-24cfd3f721d2",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/dc3dfbf31495fe316b21ee184b9317b38101d30e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.dev/bounties/a3dda692-7e8a-44a9-bd96-24cfd3f721d2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:08.401666",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "anything-llm",
    "owner": "mintplex-labs",
    "created_at": "2023-06-04T02:29:14Z",
    "updated_at": "2025-01-26T07:34:32Z",
    "pushed_at": "2025-01-25T00:53:07Z",
    "size": 43115,
    "stars": 30921,
    "forks": 3104,
    "open_issues": 214,
    "watchers": 30921,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 3082811,
      "CSS": 73785,
      "Dockerfile": 9030,
      "HTML": 3904,
      "Shell": 1382,
      "HCL": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:35:14.537302"
  }
}