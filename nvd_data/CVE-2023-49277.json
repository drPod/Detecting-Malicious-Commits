{
  "cve_id": "CVE-2023-49277",
  "github_data": {
    "repository": "DarrenOfficial/dpaste",
    "fix_commit": "44a666a79b3b29ed4f340600bfcf55113bfb7086",
    "related_commits": [
      "44a666a79b3b29ed4f340600bfcf55113bfb7086",
      "44a666a79b3b29ed4f340600bfcf55113bfb7086"
    ],
    "patch_url": "https://github.com/DarrenOfficial/dpaste/commit/44a666a79b3b29ed4f340600bfcf55113bfb7086.patch",
    "fix_commit_details": {
      "sha": "44a666a79b3b29ed4f340600bfcf55113bfb7086",
      "commit_date": "2023-11-18T16:32:12Z",
      "author": {
        "login": "DarrenOfficial",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: correct escaping of api responses",
        "length": 132,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 10,
        "additions": 4,
        "deletions": 6
      },
      "files": [
        {
          "filename": "dpaste/views.py",
          "status": "modified",
          "additions": 4,
          "deletions": 6,
          "patch": "@@ -13,6 +13,7 @@\n from django.shortcuts import get_object_or_404, render\n from django.urls import reverse\n from django.utils import timezone\n+from django.utils.html import escape\n from django.utils.cache import add_never_cache_headers, patch_cache_control\n from django.utils.translation import gettext\n from django.views.generic import FormView\n@@ -290,8 +291,7 @@ def post(self, request, *args, **kwargs):\n         # A lexer is given, check if its valid at all\n         if lexer and lexer not in highlight.LEXER_KEYS:\n             return HttpResponseBadRequest(\n-                'Invalid lexer \"%s\" given. Valid lexers are: %s'\n-                % (lexer, \", \".join(highlight.LEXER_KEYS))\n+                f'Invalid lexer choice \"{escape(lexer)}\" given. Valid lexer values are: {\", \".join(highlight.LEXER_KEYS)}'\n             )\n \n         # No lexer is given, but we have a filename, try to get the lexer\n@@ -308,9 +308,7 @@ def post(self, request, *args, **kwargs):\n             expire_options = [str(i) for i in dict(config.EXPIRE_CHOICES)]\n             if expires not in expire_options:\n                 return HttpResponseBadRequest(\n-                    'Invalid expire choice \"{}\" given. Valid values are: {}'.format(\n-                        expires, \", \".join(expire_options)\n-                    )\n+                    f'Invalid expire choice \"{escape(expires)}\" given. Valid expire values are: {\", \".join(expire_options)}'\n                 )\n             expires, expire_type = get_expire_values(expires)\n         else:\n@@ -352,4 +350,4 @@ def handler500(request, template_name=\"dpaste/500.html\"):\n     context.update(config.extra_template_context)\n     response = render(request, template_name, context, status=500)\n     add_never_cache_headers(response)\n-    return response\n+    return response\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "60cd179c188e0b2d1b9f924568c826b32d8f0c14",
            "date": "2024-11-15T13:08:25Z",
            "author_login": "DarrenOfficial"
          },
          {
            "sha": "7015be13552b6a79150084f59b780c6d7f13e97c",
            "date": "2024-07-05T07:45:13Z",
            "author_login": "realies"
          },
          {
            "sha": "ef1a5da22ab6df4b3ac325bf7c263e7673b8fe30",
            "date": "2023-11-18T16:34:59Z",
            "author_login": "DarrenOfficial"
          },
          {
            "sha": "288e9236d0e11c83aa2361a12899c8960c12222b",
            "date": "2023-11-17T16:53:35Z",
            "author_login": "DarrenOfficial"
          },
          {
            "sha": "2ed25cc843b88dc2e0d14099221fe16d6daf52fd",
            "date": "2023-11-17T16:00:00Z",
            "author_login": "DarrenOfficial"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "dpaste is an open source pastebin application written in Python using the Django framework. A security vulnerability has been identified in the expires parameter of the dpaste API, allowing for a POST Reflected XSS attack. This vulnerability can be exploited by an attacker to execute arbitrary JavaScript code in the context of a user's browser, potentially leading to unauthorized access, data theft, or other malicious activities. Users are strongly advised to upgrade to dpaste release v3.8 or later versions, as dpaste versions older than v3.8 are susceptible to the identified security vulnerability. No known workarounds have been identified, and applying the patch is the most effective way to remediate the vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-01T21:15:08.857",
    "last_modified": "2024-11-21T08:33:10.167",
    "fix_date": "2023-11-18T16:32:12Z"
  },
  "references": [
    {
      "url": "https://github.com/DarrenOfficial/dpaste/commit/44a666a79b3b29ed4f340600bfcf55113bfb7086",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/DarrenOfficial/dpaste/security/advisories/GHSA-r8j9-5cj7-cv39",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/DarrenOfficial/dpaste/commit/44a666a79b3b29ed4f340600bfcf55113bfb7086",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/DarrenOfficial/dpaste/security/advisories/GHSA-r8j9-5cj7-cv39",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:39.304304",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dpaste",
    "owner": "DarrenOfficial",
    "created_at": "2011-04-01T23:48:56Z",
    "updated_at": "2025-01-13T23:23:45Z",
    "pushed_at": "2025-01-14T09:53:01Z",
    "size": 2073,
    "stars": 553,
    "forks": 122,
    "open_issues": 19,
    "watchers": 553,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 91288,
      "SCSS": 17149,
      "HTML": 11624,
      "JavaScript": 4959,
      "Makefile": 2222,
      "Dockerfile": 1506
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:23:50.927183"
  }
}