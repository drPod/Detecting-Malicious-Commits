{
  "cve_id": "CVE-2023-49294",
  "github_data": {
    "repository": "asterisk/asterisk",
    "fix_commit": "424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
    "related_commits": [
      "424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
      "424be345639d75c6cb7d0bd2da5f0f407dbd0bd5"
    ],
    "patch_url": "https://github.com/asterisk/asterisk/commit/424be345639d75c6cb7d0bd2da5f0f407dbd0bd5.patch",
    "fix_commit_details": {
      "sha": "424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
      "commit_date": "2023-11-13T17:08:50Z",
      "author": {
        "login": "bkford",
        "type": "User",
        "stats": {
          "total_commits": 81,
          "average_weekly_commits": 0.07111501316944688,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 67
        }
      },
      "commit_message": {
        "title": "manager.c: Prevent path traversal with GetConfig.",
        "length": 368,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 42,
        "additions": 39,
        "deletions": 3
      },
      "files": [
        {
          "filename": "main/manager.c",
          "status": "modified",
          "additions": 39,
          "deletions": 3,
          "patch": "@@ -3752,12 +3752,43 @@ void astman_live_dangerously(int new_live_dangerously)\n \tlive_dangerously = new_live_dangerously;\n }\n \n+/**\n+ * \\brief Check if a file is restricted or not\n+ *\n+ * \\return 0 on success\n+ * \\return 1 on restricted file\n+ * \\return -1 on failure\n+ */\n static int restrictedFile(const char *filename)\n {\n-\tif (!live_dangerously && !strncasecmp(filename, \"/\", 1) &&\n-\t\t strncasecmp(filename, ast_config_AST_CONFIG_DIR, strlen(ast_config_AST_CONFIG_DIR))) {\n+\tchar *stripped_filename;\n+\tRAII_VAR(char *, path, NULL, ast_free);\n+\tRAII_VAR(char *, real_path, NULL, ast_free);\n+\n+\tif (live_dangerously) {\n+\t\treturn 0;\n+\t}\n+\n+\tstripped_filename = ast_strip(ast_strdupa(filename));\n+\n+\t/* If the file path starts with '/', don't prepend ast_config_AST_CONFIG_DIR */\n+\tif (stripped_filename[0] == '/') {\n+\t\treal_path = realpath(stripped_filename, NULL);\n+\t} else {\n+\t\tif (ast_asprintf(&path, \"%s/%s\", ast_config_AST_CONFIG_DIR, stripped_filename) == -1) {\n+\t\t\treturn -1;\n+\t\t}\n+\t\treal_path = realpath(path, NULL);\n+\t}\n+\n+\tif (!real_path) {\n+\t\treturn -1;\n+\t}\n+\n+\tif (!ast_begins_with(real_path, ast_config_AST_CONFIG_DIR)) {\n \t\treturn 1;\n \t}\n+\n \treturn 0;\n }\n \n@@ -3770,6 +3801,7 @@ static int action_getconfig(struct mansession *s, const struct message *m)\n \tconst char *category_name;\n \tint catcount = 0;\n \tint lineno = 0;\n+\tint ret = 0;\n \tstruct ast_category *cur_category = NULL;\n \tstruct ast_variable *v;\n \tstruct ast_flags config_flags = { CONFIG_FLAG_WITHCOMMENTS | CONFIG_FLAG_NOCACHE };\n@@ -3779,9 +3811,13 @@ static int action_getconfig(struct mansession *s, const struct message *m)\n \t\treturn 0;\n \t}\n \n-\tif (restrictedFile(fn)) {\n+\tret = restrictedFile(fn);\n+\tif (ret == 1) {\n \t\tastman_send_error(s, m, \"File requires escalated priveledges\");\n \t\treturn 0;\n+\t} else if (ret == -1) {\n+\t\tastman_send_error(s, m, \"Config file not found\");\n+\t\treturn 0;\n \t}\n \n \tcfg = ast_config_load2(fn, \"manager\", config_flags);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "831b5ec11d8bfd12cb82818639f0bbbab1e779e2",
            "date": "2025-01-07T20:17:56Z",
            "author_login": "seuros"
          },
          {
            "sha": "468601fd13e9543744c33118abc544b5c942d691",
            "date": "2025-01-02T19:38:30Z",
            "author_login": "seanbright"
          },
          {
            "sha": "4ef68fbce8df8b63759995e2cddc2331ec344b79",
            "date": "2025-01-08T16:57:54Z",
            "author_login": "DooMMasteR"
          },
          {
            "sha": "7b71efd172333fbeb9ffcda45070bacded7a91ba",
            "date": "2025-01-09T19:34:39Z",
            "author_login": "seanbright"
          },
          {
            "sha": "a24853ecdf0593f2d25a04a28a8f0977cf436a9d",
            "date": "2025-01-08T22:00:39Z",
            "author_login": "seuros"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "Asterisk is an open source private branch exchange and telephony toolkit. In Asterisk prior to versions 18.20.1, 20.5.1, and 21.0.1, as well as certified-asterisk prior to 18.9-cert6, it is possible to read any arbitrary file even when the `live_dangerously` is not enabled. This allows arbitrary files to be read. Asterisk versions 18.20.1, 20.5.1, and 21.0.1, as well as certified-asterisk prior to 18.9-cert6, contain a fix for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-14T20:15:52.730",
    "last_modified": "2024-11-21T08:33:12.447",
    "fix_date": "2023-11-13T17:08:50Z"
  },
  "references": [
    {
      "url": "https://github.com/asterisk/asterisk/blob/master/main/manager.c#L3757",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/asterisk/asterisk/commit/424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/asterisk/asterisk/security/advisories/GHSA-8857-hfmw-vg8f",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/12/msg00019.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/asterisk/asterisk/blob/master/main/manager.c#L3757",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/asterisk/asterisk/commit/424be345639d75c6cb7d0bd2da5f0f407dbd0bd5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/asterisk/asterisk/security/advisories/GHSA-8857-hfmw-vg8f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2023/12/msg00019.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:41.572545",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "asterisk",
    "owner": "asterisk",
    "created_at": "2015-04-11T17:07:55Z",
    "updated_at": "2025-01-13T17:09:18Z",
    "pushed_at": "2025-01-13T17:09:13Z",
    "size": 374114,
    "stars": 2344,
    "forks": 988,
    "open_issues": 128,
    "watchers": 2344,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C": 36851690,
      "Python": 358820,
      "Shell": 260947,
      "M4": 191704,
      "Makefile": 139089,
      "Perl": 111005,
      "Yacc": 64828,
      "Mustache": 31730,
      "Lex": 26043,
      "XSLT": 15366,
      "Vim Script": 11793,
      "HTML": 11310,
      "Roff": 10448,
      "JavaScript": 7906,
      "Tcl": 4198,
      "PHP": 2106,
      "Mako": 1730,
      "CSS": 1031,
      "Awk": 642
    },
    "commit_activity": {
      "total_commits_last_year": 211,
      "avg_commits_per_week": 4.0576923076923075,
      "days_active_last_year": 152
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:58:39.405654"
  }
}