{
  "cve_id": "CVE-2023-49793",
  "github_data": {
    "repository": "Ericsson/codechecker",
    "fix_commit": "46bada41e32f3ba0f6011d5c556b579f6dddf07a",
    "related_commits": [
      "46bada41e32f3ba0f6011d5c556b579f6dddf07a",
      "46bada41e32f3ba0f6011d5c556b579f6dddf07a"
    ],
    "patch_url": "https://github.com/Ericsson/codechecker/commit/46bada41e32f3ba0f6011d5c556b579f6dddf07a.patch",
    "fix_commit_details": {
      "sha": "46bada41e32f3ba0f6011d5c556b579f6dddf07a",
      "commit_date": "2023-12-08T15:12:11Z",
      "author": {
        "login": "vodorok",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-h26w-r4m5-8rrf",
        "length": 92,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 27,
        "additions": 17,
        "deletions": 10
      },
      "files": [
        {
          "filename": "codechecker_common/util.py",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -13,6 +13,7 @@\n import itertools\n import json\n from typing import TextIO\n+import os\n import portalocker\n \n from codechecker_common.logger import get_logger\n@@ -98,3 +99,9 @@ def get_linef(fp: TextIO, line_no: int) -> str:\n         if line_no == 0:\n             return line\n     return ''\n+\n+def path_for_fake_root(full_path: str, root_path: str = '/') -> str:\n+    \"\"\"Normalize and sanitize full_path, then make it relative to root_path.\"\"\"\n+    relative_path = os.path.relpath(full_path, '/')\n+    fake_root_path = os.path.join(root_path, relative_path)\n+    return os.path.realpath(fake_root_path)"
        },
        {
          "filename": "web/server/codechecker_server/api/mass_store_run.py",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -28,7 +28,7 @@\n from codechecker_common.logger import get_logger\n from codechecker_common.review_status_handler import ReviewStatusHandler, \\\n     SourceReviewStatus\n-from codechecker_common.util import load_json\n+from codechecker_common.util import load_json, path_for_fake_root\n \n from codechecker_report_converter.util import trim_path_prefixes\n from codechecker_report_converter.report import report_file, Report\n@@ -391,13 +391,12 @@ def __store_source_files(\n         file_path_to_id = {}\n \n         for file_name, file_hash in filename_to_hash.items():\n-            source_file_name = os.path.join(source_root, file_name.strip(\"/\"))\n-            source_file_name = os.path.realpath(source_file_name)\n-            LOG.debug(\"Storing source file: %s\", source_file_name)\n+            source_file_path = path_for_fake_root(file_name, source_root)\n+            LOG.debug(\"Storing source file: %s\", source_file_path)\n             trimmed_file_path = trim_path_prefixes(\n                 file_name, self.__trim_path_prefixes)\n \n-            if not os.path.isfile(source_file_name):\n+            if not os.path.isfile(source_file_path):\n                 # The file was not in the ZIP file, because we already\n                 # have the content. Let's check if we already have a file\n                 # record in the database or we need to add one.\n@@ -407,16 +406,17 @@ def __store_source_files(\n                     fid = add_file_record(\n                         session, trimmed_file_path, file_hash)\n \n-                if not fid:\n+                if fid:\n+                    file_path_to_id[trimmed_file_path] = fid\n+                    LOG.debug(\"%d fileid found\", fid)\n+                else:\n                     LOG.error(\"File ID for %s is not found in the DB with \"\n                               \"content hash %s. Missing from ZIP?\",\n-                              source_file_name, file_hash)\n-                file_path_to_id[trimmed_file_path] = fid\n-                LOG.debug(\"%d fileid found\", fid)\n+                              source_file_path, file_hash)\n                 continue\n \n             with DBSession(self.__Session) as session:\n-                self.__add_file_content(session, source_file_name, file_hash)\n+                self.__add_file_content(session, source_file_path, file_hash)\n \n                 file_path_to_id[trimmed_file_path] = add_file_record(\n                     session, trimmed_file_path, file_hash)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "508a806e59f96b1fe7fe68d521b52359db539724",
            "date": "2025-01-14T08:39:24Z",
            "author_login": "noraz31"
          },
          {
            "sha": "6997b66526120204eb05d9d1c9a64bdaa1d8b972",
            "date": "2025-01-13T16:17:53Z",
            "author_login": "bruntib"
          },
          {
            "sha": "8908a57376bf1878d120db652bc142a0cdc27772",
            "date": "2025-01-13T14:22:23Z",
            "author_login": "bruntib"
          },
          {
            "sha": "9a3230cb81ddb9640e7ab37d6797f235a9a04676",
            "date": "2025-01-13T14:14:25Z",
            "author_login": "bruntib"
          },
          {
            "sha": "a822c55a05932e3f32ad6d93c9444cd79f8327dc",
            "date": "2025-01-13T09:12:02Z",
            "author_login": "noraz31"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-22",
    "description": "CodeChecker is an analyzer tooling, defect database and viewer extension for the Clang Static Analyzer and Clang Tidy. Zip files uploaded to the server endpoint of `CodeChecker store` are not properly sanitized. An attacker, using a path traversal attack, can load and display files on the machine of `CodeChecker server`. The vulnerable endpoint is `/Default/v6.53/CodeCheckerService@massStoreRun`. The path traversal vulnerability allows reading data on the machine of the `CodeChecker server`, with the same permission level as the `CodeChecker server`.\nThe attack requires a user account on the `CodeChecker server`, with permission to store to a server, and view the stored report. This vulnerability has been patched in version 6.23.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-24T18:15:10.437",
    "last_modified": "2024-11-21T08:33:51.237",
    "fix_date": "2023-12-08T15:12:11Z"
  },
  "references": [
    {
      "url": "https://github.com/Ericsson/codechecker/commit/46bada41e32f3ba0f6011d5c556b579f6dddf07a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Ericsson/codechecker/security/advisories/GHSA-h26w-r4m5-8rrf",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/Ericsson/codechecker/commit/46bada41e32f3ba0f6011d5c556b579f6dddf07a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/Ericsson/codechecker/security/advisories/GHSA-h26w-r4m5-8rrf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.857157",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "codechecker",
    "owner": "Ericsson",
    "created_at": "2015-06-15T10:38:51Z",
    "updated_at": "2025-01-14T08:39:29Z",
    "pushed_at": "2025-01-14T08:39:32Z",
    "size": 41441,
    "stars": 2312,
    "forks": 385,
    "open_issues": 418,
    "watchers": 2312,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "release-v6.23",
      "release-v6.24",
      "release-v6.24.1",
      "release-v6.24.2",
      "release-v6.24.3",
      "release-v6.24.4",
      "release-v6.25.0-rc1"
    ],
    "languages": {
      "Python": 3334693,
      "Vue": 625206,
      "JavaScript": 227715,
      "C": 69074,
      "Thrift": 62703,
      "Makefile": 62334,
      "C++": 27867,
      "Objective-C": 11218,
      "HTML": 5198,
      "CSS": 4983,
      "Dockerfile": 4300,
      "Shell": 2951,
      "SCSS": 2160,
      "Mako": 1222,
      "Java": 344,
      "Starlark": 332,
      "C#": 320,
      "Go": 117,
      "TypeScript": 85,
      "Smalltalk": 4
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T16:11:22.685794"
  }
}