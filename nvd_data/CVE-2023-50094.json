{
  "cve_id": "CVE-2023-50094",
  "github_data": {
    "repository": "yogeshojha/rengine",
    "fix_commit": "3d5f1724dd12cf9861443742e7d7c02ff8c75a6f",
    "related_commits": [
      "3d5f1724dd12cf9861443742e7d7c02ff8c75a6f",
      "edd3c85ee16f93804ad38dac5602549d2d30a93e"
    ],
    "patch_url": "https://github.com/yogeshojha/rengine/commit/3d5f1724dd12cf9861443742e7d7c02ff8c75a6f.patch",
    "fix_commit_details": {
      "sha": "3d5f1724dd12cf9861443742e7d7c02ff8c75a6f",
      "commit_date": "2022-05-14T19:49:09Z",
      "author": {
        "login": "yogeshojha",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Added WAF Detector Toolbox",
        "length": 26,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 102,
        "additions": 98,
        "deletions": 4
      },
      "files": [
        {
          "filename": "web/api/urls.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -144,6 +144,10 @@\n         'tools/cve_details/',\n         CVEDetails.as_view(),\n         name='cve_details'),\n+    path(\n+        'tools/waf_detector/',\n+        WafDetector.as_view(),\n+        name='waf_detector'),\n     path(\n         'github/tool/get_latest_releases/',\n         GithubToolCheckGetLatestRelease.as_view(),"
        },
        {
          "filename": "web/api/views.py",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -40,6 +40,28 @@\n from reNgine.celery import app\n from django.utils import timezone\n \n+class WafDetector(APIView):\n+\tdef get(self, request):\n+\t\treq = self.request\n+\t\turl= req.query_params.get('url')\n+\t\tresponse = {}\n+\t\tresponse['status'] = False\n+\t\tresponse['results'] = 'Could not detect any WAF!'\n+\n+\t\twafw00f_command = 'wafw00f {}'.format(\n+\t\t\turl\n+\t\t)\n+\t\toutput = subprocess.check_output(wafw00f_command, shell=True)\n+\t\t# use regex to get the waf\n+\t\tregex = \"behind \\\\\\\\x1b\\[1;96m(.*)\\\\\\\\x1b\"\n+\t\tgroup = re.search(regex, str(output))\n+\n+\t\tif group:\n+\t\t\tresponse['status'] = True\n+\t\t\tresponse['results'] = group.group(1)\n+\n+\t\treturn Response(response)\n+\n \n class SearchHistoryView(APIView):\n \tdef get(self, request):"
        },
        {
          "filename": "web/static/custom/toolbox.js",
          "status": "modified",
          "additions": 66,
          "deletions": 4,
          "patch": "@@ -45,14 +45,13 @@ function cms_detector(){\n \n $(document).on('click', '#detect_cms_submit_btn', function(){\n \tvar url = document.getElementById(\"cms_detector_input_url\").value;\n-\tif (url) {\n-\t\tcms_detector_api_call(url);\n-\t}\n-\telse{\n+\tif (!validURL(url)) {\n \t\tswal.fire(\"Error!\", 'Please enter a valid URL!', \"warning\", {\n \t\t\tbutton: \"Okay\",\n \t\t});\n+\t\treturn;\n \t}\n+\tcms_detector_api_call(url);\n });\n \n \n@@ -251,3 +250,66 @@ $(document).on('click', '#cve_detail_submit_btn', function(){\n \t\t});\n \t}\n });\n+\n+\n+function toolbox_waf_detector(){\n+\t$('#modal_title').html('WAF Detector');\n+\t$('#modal-content').empty();\n+\t$('#modal-content').append(`\n+\t\t<div class=\"mb-1\">\n+\t\t\t<label for=\"cms_detector_input_url\" class=\"form-label\">HTTP URL/Domain Name</label>\n+\t\t\t<input class=\"form-control\" type=\"text\" id=\"waf_detector_input_url\" required=\"\" placeholder=\"https://yourdomain.com\" value=\"https://yogeshojha.com\">\n+\t\t</div>\n+\t\t<small class=\"mb-3 float-end text-muted\">(reNgine uses <a href=\"https://github.com/EnableSecurity/wafw00f\" target=\"_blank\">wafw00f</a> to detect WAF.)</span>\n+\t\t<div class=\"mt-3 mb-3 text-center\">\n+\t\t\t<button class=\"btn btn-primary float-end\" type=\"submit\" id=\"detect_waf_submit_btn\">Detect WAF</button>\n+\t\t</div>\n+\t`);\n+\t$('#modal_dialog').modal('show');\n+}\n+\n+\n+$(document).on('click', '#detect_waf_submit_btn', function(){\n+\tvar url = document.getElementById(\"waf_detector_input_url\").value;\n+\tif (!validURL(url)) {\n+\t\tswal.fire(\"Error!\", 'Please enter a valid URL!', \"warning\", {\n+\t\t\tbutton: \"Okay\",\n+\t\t});\n+\t\treturn;\n+\t}\n+\twaf_detector_api_call(url);\n+});\n+\n+\n+function waf_detector_api_call(url){\n+\tvar api_url = `/api/tools/waf_detector/?format=json&url=${url}`\n+\tSwal.fire({\n+\t\ttitle: `Detecting WAF`,\n+\t\ttext: `reNgine is detecting WAF on ${url} and this may take a while. Please wait...`,\n+\t\tallowOutsideClick: false\n+\t});\n+\tswal.showLoading();\n+\tfetch(api_url, {\n+\t\tmethod: 'GET',\n+\t\tcredentials: \"same-origin\",\n+\t\theaders: {\n+\t\t\t\"X-CSRFToken\": getCookie(\"csrftoken\"),\n+\t\t\t\"Content-Type\": \"application/json\"\n+\t\t},\n+\t}).then(response => response.json()).then(function(response) {\n+\t\tif (response.status) {\n+\t\t\tswal.close()\n+\t\t\tSwal.fire({\n+\t\t\t\ttitle: 'WAF Detected!',\n+\t\t\t\ttext: `${url} is running ${response.results}`,\n+\t\t\t\ticon: 'info'\n+\t\t\t});\n+\t\t} else {\n+\t\t\tSwal.fire({\n+\t\t\t\ttitle: 'Oops!',\n+\t\t\t\ttext: `${response['message']}`,\n+\t\t\t\ticon: 'error'\n+\t\t\t});\n+\t\t}\n+\t});\n+}"
        },
        {
          "filename": "web/static/img/firewall.png",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "web/templates/base/_items/top_bar.html",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -75,6 +75,12 @@ <h5>Toolbox</h5>\n                   <span>CVE Lookup</span>\n                 </a>\n               </div>\n+              <div class=\"col\" onclick=\"toolbox_waf_detector()\">\n+                <a class=\"dropdown-icon-item\" href=\"#\">\n+                  <img src=\"/staticfiles/img/firewall.png\" alt=\"waf_detector\">\n+                  <span>WAF Detector</span>\n+                </a>\n+              </div>\n             </div>\n           </div>\n         </div>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e9251c41bcaf166c80b07ca7d206bf5b55e599ee",
            "date": "2024-09-11T14:35:40Z",
            "author_login": "yogeshojha"
          },
          {
            "sha": "101b9be0ae9c68e99fd5d57501b1e59ef900c153",
            "date": "2024-09-11T03:32:30Z",
            "author_login": "yogeshojha"
          },
          {
            "sha": "b8915cbf58a81d2cb4c7afba7f7d1cef7fccd234",
            "date": "2024-09-11T03:00:06Z",
            "author_login": "yogeshojha"
          },
          {
            "sha": "96b47dfd3d4994d443883d30e9f064b421e237ae",
            "date": "2024-09-11T01:56:06Z",
            "author_login": "yogeshojha"
          },
          {
            "sha": "699495f7bda57a7e24e60d3614021f442c3b1112",
            "date": "2024-09-11T01:49:18Z",
            "author_login": "yogeshojha"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "reNgine before 2.1.2 allows OS Command Injection if an adversary has a valid session ID. The attack places shell metacharacters in an api/tools/waf_detector/?url= string. The commands are executed as root via subprocess.check_output.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-01T18:15:09.130",
    "last_modified": "2024-11-21T08:36:31.907",
    "fix_date": "2022-05-14T19:49:09Z"
  },
  "references": [
    {
      "url": "https://github.com/yogeshojha/rengine/blob/53d9f505f04861a5040195ea71f20907ff90577a/web/api/views.py#L268-L275",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/yogeshojha/rengine/blob/5e120bd5f9dfbd1da82a193e8c9702e483d38d22/web/api/views.py#L195",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/commit/3d5f1724dd12cf9861443742e7d7c02ff8c75a6f",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/yogeshojha/rengine/commit/edd3c85ee16f93804ad38dac5602549d2d30a93e",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/yogeshojha/rengine/releases",
      "source": "cve@mitre.org",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/security",
      "source": "cve@mitre.org",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/security/advisories/GHSA-fx7f-f735-vgh4",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.mattz.io/posts/cve-2023-50094/",
      "source": "cve@mitre.org",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/blob/5e120bd5f9dfbd1da82a193e8c9702e483d38d22/web/api/views.py#L195",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/releases",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/yogeshojha/rengine/security",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://www.mattz.io/posts/cve-2023-50094/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:44.122472",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rengine",
    "owner": "yogeshojha",
    "created_at": "2020-05-03T12:13:12Z",
    "updated_at": "2025-01-14T12:42:42Z",
    "pushed_at": "2024-11-12T20:03:44Z",
    "size": 260791,
    "stars": 7638,
    "forks": 1152,
    "open_issues": 116,
    "watchers": 7638,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "release/2.2.0",
      "release/2.2.1"
    ],
    "languages": {
      "HTML": 747367,
      "Python": 635465,
      "JavaScript": 421998,
      "CSS": 98367,
      "Shell": 17761,
      "Dockerfile": 4214,
      "Makefile": 3212,
      "Batchfile": 2111
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:49:02.048425"
  }
}