{
  "cve_id": "CVE-2023-50726",
  "github_data": {
    "repository": "argoproj/argo-cd",
    "fix_commit": "3b8f673f06c2d228e01cbc830e5cb57cef008978",
    "related_commits": [
      "3b8f673f06c2d228e01cbc830e5cb57cef008978",
      "3b8f673f06c2d228e01cbc830e5cb57cef008978"
    ],
    "patch_url": "https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978.patch",
    "fix_commit_details": {
      "sha": "3b8f673f06c2d228e01cbc830e5cb57cef008978",
      "commit_date": "2024-03-13T18:28:43Z",
      "author": {
        "login": "crenshaw-dev",
        "type": "User",
        "stats": {
          "total_commits": 691,
          "average_weekly_commits": 1.908839779005525,
          "total_additions": 455860,
          "total_deletions": 166642,
          "weeks_active": 136
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-g623-jcgg-mhmm",
        "length": 123,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 30,
        "additions": 30,
        "deletions": 0
      },
      "files": [
        {
          "filename": "server/application/application.go",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -333,6 +333,15 @@ func (s *Server) Create(ctx context.Context, q *application.ApplicationCreateReq\n \t\treturn nil, security.NamespaceNotPermittedError(appNs)\n \t}\n \n+\t// Don't let the app creator set the operation explicitly. Those requests should always go through the Sync API.\n+\tif a.Operation != nil {\n+\t\tlog.WithFields(log.Fields{\n+\t\t\t\"application\":            a.Name,\n+\t\t\targocommon.SecurityField: argocommon.SecurityLow,\n+\t\t}).Warn(\"User attempted to set operation on application creation. This could have allowed them to bypass branch protection rules by setting manifests directly. Ignoring the set operation.\")\n+\t\ta.Operation = nil\n+\t}\n+\n \tcreated, err := s.appclientset.ArgoprojV1alpha1().Applications(appNs).Create(ctx, a, metav1.CreateOptions{})\n \tif err == nil {\n \t\ts.logAppEvent(created, ctx, argo.EventReasonResourceCreated, \"created application\")"
        },
        {
          "filename": "server/application/application_test.go",
          "status": "modified",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -1439,6 +1439,27 @@ func TestCreateAppWithDestName(t *testing.T) {\n \tassert.Equal(t, app.Spec.Destination.Server, \"https://cluster-api.example.com\")\n }\n \n+// TestCreateAppWithOperation tests that an application created with an operation is created with the operation removed.\n+// Avoids regressions of https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm\n+func TestCreateAppWithOperation(t *testing.T) {\n+\tappServer := newTestAppServer(t)\n+\ttestApp := newTestAppWithDestName()\n+\ttestApp.Operation = &appsv1.Operation{\n+\t\tSync: &appsv1.SyncOperation{\n+\t\t\tManifests: []string{\n+\t\t\t\t\"test\",\n+\t\t\t},\n+\t\t},\n+\t}\n+\tcreateReq := application.ApplicationCreateRequest{\n+\t\tApplication: testApp,\n+\t}\n+\tapp, err := appServer.Create(context.Background(), &createReq)\n+\trequire.NoError(t, err)\n+\trequire.NotNil(t, app)\n+\tassert.Nil(t, app.Operation)\n+}\n+\n func TestUpdateApp(t *testing.T) {\n \ttestApp := newTestApp()\n \tappServer := newTestAppServer(t, testApp)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c3600d240a42a4708ec65091ffb23689b4513f85",
            "date": "2025-01-14T12:37:06Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b77d9d9f5f9cf3862ef75e14a5877a3fcf60fa40",
            "date": "2025-01-14T12:16:41Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "2f579404f68ded0b0156fc25d6e554640c4ad009",
            "date": "2025-01-14T12:12:38Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "5d84eb4ff3b7eee0c800b388b2a3a873f8f7f7d8",
            "date": "2025-01-14T12:12:11Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "d3dda53cf63fb05fdaa582aacdfd95d51617fbb4",
            "date": "2025-01-14T12:11:29Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:L",
    "cwe_id": "CWE-269",
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. \"Local sync\" is an Argo CD feature that allows developers to temporarily override an Application's manifests with locally-defined manifests. Use of the feature should generally be limited to highly-trusted users, since it allows the user to bypass any merge protections in git. An improper validation bug allows users who have `create` privileges but not `override` privileges to sync local manifests on app creation. All other restrictions, including AppProject restrictions are still enforced. The only restriction which is not enforced is that the manifests come from some approved git/Helm/OCI source. The bug was introduced in 1.2.0-rc1 when the local manifest sync feature was added. The bug has been patched in Argo CD versions 2.10.3, 2.9.8, and 2.8.12. Users are advised to upgrade. Users unable to upgrade may mitigate the risk of branch protection bypass by removing `applications, create` RBAC access. The only way to eliminate the issue without removing RBAC access is to upgrade to a patched version.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-13T21:15:54.797",
    "last_modified": "2024-11-21T08:37:13.270",
    "fix_date": "2024-03-13T18:28:43Z"
  },
  "references": [
    {
      "url": "https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/argoproj/argo-cd/commit/3b8f673f06c2d228e01cbc830e5cb57cef008978",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/argoproj/argo-cd/security/advisories/GHSA-g623-jcgg-mhmm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.492187",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "argo-cd",
    "owner": "argoproj",
    "created_at": "2018-02-09T11:12:01Z",
    "updated_at": "2025-01-14T12:37:12Z",
    "pushed_at": "2025-01-14T12:37:08Z",
    "size": 125601,
    "stars": 18420,
    "forks": 5620,
    "open_issues": 3601,
    "watchers": 18420,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Go": 6686751,
      "TypeScript": 1298168,
      "Lua": 199797,
      "SCSS": 92938,
      "Shell": 58329,
      "Makefile": 24983,
      "Dockerfile": 15204,
      "Procfile": 10040,
      "JavaScript": 5975,
      "CSS": 2209,
      "Mustache": 1066,
      "HTML": 895
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:15:10.212233"
  }
}