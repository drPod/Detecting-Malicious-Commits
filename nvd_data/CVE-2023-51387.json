{
  "cve_id": "CVE-2023-51387",
  "github_data": {
    "repository": "dromara/hertzbeat",
    "fix_commit": "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
    "related_commits": [
      "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "commit_date": "2023-09-11T06:42:49Z",
      "author": {
        "login": "mikezzb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: expression injection RCE (#1241)",
        "length": 37,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 40,
        "additions": 35,
        "deletions": 5
      },
      "files": [
        {
          "filename": "common/src/main/java/org/dromara/hertzbeat/common/config/AviatorConfiguration.java",
          "status": "modified",
          "additions": 17,
          "deletions": 5,
          "patch": "@@ -18,6 +18,9 @@\n package org.dromara.hertzbeat.common.config;\n \n import com.googlecode.aviator.AviatorEvaluator;\n+import com.googlecode.aviator.AviatorEvaluatorInstance;\n+import com.googlecode.aviator.Feature;\n+import com.googlecode.aviator.Options;\n import com.googlecode.aviator.lexer.token.OperatorType;\n import com.googlecode.aviator.runtime.function.AbstractFunction;\n import com.googlecode.aviator.runtime.type.*;\n@@ -42,13 +45,22 @@ public class AviatorConfiguration {\n \n     @Bean\n     public void configAviatorEvaluator() {\n+        AviatorEvaluatorInstance instance = AviatorEvaluator.getInstance();\n+\n         // \u914d\u7f6eAviatorEvaluator\u4f7f\u7528LRU\u7f13\u5b58\u7f16\u8bd1\u540e\u7684\u8868\u8fbe\u5f0f\n-        AviatorEvaluator.getInstance()\n+        instance\n                 .useLRUExpressionCache(AVIATOR_LRU_CACHE_SIZE)\n                 .addFunction(new StrEqualFunction());\n \n+        // \u914d\u7f6eAviator\u8bed\u6cd5\u7279\u6027\u96c6\u5408\n+        instance.setOption(Options.FEATURE_SET,\n+                Feature.asSet(Feature.If,\n+                        Feature.Assignment,\n+                        Feature.Let,\n+                        Feature.StringInterpolation));\n+\n         // \u914d\u7f6e\u81ea\u5b9a\u4e49aviator\u51fd\u6570\n-        AviatorEvaluator.getInstance().addOpFunction(OperatorType.BIT_OR, new AbstractFunction() {\n+        instance.addOpFunction(OperatorType.BIT_OR, new AbstractFunction() {\n             @Override\n             public AviatorObject call(final Map<String, Object> env, final AviatorObject arg1,\n                                       final AviatorObject arg2) {\n@@ -72,9 +84,9 @@ public String getName() {\n             }\n         });\n \n-        AviatorEvaluator.getInstance().addFunction(new StrContainsFunction());\n-        AviatorEvaluator.getInstance().addFunction(new ObjectExistsFunction());\n-        AviatorEvaluator.getInstance().addFunction(new StrMatchesFunction());\n+        instance.addFunction(new StrContainsFunction());\n+        instance.addFunction(new ObjectExistsFunction());\n+        instance.addFunction(new StrMatchesFunction());\n     }\n \n     /**"
        },
        {
          "filename": "common/src/test/java/org/dromara/hertzbeat/common/config/AviatorConfigurationTest.java",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n package org.dromara.hertzbeat.common.config;\n \n import com.googlecode.aviator.AviatorEvaluator;\n+import com.googlecode.aviator.exception.UnsupportedFeatureException;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n@@ -96,4 +97,21 @@ void testCustomStringFunctions() {\n         Boolean res13 = (Boolean) AviatorEvaluator.compile(expr10).execute(env);\n         Assertions.assertFalse(res13);\n     }\n+\n+    @Test\n+    void testRCE() {\n+        // test if 'new' syntax is disabled to prevent RCE\n+        Assertions.assertThrows(UnsupportedFeatureException.class, () -> {\n+            String expr1 = \"let d = new java.util.Date();\\n\" +\n+                    \"p(type(d));\\n\" +\n+                    \"p(d);\";\n+            AviatorEvaluator.compile(expr1, true).execute();\n+        });\n+        // test allowed features\n+        String expr2 = \"let a = 0;\\n\" +\n+                \"if (\\\"#{a}\\\" == \\\"0\\\") { a = -1; }\\n\" +\n+                \"a == -1\";\n+        Boolean result = (Boolean) AviatorEvaluator.compile(expr2, true).execute();\n+        Assertions.assertTrue(result);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4b7fdd6985484ea8420fce0f8265d5b66c431ff2",
            "date": "2025-01-26T08:13:21Z",
            "author_login": "pjfanning"
          },
          {
            "sha": "e45ec431aa491174b200081b1cc4be230fb82b4b",
            "date": "2025-01-26T07:50:05Z",
            "author_login": "tomsun28"
          },
          {
            "sha": "8fa52fbca11b5cfbd6490034acb5793e7c58859e",
            "date": "2025-01-26T03:23:52Z",
            "author_login": "zhangshenghang"
          },
          {
            "sha": "132fd00ab13ee95cfb937ac07036eed4a9d1835b",
            "date": "2025-01-26T03:12:43Z",
            "author_login": "zhangshenghang"
          },
          {
            "sha": "12ba2faa191b3ae6ef5b6944653e8f06a89940db",
            "date": "2025-01-24T10:44:14Z",
            "author_login": "pjfanning"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Hertzbeat is an open source, real-time monitoring system. Hertzbeat uses aviatorscript to evaluate alert expressions. The alert expressions are supposed to be some simple expressions. However, due to improper sanitization for alert expressions in version prior to 1.4.1, a malicious user can use a crafted alert expression to execute any command on hertzbeat server. A malicious user who has access to alert define function can execute any command in hertzbeat instance. This issue is fixed in version 1.4.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-22T21:15:08.790",
    "last_modified": "2024-11-21T08:38:00.317",
    "fix_date": "2023-09-11T06:42:49Z"
  },
  "references": [
    {
      "url": "https://github.com/dromara/hertzbeat/blob/6b599495763120ad1df6f4ed4b6713bb4885d8e2/home/blog/2023-09-26-hertzbeat-v1.4.1.md",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/dromara/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dromara/hertzbeat/security/advisories/GHSA-4576-m8px-w9qj",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/dromara/hertzbeat/blob/6b599495763120ad1df6f4ed4b6713bb4885d8e2/home/blog/2023-09-26-hertzbeat-v1.4.1.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/dromara/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dromara/hertzbeat/security/advisories/GHSA-4576-m8px-w9qj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:44.095462",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "hertzbeat",
    "owner": "dromara",
    "created_at": "2022-02-04T14:48:56Z",
    "updated_at": "2025-01-26T07:50:10Z",
    "pushed_at": "2025-01-26T07:50:05Z",
    "size": 362764,
    "stars": 5935,
    "forks": 1048,
    "open_issues": 287,
    "watchers": 5935,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 3991456,
      "CSS": 824276,
      "TypeScript": 771364,
      "HTML": 453091,
      "Less": 336505,
      "JavaScript": 124915,
      "Shell": 21650,
      "Batchfile": 7767,
      "PowerShell": 3320,
      "Dockerfile": 2591,
      "Python": 2224
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:56:49.398598"
  }
}