{
  "cve_id": "CVE-2023-51388",
  "github_data": {
    "repository": "dromara/hertzbeat",
    "fix_commit": "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
    "related_commits": [
      "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2"
    ],
    "patch_url": "https://github.com/dromara/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2.patch",
    "fix_commit_details": {
      "sha": "8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "commit_date": "2023-09-11T06:42:49Z",
      "author": {
        "login": "mikezzb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: expression injection RCE (#1241)",
        "length": 37,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 40,
        "additions": 35,
        "deletions": 5
      },
      "files": [
        {
          "filename": "common/src/main/java/org/dromara/hertzbeat/common/config/AviatorConfiguration.java",
          "status": "modified",
          "additions": 17,
          "deletions": 5,
          "patch": "@@ -18,6 +18,9 @@\n package org.dromara.hertzbeat.common.config;\n \n import com.googlecode.aviator.AviatorEvaluator;\n+import com.googlecode.aviator.AviatorEvaluatorInstance;\n+import com.googlecode.aviator.Feature;\n+import com.googlecode.aviator.Options;\n import com.googlecode.aviator.lexer.token.OperatorType;\n import com.googlecode.aviator.runtime.function.AbstractFunction;\n import com.googlecode.aviator.runtime.type.*;\n@@ -42,13 +45,22 @@ public class AviatorConfiguration {\n \n     @Bean\n     public void configAviatorEvaluator() {\n+        AviatorEvaluatorInstance instance = AviatorEvaluator.getInstance();\n+\n         // \u914d\u7f6eAviatorEvaluator\u4f7f\u7528LRU\u7f13\u5b58\u7f16\u8bd1\u540e\u7684\u8868\u8fbe\u5f0f\n-        AviatorEvaluator.getInstance()\n+        instance\n                 .useLRUExpressionCache(AVIATOR_LRU_CACHE_SIZE)\n                 .addFunction(new StrEqualFunction());\n \n+        // \u914d\u7f6eAviator\u8bed\u6cd5\u7279\u6027\u96c6\u5408\n+        instance.setOption(Options.FEATURE_SET,\n+                Feature.asSet(Feature.If,\n+                        Feature.Assignment,\n+                        Feature.Let,\n+                        Feature.StringInterpolation));\n+\n         // \u914d\u7f6e\u81ea\u5b9a\u4e49aviator\u51fd\u6570\n-        AviatorEvaluator.getInstance().addOpFunction(OperatorType.BIT_OR, new AbstractFunction() {\n+        instance.addOpFunction(OperatorType.BIT_OR, new AbstractFunction() {\n             @Override\n             public AviatorObject call(final Map<String, Object> env, final AviatorObject arg1,\n                                       final AviatorObject arg2) {\n@@ -72,9 +84,9 @@ public String getName() {\n             }\n         });\n \n-        AviatorEvaluator.getInstance().addFunction(new StrContainsFunction());\n-        AviatorEvaluator.getInstance().addFunction(new ObjectExistsFunction());\n-        AviatorEvaluator.getInstance().addFunction(new StrMatchesFunction());\n+        instance.addFunction(new StrContainsFunction());\n+        instance.addFunction(new ObjectExistsFunction());\n+        instance.addFunction(new StrMatchesFunction());\n     }\n \n     /**"
        },
        {
          "filename": "common/src/test/java/org/dromara/hertzbeat/common/config/AviatorConfigurationTest.java",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -1,6 +1,7 @@\n package org.dromara.hertzbeat.common.config;\n \n import com.googlecode.aviator.AviatorEvaluator;\n+import com.googlecode.aviator.exception.UnsupportedFeatureException;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n@@ -96,4 +97,21 @@ void testCustomStringFunctions() {\n         Boolean res13 = (Boolean) AviatorEvaluator.compile(expr10).execute(env);\n         Assertions.assertFalse(res13);\n     }\n+\n+    @Test\n+    void testRCE() {\n+        // test if 'new' syntax is disabled to prevent RCE\n+        Assertions.assertThrows(UnsupportedFeatureException.class, () -> {\n+            String expr1 = \"let d = new java.util.Date();\\n\" +\n+                    \"p(type(d));\\n\" +\n+                    \"p(d);\";\n+            AviatorEvaluator.compile(expr1, true).execute();\n+        });\n+        // test allowed features\n+        String expr2 = \"let a = 0;\\n\" +\n+                \"if (\\\"#{a}\\\" == \\\"0\\\") { a = -1; }\\n\" +\n+                \"a == -1\";\n+        Boolean result = (Boolean) AviatorEvaluator.compile(expr2, true).execute();\n+        Assertions.assertTrue(result);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8bb4493b43af512a858b7db5f4bed6e2b6a0f27a",
            "date": "2025-01-14T10:22:21Z",
            "author_login": "tomsun28"
          },
          {
            "sha": "92edd53f8c687d3404bb307b899e79544e7e900f",
            "date": "2025-01-13T07:44:14Z",
            "author_login": "ghyghoo8"
          },
          {
            "sha": "d70ad75dcc1822037fcd02dc856b66d4f5edf36f",
            "date": "2025-01-12T14:52:37Z",
            "author_login": "ayu-v0"
          },
          {
            "sha": "2e76c12fe1ef7d3c677aa1eeb4eb13a2d9a55010",
            "date": "2025-01-12T08:13:52Z",
            "author_login": "tomsun28"
          },
          {
            "sha": "7e158eb778ace730f92d568d14a45558a0bc7bb8",
            "date": "2025-01-11T09:05:04Z",
            "author_login": "Rancho-7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-74",
    "description": "Hertzbeat is a real-time monitoring system. In `CalculateAlarm.java`, `AviatorEvaluator` is used to directly execute the expression function, and no security policy is configured, resulting in AviatorScript (which can execute any static method by default) script injection. Version 1.4.1 fixes this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-22T16:15:53.413",
    "last_modified": "2024-11-21T08:38:00.467",
    "fix_date": "2023-09-11T06:42:49Z"
  },
  "references": [
    {
      "url": "https://github.com/dromara/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/dromara/hertzbeat/security/advisories/GHSA-mcqg-gqxr-hqgj",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/dromara/hertzbeat/commit/8dcf050e27ca95d15460a7ba98a3df8a9cd1d3d2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/dromara/hertzbeat/security/advisories/GHSA-mcqg-gqxr-hqgj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.149912",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "hertzbeat",
    "owner": "dromara",
    "created_at": "2022-02-04T14:48:56Z",
    "updated_at": "2025-01-14T12:58:41Z",
    "pushed_at": "2025-01-14T10:22:27Z",
    "size": 359223,
    "stars": 5908,
    "forks": 1031,
    "open_issues": 282,
    "watchers": 5908,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 3979522,
      "CSS": 788839,
      "TypeScript": 766715,
      "HTML": 451960,
      "Less": 332951,
      "JavaScript": 137391,
      "Shell": 21650,
      "Batchfile": 7767,
      "PowerShell": 3320,
      "Dockerfile": 2591,
      "Python": 2224
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T19:15:45.486509"
  }
}