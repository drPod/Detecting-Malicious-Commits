{
  "cve_id": "CVE-2023-51700",
  "github_data": {
    "repository": "jamieblomerus/WP-Mobile-BankID-Integration",
    "fix_commit": "8251c6298a995ccf4f26c43f03ed11a275dd0c5f",
    "related_commits": [
      "8251c6298a995ccf4f26c43f03ed11a275dd0c5f",
      "8251c6298a995ccf4f26c43f03ed11a275dd0c5f"
    ],
    "patch_url": "https://github.com/jamieblomerus/WP-Mobile-BankID-Integration/commit/8251c6298a995ccf4f26c43f03ed11a275dd0c5f.patch",
    "fix_commit_details": {
      "sha": "8251c6298a995ccf4f26c43f03ed11a275dd0c5f",
      "commit_date": "2023-12-25T15:15:41Z",
      "author": {
        "login": "jamieblomerus",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-pqwp-qrp7-grg4",
        "length": 72,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 57,
        "deletions": 4
      },
      "files": [
        {
          "filename": "includes/class-core.php",
          "status": "modified",
          "additions": 55,
          "deletions": 2,
          "patch": "@@ -112,7 +112,7 @@ public function getAuthResponseFromDB( $order_ref ) {\n \t\t}\n \t\treturn array(\n \t\t\t'time_created' => $response->time_created,\n-\t\t\t'response'     => unserialize( $response->response ),\n+\t\t\t'response'     => $this->convert_json_order_response_to_array( $response->response ),\n \t\t\t'orderRef'     => $response->orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.\n \t\t);\n \t}\n@@ -131,7 +131,7 @@ private function saveAuthResponseToDB( $orderRef, $response ) { // phpcs:ignore\n \t\t\t$table_name,\n \t\t\tarray(\n \t\t\t\t'time_created' => time(),\n-\t\t\t\t'response'     => serialize( $response ),\n+\t\t\t\t'response'     => $this->convert_order_response_to_json( $response ),\n \t\t\t\t'orderRef'     => $orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.\n \t\t\t)\n \t\t);\n@@ -269,4 +269,57 @@ public function deleteAuthCookie() {\n \t\t\t// Do nothing.\n \t\t}\n \t}\n+\n+\t/**\n+\t * Convert Dimafe6\\BankID\\OrderResponse to json.\n+\t *\n+\t * @param Dimafe6\\BankID\\OrderResponse $order_response Order response.\n+\t * @return array\n+\t * @since 1.0.1\n+\t */\n+\tprivate function convert_order_response_to_json( $order_response ): string {\n+\t\t// Make sure that $order_response is an instance of Dimafe6\\BankID\\Model\\OrderResponse.\n+\t\tif ( ! $order_response instanceof \\Dimafe6\\BankID\\Model\\OrderResponse ) {\n+\t\t\treturn array();\n+\t\t}\n+\t\t$array = array(\n+\t\t\t'orderRef'       => $order_response->orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.\n+\t\t\t'autoStartToken' => $order_response->autoStartToken // phpcs:ignore -- We shall not modify $autoStartToken to snake_case.\n+\t\t);\n+\t\t// If property qrStartToken exists, add it to the array.\n+\t\tif ( property_exists( $order_response, 'qrStartToken' ) ) {\n+\t\t\t$array['qrStartToken'] = $order_response->qrStartToken; // phpcs:ignore -- We shall not modify $qrStartToken to snake_case.\n+\t\t}\n+\t\t// If property qrStartSecret exists, add it to the array.\n+\t\tif ( property_exists( $order_response, 'qrStartSecret' ) ) {\n+\t\t\t$array['qrStartSecret'] = $order_response->qrStartSecret; // phpcs:ignore -- We shall not modify $qrStartSecret to snake_case.\n+\t\t}\n+\n+\t\t$json = wp_json_encode( $array );\n+\n+\t\treturn $json ? $json : '{}';\n+\t}\n+\n+\t/**\n+\t * Convert JSON OrderResponse to array after checking if it is valid.\n+\t *\n+\t * @param string $json JSON OrderResponse.\n+\t * @throws \\Exception If JSON or data is not valid.\n+\t * @return array\n+\t * @since 1.0.1\n+\t */\n+\tprivate function convert_json_order_response_to_array( $json ): array {\n+\t\t// Check each property in the JSON OrderResponse against [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\n+\t\t// If any of the properties is not valid, return an empty array.\n+\t\t$json = json_decode( $json, true );\n+\t\tif ( ! is_array( $json ) ) {\n+\t\t\tthrow new \\Exception( 'Invalid JSON' );\n+\t\t}\n+\t\tforeach ( $json as $key => $value ) {\n+\t\t\tif ( ! preg_match( '/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/', $value ) ) {\n+\t\t\t\tthrow new \\Exception( 'Data is not valid' );\n+\t\t\t}\n+\t\t}\n+\t\treturn $json;\n+\t}\n }"
        },
        {
          "filename": "includes/wp-login/class-api.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -45,7 +45,7 @@ public function status() {\n         $time = time();\n         $time_since_auth = $time - $db_row['time_created'];\n \n-        $status = $instance->get_bankid_service()->collectResponse($auth_response->orderRef);\n+        $status = $instance->get_bankid_service()->collectResponse($auth_response['orderRef']);\n \n         if ($status->status == \"failed\" ) {\n             $instance->deleteAuthResponseFromDB($orderRef);\n@@ -78,7 +78,7 @@ public function status() {\n         }\n \n         $qr = new QRCode;\n-        $qrCode = $qr->render(\"bankid.\".$auth_response->qrStartToken.\".\".$time_since_auth.\".\".hash_hmac('sha256', $time_since_auth, $auth_response->qrStartSecret));\n+        $qrCode = $qr->render(\"bankid.\".$auth_response['qrStartToken'].\".\".$time_since_auth.\".\".hash_hmac('sha256', $time_since_auth, $auth_response['qrStartSecret']));\n         return [\n             \"qr\" => $qrCode,\n             \"orderRef\" => $orderRef,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2587ba7a36f52797a2e3a9d64804d67c8d6ba53c",
            "date": "2025-01-14T12:38:43Z",
            "author_login": "jamieblomerus"
          },
          {
            "sha": "49d350d3759804b4075b7e969b3e36daf3348a71",
            "date": "2025-01-14T12:36:49Z",
            "author_login": "jamieblomerus"
          },
          {
            "sha": "2165115792442028d02e8be2e2bd725108e19bbf",
            "date": "2025-01-14T12:36:32Z",
            "author_login": "jamieblomerus"
          },
          {
            "sha": "3b7ce9bbc3bc721cbf240413f8bf852ad7e0adbd",
            "date": "2025-01-14T11:59:18Z",
            "author_login": "jamieblomerus"
          },
          {
            "sha": "126a48c79e194c912e9b629626f39c9a25c3d0a8",
            "date": "2025-01-14T11:04:52Z",
            "author_login": "jamieblomerus"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.4,
    "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-502",
    "description": "Unofficial Mobile BankID Integration for WordPress lets users employ Mobile BankID to authenticate themselves on your WordPress site. Prior to 1.0.1, WP-Mobile-BankID-Integration is affected by a vulnerability classified as a Deserialization of Untrusted Data vulnerability, specifically impacting scenarios where an attacker can manipulate the database. If unauthorized actors gain access to the database, they could exploit this vulnerability to execute object injection attacks. This could lead to unauthorized code execution, data manipulation, or data exfiltration within the WordPress environment.  Users of the plugin should upgrade to version 1.0.1 (or later), where the serialization and deserialization of OrderResponse objects have been switched out to an array stored as JSON.  A possible workaround for users unable to upgrade immediately is to enforce stricter access controls on the database, ensuring that only trusted and authorized entities can modify data. Additionally, implementing monitoring tools to detect unusual database activities could help identify and mitigate potential exploitation attempts.\n",
    "attack_vector": "LOCAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-12-27T18:15:23.700",
    "last_modified": "2024-11-21T08:38:38.180",
    "fix_date": "2023-12-25T15:15:41Z"
  },
  "references": [
    {
      "url": "https://github.com/jamieblomerus/WP-Mobile-BankID-Integration/commit/8251c6298a995ccf4f26c43f03ed11a275dd0c5f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/jamieblomerus/WP-Mobile-BankID-Integration/security/advisories/GHSA-pqwp-qrp7-grg4",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/jamieblomerus/WP-Mobile-BankID-Integration/commit/8251c6298a995ccf4f26c43f03ed11a275dd0c5f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/jamieblomerus/WP-Mobile-BankID-Integration/security/advisories/GHSA-pqwp-qrp7-grg4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:44.105343",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "WP-Mobile-BankID-Integration",
    "owner": "jamieblomerus",
    "created_at": "2023-03-04T09:08:19Z",
    "updated_at": "2025-01-14T12:38:47Z",
    "pushed_at": "2025-01-14T12:41:15Z",
    "size": 658,
    "stars": 4,
    "forks": 2,
    "open_issues": 0,
    "watchers": 4,
    "has_security_policy": false,
    "default_branch": "trunk",
    "protected_branches": [
      "trunk"
    ],
    "languages": {
      "PHP": 92135,
      "JavaScript": 14063,
      "CSS": 9984,
      "Shell": 2385
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T18:18:05.724728"
  }
}