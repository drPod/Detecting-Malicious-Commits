{
  "cve_id": "CVE-2023-52076",
  "github_data": {
    "repository": "mate-desktop/atril",
    "fix_commit": "e70b21c815418a1e6ebedf6d8d31b8477c03ba50",
    "related_commits": [
      "e70b21c815418a1e6ebedf6d8d31b8477c03ba50",
      "e70b21c815418a1e6ebedf6d8d31b8477c03ba50"
    ],
    "patch_url": "https://github.com/mate-desktop/atril/commit/e70b21c815418a1e6ebedf6d8d31b8477c03ba50.patch",
    "fix_commit_details": {
      "sha": "e70b21c815418a1e6ebedf6d8d31b8477c03ba50",
      "commit_date": "2023-12-25T06:40:42Z",
      "author": {
        "login": "lukefromdc",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "epub: Prevent path traversal when extracting files",
        "length": 133,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 22,
        "deletions": 6
      },
      "files": [
        {
          "filename": "backend/epub/epub-document.c",
          "status": "modified",
          "additions": 22,
          "deletions": 6,
          "patch": "@@ -635,7 +635,7 @@ check_mime_type(const gchar* uri,GError** error)\n         for (i = 0; i < g_strv_length (mimetypes); i++) {\n            if (strcmp(mimeFromFile, mimetypes[i]) == 0)\n                 return TRUE;\n-\t}\n+        }\n \n         /* fallback for malformed epub files */\n         if (strcmp (mimeFromFile, \"application/zip\") == 0)\n@@ -671,7 +671,7 @@ check_mime_type(const gchar* uri,GError** error)\n }\n \n static gboolean\n-extract_one_file(EpubDocument* epub_document,GError ** error)\n+extract_one_file(EpubDocument* epub_document, GFile *tmp_gfile, GError ** error)\n {\n     GFile * outfile ;\n     gsize writesize = 0;\n@@ -698,6 +698,20 @@ extract_one_file(EpubDocument* epub_document,GError ** error)\n     gfilepath = g_string_new(epub_document->tmp_archive_dir) ;\n     g_string_append_printf(gfilepath,\"/%s\",(gchar*)currentfilename);\n \n+    outfile = g_file_new_for_path (gfilepath->str);\n+    g_autofree gchar *rpath = g_file_get_relative_path (tmp_gfile, outfile);\n+\n+    if (rpath == NULL)\n+    {\n+        g_set_error_literal (error,\n+                             EV_DOCUMENT_ERROR,\n+                             EV_DOCUMENT_ERROR_INVALID,\n+                             _(\"epub file is invalid or corrupt\"));\n+        g_critical (\"Invalid filename in Epub container - '%s'\", (gchar *) currentfilename);\n+        result = FALSE;\n+        goto out;\n+    }\n+\n     /*if we encounter a directory, make a directory inside our temporary folder.*/\n     if (directory != NULL && *directory == '\\0')\n     {\n@@ -725,7 +739,6 @@ extract_one_file(EpubDocument* epub_document,GError ** error)\n         g_string_free(dir_create,TRUE);\n     }\n \n-    outfile = g_file_new_for_path(gfilepath->str);\n     outstream = g_file_create(outfile,G_FILE_CREATE_PRIVATE,NULL,error);\n     gpointer buffer = g_malloc0(512);\n     while ( (writesize = unzReadCurrentFile(epub_document->epubDocument,buffer,512) ) != 0 )\n@@ -738,10 +751,10 @@ extract_one_file(EpubDocument* epub_document,GError ** error)\n     }\n     g_free(buffer);\n     g_output_stream_close((GOutputStream*)outstream,NULL,error);\n-    g_object_unref(outfile) ;\n-    g_object_unref(outstream) ;\n+    g_object_unref(outstream);\n \n out:\n+    g_object_unref(outfile);\n     unzCloseCurrentFile (epub_document->epubDocument) ;\n     g_string_free(gfilepath,TRUE);\n     g_free(currentfilename);\n@@ -753,6 +766,7 @@ extract_epub_from_container (const gchar* uri,\n                              EpubDocument *epub_document,\n                              GError ** error)\n {\n+    GFile *tmp_gfile = NULL;\n     GError *err = NULL;\n     epub_document->archivename = g_filename_from_uri(uri,NULL,error);\n \n@@ -814,9 +828,10 @@ extract_epub_from_container (const gchar* uri,\n         goto out;\n     }\n \n+    tmp_gfile = g_file_new_for_path (epub_document->tmp_archive_dir);\n     while ( TRUE )\n     {\n-        if ( extract_one_file(epub_document,&err) == FALSE )\n+        if ( extract_one_file(epub_document, tmp_gfile, &err) == FALSE )\n         {\n             if (err) {\n                 g_propagate_error (error, err);\n@@ -837,6 +852,7 @@ extract_epub_from_container (const gchar* uri,\n     }\n \n out:\n+    g_clear_object (&tmp_gfile);\n     unzClose(epub_document->epubDocument);\n     return result;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "db229c01a3ed39622cf5f5e94cccc42e3eb50c87",
            "date": "2024-12-03T01:33:52Z",
            "author_login": "lukefromdc"
          },
          {
            "sha": "d3fd9d3832b0652b0abbf8feccde38ae3f43fe4e",
            "date": "2024-12-03T01:30:52Z",
            "author_login": "lukefromdc"
          },
          {
            "sha": "54e44c98bb3ae3b8c4445250ab926a8c3084405e",
            "date": "2024-12-02T11:49:18Z",
            "author_login": "chereskata"
          },
          {
            "sha": "fb1d374e99fa52c8ec23116be66c03925214d036",
            "date": "2024-12-02T21:18:03Z",
            "author_login": "lukefromdc"
          },
          {
            "sha": "33f05a252cd2f8f39eaa0fb6df9210c47995ac0e",
            "date": "2024-04-16T12:41:35Z",
            "author_login": "cwendling"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-22",
    "description": "Atril Document Viewer is the default document reader of the MATE desktop environment for Linux. A path traversal and arbitrary file write vulnerability exists in versions of Atril prior to 1.26.2. This vulnerability is capable of writing arbitrary files anywhere on the filesystem to which the user opening a crafted document has access. The only limitation is that this vulnerability cannot be exploited to overwrite existing files, but that doesn't stop an attacker from achieving Remote Command Execution on the target system. Version 1.26.2 of Atril contains a patch for this vulnerability.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-25T16:15:07.930",
    "last_modified": "2024-11-21T08:39:07.200",
    "fix_date": "2023-12-25T06:40:42Z"
  },
  "references": [
    {
      "url": "https://github.com/mate-desktop/atril/commit/e70b21c815418a1e6ebedf6d8d31b8477c03ba50",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mate-desktop/atril/releases/tag/v1.26.2",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/mate-desktop/atril/security/advisories/GHSA-6mf6-mxpc-jc37",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00003.html",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/mate-desktop/atril/commit/e70b21c815418a1e6ebedf6d8d31b8477c03ba50",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mate-desktop/atril/releases/tag/v1.26.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/mate-desktop/atril/security/advisories/GHSA-6mf6-mxpc-jc37",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/06/msg00003.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.528722",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "atril",
    "owner": "mate-desktop",
    "created_at": "2011-11-09T18:45:55Z",
    "updated_at": "2025-01-13T05:55:09Z",
    "pushed_at": "2024-12-03T01:50:04Z",
    "size": 30789,
    "stars": 210,
    "forks": 66,
    "open_issues": 154,
    "watchers": 210,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "C": 2664360,
      "C++": 98615,
      "Makefile": 68377,
      "M4": 26737,
      "Python": 5091,
      "Perl": 4060,
      "Roff": 3661,
      "CSS": 772,
      "Shell": 752
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T21:09:26.929493"
  }
}