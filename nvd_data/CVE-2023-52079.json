{
  "cve_id": "CVE-2023-52079",
  "github_data": {
    "repository": "kriszyp/msgpackr",
    "fix_commit": "18f44f8800e2261341cdf489d1ba1e35a0133602",
    "related_commits": [
      "18f44f8800e2261341cdf489d1ba1e35a0133602",
      "18f44f8800e2261341cdf489d1ba1e35a0133602"
    ],
    "patch_url": "https://github.com/kriszyp/msgpackr/commit/18f44f8800e2261341cdf489d1ba1e35a0133602.patch",
    "fix_commit_details": {
      "sha": "18f44f8800e2261341cdf489d1ba1e35a0133602",
      "commit_date": "2023-12-26T02:59:59Z",
      "author": {
        "login": "kriszyp",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ensure that string conversion doesn't recursively join or execute code",
        "length": 70,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 10,
        "additions": 8,
        "deletions": 2
      },
      "files": [
        {
          "filename": "unpack.js",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -914,7 +914,7 @@ function readKey() {\n \t\t\treturn readFixedString(length)\n \t} else { // not cacheable, go back and do a standard read\n \t\tposition--\n-\t\treturn read().toString()\n+\t\treturn asSafeString(read())\n \t}\n \tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n \tlet entry = keyCache[key]\n@@ -966,9 +966,15 @@ function readKey() {\n \treturn entry.string = readFixedString(length)\n }\n \n+function asSafeString(property) {\n+\tif (typeof property === 'string') return property;\n+\tif (typeof property === 'number') return property.toString();\n+\tthrow new Error('Invalid property type for record', typeof property);\n+}\n // the registration of the record definition extension (as \"r\")\n const recordDefinition = (id, highByte) => {\n-\tlet structure = read().map(property => property.toString()) // ensure that all keys are strings and that the array is mutable\n+\tlet structure = read().map(asSafeString) // ensure that all keys are strings and\n+\t// that the array is mutable\n \tlet firstByte = id\n \tif (highByte !== undefined) {\n \t\tid = id < 32 ? -((highByte << 5) + id) : ((highByte << 5) + id)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6b18367f1f6883550452991c7170cc31aa4d1d9d",
            "date": "2024-10-31T11:50:40Z",
            "author_login": "kriszyp"
          },
          {
            "sha": "e0e3d3ffa4995b5129b1b4c66015bf798288bf2d",
            "date": "2024-10-31T11:50:04Z",
            "author_login": "kriszyp"
          },
          {
            "sha": "94f33ef1345647275f40c69cdd52d7afeb44d694",
            "date": "2024-10-31T07:16:48Z",
            "author_login": "ziggi"
          },
          {
            "sha": "0ac61e0be93b2e9dd0a42d6aa467833be4f5f1cb",
            "date": "2024-10-31T02:29:12Z",
            "author_login": "kriszyp"
          },
          {
            "sha": "7b847a9ae5e20af3f437492688bd1126ba47605f",
            "date": "2024-10-06T21:34:46Z",
            "author_login": "kriszyp"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "cwe_id": "CWE-674",
    "description": "msgpackr is a fast MessagePack NodeJS/JavaScript implementation. Prior to 1.10.1, when decoding user supplied MessagePack messages, users can trigger stuck threads by crafting messages that keep the decoder stuck in a loop. The fix is available in v1.10.1.  \nExploits seem to require structured cloning, replacing the 0x70 extension with your own (that throws an error or does something other than recursive referencing) should mitigate the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2023-12-28T16:16:01.863",
    "last_modified": "2024-11-21T08:39:07.520",
    "fix_date": "2023-12-26T02:59:59Z"
  },
  "references": [
    {
      "url": "https://github.com/kriszyp/msgpackr/commit/18f44f8800e2261341cdf489d1ba1e35a0133602",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/kriszyp/msgpackr/security/advisories/GHSA-7hpj-7hhx-2fgx",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/kriszyp/msgpackr/commit/18f44f8800e2261341cdf489d1ba1e35a0133602",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/kriszyp/msgpackr/security/advisories/GHSA-7hpj-7hhx-2fgx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:44.109851",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "msgpackr",
    "owner": "kriszyp",
    "created_at": "2020-08-10T21:54:28Z",
    "updated_at": "2025-01-11T08:06:55Z",
    "pushed_at": "2024-10-31T11:50:42Z",
    "size": 697,
    "stars": 511,
    "forks": 55,
    "open_issues": 28,
    "watchers": 511,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 178524,
      "TypeScript": 612,
      "HTML": 461,
      "Shell": 84
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:30:28.285114"
  }
}