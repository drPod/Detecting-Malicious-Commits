{
  "cve_id": "CVE-2023-6599",
  "github_data": {
    "repository": "microweber/microweber",
    "fix_commit": "f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd",
    "related_commits": [
      "f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd",
      "f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd",
      "commit_date": "2023-06-08T14:32:44Z",
      "author": {
        "login": "peter-mw",
        "type": "User",
        "stats": {
          "total_commits": 7991,
          "average_weekly_commits": 14.992495309568481,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 413
        }
      },
      "commit_message": {
        "title": "update",
        "length": 6,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 66,
        "additions": 51,
        "deletions": 15
      },
      "files": [
        {
          "filename": "src/MicroweberPackages/FileManager/Http/Controllers/PluploadController.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -358,9 +358,9 @@ public function upload()\n         $fileName = preg_replace('/\\s+\\d+%|\\)/', '', $fileName);\n         $fileName = preg_replace(\"/[\\/\\&%#\\$]/\", \"_\", $fileName);\n         $fileName = preg_replace(\"/[\\\"\\']/\", \" \", $fileName);\n-        $fileName = str_replace(array('(', ')', \"'\", \"!\", \"`\", \"*\", \"#\"), '_', $fileName);\n-        $fileName = str_replace(' ', '_', $fileName);\n-        $fileName = str_replace('..', '.', $fileName);\n+        $fileName = str_replace(array('(', ')', \"'\", \"!\", \"`\", \"*\", \"#\", \"<\", \">\"), '-', $fileName);\n+        $fileName = str_replace(' ', '-', $fileName);\n+        $fileName = str_replace('..', '-', $fileName);\n         $fileName = strtolower($fileName);\n         $fileName = mw()->url_manager->clean_url_wrappers($fileName);\n         $fileName = substr($fileName, 0, -(strlen($fileNameExtension)));"
        },
        {
          "filename": "src/MicroweberPackages/Media/MediaManager.php",
          "status": "modified",
          "additions": 6,
          "deletions": 7,
          "patch": "@@ -380,7 +380,7 @@ public function get($params)\n     public function save($data)\n     {\n         $data = app()->html_clean->cleanArray($data);\n-\n+        $data = xss_clean($data);\n         $s = array();\n \n         if (isset($data['content-id'])) {\n@@ -513,6 +513,9 @@ public function save($data)\n \n             $s['filename'] = $data['src'];\n         }\n+        if (isset($s['filename']) && !is_string($s['filename'])) {\n+           return false;\n+        }\n \n         if (!isset($data['position']) and !isset($s['id'])) {\n             $s['position'] = 9999999;\n@@ -525,6 +528,7 @@ public function save($data)\n \n         if ((!isset($s['id']) or (isset($s['id']) and $s['id'] == 0))\n             and isset($s['filename'])\n+            and is_string($s['filename'])\n             and isset($s['rel_id'])\n             and isset($s['rel_type'])\n         ) {\n@@ -540,7 +544,7 @@ public function save($data)\n             }\n         }\n \n-        if (!isset($s['id']) and isset($s['filename']) and !isset($data['media_type'])) {\n+        if (!isset($s['id']) and isset($s['filename']) and is_string($s['filename']) and !isset($data['media_type'])) {\n             $ext = get_file_extension($s['filename']);\n             $data['media_type'] = $this->_guess_media_type_from_file_ext($ext);\n         }\n@@ -559,11 +563,6 @@ public function save($data)\n             $s['image_options'] = @json_encode($data['image_options']);\n         }\n \n-        if (isset($s['filename']) && is_array($s['filename'])) {\n-            if (isset($s['filename']['error'])) {\n-                return false;\n-            }\n-        }\n \n         if (isset($s['rel_type']) and isset($s['rel_id'])) {\n             $s['rel_id'] = trim($s['rel_id']);"
        },
        {
          "filename": "src/MicroweberPackages/Media/Traits/MediaTrait.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -82,7 +82,7 @@ public static function bootMediaTrait()\n                                 'rel_id' => $model->id,\n                                 'title' => 'Picture',\n                                 'media_type' => 'picture',\n-                                'src' => $url,\n+                                'filename' => $url,\n                             ));\n                         }\n                     }"
        },
        {
          "filename": "src/MicroweberPackages/Media/migrations/2020_07_02_000000_create_media_table.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -18,7 +18,7 @@ public function up()\n                 $table->id();\n                 $table->text('title')->nullable();\n                 $table->text('description')->nullable();\n-                $table->text('embed_code')->nullable();\n+                //$table->text('embed_code')->nullable();\n                 $table->text('filename')->nullable();\n                 $table->text('media_type')->nullable()->index();\n "
        },
        {
          "filename": "src/MicroweberPackages/Media/tests/LegacyMediaTest.php",
          "status": "renamed",
          "additions": 40,
          "deletions": 3,
          "patch": "@@ -4,7 +4,7 @@\n \n use MicroweberPackages\\Core\\tests\\TestCase;\n \n-class MediaTest extends TestCase\n+class LegacyMediaTest extends TestCase\n {\n     public function testSaveMedia()\n     {\n@@ -13,7 +13,7 @@ public function testSaveMedia()\n             'rel_id' => 3,\n             'title' => 'My new pic',\n             'media_type' => 'picture',\n-            'src' => 'http://lorempixel.com/400/200/',\n+            'filename' => 'http://lorempixel.com/400/200/',\n         );\n         $saved_pic_id = save_media($picture);\n \n@@ -35,7 +35,7 @@ public function testDeleteMedia()\n             'rel_id' => 3,\n             'title' => 'My new pic to del',\n             'media_type' => 'picture',\n-            'src' => 'http://lorempixel.com/400/200/',\n+            'filename' => 'http://lorempixel.com/400/200/',\n         );\n         $saved_pic_id = save_media($picture);\n         $picture_data = get_media_by_id($saved_pic_id);\n@@ -48,5 +48,42 @@ public function testDeleteMedia()\n         $this->assertEquals(is_array($picture_data), true);\n         $this->assertEquals($title, 'My new pic to del');\n         $this->assertEquals(!($delete), false);\n+    }\n+\n+    public function testSaveMediaArrayInFilename()\n+    {\n+        $picture = array(\n+            'rel_type' => 'content',\n+            'rel_id' => 3,\n+            'title' => 'My new pic',\n+            'media_type' => 'picture',\n+            'filename' => ['http://lorempixel.com/400/200/', 'http://lorempixel.com/400/200/'],\n+        );\n+        $saved_pic_id = save_media($picture);\n+\n+        $this->assertFalse($saved_pic_id);\n+    }\n+    public function testSaveMediaXssFilename()\n+    {\n+        $xss = '<style>@keyframes x{}</style><xss style=\"animation-name:x\" onanimationend=\"alert(document.cookie)\"></xss>';\n+\n+        $picture = array(\n+            'rel_type' => 'content',\n+            'rel_id' => 3,\n+            'title' => 'My new pic to xss'.$xss,\n+            'description' => 'My new pic description xss'.$xss,\n+            'media_type' => 'picture',\n+            'filename' => 'http://lorempixel.com/400/200/'.$xss,\n+        );\n+        $saved_pic_id = save_media($picture);\n+        $picture_data = get_media_by_id($saved_pic_id);\n+\n+        $this->assertNotEquals($picture_data['title'], $picture['title']);\n+        $this->assertNotEquals($picture_data['description'], $picture['description']);\n+        $this->assertNotEquals($picture_data['filename'], $picture['filename']);\n+\n+\n+\n+\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 5,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ab1db7caba45aa0940beebd44416465c3aa6654",
            "date": "2025-01-22T10:10:17Z",
            "author_login": "bobimicroweber"
          },
          {
            "sha": "3e67e66d0a599f4b08a6d620ee8c8deb1e61783f",
            "date": "2025-01-22T10:08:31Z",
            "author_login": "bobimicroweber"
          },
          {
            "sha": "fcd3367ac5d82471cab6ec9c93934d4e59d88c7b",
            "date": "2025-01-20T13:45:37Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "a9744dfc4559d4053c4d198660b809c4eb702e59",
            "date": "2025-01-20T13:33:36Z",
            "author_login": "peter-mw"
          },
          {
            "sha": "c272e68c749e7b442805942c72b60d295e745ffe",
            "date": "2025-01-20T13:18:10Z",
            "author_login": "peter-mw"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-544",
    "description": "Missing Standardized Error Handling Mechanism in GitHub repository microweber/microweber prior to 2.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-08T00:15:08.113",
    "last_modified": "2024-11-21T08:44:10.740",
    "fix_date": "2023-06-08T14:32:44Z"
  },
  "references": [
    {
      "url": "https://github.com/microweber/microweber/commit/f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/6198785c-bf60-422e-9b80-68a6e658a10e",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Technical Description"
      ]
    },
    {
      "url": "https://github.com/microweber/microweber/commit/f7eb9e1c6e801346f07f3b0164a01ac5f2ca5cfd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/6198785c-bf60-422e-9b80-68a6e658a10e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Technical Description"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:41.546130",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "microweber",
    "owner": "microweber",
    "created_at": "2010-10-07T09:04:43Z",
    "updated_at": "2025-01-26T00:37:31Z",
    "pushed_at": "2025-01-24T15:56:56Z",
    "size": 1027315,
    "stars": 3185,
    "forks": 889,
    "open_issues": 360,
    "watchers": 3185,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "HTML": 12566636,
      "PHP": 11975997,
      "JavaScript": 8696748,
      "CSS": 3597687,
      "SCSS": 2178754,
      "Blade": 1663664,
      "Less": 518400,
      "Hack": 476030,
      "MDX": 387317,
      "Vue": 344860,
      "Ruby": 12504,
      "OCaml": 4815,
      "Dockerfile": 1548,
      "CoffeeScript": 950,
      "Batchfile": 61,
      "Shell": 59,
      "Sass": 1
    },
    "commit_activity": {
      "total_commits_last_year": 1213,
      "avg_commits_per_week": 23.326923076923077,
      "days_active_last_year": 121
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:34:45.386335"
  }
}