{
  "cve_id": "CVE-2023-6909",
  "github_data": {
    "repository": "mlflow/mlflow",
    "fix_commit": "1da75dfcecd4d169e34809ade55748384e8af6c1",
    "related_commits": [
      "1da75dfcecd4d169e34809ade55748384e8af6c1",
      "1da75dfcecd4d169e34809ade55748384e8af6c1"
    ],
    "patch_url": "https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1.patch",
    "fix_commit_details": {
      "sha": "1da75dfcecd4d169e34809ade55748384e8af6c1",
      "commit_date": "2023-12-08T06:00:19Z",
      "author": {
        "login": "B-Step62",
        "type": "User",
        "stats": {
          "total_commits": 319,
          "average_weekly_commits": 0.9219653179190751,
          "total_additions": 95291,
          "total_deletions": 27234,
          "weeks_active": 61
        }
      },
      "commit_message": {
        "title": "Prevent path traversal with encoded URL (#10650)",
        "length": 104,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 335,
        "additions": 183,
        "deletions": 152
      },
      "files": [
        {
          "filename": "mlflow/utils/uri.py",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -430,7 +430,10 @@ def validate_path_is_safe(path):\n     \"\"\"\n     from mlflow.utils.file_utils import local_file_uri_to_path\n \n-    exc = MlflowException(f\"Invalid path: {path}\", error_code=INVALID_PARAMETER_VALUE)\n+    # We must decode URL before validating it\n+    path = urllib.parse.unquote(path)\n+\n+    exc = MlflowException(\"Invalid path\", error_code=INVALID_PARAMETER_VALUE)\n     if any((s in path) for s in (\"#\", \"%23\")):\n         raise exc\n "
        },
        {
          "filename": "tests/server/test_handlers.py",
          "status": "modified",
          "additions": 26,
          "deletions": 1,
          "patch": "@@ -38,11 +38,12 @@\n     UpdateRegisteredModel,\n )\n from mlflow.protos.service_pb2 import CreateExperiment, SearchRuns\n-from mlflow.server import BACKEND_STORE_URI_ENV_VAR, app\n+from mlflow.server import BACKEND_STORE_URI_ENV_VAR, SERVE_ARTIFACTS_ENV_VAR, app\n from mlflow.server.handlers import (\n     _create_experiment,\n     _create_model_version,\n     _create_registered_model,\n+    _delete_artifact_mlflow_artifacts,\n     _delete_model_version,\n     _delete_model_version_tag,\n     _delete_registered_model,\n@@ -105,6 +106,11 @@ def mock_model_registry_store():\n         yield mock_store\n \n \n+@pytest.fixture\n+def enable_serve_artifacts(monkeypatch):\n+    monkeypatch.setenv(SERVE_ARTIFACTS_ENV_VAR, \"true\")\n+\n+\n def test_health():\n     with app.test_client() as c:\n         response = c.get(\"/health\")\n@@ -777,3 +783,22 @@ def test_get_model_version_by_alias(mock_get_request_message, mock_model_registr\n     _, args = mock_model_registry_store.get_model_version_by_alias.call_args\n     assert args == {\"name\": name, \"alias\": alias}\n     assert json.loads(resp.get_data()) == {\"model_version\": jsonify(mvd)}\n+\n+\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"/path\",\n+        \"path/../to/file\",\n+        \"/etc/passwd\",\n+        \"/etc/passwd%00.jpg\",\n+        \"/file://etc/passwd\",\n+        \"%2E%2E%2F%2E%2E%2Fpath\",\n+    ],\n+)\n+def test_delete_artifact_mlflow_artifacts_throws_for_malicious_path(enable_serve_artifacts, path):\n+    response = _delete_artifact_mlflow_artifacts(path)\n+    assert response.status_code == 400\n+    json_response = json.loads(response.get_data())\n+    assert json_response[\"error_code\"] == ErrorCode.Name(INVALID_PARAMETER_VALUE)\n+    assert json_response[\"message\"] == \"Invalid path\""
        },
        {
          "filename": "tests/store/artifact/test_http_artifact_repo.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -246,7 +246,7 @@ def test_list_artifacts(http_artifact_repo):\n             http_artifact_repo.list_artifacts()\n \n \n-@pytest.mark.parametrize(\"path\", [\"/tmp/path\", \"../../path\"])\n+@pytest.mark.parametrize(\"path\", [\"/tmp/path\", \"../../path\", \"%2E%2E%2Fpath\"])\n def test_list_artifacts_malicious_path(http_artifact_repo, path):\n     with mock.patch(\n         \"mlflow.store.artifact.http_artifact_repo.http_request\",\n@@ -259,7 +259,7 @@ def test_list_artifacts_malicious_path(http_artifact_repo, path):\n             200,\n         ),\n     ):\n-        with pytest.raises(MlflowException, match=f\"Invalid path: {path}\"):\n+        with pytest.raises(MlflowException, match=\"Invalid path\"):\n             http_artifact_repo.list_artifacts()\n \n "
        },
        {
          "filename": "tests/tracking/test_rest_tracking.py",
          "status": "modified",
          "additions": 1,
          "deletions": 148,
          "patch": "@@ -35,7 +35,6 @@\n )\n from mlflow.exceptions import MlflowException\n from mlflow.models import Model\n-from mlflow.server.handlers import validate_path_is_safe\n from mlflow.store.tracking.sqlalchemy_store import SqlAlchemyStore\n from mlflow.utils import mlflow_tags\n from mlflow.utils.file_utils import TempDir, path_to_local_file_uri\n@@ -514,152 +513,6 @@ def assert_bad_request(payload, expected_error_message):\n     assert response.status_code == 200\n \n \n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        \"path\",\n-        \"path/\",\n-        \"path/to/file\",\n-    ],\n-)\n-def test_validate_path_is_safe_good(path):\n-    validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        # relative path from current directory of C: drive\n-        \".../...//\",\n-    ],\n-)\n-def test_validate_path_is_safe_windows_good(path):\n-    validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(is_windows(), reason=\"This test does not pass on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        \"/path\",\n-        \"../path\",\n-        \"../../path\",\n-        \"./../path\",\n-        \"path/../to/file\",\n-        \"path/../../to/file\",\n-        \"file://a#/..//tmp\",\n-        \"file://a%23/..//tmp/\",\n-        \"/etc/passwd\",\n-        \"/etc/passwd%00.jpg\",\n-        \"/etc/passwd%00.html\",\n-        \"/etc/passwd%00.txt\",\n-        \"/etc/passwd%00.php\",\n-        \"/etc/passwd%00.asp\",\n-        \"/file://etc/passwd\",\n-    ],\n-)\n-def test_validate_path_is_safe_bad(path):\n-    with pytest.raises(MlflowException, match=\"Invalid path\"):\n-        validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        r\"../path\",\n-        r\"../../path\",\n-        r\"./../path\",\n-        r\"path/../to/file\",\n-        r\"path/../../to/file\",\n-        r\"..\\path\",\n-        r\"..\\..\\path\",\n-        r\".\\..\\path\",\n-        r\"path\\..\\to\\file\",\n-        r\"path\\..\\..\\to\\file\",\n-        # Drive-relative paths\n-        r\"C:path\",\n-        r\"C:path/\",\n-        r\"C:path/to/file\",\n-        r\"C:../path/to/file\",\n-        r\"C:\\path\",\n-        r\"C:/path\",\n-        r\"C:\\path\\to\\file\",\n-        r\"C:\\path/to/file\",\n-        r\"C:\\path\\..\\to\\file\",\n-        r\"C:/path/../to/file\",\n-        # UNC(Universal Naming Convention) paths\n-        r\"\\\\path\\to\\file\",\n-        r\"\\\\path/to/file\",\n-        r\"\\\\.\\\\C:\\path\\to\\file\",\n-        r\"\\\\?\\C:\\path\\to\\file\",\n-        r\"\\\\?\\UNC/path/to/file\",\n-        # Other potential attackable paths\n-        r\"/etc/password\",\n-        r\"/path\",\n-        r\"/etc/passwd%00.jpg\",\n-        r\"/etc/passwd%00.html\",\n-        r\"/etc/passwd%00.txt\",\n-        r\"/etc/passwd%00.php\",\n-        r\"/etc/passwd%00.asp\",\n-        r\"/Windows/no/such/path\",\n-        r\"/file://etc/passwd\",\n-        r\"/file:c:/passwd\",\n-        r\"/file://d:/windows/win.ini\",\n-        r\"/file://./windows/win.ini\",\n-        r\"file://c:/boot.ini\",\n-        r\"file://C:path\",\n-        r\"file://C:path/\",\n-        r\"file://C:path/to/file\",\n-        r\"file:///C:/Windows/System32/\",\n-        r\"file:///etc/passwd\",\n-        r\"file:///d:/windows/repair/sam\",\n-        r\"file:///proc/version\",\n-        r\"file:///inetpub/wwwroot/global.asa\",\n-        r\"/file://../windows/win.ini\",\n-        r\"../etc/passwd\",\n-        r\"..\\Windows\\System32\\\\\",\n-        r\"C:\\Windows\\System32\\\\\",\n-        r\"/etc/passwd\",\n-        r\"::Windows\\System32\",\n-        r\"..\\..\\..\\..\\Windows\\System32\\\\\",\n-        r\"../Windows/System32\",\n-        r\"....\\\\\",\n-        r\"\\\\?\\C:\\Windows\\System32\\\\\",\n-        r\"\\\\.\\C:\\Windows\\System32\\\\\",\n-        r\"\\\\UNC\\Server\\Share\\\\\",\n-        r\"\\\\Server\\Share\\folder\\\\\",\n-        r\"\\\\127.0.0.1\\c$\\Windows\\\\\",\n-        r\"\\\\localhost\\c$\\Windows\\\\\",\n-        r\"\\\\smbserver\\share\\path\\\\\",\n-        r\"..\\\\?\\C:\\Windows\\System32\\\\\",\n-        r\"C:/Windows/../Windows/System32/\",\n-        r\"C:\\Windows\\..\\Windows\\System32\\\\\",\n-        r\"../../../../../../../../../../../../Windows/System32\",\n-        r\"../../../../../../../../../../../../etc/passwd\",\n-        r\"../../../../../../../../../../../../var/www/html/index.html\",\n-        r\"../../../../../../../../../../../../usr/local/etc/openvpn/server.conf\",\n-        r\"../../../../../../../../../../../../Program Files (x86)\",\n-        r\"/../../../../../../../../../../../../Windows/System32\",\n-        r\"/Windows\\../etc/passwd\",\n-        r\"/Windows\\..\\Windows\\System32\\\\\",\n-        r\"/Windows\\..\\Windows\\System32\\cmd.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\msconfig.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\regedit.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\taskmgr.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\control.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\services.msc\",\n-        r\"/Windows\\..\\Windows\\System32\\diskmgmt.msc\",\n-        r\"/Windows\\..\\Windows\\System32\\eventvwr.msc\",\n-        r\"/Windows/System32/drivers/etc/hosts\",\n-    ],\n-)\n-def test_validate_path_is_safe_windows_bad(path):\n-    with pytest.raises(MlflowException, match=\"Invalid path\"):\n-        validate_path_is_safe(path)\n-\n-\n def test_path_validation(mlflow_client):\n     experiment_id = mlflow_client.create_experiment(\"tags validation\")\n     created_run = mlflow_client.create_run(experiment_id)\n@@ -670,7 +523,7 @@ def assert_response(resp):\n         assert resp.status_code == 400\n         assert response.json() == {\n             \"error_code\": \"INVALID_PARAMETER_VALUE\",\n-            \"message\": f\"Invalid path: {invalid_path}\",\n+            \"message\": \"Invalid path\",\n         }\n \n     response = requests.get("
        },
        {
          "filename": "tests/utils/test_uri.py",
          "status": "modified",
          "additions": 150,
          "deletions": 0,
          "patch": "@@ -24,6 +24,7 @@\n     is_valid_dbfs_uri,\n     remove_databricks_profile_info_from_artifact_uri,\n     resolve_uri_if_local,\n+    validate_path_is_safe,\n )\n \n \n@@ -724,3 +725,152 @@ def test_correctly_detect_fuse_and_uc_uris(uri):\n )\n def test_negative_detection(uri):\n     assert not is_fuse_or_uc_volumes_uri(uri)\n+\n+\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"path\",\n+        \"path/\",\n+        \"path/to/file\",\n+    ],\n+)\n+def test_validate_path_is_safe_good(path):\n+    validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        # relative path from current directory of C: drive\n+        \".../...//\",\n+    ],\n+)\n+def test_validate_path_is_safe_windows_good(path):\n+    validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(is_windows(), reason=\"This test does not pass on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"/path\",\n+        \"../path\",\n+        \"../../path\",\n+        \"./../path\",\n+        \"path/../to/file\",\n+        \"path/../../to/file\",\n+        \"file://a#/..//tmp\",\n+        \"file://a%23/..//tmp/\",\n+        \"/etc/passwd\",\n+        \"/etc/passwd%00.jpg\",\n+        \"/etc/passwd%00.html\",\n+        \"/etc/passwd%00.txt\",\n+        \"/etc/passwd%00.php\",\n+        \"/etc/passwd%00.asp\",\n+        \"/file://etc/passwd\",\n+        # Encoded paths with '..'\n+        \"%2E%2E%2Fpath\",\n+        \"%2E%2E%2F%2E%2E%2Fpath\",\n+    ],\n+)\n+def test_validate_path_is_safe_bad(path):\n+    with pytest.raises(MlflowException, match=\"Invalid path\"):\n+        validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        r\"../path\",\n+        r\"../../path\",\n+        r\"./../path\",\n+        r\"path/../to/file\",\n+        r\"path/../../to/file\",\n+        r\"..\\path\",\n+        r\"..\\..\\path\",\n+        r\".\\..\\path\",\n+        r\"path\\..\\to\\file\",\n+        r\"path\\..\\..\\to\\file\",\n+        # Drive-relative paths\n+        r\"C:path\",\n+        r\"C:path/\",\n+        r\"C:path/to/file\",\n+        r\"C:../path/to/file\",\n+        r\"C:\\path\",\n+        r\"C:/path\",\n+        r\"C:\\path\\to\\file\",\n+        r\"C:\\path/to/file\",\n+        r\"C:\\path\\..\\to\\file\",\n+        r\"C:/path/../to/file\",\n+        # UNC(Universal Naming Convention) paths\n+        r\"\\\\path\\to\\file\",\n+        r\"\\\\path/to/file\",\n+        r\"\\\\.\\\\C:\\path\\to\\file\",\n+        r\"\\\\?\\C:\\path\\to\\file\",\n+        r\"\\\\?\\UNC/path/to/file\",\n+        # Other potential attackable paths\n+        r\"/etc/password\",\n+        r\"/path\",\n+        r\"/etc/passwd%00.jpg\",\n+        r\"/etc/passwd%00.html\",\n+        r\"/etc/passwd%00.txt\",\n+        r\"/etc/passwd%00.php\",\n+        r\"/etc/passwd%00.asp\",\n+        r\"/Windows/no/such/path\",\n+        r\"/file://etc/passwd\",\n+        r\"/file:c:/passwd\",\n+        r\"/file://d:/windows/win.ini\",\n+        r\"/file://./windows/win.ini\",\n+        r\"file://c:/boot.ini\",\n+        r\"file://C:path\",\n+        r\"file://C:path/\",\n+        r\"file://C:path/to/file\",\n+        r\"file:///C:/Windows/System32/\",\n+        r\"file:///etc/passwd\",\n+        r\"file:///d:/windows/repair/sam\",\n+        r\"file:///proc/version\",\n+        r\"file:///inetpub/wwwroot/global.asa\",\n+        r\"/file://../windows/win.ini\",\n+        r\"../etc/passwd\",\n+        r\"..\\Windows\\System32\\\\\",\n+        r\"C:\\Windows\\System32\\\\\",\n+        r\"/etc/passwd\",\n+        r\"::Windows\\System32\",\n+        r\"..\\..\\..\\..\\Windows\\System32\\\\\",\n+        r\"../Windows/System32\",\n+        r\"....\\\\\",\n+        r\"\\\\?\\C:\\Windows\\System32\\\\\",\n+        r\"\\\\.\\C:\\Windows\\System32\\\\\",\n+        r\"\\\\UNC\\Server\\Share\\\\\",\n+        r\"\\\\Server\\Share\\folder\\\\\",\n+        r\"\\\\127.0.0.1\\c$\\Windows\\\\\",\n+        r\"\\\\localhost\\c$\\Windows\\\\\",\n+        r\"\\\\smbserver\\share\\path\\\\\",\n+        r\"..\\\\?\\C:\\Windows\\System32\\\\\",\n+        r\"C:/Windows/../Windows/System32/\",\n+        r\"C:\\Windows\\..\\Windows\\System32\\\\\",\n+        r\"../../../../../../../../../../../../Windows/System32\",\n+        r\"../../../../../../../../../../../../etc/passwd\",\n+        r\"../../../../../../../../../../../../var/www/html/index.html\",\n+        r\"../../../../../../../../../../../../usr/local/etc/openvpn/server.conf\",\n+        r\"../../../../../../../../../../../../Program Files (x86)\",\n+        r\"/../../../../../../../../../../../../Windows/System32\",\n+        r\"/Windows\\../etc/passwd\",\n+        r\"/Windows\\..\\Windows\\System32\\\\\",\n+        r\"/Windows\\..\\Windows\\System32\\cmd.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\msconfig.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\regedit.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\taskmgr.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\control.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\services.msc\",\n+        r\"/Windows\\..\\Windows\\System32\\diskmgmt.msc\",\n+        r\"/Windows\\..\\Windows\\System32\\eventvwr.msc\",\n+        r\"/Windows/System32/drivers/etc/hosts\",\n+    ],\n+)\n+def test_validate_path_is_safe_windows_bad(path):\n+    with pytest.raises(MlflowException, match=\"Invalid path\"):\n+        validate_path_is_safe(path)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 5,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ecbdd766af367b2f6a03a15eba937d13ea4f7c43",
            "date": "2025-01-14T11:54:46Z",
            "author_login": "dsuhinin"
          },
          {
            "sha": "49d28d67d9d25211d0b684ec9ad9c54670b3fee1",
            "date": "2025-01-14T10:10:09Z",
            "author_login": "mlflow-automation"
          },
          {
            "sha": "8778eedb11fbae7339c495634d65592a473118f8",
            "date": "2025-01-14T10:09:27Z",
            "author_login": "mlflow-automation"
          },
          {
            "sha": "8436d0b9db52152536930dee84bb5d1654964731",
            "date": "2025-01-14T09:29:15Z",
            "author_login": "B-Step62"
          },
          {
            "sha": "1ff5a0d5ba5e1f112513fb2edb0372387e5c407e",
            "date": "2025-01-14T08:32:07Z",
            "author_login": "TomeHirata"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-29",
    "description": "Path Traversal: '\\..\\filename' in GitHub repository mlflow/mlflow prior to 2.9.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2023-12-18T04:15:52.367",
    "last_modified": "2024-11-21T08:44:48.957",
    "fix_date": "2023-12-08T06:00:19Z"
  },
  "references": [
    {
      "url": "https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/11209efb-0f84-482f-add0-587ea6b7e850",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/11209efb-0f84-482f-add0-587ea6b7e850",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:41.583027",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mlflow",
    "owner": "mlflow",
    "created_at": "2018-06-05T16:05:58Z",
    "updated_at": "2025-01-14T14:06:06Z",
    "pushed_at": "2025-01-14T15:26:16Z",
    "size": 703840,
    "stars": 19235,
    "forks": 4317,
    "open_issues": 1689,
    "watchers": 19235,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "branch-0.5",
      "branch-0.7",
      "branch-0.8",
      "branch-0.9",
      "branch-0.9.1"
    ],
    "languages": {
      "Python": 12840682,
      "JavaScript": 9998107,
      "TypeScript": 3983905,
      "Java": 290984,
      "R": 211552,
      "Scala": 42315,
      "Shell": 28740,
      "HTML": 23632,
      "CSS": 18115,
      "Dockerfile": 1312,
      "Mako": 1004,
      "TSQL": 211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T15:33:00.445625"
  }
}