{
  "cve_id": "CVE-2024-0436",
  "github_data": {
    "repository": "mintplex-labs/anything-llm",
    "fix_commit": "3c859ba3038121b67fb98e87dc52617fa27cbef0",
    "related_commits": [
      "3c859ba3038121b67fb98e87dc52617fa27cbef0",
      "3c859ba3038121b67fb98e87dc52617fa27cbef0"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "3c859ba3038121b67fb98e87dc52617fa27cbef0",
      "commit_date": "2024-01-11T18:54:55Z",
      "author": {
        "login": "timothycarambat",
        "type": "User",
        "stats": {
          "total_commits": 928,
          "average_weekly_commits": 10.545454545454545,
          "total_additions": 195202,
          "total_deletions": 87044,
          "weeks_active": 82
        }
      },
      "commit_message": {
        "title": "Change pwd check to O(1) check to prevent timing attacks - single user mode (#575)",
        "length": 140,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 16,
        "deletions": 5
      },
      "files": [
        {
          "filename": "frontend/src/components/Modals/Password/index.jsx",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -37,7 +37,7 @@ export default function PasswordModal({ mode = \"single\" }) {\n export function usePasswordModal() {\n   const [auth, setAuth] = useState({\n     loading: true,\n-    required: false,\n+    requiresAuth: false,\n     mode: \"single\",\n   });\n "
        },
        {
          "filename": "frontend/src/pages/Login/index.jsx",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -1,9 +1,13 @@\n import React from \"react\";\n import PasswordModal, { usePasswordModal } from \"@/components/Modals/Password\";\n import { FullScreenLoader } from \"@/components/Preloader\";\n+import { Navigate } from \"react-router-dom\";\n+import paths from \"@/utils/paths\";\n \n export default function Login() {\n-  const { loading, mode } = usePasswordModal();\n+  const { loading, requiresAuth, mode } = usePasswordModal();\n   if (loading) return <FullScreenLoader />;\n+  if (requiresAuth === false) return <Navigate to={paths.home()} />;\n+\n   return <PasswordModal mode={mode} />;\n }"
        },
        {
          "filename": "server/endpoints/system.js",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -107,6 +107,8 @@ function systemEndpoints(app) {\n \n   app.post(\"/request-token\", async (request, response) => {\n     try {\n+      const bcrypt = require(\"bcrypt\");\n+\n       if (await SystemSettings.isMultiUserMode()) {\n         const { username, password } = reqBody(request);\n         const existingUser = await User.get({ username });\n@@ -121,7 +123,6 @@ function systemEndpoints(app) {\n           return;\n         }\n \n-        const bcrypt = require(\"bcrypt\");\n         if (!bcrypt.compareSync(password, existingUser.password)) {\n           response.status(200).json({\n             user: null,\n@@ -159,7 +160,12 @@ function systemEndpoints(app) {\n         return;\n       } else {\n         const { password } = reqBody(request);\n-        if (password !== process.env.AUTH_TOKEN) {\n+        if (\n+          !bcrypt.compareSync(\n+            password,\n+            bcrypt.hashSync(process.env.AUTH_TOKEN, 10)\n+          )\n+        ) {\n           response.status(401).json({\n             valid: false,\n             token: null,"
        },
        {
          "filename": "server/utils/middleware/validatedRequest.js",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -36,8 +36,9 @@ async function validatedRequest(request, response, next) {\n     return;\n   }\n \n+  const bcrypt = require(\"bcrypt\");\n   const { p } = decodeJWT(token);\n-  if (p !== process.env.AUTH_TOKEN) {\n+  if (!bcrypt.compareSync(p, bcrypt.hashSync(process.env.AUTH_TOKEN, 10))) {\n     response.status(401).json({\n       error: \"Invalid auth token found.\",\n     });"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "22d5891cccfc85c0e8fe6a3bc053445d1bce4cd6",
            "date": "2025-01-24T22:17:52Z",
            "author_login": "shatfield4"
          },
          {
            "sha": "2ca22abc9cb1736794d91989b408d95328ea2f79",
            "date": "2025-01-24T21:41:37Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "48dcb22b25612191aba79209fa3d5f08f2454f98",
            "date": "2025-01-24T19:06:59Z",
            "author_login": "shatfield4"
          },
          {
            "sha": "273d116586693d36366022da143c1159d3cd4ffc",
            "date": "2025-01-24T00:43:18Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "57f4f46a39b737f850ab5cf5ac5c24af2344a3b4",
            "date": "2025-01-24T00:35:38Z",
            "author_login": "shatfield4"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-764",
    "description": "Theoretically, it would be possible for an attacker to brute-force the password for an instance in single-user password protection mode via a timing attack given the linear nature of the `!==` used for comparison.\n\nThe risk is minified by the additional overhead of the request, which varies in a non-constant nature making the attack less reliable to execute ",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-02-26T16:27:50.283",
    "last_modified": "2024-11-21T08:46:35.243",
    "fix_date": "2024-01-11T18:54:55Z"
  },
  "references": [
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/3c859ba3038121b67fb98e87dc52617fa27cbef0",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/3e73cb96-c038-46a1-81b7-4d2215b36268",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/3c859ba3038121b67fb98e87dc52617fa27cbef0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/3e73cb96-c038-46a1-81b7-4d2215b36268",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.157697",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "anything-llm",
    "owner": "mintplex-labs",
    "created_at": "2023-06-04T02:29:14Z",
    "updated_at": "2025-01-26T07:34:32Z",
    "pushed_at": "2025-01-25T00:53:07Z",
    "size": 43115,
    "stars": 30921,
    "forks": 3104,
    "open_issues": 214,
    "watchers": 30921,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 3082811,
      "CSS": 73785,
      "Dockerfile": 9030,
      "HTML": 3904,
      "Shell": 1382,
      "HCL": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:35:14.537302"
  }
}