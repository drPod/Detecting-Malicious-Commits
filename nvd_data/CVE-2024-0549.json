{
  "cve_id": "CVE-2024-0549",
  "github_data": {
    "repository": "mintplex-labs/anything-llm",
    "fix_commit": "026849df0224b6a8754f4103530bc015874def62",
    "related_commits": [
      "026849df0224b6a8754f4103530bc015874def62",
      "026849df0224b6a8754f4103530bc015874def62"
    ],
    "patch_url": "https://github.com/mintplex-labs/anything-llm/commit/026849df0224b6a8754f4103530bc015874def62.patch",
    "fix_commit_details": {
      "sha": "026849df0224b6a8754f4103530bc015874def62",
      "commit_date": "2024-01-15T00:36:17Z",
      "author": {
        "login": "timothycarambat",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "normalize paths for submit URLs of  `remove-documents (#598)",
        "length": 93,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 69,
        "additions": 29,
        "deletions": 40
      },
      "files": [
        {
          "filename": "server/endpoints/system.js",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -1,7 +1,7 @@\n process.env.NODE_ENV === \"development\"\n   ? require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}` })\n   : require(\"dotenv\").config();\n-const { viewLocalFiles } = require(\"../utils/files\");\n+const { viewLocalFiles, normalizePath } = require(\"../utils/files\");\n const { exportData, unpackAndOverwriteImport } = require(\"../utils/files/data\");\n const {\n   checkProcessorAlive,\n@@ -401,9 +401,7 @@ function systemEndpoints(app) {\n \n   app.get(\"/system/data-exports/:filename\", (request, response) => {\n     const exportLocation = __dirname + \"/../storage/exports/\";\n-    const sanitized = path\n-      .normalize(request.params.filename)\n-      .replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n+    const sanitized = normalizePath(request.params.filename);\n     const finalDestination = path.join(exportLocation, sanitized);\n \n     if (!fs.existsSync(finalDestination)) {"
        },
        {
          "filename": "server/utils/files/index.js",
          "status": "modified",
          "additions": 24,
          "deletions": 32,
          "patch": "@@ -2,41 +2,22 @@ const fs = require(\"fs\");\n const path = require(\"path\");\n const { v5: uuidv5 } = require(\"uuid\");\n \n-async function collectDocumentData(folderName = null) {\n-  if (!folderName) throw new Error(\"No docPath provided in request\");\n-  const folder =\n-    process.env.NODE_ENV === \"development\"\n-      ? path.resolve(__dirname, `../../storage/documents/${folderName}`)\n-      : path.resolve(process.env.STORAGE_DIR, `documents/${folderName}`);\n-\n-  const dirExists = fs.existsSync(folder);\n-  if (!dirExists)\n-    throw new Error(\n-      `No documents folder for ${folderName} - did you run collector/main.py for this element?`\n-    );\n-\n-  const files = fs.readdirSync(folder);\n-  const fileData = [];\n-  files.forEach((file) => {\n-    if (path.extname(file) === \".json\") {\n-      const filePath = path.join(folder, file);\n-      const data = fs.readFileSync(filePath, \"utf8\");\n-      console.log(`Parsing document: ${file}`);\n-      fileData.push(JSON.parse(data));\n-    }\n-  });\n-  return fileData;\n-}\n-\n // Should take in a folder that is a subfolder of documents\n // eg: youtube-subject/video-123.json\n async function fileData(filePath = null) {\n   if (!filePath) throw new Error(\"No docPath provided in request\");\n \n   const fullPath =\n     process.env.NODE_ENV === \"development\"\n-      ? path.resolve(__dirname, `../../storage/documents/${filePath}`)\n-      : path.resolve(process.env.STORAGE_DIR, `documents/${filePath}`);\n+      ? path.resolve(\n+          __dirname,\n+          `../../storage/documents/${normalizePath(filePath)}`\n+        )\n+      : path.resolve(\n+          process.env.STORAGE_DIR,\n+          `documents/${normalizePath(filePath)}`\n+        );\n+\n   const fileExists = fs.existsSync(fullPath);\n   if (!fileExists) return null;\n \n@@ -142,11 +123,18 @@ async function storeVectorResult(vectorData = [], filename = null) {\n async function purgeSourceDocument(filename = null) {\n   if (!filename) return;\n   console.log(`Purging source document of ${filename}.`);\n-\n   const filePath =\n     process.env.NODE_ENV === \"development\"\n-      ? path.resolve(__dirname, `../../storage/documents`, filename)\n-      : path.resolve(process.env.STORAGE_DIR, `documents`, filename);\n+      ? path.resolve(\n+          __dirname,\n+          `../../storage/documents`,\n+          normalizePath(filename)\n+        )\n+      : path.resolve(\n+          process.env.STORAGE_DIR,\n+          `documents`,\n+          normalizePath(filename)\n+        );\n \n   if (!fs.existsSync(filePath)) return;\n   fs.rmSync(filePath);\n@@ -169,12 +157,16 @@ async function purgeVectorCache(filename = null) {\n   return;\n }\n \n+function normalizePath(filepath = \"\") {\n+  return path.normalize(filepath).replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n+}\n+\n module.exports = {\n   cachedVectorInformation,\n-  collectDocumentData,\n   viewLocalFiles,\n   purgeSourceDocument,\n   purgeVectorCache,\n   storeVectorResult,\n   fileData,\n+  normalizePath,\n };"
        },
        {
          "filename": "server/utils/files/purgeDocument.js",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -1,7 +1,6 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n-\n-const { purgeVectorCache, purgeSourceDocument } = require(\".\");\n+const { purgeVectorCache, purgeSourceDocument, normalizePath } = require(\".\");\n const { Document } = require(\"../../models/documents\");\n const { Workspace } = require(\"../../models/workspace\");\n \n@@ -22,10 +21,10 @@ async function purgeFolder(folderName) {\n       ? path.resolve(__dirname, `../../storage/documents`)\n       : path.resolve(process.env.STORAGE_DIR, `documents`);\n \n-  const folderPath = path.resolve(documentsFolder, folderName);\n+  const folderPath = path.resolve(documentsFolder, normalizePath(folderName));\n   const filenames = fs\n     .readdirSync(folderPath)\n-    .map((file) => path.join(folderName, file));\n+    .map((file) => path.join(folderPath, file));\n   const workspaces = await Workspace.where();\n \n   const purgePromises = [];"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4d5d8d4dec0e62662c8ec46537038353f45e0e66",
            "date": "2025-01-14T16:20:57Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "21af81085aeb049750942ac5f3b84775cb461693",
            "date": "2025-01-13T21:12:03Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "665e8e5bfe431ad93bed6736d0b450592617d042",
            "date": "2025-01-09T23:39:56Z",
            "author_login": "shatfield4"
          },
          {
            "sha": "865f7eea296e544b2eb1ab8c1f322208eaf5eb05",
            "date": "2025-01-09T21:32:54Z",
            "author_login": "timothycarambat"
          },
          {
            "sha": "be886f7d61296a30d5b8a095ca8329f58a0c5a0a",
            "date": "2025-01-09T01:21:30Z",
            "author_login": "root-reindeer-flotilla"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-23",
    "description": "mintplex-labs/anything-llm is vulnerable to a relative path traversal attack, allowing unauthorized attackers with a default role account to delete files and folders within the filesystem, including critical database files such as 'anythingllm.db'. The vulnerability stems from insufficient input validation and normalization in the handling of file and folder deletion requests. Successful exploitation results in the compromise of data integrity and availability.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-04-16T00:15:07.603",
    "last_modified": "2024-11-21T08:46:50.990",
    "fix_date": "2024-01-15T00:36:17Z"
  },
  "references": [
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/026849df0224b6a8754f4103530bc015874def62",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/fcb4001e-0290-4b78-a2f0-91ee5d20cc72",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/mintplex-labs/anything-llm/commit/026849df0224b6a8754f4103530bc015874def62",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/fcb4001e-0290-4b78-a2f0-91ee5d20cc72",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.490511",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "anything-llm",
    "owner": "mintplex-labs",
    "created_at": "2023-06-04T02:29:14Z",
    "updated_at": "2025-01-14T13:49:57Z",
    "pushed_at": "2025-01-13T21:12:06Z",
    "size": 42916,
    "stars": 30237,
    "forks": 3030,
    "open_issues": 206,
    "watchers": 30237,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 3056909,
      "CSS": 73785,
      "Dockerfile": 9030,
      "HTML": 3904,
      "Shell": 1382,
      "HCL": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:04:33.088245"
  }
}