{
  "cve_id": "CVE-2024-1569",
  "github_data": {
    "repository": "parisneo/lollms-webui",
    "fix_commit": "354cf766835396b7fc0d5105ed3b77572a653149",
    "related_commits": [
      "354cf766835396b7fc0d5105ed3b77572a653149",
      "354cf766835396b7fc0d5105ed3b77572a653149"
    ],
    "patch_url": "https://github.com/parisneo/lollms-webui/commit/354cf766835396b7fc0d5105ed3b77572a653149.patch",
    "fix_commit_details": {
      "sha": "354cf766835396b7fc0d5105ed3b77572a653149",
      "commit_date": "2024-02-15T20:47:24Z",
      "author": {
        "login": "ParisNeo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fixed service denial exploit",
        "length": 28,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 50,
        "deletions": 0
      },
      "files": [
        {
          "filename": "endpoints/lollms_advanced.py",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -155,6 +155,11 @@ async def open_code_folder_in_vs_code(request: OpenCodeFolderInVsCodeRequestMode\n     :param request: The HTTP request object.\n     :return: A JSON response with the status of the operation.\n     \"\"\"\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Open code folder in vscode is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Open code folder in vscode is blocked when the server is exposed outside for very obvious reasons!\"}\n \n     try:\n         if request.discussion_id:        \n@@ -192,6 +197,11 @@ async def open_file(file_path: FilePath):\n     :param file_path: The file path object.\n     :return: A JSON response with the status of the operation.\n     \"\"\"\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Open file is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Open file is blocked when the server is exposed outside for very obvious reasons!\"}\n \n     try:\n         # Validate the 'path' parameter\n@@ -225,6 +235,11 @@ async def open_code_in_vs_code(vs_code_data: VSCodeData):\n     :param vs_code_data: The data object.\n     :return: A JSON response with the status of the operation.\n     \"\"\"\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Open code in vs code is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Open code in vs code is blocked when the server is exposed outside for very obvious reasons!\"}\n \n     try:\n         discussion_id = vs_code_data.discussion_id\n@@ -260,6 +275,11 @@ async def open_code_folder(request: FolderRequest):\n     :param request: The HTTP request object.\n     :return: A JSON response with the status of the operation.\n     \"\"\"\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Open code folder is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Open code folder is blocked when the server is exposed outside for very obvious reasons!\"}\n     \n     try:\n         if request.discussion_id:\n@@ -303,6 +323,12 @@ async def open_code_folder(request: FolderRequest):\n \n @router.get(\"/start_recording\")\n def start_recording():\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Start recording is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Start recording is blocked when the server is exposed outside for very obvious reasons!\"}\n+\n     lollmsElfServer.info(\"Starting audio capture\")\n     try:\n         from lollms.media import AudioRecorder\n@@ -317,6 +343,12 @@ def start_recording():\n \n @router.get(\"/stop_recording\")\n def stop_recording():\n+    if lollmsElfServer.config.headless_server_mode:\n+        return {\"status\":False,\"error\":\"Stop recording is blocked when in headless mode for obvious security reasons!\"}\n+\n+    if lollmsElfServer.config.host==\"0.0.0.0\":\n+        return {\"status\":False,\"error\":\"Stop recording is blocked when the server is exposed outside for very obvious reasons!\"}\n+\n     lollmsElfServer.info(\"Stopping audio capture\")\n     text = lollmsElfServer.audio_cap.stop_recording()\n     return text"
        },
        {
          "filename": "tests/pentests/service_denial/test_service_denial.py",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+'''\n+This python script is performing a Denial of Service (DoS) attack on your endpoint.\n+It is creating a large number of requests (1000 in this case) to the '/open_code_folder' API endpoint of your server.\n+This could potentially overload your server, making it unable to serve normal, legitimate requests.\n+\n+Please make sure you test this only on a virtual machine since it can overload your own PC and crush it\n+'''\n+import requests\n+\n+IP_ADDRESS = \"localhost\"\n+PORT = 9600\n+\n+for i in range(1000):\n+    data = {\n+        \"discussion_id\":f\"{i}\",\n+    }\n+    response = requests.post(f\"http://{IP_ADDRESS}:{str(PORT)}/open_code_folder\", json=data)\n+    print(i, response.json())\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "074fbb5988845100e16e33abe200c6fb0906ee49",
            "date": "2025-01-14T17:11:50Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "15b0e5ee7d3fdcec02e74e6ffceb09ddc44b7264",
            "date": "2025-01-14T17:11:41Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "78b7303da280e81d7891d022430c9e7019036409",
            "date": "2025-01-14T08:22:08Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "858e69c34a9f91c02d64f4736c2c61032a930ef5",
            "date": "2025-01-14T07:56:40Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "953879e8b018a8602bd142844c1d7f008e8ab01c",
            "date": "2025-01-13T22:54:09Z",
            "author_login": "ParisNeo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-400",
    "description": "parisneo/lollms-webui is vulnerable to a denial of service (DoS) attack due to uncontrolled resource consumption. Attackers can exploit the `/open_code_in_vs_code` and similar endpoints without authentication by sending repeated HTTP POST requests, leading to the opening of Visual Studio Code or the default folder opener (e.g., File Explorer, xdg-open) multiple times. This can render the host machine unusable by exhausting system resources. The vulnerability is present in the latest version of the software.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-04-16T00:15:09.060",
    "last_modified": "2024-11-21T08:50:51.360",
    "fix_date": "2024-02-15T20:47:24Z"
  },
  "references": [
    {
      "url": "https://github.com/parisneo/lollms-webui/commit/354cf766835396b7fc0d5105ed3b77572a653149",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/369d1694-47e4-49bc-bb35-931ce4a5148e",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/parisneo/lollms-webui/commit/354cf766835396b7fc0d5105ed3b77572a653149",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/369d1694-47e4-49bc-bb35-931ce4a5148e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.490954",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lollms-webui",
    "owner": "parisneo",
    "created_at": "2023-04-06T16:38:00Z",
    "updated_at": "2025-01-14T10:08:17Z",
    "pushed_at": "2025-01-14T08:22:08Z",
    "size": 154737,
    "stars": 4437,
    "forks": 557,
    "open_issues": 162,
    "watchers": 4437,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "CSS": 2202947,
      "Vue": 1151251,
      "Python": 353630,
      "JavaScript": 179164,
      "Shell": 41865,
      "Batchfile": 30713,
      "Inno Setup": 27460,
      "HTML": 22305,
      "Jupyter Notebook": 3623,
      "Dockerfile": 1246
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:52:33.568829"
  }
}