{
  "cve_id": "CVE-2024-1643",
  "github_data": {
    "repository": "lunary-ai/lunary",
    "fix_commit": "67eaefe1c77c882c628780940c704a117b561d51",
    "related_commits": [
      "67eaefe1c77c882c628780940c704a117b561d51",
      "67eaefe1c77c882c628780940c704a117b561d51"
    ],
    "patch_url": "https://github.com/lunary-ai/lunary/commit/67eaefe1c77c882c628780940c704a117b561d51.patch",
    "fix_commit_details": {
      "sha": "67eaefe1c77c882c628780940c704a117b561d51",
      "commit_date": "2024-03-25T17:05:24Z",
      "author": {
        "login": "hughcrt",
        "type": "User",
        "stats": {
          "total_commits": 819,
          "average_weekly_commits": 9.202247191011235,
          "total_additions": 146326,
          "total_deletions": 109724,
          "weeks_active": 64
        }
      },
      "commit_message": {
        "title": "feat: join improvements (#149)",
        "length": 341,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 1117,
        "additions": 523,
        "deletions": 594
      },
      "files": [
        {
          "filename": ".github/workflows/test-build-deploy.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -16,7 +16,7 @@ jobs:\n   #       env:\n   #         DATABASE_URL: ${{ secrets.DATABASE_URL }}\n   #         JWT_SECRET: ${{ secrets.JWT_SECRET }}\n-  #         NEXT_PUBLIC_APP_URL: http://localhost:8080\n+  #         APP_URL: http://localhost:8080\n   #         API_URL: http://localhost:3333\n   #         LUNARY_PUBLIC_KEY: 259d2d94-9446-478a-ae04-484de705b522\n   #         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}"
        },
        {
          "filename": ".gitignore",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -200,8 +200,8 @@ entrypoint.sh\n \n \n # Python\n-.venv\n+venv\n __pycache__/\n *.pyc\n-\n+venv\n test_*.py\n\\ No newline at end of file"
        },
        {
          "filename": "CONTRIBUTING.md",
          "status": "modified",
          "additions": 19,
          "deletions": 2,
          "patch": "@@ -6,6 +6,23 @@\n 4. Copy the content of `packages/backend/.env.example` to `packages/backend/.env` and fill the missing values\n 5. Copy the content of `packages/frontend/.env.example` to `packages/backend/.env`\n 6. Run `npm install`\n-7. Run `npm run dev`\n+7. Run `npm run migrate:db`\n+8. Run `npm run dev`\n \n-You can now open the dashboard at `http://localhost:8080`. When using our JS or Python SDK, you need to set the ennvironment variable `LUNARY_API_URL` to `http://localhost:3333`.\n+You can now open the dashboard at `http://localhost:8080`. When using our JS or Python SDK, you need to set the environment variable `LUNARY_API_URL` to `http://localhost:3333`.\n+\n+## Contributing Guidelines\n+\n+We welcome contributions to this project!\n+\n+When contributing, please follow these guidelines:\n+\n+- Before starting work on a new feature or bug fix, open an issue to discuss the proposed changes. This allows for coordination and avoids duplication of effort.\n+- Fork the repository and create a new branch for your changes. Use a descriptive branch name that reflects the purpose of your changes.\n+- Write clear, concise commit messages that describe the purpose of each commit.\n+- Make sure to update any relevant documentation, including README files and code comments.\n+- Make sure all tests pass before submitting a pull request.\n+- When submitting a pull request, provide a detailed description of your changes and reference any related issues.\n+- Be responsive to feedback and be willing to make changes to your pull request if requested.\n+\n+Thank you for your contributions!"
        },
        {
          "filename": "ops",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1 +1 @@\n-Subproject commit c03dfdb96464eb6d4894448dc308d84c48649472\n+Subproject commit 8c08efc66fb13988c9d96da7e7066a8d6d564071"
        },
        {
          "filename": "package-lock.json",
          "status": "modified",
          "additions": 4,
          "deletions": 18,
          "patch": "@@ -4193,19 +4193,6 @@\n         }\n       }\n     },\n-    \"node_modules/next-plausible\": {\n-      \"version\": \"3.12.0\",\n-      \"resolved\": \"https://registry.npmjs.org/next-plausible/-/next-plausible-3.12.0.tgz\",\n-      \"integrity\": \"sha512-SSkEqKQ6PgR8fx3sYfIAT69k2xuCUXO5ngkSS19CjxY97lAoZxsfZpYednxB4zo0mHYv87JzhPynrdBPlCBVHg==\",\n-      \"funding\": {\n-        \"url\": \"https://github.com/4lejandrito/next-plausible?sponsor=1\"\n-      },\n-      \"peerDependencies\": {\n-        \"next\": \"^11.1.0 || ^12.0.0 || ^13.0.0 || ^14.0.0\",\n-        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\",\n-        \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n-      }\n-    },\n     \"node_modules/next-seo\": {\n       \"version\": \"6.5.0\",\n       \"resolved\": \"https://registry.npmjs.org/next-seo/-/next-seo-6.5.0.tgz\",\n@@ -6823,13 +6810,11 @@\n         \"@tanstack/react-virtual\": \"3.0.0-alpha.0\",\n         \"bcrypt\": \"^5.1.1\",\n         \"crisp-sdk-web\": \"^1.0.21\",\n-        \"date-fns\": \"^3.3.1\",\n+        \"date-fns\": \"^3.6.0\",\n         \"jose\": \"^5.2.0\",\n         \"jsonrepair\": \"^3.5.1\",\n         \"next\": \"^14.1.0\",\n-        \"next-plausible\": \"^3.12.0\",\n         \"next-seo\": \"^6.4.0\",\n-        \"postgres\": \"^3.4.3\",\n         \"posthog-js\": \"^1.103.1\",\n         \"random-word-slugs\": \"^0.1.7\",\n         \"react\": \"18.2.0\",\n@@ -6859,8 +6844,9 @@\n       }\n     },\n     \"packages/frontend/node_modules/date-fns\": {\n-      \"version\": \"3.3.1\",\n-      \"license\": \"MIT\",\n+      \"version\": \"3.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgz\",\n+      \"integrity\": \"sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==\",\n       \"funding\": {\n         \"type\": \"github\",\n         \"url\": \"https://github.com/sponsors/kossnocorp\""
        },
        {
          "filename": "packages/backend/.env.example",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -1,10 +1,9 @@\n DATABASE_URL=\"postgresql://postgres:password@your-host:5432/postgres\"\n JWT_SECRET=yoursupersecret\n-NEXT_PUBLIC_APP_URL=http://localhost:8080\n-SKIP_EMAIL_VERIFY=true\n+APP_URL=http://localhost:8080\n \n \n-# optionnal (for the playground, evaluation and radar features)\n+# optional (for the playground, evaluation and radar features)\n LUNARY_PUBLIC_KEY=259d2d94-9446-478a-ae04-484de705b522 \n OPENAI_API_KEY=sk-...\n OPENROUTER_API_KEY=sk-..."
        },
        {
          "filename": "packages/backend/src/api/v1/auth/index.ts",
          "status": "modified",
          "additions": 32,
          "deletions": 23,
          "patch": "@@ -46,13 +46,14 @@ auth.post(\"/method\", async (ctx: Context) => {\n auth.post(\"/signup\", async (ctx: Context) => {\n   const bodySchema = z.object({\n     email: z.string().email().transform(sanitizeEmail),\n-    password: z.string().min(6),\n+    password: z.string().min(6).optional(), // optional if SAML flow\n     name: z.string(),\n     orgName: z.string().optional(),\n     projectName: z.string().optional(),\n     employeeCount: z.string().optional(),\n     orgId: z.string().optional(),\n     token: z.string().optional(),\n+    redirectUrl: z.string().optional(),\n     signupMethod: z.enum([\"signup\", \"join\"]),\n   })\n \n@@ -65,30 +66,41 @@ auth.post(\"/signup\", async (ctx: Context) => {\n     employeeCount,\n     orgId,\n     signupMethod,\n+    redirectUrl,\n     token,\n   } = bodySchema.parse(ctx.request.body)\n \n+  // Spamming hotfix\n   if (orgName?.includes(\"https://\") || name.includes(\"http://\")) {\n     ctx.throw(403, \"Bad request\")\n   }\n \n-  const [existingUser] = await sql`\n-    select * from account where lower(email) = lower(${email})\n-  `\n   if (signupMethod === \"signup\") {\n     const { user, org } = await sql.begin(async (sql) => {\n       const plan = process.env.DEFAULT_PLAN || \"free\"\n \n+      const [existingUser] = await sql`\n+        select * from account where lower(email) = lower(${email})\n+      `\n+\n+      if (!password) {\n+        ctx.throw(403, \"Password is required\")\n+      }\n+\n+      if (existingUser) {\n+        ctx.throw(403, \"User already exists\")\n+      }\n+\n       const [org] =\n         await sql`insert into org ${sql({ name: orgName || `${name}'s Org`, plan })} returning *`\n \n       const newUser = {\n         name,\n-        passwordHash: await hashPassword(password),\n+        passwordHash: await hashPassword(password!),\n         email,\n         orgId: org.id,\n         role: \"owner\",\n-        verified: process.env.SKIP_EMAIL_VERIFY ? true : false,\n+        verified: !process.env.RESEND_KEY ? true : false,\n         lastLoginAt: new Date(),\n       }\n \n@@ -114,7 +126,7 @@ auth.post(\"/signup\", async (ctx: Context) => {\n         projectId: project.id,\n         apiKey: project.id,\n       }\n-      sql`\n+      await sql`\n         insert into api_key ${sql(publicKey)}\n       `\n       const privateKey = [\n@@ -151,25 +163,24 @@ auth.post(\"/signup\", async (ctx: Context) => {\n     return\n   } else if (signupMethod === \"join\") {\n     const { payload } = await verifyJwt(token!)\n+\n     if (payload.email !== email) {\n-      ctx.throw(403, \"Wrong email\")\n+      ctx.throw(403, \"Invalid token\")\n     }\n \n-    const newUser = {\n+    const update = {\n       name,\n-      passwordHash: await hashPassword(password),\n-      email,\n-      orgId,\n-      role: \"member\",\n       verified: true,\n+      singleUseToken: null,\n+    }\n+\n+    if (password) {\n+      update.passwordHash = await hashPassword(password)\n     }\n-    const [user] = await sql`\n-        update account set \n-          name = ${newUser.name},\n-          password_hash = ${newUser.passwordHash}, \n-          verified = true, \n-          single_use_token = null\n-        where email = ${newUser.email} \n+\n+    await sql`\n+        update account set ${sql(update)}\n+        where email = ${email} and org_id = ${orgId!}\n         returning *\n      `\n \n@@ -189,8 +200,6 @@ auth.get(\"/join-data\", async (ctx: Context) => {\n     select name, plan from org where id = ${orgId}\n   `\n \n-  console.log(org)\n-\n   const [orgUserCountResult] = await sql`\n     select count(*) from account where org_id = ${orgId}\n   `\n@@ -272,7 +281,7 @@ auth.post(\"/request-password-reset\", async (ctx: Context) => {\n \n     await sql`update account set recovery_token = ${token} where id = ${user.id}`\n \n-    const link = `${process.env.NEXT_PUBLIC_APP_URL}/reset-password?token=${token}`\n+    const link = `${process.env.APP_URL}/reset-password?token=${token}`\n \n     await sendEmail(RESET_PASSWORD(email, link))\n "
        },
        {
          "filename": "packages/backend/src/api/v1/auth/saml.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 8,
          "patch": "@@ -15,8 +15,6 @@ const route = new Router({\n   prefix: \"/saml/:orgId\",\n })\n \n-const BASE_URL = process.env.SAML_BASE_URL || process.env.API_URL\n-\n // This function generates a secure, one-time-use token\n export async function generateOneTimeToken(): Promise<string> {\n   // Generate a 32-byte random buffer\n@@ -37,9 +35,9 @@ function getSpMetadata(orgId: string) {\n   return `<?xml version=\"1.0\"?>\n <EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" entityID=\"${process.env.SAML_ENTITY_ID || \"urn:lunary.ai:saml:sp\"}\">\n     <SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n-        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"${BASE_URL}/auth/saml/${orgId}/slo\" />\n+        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"${process.env.API_URL}/auth/saml/${orgId}/slo\" />\n         <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>\n-        <AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"${BASE_URL}/auth/saml/${orgId}/acs\" index=\"1\" />\n+        <AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"${process.env.API_URL}/auth/saml/${orgId}/acs\" index=\"1\" />\n     </SPSSODescriptor>\n     <Organization>\n         <OrganizationName xml:lang=\"en-US\">Lunary LLC</OrganizationName>\n@@ -94,7 +92,7 @@ function parseAttributes(attributes: any) {\n route.get(\"/success\", async (ctx: Context) => {\n   const { orgId } = ctx.params as { orgId: string }\n \n-  ctx.redirect(process.env.NEXT_PUBLIC_APP_URL!)\n+  ctx.redirect(process.env.APP_URL!)\n })\n \n // Returns the Service Provider metadata\n@@ -116,6 +114,7 @@ route.post(\"/download-idp-xml\", async (ctx: Context) => {\n \n   await sql`update org set saml_idp_xml = ${xml} where id = ${orgId}`\n \n+  ctx.body = { success: true }\n   ctx.status = 201\n })\n \n@@ -146,10 +145,10 @@ route.post(\"/acs\", async (ctx: Context) => {\n \n   const { email, name } = parseAttributes(attributes)\n \n-  const onetimeToken = await generateOneTimeToken()\n+  const singleUseToken = await generateOneTimeToken()\n \n   const [account] =\n-    await sql`update account set ${sql({ name, onetimeToken, lastLoginAt: new Date() })} where email = ${email} and org_id = ${orgId} returning *`\n+    await sql`update account set ${sql({ name, singleUseToken, lastLoginAt: new Date() })} where email = ${email} and org_id = ${orgId} returning *`\n \n   if (!account) {\n     ctx.throw(\n@@ -159,7 +158,7 @@ route.post(\"/acs\", async (ctx: Context) => {\n   }\n \n   // Redirect with an one-time token that can be exchanged for an auth token\n-  ctx.redirect(`${process.env.NEXT_PUBLIC_APP_URL!}/login?ott=${onetimeToken}`)\n+  ctx.redirect(`${process.env.APP_URL!}/login?ott=${singleUseToken}`)\n })\n \n route.post(\"/slo\", async (ctx: Context) => {"
        },
        {
          "filename": "packages/backend/src/api/v1/orgs.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -94,7 +94,7 @@ orgs.get(\"/billing-portal\", async (ctx: Context) => {\n \n   const session = await stripe.billingPortal.sessions.create({\n     customer: org.stripeCustomer,\n-    return_url: `${process.env.NEXT_PUBLIC_APP_URL}/billing`,\n+    return_url: `${process.env.APP_URL}/billing`,\n   })\n \n   ctx.body = { url: session.url }"
        },
        {
          "filename": "packages/backend/src/api/v1/users.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -113,7 +113,7 @@ users.get(\"/verify-email\", async (ctx: Context) => {\n \n   await sendEmail(WELCOME_EMAIL(email, name, id))\n   // redirect to home page\n-  ctx.redirect(process.env.NEXT_PUBLIC_APP_URL!)\n+  ctx.redirect(process.env.APP_URL!)\n })\n \n users.post(\"/send-verification\", async (ctx: Context) => {\n@@ -205,7 +205,7 @@ users.post(\"/\", checkAccess(\"teamMembers\", \"create\"), async (ctx: Context) => {\n   `\n \n   if (!org.samlEnabled) {\n-    const link = `${process.env.NEXT_PUBLIC_APP_URL}/join?token=${token}`\n+    const link = `${process.env.APP_URL}/join?token=${token}`\n     await sendEmail(INVITE_EMAIL(email, org.name, link))\n   }\n "
        },
        {
          "filename": "packages/backend/src/checks/ai/ner.ts",
          "status": "removed",
          "additions": 0,
          "deletions": 67,
          "patch": "@@ -1,67 +0,0 @@\n-// import { pipeline } from \"@xenova/transformers\"\n-\n-// let nerPipeline: any = null\n-// let loading = false\n-\n-// type Output = {\n-//   entity: string\n-//   score: number\n-//   index: number\n-//   word: string\n-//   start: null\n-//   end: null\n-// }[]\n-\n-// type Entities = {\n-//   per: string[]\n-//   loc: string[]\n-//   org: string[]\n-// }\n-\n-// export default async function aiNER(sentence?: string): Promise<Entities> {\n-//   const entities: Entities = { per: [], loc: [], org: [] }\n-\n-//   if (!sentence) return { per: [], loc: [], org: [] }\n-\n-//   if (!nerPipeline) {\n-//     // this prevents multiple loading of the pipeline simultaneously which causes extreme lag\n-//     if (loading) {\n-//       await new Promise((resolve) => setTimeout(resolve, 500))\n-//       return aiNER(sentence)\n-//     }\n-\n-//     loading = true\n-//     nerPipeline = await pipeline(\n-//       \"ner\",\n-//       \"Xenova/bert-base-multilingual-cased-ner-hrl\",\n-//     )\n-//     loading = false\n-//   }\n-\n-//   const output: Output = await nerPipeline(sentence)\n-\n-//   let currentEntity = { name: \"\", score: 0, type: \"\" }\n-\n-//   output.forEach((word) => {\n-//     const entityType = word.entity.split(\"-\")[1]\n-//     if (word.entity.startsWith(\"B-\")) {\n-//       if (currentEntity.score > 0.5) {\n-//         entities[currentEntity.type.toLowerCase()].push(\n-//           currentEntity.name.trim(),\n-//         )\n-//       }\n-//       currentEntity = { name: word.word, score: word.score, type: entityType }\n-//     } else if (currentEntity.type === entityType) {\n-//       currentEntity.name += word.word.includes(\"##\")\n-//         ? word.word.replace(\"##\", \"\")\n-//         : \" \" + word.word\n-//       currentEntity.score *= word.score\n-//     }\n-//   })\n-\n-//   if (currentEntity.score > 0.5) {\n-//     entities[currentEntity.type.toLowerCase()].push(currentEntity.name.trim())\n-//   }\n-\n-//   return entities\n-// }"
        },
        {
          "filename": "packages/backend/src/checks/ai/toxic.ts",
          "status": "removed",
          "additions": 0,
          "deletions": 86,
          "patch": "@@ -1,86 +0,0 @@\n-// import { pipeline } from \"@xenova/transformers\"\n-\n-// // One of the only libraries that supports multiple languages\n-// import badWords from \"washyourmouthoutwithsoap/data/build.json\"\n-// import badWordsEnExtended from \"washyourmouthoutwithsoap/data/_en.json\"\n-\n-// // extend with more words\n-// badWords.en = [...badWords.en, ...Object.keys(badWordsEnExtended)]\n-// const allWords = Object.values(badWords).flat()\n-\n-// let nerPipeline: any = null\n-// let loading = false\n-\n-// type Output = {\n-//   label: string\n-//   score: number\n-// }[]\n-\n-// const profanityListCheck = (text: string) => {\n-//   const words = []\n-\n-//   const clean = (text: string) => text.replace(/[^a-zA-Z ]/g, \"\").toLowerCase()\n-//   const tokenize = (text: string) => {\n-//     const withPunctuation = text.replace(\"/ {2,}/\", \" \").split(\" \")\n-//     const withoutPunctuation = text\n-//       .replace(/[^\\w\\s]/g, \"\")\n-//       .replace(\"/ {2,}/\", \" \")\n-//       .split(\" \")\n-\n-//     return (\n-//       withPunctuation\n-//         .concat(withoutPunctuation)\n-//         // otherwise some false positives with short words\n-//         .filter((w) => w.length > 3)\n-//     )\n-//   }\n-\n-//   // Clean and tokenize user input\n-//   const tokens = tokenize(clean(text))\n-\n-//   // Check against list\n-//   for (let i in tokens) {\n-//     if (allWords.indexOf(tokens[i]) !== -1) words.push(tokens[i])\n-//   }\n-\n-//   return [...new Set(words)] // remove duplicates\n-// }\n-\n-// async function aiToxicity(sentences?: string[]): Promise<string[]> {\n-//   if (!sentences) return []\n-\n-//   const cleaned = sentences.filter((s) => s && s.length > 3)\n-//   if (!cleaned?.length) return []\n-\n-//   // check for profanity, more efficient in some cases\n-//   const badWords = profanityListCheck(cleaned.join(\" \"))\n-//   if (badWords.length) return badWords\n-\n-//   if (!nerPipeline) {\n-//     // this prevents multiple loading of the pipeline simultaneously which causes extreme lag\n-//     if (loading) {\n-//       await new Promise((resolve) => setTimeout(resolve, 500))\n-//       return aiToxicity(sentences)\n-//     }\n-\n-//     loading = true\n-//     nerPipeline = await pipeline(\"text-classification\", \"Xenova/toxic-bert\")\n-//     loading = false\n-//   }\n-\n-//   const output: Output = await nerPipeline(cleaned, { topk: null })\n-\n-//   // remove duplicates and filter out low scores\n-//   const result = [\n-//     ...new Set(\n-//       output\n-//         .flat()\n-//         .filter((l) => l.score > 0.8)\n-//         .map((l) => l.label),\n-//     ),\n-//   ]\n-\n-//   return result\n-// }\n-\n-// export default aiToxicity"
        },
        {
          "filename": "packages/backend/src/utils/emails.ts",
          "status": "modified",
          "additions": 11,
          "deletions": 7,
          "patch": "@@ -7,10 +7,6 @@ function extractFirstName(name: string) {\n }\n \n export async function sendVerifyEmail(email: string, name: string) {\n-  if (process.env.SKIP_EMAIL_VERIFY) {\n-    return\n-  }\n-\n   const token = await signJwt({ email })\n \n   const confirmLink = `${process.env.API_URL}/v1/users/verify-email?token=${token}`\n@@ -25,11 +21,19 @@ export function INVITE_EMAIL(email: string, orgName: string, link: string) {\n     reply_to: \"hello@lunary.ai\",\n     from: process.env.GENERIC_SENDER,\n     text: `Hi, \n-You've been invited to join ${orgName} on Lunary. Please use the following link to accept the invitation: ${link}\n+\n+You've been invited to join ${orgName} on Lunary. \n+\n+Please click on the following link to accept the invitation: \n+\n+${link}\n+\n We're looking forward to having you on board!\n \n-Best,\n-The Lunary Team`,\n+You can reply to this email if you have any question.\n+\n+Thanks\n+- The Lunary team`,\n   }\n }\n "
        },
        {
          "filename": "packages/backend/src/utils/ml.ts",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -1,6 +1,9 @@\n export async function callML(method: string, data: any) {\n   const response = await fetch(`http://localhost:4242/${method}`, {\n     method: \"POST\",\n+    // For example at the first ML calls, it needs to DL the models, so it can take a while\n+    // So add timeout\n+    signal: AbortSignal.timeout(5000),\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },"
        },
        {
          "filename": "packages/db/0006.sql",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,4 +1,5 @@\n alter table account add column if not exists single_use_token text;\n+\n create table if not exists account_project (\n     account_id uuid references account(id) on delete cascade,\n     project_id uuid references project(id) on delete cascade,"
        },
        {
          "filename": "packages/frontend/components/blocks/CopyText.tsx",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -1,4 +1,11 @@\n-import { ActionIcon, Code, CopyButton, Group, Tooltip } from \"@mantine/core\"\n+import {\n+  ActionIcon,\n+  Code,\n+  CopyButton,\n+  Group,\n+  Input,\n+  Tooltip,\n+} from \"@mantine/core\"\n import { IconCheck, IconCopy } from \"@tabler/icons-react\"\n \n export const SuperCopyButton = ({ value }) => (\n@@ -27,3 +34,13 @@ export default function CopyText({ c = \"violet\", value }) {\n     </Group>\n   )\n }\n+\n+export const CopyInput = ({ value, ...props }) => (\n+  <Input\n+    value={value}\n+    styles={{ input: { contentEditable: false } }}\n+    rightSectionPointerEvents=\"all\"\n+    rightSection={<SuperCopyButton value={value} />}\n+    {...props}\n+  />\n+)"
        },
        {
          "filename": "packages/frontend/components/blocks/SettingsCard.tsx",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -0,0 +1,23 @@\n+import { Card, Stack, Title } from \"@mantine/core\"\n+\n+// so we can have an harmonized title for all cards\n+export function SettingsCard({\n+  title,\n+  children,\n+  align,\n+  gap = \"lg\",\n+}: {\n+  title\n+  children: React.ReactNode\n+  align?: string\n+  gap?: string\n+}) {\n+  return (\n+    <Card withBorder p=\"lg\" style={{ overflow: \"visible\" }}>\n+      <Stack gap={gap} align={align}>\n+        <Title order={4}>{title}</Title>\n+        {children}\n+      </Stack>\n+    </Card>\n+  )\n+}"
        },
        {
          "filename": "packages/frontend/components/blocks/SocialProof.tsx",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -22,7 +22,7 @@ export default function SocialProof() {\n             span\n             fw=\"bolder\"\n           >\n-            1000+\n+            1500+\n           </Text>{\" \"}\n           AI devs build better apps\n         </Text>"
        },
        {
          "filename": "packages/frontend/components/layout/Analytics.tsx",
          "status": "modified",
          "additions": 17,
          "deletions": 26,
          "patch": "@@ -3,7 +3,7 @@ import { useEffect, Component } from \"react\"\n import Script from \"next/script\"\n \n import { PostHogProvider } from \"posthog-js/react\"\n-import PlausibleProvider from \"next-plausible\"\n+\n import posthog from \"posthog-js\"\n \n import analytics from \"@/utils/analytics\"\n@@ -37,32 +37,23 @@ export default function AnalyticsWrapper({ children }) {\n   return (\n     <>\n       {process.env.NEXT_PUBLIC_CRISP_ID && <CrispChat />}\n-      <PlausibleProvider\n-        domain=\"app.lunary.ai,rollup.lunary.ai\"\n-        scriptProps={{\n-          src: \"https://www.lunary.ai/p/js/script.js\",\n-          // @ts-ignore\n-          \"data-api\": \"https://www.lunary.ai/p/event\",\n-        }}\n-        customDomain=\"www.lunary.ai\"\n-      >\n-        {process.env.NEXT_PUBLIC_CUSTOM_SCRIPT && (\n-          <Script\n-            id=\"custom-script\"\n-            dangerouslySetInnerHTML={{\n-              __html: process.env.NEXT_PUBLIC_CUSTOM_SCRIPT,\n-            }}\n-            onLoad={() => console.log(\"Custom script loaded.\")}\n-            onError={() => console.log(\"Custom script failed to load.\")}\n-          />\n-        )}\n \n-        {process.env.NEXT_PUBLIC_POSTHOG_KEY ? (\n-          <PostHogProvider client={posthog}>{children}</PostHogProvider>\n-        ) : (\n-          children\n-        )}\n-      </PlausibleProvider>\n+      {process.env.NEXT_PUBLIC_CUSTOM_SCRIPT && (\n+        <Script\n+          id=\"custom-script\"\n+          dangerouslySetInnerHTML={{\n+            __html: process.env.NEXT_PUBLIC_CUSTOM_SCRIPT,\n+          }}\n+          onLoad={() => console.log(\"Custom script loaded.\")}\n+          onError={() => console.log(\"Custom script failed to load.\")}\n+        />\n+      )}\n+\n+      {process.env.NEXT_PUBLIC_POSTHOG_KEY ? (\n+        <PostHogProvider client={posthog}>{children}</PostHogProvider>\n+      ) : (\n+        children\n+      )}\n     </>\n   )\n }"
        },
        {
          "filename": "packages/frontend/components/layout/Paywall.tsx",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -56,7 +56,7 @@ export default function Paywall({\n \n   // Automatically disable paywall in these cases\n   if (\n-    [\"custom\", \"enterprise\", \"unlimited\", plan].includes(org?.plan) ||\n+    [\"custom\", \"unlimited\", plan].includes(org?.plan) ||\n     process.env.NEXT_PUBLIC_DEMO\n   ) {\n     return children"
        },
        {
          "filename": "packages/frontend/components/layout/Sidebar.tsx",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -121,7 +121,9 @@ export default function Sidebar() {\n \n   const combobox = useCombobox()\n \n-  const billingEnabled = !!process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY\n+  const billingEnabled =\n+    process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY &&\n+    !process.env.NEXT_PUBLIC_IS_SELF_HOSTED\n \n   const orgMenu = [\n     {"
        },
        {
          "filename": "packages/frontend/load-env.sh",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# This script is necessary because we need to be able to inject API_URL after build time, and Next does not provide and easy way to do that.\n+# This script is necessary because we need to be able to inject API_URL and APP_URL after build time, and Next does not provide and easy way to do that.\n # This should work find both with npm run dev, locally and with docker\n \n # Loads .env\n@@ -11,7 +11,7 @@ fi\n \n \n if [ -z \"$API_URL\" ] || [ -z \"$APP_URL\" ]; then\n-  echo \"Error: API_URL or APP_URL is not set. Please set the API_URL and APP_URL environment variables.\"\n+  echo \"Error: API_URL not set. Please set the API_URL environment variables.\"\n   exit 1\n fi\n "
        },
        {
          "filename": "packages/frontend/package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -19,13 +19,11 @@\n     \"@tanstack/react-virtual\": \"3.0.0-alpha.0\",\n     \"bcrypt\": \"^5.1.1\",\n     \"crisp-sdk-web\": \"^1.0.21\",\n-    \"date-fns\": \"^3.3.1\",\n+    \"date-fns\": \"^3.6.0\",\n     \"jose\": \"^5.2.0\",\n     \"jsonrepair\": \"^3.5.1\",\n     \"next\": \"^14.1.0\",\n-    \"next-plausible\": \"^3.12.0\",\n     \"next-seo\": \"^6.4.0\",\n-    \"postgres\": \"^3.4.3\",\n     \"posthog-js\": \"^1.103.1\",\n     \"random-word-slugs\": \"^0.1.7\",\n     \"react\": \"18.2.0\","
        },
        {
          "filename": "packages/frontend/pages/analytics.tsx",
          "status": "modified",
          "additions": 0,
          "deletions": 13,
          "patch": "@@ -13,7 +13,6 @@ import {\n   useProject,\n   useRunsUsage,\n   useRunsUsageByDay,\n-  useUser,\n } from \"@/utils/dataHooks\"\n import {\n   Center,\n@@ -28,9 +27,6 @@ import {\n import { useLocalStorage } from \"@mantine/hooks\"\n import { IconChartAreaLine } from \"@tabler/icons-react\"\n import { NextSeo } from \"next-seo\"\n-import { useEffect } from \"react\"\n-import { useRouter } from \"next/router\"\n-import { hasAccess } from \"shared\"\n \n const calculateDailyCost = (usage) => {\n   // calculate using calcRunCost, reduce by model, and filter by type llm\n@@ -54,16 +50,13 @@ const calculateDailyCost = (usage) => {\n }\n \n export default function Analytics() {\n-  const router = useRouter()\n   const [range, setRange] = useLocalStorage({\n     key: \"dateRange-analytics\",\n     defaultValue: 7,\n   })\n \n   const { project } = useProject()\n-\n   const { org } = useOrg()\n-  const { user } = useUser()\n \n   const { usage, loading: usageLoading } = useRunsUsage(range)\n \n@@ -72,12 +65,6 @@ export default function Analytics() {\n \n   const loading = usageLoading || dailyUsageLoading || usersLoading\n \n-  useEffect(() => {\n-    if (!hasAccess(user.role, \"analytics\", \"read\")) {\n-      router.push(\"/prompts\")\n-    }\n-  }, [router])\n-\n   if (loading)\n     return (\n       <Center h=\"60vh\">"
        },
        {
          "filename": "packages/frontend/pages/billing/index.tsx",
          "status": "modified",
          "additions": 11,
          "deletions": 14,
          "patch": "@@ -21,6 +21,7 @@ import useSWR from \"swr\"\n import { EVENTS_ALLOWANCE } from \"@/utils/pricing\"\n import { fetcher } from \"@/utils/fetcher\"\n import SeatAllowanceCard from \"@/components/blocks/SeatAllowanceCard\"\n+import { SettingsCard } from \"@/components/blocks/SettingsCard\"\n \n export default function Billing() {\n   const { org, loading } = useOrg()\n@@ -98,7 +99,7 @@ export default function Billing() {\n           )}\n         </Stack>\n \n-        {![\"enterprise\", \"custom\"].includes(plan) && (\n+        {![\"custom\"].includes(plan) && (\n           <Card withBorder radius=\"md\" padding=\"xl\">\n             <Container size=\"lg\">\n               <UpgradePlans />\n@@ -137,20 +138,16 @@ export default function Billing() {\n         <SeatAllowanceCard />\n \n         {org?.stripeCustomer && (\n-          <Card withBorder radius=\"md\" padding=\"xl\">\n-            <Stack align=\"start\">\n-              <Title order={3}>Customer Portal</Title>\n-\n-              <Text>\n-                Use the Customer Portal to update your payment method, download\n-                invoices and view your billing history.\n-              </Text>\n+          <SettingsCard title=\"Customer Portal\">\n+            <Text>\n+              Use the Customer Portal to update your payment method, download\n+              invoices and view your billing history.\n+            </Text>\n \n-              <Button size=\"sm\" onClick={redirectToCustomerPortal}>\n-                Manage Billing\n-              </Button>\n-            </Stack>\n-          </Card>\n+            <Button size=\"sm\" onClick={redirectToCustomerPortal}>\n+              Manage Billing\n+            </Button>\n+          </SettingsCard>\n         )}\n       </Stack>\n     </Container>"
        },
        {
          "filename": "packages/frontend/pages/index.tsx",
          "status": "modified",
          "additions": 20,
          "deletions": 3,
          "patch": "@@ -1,13 +1,30 @@\n import { useAuth } from \"@/utils/auth\"\n+import { useUser } from \"@/utils/dataHooks\"\n import { Center, Loader } from \"@mantine/core\"\n-import Router from \"next/router\"\n+import { useRouter } from \"next/router\"\n import { useEffect } from \"react\"\n+import { hasAccess } from \"shared\"\n \n function IndexPage() {\n+  const router = useRouter()\n   const { isSignedIn } = useAuth()\n+  const { user } = useUser()\n+\n   useEffect(() => {\n-    Router.replace(isSignedIn ? \"/analytics\" : \"/login\")\n-  }, [])\n+    if (!router.isReady) {\n+      return\n+    }\n+    if (!isSignedIn) {\n+      router.replace(\"/login\")\n+      return\n+    }\n+\n+    if (hasAccess(user.role, \"analytics\", \"read\")) {\n+      router.replace(\"/analytics\")\n+    } else {\n+      router.replace(\"/prompts\")\n+    }\n+  }, [user, router.isReady])\n \n   return (\n     <Center h=\"100vh\" w=\"100vw\">"
        },
        {
          "filename": "packages/frontend/pages/join.tsx",
          "status": "modified",
          "additions": 108,
          "deletions": 85,
          "patch": "@@ -65,6 +65,7 @@ export default function Join() {\n \n   const [loading, setLoading] = useState(false)\n   const [step, setStep] = useState(1)\n+  const [ssoURI, setSsoURI] = useState<string | null>(null)\n \n   useEffect(() => {\n     if (router.isReady) {\n@@ -78,72 +79,116 @@ export default function Join() {\n       email: \"\",\n       name: \"\",\n       password: \"\",\n+      confirmPassword: \"\",\n     },\n \n     validate: {\n       email: (val) => (/^\\S+@\\S+$/.test(val) ? null : \"Invalid email\"),\n       name: (val) => (val.length <= 2 ? \"Your name that short :) ?\" : null),\n       password: (val) =>\n-        val.length < 6 ? \"Password must be at least 6 characters\" : null,\n+        step === 2 && val.length < 6\n+          ? \"Password must be at least 6 characters\"\n+          : null,\n+      confirmPassword: (val) =>\n+        step === 2 && val !== form.values.password\n+          ? \"Passwords do not match\"\n+          : null,\n     },\n   })\n \n   const handleSignup = async ({\n     email,\n-    password,\n     name,\n+    redirectUrl,\n+    password,\n   }: {\n     email: string\n-    password: string\n     name: string\n+    redirectUrl?: string\n+    password?: string\n   }) => {\n     setLoading(true)\n \n+    const signupData = {\n+      email,\n+      name,\n+      orgId,\n+      signupMethod: \"join\",\n+      token,\n+      password,\n+      redirectUrl,\n+    }\n+\n+    console.log(signupData)\n+\n     const ok = await errorHandler(\n       fetcher.post(\"/auth/signup\", {\n-        arg: {\n-          email,\n-          password,\n-          name,\n-          orgId,\n-          signupMethod: \"join\",\n-          token,\n-        },\n+        arg: signupData,\n       }),\n     )\n \n     if (ok) {\n-      Router.replace(\"/login\")\n+      analytics.track(\"Join\", { email, name, orgId })\n \n       notifications.show({\n         icon: <IconCheck size={18} />,\n         color: \"teal\",\n         message: `You have joined ${orgName}`,\n       })\n-      analytics.track(\"Join\", { email, name })\n+\n+      if (redirectUrl) {\n+        window.location.href = redirectUrl\n+      } else {\n+        Router.replace(\"/login\")\n+      }\n     }\n \n     setLoading(false)\n   }\n \n-  const nextStep = () => {\n-    if (step === 1) {\n-      if (\n-        form.validateField(\"email\").hasError ||\n-        form.validateField(\"password\").hasError\n-      ) {\n-        return\n+  const continueStep = async () => {\n+    const { email, name, password } = form.values\n+\n+    setLoading(true)\n+    try {\n+      if (step === 1) {\n+        const { method, redirect } = await fetcher.post(\"/auth/method\", {\n+          arg: {\n+            email,\n+          },\n+        })\n+\n+        console.log(method, redirect)\n+\n+        if (method === \"saml\") {\n+          setSsoURI(redirect)\n+\n+          await handleSignup({\n+            email,\n+            name,\n+            redirectUrl: redirect,\n+          })\n+        }\n+      } else if (step === 2) {\n+        await handleSignup({\n+          email,\n+          name,\n+          password,\n+        })\n+\n+        setStep(3)\n       }\n+    } catch (error) {\n+      console.error(error)\n     }\n-\n-    setStep(step + 1)\n+    setLoading(false)\n   }\n \n   if (!joinData) {\n     return <Loader />\n   }\n+\n   const { orgUserCount, orgName, orgId, orgPlan } = joinData\n-  console.log(joinData)\n \n   if (orgUserCount >= SEAT_ALLOWANCE[orgPlan]) {\n     return <TeamFull orgName={orgName} />\n@@ -161,13 +206,20 @@ export default function Join() {\n           </Title>\n         </Stack>\n         <Paper radius=\"md\" p=\"xl\" withBorder miw={350}>\n-          <form onSubmit={form.onSubmit(handleSignup)}>\n+          <form onSubmit={form.onSubmit(continueStep)}>\n             <Stack gap=\"xl\">\n-              {step === 1 && (\n+              {step < 3 && (\n                 <>\n-                  <Title order={2} fw={700} ta=\"center\">\n-                    Get Started\n-                  </Title>\n+                  <TextInput\n+                    label=\"Full Name\"\n+                    autoComplete=\"name\"\n+                    description=\"Only used to address you properly.\"\n+                    leftSection={<IconUser size=\"16\" />}\n+                    placeholder=\"Your full name\"\n+                    error={form.errors.name && \"This field is required\"}\n+                    {...form.getInputProps(\"name\")}\n+                  />\n+\n                   <TextInput\n                     leftSection={<IconAt size=\"16\" />}\n                     label=\"Email\"\n@@ -178,70 +230,37 @@ export default function Join() {\n                     {...form.getInputProps(\"email\")}\n                   />\n \n-                  <PasswordInput\n-                    label=\"Password\"\n-                    autoComplete=\"new-password\"\n-                    onKeyPress={(e) => {\n-                      if (e.key === \"Enter\") {\n-                        nextStep()\n-                      }\n-                    }}\n-                    error={form.errors.password && \"Invalid password\"}\n-                    placeholder=\"Your password\"\n-                    {...form.getInputProps(\"password\")}\n-                  />\n+                  {step === 2 && (\n+                    <>\n+                      <PasswordInput\n+                        label=\"Password\"\n+                        autoComplete=\"new-password\"\n+                        error={form.errors.password && \"Invalid password\"}\n+                        placeholder=\"Your password\"\n+                        {...form.getInputProps(\"password\")}\n+                      />\n+                      <PasswordInput\n+                        label=\"Confirm Password\"\n+                        autoComplete=\"new-password\"\n+                        error={form.errors.password && \"Invalid password\"}\n+                        placeholder=\"Your password\"\n+                        {...form.getInputProps(\"confirmPassword\")}\n+                      />\n+                    </>\n+                  )}\n \n                   <Button\n                     size=\"md\"\n                     mt=\"md\"\n-                    onClick={nextStep}\n+                    type=\"submit\"\n                     fullWidth\n                     loading={loading}\n                   >\n-                    {`Continue \u2192`}\n+                    {step === 2 ? `Confirm signup \u2192` : `Continue \u2192`}\n                   </Button>\n                 </>\n               )}\n \n-              {step === 2 && (\n-                <>\n-                  <Title order={2} fw={700} ta=\"center\">\n-                    Almost there...\n-                  </Title>\n-\n-                  <TextInput\n-                    label=\"Full Name\"\n-                    autoComplete=\"name\"\n-                    description=\"Only used to address you properly.\"\n-                    leftSection={<IconUser size=\"16\" />}\n-                    placeholder=\"Your full name\"\n-                    error={form.errors.name && \"This field is required\"}\n-                    {...form.getInputProps(\"name\")}\n-                  />\n-\n-                  <Stack>\n-                    <Button\n-                      size=\"md\"\n-                      mt=\"md\"\n-                      type=\"submit\"\n-                      fullWidth\n-                      loading={loading}\n-                    >\n-                      {`Create account`}\n-                    </Button>\n-\n-                    <Button\n-                      size=\"sm\"\n-                      onClick={() => setStep(1)}\n-                      fullWidth\n-                      variant=\"transparent\"\n-                    >\n-                      {`\u2190 Go back`}\n-                    </Button>\n-                  </Stack>\n-                </>\n-              )}\n-\n               {step === 3 && (\n                 <>\n                   <Confetti\n@@ -253,12 +272,16 @@ export default function Join() {\n                   <Stack align=\"center\">\n                     <IconAnalyze color={\"#206dce\"} size={60} />\n                     <Title order={2} fw={700} size={40} ta=\"center\">\n-                      You&nbsp;re all set \ud83c\udf89\n+                      You're all set \ud83c\udf89\n                     </Title>\n \n-                    <Text size=\"lg\" mt=\"xs\" mb=\"xl\" fw={500}>\n-                      Check your emails for the confirmation link.\n-                    </Text>\n+                    {!process.env.NEXT_PUBLIC_IS_SELF_HOSTED && (\n+                      <>\n+                        <Text size=\"lg\" mt=\"xs\" mb=\"xl\" fw={500}>\n+                          Check your emails for the confirmation link.\n+                        </Text>\n+                      </>\n+                    )}\n \n                     <Button\n                       onClick={() => router.push(\"/\")}"
        },
        {
          "filename": "packages/frontend/pages/settings.tsx",
          "status": "modified",
          "additions": 29,
          "deletions": 68,
          "patch": "@@ -19,6 +19,7 @@ import { useOrg, useUser, useProject } from \"@/utils/dataHooks\"\n import useSWR from \"swr\"\n import RenamableField from \"@/components/blocks/RenamableField\"\n import { hasAccess } from \"shared\"\n+import { SettingsCard } from \"@/components/blocks/SettingsCard\"\n \n export default function AppAnalytics() {\n   const { org } = useOrg()\n@@ -53,15 +54,8 @@ export default function AppAnalytics() {\n           props={[\"count\"]}\n         />\n \n-        <Card withBorder p=\"lg\">\n-          <Stack gap=\"lg\">\n-            <Group justify=\"space-between\" align=\"center\">\n-              <Title order={3}>Keys</Title>\n-              {/* <Button onClick={() => alert(\"TODO\")}>\n-                Refresh Api Key\n-              </Button> */}\n-            </Group>\n-\n+        {user.role !== \"viewer\" && (\n+          <SettingsCard title=\"Keys\">\n             <Alert\n               variant=\"light\"\n               title={\n@@ -77,66 +71,33 @@ export default function AppAnalytics() {\n                 track events and send requests to the API.\n               </Text>\n             </Alert>\n-\n-            {/* <Alert\n-              variant=\"light\"\n-              title={\n-                <Group>\n-                  <Text fw={500}>Public Tracking Key: </Text>\n-                  <CopyText c=\"green.8\" value={project?.publicApiKey} />\n-                </Group>\n-              }\n-              color=\"green\"\n-            >\n-              <Text>\n-                Public API keys can be used from your server or frontend code to\n-                track events and send requests to the API.\n-              </Text>\n-            </Alert> */}\n-\n-            {/* <Alert\n-              variant=\"light\"\n-              title={\n-                <Group>\n-                  <Text fw={500}>Private Key:</Text>\n-                  <CopyText c=\"red.8\" value={project?.privateApiKey} />\n-                </Group>\n-              }\n-              color=\"red\"\n-            >\n-              <Text>\n-                Private API keys should be used only on your server \u2013 they give\n-                read/write/delete API access to your project's resources.\n-              </Text>\n-            </Alert> */}\n-          </Stack>\n-        </Card>\n+          </SettingsCard>\n+        )}\n \n         {user && hasAccess(user.role, \"projects\", \"delete\") && (\n-          <Card withBorder p=\"lg\" style={{ overflow: \"visible\" }}>\n-            <Stack align=\"start\">\n-              <Title order={4}>Danger Zone</Title>\n-\n-              <Text>\n-                Deleting your project is irreversible and it will delete all\n-                associated data.\n-                <br />\n-                We <b>cannot</b> recover your data once it&apos;s deleted.\n-              </Text>\n+          <SettingsCard title=\"Danger Zone\" align=\"start\">\n+            <Text>\n+              Deleting your project is irreversible and it will delete all\n+              associated data.\n+              <br />\n+              We <b>cannot</b> recover your data once it&apos;s deleted.\n+            </Text>\n \n-              <Popover width={200} position=\"bottom\" shadow=\"md\">\n-                <Popover.Target>\n-                  <Button color=\"red\" data-testid=\"delete-project-button\">\n-                    Delete Project\n-                  </Button>\n-                </Popover.Target>\n-                <Popover.Dropdown>\n-                  <Text mb=\"md\">\n-                    Are you sure you want to delete this project? This action is\n-                    irreversible and it will delete all associated data.\n-                  </Text>\n+            <Popover width={200} position=\"bottom\" shadow=\"md\">\n+              <Popover.Target>\n+                <Button color=\"red\" data-testid=\"delete-project-button\">\n+                  Delete Project\n+                </Button>\n+              </Popover.Target>\n+              <Popover.Dropdown>\n+                <Text mb=\"md\">\n+                  Are you sure you want to delete this project? This action is\n+                  irreversible and it will delete all associated data.\n+                </Text>\n+                <Group align=\"start\">\n                   <Button\n                     color=\"red\"\n+                    w={80}\n                     data-testid=\"delete-project-popover-button\"\n                     onClick={async () => {\n                       const dropped = await drop()\n@@ -148,10 +109,10 @@ export default function AppAnalytics() {\n                   >\n                     Delete\n                   </Button>\n-                </Popover.Dropdown>\n-              </Popover>\n-            </Stack>\n-          </Card>\n+                </Group>\n+              </Popover.Dropdown>\n+            </Popover>\n+          </SettingsCard>\n         )}\n       </Stack>\n     </Container>"
        },
        {
          "filename": "packages/frontend/pages/signup.tsx",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -124,13 +124,16 @@ function SignupPage() {\n \n       auth.setJwt(token)\n \n-      if (!process.env.SKIP_EMAIL_VERIFY) {\n+      if (!process.env.NEXT_PUBLIC_IS_SELF_HOSTED) {\n         notifications.show({\n           icon: <IconCheck size={18} />,\n           color: \"teal\",\n           title: \"Email sent\",\n           message: \"Check your emails for the confirmation link\",\n         })\n+      } else {\n+        // redirect to dashboard\n+        window.location.href = \"/\"\n       }\n \n       analytics.track(\"Signup\", {"
        },
        {
          "filename": "packages/frontend/pages/team.module.css",
          "status": "modified",
          "additions": 0,
          "deletions": 5,
          "patch": "@@ -1,11 +1,6 @@\n-.root {\n-  outline: 1px\n-}\n-\n .pillsList {\n   flex-wrap: nowrap;\n   overflow: hidden;\n   text-overflow: ellipsis;\n   white-space: nowrap;\n }\n-"
        },
        {
          "filename": "packages/frontend/pages/team.tsx",
          "status": "modified",
          "additions": 187,
          "deletions": 146,
          "patch": "@@ -23,21 +23,20 @@ import {\n   Text,\n   TextInput,\n   Title,\n+  Tooltip,\n   useCombobox,\n } from \"@mantine/core\"\n import {\n   IconCheck,\n   IconCopy,\n   IconDotsVertical,\n   IconDownload,\n-  IconRefresh,\n-  IconSearch,\n   IconTrash,\n } from \"@tabler/icons-react\"\n import { NextSeo } from \"next-seo\"\n import { z } from \"zod\"\n \n-import CopyText, { SuperCopyButton } from \"@/components/blocks/CopyText\"\n+import { CopyInput } from \"@/components/blocks/CopyText\"\n import UserAvatar from \"@/components/blocks/UserAvatar\"\n import {\n   // useInvitations,\n@@ -49,14 +48,18 @@ import {\n import { fetcher } from \"@/utils/fetcher\"\n import { useDisclosure } from \"@mantine/hooks\"\n import { notifications } from \"@mantine/notifications\"\n-import { roles } from \"shared\"\n+import { hasAccess, roles } from \"shared\"\n import classes from \"./team.module.css\"\n import { useForm } from \"@mantine/form\"\n+import SearchBar from \"@/components/blocks/SearchBar\"\n+import { SettingsCard } from \"@/components/blocks/SettingsCard\"\n+import { SEAT_ALLOWANCE } from \"@/utils/pricing\"\n+import { openUpgrade } from \"@/components/layout/UpgradeModal\"\n \n function SAMLConfig() {\n   const { org, updateOrg, mutate } = useOrg()\n \n-  const [idpXml, setIdpXml] = useState(org?.saml_idp_xml)\n+  const [idpXml, setIdpXml] = useState(org?.samlIdpXml)\n   const [idpLoading, setIdpLoading] = useState(false)\n   const [spLoading, setSpLoading] = useState(false)\n \n@@ -67,13 +70,18 @@ function SAMLConfig() {\n     setIdpLoading(true)\n \n     if (idpXml.startsWith(\"http\")) {\n-      const res = await fetcher.post(`/auth/saml/${org?.id}/download-idp-xml`, {\n+      await fetcher.post(`/auth/saml/${org?.id}/download-idp-xml`, {\n         arg: {\n           url: idpXml,\n         },\n       })\n \n-      console.log(res)\n+      notifications.show({\n+        title: \"IDP XML added\",\n+        message: \"The IDP XML has been added successfully\",\n+        icon: <IconCheck />,\n+        color: \"green\",\n+      })\n     } else {\n       await updateOrg({ id: org?.id, saml_idp_xml: content })\n     }\n@@ -134,47 +142,42 @@ function SAMLConfig() {\n             <Table.Tr>\n               <Table.Td>Identifier (Entity ID):</Table.Td>\n               <Table.Td>\n-                <CopyText c=\"blue\" value={\"urn:lunary.ai:saml:sp\"} />\n+                <CopyInput value={\"urn:lunary.ai:saml:sp\"} />\n               </Table.Td>\n             </Table.Tr>\n             <Table.Tr>\n               <Table.Td>Assertion Consumer Service (ACS) URL:</Table.Td>\n               <Table.Td>\n-                <CopyText\n-                  c=\"blue\"\n-                  value={`${process.env.NEXT_PUBLIC_API_URL}/auth/saml/${org?.id}/acs`}\n+                <CopyInput\n+                  value={`${window.API_URL}/auth/saml/${org?.id}/acs`}\n                 />\n               </Table.Td>\n             </Table.Tr>\n             <Table.Tr>\n               <Table.Td>Single Logout Service (SLO) URL:</Table.Td>\n               <Table.Td>\n-                <CopyText\n-                  c=\"blue\"\n-                  value={`${process.env.NEXT_PUBLIC_API_URL}/auth/saml/${org?.id}/slo`}\n+                <CopyInput\n+                  value={`${window.API_URL}/auth/saml/${org?.id}/slo`}\n                 />\n               </Table.Td>\n             </Table.Tr>\n             <Table.Tr>\n               <Table.Td>Sign on URL:</Table.Td>\n               <Table.Td>\n-                <CopyText\n-                  c=\"blue\"\n-                  value={`${process.env.NEXT_PUBLIC_API_URL}/login`}\n+                <CopyInput value={`${window.APP_URL}/login`} />\n+              </Table.Td>\n+            </Table.Tr>\n+            <Table.Tr>\n+              <Table.Td>Single Logout URL:</Table.Td>\n+              <Table.Td>\n+                <CopyInput\n+                  value={`${window.API_URL}/auth/saml/${org?.id}/slo`}\n                 />\n               </Table.Td>\n             </Table.Tr>\n           </Table.Tbody>\n         </Table>\n \n-        <Group wrap=\"nowrap\">\n-          <Text>Single Logout Service (SLO) URL</Text>\n-          <CopyText\n-            c=\"blue\"\n-            value={`${window.API_URL}/auth/saml/${org?.id}/slo`}\n-          />\n-        </Group>\n-\n         <Button\n           onClick={() => downloadSpXml()}\n           loading={spLoading}\n@@ -199,12 +202,7 @@ function InviteLinkModal({ opened, setOpened, link }) {\n         Send this link to the person you want to invite to your organization.\n       </Text>\n \n-      <Input\n-        my=\"lg\"\n-        value={link}\n-        rightSectionPointerEvents=\"all\"\n-        rightSection={<SuperCopyButton value={link} />}\n-      />\n+      <CopyInput my=\"lg\" value={link} />\n \n       <Button\n         leftSection={<IconCopy size={18} />}\n@@ -290,7 +288,7 @@ function UserMenu({ user, isInvitation }) {\n             <Menu.Item\n               onClick={() => {\n                 navigator.clipboard.writeText(\n-                  `${process.env.NEXT_PUBLIC_APP_URL}/join?token=${user.singleUseToken}`,\n+                  `${window.APP_URL}/join?token=${user.singleUseToken}`,\n                 )\n                 notifications.show({\n                   icon: <IconCheck size={18} />,\n@@ -314,26 +312,47 @@ function UserMenu({ user, isInvitation }) {\n export function RoleSelect({\n   value,\n   setValue,\n+  disabled = false,\n   minimal = false,\n   additionalOptions = [],\n }) {\n   const combobox = useCombobox({\n     onDropdownClose: () => combobox.resetSelectedOption(),\n   })\n \n+  const { org } = useOrg()\n+\n+  const canUsePaidRoles = org?.plan === \"custom\"\n+\n   const options = Object.values(roles).map(\n-    ({ value, name, description }) =>\n+    ({ value, name, description, free }) =>\n       value !== \"owner\" && (\n-        <Combobox.Option value={value} key={value}>\n-          <Text size=\"sm\">{name}</Text>\n-          {minimal !== true && (\n-            <Text size=\"sm\" c=\"dimmed\">\n-              {description}\n-            </Text>\n-          )}\n-        </Combobox.Option>\n+        <Tooltip\n+          key={value}\n+          label={\n+            !free && !canUsePaidRoles\n+              ? \"This role is available on Enterprise plans\"\n+              : null\n+          }\n+          position=\"left\"\n+          disabled={free || canUsePaidRoles}\n+        >\n+          <Combobox.Option\n+            value={value}\n+            key={value}\n+            disabled={!free && !canUsePaidRoles}\n+          >\n+            <Text size=\"sm\">{name}</Text>\n+            {minimal !== true && (\n+              <Text size=\"sm\" c=\"dimmed\">\n+                {description}\n+              </Text>\n+            )}\n+          </Combobox.Option>\n+        </Tooltip>\n       ),\n   )\n+\n   options.push(...additionalOptions)\n \n   return (\n@@ -349,6 +368,7 @@ export function RoleSelect({\n           miw=\"200px\"\n           component=\"button\"\n           type=\"button\"\n+          disabled={disabled}\n           pointer\n           rightSection={<Combobox.Chevron />}\n           onClick={() => combobox.toggleDropdown()}\n@@ -405,7 +425,6 @@ function InviteMemberCard() {\n \n   const [isLoading, setIsLoading] = useState(false)\n   const { addUserToOrg } = useOrg()\n-  const { user } = useUser()\n \n   useEffect(() => {\n     setSelectedProjects(projects.map((p) => p.id))\n@@ -429,6 +448,10 @@ function InviteMemberCard() {\n   })\n \n   async function invite({ email }) {\n+    if (org?.users?.length >= SEAT_ALLOWANCE[org?.plan]) {\n+      return openUpgrade(\"team\")\n+    }\n+\n     try {\n       setIsLoading(true)\n       const { user: newUser } = await addUserToOrg({\n@@ -446,7 +469,7 @@ function InviteMemberCard() {\n         })\n         return\n       } else {\n-        const link = `${process.env.NEXT_PUBLIC_APP_URL}/join?token=${newUser.singleUseToken}`\n+        const link = `${window.APP_URL}/join?token=${newUser.singleUseToken}`\n         setIsLoading(false)\n         setInviteLink(link)\n         setOpened(true)\n@@ -459,14 +482,16 @@ function InviteMemberCard() {\n     }\n   }\n \n+  const upgradeForGranular = org.plan !== \"custom\"\n+\n   return (\n-    <Card withBorder p=\"lg\">\n+    <SettingsCard title=\"Invite Team Member\">\n       <InviteLinkModal\n         opened={opened}\n         setOpened={setOpened}\n         link={inviteLink}\n       />\n-      <Text>Invite new team members</Text>\n+\n       <form onSubmit={form.onSubmit(invite)}>\n         <Group grow={true}>\n           <TextInput\n@@ -481,13 +506,19 @@ function InviteMemberCard() {\n             <RoleSelect value={role} setValue={setRole} />\n           </Input.Wrapper>\n           <Input.Wrapper mt=\"md\" label=\"Projects\">\n-            <ProjectMultiSelect\n-              value={selectedProjects}\n-              setValue={setSelectedProjects}\n-              disabled={\n-                org.plan !== \"custom\" || [\"admin\", \"billing\"].includes(role)\n-              }\n-            />\n+            <Tooltip\n+              label=\"Upgrade to manage project access granuarly\"\n+              position=\"top\"\n+              disabled={!upgradeForGranular}\n+            >\n+              <ProjectMultiSelect\n+                value={selectedProjects}\n+                setValue={setSelectedProjects}\n+                disabled={\n+                  upgradeForGranular || [\"admin\", \"billing\"].includes(role)\n+                }\n+              />\n+            </Tooltip>\n           </Input.Wrapper>\n         </Group>\n \n@@ -497,7 +528,7 @@ function InviteMemberCard() {\n           </Button>\n         </Group>\n       </form>\n-    </Card>\n+    </SettingsCard>\n   )\n }\n \n@@ -510,7 +541,6 @@ function UpdateUserForm({ user, onClose }) {\n   const [isLoading, setIsLoading] = useState(false)\n \n   useEffect(() => {\n-    console.log(role)\n     if ([\"admin\", \"billing\"].includes(role)) {\n       setUserProjects(projects.map((p) => p.id))\n     }\n@@ -601,98 +631,107 @@ function MemberList({ users, isInvitation }) {\n         )}\n       </Modal>\n       <Stack gap=\"0\">\n-        <Group justify=\"space-between\">\n-          <TextInput\n-            style={{ flexGrow: 1 }}\n-            my=\"md\"\n-            leftSection={<IconSearch size=\"14\" />}\n-            value={searchValue}\n-            onChange={(e) => setSearchValue(e.target.value)}\n+        <Group w=\"100%\" wrap=\"no-wrap\">\n+          <SearchBar\n+            query={searchValue}\n+            setQuery={setSearchValue}\n             placeholder=\"Filter...\"\n+            my=\"md\"\n+            w=\"100%\"\n+          />\n+\n+          <RoleSelect\n+            value={role}\n+            disabled={org.plan !== \"custom\"}\n+            setValue={setRole}\n+            minimal={true}\n+            additionalOptions={additionalOptions}\n           />\n-          {org.plan === \"custom\" && (\n-            <RoleSelect\n-              value={role}\n-              setValue={setRole}\n-              minimal={true}\n-              additionalOptions={additionalOptions}\n-            />\n-          )}\n         </Group>\n \n-        <Card withBorder p=\"0\">\n-          {users?.map((user, i) => (\n-            <React.Fragment key={i}>\n-              <Group justify=\"space-between\" p=\"lg\">\n-                <Group>\n-                  <UserAvatar profile={user} size=\"30\" />\n-                  <Stack gap=\"0\">\n-                    <Text size=\"sm\" fw=\"500\">\n-                      {isInvitation ? \"Pending Invitation\" : user.name}\n-                    </Text>\n-                    <Text c=\"dimmed\" size=\"sm\">\n-                      {user.email}\n+        {!!users?.length ? (\n+          <Card withBorder p=\"0\">\n+            {users.map((user, i) => (\n+              <React.Fragment key={i}>\n+                <Group justify=\"space-between\" p=\"lg\">\n+                  <Group>\n+                    <UserAvatar profile={user} size=\"30\" />\n+                    <Stack gap=\"0\">\n+                      <Text size=\"sm\" fw=\"500\">\n+                        {isInvitation ? \"Pending Invitation\" : user.name}\n+                      </Text>\n+                      <Text c=\"dimmed\" size=\"sm\">\n+                        {user.email}\n+                      </Text>\n+                    </Stack>\n+                    {user?.id === currentUser?.id ? (\n+                      <Badge color=\"blue\">You</Badge>\n+                    ) : null}\n+                  </Group>\n+\n+                  <Group>\n+                    <Text size=\"sm\" c=\"dimmed\">\n+                      {roles[user.role].name}\n                     </Text>\n-                  </Stack>\n-                  {user?.id === currentUser?.id ? (\n-                    <Badge color=\"blue\">You</Badge>\n-                  ) : null}\n-                </Group>\n-\n-                <Group>\n-                  <Text size=\"sm\" c=\"dimmed\">\n-                    {roles[user.role].name}\n-                  </Text>\n-                  {currentUser?.id !== user.id && !isInvitation && (\n-                    <>\n-                      <Popover\n-                        width={200}\n-                        position=\"bottom\"\n-                        withArrow\n-                        shadow=\"md\"\n-                        opened={opened}\n-                      >\n-                        <Popover.Target>\n-                          <Badge\n-                            // TODO: bug when hovering its opens for all users\n-                            // onMouseEnter={open}\n-                            // onMouseLeave={close}\n-                            variant=\"light\"\n-                          >\n-                            {user.projects.length} projects\n-                          </Badge>\n-                        </Popover.Target>\n-                        <Popover.Dropdown style={{ pointerEvents: \"none\" }}>\n-                          {user.projects.map((projectId) => (\n-                            <Stack gap=\"lg\" key={projectId}>\n-                              <Text size=\"md\">\n-                                {\n-                                  projects?.find((p) => p.id === projectId)\n-                                    ?.name\n-                                }\n-                              </Text>\n-                            </Stack>\n-                          ))}\n-                        </Popover.Dropdown>\n-                      </Popover>\n-                      {user.role !== \"owner\" && (\n-                        <Button\n-                          variant=\"default\"\n-                          onClick={() => handleOpenModal(user)}\n+                    {currentUser?.id !== user.id && !isInvitation && (\n+                      <>\n+                        <Popover\n+                          width={200}\n+                          position=\"bottom\"\n+                          withArrow\n+                          shadow=\"md\"\n+                          opened={opened}\n                         >\n-                          Manage Access\n-                        </Button>\n-                      )}\n-                    </>\n-                  )}\n-                  <UserMenu user={user} isInvitation={isInvitation} />\n+                          <Popover.Target>\n+                            <Badge\n+                              // TODO: bug when hovering its opens for all users\n+                              // onMouseEnter={open}\n+                              // onMouseLeave={close}\n+                              variant=\"light\"\n+                            >\n+                              {user.projects.length} projects\n+                            </Badge>\n+                          </Popover.Target>\n+                          <Popover.Dropdown style={{ pointerEvents: \"none\" }}>\n+                            {user.projects.map((projectId) => (\n+                              <Stack gap=\"lg\" key={projectId}>\n+                                <Text size=\"md\">\n+                                  {\n+                                    projects?.find((p) => p.id === projectId)\n+                                      ?.name\n+                                  }\n+                                </Text>\n+                              </Stack>\n+                            ))}\n+                          </Popover.Dropdown>\n+                        </Popover>\n+                        {hasAccess(\n+                          currentUser.role,\n+                          \"teamMembers\",\n+                          \"update\",\n+                        ) && (\n+                          <Button\n+                            variant=\"default\"\n+                            onClick={() => handleOpenModal(user)}\n+                          >\n+                            Manage Access\n+                          </Button>\n+                        )}\n+                      </>\n+                    )}\n+                    <UserMenu user={user} isInvitation={isInvitation} />\n+                  </Group>\n                 </Group>\n-              </Group>\n \n-              {i !== users.length && <Divider />}\n-            </React.Fragment>\n-          ))}\n-        </Card>\n+                {i !== users.length - 1 && <Divider />}\n+              </React.Fragment>\n+            ))}\n+          </Card>\n+        ) : (\n+          <Card withBorder p=\"lg\">\n+            <Text>Nothing here.</Text>\n+          </Card>\n+        )}\n       </Stack>\n     </>\n   )\n@@ -708,12 +747,11 @@ function MemberListCard() {\n   )\n \n   return (\n-    <Tabs defaultValue=\"members\" classNames={{ root: classes.root }}>\n+    <Tabs defaultValue=\"members\">\n       <Tabs.List>\n         <Tabs.Tab value=\"members\">Team Members</Tabs.Tab>\n-        {invitedUsers?.length >= 1 && (\n-          <Tabs.Tab value=\"invitations\">Pending Invitations</Tabs.Tab>\n-        )}\n+\n+        <Tabs.Tab value=\"invitations\">Pending Invitations</Tabs.Tab>\n       </Tabs.List>\n \n       <Tabs.Panel value=\"members\">\n@@ -730,6 +768,7 @@ function MemberListCard() {\n // TODO: put back at root level\n export default function Team() {\n   const { org } = useOrg()\n+  const { user } = useUser()\n   const samlEnabled = org?.samlEnabled\n \n   if (!org) {\n@@ -740,12 +779,14 @@ export default function Team() {\n     <Container className=\"unblockable\">\n       <NextSeo title=\"Team\" />\n \n-      <Stack gap=\"lg\">\n-        <Title order={2}>Team Members</Title>\n+      <Stack gap=\"xl\">\n+        <Title order={2}>Manage Team</Title>\n \n-        <InviteMemberCard />\n+        {hasAccess(user.role, \"teamMembers\", \"create\") && <InviteMemberCard />}\n         <MemberListCard />\n-        {samlEnabled && <SAMLConfig />}\n+        {samlEnabled && [\"admin\", \"owner\"].includes(user.role) && (\n+          <SAMLConfig />\n+        )}\n       </Stack>\n     </Container>\n   )"
        },
        {
          "filename": "packages/ml/README.md",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -7,15 +7,15 @@ Communication is done using zerorpc between the JS backend and the Python script\n To create a virtual environment, run the following command:\n \n ```bash\n-python3 -m venv .venv\n+python3 -m venv venv\n ```\n \n ## Active venv\n \n To activate the virtual environment, run the following command:\n \n ```bash\n-source .venv/bin/activate\n+source venv/bin/activate\n \n pip install -r requirements.txt\n ```"
        },
        {
          "filename": "packages/ml/main.py",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -2,9 +2,14 @@\n from lang import detect_lang\n from toxicity import detect_toxicity\n from pii import detect_pii\n+import sys\n \n app = Flask(__name__)\n \n+# Disable the Flask red warning server banner\n+cli = sys.modules['flask.cli']\n+cli.show_server_banner = lambda *x: None\n+\n @app.route('/lang', methods=['POST'])\n def language_route():\n     text = request.json['text']\n@@ -29,4 +34,4 @@ def pii_route():\n if __name__ == '__main__':\n     app.run(host='localhost', port=4242)\n \n-print(\"Python Flask Server is running on port 4242\")\n+print(\"Python ML Server running on port 4242\")"
        },
        {
          "filename": "packages/shared/access-control/roles.ts",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -26,6 +26,7 @@ export const roles: Record<\n   {\n     value: Role\n     name: string\n+    free?: boolean\n     description: string\n     permissions: Record<ResourceName, Partial<Record<Action, boolean>>>\n   }\n@@ -34,6 +35,7 @@ export const roles: Record<\n     value: \"owner\",\n     name: \"Owner\",\n     description: \"Owner of the organization\",\n+    free: true,\n     permissions: {\n       projects: {\n         create: true,\n@@ -119,6 +121,7 @@ export const roles: Record<\n   admin: {\n     value: \"admin\",\n     name: \"Admin\",\n+    free: true,\n     description: \"Admin-level access to the entire org\",\n     permissions: {\n       projects: {\n@@ -204,6 +207,7 @@ export const roles: Record<\n   member: {\n     value: \"member\",\n     name: \"Member\",\n+    free: true,\n     description: \"Full access to most resources\",\n     permissions: {\n       projects: {"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 6,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 15,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4c1a889ecc4329f4b8fc976904d08cd57636546",
            "date": "2025-01-13T15:25:14Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "2447a7cc873d1f96fcc150a00f3d46ff13f4964c",
            "date": "2025-01-12T16:53:00Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "a3211170ffe39424c54a102d4afa27cec99c362d",
            "date": "2025-01-12T16:48:23Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "ea73f8db2ec427defadb4d70c56ebfc65964b677",
            "date": "2025-01-11T00:32:52Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "32974c788404aa69fd55709231e8834777dee7ab",
            "date": "2025-01-10T22:45:01Z",
            "author_login": "hughcrt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-200",
    "description": "By knowing an organization's ID, an attacker can join the organization without permission and gain the ability to read and modify all data within that organization. This vulnerability allows unauthorized access and modification of sensitive information, posing a significant security risk. The flaw is due to insufficient verification of user permissions when joining an organization.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-04-10T17:15:52.917",
    "last_modified": "2024-11-21T08:50:59.403",
    "fix_date": "2024-03-25T17:05:24Z"
  },
  "references": [
    {
      "url": "https://github.com/lunary-ai/lunary/commit/67eaefe1c77c882c628780940c704a117b561d51",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/ce2563a2-3d81-4e2e-954e-abecb9332416",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/lunary-ai/lunary/commit/67eaefe1c77c882c628780940c704a117b561d51",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/lunary-ai/lunary/compare/v1.2.1...v1.2.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/ce2563a2-3d81-4e2e-954e-abecb9332416",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.465230",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lunary",
    "owner": "lunary-ai",
    "created_at": "2023-05-12T10:03:05Z",
    "updated_at": "2025-01-13T15:25:18Z",
    "pushed_at": "2025-01-13T15:25:16Z",
    "size": 5319,
    "stars": 1133,
    "forks": 139,
    "open_issues": 0,
    "watchers": 1133,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "llm-1533-allow-filtering-by-feedback-in-thread-and-trace-page",
      "llm-1666-improve-exports-for-traces-enable-export-for-threads",
      "llm-1708-when-clicking-on-a-trace-row-theres-a-quick-render-bug-that",
      "llm-1711-save-row-sorting-in-views",
      "llm-1906-allow-a-team-owner-to-make-another-user-owner-instead-of",
      "llm-1910-prompts-settings-bug",
      "llm-1911-invite-button-doesnt-show-a-success-notification",
      "llm-1922-button-next-to-metadata-that-redirects-to-search",
      "llm-1939-integer-out-of-range-error-on-lunary-app",
      "llm-1942-implement-streaming-from-database-for-csvjsonl-exports",
      "llm-1966-long-project-names-are-croped-in-project-drowndopre",
      "llm-2101-sign-in-with-github",
      "main",
      "playwright_test_feedback_comment_dataset_user"
    ],
    "languages": {
      "TypeScript": 1181050,
      "Python": 112937,
      "CSS": 8238,
      "JavaScript": 3378,
      "Shell": 522
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:04:58.689247"
  }
}