{
  "cve_id": "CVE-2024-1740",
  "github_data": {
    "repository": "lunary-ai/lunary",
    "fix_commit": "c57cd50fa0477fd2a2efe60810c0099eebd66f54",
    "related_commits": [
      "c57cd50fa0477fd2a2efe60810c0099eebd66f54",
      "c57cd50fa0477fd2a2efe60810c0099eebd66f54"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c57cd50fa0477fd2a2efe60810c0099eebd66f54",
      "commit_date": "2024-04-09T02:35:58Z",
      "author": {
        "login": "hughcrt",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: security patches (#192)",
        "length": 28,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 38,
        "additions": 27,
        "deletions": 11
      },
      "files": [
        {
          "filename": "packages/backend/src/api/v1/evaluations/index.ts",
          "status": "modified",
          "additions": 14,
          "deletions": 9,
          "patch": "@@ -1,15 +1,14 @@\n-import Router from \"koa-router\"\n+import { runChecksOnRun } from \"@/src/checks/runChecks\"\n+import { checkAccess } from \"@/src/utils/authorization\"\n+import { calcRunCost } from \"@/src/utils/calcCost\"\n+import { getReadableDateTime } from \"@/src/utils/date\"\n import sql from \"@/src/utils/db\"\n import Context from \"@/src/utils/koa\"\n-import { getReadableDateTime } from \"@/src/utils/date\"\n-import { runEval } from \"./utils\"\n-import { getEvaluation } from \"./utils\"\n-import { calcRunCost } from \"@/src/utils/calcCost\"\n-import { runChecksOnRun } from \"@/src/checks/runChecks\"\n+import Router from \"koa-router\"\n+import { RunEvent } from \"lunary/types\"\n import PQueue from \"p-queue\"\n import { PassThrough } from \"stream\"\n-import { checkAccess } from \"@/src/utils/authorization\"\n-import { RunEvent } from \"lunary/types\"\n+import { runEval } from \"./utils\"\n \n const evaluations = new Router({ prefix: \"/evaluations\" })\n \n@@ -20,7 +19,7 @@ evaluations.post(\n   checkAccess(\"evaluations\", \"create\"),\n   async (ctx: Context) => {\n     const { name, datasetId, checklistId, providers } = ctx.request.body as any\n-    const { userId, projectId } = ctx.state\n+    const { userId, projectId, orgId } = ctx.state\n \n     ctx.request.socket.setTimeout(0)\n     ctx.request.socket.setNoDelay(true)\n@@ -37,6 +36,12 @@ evaluations.post(\n       timeout: 10000,\n     })\n \n+    const [{ plan }] =\n+      await sql`select plan, eval_allowance from org where id = ${orgId}`\n+    if (plan === \"free\") {\n+      ctx.throw(403, \"You can't create evaluations on the free plan.\")\n+    }\n+\n     // TODO: transactions, but not working with because of nesting\n     const evaluationToInsert = {\n       name: name ? name : `Evaluation of ${getReadableDateTime()}`,"
        },
        {
          "filename": "packages/backend/src/api/v1/projects/index.ts",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -121,7 +121,12 @@ projects.post(\n     const { projectId } = ctx.params\n     const { userId } = ctx.state\n \n-    // Define the schema for request body validation using Zod\n+    const [hasAccess] =\n+      await sql`select * from account_project where project_id = ${projectId} and account_id = ${userId}`\n+    if (!hasAccess) {\n+      ctx.throw(401, \"Not allowed\")\n+    }\n+\n     const requestBodySchema = z.object({\n       type: z.enum([\"private\", \"public\"]),\n     })"
        },
        {
          "filename": "packages/backend/src/api/v1/radars.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -218,7 +218,7 @@ radars.get(\"/:radarId/chart\", async (ctx) => {\n })\n \n radars.post(\"/\", checkAccess(\"radars\", \"create\"), async (ctx) => {\n-  const { projectId, userId } = ctx.state\n+  const { projectId, userId, orgId } = ctx.state\n   const { description, view, checks, alerts, negative } = ctx.request.body as {\n     description: string\n     view: any[]\n@@ -227,6 +227,12 @@ radars.post(\"/\", checkAccess(\"radars\", \"create\"), async (ctx) => {\n     negative: boolean\n   }\n \n+  const [{ plan }] =\n+    await sql`select plan, eval_allowance from org where id = ${orgId}`\n+  if (plan === \"free\") {\n+    ctx.throw(403, \"You can't create evaluations on the free plan.\")\n+  }\n+\n   const [row] = await sql`\n     insert into radar ${sql({\n       description,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "99985bb470da9b5cbf56dfe62a0e301f6154fb7a",
            "date": "2025-01-23T21:22:40Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "85f99ba794be50ce8e88487c275711f38c99bc86",
            "date": "2025-01-23T13:00:12Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "f335865aadb46ac3d0a8985d4ed3a58e01f233ab",
            "date": "2025-01-21T17:40:16Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "eb27f0b6f2686655434df484a9f567682488f934",
            "date": "2025-01-21T17:12:39Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "4866a25298d8e588e1e48c6cb85c7564a125ce2b",
            "date": "2025-01-20T19:14:11Z",
            "author_login": "hughcrt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "In lunary-ai/lunary version 1.0.1, a vulnerability exists where a user removed from an organization can still read, create, modify, and delete logs by re-using an old authorization token. The lunary web application communicates with the server using an 'Authorization' token in the browser, which does not properly invalidate upon the user's removal from the organization. This allows the removed user to perform unauthorized actions on logs and access project and external user details without valid permissions.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-10T17:15:53.293",
    "last_modified": "2025-01-10T14:21:52.317",
    "fix_date": "2024-04-09T02:35:58Z"
  },
  "references": [
    {
      "url": "https://github.com/lunary-ai/lunary/commit/c57cd50fa0477fd2a2efe60810c0099eebd66f54",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/c1a51f71-628e-4eb5-ac35-50bf64832cfd",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/lunary-ai/lunary/commit/c57cd50fa0477fd2a2efe60810c0099eebd66f54",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/c1a51f71-628e-4eb5-ac35-50bf64832cfd",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.465494",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "lunary",
    "owner": "lunary-ai",
    "created_at": "2023-05-12T10:03:05Z",
    "updated_at": "2025-01-25T12:59:23Z",
    "pushed_at": "2025-01-23T21:23:23Z",
    "size": 5454,
    "stars": 1145,
    "forks": 140,
    "open_issues": 0,
    "watchers": 1145,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "llm-1533-allow-filtering-by-feedback-in-thread-and-trace-page",
      "llm-1666-improve-exports-for-traces-enable-export-for-threads",
      "llm-1708-when-clicking-on-a-trace-row-theres-a-quick-render-bug-that",
      "llm-1711-save-row-sorting-in-views",
      "llm-1906-allow-a-team-owner-to-make-another-user-owner-instead-of",
      "llm-1910-prompts-settings-bug",
      "llm-1911-invite-button-doesnt-show-a-success-notification",
      "llm-1922-button-next-to-metadata-that-redirects-to-search",
      "llm-1939-integer-out-of-range-error-on-lunary-app",
      "llm-1942-implement-streaming-from-database-for-csvjsonl-exports",
      "llm-1966-long-project-names-are-croped-in-project-drowndopre",
      "llm-2101-sign-in-with-github",
      "main",
      "playwright_test_feedback_comment_dataset_user"
    ],
    "languages": {
      "TypeScript": 1198476,
      "Python": 113257,
      "CSS": 8283,
      "JavaScript": 3378,
      "Shell": 522
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:56:25.929748"
  }
}