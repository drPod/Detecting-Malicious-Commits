{
  "cve_id": "CVE-2024-21485",
  "github_data": {
    "repository": "plotly/dash",
    "fix_commit": "9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
    "related_commits": [
      "9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
      "9920073c9a8619ae8f90fcec1924f2f3a4332a8c"
    ],
    "patch_url": "https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c.patch",
    "fix_commit_details": {
      "sha": "9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
      "commit_date": "2024-01-30T20:48:39Z",
      "author": {
        "login": "T4rk1n",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #2732 from plotly/fix/xss-props",
        "length": 95,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 17361,
        "additions": 9448,
        "deletions": 7913
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -4,8 +4,13 @@ This project adheres to [Semantic Versioning](https://semver.org/).\n \n ## [UNRELEASED]\n \n-### Added\n+## Added\n - [#2695](https://github.com/plotly/dash/pull/2695) Adds  `triggered_id` to `dash_clientside.callback_context`.  Fixes [#2692](https://github.com/plotly/dash/issues/2692)\n+- [#2732](https://github.com/plotly/dash/pull/2732) Add special key `_dash_error` to `setProps`, allowing component developers to send error without throwing in render. Usage `props.setProps({_dash_error: new Error(\"custom error\")})`\n+\n+## Fixed\n+\n+- [#2732](https://github.com/plotly/dash/pull/2732) Sanitize html props that are vulnerable to xss vulnerability if user data is inserted. Fix Validate url to prevent XSS attacks [#2729](https://github.com/plotly/dash/issues/2729)\n \n ## Changed\n - [#2652](https://github.com/plotly/dash/pull/2652) dcc.Clipboard supports htm_content and triggers a copy to clipboard when n_clicks are changed"
        },
        {
          "filename": "components/dash-core-components/package-lock.json",
          "status": "modified",
          "additions": 2949,
          "deletions": 2144,
          "patch": null
        },
        {
          "filename": "components/dash-core-components/package.json",
          "status": "modified",
          "additions": 8,
          "deletions": 6,
          "patch": "@@ -35,6 +35,7 @@\n   \"maintainer\": \"Alex Johnson <alex@plotly.com>\",\n   \"license\": \"MIT\",\n   \"dependencies\": {\n+    \"@braintree/sanitize-url\": \"^7.0.0\",\n     \"@fortawesome/fontawesome-svg-core\": \"1.2.36\",\n     \"@fortawesome/free-regular-svg-icons\": \"^5.15.4\",\n     \"@fortawesome/free-solid-svg-icons\": \"^5.15.4\",\n@@ -49,7 +50,7 @@\n     \"moment\": \"^2.29.4\",\n     \"node-polyfill-webpack-plugin\": \"^2.0.1\",\n     \"prop-types\": \"^15.8.1\",\n-    \"ramda\": \"^0.29.0\",\n+    \"ramda\": \"^0.29.1\",\n     \"rc-slider\": \"^9.7.5\",\n     \"react-addons-shallow-compare\": \"^15.6.3\",\n     \"react-dates\": \"^21.8.0\",\n@@ -64,11 +65,11 @@\n     \"uniqid\": \"^5.4.0\"\n   },\n   \"devDependencies\": {\n-    \"@babel/cli\": \"^7.23.0\",\n-    \"@babel/core\": \"^7.23.0\",\n+    \"@babel/cli\": \"^7.23.4\",\n+    \"@babel/core\": \"^7.23.7\",\n     \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n-    \"@babel/preset-env\": \"^7.22.20\",\n-    \"@babel/preset-react\": \"^7.22.15\",\n+    \"@babel/preset-env\": \"^7.23.8\",\n+    \"@babel/preset-react\": \"^7.23.3\",\n     \"@plotly/dash-component-plugins\": \"^1.2.3\",\n     \"@plotly/webpack-dash-dynamic-import\": \"^1.3.0\",\n     \"babel-loader\": \"^9.1.3\",\n@@ -88,9 +89,10 @@\n     \"react-jsx-parser\": \"1.21.0\",\n     \"style-loader\": \"^3.3.3\",\n     \"styled-jsx\": \"^3.4.4\",\n-    \"webpack\": \"^5.88.2\",\n+    \"webpack\": \"^5.90.0\",\n     \"webpack-cli\": \"^5.1.4\"\n   },\n+  \"optionalDependencies\": { \"fsevents\": \"*\" },\n   \"files\": [\n     \"/dash_core_components/*{.js,.map}\",\n     \"/lib/\""
        },
        {
          "filename": "components/dash-core-components/src/components/Link.react.js",
          "status": "modified",
          "additions": 47,
          "deletions": 46,
          "patch": "@@ -1,7 +1,7 @@\n import PropTypes from 'prop-types';\n \n-import React, {Component} from 'react';\n-\n+import React, {useEffect, useMemo} from 'react';\n+import {sanitizeUrl} from '@braintree/sanitize-url';\n import {isNil} from 'ramda';\n \n /*\n@@ -33,15 +33,23 @@ CustomEvent.prototype = window.Event.prototype;\n  * For links with destinations outside the current app, `html.A` is a better\n  * component to use.\n  */\n-export default class Link extends Component {\n-    constructor(props) {\n-        super(props);\n-        this.updateLocation = this.updateLocation.bind(this);\n-    }\n+const Link = props => {\n+    const {\n+        className,\n+        style,\n+        id,\n+        href,\n+        loading_state,\n+        children,\n+        title,\n+        target,\n+        refresh,\n+        setProps,\n+    } = props;\n+    const sanitizedUrl = useMemo(() => sanitizeUrl(href), [href]);\n \n-    updateLocation(e) {\n+    const updateLocation = e => {\n         const hasModifiers = e.metaKey || e.shiftKey || e.altKey || e.ctrlKey;\n-        const {href, refresh, target} = this.props;\n \n         if (hasModifiers) {\n             return;\n@@ -52,49 +60,40 @@ export default class Link extends Component {\n         // prevent anchor from updating location\n         e.preventDefault();\n         if (refresh) {\n-            window.location = href;\n+            window.location = sanitizedUrl;\n         } else {\n-            window.history.pushState({}, '', href);\n+            window.history.pushState({}, '', sanitizedUrl);\n             window.dispatchEvent(new CustomEvent('_dashprivate_pushstate'));\n         }\n         // scroll back to top\n         window.scrollTo(0, 0);\n-    }\n+    };\n \n-    render() {\n-        const {\n-            className,\n-            style,\n-            id,\n-            href,\n-            loading_state,\n-            children,\n-            title,\n-            target,\n-        } = this.props;\n-        /*\n-         * ideally, we would use cloneElement however\n-         * that doesn't work with dash's recursive\n-         * renderTree implementation for some reason\n-         */\n-        return (\n-            <a\n-                data-dash-is-loading={\n-                    (loading_state && loading_state.is_loading) || undefined\n-                }\n-                id={id}\n-                className={className}\n-                style={style}\n-                href={href}\n-                onClick={e => this.updateLocation(e)}\n-                title={title}\n-                target={target}\n-            >\n-                {isNil(children) ? href : children}\n-            </a>\n-        );\n-    }\n-}\n+    useEffect(() => {\n+        if (sanitizedUrl !== href) {\n+            setProps({\n+                _dash_error: new Error(`Dangerous link detected:: ${href}`),\n+            });\n+        }\n+    }, [href, sanitizedUrl]);\n+\n+    return (\n+        <a\n+            data-dash-is-loading={\n+                (loading_state && loading_state.is_loading) || undefined\n+            }\n+            id={id}\n+            className={className}\n+            style={style}\n+            href={sanitizedUrl}\n+            onClick={updateLocation}\n+            title={title}\n+            target={target}\n+        >\n+            {isNil(children) ? sanitizedUrl : children}\n+        </a>\n+    );\n+};\n \n Link.propTypes = {\n     /**\n@@ -151,8 +150,10 @@ Link.propTypes = {\n          */\n         component_name: PropTypes.string,\n     }),\n+    setProps: PropTypes.func,\n };\n \n Link.defaultProps = {\n     refresh: false,\n };\n+export default Link;"
        },
        {
          "filename": "components/dash-html-components/package-lock.json",
          "status": "modified",
          "additions": 2786,
          "deletions": 1934,
          "patch": null
        },
        {
          "filename": "components/dash-html-components/package.json",
          "status": "modified",
          "additions": 10,
          "deletions": 13,
          "patch": "@@ -28,16 +28,15 @@\n   \"author\": \"Chris Parmer <chris@plotly.com>\",\n   \"maintainer\": \"Alex Johnson <alex@plotly.com>\",\n   \"dependencies\": {\n+    \"@braintree/sanitize-url\": \"^7.0.0\",\n     \"prop-types\": \"^15.8.1\",\n-    \"ramda\": \"^0.29.0\",\n-    \"react\": \"^18.2.0\",\n-    \"react-dom\": \"^18.2.0\"\n+    \"ramda\": \"^0.29.0\"\n   },\n   \"devDependencies\": {\n-    \"@babel/cli\": \"^7.23.0\",\n-    \"@babel/core\": \"^7.23.0\",\n-    \"@babel/preset-env\": \"^7.22.20\",\n-    \"@babel/preset-react\": \"^7.22.15\",\n+    \"@babel/cli\": \"^7.23.4\",\n+    \"@babel/core\": \"^7.23.7\",\n+    \"@babel/preset-env\": \"^7.23.8\",\n+    \"@babel/preset-react\": \"^7.23.3\",\n     \"babel-loader\": \"^9.1.3\",\n     \"cheerio\": \"^0.22.0\",\n     \"cross-env\": \"^7.0.3\",\n@@ -49,16 +48,14 @@\n     \"react-docgen\": \"^5.4.3\",\n     \"request\": \"^2.88.2\",\n     \"string\": \"^3.3.3\",\n-    \"webpack\": \"^5.88.2\",\n-    \"webpack-cli\": \"^5.1.4\"\n+    \"webpack\": \"^5.90.0\",\n+    \"webpack-cli\": \"^5.1.4\",\n+    \"react\": \"^16.14.0\",\n+    \"react-dom\": \"^16.14.0\"\n   },\n   \"files\": [\n     \"/dash_html_components/*{.js,.map}\"\n   ],\n-  \"peerDependencies\": {\n-    \"react\": \">=17\",\n-    \"react-dom\": \">=17\"\n-  },\n   \"browserslist\": [\n     \"last 8 years and not dead\"\n   ]"
        },
        {
          "filename": "components/dash-html-components/scripts/generate-components.js",
          "status": "modified",
          "additions": 43,
          "deletions": 4,
          "patch": "@@ -249,27 +249,66 @@ const customDocs = {\n  * <body>.`\n };\n \n+const customImportsForComponents = {\n+    a: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+    form: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+    iframe: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+    object: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+    embed: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+    button: `import {sanitizeUrl} from '@braintree/sanitize-url';`,\n+}\n+\n+function createXSSProtection(propName) {\n+    return `\n+    const ${propName} = React.useMemo(() => props.${propName} && sanitizeUrl(props.${propName}), [props.${propName}]);\n+    \n+    if (${propName}) {\n+        extraProps.${propName} = ${propName};\n+    }\n+    \n+    React.useEffect(() => {\n+        if (${propName} && ${propName} !== props.${propName}) {\n+            props.setProps({_dash_error: new Error(\\`Dangerous link detected: \\${props.${propName}}\\`)})\n+        }\n+    }, [props.${propName}, ${propName}]);\n+    `\n+}\n+\n+\n+const customCodesForComponents = {\n+    a: createXSSProtection('href'),\n+    form: createXSSProtection('action'),\n+    iframe: createXSSProtection('src'),\n+    object: createXSSProtection('data'),\n+    embed: createXSSProtection('src'),\n+    button: createXSSProtection('formAction')\n+}\n+\n function generateComponent(Component, element, attributes) {\n     const propTypes = generatePropTypes(element, attributes);\n \n+    const customImport = customImportsForComponents[element] || '';\n     const customDoc = customDocs[element] ? ('\\n *' + customDocs[element] + '\\n *') : '';\n \n+    const customCode = customCodesForComponents[element] || '';\n+\n     return `\n import React from 'react';\n import PropTypes from 'prop-types';\n import {omit} from 'ramda';\n+${customImport}\n \n /**\n  * ${Component} is a wrapper for the <${element}> HTML5 element.${customDoc}\n  * For detailed attribute info see:\n  * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/${element}\n  */\n const ${Component} = (props) => {\n-    const dataAttributes = {};\n+    const extraProps = {};\n     if(props.loading_state && props.loading_state.is_loading) {\n-        dataAttributes['data-dash-is-loading'] = true;\n+        extraProps['data-dash-is-loading'] = true;\n     }\n-\n+${customCode}\n      /* remove unnecessary onClick event listeners  */\n     const isStatic = props.disable_n_clicks || !props.id;\n     return (\n@@ -281,7 +320,7 @@ const ${Component} = (props) => {\n             })\n             })}\n             {...omit(['n_clicks', 'n_clicks_timestamp', 'loading_state', 'setProps', 'disable_n_clicks'], props)}\n-            {...dataAttributes}\n+            {...extraProps}\n         >\n             {props.children}\n         </${element}>"
        },
        {
          "filename": "components/dash-table/package-lock.json",
          "status": "modified",
          "additions": 3519,
          "deletions": 3746,
          "patch": null
        },
        {
          "filename": "components/dash-table/package.json",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -41,13 +41,13 @@\n   \"maintainer\": \"Alex Johnson <alex@plotly.com>\",\n   \"license\": \"MIT\",\n   \"devDependencies\": {\n-    \"@babel/cli\": \"^7.23.0\",\n-    \"@babel/core\": \"^7.23.0\",\n+    \"@babel/cli\": \"^7.23.4\",\n+    \"@babel/core\": \"^7.23.7\",\n     \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n-    \"@babel/plugin-transform-regenerator\": \"^7.22.10\",\n+    \"@babel/plugin-transform-regenerator\": \"^7.23.3\",\n     \"@babel/polyfill\": \"^7.12.1\",\n-    \"@babel/preset-env\": \"^7.22.20\",\n-    \"@babel/preset-react\": \"^7.22.15\",\n+    \"@babel/preset-env\": \"^7.23.8\",\n+    \"@babel/preset-react\": \"^7.23.3\",\n     \"@fortawesome/fontawesome-svg-core\": \"1.2.36\",\n     \"@fortawesome/free-regular-svg-icons\": \"^5.15.4\",\n     \"@fortawesome/free-solid-svg-icons\": \"^5.15.4\",\n@@ -92,7 +92,7 @@\n     \"npm-run-all\": \"^4.1.5\",\n     \"papaparse\": \"^5.4.1\",\n     \"prettier\": \"^2.8.8\",\n-    \"ramda\": \"^0.29.0\",\n+    \"ramda\": \"^0.29.1\",\n     \"raw-loader\": \"^4.0.2\",\n     \"react\": \"^16.14.0\",\n     \"react-docgen\": \"^5.4.3\",\n@@ -103,8 +103,8 @@\n     \"sheetclip\": \"^0.3.0\",\n     \"style-loader\": \"^3.3.3\",\n     \"ts-loader\": \"^9.4.3\",\n-    \"typescript\": \"^5.0.4\",\n-    \"webpack\": \"^5.88.2\",\n+    \"typescript\": \"^5.3.3\",\n+    \"webpack\": \"^5.90.0\",\n     \"webpack-cli\": \"^5.1.4\",\n     \"webpack-dev-server\": \"^4.15.1\",\n     \"webpack-preprocessor\": \"^0.1.12\","
        },
        {
          "filename": "components/dash-table/src/dash-table/components/ControlledTable/index.tsx",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1207,12 +1207,12 @@ export default class ControlledTable extends PureComponent<ControlledTableProps>\n     ) => {\n         const {columns, hidden_columns: base, setProps} = this.props;\n \n-        const ids: string[] = actions.getColumnIds(\n+        const ids = actions.getColumnIds(\n             column,\n             columns,\n             headerRowIndex,\n             mergeDuplicateHeaders\n-        );\n+        ) as string[];\n \n         const hidden_columns = base ? base.slice(0) : [];\n         ids.forEach(id => {"
        },
        {
          "filename": "components/dash-table/src/dash-table/components/Export/utils.tsx",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -72,6 +72,8 @@ export async function createWorkbook(\n \n     const ws = XLSX.utils.aoa_to_sheet([]);\n \n+    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n+    // @ts-ignore\n     data = R.map(R.pick(columnID))(data);\n \n     if ("
        },
        {
          "filename": "components/dash-table/src/dash-table/derived/header/content.tsx",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -418,7 +418,7 @@ function getter(\n                                                           hiddenColumns\n                                                               ? R.union(\n                                                                     hiddenColumns,\n-                                                                    ids\n+                                                                    ids as string[]\n                                                                 )\n                                                               : ids;\n "
        },
        {
          "filename": "components/dash-table/src/dash-table/derived/style/index.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -103,6 +103,8 @@ function convertElement(style: GenericStyle): IConvertedStyle {\n }\n \n function convertStyle(style: Style): CSSProperties {\n+    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n+    // @ts-ignore\n     return R.reduce<[string, StyleProperty?], any>(\n         (res, [key, value]) => {\n             if (converter.has(key)) {"
        },
        {
          "filename": "dash/dash-renderer/package-lock.json",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -5752,9 +5752,9 @@\n       \"dev\": true\n     },\n     \"node_modules/follow-redirects\": {\n-      \"version\": \"1.15.2\",\n-      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz\",\n-      \"integrity\": \"sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==\",\n+      \"version\": \"1.15.5\",\n+      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.5.tgz\",\n+      \"integrity\": \"sha512-vSFWUON1B+yAw1VN4xMfxgn5fTUiaOzAJCKBwIIgT/+7CuGy9+r+5gITvP62j3RmaD5Ph65UaERdOSRGUzZtgw==\",\n       \"dev\": true,\n       \"funding\": [\n         {\n@@ -14865,9 +14865,9 @@\n       \"dev\": true\n     },\n     \"follow-redirects\": {\n-      \"version\": \"1.15.2\",\n-      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz\",\n-      \"integrity\": \"sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA==\",\n+      \"version\": \"1.15.5\",\n+      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.5.tgz\",\n+      \"integrity\": \"sha512-vSFWUON1B+yAw1VN4xMfxgn5fTUiaOzAJCKBwIIgT/+7CuGy9+r+5gITvP62j3RmaD5Ph65UaERdOSRGUzZtgw==\",\n       \"dev\": true\n     },\n     \"for-each\": {"
        },
        {
          "filename": "dash/dash-renderer/src/TreeContainer.js",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -23,7 +23,7 @@ import {\n     pathOr,\n     type\n } from 'ramda';\n-import {notifyObservers, updateProps} from './actions';\n+import {notifyObservers, updateProps, onError} from './actions';\n import isSimpleComponent from './isSimpleComponent';\n import {recordUiEdit} from './persistence';\n import ComponentErrorBoundary from './components/error/ComponentErrorBoundary.react';\n@@ -136,11 +136,21 @@ class BaseTreeContainer extends Component {\n \n         const oldProps = this.getLayoutProps();\n         const {id} = oldProps;\n+        const {_dash_error, ...rest} = newProps;\n         const changedProps = pickBy(\n             (val, key) => !equals(val, oldProps[key]),\n-            newProps\n+            rest\n         );\n \n+        if (_dash_error) {\n+            _dashprivate_dispatch(\n+                onError({\n+                    type: 'frontEnd',\n+                    error: _dash_error\n+                })\n+            );\n+        }\n+\n         if (!isEmpty(changedProps)) {\n             _dashprivate_dispatch((dispatch, getState) => {\n                 const {graphs} = getState();"
        },
        {
          "filename": "tests/integration/security/test_xss.py",
          "status": "added",
          "additions": 47,
          "deletions": 0,
          "patch": "@@ -0,0 +1,47 @@\n+from dash import Dash, html, dcc\n+\n+\n+def test_xss001_banned_protocols(dash_duo):\n+    app = Dash()\n+\n+    app.layout = html.Div(\n+        [\n+            dcc.Link(\"dcc-link\", href=\"javascript:alert(1)\", id=\"dcc-link\"),\n+            html.Br(),\n+            html.A(\n+                \"html.A\", href='javascr\\nipt:alert(1);console.log(\"xss\");', id=\"html-A\"\n+            ),\n+            html.Br(),\n+            html.Form(\n+                [\n+                    html.Button(\n+                        \"form-action\",\n+                        formAction=\"javascript:alert('form-action')\",\n+                        id=\"button-form-action\",\n+                    ),\n+                    html.Button(\"submit\", role=\"submit\"),\n+                ],\n+                action='javascript:alert(1);console.log(\"xss\");',\n+                id=\"form\",\n+            ),\n+            html.Iframe(src='javascript:alert(\"iframe\")', id=\"iframe-src\"),\n+            html.ObjectEl(data='javascript:alert(\"data-object\")', id=\"object-data\"),\n+            html.Embed(src='javascript:alert(\"embed\")', id=\"embed-src\"),\n+        ]\n+    )\n+\n+    dash_duo.start_server(app)\n+\n+    for element_id, prop in (\n+        (\"#dcc-link\", \"href\"),\n+        (\"#html-A\", \"href\"),\n+        (\"#iframe-src\", \"src\"),\n+        (\"#object-data\", \"data\"),\n+        (\"#embed-src\", \"src\"),\n+        (\"#button-form-action\", \"formAction\"),\n+    ):\n+\n+        element = dash_duo.find_element(element_id)\n+        assert (\n+            element.get_attribute(prop) == \"about:blank\"\n+        ), f\"Failed prop: {element_id}.{prop}\""
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 7,
        "dependency_files": 3,
        "test_files": 1,
        "unique_directories": 13,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7ba267bf9e1c956816f76900bbdbcf85dbf3ff6d",
            "date": "2024-12-11T17:57:01Z",
            "author_login": "KoolADE85"
          },
          {
            "sha": "41b58d0b63ac6911d42500388ba1eb22aac8b0da",
            "date": "2024-12-11T16:23:01Z",
            "author_login": "KoolADE85"
          },
          {
            "sha": "30ee6b60cb01c55113b847d8ce2e8c4f689842e4",
            "date": "2024-12-11T16:20:08Z",
            "author_login": "KoolADE85"
          },
          {
            "sha": "97a1d6604d0c2343ecdec6996f57971e695917bf",
            "date": "2024-12-11T15:54:43Z",
            "author_login": "T4rk1n"
          },
          {
            "sha": "f15e8fc522f5ff7d37792dff1881aa092b739ed1",
            "date": "2024-12-11T14:47:34Z",
            "author_login": "T4rk1n"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Versions of the package dash-core-components before 2.13.0; versions of the package dash-core-components before 2.0.0; versions of the package dash before 2.15.0; versions of the package dash-html-components before 2.0.0; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.\r\r**Note:**\r\rThis is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-02-02T05:15:09.510",
    "last_modified": "2024-11-21T08:54:31.980",
    "fix_date": "2024-01-30T20:48:39Z"
  },
  "references": [
    {
      "url": "https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/issues/2729",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/pull/2732",
      "source": "report@snyk.io",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/releases/tag/v2.15.0",
      "source": "report@snyk.io",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/issues/2729",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/pull/2732",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/plotly/dash/releases/tag/v2.15.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.578565",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dash",
    "owner": "plotly",
    "created_at": "2015-04-10T01:53:08Z",
    "updated_at": "2025-01-14T20:17:04Z",
    "pushed_at": "2025-01-14T20:04:45Z",
    "size": 171891,
    "stars": 21792,
    "forks": 2093,
    "open_issues": 511,
    "watchers": 21792,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev"
    ],
    "languages": {
      "Python": 1498570,
      "TypeScript": 870825,
      "HTML": 755370,
      "JavaScript": 684288,
      "Less": 22320,
      "CSS": 17507,
      "Shell": 402
    },
    "commit_activity": {
      "total_commits_last_year": 440,
      "avg_commits_per_week": 8.461538461538462,
      "days_active_last_year": 134
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:43:59.572688"
  }
}