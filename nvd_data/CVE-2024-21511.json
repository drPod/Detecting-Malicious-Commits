{
  "cve_id": "CVE-2024-21511",
  "github_data": {
    "repository": "sidorares/node-mysql2",
    "fix_commit": "7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713",
    "related_commits": [
      "7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713",
      "7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713"
    ],
    "patch_url": "https://github.com/sidorares/node-mysql2/commit/7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713.patch",
    "fix_commit_details": {
      "sha": "7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713",
      "commit_date": "2024-04-21T10:59:27Z",
      "author": {
        "login": "sidorares",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(security): sanitize timezone parameter value to prevent code injection (#2608)",
        "length": 196,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 52,
        "deletions": 4
      },
      "files": [
        {
          "filename": "lib/parsers/binary_parser.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -42,9 +42,9 @@ function readCodeFor(field, config, options, fieldNum) {\n     case Types.TIMESTAMP:\n     case Types.NEWDATE:\n       if (helpers.typeMatch(field.columnType, dateStrings, Types)) {\n-        return `packet.readDateTimeString(${field.decimals});`;\n+        return `packet.readDateTimeString(${parseInt(field.decimals, 10)});`;\n       }\n-      return `packet.readDateTime('${timezone}');`;\n+      return `packet.readDateTime(${helpers.srcEscape(timezone)});`;\n     case Types.TIME:\n       return 'packet.readTimeString()';\n     case Types.DECIMAL:"
        },
        {
          "filename": "lib/parsers/text_parser.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -48,13 +48,13 @@ function readCodeFor(type, charset, encodingExpr, config, options) {\n       if (helpers.typeMatch(type, dateStrings, Types)) {\n         return 'packet.readLengthCodedString(\"ascii\")';\n       }\n-      return `packet.parseDate('${timezone}')`;\n+      return `packet.parseDate(${helpers.srcEscape(timezone)})`;\n     case Types.DATETIME:\n     case Types.TIMESTAMP:\n       if (helpers.typeMatch(type, dateStrings, Types)) {\n         return 'packet.readLengthCodedString(\"ascii\")';\n       }\n-      return `packet.parseDateTime('${timezone}')`;\n+      return `packet.parseDateTime(${helpers.srcEscape(timezone)})`;\n     case Types.TIME:\n       return 'packet.readLengthCodedString(\"ascii\")';\n     case Types.GEOMETRY:"
        },
        {
          "filename": "test/esm/unit/parsers/timezone-binary-sanitization.test.mjs",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+import { describe, test, assert } from 'poku';\n+import { createConnection, describeOptions } from '../../../common.test.cjs';\n+\n+const connection = createConnection().promise();\n+\n+describe('Binary Parser: timezone Sanitization', describeOptions);\n+\n+Promise.all([\n+  test(async () => {\n+    process.env.TEST_ENV_VALUE = 'secure';\n+    await connection.execute({\n+      sql: 'SELECT NOW()',\n+      timezone: `'); process.env.TEST_ENV_VALUE = \"not so much\"; //`,\n+    });\n+\n+    assert.strictEqual(\n+      process.env.TEST_ENV_VALUE,\n+      'secure',\n+      'Timezone sanitization failed - code injection possible',\n+    );\n+  }),\n+]).then(async () => {\n+  await connection.end();\n+});"
        },
        {
          "filename": "test/esm/unit/parsers/timezone-text-sanitization.test.mjs",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+import { describe, test, assert } from 'poku';\n+import { createConnection, describeOptions } from '../../../common.test.cjs';\n+\n+const connection = createConnection().promise();\n+\n+describe('Text Parser: timezone Sanitization', describeOptions);\n+\n+Promise.all([\n+  test(async () => {\n+    process.env.TEST_ENV_VALUE = 'secure';\n+    await connection.query({\n+      sql: 'SELECT NOW()',\n+      timezone: `'); process.env.TEST_ENV_VALUE = \"not so much\"; //`,\n+    });\n+\n+    assert.strictEqual(\n+      process.env.TEST_ENV_VALUE,\n+      'secure',\n+      'Timezone sanitization failed - code injection possible',\n+    );\n+  }),\n+]).then(async () => {\n+  await connection.end();\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 2,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d48f143842408e614f4cfa549b04c1f06d2f1745",
            "date": "2025-01-11T02:34:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bb54aabc1c171ad99b5e5e9079ef276465563f58",
            "date": "2025-01-11T02:25:47Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "02eb0bbc85a9b0d851c994fdd540de0306a72b99",
            "date": "2025-01-11T02:22:04Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "aa1db5e94be9b6a14f5b206b53281b8b453e2b1e",
            "date": "2025-01-11T02:14:30Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "ea326068b1fe6f9b9def06252d1d5b873281f282",
            "date": "2025-01-09T15:16:47Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Versions of the package mysql2 before 3.9.7 are vulnerable to Arbitrary Code Injection due to improper sanitization of the timezone parameter in the readCodeFor function by calling a native MySQL Server date/time function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-23T05:15:48.963",
    "last_modified": "2024-11-21T08:54:35.180",
    "fix_date": "2024-04-21T10:59:27Z"
  },
  "references": [
    {
      "url": "https://github.com/sidorares/node-mysql2/commit/7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/sidorares/node-mysql2/pull/2608",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/sidorares/node-mysql2/releases/tag/v3.9.7",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6670046",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/sidorares/node-mysql2/commit/7d4b098c7e29d5a6cb9eac2633bfcc2f0f1db713",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/sidorares/node-mysql2/pull/2608",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/sidorares/node-mysql2/releases/tag/v3.9.7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-MYSQL2-6670046",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:07.010536",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "node-mysql2",
    "owner": "sidorares",
    "created_at": "2013-04-17T05:23:59Z",
    "updated_at": "2025-01-14T05:00:36Z",
    "pushed_at": "2025-01-14T12:22:35Z",
    "size": 107518,
    "stars": 4130,
    "forks": 626,
    "open_issues": 492,
    "watchers": 4130,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 772914,
      "TypeScript": 56469,
      "Shell": 123,
      "HTML": 43
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:22:43.885107"
  }
}