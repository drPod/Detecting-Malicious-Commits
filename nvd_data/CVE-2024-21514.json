{
  "cve_id": "CVE-2024-21514",
  "github_data": {
    "repository": "opencart/opencart",
    "fix_commit": "46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2",
    "related_commits": [
      "46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2",
      "46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2"
    ],
    "patch_url": "https://github.com/opencart/opencart/commit/46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2.patch",
    "fix_commit_details": {
      "sha": "46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2",
      "commit_date": "2024-05-15T16:12:12Z",
      "author": {
        "login": "danielkerr",
        "type": "User",
        "stats": {
          "total_commits": 8688,
          "average_weekly_commits": 13.223744292237443,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 562
        }
      },
      "commit_message": {
        "title": "removed divido as who ever put it there left some big issues",
        "length": 60,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 1857,
        "additions": 0,
        "deletions": 1857
      },
      "files": [
        {
          "filename": "upload/admin/controller/extension/module/divido_calculator.php",
          "status": "removed",
          "additions": 0,
          "deletions": 64,
          "patch": "@@ -1,64 +0,0 @@\n-<?php\n-class ControllerExtensionModuleDividoCalculator extends Controller {\n-\tprivate $error = array();\n-\n-\tpublic function index() {\n-\t\t$this->load->language('extension/module/divido_calculator');\n-\t\t$this->load->model('setting/setting');\n-\n-\t\t$this->document->setTitle($this->language->get('heading_title'));\n-\n-\t\tif (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {\n-\t\t\t$this->model_setting_setting->editSetting('module_divido_calculator', $this->request->post);\n-\t\t\t$this->session->data['success'] = $this->language->get('text_success');\n-\t\t\t$this->response->redirect($this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true));\n-\t\t}\n-\n-\t\tif (isset($this->error['warning'])) {\n-\t\t\t$data['error_warning'] = $this->error['warning'];\n-\t\t} else {\n-\t\t\t$data['error_warning'] = '';\n-\t\t}\n-\n-\t\t$data['breadcrumbs'] = array();\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('text_home'),\n-\t\t\t'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true)\n-\t\t);\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('text_extension'),\n-\t\t\t'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true)\n-\t\t);\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('heading_title'),\n-\t\t\t'href' => $this->url->link('extension/module/divido_calculator', 'user_token=' . $this->session->data['user_token'], true)\n-\t\t);\n-\n-\t\t$data['action'] = $this->url->link('extension/module/divido_calculator', 'user_token=' . $this->session->data['user_token'], true);\n-\n-\t\t$data['cancel'] = $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true);\n-\n-\t\tif (isset($this->request->post['module_divido_calculator_status'])) {\n-\t\t\t$data['module_divido_calculator_status'] = $this->request->post['module_divido_calculator_status'];\n-\t\t} else {\n-\t\t\t$data['module_divido_calculator_status'] = $this->config->get('module_divido_calculator_status');\n-\t\t}\n-\n-\t\t$data['header'] = $this->load->controller('common/header');\n-\t\t$data['column_left'] = $this->load->controller('common/column_left');\n-\t\t$data['footer'] = $this->load->controller('common/footer');\n-\n-\t\t$this->response->setOutput($this->load->view('extension/module/divido_calculator', $data));\n-\t}\n-\n-\tprotected function validate() {\n-\t\tif (!$this->user->hasPermission('modify', 'extension/module/divido_calculator')) {\n-\t\t\t$this->error['warning'] = $this->language->get('error_permission');\n-\t\t}\n-\n-\t\treturn !$this->error;\n-\t}\n-}"
        },
        {
          "filename": "upload/admin/controller/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 215,
          "patch": "@@ -1,215 +0,0 @@\n-<?php\n-class ControllerExtensionPaymentDivido extends Controller {\n-\tprivate $error = array();\n-\n-\tpublic function index() {\n-\t\t$this->load->language('extension/payment/divido');\n-\n-\t\t$this->document->setTitle($this->language->get('heading_title'));\n-\n-\t\t$this->load->model('setting/setting');\n-\t\t$this->load->model('extension/payment/divido');\n-\n-\t\tif ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validate()) {\n-\t\t\t$this->model_setting_setting->editSetting('payment_divido', $this->request->post);\n-\t\t\t\n-\t\t\t$this->session->data['success'] = $this->language->get('text_success');\n-\t\t\t\n-\t\t\t$this->response->redirect($this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', true));\n-\t\t}\n-\n-\t\t$data['entry_plans_options'] = array(\n-\t\t\t'all'\t\t=> $this->language->get('entry_plans_options_all'),\n-\t\t\t'selected'\t=> $this->language->get('entry_plans_options_selected'),\n-\t\t);\n-\n-\t\t$data['entry_products_options']= array(\n-\t\t\t'all'\t\t=> $this->language->get('entry_products_options_all'),\n-\t\t\t'selected'\t=> $this->language->get('entry_products_options_selected'),\n-\t\t\t'threshold'\t=> $this->language->get('entry_products_options_threshold'),\n-\t\t);\n-\n-\t\t$data['button_save'] = $this->language->get('button_save');\n-\t\t$data['button_cancel'] = $this->language->get('button_cancel');\n-\n-\t\t$this->load->model('localisation/order_status');\n-\n-\t\t$data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();\n-\n-\t\tif (isset($this->error['warning'])) {\n-\t\t\t$data['error_warning'] = $this->error['warning'];\n-\t\t} else {\n-\t\t\t$data['error_warning'] = '';\n-\t\t}\n-\n-\t\t$data['breadcrumbs'] = array();\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('text_home'),\n-\t\t\t'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true)\n-\t\t);\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('text_extension'),\n-\t\t\t'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', true)\n-\t\t);\n-\n-\t\t$data['breadcrumbs'][] = array(\n-\t\t\t'text' => $this->language->get('heading_title'),\n-\t\t\t'href' => $this->url->link('extension/payment/divido', 'user_token=' . $this->session->data['user_token'], true)\n-\t\t);\n-\n-\t\t$data['action'] = $this->url->link('extension/payment/divido', 'user_token=' . $this->session->data['user_token'], 'SSL');\n-\t\t\n-\t\t$data['cancel'] = $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', 'SSL');\n-\n-\t\tif (isset($this->request->post['payment_divido_api_key'])) {\n-\t\t\t$data['payment_divido_api_key'] = $this->request->post['payment_divido_api_key'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_api_key'] = $this->config->get('payment_divido_api_key');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_order_status_id'])) {\n-\t\t\t$data['payment_divido_order_status_id'] = $this->request->post['payment_divido_order_status_id'];\n-\t\t} elseif ($this->config->get('payment_divido_order_status_id')) {\n-\t\t\t$data['payment_divido_order_status_id'] = $this->config->get('payment_divido_order_status_id');\n-\t\t} else {\n-\t\t\t$data['payment_divido_order_status_id'] = 2;\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_status'])) {\n-\t\t\t$data['payment_divido_status'] = $this->request->post['payment_divido_status'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_status'] = $this->config->get('payment_divido_status');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_sort_order'])) {\n-\t\t\t$data['payment_divido_sort_order'] = $this->request->post['payment_divido_sort_order'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_sort_order'] = $this->config->get('payment_divido_sort_order');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_title'])) {\n-\t\t\t$data['payment_divido_title'] = $this->request->post['payment_divido_title'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_title'] = $this->config->get('payment_divido_title');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_productselection'])) {\n-\t\t\t$data['payment_divido_productselection'] = $this->request->post['payment_divido_productselection'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_productselection'] = $this->config->get('payment_divido_productselection');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_price_threshold'])) {\n-\t\t\t$data['payment_divido_price_threshold'] = $this->request->post['payment_divido_price_threshold'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_price_threshold'] = $this->config->get('payment_divido_price_threshold');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_cart_threshold'])) {\n-\t\t\t$data['payment_divido_cart_threshold'] = $this->request->post['payment_divido_cart_threshold'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_cart_threshold'] = $this->config->get('payment_divido_cart_threshold');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_planselection'])) {\n-\t\t\t$data['payment_divido_planselection'] = $this->request->post['payment_divido_planselection'];\n-\t\t} else {\n-\t\t\t$data['payment_divido_planselection'] = $this->config->get('payment_divido_planselection');\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_plans_selected'])) {\n-\t\t\t$data['payment_divido_plans_selected'] = $this->request->post['payment_divido_plans_selected'];\n-\t\t} elseif ($this->config->get('payment_divido_plans_selected')) {\n-\t\t\t$data['payment_divido_plans_selected'] = $this->config->get('payment_divido_plans_selected');\n-\t\t} else {\n-\t\t\t$data['payment_divido_plans_selected'] = array();\n-\t\t}\n-\n-\t\tif (isset($this->request->post['payment_divido_categories'])) {\n-\t\t\t$data['payment_divido_categories'] = $this->request->post['payment_divido_categories'];\n-\t\t} elseif ($this->config->get('payment_divido_categories')) {\n-\t\t\t$data['payment_divido_categories'] = $this->config->get('payment_divido_categories');\n-\t\t} else {\n-\t\t\t$data['payment_divido_categories'] = array();\n-\t\t}\n-\n-\t\t$data['categories'] = array();\n-\n-\t\t$this->load->model('catalog/category');\n-\n-\t\tforeach ($data['payment_divido_categories'] as $category_id) {\n-\t\t\t$category_info = $this->model_catalog_category->getCategory($category_id);\n-\n-\t\t\tif ($category_info) {\n-\t\t\t\t$data['categories'][] = array(\n-\t\t\t\t\t'category_id' \t=> $category_info['category_id'],\n-\t\t\t\t\t'name' \t\t\t=> ($category_info['path']) ? $category_info['path'] . ' &gt; ' . $category_info['name'] : $category_info['name']\n-\t\t\t\t);\n-\t\t\t}\n-\t\t}\n-\n-\t\ttry {\n-\t\t\t$data['divido_plans'] = $this->model_extension_payment_divido->getAllPlans();\n-\t\t} catch (Exception $e) {\n-\t\t\t$this->log->write($e->getMessage());\n-\t\t\t$data['divido_plans'] = array();\n-\t\t}\n-\n-\t\t$data['user_token'] = $this->session->data['user_token'];\n-\n-\t\t$data['header'] = $this->load->controller('common/header');\n-\t\t$data['column_left'] = $this->load->controller('common/column_left');\n-\t\t$data['footer'] = $this->load->controller('common/footer');\n-\n-\t\t$this->response->setOutput($this->load->view('extension/payment/divido', $data));\n-\t}\n-\n-\n-\tpublic function order() {\n-\t\tif (!$this->config->get('payment_divido_status')) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->load->language('extension/payment/divido');\n-\n-\t\t$order_id = $this->request->get['order_id'];\n-\n-\t\t$lookup = $this->model_extension_payment_divido->getLookupByOrderId($order_id);\n-\t\t$proposal_id = null;\n-\t\t$application_id = null;\n-\t\t$deposit_amount = null;\n-\t\tif ($lookup->num_rows == 1) {\n-\t\t\t$lookup_data = $lookup->row;\n-\t\t\t$proposal_id = $lookup_data['proposal_id'];\n-\t\t\t$application_id = $lookup_data['application_id'];\n-\t\t\t$deposit_amount = $lookup_data['deposit_amount'];\n-\t\t}\n-\n-\t\t$data['proposal_id'] = $proposal_id;\n-\t\t$data['application_id'] = $application_id;\n-\t\t$data['deposit_amount'] = $deposit_amount;\n-\n-\t\treturn $this->load->view('extension/payment/divido_order', $data);\n-\t}\n-\n-\tpublic function install() {\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->model_extension_payment_divido->install();\n-\t}\n-\n-\tpublic function uninstall() {\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->model_extension_payment_divido->uninstall();\n-\t}\n-\n-\tprotected function validate() {\n-\t\tif (!$this->user->hasPermission('modify', 'extension/payment/divido')) {\n-\t\t\t$this->error['warning'] = $this->language->get('error_permission');\n-\t\t}\n-\n-\t\treturn !$this->error;\n-\t}\n-}"
        },
        {
          "filename": "upload/admin/language/en-gb/extension/module/divido_calculator.php",
          "status": "removed",
          "additions": 0,
          "deletions": 14,
          "patch": "@@ -1,14 +0,0 @@\n-<?php\n-// Heading\n-$_['heading_title']    = 'Divido Product Page Calculator';\n-\n-// Text\n-$_['text_extension']   = 'Extensions';\n-$_['text_success']     = 'Success: You have modified Divido Product Page Calculator!';\n-$_['text_edit']        = 'Edit Divido Product Page Calculator';\n-\n-// Entry\n-$_['entry_status']     = 'Status';\n-\n-// Error\n-$_['error_permission'] = 'Warning: You do not have permission to modify module Divido Product Page Calculator!';\n\\ No newline at end of file"
        },
        {
          "filename": "upload/admin/language/en-gb/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 42,
          "patch": "@@ -1,42 +0,0 @@\n-<?php\n-// Heading\n-$_['heading_title']                    = 'Divido';\n-\n-// Text\n-$_['text_divido']                      = '<a href=\"http://divido.com\" target=\"_blank\"><img src=\"view/image/payment/divido.png\"></a>';\n-$_['text_edit']                        = 'Edit Divido';\n-$_['text_extension']                   = 'Extensions';\n-$_['text_order_info']                  = 'Divido info';\n-$_['text_success']                     = 'Success: You have modified the Divido module';\n-$_['text_proposal_id']                 = 'Proposal ID';\n-$_['text_application_id']              = 'Application ID';\n-$_['text_deposit_amount']              = 'Deposit amount';\n-\n-// Entry\n-$_['entry_order_status']               = 'Order status when approved';\n-$_['entry_sort_order']                 = 'Sort order';\n-$_['entry_status']                     = 'Status';\n-$_['entry_api_key']                    = 'API-key';\n-$_['entry_title']                      = 'Title';\n-$_['entry_productselection']           = 'Product selection';\n-$_['entry_planselection']              = 'Show default plan';\n-$_['entry_planlist']                   = 'Plans';\n-$_['entry_plans_options_all']          = 'Show all plans';\n-$_['entry_plans_options_selected']     = 'Select default plans';\n-$_['entry_products_options_all']       = 'All products';\n-$_['entry_products_options_selected']  = 'Only selected products';\n-$_['entry_products_options_threshold'] = 'All products above a defined price';\n-$_['entry_price_threshold']            = 'Product price threshold';\n-$_['entry_cart_threshold']             = 'Cart total threshold';\n-$_['entry_threshold_list']             = 'Plan thresholds';\n-$_['entry_category']                   = 'Categories';\n-\n-// Help\n-$_['help_api_key']                     = 'Key that identifies you with Divido (obtained from Divido)';\n-$_['help_status']                      = 'Status of the payment method';\n-$_['help_order_status']                = 'Status of the order when lender has approved';\n-$_['help_title']                       = 'Title of the payment option, shown in checkout';\n-$_['help_planselection']               = 'Choose whether to manually select plans or show the default set';\n-$_['help_productselection']            = 'Select what products are available on finance';\n-$_['help_category']                    = 'Limit what categories where financing is available';\n-$_['help_cart_threshold']              = 'Hard lower limit on cart amount for Divido to be available';\n\\ No newline at end of file"
        },
        {
          "filename": "upload/admin/model/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 79,
          "patch": "@@ -1,79 +0,0 @@\n-<?php\n-class ModelExtensionPaymentDivido extends Model {\n-\tconst CACHE_KEY_PLANS = 'divido_plans';\n-\n-\tpublic function getAllPlans() {\n-\t\tif ($plans = $this->cache->get(self::CACHE_KEY_PLANS)) {\n-\t\t\t// OpenCart 2.1 decodes json objects to associative arrays so we\n-\t\t\t// need to make sure we're getting a list of simple objects back.\n-\t\t\t$plans = array_map(function ($plan) {\n-\t\t\t\treturn (object)$plan;\n-\t\t\t}, $plans);\n-\n-\t\t\treturn $plans;\n-\t\t}\n-\n-\t\t$api_key = $this->config->get('payment_divido_api_key');\n-\t\tif (!$api_key) {\n-\t\t\tthrow new Exception(\"No Divido api-key defined\");\n-\t\t}\n-\n-\t\t$response = Divido_Finances::all();\n-\t\tif ($response->status != 'ok') {\n-\t\t\tthrow new Exception(\"Can't get list of finance plans from Divido!\");\n-\t\t}\n-\n-\t\t$plans = $response->finances;\n-\n-\t\t// OpenCart 2.1 switched to json for their file storage cache, so\n-\t\t// we need to convert to a simple object.\n-\t\t$plans_plain = array();\n-\t\tforeach ($plans as $plan) {\n-\t\t\t$plan_copy = new stdClass();\n-\t\t\t$plan_copy->id                 = $plan->id;\n-\t\t\t$plan_copy->text               = $plan->text;\n-\t\t\t$plan_copy->country            = $plan->country;\n-\t\t\t$plan_copy->min_amount         = $plan->min_amount;\n-\t\t\t$plan_copy->min_deposit        = $plan->min_deposit;\n-\t\t\t$plan_copy->max_deposit        = $plan->max_deposit;\n-\t\t\t$plan_copy->interest_rate      = $plan->interest_rate;\n-\t\t\t$plan_copy->deferral_period    = $plan->deferral_period;\n-\t\t\t$plan_copy->agreement_duration = $plan->agreement_duration;\n-\n-\t\t\t$plans_plain[] = $plan_copy;\n-\t\t}\n-\n-\t\t$this->cache->set(self::CACHE_KEY_PLANS, $plans_plain);\n-\n-\t\treturn $plans_plain;\n-\t}\n-\n-\tpublic function getLookupByOrderId($order_id) {\n-\t\treturn $this->db->query(\"SELECT * FROM `\" . DB_PREFIX . \"divido_lookup` WHERE `order_id` = \" . (int)$order_id);\n-\t}\n-\n-\tpublic function install() {\n-\t\t$this->db->query(\"\n-\t\t\tCREATE TABLE IF NOT EXISTS `\" . DB_PREFIX . \"divido_product` (\n-\t\t\t\t`product_id` INT(11) NOT NULL,\n-\t\t\t\t`display` CHAR(7) NOT NULL,\n-\t\t\t\t`plans` text,\n-\t\t\t\tPRIMARY KEY (`product_id`)\n-\t\t\t) ENGINE=MyISAM DEFAULT COLLATE=utf8_general_ci;\");\n-\n-\t\t$this->db->query(\"\n-\t\t\tCREATE TABLE IF NOT EXISTS `\" . DB_PREFIX . \"divido_lookup` (\n-\t\t\t\t`order_id` INT(11) NOT NULL,\n-\t\t\t\t`salt` CHAR(64) NOT NULL,\n-\t\t\t\t`proposal_id` CHAR(40),\n-\t\t\t\t`application_id` CHAR(40),\n-\t\t\t\t`deposit_amount` NUMERIC(6,2),\n-\t\t\t  PRIMARY KEY (`order_id`)\n-\t\t\t) ENGINE=MyISAM DEFAULT COLLATE=utf8_general_ci;\");\n-\t}\n-\n-\tpublic function uninstall() {\n-\t\t$this->db->query(\"DROP TABLE IF EXISTS `\" . DB_PREFIX . \"divido_product`;\");\n-\t\t$this->db->query(\"DROP TABLE IF EXISTS `\" . DB_PREFIX . \"divido_lookup`;\");\n-\t}\n-}"
        },
        {
          "filename": "upload/admin/view/template/extension/module/divido_calculator.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 47,
          "patch": "@@ -1,47 +0,0 @@\n-{{ header }}{{ column_left }}\n-<div id=\"content\">\n-  <div class=\"page-header\">\n-    <div class=\"container-fluid\">\n-      <div class=\"pull-right\">\n-        <button type=\"submit\" form=\"form-module\" data-toggle=\"tooltip\" title=\"{{ button_save }}\" class=\"btn btn-primary\"><i class=\"fa fa-save\"></i></button>\n-        <a href=\"{{ cancel }}\" data-toggle=\"tooltip\" title=\"{{ button_cancel }}\" class=\"btn btn-default\"><i class=\"fa fa-reply\"></i></a></div>\n-      <h1>{{ heading_title }}</h1>\n-      <ul class=\"breadcrumb\">\n-        {% for breadcrumb in breadcrumbs %}\n-        <li><a href=\"{{ breadcrumb.href }}\">{{ breadcrumb.text }}</a></li>\n-        {% endfor %}\n-      </ul>\n-    </div>\n-  </div>\n-  <div class=\"container-fluid\">\n-    {% if error_warning %}\n-    <div class=\"alert alert-danger alert-dismissible\"><i class=\"fa fa-exclamation-circle\"></i> {{ error_warning }}\n-      <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n-    </div>\n-    {% endif %}\n-    <div class=\"panel panel-default\">\n-      <div class=\"panel-heading\">\n-        <h3 class=\"panel-title\"><i class=\"fa fa-pencil\"></i> {{ text_edit }}</h3>\n-      </div>\n-      <div class=\"panel-body\">\n-        <form action=\"{{ action }}\" method=\"post\" enctype=\"multipart/form-data\" id=\"form-module\" class=\"form-horizontal\">\n-          <div class=\"form-group\">\n-            <label class=\"col-sm-2 control-label\" for=\"input-status\">{{ entry_status }}</label>\n-            <div class=\"col-sm-10\">\n-              <select name=\"module_divido_calculator_status\" id=\"input-status\" class=\"form-control\">\n-                {% if module_divido_calculator_status %}\n-                <option value=\"1\" selected=\"selected\">{{ text_enabled }}</option>\n-                <option value=\"0\">{{ text_disabled }}</option>\n-                {% else %}\n-                <option value=\"1\">{{ text_enabled }}</option>\n-                <option value=\"0\" selected=\"selected\">{{ text_disabled }}</option>\n-               {% endif %}\n-              </select>\n-            </div>\n-          </div>\n-        </form>\n-      </div>\n-    </div>\n-  </div>\n-</div>\n-{{ footer }}"
        },
        {
          "filename": "upload/admin/view/template/extension/payment/divido.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 232,
          "patch": "@@ -1,232 +0,0 @@\n-{{ header }} {{ column_left }}\n-<div id=\"content\">\n-    <div class=\"page-header\">\n-        <div class=\"container-fluid\">\n-            <div class=\"pull-right\">\n-                <button type=\"submit\" form=\"form-payment\" data-toggle=\"tooltip\" title=\"{{ button_save }}\" class=\"btn btn-primary\"><i class=\"fa fa-save\"></i></button>\n-                <a href=\"{{ cancel }}\" data-toggle=\"tooltip\" title=\"{{ button_cancel }}\" class=\"btn btn-default\"><i class=\"fa fa-reply\"></i></a></div>\n-            <h1>{{ heading_title }}</h1>      <ul class=\"breadcrumb\">\n-        {% for breadcrumb in breadcrumbs %}\n-        <li><a href=\"{{ breadcrumb.href }}\">{{ breadcrumb.text }}</a></li>\n-        {% endfor %}\n-      </ul>\n-        </div>\n-    </div>\n-    <div class=\"container-fluid\">\n-\t{% if error_warning %}\n-\t\t<div class=\"alert alert-danger alert-dismissible\"><i class=\"fa fa-exclamation-circle\"></i> {{ error_warning }}\n-\t\t  <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n-\t\t</div>\n-\t{% endif %}\n-        <div class=\"panel panel-default\">\n-            <div class=\"panel-heading\">\n-                <h3 class=\"panel-title\"><i class=\"fa fa-pencil\"></i> {{ text_edit }}</h3>\n-            </div>\n-            <div class=\"panel-body\">\n-                <form action=\"{{ action }}\" method=\"post\" enctype=\"multipart/form-data\" id=\"form-payment\" class=\"form-horizontal\">\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"api_key\"><span data-toggle=\"tooltip\" title=\"{{ help_api_key }}\">{{ entry_api_key }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <input id=\"api_key\" class=\"form-control\" type=\"text\" name=\"payment_divido_api_key\" value=\"{{ payment_divido_api_key }}\" size=\"60\">\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_status\"><span data-toggle=\"tooltip\" title=\"{{ help_status }}\">{{ entry_status }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <select name=\"payment_divido_status\" id=\"divido_status\" class=\"form-control\">\n-                                {% if payment_divido_status %}\n-                                <option value=\"1\" selected=\"selected\">{{ text_enabled }}</option>\n-                                <option value=\"0\">{{ text_disabled }}</option>\n-                                {% else %}\n-                                <option value=\"1\">{{ text_enabled }}</option>\n-                                <option value=\"0\" selected=\"selected\">{{ text_disabled }}</option>\n-                                {% endif %}\n-                            </select>\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_order_status_id\"><span data-toggle=\"tooltip\" title=\"{{ help_order_status }}\">{{ entry_order_status }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <select name=\"payment_divido_order_status_id\" id=\"divido_order_status_id\" class=\"form-control\">\n-                                {% for order_status in order_statuses %}\n-                                {% if order_status.order_status_id == payment_divido_order_status_id %}\n-                                <option value=\"{{ order_status.order_status_id }}\" selected=\"selected\">{{ order_status.name }}</option>\n-                                {% else %}\n-                                <option value=\"{{ order_status.order_status_id }}\">{{ order_status.name }}</option>\n-                                {% endif %}\n-                                {% endfor %}\n-                            </select>\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_title\"><span data-toggle=\"tooltip\" title=\"{{ help_title }}\">{{ entry_title }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <input type=\"text\" id=\"divido_title\" name=\"payment_divido_title\" value=\"{{ payment_divido_title }}\" class=\"form-control\">\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_planselection\"><span data-toggle=\"tooltip\" title=\"{{ help_planselection }}\">{{ entry_planselection }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <select name=\"payment_divido_planselection\" id=\"divido_planselection\" class=\"form-control\">\n-                                {% for option, text in entry_plans_options %}\n-                                {% if option == payment_divido_planselection %}\n-                                <option value=\"{{ option }}\" selected=\"selected\">{{ text }}</option>\n-                                {% else %}\n-                                <option value=\"{{ option }}\">{{ text }}</option>\n-                                {% endif %}\n-                                {% endfor %}\n-                            </select>\n-                        </div>\n-                    </div>\n-\n-                    <div id=\"plan-list\" class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\">{{ entry_planlist }}</label>\n-                        <div class=\"col-sm-10\">\n-                            {% for plan in divido_plans %}\n-                            {% if plan.id in payment_divido_plans_selected %}\n-                            <label>\n-                                <input type=\"checkbox\" name=\"payment_divido_plans_selected[]\" value=\"{{ plan.id }}\" checked=\"checked\">\n-                                {{ plan.text }} {{ plan.interest_rate }}% APR\n-                            </label><br>\n-                            {% else %}\n-                            <label>\n-                                <input type=\"checkbox\" name=\"payment_divido_plans_selected[]\" value=\"{{ plan.id }}\">\n-                                {{ plan.text }} {{ plan.interest_rate }}% APR\n-                            </label><br>\n-                            {% endif %}\n-                            {% endfor %}\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"payment_divido_productselection\"><span data-toggle=\"tooltip\" title=\"{{ help_productselection }}\">{{ entry_productselection }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <select name=\"payment_divido_productselection\" id=\"divido_productselection\" class=\"form-control\">\n-                                {% for option, text in entry_products_options %}\n-                                {% if option == payment_divido_productselection %}\n-                                <option value=\"{{ option }}\" selected=\"selected\">{{ text }}</option>\n-                                {% else %}\n-                                <option value=\"{{ option }}\">{{ text }}</option>\n-                                {% endif %}\n-                                {% endfor %}\n-                            </select>\n-                        </div>\n-                    </div>\n-\n-                    <div id=\"threshold\" class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_price_threshold\">{{ entry_price_threshold }}</label>\n-                        <div class=\"col-sm-10\">\n-                            <input type=\"text\" name=\"payment_divido_price_threshold\" value=\"{{ payment_divido_price_threshold }}\" class=\"form-control\" id=\"divido_price_threshold\">\n-                        </div>\n-                    </div>\n-\n-                    <div id=\"cart-threshold\" class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"divido_cart_threshold\"><span data-toggle=\"tooltip\" title=\"{{ help_cart_threshold }}\">{{ entry_cart_threshold }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <input type=\"text\" name=\"payment_divido_cart_threshold\" value=\"{{ payment_divido_cart_threshold }}\" class=\"form-control\" id=\"divido_cart_threshold\">\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"sort_order\">{{ entry_sort_order }}</label>\n-                        <div class=\"col-sm-10\">\n-                            <input type=\"text\" id=\"payment_divido_sort_order\" class=\"form-control\" name=\"payment_divido_sort_order\" value=\"{{ payment_divido_sort_order }}\" size=\"1\">\n-                        </div>\n-                    </div>\n-\n-                    <div class=\"form-group\">\n-                        <label class=\"col-sm-2 control-label\" for=\"category\"><span data-toggle=\"tooltip\" title=\"{{ help_category }}\">{{ entry_category }}</span></label>\n-                        <div class=\"col-sm-10\">\n-                            <input type=\"text\" name=\"category\" value=\"\" placeholder=\"{{ entry_category }}\" id=\"category\" class=\"form-control\" />\n-                            <div id=\"divido-category\" class=\"well well-sm\" style=\"height: 150px; overflow: auto;\">\n-                            {% for category in categories %}\n-                                <div id=\"category{{ category.category_id }}\"><i class=\"fa fa-minus-circle\"></i> {{ category.name }}\n-                                    <input type=\"hidden\" name=\"payment_divido_categories[]\" value=\"{{ category.category_id }}\" />\n-                                </div>\n-                            {% endfor %}\n-                            </div>\n-                        </div>\n-                    </div>\n-\n-                </form>\n-            </div>\n-        </div>\n-    </div>\n-</div>\n-<script>\n-(function($) {\n-    var divido = {\n-        initialize: function () {\n-            this.bindEvents();\n-            this.toggleFields();\n-        },\n-\n-        bindEvents: function () {\n-            $('#divido_productselection').on('change', this.toggleFields);\n-            $('#divido_planselection').on('change', this.toggleFields);\n-\n-        },\n-\n-        toggleFields: function () {\n-            var $apiKeyField = $('#api_key');\n-\n-            if ($apiKeyField.val().length < 1) {\n-                $apiKeyField.closest('.form-group').siblings().hide();\n-            }\n-\n-            var productSelection = $('#divido_productselection').val();\n-            var $threshold       = $('#threshold');\n-            if (productSelection == 'threshold') {\n-                $threshold.show();\n-            } else {\n-                $threshold.hide();\n-            }\n-\n-            var planSelection = $('#divido_planselection').val();\n-            var $planList     = $('#plan-list');\n-            if (planSelection == 'selected') {\n-                $planList.show();\n-            } else {\n-                $planList.hide();\n-            }\n-        }\n-    };\n-\n-    $(function () {\n-        divido.initialize();\n-    });\n-\n-\t$('input[name=\"category\"]').autocomplete({\n-\t\tsource: function(request, response) {\n-\t\t\t$.ajax({\n-\t\t\t\turl: 'index.php?route=catalog/category/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),\n-\t\t\t\tdataType: 'json',\n-\t\t\t\tsuccess: function(json) {\n-\t\t\t\t\tresponse($.map(json, function(item) {\n-\t\t\t\t\t\treturn {\n-\t\t\t\t\t\t\tlabel: item['name'],\n-\t\t\t\t\t\t\tvalue: item['category_id']\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}));\n-\t\t\t\t}\n-\t\t\t});\n-\t\t},\n-\t\tselect: function(item) {\n-\t\t\t$('input[name=\\'category\\']').val('');\n-\t\t\t$('#divido-category' + item['value']).remove();\n-\t\t\t$('#divido-category').append('<div id=\"divido-category' + item['value'] + '\"><i class=\"fa fa-minus-circle\"></i> ' + item['label'] + '<input type=\"hidden\" name=\"payment_divido_categories[]\" value=\"' + item['value'] + '\" /></div>');\n-\t\t}\n-\t});\n-\n-\t$('#divido-category').delegate('.fa-minus-circle', 'click', function() {\n-\t\t$(this).parent().remove();\n-\t});\n-\n-})(jQuery);\n-</script>\n-{{ footer }}"
        },
        {
          "filename": "upload/admin/view/template/extension/payment/divido_order.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 21,
          "patch": "@@ -1,21 +0,0 @@\n-<table class=\"table table-bordered\">\n-    <thead>\n-        <tr>\n-            <th colspan=\"2\">{{ text_order_info }}</th>\n-        </tr>\n-    </thead>\n-    <tbody>\n-        <tr>\n-            <td>{{ text_proposal_id }}</td>\n-            <td>{{ proposal_id }}</td>\n-        </tr>\n-        <tr>\n-            <td>{{ text_application_id }}</td>\n-            <td>{{ application_id }}</td>\n-        </tr>\n-        <tr>\n-            <td>{{ text_deposit_amount }}</td>\n-            <td>{{ deposit_amount }}</td>\n-        </tr>\n-    </tbody>\n-</table>"
        },
        {
          "filename": "upload/catalog/controller/extension/module/divido_calculator.php",
          "status": "removed",
          "additions": 0,
          "deletions": 53,
          "patch": "@@ -1,53 +0,0 @@\n-<?php\n-class ControllerExtensionModuleDividoCalculator extends Controller {\n-\tpublic function index() {\n-\t\t$this->load->language('extension/module/divido_calculator');\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->load->model('catalog/product');\n-\n-\t\t$product_selection = $this->config->get('payment_divido_productselection');\n-\t\t$product_threshold = $this->config->get('payment_divido_price_threshold');\n-\n-\t\tif (!isset($this->request->get['product_id']) || !$this->config->get('payment_divido_status') || !$this->config->get('module_divido_calculator_status')) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t$product_info = $this->model_catalog_product->getProduct($this->request->get['product_id']);\n-\n-\t\t$price = 0;\n-\t\tif (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {\n-\t\t\t$base_price = !empty($product_info['special']) ? $product_info['special'] : $product_info['price'];\n-\t\t\t$price = $this->tax->calculate($base_price, $product_info['tax_class_id'], $this->config->get('config_tax'));\n-\t\t}\n-\n-\t\tif ($product_selection == 'threshold' && $product_threshold > $price) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t$api_key = $this->config->get('payment_divido_api_key');\n-\t\t$key_parts = explode('.', $api_key);\n-\t\t$js_key = strtolower(array_shift($key_parts));\n-\n-\t\t$this->model_extension_payment_divido->setMerchant($api_key);\n-\t\t$plans = $this->model_extension_payment_divido->getProductPlans($this->request->get['product_id']);\n-\n-\t\tif (!$plans) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t$plans_ids = array_map(function ($plan) {\n-\t\t\treturn $plan->id;\n-\t\t}, $plans);\n-\t\t$plans_ids = array_unique($plans_ids);\n-\t\t$plans_list = implode(',', $plans_ids);\n-\n-\t\t$data = array(\n-\t\t\t'merchant_script'\t\t\t=> \"//cdn.divido.com/calculator/{$js_key}.js\",\n-\t\t\t'product_price'\t\t\t\t=> $price,\n-\t\t\t'plan_list'\t\t\t\t\t=> $plans_list,\n-\t\t\t'generic_credit_req_error'\t=> 'Credit request could not be initiated',\n-\t\t);\n-\n-\t\treturn $this->load->view('extension/module/divido_calculator', $data);\n-\t}\n-}"
        },
        {
          "filename": "upload/catalog/controller/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 301,
          "patch": "@@ -1,301 +0,0 @@\n-<?php\n-class ControllerExtensionPaymentDivido extends Controller {\n-\tconst\n-\t\tSTATUS_ACCEPTED = 'ACCEPTED',\n-\t\tSTATUS_ACTION_LENDER = 'ACTION-LENDER',\n-\t\tSTATUS_CANCELED = 'CANCELED',\n-\t\tSTATUS_COMPLETED = 'COMPLETED',\n-\t\tSTATUS_DEPOSIT_PAID = 'DEPOSIT-PAID',\n-\t\tSTATUS_DECLINED = 'DECLINED',\n-\t\tSTATUS_DEFERRED = 'DEFERRED',\n-\t\tSTATUS_REFERRED = 'REFERRED',\n-\t\tSTATUS_FULFILLED = 'FULFILLED',\n-\t\tSTATUS_SIGNED = 'SIGNED';\n-\n-\tprivate $status_id = array(\n-\t\tself::STATUS_ACCEPTED => 1,\n-\t\tself::STATUS_ACTION_LENDER => 2,\n-\t\tself::STATUS_CANCELED => 0,\n-\t\tself::STATUS_COMPLETED => 2,\n-\t\tself::STATUS_DECLINED => 8,\n-\t\tself::STATUS_DEFERRED => 1,\n-\t\tself::STATUS_REFERRED => 1,\n-\t\tself::STATUS_DEPOSIT_PAID => 1,\n-\t\tself::STATUS_FULFILLED => 1,\n-\t\tself::STATUS_SIGNED => 2,\n-\t);\n-\n-\tprivate $history_messages = array(\n-\t\tself::STATUS_ACCEPTED => 'Credit request accepted',\n-\t\tself::STATUS_ACTION_LENDER => 'Lender notified',\n-\t\tself::STATUS_CANCELED => 'Credit request canceled',\n-\t\tself::STATUS_COMPLETED => 'Credit application completed',\n-\t\tself::STATUS_DECLINED => 'Credit request declined',\n-\t\tself::STATUS_DEFERRED => 'Credit request deferred',\n-\t\tself::STATUS_REFERRED => 'Credit request referred',\n-\t\tself::STATUS_DEPOSIT_PAID => 'Deposit paid',\n-\t\tself::STATUS_FULFILLED => 'Credit request fulfilled',\n-\t\tself::STATUS_SIGNED => 'Contract signed',\n-\t);\n-\n-\tpublic function index() {\n-\t\t$this->load->language('extension/payment/divido');\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->load->model('checkout/order');\n-\n-\t\t$api_key   = $this->config->get('payment_divido_api_key');\n-\t\t$key_parts = explode('.', $api_key);\n-\t\t$js_key    = strtolower(array_shift($key_parts));\n-\n-\t\tlist($total, $totals) = $this->model_extension_payment_divido->getOrderTotals();\n-\n-\t\t$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));\n-\n-\t\t$plans = $this->model_extension_payment_divido->getCartPlans($this->cart);\n-\t\tforeach ($plans as $key => $plan) {\n-\t\t\t$planMinTotal = $total - ($total * ($plan->min_deposit / 100));\n-\t\t\tif ($plan->min_amount > $planMinTotal) {\n-\t\t\t\tunset($plans[$key]);\n-\t\t\t}\n-\t\t}\n-\n-\t\t$plans_ids  = array_map(function ($plan) {\n-\t\t\treturn $plan->id;\n-\t\t}, $plans);\n-\t\t$plans_ids  = array_unique($plans_ids);\n-\t\t$plans_list = implode(',', $plans_ids);\n-\n-\t\t$data = array(\n-\t\t\t'button_confirm'           => $this->language->get('divido_checkout'),\n-\t\t\t'merchant_script'          => \"//cdn.divido.com/calculator/{$js_key}.js\",\n-\t\t\t'grand_total'              => $total,\n-\t\t\t'plan_list'                => $plans_list,\n-\t\t\t'generic_credit_req_error' => 'Credit request could not be initiated',\n-\t\t);\n-\n-\t\treturn $this->load->view('extension/payment/divido', $data);\n-\t}\n-\n-\tpublic function update() {\n-\t\t$this->load->language('extension/payment/divido');\n-\t\t$this->load->model('extension/payment/divido');\n-\t\t$this->load->model('checkout/order');\n-\n-\t\t$data = json_decode(file_get_contents('php://input'));\n-\n-\t\tif (!isset($data->status)) {\n-\t\t\t$this->response->setOutput('');\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t$lookup = $this->model_extension_payment_divido->getLookupByOrderId($data->metadata->order_id);\n-\t\tif ($lookup->num_rows != 1) {\n-\t\t\t$this->response->setOutput('');\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t$hash = $this->model_extension_payment_divido->hashOrderId($data->metadata->order_id, $lookup->row['salt']);\n-\t\tif ($hash !== $data->metadata->order_hash) {\n-\t\t\t$this->response->setOutput('');\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t$order_id = $data->metadata->order_id;\n-\t\t$order_info = $this->model_checkout_order->getOrder($order_id);\n-\t\t$status_id = $order_info['order_status_id'];\n-\t\t$message = \"Status: {$data->status}\";\n-\t\tif (isset($this->history_messages[$data->status])) {\n-\t\t\t$message = $this->history_messages[$data->status];\n-\t\t}\n-\n-\t\tif ($data->status == self::STATUS_SIGNED) {\n-\t\t\t$status_override = $this->config->get('payment_divido_order_status_id');\n-\t\t\tif (!empty($status_override)) {\n-\t\t\t\t$this->status_id[self::STATUS_SIGNED] = $status_override;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (isset($this->status_id[$data->status]) && $this->status_id[$data->status] > $status_id) {\n-\t\t\t$status_id = $this->status_id[$data->status];\n-\t\t}\n-\n-\t\tif ($data->status == self::STATUS_DECLINED && $order_info['order_status_id'] == 0) {\n-\t\t\t$status_id = 0;\n-\t\t}\n-\n-\t\t$this->model_extension_payment_divido->saveLookup($data->metadata->order_id, $lookup->row['salt'], null, $data->application);\n-\t\t$this->model_checkout_order->addOrderHistory($order_id, $status_id, $message, false);\n-\t\t$this->response->setOutput('ok');\n-\t}\n-\n-\tpublic function confirm() {\n-\t\t$this->load->language('extension/payment/divido');\n-\n-\t\t$this->load->model('extension/payment/divido');\n-\n-\t\tini_set('html_errors', 0);\n-\t\tif (!$this->session->data['payment_method']['code'] == 'divido') {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\t$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));\n-\n-\t\t$api_key   = $this->config->get('payment_divido_api_key');\n-\n-\t\t$deposit = $this->request->post['deposit'];\n-\t\t$finance = $this->request->post['finance'];\n-\n-\t\t$address = $this->session->data['payment_address'];\n-\t\tif (isset($this->session->data['shipping_address'])) {\n-\t\t\t$address = $this->session->data['shipping_address'];\n-\t\t}\n-\n-\t\t$country  = $address['iso_code_2'];\n-\t\t$language = strtoupper($this->language->get('code'));\n-\t\t$currency = strtoupper($this->session->data['currency']);\n-\t\t$order_id = $this->session->data['order_id'];\n-\n-\t\tif ($this->customer->isLogged()) {\n-\t\t\t$this->load->model('account/customer');\n-\t\t\t$customer_info = $this->model_account_customer->getCustomer($this->customer->getId());\n-\n-\t\t\t$firstname = $customer_info['firstname'];\n-\t\t\t$lastname  = $customer_info['lastname'];\n-\t\t\t$email     = $customer_info['email'];\n-\t\t\t$telephone = $customer_info['telephone'];\n-\t\t} elseif (isset($this->session->data['guest'])) {\n-\t\t\t$firstname = $this->session->data['guest']['firstname'];\n-\t\t\t$lastname  = $this->session->data['guest']['lastname'];\n-\t\t\t$email     = $this->session->data['guest']['email'];\n-\t\t\t$telephone = $this->session->data['guest']['telephone'];\n-\t\t}\n-\n-\t\t$postcode  = $address['postcode'];\n-\n-\t\t$products  = array();\n-\t\tforeach ($this->cart->getProducts() as $product) {\n-\t\t\t$products[] = array(\n-\t\t\t\t'type' => 'product',\n-\t\t\t\t'text' => $product['name'],\n-\t\t\t\t'quantity' => $product['quantity'],\n-\t\t\t\t'value' => $product['price'],\n-\t\t\t);\n-\t\t}\n-\n-\t\tlist($total, $totals) = $this->model_extension_payment_divido->getOrderTotals();\n-\n-\t\t$sub_total  = $total;\n-\t\t$cart_total = $this->cart->getSubTotal();\n-\t\t$shiphandle = $sub_total - $cart_total;\n-\n-\t\t$products[] = array(\n-\t\t\t'type'     => 'product',\n-\t\t\t'text'     => 'Shipping & Handling',\n-\t\t\t'quantity' => 1,\n-\t\t\t'value'    => $shiphandle,\n-\t\t);\n-\n-\t\t$deposit_amount = round(($deposit / 100) * $total, 2, PHP_ROUND_HALF_UP);\n-\n-\t\t$shop_url = $this->config->get('config_url');\n-\t\tif (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {\n-\t\t\t$shop_url = $this->config->get('config_ssl');\n-\t\t}\n-\n-\t\t$callback_url = $this->url->link('extension/payment/divido/update', '', true);\n-\t\t$return_url = $this->url->link('checkout/success', '', true);\n-\t\t$checkout_url = $this->url->link('checkout/checkout', '', true);\n-\n-\t\t$salt = uniqid('', true);\n-\t\t$hash = $this->model_extension_payment_divido->hashOrderId($order_id, $salt);\n-\n-\t\t$request_data = array(\n-\t\t\t'merchant' => $api_key,\n-\t\t\t'deposit'  => $deposit_amount,\n-\t\t\t'finance'  => $finance,\n-\t\t\t'country'  => $country,\n-\t\t\t'language' => $language,\n-\t\t\t'currency' => $currency,\n-\t\t\t'metadata' => array(\n-\t\t\t\t'order_id'   => $order_id,\n-\t\t\t\t'order_hash' => $hash,\n-\t\t\t),\n-\t\t\t'customer' => array(\n-\t\t\t\t'title'         => '',\n-\t\t\t\t'first_name'    => $firstname,\n-\t\t\t\t'middle_name'   => '',\n-\t\t\t\t'last_name'     => $lastname,\n-\t\t\t\t'country'       => $country,\n-\t\t\t\t'postcode'      => $postcode,\n-\t\t\t\t'email'         => $email,\n-\t\t\t\t'mobile_number' => '',\n-\t\t\t\t'phone_number'  => $telephone,\n-\t\t\t),\n-\t\t\t'products'     => $products,\n-\t\t\t'response_url' => $callback_url,\n-\t\t\t'redirect_url' => $return_url,\n-\t\t\t'checkout_url' => $checkout_url,\n-\t\t);\n-\n-\t\t$response = Divido_CreditRequest::create($request_data);\n-\n-\t\tif ($response->status == 'ok') {\n-\n-\t\t\t$this->model_extension_payment_divido->saveLookup($order_id, $salt, $response->id, null, $deposit_amount);\n-\n-\t\t\t$data = array(\n-\t\t\t\t'status' => 'ok',\n-\t\t\t\t'url'    => $response->url,\n-\t\t\t);\n-\t\t} else {\n-\t\t\t$data = array(\n-\t\t\t\t'status'  => 'error',\n-\t\t\t\t'message' => $this->language->get($response->error),\n-\t\t\t);\n-\t\t}\n-\n-\t\t$this->response->setOutput(json_encode($data));\n-\t}\n-\n-\tpublic function calculator($args) {\n-\t\t$this->load->language('extension/payment/divido');\n-\n-\t\t$this->load->model('extension/payment/divido');\n-\n-\t\tif (!$this->model_extension_payment_divido->isEnabled()) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\t$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));\n-\n-\t\t$product_selection = $this->config->get('payment_divido_productselection');\n-\t\t$price_threshold   = $this->config->get('payment_divido_price_threshold');\n-\t\t$product_id        = $args['product_id'];\n-\t\t$product_price     = $args['price'];\n-\t\t$type              = $args['type'];\n-\n-\t\tif ($product_selection == 'threshold' && $product_price < $price_threshold) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\t$plans = $this->model_extension_payment_divido->getProductPlans($product_id);\n-\t\tif (empty($plans)) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\t$plans_ids = array_map(function ($plan) {\n-\t\t\treturn $plan->id;\n-\t\t}, $plans);\n-\n-\t\t$plan_list = implode(',', $plans_ids);\n-\n-\t\t$data = array(\n-\t\t\t'planList'     => $plan_list,\n-\t\t\t'productPrice' => $product_price\n-\t\t);\n-\n-\t\t$filename = ($type == 'full') ? 'extension/payment/divido_calculator' : 'extension/payment/divido_widget';\n-\n-\t\treturn $this->load->view($filename, $data);\n-\t}\n-}"
        },
        {
          "filename": "upload/catalog/language/en-gb/extension/module/divido_calculator.php",
          "status": "removed",
          "additions": 0,
          "deletions": 15,
          "patch": "@@ -1,15 +0,0 @@\n-<?php\n-// Calculator\n-$_['text_checkout_title']      = 'Pay in instalments';\n-$_['text_choose_plan']         = 'Choose your plan';\n-$_['text_choose_deposit']      = 'Choose your deposit';\n-$_['text_monthly_payments']    = 'monthly payments of';\n-$_['text_months']              = 'months';\n-$_['text_term']                = 'Term';\n-$_['text_deposit']             = 'Deposit';\n-$_['text_credit_amount']       = 'Cost of credit';\n-$_['text_amount_payable']      = 'Total payable';\n-$_['text_total_interest']      = 'Total interest APR';\n-$_['text_monthly_installment'] = 'Monthly installment';\n-$_['text_redirection']         = 'You will be redirected to Divido to complete this finance application when you confirm your order';\n-$_['text_divido']              = 'Divido';\n\\ No newline at end of file"
        },
        {
          "filename": "upload/catalog/language/en-gb/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 18,
          "patch": "@@ -1,18 +0,0 @@\n-<?php\n-$_['text_checkout_title']      = 'Pay in instalments';\n-$_['text_choose_plan']         = 'Choose your plan';\n-$_['text_choose_deposit']      = 'Choose your deposit';\n-$_['text_monthly_payments']    = 'monthly payments of';\n-$_['text_months']              = 'months';\n-$_['text_term']                = 'Term';\n-$_['text_deposit']             = 'Deposit';\n-$_['text_credit_amount']       = 'Cost of credit';\n-$_['text_amount_payable']      = 'Total payable';\n-$_['text_total_interest']      = 'Total interest APR';\n-$_['text_monthly_installment'] = 'Monthly installment';\n-$_['text_redirection']         = 'You will be redirected to Divido to complete this finance application when you confirm your order';\n-$_['divido_checkout']          = 'Confirm and checkout with Divido';\n-$_['deposit_to_low']           = 'Deposit to low';\n-$_['credit_amount_to_low']     = 'Credit amount to low';\n-$_['no_country']               = 'Country not accepted';\n-$_['text_divido']              = 'Divido';"
        },
        {
          "filename": "upload/catalog/model/extension/payment/divido.php",
          "status": "removed",
          "additions": 0,
          "deletions": 316,
          "patch": "@@ -1,316 +0,0 @@\n-<?php\n-class ModelExtensionPaymentDivido extends Model {\n-\tconst CACHE_KEY_PLANS = 'divido_plans';\n-\n-\tpublic function setMerchant($api_key) {}\n-\n-\tpublic function getMethod($payment_address, $total) {\n-\t\t$this->load->language('extension/payment/divido');\n-\t\t$this->load->model('localisation/currency');\n-\n-\t\tif (!$this->isEnabled()) {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\tif ($this->session->data['currency'] != 'GBP') {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\tif ($payment_address['iso_code_2'] != 'GB') {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\t$cart_threshold = $this->config->get('payment_divido_cart_threshold');\n-\t\tif ($cart_threshold > $total) {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\t$plans = $this->getCartPlans($this->cart);\n-\t\t$has_plan = false;\n-\n-\t\tforeach ($plans as $plan) {\n-\t\t\t$planMinTotal = $total - ($total * ($plan->min_deposit / 100));\n-\t\t\tif ($plan->min_amount <= $planMinTotal) {\n-\t\t\t\t$has_plan = true;\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (!$has_plan) {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\t$title = $this->language->get('text_checkout_title');\n-\t\tif ($title_override = $this->config->get('payment_divido_title')) {\n-\t\t\t$title = $title_override;\n-\t\t}\n-\n-\t\t$method_data = array(\n-\t\t\t'code' => 'divido',\n-\t\t\t'title' => $title,\n-\t\t\t'terms' => '',\n-\t\t\t'sort_order' => $this->config->get('payment_divido_sort_order')\n-\t\t);\n-\n-\t\treturn $method_data;\n-\t}\n-\n-\tpublic function getProductSettings($product_id) {\n-\t\treturn $this->db->query(\"SELECT `display`, `plans` FROM `\" . DB_PREFIX . \"divido_product` WHERE `product_id` = '\" . (int)$product_id . \"'\")->row;\n-\t}\n-\n-\tpublic function isEnabled() {\n-\t\t$api_key = $this->config->get('payment_divido_api_key');\n-\t\t$enabled = $this->config->get('payment_divido_status');\n-\n-\t\treturn !empty($api_key) && $enabled == 1;\n-\t}\n-\n-\tpublic function hashOrderId($order_id, $salt) {\n-\t\treturn hash('sha256', $order_id . $salt);\n-\t}\n-\n-\tpublic function saveLookup($order_id, $salt, $proposal_id = null, $application_id = null, $deposit_amount = null) {\n-\t\t$order_id = (int)$order_id;\n-\t\t$salt = $this->db->escape($salt);\n-\t\t$proposal_id = $this->db->escape($proposal_id);\n-\t\t$application_id = $this->db->escape($application_id);\n-\t\t$deposit_amount = $this->db->escape($deposit_amount);\n-\n-\t\t$query_get_lookup = \"SELECT `application_id` from `\" . DB_PREFIX . \"divido_lookup` WHERE order_id = \" . $order_id;\n-\t\t$result_get_lookup = $this->db->query($query_get_lookup);\n-\n-\t\tif ($result_get_lookup->num_rows == 0) {\n-\t\t\t$proposal_id = ($proposal_id) ? \"'\" . $proposal_id . \"'\" : 'NULL';\n-\t\t\t$application_id = ($application_id) ? \"'\" . $application_id . \"'\" : 'NULL';\n-\t\t\t$deposit_amount = ($deposit_amount) ? $deposit_amount : 'NULL';\n-\n-\t\t\t$query_upsert = \"INSERT INTO `\" . DB_PREFIX . \"divido_lookup` (`order_id`, `salt`, `proposal_id`, `application_id`, `deposit_amount`) VALUES (\" . $order_id . \", '\" . $salt . \"', \" . $proposal_id . \", \" . $application_id . \", \" . $deposit_amount . \")\";\n-\t\t} else {\n-\t\t\t$query_upsert = \"UPDATE `\" . DB_PREFIX . \"divido_lookup` SET `salt` = '\" . $salt . \"'\";\n-\n-\t\t\tif ($proposal_id) {\n-\t\t\t\t$query_upsert .= \", `proposal_id` = '\" . $proposal_id . \"'\";\n-\t\t\t}\n-\n-\t\t\tif ($application_id) {\n-\t\t\t\t$query_upsert .= \", `application_id` = '\" . $application_id . \"'\";\n-\t\t\t}\n-\n-\t\t\tif ($deposit_amount) {\n-\t\t\t\t$query_upsert .= \", `deposit_amount` = \" . $deposit_amount;\n-\t\t\t}\n-\n-\t\t\t$query_upsert .= \" WHERE `order_id` = \" . $order_id;\n-\t\t}\n-\n-\t\t$this->db->query($query_upsert);\n-\t}\n-\n-\tpublic function getLookupByOrderId($order_id) {\n-\t\treturn $this->db->query(\"SELECT * FROM `\" . DB_PREFIX . \"divido_lookup` WHERE `order_id` = \" . $order_id);\n-\t}\n-\tpublic function getGlobalSelectedPlans() {\n-\t\t$all_plans     = $this->getAllPlans();\n-\t\t$display_plans = $this->config->get('payment_divido_planselection');\n-\n-\t\tif ($display_plans == 'all' || empty($display_plans)) {\n-\t\t\treturn $all_plans;\n-\t\t}\n-\n-\t\t$selected_plans = $this->config->get('payment_divido_plans_selected');\n-\t\tif (!$selected_plans) {\n-\t\t\treturn array();\n-\t\t}\n-\n-\t\t$plans = array();\n-\t\tforeach ($all_plans as $plan) {\n-\t\t\tif (in_array($plan->id, $selected_plans)) {\n-\t\t\t\t$plans[] = $plan;\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn $plans;\n-\t}\n-\n-\tpublic function getAllPlans() {\n-\t\tif ($plans = $this->cache->get(self::CACHE_KEY_PLANS)) {\n-\t\t\t// OpenCart 2.1 decodes json objects to associative arrays so we\n-\t\t\t// need to make sure we're getting a list of simple objects back.\n-\t\t\t$plans = array_map(function ($plan) {\n-\t\t\t\treturn (object)$plan;\n-\t\t\t}, $plans);\n-\n-\t\t\treturn $plans;\n-\t\t}\n-\n-\t\t$api_key = $this->config->get('payment_divido_api_key');\n-\t\tif (!$api_key) {\n-\t\t\tthrow new Exception(\"No Divido api-key defined\");\n-\t\t}\n-\n-\t\t$response = Divido_Finances::all();\n-\t\tif ($response->status != 'ok') {\n-\t\t\tthrow new Exception(\"Can't get list of finance plans from Divido!\");\n-\t\t}\n-\n-\t\t$plans = $response->finances;\n-\n-\t\t// OpenCart 2.1 switched to json for their file storage cache, so\n-\t\t// we need to convert to a simple object.\n-\t\t$plans_plain = array();\n-\t\tforeach ($plans as $plan) {\n-\t\t\t$plan_copy = new stdClass();\n-\t\t\t$plan_copy->id                 = $plan->id;\n-\t\t\t$plan_copy->text               = $plan->text;\n-\t\t\t$plan_copy->country            = $plan->country;\n-\t\t\t$plan_copy->min_amount         = $plan->min_amount;\n-\t\t\t$plan_copy->min_deposit        = $plan->min_deposit;\n-\t\t\t$plan_copy->max_deposit        = $plan->max_deposit;\n-\t\t\t$plan_copy->interest_rate      = $plan->interest_rate;\n-\t\t\t$plan_copy->deferral_period    = $plan->deferral_period;\n-\t\t\t$plan_copy->agreement_duration = $plan->agreement_duration;\n-\n-\t\t\t$plans_plain[] = $plan_copy;\n-\t\t}\n-\n-\t\t$this->cache->set(self::CACHE_KEY_PLANS, $plans_plain);\n-\n-\t\treturn $plans_plain;\n-\t}\n-\n-\tpublic function getCartPlans($cart)\t{\n-\t\t$plans = array();\n-\t\t$products = $cart->getProducts();\n-\t\tforeach ($products as $product) {\n-\t\t\t$product_plans = $this->getProductPlans($product['product_id']);\n-\t\t\tif ($product_plans) {\n-\t\t\t\t$plans = array_merge($plans, $product_plans);\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn $plans;\n-\t}\n-\n-\tpublic function getPlans($default_plans) {\n-\t\tif ($default_plans) {\n-\t\t\t$plans = $this->getGlobalSelectedPlans();\n-\t\t} else {\n-\t\t\t$plans = $this->getAllPlans();\n-\t\t}\n-\n-\t\treturn $plans;\n-\t}\n-\n-\tpublic function getOrderTotals() {\n-\t\t$totals = array();\n-\t\t$taxes = $this->cart->getTaxes();\n-\t\t$total = 0;\n-\n-\t\t// Because __call can not keep var references so we put them into an array.\n-\t\t$total_data = array(\n-\t\t\t'totals' => &$totals,\n-\t\t\t'taxes'  => &$taxes,\n-\t\t\t'total'  => &$total\n-\t\t);\n-\n-\t\t$this->load->model('setting/extension');\n-\n-\t\t$sort_order = array();\n-\n-\t\t$results = $this->model_setting_extension->getExtensions('total');\n-\n-\t\tforeach ($results as $key => $value) {\n-\t\t\t$sort_order[$key] = $this->config->get('total_' . $value['code'] . '_sort_order');\n-\t\t}\n-\n-\t\tarray_multisort($sort_order, SORT_ASC, $results);\n-\n-\t\tforeach ($results as $result) {\n-\t\t\tif ($this->config->get('total_' . $result['code'] . '_status')) {\n-\t\t\t\t$this->load->model('extension/total/' . $result['code']);\n-\n-\t\t\t\t// We have to put the totals in an array so that they pass by reference.\n-\t\t\t\t$this->{'model_extension_total_' . $result['code']}->getTotal($total_data);\n-\t\t\t}\n-\t\t}\n-\n-\t\t$sort_order = array();\n-\n-\t\tforeach ($totals as $key => $value) {\n-\t\t\t$sort_order[$key] = $value['sort_order'];\n-\t\t}\n-\n-\t\tarray_multisort($sort_order, SORT_ASC, $totals);\n-\n-\t\treturn array($total, $totals);\n-\t}\n-\n-\tpublic function getProductPlans($product_id) {\n-\t\t$this->load->model('catalog/product');\n-\n-\t\t$product_info       = $this->model_catalog_product->getProduct($product_id);\n-\t\t$settings           = $this->getProductSettings($product_id);\n-\t\t$product_selection  = $this->config->get('payment_divido_productselection');\n-\t\t$divido_categories  = $this->config->get('payment_divido_categories');\n-\t\t$price_threshold    = $this->config->get('payment_divido_price_threshold');\n-\n-\t\tif ($divido_categories) {\n-\t\t\t$product_categories = $this->model_catalog_product->getCategories($product_id);\n-\n-\t\t\t$all_categories = array();\n-\t\t\tforeach ($product_categories as $product_category) {\n-\t\t\t\t$all_categories[] = $product_category['category_id'];\n-\t\t\t}\n-\t\t\t$category_matches = array_intersect($all_categories, $divido_categories);\n-\n-\t\t\tif (!$category_matches) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (empty($settings)) {\n-\t\t\t$settings = array(\n-\t\t\t\t'display' => 'default',\n-\t\t\t\t'plans'   => '',\n-\t\t\t);\n-\t\t}\n-\n-\t\tif ($product_selection == 'selected' && $settings['display'] == 'custom' && empty($settings['plans'])) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\t$price = 0;\n-\t\tif (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {\n-\t\t\t$base_price = !empty($product_info['special']) ? $product_info['special'] : $product_info['price'];\n-\t\t\t$price = $this->tax->calculate($base_price, $product_info['tax_class_id'], $this->config->get('config_tax'));\n-\t\t}\n-\n-\t\tif ($product_selection == 'threshold' && !empty($price_threshold) && $price < $price_threshold) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\tif ($settings['display'] == 'default') {\n-\t\t\t$plans = $this->getPlans(true);\n-\t\t\treturn $plans;\n-\t\t}\n-\n-\t\t// If the product has non-default plans, fetch all of them.\n-\t\t$available_plans = $this->getPlans(false);\n-\t\t$selected_plans  = explode(',', $settings['plans']);\n-\n-\t\t$plans = array();\n-\t\tforeach ($available_plans as $plan) {\n-\t\t\tif (in_array($plan->id, $selected_plans)) {\n-\t\t\t\t$plans[] = $plan;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (empty($plans)) {\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\treturn $plans;\n-\t}\n-\n-}"
        },
        {
          "filename": "upload/catalog/view/theme/default/template/extension/payment/divido.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 408,
          "patch": "@@ -1,408 +0,0 @@\n-<style>\n-.divido-calculator {\n-\tpadding:10px 20px 20px 20px;\n-\ttext-shadow:none;\n-\t-webkit-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;\n-\t-moz-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;\n-\t-ms-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;\n-\t-o-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;\n-\tbox-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;\n-\t-webkit-border-radius: 5px;\n-\t-moz-border-radius: 5px;\n-\t-ms-border-radius: 5px;\n-\t-o-border-radius: 5px;\n-\tborder-radius: 5px;\n-\tborder: 1px solid #555;\n-\tborder-color: #d9d7ce #c8c6c1 #B0AEA6;\n-\tmargin:20px;\n-}\n-\n-#divido-checkout {\n-\tmargin:0px;\n-}\n-\n-.divido-calculator h1 {\n-    color: white;\n-    font-size: 24px;\n-}\n-\n-@media screen and (min-width: 550px) {\n-    .divido-calculator h1 {\n-        font-size: 33px;\n-    }\n-}\n-\n-.divido-calculator dl {\n-\twidth: 100%;\n-\toverflow: hidden;\n-\tpadding: 0;\n-\tmargin: 0\n-}\n-\n-.divido-calculator dt,.divido-calculator dd {\n-\tfloat: left;\n-\tpadding: 2px 0px;\n-\tmargin: 0\n-}\n-\n-\n-.divido-calculator > dl > dt, .divido-calculator > dl > dd {\n-    min-width: 150px;\n-}\n-\n-.divido-calculator > dl > dt, .divido-calculator > dl > dd {\n-    width: 100%;\n-}\n-\n-.divido-calculator > dl > dt {\n-    margin-bottom: 20px;\n-}\n-\n-@media screen and (min-width: 960px) {\n-    .divido-calculator > dl > dt, .divido-calculator > dl > dd {\n-        width: 50%;\n-    }\n-\n-    .divido-calculator > dl > dt {\n-        margin-bottom: auto;\n-    }\n-}\n-\n-.divido-calculator div.divido-info dl dt, .divido-calculator div.divido-info dl dd {\n-    width: 100%;\n-}\n-.divido-calculator div.divido-info dl dd {\n-    padding-left: 5px;\n-}\n-@media screen and (min-width: 350px) {\n-    .divido-calculator div.divido-info dl dt {\n-        width: 70%;\n-    }\n-    .divido-calculator div.divido-info dl dd {\n-        width: 30%;\n-    }\n-}\n-@media screen and (min-width: 450px) {\n-    .divido-calculator div.divido-info dl dt, .divido-calculator div.divido-info dl dd {\n-        width: 50%;\n-    }\n-}\n-@media screen and (min-width: 550px) {\n-    .divido-calculator div.divido-info dl dt {\n-        width: 40%;\n-    }\n-    .divido-calculator div.divido-info dl dd {\n-        width: 60%;\n-    }\n-}\n-\n-@media screen and (min-width: 1080px) {\n-\t.divido-calculator div.divido-info dl dt {\n-\t\twidth: 30%;\n-\t}\n-\t.divido-calculator div.divido-info dl dd {\n-\t\twidth: 70%;\n-\t}\n-}\n-\n-.divido-calculator input[type=range]{\n-\t-webkit-appearance: none;\n-\tdisplay:inline-block;\n-\twidth:80%;\n-\tborder:0px;\n-\tpadding:0px;\n-}\n-\n-@media screen and (min-width: 450px) {\n-    .divido-calculator input[type=range]{\n-\t    width:85%;\n-    }\n-}\n-\n-@media screen and (min-width: 550px) {\n-    .divido-calculator input[type=range]{\n-\t    width:90%;\n-    }\n-}\n-\n-.divido-calculator select {\n-\ttext-transform: none;\n-\twidth: 100%;\n-}\n-\n-@media screen and (min-width: 960px) {\n-    .divido-calculator select {\n-        width: 80%;\n-    }\n-}\n-\n-.divido-calculator div.description {\n-\tfont-size:13px;\n-\tmargin-top:15px;\n-\tmargin-bottom:20px;\n-}\n-\n-.divido-calculator .divido-info {\n-\t-webkit-border-radius: 5px;\n-\t-moz-border-radius: 5px;\n-\t-ms-border-radius: 5px;\n-\t-o-border-radius: 5px;\n-\tborder-radius: 5px;\n-}\n-\n-.divido-calculator .divido-deposit span {\n-\tdisplay:inline-block;\n-\tmargin-left:4px;\n-\tline-height:15px;\n-\tvertical-align:top;\n-}\n-\n-.divido-calculator input[type=range]::-webkit-slider-runnable-track {\n-\theight: 5px;\n-\tborder: none;\n-\tborder-radius: 3px;\n-}\n-\n-.divido-calculator label {\n-\tdisplay:block;\n-\tclear:both;\n-\tfont-weight:bold;\n-}\n-\n-.divido-calculator input[type=range]::-webkit-slider-thumb {\n-\t-webkit-appearance: none;\n-\tborder: none;\n-\theight: 16px;\n-\twidth: 16px;\n-\tborder-radius: 50%;\n-\tmargin-top: -4px;\n-}\n-\n-.divido-calculator input[type=range]:focus {\n-\toutline: none !important;\n-\tborder:0px !important;\n-}\n-\n-.divido-calculator .divido-logo {\n-\twidth: 140px;\n-\theight: 42px;\n-\tdisplay: block;\n-\tfont-size: 20px;\n-\tline-height: 1;\n-\ttext-indent: -9999px;\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-black-140x42.png');\n-\tbackground-repeat: no-repeat;\n-\tbackground-size: cover;\n-}\n-\n-.divido-calculator .divido-logo-sm {\n-\twidth: 75px;\n-\theight: 23px;\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-black-75x23.png');\n-}\n-\n-.divido-calculator .divido-info {\n-\tpadding:20px;\n-}\n-\n-\n-/* \t\t\t*/\n-\n-.divido-them-light .divido-info {\n-\tbackground:#f9f9f9;\n-}\n-\n-.divido-theme-light a.divido-logo {\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-blue-140x42.png');\n-}\n-.divido-theme-light a.divido-logo-sm {\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-blue-75x23.png');\n-}\n-\n-.divido-theme-light {\n-\tbackground-color:#fff;\n-\tcolor:#3E4F8B;\n-}\n-\n-.divido-theme-light p {\n-\tcolor:#3E4F8B !important;\n-}\n-\n-.divido-theme-light input[type=range]:focus::-webkit-slider-runnable-track {\n-\tbackground: #ccc;\n-}\n-\n-.divido-theme-light input[type=range] {\n-\tbackground-color:transparent;\n-}\n-\n-.divido-theme-light input[type=range]::-webkit-slider-runnable-track {\n-\tbackground: #999;\n-}\n-\n-.divido-theme-light input[type=range]::-webkit-slider-thumb {\n-\tbackground: #3E4F8B;\n-}\n-\n-\n-/* \t\t\t*/\n-\n-.divido-theme-blue .divido-info {\n-\tbackground:#f9f9f9;\n-\tcolor:#000;\n-}\n-\n-.divido-theme-blue a.divido-logo {\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-white-140x42.png');\n-}\n-\n-.divido-theme-blue a.divido-logo-sm {\n-\tbackground-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-white-75x23.png');\n-}\n-\n-.divido-theme-blue {\n-\tbackground-color:#3E4F8B;\n-\tcolor:#fff;\n-}\n-\n-.divido-theme-blue p {\n-\tcolor:#fff !important;\n-}\n-\n-.divido-theme-blue input[type=range]:focus::-webkit-slider-runnable-track {\n-\tbackground: #ccc;\n-}\n-\n-.divido-theme-blue input[type=range] {\n-\tbackground-color:transparent;\n-}\n-\n-.divido-theme-blue input[type=range]::-webkit-slider-runnable-track {\n-\tbackground: #999;\n-}\n-\n-.divido-theme-blue input[type=range]::-webkit-slider-thumb {\n-\tbackground: #fff;\n-}\n-\n-\n-.divido-btn {\n-\t-webkit-border-radius: 4\t;\n-    -moz-border-radius: 4;\n-    border-radius: 4px;\n-    font-family: Arial;\n-    color: #ffffff;\n-    font-size: 11px;\n-    background: #3E4F8B;\n-    padding: 3px 7px 5px 7px !important;\n-    text-decoration: none;\n-    border:1px solid #296AB3;\n-}\n-\n-.divido-btn :hover {\n-    background: #3cb0fd;\n-    background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);\n-    background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);\n-    background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);\n-    background-image: -o-linear-gradient(top, #3cb0fd, #3498db);\n-    background-image: linear-gradient(to bottom, #3cb0fd, #3498db);\n-    text-decoration: none;\n-}\n-\n-.divido-widget img {\n-    display: inline-block;\n-}\n-\n-.divido-calculator select {\n-        color: #000;\n-}\n-</style>\n-<div id=\"divido-checkout\" data-divido-calculator class=\"divido-calculator divido-theme-blue\" data-divido-amount=\"{{ grand_total }}\" data-divido-plans=\"{{ plan_list }}\">\n-    <h1>\n-        <a href=\"https://www.divido.com\" target=\"_blank\" class=\"divido-logo divido-logo-sm\" style=\"float:right;\">{{ text_divido }}</a>\n-        {{ text_checkout_title }}\n-    </h1>\n-    <div style=\"clear:both;\"></div>\n-    <dl>\n-        <dt><span data-divido-choose-finance data-divido-label=\"{{ text_choose_plan }}\" data-divido-form=\"divido_finance\"></span></dt>\n-        <dd><span class=\"divido-deposit\" data-divido-choose-deposit data-divido-label=\"{{ text_choose_deposit }}\" data-divido-form=\"divido_deposit\"></span></dd>\n-    </dl>\n-    <div class=\"description\">\n-        <strong>\n-        <span data-divido-agreement-duration></span> {{ text_monthly_payments }} <span data-divido-monthly-instalment></span>\n-        </strong>\n-    </div>\n-    <div class=\"divido-info\">\n-        <dl>\n-            <dt>{{ text_term }}</dt>\n-            <dd><span data-divido-agreement-duration></span> {{ text_months }}</dd>\n-            <dt>{{ text_monthly_installment }}</dt>\n-            <dd><span data-divido-monthly-instalment></span></dd>\n-            <dt>{{ text_deposit }}</dt>\n-            <dd><span data-divido-deposit></span></dd>\n-            <dt>{{ text_credit_amount }}</dt>\n-            <dd><span data-divido-credit-amount-rounded></span></dd>\n-            <dt>{{ text_amount_payable }}</dt>\n-            <dd><span data-divido-total-payable-rounded></span></dd>\n-            <dt>{{ text_total_interest }}</dt>\n-            <dd><span data-divido-interest-rate></span></dd>\n-        </dl>\n-    </div>\n-    <div class=\"clear\"></div>\n-    <p>{{ text_redirection }}</p>\n-</div>\n-\n-<div class=\"buttons\">\n-    <div class=\"pull-right\">\n-        <input type=\"button\" value=\"{{ button_confirm }}\" id=\"button-confirm\" class=\"btn btn-primary\" data-loading-text=\"{{ text_loading }}\" />\n-    </div>\n-</div>\n-\n-<script>\n-(function($) {\n-    $(function () {\n-        $.getScript('{{ merchant_script }}', function () {\n-            divido_calculator($('#divido-checkout'));\n-        });\n-\n-        $('#button-confirm').on('click', function() {\n-            var finance_elem = $('select[name=\"divido_finance\"]');\n-            var deposit      = $('[name=\"divido_deposit\"]').val();\n-\n-            var finance;\n-            if (finance_elem.length > 0) {\n-                finance = finance_elem.val();\n-            } else {\n-                finance = $('[data-divido-calculator]').data('divido-plans');\n-            }\n-\n-            var data = {\n-                finance: finance,\n-                deposit: deposit\n-            };\n-\n-            $.ajax({\n-                type     : 'post',\n-                url      : 'index.php?route=extension/payment/divido/confirm',\n-                data     : data,\n-                dataType : 'json',\n-                cache    : false,\n-                beforeSend: function() {\n-                    $('#button-confirm').button('loading');\n-                },\n-                complete: function() {\n-                    $('#button-confirm').button('reset');\n-                },\n-                success: function(data) {\n-                    if (data.status == 'ok') {\n-                        location = data.url;\n-                    } else {\n-                        message = data.message || '{{ generic_credit_req_error }}';\n-                        $('#divido-checkout').prepend('<div class=\"alert alert-warning alert-dismissible\"><i class=\"fa fa-exclamation-circle\"></i> ' + message + ' <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button></div>');\n-                    }\n-                }\n-            });\n-        });\n-    });\n-})(jQuery);\n-</script>"
        },
        {
          "filename": "upload/catalog/view/theme/default/template/extension/payment/divido_calculator.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 29,
          "patch": "@@ -1,29 +0,0 @@\n-<div class=\"divido-calculator divido-theme-blue\" data-divido-calculator data-divido-plans=\"{{ planList }}\" data-divido-amount=\"{{ productPrice }}\">\n-    <h1>\n-        <a href=\"https://www.divido.com\" target=\"_blank\" class=\"divido-logo divido-logo-sm\" style=\"float:right;\">{{ text_divido }}</a>\n-        {{ text_checkout_title }} \n-    </h1>\n-\n-    <dl>\n-        <dt><span data-divido-choose-finance data-divido-label=\"{{ text_choose_plan }}\" data-divido-form=\"finance\"></span></dt>\n-        <dd><span class=\"divido-deposit\" data-divido-choose-deposit data-divido-label=\"{{ text_choose_deposit }}\" data-divido-form=\"deposit\"></span></dd>\n-    </dl>\n-    <div class=\"description\"><strong><span data-divido-agreement-duration></span> {{ text_monthly_payments }} <span data-divido-monthly-instalment></span></strong></div>\n-    <div class=\"divido-info\">\n-        <dl>\n-            <dt>{{ text_term }}</dt>\n-            <dd><span data-divido-agreement-duration></span> {{ text_months }}</dd>\n-            <dt>{{ text_monthly_installment }}</dt>\n-            <dd><span data-divido-monthly-instalment></span></dd>\n-            <dt>{{ text_deposit }}</dt>\n-            <dd><span data-divido-deposit></span></dd>\n-            <dt>{{ text_credit_amount }}</dt>\n-            <dd><span data-divido-credit-amount-rounded></span></dd>\n-            <dt>{{ text_amount_payable }}</dt>\n-            <dd><span data-divido-total-payable-rounded></span></dd>\n-            <dt>{{ text_total_interest }}</dt>\n-            <dd><span data-divido-interest-rate></span></dd>\n-        </dl>\n-    </div>\n-    <div class=\"clear\"></div>\n-</div>"
        },
        {
          "filename": "upload/catalog/view/theme/default/template/extension/payment/divido_widget.twig",
          "status": "removed",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -1,3 +0,0 @@\n-<div class=\"divido-widget\">\n-    <div data-divido-widget data-divido-plans=\"{{ planList }}\" data-divido-amount=\"{{ productPrice }}\"></div>\n-</div>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 13,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "858cd6f2c4db75b7b4cac63b7e2d52f40ec1d65f",
            "date": "2025-01-14T15:00:11Z",
            "author_login": "danielkerr"
          },
          {
            "sha": "fca0ccdd00af50c52f8e664a0a32d33334bfaf01",
            "date": "2025-01-14T14:57:17Z",
            "author_login": "danielkerr"
          },
          {
            "sha": "d4d39f2f4f35bd4401b9e0c13ef81699f5fee132",
            "date": "2025-01-14T14:49:49Z",
            "author_login": "danielkerr"
          },
          {
            "sha": "ee2e6e4f3edfdd7d67210d52e6cb83b205f854a3",
            "date": "2025-01-14T14:43:07Z",
            "author_login": "danielkerr"
          },
          {
            "sha": "34f38e8a9b074e8c566d8ebf843b2625cd3be081",
            "date": "2025-01-14T14:38:38Z",
            "author_login": "danielkerr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "This affects versions of the package opencart/opencart from 0.0.0. An SQL Injection issue was identified in the Divido payment extension for OpenCart, which is included by default in version 3.0.3.9. As an anonymous unauthenticated user, if the Divido payment module is installed (it does not have to be enabled), it is possible to exploit SQL injection to gain unauthorised access to the backend database. For any site which is vulnerable, any unauthenticated user could exploit this to dump the entire OpenCart database, including customer PII data.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-06-22T05:15:09.637",
    "last_modified": "2024-11-21T08:54:35.600",
    "fix_date": "2024-05-15T16:12:12Z"
  },
  "references": [
    {
      "url": "https://github.com/opencart/opencart/blob/3.0.3.9/upload/catalog/model/extension/payment/divido.php%23L114",
      "source": "report@snyk.io",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/opencart/opencart/commit/46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2",
      "source": "report@snyk.io",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PHP-OPENCARTOPENCART-7266565",
      "source": "report@snyk.io",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/opencart/opencart/blob/3.0.3.9/upload/catalog/model/extension/payment/divido.php%23L114",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/opencart/opencart/commit/46bd5f5a8056ff9aad0aa7d71729c4cf593d67e2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-PHP-OPENCARTOPENCART-7266565",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.854235",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "opencart",
    "owner": "opencart",
    "created_at": "2011-08-02T07:32:17Z",
    "updated_at": "2025-01-14T13:16:47Z",
    "pushed_at": "2025-01-14T13:16:43Z",
    "size": 190949,
    "stars": 7548,
    "forks": 4861,
    "open_issues": 23,
    "watchers": 7548,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 5006731,
      "JavaScript": 3889210,
      "Twig": 2101549,
      "SCSS": 710857,
      "HTML": 209274,
      "CSS": 55005,
      "Dockerfile": 3441,
      "Shell": 1574,
      "Makefile": 285
    },
    "commit_activity": {
      "total_commits_last_year": 1719,
      "avg_commits_per_week": 33.05769230769231,
      "days_active_last_year": 287
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:02:02.210107"
  }
}