{
  "cve_id": "CVE-2024-21527",
  "github_data": {
    "repository": "gotenberg/gotenberg",
    "fix_commit": "ad152e62e5124b673099a9103eb6e7f933771794",
    "related_commits": [
      "ad152e62e5124b673099a9103eb6e7f933771794",
      "ad152e62e5124b673099a9103eb6e7f933771794"
    ],
    "patch_url": "https://github.com/gotenberg/gotenberg/commit/ad152e62e5124b673099a9103eb6e7f933771794.patch",
    "fix_commit_details": {
      "sha": "ad152e62e5124b673099a9103eb6e7f933771794",
      "commit_date": "2024-02-18T16:18:40Z",
      "author": {
        "login": "gulien",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix(chromium): better default deny list regexp",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 588,
        "additions": 372,
        "deletions": 216
      },
      "files": [
        {
          "filename": "Makefile",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -46,7 +46,7 @@ CHROMIUM_ALLOW_FILE_ACCESS_FROM_FILES=false\n CHROMIUM_HOST_RESOLVER_RULES=\n CHROMIUM_PROXY_SERVER=\n CHROMIUM_ALLOW_LIST=\n-CHROMIUM_DENY_LIST=\"^file:///[^tmp].*\"\n+CHROMIUM_DENY_LIST=^file:(?!//\\/tmp/).*\n CHROMIUM_CLEAR_CACHE=false\n CHROMIUM_CLEAR_COOKIES=false\n CHROMIUM_DISABLE_JAVASCRIPT=false\n@@ -100,8 +100,8 @@ run: ## Start a Gotenberg container\n \t--chromium-allow-file-access-from-files=$(CHROMIUM_ALLOW_FILE_ACCESS_FROM_FILES) \\\n \t--chromium-host-resolver-rules=$(CHROMIUM_HOST_RESOLVER_RULES) \\\n \t--chromium-proxy-server=$(CHROMIUM_PROXY_SERVER) \\\n-\t--chromium-allow-list=$(CHROMIUM_ALLOW_LIST) \\\n-\t--chromium-deny-list=$(CHROMIUM_DENY_LIST) \\\n+\t--chromium-allow-list=\"$(CHROMIUM_ALLOW_LIST)\" \\\n+\t--chromium-deny-list=\"$(CHROMIUM_DENY_LIST)\" \\\n \t--chromium-clear-cache=$(CHROMIUM_CLEAR_CACHE) \\\n \t--chromium-clear-cookies=$(CHROMIUM_CLEAR_COOKIES) \\\n \t--chromium-disable-javascript=$(CHROMIUM_DISABLE_JAVASCRIPT) \\\n@@ -120,8 +120,8 @@ run: ## Start a Gotenberg container\n \t--prometheus-collect-interval=$(PROMETHEUS_COLLECT_INTERVAL) \\\n \t--prometheus-disable-route-logging=$(PROMETHEUS_DISABLE_ROUTE_LOGGING) \\\n \t--prometheus-disable-collect=$(PROMETHEUS_DISABLE_COLLECT) \\\n-\t--webhook-allow-list=$(WEBHOOK_ALLOW_LIST) \\\n-\t--webhook-deny-list=$(WEBHOOK_DENY_LIST) \\\n+\t--webhook-allow-list=\"$(WEBHOOK_ALLOW_LIST)\" \\\n+\t--webhook-deny-list=\"$(WEBHOOK_DENY_LIST)\" \\\n \t--webhook-error-allow-list=$(WEBHOOK_ERROR_ALLOW_LIST) \\\n \t--webhook-error-deny-list=$(WEBHOOK_ERROR_DENY_LIST) \\\n \t--webhook-max-retry=$(WEBHOOK_MAX_RETRY) \\"
        },
        {
          "filename": "pkg/gotenberg/flags.go",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -1,9 +1,9 @@\n package gotenberg\n \n import (\n-\t\"regexp\"\n \t\"time\"\n \n+\t\"github.com/dlclark/regexp2\"\n \t\"github.com/labstack/gommon/bytes\"\n \tflag \"github.com/spf13/pflag\"\n )\n@@ -199,19 +199,19 @@ func (f *ParsedFlags) MustDeprecatedHumanReadableBytesString(deprecated string,\n \n // MustRegexp returns the regular expression of a flag given by name.\n // It panics if an error occurs.\n-func (f *ParsedFlags) MustRegexp(name string) *regexp.Regexp {\n+func (f *ParsedFlags) MustRegexp(name string) *regexp2.Regexp {\n \tval, err := f.GetString(name)\n \tif err != nil {\n \t\tpanic(err)\n \t}\n \n-\treturn regexp.MustCompile(val)\n+\treturn regexp2.MustCompile(val, 0)\n }\n \n // MustDeprecatedRegexp returns the regular expression of a deprecated flag if\n // it was explicitly set or the regular expression of the new flag.\n // It panics if an error occurs.\n-func (f *ParsedFlags) MustDeprecatedRegexp(deprecated string, newName string) *regexp.Regexp {\n+func (f *ParsedFlags) MustDeprecatedRegexp(deprecated string, newName string) *regexp2.Regexp {\n \tif f.Changed(deprecated) {\n \t\treturn f.MustRegexp(deprecated)\n \t}"
        },
        {
          "filename": "pkg/gotenberg/regexp.go",
          "status": "added",
          "additions": 53,
          "deletions": 0,
          "patch": "@@ -0,0 +1,53 @@\n+package gotenberg\n+\n+import (\n+\t\"context\"\n+\t\"errors\"\n+\t\"fmt\"\n+\t\"time\"\n+\n+\t\"github.com/dlclark/regexp2\"\n+)\n+\n+// ErrFiltered happens if a value is filtered by the [FilterDeadline] function.\n+var ErrFiltered = errors.New(\"value filtered\")\n+\n+// FilterDeadline checks if given value is allowed and not denied according to\n+// regex patterns. It returns a [context.DeadlineExceeded] if it takes too long\n+// to process.\n+func FilterDeadline(allowed, denied *regexp2.Regexp, s string, deadline time.Time) error {\n+\t// FIXME: not ideal to compile everytime, but is there another way to create a clone?\n+\tif allowed.String() != \"\" {\n+\t\tallow := regexp2.MustCompile(allowed.String(), 0)\n+\t\tallow.MatchTimeout = time.Until(deadline)\n+\n+\t\tok, err := allow.MatchString(s)\n+\t\tif err != nil {\n+\t\t\tif time.Now().After(deadline) {\n+\t\t\t\treturn context.DeadlineExceeded\n+\t\t\t}\n+\t\t\treturn fmt.Errorf(\"'%s' cannot handle '%s': %w\", allow.String(), s, err)\n+\t\t}\n+\t\tif !ok {\n+\t\t\treturn fmt.Errorf(\"'%s' does not match the expression from the allowed list: %w\", s, ErrFiltered)\n+\t\t}\n+\t}\n+\n+\tif denied.String() != \"\" {\n+\t\tdeny := regexp2.MustCompile(denied.String(), 0)\n+\t\tdeny.MatchTimeout = time.Until(deadline)\n+\n+\t\tok, err := deny.MatchString(s)\n+\t\tif err != nil {\n+\t\t\tif time.Now().After(deadline) {\n+\t\t\t\treturn context.DeadlineExceeded\n+\t\t\t}\n+\t\t\treturn fmt.Errorf(\"'%s' cannot handle '%s': %w\", deny.String(), s, err)\n+\t\t}\n+\t\tif ok {\n+\t\t\treturn fmt.Errorf(\"'%s' matches the expression from the denied list: %w\", s, ErrFiltered)\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}"
        },
        {
          "filename": "pkg/gotenberg/regexp_test.go",
          "status": "added",
          "additions": 83,
          "deletions": 0,
          "patch": "@@ -0,0 +1,83 @@\n+package gotenberg\n+\n+import (\n+\t\"context\"\n+\t\"errors\"\n+\t\"testing\"\n+\t\"time\"\n+\n+\t\"github.com/dlclark/regexp2\"\n+)\n+\n+func TestFilterDeadline(t *testing.T) {\n+\tfor _, tc := range []struct {\n+\t\tscenario      string\n+\t\tallowed       *regexp2.Regexp\n+\t\tdenied        *regexp2.Regexp\n+\t\ts             string\n+\t\tdeadline      time.Time\n+\t\texpectError   bool\n+\t\texpectedError error\n+\t}{\n+\t\t{\n+\t\t\tscenario:      \"DeadlineExceeded (allowed)\",\n+\t\t\tallowed:       regexp2.MustCompile(\"foo\", 0),\n+\t\t\tdenied:        regexp2.MustCompile(\"\", 0),\n+\t\t\ts:             \"foo\",\n+\t\t\tdeadline:      time.Now().Add(time.Duration(-1) * time.Hour),\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: context.DeadlineExceeded,\n+\t\t},\n+\t\t{\n+\t\t\tscenario:      \"ErrFiltered (allowed)\",\n+\t\t\tallowed:       regexp2.MustCompile(\"foo\", 0),\n+\t\t\tdenied:        regexp2.MustCompile(\"\", 0),\n+\t\t\ts:             \"bar\",\n+\t\t\tdeadline:      time.Now().Add(time.Duration(5) * time.Second),\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: ErrFiltered,\n+\t\t},\n+\t\t{\n+\t\t\tscenario:      \"DeadlineExceeded (denied)\",\n+\t\t\tallowed:       regexp2.MustCompile(\"\", 0),\n+\t\t\tdenied:        regexp2.MustCompile(\"foo\", 0),\n+\t\t\ts:             \"foo\",\n+\t\t\tdeadline:      time.Now().Add(time.Duration(-1) * time.Hour),\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: context.DeadlineExceeded,\n+\t\t},\n+\t\t{\n+\t\t\tscenario:      \"ErrFiltered (denied)\",\n+\t\t\tallowed:       regexp2.MustCompile(\"\", 0),\n+\t\t\tdenied:        regexp2.MustCompile(\"foo\", 0),\n+\t\t\ts:             \"foo\",\n+\t\t\tdeadline:      time.Now().Add(time.Duration(5) * time.Second),\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: ErrFiltered,\n+\t\t},\n+\t\t{\n+\t\t\tscenario:    \"success\",\n+\t\t\tallowed:     regexp2.MustCompile(\"\", 0),\n+\t\t\tdenied:      regexp2.MustCompile(\"\", 0),\n+\t\t\ts:           \"foo\",\n+\t\t\tdeadline:    time.Now().Add(time.Duration(5) * time.Second),\n+\t\t\texpectError: false,\n+\t\t},\n+\t} {\n+\t\tt.Run(tc.scenario, func(t *testing.T) {\n+\t\t\terr := FilterDeadline(tc.allowed, tc.denied, tc.s, tc.deadline)\n+\n+\t\t\tif tc.expectError && err == nil {\n+\t\t\t\tt.Fatal(\"expected an error but got none\")\n+\t\t\t}\n+\n+\t\t\tif !tc.expectError && err != nil {\n+\t\t\t\tt.Fatalf(\"expected no error but got: %v\", err)\n+\t\t\t}\n+\n+\t\t\tif tc.expectedError != nil && !errors.Is(err, tc.expectedError) {\n+\t\t\t\tt.Fatalf(\"expected error %v but got: %v\", tc.expectedError, err)\n+\t\t\t}\n+\t\t})\n+\t}\n+}"
        },
        {
          "filename": "pkg/gotenberg/supervisor_test.go",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -487,10 +487,10 @@ func TestProcessSupervisor_runWithDeadline(t *testing.T) {\n \t\t\tps := NewProcessSupervisor(zap.NewNop(), new(ProcessMock), 0, 0).(*processSupervisor)\n \n \t\t\tctx, cancel := context.WithTimeout(context.Background(), 1*time.Second)\n-\t\t\tdefer cancel()\n-\n \t\t\tif tc.ctxDone {\n \t\t\t\tcancel()\n+\t\t\t} else {\n+\t\t\t\tdefer cancel()\n \t\t\t}\n \n \t\t\terr := ps.runWithDeadline(ctx, func() error {"
        },
        {
          "filename": "pkg/modules/chromium/browser.go",
          "status": "modified",
          "additions": 10,
          "deletions": 13,
          "patch": "@@ -5,7 +5,6 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"os\"\n-\t\"regexp\"\n \t\"strings\"\n \t\"sync\"\n \t\"sync/atomic\"\n@@ -15,6 +14,7 @@ import (\n \t\"github.com/chromedp/cdproto/network\"\n \t\"github.com/chromedp/cdproto/runtime\"\n \t\"github.com/chromedp/chromedp\"\n+\t\"github.com/dlclark/regexp2\"\n \t\"go.uber.org/zap\"\n \n \t\"github.com/gotenberg/gotenberg/v8/pkg/gotenberg\"\n@@ -39,8 +39,8 @@ type browserArguments struct {\n \twsUrlReadTimeout         time.Duration\n \n \t// Tasks specific.\n-\tallowList         *regexp.Regexp\n-\tdenyList          *regexp.Regexp\n+\tallowList         *regexp2.Regexp\n+\tdenyList          *regexp2.Regexp\n \tclearCache        bool\n \tclearCookies      bool\n \tdisableJavaScript bool\n@@ -263,20 +263,17 @@ func (b *chromiumBrowser) do(ctx context.Context, logger *zap.Logger, url string\n \t\treturn errors.New(\"browser not started, cannot handle tasks\")\n \t}\n \n-\t// We validate the \"main\" URL against our allow / deny lists.\n-\tif !b.arguments.allowList.MatchString(url) {\n-\t\treturn fmt.Errorf(\"'%s' does not match the expression from the allowed list: %w\", url, ErrUrlNotAuthorized)\n-\t}\n-\n-\tif b.arguments.denyList.String() != \"\" && b.arguments.denyList.MatchString(url) {\n-\t\treturn fmt.Errorf(\"'%s' matches the expression from the denied list: %w\", url, ErrUrlNotAuthorized)\n-\t}\n-\n \tdeadline, ok := ctx.Deadline()\n \tif !ok {\n \t\treturn errors.New(\"context has no deadline\")\n \t}\n \n+\t// We validate the \"main\" URL against our allow / deny lists.\n+\terr := gotenberg.FilterDeadline(b.arguments.allowList, b.arguments.denyList, url, deadline)\n+\tif err != nil {\n+\t\treturn fmt.Errorf(\"filter URL: %w\", err)\n+\t}\n+\n \tb.ctxMu.RLock()\n \tdefer b.ctxMu.RUnlock()\n \n@@ -310,7 +307,7 @@ func (b *chromiumBrowser) do(ctx context.Context, logger *zap.Logger, url string\n \t\tlistenForEventExceptionThrown(taskCtx, logger, &consoleExceptions, &consoleExceptionsMu)\n \t}\n \n-\terr := chromedp.Run(taskCtx, tasks...)\n+\terr = chromedp.Run(taskCtx, tasks...)\n \tif err != nil {\n \t\terrMessage := err.Error()\n "
        },
        {
          "filename": "pkg/modules/chromium/browser_test.go",
          "status": "modified",
          "additions": 119,
          "deletions": 121,
          "patch": "@@ -5,11 +5,11 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"os\"\n-\t\"regexp\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n \n+\t\"github.com/dlclark/regexp2\"\n \t\"github.com/google/uuid\"\n \t\"go.uber.org/zap\"\n \t\"go.uber.org/zap/zapcore\"\n@@ -268,28 +268,24 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\texpectError: true,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does not match the allowed list\",\n+\t\t\tscenario: \"context has no deadline\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n-\t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"^file:///[^tmp].*\"),\n-\t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n \t\t\t}(),\n-\t\t\tfs:            gotenberg.NewFileSystem(),\n-\t\t\tnoDeadline:    false,\n-\t\t\tstart:         false,\n-\t\t\texpectError:   true,\n-\t\t\texpectedError: ErrUrlNotAuthorized,\n+\t\t\tfs:          gotenberg.NewFileSystem(),\n+\t\t\tnoDeadline:  true,\n+\t\t\tstart:       false,\n+\t\t\texpectError: true,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does match the denied list\",\n+\t\t\tscenario: \"ErrFiltered: main URL does not match the allowed list\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n \t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:  regexp.MustCompile(\"^file:///tmp.*\"),\n+\t\t\t\t\tallowList: regexp2.MustCompile(`^file:(?!//\\/tmp/).*`, 0),\n+\t\t\t\t\tdenyList:  regexp2.MustCompile(\"\", 0),\n \t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n@@ -298,32 +294,33 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\tnoDeadline:    false,\n \t\t\tstart:         false,\n \t\t\texpectError:   true,\n-\t\t\texpectedError: ErrUrlNotAuthorized,\n+\t\t\texpectedError: gotenberg.ErrFiltered,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does match the denied list\",\n+\t\t\tscenario: \"ErrFiltered: main URL does match the denied list\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n \t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:  regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList: regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:  regexp2.MustCompile(\"^file:///tmp.*\", 0),\n \t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n \t\t\t}(),\n-\t\t\tfs:          gotenberg.NewFileSystem(),\n-\t\t\tnoDeadline:  true,\n-\t\t\tstart:       false,\n-\t\t\texpectError: true,\n+\t\t\tfs:            gotenberg.NewFileSystem(),\n+\t\t\tnoDeadline:    false,\n+\t\t\tstart:         false,\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: gotenberg.ErrFiltered,\n \t\t},\n \t\t{\n \t\t\tscenario: \"a request does not match the allowed list\",\n \t\t\tbrowser: newChromiumBrowser(\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"^file:///tmp.*\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"^file:///tmp.*\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -354,8 +351,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"^file:///[^tmp].*\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(`^file:(?!//\\/tmp/).*`, 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -386,8 +383,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -421,8 +418,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -454,8 +451,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -487,8 +484,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tclearCache:       true,\n \t\t\t\t},\n \t\t\t),\n@@ -520,8 +517,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tclearCookies:     true,\n \t\t\t\t},\n \t\t\t),\n@@ -553,8 +550,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:           os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout:  5 * time.Second,\n-\t\t\t\t\tallowList:         regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:          regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:         regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:          regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tdisableJavaScript: true,\n \t\t\t\t},\n \t\t\t),\n@@ -588,8 +585,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -625,8 +622,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -658,8 +655,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -694,8 +691,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -727,8 +724,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -762,8 +759,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -797,8 +794,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -832,8 +829,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -878,8 +875,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -913,8 +910,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -959,8 +956,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -995,8 +992,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1033,8 +1030,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1066,8 +1063,8 @@ func TestChromiumBrowser_pdf(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1202,28 +1199,28 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\texpectError: true,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does not match the allowed list\",\n+\t\t\tscenario: \"context has not deadline\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n \t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"^file:///[^tmp].*\"),\n+\t\t\t\t\tallowList: regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:  regexp2.MustCompile(\"\", 0),\n \t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n \t\t\t}(),\n-\t\t\tfs:            gotenberg.NewFileSystem(),\n-\t\t\tnoDeadline:    false,\n-\t\t\tstart:         false,\n-\t\t\texpectError:   true,\n-\t\t\texpectedError: ErrUrlNotAuthorized,\n+\t\t\tfs:          gotenberg.NewFileSystem(),\n+\t\t\tnoDeadline:  true,\n+\t\t\tstart:       false,\n+\t\t\texpectError: true,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does match the denied list\",\n+\t\t\tscenario: \"ErrFiltered: main URL does not match the allowed list\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n \t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:  regexp.MustCompile(\"^file:///tmp.*\"),\n+\t\t\t\t\tallowList: regexp2.MustCompile(`^file:(?!//\\/tmp/).*`, 0),\n+\t\t\t\t\tdenyList:  regexp2.MustCompile(\"\", 0),\n \t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n@@ -1232,32 +1229,33 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\tnoDeadline:    false,\n \t\t\tstart:         false,\n \t\t\texpectError:   true,\n-\t\t\texpectedError: ErrUrlNotAuthorized,\n+\t\t\texpectedError: gotenberg.ErrFiltered,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized: main URL does match the denied list\",\n+\t\t\tscenario: \"ErrFiltered: main URL does match the denied list\",\n \t\t\tbrowser: func() browser {\n \t\t\t\tb := new(chromiumBrowser)\n \t\t\t\tb.arguments = browserArguments{\n-\t\t\t\t\tallowList: regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:  regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList: regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:  regexp2.MustCompile(\"^file:///tmp.*\", 0),\n \t\t\t\t}\n \t\t\t\tb.isStarted.Store(true)\n \t\t\t\treturn b\n \t\t\t}(),\n-\t\t\tfs:          gotenberg.NewFileSystem(),\n-\t\t\tnoDeadline:  true,\n-\t\t\tstart:       false,\n-\t\t\texpectError: true,\n+\t\t\tfs:            gotenberg.NewFileSystem(),\n+\t\t\tnoDeadline:    false,\n+\t\t\tstart:         false,\n+\t\t\texpectError:   true,\n+\t\t\texpectedError: gotenberg.ErrFiltered,\n \t\t},\n \t\t{\n \t\t\tscenario: \"a request does not match the allowed list\",\n \t\t\tbrowser: newChromiumBrowser(\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"^file:///tmp.*\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"^file:///tmp.*\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1288,8 +1286,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"^file:///[^tmp].*\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(`^file:(?!//\\/tmp/).*`, 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1320,8 +1318,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1355,8 +1353,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1388,8 +1386,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1421,8 +1419,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tclearCache:       true,\n \t\t\t\t},\n \t\t\t),\n@@ -1454,8 +1452,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tclearCookies:     true,\n \t\t\t\t},\n \t\t\t),\n@@ -1487,8 +1485,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:           os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout:  5 * time.Second,\n-\t\t\t\t\tallowList:         regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:          regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:         regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:          regexp2.MustCompile(\"\", 0),\n \t\t\t\t\tdisableJavaScript: true,\n \t\t\t\t},\n \t\t\t),\n@@ -1522,8 +1520,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1559,8 +1557,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1594,8 +1592,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1627,8 +1625,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1662,8 +1660,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1697,8 +1695,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1732,8 +1730,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1778,8 +1776,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1813,8 +1811,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1859,8 +1857,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {\n@@ -1900,8 +1898,8 @@ func TestChromiumBrowser_screenshot(t *testing.T) {\n \t\t\t\tbrowserArguments{\n \t\t\t\t\tbinPath:          os.Getenv(\"CHROMIUM_BIN_PATH\"),\n \t\t\t\t\twsUrlReadTimeout: 5 * time.Second,\n-\t\t\t\t\tallowList:        regexp.MustCompile(\"\"),\n-\t\t\t\t\tdenyList:         regexp.MustCompile(\"\"),\n+\t\t\t\t\tallowList:        regexp2.MustCompile(\"\", 0),\n+\t\t\t\t\tdenyList:         regexp2.MustCompile(\"\", 0),\n \t\t\t\t},\n \t\t\t),\n \t\t\tfs: func() *gotenberg.FileSystem {"
        },
        {
          "filename": "pkg/modules/chromium/chromium.go",
          "status": "modified",
          "additions": 1,
          "deletions": 5,
          "patch": "@@ -20,10 +20,6 @@ func init() {\n }\n \n var (\n-\t// ErrUrlNotAuthorized happens if a URL is not acceptable according to the\n-\t// allowed/denied lists.\n-\tErrUrlNotAuthorized = errors.New(\"URL not authorized\")\n-\n \t// ErrInvalidEmulatedMediaType happens if the emulated media type is not\n \t// \"screen\" nor \"print\". Empty value are allowed though.\n \tErrInvalidEmulatedMediaType = errors.New(\"invalid emulated media type\")\n@@ -291,7 +287,7 @@ func (mod *Chromium) Descriptor() gotenberg.ModuleDescriptor {\n \t\t\tfs.String(\"chromium-host-resolver-rules\", \"\", \"Set custom mappings to the host resolver\")\n \t\t\tfs.String(\"chromium-proxy-server\", \"\", \"Set the outbound proxy server; this switch only affects HTTP and HTTPS requests\")\n \t\t\tfs.String(\"chromium-allow-list\", \"\", \"Set the allowed URLs for Chromium using a regular expression\")\n-\t\t\tfs.String(\"chromium-deny-list\", \"^file:///[^tmp].*\", \"Set the denied URLs for Chromium using a regular expression\")\n+\t\t\tfs.String(\"chromium-deny-list\", `^file:(?!//\\/tmp/).*`, \"Set the denied URLs for Chromium using a regular expression\")\n \t\t\tfs.Bool(\"chromium-clear-cache\", false, \"Clear Chromium cache between each conversion\")\n \t\t\tfs.Bool(\"chromium-clear-cookies\", false, \"Clear Chromium cookies between each conversion\")\n \t\t\tfs.Bool(\"chromium-disable-javascript\", false, \"Disable JavaScript\")"
        },
        {
          "filename": "pkg/modules/chromium/events.go",
          "status": "modified",
          "additions": 13,
          "deletions": 10,
          "patch": "@@ -3,7 +3,6 @@ package chromium\n import (\n \t\"context\"\n \t\"fmt\"\n-\t\"regexp\"\n \t\"slices\"\n \t\"sync\"\n \n@@ -13,28 +12,33 @@ import (\n \t\"github.com/chromedp/cdproto/page\"\n \t\"github.com/chromedp/cdproto/runtime\"\n \t\"github.com/chromedp/chromedp\"\n+\t\"github.com/dlclark/regexp2\"\n \t\"go.uber.org/multierr\"\n \t\"go.uber.org/zap\"\n \t\"golang.org/x/sync/errgroup\"\n+\n+\t\"github.com/gotenberg/gotenberg/v8/pkg/gotenberg\"\n )\n \n // listenForEventRequestPaused listens for requests to check if they are\n // allowed or not.\n-func listenForEventRequestPaused(ctx context.Context, logger *zap.Logger, allowList *regexp.Regexp, denyList *regexp.Regexp) {\n+func listenForEventRequestPaused(ctx context.Context, logger *zap.Logger, allowList *regexp2.Regexp, denyList *regexp2.Regexp) {\n \tchromedp.ListenTarget(ctx, func(ev interface{}) {\n \t\tswitch e := ev.(type) {\n \t\tcase *fetch.EventRequestPaused:\n \t\t\tgo func() {\n \t\t\t\tlogger.Debug(fmt.Sprintf(\"event EventRequestPaused fired for '%s'\", e.Request.URL))\n \t\t\t\tallow := true\n \n-\t\t\t\tif !allowList.MatchString(e.Request.URL) {\n-\t\t\t\t\tlogger.Warn(fmt.Sprintf(\"'%s' does not match the expression from the allowed list\", e.Request.URL))\n-\t\t\t\t\tallow = false\n+\t\t\t\tdeadline, ok := ctx.Deadline()\n+\t\t\t\tif !ok {\n+\t\t\t\t\tlogger.Error(\"context has no deadline, cannot filter URL\")\n+\t\t\t\t\treturn\n \t\t\t\t}\n \n-\t\t\t\tif denyList.String() != \"\" && denyList.MatchString(e.Request.URL) {\n-\t\t\t\t\tlogger.Warn(fmt.Sprintf(\"'%s' matches the expression from the denied list\", e.Request.URL))\n+\t\t\t\terr := gotenberg.FilterDeadline(allowList, denyList, e.Request.URL, deadline)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tlogger.Warn(err.Error())\n \t\t\t\t\tallow = false\n \t\t\t\t}\n \n@@ -43,16 +47,15 @@ func listenForEventRequestPaused(ctx context.Context, logger *zap.Logger, allowL\n \n \t\t\t\tif allow {\n \t\t\t\t\treq := fetch.ContinueRequest(e.RequestID)\n-\t\t\t\t\terr := req.Do(executorCtx)\n+\t\t\t\t\terr = req.Do(executorCtx)\n \t\t\t\t\tif err != nil {\n \t\t\t\t\t\tlogger.Error(fmt.Sprintf(\"continue request: %s\", err))\n \t\t\t\t\t}\n-\n \t\t\t\t\treturn\n \t\t\t\t}\n \n \t\t\t\treq := fetch.FailRequest(e.RequestID, network.ErrorReasonAccessDenied)\n-\t\t\t\terr := req.Do(executorCtx)\n+\t\t\t\terr = req.Do(executorCtx)\n \t\t\t\tif err != nil {\n \t\t\t\t\tlogger.Error(fmt.Sprintf(\"fail request: %s\", err))\n \t\t\t\t}"
        },
        {
          "filename": "pkg/modules/chromium/routes.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -621,7 +621,7 @@ func handleChromiumError(err error, url string, options Options) error {\n \t\t)\n \t}\n \n-\tif errors.Is(err, ErrUrlNotAuthorized) {\n+\tif errors.Is(err, gotenberg.ErrFiltered) {\n \t\treturn api.WrapError(\n \t\t\terr,\n \t\t\tapi.NewSentinelHttpError("
        },
        {
          "filename": "pkg/modules/chromium/routes_test.go",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -1243,10 +1243,10 @@ func TestConvertUrl(t *testing.T) {\n \t\t\texpectOutputPathsCount: 0,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized\",\n+\t\t\tscenario: \"ErrFiltered\",\n \t\t\tctx:      &api.ContextMock{Context: new(api.Context)},\n \t\t\tapi: &ApiMock{PdfMock: func(ctx context.Context, logger *zap.Logger, url, outputPath string, options PdfOptions) error {\n-\t\t\t\treturn ErrUrlNotAuthorized\n+\t\t\t\treturn gotenberg.ErrFiltered\n \t\t\t}},\n \t\t\toptions:                DefaultPdfOptions(),\n \t\t\texpectError:            true,\n@@ -1503,10 +1503,10 @@ func TestScreenshotUrl(t *testing.T) {\n \t\t\texpectOutputPathsCount: 0,\n \t\t},\n \t\t{\n-\t\t\tscenario: \"ErrUrlNotAuthorized\",\n+\t\t\tscenario: \"ErrFiltered\",\n \t\t\tctx:      &api.ContextMock{Context: new(api.Context)},\n \t\t\tapi: &ApiMock{ScreenshotMock: func(ctx context.Context, logger *zap.Logger, url, outputPath string, options ScreenshotOptions) error {\n-\t\t\t\treturn ErrUrlNotAuthorized\n+\t\t\t\treturn gotenberg.ErrFiltered\n \t\t\t}},\n \t\t\toptions:                DefaultScreenshotOptions(),\n \t\t\texpectError:            true,"
        },
        {
          "filename": "pkg/modules/webhook/middleware.go",
          "status": "modified",
          "additions": 17,
          "deletions": 16,
          "patch": "@@ -9,14 +9,15 @@ import (\n \t\"fmt\"\n \t\"net/http\"\n \t\"os\"\n-\t\"regexp\"\n \t\"strconv\"\n \t\"strings\"\n \t\"time\"\n \n+\t\"github.com/dlclark/regexp2\"\n \t\"github.com/hashicorp/go-retryablehttp\"\n \t\"github.com/labstack/echo/v4\"\n \n+\t\"github.com/gotenberg/gotenberg/v8/pkg/gotenberg\"\n \t\"github.com/gotenberg/gotenberg/v8/pkg/modules/api\"\n )\n \n@@ -44,38 +45,38 @@ func webhookMiddleware(w *Webhook) api.Middleware {\n \t\t\t\t\t\t)\n \t\t\t\t\t}\n \n+\t\t\t\t\tdeadline, ok := ctx.Deadline()\n+\t\t\t\t\tif !ok {\n+\t\t\t\t\t\treturn errors.New(\"context has no deadline\")\n+\t\t\t\t\t}\n+\n \t\t\t\t\t// Let's check if the webhook URLs are acceptable according to our\n \t\t\t\t\t// allowed/denied lists.\n-\t\t\t\t\tfilter := func(URL, header string, allowList, denyList *regexp.Regexp) error {\n-\t\t\t\t\t\tif !allowList.MatchString(URL) {\n-\t\t\t\t\t\t\treturn api.WrapError(\n-\t\t\t\t\t\t\t\tfmt.Errorf(\"'%s' does not match the expression from the allowed list\", URL),\n-\t\t\t\t\t\t\t\tapi.NewSentinelHttpError(\n-\t\t\t\t\t\t\t\t\thttp.StatusForbidden,\n-\t\t\t\t\t\t\t\t\tfmt.Sprintf(\"Invalid '%s' header value: '%s' does not match the authorized URLs\", header, URL),\n-\t\t\t\t\t\t\t\t),\n-\t\t\t\t\t\t\t)\n+\t\t\t\t\tfilter := func(url, header string, allowList, denyList *regexp2.Regexp, deadline time.Time) error {\n+\t\t\t\t\t\terr := gotenberg.FilterDeadline(allowList, denyList, url, deadline)\n+\t\t\t\t\t\tif err == nil {\n+\t\t\t\t\t\t\treturn nil\n \t\t\t\t\t\t}\n \n-\t\t\t\t\t\tif denyList.String() != \"\" && denyList.MatchString(URL) {\n+\t\t\t\t\t\tif errors.Is(err, gotenberg.ErrFiltered) {\n \t\t\t\t\t\t\treturn api.WrapError(\n-\t\t\t\t\t\t\t\tfmt.Errorf(\"'%s' matches the expression from the denied list\", URL),\n+\t\t\t\t\t\t\t\terr,\n \t\t\t\t\t\t\t\tapi.NewSentinelHttpError(\n \t\t\t\t\t\t\t\t\thttp.StatusForbidden,\n-\t\t\t\t\t\t\t\t\tfmt.Sprintf(\"Invalid '%s' header value: '%s' does not match the authorized URLs\", header, URL),\n+\t\t\t\t\t\t\t\t\tfmt.Sprintf(\"Invalid '%s' header value: '%s' does not match the authorized URL\", header, url),\n \t\t\t\t\t\t\t\t),\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t}\n \n-\t\t\t\t\t\treturn nil\n+\t\t\t\t\t\treturn err\n \t\t\t\t\t}\n \n-\t\t\t\t\terr := filter(webhookUrl, \"Gotenberg-Webhook-Url\", w.allowList, w.denyList)\n+\t\t\t\t\terr := filter(webhookUrl, \"Gotenberg-Webhook-Url\", w.allowList, w.denyList, deadline)\n \t\t\t\t\tif err != nil {\n \t\t\t\t\t\treturn fmt.Errorf(\"filter webhook URL: %w\", err)\n \t\t\t\t\t}\n \n-\t\t\t\t\terr = filter(webhookErrorUrl, \"Gotenberg-Webhook-Error-Url\", w.errorAllowList, w.errorDenyList)\n+\t\t\t\t\terr = filter(webhookErrorUrl, \"Gotenberg-Webhook-Error-Url\", w.errorAllowList, w.errorDenyList, deadline)\n \t\t\t\t\tif err != nil {\n \t\t\t\t\t\treturn fmt.Errorf(\"filter webhook error URL: %w\", err)\n \t\t\t\t\t}"
        },
        {
          "filename": "pkg/modules/webhook/middleware_test.go",
          "status": "modified",
          "additions": 55,
          "deletions": 30,
          "patch": "@@ -11,11 +11,11 @@ import (\n \t\"mime/multipart\"\n \t\"net/http\"\n \t\"net/http/httptest\"\n-\t\"regexp\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n \n+\t\"github.com/dlclark/regexp2\"\n \t\"github.com/labstack/echo/v4\"\n \t\"go.uber.org/zap\"\n \n@@ -47,10 +47,10 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \n \tbuildWebhookModule := func() *Webhook {\n \t\treturn &Webhook{\n-\t\t\tallowList:      regexp.MustCompile(\"\"),\n-\t\t\tdenyList:       regexp.MustCompile(\"\"),\n-\t\t\terrorAllowList: regexp.MustCompile(\"\"),\n-\t\t\terrorDenyList:  regexp.MustCompile(\"\"),\n+\t\t\tallowList:      regexp2.MustCompile(\"\", 0),\n+\t\t\tdenyList:       regexp2.MustCompile(\"\", 0),\n+\t\t\terrorAllowList: regexp2.MustCompile(\"\", 0),\n+\t\t\terrorDenyList:  regexp2.MustCompile(\"\", 0),\n \t\t\tmaxRetry:       0,\n \t\t\tretryMinWait:   0,\n \t\t\tretryMaxWait:   0,\n@@ -63,6 +63,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\trequest          *http.Request\n \t\tmod              *Webhook\n \t\tnext             echo.HandlerFunc\n+\t\tnoDeadline       bool\n \t\texpectError      bool\n \t\texpectHttpError  bool\n \t\texpectHttpStatus int\n@@ -76,6 +77,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\t\treturn nil\n \t\t\t\t}\n \t\t\t}(),\n+\t\t\tnoDeadline:      false,\n \t\t\texpectError:     false,\n \t\t\texpectHttpError: false,\n \t\t},\n@@ -87,10 +89,23 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n \t\t},\n+\t\t{\n+\t\t\tscenario: \"context has no deadline\",\n+\t\t\trequest: func() *http.Request {\n+\t\t\t\treq := buildMultipartFormDataRequest()\n+\t\t\t\treq.Header.Set(\"Gotenberg-Webhook-Url\", \"foo\")\n+\t\t\t\treq.Header.Set(\"Gotenberg-Webhook-Error-Url\", \"bar\")\n+\t\t\t\treturn req\n+\t\t\t}(),\n+\t\t\tmod:         buildWebhookModule(),\n+\t\t\tnoDeadline:  true,\n+\t\t\texpectError: true,\n+\t\t},\n \t\t{\n \t\t\tscenario: \"webhook URL is not allowed\",\n \t\t\trequest: func() *http.Request {\n@@ -101,9 +116,10 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t}(),\n \t\t\tmod: func() *Webhook {\n \t\t\t\tmod := buildWebhookModule()\n-\t\t\t\tmod.allowList = regexp.MustCompile(\"bar\")\n+\t\t\t\tmod.allowList = regexp2.MustCompile(\"bar\", 0)\n \t\t\t\treturn mod\n \t\t\t}(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusForbidden,\n@@ -118,9 +134,10 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t}(),\n \t\t\tmod: func() *Webhook {\n \t\t\t\tmod := buildWebhookModule()\n-\t\t\t\tmod.denyList = regexp.MustCompile(\"foo\")\n+\t\t\t\tmod.denyList = regexp2.MustCompile(\"foo\", 0)\n \t\t\t\treturn mod\n \t\t\t}(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusForbidden,\n@@ -135,9 +152,10 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t}(),\n \t\t\tmod: func() *Webhook {\n \t\t\t\tmod := buildWebhookModule()\n-\t\t\t\tmod.errorAllowList = regexp.MustCompile(\"foo\")\n+\t\t\t\tmod.errorAllowList = regexp2.MustCompile(\"foo\", 0)\n \t\t\t\treturn mod\n \t\t\t}(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusForbidden,\n@@ -152,9 +170,10 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t}(),\n \t\t\tmod: func() *Webhook {\n \t\t\t\tmod := buildWebhookModule()\n-\t\t\t\tmod.errorDenyList = regexp.MustCompile(\"bar\")\n+\t\t\t\tmod.errorDenyList = regexp2.MustCompile(\"bar\", 0)\n \t\t\t\treturn mod\n \t\t\t}(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusForbidden,\n@@ -169,6 +188,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -183,6 +203,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -198,6 +219,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -213,6 +235,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -228,6 +251,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -242,6 +266,7 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \t\t\t\treturn req\n \t\t\t}(),\n \t\t\tmod:              buildWebhookModule(),\n+\t\t\tnoDeadline:       false,\n \t\t\texpectError:      true,\n \t\t\texpectHttpError:  true,\n \t\t\texpectHttpStatus: http.StatusBadRequest,\n@@ -254,15 +279,20 @@ func TestWebhookMiddlewareGuards(t *testing.T) {\n \n \t\t\tc := srv.NewContext(tc.request, httptest.NewRecorder())\n \n-\t\t\tctx := &api.ContextMock{Context: &api.Context{}}\n-\t\t\tctx.SetEchoContext(c)\n-\n-\t\t\tc.Set(\"context\", ctx.Context)\n-\t\t\tc.Set(\"cancel\", func() context.CancelFunc {\n-\t\t\t\treturn func() {\n-\t\t\t\t\treturn\n-\t\t\t\t}\n-\t\t\t}())\n+\t\t\tif tc.noDeadline {\n+\t\t\t\tctx := &api.ContextMock{Context: &api.Context{Context: context.Background()}}\n+\t\t\t\tctx.SetEchoContext(c)\n+\t\t\t\tc.Set(\"context\", ctx.Context)\n+\t\t\t\tc.Set(\"cancel\", func() context.CancelFunc {\n+\t\t\t\t\treturn nil\n+\t\t\t\t}())\n+\t\t\t} else {\n+\t\t\t\ttimeoutCtx, cancel := context.WithTimeout(context.Background(), time.Duration(10)*time.Second)\n+\t\t\t\tctx := &api.ContextMock{Context: &api.Context{Context: timeoutCtx}}\n+\t\t\t\tctx.SetEchoContext(c)\n+\t\t\t\tc.Set(\"context\", ctx.Context)\n+\t\t\t\tc.Set(\"cancel\", cancel)\n+\t\t\t}\n \n \t\t\terr := webhookMiddleware(tc.mod).Handler(tc.next)(c)\n \n@@ -320,10 +350,10 @@ func TestWebhookMiddlewareAsynchronousProcess(t *testing.T) {\n \n \tbuildWebhookModule := func() *Webhook {\n \t\treturn &Webhook{\n-\t\t\tallowList:      regexp.MustCompile(\"\"),\n-\t\t\tdenyList:       regexp.MustCompile(\"\"),\n-\t\t\terrorAllowList: regexp.MustCompile(\"\"),\n-\t\t\terrorDenyList:  regexp.MustCompile(\"\"),\n+\t\t\tallowList:      regexp2.MustCompile(\"\", 0),\n+\t\t\tdenyList:       regexp2.MustCompile(\"\", 0),\n+\t\t\terrorAllowList: regexp2.MustCompile(\"\", 0),\n+\t\t\terrorDenyList:  regexp2.MustCompile(\"\", 0),\n \t\t\tmaxRetry:       0,\n \t\t\tretryMinWait:   0,\n \t\t\tretryMaxWait:   0,\n@@ -426,22 +456,17 @@ func TestWebhookMiddlewareAsynchronousProcess(t *testing.T) {\n \t\t\tc.Set(\"trace\", \"foo\")\n \t\t\tc.Set(\"startTime\", time.Now())\n \n-\t\t\tctx := &api.ContextMock{Context: &api.Context{}}\n+\t\t\ttimeoutCtx, cancel := context.WithTimeout(context.Background(), time.Duration(10)*time.Second)\n+\t\t\tctx := &api.ContextMock{Context: &api.Context{Context: timeoutCtx}}\n \t\t\tctx.SetLogger(zap.NewNop())\n \t\t\tctx.SetEchoContext(c)\n \n \t\t\tc.Set(\"context\", ctx.Context)\n-\t\t\tc.Set(\"cancel\", func() context.CancelFunc {\n-\t\t\t\treturn func() {\n-\t\t\t\t\treturn\n-\t\t\t\t}\n-\t\t\t}())\n+\t\t\tc.Set(\"cancel\", cancel)\n \n \t\t\twebhook := echo.New()\n \t\t\twebhook.HideBanner = true\n \t\t\twebhook.HidePort = true\n-\n-\t\t\trand.Seed(time.Now().UnixNano())\n \t\t\twebhookPort := rand.Intn(65535-1025+1) + 1025\n \n \t\t\tc.Request().Header.Set(\"Gotenberg-Webhook-Url\", fmt.Sprintf(\"http://localhost:%d/\", webhookPort))"
        },
        {
          "filename": "pkg/modules/webhook/webhook.go",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -1,9 +1,9 @@\n package webhook\n \n import (\n-\t\"regexp\"\n \t\"time\"\n \n+\t\"github.com/dlclark/regexp2\"\n \tflag \"github.com/spf13/pflag\"\n \n \t\"github.com/gotenberg/gotenberg/v8/pkg/gotenberg\"\n@@ -17,10 +17,10 @@ func init() {\n // Webhook is a module which provides a middleware for uploading output files\n // to any destinations in an asynchronous fashion.\n type Webhook struct {\n-\tallowList      *regexp.Regexp\n-\tdenyList       *regexp.Regexp\n-\terrorAllowList *regexp.Regexp\n-\terrorDenyList  *regexp.Regexp\n+\tallowList      *regexp2.Regexp\n+\tdenyList       *regexp2.Regexp\n+\terrorAllowList *regexp2.Regexp\n+\terrorDenyList  *regexp2.Regexp\n \tmaxRetry       int\n \tretryMinWait   time.Duration\n \tretryMaxWait   time.Duration"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 5,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3e3b24f61147f4a91ca138874c8476e001b15634",
            "date": "2025-01-11T10:28:27Z",
            "author_login": "gulien"
          },
          {
            "sha": "6dc7d70a1f9e26162ddb1e370cf393e35ea91ba1",
            "date": "2025-01-11T10:17:50Z",
            "author_login": "gulien"
          },
          {
            "sha": "a6f4c5651cdbb2953ff44f3f3eb78f81526e5667",
            "date": "2025-01-11T10:08:19Z",
            "author_login": "gulien"
          },
          {
            "sha": "291a4d39fed9ddc9fbffeed1b6e274017b309345",
            "date": "2025-01-10T16:02:16Z",
            "author_login": "gulien"
          },
          {
            "sha": "e639a1dd73b3cc2e81844530b9821a56e807e93f",
            "date": "2025-01-10T15:59:01Z",
            "author_login": "gulien"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
    "cwe_id": "CWE-918",
    "description": "Versions of the package github.com/gotenberg/gotenberg/v8/pkg/gotenberg before 8.1.0; versions of the package github.com/gotenberg/gotenberg/v8/pkg/modules/chromium before 8.1.0; versions of the package github.com/gotenberg/gotenberg/v8/pkg/modules/webhook before 8.1.0 are vulnerable to Server-side Request Forgery (SSRF) via the /convert/html endpoint when a request is made to a file via localhost, such as <iframe src=\"\\\\localhost/etc/passwd\">. By exploiting this vulnerability, an attacker can achieve local file inclusion, allowing of sensitive files read on the host system.\r\r Workaround\rAn alternative is using either or both --chromium-deny-list and --chromium-allow-list flags.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-19T05:15:10.053",
    "last_modified": "2024-11-21T08:54:37.400",
    "fix_date": "2024-02-18T16:18:40Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/filipochnik/bc88a3d1cc17c07cec391ee98e1e6356",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/gotenberg/gotenberg/commit/ad152e62e5124b673099a9103eb6e7f933771794",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/gotenberg/gotenberg/releases/tag/v8.1.0",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGGOTENBERG-7537081",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGMODULESCHROMIUM-7537082",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGMODULESWEBHOOK-7537083",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://gist.github.com/filipochnik/bc88a3d1cc17c07cec391ee98e1e6356",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/gotenberg/gotenberg/commit/ad152e62e5124b673099a9103eb6e7f933771794",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/gotenberg/gotenberg/releases/tag/v8.1.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGGOTENBERG-7537081",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGMODULESCHROMIUM-7537082",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOTENBERGGOTENBERGV8PKGMODULESWEBHOOK-7537083",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.495564",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gotenberg",
    "owner": "gotenberg",
    "created_at": "2018-03-23T14:05:59Z",
    "updated_at": "2025-01-14T18:45:18Z",
    "pushed_at": "2025-01-11T10:28:33Z",
    "size": 20247,
    "stars": 8373,
    "forks": 563,
    "open_issues": 39,
    "watchers": 8373,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.0.0",
      "2.0.0"
    ],
    "languages": {
      "Go": 829727,
      "Dockerfile": 11242,
      "Makefile": 8446,
      "Shell": 5002
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T20:42:23.491614"
  }
}