{
  "cve_id": "CVE-2024-21529",
  "github_data": {
    "repository": "lukeed/dset",
    "fix_commit": "16d6154e085bef01e99f01330e5a421a7f098afa",
    "related_commits": [
      "16d6154e085bef01e99f01330e5a421a7f098afa"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "16d6154e085bef01e99f01330e5a421a7f098afa",
      "commit_date": "2024-09-09T15:14:24Z",
      "author": {
        "login": "lukeed",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: prevent __proto__ assignment via implicit string",
        "length": 53,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 29,
        "additions": 23,
        "deletions": 6
      },
      "files": [
        {
          "filename": "readme.md",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -1,6 +1,6 @@\n # dset [![CI](https://github.com/lukeed/dset/workflows/CI/badge.svg?branch=master&event=push)](https://github.com/lukeed/dset/actions) [![codecov](https://badgen.net/codecov/c/github/lukeed/dset)](https://codecov.io/gh/lukeed/dset)\n \n-> A tiny (194B) utility for safely writing deep Object values~!\n+> A tiny (197B) utility for safely writing deep Object values~!\n \n For _accessing_ deep object properties, please see [`dlv`](https://github.com/developit/dlv).\n \n@@ -17,15 +17,15 @@ $ npm install --save dset\n There are two \"versions\" of `dset` available:\n \n #### `dset`\n-> **Size (gzip):** 194 bytes<br>\n+> **Size (gzip):** 197 bytes<br>\n > **Availability:** [CommonJS](https://unpkg.com/dset/dist/index.js), [ES Module](https://unpkg.com/dset/dist/index.mjs), [UMD](https://unpkg.com/dset/dist/index.min.js)\n \n ```js\n import { dset } from 'dset';\n ```\n \n #### `dset/merge`\n-> **Size (gzip):** 288 bytes<br>\n+> **Size (gzip):** 307 bytes<br>\n > **Availability:** [CommonJS](https://unpkg.com/dset/merge/index.js), [ES Module](https://unpkg.com/dset/merge/index.mjs), [UMD](https://unpkg.com/dset/merge/index.min.js)\n \n ```js"
        },
        {
          "filename": "src/index.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@ export function dset(obj, keys, val) {\n \tkeys.split && (keys=keys.split('.'));\n \tvar i=0, l=keys.length, t=obj, x, k;\n \twhile (i < l) {\n-\t\tk = keys[i++];\n+\t\tk = ''+keys[i++];\n \t\tif (k === '__proto__' || k === 'constructor' || k === 'prototype') break;\n \t\tt = t[k] = (i === l) ? val : (typeof(x=t[k])===typeof(keys)) ? x : (keys[i]*0 !== 0 || !!~(''+keys[i]).indexOf('.')) ? {} : [];\n \t}"
        },
        {
          "filename": "src/merge.js",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -19,7 +19,7 @@ export function dset(obj, keys, val) {\n \tkeys.split && (keys=keys.split('.'));\n \tvar i=0, l=keys.length, t=obj, x, k;\n \twhile (i < l) {\n-\t\tk = keys[i++];\n+\t\tk = ''+keys[i++];\n \t\tif (k === '__proto__' || k === 'constructor' || k === 'prototype') break;\n \t\tt = t[k] = (i === l) ? merge(t[k],val) : (typeof(x=t[k])===typeof keys) ? x : (keys[i]*0 !== 0 || !!~(''+keys[i]).indexOf('.')) ? {} : [];\n \t}"
        },
        {
          "filename": "test/suites/pollution.js",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -38,6 +38,23 @@ export default function (dset) {\n \t\tassert.is(Object.create(null).hello, undefined);\n \t});\n \n+\tpollution('should protect against [\"__proto__\"] assignment :: implicit string', () => {\n+\t\tlet input = { abc: 123 };\n+\t\tlet before = input.__proto__;\n+\n+\t\tdset(input, [['__proto__'], 'polluted'], true);\n+\n+\t\tassert.equal(input.__proto__, before);\n+\t\tassert.equal(input, { abc: 123 });\n+\n+\t\tassert.is({}.polluted, undefined);\n+\t\tassert.is(input.polluted, undefined);\n+\t\tassert.is((new Object).polluted, undefined);\n+\t\tassert.is(Object.create(null).polluted, undefined);\n+\t});\n+\n+\n+\n \tpollution('should ignore \"prototype\" assignment', () => {\n \t\tlet input = { a: 123 };\n \t\tdset(input, 'a.prototype.hello', 'world');\n@@ -85,7 +102,7 @@ export default function (dset) {\n \t\t});\n \t});\n \n-\t// Test for CVE-2022-25645 - CWE-1321 \n+\t// Test for CVE-2022-25645 - CWE-1321\n \tpollution('should ignore JSON.parse crafted object with \"__proto__\" key', () => {\n \t\tlet a = { b: { c: 1 } };\n \t\tassert.is(a.polluted, undefined);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05b1ec0f8cebe3b5d5667285bc7da90f38a7215e",
            "date": "2024-09-09T15:16:24Z",
            "author_login": "lukeed"
          },
          {
            "sha": "16d6154e085bef01e99f01330e5a421a7f098afa",
            "date": "2024-09-09T15:14:24Z",
            "author_login": "lukeed"
          },
          {
            "sha": "48f14a1a4b2985c30663133e4699ddab69a393ac",
            "date": "2023-10-25T18:30:05Z",
            "author_login": "lukeed"
          },
          {
            "sha": "aca90fb54b908de0042b7da0d45ef3ca0ea9671a",
            "date": "2023-10-25T18:29:21Z",
            "author_login": "Akkuma"
          },
          {
            "sha": "740b3aeec52b28244be05c8c73f40921c4434851",
            "date": "2022-05-03T15:38:10Z",
            "author_login": "lukeed"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:L",
    "cwe_id": "CWE-1321",
    "description": "Versions of the package dset before 3.1.4 are vulnerable to Prototype Pollution via the dset function due improper user input sanitization. This vulnerability allows the attacker to inject malicious object property using the built-in Object property __proto__, which is recursively assigned to all the objects in the program.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-11T05:15:02.547",
    "last_modified": "2024-09-11T16:26:11.920",
    "fix_date": "2024-09-09T15:14:24Z"
  },
  "references": [
    {
      "url": "https://github.com/lukeed/dset/commit/16d6154e085bef01e99f01330e5a421a7f098afa",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-DSET-7116691",
      "source": "report@snyk.io",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.113584",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "dset",
    "owner": "lukeed",
    "created_at": "2018-02-20T19:02:16Z",
    "updated_at": "2025-01-06T17:46:36Z",
    "pushed_at": "2024-09-09T15:16:25Z",
    "size": 56,
    "stars": 763,
    "forks": 25,
    "open_issues": 9,
    "watchers": 763,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 17856
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T08:16:56.051149"
  }
}