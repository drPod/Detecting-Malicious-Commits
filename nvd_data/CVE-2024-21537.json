{
  "cve_id": "CVE-2024-21537",
  "github_data": {
    "repository": "antonk52/lilconfig",
    "fix_commit": "2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7",
    "related_commits": [
      "2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7"
    ],
    "patch_url": "https://github.com/antonk52/lilconfig/commit/2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7.patch",
    "fix_commit_details": {
      "sha": "2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7",
      "commit_date": "2024-02-17T14:54:52Z",
      "author": {
        "login": "antonk52",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "remove .d.ts from import paths",
        "length": 30,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 26,
        "additions": 13,
        "deletions": 13
      },
      "files": [
        {
          "filename": "src/index.js",
          "status": "modified",
          "additions": 13,
          "deletions": 13,
          "patch": "@@ -37,9 +37,9 @@ function parentDir(p) {\n     return path.dirname(p) || path.sep;\n }\n \n-/** @type {import('./index.d.ts').LoaderSync} */\n+/** @type {import('./index').LoaderSync} */\n const jsonLoader = (_, content) => JSON.parse(content);\n-/** @type {import('./index.d.ts').LoadersSync} */\n+/** @type {import('./index').LoadersSync} */\n const defaultLoadersSync = Object.freeze({\n     '.js': require,\n     '.json': require,\n@@ -48,7 +48,7 @@ const defaultLoadersSync = Object.freeze({\n });\n module.exports.defaultLoadersSync = defaultLoadersSync;\n \n-/** @type {import('./index.d.ts').Loader} */\n+/** @type {import('./index').Loader} */\n const dynamicImport = async id => {\n     try {\n         const mod = await import(id);\n@@ -74,7 +74,7 @@ const dynamicImport = async id => {\n     }\n };\n \n-/** @type {import('./index.d.ts').Loaders} */\n+/** @type {import('./index').Loaders} */\n const defaultLoaders = Object.freeze({\n     '.js': dynamicImport,\n     '.mjs': dynamicImport,\n@@ -86,12 +86,12 @@ module.exports.defaultLoaders = defaultLoaders;\n \n /**\n  * @param {string} name\n- * @param {import('./index.d.ts').Options | import('./index.d.ts').OptionsSync} options\n+ * @param {import('./index').Options | import('./index').OptionsSync} options\n  * @param {boolean} sync\n- * @returns {Required<import('./index.d.ts').Options | import('./index.d.ts').OptionsSync>}\n+ * @returns {Required<import('./index').Options | import('./index').OptionsSync>}\n  */\n function getOptions(name, options, sync) {\n-    /** @type {Required<import('./index.d.ts').Options>} */\n+    /** @type {Required<import('./index').Options>} */\n     const conf = {\n         stopDir: os.homedir(),\n         searchPlaces: getDefaultSearchPlaces(name, sync),\n@@ -138,7 +138,7 @@ function validateFilePath(filepath) {\n     if (!filepath) throw new Error('load must pass a non-empty string');\n }\n \n-/** @type {(loader: import('./index.d.ts').Loader, ext: string) => void} */\n+/** @type {(loader: import('./index').Loader, ext: string) => void} */\n function validateLoader(loader, ext) {\n     if (!loader) throw new Error(`No loader specified for extension \"${ext}\"`);\n     if (typeof loader !== 'function')\n@@ -151,7 +151,7 @@ const makeEmplace = enableCache => (c, filepath, res) => {\n     return res;\n };\n \n-/** @type {import('./index.d.ts').lilconfig} */\n+/** @type {import('./index').lilconfig} */\n module.exports.lilconfig = function lilconfig(name, options) {\n     const {\n         ignoreEmptySearchPlaces,\n@@ -168,7 +168,7 @@ module.exports.lilconfig = function lilconfig(name, options) {\n \n     return {\n         async search(searchFrom = process.cwd()) {\n-            /** @type {import('./index.d.ts').LilconfigResult} */\n+            /** @type {import('./index').LilconfigResult} */\n             const result = {\n                 config: null,\n                 filepath: '',\n@@ -264,7 +264,7 @@ module.exports.lilconfig = function lilconfig(name, options) {\n                     }),\n                 );\n             }\n-            /** @type {import('./index.d.ts').LilconfigResult} */\n+            /** @type {import('./index').LilconfigResult} */\n             const result = {\n                 config: null,\n                 filepath: absPath,\n@@ -310,7 +310,7 @@ module.exports.lilconfig = function lilconfig(name, options) {\n     };\n };\n \n-/** @type {import('./index.d.ts').lilconfigSync} */\n+/** @type {import('./index').lilconfigSync} */\n module.exports.lilconfigSync = function lilconfigSync(name, options) {\n     const {\n         ignoreEmptySearchPlaces,\n@@ -327,7 +327,7 @@ module.exports.lilconfigSync = function lilconfigSync(name, options) {\n \n     return {\n         search(searchFrom = process.cwd()) {\n-            /** @type {import('./index.d.ts').LilconfigResult} */\n+            /** @type {import('./index').LilconfigResult} */\n             const result = {\n                 config: null,\n                 filepath: '',"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "77d7186c37a3838c85d03e126172f82a8a474ece",
            "date": "2024-12-03T11:48:49Z",
            "author_login": "antonk52"
          },
          {
            "sha": "672f1daacbf70cc944588baf45147f1c2465bd68",
            "date": "2024-12-03T11:33:53Z",
            "author_login": "antonk52"
          },
          {
            "sha": "0158ebec1b2335b0db2d273f84c97cf43883523b",
            "date": "2024-12-03T11:26:55Z",
            "author_login": "antonk52"
          },
          {
            "sha": "8eb98d86616fabed97760c10febb350b0a9ee2ab",
            "date": "2024-12-03T11:26:34Z",
            "author_login": "antonk52"
          },
          {
            "sha": "bb876c32b424c32f08c947a86c999d1d74a1dd8f",
            "date": "2024-12-03T11:25:41Z",
            "author_login": "antonk52"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "Versions of the package lilconfig from 3.1.0 and before 3.1.1 are vulnerable to Arbitrary Code Execution due to the insecure usage of eval in the dynamicImport function. An attacker can exploit this vulnerability by passing a malicious input through the defaultLoaders function.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-31T05:15:04.733",
    "last_modified": "2024-11-01T12:57:03.417",
    "fix_date": "2024-02-17T14:54:52Z"
  },
  "references": [
    {
      "url": "https://github.com/antonk52/lilconfig/commit/2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/antonk52/lilconfig/pull/48",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/antonk52/lilconfig/releases/tag/v3.1.1",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://security.snyk.io/vuln/SNYK-JS-LILCONFIG-6263789",
      "source": "report@snyk.io",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:27.115950",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lilconfig",
    "owner": "antonk52",
    "created_at": "2020-02-07T16:07:11Z",
    "updated_at": "2024-12-12T14:40:50Z",
    "pushed_at": "2024-12-03T11:49:23Z",
    "size": 609,
    "stars": 159,
    "forks": 10,
    "open_issues": 3,
    "watchers": 159,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 72260,
      "CoffeeScript": 46,
      "TypeScript": 39
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:36:39.005326"
  }
}