{
  "cve_id": "CVE-2024-21574",
  "github_data": {
    "repository": "ltdrdata/ComfyUI-Manager",
    "fix_commit": "ffc095a3e5acc1c404773a0510e6d055a6a72b0e",
    "related_commits": [
      "ffc095a3e5acc1c404773a0510e6d055a6a72b0e"
    ],
    "patch_url": "https://github.com/ltdrdata/ComfyUI-Manager/commit/ffc095a3e5acc1c404773a0510e6d055a6a72b0e.patch",
    "fix_commit_details": {
      "sha": "ffc095a3e5acc1c404773a0510e6d055a6a72b0e",
      "commit_date": "2024-09-23T16:59:15Z",
      "author": {
        "login": "ltdrdata",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "robust validation",
        "length": 17,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 21,
        "additions": 16,
        "deletions": 5
      },
      "files": [
        {
          "filename": "glob/manager_core.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -23,7 +23,7 @@\n import cm_global\n from manager_util import *\n \n-version = [2, 51]\n+version = [2, 51, 1]\n version_str = f\"V{version[0]}.{version[1]}\" + (f'.{version[2]}' if len(version) > 2 else '')\n \n "
        },
        {
          "filename": "glob/manager_server.py",
          "status": "modified",
          "additions": 14,
          "deletions": 3,
          "patch": "@@ -47,7 +47,9 @@ def handle_stream(stream, prefix):\n \n \n def is_allowed_security_level(level):\n-    if level == 'high':\n+    if level == 'block':\n+        return False\n+    elif level == 'high':\n         if is_local_mode:\n             return core.get_config()['security_level'].lower() in ['weak', 'normal-']\n         else:\n@@ -58,7 +60,7 @@ def is_allowed_security_level(level):\n         return True\n \n \n-async def get_risky_level(files):\n+async def get_risky_level(files, pip_packages):\n     json_data1 = await core.get_data_by_mode('local', 'custom-node-list.json')\n     json_data2 = await core.get_data_by_mode('cache', 'custom-node-list.json', channel_url='https://github.com/ltdrdata/ComfyUI-Manager/raw/main')\n \n@@ -70,6 +72,15 @@ async def get_risky_level(files):\n         if x not in all_urls:\n             return \"high\"\n \n+    all_pip_packages = set()\n+    for x in json_data1['custom_nodes'] + json_data2['custom_nodes']:\n+        if \"pip\" in x:\n+            all_pip_packages.update(x['pip'])\n+\n+    for p in pip_packages:\n+        if p not in all_pip_packages:\n+            return \"block\"\n+\n     return \"middle\"\n \n \n@@ -791,7 +802,7 @@ async def install_custom_node(request):\n \n     json_data = await request.json()\n \n-    risky_level = await get_risky_level(json_data['files'])\n+    risky_level = await get_risky_level(json_data['files'], json_data.get('pip', []))\n     if not is_allowed_security_level(risky_level):\n         print(SECURITY_MESSAGE_GENERAL)\n         return web.Response(status=404)"
        },
        {
          "filename": "pyproject.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n [project]\n name = \"comfyui-manager\"\n description = \"ComfyUI-Manager provides features to install and manage custom nodes for ComfyUI, as well as various functionalities to assist with ComfyUI.\"\n-version = \"2.51\"\n+version = \"2.51.1\"\n license = { file = \"LICENSE.txt\" }\n dependencies = [\"GitPython\", \"PyGithub\", \"matrix-client==0.4.0\", \"transformers\", \"huggingface-hub>0.20\", \"typer\", \"rich\", \"typing-extensions\"]\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5e5867528d1e404f8d30f9006494227ae4f05601",
            "date": "2025-01-14T03:19:46Z",
            "author_login": "ltdrdata"
          },
          {
            "sha": "05623b0e1397858a0bb824f0e86e2f9edbccb3dd",
            "date": "2025-01-13T15:36:14Z",
            "author_login": "ltdrdata"
          },
          {
            "sha": "12602da16ce856c7f09abe3d0567e349d507cc57",
            "date": "2025-01-13T15:07:52Z",
            "author_login": "ciga2011"
          },
          {
            "sha": "2b6dee99496ee2bb4e4daedd843086b2b36a58a3",
            "date": "2025-01-13T15:07:10Z",
            "author_login": "IDGallagher"
          },
          {
            "sha": "11fa305508d1a8bfc43c221bb86294179bdbb82b",
            "date": "2025-01-13T15:05:55Z",
            "author_login": "l-comm"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 10.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-94",
    "description": "The issue stems from a missing validation of the pip field in a POST request sent to the /customnode/install endpoint used to install custom nodes which is added to the server by the extension. This allows an attacker to craft a request that triggers a pip install on a user controlled package or URL, resulting in remote code execution (RCE) on the server.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-12T09:15:06.037",
    "last_modified": "2024-12-12T09:15:06.037",
    "fix_date": "2024-09-23T16:59:15Z"
  },
  "references": [
    {
      "url": "https://github.com/ltdrdata/ComfyUI-Manager/blob/ffc095a3e5acc1c404773a0510e6d055a6a72b0e/glob/manager_server.py#L798",
      "source": "report@snyk.io",
      "tags": []
    },
    {
      "url": "https://github.com/ltdrdata/ComfyUI-Manager/commit/ffc095a3e5acc1c404773a0510e6d055a6a72b0e",
      "source": "report@snyk.io",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.132984",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ComfyUI-Manager",
    "owner": "ltdrdata",
    "created_at": "2023-04-23T14:36:09Z",
    "updated_at": "2025-01-14T17:36:41Z",
    "pushed_at": "2025-01-14T03:20:22Z",
    "size": 20905,
    "stars": 7922,
    "forks": 1047,
    "open_issues": 124,
    "watchers": 7922,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 314059,
      "JavaScript": 254942,
      "Jupyter Notebook": 18622,
      "Shell": 2452,
      "Batchfile": 1967
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T20:15:01.485556"
  }
}