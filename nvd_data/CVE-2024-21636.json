{
  "cve_id": "CVE-2024-21636",
  "github_data": {
    "repository": "ViewComponent/view_component",
    "fix_commit": "0d26944a8d2730ea40e60eae23d70684483e5017",
    "related_commits": [
      "0d26944a8d2730ea40e60eae23d70684483e5017",
      "c43d8bafa7117cbce479669a423ab266de150697",
      "0d26944a8d2730ea40e60eae23d70684483e5017",
      "c43d8bafa7117cbce479669a423ab266de150697"
    ],
    "patch_url": "https://github.com/ViewComponent/view_component/commit/0d26944a8d2730ea40e60eae23d70684483e5017.patch",
    "fix_commit_details": {
      "sha": "0d26944a8d2730ea40e60eae23d70684483e5017",
      "commit_date": "2024-01-04T19:25:54Z",
      "author": {
        "login": "camertron",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Ensure HTML output safety (#1950)",
        "length": 33,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 138,
        "additions": 121,
        "deletions": 17
      },
      "files": [
        {
          "filename": ".github/workflows/ci.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -89,7 +89,7 @@ jobs:\n       uses: actions/upload-artifact@v3.1.3\n       if: always()\n       with:\n-        name: simplecov-resultset-rails${{matrix.rails_version}}-ruby${{matrix.ruby_version}}\n+        name: simplecov-resultset-rails${{matrix.rails_version}}-ruby${{matrix.ruby_version}}-${{matrix.mode}}\n         path: coverage\n   primer_view_components_compatibility:\n     name: Test compatibility with Primer ViewComponents (main)"
        },
        {
          "filename": ".rubocop.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1,3 +1,4 @@\n+ruby_version: 2.5\n require:\n   - standard\n   - \"rubocop-md\""
        },
        {
          "filename": "docs/CHANGELOG.md",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -38,6 +38,10 @@ nav_order: 5\n \n     *Mitchell Henke*\n \n+* Ensure HTML output safety.\n+\n+    *Cameron Dutro*\n+\n ## 3.8.0\n \n * Use correct value for the `config.action_dispatch.show_exceptions` config option for edge Rails."
        },
        {
          "filename": "lib/view_component/base.rb",
          "status": "modified",
          "additions": 35,
          "deletions": 3,
          "patch": "@@ -106,9 +106,9 @@ def render_in(view_context, &block)\n       if render?\n         # Avoid allocating new string when output_postamble is blank\n         if output_postamble.blank?\n-          render_template_for(@__vc_variant).to_s\n+          safe_render_template_for(@__vc_variant).to_s\n         else\n-          render_template_for(@__vc_variant).to_s + output_postamble\n+          safe_render_template_for(@__vc_variant).to_s + safe_output_postamble\n         end\n       else\n         \"\"\n@@ -160,7 +160,7 @@ def render_parent_to_string\n     #\n     # @return [String]\n     def output_postamble\n-      \"\"\n+      @@default_output_postamble ||= \"\".html_safe\n     end\n \n     # Called before rendering the component. Override to perform operations that\n@@ -307,6 +307,38 @@ def content_evaluated?\n       defined?(@__vc_content_evaluated) && @__vc_content_evaluated\n     end\n \n+    def maybe_escape_html(text)\n+      return text if request && !request.format.html?\n+      return text if text.nil? || text.empty?\n+\n+      if text.html_safe?\n+        text\n+      else\n+        yield\n+        html_escape(text)\n+      end\n+    end\n+\n+    def safe_render_template_for(variant)\n+      if compiler.renders_template_for_variant?(variant)\n+        render_template_for(variant)\n+      else\n+        maybe_escape_html(render_template_for(variant)) do\n+          Kernel.warn(\"WARNING: The #{self.class} component rendered HTML-unsafe output. The output will be automatically escaped, but you may want to investigate.\")\n+        end\n+      end\n+    end\n+\n+    def safe_output_postamble\n+      maybe_escape_html(output_postamble) do\n+        Kernel.warn(\"WARNING: The #{self.class} component was provided an HTML-unsafe postamble. The postamble will be automatically escaped, but you may want to investigate.\")\n+      end\n+    end\n+\n+    def compiler\n+      @compiler ||= self.class.compiler\n+    end\n+\n     # Set the controller used for testing components:\n     #\n     # ```ruby"
        },
        {
          "filename": "lib/view_component/compiler.rb",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -16,6 +16,7 @@ class Compiler\n     def initialize(component_class)\n       @component_class = component_class\n       @redefinition_lock = Mutex.new\n+      @variants_rendering_templates = Set.new\n     end\n \n     def compiled?\n@@ -68,6 +69,7 @@ def render_template_for(variant = nil)\n       else\n         templates.each do |template|\n           method_name = call_method_name(template[:variant])\n+          @variants_rendering_templates << template[:variant]\n \n           redefinition_lock.synchronize do\n             component_class.silence_redefinition_of_method(method_name)\n@@ -89,6 +91,10 @@ def #{method_name}\n       CompileCache.register(component_class)\n     end\n \n+    def renders_template_for_variant?(variant)\n+      @variants_rendering_templates.include?(variant)\n+    end\n+\n     private\n \n     attr_reader :component_class, :redefinition_lock"
        },
        {
          "filename": "lib/view_component/test_helpers.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -178,13 +178,14 @@ def with_controller_class(klass)\n     # @param full_path [String] The path to set for the current request.\n     # @param host [String] The host to set for the current request.\n     # @param method [String] The request method to set for the current request.\n-    def with_request_url(full_path, host: nil, method: nil)\n+    def with_request_url(full_path, host: nil, method: nil, format: :html)\n       old_request_host = vc_test_request.host\n       old_request_method = vc_test_request.request_method\n       old_request_path_info = vc_test_request.path_info\n       old_request_path_parameters = vc_test_request.path_parameters\n       old_request_query_parameters = vc_test_request.query_parameters\n       old_request_query_string = vc_test_request.query_string\n+      old_request_format = vc_test_request.format.symbol\n       old_controller = defined?(@vc_test_controller) && @vc_test_controller\n \n       path, query = full_path.split(\"?\", 2)\n@@ -197,6 +198,7 @@ def with_request_url(full_path, host: nil, method: nil)\n       vc_test_request.set_header(\"action_dispatch.request.query_parameters\",\n         Rack::Utils.parse_nested_query(query).with_indifferent_access)\n       vc_test_request.set_header(Rack::QUERY_STRING, query)\n+      vc_test_request.format = format\n       yield\n     ensure\n       vc_test_request.host = old_request_host\n@@ -205,6 +207,7 @@ def with_request_url(full_path, host: nil, method: nil)\n       vc_test_request.path_parameters = old_request_path_parameters\n       vc_test_request.set_header(\"action_dispatch.request.query_parameters\", old_request_query_parameters)\n       vc_test_request.set_header(Rack::QUERY_STRING, old_request_query_string)\n+      vc_test_request.format = old_request_format\n       @vc_test_controller = old_controller\n     end\n "
        },
        {
          "filename": "test/sandbox/app/components/after_render_component.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -2,10 +2,10 @@\n \n class AfterRenderComponent < ViewComponent::Base\n   def call\n-    \"Hello, \"\n+    \"Hello, \".html_safe\n   end\n \n   def output_postamble\n-    \"World!\"\n+    \"World!\".html_safe\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/content_predicate_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@ def call\n     if content?\n       content\n     else\n-      \"Default\"\n+      \"Default\".html_safe\n     end\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/custom_test_controller_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,6 +2,6 @@\n \n class CustomTestControllerComponent < ViewComponent::Base\n   def call\n-    helpers.foo\n+    html_escape(helpers.foo)\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/inherited_from_uncompilable_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,6 +2,6 @@\n \n class InheritedFromUncompilableComponent < UncompilableComponent\n   def call\n-    \"<div>hello world</div>\"\n+    \"<div>hello world</div>\".html_safe\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/inline_render_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,6 +6,6 @@ def initialize(items:)\n   end\n \n   def call\n-    @items.map { |c| render(c) }.join\n+    @items.map { |c| render(c) }.join.html_safe\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/message_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,6 +6,6 @@ def initialize(message:)\n   end\n \n   def call\n-    @message\n+    html_escape(@message)\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/render_check_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,6 +6,6 @@ def render?\n   end\n \n   def call\n-    \"Rendered\"\n+    \"Rendered\".html_safe\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/components/unsafe_component.rb",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+# frozen_string_literal: true\n+\n+class UnsafeComponent < ViewComponent::Base\n+  def call\n+    user_input = \"<script>alert('hello!')</script>\"\n+\n+    \"<div>hello #{user_input}</div>\"\n+  end\n+end"
        },
        {
          "filename": "test/sandbox/app/components/unsafe_postamble_component.rb",
          "status": "added",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -0,0 +1,11 @@\n+# frozen_string_literal: true\n+\n+class UnsafePostambleComponent < ViewComponent::Base\n+  def call\n+    \"<div>some content</div>\".html_safe\n+  end\n+\n+  def output_postamble\n+    \"<script>alert('hello!')</script>\"\n+  end\n+end"
        },
        {
          "filename": "test/sandbox/app/components/variant_ivar_component.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,6 +6,6 @@ def initialize(variant:)\n   end\n \n   def call\n-    @variant.to_s\n+    html_escape(@variant.to_s)\n   end\n end"
        },
        {
          "filename": "test/sandbox/app/controllers/integration_examples_controller.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -59,4 +59,12 @@ def inherited_sidecar\n   def inherited_from_uncompilable_component\n     render(InheritedFromUncompilableComponent.new)\n   end\n+\n+  def unsafe_component\n+    render(UnsafeComponent.new)\n+  end\n+\n+  def unsafe_postamble_component\n+    render(UnsafePostambleComponent.new)\n+  end\n end"
        },
        {
          "filename": "test/sandbox/config/routes.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -29,6 +29,8 @@\n   get :cached_partial, to: \"integration_examples#cached_partial\"\n   get :inherited_sidecar, to: \"integration_examples#inherited_sidecar\"\n   get :inherited_from_uncompilable_component, to: \"integration_examples#inherited_from_uncompilable_component\"\n+  get :unsafe_component, to: \"integration_examples#unsafe_component\"\n+  get :unsafe_postamble_component, to: \"integration_examples#unsafe_postamble_component\"\n   post :create, to: \"integration_examples#create\"\n \n   constraints(lambda { |request| request.env[\"warden\"].authenticate! }) do"
        },
        {
          "filename": "test/sandbox/test/collection_test.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -12,7 +12,7 @@ def initialize(**attributes)\n       end\n \n       def call\n-        \"<div data-name='#{product.name}'><h1>#{product.name}</h1></div>\"\n+        \"<div data-name='#{product.name}'><h1>#{product.name}</h1></div>\".html_safe\n       end\n     end\n "
        },
        {
          "filename": "test/sandbox/test/integration_test.rb",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -723,4 +723,22 @@ def test_path_traversal_raises_error\n       get \"/_system_test_entrypoint?file=#{path}\"\n     end\n   end\n+\n+  def test_unsafe_component\n+    warnings = capture_warnings { get \"/unsafe_component\" }\n+    assert_select(\"script\", false)\n+    assert(\n+      warnings.any? { |warning| warning.include?(\"component rendered HTML-unsafe output\") },\n+      \"Rendering UnsafeComponent did not emit an HTML safety warning\"\n+    )\n+  end\n+\n+  def test_unsafe_postamble_component\n+    warnings = capture_warnings { get \"/unsafe_postamble_component\" }\n+    assert_select(\"script\", false)\n+    assert(\n+      warnings.any? { |warning| warning.include?(\"component was provided an HTML-unsafe postamble\") },\n+      \"Rendering UnsafePostambleComponent did not emit an HTML safety warning\"\n+    )\n+  end\n end"
        },
        {
          "filename": "test/sandbox/test/rendering_test.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -151,7 +151,9 @@ def test_renders_haml_template\n   end\n \n   def test_render_jbuilder_template\n-    render_inline(JbuilderComponent.new(message: \"bar\")) { \"foo\" }\n+    with_request_url(\"/\", format: :json) do\n+      render_inline(JbuilderComponent.new(message: \"bar\")) { \"foo\" }\n+    end\n \n     assert_text(\"foo\")\n     assert_text(\"bar\")\n@@ -1084,7 +1086,7 @@ def test_content_predicate_false\n   end\n \n   def test_content_predicate_true\n-    render_inline(ContentPredicateComponent.new.with_content(\"foo\"))\n+    render_inline(ContentPredicateComponent.new.with_content(\"foo\".html_safe))\n \n     assert_text(\"foo\")\n   end"
        },
        {
          "filename": "test/test_helper.rb",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -179,3 +179,11 @@ def with_compiler_mode(mode)\n ensure\n   ViewComponent::Compiler.mode = previous_mode\n end\n+\n+def capture_warnings(&block)\n+  [].tap do |warnings|\n+    Kernel.stub(:warn, ->(msg) { warnings << msg }) do\n+      block.call\n+    end\n+  end\n+end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 17,
        "unique_directories": 9,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "eba4c1424e58ceadc51d6f948c6ec8eb1b5a982e",
            "date": "2025-01-10T23:42:32Z",
            "author_login": "triskweline"
          },
          {
            "sha": "c057d4b8f7046c3c96e52b5598a5eec92cd4585c",
            "date": "2025-01-10T23:14:16Z",
            "author_login": "joelhawksley"
          },
          {
            "sha": "3eb9b242475345e64f2ab84cb3b7e3e90ce91b8c",
            "date": "2025-01-10T21:49:25Z",
            "author_login": "joelhawksley"
          },
          {
            "sha": "4d455f890ea267bc4b6885eaf5f4c62988cd95e3",
            "date": "2025-01-06T21:59:46Z",
            "author_login": "joelhawksley"
          },
          {
            "sha": "ad04301d223672362aeec73c23a46df4df102963",
            "date": "2025-01-06T19:26:25Z",
            "author_login": "reeganviljoen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "view_component is a framework for building reusable, testable, and encapsulated view components in Ruby on Rails. Versions prior to 3.9.0 and 2.83.0 have a cross-site scripting vulnerability that has the potential to impact anyone rendering a component directly from a controller with the view_component gem. Note that only components that define a `#call` method (i.e. instead of using a sidecar template) are affected. The return value of the `#call` method is not sanitized and can include user-defined content. In addition, the return value of the `#output_postamble` methodis not sanitized, which can also lead to cross-site scripting issues. Versions 3.9.0 and 2.83.0 have been released and fully mitigate both the `#call` and the `#output_postamble` vulnerabilities. As a workaround, sanitize the return value of `#call`.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-04T20:15:25.300",
    "last_modified": "2024-11-21T08:54:46.410",
    "fix_date": "2024-01-04T19:25:54Z"
  },
  "references": [
    {
      "url": "https://github.com/ViewComponent/view_component/commit/0d26944a8d2730ea40e60eae23d70684483e5017",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/commit/c43d8bafa7117cbce479669a423ab266de150697",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/pull/1950",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/pull/1962",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/security/advisories/GHSA-wf2x-8w6j-qw37",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/commit/0d26944a8d2730ea40e60eae23d70684483e5017",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/commit/c43d8bafa7117cbce479669a423ab266de150697",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/pull/1950",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/pull/1962",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/ViewComponent/view_component/security/advisories/GHSA-wf2x-8w6j-qw37",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:06:44.135806",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "view_component",
    "owner": "ViewComponent",
    "created_at": "2019-08-02T22:02:20Z",
    "updated_at": "2025-01-13T03:35:29Z",
    "pushed_at": "2025-01-10T23:42:32Z",
    "size": 4122,
    "stars": 3348,
    "forks": 442,
    "open_issues": 56,
    "watchers": 3348,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 355053,
      "HTML": 18362,
      "Shell": 5210,
      "CSS": 998,
      "Dockerfile": 732,
      "Haml": 592,
      "Slim": 431,
      "JavaScript": 73
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:20:03.888799"
  }
}