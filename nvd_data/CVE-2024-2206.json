{
  "cve_id": "CVE-2024-2206",
  "github_data": {
    "repository": "gradio-app/gradio",
    "fix_commit": "49d9c48537aa706bf72628e3640389470138bdc6",
    "related_commits": [
      "49d9c48537aa706bf72628e3640389470138bdc6",
      "49d9c48537aa706bf72628e3640389470138bdc6"
    ],
    "patch_url": "https://github.com/gradio-app/gradio/commit/49d9c48537aa706bf72628e3640389470138bdc6.patch",
    "fix_commit_details": {
      "sha": "49d9c48537aa706bf72628e3640389470138bdc6",
      "commit_date": "2024-02-07T22:39:33Z",
      "author": {
        "login": "abidlabs",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "[WIP] Refactor file normalization to be in the backend and remove it from the frontend of each component (#7183)",
        "length": 815,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 494,
        "additions": 211,
        "deletions": 283
      },
      "files": [
        {
          "filename": ".changeset/strong-chefs-study.md",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+---\n+\"@gradio/annotatedimage\": minor\n+\"@gradio/app\": minor\n+\"@gradio/audio\": minor\n+\"@gradio/chatbot\": minor\n+\"@gradio/client\": minor\n+\"@gradio/file\": minor\n+\"@gradio/gallery\": minor\n+\"@gradio/image\": minor\n+\"@gradio/imageeditor\": minor\n+\"@gradio/model3d\": minor\n+\"@gradio/simpleimage\": minor\n+\"@gradio/video\": minor\n+\"gradio\": minor\n+\"gradio_client\": minor\n+---\n+\n+feat:[WIP] Refactor file normalization to be in the backend and remove it from the frontend of each component"
        },
        {
          "filename": "client/js/src/client.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 60,
          "patch": "@@ -28,7 +28,7 @@ import type {\n \tSpaceStatusCallback\n } from \"./types.js\";\n \n-import { FileData, normalise_file } from \"./upload\";\n+import { FileData } from \"./upload\";\n \n import type { Config } from \"./types.js\";\n \n@@ -166,7 +166,6 @@ interface Client {\n \t\toptions: {\n \t\t\thf_token?: `hf_${string}`;\n \t\t\tstatus_callback?: SpaceStatusCallback;\n-\t\t\tnormalise_files?: boolean;\n \t\t}\n \t) => Promise<client_return>;\n \thandle_blob: (\n@@ -259,19 +258,17 @@ export function api_factory(\n \t\toptions: {\n \t\t\thf_token?: `hf_${string}`;\n \t\t\tstatus_callback?: SpaceStatusCallback;\n-\t\t\tnormalise_files?: boolean;\n-\t\t} = { normalise_files: true }\n+\t\t} = {}\n \t): Promise<client_return> {\n \t\treturn new Promise(async (res) => {\n-\t\t\tconst { status_callback, hf_token, normalise_files } = options;\n+\t\t\tconst { status_callback, hf_token } = options;\n \t\t\tconst return_obj = {\n \t\t\t\tpredict,\n \t\t\t\tsubmit,\n \t\t\t\tview_api,\n \t\t\t\tcomponent_server\n \t\t\t};\n \n-\t\t\tconst transform_files = normalise_files ?? true;\n \t\t\tif (\n \t\t\t\t(typeof window === \"undefined\" || !(\"WebSocket\" in window)) &&\n \t\t\t\t!global.Websocket\n@@ -493,14 +490,7 @@ export function api_factory(\n \t\t\t\t\t\t\t\thf_token\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t\t\t.then(([output, status_code]) => {\n-\t\t\t\t\t\t\t\t\tconst data = transform_files\n-\t\t\t\t\t\t\t\t\t\t? transform_output(\n-\t\t\t\t\t\t\t\t\t\t\t\toutput.data,\n-\t\t\t\t\t\t\t\t\t\t\t\tapi_info,\n-\t\t\t\t\t\t\t\t\t\t\t\tconfig.root,\n-\t\t\t\t\t\t\t\t\t\t\t\tconfig.root_url\n-\t\t\t\t\t\t\t\t\t\t  )\n-\t\t\t\t\t\t\t\t\t\t: output.data;\n+\t\t\t\t\t\t\t\t\tconst data = output.data;\n \t\t\t\t\t\t\t\t\tif (status_code == 200) {\n \t\t\t\t\t\t\t\t\t\tfire_event({\n \t\t\t\t\t\t\t\t\t\t\ttype: \"data\",\n@@ -628,14 +618,7 @@ export function api_factory(\n \t\t\t\t\t\t\t\t\tfire_event({\n \t\t\t\t\t\t\t\t\t\ttype: \"data\",\n \t\t\t\t\t\t\t\t\t\ttime: new Date(),\n-\t\t\t\t\t\t\t\t\t\tdata: transform_files\n-\t\t\t\t\t\t\t\t\t\t\t? transform_output(\n-\t\t\t\t\t\t\t\t\t\t\t\t\tdata.data,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tapi_info,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root_url\n-\t\t\t\t\t\t\t\t\t\t\t  )\n-\t\t\t\t\t\t\t\t\t\t\t: data.data,\n+\t\t\t\t\t\t\t\t\t\tdata: data.data,\n \t\t\t\t\t\t\t\t\t\tendpoint: _endpoint,\n \t\t\t\t\t\t\t\t\t\tfn_index\n \t\t\t\t\t\t\t\t\t});\n@@ -750,14 +733,7 @@ export function api_factory(\n \t\t\t\t\t\t\t\t\tfire_event({\n \t\t\t\t\t\t\t\t\t\ttype: \"data\",\n \t\t\t\t\t\t\t\t\t\ttime: new Date(),\n-\t\t\t\t\t\t\t\t\t\tdata: transform_files\n-\t\t\t\t\t\t\t\t\t\t\t? transform_output(\n-\t\t\t\t\t\t\t\t\t\t\t\t\tdata.data,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tapi_info,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root,\n-\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root_url\n-\t\t\t\t\t\t\t\t\t\t\t  )\n-\t\t\t\t\t\t\t\t\t\t\t: data.data,\n+\t\t\t\t\t\t\t\t\t\tdata: data.data,\n \t\t\t\t\t\t\t\t\t\tendpoint: _endpoint,\n \t\t\t\t\t\t\t\t\t\tfn_index\n \t\t\t\t\t\t\t\t\t});\n@@ -878,14 +854,7 @@ export function api_factory(\n \t\t\t\t\t\t\t\t\t\t\t\tfire_event({\n \t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"data\",\n \t\t\t\t\t\t\t\t\t\t\t\t\ttime: new Date(),\n-\t\t\t\t\t\t\t\t\t\t\t\t\tdata: transform_files\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t? transform_output(\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.data,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapi_info,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root,\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfig.root_url\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  )\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t: data.data,\n+\t\t\t\t\t\t\t\t\t\t\t\t\tdata: data.data,\n \t\t\t\t\t\t\t\t\t\t\t\t\tendpoint: _endpoint,\n \t\t\t\t\t\t\t\t\t\t\t\t\tfn_index\n \t\t\t\t\t\t\t\t\t\t\t\t});\n@@ -1244,28 +1213,6 @@ export const { post_data, upload_files, client, handle_blob } = api_factory(\n \t(...args) => new EventSource(...args)\n );\n \n-function transform_output(\n-\tdata: any[],\n-\tapi_info: any,\n-\troot_url: string,\n-\tremote_url?: string\n-): unknown[] {\n-\treturn data.map((d, i) => {\n-\t\tif (api_info?.returns?.[i]?.component === \"File\") {\n-\t\t\treturn normalise_file(d, root_url, remote_url);\n-\t\t} else if (api_info?.returns?.[i]?.component === \"Gallery\") {\n-\t\t\treturn d.map((img) => {\n-\t\t\t\treturn Array.isArray(img)\n-\t\t\t\t\t? [normalise_file(img[0], root_url, remote_url), img[1]]\n-\t\t\t\t\t: [normalise_file(img, root_url, remote_url), null];\n-\t\t\t});\n-\t\t} else if (typeof d === \"object\" && d.path) {\n-\t\t\treturn normalise_file(d, root_url, remote_url);\n-\t\t}\n-\t\treturn d;\n-\t});\n-}\n-\n interface ApiData {\n \tlabel: string;\n \ttype: {"
        },
        {
          "filename": "client/js/src/index.ts",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -7,7 +7,6 @@ export {\n } from \"./client.js\";\n export type { SpaceStatus } from \"./types.js\";\n export {\n-\tnormalise_file,\n \tFileData,\n \tupload,\n \tget_fetchable_url_or_file,"
        },
        {
          "filename": "client/js/src/upload.ts",
          "status": "modified",
          "additions": 6,
          "deletions": 63,
          "patch": "@@ -1,65 +1,5 @@\n import { upload_files } from \"./client\";\n \n-export function normalise_file(\n-\tfile: FileData | null,\n-\tserver_url: string,\n-\tproxy_url: string | null\n-): FileData | null;\n-\n-export function normalise_file(\n-\tfile: FileData[] | null,\n-\tserver_url: string,\n-\tproxy_url: string | null\n-): FileData[] | null;\n-\n-export function normalise_file(\n-\tfile: FileData[] | FileData | null,\n-\tserver_url: string, // root: string,\n-\tproxy_url: string | null // root_url: string | null\n-): FileData[] | FileData | null;\n-\n-export function normalise_file(\n-\tfile: FileData[] | FileData | null,\n-\tserver_url: string, // root: string,\n-\tproxy_url: string | null // root_url: string | null\n-): FileData[] | FileData | null {\n-\tif (file == null) {\n-\t\treturn null;\n-\t}\n-\n-\tif (Array.isArray(file)) {\n-\t\tconst normalized_file: (FileData | null)[] = [];\n-\n-\t\tfor (const x of file) {\n-\t\t\tif (x == null) {\n-\t\t\t\tnormalized_file.push(null);\n-\t\t\t} else {\n-\t\t\t\tnormalized_file.push(normalise_file(x, server_url, proxy_url));\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn normalized_file as FileData[];\n-\t}\n-\n-\tif (file.is_stream) {\n-\t\tif (proxy_url == null) {\n-\t\t\treturn new FileData({\n-\t\t\t\t...file,\n-\t\t\t\turl: server_url + \"/stream/\" + file.path\n-\t\t\t});\n-\t\t}\n-\t\treturn new FileData({\n-\t\t\t...file,\n-\t\t\turl: \"/proxy=\" + proxy_url + \"stream/\" + file.path\n-\t\t});\n-\t}\n-\n-\treturn new FileData({\n-\t\t...file,\n-\t\turl: get_fetchable_url_or_file(file.path, server_url, proxy_url)\n-\t});\n-}\n-\n function is_url(str: string): boolean {\n \ttry {\n \t\tconst url = new URL(str);\n@@ -103,9 +43,12 @@ export async function upload(\n \t\t\t\t} else {\n \t\t\t\t\tif (response.files) {\n \t\t\t\t\t\treturn response.files.map((f, i) => {\n-\t\t\t\t\t\t\tconst file = new FileData({ ...file_data[i], path: f });\n-\n-\t\t\t\t\t\t\treturn normalise_file(file, root, null);\n+\t\t\t\t\t\t\tconst file = new FileData({\n+\t\t\t\t\t\t\t\t...file_data[i],\n+\t\t\t\t\t\t\t\tpath: f,\n+\t\t\t\t\t\t\t\turl: root + \"/file=\" + f\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t\treturn file;\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n "
        },
        {
          "filename": "client/python/gradio_client/utils.py",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -895,7 +895,7 @@ def get_type(schema: dict):\n         raise APIInfoParseError(f\"Cannot parse type for {schema}\")\n \n \n-FILE_DATA = \"Dict(path: str, url: str | None, size: int | None, orig_name: str | None, mime_type: str | None)\"\n+FILE_DATA = \"Dict(path: str, url: str | None, size: int | None, orig_name: str | None, mime_type: str | None, is_stream: bool)\"\n \n \n def json_schema_to_python_type(schema: Any) -> str:\n@@ -1010,6 +1010,12 @@ def is_file_obj(d):\n     return isinstance(d, dict) and \"path\" in d\n \n \n+def is_file_obj_with_url(d):\n+    return (\n+        isinstance(d, dict) and \"path\" in d and \"url\" in d and isinstance(d[\"url\"], str)\n+    )\n+\n+\n SKIP_COMPONENTS = {\n     \"state\",\n     \"row\","
        },
        {
          "filename": "gradio/blocks.py",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1325,7 +1325,7 @@ def preprocess_data(\n                     if input_id in state:\n                         block = state[input_id]\n                     inputs_cached = processing_utils.move_files_to_cache(\n-                        inputs[i], block\n+                        inputs[i], block, add_urls=True\n                     )\n                     if getattr(block, \"data_model\", None) and inputs_cached is not None:\n                         if issubclass(block.data_model, GradioModel):  # type: ignore\n@@ -1454,6 +1454,7 @@ def postprocess_data(\n                     prediction_value,\n                     block,  # type: ignore\n                     postprocess=True,\n+                    add_urls=True,\n                 )\n                 output.append(outputs_cached)\n "
        },
        {
          "filename": "gradio/components/base.py",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -195,7 +195,12 @@ def __init__(\n         self.load_event_to_attach: None | tuple[Callable, float | None] = None\n         load_fn, initial_value = self.get_load_fn_and_initial_value(value)\n         initial_value = self.postprocess(initial_value)\n-        self.value = move_files_to_cache(initial_value, self, postprocess=True)  # type: ignore\n+        self.value = move_files_to_cache(\n+            initial_value,\n+            self,  # type: ignore\n+            postprocess=True,\n+            add_urls=True,\n+        )\n \n         if callable(load_fn):\n             self.attach_load_event(load_fn, every)"
        },
        {
          "filename": "gradio/components/login_button.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -88,7 +88,7 @@ def _check_login_status(self, request: Request) -> LoginButton:\n             request.request, \"session\", None\n         )\n         if session is None or \"oauth_info\" not in session:\n-            return LoginButton(value=self.value, interactive=True)\n+            return LoginButton(value=self.value, interactive=True)  # type: ignore\n         else:\n             username = session[\"oauth_info\"][\"userinfo\"][\"preferred_username\"]\n             logout_text = self.logout_value.format(username)"
        },
        {
          "filename": "gradio/data_classes.py",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -168,6 +168,7 @@ class FileData(GradioModel):\n     size: Optional[int] = None  # size in bytes\n     orig_name: Optional[str] = None  # original filename\n     mime_type: Optional[str] = None\n+    is_stream: bool = False\n \n     @property\n     def is_none(self):"
        },
        {
          "filename": "gradio/processing_utils.py",
          "status": "modified",
          "additions": 33,
          "deletions": 4,
          "patch": "@@ -236,15 +236,22 @@ def move_resource_to_block_cache(\n     return block.move_resource_to_block_cache(url_or_file_path)\n \n \n-def move_files_to_cache(data: Any, block: Component, postprocess: bool = False):\n-    \"\"\"Move files to cache and replace the file path with the cache path.\n+def move_files_to_cache(\n+    data: Any,\n+    block: Component,\n+    postprocess: bool = False,\n+    add_urls=False,\n+) -> dict:\n+    \"\"\"Move any files in `data` to cache and (optionally), adds URL prefixes (/file=...) needed to access the cached file.\n+    Also handles the case where the file is on an external Gradio app (/proxy=...).\n \n-    Runs after .postprocess(), after .process_example(), and before .preprocess().\n+    Runs after .postprocess() and before .preprocess().\n \n     Args:\n         data: The input or output data for a component. Can be a dictionary or a dataclass\n-        block: The component\n+        block: The component whose data is being processed\n         postprocess: Whether its running from postprocessing\n+        root_url: The root URL of the local server, if applicable\n     \"\"\"\n \n     def _move_to_cache(d: dict):\n@@ -259,6 +266,19 @@ def _move_to_cache(d: dict):\n             temp_file_path = move_resource_to_block_cache(payload.path, block)\n         assert temp_file_path is not None\n         payload.path = temp_file_path\n+\n+        if add_urls:\n+            url_prefix = \"/stream/\" if payload.is_stream else \"/file=\"\n+            if block.proxy_url:\n+                url = f\"/proxy={block.proxy_url}{url_prefix}{temp_file_path}\"\n+            elif client_utils.is_http_url_like(\n+                temp_file_path\n+            ) or temp_file_path.startswith(f\"{url_prefix}\"):\n+                url = temp_file_path\n+            else:\n+                url = f\"{url_prefix}{temp_file_path}\"\n+            payload.url = url\n+\n         return payload.model_dump()\n \n     if isinstance(data, (GradioRootModel, GradioModel)):\n@@ -267,6 +287,15 @@ def _move_to_cache(d: dict):\n     return client_utils.traverse(data, _move_to_cache, client_utils.is_file_obj)\n \n \n+def add_root_url(data, root_url) -> dict:\n+    def _add_root_url(file_dict: dict):\n+        if not client_utils.is_http_url_like(file_dict[\"url\"]):\n+            file_dict[\"url\"] = f'{root_url}{file_dict[\"url\"]}'\n+        return file_dict\n+\n+    return client_utils.traverse(data, _add_root_url, client_utils.is_file_obj_with_url)\n+\n+\n def resize_and_crop(img, size, crop_type=\"center\"):\n     \"\"\"\n     Resize and crop an image to fit the specified size."
        },
        {
          "filename": "gradio/route_utils.py",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n \n import hashlib\n import json\n+import shutil\n from collections import deque\n from dataclasses import dataclass as python_dataclass\n from tempfile import NamedTemporaryFile, _TemporaryFileWrapper\n@@ -545,3 +546,8 @@ async def parse(self) -> FormData:\n         if self.upload_progress is not None:\n             self.upload_progress.set_done(self.upload_id)  # type: ignore\n         return FormData(self.items)\n+\n+\n+def move_uploaded_files_to_cache(files: list[str], destinations: list[str]) -> None:\n+    for file, dest in zip(files, destinations):\n+        shutil.move(file, dest)"
        },
        {
          "filename": "gradio/routes.py",
          "status": "modified",
          "additions": 14,
          "deletions": 19,
          "patch": "@@ -17,7 +17,6 @@\n import os\n import posixpath\n import secrets\n-import shutil\n import tempfile\n import threading\n import time\n@@ -54,6 +53,7 @@\n from gradio.data_classes import ComponentServerBody, PredictBody, ResetBody\n from gradio.exceptions import Error\n from gradio.oauth import attach_oauth\n+from gradio.processing_utils import add_root_url\n from gradio.queueing import Estimation\n from gradio.route_utils import (  # noqa: F401\n     FileUploadProgress,\n@@ -63,6 +63,7 @@\n     GradioUploadFile,\n     MultiPartException,\n     Request,\n+    move_uploaded_files_to_cache,\n )\n from gradio.state_holder import StateHolder\n from gradio.utils import (\n@@ -115,12 +116,6 @@ def toorjson(value):\n \n client = httpx.AsyncClient()\n \n-\n-def move_uploaded_files_to_cache(files: list[str], destinations: list[str]) -> None:\n-    for file, dest in zip(files, destinations):\n-        shutil.move(file, dest)\n-\n-\n file_upload_statuses = FileUploadProgress()\n \n \n@@ -315,14 +310,12 @@ def login(form_data: OAuth2PasswordRequestForm = Depends()):\n         def main(request: fastapi.Request, user: str = Depends(get_current_user)):\n             mimetypes.add_type(\"application/javascript\", \".js\")\n             blocks = app.get_blocks()\n-            root_path = (\n-                request.scope.get(\"root_path\")\n-                or request.headers.get(\"X-Direct-Url\")\n-                or \"\"\n-            )\n+            root_path = route_utils.strip_url(str(request.url))\n             if app.auth is None or user is not None:\n                 config = app.get_blocks().config\n-                config[\"root\"] = route_utils.strip_url(root_path)\n+                if \"root\" not in config:\n+                    config[\"root\"] = root_path\n+                    config = add_root_url(config, root_path)\n             else:\n                 config = {\n                     \"auth_required\": True,\n@@ -359,13 +352,11 @@ def api_info():\n         @app.get(\"/config/\", dependencies=[Depends(login_check)])\n         @app.get(\"/config\", dependencies=[Depends(login_check)])\n         def get_config(request: fastapi.Request):\n-            root_path = (\n-                request.scope.get(\"root_path\")\n-                or request.headers.get(\"X-Direct-Url\")\n-                or \"\"\n-            )\n+            root_path = route_utils.strip_url(str(request.url))[:-7]\n             config = app.get_blocks().config\n-            config[\"root\"] = route_utils.strip_url(root_path)\n+            if \"root\" not in config:\n+                config[\"root\"] = route_utils.strip_url(root_path)\n+                config = add_root_url(config, root_path)\n             return config\n \n         @app.get(\"/static/{path:path}\")\n@@ -580,6 +571,8 @@ async def predict(\n                     content={\"error\": str(error) if show_error else None},\n                     status_code=500,\n                 )\n+            root_path = app.get_blocks().config.get(\"root\", \"\")\n+            output = add_root_url(output, route_utils.strip_url(root_path))\n             return output\n \n         @app.get(\"/queue/data\", dependencies=[Depends(login_check)])\n@@ -588,6 +581,7 @@ async def queue_data(\n             session_hash: str,\n         ):\n             blocks = app.get_blocks()\n+            root_path = app.get_blocks().config.get(\"root\", \"\")\n \n             async def sse_stream(request: fastapi.Request):\n                 try:\n@@ -633,6 +627,7 @@ async def sse_stream(request: fastapi.Request):\n                                 \"success\": False,\n                             }\n                         if message:\n+                            add_root_url(message, route_utils.strip_url(root_path))\n                             yield f\"data: {json.dumps(message)}\\n\\n\"\n                             if message[\"msg\"] == ServerMessage.process_completed:\n                                 blocks._queue.pending_event_ids_session["
        },
        {
          "filename": "guides/05_custom-components/05_frontend.md",
          "status": "modified",
          "additions": 3,
          "deletions": 11,
          "patch": "@@ -147,32 +147,24 @@ This is the `Example.svelte` file for the code `Radio` component:\n ## Handling Files\n \n If your component deals with files, these files **should** be uploaded to the backend server. \n-The `@gradio/client` npm package provides the `upload`, `prepare_files`, and `normalise_file` utility functions to help you do this.\n+The `@gradio/client` npm package provides the `upload` and `prepare_files` utility functions to help you do this.\n \n The `prepare_files` function will convert the browser's `File` datatype to gradio's internal `FileData` type.\n You should use the `FileData` data in your component to keep track of uploaded files.\n \n The `upload` function will upload an array of `FileData` values to the server.\n \n-The `normalise_file` function will generate the correct URL for your component to fetch the file from and set it to the `data` property of the `FileData.`\n-\n-\n-Tip: Be sure you call `normalise_file` whenever your files are updated!\n-\n-\n Here's an example of loading files from an `<input>` element when its value changes.\n \n \n ```typescript\n <script lang=\"ts\">\n \n-    import { upload, prepare_files, normalise_file, type FileData } from \"@gradio/client\";\n+    import { upload, prepare_files, type FileData } from \"@gradio/client\";\n     export let root;\n     export let value;\n     let uploaded_files;\n \n-    $: value: normalise_file(uploaded_files, root)\n-\n     async function handle_upload(file_data: FileData[]): Promise<void> {\n         await tick();\n         uploaded_files = await upload(file_data, root);\n@@ -231,7 +223,7 @@ Here is how you can use them to create a user interface to upload and display PD\n \n ```typescript\n <script>\n-\timport { type FileData, normalise_file, Upload, ModifyUpload } from \"@gradio/upload\";\n+\timport { type FileData, Upload, ModifyUpload } from \"@gradio/upload\";\n \timport { Empty, UploadText, BlockLabel } from \"@gradio/atoms\";\n </script>\n "
        },
        {
          "filename": "guides/05_custom-components/07_pdf-component-example.md",
          "status": "modified",
          "additions": 0,
          "deletions": 5,
          "patch": "@@ -117,7 +117,6 @@ That's ok.\n     import { StatusTracker } from \"@gradio/statustracker\";\n     import type { LoadingStatus } from \"@gradio/statustracker\";\n     import type { FileData } from \"@gradio/client\";\n-    import { normalise_file } from \"@gradio/client\";\n     import { Upload, ModifyUpload } from \"@gradio/upload\";\n \n \texport let elem_id = \"\";\n@@ -316,10 +315,6 @@ Add the following code to `Index.svelte`:\n         });\n     }\n \n-    // Compute the url to fetch the file from the backend\n-    // whenever a new value is passed in.\n-    $: _value = normalise_file(value, root, proxy_url);\n-\n     // If the value changes, render the PDF of the currentPage\n     $: if(JSON.stringify(old_value) != JSON.stringify(_value)) {\n         if (_value){"
        },
        {
          "filename": "js/annotatedimage/Index.svelte",
          "status": "modified",
          "additions": 3,
          "deletions": 5,
          "patch": "@@ -5,7 +5,7 @@\n \timport { Image } from \"@gradio/icons\";\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \timport type { LoadingStatus } from \"@gradio/statustracker\";\n-\timport { type FileData, normalise_file } from \"@gradio/client\";\n+\timport { type FileData } from \"@gradio/client\";\n \timport { resolve_wasm_src } from \"@gradio/wasm/svelte\";\n \n \texport let elem_id = \"\";\n@@ -36,8 +36,6 @@\n \texport let container = true;\n \texport let scale: number | null = null;\n \texport let min_width: number | undefined = undefined;\n-\texport let root: string;\n-\texport let proxy_url: string;\n \tlet active: string | null = null;\n \texport let loading_status: LoadingStatus;\n \n@@ -52,9 +50,9 @@\n \t\t}\n \t\tif (value) {\n \t\t\tconst normalized_value = {\n-\t\t\t\timage: normalise_file(value.image, root, proxy_url) as FileData,\n+\t\t\t\timage: value.image as FileData,\n \t\t\t\tannotations: value.annotations.map((ann) => ({\n-\t\t\t\t\timage: normalise_file(ann.image, root, proxy_url) as FileData,\n+\t\t\t\t\timage: ann.image as FileData,\n \t\t\t\t\tlabel: ann.label\n \t\t\t\t}))\n \t\t\t};"
        },
        {
          "filename": "js/app/src/Index.svelte",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -252,8 +252,7 @@\n \t\t\t\t: host || space || src || location.origin;\n \n \t\tapp = await client(api_url, {\n-\t\t\tstatus_callback: handle_status,\n-\t\t\tnormalise_files: false\n+\t\t\tstatus_callback: handle_status\n \t\t});\n \t\tconfig = app.config;\n \t\twindow.__gradio_space__ = config.space_id;\n@@ -280,8 +279,7 @@\n \t\t\t\teventSource.onmessage = async function (event) {\n \t\t\t\t\tif (event.data === \"CHANGE\") {\n \t\t\t\t\t\tapp = await client(api_url, {\n-\t\t\t\t\t\t\tstatus_callback: handle_status,\n-\t\t\t\t\t\t\tnormalise_files: false\n+\t\t\t\t\t\t\tstatus_callback: handle_status\n \t\t\t\t\t\t});\n \n \t\t\t\t\t\tconfig = app.config;"
        },
        {
          "filename": "js/audio/Index.svelte",
          "status": "modified",
          "additions": 3,
          "deletions": 7,
          "patch": "@@ -11,7 +11,6 @@\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \timport { Block, UploadText } from \"@gradio/atoms\";\n \timport type { WaveformOptions } from \"./shared/types\";\n-\timport { normalise_file } from \"@gradio/client\";\n \n \texport let elem_id = \"\";\n \texport let elem_classes: string[] = [];\n@@ -26,7 +25,6 @@\n \texport let label: string;\n \texport let root: string;\n \texport let show_label: boolean;\n-\texport let proxy_url: null | string;\n \texport let container = true;\n \texport let scale: number | null = null;\n \texport let min_width: number | undefined = undefined;\n@@ -56,9 +54,7 @@\n \t\tshare: ShareData;\n \t}>;\n \n-\tlet old_value: null | FileData | string = null;\n-\tlet _value: null | FileData;\n-\t$: _value = normalise_file(value, root, proxy_url);\n+\tlet old_value: null | FileData = null;\n \n \tlet active_source: \"microphone\" | \"upload\";\n \n@@ -152,7 +148,7 @@\n \t\t\t{show_label}\n \t\t\t{show_download_button}\n \t\t\t{show_share_button}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{label}\n \t\t\t{waveform_settings}\n \t\t\t{waveform_options}\n@@ -185,7 +181,7 @@\n \t\t\t{label}\n \t\t\t{show_label}\n \t\t\t{show_download_button}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\ton:change={({ detail }) => (value = detail)}\n \t\t\ton:stream={({ detail }) => {\n \t\t\t\tvalue = detail;"
        },
        {
          "filename": "js/chatbot/Chatbot.test.ts",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -116,6 +116,7 @@ describe(\"Chatbot\", () => {\n \t\t\t{\n \t\t\t\tfile: {\n \t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/cheetah1.jpg\",\n+\t\t\t\t\turl: \"https://gradio-builds.s3.amazonaws.com/demo-files/cheetah1.jpg\",\n \t\t\t\t\tmime_type: \"image/jpeg\",\n \t\t\t\t\talt_text: null\n \t\t\t\t}\n@@ -146,6 +147,7 @@ describe(\"Chatbot\", () => {\n \t\t\t\t{\n \t\t\t\t\tfile: {\n \t\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/video_sample.mp4\",\n+\t\t\t\t\t\turl: \"https://gradio-builds.s3.amazonaws.com/demo-files/video_sample.mp4\",\n \t\t\t\t\t\tmime_type: \"video/mp4\",\n \t\t\t\t\t\talt_text: null\n \t\t\t\t\t}\n@@ -174,6 +176,7 @@ describe(\"Chatbot\", () => {\n \t\t\t{\n \t\t\t\tfile: {\n \t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\",\n+\t\t\t\t\turl: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\",\n \t\t\t\t\tmime_type: \"audio/wav\",\n \t\t\t\t\talt_text: null\n \t\t\t\t}\n@@ -202,6 +205,7 @@ describe(\"Chatbot\", () => {\n \t\t\t{\n \t\t\t\tfile: {\n \t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/titanic.csv\",\n+\t\t\t\t\turl: \"https://gradio-builds.s3.amazonaws.com/demo-files/titanic.csv\",\n \t\t\t\t\tmime_type: \"text/csv\",\n \t\t\t\t\talt_text: null\n \t\t\t\t}"
        },
        {
          "filename": "js/chatbot/Index.svelte",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -9,7 +9,7 @@\n \timport { Block, BlockLabel } from \"@gradio/atoms\";\n \timport type { LoadingStatus } from \"@gradio/statustracker\";\n \timport { Chat } from \"@gradio/icons\";\n-\timport { normalise_file, type FileData } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \n \texport let elem_id = \"\";\n@@ -64,7 +64,7 @@\n \t\t\treturn message;\n \t\t}\n \t\treturn {\n-\t\t\tfile: normalise_file(message?.file, root, proxy_url) as FileData,\n+\t\t\tfile: message?.file as FileData,\n \t\t\talt_text: message?.alt_text\n \t\t};\n \t}"
        },
        {
          "filename": "js/file/Index.svelte",
          "status": "modified",
          "additions": 6,
          "deletions": 8,
          "patch": "@@ -11,7 +11,7 @@\n \timport type { Gradio, SelectData } from \"@gradio/utils\";\n \timport File from \"./shared/File.svelte\";\n \timport FileUpload from \"./shared/FileUpload.svelte\";\n-\timport { normalise_file, type FileData } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport { Block, UploadText } from \"@gradio/atoms\";\n \n \timport { StatusTracker } from \"@gradio/statustracker\";\n@@ -28,7 +28,6 @@\n \texport let show_label: boolean;\n \texport let height: number | undefined = undefined;\n \n-\texport let proxy_url: null | string;\n \texport let _selectable = false;\n \texport let loading_status: LoadingStatus;\n \texport let container = true;\n@@ -43,12 +42,11 @@\n \t}>;\n \texport let file_count: string;\n \texport let file_types: string[] = [\"file\"];\n-\t$: _value = normalise_file(value, root, proxy_url);\n \n-\tlet old_value = _value;\n-\t$: if (JSON.stringify(old_value) !== JSON.stringify(_value)) {\n+\tlet old_value = value;\n+\t$: if (JSON.stringify(old_value) !== JSON.stringify(value)) {\n \t\tgradio.dispatch(\"change\");\n-\t\told_value = _value;\n+\t\told_value = value;\n \t}\n \n \tlet dragging = false;\n@@ -79,7 +77,7 @@\n \t\t<File\n \t\t\ton:select={({ detail }) => gradio.dispatch(\"select\", detail)}\n \t\t\tselectable={_selectable}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{label}\n \t\t\t{show_label}\n \t\t\t{height}\n@@ -89,7 +87,7 @@\n \t\t<FileUpload\n \t\t\t{label}\n \t\t\t{show_label}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{file_count}\n \t\t\t{file_types}\n \t\t\tselectable={_selectable}"
        },
        {
          "filename": "js/gallery/Gallery.test.ts",
          "status": "modified",
          "additions": 12,
          "deletions": 6,
          "patch": "@@ -35,8 +35,10 @@ describe(\"Gallery\", () => {\n \t\t\tvalue: [\n \t\t\t\t{\n \t\t\t\t\timage: {\n-\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n-\t\t\t\t\t}\n+\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t\t},\n+\t\t\t\t\tcaption: null\n \t\t\t\t}\n \t\t\t]\n \t\t});\n@@ -58,8 +60,10 @@ describe(\"Gallery\", () => {\n \t\t\tvalue: [\n \t\t\t\t{\n \t\t\t\t\timage: {\n-\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n-\t\t\t\t\t}\n+\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t\t},\n+\t\t\t\t\tcaption: null\n \t\t\t\t}\n \t\t\t]\n \t\t});\n@@ -69,8 +73,10 @@ describe(\"Gallery\", () => {\n \t\t\tvalue: [\n \t\t\t\t{\n \t\t\t\t\timage: {\n-\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n-\t\t\t\t\t}\n+\t\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t\t},\n+\t\t\t\t\tcaption: null\n \t\t\t\t}\n \t\t\t]\n \t\t});"
        },
        {
          "filename": "js/gallery/Index.svelte",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -16,7 +16,6 @@\n \texport let show_label: boolean;\n \texport let label: string;\n \texport let root: string;\n-\texport let proxy_url: null | string;\n \texport let elem_id = \"\";\n \texport let elem_classes: string[] = [];\n \texport let visible = true;\n@@ -91,8 +90,6 @@\n \t\t\ton:error={(e) => gradio.dispatch(\"error\", e.detail)}\n \t\t\t{label}\n \t\t\t{show_label}\n-\t\t\t{root}\n-\t\t\t{proxy_url}\n \t\t\t{columns}\n \t\t\t{rows}\n \t\t\t{height}"
        },
        {
          "filename": "js/gallery/shared/Gallery.svelte",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -8,7 +8,7 @@\n \timport { tick } from \"svelte\";\n \n \timport { Download, Image as ImageIcon } from \"@gradio/icons\";\n-\timport { normalise_file, type FileData } from \"@gradio/client\";\n+\timport { FileData } from \"@gradio/client\";\n \timport { format_gallery_for_sharing } from \"./utils\";\n \timport { IconButton } from \"@gradio/atoms\";\n \timport type { I18nFormatter } from \"@gradio/utils\";\n@@ -18,8 +18,6 @@\n \n \texport let show_label = true;\n \texport let label: string;\n-\texport let root = \"\";\n-\texport let proxy_url: null | string = null;\n \texport let value: GalleryData | null = null;\n \texport let columns: number | number[] | undefined = [2];\n \texport let rows: number | number[] | undefined = undefined;\n@@ -49,7 +47,7 @@\n \t\tvalue == null\n \t\t\t? null\n \t\t\t: value.map((data) => ({\n-\t\t\t\t\timage: normalise_file(data.image, root, proxy_url) as FileData,\n+\t\t\t\t\timage: data.image as FileData,\n \t\t\t\t\tcaption: data.caption\n \t\t\t  }));\n "
        },
        {
          "filename": "js/image/Index.svelte",
          "status": "modified",
          "additions": 9,
          "deletions": 7,
          "patch": "@@ -18,20 +18,18 @@\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \timport type { FileData } from \"@gradio/client\";\n \timport type { LoadingStatus } from \"@gradio/statustracker\";\n-\timport { normalise_file } from \"@gradio/client\";\n \n \ttype sources = \"upload\" | \"webcam\" | \"clipboard\" | null;\n \n \texport let elem_id = \"\";\n \texport let elem_classes: string[] = [];\n \texport let visible = true;\n \texport let value: null | FileData = null;\n-\t$: _value = normalise_file(value, root, proxy_url);\n+\tlet old_value: null | FileData = null;\n \texport let label: string;\n \texport let show_label: boolean;\n \texport let show_download_button: boolean;\n \texport let root: string;\n-\texport let proxy_url: null | string;\n \n \texport let height: number | undefined;\n \texport let width: number | undefined;\n@@ -64,8 +62,12 @@\n \t\tshare: ShareData;\n \t}>;\n \n-\t$: url = _value?.url;\n-\t$: url, gradio.dispatch(\"change\");\n+\t$: {\n+\t\tif (JSON.stringify(value) !== JSON.stringify(old_value)) {\n+\t\t\told_value = value;\n+\t\t\tgradio.dispatch(\"change\");\n+\t\t}\n+\t}\n \n \tlet dragging: boolean;\n \tlet active_source: sources = null;\n@@ -95,7 +97,7 @@\n \t\t\ton:select={({ detail }) => gradio.dispatch(\"select\", detail)}\n \t\t\ton:share={({ detail }) => gradio.dispatch(\"share\", detail)}\n \t\t\ton:error={({ detail }) => gradio.dispatch(\"error\", detail)}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{label}\n \t\t\t{show_label}\n \t\t\t{show_download_button}\n@@ -107,7 +109,7 @@\n {:else}\n \t<Block\n \t\t{visible}\n-\t\tvariant={_value === null ? \"dashed\" : \"solid\"}\n+\t\tvariant={value === null ? \"dashed\" : \"solid\"}\n \t\tborder_mode={dragging ? \"focus\" : \"base\"}\n \t\tpadding={false}\n \t\t{elem_id}"
        },
        {
          "filename": "js/image/shared/ImagePreview.svelte",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -9,7 +9,7 @@\n \timport { DownloadLink } from \"@gradio/wasm/svelte\";\n \n \timport { Image as ImageIcon } from \"@gradio/icons\";\n-\timport { type FileData, normalise_file } from \"@gradio/client\";\n+\timport { type FileData } from \"@gradio/client\";\n \timport type { I18nFormatter } from \"@gradio/utils\";\n \n \texport let value: null | FileData;"
        },
        {
          "filename": "js/image/shared/ImageUploader.svelte",
          "status": "modified",
          "additions": 2,
          "deletions": 4,
          "patch": "@@ -7,7 +7,7 @@\n \timport Webcam from \"./Webcam.svelte\";\n \n \timport { Upload } from \"@gradio/upload\";\n-\timport { type FileData, normalise_file } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport ClearImage from \"./ClearImage.svelte\";\n \timport { SelectSource } from \"@gradio/atoms\";\n \timport Image from \"./Image.svelte\";\n@@ -31,7 +31,7 @@\n \texport let active_source: source_type = null;\n \n \tfunction handle_upload({ detail }: CustomEvent<FileData>): void {\n-\t\tvalue = normalise_file(detail, root, null);\n+\t\tvalue = detail;\n \t\tdispatch(\"upload\");\n \t}\n \n@@ -56,8 +56,6 @@\n \t$: active_streaming = streaming && active_source === \"webcam\";\n \t$: if (uploading && !active_streaming) value = null;\n \n-\t$: value && !value.url && (value = normalise_file(value, root, null));\n-\n \tconst dispatch = createEventDispatcher<{\n \t\tchange?: never;\n \t\tstream?: never;"
        },
        {
          "filename": "js/imageeditor/Index.svelte",
          "status": "modified",
          "additions": 1,
          "deletions": 4,
          "patch": "@@ -13,7 +13,6 @@\n \timport { Block } from \"@gradio/atoms\";\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \timport type { LoadingStatus } from \"@gradio/statustracker\";\n-\timport { normalise_file } from \"@gradio/client\";\n \n \texport let elem_id = \"\";\n \texport let elem_classes: string[] = [];\n@@ -42,7 +41,6 @@\n \t\t\"clipboard\",\n \t\t\"webcam\"\n \t];\n-\texport let proxy_url: string;\n \texport let interactive: boolean;\n \n \texport let brush: Brush;\n@@ -120,7 +118,7 @@\n \t\t\ton:select={({ detail }) => gradio.dispatch(\"select\", detail)}\n \t\t\ton:share={({ detail }) => gradio.dispatch(\"share\", detail)}\n \t\t\ton:error={({ detail }) => gradio.dispatch(\"error\", detail)}\n-\t\t\tvalue={normalise_file(value?.composite || null, root, proxy_url)}\n+\t\t\tvalue={value?.composite || null}\n \t\t\t{label}\n \t\t\t{show_label}\n \t\t\t{show_download_button}\n@@ -174,7 +172,6 @@\n \t\t\ton:error\n \t\t\t{brush}\n \t\t\t{eraser}\n-\t\t\t{proxy_url}\n \t\t\tchangeable={attached_events.includes(\"change\")}\n \t\t\ti18n={gradio.i18n}\n \t\t\t{transforms}"
        },
        {
          "filename": "js/imageeditor/shared/InteractiveImageEditor.svelte",
          "status": "modified",
          "additions": 3,
          "deletions": 15,
          "patch": "@@ -14,12 +14,7 @@\n \n <script lang=\"ts\">\n \timport { type I18nFormatter } from \"@gradio/utils\";\n-\timport {\n-\t\tprepare_files,\n-\t\tupload,\n-\t\tnormalise_file,\n-\t\ttype FileData\n-\t} from \"@gradio/client\";\n+\timport { prepare_files, upload, type FileData } from \"@gradio/client\";\n \n \timport ImageEditor from \"./ImageEditor.svelte\";\n \timport Layers from \"./layers/Layers.svelte\";\n@@ -36,7 +31,6 @@\n \texport let crop_size: [number, number] | `${string}:${string}` | null = null;\n \texport let i18n: I18nFormatter;\n \texport let root: string;\n-\texport let proxy_url: string;\n \texport let label: string | undefined = undefined;\n \texport let show_label: boolean;\n \texport let changeable = false;\n@@ -136,11 +130,7 @@\n \t\t\t\t{root}\n \t\t\t\t{sources}\n \t\t\t\tbind:bg\n-\t\t\t\tbackground_file={normalise_file(\n-\t\t\t\t\tvalue?.background || null,\n-\t\t\t\t\troot,\n-\t\t\t\t\tproxy_url\n-\t\t\t\t)}\n+\t\t\t\tbackground_file={value?.background || null}\n \t\t\t></Sources>\n \t\t{/if}\n \t\t{#if transforms.includes(\"crop\")}\n@@ -161,9 +151,7 @@\n \t\t{/if}\n \t</Tools>\n \n-\t<Layers\n-\t\tlayer_files={normalise_file(value?.layers || null, root, proxy_url)}\n-\t/>\n+\t<Layers layer_files={value?.layers || null} />\n \n \t{#if !bg && !history}\n \t\t<div class=\"empty wrap\">"
        },
        {
          "filename": "js/imageeditor/shared/tools/Sources.svelte",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -12,7 +12,7 @@\n \timport { type I18nFormatter } from \"@gradio/utils\";\n \n \timport { add_bg_color, add_bg_image } from \"./sources\";\n-\timport type { FileData, normalise_file } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \n \texport let background_file: FileData | null;\n \texport let root: string;"
        },
        {
          "filename": "js/model3D/Index.svelte",
          "status": "modified",
          "additions": 3,
          "deletions": 7,
          "patch": "@@ -5,7 +5,7 @@\n </script>\n \n <script lang=\"ts\">\n-\timport { normalise_file, type FileData } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport Model3D from \"./shared/Model3D.svelte\";\n \timport Model3DUpload from \"./shared/Model3DUpload.svelte\";\n \timport { BlockLabel, Block, Empty, UploadText } from \"@gradio/atoms\";\n@@ -20,7 +20,6 @@\n \texport let visible = true;\n \texport let value: null | FileData = null;\n \texport let root: string;\n-\texport let proxy_url: null | string;\n \texport let clear_color: [number, number, number, number];\n \texport let loading_status: LoadingStatus;\n \texport let label: string;\n@@ -40,9 +39,6 @@\n \t];\n \texport let interactive: boolean;\n \n-\tlet _value: null | FileData;\n-\t$: _value = normalise_file(value, root, proxy_url);\n-\n \tlet dragging = false;\n </script>\n \n@@ -67,7 +63,7 @@\n \n \t\t{#if value}\n \t\t\t<Model3D\n-\t\t\t\tvalue={_value}\n+\t\t\t\t{value}\n \t\t\t\ti18n={gradio.i18n}\n \t\t\t\t{clear_color}\n \t\t\t\t{label}\n@@ -108,7 +104,7 @@\n \t\t\t{show_label}\n \t\t\t{root}\n \t\t\t{clear_color}\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{camera_position}\n \t\t\t{zoom_speed}\n \t\t\ton:change={({ detail }) => (value = detail)}"
        },
        {
          "filename": "js/simpleimage/Index.svelte",
          "status": "modified",
          "additions": 4,
          "deletions": 9,
          "patch": "@@ -15,14 +15,11 @@\n \timport { StatusTracker } from \"@gradio/statustracker\";\n \timport type { FileData } from \"@gradio/client\";\n \timport type { LoadingStatus } from \"@gradio/statustracker\";\n-\timport { normalise_file } from \"@gradio/client\";\n \n \texport let elem_id = \"\";\n \texport let elem_classes: string[] = [];\n \texport let visible = true;\n \texport let value: null | FileData = null;\n-\texport let root: string;\n-\texport let proxy_url: null | string;\n \texport let label: string;\n \texport let show_label: boolean;\n \texport let show_download_button: boolean;\n@@ -31,17 +28,15 @@\n \texport let min_width: number | undefined = undefined;\n \texport let loading_status: LoadingStatus;\n \texport let interactive: boolean;\n-\n-\t$: _value = normalise_file(value, root, proxy_url);\n+\texport let root: string;\n \n \texport let gradio: Gradio<{\n \t\tchange: never;\n \t\tupload: never;\n \t\tclear: never;\n \t}>;\n \n-\t$: url = _value?.url;\n-\t$: url, gradio.dispatch(\"change\");\n+\t$: value, gradio.dispatch(\"change\");\n \n \tlet dragging: boolean;\n </script>\n@@ -65,7 +60,7 @@\n \t\t\t{...loading_status}\n \t\t/>\n \t\t<ImagePreview\n-\t\t\tvalue={_value}\n+\t\t\t{value}\n \t\t\t{label}\n \t\t\t{show_label}\n \t\t\t{show_download_button}\n@@ -75,7 +70,7 @@\n {:else}\n \t<Block\n \t\t{visible}\n-\t\tvariant={_value === null ? \"dashed\" : \"solid\"}\n+\t\tvariant={value === null ? \"dashed\" : \"solid\"}\n \t\tborder_mode={dragging ? \"focus\" : \"base\"}\n \t\tpadding={false}\n \t\t{elem_id}"
        },
        {
          "filename": "js/simpleimage/shared/ImageUploader.svelte",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -4,7 +4,7 @@\n \timport { Image as ImageIcon } from \"@gradio/icons\";\n \n \timport { Upload } from \"@gradio/upload\";\n-\timport { type FileData, normalise_file } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport ClearImage from \"./ClearImage.svelte\";\n \n \texport let value: null | FileData;\n@@ -16,11 +16,10 @@\n \tlet uploading = false;\n \n \tfunction handle_upload({ detail }: CustomEvent<FileData>): void {\n-\t\tvalue = normalise_file(detail, root, null);\n+\t\tvalue = detail;\n \t\tdispatch(\"upload\");\n \t}\n \t$: if (uploading) value = null;\n-\t$: value && !value.url && (value = normalise_file(value, root, null));\n \n \tconst dispatch = createEventDispatcher<{\n \t\tchange?: never;"
        },
        {
          "filename": "js/video/Index.svelte",
          "status": "modified",
          "additions": 3,
          "deletions": 4,
          "patch": "@@ -3,7 +3,7 @@\n <script lang=\"ts\">\n \timport type { Gradio, ShareData } from \"@gradio/utils\";\n \n-\timport { normalise_file, type FileData } from \"@gradio/client\";\n+\timport type { FileData } from \"@gradio/client\";\n \timport { Block, UploadText } from \"@gradio/atoms\";\n \timport StaticVideo from \"./shared/VideoPreview.svelte\";\n \timport Video from \"./shared/InteractiveVideo.svelte\";\n@@ -24,7 +24,6 @@\n \t\t| [\"webcam\", \"upload\"]\n \t\t| [\"upload\", \"webcam\"];\n \texport let root: string;\n-\texport let proxy_url: null | string;\n \texport let show_label: boolean;\n \texport let loading_status: LoadingStatus;\n \texport let height: number | undefined;\n@@ -80,8 +79,8 @@\n \n \t$: {\n \t\tif (value != null) {\n-\t\t\t_video = normalise_file(value.video, root, proxy_url);\n-\t\t\t_subtitle = normalise_file(value.subtitles, root, proxy_url);\n+\t\t\t_video = value.video;\n+\t\t\t_subtitle = value.subtitles;\n \t\t} else {\n \t\t\t_video = null;\n \t\t\t_subtitle = null;"
        },
        {
          "filename": "js/video/Video.test.ts",
          "status": "modified",
          "additions": 36,
          "deletions": 22,
          "patch": "@@ -41,8 +41,10 @@ describe(\"Video\", () => {\n \t\t\tloading_status,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\tlabel: \"Test Label\",\n \t\t\troot: \"foo\",\n@@ -56,7 +58,7 @@ describe(\"Video\", () => {\n \t\tlet vid = getByTestId(\"Test Label-player\") as HTMLVideoElement;\n \t\tassert.equal(\n \t\t\tvid.src,\n-\t\t\t\"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n+\t\t\t\"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n \t\t);\n \t\tassert.equal(queryAllByText(\"Test Label\").length, 1);\n \t});\n@@ -67,8 +69,10 @@ describe(\"Video\", () => {\n \t\t\tloading_status,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\tlabel: \"Video Component\",\n \t\t\troot: \"foo\",\n@@ -88,8 +92,10 @@ describe(\"Video\", () => {\n \t\t\tloading_status,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\troot: \"foo\",\n \t\t\tproxy_url: null,\n@@ -102,7 +108,7 @@ describe(\"Video\", () => {\n \t\tlet vid = getByTestId(\"test-player\") as HTMLVideoElement;\n \t\tassert.equal(\n \t\t\tvid.src,\n-\t\t\t\"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n+\t\t\t\"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n \t\t);\n \t});\n \n@@ -113,8 +119,10 @@ describe(\"Video\", () => {\n \t\t\tinteractive: false,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\troot: \"foo\",\n \t\t\tproxy_url: null,\n@@ -135,8 +143,10 @@ describe(\"Video\", () => {\n \t\t\tloading_status,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\troot: \"foo\",\n \t\t\tproxy_url: null,\n@@ -158,8 +168,10 @@ describe(\"Video\", () => {\n \t\t\tinteractive: false,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\troot: \"foo\",\n \t\t\tproxy_url: null,\n@@ -189,8 +201,10 @@ describe(\"Video\", () => {\n \t\t\tinteractive: true,\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t},\n \t\t\troot: \"foo\",\n \t\t\tproxy_url: null,\n@@ -205,8 +219,10 @@ describe(\"Video\", () => {\n \t\tcomponent.$set({\n \t\t\tvalue: {\n \t\t\t\tvideo: {\n-\t\t\t\t\tpath: \"https://gradio-builds.s3.amazonaws.com/demo-files/audio_sample.wav\"\n-\t\t\t\t}\n+\t\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\t},\n+\t\t\t\tsubtitles: null\n \t\t\t}\n \t\t});\n \t\tstartButton.dispatchEvent(new Event(\"loadeddata\"));\n@@ -215,10 +231,8 @@ describe(\"Video\", () => {\n \ttest(\"renders video and download button\", async () => {\n \t\tconst data = {\n \t\t\tvideo: {\n-\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n-\t\t\t},\n-\t\t\tsubtitles: {\n-\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n+\t\t\t\tpath: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\",\n+\t\t\t\turl: \"https://raw.githubusercontent.com/gradio-app/gradio/main/gradio/demo/video_component/files/a.mp4\"\n \t\t\t}\n \t\t};\n \t\tconst results = await render(Video, {"
        },
        {
          "filename": "test/test_components.py",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -1537,6 +1537,7 @@ def test_component_functions(self):\n                 \"mime_type\": None,\n                 \"size\": None,\n                 \"url\": None,\n+                \"is_stream\": False,\n             },\n             \"subtitles\": None,\n         }\n@@ -1548,13 +1549,15 @@ def test_component_functions(self):\n                 \"mime_type\": None,\n                 \"size\": None,\n                 \"url\": None,\n+                \"is_stream\": False,\n             },\n             \"subtitles\": {\n                 \"path\": \"s1.srt\",\n                 \"mime_type\": None,\n                 \"orig_name\": None,\n                 \"size\": None,\n                 \"url\": None,\n+                \"is_stream\": False,\n             },\n         }\n         postprocessed_video[\"video\"][\"path\"] = os.path.basename(\n@@ -2251,6 +2254,7 @@ def test_postprocess(self):\n                     \"mime_type\": None,\n                     \"size\": None,\n                     \"url\": url,\n+                    \"is_stream\": False,\n                 },\n                 \"caption\": None,\n             }\n@@ -2278,6 +2282,7 @@ def test_gallery(self):\n                     \"mime_type\": None,\n                     \"size\": None,\n                     \"url\": None,\n+                    \"is_stream\": False,\n                 },\n                 \"caption\": \"foo_caption\",\n             },\n@@ -2288,6 +2293,7 @@ def test_gallery(self):\n                     \"mime_type\": None,\n                     \"size\": None,\n                     \"url\": None,\n+                    \"is_stream\": False,\n                 },\n                 \"caption\": \"bar_caption\",\n             },\n@@ -2298,6 +2304,7 @@ def test_gallery(self):\n                     \"mime_type\": None,\n                     \"size\": None,\n                     \"url\": None,\n+                    \"is_stream\": False,\n                 },\n                 \"caption\": None,\n             },\n@@ -2308,6 +2315,7 @@ def test_gallery(self):\n                     \"mime_type\": None,\n                     \"size\": None,\n                     \"url\": None,\n+                    \"is_stream\": False,\n                 },\n                 \"caption\": None,\n             },"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 23,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "43e05d72f43c9ac8dc18e4b885c9da08605b09e6",
            "date": "2025-01-14T18:43:37Z",
            "author_login": "abidlabs"
          },
          {
            "sha": "62cd4ef302cd7529d1f8842b416f9d8fcf6b5750",
            "date": "2025-01-14T15:52:06Z",
            "author_login": "hannahblair"
          },
          {
            "sha": "a91cb9c42c02b70273b4cd55ab18148a7436fe57",
            "date": "2025-01-13T19:14:27Z",
            "author_login": "amanchauhan11"
          },
          {
            "sha": "7fa9b6fc97b90a4c0d07cbf066b810247fc84724",
            "date": "2025-01-10T20:39:10Z",
            "author_login": "gradio-pr-bot"
          },
          {
            "sha": "e742dcccb376692c9ddd5a6c251080e7c5936574",
            "date": "2025-01-10T19:46:57Z",
            "author_login": "aliabid94"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-918",
    "description": "An SSRF vulnerability exists in the gradio-app/gradio due to insufficient validation of user-supplied URLs in the `/proxy` route. Attackers can exploit this vulnerability by manipulating the `self.replica_urls` set through the `X-Direct-Url` header in requests to the `/` and `/config` routes, allowing the addition of arbitrary URLs for proxying. This flaw enables unauthorized proxying of requests and potential access to internal endpoints within the Hugging Face space. The issue arises from the application's inadequate checking of safe URLs in the `build_proxy_request` function.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-03-27T01:15:46.613",
    "last_modified": "2024-11-21T09:09:15.203",
    "fix_date": "2024-02-07T22:39:33Z"
  },
  "references": [
    {
      "url": "https://github.com/gradio-app/gradio/commit/49d9c48537aa706bf72628e3640389470138bdc6",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/2286c1ed-b889-45d6-adda-7014ea06d98e",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/gradio-app/gradio/commit/49d9c48537aa706bf72628e3640389470138bdc6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/2286c1ed-b889-45d6-adda-7014ea06d98e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.908101",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gradio",
    "owner": "gradio-app",
    "created_at": "2018-12-19T08:24:04Z",
    "updated_at": "2025-01-14T14:42:12Z",
    "pushed_at": "2025-01-14T12:42:39Z",
    "size": 280474,
    "stars": 35207,
    "forks": 2655,
    "open_issues": 470,
    "watchers": 35207,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 3114195,
      "Svelte": 1181173,
      "TypeScript": 956766,
      "JavaScript": 60749,
      "CSS": 51082,
      "Jupyter Notebook": 32113,
      "HTML": 22988,
      "Batchfile": 6463,
      "Shell": 6049,
      "MDX": 1670
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T15:07:33.405924"
  }
}