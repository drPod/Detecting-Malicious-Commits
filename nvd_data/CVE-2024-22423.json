{
  "cve_id": "CVE-2024-22423",
  "github_data": {
    "repository": "yt-dlp/yt-dlp",
    "fix_commit": "de015e930747165dbb8fcd360f8775fd973b7d6e",
    "related_commits": [
      "de015e930747165dbb8fcd360f8775fd973b7d6e",
      "ff07792676f404ffff6ee61b5638c9dc1a33a37a",
      "de015e930747165dbb8fcd360f8775fd973b7d6e",
      "ff07792676f404ffff6ee61b5638c9dc1a33a37a"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "de015e930747165dbb8fcd360f8775fd973b7d6e",
      "commit_date": "2023-09-24T00:29:01Z",
      "author": {
        "login": "Grub4K",
        "type": "User",
        "stats": {
          "total_commits": 146,
          "average_weekly_commits": 0.16917728852838934,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 66
        }
      },
      "commit_message": {
        "title": "[core] Prevent RCE when using `--exec` with `%q` (CVE-2023-40581)",
        "length": 404,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 46,
        "deletions": 13
      },
      "files": [
        {
          "filename": "devscripts/changelog_override.json",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -93,5 +93,10 @@\n         \"action\": \"add\",\n         \"when\": \"c1d71d0d9f41db5e4306c86af232f5f6220a130b\",\n         \"short\": \"[priority] **The minimum *recommended* Python version has been raised to 3.8**\\nSince Python 3.7 has reached end-of-life, support for it will be dropped soon. [Read more](https://github.com/yt-dlp/yt-dlp/issues/7803)\"\n+    },\n+    {\n+        \"action\": \"add\",\n+        \"when\": \"61bdf15fc7400601c3da1aa7a43917310a5bf391\",\n+        \"short\": \"[priority] Security: [[CVE-2023-40581](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-40581)] [Prevent RCE when using `--exec` with `%q` on Windows](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg)\\n    - The shell escape function is now using `\\\"\\\"` instead of `\\\\\\\"`.\\n    - `utils.Popen` has been patched to properly quote commands.\"\n     }\n ]"
        },
        {
          "filename": "test/test_YoutubeDL.py",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -784,9 +784,9 @@ def expect_same_infodict(out):\n         test('%(title4)#S', 'foo_bar_test')\n         test('%(title4).10S', ('foo \uff02bar\uff02 ', 'foo \uff02bar\uff02' + ('#' if compat_os_name == 'nt' else ' ')))\n         if compat_os_name == 'nt':\n-            test('%(title4)q', ('\"foo \\\\\"bar\\\\\" test\"', \"\uff02foo \u29f9\uff02bar\u29f9\uff02 test\uff02\"))\n-            test('%(formats.:.id)#q', ('\"id 1\" \"id 2\" \"id 3\"', '\uff02id 1\uff02 \uff02id 2\uff02 \uff02id 3\uff02'))\n-            test('%(formats.0.id)#q', ('\"id 1\"', '\uff02id 1\uff02'))\n+            test('%(title4)q', ('\"foo \"\"bar\"\" test\"', None))\n+            test('%(formats.:.id)#q', ('\"id 1\" \"id 2\" \"id 3\"', None))\n+            test('%(formats.0.id)#q', ('\"id 1\"', None))\n         else:\n             test('%(title4)q', ('\\'foo \"bar\" test\\'', '\\'foo \uff02bar\uff02 test\\''))\n             test('%(formats.:.id)#q', \"'id 1' 'id 2' 'id 3'\")"
        },
        {
          "filename": "test/test_utils.py",
          "status": "modified",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -14,6 +14,7 @@\n import io\n import itertools\n import json\n+import subprocess\n import xml.etree.ElementTree\n \n from yt_dlp.compat import (\n@@ -28,6 +29,7 @@\n     InAdvancePagedList,\n     LazyList,\n     OnDemandPagedList,\n+    Popen,\n     age_restricted,\n     args_to_str,\n     base_url,\n@@ -2388,6 +2390,20 @@ def test_extract_basic_auth(self):\n         assert extract_basic_auth('http://user:@foo.bar') == ('http://foo.bar', 'Basic dXNlcjo=')\n         assert extract_basic_auth('http://user:pass@foo.bar') == ('http://foo.bar', 'Basic dXNlcjpwYXNz')\n \n+    @unittest.skipUnless(compat_os_name == 'nt', 'Only relevant on Windows')\n+    def test_Popen_windows_escaping(self):\n+        def run_shell(args):\n+            stdout, stderr, error = Popen.run(\n+                args, text=True, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            assert not stderr\n+            assert not error\n+            return stdout\n+\n+        # Test escaping\n+        assert run_shell(['echo', 'test\"&']) == '\"test\"\"&\"\\n'\n+        # Test if delayed expansion is disabled\n+        assert run_shell(['echo', '^!']) == '\"^!\"\\n'\n+        assert run_shell('echo \"^!\"') == '\"^!\"\\n'\n \n if __name__ == '__main__':\n     unittest.main()"
        },
        {
          "filename": "yt_dlp/compat/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -30,7 +30,7 @@ def compat_etree_fromstring(text):\n if compat_os_name == 'nt':\n     def compat_shlex_quote(s):\n         import re\n-        return s if re.match(r'^[-_\\w./]+$', s) else '\"%s\"' % s.replace('\"', '\\\\\"')\n+        return s if re.match(r'^[-_\\w./]+$', s) else s.replace('\"', '\"\"').join('\"\"')\n else:\n     from shlex import quote as compat_shlex_quote  # noqa: F401\n "
        },
        {
          "filename": "yt_dlp/postprocessor/exec.py",
          "status": "modified",
          "additions": 5,
          "deletions": 7,
          "patch": "@@ -1,8 +1,6 @@\n-import subprocess\n-\n from .common import PostProcessor\n from ..compat import compat_shlex_quote\n-from ..utils import PostProcessingError, encodeArgument, variadic\n+from ..utils import Popen, PostProcessingError, variadic\n \n \n class ExecPP(PostProcessor):\n@@ -27,10 +25,10 @@ def parse_cmd(self, cmd, info):\n     def run(self, info):\n         for tmpl in self.exec_cmd:\n             cmd = self.parse_cmd(tmpl, info)\n-            self.to_screen('Executing command: %s' % cmd)\n-            retCode = subprocess.call(encodeArgument(cmd), shell=True)\n-            if retCode != 0:\n-                raise PostProcessingError('Command returned error code %d' % retCode)\n+            self.to_screen(f'Executing command: {cmd}')\n+            _, _, return_code = Popen.run(cmd, shell=True)\n+            if return_code != 0:\n+                raise PostProcessingError(f'Command returned error code {return_code}')\n         return [], info\n \n "
        },
        {
          "filename": "yt_dlp/utils/_utils.py",
          "status": "modified",
          "additions": 16,
          "deletions": 2,
          "patch": "@@ -825,7 +825,7 @@ def _fix(key):\n         _fix('LD_LIBRARY_PATH')  # Linux\n         _fix('DYLD_LIBRARY_PATH')  # macOS\n \n-    def __init__(self, *args, env=None, text=False, **kwargs):\n+    def __init__(self, args, *remaining, env=None, text=False, shell=False, **kwargs):\n         if env is None:\n             env = os.environ.copy()\n         self._fix_pyinstaller_ld_path(env)\n@@ -835,7 +835,21 @@ def __init__(self, *args, env=None, text=False, **kwargs):\n             kwargs['universal_newlines'] = True  # For 3.6 compatibility\n             kwargs.setdefault('encoding', 'utf-8')\n             kwargs.setdefault('errors', 'replace')\n-        super().__init__(*args, env=env, **kwargs, startupinfo=self._startupinfo)\n+\n+        if shell and compat_os_name == 'nt' and kwargs.get('executable') is None:\n+            if not isinstance(args, str):\n+                args = ' '.join(compat_shlex_quote(a) for a in args)\n+            shell = False\n+            args = f'{self.__comspec()} /Q /S /D /V:OFF /C \"{args}\"'\n+\n+        super().__init__(args, *remaining, env=env, shell=shell, **kwargs, startupinfo=self._startupinfo)\n+\n+    def __comspec(self):\n+        comspec = os.environ.get('ComSpec') or os.path.join(\n+            os.environ.get('SystemRoot', ''), 'System32', 'cmd.exe')\n+        if os.path.isabs(comspec):\n+            return comspec\n+        raise FileNotFoundError('shell not found: neither %ComSpec% nor %SystemRoot% is set')\n \n     def communicate_or_kill(self, *args, **kwargs):\n         try:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ff7a43623e3a92270f66a7e37b5fc53d7a57fdf",
            "date": "2025-01-26T03:54:22Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "3b4531934465580be22937fecbb6e1a3a9e2334f",
            "date": "2025-01-26T03:32:10Z",
            "author_login": "seproDev"
          },
          {
            "sha": "421bc72103d1faed473a451299cd17d6abb433bb",
            "date": "2025-01-26T03:27:12Z",
            "author_login": "nosoop"
          },
          {
            "sha": "d4f5be1735c8feaeb3308666e0b878e9782f529d",
            "date": "2025-01-26T03:20:42Z",
            "author_login": "FestplattenSchnitzel"
          },
          {
            "sha": "797d2472a299692e01ad1500e8c3b7bc1daa7fe4",
            "date": "2025-01-26T03:12:32Z",
            "author_login": "bashonly"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-78",
    "description": "yt-dlp is a youtube-dl fork with additional features and fixes. The patch that addressed CVE-2023-40581 attempted to prevent RCE when using `--exec` with `%q` by replacing double quotes with two double quotes. However, this escaping is not sufficient, and still allows expansion of environment variables. Support for output template expansion in `--exec`, along with this vulnerable behavior, was added to `yt-dlp` in version 2021.04.11. yt-dlp version 2024.04.09 fixes this issue by properly escaping `%`. It replaces them with `%%cd:~,%`, a variable that expands to nothing, leaving only the leading percent. It is recommended to upgrade yt-dlp to version 2024.04.09 as soon as possible. Also, always be careful when using `--exec`, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous. For Windows users who are not able to upgrade, avoid using any output template expansion in `--exec` other than `{}` (filepath); if expansion in `--exec` is needed, verify the fields you are using do not contain `\"`, `|` or `&`; and/or instead of using `--exec`, write the info json and load the fields from it instead.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-04-09T18:15:08.150",
    "last_modified": "2024-11-21T08:56:15.637",
    "fix_date": "2023-09-24T00:29:01Z"
  },
  "references": [
    {
      "url": "https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.kb.cert.org/vuls/id/123335",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/releases/tag/2024.04.09",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.kb.cert.org/vuls/id/123335",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.456644",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "yt-dlp",
    "owner": "yt-dlp",
    "created_at": "2020-10-26T04:22:55Z",
    "updated_at": "2025-01-26T07:46:13Z",
    "pushed_at": "2025-01-26T04:00:31Z",
    "size": 52169,
    "stars": 97884,
    "forks": 7672,
    "open_issues": 1765,
    "watchers": 97884,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "gh-pages",
      "master",
      "release"
    ],
    "languages": {
      "Python": 9809730,
      "Makefile": 7825,
      "Shell": 551,
      "Dockerfile": 461,
      "Batchfile": 47
    },
    "commit_activity": {
      "total_commits_last_year": 851,
      "avg_commits_per_week": 16.365384615384617,
      "days_active_last_year": 214
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "unlicense"
    },
    "collected_at": "2025-01-26T07:48:38.898416"
  }
}