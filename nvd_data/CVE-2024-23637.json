{
  "cve_id": "CVE-2024-23637",
  "github_data": {
    "repository": "OctoPrint/OctoPrint",
    "fix_commit": "1729d167b4ae4a5835bbc7211b92c6828b1c4125",
    "related_commits": [
      "1729d167b4ae4a5835bbc7211b92c6828b1c4125",
      "1729d167b4ae4a5835bbc7211b92c6828b1c4125"
    ],
    "patch_url": "https://github.com/OctoPrint/OctoPrint/commit/1729d167b4ae4a5835bbc7211b92c6828b1c4125.patch",
    "fix_commit_details": {
      "sha": "1729d167b4ae4a5835bbc7211b92c6828b1c4125",
      "commit_date": "2024-01-31T12:10:40Z",
      "author": {
        "login": "foosel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge branch 'fix/reauthenticate' into maintenance",
        "length": 50,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 1503,
        "additions": 1140,
        "deletions": 363
      },
      "files": [
        {
          "filename": "docs/api/access.rst",
          "status": "modified",
          "additions": 14,
          "deletions": 14,
          "patch": "@@ -59,7 +59,7 @@ Add a new group\n \n    Will return a :ref:`group list response <sec-api-access-datamodel-groups-list>` on success.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :json key:         The group's identifier\n    :json name:        The user's name\n@@ -101,7 +101,7 @@ Update a group\n \n    Will return a :ref:`group list response <sec-api-access-datamodel-groups-list>` on success.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :json description: A human readable description of the group\n    :json permissions: The permissions to assign to the group\n@@ -122,7 +122,7 @@ Delete a group\n \n    Will return a :ref:`group list response <sec-api-access-datamodel-groups-list>` on success.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :status 200:       No error\n \n@@ -179,7 +179,7 @@ Add a new user\n \n    Returns a list of registered users on success, see :ref:`Retrieve a list of users <sec-api-access-users-list>`.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :json name:     The user's name\n    :json password: The user's password\n@@ -204,7 +204,7 @@ Update a user\n \n    Returns a list of registered users on success, see :ref:`Retrieve a list of users <sec-api-access-users-list>`.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :param username: Name of the user to update\n    :json admin:     Whether to mark the user as admin (true) or not (false), can be left out (no change)\n@@ -223,7 +223,7 @@ Delete a user\n \n    Returns a list of registered users on success, see :ref:`Retrieve a list of users <sec-api-access-users-list>`.\n \n-   Requires the ``SETTINGS`` permission.\n+   Requires the ``SETTINGS`` permission and a recent credentials check.\n \n    :param username: Name of the user to delete\n    :status 200:     No error\n@@ -242,7 +242,7 @@ Change a user's password\n    request body. Without the ``SETTINGS`` permission, an additional property ``current``\n    is also required to be set on the request body, containing the user's current password.\n \n-   Requires the ``SETTINGS`` permission or to be logged in as the user. Note that ``current``\n+   Requires the ``SETTINGS`` permission or to be logged in as the user, and a recent credentials check. Note that ``current``\n    will be evaluated even in presence of the ``SETTINGS`` permission, if set.\n \n    :param username: Name of the user to change the password for\n@@ -252,7 +252,7 @@ Change a user's password\n    :status 400:     If the request doesn't contain a ``password`` property, doesn't\n                     contain a ``current`` property even though required, or the request\n                     is otherwise invalid\n-   :status 403:     No admin rights, not logged in as the user or a current password\n+   :status 403:     No admin rights, not logged in as the user, no recent credentials check or a current password\n                     mismatch\n    :status 404:     The user is unknown\n \n@@ -287,11 +287,11 @@ Update a user's settings\n    Expects a new settings JSON object to merge with the current settings as\n    request body.\n \n-   Requires the ``SETTINGS`` permission or to be logged in as the user.\n+   Requires the ``SETTINGS`` permission or to be logged in as the user,  and a recent credentials check.\n \n    :param username: Name of the user to retrieve the settings for\n    :status 204:     No error\n-   :status 403:     No admin rights and not logged in as the user\n+   :status 403:     No admin rights and not logged in as the user, or no recent credentials check\n    :status 404:     The user is unknown\n \n .. _sec-api-access-users-apikey-generate:\n@@ -306,11 +306,11 @@ Regenerate a user's api key\n    Does not expect a body. Will return the generated API key as ``apikey``\n    property in the JSON object contained in the response body.\n \n-   Requires the ``SETTINGS`` permission or to be logged in as the user.\n+   Requires the ``SETTINGS`` permission or to be logged in as the user, and a recent credentials check.\n \n    :param username: Name of the user to retrieve the settings for\n    :status 200:     No error\n-   :status 403:     No admin rights and not logged in as the user\n+   :status 403:     No admin rights and not logged in as the user, or no recent credentials check\n    :status 404:     The user is unknown\n \n .. _sec-api-access-users-apikey-delete:\n@@ -322,11 +322,11 @@ Delete a user's api key\n \n    Deletes a user's personal API key.\n \n-   Requires the ``SETTINGS`` permission or to be logged in as the user.\n+   Requires the ``SETTINGS`` permission or to be logged in as the user, and a recent credentials check.\n \n    :param username: Name of the user to retrieve the settings for\n    :status 204:     No error\n-   :status 403:     No admin rights and not logged in as the user\n+   :status 403:     No admin rights and not logged in as the user, or no recent credentials check\n    :status 404:     The user is unknown\n \n .. _sec-api-access-datamodel:"
        },
        {
          "filename": "docs/bundledplugins/appkeys.rst",
          "status": "modified",
          "additions": 90,
          "deletions": 15,
          "patch": "@@ -291,6 +291,8 @@ Decide on existing request\n \n    Returns an HTTP :http:statuscode:`204` on success.\n \n+   Requires the ``PLUGIN_APPKEYS_GRANT`` permissions and a recent credentials check.\n+\n    :json decision: boolean value to indicate whether to confirm (``True``) or deny (``False``) access\n    :status 204: success\n \n@@ -303,13 +305,17 @@ Fetch list of existing application keys\n \n    Fetches a list of existing application keys and pending requests registered in the system for the current user.\n \n-   If the additional optional parameter ``all`` is provided and the user has administrator rights, fetches a list\n+   If the additional optional parameter ``all`` is provided and the user has the ``PLUGIN_APPKEYS_ADMIN`` permission, fetches a list\n    of *all** application keys and pending requests registered in the system for any user.\n \n+   If the additional optional parameter ``app`` is provided, only the key for the specified application identifier and the\n+   current user will be returned. A user with the ``PLUGIN_APPKEYS_ADMIN``permission may also specify the ``user`` parameter\n+   to fetch the key for the specified application identifier and a different user.\n+\n    Returns a :http:statuscode:`200` with a :ref:`List response <sec-bundledplugins-appkey-datamodel-listreponse>` in the\n    body upon success.\n \n-   :query all: Fetch all application keys and pending requests from all users. Requires administrator rights.\n+   :query all: Fetch all application keys and pending requests from all users. Requires the ``PLUGIN_APPKEYS_ADMIN`` permission.\n \n .. _sec-bundledplugins-appkeys-api-issuecommand:\n \n@@ -323,18 +329,27 @@ Issue an application key command\n \n    revoke\n      Revokes an existing application key. Must belong to the user issuing the command, unless the user has admin rights\n-     in which case they make revoke any application key in the system. Expects the key in question as parameter ``key``.\n+     in which case they make revoke any application key in the system. Expects the key in question identified by the\n+     associated application identifier provided in the ``app`` parameter. Keys for other users but the current one can\n+     be revoked by admins with the additional ``user`` parameter to specify the user id.\n \n    generate\n-     Generates a new application key for the user, using the application identifier provided as parameter ``app``.\n+     Generates a new application key for the user, using the application identifier provided as parameter ``app``. Keys\n+     for other users but the current one can be generated by admins with the additional ``user`` parameter to specify\n+     the user id.\n \n    Upon success, a status code of :http:statuscode:`204` and an empty body is returned.\n \n-   Requires user rights.\n+   Requires user rights and a fresh credentials check.\n+\n+   .. deprecated:: 1.10.0\n+\n+      Revoking a key by supplying the key itself has been deprecated as of OctoPrint 1.10.0. Use ``app`` and optionally\n+      ``user`` instead.\n \n    **Example revoke request**\n \n-   Revokes the (fictional) key ``aabbccddeeff112233445566``.\n+   Revokes the key associated with app id ``test`` for the current user.\n \n    .. sourcecode:: http\n \n@@ -345,7 +360,28 @@ Issue an application key command\n \n       {\n         \"command\": \"revoke\",\n-        \"key\": \"aabbccddeeff112233445566\"\n+        \"app\": \"test\"\n+      }\n+\n+   .. sourcecode:: http\n+\n+      HTTP/1.1 204 No Content\n+\n+   **Example revoke request by an admin for a different user**\n+\n+   Revokes the key associated with the app id ``test`` for user ``user``.\n+\n+   .. sourcecode:: http\n+\n+      POST /api/plugin/appkeys HTTP/1.1\n+      Host: example.com\n+      Content-Type: application/json\n+      X-Api-Key: abcdef...\n+\n+      {\n+        \"command\": \"revoke\",\n+        \"app\": \"test\",\n+        \"user\": \"user\"\n       }\n \n    .. sourcecode:: http\n@@ -365,17 +401,28 @@ Issue an application key command\n \n       {\n         \"command\": \"generate\",\n-        \"key\": \"My awesome application 1.0\"\n+        \"app\": \"My awesome application 1.0\"\n       }\n \n    .. sourcecode:: http\n \n-      HTTP/1.1 204 No Content\n+      HTTP/1.1 200 OK\n+      Content-Type: application/json\n+\n+      {\n+        \"app_id\": \"My awesome application 1.0\",\n+        \"user_id\": \"me\",\n+        \"api_key\": \"abcdef1234567890\"\n+      }\n \n    :json string command: The command to issue, either ``revoke`` or ``generate``\n-   :json string key:     ``revoke`` command: The key to revoke\n-   :json string app:     ``generate`` command: Application identifier for which to generate a key\n-   :statuscode 204:      No error\n+   :json string app:     ``revoke`` & ``generate`` commands: The application identifier of the key to revoke or generate.\n+   :json string user:    ``revoke`` & ``generate`` commands: The user name for which to revoke or generated a key associated with the provided\n+                         app id. If not provided, the current user's name will be used.\n+   :json string key:     ``revoke`` command: The key to revoke. Revoking by providing the key itself has been deprecated\n+                         as of OctoPrint 1.10.0. Use ``app`` and optionally ``user`` instead.\n+   :statuscode 200:      Key generation successful\n+   :statuscode 204:      No error during key revocation\n    :statuscode 400:      Invalid or missing parameter\n \n .. _sec-bundledplugins-appkey-datamodel:\n@@ -543,6 +590,18 @@ Pending list entry\n JavaScript Client Library\n -------------------------\n \n+.. js:function:: OctoPrintClient.plugins.appkeys.getKey(app, user, opts)\n+\n+   Retrieves the key information the given ``app`` and optional other ``user``. The key must belong to the current user, or the current user must\n+   have the ``PLUGIN_APPKEYS_ADMIN`` permission.\n+\n+   See :ref:`Fetch list of existing application keys <sec-bundledplugins-appkeys-api-fetchlist>` for more details.\n+\n+   :param string app: Application identifier\n+   :param string user: Optional user identifier\n+   :param object opts: Additional options for the request\n+   :returns Promise: A `jQuery Promise <http://api.jquery.com/Types/#Promise>`_ for the request's response\n+\n .. js:function:: OctoPrintClient.plugins.appkeys.getKeys(opts)\n \n    Retrieves registered keys and pending requests for the current user.\n@@ -556,7 +615,7 @@ JavaScript Client Library\n \n    Retrieves registered keys and pending requests for all users.\n \n-   Needs administrator rights.\n+   Needs the ``PLUGIN_APPKEYS_ADMIN`` permission.\n \n    See :ref:`Fetch list of existing application keys <sec-bundledplugins-appkeys-api-fetchlist>` for more details.\n \n@@ -575,15 +634,31 @@ JavaScript Client Library\n \n .. js:function:: OctoPrintClient.plugins.appkeys.revokeKey(key, opts)\n \n-   Revokes the given ``key``. The key must belong to the current user, or the current user must have administrator\n-   rights.\n+   Revokes the given ``key``. The key must belong to the current user, or the current user must\n+   have the ``PLUGIN_APPKEYS_ADMIN`` permission.\n \n    See :ref:`Issue an application key command <sec-bundledplugins-appkeys-api-issuecommand>` for details.\n \n+   .. deprecated:: 1.10.0\n+\n+      ``revokeKey`` has been deprecated. Use ``revokeKeyForApp`` instead.\n+\n    :param string key: Key to revoke\n    :param object opts: Additional options for the request\n    :returns Promise: A `jQuery Promise <http://api.jquery.com/Types/#Promise>`_ for the request's response\n \n+.. js:function:: OctoPrintClient.plugins.appkeys.revokeKeyForApp(app, user, opts)\n+\n+   Revokes the key for the given ``app`` and optional other ``user``. The key must belong to the current user, or the current user must\n+   have the ``PLUGIN_APPKEYS_ADMIN`` permission.\n+\n+   See :ref:`Issue an application key command <sec-bundledplugins-appkeys-api-issuecommand>` for details.\n+\n+   :param string app: Application identifier\n+   :param string user: Optional user identifier\n+   :param object opts: Additional options for the request\n+   :returns Promise: A `jQuery Promise <http://api.jquery.com/Types/#Promise>`_ for the request's response\n+\n .. js:function:: OctoPrintClient.plugins.appkeys.decide(token, decision, opts)\n \n    Decides on an existing authorization request."
        },
        {
          "filename": "docs/configuration/config_yaml.rst",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -72,6 +72,10 @@ Use the following settings to enable access control:\n      # If a remote user is not found, add them. Use this only if all users from the remote system can use OctoPrint.\n      addRemoteUsers: false\n \n+     # Default timeout after which to require reauthentication by a user for dangerous changes, in minutes.\n+     # Defaults to 5 minutes. Set to 0 to disable reauthentication requirements (SECURITY IMPACT!).\n+     defaultReauthenticationTimeout: 5\n+\n .. _sec-configuration-config_yaml-api:\n \n API"
        },
        {
          "filename": "src/octoprint/access/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@ def auth_log(message):\n \n \n login_mechanisms = login_mechanism_lut = {\n-    \"http\": \"credentials\",\n+    \"password\": \"credentials\",\n     \"autologin\": \"autologin\",\n     \"remember_me\": \"Remember Me cookie\",\n     \"basic_auth\": \"Basic Authorization header\","
        },
        {
          "filename": "src/octoprint/plugins/appkeys/__init__.py",
          "status": "modified",
          "additions": 81,
          "deletions": 7,
          "patch": "@@ -9,10 +9,12 @@\n import octoprint.plugin\n from octoprint.access import ADMIN_GROUP, USER_GROUP\n from octoprint.access.permissions import Permissions\n-from octoprint.server import NO_CONTENT, admin_permission, current_user\n-from octoprint.server.util import require_login_with\n+from octoprint.server import NO_CONTENT, current_user\n+from octoprint.server.util import require_fresh_login_with\n from octoprint.server.util.flask import (\n     add_non_caching_response_headers,\n+    credentials_checked_recently,\n+    ensure_credentials_checked_recently,\n     no_firstrun_access,\n     restricted_access,\n )\n@@ -227,7 +229,7 @@ def handle_auth_dialog(self, app_token):\n         if not pendings:\n             return flask.abort(404)\n \n-        response = require_login_with(\n+        response = require_fresh_login_with(\n             permissions=[Permissions.PLUGIN_APPKEYS_GRANT], user_id=required_user\n         )\n         if response:\n@@ -270,6 +272,8 @@ def handle_decision(self, user_token):\n         if not Permissions.PLUGIN_APPKEYS_GRANT.can():\n             flask.abort(403, description=\"No permission to grant app access\")\n \n+        ensure_credentials_checked_recently()\n+\n         decision = data[\"decision\"] in valid_boolean_trues\n         user_id = current_user.get_name()\n \n@@ -293,23 +297,50 @@ def is_blueprint_csrf_protected(self):\n     ##~~ SimpleApiPlugin mixin\n \n     def get_api_commands(self):\n-        return {\"generate\": [\"app\"], \"revoke\": [\"key\"]}\n+        return {\"generate\": [\"app\"], \"revoke\": []}\n \n     def on_api_get(self, request):\n         user_id = current_user.get_name()\n         if not user_id:\n             return flask.abort(403)\n \n+        # GET ?app_id=...[&user_id=...]\n+        if request.values.get(\"app\"):\n+            app_id = request.values.get(\"app\")\n+            user_id = request.values.get(\"user\", user_id)\n+            if (\n+                user_id != current_user.get_name()\n+                and not Permissions.PLUGIN_APPKEYS_ADMIN.can()\n+            ):\n+                return flask.abort(403)\n+\n+            key = self._api_key_for_user_and_app_id(user_id, app_id)\n+            if not key:\n+                return flask.abort(404)\n+\n+            return flask.jsonify(\n+                key=key.external() | {\"api_key\": \"\"}\n+                if not credentials_checked_recently()\n+                else key.external()\n+            )\n+\n+        # GET ?all=true (admin only)\n         if (\n             request.values.get(\"all\") in valid_boolean_trues\n             and Permissions.PLUGIN_APPKEYS_ADMIN.can()\n         ):\n             keys = self._all_api_keys()\n+\n         else:\n             keys = self._api_keys_for_user(user_id)\n \n         return flask.jsonify(\n-            keys=list(map(lambda x: x.external(), keys)),\n+            keys=list(\n+                map(\n+                    lambda x: x | {\"api_key\": \"\"},\n+                    map(lambda x: x.external(), keys),\n+                )\n+            ),\n             pending={\n                 x.user_token: x.external() for x in self._get_pending_by_user_id(user_id)\n             },\n@@ -322,14 +353,38 @@ def on_api_command(self, command, data):\n \n         if command == \"revoke\":\n             api_key = data.get(\"key\")\n+\n+            if api_key:\n+                # deprecated key based revoke?\n+                from flask import request\n+\n+                from octoprint.server.util import get_remote_address\n+\n+                self._logger.warning(\n+                    \"Deprecated key based revoke command sent to /api/plugin/appkeys by {}, should be migrated to use app id/user tuple\".format(\n+                        get_remote_address(request)\n+                    )\n+                )\n+\n+            else:\n+                # newer app/user based revoke?\n+                user = data.get(\"user\", user_id)\n+                app = data.get(\"app\")\n+                if not app:\n+                    return flask.abort(400, description=\"Need either app or key\")\n+\n+                api_key = self._api_key_for_user_and_app_id(user, app)\n+\n             if not api_key:\n-                return flask.abort(400)\n+                return flask.abort(400, description=\"Need either app or key\")\n \n-            if not admin_permission.can():\n+            if not Permissions.PLUGIN_APPKEYS_ADMIN.can():\n                 user_for_key = self._user_for_api_key(api_key)\n                 if user_for_key is None or user_for_key.user_id != user_id:\n                     return flask.abort(403)\n \n+            ensure_credentials_checked_recently()\n+\n             self._delete_api_key(api_key)\n \n         elif command == \"generate\":\n@@ -342,6 +397,8 @@ def on_api_command(self, command, data):\n             if selected_user_id != user_id and not Permissions.PLUGIN_APPKEYS_ADMIN.can():\n                 return flask.abort(403)\n \n+            ensure_credentials_checked_recently()\n+\n             key = self._add_api_key(selected_user_id, app_name.strip())\n             return flask.jsonify(user_id=selected_user_id, app_id=app_name, api_key=key)\n \n@@ -473,12 +530,18 @@ def _add_api_key(self, user_id, app_name):\n             return key.api_key\n \n     def _delete_api_key(self, api_key):\n+        if isinstance(api_key, ActiveKey):\n+            api_key = api_key.api_key\n+\n         with self._keys_lock:\n             for user_id, data in self._keys.items():\n                 self._keys[user_id] = list(filter(lambda x: x.api_key != api_key, data))\n             self._save_keys()\n \n     def _user_for_api_key(self, api_key):\n+        if isinstance(api_key, ActiveKey):\n+            api_key = api_key.api_key\n+\n         with self._keys_lock:\n             for user_id, data in self._keys.items():\n                 if any(filter(lambda x: x.api_key == api_key, data)):\n@@ -496,6 +559,17 @@ def _all_api_keys(self):\n                 result += keys\n         return result\n \n+    def _api_key_for_user_and_app_id(self, user_id, app_id):\n+        with self._keys_lock:\n+            if user_id not in self._keys:\n+                return None\n+\n+            for key in self._keys[user_id]:\n+                if key.app_id.lower() == app_id.lower():\n+                    return key\n+\n+        return None\n+\n     def _generate_key(self):\n         return generate_api_key()\n "
        },
        {
          "filename": "src/octoprint/plugins/appkeys/static/clientjs/appkeys.js",
          "status": "modified",
          "additions": 19,
          "deletions": 1,
          "patch": "@@ -14,8 +14,15 @@\n     };\n \n     OctoPrintAppKeysClient.prototype.getAllKeys = function (opts) {\n+        return this.base.get(this.base.getSimpleApiUrl(\"appkeys\") + \"?all=true\", opts);\n+    };\n+\n+    OctoPrintAppKeysClient.prototype.getKey = function (app, user, opts) {\n         return this.base.get(\n-            OctoPrintClient.prototype.getSimpleApiUrl(\"appkeys\") + \"?all=true\",\n+            this.base.getSimpleApiUrl(\"appkeys\") +\n+                \"?app=\" +\n+                encodeURIComponent(app) +\n+                (user ? \"&user=\" + encodeURIComponent(user) : \"\"),\n             opts\n         );\n     };\n@@ -34,9 +41,20 @@\n     };\n \n     OctoPrintAppKeysClient.prototype.revokeKey = function (key, opts) {\n+        console.log(\n+            \"revokeKey should be considered deprecated, use revokeKeyForApp instead\"\n+        );\n         return this.base.simpleApiCommand(\"appkeys\", \"revoke\", {key: key}, opts);\n     };\n \n+    OctoPrintAppKeysClient.prototype.revokeKeyForApp = function (app, user, opts) {\n+        const params = {app: app};\n+        if (user) {\n+            params.user = user;\n+        }\n+        return this.base.simpleApiCommand(\"appkeys\", \"revoke\", params, opts);\n+    };\n+\n     OctoPrintAppKeysClient.prototype.decide = function (token, decision, opts) {\n         return this.base.postJson(\n             this.base.getBlueprintUrl(\"appkeys\") + \"decision/\" + token,"
        },
        {
          "filename": "src/octoprint/plugins/appkeys/static/js/appkeys.js",
          "status": "modified",
          "additions": 139,
          "deletions": 56,
          "patch": "@@ -6,6 +6,9 @@ $(function () {\n \n         self.onStartup = function () {\n             self.dialog = $(\"#plugin_appkeys_keygenerated\");\n+            self.dialog.on(\"hidden\", () => {\n+                self.resetDialog();\n+            });\n         };\n \n         self.showDialog = function (title, data) {\n@@ -40,6 +43,17 @@ $(function () {\n \n             self.dialog.modal(\"show\");\n         };\n+\n+        self.resetDialog = () => {\n+            if (self.dialog === undefined) return;\n+\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_title\").text(\"\");\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_user\").text(\"\");\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_app\").text(\"\");\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_key_text\").text(\"\");\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_key_copy\").off();\n+            self.dialog.find(\"#plugin_appkeys_keygenerated_key_qrcode\").empty();\n+        };\n     }\n \n     function UserAppKeysViewModel(parameters) {\n@@ -69,7 +83,7 @@ $(function () {\n         self.editorApp = ko.observable();\n \n         self.requestData = function () {\n-            OctoPrint.plugins.appkeys.getKeys().done(self.fromResponse);\n+            return OctoPrint.plugins.appkeys.getKeys().done(self.fromResponse);\n         };\n \n         self.fromResponse = function (response) {\n@@ -81,26 +95,42 @@ $(function () {\n         };\n \n         self.generateKey = function () {\n-            return OctoPrint.plugins.appkeys\n-                .generateKey(self.editorApp())\n-                .done(self.requestData)\n-                .done(function () {\n-                    self.editorApp(\"\");\n-                });\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                OctoPrint.plugins.appkeys\n+                    .generateKey(self.editorApp())\n+                    .done(self.requestData)\n+                    .done(function () {\n+                        self.editorApp(\"\");\n+                    });\n+            });\n         };\n \n-        self.revokeKey = function (key) {\n-            var perform = function () {\n-                OctoPrint.plugins.appkeys.revokeKey(key).done(self.requestData);\n-            };\n+        self.revokeKey = (data) => {\n+            const app = data.app_id;\n+\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                showConfirmationDialog(\n+                    _.sprintf(\n+                        gettext(\n+                            \"You are about to revoke the application key for %(app)s.\"\n+                        ),\n+                        {app: _.escape(app)}\n+                    ),\n+                    () => {\n+                        OctoPrint.plugins.appkeys\n+                            .revokeKeyForApp(app)\n+                            .done(self.requestData);\n+                    }\n+                );\n+            });\n+        };\n \n-            showConfirmationDialog(\n-                _.sprintf(\n-                    gettext('You are about to revoke the application key \"%(key)s\".'),\n-                    {key: _.escape(key)}\n-                ),\n-                perform\n-            );\n+        self.showKeyDetails = (data) => {\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                OctoPrint.plugins.appkeys.getKey(data.app_id).done((response) => {\n+                    self.dialog.showDialog(gettext(\"Details\"), response.key);\n+                });\n+            });\n         };\n \n         self.allowApp = function (token) {\n@@ -135,8 +165,10 @@ $(function () {\n                         {\n                             text: gettext(\"Allow\"),\n                             click: function (notice) {\n-                                self.allowApp(token);\n-                                notice.remove();\n+                                self.loginState.reauthenticateIfNecessary(() => {\n+                                    self.allowApp(token);\n+                                    notice.remove();\n+                                });\n                             }\n                         },\n                         {\n@@ -245,7 +277,7 @@ $(function () {\n         };\n \n         self.requestData = function () {\n-            OctoPrint.plugins.appkeys.getAllKeys().done(self.fromResponse);\n+            return OctoPrint.plugins.appkeys.getAllKeys().done(self.fromResponse);\n         };\n \n         self.fromResponse = function (response) {\n@@ -267,46 +299,65 @@ $(function () {\n             self.apps(apps);\n         };\n \n+        self.showKeyDetails = (data) => {\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                OctoPrint.plugins.appkeys\n+                    .getKey(data.app_id, data.user_id)\n+                    .done((response) => {\n+                        self.dialog.showDialog(gettext(\"Details\"), response.key);\n+                    });\n+            });\n+        };\n+\n         self.generateKey = function () {\n-            return OctoPrint.plugins.appkeys\n-                .generateKeyForUser(self.editorUser(), self.editorApp())\n-                .done(self.requestData)\n-                .done(function () {\n-                    self.editorUser(self.loginState.username());\n-                    self.editorApp(\"\");\n-                })\n-                .done(function (data) {\n-                    self.dialog.showDialog(gettext(\"New key generated!\"), data);\n-                });\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                OctoPrint.plugins.appkeys\n+                    .generateKeyForUser(self.editorUser(), self.editorApp())\n+                    .done(self.requestData)\n+                    .done(function () {\n+                        self.editorUser(self.loginState.username());\n+                        self.editorApp(\"\");\n+                    })\n+                    .done(function (data) {\n+                        self.dialog.showDialog(gettext(\"New key generated!\"), data);\n+                    });\n+            });\n         };\n \n-        self.revokeKey = function (key) {\n-            var perform = function () {\n-                OctoPrint.plugins.appkeys.revokeKey(key).done(self.requestData);\n-            };\n+        self.revokeKey = function (data) {\n+            const app = data.app_id;\n+            const user = data.user_id;\n \n             showConfirmationDialog(\n                 _.sprintf(\n-                    gettext('You are about to revoke the application key \"%(key)s\".'),\n-                    {key: _.escape(key)}\n+                    gettext(\n+                        \"You are about to revoke the application key for %(app)s for user %(user)s.\"\n+                    ),\n+                    {app: _.escape(app), user: _.escape(user)}\n                 ),\n-                perform\n+                () => {\n+                    self.loginState.reauthenticateIfNecessary(() => {\n+                        OctoPrint.plugins.appkeys\n+                            .revokeKeyForApp(app, user)\n+                            .done(self.requestData);\n+                    });\n+                }\n             );\n         };\n \n         self.revokeMarked = function () {\n-            var perform = function () {\n-                self._bulkRevoke(self.markedForDeletion()).done(function () {\n-                    self.markedForDeletion.removeAll();\n-                });\n-            };\n-\n             showConfirmationDialog(\n                 _.sprintf(\n                     gettext(\"You are about to revoke %(count)d application keys.\"),\n                     {count: self.markedForDeletion().length}\n                 ),\n-                perform\n+                () => {\n+                    self.loginState.forceReauthentication(() => {\n+                        self._bulkRevoke(self.markedForDeletion()).done(() => {\n+                            self.markedForDeletion.removeAll();\n+                        });\n+                    });\n+                }\n             );\n         };\n \n@@ -315,13 +366,22 @@ $(function () {\n                 _.uniq(\n                     self\n                         .markedForDeletion()\n-                        .concat(_.map(self.keys.paginatedItems(), \"api_key\"))\n+                        .concat(\n+                            _.map(\n+                                self.keys.paginatedItems(),\n+                                (item) => `${item.user_id}:${item.app_id}`\n+                            )\n+                        )\n                 )\n             );\n         };\n \n         self.markAllForDeletion = function () {\n-            self.markedForDeletion(_.uniq(_.map(self.keys.allItems, \"api_key\")));\n+            self.markedForDeletion(\n+                _.uniq(\n+                    _.map(self.keys.allItems, (item) => `${item.user_id}:${item.app_id}`)\n+                )\n+            );\n         };\n \n         self.markAllByUserForDeletion = function (user) {\n@@ -341,7 +401,12 @@ $(function () {\n                 _.uniq(\n                     self\n                         .markedForDeletion()\n-                        .concat(_.map(_.filter(self.keys.allItems, filter), \"api_key\"))\n+                        .concat(\n+                            _.map(\n+                                _.filter(self.keys.allItems, filter),\n+                                (item) => `${item.user_id}:${item.app_id}`\n+                            )\n+                        )\n                 )\n             );\n         };\n@@ -351,31 +416,49 @@ $(function () {\n         };\n \n         self._bulkRevoke = function (keys) {\n+            /*\n+             * TODO: This still has a risk of running into reauthentication for REALLY large numbers of keys\n+             * whose bulk removal takes longer than the reauthentication timeout.\n+             */\n+\n             var title, message, handler;\n \n             title = gettext(\"Revoking application keys\");\n             message = _.sprintf(gettext(\"Revoking %(count)d application keys...\"), {\n                 count: keys.length\n             });\n-            handler = function (key) {\n+            handler = function (id) {\n+                const [user, app] = rsplit(id, \":\", 1);\n                 return OctoPrint.plugins.appkeys\n-                    .revokeKey(key)\n+                    .revokeKeyForApp(app, user)\n                     .done(function () {\n                         deferred.notify(\n-                            _.sprintf(gettext(\"Revoked %(key)s...\"), {\n-                                key: _.escape(key)\n+                            _.sprintf(gettext(\"Revoked %(app)s for %(user)s...\"), {\n+                                app: _.escape(app),\n+                                user: _.escape(user)\n                             }),\n                             true\n                         );\n                     })\n                     .fail(function (jqXHR) {\n                         var short = _.sprintf(\n-                            gettext(\"Revocation of %(key)s failed, continuing...\"),\n-                            {key: _.escape(key)}\n+                            gettext(\n+                                \"Revocation of %(app)s for user %(user)s failed, continuing...\"\n+                            ),\n+                            {\n+                                app: _.escape(app),\n+                                user: _.escape(user)\n+                            }\n                         );\n                         var long = _.sprintf(\n-                            gettext(\"Deletion of %(key)s failed: %(error)s\"),\n-                            {key: _.escape(key), error: _.escape(jqXHR.responseText)}\n+                            gettext(\n+                                \"Deletion of %(app)s for user %(user)s failed: %(error)s\"\n+                            ),\n+                            {\n+                                app: _.escape(app),\n+                                user: _.escape(user),\n+                                error: _.escape(jqXHR.responseText)\n+                            }\n                         );\n                         deferred.notify(short, long, false);\n                     });"
        },
        {
          "filename": "src/octoprint/plugins/appkeys/templates/appkeys.jinja2",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -20,7 +20,7 @@\n             <div class=\"control-group\">\n                 <label class=\"control-label\">{{ _('API Key') }}</label>\n                 <div class=\"controls\">\n-                    <strong id=\"plugin_appkeys_keygenerated_key_text\" class=\"control-text\"></strong>\n+                    <strong class=\"control-text\"><code id=\"plugin_appkeys_keygenerated_key_text\"></code></strong>\n                     <a href=\"javascript:void(0)\" id=\"plugin_appkeys_keygenerated_key_copy\" title=\"{{ _('Copy API Key to clipboard')|edq }}\" class=\"control-text\"><i class=\"fas fa-copy\"></i></a>\n                 </div>\n             </div>"
        },
        {
          "filename": "src/octoprint/plugins/appkeys/templates/appkeys_settings.jinja2",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -40,10 +40,10 @@\n         </thead>\n         <tbody data-bind=\"foreach: keys.paginatedItems\">\n         <tr>\n-            <td class=\"settings_plugin_appkeys_checkbox\"><input type=\"checkbox\" data-bind=\"value: api_key, checked: $root.markedForDeletion\"></td>\n+            <td class=\"settings_plugin_appkeys_checkbox\"><input type=\"checkbox\" data-bind=\"value: user_id + ':' + app_id, checked: $root.markedForDeletion\"></td>\n             <td class=\"settings_plugin_appkeys_user\"><span data-bind=\"text: user_id\"></span></td>\n-            <td class=\"settings_plugin_appkeys_app\"><span data-bind=\"text: app_id\"></span><br /><small class=\"muted\">{{ _('API Key') }}: <span data-bind=\"text: api_key\"></span> <a href=\"javascript:void(0)\" title=\"{{ _('Copy API Key to clipboard')|edq }}\" data-bind=\"click: function() { copyToClipboard(api_key) }\"><i class=\"fas fa-copy\"></i></a></small></td>\n-            <td class=\"settings_plugin_appkeys_actions\"><a href=\"javascript:void(0)\" title=\"{{ _('Revoke')|edq }}\" class=\"fa fa-trash-o\" data-bind=\"click: function() { $parent.revokeKey($data.api_key, $data.user_id) }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void(0)\" title=\"{{ _('Details')|edq }}\" class=\"fas fa-search\" data-bind=\"click: function() { $parent.dialog.showDialog(gettext('Details'), $data) }\"></a></td>\n+            <td class=\"settings_plugin_appkeys_app\"><span data-bind=\"text: app_id\"></span></td>\n+            <td class=\"settings_plugin_appkeys_actions\"><a href=\"javascript:void(0)\" title=\"{{ _('Revoke')|edq }}\" class=\"fa fa-trash-o\" data-bind=\"click: function() { $parent.revokeKey($data) }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void(0)\" title=\"{{ _('Details')|edq }}\" class=\"fas fa-search\" data-bind=\"click: function() { $parent.showKeyDetails($data) }\"></a></td>\n         </tr>\n         </tbody>\n     </table>\n@@ -71,12 +71,12 @@\n     <div class=\"control-group\">\n         <label class=\"control-label\">{{ _('Application identifier') }}</label>\n         <div class=\"controls\">\n-            <input type=\"text\" data-bind=\"value: editorApp\">\n+            <input type=\"text\" data-bind=\"value: editorApp, valueUpdate: 'input'\">\n         </div>\n     </div>\n     <div class=\"control-group\">\n         <div class=\"controls\">\n-            <button class=\"btn btn-primary\" data-bind=\"click: generateKey\">{{ _('Generate') }}</button>\n+            <button class=\"btn btn-primary\" data-bind=\"click: generateKey, enabled: editorApp, css: {disabled: !editorApp()}\">{{ _('Generate') }}</button>\n         </div>\n     </div>\n </form>"
        },
        {
          "filename": "src/octoprint/plugins/appkeys/templates/appkeys_usersettings.jinja2",
          "status": "modified",
          "additions": 6,
          "deletions": 4,
          "patch": "@@ -13,8 +13,10 @@\n         </thead>\n         <tbody data-bind=\"foreach: keys.paginatedItems\">\n         <tr>\n-            <td class=\"settings_plugin_appkeys_app\"><span data-bind=\"text: app_id\"></span><br /><small class=\"muted\">{{ _('API Key') }}: <span data-bind=\"text: api_key\"></span> <a href=\"javascript:void(0)\" title=\"{{ _('Copy API Key to clipboard')|edq }}\" data-bind=\"click: function() { copyToClipboard(api_key) }\"><i class=\"fas fa-copy\"></i></a></small></td>\n-            <td class=\"settings_plugin_appkeys_actions\"><a href=\"javascript:void(0)\" title=\"{{ _('Revoke')|edq }}\" class=\"far fa-trash-alt\" data-bind=\"click: function() { $parent.revokeKey($data.api_key) }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void(0)\" title=\"{{ _('Details')|edq }}\" class=\"fas fa-search\" data-bind=\"click: function() { $parent.dialog.showDialog(gettext('Details'), $data) }\"></a></td>\n+            <td class=\"settings_plugin_appkeys_app\">\n+                <span data-bind=\"text: app_id\"></span>\n+            </td>\n+            <td class=\"settings_plugin_appkeys_actions\"><a href=\"javascript:void(0)\" title=\"{{ _('Revoke')|edq }}\" class=\"far fa-trash-alt\" data-bind=\"click: function() { $parent.revokeKey($data) }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void(0)\" title=\"{{ _('Details')|edq }}\" class=\"fas fa-search\" data-bind=\"click: function() { $parent.showKeyDetails($data) }\"></a></td>\n         </tr>\n         </tbody>\n     </table>\n@@ -37,13 +39,13 @@\n     <div class=\"control-group\">\n         <label class=\"control-label\">{{ _('Application identifier') }}</label>\n         <div class=\"controls\">\n-            <input type=\"text\" data-bind=\"value: editorApp\">\n+            <input type=\"text\" data-bind=\"value: editorApp, valueUpdate: 'input'\">\n         </div>\n     </div>\n \n     <div class=\"control-group\">\n         <div class=\"controls\">\n-            <button class=\"btn btn-primary\" data-bind=\"click: generateKey\">{{ _('Generate') }}</button>\n+            <button class=\"btn btn-primary\" data-bind=\"click: generateKey, enabled: editorApp, css: {disabled: !editorApp()}\">{{ _('Generate') }}</button>\n         </div>\n     </div>\n </form>"
        },
        {
          "filename": "src/octoprint/plugins/pluginmanager/__init__.py",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -29,7 +29,9 @@\n from octoprint.server import safe_mode\n from octoprint.server.util.flask import (\n     check_etag,\n+    ensure_credentials_checked_recently,\n     no_firstrun_access,\n+    require_credentials_checked_recently,\n     with_revalidation_checking,\n )\n from octoprint.settings import valid_boolean_trues\n@@ -360,6 +362,7 @@ def get_template_types(self, template_sorting, template_rules, *args, **kwargs):\n \n     @octoprint.plugin.BlueprintPlugin.route(\"/upload_file\", methods=[\"POST\"])\n     @no_firstrun_access\n+    @require_credentials_checked_recently\n     @Permissions.PLUGIN_PLUGINMANAGER_INSTALL.require(403)\n     def upload_file(self):\n         import flask\n@@ -752,6 +755,9 @@ def on_api_command(self, command, data):\n             # do not update while a print job is running\n             # store targets to be run later on print done event\n             if command == \"install\" and data not in self._queued_installs:\n+                if not Permissions.PLUGIN_PLUGINMANAGER_INSTALL.can():\n+                    abort(403)\n+                ensure_credentials_checked_recently()\n                 self._logger.debug(f\"Queuing install of {data}\")\n                 self._queued_installs.append(data)\n             if len(self._queued_installs) > 0:\n@@ -769,6 +775,7 @@ def on_api_command(self, command, data):\n         elif command == \"install\":\n             if not Permissions.PLUGIN_PLUGINMANAGER_INSTALL.can():\n                 abort(403)\n+            ensure_credentials_checked_recently()\n             url = data[\"url\"]\n             plugin_name = data.get(\"plugin\")\n             from_repo = data.get(\"from_repo\", False)"
        },
        {
          "filename": "src/octoprint/plugins/pluginmanager/static/js/pluginmanager.js",
          "status": "modified",
          "additions": 121,
          "deletions": 118,
          "patch": "@@ -482,18 +482,20 @@ $(function () {\n                 self.uploadButton.unbind(\"click\");\n                 self.uploadButton.bind(\"click\", function () {\n                     const proceed = () => {\n-                        self._markWorking(\n-                            isJsonFile\n-                                ? gettext(\"Installing plugins...\")\n-                                : gettext(\"Installing plugin...\"),\n-                            isJsonFile\n-                                ? gettext(\"Installing plugins from uploaded file...\")\n-                                : gettext(\"Installing plugin from uploaded file...\")\n-                        );\n-                        data.formData = {\n-                            dependency_links: self.followDependencyLinks()\n-                        };\n-                        data.submit();\n+                        self.loginState.reauthenticateIfNecessary(() => {\n+                            self._markWorking(\n+                                isJsonFile\n+                                    ? gettext(\"Installing plugins...\")\n+                                    : gettext(\"Installing plugin...\"),\n+                                isJsonFile\n+                                    ? gettext(\"Installing plugins from uploaded file...\")\n+                                    : gettext(\"Installing plugin from uploaded file...\")\n+                            );\n+                            data.formData = {\n+                                dependency_links: self.followDependencyLinks()\n+                            };\n+                            data.submit();\n+                        });\n                     };\n \n                     if (isJsonFile) {\n@@ -1160,12 +1162,14 @@ $(function () {\n             self.selectedPlugins([]);\n         };\n \n-        self.showRepository = function () {\n-            self.repositoryDialog.modal({\n-                minHeight: function () {\n-                    return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\n-                },\n-                show: true\n+        self.showRepository = () => {\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                self.repositoryDialog.modal({\n+                    minHeight: function () {\n+                        return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\n+                    },\n+                    show: true\n+                });\n             });\n         };\n \n@@ -1174,14 +1178,6 @@ $(function () {\n         };\n \n         self.installFromRepository = function (data) {\n-            if (\n-                !self.loginState.hasPermission(\n-                    self.access.permissions.PLUGIN_PLUGINMANAGER_INSTALL\n-                )\n-            ) {\n-                return;\n-            }\n-\n             self.installPlugin(\n                 data.archive,\n                 data.title,\n@@ -1235,110 +1231,117 @@ $(function () {\n                 followDependencyLinks = self.followDependencyLinks();\n             }\n \n-            var workTitle, workText;\n-            if (!reinstall) {\n-                workTitle = gettext(\"Installing plugin...\");\n-                if (name) {\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                var workTitle, workText;\n+                if (!reinstall) {\n+                    workTitle = gettext(\"Installing plugin...\");\n+                    if (name) {\n+                        workText = _.sprintf(\n+                            gettext('Installing plugin \"%(name)s\" from %(url)s...'),\n+                            {url: _.escape(url), name: _.escape(name)}\n+                        );\n+                    } else {\n+                        workText = _.sprintf(\n+                            gettext(\"Installing plugin from %(url)s...\"),\n+                            {\n+                                url: _.escape(url)\n+                            }\n+                        );\n+                    }\n+                } else {\n+                    workTitle = gettext(\"Reinstalling plugin...\");\n                     workText = _.sprintf(\n-                        gettext('Installing plugin \"%(name)s\" from %(url)s...'),\n+                        gettext('Reinstalling plugin \"%(name)s\" from %(url)s...'),\n                         {url: _.escape(url), name: _.escape(name)}\n                     );\n-                } else {\n-                    workText = _.sprintf(gettext(\"Installing plugin from %(url)s...\"), {\n-                        url: _.escape(url)\n-                    });\n                 }\n-            } else {\n-                workTitle = gettext(\"Reinstalling plugin...\");\n-                workText = _.sprintf(\n-                    gettext('Reinstalling plugin \"%(name)s\" from %(url)s...'),\n-                    {url: _.escape(url), name: _.escape(name)}\n-                );\n-            }\n \n-            if (self.multiInstallRunning()) {\n-                workTitle =\n-                    _.sprintf(\"[%(index)d/%(total)d] \", {\n-                        index:\n-                            this.multiInstallInitialSize() -\n-                            self.multiInstallQueue().length,\n-                        total: this.multiInstallInitialSize()\n-                    }) + workTitle;\n-            }\n+                if (self.multiInstallRunning()) {\n+                    workTitle =\n+                        _.sprintf(\"[%(index)d/%(total)d] \", {\n+                            index:\n+                                this.multiInstallInitialSize() -\n+                                self.multiInstallQueue().length,\n+                            total: this.multiInstallInitialSize()\n+                        }) + workTitle;\n+                }\n \n-            self._markWorking(workTitle, workText);\n+                self._markWorking(workTitle, workText);\n \n-            var onSuccess = function (response) {\n-                    self.installUrl(\"\");\n-                    if (response.hasOwnProperty(\"queued_installs\")) {\n-                        self.queuedInstalls(response.queued_installs);\n-                        var text =\n-                            '<div class=\"row-fluid\"><p>' +\n-                            gettext(\"The following plugins are queued to be installed.\") +\n-                            \"</p><ul><li>\" +\n-                            _.map(response.queued_installs, function (info) {\n-                                var plugin = ko.utils.arrayFirst(\n-                                    self.repositoryplugins.paginatedItems(),\n-                                    function (item) {\n-                                        return item.archive === info.url;\n-                                    }\n-                                );\n-                                return plugin.title;\n-                            }).join(\"</li><li>\") +\n-                            \"</li></ul></div>\";\n-                        if (typeof self.installQueuePopup !== \"undefined\") {\n-                            self.installQueuePopup.update({\n-                                text: text\n-                            });\n-                            if (self.installQueuePopup.state === \"closed\") {\n-                                self.installQueuePopup.open();\n+                var onSuccess = function (response) {\n+                        self.installUrl(\"\");\n+                        if (response.hasOwnProperty(\"queued_installs\")) {\n+                            self.queuedInstalls(response.queued_installs);\n+                            var text =\n+                                '<div class=\"row-fluid\"><p>' +\n+                                gettext(\n+                                    \"The following plugins are queued to be installed.\"\n+                                ) +\n+                                \"</p><ul><li>\" +\n+                                _.map(response.queued_installs, function (info) {\n+                                    var plugin = ko.utils.arrayFirst(\n+                                        self.repositoryplugins.paginatedItems(),\n+                                        function (item) {\n+                                            return item.archive === info.url;\n+                                        }\n+                                    );\n+                                    return plugin.title;\n+                                }).join(\"</li><li>\") +\n+                                \"</li></ul></div>\";\n+                            if (typeof self.installQueuePopup !== \"undefined\") {\n+                                self.installQueuePopup.update({\n+                                    text: text\n+                                });\n+                                if (self.installQueuePopup.state === \"closed\") {\n+                                    self.installQueuePopup.open();\n+                                }\n+                            } else {\n+                                self.installQueuePopup = new PNotify({\n+                                    title: gettext(\"Plugin installs queued\"),\n+                                    text: text,\n+                                    type: \"notice\"\n+                                });\n+                            }\n+                            if (self.multiInstallQueue().length > 0) {\n+                                self.performMultiInstallJob();\n+                            } else {\n+                                self.multiInstallRunning(false);\n+                                self.workingDialog.modal(\"hide\");\n+                                self._markDone();\n                             }\n-                        } else {\n-                            self.installQueuePopup = new PNotify({\n-                                title: gettext(\"Plugin installs queued\"),\n-                                text: text,\n-                                type: \"notice\"\n-                            });\n                         }\n-                        if (self.multiInstallQueue().length > 0) {\n-                            self.performMultiInstallJob();\n+                    },\n+                    onError = function (jqXHR) {\n+                        if (jqXHR.status === 409) {\n+                            // there's already a plugin being installed\n+                            self._markDone(\n+                                \"There's already another plugin install in progress.\"\n+                            );\n                         } else {\n-                            self.multiInstallRunning(false);\n-                            self.workingDialog.modal(\"hide\");\n-                            self._markDone();\n+                            self._markDone(\n+                                \"Could not install plugin, unknown error, please consult octoprint.log for details\"\n+                            );\n+                            new PNotify({\n+                                title: gettext(\"Something went wrong\"),\n+                                text: gettext(\"Please consult octoprint.log for details\"),\n+                                type: \"error\",\n+                                hide: false\n+                            });\n                         }\n-                    }\n-                },\n-                onError = function (jqXHR) {\n-                    if (jqXHR.status === 409) {\n-                        // there's already a plugin being installed\n-                        self._markDone(\n-                            \"There's already another plugin install in progress.\"\n-                        );\n-                    } else {\n-                        self._markDone(\n-                            \"Could not install plugin, unknown error, please consult octoprint.log for details\"\n-                        );\n-                        new PNotify({\n-                            title: gettext(\"Something went wrong\"),\n-                            text: gettext(\"Please consult octoprint.log for details\"),\n-                            type: \"error\",\n-                            hide: false\n-                        });\n-                    }\n-                };\n+                    };\n \n-            if (reinstall) {\n-                OctoPrint.plugins.pluginmanager\n-                    .reinstall(reinstall, url, followDependencyLinks, fromRepo)\n-                    .done(onSuccess)\n-                    .fail(onError);\n-            } else {\n-                OctoPrint.plugins.pluginmanager\n-                    .install(url, followDependencyLinks, fromRepo)\n-                    .done(onSuccess)\n-                    .fail(onError);\n-            }\n+                if (reinstall) {\n+                    OctoPrint.plugins.pluginmanager\n+                        .reinstall(reinstall, url, followDependencyLinks, fromRepo)\n+                        .done(onSuccess)\n+                        .fail(onError);\n+                } else {\n+                    OctoPrint.plugins.pluginmanager\n+                        .install(url, followDependencyLinks, fromRepo)\n+                        .done(onSuccess)\n+                        .fail(onError);\n+                }\n+            });\n         };\n \n         self.uninstallPlugin = function (data) {"
        },
        {
          "filename": "src/octoprint/schema/config/access_control.py",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -50,3 +50,6 @@ class AccessControlConfig(BaseModel):\n \n     addRemoteUsers: bool = False\n     \"\"\"If a remote user is not found, add them. Use this only if all users from the remote system can use OctoPrint.\"\"\"\n+\n+    defaultReauthenticationTimeout: int = 5\n+    \"\"\"Default timeout after which to require reauthentication by a user for dangerous changes, in minutes. Defaults to 5 minutes. Set to 0 to disable reauthentication requirements (SECURITY IMPACT!).\"\"\""
        },
        {
          "filename": "src/octoprint/server/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -195,6 +195,7 @@ def on_user_logged_out(sender, user=None):\n def on_user_loaded_from_cookie(sender, user=None):\n     if user:\n         session[\"login_mechanism\"] = \"remember_me\"\n+        session[\"credentials_seen\"] = False\n \n \n def load_user(id):"
        },
        {
          "filename": "src/octoprint/server/api/__init__.py",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -2,6 +2,7 @@\n __license__ = \"GNU Affero General Public License http://www.gnu.org/licenses/agpl.html\"\n __copyright__ = \"Copyright (C) 2014 The OctoPrint Project - Released under terms of the AGPLv3 License\"\n \n+import datetime\n import logging\n \n from flask import (\n@@ -41,6 +42,7 @@\n     no_firstrun_access,\n     passive_login,\n     session_signature,\n+    to_api_credentials_seen,\n )\n from octoprint.settings import settings as s\n from octoprint.settings import valid_boolean_trues\n@@ -329,7 +331,8 @@ def login():\n                 identity_changed.send(\n                     current_app._get_current_object(), identity=Identity(user.get_id())\n                 )\n-                session[\"login_mechanism\"] = \"http\"\n+                session[\"login_mechanism\"] = \"password\"\n+                session[\"credentials_seen\"] = datetime.datetime.now().timestamp()\n \n                 logging.getLogger(__name__).info(\n                     \"Actively logging in user {} from {}\".format(\n@@ -345,6 +348,9 @@ def login():\n                     additional_private=s().get([\"server\", \"ipCheck\", \"trustedSubnets\"]),\n                 )\n                 response[\"_login_mechanism\"] = session[\"login_mechanism\"]\n+                response[\"_credentials_seen\"] = to_api_credentials_seen(\n+                    session[\"credentials_seen\"]\n+                )\n \n                 r = make_response(jsonify(response))\n                 r.delete_cookie(\"active_logout\")"
        },
        {
          "filename": "src/octoprint/server/api/access.py",
          "status": "modified",
          "additions": 37,
          "deletions": 2,
          "patch": "@@ -10,7 +10,11 @@\n from octoprint.access.permissions import Permissions\n from octoprint.server import SUCCESS, groupManager, userManager\n from octoprint.server.api import api, valid_boolean_trues\n-from octoprint.server.util.flask import no_firstrun_access\n+from octoprint.server.util.flask import (\n+    ensure_credentials_checked_recently,\n+    no_firstrun_access,\n+    require_credentials_checked_recently,\n+)\n \n # ~~ permission api\n \n@@ -32,6 +36,7 @@ def get_groups():\n \n @api.route(\"/access/groups\", methods=[\"POST\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def add_group():\n     data = request.get_json()\n@@ -77,6 +82,7 @@ def get_group(key):\n \n @api.route(\"/access/groups/<key>\", methods=[\"PUT\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def update_group(key):\n     data = request.get_json()\n@@ -107,6 +113,7 @@ def update_group(key):\n \n @api.route(\"/access/groups/<key>\", methods=[\"DELETE\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def remove_group(key):\n     try:\n@@ -130,6 +137,7 @@ def get_users():\n \n @api.route(\"/access/users\", methods=[\"POST\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def add_user():\n     data = request.get_json()\n@@ -179,6 +187,7 @@ def get_user(username):\n \n @api.route(\"/access/users/<username>\", methods=[\"PUT\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def update_user(username):\n     user = userManager.find_user(username)\n@@ -208,8 +217,15 @@ def update_user(username):\n \n @api.route(\"/access/users/<username>\", methods=[\"DELETE\"])\n @no_firstrun_access\n+@require_credentials_checked_recently\n @Permissions.ADMIN.require(403)\n def remove_user(username):\n+    if not userManager.enabled:\n+        return jsonify(SUCCESS)\n+\n+    if current_user.get_name() == username:\n+        abort(400, description=\"You cannot delete yourself\")\n+\n     try:\n         userManager.remove_user(username)\n         return get_users()\n@@ -236,13 +252,20 @@ def change_password_for_user(username):\n         if \"password\" not in data or not data[\"password\"]:\n             abort(400, description=\"new password is missing\")\n \n-        if not current_user.has_permission(Permissions.ADMIN) or \"current\" in data:\n+        if current_user.get_name() == username:\n             if \"current\" not in data or not data[\"current\"]:\n                 abort(400, description=\"current password is missing\")\n \n             if not userManager.check_password(username, data[\"current\"]):\n                 abort(403, description=\"Invalid current password\")\n \n+        elif current_user.has_permission(Permissions.ADMIN):\n+            ensure_credentials_checked_recently()\n+\n+        else:\n+            # this should never happen\n+            abort(403, description=\"You are not allowed to change this user's password\")\n+\n         try:\n             userManager.change_user_password(username, data[\"password\"])\n         except users.UnknownUser:\n@@ -285,6 +308,10 @@ def change_settings_for_user(username):\n     ):\n         abort(403)\n \n+    if current_user.get_name() != username:\n+        # this must be an admin, so we need to ensure credentials were checked\n+        ensure_credentials_checked_recently()\n+\n     data = request.get_json()\n \n     try:\n@@ -305,6 +332,10 @@ def delete_apikey_for_user(username):\n             or current_user.has_permission(Permissions.ADMIN)\n         )\n     ):\n+        if current_user.get_name() != username:\n+            # this must be an admin, so we need to ensure credentials were checked\n+            ensure_credentials_checked_recently()\n+\n         try:\n             userManager.delete_api_key(username)\n         except users.UnknownUser:\n@@ -328,6 +359,10 @@ def generate_apikey_for_user(username):\n             or current_user.has_permission(Permissions.ADMIN)\n         )\n     ):\n+        if current_user.get_name() != username:\n+            # this must be an admin, so we need to ensure credentials were checked\n+            ensure_credentials_checked_recently()\n+\n         try:\n             apikey = userManager.generate_api_key(username)\n         except users.UnknownUser:"
        },
        {
          "filename": "src/octoprint/server/api/settings.py",
          "status": "modified",
          "additions": 13,
          "deletions": 4,
          "patch": "@@ -13,7 +13,11 @@\n from octoprint.access.permissions import Permissions\n from octoprint.server import pluginManager, printer, userManager\n from octoprint.server.api import NO_CONTENT, api\n-from octoprint.server.util.flask import no_firstrun_access, with_revalidation_checking\n+from octoprint.server.util.flask import (\n+    credentials_checked_recently,\n+    no_firstrun_access,\n+    with_revalidation_checking,\n+)\n from octoprint.settings import settings, valid_boolean_trues\n from octoprint.timelapse import configure_timelapse\n from octoprint.webcams import (\n@@ -91,6 +95,9 @@ def hash_update(value):\n     # and likewise if the role of the user changes\n     hash_update(repr(roles))\n \n+    # of if the user reauthenticates\n+    hash_update(repr(credentials_checked_recently()))\n+\n     return hash.hexdigest()\n \n \n@@ -118,7 +125,9 @@ def getSettings():\n \n     data = {\n         \"api\": {\n-            \"key\": s.get([\"api\", \"key\"]) if Permissions.ADMIN.can() else None,\n+            \"key\": s.get([\"api\", \"key\"])\n+            if Permissions.ADMIN.can() and credentials_checked_recently()\n+            else None,\n             \"allowCrossOrigin\": s.get([\"api\", \"allowCrossOrigin\"]),\n         },\n         \"appearance\": {\n@@ -458,15 +467,15 @@ def setSettings():\n \n @api.route(\"/settings/apikey\", methods=[\"POST\"])\n @no_firstrun_access\n-@Permissions.SETTINGS.require(403)\n+@Permissions.ADMIN.require(403)\n def generateApiKey():\n     apikey = settings().generateApiKey()\n     return jsonify(apikey=apikey)\n \n \n @api.route(\"/settings/apikey\", methods=[\"DELETE\"])\n @no_firstrun_access\n-@Permissions.SETTINGS.require(403)\n+@Permissions.ADMIN.require(403)\n def deleteApiKey():\n     settings().deleteApiKey()\n     return NO_CONTENT"
        },
        {
          "filename": "src/octoprint/server/util/__init__.py",
          "status": "modified",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -3,6 +3,7 @@\n __copyright__ = \"Copyright (C) 2014 The OctoPrint Project - Released under terms of the AGPLv3 License\"\n \n import base64\n+import datetime\n import logging\n import sys\n \n@@ -102,6 +103,18 @@ def loginUser(user, remember=False, login_mechanism=None):\n         )\n         if login_mechanism:\n             _flask.session[\"login_mechanism\"] = login_mechanism\n+            _flask.session[\"credentials_seen\"] = (\n+                datetime.datetime.now().timestamp()\n+                if login_mechanism\n+                in (\n+                    \"password\",\n+                    \"apikey\",\n+                    \"authheader\",\n+                    \"remote_user\",\n+                    \"basic_auth\",\n+                )\n+                else False\n+            )\n         return True\n     return False\n \n@@ -263,6 +276,7 @@ def get_user_for_remote_user_header(request):\n \n     if user:\n         _flask.session[\"login_mechanism\"] = \"remote_user\"\n+        _flask.session[\"credentials_seen\"] = datetime.datetime.now().timestamp()\n     return user\n \n \n@@ -296,6 +310,7 @@ def get_user_for_authorization_header(header):\n \n     if user:\n         _flask.session[\"login_mechanism\"] = \"basic_auth\"\n+        _flask.session[\"credentials_seen\"] = datetime.datetime.now().timestamp()\n     return user\n \n \n@@ -382,6 +397,39 @@ def has_permissions(*permissions):\n     return all(map(lambda p: p.can(), permissions))\n \n \n+def require_fresh_login_with(permissions=None, user_id=None):\n+    \"\"\"\n+    Requires a login with fresh credentials.\n+\n+    Args:\n+        permissions: list of all permissions required to pass the check\n+        user_id: required user to pass the check\n+\n+    Returns: a flask redirect response to return if a login is required, or None\n+    \"\"\"\n+\n+    from octoprint.server import current_user, userManager\n+    from octoprint.server.util.flask import credentials_checked_recently\n+\n+    response = require_login_with(permissions=permissions, user_id=user_id)\n+    if response is not None:\n+        return response\n+\n+    login_kwargs = {\n+        \"redirect\": _flask.request.script_root + _flask.request.full_path,\n+        \"reauthenticate\": \"true\",\n+        \"user_id\": current_user.get_id(),\n+    }\n+    if (\n+        _flask.request.headers.get(\"X-Preemptive-Recording\", \"no\") == \"no\"\n+        and userManager.has_been_customized()\n+    ):\n+        if not credentials_checked_recently():\n+            return _flask.redirect(_flask.url_for(\"login\", **login_kwargs))\n+\n+    return None\n+\n+\n def require_login_with(permissions=None, user_id=None):\n     \"\"\"\n     Requires a login with the given permissions and/or user id."
        },
        {
          "filename": "src/octoprint/server/util/flask.py",
          "status": "modified",
          "additions": 57,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@\n import os\n import threading\n import time\n-from datetime import datetime, timedelta\n+from datetime import datetime, timedelta, timezone\n from typing import Any, Union\n \n import flask\n@@ -732,6 +732,7 @@ def determine_user(u):\n                             f\"Logging in user {autologin_as} from {remote_address} via autologin\"\n                         )\n                         flask.session[\"login_mechanism\"] = \"autologin\"\n+                        flask.session[\"credentials_seen\"] = False\n                         return autologin_user\n             except Exception:\n                 logger.exception(\n@@ -753,9 +754,23 @@ def determine_user(u):\n     )\n     if flask.session.get(\"login_mechanism\") is not None:\n         response[\"_login_mechanism\"] = flask.session.get(\"login_mechanism\")\n+    response[\"_credentials_seen\"] = to_api_credentials_seen(\n+        flask.session.get(\"credentials_seen\", False)\n+    )\n     return flask.jsonify(response)\n \n \n+def to_api_credentials_seen(credentials_seen):\n+    if not credentials_seen:\n+        return False\n+\n+    return (\n+        datetime.fromtimestamp(credentials_seen, tz=timezone.utc)\n+        .replace(microsecond=0)\n+        .isoformat()\n+    )\n+\n+\n # ~~ rate limiting helper\n \n \n@@ -1636,6 +1651,47 @@ def decorated_view(*args, **kwargs):\n     return decorated_view\n \n \n+def credentials_checked_recently():\n+    minutes = settings().getInt([\"accessControl\", \"defaultReauthenticationTimeout\"])\n+    if not minutes:\n+        return True\n+\n+    credentials_seen = flask.session.get(\"credentials_seen\")\n+    now = datetime.now()\n+\n+    try:\n+        if credentials_seen and datetime.fromtimestamp(\n+            credentials_seen\n+        ) > now - timedelta(minutes=minutes):\n+            # credentials seen less than the set minutes ago, proceed\n+            return True\n+    except Exception:\n+        logging.getLogger(__name__).exception(\"Error while checking for seen credentials\")\n+        pass\n+\n+    return False\n+\n+\n+def ensure_credentials_checked_recently():\n+    if not credentials_checked_recently():\n+        flask.abort(403, description=\"Please reauthenticate with your credentials\")\n+\n+\n+def require_credentials_checked_recently(func):\n+    \"\"\"\n+    If you decorate a view with this, it will ensure that only users who entered their password\n+    recently in this login session are allowed to proceed. Otherwise it will cause a HTTP 403 status code\n+    to be returned by the decorated resource.\n+    \"\"\"\n+\n+    @functools.wraps(func)\n+    def decorated_view(*args, **kwargs):\n+        ensure_credentials_checked_recently()\n+        return func(*args, **kwargs)\n+\n+    return decorated_view\n+\n+\n def get_remote_address(request):\n     forwardedFor = request.headers.get(\"X-Forwarded-For\", None)\n     if forwardedFor is not None:"
        },
        {
          "filename": "src/octoprint/server/views.py",
          "status": "modified",
          "additions": 14,
          "deletions": 3,
          "patch": "@@ -41,10 +41,12 @@\n )\n from octoprint.server.util import (\n     has_permissions,\n+    require_fresh_login_with,\n     require_login_with,\n     validate_local_redirect,\n )\n from octoprint.server.util.csrf import add_csrf_cookie\n+from octoprint.server.util.flask import credentials_checked_recently\n from octoprint.settings import settings\n from octoprint.util import sv, to_bytes, to_unicode\n from octoprint.util.version import get_python_version_string\n@@ -225,9 +227,12 @@ def login():\n         permissions = [Permissions.STATUS, Permissions.SETTINGS_READ]\n \n     user_id = request.args.get(\"user_id\", \"\")\n+    reauthenticate = request.args.get(\"reauthenticate\", \"false\").lower() == \"true\"\n \n-    if (not user_id or current_user.get_id() == user_id) and has_permissions(\n-        *permissions\n+    if (\n+        (not user_id or current_user.get_id() == user_id)\n+        and has_permissions(*permissions)\n+        and (not reauthenticate or credentials_checked_recently())\n     ):\n         return redirect(redirect_url)\n \n@@ -237,6 +242,7 @@ def login():\n         \"permission_names\": map(lambda x: x.get_name(), permissions),\n         \"user_id\": user_id,\n         \"logged_in\": not current_user.is_anonymous,\n+        \"reauthenticate\": reauthenticate,\n     }\n \n     try:\n@@ -257,7 +263,7 @@ def login():\n @app.route(\"/recovery\")\n @app.route(\"/recovery/\")\n def recovery():\n-    response = require_login_with(permissions=[Permissions.ADMIN])\n+    response = require_fresh_login_with(permissions=[Permissions.ADMIN])\n     if response:\n         return response\n \n@@ -417,6 +423,9 @@ def wizard_active(templates):\n     enable_webcam = settings().getBoolean([\"webcam\", \"webcamEnabled\"])\n     enable_temperature_graph = settings().get([\"feature\", \"temperatureGraph\"])\n     sockjs_connect_timeout = settings().getInt([\"devel\", \"sockJsConnectTimeout\"])\n+    reauthentication_timeout = settings().getInt(\n+        [\"accessControl\", \"defaultReauthenticationTimeout\"]\n+    )\n \n     def default_template_filter(template_type, template_key):\n         if template_type == \"tab\":\n@@ -431,6 +440,7 @@ def default_template_filter(template_type, template_key):\n         enable_webcam,\n         enable_temperature_graph,\n         sockjs_connect_timeout,\n+        reauthentication_timeout,\n         connectivityChecker.online,\n         wizard_active(_templates.get(locale)),\n     ] + sorted(\n@@ -647,6 +657,7 @@ def default_view():\n                 \"enableLoadingAnimation\": enable_loading_animation,\n                 \"enableSdSupport\": enable_sd_support,\n                 \"sockJsConnectTimeout\": sockjs_connect_timeout * 1000,\n+                \"reauthenticationTimeout\": reauthentication_timeout,\n                 \"wizard\": wizard,\n                 \"online\": connectivityChecker.online,\n                 \"now\": now,"
        },
        {
          "filename": "src/octoprint/static/js/app/client/settings.js",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -48,6 +48,10 @@\n         return this.base.postJson(apiKeyUrl, opts);\n     };\n \n+    OctoPrintSettingsClient.prototype.deleteApiKey = function (opts) {\n+        return this.base.delete(apiKeyUrl, opts);\n+    };\n+\n     OctoPrintClient.registerComponent(\"settings\", OctoPrintSettingsClient);\n     return OctoPrintSettingsClient;\n });"
        },
        {
          "filename": "src/octoprint/static/js/app/helpers.js",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -685,6 +685,14 @@ function formatNumberK(num) {\n     }\n }\n \n+function rsplit(str, sep, limit) {\n+    // copy of Python's rsplit in JS\n+    // adapted from https://stackoverflow.com/a/5202185\n+    // caution: other than split in JS, this limit does limit the splits, NOT the number of parts\n+    const parts = str.split(sep);\n+    return limit ? [parts.slice(0, -limit).join(sep)].concat(parts.slice(-limit)) : parts;\n+}\n+\n function pnotifyAdditionalInfo(inner) {\n     return (\n         '<div class=\"pnotify_additional_info\">' +"
        },
        {
          "filename": "src/octoprint/static/js/app/viewmodels/access.js",
          "status": "modified",
          "additions": 237,
          "deletions": 124,
          "patch": "@@ -35,6 +35,14 @@ $(function () {\n \n             self.currentUser = ko.observable(self.emptyUser).extend({notify: \"always\"});\n \n+            self.isCurrentUser = (user) => {\n+                return user && user.name && user.name == access.loginState.username();\n+            };\n+\n+            self.isDeleteUserEnabled = (user) => {\n+                return !self.isCurrentUser(user);\n+            };\n+\n             self.editor = {\n                 name: ko.observable(undefined),\n                 groups: ko.observableArray([]),\n@@ -160,22 +168,28 @@ $(function () {\n             self.showAddUserDialog = function () {\n                 if (!CONFIG_ACCESS_CONTROL) return;\n \n-                self.currentUser(undefined);\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.currentUser(undefined);\n \n-                $('ul.nav-pills a[data-toggle=\"tab\"]:first', self.userEditorDialog).tab(\n-                    \"show\"\n-                );\n-                self.userEditorDialog\n-                    .modal({\n-                        minHeight: function () {\n-                            return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\n-                        }\n-                    })\n-                    .css({\n-                        \"margin-left\": function () {\n-                            return -($(this).width() / 2);\n-                        }\n-                    });\n+                    $(\n+                        'ul.nav-pills a[data-toggle=\"tab\"]:first',\n+                        self.userEditorDialog\n+                    ).tab(\"show\");\n+                    self.userEditorDialog\n+                        .modal({\n+                            minHeight: function () {\n+                                return Math.max(\n+                                    $.fn.modal.defaults.maxHeight() - 80,\n+                                    250\n+                                );\n+                            }\n+                        })\n+                        .css({\n+                            \"margin-left\": function () {\n+                                return -($(this).width() / 2);\n+                            }\n+                        });\n+                });\n             };\n \n             self.confirmAddUser = function () {\n@@ -189,10 +203,12 @@ $(function () {\n                     active: self.editor.active()\n                 };\n \n-                self.addUser(user).done(function () {\n-                    // close dialog\n-                    self.currentUser(undefined);\n-                    self.userEditorDialog.modal(\"hide\");\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.addUser(user).done(function () {\n+                        // close dialog\n+                        self.currentUser(undefined);\n+                        self.userEditorDialog.modal(\"hide\");\n+                    });\n                 });\n             };\n \n@@ -222,17 +238,19 @@ $(function () {\n                         });\n                 };\n \n-                OctoPrint.users\n-                    .get(user.name)\n-                    .done(function (data) {\n-                        process(data);\n-                    })\n-                    .fail(function () {\n-                        log.warn(\n-                            \"Could not fetch current user data, proceeding with client side data copy\"\n-                        );\n-                        process(user);\n-                    });\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    OctoPrint.users\n+                        .get(user.name)\n+                        .done(function (data) {\n+                            process(data);\n+                        })\n+                        .fail(function () {\n+                            log.warn(\n+                                \"Could not fetch current user data, proceeding with client side data copy\"\n+                            );\n+                            process(user);\n+                        });\n+                });\n             };\n \n             self.confirmEditUser = function () {\n@@ -243,45 +261,97 @@ $(function () {\n                 user.groups = self.editor.groups();\n                 user.permissions = self.editor.permissions();\n \n-                self.updateUser(user).done(function () {\n-                    // close dialog\n-                    self.currentUser(undefined);\n-                    self.userEditorDialog.modal(\"hide\");\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.updateUser(user).done(function () {\n+                        // close dialog\n+                        self.currentUser(undefined);\n+                        self.userEditorDialog.modal(\"hide\");\n+                    });\n+                });\n+            };\n+\n+            self.confirmRemoveUser = (user) => {\n+                if (!CONFIG_ACCESS_CONTROL) return;\n+\n+                if (user.name === access.loginState.username()) {\n+                    // we do not allow to delete ourselves\n+                    new PNotify({\n+                        title: gettext(\"Not possible\"),\n+                        text: gettext(\"You may not delete your own account.\"),\n+                        type: \"error\"\n+                    });\n+                    return $.Deferred()\n+                        .reject(\"You may not delete your own account\")\n+                        .promise();\n+                }\n+\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    showConfirmationDialog({\n+                        title: gettext(\"Are you sure?\"),\n+                        message: _.sprintf(\n+                            gettext('You are about to delete the user \"%(name)s\".'),\n+                            {name: _.escape(user.name)}\n+                        ),\n+                        proceed: gettext(\"Delete\"),\n+                        onproceed: () => {\n+                            self.removeUser(user);\n+                        }\n+                    });\n                 });\n             };\n \n             self.showChangePasswordDialog = function (user) {\n                 if (!CONFIG_ACCESS_CONTROL) return;\n \n-                self.currentUser(user);\n-                self.changePasswordDialog.modal(\"show\");\n+                const proceed = () => {\n+                    self.currentUser(user);\n+                    self.changePasswordDialog.modal(\"show\");\n+                };\n+\n+                if (self.isCurrentUser(user)) {\n+                    proceed();\n+                } else {\n+                    access.loginState.reauthenticateIfNecessary(proceed);\n+                }\n             };\n \n             self.confirmChangePassword = function () {\n                 if (!CONFIG_ACCESS_CONTROL) return;\n \n-                self.updatePassword(\n-                    self.currentUser().name,\n-                    self.editor.password(),\n-                    self.editor.currentPassword()\n-                )\n-                    .done(function () {\n-                        // close dialog\n-                        self.currentUser(undefined);\n-                        self.changePasswordDialog.modal(\"hide\");\n-                    })\n-                    .fail(function (xhr) {\n-                        if (xhr.status === 403) {\n-                            self.currentPasswordMismatch(true);\n-                        }\n-                    });\n+                const proceed = () => {\n+                    self.updatePassword(\n+                        self.currentUser().name,\n+                        self.editor.password(),\n+                        self.editor.currentPassword()\n+                    )\n+                        .done(function () {\n+                            // close dialog\n+                            self.currentUser(undefined);\n+                            self.changePasswordDialog.modal(\"hide\");\n+                        })\n+                        .fail(function (xhr) {\n+                            if (xhr.status === 403) {\n+                                self.currentPasswordMismatch(true);\n+                            }\n+                        });\n+                };\n+\n+                if (self.isCurrentUser()) {\n+                    proceed();\n+                } else {\n+                    access.loginState.reauthenticateIfNecessary(proceed);\n+                }\n             };\n \n             self.confirmGenerateApikey = function () {\n                 if (!CONFIG_ACCESS_CONTROL) return;\n \n-                self.generateApikey(self.currentUser().name).done(function (response) {\n-                    self._updateApikey(response.apikey);\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.generateApikey(self.currentUser().name).done(function (\n+                        response\n+                    ) {\n+                        self._updateApikey(response.apikey);\n+                    });\n                 });\n             };\n \n@@ -297,8 +367,10 @@ $(function () {\n             self.confirmDeleteApikey = function () {\n                 if (!CONFIG_ACCESS_CONTROL) return;\n \n-                self.deleteApikey(self.currentUser().name).done(function () {\n-                    self._updateApikey(undefined);\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.deleteApikey(self.currentUser().name).done(function () {\n+                        self._updateApikey(undefined);\n+                    });\n                 });\n             };\n \n@@ -315,10 +387,16 @@ $(function () {\n                 if (!user) {\n                     throw OctoPrint.InvalidArgumentError(\"user must be set\");\n                 }\n-                if (!access.loginState.hasPermissionKo(access.permissions.ADMIN))\n+                if (!access.loginState.hasPermissionKo(access.permissions.ADMIN)) {\n                     return $.Deferred()\n                         .reject(\"You are not authorized to perform this action\")\n                         .promise();\n+                }\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n \n                 return OctoPrint.access.users.add(user).done(self.fromResponse);\n             };\n@@ -327,40 +405,29 @@ $(function () {\n                 if (!user) {\n                     throw OctoPrint.InvalidArgumentError(\"user must be set\");\n                 }\n-                if (!access.loginState.hasPermissionKo(access.permissions.ADMIN))\n+                if (!access.loginState.hasPermissionKo(access.permissions.ADMIN)) {\n                     return $.Deferred()\n                         .reject(\"You are not authorized to perform this action\")\n                         .promise();\n-\n-                if (user.name === access.loginState.username()) {\n-                    // we do not allow to delete ourselves\n-                    new PNotify({\n-                        title: gettext(\"Not possible\"),\n-                        text: gettext(\"You may not delete your own account.\"),\n-                        type: \"error\"\n-                    });\n+                }\n+                if (!access.loginState.credentialsSeen()) {\n                     return $.Deferred()\n-                        .reject(\"You may not delete your own account\")\n+                        .reject(\"You need to reauthenticate to perform this action\")\n                         .promise();\n                 }\n \n-                showConfirmationDialog({\n-                    title: gettext(\"Are you sure?\"),\n-                    message: _.sprintf(\n-                        gettext('You are about to delete the user \"%(name)s\".'),\n-                        {name: _.escape(user.name)}\n-                    ),\n-                    proceed: gettext(\"Delete\"),\n-                    onproceed: function () {\n-                        OctoPrint.access.users.delete(user.name).done(self.fromResponse);\n-                    }\n-                });\n+                return OctoPrint.access.users.delete(user.name).done(self.fromResponse);\n             };\n \n             self.updateUser = function (user) {\n                 if (!user) {\n                     throw OctoPrint.InvalidArgumentError(\"user must be set\");\n                 }\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n \n                 return OctoPrint.access.users\n                     .update(\n@@ -374,16 +441,31 @@ $(function () {\n             };\n \n             self.updatePassword = function (username, password, current) {\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n                 return OctoPrint.access.users.changePassword(username, password, current);\n             };\n \n             self.generateApikey = function (username) {\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n                 return OctoPrint.access.users.generateApiKey(username).done(function () {\n                     self.requestData();\n                 });\n             };\n \n             self.deleteApikey = function (username) {\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n                 return OctoPrint.access.users.resetApiKey(username);\n             };\n \n@@ -576,21 +658,27 @@ $(function () {\n             };\n \n             self.showAddGroupDialog = function () {\n-                self.currentGroup(undefined);\n-                $('ul.nav-pills a[data-toggle=\"tab\"]:first', self.groupEditorDialog).tab(\n-                    \"show\"\n-                );\n-                self.groupEditorDialog\n-                    .modal({\n-                        minHeight: function () {\n-                            return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\n-                        }\n-                    })\n-                    .css({\n-                        \"margin-left\": function () {\n-                            return -($(this).width() / 2);\n-                        }\n-                    });\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.currentGroup(undefined);\n+                    $(\n+                        'ul.nav-pills a[data-toggle=\"tab\"]:first',\n+                        self.groupEditorDialog\n+                    ).tab(\"show\");\n+                    self.groupEditorDialog\n+                        .modal({\n+                            minHeight: function () {\n+                                return Math.max(\n+                                    $.fn.modal.defaults.maxHeight() - 80,\n+                                    250\n+                                );\n+                            }\n+                        })\n+                        .css({\n+                            \"margin-left\": function () {\n+                                return -($(this).width() / 2);\n+                            }\n+                        });\n+                });\n             };\n \n             self.confirmAddGroup = function () {\n@@ -617,21 +705,27 @@ $(function () {\n             self.showEditGroupDialog = function (group) {\n                 if (!group.changeable) return;\n \n-                self.currentGroup(group);\n-                $('ul.nav-pills a[data-toggle=\"tab\"]:first', self.groupEditorDialog).tab(\n-                    \"show\"\n-                );\n-                self.groupEditorDialog\n-                    .modal({\n-                        minHeight: function () {\n-                            return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\n-                        }\n-                    })\n-                    .css({\n-                        \"margin-left\": function () {\n-                            return -($(this).width() / 2);\n-                        }\n-                    });\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    self.currentGroup(group);\n+                    $(\n+                        'ul.nav-pills a[data-toggle=\"tab\"]:first',\n+                        self.groupEditorDialog\n+                    ).tab(\"show\");\n+                    self.groupEditorDialog\n+                        .modal({\n+                            minHeight: function () {\n+                                return Math.max(\n+                                    $.fn.modal.defaults.maxHeight() - 80,\n+                                    250\n+                                );\n+                            }\n+                        })\n+                        .css({\n+                            \"margin-left\": function () {\n+                                return -($(this).width() / 2);\n+                            }\n+                        });\n+                });\n             };\n \n             self.confirmEditGroup = function () {\n@@ -653,6 +747,24 @@ $(function () {\n                 });\n             };\n \n+            self.confirmRemoveGroup = (group) => {\n+                if (!group.removable) return;\n+\n+                access.loginState.reauthenticateIfNecessary(() => {\n+                    showConfirmationDialog({\n+                        title: gettext(\"Are you sure?\"),\n+                        message: _.sprintf(\n+                            gettext('You are about to delete the group \"%(name)s\".'),\n+                            {name: _.escape(group.name)}\n+                        ),\n+                        proceed: gettext(\"Delete\"),\n+                        onproceed: () => {\n+                            self.removeGroup(group);\n+                        }\n+                    });\n+                });\n+            };\n+\n             //~~ Framework\n \n             self.onStartup = function () {\n@@ -665,6 +777,11 @@ $(function () {\n                 if (!group) {\n                     throw OctoPrint.InvalidArgumentError(\"group must be set\");\n                 }\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n \n                 return OctoPrint.access.groups.add(group).done(self.fromResponse);\n             };\n@@ -673,31 +790,27 @@ $(function () {\n                 if (!group) {\n                     throw OctoPrint.InvalidArgumentError(\"group must be set\");\n                 }\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n \n-                if (!group.removable) return;\n-\n-                showConfirmationDialog({\n-                    title: gettext(\"Are you sure?\"),\n-                    message: _.sprintf(\n-                        gettext('You are about to delete the group \"%(name)s\".'),\n-                        {name: _.escape(group.name)}\n-                    ),\n-                    proceed: gettext(\"Delete\"),\n-                    onproceed: function () {\n-                        OctoPrint.access.groups\n-                            .delete(group.key)\n-                            .done(function (response) {\n-                                self.fromResponse(response);\n-                                access.users.requestData();\n-                            });\n-                    }\n+                OctoPrint.access.groups.delete(group.key).done((response) => {\n+                    self.fromResponse(response);\n+                    access.users.requestData();\n                 });\n             };\n \n             self.updateGroup = function (group) {\n                 if (!group) {\n                     throw OctoPrint.InvalidArgumentError(\"group must be set\");\n                 }\n+                if (!access.loginState.credentialsSeen()) {\n+                    return $.Deferred()\n+                        .reject(\"You need to reauthenticate to perform this action\")\n+                        .promise();\n+                }\n \n                 return OctoPrint.access.groups.update(group).done(self.fromResponse);\n             };"
        },
        {
          "filename": "src/octoprint/static/js/app/viewmodels/loginstate.js",
          "status": "modified",
          "additions": 91,
          "deletions": 1,
          "patch": "@@ -6,6 +6,10 @@ $(function () {\n         self.loginPass = ko.observable(\"\");\n         self.loginRemember = ko.observable(false);\n \n+        self.reauthenticateDialog = undefined;\n+        self.reauthenticatePass = ko.observable(\"\");\n+        self.reauthenticateFailed = ko.observable(false);\n+\n         self.loggedIn = ko.observable(undefined);\n         self.username = ko.observable(undefined);\n         self.userneeds = ko.observable(undefined);\n@@ -17,6 +21,7 @@ $(function () {\n \n         self.currentUser = ko.observable(undefined);\n         self.currentLoginMechanism = ko.observable(undefined);\n+        self.credentialsSeen = ko.observable(undefined);\n \n         self.elementUsernameInput = undefined;\n         self.elementPasswordInput = undefined;\n@@ -74,6 +79,86 @@ $(function () {\n                 .done(self.updateCurrentUserData);\n         };\n \n+        self._reauthenticated = false;\n+\n+        self.showReauthenticationDialog = () => {\n+            const result = $.Deferred();\n+\n+            self._reauthenticated = false;\n+            self.reauthenticateDialog.on(\"shown\", function () {\n+                $(\"input[type=password]\", self.reauthenticateDialog).focus();\n+            });\n+            self.reauthenticateDialog.on(\"hidden\", () => {\n+                self.reauthenticatePass(\"\");\n+                self.reauthenticateFailed(false);\n+                if (self._reauthenticated) {\n+                    result.resolve();\n+                } else {\n+                    result.reject();\n+                }\n+            });\n+            self.reauthenticateDialog.modal(\"show\");\n+\n+            return result.promise();\n+        };\n+\n+        self.reauthenticate = () => {\n+            const user = self.currentUser().name;\n+            const pass = self.reauthenticatePass();\n+            return OctoPrint.browser\n+                .login(user, pass)\n+                .done((response) => {\n+                    self.fromResponse(response);\n+                    self.reauthenticateFailed(false);\n+                    self._reauthenticated = self.credentialsSeen();\n+                    $(\"#reauthenticate_dialog\").modal(\"hide\");\n+                })\n+                .fail((response) => {\n+                    self.reauthenticatePass(\"\");\n+                    self.reauthenticateFailed(true);\n+                });\n+        };\n+\n+        self.reauthenticateIfNecessary = (callback) => {\n+            if (!self.checkCredentialsSeen()) {\n+                self.forceReauthentication(callback);\n+            } else {\n+                callback();\n+            }\n+        };\n+\n+        self.forceReauthentication = (callback) => {\n+            self.showReauthenticationDialog()\n+                .done(() => {\n+                    callback();\n+                })\n+                .fail(() => {\n+                    // Do nothing\n+                });\n+        };\n+\n+        self.checkCredentialsSeen = () => {\n+            if (CONFIG_REAUTHENTICATION_TIMEOUT <= 0) return true;\n+\n+            const credentialsSeen = self.credentialsSeen();\n+            if (!credentialsSeen) {\n+                return false;\n+            }\n+\n+            const now = new Date();\n+            const seen = new Date(credentialsSeen);\n+            return now - seen < CONFIG_REAUTHENTICATION_TIMEOUT * 60 * 1000;\n+        };\n+\n+        self.afterReauthenticationTimeout = (callback, timeout) => {\n+            if (CONFIG_REAUTHENTICATION_TIMEOUT <= 0) return;\n+            if (timeout) window.clearTimeout(timeout);\n+            return window.setTimeout(\n+                callback,\n+                (CONFIG_REAUTHENTICATION_TIMEOUT * 60 + 10) * 1000\n+            );\n+        };\n+\n         self.requestData = function () {\n             return OctoPrint.browser\n                 .passiveLogin()\n@@ -91,6 +176,7 @@ $(function () {\n                 if (response && response.name) {\n                     self.loggedIn(true);\n                     self.currentLoginMechanism(response._login_mechanism);\n+                    self.credentialsSeen(response._credentials_seen);\n                     self.updateCurrentUserData(response);\n                     if (!currentLoggedIn || currentLoggedIn === undefined) {\n                         callViewModels(self.allViewModels, \"onUserLoggedIn\", [response]);\n@@ -242,6 +328,7 @@ $(function () {\n                     self.loginUser(\"\");\n                     self.loginPass(\"\");\n                     self.loginRemember(false);\n+                    self.reauthenticatePass(\"\");\n \n                     if (history && history.replaceState) {\n                         history.replaceState(\n@@ -322,6 +409,8 @@ $(function () {\n         };\n \n         self.onStartup = function () {\n+            self.reauthenticateDialog = $(\"#reauthenticate_dialog\");\n+\n             self.elementUsernameInput = $(\"#login_user\");\n             self.elementPasswordInput = $(\"#login_pass\");\n             self.elementLoginButton = $(\"#login_button\");\n@@ -476,6 +565,7 @@ $(function () {\n     }\n \n     OCTOPRINT_VIEWMODELS.push({\n-        construct: LoginStateViewModel\n+        construct: LoginStateViewModel,\n+        elements: [\"#reauthenticate_dialog\"]\n     });\n });"
        },
        {
          "filename": "src/octoprint/static/js/app/viewmodels/settings.js",
          "status": "modified",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -127,6 +127,8 @@ $(function () {\n         self.api_key = ko.observable(undefined);\n         self.api_allowCrossOrigin = ko.observable(undefined);\n \n+        self.apiKeyVisible = ko.observable(false);\n+\n         self.appearance_name = ko.observable(undefined);\n         self.appearance_color = ko.observable(undefined);\n         self.appearance_colorTransparent = ko.observable();\n@@ -703,10 +705,36 @@ $(function () {\n             );\n         };\n \n+        self.deleteApiKey = () => {\n+            if (!CONFIG_ACCESS_CONTROL) return;\n+            if (!self.api_key()) return;\n+\n+            showConfirmationDialog(\n+                gettext(\n+                    \"This will delete the API Key. It will cease to to function immediately.\"\n+                ),\n+                function () {\n+                    OctoPrint.settings.deleteApiKey().done(() => {\n+                        self.api_key(undefined);\n+                    });\n+                }\n+            );\n+        };\n+\n         self.copyApiKey = function () {\n             copyToClipboard(self.api_key());\n         };\n \n+        self.revealingApiKey = ko.observable(false);\n+        self.revealApiKey = () => {\n+            self.loginState.reauthenticateIfNecessary(() => {\n+                self.revealingApiKey(true);\n+                self.requestData().always(() => {\n+                    self.revealingApiKey(false);\n+                });\n+            });\n+        };\n+\n         self.showTranslationManager = function () {\n             self.translationManagerDialog.modal();\n             return false;\n@@ -1067,6 +1095,7 @@ $(function () {\n             return data;\n         };\n \n+        self.reauthenticationTimeout = undefined;\n         self.fromResponse = function (response, local) {\n             // server side changes to set\n             var serverChangedData;\n@@ -1254,6 +1283,15 @@ $(function () {\n             mapToObservables(serverChangedData, specialMappings, clientChangedData);\n \n             firstRequest.resolve();\n+\n+            // special delivery for the API key flag\n+            self.apiKeyVisible(self.loginState.checkCredentialsSeen());\n+            if (self.apiKeyVisible()) {\n+                self.reauthenticationTimeout =\n+                    self.loginState.afterReauthenticationTimeout(() => {\n+                        self.requestData();\n+                    }, self.reauthenticationTimeout);\n+            }\n         };\n \n         self.cancelData = function () {"
        },
        {
          "filename": "src/octoprint/templates/dialogs/reauthenticate.jinja2",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+<div id=\"reauthenticate_dialog\" class=\"modal hide fade-in\">\n+    <div class=\"modal-header\">\n+        <a href=\"javascript:void()\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</a>\n+        <h3>{{ _('Please reauthenticate') }}</h3>\n+    </div>\n+    <div class=\"modal-body\">\n+        <p>{% trans %}\n+            You need to reauthenticate to perform this action.\n+            Please enter your password below.\n+        {% endtrans %}</p>\n+        <form class=\"form-horizontal\" data-bind=\"event: {'submit': reauthenticate }\" onsubmit=\"return false; // this gets overwritten on view model bind\">\n+            <div class=\"control-group\">\n+                <label class=\"control-label\">{{ _('Password') }}</label>\n+                <div class=\"controls\">\n+                    <input type=\"password\" class=\"input-block-level\" data-bind=\"value: reauthenticatePass\" placeholder=\"{{ _(\"Password\")|edq }}\">\n+                    <span class=\"help-block text-error\" data-bind=\"visible: reauthenticateFailed\">{{ _('Reauthentication failed. Wrong password?') }}</span>\n+                </div>\n+            </div>\n+        </form>\n+    </div>\n+    <div class=\"modal-footer\">\n+        <button class=\"btn\" data-dismiss=\"modal\">{{ _('Abort') }}</button>\n+        <button class=\"btn btn-primary\" data-bind=\"click: function() { reauthenticate(); }\">{{ _('Confirm') }}</button>\n+    </div>\n+</div>"
        },
        {
          "filename": "src/octoprint/templates/dialogs/settings/api.jinja2",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -25,14 +25,18 @@\n         </div>\n         <div class=\"control-group\">\n             <label class=\"control-label\" for=\"settings-apikey\">{{ _('Global API Key') }}</label>\n-            <div class=\"controls\">\n+            <div class=\"controls\" data-bind=\"visible: apiKeyVisible\">\n                 <div class=\"input-append input-block-level\">\n                     <input type=\"text\" readonly=\"readonly\" id=\"settings-apikey\" data-bind=\"value: api_key, attr: {placeholder: '{{ _('N/A')|esq }}'}\">\n                     <a class=\"btn add-on\" title=\"Copy API Key to clipboard\" data-bind=\"click: copyApiKey, css: {'disabled': !api_key()}\"><i class=\"fas fa-copy\"></i></a>\n                     <a class=\"btn add-on\" title=\"Generate new API Key\" data-bind=\"click: generateApiKey\"><i class=\"fas fa-sync\"></i></a>\n+                    <a class=\"btn btn-danger add-on\" title=\"Delete API Key\" data-bind=\"click: deleteApiKey, css: {'disabled': !api_key()}\"><i class=\"far fa-trash-alt\"></i></a>\n                 </div>\n                 <span class=\"help-block\">{{ _('Please note that changes to the API key are applied immediately, without having to \"Save\" first.') }}</span>\n             </div>\n+            <div class=\"controls\" data-bind=\"visible: !apiKeyVisible()\">\n+                <button class=\"btn\" data-bind=\"click: revealApiKey, enabled: !revealingApiKey(), css: {disabled: revealingApiKey}\"><i class=\"fas fa-spinner fa-spin\" data-bind=\"visible: revealingApiKey\"></i> {{ _('Reveal API Key') }}</button>\n+            </div>\n         </div>\n         <div class=\"control-group\" data-bind=\"visible: api_key\">\n             <label class=\"control-label\">{{ _('QR Code') }}</label>"
        },
        {
          "filename": "src/octoprint/templates/index.jinja2",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -177,6 +177,7 @@\n             {% include 'dialogs/temperature.jinja2' %}\n             {% include 'dialogs/timelapse.jinja2' %}\n             {% include 'dialogs/firmwareerror.jinja2' %}\n+            {% include 'dialogs/reauthenticate.jinja2' %}\n             <!-- End of dialogs -->\n \n             <!-- Overlays -->"
        },
        {
          "filename": "src/octoprint/templates/initscript.jinja2",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@\n     var CONFIG_FIRST_RUN = {%  if firstRun -%} true; {% else %} false; {%- endif %}\n     var CONFIG_TEMPERATURE_GRAPH = {%  if enableTemperatureGraph -%} true; {% else %} false; {%- endif %}\n     var CONFIG_WIZARD = {% if wizard -%} true; {% else %} false; {%- endif %}\n+    var CONFIG_REAUTHENTICATION_TIMEOUT = {{ reauthenticationTimeout }};\n \n     var SOCKJS_URI = \"{{ url_for('index') }}\" + \"sockjs\";\n     var SOCKJS_DEBUG = CONFIG_DEBUG;"
        },
        {
          "filename": "src/octoprint/templates/login.jinja2",
          "status": "modified",
          "additions": 12,
          "deletions": 2,
          "patch": "@@ -63,24 +63,34 @@\n \n     <div id=\"login\" class=\"container\">\n         <form class=\"form-signin\">\n-            <h2 class=\"form-signin-heading\" data-test-id=\"login-title\">{{ _('Please log in') }}</h2>\n+            <h2 class=\"form-signin-heading\" data-test-id=\"login-title\">\n+                {% if reauthenticate %}\n+                    {{ _('Please reauthenticate') }}\n+                {% else %}\n+                    {{ _('Please log in') }}\n+                {% endif %}\n+            </h2>\n \n             <div id=\"login-error-credentials\" class=\"alert alert-error\" data-test-id=\"login-error\">{{ _('Incorrect username or password. Hint: Both are case sensitive!') }}</div>\n             <div id=\"login-error-rate\" class=\"alert alert-error\" data-test-id=\"login-error-rate\">{{ _('You have made too many failed login attempts. Please try again later.') }}</div>\n             <div id=\"login-offline\" class=\"alert alert-error\">{{ _('Server is currently offline.') }} <a id=\"login-reconnect\" href=\"javascript:void(0)\">{{ _('Reconnect...') }}</a></div>\n \n-            {% if user_id %}<p>\n+            {% if reauthenticate %}<p>\n+                {{ _('You need to reauthenticate before you can continue. Please enter your password below.') }}\n+            </p>{% elif user_id %}<p>\n                 {{ _('The following account is required:') }} {{ user_id|e }}\n             </p>{% elif logged_in %}<p>\n                 {{ _('An account with the following permissions is required:') }} {{ permission_names|join(\", \") }}\n             </p>{% endif %}\n \n             <input type=\"text\" id=\"login-user\" data-test-id=\"login-username\" class=\"input-block-level\" placeholder=\"{{ _('Username')|edq }}\" {% if user_id %}value=\"{{ user_id|edq }}\" disabled{% endif %} autofocus autocapitalize=\"none\">\n             <input type=\"password\" id=\"login-password\" data-test-id=\"login-password\" class=\"input-block-level\" placeholder=\"{{ _('Password')|edq }}\">\n+            {% if not reauthenticate %}\n             <span class=\"pull-right\"><small><a href=\"https://faq.octoprint.org/forgotten-password\" id=\"login-forgotpassword\" target=\"_blank\" tabindex=\"-1\">{{ _('Forgot password?') }}</a></small></span>\n             <label class=\"checkbox\">\n                 <input type=\"checkbox\" id=\"login-remember\" data-test-id=\"login-remember-me\"> {{ _('Remember me') }}\n             </label>\n+            {% endif %}\n             <button class=\"btn btn-block btn-large btn-primary\" id=\"login-button\" data-test-id=\"login-submit\" type=\"submit\">{{ _('Log in') }}</button>\n         </form>\n     </div>"
        },
        {
          "filename": "src/octoprint/templates/snippets/settings/accesscontrol/groups.jinja2",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -27,7 +27,7 @@\n             </table>\n         </td>\n         <td class=\"settings_groups_actions\">\n-            <a href=\"#\" class=\"fas fa-pencil-alt\" title=\"{{ _('Update group')|edq }}\" data-bind=\"enable: changeable, css: {disabled: !changeable}, click: function() { $root.access.groups.showEditGroupDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"#\" class=\"far fa-trash-alt\" title=\"{{ _('Delete group') }}\" data-bind=\"enable: removable, css: {disabled: !removable}, click: function() { $root.access.groups.removeGroup($data); }\"></a>\n+            <a href=\"javascript:void()\" class=\"fas fa-pencil-alt\" title=\"{{ _('Update group')|edq }}\" data-bind=\"enable: changeable, css: {disabled: !changeable}, click: function() { $root.access.groups.showEditGroupDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void()\" class=\"far fa-trash-alt\" title=\"{{ _('Delete group') }}\" data-bind=\"enable: removable, css: {disabled: !removable}, click: function() { $root.access.groups.confirmRemoveGroup($data); }\"></a>\n         </td>\n     </tr>\n     </tbody>"
        },
        {
          "filename": "src/octoprint/templates/snippets/settings/accesscontrol/users.jinja2",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -28,7 +28,7 @@\n         </td>\n         <td class=\"settings_users_active\"><i class=\"far\" data-bind=\"css: { 'fa-check-square': active, 'fa-square': !active }\"></i></td>\n         <td class=\"settings_users_actions\">\n-            <a href=\"#\" class=\"fas fa-pencil-alt\" title=\"{{ _('Update User')|edq }}\" data-bind=\"click: function() { $root.access.users.showEditUserDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"#\" class=\"fas fa-key\" title=\"{{ _('Change password') }}\" data-bind=\"click: function() { $root.access.users.showChangePasswordDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"#\" class=\"far fa-trash-alt\" title=\"{{ _('Delete user') }}\" data-bind=\"click: function() { $root.access.users.removeUser($data); }\"></a>\n+            <a href=\"javascript:void()\" class=\"fas fa-pencil-alt\" title=\"{{ _('Update User')|edq }}\" data-bind=\"click: function() { $root.access.users.showEditUserDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void()\" class=\"fas fa-key\" title=\"{{ _('Change password') }}\" data-bind=\"click: function() { $root.access.users.showChangePasswordDialog($data); }\"></a>&nbsp;|&nbsp;<a href=\"javascript:void()\" class=\"far fa-trash-alt\" title=\"{{ _('Delete user') }}\" data-bind=\"css: { disabled: !$root.access.users.isDeleteUserEnabled($data)}, enabled: $root.access.users.isDeleteUserEnabled($data), click: function() { if ($root.access.users.isDeleteUserEnabled($data)) { $root.access.users.confirmRemoveUser($data); } }\"></a>\n         </td>\n     </tr>\n     </tbody>\n@@ -138,6 +138,12 @@\n     </div>\n     <div class=\"modal-body\">\n         <form class=\"form-horizontal\" onsubmit=\"return false;\">\n+            <div class=\"control-group\" data-bind=\"visible: $root.access.loginState.username() == $root.access.users.editor.name()\">\n+                <label class=\"control-label\" for=\"settings-usersDialogChangePasswordPasswordC\">{{ _('Current Password') }}</label>\n+                <div class=\"controls\">\n+                    <input type=\"password\" class=\"input-block-level\" id=\"settings-usersDialogChangePasswordPasswordC\" data-bind=\"value: $root.access.users.editor.currentPassword\" required>\n+                </div>\n+            </div>\n             <div class=\"control-group\">\n                 <label class=\"control-label\" for=\"settings-usersDialogChangePasswordPassword1\">{{ _('New Password') }}</label>\n                 <div class=\"controls\">"
        },
        {
          "filename": "tests/static/js/test-helpers.js",
          "status": "modified",
          "additions": 42,
          "deletions": 0,
          "patch": "@@ -1090,3 +1090,45 @@ QUnit.cases(\n     var result = formatDate(params.unixTimestamp, params.options);\n     assert.equal(result, params.expected, \"As expected: \" + String(params.expected));\n });\n+\n+QUnit.module(\"rsplit\");\n+QUnit.cases(\n+    (function () {\n+        var cases = [];\n+\n+        var params = [\n+            {\n+                title: \"Basic\",\n+                text: \"a:b:c\",\n+                sep: \":\",\n+                limit: undefined,\n+                expected: [\"a\", \"b\", \"c\"]\n+            },\n+            {\n+                title: \"With Limit\",\n+                text: \"a:b:c\",\n+                sep: \":\",\n+                limit: 1,\n+                expected: [\"a:b\", \"c\"]\n+            },\n+            {\n+                title: \"No Match\",\n+                text: \"a-b-c\",\n+                sep: \":\",\n+                limit: undefined,\n+                expected: [\"a-b-c\"]\n+            }\n+        ];\n+\n+        var param, i;\n+        for (i = 0; i < params.length; i++) {\n+            param = params[i];\n+            cases.push(param);\n+        }\n+\n+        return cases;\n+    })()\n+).test(\"rsplit\", function (params, assert) {\n+    var result = rsplit(params.text, params.sep, params.limit);\n+    assert.deepEqual(result, params.expected, \"As expected: \" + String(params.expected));\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 8,
        "config_files": 10,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 22,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d79a0d20f3f1c7f2edb56dedda3b70267a937e65",
            "date": "2025-01-07T16:26:18Z",
            "author_login": "foosel"
          },
          {
            "sha": "b47f001b81a042069bf8c5f51a28a2642aa02497",
            "date": "2025-01-07T16:17:19Z",
            "author_login": "foosel"
          },
          {
            "sha": "51eae276d8c15208dd9cbe4a9da4b8a688f80a14",
            "date": "2025-01-07T15:55:37Z",
            "author_login": "foosel"
          },
          {
            "sha": "2a2a9921e6b79da220d3e66fde43cacd62a5a4ad",
            "date": "2024-11-06T08:34:42Z",
            "author_login": "foosel"
          },
          {
            "sha": "9701568a6f3dcf356e5e800a49da6ffac128cae5",
            "date": "2024-11-04T09:42:39Z",
            "author_login": "foosel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-287",
    "description": "OctoPrint is a web interface for 3D printer.s OctoPrint versions up until and including 1.9.3 contain a vulnerability that allows malicious admins to change the password of other admin accounts, including their own, without having to repeat their password. An attacker who managed to hijack an admin account might use this to lock out actual admins from their OctoPrint instance. The vulnerability will be patched in version 1.10.0.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-31T18:15:49.810",
    "last_modified": "2024-11-21T08:58:03.590",
    "fix_date": "2024-01-31T12:10:40Z"
  },
  "references": [
    {
      "url": "https://github.com/OctoPrint/OctoPrint/commit/1729d167b4ae4a5835bbc7211b92c6828b1c4125",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/releases/tag/1.10.0rc1",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-5626-pw9c-hmjr",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/commit/1729d167b4ae4a5835bbc7211b92c6828b1c4125",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/releases/tag/1.10.0rc1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-5626-pw9c-hmjr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.553191",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "OctoPrint",
    "owner": "OctoPrint",
    "created_at": "2012-12-31T12:20:57Z",
    "updated_at": "2025-01-13T21:11:23Z",
    "pushed_at": "2025-01-09T00:15:57Z",
    "size": 56449,
    "stars": 8399,
    "forks": 1673,
    "open_issues": 271,
    "watchers": 8399,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "devel",
      "maintenance",
      "master",
      "rc/devel",
      "rc/maintenance"
    ],
    "languages": {
      "Python": 3030267,
      "JavaScript": 1731194,
      "G-code": 1651044,
      "Jinja": 479315,
      "HTML": 51198,
      "Less": 49667,
      "CSS": 7021
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T15:41:10.445652"
  }
}