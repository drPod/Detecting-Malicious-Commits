{
  "cve_id": "CVE-2024-23642",
  "github_data": {
    "repository": "geoserver/geoserver",
    "fix_commit": "1b1835afbb9c282d1840786259aeda81c1d22b00",
    "related_commits": [
      "1b1835afbb9c282d1840786259aeda81c1d22b00",
      "9f40265febb5939f23e2c53930c9c35e93970afe",
      "1b1835afbb9c282d1840786259aeda81c1d22b00",
      "9f40265febb5939f23e2c53930c9c35e93970afe"
    ],
    "patch_url": "https://github.com/geoserver/geoserver/commit/1b1835afbb9c282d1840786259aeda81c1d22b00.patch",
    "fix_commit_details": {
      "sha": "1b1835afbb9c282d1840786259aeda81c1d22b00",
      "commit_date": "2023-11-28T19:29:12Z",
      "author": {
        "login": "sikeoka",
        "type": "User",
        "stats": {
          "total_commits": 201,
          "average_weekly_commits": 0.29515418502202645,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 105
        }
      },
      "commit_message": {
        "title": "[GEOS-11152] Improve handling special characters in the Simple SVG Renderer (#7299)",
        "length": 83,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 87,
        "additions": 49,
        "deletions": 38
      },
      "files": [
        {
          "filename": "src/wms/src/main/java/org/geoserver/wms/svg/StreamingSVGMap.java",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -5,6 +5,8 @@\n  */\n package org.geoserver.wms.svg;\n \n+import static org.apache.commons.text.StringEscapeUtils.escapeXml10;\n+\n import java.io.IOException;\n import java.io.OutputStream;\n import java.util.List;\n@@ -138,10 +140,10 @@ private void writeLayers() throws IOException {\n \n                 String styleName = layer.getStyle().getName();\n \n-                writer.write(\"<g id=\\\"\" + groupId + \"\\\"\");\n+                writer.write(\"<g id=\\\"\" + escapeXml10(groupId) + \"\\\"\");\n \n                 if (!styleName.startsWith(\"#\")) {\n-                    writer.write(\" class=\\\"\" + styleName + \"\\\"\");\n+                    writer.write(\" class=\\\"\" + escapeXml10(styleName) + \"\\\"\");\n                 }\n \n                 writer.write(\">\\n\");"
        },
        {
          "filename": "src/wms/src/test/java/org/geoserver/wms/svg/SVGMapProducerTest.java",
          "status": "modified",
          "additions": 45,
          "deletions": 36,
          "patch": "@@ -6,11 +6,7 @@\n package org.geoserver.wms.svg;\n \n import java.awt.Color;\n-import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n-import java.io.StringReader;\n-import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n import org.custommonkey.xmlunit.XMLAssert;\n import org.custommonkey.xmlunit.XMLUnit;\n import org.geoserver.wms.WMSMapContent;\n@@ -31,13 +27,31 @@\n import org.locationtech.jts.geom.Polygon;\n import org.opengis.feature.simple.SimpleFeature;\n import org.opengis.feature.simple.SimpleFeatureType;\n-import org.w3c.dom.Document;\n-import org.xml.sax.InputSource;\n \n public class SVGMapProducerTest extends WMSTestSupport {\n \n-    @Test\n-    public void testHeterogeneousGeometry() throws Exception {\n+    private static String EXPECTED_DOC =\n+            \"<?xml version=\\\"1.0\\\" standalone=\\\"no\\\"?>\"\n+                    + \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\"\n+                    + \"    xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\"\n+                    + \"    stroke=\\\"green\\\"\"\n+                    + \"    fill=\\\"none\\\"\"\n+                    + \"    stroke-width=\\\"0.1%\\\"\"\n+                    + \"    stroke-linecap=\\\"round\\\"\"\n+                    + \"    stroke-linejoin=\\\"round\\\"\"\n+                    + \"    width=\\\"300\\\"\"\n+                    + \"    height=\\\"300\\\"\"\n+                    + \"    viewBox=\\\"-250.0 -250.0 500.0 500.0\\\"\"\n+                    + \"    preserveAspectRatio=\\\"xMidYMid meet\\\">\"\n+                    + \"  <g id=\\\"LAYER\\\" class=\\\"STYLE\\\">\"\n+                    + \"    <use x=\\\"10\\\" y=\\\"-10\\\" xlink:href=\\\"#point\\\"/>\"\n+                    + \"    <path d=\\\"M50 -50l50 -50 \\\"/>\"\n+                    + \"    <path d=\\\"M0 0l0 -200 200 0 0 200 -200 0 Z\\\"/>\"\n+                    + \"  </g>\"\n+                    + \"</svg>\";\n+\n+    private void doTestSVGMapProducer(String layer, String style, String expectedDoc)\n+            throws Exception {\n         GeometryFactory gf = new GeometryFactory();\n         Point point = gf.createPoint(new Coordinate(10, 10));\n         LineString line =\n@@ -56,7 +70,7 @@ public void testHeterogeneousGeometry() throws Exception {\n                         null);\n \n         SimpleFeatureTypeBuilder ftb = new SimpleFeatureTypeBuilder();\n-        ftb.setName(\"test\");\n+        ftb.setName(layer);\n         ftb.add(\"geom\", Geometry.class);\n         SimpleFeatureType type = ftb.buildFeatureType();\n \n@@ -68,7 +82,7 @@ public void testHeterogeneousGeometry() throws Exception {\n         ds.createSchema(type);\n         ds.addFeatures(f1, f2, f3);\n \n-        FeatureSource fs = ds.getFeatureSource(\"test\");\n+        FeatureSource fs = ds.getFeatureSource(layer);\n \n         final WMSMapContent map = new WMSMapContent();\n         map.getViewport().setBounds(new ReferencedEnvelope(-250, 250, -250, 250, null));\n@@ -78,6 +92,7 @@ public void testHeterogeneousGeometry() throws Exception {\n         map.setTransparent(false);\n \n         Style basicStyle = getCatalog().getStyleByName(\"Default\").getStyle();\n+        basicStyle.setName(style);\n         map.addLayer(new FeatureLayer(fs, basicStyle));\n \n         SVGStreamingMapOutputFormat producer = new SVGStreamingMapOutputFormat();\n@@ -86,33 +101,27 @@ public void testHeterogeneousGeometry() throws Exception {\n         encodeSVG.encode(out);\n         // System.out.println(out.toString());\n \n-        String expectedDoc =\n-                \"<?xml version=\\\"1.0\\\" standalone=\\\"no\\\"?>\"\n-                        + \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" \" //\n-                        + \"    xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" \" //\n-                        + \"    stroke=\\\"green\\\"  \" //\n-                        + \"    fill=\\\"none\\\"  \" //\n-                        + \"    stroke-width=\\\"0.1%\\\" \" //\n-                        + \"    stroke-linecap=\\\"round\\\" \" //\n-                        + \"    stroke-linejoin=\\\"round\\\" \" //\n-                        + \"    width=\\\"300\\\"  \" //\n-                        + \"    height=\\\"300\\\"  \" //\n-                        + \"    viewBox=\\\"-250.0 -250.0 500.0 500.0\\\"  \" //\n-                        + \"    preserveAspectRatio=\\\"xMidYMid meet\\\"> \" //\n-                        + \"  <g id=\\\"test\\\" class=\\\"Default\\\"> \" //\n-                        + \"    <use x=\\\"10\\\" y=\\\"-10\\\" xlink:href=\\\"#point\\\"/> \" //\n-                        + \"    <path d=\\\"M50 -50l50 -50 \\\"/> \" //\n-                        + \"    <path d=\\\"M0 0l0 -200 200 0 0 200 -200 0 Z\\\"/> \" //\n-                        + \"  </g> \" //\n-                        + \"</svg> \";\n-\n-        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n-        Document expected = builder.parse(new InputSource(new StringReader(expectedDoc)));\n-        Document result = builder.parse(new ByteArrayInputStream(out.toByteArray()));\n-\n         XMLUnit.setIgnoreWhitespace(true);\n         XMLUnit.setIgnoreAttributeOrder(true);\n-        XMLUnit.setIgnoreComments(true);\n-        XMLAssert.assertXMLEqual(expected, result);\n+        XMLAssert.assertXMLEqual(expectedDoc, out.toString());\n+    }\n+\n+    @Test\n+    public void testHeterogeneousGeometry() throws Exception {\n+        String layer = \"test\";\n+        String style = \"Default\";\n+        String expectedDoc = EXPECTED_DOC.replace(\"LAYER\", layer).replace(\"STYLE\", style);\n+        doTestSVGMapProducer(layer, style, expectedDoc);\n+    }\n+\n+    @Test\n+    public void testEscaping() throws Exception {\n+        String unescapedLayer = \"layer\\\"<>\";\n+        String escapedLayer = \"layer&quot;&lt;&gt;\";\n+        String unescapedStyle = \"style\\\"<>\";\n+        String escapedStyle = \"style&quot;&lt;&gt;\";\n+        String expectedDoc =\n+                EXPECTED_DOC.replace(\"LAYER\", escapedLayer).replace(\"STYLE\", escapedStyle);\n+        doTestSVGMapProducer(unescapedLayer, unescapedStyle, expectedDoc);\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "159e5bf6afbfb9776f08cbe03d8ed09cb2d55507",
            "date": "2025-01-13T09:52:26Z",
            "author_login": "osgeoweblate"
          },
          {
            "sha": "87d9c20e47643bed223bf2a39d546b2a770c9b29",
            "date": "2025-01-13T09:01:15Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "ae63d2cefb5114fec88c4831af61252fbef9dceb",
            "date": "2025-01-06T10:38:14Z",
            "author_login": "aaime"
          },
          {
            "sha": "31ed8d7da74d757bc199ed550ec52c2340781134",
            "date": "2025-01-08T11:01:24Z",
            "author_login": "aaime"
          },
          {
            "sha": "9eedb76aaa41300e4dcc0db538d26cd860ef8cc3",
            "date": "2025-01-08T04:32:41Z",
            "author_login": "jodygarnett"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the WMS GetMap SVG Output Format when the Simple SVG renderer is enabled. Access to the WMS SVG Format is available to all users by default although data and service security may limit users' ability to trigger the XSS. Versions 2.23.4 and 2.24.1 contain a fix for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-20T18:15:08.590",
    "last_modified": "2024-12-17T20:13:55.030",
    "fix_date": "2023-11-28T19:29:12Z"
  },
  "references": [
    {
      "url": "https://github.com/geoserver/geoserver/commit/1b1835afbb9c282d1840786259aeda81c1d22b00",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/9f40265febb5939f23e2c53930c9c35e93970afe",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/pull/7173",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/security/advisories/GHSA-fg9v-56hw-g525",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://osgeo-org.atlassian.net/browse/GEOS-11152",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/1b1835afbb9c282d1840786259aeda81c1d22b00",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/9f40265febb5939f23e2c53930c9c35e93970afe",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/pull/7173",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/security/advisories/GHSA-fg9v-56hw-g525",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://osgeo-org.atlassian.net/browse/GEOS-11152",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.871334",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "geoserver",
    "owner": "geoserver",
    "created_at": "2011-11-10T19:56:06Z",
    "updated_at": "2025-01-13T14:27:07Z",
    "pushed_at": "2025-01-13T09:52:26Z",
    "size": 319674,
    "stars": 3917,
    "forks": 2193,
    "open_issues": 12,
    "watchers": 3917,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2.1.x",
      "2.2.x",
      "2.3.x",
      "2.4.x",
      "2.5.x",
      "2.6.x",
      "2.6.0.x",
      "2.7.x",
      "2.7.1.x",
      "2.8.x",
      "2.9.x",
      "2.10.x",
      "2.11.x",
      "2.12.x",
      "2.13.x",
      "2.14.x",
      "2.15.x",
      "2.16.x",
      "2.17.x",
      "2.18.x",
      "2.19.x",
      "2.20.x",
      "2.21.x",
      "2.22.x",
      "2.23.x",
      "2.24.x",
      "2.25.x"
    ],
    "languages": {
      "Java": 44761611,
      "JavaScript": 1182828,
      "Scheme": 1167338,
      "HTML": 712425,
      "FreeMarker": 215786,
      "XSLT": 156026,
      "CSS": 120514,
      "Shell": 50551,
      "NSIS": 44051,
      "Python": 18317,
      "Makefile": 17825,
      "Batchfile": 13345,
      "AMPL": 8670,
      "Dockerfile": 3836,
      "Fluent": 117
    },
    "commit_activity": {
      "total_commits_last_year": 617,
      "avg_commits_per_week": 11.865384615384615,
      "days_active_last_year": 235
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:58:19.409251"
  }
}