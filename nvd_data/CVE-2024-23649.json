{
  "cve_id": "CVE-2024-23649",
  "github_data": {
    "repository": "LemmyNet/lemmy",
    "fix_commit": "bc32b408b523b9b64aa57b8e47748f96cce0dae5",
    "related_commits": [
      "bc32b408b523b9b64aa57b8e47748f96cce0dae5",
      "bc32b408b523b9b64aa57b8e47748f96cce0dae5"
    ],
    "patch_url": "https://github.com/LemmyNet/lemmy/commit/bc32b408b523b9b64aa57b8e47748f96cce0dae5.patch",
    "fix_commit_details": {
      "sha": "bc32b408b523b9b64aa57b8e47748f96cce0dae5",
      "commit_date": "2023-12-18T09:25:05Z",
      "author": {
        "login": "dessalines",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixing private message reports. (#4279)",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 60,
        "deletions": 1
      },
      "files": [
        {
          "filename": "api_tests/prepare-drone-federation-test.sh",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -9,7 +9,7 @@ export RUST_LOG=\"warn,lemmy_server=debug,lemmy_federate=debug,lemmy_api=debug,le\n export LEMMY_TEST_FAST_FEDERATION=1 # by default, the persistent federation queue has delays in the scale of 30s-5min\n \n # pictrs setup\n-if ! [ -f \"pict-rs\" ]; then\n+if [ ! -f \"pict-rs\" ]; then\n   curl \"https://git.asonix.dog/asonix/pict-rs/releases/download/v0.5.0-beta.2/pict-rs-linux-amd64\" -o api_tests/pict-rs\n   chmod +x api_tests/pict-rs\n fi"
        },
        {
          "filename": "api_tests/src/private_message.spec.ts",
          "status": "modified",
          "additions": 40,
          "deletions": 0,
          "patch": "@@ -10,6 +10,7 @@ import {\n   deletePrivateMessage,\n   unfollowRemotes,\n   waitUntil,\n+  reportPrivateMessage,\n } from \"./shared\";\n \n let recipient_id: number;\n@@ -109,3 +110,42 @@ test(\"Delete a private message\", async () => {\n     betaPms1.private_messages.length,\n   );\n });\n+\n+test(\"Create a private message report\", async () => {\n+  let pmRes = await createPrivateMessage(alpha, recipient_id);\n+  let betaPms1 = await waitUntil(\n+    () => listPrivateMessages(beta),\n+    m =>\n+      !!m.private_messages.find(\n+        e =>\n+          e.private_message.ap_id ===\n+          pmRes.private_message_view.private_message.ap_id,\n+      ),\n+  );\n+  let betaPm = betaPms1.private_messages[0];\n+  expect(betaPm).toBeDefined();\n+\n+  // Make sure that only the recipient can report it, so this should fail\n+  await expect(\n+    reportPrivateMessage(\n+      alpha,\n+      pmRes.private_message_view.private_message.id,\n+      \"a reason\",\n+    ),\n+  ).rejects.toStrictEqual(Error(\"couldnt_create_report\"));\n+\n+  // This one should pass\n+  let reason = \"another reason\";\n+  let report = await reportPrivateMessage(\n+    beta,\n+    betaPm.private_message.id,\n+    reason,\n+  );\n+\n+  expect(report.private_message_report_view.private_message.id).toBe(\n+    betaPm.private_message.id,\n+  );\n+  expect(report.private_message_report_view.private_message_report.reason).toBe(\n+    reason,\n+  );\n+});"
        },
        {
          "filename": "api_tests/src/shared.ts",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -4,12 +4,14 @@ import {\n   BlockInstance,\n   BlockInstanceResponse,\n   CommunityId,\n+  CreatePrivateMessageReport,\n   GetReplies,\n   GetRepliesResponse,\n   GetUnreadCountResponse,\n   InstanceId,\n   LemmyHttp,\n   PostView,\n+  PrivateMessageReportResponse,\n   SuccessResponse,\n } from \"lemmy-js-client\";\n import { CreatePost } from \"lemmy-js-client/dist/types/CreatePost\";\n@@ -781,6 +783,18 @@ export async function reportComment(\n   return api.createCommentReport(form);\n }\n \n+export async function reportPrivateMessage(\n+  api: LemmyHttp,\n+  private_message_id: number,\n+  reason: string,\n+): Promise<PrivateMessageReportResponse> {\n+  let form: CreatePrivateMessageReport = {\n+    private_message_id,\n+    reason,\n+  };\n+  return api.createPrivateMessageReport(form);\n+}\n+\n export async function listCommentReports(\n   api: LemmyHttp,\n ): Promise<ListCommentReportsResponse> {"
        },
        {
          "filename": "crates/api/src/private_message_report/create.rs",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -31,6 +31,11 @@ pub async fn create_pm_report(\n   let private_message_id = data.private_message_id;\n   let private_message = PrivateMessage::read(&mut context.pool(), private_message_id).await?;\n \n+  // Make sure that only the recipient of the private message can create a report\n+  if person_id != private_message.recipient_id {\n+    Err(LemmyErrorType::CouldntCreateReport)?\n+  }\n+\n   let report_form = PrivateMessageReportForm {\n     creator_id: person_id,\n     private_message_id,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b901714d7138397c3504dd76e164ecf52165b95c",
            "date": "2025-01-14T15:48:56Z",
            "author_login": "dessalines"
          },
          {
            "sha": "9c1347c7a0545be03607f9cc5375b9fd2ae2bc92",
            "date": "2025-01-14T14:14:58Z",
            "author_login": "dessalines"
          },
          {
            "sha": "da9582c80aa11d4398b1e5a25aa3581e316fdec8",
            "date": "2025-01-14T04:10:31Z",
            "author_login": "dullbananas"
          },
          {
            "sha": "a91a03a5361d84d07e12e39c04a9138e6a6ad53c",
            "date": "2025-01-13T21:09:00Z",
            "author_login": "Nutomic"
          },
          {
            "sha": "c08e216ae846f8e11a7e9f6b8451a8a1b543bfc5",
            "date": "2025-01-13T20:46:46Z",
            "author_login": "dullbananas"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-200",
    "description": "Lemmy is a link aggregator and forum for the fediverse. Starting in version 0.17.0 and prior to version 0.19.1, users can report private messages, even when they're neither sender nor recipient of the message. The API response to creating a private message report contains the private message itself, which means any user can just iterate over message ids to (loudly) obtain all private messages of an instance. A user with instance admin privileges can also abuse this if the private message is removed from the response, as they're able to see the resulting reports.\n\nCreating a private message report by POSTing to `/api/v3/private_message/report` does not validate whether the reporter is the recipient of the message. lemmy-ui does not allow the sender to report the message; the API method should likely be restricted to accessible to recipients only. The API response when creating a report contains the `private_message_report_view` with all the details of the report, including the private message that has been reported:\n\nAny authenticated user can obtain arbitrary (untargeted) private message contents. Privileges required depend on the instance configuration; when registrations are enabled without application system, the privileges required are practically none. When registration applications are required, privileges required could be considered low, but this assessment heavily varies by instance.\n\nVersion 0.19.1 contains a patch for this issue. A workaround is available. If an update to a fixed Lemmy version is not immediately possible, the API route can be blocked in the reverse proxy. This will prevent anyone from reporting private messages, but it will also prevent exploitation before the update has been applied.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-24T18:15:09.103",
    "last_modified": "2024-11-21T08:58:05.270",
    "fix_date": "2023-12-18T09:25:05Z"
  },
  "references": [
    {
      "url": "https://github.com/LemmyNet/lemmy/commit/bc32b408b523b9b64aa57b8e47748f96cce0dae5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/LemmyNet/lemmy/security/advisories/GHSA-r64r-5h43-26qv",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/LemmyNet/lemmy/commit/bc32b408b523b9b64aa57b8e47748f96cce0dae5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/LemmyNet/lemmy/security/advisories/GHSA-r64r-5h43-26qv",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.527035",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lemmy",
    "owner": "LemmyNet",
    "created_at": "2019-02-14T17:17:17Z",
    "updated_at": "2025-01-14T19:08:10Z",
    "pushed_at": "2025-01-14T15:48:56Z",
    "size": 37358,
    "stars": 13410,
    "forks": 886,
    "open_issues": 182,
    "watchers": 13410,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Rust": 1960782,
      "PLpgSQL": 406564,
      "TypeScript": 144788,
      "Shell": 30022,
      "Dockerfile": 4038,
      "JavaScript": 1457
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T19:44:00.928794"
  }
}