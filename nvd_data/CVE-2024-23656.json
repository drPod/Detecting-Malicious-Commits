{
  "cve_id": "CVE-2024-23656",
  "github_data": {
    "repository": "dexidp/dex",
    "fix_commit": "5bbdb4420254ba73b9c4df4775fe7bdacf233b17",
    "related_commits": [
      "5bbdb4420254ba73b9c4df4775fe7bdacf233b17",
      "5bbdb4420254ba73b9c4df4775fe7bdacf233b17"
    ],
    "patch_url": "https://github.com/dexidp/dex/commit/5bbdb4420254ba73b9c4df4775fe7bdacf233b17.patch",
    "fix_commit_details": {
      "sha": "5bbdb4420254ba73b9c4df4775fe7bdacf233b17",
      "commit_date": "2024-01-25T11:55:55Z",
      "author": {
        "login": "tuminoid",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: add TLS versions configuration",
        "length": 312,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 58,
        "additions": 49,
        "deletions": 9
      },
      "files": [
        {
          "filename": "cmd/dex/config.go",
          "status": "modified",
          "additions": 15,
          "deletions": 5,
          "patch": "@@ -64,10 +64,16 @@ func (c Config) Validate() error {\n \t\t{c.Web.HTTP == \"\" && c.Web.HTTPS == \"\", \"must supply a HTTP/HTTPS  address to listen on\"},\n \t\t{c.Web.HTTPS != \"\" && c.Web.TLSCert == \"\", \"no cert specified for HTTPS\"},\n \t\t{c.Web.HTTPS != \"\" && c.Web.TLSKey == \"\", \"no private key specified for HTTPS\"},\n+\t\t{c.Web.TLSMinVersion != \"\" && c.Web.TLSMinVersion != \"1.2\" && c.Web.TLSMinVersion != \"1.3\", \"supported TLS versions are: 1.2, 1.3\"},\n+\t\t{c.Web.TLSMaxVersion != \"\" && c.Web.TLSMaxVersion != \"1.2\" && c.Web.TLSMaxVersion != \"1.3\", \"supported TLS versions are: 1.2, 1.3\"},\n+\t\t{c.Web.TLSMaxVersion != \"\" && c.Web.TLSMinVersion != \"\" && c.Web.TLSMinVersion > c.Web.TLSMaxVersion, \"TLSMinVersion greater than TLSMaxVersion\"},\n \t\t{c.GRPC.TLSCert != \"\" && c.GRPC.Addr == \"\", \"no address specified for gRPC\"},\n \t\t{c.GRPC.TLSKey != \"\" && c.GRPC.Addr == \"\", \"no address specified for gRPC\"},\n \t\t{(c.GRPC.TLSCert == \"\") != (c.GRPC.TLSKey == \"\"), \"must specific both a gRPC TLS cert and key\"},\n \t\t{c.GRPC.TLSCert == \"\" && c.GRPC.TLSClientCA != \"\", \"cannot specify gRPC TLS client CA without a gRPC TLS cert\"},\n+\t\t{c.GRPC.TLSMinVersion != \"\" && c.GRPC.TLSMinVersion != \"1.2\" && c.GRPC.TLSMinVersion != \"1.3\", \"supported TLS versions are: 1.2, 1.3\"},\n+\t\t{c.GRPC.TLSMaxVersion != \"\" && c.GRPC.TLSMaxVersion != \"1.2\" && c.GRPC.TLSMaxVersion != \"1.3\", \"supported TLS versions are: 1.2, 1.3\"},\n+\t\t{c.GRPC.TLSMaxVersion != \"\" && c.GRPC.TLSMinVersion != \"\" && c.GRPC.TLSMinVersion > c.GRPC.TLSMaxVersion, \"TLSMinVersion greater than TLSMaxVersion\"},\n \t}\n \n \tvar checkErrors []string\n@@ -149,6 +155,8 @@ type Web struct {\n \tHTTPS          string   `json:\"https\"`\n \tTLSCert        string   `json:\"tlsCert\"`\n \tTLSKey         string   `json:\"tlsKey\"`\n+\tTLSMinVersion  string   `json:\"tlsMinVersion\"`\n+\tTLSMaxVersion  string   `json:\"tlsMaxVersion\"`\n \tAllowedOrigins []string `json:\"allowedOrigins\"`\n \tAllowedHeaders []string `json:\"allowedHeaders\"`\n }\n@@ -163,11 +171,13 @@ type Telemetry struct {\n // GRPC is the config for the gRPC API.\n type GRPC struct {\n \t// The port to listen on.\n-\tAddr        string `json:\"addr\"`\n-\tTLSCert     string `json:\"tlsCert\"`\n-\tTLSKey      string `json:\"tlsKey\"`\n-\tTLSClientCA string `json:\"tlsClientCA\"`\n-\tReflection  bool   `json:\"reflection\"`\n+\tAddr          string `json:\"addr\"`\n+\tTLSCert       string `json:\"tlsCert\"`\n+\tTLSKey        string `json:\"tlsKey\"`\n+\tTLSClientCA   string `json:\"tlsClientCA\"`\n+\tTLSMinVersion string `json:\"tlsMinVersion\"`\n+\tTLSMaxVersion string `json:\"tlsMaxVersion\"`\n+\tReflection    bool   `json:\"reflection\"`\n }\n \n // Storage holds app's storage configuration."
        },
        {
          "filename": "cmd/dex/config_test.go",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -71,7 +71,9 @@ storage:\n     connMaxLifetime: 30\n     connectionTimeout: 3\n web:\n-  http: 127.0.0.1:5556\n+  https: 127.0.0.1:5556\n+  tlsMinVersion: 1.3\n+  tlsMaxVersion: 1.2\n \n frontend:\n   dir: ./web\n@@ -144,7 +146,9 @@ logger:\n \t\t\t},\n \t\t},\n \t\tWeb: Web{\n-\t\t\tHTTP: \"127.0.0.1:5556\",\n+\t\t\tHTTPS:         \"127.0.0.1:5556\",\n+\t\t\tTLSMinVersion: \"1.3\",\n+\t\t\tTLSMaxVersion: \"1.2\",\n \t\t},\n \t\tFrontend: server.WebConfig{\n \t\t\tDir: \"./web\","
        },
        {
          "filename": "cmd/dex/serve.go",
          "status": "modified",
          "additions": 26,
          "deletions": 2,
          "patch": "@@ -145,9 +145,23 @@ func runServe(options serveOptions) error {\n \t\ttls.TLS_RSA_WITH_AES_256_GCM_SHA384,\n \t}\n \n+\tallowedTLSVersions := map[string]int{\n+\t\t\"1.2\": tls.VersionTLS12,\n+\t\t\"1.3\": tls.VersionTLS13,\n+\t}\n+\n \tif c.GRPC.TLSCert != \"\" {\n+\t\ttlsMinVersion := tls.VersionTLS12\n+\t\tif c.GRPC.TLSMinVersion != \"\" {\n+\t\t\ttlsMinVersion = allowedTLSVersions[c.GRPC.TLSMinVersion]\n+\t\t}\n+\t\ttlsMaxVersion := 0 // default for max is whatever Go defaults to\n+\t\tif c.GRPC.TLSMaxVersion != \"\" {\n+\t\t\ttlsMaxVersion = allowedTLSVersions[c.GRPC.TLSMaxVersion]\n+\t\t}\n \t\tbaseTLSConfig := &tls.Config{\n-\t\t\tMinVersion:               tls.VersionTLS12,\n+\t\t\tMinVersion:               uint16(tlsMinVersion),\n+\t\t\tMaxVersion:               uint16(tlsMaxVersion),\n \t\t\tCipherSuites:             allowedTLSCiphers,\n \t\t\tPreferServerCipherSuites: true,\n \t\t}\n@@ -422,8 +436,18 @@ func runServe(options serveOptions) error {\n \t\t\treturn fmt.Errorf(\"listening (%s) on %s: %v\", name, c.Web.HTTPS, err)\n \t\t}\n \n+\t\ttlsMinVersion := tls.VersionTLS12\n+\t\tif c.Web.TLSMinVersion != \"\" {\n+\t\t\ttlsMinVersion = allowedTLSVersions[c.Web.TLSMinVersion]\n+\t\t}\n+\t\ttlsMaxVersion := 0 // default for max is whatever Go defaults to\n+\t\tif c.Web.TLSMaxVersion != \"\" {\n+\t\t\ttlsMaxVersion = allowedTLSVersions[c.Web.TLSMaxVersion]\n+\t\t}\n+\n \t\tbaseTLSConfig := &tls.Config{\n-\t\t\tMinVersion:               tls.VersionTLS12,\n+\t\t\tMinVersion:               uint16(tlsMinVersion),\n+\t\t\tMaxVersion:               uint16(tlsMaxVersion),\n \t\t\tCipherSuites:             allowedTLSCiphers,\n \t\t\tPreferServerCipherSuites: true,\n \t\t}"
        },
        {
          "filename": "config.yaml.dist",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -55,6 +55,8 @@ web:\n   # https: 127.0.0.1:5554\n   # tlsCert: /etc/dex/tls.crt\n   # tlsKey: /etc/dex/tls.key\n+  # tlsMinVersion: 1.2\n+  # tlsMaxVersion: 1.3\n \n # Dex UI configuration\n # frontend:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3e90ce928d3e4929da11eba541e951a3acb88215",
            "date": "2025-01-10T10:21:27Z",
            "author_login": "sagikazarmark"
          },
          {
            "sha": "46b36ab9af0ca35861355dad0048ffb593703749",
            "date": "2024-11-21T08:55:31Z",
            "author_login": "MoeBensu"
          },
          {
            "sha": "f058ef1f4d5d7d576d8b424ca598eaf4e8683715",
            "date": "2025-01-09T11:50:38Z",
            "author_login": "sagikazarmark"
          },
          {
            "sha": "ff3b9f2d80ed0e2580d561c0666c6a80cc7ada3b",
            "date": "2025-01-09T11:49:40Z",
            "author_login": "sagikazarmark"
          },
          {
            "sha": "d8e03355be37e52dc4a00efb5750df1661e2c13c",
            "date": "2025-01-09T11:49:15Z",
            "author_login": "sagikazarmark"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-326",
    "description": "Dex is an identity service that uses OpenID Connect to drive authentication for other apps. Dex 2.37.0 serves HTTPS with insecure TLS 1.0 and TLS 1.1. `cmd/dex/serve.go` line 425 seemingly sets TLS 1.2 as minimum version, but the whole `tlsConfig` is ignored after `TLS cert reloader` was introduced in v2.37.0. Configured cipher suites are not respected either. This issue is fixed in Dex 2.38.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-25T20:15:41.107",
    "last_modified": "2024-11-21T08:58:06.240",
    "fix_date": "2024-01-25T11:55:55Z"
  },
  "references": [
    {
      "url": "https://github.com/dexidp/dex/blob/70d7a2c7c1bb2646b1a540e49616cbc39622fb83/cmd/dex/serve.go#L425",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/commit/5bbdb4420254ba73b9c4df4775fe7bdacf233b17",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/issues/2848",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/pull/2964",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/security/advisories/GHSA-gr79-9v6v-gc9r",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/blob/70d7a2c7c1bb2646b1a540e49616cbc39622fb83/cmd/dex/serve.go#L425",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/commit/5bbdb4420254ba73b9c4df4775fe7bdacf233b17",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/issues/2848",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/pull/2964",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/dexidp/dex/security/advisories/GHSA-gr79-9v6v-gc9r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.530118",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dex",
    "owner": "dexidp",
    "created_at": "2015-08-17T17:57:06Z",
    "updated_at": "2025-01-14T15:30:17Z",
    "pushed_at": "2025-01-14T04:58:17Z",
    "size": 26243,
    "stars": 9639,
    "forks": 1727,
    "open_issues": 452,
    "watchers": 9639,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "v1",
      "v2.0.x",
      "v2.1.x",
      "v2.2.x"
    ],
    "languages": {
      "Go": 1121210,
      "Makefile": 7364,
      "CSS": 6590,
      "HTML": 5662,
      "Dockerfile": 2971,
      "Shell": 1694,
      "Nix": 725
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T19:37:36.288261"
  }
}