{
  "cve_id": "CVE-2024-23685",
  "github_data": {
    "repository": "folio-org/mod-remote-storage",
    "fix_commit": "57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b",
    "related_commits": [
      "57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b",
      "57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b"
    ],
    "patch_url": "https://github.com/folio-org/mod-remote-storage/commit/57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b.patch",
    "fix_commit_details": {
      "sha": "57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b",
      "commit_date": "2023-07-20T12:11:26Z",
      "author": {
        "login": "julianladisch",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-m8v7-469p-5x89",
        "length": 90,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 165,
        "additions": 133,
        "deletions": 32
      },
      "files": [
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 21,
          "deletions": 18,
          "patch": "@@ -15,6 +15,7 @@ The mod-remote-storage module provides API for:\n   * adapter modules\n \n ## Additional information\n+The `system-user` system user for running tasks is created in the post tenant API controller. The password must be set using the `SYSTEM_USER_PASSWORD` environment variable. Permissions are defined in `src/main/resources/permissions/system-user-permissions.csv`.\n \n API provides the following URLs for working with remote storage configurations:\n \n@@ -66,24 +67,26 @@ API provides the following URL to mark item as missing:\n \n ### Environment variables:\n \n-| Name                          | Default value             | Description                                                       |\n-| :-----------------------------| :------------------------:|:------------------------------------------------------------------|\n-| JAVA_OPTIONS                  | -XX:MaxRAMPercentage=75.0 | Java options                                                 |\n-| DB_HOST                       | postgres                  | Postgres hostname                                                 |\n-| DB_PORT                       | 5432                      | Postgres port                                                     |\n-| DB_USERNAME                   | folio_admin               | Postgres username                                                 |\n-| DB_PASSWORD                   | -                         | Postgres username password                                        |\n-| DB_DATABASE                   | okapi_modules             | Postgres database name                                            |\n-| DB_QUERYTIMEOUT               | 60000                     | Database query timeout. |\n-| DB_CHARSET                    | UTF-8                     | Database charset. |\n-| DB_MAXPOOLSIZE                | 5                         | Database max pool size. |\n-| KAFKA_HOST                    | kafka                     | Kafka broker hostname                                             |\n-| KAFKA_PORT                    | 9092                      | Kafka broker port                                                 |\n-| KAFKA_SECURITY_PROTOCOL       | PLAINTEXT                 | Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT) |\n-| KAFKA_SSL_KEYSTORE_LOCATION   | -                         | The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client. |\n-| KAFKA_SSL_KEYSTORE_PASSWORD   | -                         | The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured. |\n-| KAFKA_SSL_TRUSTSTORE_LOCATION | -                         | The location of the Kafka trust store file. |\n-| KAFKA_SSL_TRUSTSTORE_PASSWORD | -                         | The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled. |\n+| Name                          |       Default value       | Description                                                                                                                                                |\n+|:------------------------------|:-------------------------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------|\n+| JAVA_OPTIONS                  | -XX:MaxRAMPercentage=75.0 | Java options                                                                                                                                               |\n+| DB_HOST                       |         postgres          | Postgres hostname                                                                                                                                          |\n+| DB_PORT                       |           5432            | Postgres port                                                                                                                                              |\n+| DB_USERNAME                   |        folio_admin        | Postgres username                                                                                                                                          |\n+| DB_PASSWORD                   |             -             | Postgres username password                                                                                                                                 |\n+| DB_DATABASE                   |       okapi_modules       | Postgres database name                                                                                                                                     |\n+| DB_QUERYTIMEOUT               |           60000           | Database query timeout.                                                                                                                                    |\n+| DB_CHARSET                    |           UTF-8           | Database charset.                                                                                                                                          |\n+| DB_MAXPOOLSIZE                |             5             | Database max pool size.                                                                                                                                    |\n+| KAFKA_HOST                    |           kafka           | Kafka broker hostname                                                                                                                                      |\n+| KAFKA_PORT                    |           9092            | Kafka broker port                                                                                                                                          |\n+| KAFKA_SECURITY_PROTOCOL       |         PLAINTEXT         | Kafka security protocol used to communicate with brokers (SSL or PLAINTEXT)                                                                                |\n+| KAFKA_SSL_KEYSTORE_LOCATION   |             -             | The location of the Kafka key store file. This is optional for client and can be used for two-way authentication for client.                               |\n+| KAFKA_SSL_KEYSTORE_PASSWORD   |             -             | The store password for the Kafka key store file. This is optional for client and only needed if 'ssl.keystore.location' is configured.                     |\n+| KAFKA_SSL_TRUSTSTORE_LOCATION |             -             | The location of the Kafka trust store file.                                                                                                                |\n+| KAFKA_SSL_TRUSTSTORE_PASSWORD |             -             | The password for the Kafka trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled. |\n+| SYSTEM\\_USER\\_NAME            |        system-user        | Username of the system user.                                                                                                                               |\n+| SYSTEM\\_USER\\_PASSWORD        |             -             | Password of the system user.                                                                                                                               |\n \n ### Required Permissions\n Institutional users should be granted the following permissions in order to use this remote storage API:"
        },
        {
          "filename": "descriptors/ModuleDescriptor-template.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -319,6 +319,7 @@\n             \"users.item.post\",\n             \"users.item.put\",\n             \"login.item.post\",\n+            \"login.item.delete\",\n             \"perms.users.item.post\",\n             \"perms.users.assign.immutable\",\n             \"pubsub.event-types.post\","
        },
        {
          "filename": "src/main/java/org/folio/rs/ModRemoteStorageApplication.java",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,5 +1,6 @@\n package org.folio.rs;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n@@ -11,7 +12,11 @@\n @EnableFeignClients\n @EnableAutoConfiguration\n public class ModRemoteStorageApplication {\n+  public static final String SYSTEM_USER_PASSWORD = \"SYSTEM_USER_PASSWORD\";\n   public static void main(String[] args) {\n+    if (StringUtils.isEmpty(System.getenv(SYSTEM_USER_PASSWORD))) {\n+      throw new IllegalArgumentException(\"Required environment variable is missing: \" + SYSTEM_USER_PASSWORD);\n+    }\n     SpringApplication.run(ModRemoteStorageApplication.class, args);\n   }\n }"
        },
        {
          "filename": "src/main/java/org/folio/rs/client/AuthnClient.java",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -4,9 +4,11 @@\n import org.springframework.cloud.openfeign.FeignClient;\n import org.springframework.http.MediaType;\n import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n import org.springframework.web.bind.annotation.PostMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestParam;\n \n import static org.folio.spring.integration.XOkapiHeaders.TENANT;\n \n@@ -19,4 +21,7 @@ public interface AuthnClient {\n   @PostMapping(value = \"/credentials\", consumes = MediaType.APPLICATION_JSON_VALUE)\n   void saveCredentials(@RequestBody SystemUserParameters systemUserParameters);\n \n+  @DeleteMapping(value = \"/credentials\", consumes = MediaType.APPLICATION_JSON_VALUE)\n+  void deleteCredentials(@RequestParam(\"userId\") String userId);\n+\n }"
        },
        {
          "filename": "src/main/java/org/folio/rs/controller/TenantController.java",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -32,6 +32,7 @@\n import org.folio.tenant.domain.dto.Parameter;\n import org.folio.tenant.domain.dto.TenantAttributes;\n import org.folio.tenant.rest.resource.TenantApi;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n@@ -62,7 +63,10 @@ public class TenantController implements TenantApi {\n   private final List<String> retrievalQueueSamples = List.of(\"retrieval_queue_record.json\", \"retrieval_queue_record_for_caia_soft.json\");\n   private final List<String> accessionQueueSamples = Collections.singletonList(\"accession_queue_record.json\");\n \n-  public static final String SYSTEM_USER = \"system-user\";\n+  @Value(\"${remote-storage.system-user.username}\")\n+  private String username;\n+  @Value(\"${remote-storage.system-user.password}\")\n+  private String password;\n \n \n \n@@ -115,7 +119,7 @@ public ResponseEntity<Void> deleteTenant(String operationId) {\n \n   private void initializeSystemUser(String tenantId) {\n     try {\n-      securityManagerService.prepareOrUpdateSystemUser(SYSTEM_USER, SYSTEM_USER, context.getOkapiUrl(), tenantId);\n+      securityManagerService.prepareOrUpdateSystemUser(username, password, context.getOkapiUrl(), tenantId);\n     } catch (Exception e) {\n       log.error(\"Error initializing System User\", e);\n     }"
        },
        {
          "filename": "src/main/java/org/folio/rs/integration/KafkaMessageListener.java",
          "status": "modified",
          "additions": 8,
          "deletions": 3,
          "patch": "@@ -1,7 +1,5 @@\n package org.folio.rs.integration;\n \n-import static org.folio.rs.controller.TenantController.SYSTEM_USER;\n-\n import java.util.List;\n \n import org.folio.HttpStatus;\n@@ -10,6 +8,7 @@\n import org.folio.rs.service.KafkaService;\n import org.folio.rs.service.SecurityManagerService;\n import org.folio.spring.FolioExecutionContext;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.kafka.annotation.KafkaListener;\n import org.springframework.stereotype.Component;\n \n@@ -26,6 +25,12 @@ public class KafkaMessageListener {\n   private final SecurityManagerService securityManagerService;\n   private final FolioExecutionContext folioExecutionContext;\n \n+  @Value(\"${remote-storage.system-user.username}\")\n+  private String username;\n+\n+  @Value(\"${remote-storage.system-user.password}\")\n+  private String password;\n+\n   @KafkaListener(id = KafkaService.EVENT_LISTENER_ID, containerFactory = \"kafkaListenerContainerFactory\", topicPattern = \"${application.kafka.listener.events.topic-pattern}\", groupId = \"${application.kafka.listener.events.group-id}\", concurrency = \"${application.kafka.listener.events.concurrency}\")\n   public void handleEvents(List<DomainEvent> events) {\n     log.info(\"Processing resource events from kafka [eventsCount: {}]\", events.size());\n@@ -34,7 +39,7 @@ public void handleEvents(List<DomainEvent> events) {\n     } catch (FeignException fe) {\n       if (fe.status() == HttpStatus.HTTP_UNAUTHORIZED.toInt()) {\n         log.warn(\"Re-authorization attempt due to: {}\", fe.getMessage());\n-        securityManagerService.refreshSystemUserApiKey(SYSTEM_USER, SYSTEM_USER, folioExecutionContext.getOkapiUrl(), folioExecutionContext.getTenantId());\n+        securityManagerService.refreshSystemUserApiKey(username, password, folioExecutionContext.getOkapiUrl(), folioExecutionContext.getTenantId());\n         accessionQueueService.processAccessionQueueRecord(events);\n       } else {\n         log.error(\"Error processing Kafka event\", fe);"
        },
        {
          "filename": "src/main/java/org/folio/rs/service/SecurityManagerService.java",
          "status": "modified",
          "additions": 16,
          "deletions": 4,
          "patch": "@@ -53,15 +53,21 @@ public void prepareOrUpdateSystemUser(String username, String password, String o\n     var systemUserParameters = buildDefaultSystemUserParameters(username, password, okapiUrl, tenantId);\n \n     var folioUser = getFolioUser(username);\n-\n+    String userId = null;\n     if (folioUser.isPresent()) {\n       updateUser(folioUser.get());\n-      addPermissions(folioUser.get().getId());\n+      userId = folioUser.get().getId();\n+      addPermissions(userId);\n     } else {\n-      var userId = createFolioUser(username);\n-      saveCredentials(systemUserParameters);\n+      userId = createFolioUser(username);\n       assignPermissions(userId);\n     }\n+    try {\n+      deleteCredentials(userId);\n+    } catch (feign.FeignException.NotFound e) {\n+      // ignore if not exist\n+    }\n+    saveCredentials(systemUserParameters);\n     updateApiKey(systemUserParameters);\n   }\n \n@@ -141,6 +147,12 @@ private void saveCredentials(SystemUserParameters systemUserParameters) {\n \n     log.info(\"Saved credentials for user: [{}]\", systemUserParameters.getUsername());\n   }\n+  public void deleteCredentials(String userId) {\n+    authnClient.deleteCredentials(userId);\n+\n+    log.info(\"Removed credentials for user {}.\", userId);\n+  }\n+\n \n   private boolean assignPermissions(String userId) {\n     List<String> perms = readPermissionsFromResource(PERMISSIONS_FILE_PATH);"
        },
        {
          "filename": "src/main/resources/application.yml",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -79,3 +79,7 @@ application:\n \n server.port: 8081\n folio.tenant.validation.enabled: false\n+remote-storage:\n+  system-user:\n+    username: ${SYSTEM_USER_NAME:system-user}\n+    password: ${SYSTEM_USER_PASSWORD}"
        },
        {
          "filename": "src/test/java/org/folio/rs/ModRemoteStorageApplicationTest.java",
          "status": "added",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -0,0 +1,16 @@\n+package org.folio.rs;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertThrows;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class ModRemoteStorageApplicationTest {\n+\n+  @Test\n+  void exceptionOnMissingSystemUserPassword() {\n+    var e = assertThrows(IllegalArgumentException.class, () -> ModRemoteStorageApplication.main(null));\n+    assertThat(e.getMessage(), containsString(ModRemoteStorageApplication.SYSTEM_USER_PASSWORD));\n+  }\n+\n+}"
        },
        {
          "filename": "src/test/java/org/folio/rs/TestBase.java",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -35,7 +35,7 @@\n \n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n @TestPropertySource(\"classpath:application-test.yml\")\n-@ActiveProfiles(\"TestDB\")\n+@ActiveProfiles(\"test\")\n @EnableTransactionManagement\n @AutoConfigureEmbeddedDatabase(beanName = \"dataSource\")\n @Log4j2\n@@ -64,7 +64,6 @@ void setUp() {\n         .addParametersItem(new Parameter().key(PARAMETER_LOAD_SAMPLE).value(\"true\")));\n     }\n   }\n-\n   public static String getOkapiUrl() {\n     return String.format(\"http://localhost:%s\", WIRE_MOCK_PORT);\n   }"
        },
        {
          "filename": "src/test/java/org/folio/rs/controller/TenantControllerTest.java",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -15,11 +15,13 @@\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.test.mock.mockito.SpyBean;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.test.context.ActiveProfiles;\n import org.springframework.test.context.TestPropertySource;\n \n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n @TestPropertySource(\"classpath:application-test.yml\")\n @AutoConfigureEmbeddedDatabase(beanName = \"dataSource\")\n+@ActiveProfiles(\"test\")\n public class TenantControllerTest {\n   private final static String DROP_SCHEMA_QUERY = \"DROP SCHEMA IF EXISTS %1$s CASCADE; DROP ROLE IF EXISTS %1$s\";\n "
        },
        {
          "filename": "src/test/java/org/folio/rs/service/SecurityManagerServiceTest.java",
          "status": "modified",
          "additions": 35,
          "deletions": 3,
          "patch": "@@ -1,17 +1,26 @@\n package org.folio.rs.service;\n \n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.deleteRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.postRequestedFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n import static java.util.stream.Collectors.toList;\n-import static org.folio.rs.controller.TenantController.SYSTEM_USER;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.hasItems;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.github.tomakehurst.wiremock.client.WireMock;\n import java.util.List;\n \n import org.folio.rs.TestBase;\n import org.folio.spring.FolioModuleMetadata;\n+import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n \n public class SecurityManagerServiceTest extends TestBase {\n \n@@ -27,6 +36,11 @@ public class SecurityManagerServiceTest extends TestBase {\n   public static final String NON_EXISTED_USER = \"non_existed_user\";\n   public static final String NON_PRESENTED_USER = \"non_presented_user\";\n \n+  @Value(\"${remote-storage.system-user.username}\")\n+  private String username;\n+\n+  @Value(\"${remote-storage.system-user.password}\")\n+  private String password;\n   @Test\n   void testCreateDefaultSystemUser() {\n     try (var context = getFolioExecutionContextSetter()) {\n@@ -37,12 +51,12 @@ void testCreateDefaultSystemUser() {\n   }\n \n   @Test\n-  void testOverrideDefaultSystemUser() {\n+  void testOverrideDefaultSystemUser() throws NoSuchFieldException, IllegalAccessException {\n     try (var context = getFolioExecutionContextSetter()) {\n       var originalSystemUserParameters = securityManagerService.getSystemUserParameters(TEST_TENANT);\n \n       final var newOkapiUrl = \"http://new-okapi-url\";\n-      securityManagerService.prepareOrUpdateSystemUser(SYSTEM_USER, SYSTEM_USER, newOkapiUrl, TEST_TENANT);\n+      securityManagerService.prepareOrUpdateSystemUser(username, password, newOkapiUrl, TEST_TENANT);\n       var updatedSystemUserParameters = securityManagerService.getSystemUserParameters(TEST_TENANT);\n \n       assertEquals(originalSystemUserParameters.getId(), updatedSystemUserParameters.getId());\n@@ -82,4 +96,22 @@ void testRefreshSystemUserApiKey() {\n       assertThat(paths, hasItems(\"/authn/login\"));\n     }\n   }\n+\n+  @Test\n+  @DisplayName(\"Update user without previous password\")\n+  void prepareOrUpdateSystemUserWithoutPreviousPassword() {\n+    wireMockServer.stubFor(\n+      WireMock.delete(urlEqualTo(\"/authn/credentials?userId=c78aa9ec-b7d3-4d53-9e43-20296f39b496\"))\n+        .willReturn(\n+          aResponse()\n+            .withStatus(HttpStatus.NOT_FOUND.value())));\n+    try (var context = getFolioExecutionContextSetter()) {\n+      final var newOkapiUrl = \"http://new-okapi-url\";\n+      securityManagerService.prepareOrUpdateSystemUser(EXISTED_USER, password, newOkapiUrl, TEST_TENANT);\n+    }\n+    wireMockServer.verify(\n+      deleteRequestedFor(urlEqualTo(\"/authn/credentials?userId=c78aa9ec-b7d3-4d53-9e43-20296f39b496\")));\n+    wireMockServer.verify(\n+      postRequestedFor(urlEqualTo(\"/authn/credentials\")));\n+  }\n }"
        },
        {
          "filename": "src/test/resources/application-test.yml",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -32,3 +32,7 @@ logging:\n \n server.port: 8081\n folio.tenant.validation.enabled: true\n+remote-storage:\n+  system-user:\n+    username: system-user\n+    password: testpassword"
        },
        {
          "filename": "src/test/resources/mappings/authn.json",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -62,6 +62,15 @@\n         }\n       }\n     },\n+    {\n+      \"request\": {\n+        \"method\": \"DELETE\",\n+        \"url\": \"/authn/credentials\"\n+      },\n+      \"response\": {\n+        \"status\": 204\n+      }\n+    },\n     {\n     \"request\": {\n       \"method\": \"POST\","
        }
      ],
      "file_patterns": {
        "security_files": 4,
        "config_files": 4,
        "dependency_files": 0,
        "test_files": 7,
        "unique_directories": 13,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "525f0198d6292a77a6d536d57ec542f108f2a2de",
            "date": "2024-12-20T15:10:08Z",
            "author_login": "julianladisch"
          },
          {
            "sha": "9d024d52f161f6a4bcbf82c12d3b9237c5b0d874",
            "date": "2024-12-20T14:55:06Z",
            "author_login": "julianladisch"
          },
          {
            "sha": "e8a917287d1134f328b3607731d7c0356ed9fa87",
            "date": "2024-12-20T14:54:24Z",
            "author_login": "julianladisch"
          },
          {
            "sha": "7360f9d14d630d678f61b185fdab8a46976aa65c",
            "date": "2024-12-19T11:32:29Z",
            "author_login": "julianladisch"
          },
          {
            "sha": "cbc08c9bca8f95897025f49fedb353c9ade17a16",
            "date": "2024-12-19T10:50:23Z",
            "author_login": "julianladisch"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-798",
    "description": "Hard-coded credentials in mod-remote-storage versions under 1.7.2 and from 2.0.0 to 2.0.3 allows unauthorized users to gain read access to mod-inventory-storage records including instances, holdings, items, contributor-types, and identifier-types.\n\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-01-19T21:15:10.470",
    "last_modified": "2024-11-21T08:58:10.333",
    "fix_date": "2023-07-20T12:11:26Z"
  },
  "references": [
    {
      "url": "https://github.com/advisories/GHSA-m8v7-469p-5x89",
      "source": "disclosure@vulncheck.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/folio-org/mod-remote-storage/commit/57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b",
      "source": "disclosure@vulncheck.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/folio-org/mod-remote-storage/security/advisories/GHSA-m8v7-469p-5x89",
      "source": "disclosure@vulncheck.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://vulncheck.com/advisories/vc-advisory-GHSA-m8v7-469p-5x89",
      "source": "disclosure@vulncheck.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wiki.folio.org/x/hbMMBw",
      "source": "disclosure@vulncheck.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/advisories/GHSA-m8v7-469p-5x89",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/folio-org/mod-remote-storage/commit/57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/folio-org/mod-remote-storage/security/advisories/GHSA-m8v7-469p-5x89",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://vulncheck.com/advisories/vc-advisory-GHSA-m8v7-469p-5x89",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://wiki.folio.org/x/hbMMBw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.512191",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mod-remote-storage",
    "owner": "folio-org",
    "created_at": "2020-11-16T03:29:49Z",
    "updated_at": "2024-12-20T15:10:12Z",
    "pushed_at": "2025-01-02T17:00:36Z",
    "size": 1075,
    "stars": 1,
    "forks": 9,
    "open_issues": 0,
    "watchers": 1,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 301091,
      "Shell": 878,
      "Dockerfile": 578
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T23:02:13.885734"
  }
}