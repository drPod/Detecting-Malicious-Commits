{
  "cve_id": "CVE-2024-23819",
  "github_data": {
    "repository": "geoserver/geoserver",
    "fix_commit": "6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
    "related_commits": [
      "6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
      "df65ff05250cbb498c78af906d66e0c084ace8a1",
      "6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
      "df65ff05250cbb498c78af906d66e0c084ace8a1"
    ],
    "patch_url": "https://github.com/geoserver/geoserver/commit/6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef.patch",
    "fix_commit_details": {
      "sha": "6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
      "commit_date": "2023-10-10T15:35:52Z",
      "author": {
        "login": "sikeoka",
        "type": "User",
        "stats": {
          "total_commits": 201,
          "average_weekly_commits": 0.29515418502202645,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 105
        }
      },
      "commit_message": {
        "title": "[GEOS-11154] Improve handling special characters in the MapML HTML Page",
        "length": 71,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 41,
        "additions": 36,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/extension/mapml/src/main/java/org/geoserver/mapml/MapMLController.java",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -5,6 +5,7 @@\n \n package org.geoserver.mapml;\n \n+import static org.apache.commons.text.StringEscapeUtils.escapeHtml4;\n import static org.geoserver.mapml.MapMLConstants.MAPML_MIME_TYPE;\n \n import java.io.IOException;\n@@ -186,13 +187,12 @@ public String Html(\n                         \"/mapml/viewer/widget/mapml-viewer.js\",\n                         null,\n                         URLMangler.URLType.RESOURCE);\n-        String title = layerLabel;\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"<!DOCTYPE html>\\n\")\n                 .append(\"<html>\\n\")\n                 .append(\"<head>\\n\")\n                 .append(\"<title>\")\n-                .append(title)\n+                .append(escapeHtml4(layerLabel))\n                 .append(\"</title>\\n\")\n                 .append(\"<meta charset='utf-8'>\\n\")\n                 .append(\"<script type=\\\"module\\\"  src=\\\"\")\n@@ -225,17 +225,17 @@ public String Html(\n                 .append(longitude)\n                 .append(\"\\\" controls controlslist=\\\"geolocation\\\">\\n\")\n                 .append(\"<layer- label=\\\"\")\n-                .append(layerLabel)\n+                .append(escapeHtml4(layerLabel))\n                 .append(\"\\\" \")\n                 .append(\"src=\\\"\")\n                 .append(request.getContextPath())\n                 .append(request.getServletPath())\n                 .append(\"/\")\n-                .append(layer)\n+                .append(escapeHtml4(layer))\n                 .append(\"/\")\n                 .append(proj)\n                 .append(\"/\")\n-                .append(!styleName.isEmpty() ? \"?style=\" + styleName : \"\")\n+                .append(!styleName.isEmpty() ? \"?style=\" + escapeHtml4(styleName) : \"\")\n                 .append(\"\\\" checked></layer->\\n\")\n                 .append(\"</mapml-viewer>\\n\")\n                 .append(\"</body>\\n\")"
        },
        {
          "filename": "src/extension/mapml/src/test/java/org/geoserver/mapml/MapMLControllerTest.java",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -6,6 +6,9 @@\n \n import static org.custommonkey.xmlunit.XMLAssert.assertXpathEvaluatesTo;\n import static org.geowebcache.grid.GridSubsetFactory.createGridSubSet;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.not;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -243,6 +246,34 @@ public void testHTML() throws Exception {\n                 \"layerGroup\".equalsIgnoreCase(d.title()));\n     }\n \n+    @Test\n+    public void testEscaping() throws Exception {\n+        String unescapedTitle = \"title\\\"><\";\n+        String escapedTitle = \"title&quot;&gt;&lt;\";\n+        Catalog catalog = getCatalog();\n+        LayerGroupInfo lg = catalog.getLayerGroupByName(\"layerGroup\");\n+        MockHttpServletRequest request = createRequest(\"mapml/\" + lg.getName() + \"/osmtile\");\n+        MockHttpServletResponse response = new MockHttpServletResponse();\n+        try {\n+            lg.setTitle(unescapedTitle);\n+            catalog.save(lg);\n+            String htmlResponse =\n+                    mc.Html(\n+                            request,\n+                            response,\n+                            lg.getName(),\n+                            \"osmtile\",\n+                            Optional.empty(),\n+                            Optional.empty(),\n+                            Optional.empty());\n+            assertThat(htmlResponse, not(containsString(unescapedTitle)));\n+            assertThat(htmlResponse, containsString(escapedTitle));\n+        } finally {\n+            lg.setTitle(null);\n+            catalog.save(lg);\n+        }\n+    }\n+\n     @Test\n     public void testNonExistentLayer() throws Exception {\n         MockHttpServletRequest request = createRequest(\"mapml/\" + \"foo\" + \"/osmtile\");"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "159e5bf6afbfb9776f08cbe03d8ed09cb2d55507",
            "date": "2025-01-13T09:52:26Z",
            "author_login": "osgeoweblate"
          },
          {
            "sha": "87d9c20e47643bed223bf2a39d546b2a770c9b29",
            "date": "2025-01-13T09:01:15Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "ae63d2cefb5114fec88c4831af61252fbef9dceb",
            "date": "2025-01-06T10:38:14Z",
            "author_login": "aaime"
          },
          {
            "sha": "31ed8d7da74d757bc199ed550ec52c2340781134",
            "date": "2025-01-08T11:01:24Z",
            "author_login": "aaime"
          },
          {
            "sha": "9eedb76aaa41300e4dcc0db538d26cd860ef8cc3",
            "date": "2025-01-08T04:32:41Z",
            "author_login": "jodygarnett"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the MapML HTML Page. The MapML extension must be installed and access to the MapML HTML Page is available to all users although data security may limit users' ability to trigger the XSS. Versions 2.23.4 and 2.24.1 contain a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-20T18:15:09.970",
    "last_modified": "2024-12-17T20:13:05.990",
    "fix_date": "2023-10-10T15:35:52Z"
  },
  "references": [
    {
      "url": "https://github.com/geoserver/geoserver/commit/6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/df65ff05250cbb498c78af906d66e0c084ace8a1",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/pull/7175",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/security/advisories/GHSA-7x76-57fr-m5r5",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://osgeo-org.atlassian.net/browse/GEOS-11154",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/6f04adbdc6c289f5cb815b1462a6bd790e3fb6ef",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/commit/df65ff05250cbb498c78af906d66e0c084ace8a1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/pull/7175",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/geoserver/geoserver/security/advisories/GHSA-7x76-57fr-m5r5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://osgeo-org.atlassian.net/browse/GEOS-11154",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.871820",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "geoserver",
    "owner": "geoserver",
    "created_at": "2011-11-10T19:56:06Z",
    "updated_at": "2025-01-13T14:27:07Z",
    "pushed_at": "2025-01-13T09:52:26Z",
    "size": 319674,
    "stars": 3917,
    "forks": 2193,
    "open_issues": 12,
    "watchers": 3917,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "2.1.x",
      "2.2.x",
      "2.3.x",
      "2.4.x",
      "2.5.x",
      "2.6.x",
      "2.6.0.x",
      "2.7.x",
      "2.7.1.x",
      "2.8.x",
      "2.9.x",
      "2.10.x",
      "2.11.x",
      "2.12.x",
      "2.13.x",
      "2.14.x",
      "2.15.x",
      "2.16.x",
      "2.17.x",
      "2.18.x",
      "2.19.x",
      "2.20.x",
      "2.21.x",
      "2.22.x",
      "2.23.x",
      "2.24.x",
      "2.25.x"
    ],
    "languages": {
      "Java": 44761611,
      "JavaScript": 1182828,
      "Scheme": 1167338,
      "HTML": 712425,
      "FreeMarker": 215786,
      "XSLT": 156026,
      "CSS": 120514,
      "Shell": 50551,
      "NSIS": 44051,
      "Python": 18317,
      "Makefile": 17825,
      "Batchfile": 13345,
      "AMPL": 8670,
      "Dockerfile": 3836,
      "Fluent": 117
    },
    "commit_activity": {
      "total_commits_last_year": 617,
      "avg_commits_per_week": 11.865384615384615,
      "days_active_last_year": 235
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T12:58:19.409251"
  }
}