{
  "cve_id": "CVE-2024-23830",
  "github_data": {
    "repository": "mantisbt/mantisbt",
    "fix_commit": "7055731d09ff12b2781410a372f790172e279744",
    "related_commits": [
      "7055731d09ff12b2781410a372f790172e279744",
      "7055731d09ff12b2781410a372f790172e279744"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "7055731d09ff12b2781410a372f790172e279744",
      "commit_date": "2024-02-20T21:10:20Z",
      "author": {
        "login": "dregad",
        "type": "User",
        "stats": {
          "total_commits": 3418,
          "average_weekly_commits": 2.886824324324324,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 500
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-mcqj-7p29-9528",
        "length": 2033,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 318,
        "additions": 229,
        "deletions": 89
      },
      "files": [
        {
          "filename": "admin/check/check_paths_inc.php",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -36,6 +36,18 @@\n \n check_print_section_header_row( 'Paths' );\n \n+global $g_defaulted_path;\n+const HOST_HEADER_INJECTION_URL = 'https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/07-Input_Validation_Testing/17-Testing_for_Host_Header_Injection';\n+check_print_test_warn_row(\n+\t'\"path\" is defined in config_inc.php.',\n+\t!$g_defaulted_path,\n+\tarray( false =>\n+\t\t'Leaving it empty is a security risk, as the path will be set based on '\n+\t\t. 'headers from the HTTP request, exposing your system to '\n+\t\t. '<a href=\"' . HOST_HEADER_INJECTION_URL . '\">Host Header Injection attacks</a>.'\n+\t)\n+);\n+\n $t_path_config_names = array(\n \t'absolute_path',\n \t'core_path',"
        },
        {
          "filename": "admin/install.php",
          "status": "modified",
          "additions": 64,
          "deletions": 2,
          "patch": "@@ -240,6 +240,7 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t$f_db_username            = config_get_global( 'db_username', '' );\n \t$f_db_password            = config_get_global( 'db_password', '' );\n \t$f_timezone               = config_get( 'default_timezone', '' );\n+\t$f_path                   = config_get_global( 'path', '' );\n \n \t# Set default prefix/suffix form variables ($f_db_table_XXX)\n \t$t_prefix_type = 'other';\n@@ -258,6 +259,7 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t\t$f_db_password = config_get_global( 'db_password' );\n \t}\n \t$f_timezone           = gpc_get( 'timezone', config_get( 'default_timezone' ) );\n+\t$f_path               = gpc_get( 'path', config_get_global( 'path', '' ) );\n \n \t# Set default prefix/suffix form variables ($f_db_table_XXX)\n \t$t_prefix_type = $f_db_type == 'oci8' ? $f_db_type : 'other';\n@@ -471,6 +473,40 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t}\n \t?>\n </tr>\n+<tr>\n+\t<td>\n+\t\tChecking URL to installation\n+\t</td>\n+\t<?php\n+\t\t$t_url_check = '';\n+\t\tif( !$f_path ) {\n+\t\t\t# Empty URL - warn admin about security risk\n+\t\t\t$t_url_check = \"Using an empty path is a security risk, as MantisBT \"\n+\t\t\t\t. \"will dynamically set it based on headers from the HTTP request, \"\n+\t\t\t\t. \"exposing your system to Host Header Injection attacks.\";\n+\t\t\t$t_hard_fail = false;\n+\t\t} else {\n+\t\t\t# Make sure we have a trailing '/'\n+\t\t\t$f_path = rtrim( $f_path, '/' ) . '/';\n+\n+\t\t\t# Check that the URL is valid\n+\t\t\tif( !filter_var( $f_path, FILTER_VALIDATE_URL ) ) {\n+\t\t\t\t$t_url_check = \"'$f_path' is not a valid URL.\";\n+\t\t\t} else {\n+\t\t\t\trequire_api( 'url_api.php' );\n+\t\t\t\t$t_page_contents = url_get( $f_path );\n+\t\t\t\tif( !$t_page_contents ) {\n+\t\t\t\t\t$t_url_check = \"Can't retrieve web page at '$f_path'.\";\n+\t\t\t\t} elseif( false === strpos( $t_page_contents, 'MantisBT') ) {\n+\t\t\t\t\t$t_url_check = \"Web page at '$f_path' does not appear to be a MantisBT site.\";\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t$t_hard_fail = true;\n+\t\t}\n+\n+\t\tprint_test_result( $t_url_check ? BAD : GOOD, $t_hard_fail, $t_url_check );\n+\t?>\n+</tr>\n <?php\n \tif( $f_db_exists ) {\n \t\t?>\n@@ -724,13 +760,13 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t\techo \"\\t</td>\\n\\t<td>\\n\\t\\t\";\n \t\t$t_required = $t_key == 'db_table_plugin_prefix' ? 'required' : '';\n \t\t/** @noinspection HtmlUnknownAttribute */\n-\t\tprintf( '<input id=\"%1$s\" name=\"%1$s\" type=\"text\" class=\"table-prefix\" %2$s value=\"%3$s\">',\n+\t\tprintf( '<input id=\"%1$s\" name=\"%1$s\" type=\"text\" class=\"table-prefix reset\" %2$s value=\"%3$s\">',\n \t\t\t$t_key,\n \t\t\t$t_key == 'db_table_plugin_prefix' ? 'required' : '',\n \t\t\t${'f_' . $t_key} // The actual value of the corresponding form variable\n \t\t);\n \t\techo \"\\n&nbsp;\";\n-\t\tprintf( '<button id=\"%s\" type=\"button\" class=\"btn btn-sm btn-primary btn-white btn-round reset-prefix\">%s</button>',\n+\t\tprintf( '<button id=\"%s\" type=\"button\" class=\"btn btn-sm btn-primary btn-white btn-round reset\">%s</button>',\n \t\t\t\"btn_$t_key\",\n \t\t\tlang_get( 'reset' )\n \t\t);\n@@ -765,6 +801,27 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t\t</select>\n \t</td>\n </tr>\n+\n+<!-- URL to installation ($g_path) -->\n+<tr>\n+\t<td>\n+\t\t<label for=\"path\">URL to your installation (<em>$g_path</em>, see\n+\t\t\t<a href=\"https://mantisbt.org/docs/master/en-US/Admin_Guide/html-desktop/#admin.config.path\"\n+\t\t\t   target=\"_blank\">documentation</a>)\n+\t\t</label>\n+\t</td>\n+\t<td>\n+\t\t<input id=\"path\" name=\"path\" type=\"text\" size=\"50\" class=\"reset\"\n+\t\t\t   value=\"<?php echo string_attribute( $f_path ) ?>\"\n+\t\t\t   data-defval=\"<?php global $g_path; echo string_attribute( $g_path ); ?>\"\n+\t\t/>\n+\n+\t\t<button id=\"btn_path\" type=\"button\" class=\"btn btn-sm btn-primary btn-white btn-round reset\">\n+\t\t\t<?php echo lang_get( 'reset' ); ?>\n+\t\t</button>\n+\t</td>\n+</tr>\n+\n <?php\n } # end install-only fields\n ?>\n@@ -1324,6 +1381,11 @@ function_exists( 'mysqli_stmt_get_result' ),\n \t\t. (!$t_crypto_master_salt ? \"# The installer could not generate the Master Salt; please set it manually.\\n\" : '')\n \t\t. \"\\$g_crypto_master_salt     = '\" . addslashes( $t_crypto_master_salt ) . \"';\" . PHP_EOL;\n \n+\tif( $f_path ) {\n+\t\t$t_config .= PHP_EOL\n+\t\t\t. \"\\$g_path                   = '\" . addslashes( $f_path ) . \"';\" . PHP_EOL;\n+\t}\n+\n \t$t_write_failed = true;\n \n \tif( !$t_config_exists ) {"
        },
        {
          "filename": "config_defaults_inc.php",
          "status": "modified",
          "additions": 21,
          "deletions": 74,
          "patch": "@@ -194,83 +194,34 @@\n # MantisBT Path Settings #\n ##########################\n \n-$t_protocol = 'http';\n-$t_host = 'localhost';\n-if( isset ( $_SERVER['SCRIPT_NAME'] ) ) {\n-\t$t_protocol = http_is_protocol_https() ? 'https' : 'http';\n-\n-\t# $_SERVER['SERVER_PORT'] is not defined in case of php-cgi.exe\n-\tif( isset( $_SERVER['SERVER_PORT'] ) ) {\n-\t\t$t_port = ':' . $_SERVER['SERVER_PORT'];\n-\t\tif( ( ':80' == $t_port && 'http' == $t_protocol )\n-\t\t  || ( ':443' == $t_port && 'https' == $t_protocol )) {\n-\t\t\t$t_port = '';\n-\t\t}\n-\t} else {\n-\t\t$t_port = '';\n-\t}\n-\n-\tif( isset( $_SERVER['HTTP_X_FORWARDED_HOST'] ) ) { # Support ProxyPass\n-\t\t$t_hosts = explode( ',', $_SERVER['HTTP_X_FORWARDED_HOST'] );\n-\t\t$t_host = $t_hosts[0];\n-\t} else if( isset( $_SERVER['HTTP_HOST'] ) ) {\n-\t\t$t_host = $_SERVER['HTTP_HOST'];\n-\t} else if( isset( $_SERVER['SERVER_NAME'] ) ) {\n-\t\t$t_host = $_SERVER['SERVER_NAME'] . $t_port;\n-\t} else if( isset( $_SERVER['SERVER_ADDR'] ) ) {\n-\t\t$t_host = $_SERVER['SERVER_ADDR'] . $t_port;\n-\t}\n-\n-\tif( !isset( $_SERVER['SCRIPT_NAME'] )) {\n-\t\techo 'Invalid server configuration detected. Please set $g_path manually in ' . $g_config_path . 'config_inc.php.';\n-\t\tif( isset( $_SERVER['SERVER_SOFTWARE'] ) && ( stripos($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false ) )\n-\t\t\techo ' Please try to add \"fastcgi_param SCRIPT_NAME $fastcgi_script_name;\" to the nginx server configuration.';\n-\t\tdie;\n-\t}\n-\n-\t# Prevent XSS if the path is displayed later on. This is the equivalent of\n-\t# FILTER_SANITIZE_STRING, which was deprecated in PHP 8.1:\n-\t# strip tags and null bytes, then encode quotes into HTML entities\n-\t$t_path = preg_replace( '/\\x00|<[^>]*>?/', '', $_SERVER['SCRIPT_NAME'] );\n-\t$t_path = str_replace( [\"'\", '\"'], ['&#39;', '&#34;'], $t_path );\n-\n-\t$t_path = dirname( $t_path );\n-\tswitch( basename( $t_path ) ) {\n-\t\tcase 'admin':\n-\t\t\t$t_path = dirname( $t_path );\n-\t\t\tbreak;\n-\t\tcase 'check':\t\t# admin checks dir\n-\t\tcase 'soap':\n-\t\tcase 'rest':\n-\t\t\t$t_path = dirname( $t_path, 2 );\n-\t\t\tbreak;\n-\t\tcase 'swagger':\n-\t\t\t$t_path = dirname( $t_path, 3 );\n-\t\t\tbreak;\n-\t}\n-\t$t_path = rtrim( $t_path, '/\\\\' ) . '/';\n-\n-\tif( strpos( $t_path, '&#' ) ) {\n-\t\techo 'Can not safely determine $g_path. Please set $g_path manually in ' . $g_config_path . 'config_inc.php';\n-\t\tdie;\n-\t}\n-} else {\n-\t$t_path = 'mantisbt/';\n-}\n-\n /**\n- * Path to your installation as seen from the web browser\n- * requires trailing /\n+ * Full URL to your installation as seen from the web browser.\n+ *\n+ * Requires trailing `/`.\n+ *\n+ * If not set, MantisBT will default this to a working URL valid for most\n+ * installations.\n+ *\n+ * WARNING: The default is built based on headers from the HTTP request\n+ * ({@see set_default_path()} in core.php). This is a potential security risk,\n+ * as the system will be exposed to Host Header injection attacks, so it is\n+ * strongly recommended to initialize this in config_inc.php.\n+ *\n  * @global string $g_path\n  */\n-$g_path\t= $t_protocol . '://' . $t_host . $t_path;\n+$g_path\t= '';\n \n /**\n- * Short web path without the domain name\n- * requires trailing /\n+ * Short web path without the domain name.\n+ *\n+ * requires trailing `/`.\n+ *\n+ * This is defined by MantisBT core based on the script being executed, and\n+ * should not be set in config_inc.php.\n+ *\n  * @global string $g_short_path\n  */\n-$g_short_path = $t_path;\n+$g_short_path = '';\n \n /**\n  * Used to link to manual for User Documentation.\n@@ -5052,10 +5003,6 @@\n \t'wrap_in_preformatted_text'\n );\n \n-# Temporary variables should not remain defined in global scope\n-unset( $t_protocol, $t_host, $t_hosts, $t_port, $t_self, $t_path );\n-\n-\n ############################\n # Webservice Configuration #\n ############################"
        },
        {
          "filename": "core.php",
          "status": "modified",
          "additions": 89,
          "deletions": 1,
          "patch": "@@ -99,11 +99,16 @@\n \n # config_inc may not be present if this is a new install\n $t_config_inc_found = file_exists( $g_config_path . 'config_inc.php' );\n-\n if( $t_config_inc_found ) {\n \trequire_once( $g_config_path . 'config_inc.php' );\n }\n \n+# Set global path variables\n+# NOTE: We store whether $g_path was defaulted, so we can later warn the admin\n+# about the exposure to host header injection attacks if they didn't set it.\n+global $g_defaulted_path;\n+$g_defaulted_path = set_default_path();\n+\n # Ensure PHP LDAP extension is available when Login Method is LDAP\n global $g_login_method;\n if ( $g_login_method == LDAP ) {\n@@ -306,6 +311,89 @@ function http_is_protocol_https() {\n \treturn false;\n }\n \n+/**\n+ * Set Global Path variables.\n+ *\n+ * @see $g_path\n+ * @see $g_short_path\n+ *\n+ * @return bool True if default $g_path was assigned, false if it was already set.\n+ */\n+function set_default_path() {\n+\tglobal $g_path, $g_short_path, $g_config_path;\n+\n+\t# $g_path is set in config_inc.php\n+\tif( $g_path ) {\n+\t\t# Derive $g_short_path from $g_path if not set\n+\t\tif( !$g_short_path ) {\n+\t\t\t$g_short_path = parse_url( $g_path, PHP_URL_PATH );\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t$t_protocol = 'http';\n+\t$t_host = 'localhost';\n+\tif( isset( $_SERVER['SCRIPT_NAME'] ) ) {\n+\t\t$t_protocol = http_is_protocol_https() ? 'https' : 'http';\n+\n+\t\t# $_SERVER['SERVER_PORT'] is not defined in case of php-cgi.exe\n+\t\tif( isset( $_SERVER['SERVER_PORT'] ) ) {\n+\t\t\t$t_port = ':' . $_SERVER['SERVER_PORT'];\n+\t\t\tif( ( ':80' == $t_port && 'http' == $t_protocol )\n+\t\t\t\t|| ( ':443' == $t_port && 'https' == $t_protocol )) {\n+\t\t\t\t$t_port = '';\n+\t\t\t}\n+\t\t} else {\n+\t\t\t$t_port = '';\n+\t\t}\n+\n+\t\tif( isset( $_SERVER['HTTP_X_FORWARDED_HOST'] ) ) { # Support ProxyPass\n+\t\t\t$t_hosts = explode( ',', $_SERVER['HTTP_X_FORWARDED_HOST'] );\n+\t\t\t$t_host = $t_hosts[0];\n+\t\t} else if( isset( $_SERVER['HTTP_HOST'] ) ) {\n+\t\t\t$t_host = $_SERVER['HTTP_HOST'];\n+\t\t} else if( isset( $_SERVER['SERVER_NAME'] ) ) {\n+\t\t\t$t_host = $_SERVER['SERVER_NAME'] . $t_port;\n+\t\t} else if( isset( $_SERVER['SERVER_ADDR'] ) ) {\n+\t\t\t$t_host = $_SERVER['SERVER_ADDR'] . $t_port;\n+\t\t}\n+\n+\t\t# Prevent XSS if the path is displayed later on. This is the equivalent of\n+\t\t# FILTER_SANITIZE_STRING, which was deprecated in PHP 8.1:\n+\t\t# strip tags and null bytes, then encode quotes into HTML entities\n+\t\t$t_path = preg_replace( '/\\x00|<[^>]*>?/', '', $_SERVER['SCRIPT_NAME'] );\n+\t\t$t_path = str_replace( [\"'\", '\"'], ['&#39;', '&#34;'], $t_path );\n+\n+\t\t$t_path = dirname( $t_path );\n+\t\tswitch( basename( $t_path ) ) {\n+\t\t\tcase 'admin':\n+\t\t\t\t$t_path = dirname( $t_path );\n+\t\t\t\tbreak;\n+\t\t\tcase 'check': # admin checks dir\n+\t\t\tcase 'soap':\n+\t\t\tcase 'rest':\n+\t\t\t\t$t_path = dirname( $t_path, 2 );\n+\t\t\t\tbreak;\n+\t\t\tcase 'swagger':\n+\t\t\t\t$t_path = dirname( $t_path, 3 );\n+\t\t\t\tbreak;\n+\t\t}\n+\t\t$t_path = rtrim( $t_path, '/\\\\' ) . '/';\n+\n+\t\tif( strpos( $t_path, '&#' ) ) {\n+\t\t\techo 'Can not safely determine $g_path. Please set $g_path manually in ' . $g_config_path . 'config_inc.php';\n+\t\t\tdie;\n+\t\t}\n+\t} else {\n+\t\t$t_path = 'mantisbt/';\n+\t}\n+\n+\t$g_path\t= $t_protocol . '://' . $t_host . $t_path;\n+\t$g_short_path = $t_path;\n+\n+\treturn true;\n+}\n+\n /**\n  * Define an autoload function to automatically load classes when referenced\n  *"
        },
        {
          "filename": "docbook/Admin_Guide/en-US/config/path.xml",
          "status": "modified",
          "additions": 22,
          "deletions": 6,
          "patch": "@@ -13,13 +13,29 @@\n \t\t<varlistentry>\n \t\t\t<term>$g_path</term>\n \t\t\t<listitem>\n-\t\t\t\t<para>URL to your installation as seen from the web browser; this\n-\t\t\t\t\tis what you type into the URL field. Requires trailing '/'\n-\t\t\t\t\tcharacter. eg. 'https://www.example.com/mantisbt/'.  MantisBT will default this to\n-\t\t\t\t\tthe correct value. However, in some cases it might be necessary to\n-\t\t\t\t\toverride the default.  This is typically needed when an installation can be\n-\t\t\t\t\taccessed by multiple URLs (internal vs external).\n+\t\t\t\t<para>\n+\t\t\t\t\tFull URL to your installation as seen from the web browser.\n \t\t\t\t</para>\n+\t\t\t\t<para>\n+\t\t\t\t\tThis is what users type into the URL field, e.g.\n+\t\t\t\t\t<literal>https://www.example.com/mantisbt/</literal>.\n+\t\t\t\t\tRequires trailing `/`.\n+\t\t\t\t</para>\n+\t\t\t\t<para>\n+\t\t\t\t\tIf not set, MantisBT will default this to a working URL valid\n+\t\t\t\t\tfor most installations. However, in some cases (typically when\n+\t\t\t\t\tan installation can be accessed by multiple URLs, e.g. internal\n+\t\t\t\t\tvs external), it might be necessary to override the default.\n+\t\t\t\t</para>\n+\t\t\t\t<warning><para>\n+\t\t\t\t\tThe default is built based on headers from the HTTP request.\n+\t\t\t\t\tThis is a potential security risk, as the system will be exposed to\n+\t\t\t\t\t<ulink url=\"https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/07-Input_Validation_Testing/17-Testing_for_Host_Header_Injection\"\n+\t\t\t\t\t>Host Header injection</ulink>\n+\t\t\t\t\tattacks, so it is\n+\t\t\t\t\tstrongly recommended to initialize this in config_inc.php.\n+\t\t\t\t\t</para>\n+\t\t\t\t</warning>\n \t\t\t</listitem>\n \t\t</varlistentry>\n \t\t<varlistentry>"
        },
        {
          "filename": "js/install.js",
          "status": "modified",
          "additions": 11,
          "deletions": 4,
          "patch": "@@ -70,15 +70,22 @@ function PrefixInput (inputId) {\n \t};\n }\n \n-var reset_buttons = $('button.reset-prefix');\n+var reset_buttons = $('button.reset').each( function () {\n+\tthis.title = \"Reset the field to its default value\";\n+});\n \n /**\n  * Initialize all input's default values and disable the reset buttons\n  */\n-var inputs = $('input.table-prefix').each(function () {\n+$('input.table-prefix').each(function () {\n \tvar input = new PrefixInput(this.id);\n \tinput.setDefault(input.getValue());\n-\tinput.disableButton();\n+});\n+var inputs = $('input.reset').each(function () {\n+\tvar input = new PrefixInput(this.id);\n+\tif (input.isValueDefault()) {\n+\t\tinput.disableButton();\n+\t}\n });\n \n /**\n@@ -133,7 +140,7 @@ inputs.on('input', function () {\n  * Buttons to reset the prefix/suffix to the current default value\n  */\n reset_buttons.on('click', function () {\n-\tvar input = new PrefixInput($(this).prev('input.table-prefix')[0].id);\n+\tvar input = new PrefixInput($(this).prev('input.reset')[0].id);\n \tinput.resetValue();\n \tupdate_sample_table_names();\n });"
        },
        {
          "filename": "lang/strings_english.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -627,6 +627,7 @@ $s_please_report = 'Please report this to the %1$s.';\n $s_warning_plain_password_authentication = '<strong>Warning:</strong> Plain password authentication is used, this will expose your passwords to administrators.';\n $s_warning_default_administrator_account_present = '<strong>Warning:</strong> You should disable the default \\'administrator\\' account or change its password.';\n $s_warning_admin_directory_present = '<strong>Warning:</strong> \"admin\" directory should be removed, or access to it restricted.';\n+$s_warning_host_header_injection_hazard = '<strong>Warning:</strong> \"path\" was not defined in config_inc.php. Leaving it empty is a security risk, as the path will be set based on headers from the HTTP request, exposing your system to Host Header Injection attacks.';\n $s_warning_change_setting = '<strong>Warning:</strong> \"%1$s\" is not set to its default value (%2$s).';\n $s_warning_security_hazard = 'This is a potential security hazard as it can expose sensitive information.';\n $s_warning_integrity_hazard = 'This will cause MantisBT to continue when errors occurs and may lead to system/data integrity issues.';"
        },
        {
          "filename": "login_page.php",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -152,6 +152,12 @@\n \t\t}\n \t}\n \n+\t# $g_path was defaulted - risk of Host Header injection attack\n+\tglobal $g_defaulted_path;\n+\tif( $g_defaulted_path ) {\n+\t\t$t_warnings[] = lang_get( 'warning_host_header_injection_hazard' );\n+\t}\n+\n \t/**\n \t * Display Warnings for enabled debugging / developer settings\n \t * @param string $p_type    Message Type.\n@@ -161,8 +167,8 @@\n \t */\n \tfunction debug_setting_message ( $p_type, $p_setting, $p_value ) {\n \t\treturn sprintf( lang_get( 'warning_change_setting' ), $p_setting, $p_value )\n-\t\t\t. sprintf( lang_get( 'word_separator' ) )\n-\t\t\t. sprintf( lang_get( \"warning_{$p_type}_hazard\" ) );\n+\t\t\t. lang_get( 'word_separator' )\n+\t\t\t. lang_get( \"warning_{$p_type}_hazard\" );\n \t}\n \n \t$t_config = 'show_detailed_errors';\n@@ -180,6 +186,7 @@ function debug_setting_message ( $p_type, $p_setting, $p_value ) {\n \t# Check for db upgrade for versions > 1.0.0 using new installer and schema\n \tif( $t_admin_dir_is_accessible ) {\n \t\trequire_once( 'admin/schema.php' );\n+\t\t/** @var array $g_upgrade */\n \t\t$t_upgrades_reqd = count( $g_upgrade ) - 1;\n \n \t\tif( ( 0 < $t_db_version ) &&"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "924fb05df417dc639fd50a518dba20531a322851",
            "date": "2025-01-23T12:46:58Z",
            "author_login": "dregad"
          },
          {
            "sha": "60cb1d4e48e3e4578a1b8f662e22ba59dea9cb21",
            "date": "2025-01-23T12:41:32Z",
            "author_login": "raspopov"
          },
          {
            "sha": "7626b72778eaa1d3767b21f613219b0d1c46d9ca",
            "date": "2025-01-23T12:29:11Z",
            "author_login": "dregad"
          },
          {
            "sha": "4994c09658dd16045cc2ff62f184842029fb43fc",
            "date": "2025-01-23T12:07:11Z",
            "author_login": "translatewiki"
          },
          {
            "sha": "64a6c746c971d6f7ecc3063f5bafe9cb357cca93",
            "date": "2025-01-20T12:07:27Z",
            "author_login": "translatewiki"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L",
    "cwe_id": "CWE-74",
    "description": "MantisBT is an open source issue tracker. Prior to version 2.26.1, an unauthenticated attacker who knows a user's email address and username can hijack the user's account by poisoning the link in the password reset notification message. A patch is available in version 2.26.1. As a workaround, define `$g_path` as appropriate in `config_inc.php`.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-20T22:15:08.460",
    "last_modified": "2024-12-18T18:03:25.023",
    "fix_date": "2024-02-20T21:10:20Z"
  },
  "references": [
    {
      "url": "https://github.com/mantisbt/mantisbt/commit/7055731d09ff12b2781410a372f790172e279744",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/security/advisories/GHSA-mcqj-7p29-9528",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://mantisbt.org/bugs/view.php?id=19381",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/commit/7055731d09ff12b2781410a372f790172e279744",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/security/advisories/GHSA-mcqj-7p29-9528",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://mantisbt.org/bugs/view.php?id=19381",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.139495",
    "processing_status": "enhanced"
  }
}