{
  "cve_id": "CVE-2024-2397",
  "github_data": {
    "repository": "the-tcpdump-group/tcpdump",
    "fix_commit": "b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2",
    "related_commits": [
      "b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2",
      "b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2"
    ],
    "patch_url": "https://github.com/the-tcpdump-group/tcpdump/commit/b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2.patch",
    "fix_commit_details": {
      "sha": "b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2",
      "commit_date": "2024-03-12T07:37:23Z",
      "author": {
        "login": "guyharris",
        "type": "User",
        "stats": {
          "total_commits": 1754,
          "average_weekly_commits": 1.3287878787878789,
          "total_additions": 334479,
          "total_deletions": 321814,
          "weeks_active": 331
        }
      },
      "commit_message": {
        "title": "ppp: use the buffer stack for the de-escaping buffer.",
        "length": 905,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 39,
        "additions": 23,
        "deletions": 16
      },
      "files": [
        {
          "filename": "print-ppp.c",
          "status": "modified",
          "additions": 17,
          "deletions": 14,
          "patch": "@@ -37,6 +37,8 @@\n \n #include \"netdissect-stdinc.h\"\n \n+#include <stdlib.h>\n+\n #include \"netdissect.h\"\n #include \"extract.h\"\n #include \"addrtoname.h\"\n@@ -1358,17 +1360,18 @@ ppp_hdlc(netdissect_options *ndo,\n \tu_char *b, *t, c;\n \tconst u_char *s;\n \tu_int i, proto;\n-\tconst void *sb, *se;\n \n \tif (caplen == 0)\n \t\treturn;\n \n         if (length == 0)\n                 return;\n \n-\tb = (u_char *)nd_malloc(ndo, caplen);\n-\tif (b == NULL)\n-\t\treturn;\n+\tb = (u_char *)malloc(caplen);\n+\tif (b == NULL) {\n+\t\t(*ndo->ndo_error)(ndo, S_ERR_ND_MEM_ALLOC,\n+\t\t\t\"%s: malloc\", __func__);\n+\t}\n \n \t/*\n \t * Unescape all the data into a temporary, private, buffer.\n@@ -1389,13 +1392,15 @@ ppp_hdlc(netdissect_options *ndo,\n \t}\n \n \t/*\n-\t * Change the end pointer, so bounds checks work.\n-\t * Change the pointer to packet data to help debugging.\n+\t * Switch to the output buffer for dissection, and save it\n+\t * on the buffer stack so it can be freed; our caller must\n+\t * pop it when done.\n \t */\n-\tsb = ndo->ndo_packetp;\n-\tse = ndo->ndo_snapend;\n-\tndo->ndo_packetp = b;\n-\tndo->ndo_snapend = t;\n+\tif (!nd_push_buffer(ndo, b, b, (u_int)(t - b))) {\n+\t\tfree(b);\n+\t\t(*ndo->ndo_error)(ndo, S_ERR_ND_MEM_ALLOC,\n+\t\t\t\"%s: can't push buffer on buffer stack\", __func__);\n+\t}\n \tlength = ND_BYTES_AVAILABLE_AFTER(b);\n \n         /* now lets guess about the payload codepoint format */\n@@ -1437,13 +1442,11 @@ ppp_hdlc(netdissect_options *ndo,\n         }\n \n cleanup:\n-\tndo->ndo_packetp = sb;\n-\tndo->ndo_snapend = se;\n+\tnd_pop_packet_info(ndo);\n         return;\n \n trunc:\n-\tndo->ndo_packetp = sb;\n-\tndo->ndo_snapend = se;\n+\tnd_pop_packet_info(ndo);\n \tnd_print_trunc(ndo);\n }\n "
        },
        {
          "filename": "print.c",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -431,10 +431,14 @@ pretty_print_packet(netdissect_options *ndo, const struct pcap_pkthdr *h,\n \tnd_pop_all_packet_info(ndo);\n \n \t/*\n-\t * Restore the original snapend, as a printer might have\n-\t * changed it.\n+\t * Restore the originals snapend and packetp, as a printer\n+\t * might have changed them.\n+\t *\n+\t * XXX - nd_pop_all_packet_info() should have restored the\n+\t * original values, but, just in case....\n \t */\n \tndo->ndo_snapend = sp + h->caplen;\n+\tndo->ndo_packetp = sp;\n \tif (ndo->ndo_Xflag) {\n \t\t/*\n \t\t * Print the raw packet data in hex and ASCII."
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "05a263a5418a9e5b971509c486246eb0913c8aea",
            "date": "2025-01-12T21:05:02Z",
            "author_login": "fxlb"
          },
          {
            "sha": "9aee9964aaee40750acde45f838f48eb8f95fbe3",
            "date": "2025-01-09T15:35:53Z",
            "author_login": "fxlb"
          },
          {
            "sha": "6cd500c8dafe5a9bbf3e56312493709e8b118726",
            "date": "2025-01-08T20:12:09Z",
            "author_login": "fxlb"
          },
          {
            "sha": "c5b54bfbd68b03f7997feaa277db30d399975a4d",
            "date": "2022-10-11T20:10:46Z",
            "author_login": "fenner"
          },
          {
            "sha": "431bdb5c365360d61968e7fa02322825b1da4208",
            "date": "2025-01-07T19:21:12Z",
            "author_login": "fxlb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "Due to a bug in packet data buffers management, the PPP printer in tcpdump can enter an infinite loop when reading a crafted DLT_PPP_SERIAL .pcap savefile.  This problem does not affect any tcpdump release, but it affected the git master branch from 2023-06-05 to 2024-03-21.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-12T14:15:07.657",
    "last_modified": "2024-11-21T09:09:39.813",
    "fix_date": "2024-03-12T07:37:23Z"
  },
  "references": [
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2",
      "source": "security@tcpdump.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GEZRGR3QCW2ZNFIAWMZZOG4ZLFLFNG2M/",
      "source": "security@tcpdump.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HUUI2MBVHFENXNBCHDQZP2RBBA2VD5HG/",
      "source": "security@tcpdump.org",
      "tags": []
    },
    {
      "url": "https://github.com/the-tcpdump-group/tcpdump/commit/b9811ef5bb1b7d45a90e042f81f3aaf233c8bcb2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GEZRGR3QCW2ZNFIAWMZZOG4ZLFLFNG2M/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HUUI2MBVHFENXNBCHDQZP2RBBA2VD5HG/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.freebsd.org/archives/freebsd-security/2024-September/000298.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.478233",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tcpdump",
    "owner": "the-tcpdump-group",
    "created_at": "2013-04-14T21:46:15Z",
    "updated_at": "2025-01-14T07:48:01Z",
    "pushed_at": "2025-01-13T06:19:33Z",
    "size": 27691,
    "stars": 2789,
    "forks": 860,
    "open_issues": 115,
    "watchers": 2789,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "tcpdump-3.5",
      "tcpdump-3.6",
      "tcpdump-3.7",
      "tcpdump-3.8",
      "tcpdump-3.9",
      "tcpdump-4.0",
      "tcpdump-4.1",
      "tcpdump-4.2",
      "tcpdump-4.3",
      "tcpdump-4.4",
      "tcpdump-4.5",
      "tcpdump-4.6",
      "tcpdump-4.7",
      "tcpdump-4.8",
      "tcpdump-4.9",
      "tcpdump-4.99"
    ],
    "languages": {
      "C": 3548298,
      "CMake": 76892,
      "Roff": 66849,
      "Shell": 50525,
      "M4": 31504,
      "Perl": 29240,
      "Makefile": 14259,
      "Awk": 4120,
      "GDB": 660
    },
    "commit_activity": {
      "total_commits_last_year": 314,
      "avg_commits_per_week": 6.038461538461538,
      "days_active_last_year": 158
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:04:48.453717"
  }
}