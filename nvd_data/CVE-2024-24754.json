{
  "cve_id": "CVE-2024-24754",
  "github_data": {
    "repository": "brefphp/bref",
    "fix_commit": "c77d9f5abf021f29fa96b5720b7b84adbd199092",
    "related_commits": [
      "c77d9f5abf021f29fa96b5720b7b84adbd199092",
      "c77d9f5abf021f29fa96b5720b7b84adbd199092"
    ],
    "patch_url": "https://github.com/brefphp/bref/commit/c77d9f5abf021f29fa96b5720b7b84adbd199092.patch",
    "fix_commit_details": {
      "sha": "c77d9f5abf021f29fa96b5720b7b84adbd199092",
      "commit_date": "2024-01-29T09:20:41Z",
      "author": {
        "login": "mnapoli",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Cleanup uploaded files for PSR-15 handlers",
        "length": 42,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 21,
        "additions": 20,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/Event/Http/Psr15Handler.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -16,6 +16,8 @@ public function __construct(RequestHandlerInterface $psr15Handler)\n \n     public function handleRequest(HttpRequestEvent $event, Context $context): HttpResponse\n     {\n+        Psr7Bridge::cleanupUploadedFiles();\n+\n         $request = Psr7Bridge::convertRequest($event, $context);\n \n         $response = $this->psr15Handler->handle($request);"
        },
        {
          "filename": "src/Event/Http/Psr7Bridge.php",
          "status": "modified",
          "additions": 18,
          "deletions": 1,
          "patch": "@@ -18,6 +18,8 @@\n  */\n final class Psr7Bridge\n {\n+    private const UPLOADED_FILES_PREFIX = 'bref_upload_';\n+\n     /**\n      * Create a PSR-7 server request from an AWS Lambda HTTP event.\n      */\n@@ -106,7 +108,7 @@ private static function parseBodyAndUploadedFiles(HttpRequestEvent $event): arra\n                     $parsedBody = [];\n                     foreach ($document->getParts() as $part) {\n                         if ($part->isFile()) {\n-                            $tmpPath = tempnam(sys_get_temp_dir(), 'bref_upload_');\n+                            $tmpPath = tempnam(sys_get_temp_dir(), self::UPLOADED_FILES_PREFIX);\n                             if ($tmpPath === false) {\n                                 throw new RuntimeException('Unable to create a temporary directory');\n                             }\n@@ -166,4 +168,19 @@ private static function parseKeyAndInsertValueInArray(array &$array, string $key\n \n         $pointer = $value;\n     }\n+\n+    /**\n+     * Cleanup previously uploaded files.\n+     */\n+    public static function cleanupUploadedFiles(): void\n+    {\n+        $tmpFiles = glob(sys_get_temp_dir() . '/' . self::UPLOADED_FILES_PREFIX . '*');\n+        if ($tmpFiles !== false) {\n+            foreach ($tmpFiles as $file) {\n+                if(is_file($file)) {\n+                    unlink($file);\n+                }\n+            }\n+        }\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0cc578fec19285455453dc6beef13b92734a6d68",
            "date": "2025-01-05T17:26:51Z",
            "author_login": "mnapoli"
          },
          {
            "sha": "4677c4ea09647bc7de1a198d87c5c6df29d4405e",
            "date": "2025-01-04T02:58:56Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "5a92388dfb654b4ca7ccda884353a00a1b8b0bc3",
            "date": "2024-12-20T13:00:03Z",
            "author_login": "mnapoli"
          },
          {
            "sha": "1292add91a42d1850d5cd4b68834953c4512dc51",
            "date": "2024-12-19T18:18:03Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "fa7e4062a14275a4ee39dbd837e4027466c8e015",
            "date": "2024-12-19T10:31:32Z",
            "author_login": "mnapoli"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-436",
    "description": "Bref enable serverless PHP on AWS Lambda. When Bref is used with the Event-Driven Function runtime and the handler is a `RequestHandlerInterface`, then the Lambda event is converted to a PSR7 object. During the conversion process, if the request is a MultiPart, each part is parsed and its content added in the `$files` or `$parsedBody` arrays. The conversion process produces a different output compared to the one of plain PHP when keys ending with and open square bracket ([) are used. Based on the application logic the difference in the body parsing might lead to vulnerabilities and/or undefined behaviors. This vulnerability is patched in 2.1.13.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-02-01T16:17:14.877",
    "last_modified": "2024-11-21T08:59:37.863",
    "fix_date": "2024-01-29T09:20:41Z"
  },
  "references": [
    {
      "url": "https://github.com/brefphp/bref/commit/c77d9f5abf021f29fa96b5720b7b84adbd199092",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/brefphp/bref/security/advisories/GHSA-82vx-mm6r-gg8w",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/brefphp/bref/commit/c77d9f5abf021f29fa96b5720b7b84adbd199092",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/brefphp/bref/security/advisories/GHSA-82vx-mm6r-gg8w",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.575205",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "bref",
    "owner": "brefphp",
    "created_at": "2017-11-30T20:57:40Z",
    "updated_at": "2025-01-14T07:48:00Z",
    "pushed_at": "2025-01-05T17:26:53Z",
    "size": 14005,
    "stars": 3191,
    "forks": 367,
    "open_issues": 52,
    "watchers": 3191,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 321741,
      "JavaScript": 142713,
      "MDX": 80675,
      "TypeScript": 3428,
      "CSS": 2220,
      "Makefile": 971
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:29:45.006621"
  }
}