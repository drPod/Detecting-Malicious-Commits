{
  "cve_id": "CVE-2024-24768",
  "github_data": {
    "repository": "1Panel-dev/1Panel",
    "fix_commit": "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
    "related_commits": [
      "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
      "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5"
    ],
    "patch_url": "https://github.com/1Panel-dev/1Panel/commit/1169648162c4b9b48e0b4aa508f9dea4d6bc50d5.patch",
    "fix_commit_details": {
      "sha": "1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
      "commit_date": "2024-02-04T14:46:33Z",
      "author": {
        "login": "ssongliu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: \u9762\u677f\u5f00\u542f https \u65f6\uff0ccookie \u5f00\u542f secure \u5c5e\u6027 (#3817)",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 16,
        "deletions": 2
      },
      "files": [
        {
          "filename": "backend/app/service/auth.go",
          "status": "modified",
          "additions": 10,
          "deletions": 2,
          "patch": "@@ -109,6 +109,10 @@ func (u *AuthService) generateSession(c *gin.Context, name, authMethod string) (\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\thttpsSetting, err := settingRepo.Get(settingRepo.WithByKey(\"SSL\"))\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n \tlifeTime, err := strconv.Atoi(setting.Value)\n \tif err != nil {\n \t\treturn nil, err\n@@ -129,7 +133,7 @@ func (u *AuthService) generateSession(c *gin.Context, name, authMethod string) (\n \tsessionUser, err := global.SESSION.Get(sID)\n \tif err != nil {\n \t\tsID = uuid.New().String()\n-\t\tc.SetCookie(constant.SessionName, sID, 0, \"\", \"\", false, false)\n+\t\tc.SetCookie(constant.SessionName, sID, 0, \"\", \"\", httpsSetting.Value == \"enable\", false)\n \t\terr := global.SESSION.Set(sID, sessionUser, lifeTime)\n \t\tif err != nil {\n \t\t\treturn nil, err\n@@ -144,9 +148,13 @@ func (u *AuthService) generateSession(c *gin.Context, name, authMethod string) (\n }\n \n func (u *AuthService) LogOut(c *gin.Context) error {\n+\thttpsSetting, err := settingRepo.Get(settingRepo.WithByKey(\"SSL\"))\n+\tif err != nil {\n+\t\treturn err\n+\t}\n \tsID, _ := c.Cookie(constant.SessionName)\n \tif sID != \"\" {\n-\t\tc.SetCookie(constant.SessionName, sID, -1, \"\", \"\", false, false)\n+\t\tc.SetCookie(constant.SessionName, sID, -1, \"\", \"\", httpsSetting.Value == \"enable\", false)\n \t\terr := global.SESSION.Delete(sID)\n \t\tif err != nil {\n \t\t\treturn err"
        },
        {
          "filename": "backend/app/service/setting.go",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -198,6 +198,9 @@ func (u *SettingService) UpdateSSL(c *gin.Context, req dto.SSLUpdate) error {\n \t\t}\n \t\t_ = os.Remove(path.Join(secretDir, \"server.crt\"))\n \t\t_ = os.Remove(path.Join(secretDir, \"server.key\"))\n+\t\tsID, _ := c.Cookie(constant.SessionName)\n+\t\tc.SetCookie(constant.SessionName, sID, 0, \"\", \"\", false, false)\n+\n \t\tgo func() {\n \t\t\t_, err := cmd.Exec(\"systemctl restart 1panel.service\")\n \t\t\tif err != nil {\n@@ -289,6 +292,9 @@ func (u *SettingService) UpdateSSL(c *gin.Context, req dto.SSLUpdate) error {\n \tif err := settingRepo.Update(\"SSL\", req.SSL); err != nil {\n \t\treturn err\n \t}\n+\n+\tsID, _ := c.Cookie(constant.SessionName)\n+\tc.SetCookie(constant.SessionName, sID, 0, \"\", \"\", true, false)\n \tgo func() {\n \t\ttime.Sleep(1 * time.Second)\n \t\t_, err := cmd.Exec(\"systemctl restart 1panel.service\")"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ca0dc71338493e94b098f8a919e6f5cc6e7ec0a0",
            "date": "2025-01-14T11:03:22Z",
            "author_login": "zhengkunwang223"
          },
          {
            "sha": "04a1ec9a9a7a0c66c7d0b94498b3efaa830a3296",
            "date": "2025-01-14T08:00:09Z",
            "author_login": "zhengkunwang223"
          },
          {
            "sha": "999e5a779a42fbe8170bae40cdd8592df05d7805",
            "date": "2025-01-13T15:10:04Z",
            "author_login": "lan-yonghui"
          },
          {
            "sha": "99f62b72307f442205b861c1172c6fc7a7408ae8",
            "date": "2025-01-13T15:08:04Z",
            "author_login": "zhengkunwang223"
          },
          {
            "sha": "4dee4e1cc22b5861a5e8ce4dec1a50b9b0844f28",
            "date": "2025-01-13T07:56:03Z",
            "author_login": "zhengkunwang223"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:L",
    "cwe_id": "CWE-315",
    "description": "1Panel is an open source Linux server operation and maintenance management panel. The HTTPS cookie that comes with the panel does not have the Secure keyword, which may cause the cookie to be sent in plain text if accessed using HTTP. This issue has been patched in version 1.9.6.\n\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-05T15:15:09.607",
    "last_modified": "2024-11-21T08:59:39.827",
    "fix_date": "2024-02-04T14:46:33Z"
  },
  "references": [
    {
      "url": "https://github.com/1Panel-dev/1Panel/commit/1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/1Panel-dev/1Panel/pull/3817",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-9xfw-jjq2-7v8h",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/1Panel-dev/1Panel/commit/1169648162c4b9b48e0b4aa508f9dea4d6bc50d5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/1Panel-dev/1Panel/pull/3817",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-9xfw-jjq2-7v8h",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.584131",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "1Panel",
    "owner": "1Panel-dev",
    "created_at": "2022-07-19T15:44:52Z",
    "updated_at": "2025-01-14T13:42:29Z",
    "pushed_at": "2025-01-14T11:03:25Z",
    "size": 79198,
    "stars": 24934,
    "forks": 2234,
    "open_issues": 614,
    "watchers": 24934,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev"
    ],
    "languages": {
      "Go": 3974896,
      "Vue": 2523255,
      "Makefile": 923,
      "Shell": 672,
      "PHP": 482
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T14:03:48.526986"
  }
}