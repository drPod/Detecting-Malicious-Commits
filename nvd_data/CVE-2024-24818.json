{
  "cve_id": "CVE-2024-24818",
  "github_data": {
    "repository": "espocrm/espocrm",
    "fix_commit": "3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7",
    "related_commits": [
      "3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7",
      "3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7"
    ],
    "patch_url": "https://github.com/espocrm/espocrm/commit/3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7.patch",
    "fix_commit_details": {
      "sha": "3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7",
      "commit_date": "2024-01-30T15:40:38Z",
      "author": {
        "login": "yurikuzn",
        "type": "User",
        "stats": {
          "total_commits": 17806,
          "average_weekly_commits": 30.437606837606836,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 566
        }
      },
      "commit_message": {
        "title": "validate url",
        "length": 12,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 194,
        "additions": 193,
        "deletions": 1
      },
      "files": [
        {
          "filename": "application/Espo/Tools/UserSecurity/Password/Recovery/UrlValidator.php",
          "status": "added",
          "additions": 70,
          "deletions": 0,
          "patch": "@@ -0,0 +1,70 @@\n+<?php\n+/************************************************************************\n+ * This file is part of EspoCRM.\n+ *\n+ * EspoCRM \u2013 Open Source CRM application.\n+ * Copyright (C) 2014-2024 Yurii Kuznietsov, Taras Machyshyn, Oleksii Avramenko\n+ * Website: https://www.espocrm.com\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ *\n+ * The interactive user interfaces in modified source and object code versions\n+ * of this program must display Appropriate Legal Notices, as required under\n+ * Section 5 of the GNU Affero General Public License version 3.\n+ *\n+ * In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n+ * these Appropriate Legal Notices must retain the display of the \"EspoCRM\" word.\n+ ************************************************************************/\n+\n+namespace Espo\\Tools\\UserSecurity\\Password\\Recovery;\n+\n+use Espo\\Core\\Exceptions\\Forbidden;\n+use Espo\\Core\\Utils\\Config;\n+use Espo\\Entities\\Portal;\n+use Espo\\ORM\\EntityManager;\n+\n+class UrlValidator\n+{\n+    public function __construct(\n+        private Config $config,\n+        private EntityManager $entityManager\n+    ) {}\n+\n+    /**\n+     * @throws Forbidden\n+     */\n+    public function validate(string $url): void\n+    {\n+        $siteUrl = rtrim($this->config->get('siteUrl') ?? '', '/');\n+\n+        if (str_starts_with($url, $siteUrl)) {\n+            return;\n+        }\n+\n+        /** @var iterable<Portal> $portals */\n+        $portals = $this->entityManager\n+            ->getRDBRepositoryByClass(Portal::class)\n+            ->find();\n+\n+        foreach ($portals as $portal) {\n+            $siteUrl = rtrim($portal->getUrl() ?? '', '/');\n+\n+            if (str_starts_with($url, $siteUrl)) {\n+                return;\n+            }\n+        }\n+\n+        throw new Forbidden(\"URL does not match Site URL.\");\n+    }\n+}"
        },
        {
          "filename": "application/Espo/Tools/UserSecurity/Password/RecoveryService.php",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -56,6 +56,7 @@\n use Espo\\Core\\Utils\\Log;\n use Espo\\Core\\Utils\\TemplateFileManager;\n use Espo\\Tools\\UserSecurity\\Password\\Jobs\\RemoveRecoveryRequest;\n+use Espo\\Tools\\UserSecurity\\Password\\Recovery\\UrlValidator;\n \n class RecoveryService\n {\n@@ -75,7 +76,8 @@ public function __construct(\n         private Log $log,\n         private JobSchedulerFactory $jobSchedulerFactory,\n         private ApplicationState $applicationState,\n-        private AuthenticationMethodProvider $authenticationMethodProvider\n+        private AuthenticationMethodProvider $authenticationMethodProvider,\n+        private UrlValidator $urlValidator\n     ) {}\n \n     /**\n@@ -140,6 +142,10 @@ public function request(string $emailAddress, string $userName, ?string $url): b\n             throw new Forbidden(\"Password recovery: Disabled.\");\n         }\n \n+        if ($url) {\n+            $this->urlValidator->validate($url);\n+        }\n+\n         /** @var ?User $user */\n         $user = $this->entityManager\n             ->getRDBRepository(User::ENTITY_TYPE)"
        },
        {
          "filename": "tests/integration/Espo/Password/RecoveryTest.php",
          "status": "added",
          "additions": 116,
          "deletions": 0,
          "patch": "@@ -0,0 +1,116 @@\n+<?php\n+/************************************************************************\n+ * This file is part of EspoCRM.\n+ *\n+ * EspoCRM \u2013 Open Source CRM application.\n+ * Copyright (C) 2014-2024 Yurii Kuznietsov, Taras Machyshyn, Oleksii Avramenko\n+ * Website: https://www.espocrm.com\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ *\n+ * The interactive user interfaces in modified source and object code versions\n+ * of this program must display Appropriate Legal Notices, as required under\n+ * Section 5 of the GNU Affero General Public License version 3.\n+ *\n+ * In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n+ * these Appropriate Legal Notices must retain the display of the \"EspoCRM\" word.\n+ ************************************************************************/\n+\n+namespace tests\\integration\\Espo\\Password;\n+\n+use Espo\\Core\\Exceptions\\Forbidden;\n+use Espo\\Core\\Utils\\Config\\ConfigWriter;\n+use Espo\\Entities\\Portal;\n+use Espo\\Tools\\UserSecurity\\Password\\Recovery\\UrlValidator;\n+use tests\\integration\\Core\\BaseTestCase;\n+\n+class RecoveryTest extends BaseTestCase\n+{\n+    private ?string $storedSiteUrl = null;\n+\n+    private string $siteUrl = 'https://my-site.com/';\n+\n+    protected function setUp(): void\n+    {\n+        parent::setUp();\n+\n+        $writer = $this->getInjectableFactory()->create(ConfigWriter::class);\n+        $writer->set('siteUrl', $this->siteUrl);\n+        $writer->save();\n+\n+        $this->storedSiteUrl = $this->getConfig()->get('siteUrl');\n+    }\n+\n+    protected function tearDown(): void\n+    {\n+        $writer = $this->getInjectableFactory()->create(ConfigWriter::class);\n+        $writer->set('siteUrl', $this->storedSiteUrl);\n+        $writer->save();\n+\n+        $this->storedSiteUrl = null;\n+\n+        parent::tearDown();\n+    }\n+\n+    public function testUrlValidation()\n+    {\n+        $em = $this->getEntityManager();\n+\n+        $em->createEntity(Portal::ENTITY_TYPE, [\n+            'customUrl' => 'https://my-portal.com/',\n+        ]);\n+\n+        /** @var Portal $portal2 */\n+        $portal2 = $em->createEntity(Portal::ENTITY_TYPE, [\n+            'isDefault' => true,\n+        ]);\n+\n+        $validator = $this->getInjectableFactory()->create(UrlValidator::class);\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-site.com');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-site.com/');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-site.com#Test');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-site.com/portal');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-portal.com');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-portal.com/');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-portal.com/#Test');\n+\n+        /** @noinspection PhpUnhandledExceptionInspection */\n+        $validator->validate('https://my-site.com/portal/' . $portal2->getId());\n+\n+        $thrown = false;\n+\n+        try {\n+            $validator->validate('https://not-my-site.com');\n+        }\n+        catch (Forbidden) {\n+            $thrown = true;\n+        }\n+\n+        $this->assertTrue($thrown);\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "980b1cc40185a862096d6424086bc25c0451ae56",
            "date": "2025-01-14T18:45:13Z",
            "author_login": "yurikuzn"
          },
          {
            "sha": "a0c0b7cd5709654a38ae4b492cc1d6b6ba9f3f4f",
            "date": "2025-01-14T13:03:42Z",
            "author_login": "yurikuzn"
          },
          {
            "sha": "8675478b0a9301415d2afd3d8951bc33036a25b8",
            "date": "2025-01-14T11:44:01Z",
            "author_login": "yurikuzn"
          },
          {
            "sha": "c021466de94a10150a3319e46e56199b2ad43359",
            "date": "2025-01-14T11:01:20Z",
            "author_login": "yurikuzn"
          },
          {
            "sha": "758430ad38120ee39a16fe5fcaf4291e6f5877b2",
            "date": "2025-01-14T10:49:19Z",
            "author_login": "yurikuzn"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:H/I:L/A:L",
    "cwe_id": "CWE-610",
    "description": "EspoCRM is an Open Source Customer Relationship Management software. An attacker can inject arbitrary IP or domain in \"Password Change\" page and redirect victim to malicious page that could lead to  credential stealing or another attack. This vulnerability is fixed in 8.1.2.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-03-21T02:52:12.073",
    "last_modified": "2024-11-21T08:59:46.770",
    "fix_date": "2024-01-30T15:40:38Z"
  },
  "references": [
    {
      "url": "https://github.com/espocrm/espocrm/commit/3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/espocrm/espocrm/security/advisories/GHSA-8gv6-8r33-fm7j",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/espocrm/espocrm/commit/3babdfa3399e328fb1bd83a1b4ed03d509f4c8e7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/espocrm/espocrm/security/advisories/GHSA-8gv6-8r33-fm7j",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.878391",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "espocrm",
    "owner": "espocrm",
    "created_at": "2014-09-25T13:38:46Z",
    "updated_at": "2025-01-14T13:03:51Z",
    "pushed_at": "2025-01-14T13:03:47Z",
    "size": 79790,
    "stars": 1940,
    "forks": 592,
    "open_issues": 50,
    "watchers": 1940,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "fix",
      "master",
      "stable"
    ],
    "languages": {
      "PHP": 11934707,
      "JavaScript": 5561169,
      "Less": 550393,
      "Smarty": 377691,
      "CSS": 40861,
      "HTML": 2102
    },
    "commit_activity": {
      "total_commits_last_year": 2712,
      "avg_commits_per_week": 52.15384615384615,
      "days_active_last_year": 331
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:38:45.084907"
  }
}