{
  "cve_id": "CVE-2024-24821",
  "github_data": {
    "repository": "composer/composer",
    "fix_commit": "64e4eb356b159a30c766cd1ea83450a38dc23bf5",
    "related_commits": [
      "64e4eb356b159a30c766cd1ea83450a38dc23bf5",
      "64e4eb356b159a30c766cd1ea83450a38dc23bf5"
    ],
    "patch_url": "https://github.com/composer/composer/commit/64e4eb356b159a30c766cd1ea83450a38dc23bf5.patch",
    "fix_commit_details": {
      "sha": "64e4eb356b159a30c766cd1ea83450a38dc23bf5",
      "commit_date": "2024-02-08T13:33:59Z",
      "author": {
        "login": "Seldaek",
        "type": "User",
        "stats": {
          "total_commits": 7365,
          "average_weekly_commits": 10.229166666666666,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 553
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7c6p-848j-wh5h",
        "length": 193,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 281,
        "additions": 237,
        "deletions": 44
      },
      "files": [
        {
          "filename": "src/Composer/Factory.php",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -18,6 +18,7 @@\n use Composer\\Package\\Archiver;\n use Composer\\Package\\Version\\VersionGuesser;\n use Composer\\Package\\RootPackageInterface;\n+use Composer\\Repository\\FilesystemRepository;\n use Composer\\Repository\\RepositoryManager;\n use Composer\\Repository\\RepositoryFactory;\n use Composer\\Util\\Filesystem;\n@@ -351,8 +352,13 @@ public function createComposer(IOInterface $io, $localConfig = null, $disablePlu\n             $io->loadConfiguration($config);\n \n             // load existing Composer\\InstalledVersions instance if available and scripts/plugins are allowed, as they might need it\n-            if (false === $disablePlugins && false === $disableScripts && !class_exists('Composer\\InstalledVersions', false) && file_exists($installedVersionsPath = $config->get('vendor-dir').'/composer/InstalledVersions.php')) {\n-                include $installedVersionsPath;\n+            // we only load if the InstalledVersions class wasn't defined yet so that this is only loaded once\n+            if (false === $disablePlugins && false === $disableScripts && !class_exists('Composer\\InstalledVersions', false) && file_exists($installedVersionsPath = $config->get('vendor-dir').'/composer/installed.php')) {\n+                // force loading the class at this point so it is loaded from the composer phar and not from the vendor dir\n+                // as we cannot guarantee integrity of that file\n+                if (class_exists('Composer\\InstalledVersions')) {\n+                    FilesystemRepository::safelyLoadInstalledVersions($installedVersionsPath);\n+                }\n             }\n         }\n "
        },
        {
          "filename": "src/Composer/Repository/FilesystemRepository.php",
          "status": "modified",
          "additions": 37,
          "deletions": 2,
          "patch": "@@ -20,6 +20,7 @@\n use Composer\\Package\\AliasPackage;\n use Composer\\Package\\Dumper\\ArrayDumper;\n use Composer\\Installer\\InstallationManager;\n+use Composer\\Pcre\\Preg;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Platform;\n \n@@ -173,6 +174,34 @@ public function write(bool $devMode, InstallationManager $installationManager)\n         }\n     }\n \n+    /**\n+     * As we load the file from vendor dir during bootstrap, we need to make sure it contains only expected code before executing it\n+     *\n+     * @internal\n+     */\n+    public static function safelyLoadInstalledVersions(string $path): bool\n+    {\n+        $installedVersionsData = @file_get_contents($path);\n+        $pattern = <<<'REGEX'\n+{(?(DEFINE)\n+   (?<number>  -? \\s*+ \\d++ (?:\\.\\d++)? )\n+   (?<boolean> true | false | null )\n+   (?<strings> (?&string) (?: \\s*+ \\. \\s*+ (?&string))*+ )\n+   (?<string>  (?: \" (?:[^\"\\\\$]*+ | \\\\ [\"\\\\0] )* \" | ' (?:[^'\\\\]*+ | \\\\ ['\\\\] )* ' ) )\n+   (?<array>   array\\( \\s*+ (?: (?:(?&number)|(?&strings)) \\s*+ => \\s*+ (?: (?:__DIR__ \\s*+ \\. \\s*+)? (?&strings) | (?&value) ) \\s*+, \\s*+ )*+  \\s*+ \\) )\n+   (?<value>   (?: (?&number) | (?&boolean) | (?&strings) | (?&array) ) )\n+)\n+^<\\?php\\s++return\\s++(?&array)\\s*+;$}ix\n+REGEX;\n+        if (is_string($installedVersionsData) && Preg::isMatch($pattern, trim($installedVersionsData))) {\n+            \\Composer\\InstalledVersions::reload(eval('?>'.Preg::replace('{=>\\s*+__DIR__\\s*+\\.\\s*+([\\'\"])}', '=> '.var_export(dirname($path), true).' . $1', $installedVersionsData)));\n+\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+\n     /**\n      * @param array<mixed> $array\n      */\n@@ -183,7 +212,7 @@ private function dumpToPhpCode(array $array = [], int $level = 0): string\n \n         foreach ($array as $key => $value) {\n             $lines .= str_repeat('    ', $level);\n-            $lines .= is_int($key) ? $key . ' => ' : '\\'' . $key . '\\' => ';\n+            $lines .= is_int($key) ? $key . ' => ' : var_export($key, true) . ' => ';\n \n             if (is_array($value)) {\n                 if (!empty($value)) {\n@@ -197,8 +226,14 @@ private function dumpToPhpCode(array $array = [], int $level = 0): string\n                 } else {\n                     $lines .= \"__DIR__ . \" . var_export('/' . $value, true) . \",\\n\";\n                 }\n-            } else {\n+            } elseif (is_string($value)) {\n                 $lines .= var_export($value, true) . \",\\n\";\n+            } elseif (is_bool($value)) {\n+                $lines .= ($value ? 'true' : 'false') . \",\\n\";\n+            } elseif (is_null($value)) {\n+                $lines .= \"null,\\n\";\n+            } else {\n+                throw new \\UnexpectedValueException('Unexpected type '.gettype($value));\n             }\n         }\n "
        },
        {
          "filename": "tests/Composer/Test/InstalledVersionsTest.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -49,7 +49,7 @@ public function setUp(): void\n         $this->root = self::getUniqueTmpDirectory();\n \n         $dir = $this->root;\n-        InstalledVersions::reload(require __DIR__.'/Repository/Fixtures/installed.php');\n+        InstalledVersions::reload(require __DIR__.'/Repository/Fixtures/installed_relative.php');\n     }\n \n     public function testGetInstalledPackages(): void\n@@ -222,7 +222,7 @@ public function testGetRootPackage(): void\n     public function testGetRawData(): void\n     {\n         $dir = $this->root;\n-        $this->assertSame(require __DIR__.'/Repository/Fixtures/installed.php', InstalledVersions::getRawData());\n+        $this->assertSame(require __DIR__.'/Repository/Fixtures/installed_relative.php', InstalledVersions::getRawData());\n     }\n \n     /**"
        },
        {
          "filename": "tests/Composer/Test/Repository/FilesystemRepositoryTest.php",
          "status": "modified",
          "additions": 41,
          "deletions": 2,
          "patch": "@@ -158,6 +158,7 @@ public function testRepositoryWritesInstalledPhp(): void\n         $repository->addPackage($pkg);\n \n         $pkg = self::getPackage('c/c', '3.0');\n+        $pkg->setDistReference('{${passthru(\\'bash -i\\')}} Foo\\\\Bar' . \"\\n\\ttab\\vverticaltab\\0\");\n         $repository->addPackage($pkg);\n \n         $pkg = self::getPackage('meta/package', '3.0');\n@@ -177,7 +178,11 @@ public function testRepositoryWritesInstalledPhp(): void\n \n                 if ($package->getName() === 'c/c') {\n                     // check for absolute paths\n-                    return '/foo/bar/vendor/c/c';\n+                    return '/foo/bar/ven\\do{}r/c/c${}';\n+                }\n+\n+                if ($package->getName() === 'a/provider') {\n+                    return 'vendor/{${passthru(\\'bash -i\\')}}';\n                 }\n \n                 // check for cwd\n@@ -190,7 +195,41 @@ public function testRepositoryWritesInstalledPhp(): void\n             }));\n \n         $repository->write(true, $im);\n-        $this->assertSame(require __DIR__.'/Fixtures/installed.php', require $dir.'/installed.php');\n+        $this->assertSame(file_get_contents(__DIR__.'/Fixtures/installed.php'), file_get_contents($dir.'/installed.php'));\n+    }\n+\n+    public function testSafelyLoadInstalledVersions(): void\n+    {\n+        $result = FilesystemRepository::safelyLoadInstalledVersions(__DIR__.'/Fixtures/installed_complex.php');\n+        self::assertTrue($result, 'The file should be considered valid');\n+        $rawData = \\Composer\\InstalledVersions::getAllRawData();\n+        $rawData = end($rawData);\n+        self::assertSame([\n+            'root' => [\n+                'install_path' => __DIR__ . '/Fixtures/./',\n+                'aliases' => [\n+                    0 => '1.10.x-dev',\n+                    1 => '2.10.x-dev',\n+                ],\n+                'name' => '__root__',\n+                'true' => true,\n+                'false' => false,\n+                'null' => null,\n+            ],\n+            'versions' => [\n+                'a/provider' => [\n+                    'foo' => \"simple string/no backslash\",\n+                    'install_path' => __DIR__ . '/Fixtures/vendor/{${passthru(\\'bash -i\\')}}',\n+                    'empty array' => [],\n+                ],\n+                'c/c' => [\n+                    'install_path' => '/foo/bar/ven/do{}r/c/c${}',\n+                    'aliases' => [],\n+                    'reference' => '{${passthru(\\'bash -i\\')}} Foo\\\\Bar\n+\ttab\u000bverticaltab' . \"\\0\",\n+                ],\n+            ],\n+        ], $rawData);\n     }\n \n     /**"
        },
        {
          "filename": "tests/Composer/Test/Repository/Fixtures/installed.php",
          "status": "modified",
          "additions": 20,
          "deletions": 36,
          "patch": "@@ -1,26 +1,13 @@\n-<?php\n-\n-/*\n- * This file is part of Composer.\n- *\n- * (c) Nils Adermann <naderman@naderman.de>\n- *     Jordi Boggiano <j.boggiano@seld.be>\n- *\n- * For the full copyright and license information, please view the LICENSE\n- * file that was distributed with this source code.\n- */\n-\n-return array(\n+<?php return array(\n     'root' => array(\n         'name' => '__root__',\n         'pretty_version' => 'dev-master',\n         'version' => 'dev-master',\n         'reference' => 'sourceref-by-default',\n         'type' => 'library',\n-        // @phpstan-ignore-next-line\n-        'install_path' => $dir . '/./',\n+        'install_path' => __DIR__ . '/./',\n         'aliases' => array(\n-            '1.10.x-dev',\n+            0 => '1.10.x-dev',\n         ),\n         'dev' => true,\n     ),\n@@ -30,10 +17,9 @@\n             'version' => 'dev-master',\n             'reference' => 'sourceref-by-default',\n             'type' => 'library',\n-            // @phpstan-ignore-next-line\n-            'install_path' => $dir . '/./',\n+            'install_path' => __DIR__ . '/./',\n             'aliases' => array(\n-                '1.10.x-dev',\n+                0 => '1.10.x-dev',\n             ),\n             'dev_requirement' => false,\n         ),\n@@ -42,8 +28,7 @@\n             'version' => '1.1.0.0',\n             'reference' => 'distref-as-no-source',\n             'type' => 'library',\n-            // @phpstan-ignore-next-line\n-            'install_path' => $dir . '/vendor/a/provider',\n+            'install_path' => __DIR__ . '/vendor/{${passthru(\\'bash -i\\')}}',\n             'aliases' => array(),\n             'dev_requirement' => false,\n         ),\n@@ -52,10 +37,9 @@\n             'version' => '1.2.0.0',\n             'reference' => 'distref-as-installed-from-dist',\n             'type' => 'library',\n-            // @phpstan-ignore-next-line\n-            'install_path' => $dir . '/vendor/a/provider2',\n+            'install_path' => __DIR__ . '/vendor/a/provider2',\n             'aliases' => array(\n-              '1.4',\n+                0 => '1.4',\n             ),\n             'dev_requirement' => false,\n         ),\n@@ -64,42 +48,42 @@\n             'version' => '2.2.0.0',\n             'reference' => null,\n             'type' => 'library',\n-            // @phpstan-ignore-next-line\n-            'install_path' => $dir . '/vendor/b/replacer',\n+            'install_path' => __DIR__ . '/vendor/b/replacer',\n             'aliases' => array(),\n             'dev_requirement' => false,\n         ),\n         'c/c' => array(\n             'pretty_version' => '3.0',\n             'version' => '3.0.0.0',\n-            'reference' => null,\n+            'reference' => '{${passthru(\\'bash -i\\')}} Foo\\\\Bar\n+\ttab\u000bverticaltab' . \"\\0\" . '',\n             'type' => 'library',\n-            'install_path' => '/foo/bar/vendor/c/c',\n+            'install_path' => '/foo/bar/ven/do{}r/c/c${}',\n             'aliases' => array(),\n             'dev_requirement' => true,\n         ),\n         'foo/impl' => array(\n             'dev_requirement' => false,\n             'provided' => array(\n-                '^1.1',\n-                '1.2',\n-                '1.4',\n-                '2.0',\n+                0 => '^1.1',\n+                1 => '1.2',\n+                2 => '1.4',\n+                3 => '2.0',\n             ),\n         ),\n         'foo/impl2' => array(\n             'dev_requirement' => false,\n             'provided' => array(\n-                '2.0',\n+                0 => '2.0',\n             ),\n             'replaced' => array(\n-                '2.2',\n+                0 => '2.2',\n             ),\n         ),\n         'foo/replaced' => array(\n             'dev_requirement' => false,\n             'replaced' => array(\n-                '^3.0',\n+                0 => '^3.0',\n             ),\n         ),\n         'meta/package' => array(\n@@ -110,6 +94,6 @@\n             'install_path' => null,\n             'aliases' => array(),\n             'dev_requirement' => false,\n-        )\n+        ),\n     ),\n );"
        },
        {
          "filename": "tests/Composer/Test/Repository/Fixtures/installed_complex.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -0,0 +1,26 @@\n+<?php return array(\n+    'root' => array(\n+        'install_path' => __DIR__ . '/./',\n+        'aliases' => array(\n+            0 => '1.10.x-dev',\n+            1 => '2.10.x-dev',\n+        ),\n+        'name' => '__root__',\n+        'true' => true,\n+        'false' => false,\n+        'null' => null,\n+    ),\n+    'versions' => array(\n+        'a/provider' => array(\n+            'foo' => \"simple string/no backslash\",\n+            'install_path' => __DIR__ . '/vendor/{${passthru(\\'bash -i\\')}}',\n+            'empty array' => array(),\n+        ),\n+        'c/c' => array(\n+            'install_path' => '/foo/bar/ven/do{}r/c/c${}',\n+            'aliases' => array(),\n+            'reference' => '{${passthru(\\'bash -i\\')}} Foo\\\\Bar\n+\ttab\u000bverticaltab' . \"\\0\" . '',\n+        ),\n+    ),\n+);"
        },
        {
          "filename": "tests/Composer/Test/Repository/Fixtures/installed_relative.php",
          "status": "added",
          "additions": 103,
          "deletions": 0,
          "patch": "@@ -0,0 +1,103 @@\n+<?php return array(\n+    'root' => array(\n+        'name' => '__root__',\n+        'pretty_version' => 'dev-master',\n+        'version' => 'dev-master',\n+        'reference' => 'sourceref-by-default',\n+        'type' => 'library',\n+        // @phpstan-ignore-next-line\n+        'install_path' => $dir . '/./',\n+        'aliases' => array(\n+            '1.10.x-dev',\n+        ),\n+        'dev' => true,\n+    ),\n+    'versions' => array(\n+        '__root__' => array(\n+            'pretty_version' => 'dev-master',\n+            'version' => 'dev-master',\n+            'reference' => 'sourceref-by-default',\n+            'type' => 'library',\n+            // @phpstan-ignore-next-line\n+            'install_path' => $dir . '/./',\n+            'aliases' => array(\n+                '1.10.x-dev',\n+            ),\n+            'dev_requirement' => false,\n+        ),\n+        'a/provider' => array(\n+            'pretty_version' => '1.1',\n+            'version' => '1.1.0.0',\n+            'reference' => 'distref-as-no-source',\n+            'type' => 'library',\n+            // @phpstan-ignore-next-line\n+            'install_path' => $dir . '/vendor/a/provider',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'a/provider2' => array(\n+            'pretty_version' => '1.2',\n+            'version' => '1.2.0.0',\n+            'reference' => 'distref-as-installed-from-dist',\n+            'type' => 'library',\n+            // @phpstan-ignore-next-line\n+            'install_path' => $dir . '/vendor/a/provider2',\n+            'aliases' => array(\n+              '1.4',\n+            ),\n+            'dev_requirement' => false,\n+        ),\n+        'b/replacer' => array(\n+            'pretty_version' => '2.2',\n+            'version' => '2.2.0.0',\n+            'reference' => null,\n+            'type' => 'library',\n+            // @phpstan-ignore-next-line\n+            'install_path' => $dir . '/vendor/b/replacer',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'c/c' => array(\n+            'pretty_version' => '3.0',\n+            'version' => '3.0.0.0',\n+            'reference' => null,\n+            'type' => 'library',\n+            'install_path' => '/foo/bar/vendor/c/c',\n+            'aliases' => array(),\n+            'dev_requirement' => true,\n+        ),\n+        'foo/impl' => array(\n+            'dev_requirement' => false,\n+            'provided' => array(\n+                '^1.1',\n+                '1.2',\n+                '1.4',\n+                '2.0',\n+            ),\n+        ),\n+        'foo/impl2' => array(\n+            'dev_requirement' => false,\n+            'provided' => array(\n+                '2.0',\n+            ),\n+            'replaced' => array(\n+                '2.2',\n+            ),\n+        ),\n+        'foo/replaced' => array(\n+            'dev_requirement' => false,\n+            'replaced' => array(\n+                '^3.0',\n+            ),\n+        ),\n+        'meta/package' => array(\n+            'pretty_version' => '3.0',\n+            'version' => '3.0.0.0',\n+            'reference' => null,\n+            'type' => 'metapackage',\n+            'install_path' => null,\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        )\n+    ),\n+);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 5,
        "unique_directories": 5,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f5e7a8390d700d09c87ae2ed79d5aea1e4153cd3",
            "date": "2025-01-10T15:46:38Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "924527cda6a17b18718c65cfb8f08ba054920619",
            "date": "2025-01-10T15:42:50Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "7b261bdf53220763167da6043b6c5d491839e62a",
            "date": "2025-01-10T15:34:19Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "2645d080b5dde3c90514fd51e174c1efcd397dcd",
            "date": "2025-01-10T15:32:39Z",
            "author_login": "Seldaek"
          },
          {
            "sha": "efe91c76e8b16acc833da628ff1bb6de8512ee87",
            "date": "2025-01-10T15:29:15Z",
            "author_login": "Seldaek"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-829",
    "description": "Composer is a dependency Manager for the PHP language. In affected versions several files within the local working directory are included during the invocation of Composer and in the context of the executing user. As such, under certain conditions arbitrary code execution may lead to local privilege escalation, provide lateral user movement or malicious code execution when Composer is invoked within a directory with tampered files. All Composer CLI commands are affected, including composer.phar's self-update. The following scenarios are of high risk: Composer being run with sudo, Pipelines which may execute Composer on untrusted projects, Shared environments with developers who run Composer individually on the same project. This vulnerability has been addressed in versions 2.7.0 and 2.2.23. It is advised that the patched versions are applied at the earliest convenience. Where not possible, the following should be addressed: Remove all sudo composer privileges for all users to mitigate root privilege escalation, and avoid running Composer within an untrusted directory, or if needed, verify that the contents of `vendor/composer/InstalledVersions.php` and `vendor/composer/installed.php` do not include untrusted code.  A reset can also be done on these files by the following:```sh\nrm vendor/composer/installed.php vendor/composer/InstalledVersions.php\ncomposer install --no-scripts --no-plugins\n```",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-09T00:15:08.680",
    "last_modified": "2024-11-21T08:59:47.200",
    "fix_date": "2024-02-08T13:33:59Z"
  },
  "references": [
    {
      "url": "https://github.com/composer/composer/commit/64e4eb356b159a30c766cd1ea83450a38dc23bf5",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/composer/composer/security/advisories/GHSA-7c6p-848j-wh5h",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/composer/composer/commit/64e4eb356b159a30c766cd1ea83450a38dc23bf5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/composer/composer/security/advisories/GHSA-7c6p-848j-wh5h",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:05.603797",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "composer",
    "owner": "composer",
    "created_at": "2011-06-08T08:53:00Z",
    "updated_at": "2025-01-14T12:42:23Z",
    "pushed_at": "2025-01-10T15:46:38Z",
    "size": 27731,
    "stars": 28743,
    "forks": 4576,
    "open_issues": 129,
    "watchers": 28743,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 4028817
    },
    "commit_activity": {
      "total_commits_last_year": 360,
      "avg_commits_per_week": 6.923076923076923,
      "days_active_last_year": 91
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:05:14.287443"
  }
}