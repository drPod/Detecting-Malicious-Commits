{
  "cve_id": "CVE-2024-24827",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "003b80e62f97cd8c0114d6b9d3f93c10443e6fae",
    "related_commits": [
      "003b80e62f97cd8c0114d6b9d3f93c10443e6fae",
      "003b80e62f97cd8c0114d6b9d3f93c10443e6fae"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "003b80e62f97cd8c0114d6b9d3f93c10443e6fae",
      "commit_date": "2024-02-07T04:55:36Z",
      "author": {
        "login": "tgxworld",
        "type": "User",
        "stats": {
          "total_commits": 4685,
          "average_weekly_commits": 6.741007194244604,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 406
        }
      },
      "commit_message": {
        "title": "SECURITY: Add rate limits for uploads",
        "length": 37,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 36,
        "additions": 36,
        "deletions": 0
      },
      "files": [
        {
          "filename": "app/controllers/uploads_controller.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -25,6 +25,13 @@ def create\n     # capture current user for block later on\n     me = current_user\n \n+    RateLimiter.new(\n+      current_user,\n+      \"uploads-per-minute\",\n+      SiteSetting.max_uploads_per_minute,\n+      1.minute.to_i,\n+    ).performed!\n+\n     params.permit(:type, :upload_type)\n     raise Discourse::InvalidParameters if params[:type].blank? && params[:upload_type].blank?\n     # 50 characters ought to be enough for the upload type"
        },
        {
          "filename": "config/site_settings.yml",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -2228,6 +2228,9 @@ rate_limits:\n   max_complete_multipart_per_minute:\n     default: 10\n     hidden: true\n+  max_uploads_per_minute:\n+    default: 10\n+    hidden: true\n \n developer:\n   force_hostname:"
        },
        {
          "filename": "spec/requests/uploads_controller_spec.rb",
          "status": "modified",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -19,6 +19,32 @@\n       let(:fake_jpg) { Rack::Test::UploadedFile.new(file_from_fixtures(\"fake.jpg\")) }\n       let(:text_file) { Rack::Test::UploadedFile.new(File.new(\"#{Rails.root}/LICENSE.txt\")) }\n \n+      context \"when rate limited\" do\n+        before { RateLimiter.enable }\n+\n+        use_redis_snapshotting\n+\n+        it \"should return 429 response code when maximum number of uploads per minute has been exceeded for a user\" do\n+          SiteSetting.max_uploads_per_minute = 1\n+\n+          post \"/uploads.json\",\n+               params: {\n+                 file: Rack::Test::UploadedFile.new(logo_file),\n+                 type: \"avatar\",\n+               }\n+\n+          expect(response.status).to eq(200)\n+\n+          post \"/uploads.json\",\n+               params: {\n+                 file: Rack::Test::UploadedFile.new(logo_file),\n+                 type: \"avatar\",\n+               }\n+\n+          expect(response.status).to eq(429)\n+        end\n+      end\n+\n       it \"expects a type or upload_type\" do\n         post \"/uploads.json\", params: { file: logo }\n         expect(response.status).to eq(400)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d2efdf5282a868d80e916caaeb51d40d1ea256a2",
            "date": "2025-01-24T21:33:06Z",
            "author_login": "awesomerobot"
          },
          {
            "sha": "4c1c4ba8d42db4d1c732af69c39740d2aee91410",
            "date": "2025-01-24T19:50:52Z",
            "author_login": "featheredtoast"
          },
          {
            "sha": "59a67758489683457e7dca5fd712710034c08631",
            "date": "2025-01-24T19:42:22Z",
            "author_login": "xfalcox"
          },
          {
            "sha": "9cc99ef6db77d82b4af95911ee503e227cceae62",
            "date": "2025-01-24T18:36:35Z",
            "author_login": "SamSaffron"
          },
          {
            "sha": "5a94ceda542e5a0d0d8b90219bb835a51780b502",
            "date": "2025-01-24T18:05:47Z",
            "author_login": "xfalcox"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-400",
    "description": "Discourse is an open source platform for community discussion. Without a rate limit on the POST /uploads endpoint, it makes it easier for an attacker to carry out a DoS attack on the server since creating an upload can be a resource intensive process. Do note that the impact varies from site to site as various site settings like `max_image_size_kb`, `max_attachment_size_kb` and `max_image_megapixels` will determine the amount of resources used when creating an upload. The issue is patched in the latest stable, beta and tests-passed version of Discourse. Users are advised to upgrade. Users unable to upgrade should reduce `max_image_size_kb`, `max_attachment_size_kb` and `max_image_megapixels` as smaller uploads require less resources to process. Alternatively, `client_max_body_size` can be reduced in Nginx to prevent large uploads from reaching the server.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-15T20:15:07.900",
    "last_modified": "2024-11-21T08:59:48.070",
    "fix_date": "2024-02-07T04:55:36Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/003b80e62f97cd8c0114d6b9d3f93c10443e6fae",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-58vw-246g-fjj4",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/discourse/discourse/commit/003b80e62f97cd8c0114d6b9d3f93c10443e6fae",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-58vw-246g-fjj4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.500286",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-26T07:21:20Z",
    "pushed_at": "2025-01-25T09:40:42Z",
    "size": 701178,
    "stars": 42998,
    "forks": 8411,
    "open_issues": 82,
    "watchers": 42998,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20337451,
      "JavaScript": 9453662,
      "HTML": 1461712,
      "Handlebars": 1061673,
      "SCSS": 987048,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5042,
      "avg_commits_per_week": 96.96153846153847,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-26T07:34:08.623080"
  }
}