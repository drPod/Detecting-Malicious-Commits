{
  "cve_id": "CVE-2024-25410",
  "github_data": {
    "repository": "flusity/flusity-CMS",
    "fix_commit": "b99de3bd05677e8b61c04a70235faa6001556b3b",
    "related_commits": [
      "b99de3bd05677e8b61c04a70235faa6001556b3b",
      "b99de3bd05677e8b61c04a70235faa6001556b3b"
    ],
    "patch_url": "https://github.com/flusity/flusity-CMS/commit/b99de3bd05677e8b61c04a70235faa6001556b3b.patch",
    "fix_commit_details": {
      "sha": "b99de3bd05677e8b61c04a70235faa6001556b3b",
      "commit_date": "2024-02-03T13:41:41Z",
      "author": {
        "login": "flusity",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update update_setting.php",
        "length": 102,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 47,
        "additions": 22,
        "deletions": 25
      },
      "files": [
        {
          "filename": "core/tools/actions/update_setting.php",
          "status": "modified",
          "additions": 22,
          "deletions": 25,
          "patch": "@@ -8,61 +8,58 @@\n $configurations = require $_SERVER['DOCUMENT_ROOT'] . '/security/config.php';\r\n require_once $_SERVER['DOCUMENT_ROOT'] . '/core/functions/functions.php';\r\n \r\n-require_once $_SERVER['DOCUMENT_ROOT'] . '/security/config.php';\r\n require_once $_SERVER['DOCUMENT_ROOT'] . '/core/functions/functions.php';\r\n define('ROOT_PATH', $_SERVER['DOCUMENT_ROOT'] . '/');\r\n \r\n $config = $configurations['config'];\r\n $prefix = $configurations['prefix'];\r\n \r\n- $db = getDBConnection($config);\r\n+$db = getDBConnection($config);\r\n secureSession($db, $prefix);\r\n $language_code = getLanguageSetting($db, $prefix);\r\n $translations = getTranslations($db, $prefix, $language_code);\r\n \r\n $result = ['error_message' => false];\r\n $updateResult = ['error_message' => false];\r\n \r\n-if (isset($_POST['site_title'], $_POST['meta_description'], $_POST['footer_text'], $_POST['pretty_url'], $_POST['bilingualism'], $_POST['language'],\r\n- $_POST['posts_per_page'], $_POST['registration_enabled'], $_POST['session_lifetime'], $_POST['default_keywords'])) { \r\n+if (isset($_POST['site_title'], $_POST['meta_description'], $_POST['footer_text'], $_POST['pretty_url'], $_POST['bilingualism'], $_POST['language'], $_POST['posts_per_page'], $_POST['registration_enabled'], $_POST['session_lifetime'], $_POST['default_keywords'])) {\r\n \r\n     $allowed_file_types = ['image/png', 'image/jpeg', 'image/gif'];\r\n-    $target_dir = ROOT_PATH. \"/uploads/\";\r\n+    $allowed_file_extensions = ['png', 'jpeg', 'jpg', 'gif']; // Prid\u0117tas leid\u017eiam\u0173 pl\u0117tini\u0173 s\u0105ra\u0161as\r\n+    $target_dir = ROOT_PATH . \"/uploads/\";\r\n     $max_file_size = 100 * 1024; // Maximum file size (100KB)\r\n     $brand_icone = null; // Initialize this variable before if condition\r\n \r\n     if (isset($_FILES[\"brand_icone\"]) && $_FILES[\"brand_icone\"][\"size\"] > 0) {\r\n         $uploaded_file = $_FILES[\"brand_icone\"];\r\n-        $unique_code = bin2hex(random_bytes(8));\r\n         $filename_parts = pathinfo($uploaded_file[\"name\"]);\r\n-        $new_filename = $filename_parts['filename'] . '_' . $unique_code . '.' . $filename_parts['extension'];\r\n-        $target_file = $target_dir . basename($new_filename);\r\n-        $brand_icone = $new_filename; // Use the new filename\r\n-  \r\n-        if (!in_array($uploaded_file['type'], $allowed_file_types)) {\r\n-            $_SESSION['error_message'] = t(\"Invalid file type.\");\r\n-           \r\n-        } \r\n+        $file_extension = strtolower($filename_parts['extension']); // Paver\u010diama ma\u017eosiomis raid\u0117mis, kad b\u016bt\u0173 lengviau palyginti\r\n \r\n-        if ($uploaded_file['size'] > $max_file_size) {\r\n+        if (!in_array($uploaded_file['type'], $allowed_file_types) || !in_array($file_extension, $allowed_file_extensions)) {\r\n+            $_SESSION['error_message'] = t(\"Invalid file type or extension.\");\r\n+        } elseif ($uploaded_file['size'] > $max_file_size) {\r\n             $_SESSION['error_message'] = t(\"File size exceeded limit.\");\r\n-           \r\n-        } \r\n-\r\n-        if (move_uploaded_file($uploaded_file[\"tmp_name\"], $target_file)) {\r\n-            $file_url = $_SERVER['REQUEST_SCHEME'] . \"://\" . $_SERVER['HTTP_HOST'] . \"/uploads/\" . $new_filename;\r\n-            saveFileToDatabase($db, $prefix, $new_filename, $file_url);\r\n-            $_SESSION['success_message'] = \"File\" .\" \". basename($uploaded_file[\"name\"]) . \" \" .t(\"file uploaded successfully.\");\r\n         } else {\r\n-            $_SESSION['error_message'] = t(\"Error loading file.\");\r\n-         \r\n+            $unique_code = bin2hex(random_bytes(8));\r\n+            $new_filename = $filename_parts['filename'] . '_' . $unique_code . '.' . $file_extension;\r\n+            $target_file = $target_dir . basename($new_filename);\r\n+            $brand_icone = $new_filename; // Use the new filename\r\n+\r\n+            if (move_uploaded_file($uploaded_file[\"tmp_name\"], $target_file)) {\r\n+                $file_url = $_SERVER['REQUEST_SCHEME'] . \"://\" . $_SERVER['HTTP_HOST'] . \"/uploads/\" . $new_filename;\r\n+                saveFileToDatabase($db, $prefix, $new_filename, $file_url);\r\n+                $_SESSION['success_message'] = \"File \" . basename($uploaded_file[\"name\"]) . \" \" . t(\"file uploaded successfully.\");\r\n+            } else {\r\n+                $_SESSION['error_message'] = t(\"Error loading file.\");\r\n+            }\r\n         }\r\n     } elseif (isset($_POST['brand_icone_id']) && !empty($_POST['brand_icone_id'])) {\r\n         // Fetch the file using its id\r\n         $file = getFileById($db, $prefix, $_POST['brand_icone_id']);\r\n         $brand_icone = $file['name'];\r\n     }\r\n \r\n+\r\n     $site_title = $_POST['site_title'];\r\n     $meta_description = $_POST['meta_description'];\r\n     $footer_text_settings = $_POST['footer_text'];\r\n@@ -92,4 +89,4 @@\n \r\n echo json_encode($updateResult); \r\n \r\n-?>\n\\ No newline at end of file\n+?>\r"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6acffd38f03f929567f39dd6a359dfde2a6c311e",
            "date": "2024-02-07T16:17:31Z",
            "author_login": "flusity"
          },
          {
            "sha": "5e0947900057ff32f9e5805b6533dd17dda1d867",
            "date": "2024-02-07T16:12:35Z",
            "author_login": "flusity"
          },
          {
            "sha": "b99de3bd05677e8b61c04a70235faa6001556b3b",
            "date": "2024-02-03T13:41:41Z",
            "author_login": "flusity"
          },
          {
            "sha": "d659b5e62257ef421a3e328f597abd1c41630a6a",
            "date": "2023-12-12T18:05:00Z",
            "author_login": "flusity"
          },
          {
            "sha": "aa0d6a3234cb4a1f9291189fc06fbce9c39be010",
            "date": "2023-12-12T18:03:58Z",
            "author_login": "flusity"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-434",
    "description": "flusity-CMS 2.33 is vulnerable to Unrestricted Upload of File with Dangerous Type in update_setting.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-26T16:27:58.960",
    "last_modified": "2024-11-21T09:00:45.253",
    "fix_date": "2024-02-03T13:41:41Z"
  },
  "references": [
    {
      "url": "https://github.com/flusity/flusity-CMS/commit/b99de3bd05677e8b61c04a70235faa6001556b3b",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/flusity/flusity-CMS/issues/9",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/flusity/flusity-CMS/commit/b99de3bd05677e8b61c04a70235faa6001556b3b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/flusity/flusity-CMS/issues/9",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.161228",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "flusity-CMS",
    "owner": "flusity",
    "created_at": "2023-04-21T19:25:34Z",
    "updated_at": "2024-04-11T11:23:22Z",
    "pushed_at": "2024-02-07T16:20:23Z",
    "size": 20553,
    "stars": 2,
    "forks": 1,
    "open_issues": 5,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "PHP": 715605,
      "JavaScript": 195873,
      "CSS": 37677,
      "Hack": 1059,
      "HTML": 930
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:16:02.206138"
  }
}