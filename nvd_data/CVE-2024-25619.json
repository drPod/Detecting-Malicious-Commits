{
  "cve_id": "CVE-2024-25619",
  "github_data": {
    "repository": "mastodon/mastodon",
    "fix_commit": "68eaa804c9bafdc5f798e114e9ba00161425dd71",
    "related_commits": [
      "68eaa804c9bafdc5f798e114e9ba00161425dd71",
      "68eaa804c9bafdc5f798e114e9ba00161425dd71"
    ],
    "patch_url": "https://github.com/mastodon/mastodon/commit/68eaa804c9bafdc5f798e114e9ba00161425dd71.patch",
    "fix_commit_details": {
      "sha": "68eaa804c9bafdc5f798e114e9ba00161425dd71",
      "commit_date": "2024-02-14T14:15:34Z",
      "author": {
        "login": "ThisIsMissEm",
        "type": "User",
        "stats": {
          "total_commits": 106,
          "average_weekly_commits": 0.22746781115879827,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 55
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-7w3c-p9j8-mq3x",
        "length": 479,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 37,
        "additions": 37,
        "deletions": 0
      },
      "files": [
        {
          "filename": "app/lib/application_extension.rb",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -4,14 +4,34 @@ module ApplicationExtension\n   extend ActiveSupport::Concern\n \n   included do\n+    include Redisable\n+\n     has_many :created_users, class_name: 'User', foreign_key: 'created_by_application_id', inverse_of: :created_by_application\n \n     validates :name, length: { maximum: 60 }\n     validates :website, url: true, length: { maximum: 2_000 }, if: :website?\n     validates :redirect_uri, length: { maximum: 2_000 }\n+\n+    # The relationship used between Applications and AccessTokens is using\n+    # dependent: delete_all, which means the ActiveRecord callback in\n+    # AccessTokenExtension is not run, so instead we manually announce to\n+    # streaming that these tokens are being deleted.\n+    before_destroy :push_to_streaming_api, prepend: true\n   end\n \n   def confirmation_redirect_uri\n     redirect_uri.lines.first.strip\n   end\n+\n+  def push_to_streaming_api\n+    # TODO: #28793 Combine into a single topic\n+    payload = Oj.dump(event: :kill)\n+    access_tokens.in_batches do |tokens|\n+      redis.pipelined do |pipeline|\n+        tokens.ids.each do |id|\n+          pipeline.publish(\"timeline:access_token:#{id}\", payload)\n+        end\n+      end\n+    end\n+  end\n end"
        },
        {
          "filename": "app/models/user.rb",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -344,6 +344,16 @@ def revoke_access!\n     Doorkeeper::AccessToken.by_resource_owner(self).in_batches do |batch|\n       batch.update_all(revoked_at: Time.now.utc)\n       Web::PushSubscription.where(access_token_id: batch).delete_all\n+\n+      # Revoke each access token for the Streaming API, since `update_all``\n+      # doesn't trigger ActiveRecord Callbacks:\n+      # TODO: #28793 Combine into a single topic\n+      payload = Oj.dump(event: :kill)\n+      redis.pipelined do |pipeline|\n+        batch.ids.each do |id|\n+          pipeline.publish(\"timeline:access_token:#{id}\", payload)\n+        end\n+      end\n     end\n   end\n "
        },
        {
          "filename": "spec/models/user_spec.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -420,7 +420,10 @@\n     let!(:access_token) { Fabricate(:access_token, resource_owner_id: user.id) }\n     let!(:web_push_subscription) { Fabricate(:web_push_subscription, access_token: access_token) }\n \n+    let(:redis_pipeline_stub) { instance_double(Redis::Namespace, publish: nil) }\n+\n     before do\n+      allow(redis).to receive(:pipelined).and_yield(redis_pipeline_stub)\n       user.reset_password!\n     end\n \n@@ -437,6 +440,10 @@\n       expect(Doorkeeper::AccessToken.active_for(user).count).to eq 0\n     end\n \n+    it 'revokes streaming access for all access tokens' do\n+      expect(redis_pipeline_stub).to have_received(:publish).with(\"timeline:access_token:#{access_token.id}\", Oj.dump(event: :kill)).once\n+    end\n+\n     it 'removes push subscriptions' do\n       expect(Web::PushSubscription.where(user: user).or(Web::PushSubscription.where(access_token: access_token)).count).to eq 0\n       expect { web_push_subscription.reload }.to raise_error(ActiveRecord::RecordNotFound)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "68c9f91ccb46b14ce43424479b3ff8ab28800997",
            "date": "2025-01-14T17:40:55Z",
            "author_login": "mjankowski"
          },
          {
            "sha": "e1d7efadc04dd0826c6bcfe43325688566e13881",
            "date": "2025-01-14T16:35:58Z",
            "author_login": "vmstan"
          },
          {
            "sha": "bfe73e153d425312211eb1114ff20275aa369059",
            "date": "2025-01-14T16:34:26Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "50013b10a50a560ebf4432cbe1782426181dba6f",
            "date": "2025-01-14T14:32:57Z",
            "author_login": "mjankowski"
          },
          {
            "sha": "7c56517c7c2f3e284b912f7519682c3612d3af81",
            "date": "2025-01-14T14:32:29Z",
            "author_login": "mjankowski"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-613",
    "description": "Mastodon is a free, open-source social network server based on ActivityPub. When an OAuth Application is destroyed, the streaming server wasn't being informed that the Access Tokens had also been destroyed, this could have posed security risks to users by allowing an application to continue listening to streaming after the application had been destroyed. Essentially this comes down to the fact that when Doorkeeper sets up the relationship between Applications and Access Tokens, it uses a `dependent: delete_all` configuration, which means the `after_commit` callback setup on `AccessTokenExtension` didn't actually fire, since `delete_all` doesn't trigger ActiveRecord callbacks. To mitigate, we need to add a `before_destroy` callback to `ApplicationExtension` which announces to streaming that all the Application's Access Tokens are being \"killed\". Impact should be negligible given the affected application had to be owned by the user. None the less this issue has been addressed in versions 4.2.6, 4.1.14, 4.0.14, and 3.5.18. Users are advised to upgrade. There are no known workaround for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-02-14T21:15:08.620",
    "last_modified": "2024-12-18T22:22:01.737",
    "fix_date": "2024-02-14T14:15:34Z"
  },
  "references": [
    {
      "url": "https://github.com/mastodon/mastodon/commit/68eaa804c9bafdc5f798e114e9ba00161425dd71",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/security/advisories/GHSA-7w3c-p9j8-mq3x",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/commit/68eaa804c9bafdc5f798e114e9ba00161425dd71",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mastodon/mastodon/security/advisories/GHSA-7w3c-p9j8-mq3x",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.126505",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mastodon",
    "owner": "mastodon",
    "created_at": "2016-02-22T15:01:25Z",
    "updated_at": "2025-01-14T12:09:56Z",
    "pushed_at": "2025-01-14T10:53:29Z",
    "size": 274975,
    "stars": 47503,
    "forks": 7054,
    "open_issues": 3992,
    "watchers": 47503,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 4639671,
      "JavaScript": 1261807,
      "TypeScript": 625967,
      "SCSS": 341977,
      "Haml": 320352,
      "Dockerfile": 18716,
      "HTML": 13453,
      "Shell": 2288,
      "Procfile": 911,
      "CSS": 51
    },
    "commit_activity": {
      "total_commits_last_year": 3020,
      "avg_commits_per_week": 58.07692307692308,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T12:56:02.769793"
  }
}