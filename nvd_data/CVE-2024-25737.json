{
  "cve_id": "CVE-2024-25737",
  "github_data": {
    "repository": "vufind-org/vufind",
    "fix_commit": "345d00f7d7f1c581f46742effdac70e803b3847b",
    "related_commits": [
      "345d00f7d7f1c581f46742effdac70e803b3847b",
      "51f2ddac0dc1047e6fd3b27e6d984b19e1601d00",
      "345d00f7d7f1c581f46742effdac70e803b3847b",
      "51f2ddac0dc1047e6fd3b27e6d984b19e1601d00"
    ],
    "patch_url": "https://github.com/vufind-org/vufind/commit/345d00f7d7f1c581f46742effdac70e803b3847b.patch",
    "fix_commit_details": {
      "sha": "345d00f7d7f1c581f46742effdac70e803b3847b",
      "commit_date": "2024-02-06T13:13:43Z",
      "author": {
        "login": "demiankatz",
        "type": "User",
        "stats": {
          "total_commits": 7530,
          "average_weekly_commits": 11.461187214611872,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 609
        }
      },
      "commit_message": {
        "title": "Restrict hostnames for cover proxy. (#3385)",
        "length": 43,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 47,
        "additions": 44,
        "deletions": 3
      },
      "files": [
        {
          "filename": "config/vufind/config.ini",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -1023,6 +1023,13 @@ coverimagesCache = true\n ; BrowZine DOI icons:\n coverproxyCache[] = \"/assets\\.thirdiron\\.com/\"\n \n+; This setting controls which hosts are allowed to provide cover images through\n+; the built-in cover proxy. Images from hostnames that do not match the regular\n+; expressions below will not be proxied. Be sure to define regular expressions\n+; using an end of string ($) marker to prevent abuse.\n+coverproxyAllowedHosts[] = \"/assets\\.thirdiron\\.com$/\"\n+coverproxyAllowedHosts[] = \"/\\.summon\\.serialssolutions\\.com$/\"\n+\n ; This setting controls how cover image URLs are loaded. They could be loaded as\n ; part of main request, or asynchronously. Asynchronous loading is disabled by\n ; default; to enable it, just uncomment the line below."
        },
        {
          "filename": "module/VuFind/src/VuFind/Controller/CoverController.php",
          "status": "modified",
          "additions": 33,
          "deletions": 2,
          "patch": "@@ -65,21 +65,31 @@ class CoverController extends \\Laminas\\Mvc\\Controller\\AbstractActionController\n      */\n     protected $sessionSettings = null;\n \n+    /**\n+     * Configuration settings ([Content] section of config.ini)\n+     *\n+     * @var array\n+     */\n+    protected $config;\n+\n     /**\n      * Constructor\n      *\n      * @param Loader          $loader Cover loader\n      * @param CachingProxy    $proxy  Proxy loader\n      * @param SessionSettings $ss     Session settings\n+     * @param array           $config Configuration settings\n      */\n     public function __construct(\n         Loader $loader,\n         CachingProxy $proxy,\n-        SessionSettings $ss\n+        SessionSettings $ss,\n+        array $config = []\n     ) {\n         $this->loader = $loader;\n         $this->proxy = $proxy;\n         $this->sessionSettings = $ss;\n+        $this->config = $config;\n     }\n \n     /**\n@@ -115,6 +125,27 @@ protected function getImageParams()\n         ];\n     }\n \n+    /**\n+     * Is the provided URL included on the configured allow list?\n+     *\n+     * @param string $url URL to check\n+     *\n+     * @return bool\n+     */\n+    protected function proxyAllowedForUrl(string $url): bool\n+    {\n+        $host = parse_url($url, PHP_URL_HOST);\n+        if (!$host) {\n+            return false;\n+        }\n+        foreach ((array)($this->config['coverproxyAllowedHosts'] ?? []) as $regEx) {\n+            if (preg_match($regEx, $host)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Send image data for display in the view\n      *\n@@ -126,7 +157,7 @@ public function showAction()\n \n         // Special case: proxy a full URL:\n         $url = $this->params()->fromQuery('proxy');\n-        if (!empty($url)) {\n+        if (!empty($url) && $this->proxyAllowedForUrl($url)) {\n             try {\n                 $image = $this->proxy->fetch($url);\n                 $contentType = $image?->getHeaders()?->get('content-type')?->getFieldValue() ?? '';"
        },
        {
          "filename": "module/VuFind/src/VuFind/Controller/CoverControllerFactory.php",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -68,10 +68,13 @@ public function __invoke(\n         if (!empty($options)) {\n             throw new \\Exception('Unexpected options sent to factory.');\n         }\n+        $config = $container->get(\\VuFind\\Config\\PluginManager::class)->get('config');\n+        $configArray = $config?->Content?->toArray() ?? [];\n         return new $requestedName(\n             $container->get(\\VuFind\\Cover\\Loader::class),\n             $container->get(\\VuFind\\Cover\\CachingProxy::class),\n-            $container->get(\\VuFind\\Session\\Settings::class)\n+            $container->get(\\VuFind\\Session\\Settings::class),\n+            $configArray\n         );\n     }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9f78f7484b09a4193eda8d4dd5b946d5de67edf1",
            "date": "2025-01-14T18:07:10Z",
            "author_login": "demiankatz"
          },
          {
            "sha": "d3187766471a757c244de437f1bf413e338794ca",
            "date": "2025-01-13T13:32:40Z",
            "author_login": "ThoWagen"
          },
          {
            "sha": "0f90fbc8d66956651f94be4ba93a350530299445",
            "date": "2025-01-10T14:05:45Z",
            "author_login": "ThoWagen"
          },
          {
            "sha": "3d937b13e50048f8c28ee1c5fd8812f39a1205dd",
            "date": "2025-01-09T13:30:52Z",
            "author_login": "demiankatz"
          },
          {
            "sha": "f1b23dc8581214378ba2b3d8bf5a67163d7dc5ce",
            "date": "2025-01-09T13:29:40Z",
            "author_login": "demiankatz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "A Server-Side Request Forgery (SSRF) vulnerability in the /Cover/Show route (showAction in CoverController.php) in Open Library Foundation VuFind 2.4 through 9.1 before 9.1.1 allows remote attackers to access internal HTTP servers and perform Cross-Site Scripting (XSS) attacks by proxying arbitrary URLs via the proxy GET parameter.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-22T19:15:08.657",
    "last_modified": "2024-11-21T09:01:18.417",
    "fix_date": "2024-02-06T13:13:43Z"
  },
  "references": [
    {
      "url": "https://github.com/vufind-org/vufind/commit/345d00f7d7f1c581f46742effdac70e803b3847b",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/vufind-org/vufind/commit/51f2ddac0dc1047e6fd3b27e6d984b19e1601d00",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://vufind.org/wiki/security:cve-2024-25737",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/vufind-org/vufind/commit/345d00f7d7f1c581f46742effdac70e803b3847b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/vufind-org/vufind/commit/51f2ddac0dc1047e6fd3b27e6d984b19e1601d00",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://vufind.org/wiki/security:cve-2024-25737",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.278160",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vufind",
    "owner": "vufind-org",
    "created_at": "2013-07-26T08:05:45Z",
    "updated_at": "2025-01-14T18:07:15Z",
    "pushed_at": "2025-01-14T18:07:10Z",
    "size": 393600,
    "stars": 274,
    "forks": 359,
    "open_issues": 42,
    "watchers": 274,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev",
      "dev-12.0",
      "release-2.2",
      "release-2.3",
      "release-2.4",
      "release-2.5",
      "release-3.0",
      "release-3.1"
    ],
    "languages": {
      "PHP": 14210540,
      "HTML": 1894635,
      "JavaScript": 576384,
      "SCSS": 268210,
      "XSLT": 265581,
      "mIRC Script": 209165,
      "Java": 195802,
      "Less": 131834,
      "Batchfile": 29663,
      "Shell": 27034,
      "CSS": 11761
    },
    "commit_activity": {
      "total_commits_last_year": 1172,
      "avg_commits_per_week": 22.53846153846154,
      "days_active_last_year": 221
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T20:10:07.652586"
  }
}