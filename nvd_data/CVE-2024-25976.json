{
  "cve_id": "CVE-2024-25976",
  "github_data": {
    "repository": "HAWK-Digital-Environments/HAWKI",
    "fix_commit": "146967f3148e92d1640ffebc21d8914e2d7fb3f1",
    "related_commits": [
      "146967f3148e92d1640ffebc21d8914e2d7fb3f1",
      "146967f3148e92d1640ffebc21d8914e2d7fb3f1"
    ],
    "patch_url": "https://github.com/HAWK-Digital-Environments/HAWKI/commit/146967f3148e92d1640ffebc21d8914e2d7fb3f1.patch",
    "fix_commit_details": {
      "sha": "146967f3148e92d1640ffebc21d8914e2d7fb3f1",
      "commit_date": "2024-04-18T08:41:24Z",
      "author": {
        "login": "Ariansdf",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "HAWKI Update #002",
        "length": 17,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 129363,
        "additions": 126482,
        "deletions": 2881
      },
      "files": [
        {
          "filename": ".gitignore",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -1,4 +1,2 @@\n .env\n-.DS_Store\n-\n-feedback/*/***\n\\ No newline at end of file\n+.DS_Store\n\\ No newline at end of file"
        },
        {
          "filename": ".htaccess",
          "status": "modified",
          "additions": 20,
          "deletions": 19,
          "patch": "@@ -1,24 +1,25 @@\n-# Prevent Access to svg\n-<Files \"*.svg\">\n-  Order allow,deny\n-  Allow from all\n-</Files>\n+# DISABLE DIRECTORY LISTINGS\n+Options -Indexes\n \n-# Prevent Access to log files\n-<Files \"*.log\">\n-    Order Allow,Deny\n-    Deny from all\n-</Files>\n+<IfModule mod_rewrite.c>\n+    RewriteEngine On\n+    RewriteBase /\n \n-# Prevent Access to dot files\n-<FilesMatch \"^\\.\">\n-    Order allow,deny\n-    Deny from all\n-</FilesMatch>\n+    # Remove .php extension from URLs\n+    RewriteCond %{REQUEST_FILENAME}.php -f\n+    RewriteRule ^ %{REQUEST_URI}.php [L]\n+\n+    # Remove trailing dot from URLs\n+    RewriteRule ^(.*)\\.$ /$1 [R=301,L]\n+\n+    # Redirect all requests to index.php except existing files or directories\n+    RewriteCond %{REQUEST_FILENAME} !-f\n+    RewriteCond %{REQUEST_FILENAME} !-d\n+    RewriteRule ^ index.php [L]\n+</IfModule>\n \n-# DISABLE CACHING \n <IfModule mod_headers.c> \t\n-Header set Cache-Control \"no-cache, no-store, must-revalidate\" \t\n-Header set Pragma \"no-cache\" \t\n-Header set Expires 0 \n+    Header set Cache-Control \"no-cache, no-store, must-revalidate\" \t\n+    Header set Pragma \"no-cache\" \t\n+    Header set Expires 0 \n </IfModule>\n\\ No newline at end of file"
        },
        {
          "filename": "Changelog.txt",
          "status": "added",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -0,0 +1,21 @@\n+CHANGE LOG:\n+\n+16.04.2024 Changelog \u2013 HAWKI V1. \n+\n+    - Multi language package added.\n+    - Dark mode theme added.\n+    - Syntax Highlighting update.\n+    - KaTeX implimentation for math formulas.\n+    - Azure AI integration\n+    - BUGFIX: Test user enabled w/ cridentials from .env file.\n+    - Shibboleth connection \n+    - System prompts panel added.\n+    - Security updates for escaped HTML, sanitized inputs, csrf token. \n+\n+23.01.2024\n+\n+    - Message Inputfield scroll panel added.\n+    - Autoscroll function adjusted. Scroll up stops the auto scroll.\n+    - Stop Generating function added. During the generation process send button switches to stop generation button.\n+    - Copy Button added. The function copies the whole message as plain text.\n+    - BUGFIX: Parsing error from json \"Chunks\" corrected (merged code from Niklas Wode)."
        },
        {
          "filename": "FiraSans.woff2",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "README.md",
          "status": "modified",
          "additions": 35,
          "deletions": 40,
          "patch": "@@ -1,11 +1,5 @@\n # HAWKI\n \n-# NEU NEU NEU\n-\n-Im Rahmen der gemeinsamen Weiterentwicklung von HAWKI m\u00f6chten wir ein Dokument zur Verf\u00fcgung stellen, das verschiedene Nutzungsm\u00f6glichkeiten von HAWKI aufzeigt. Hier ist Platz, um Promptvorschl\u00e4ge f\u00fcr die Hochschullehre zu machen oder weitere fiktive Expert*innen f\u00fcr das virtuelle B\u00fcro hinzuzuf\u00fcgen.\n-https://pad.hawk.de/p/Offener_Prompt-Katalog\n-\n-\n ## About\n \n HAWKI is a didactic interface for universities based on the OpenAI API. It is not necessary for users to create an account, the university ID is sufficient for login - no user-related data is stored.\n@@ -20,42 +14,38 @@ Learning Space: The learning spaces are designed to help you understand the diff\n \n We welcome constructive feedback to further develop this project based on your needs and insights.\n \n-![HAWKI Login](/img/hawki-screenshot-login.png)\n+<!-- ![HAWKI Login](/img/hawki-screenshot-login.png) -->\n+![HAWKI Login](/img/readmePic1.jpeg)\n _HAWKI Login Screen_\n \n-![HAWKI Dashboard](/img/hawki-screenshot-dashboard.jpg)\n+<!-- ![HAWKI Dashboard](/img/hawki-screenshot-dashboard.jpg) -->\n+![HAWKI Dashboard](/img/readmePic3.jpg)\n _HAWKI Dashboard_\n \n-## ChangeLog 23.01.2024\n+![HAWKI Dashboard](/img/readmePic2.jpg)\n+_HAWKI Settings Panel_\n+\n+\n+## Changelog \u2013 HAWKI V1. \n \n-Quality of Life Features:\n+###Functionality \n \n-- Message Inputfield scroll panel added\n-It is now possible to scroll in the text input field. Previously, long text entries were too inconvenient.\n-- Autoscroll function adjusted. Scroll up stops the auto scroll.\n-When a response is generated, the user can still scroll up and read the text that has already been generated.\n-- Stop Generating function added. During the generation process \u201csend\u201d button switches to \u201cstop generation\u201d button.\n-Now users no longer have to wait until the end of the generation, but can end the process manually.\n-- Copy Button added. The function copies the whole message as plain text.\n-Users can use the Copy button to copy the text without formatting. This simplifies the further processing of the generated answers.\n+Shibboleth connection as an additional authentication option. (Thanks to Marvin Mundry from the University of Hamburg)\n \n+Multi-language with translated texts for English, Italian, French and Spanish.\n+Display of mathematical formulas, LaTex and improvement of syntax highlighting.\n \n-Bugfix\n-- Parsing error from json \"Chunks\" corrected (merged code from Uni Kassel / thx to Niklas Wode).\n-Previously, the response was sometimes not generated completely or contained errors.\n+###Quality of Life \n \n-Other\n+Dark Mode for our night owls.\n \n-- Removed testing files\n-Redundant files from the development phase\n+System prompts can now be viewed transparently.\n \n-- Removed docker container \n-We cannot offer long-term support for a docker integration and find the setup process simple enough and have therefore removed the docker container.\n+###Security updates\n \n-- Changed standard model to GPT-4-Turbo\n-At times we had a model switcher built in, but this has now become unnecessary. We have removed the model switcher and set gpt 4 turbo as the standard model.\n+We have made HAWKI more secure in some areas and updated the code structure.\n \n-- Previously, the generated text that was in double asterisks was deleted, now we make it available as bold text, as intended.\n+We would like to thank Thorger Jansen (discovery, analysis, coordination) from SEC Consult Vulnerability Lab for responsibly reporting the identified issues and working with us to fix them.\n \n ## Getting started\n \n@@ -65,7 +55,7 @@ At times we had a model switcher built in, but this has now become unnecessary.\n \n HAWKI uses LDAP under the hood in order to authenticate users. Make sure you have LDAP setup first and that it is accessible from your HAWKI instance. Provide your LDAP config according to chapter [Configuration](#configuration). You can find more information on how to use LDAP on the official website https://ldap.com\n \n-_**Testing without LDAP:**_ You can try out HAWKI without an LDAP server. To do so, set `TESTUSER` and `TESTPASSWORD` in the configuration file (see [Configuration](#configuration)).\n+_**Testing without LDAP:**_ You can try out HAWKI without an LDAP server. To do so, set `TESTUSER` to your prefered user name `tester` in the configuration file (see [Configuration](#configuration)) and sign in with username `tester` and password `superlangespasswort123`\n \n ### OpenID Connect\n \n@@ -74,35 +64,40 @@ authenticate users. It requires the jumbojett/openid-connect-php\n library (https://github.com/jumbojett/OpenID-Connect-PHP)\n to be installed with composer.\n \n-### Open AI Access\n+### Shibboleth \n+\n+The new version also supports the Shibboleth for user authentication. Define your Shibboleth url and login page in the environment file (see [Configuration](#configuration)).\n \n-To generate answers HAWKI uses the _Open AI API_. Follow the instructions on https://platform.openai.com/docs/introduction to generate an API key and paste it in the configuration file like instructed in chapter [Configuration](#configuration).\n+### Open AI Access\n \n-The API also works with _Microsoft Azure AI_. Follow the instructions on https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource?pivots=web-portal to create a resource, deploy a GPT-4 model and generate the API URL and API key. For Microsoft Azure AI, this URL should look like _https://<AZURE_OPENAI_ENDPOINT>/openai/deployments/<DEPLOYMENT_NAME>/chat/completions?api-version=2023-05-15_ with AZURE_OPENAI_ENDPOINT and DEPLOYMENT_NAME being replaced by your values. Paste the API URL and API key in the configuration file like instructed in chapter [Configuration](#configuration).\n+To generate answers HAWKI uses the Open AI api. Follow the instructions on https://platform.openai.com/docs/introduction to generate an API key and paste it in the configuration file like instructed in chapter [Configuration](#configuration).\n \n ## Configuration\n \n To get started you need to add a configuration file to the project first. Copy the file \".env.example\" from the root directory and rename it to \".env\". Replace the example values in it with your own configuration. A detailed description of all values is listed below.\n \n | Value            | Type    | Example                                | Description                                                                                                                                        |\n | ---------------- | ------- | -------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n-| Authentication   | string  | 'LDAP' or 'OIDC'                        | Authentication method: LDAP or OpenID Connect                                                                                                      |\n+| Authentication   | string  | 'LDAP' / 'OIDC' / 'Shibboleth'                     | Authentication method: LDAP or OpenID Connect                                                                                                      |\n | LDAP_HOST        | string  | \"ldaps://...de\"                        | The URL of your LDAP server.                                                                                                                       |\n | LDAP_BIND_PW     | string  | secretpassword                         | Password of the user that is trying to bind to the LDAP Server.                                                                                    |\n | LDAP_BASE_DN     | string  | \"cn=...,ou=...,dc=...\"                 | Distinguised name that is used to initially bind to your LDAP server.                                                                              |\n | LDAP_SEARCH_DN   | string  | \"ou=...,dc=...\"                        | Distinguished name that is used for authenticating users.                                                                                          |\n+| LDAP_PORT  | string  | \"...\"                        | The LDAP port.                                                                                          |\n+| SHIBBOLET_LOGIN_PATH    | string  | \"...\"                                  | Path to shibboleth login page.                                                                                               |\n+| SHIBBOLET_LOGIN_PAGE    | string  | \"...\"                                  | Shibboleth login page.                                                                                               |\n | OIDC_IDP          | string  | \"https://....\"                         | URL of the Identity provider supporting OpenID Connect.                                                                                            |\n | OIDC_CLIENT_ID    | string  | \"...\"                                  | Client Id for this application in Identity provider.                                                                                               |\n | OIDC_CLIENT_SECRET | string  | \"...\"                                 | Secret key for OpenID Connect. \n | OIDC_LOGOUT_URI | string  | \"https://....\"                                 | URL to logout from Identity provider                                                                                                                  |\n-| OPENAI_API_KEY   | string  | sk-...                                 | Open AI API key                                                                                                                                    |\n-| OPENAI_API_URL   | string  | https://api.openai.com/v1/chat/completions | Open AI API URL. Also works with Microsoft Azure AI.                                                         |\n+| OPENAI_API_URL   | string  | \"https://api.openai.com/v1/chat/completions\" | Open AI URL                                                                                                                                    |\n+| OPENAI_API_KEY   | string  | sk-...                                 | Open AI Api key                                                                                                                                    |\n | IMPRINT_LOCATION | string  | https://your-university/imprint        | A link to your imprint. Alternatively you can replace the file index.php under /impressum with your own html/ php of your imprint.                 |\n | PRIVACY_LOCATION | string  | https://your-university/privacy-policy | A link to your privacy policy. Alternatively you can replace the file index.php under /datenschutz with your own html/ php of your privacy policy. |\n-| TESTUSER         | string  | `tester`                                | Can be set for testing purposes. Requires `Authentication=LDAP`. You can then sign in using the given username and password.                      |\n-| TESTPASSWORD     | string  | `superlangespasswort123`                | Can be set for testing purposes. Requires `Authentication=LDAP`. You can then sign in using the given username and password.                      |\n-| FAVICON_URI  | string  | \"https://....\"                                 | Link to favicon \n-\n+| TESTUSER         | string | \"tester\"                                | Set value for testing purposes. Leave TESTUSER and TESTPASSWORD empty or comment them out to disable test user.                    |\n+| TESTPASSWORD         | string | \"superlangespasswort123\"  | Set value for testing purposes. Leave TESTUSER and TESTPASSWORD empty or comment them out to disable test user.                           |\n+| FAVICON_URI  | string  | \"https://....\"                                 | Link to favicon |\n+| DEFAULT_LANGUAGE  | string  | \"de_DE\"/ \"en_US\"/ \"es_ES\"/ \"fr_FR\"/ \"it_IT\"               | Default website language. Only applicable if the user has not previously changed the language or their browser language is not one of the supported languages. Current supported languages: 'de_DE', 'en_US', 'es_ES', 'fr_FR', 'it_IT'  |\n ## Web Server Configuration\n \n There are a few things to keep in mind when publishing your HAWKI instance on a webserver."
        },
        {
          "filename": "SECURITY.md",
          "status": "modified",
          "additions": 32,
          "deletions": 12,
          "patch": "@@ -1,18 +1,38 @@\n-# Security Policy\n+# Sicherheitsrichtlinie\n \n-We take the security of our projects very seriously. This means we aim to disclose and patch any arising issues as soon as possible. Moderate to major security issues will be fixed and included in a new release. Smaller issues will be given a hotfix.\n+## Melden von Sicherheitsl\u00fccken\n \n-## Reporting a Vulnerability\n+Wir nehmen die Sicherheit unseres Projekts ernst. Wenn Sie eine Sicherheitsl\u00fccke in unserem Projekt entdeckt haben, bitten wir Sie, uns dies sicher \u00fcber E-Mail zu berichten. Bitte senden Sie keine Sicherheitsprobleme \u00fcber \u00f6ffentliche GitHub-Issues.\n \n-In order to report a (possible) vulnerability, please create a report here with the GitHub Security Advisory Tool and include a description as detailed as possible as well as the steps to reproduce the issue. \n-Alternatively you can contact us via E-Mail under vincent.timm2(at)hawk.de - please include the same information that you would fill in here on GitHub.\n+**E-Mail:** arian.sadafi1@hawk.de\n \n-We will try to reply to your request within two weeks. You should expect a close collaboration as we work to resolve the security vulnerability you have reported. \n-Please avoid revealing information about vulnerabilities in public without prior disclosure if that could put users at risk.\n+**Verschl\u00fcsselte Kommunikation:**\n+- Bitte senden Sie Ihre Meldung verschl\u00fcsselt, wenn m\u00f6glich. Unten finden Sie meinen \u00f6ffentlichen PGP-Schl\u00fcssel.\n \n-## Prefered Language\n-We prefer all communications to be in English or German.\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n \n-## Attribution\n-We will include a \"thank you section\" in the project description for those who disclosed vulnurabilities in accordance to this policy.\n-After vulnurabilities are fixed a public disclosure is possible.\n+mDMEZiDaSBYJKwYBBAHaRw8BAQdA0Pay7iQXr1eKz4ndzp9BUSCBb0F1ZMOpCpj+\n+qacOYdq0JEFyaWFuIFNhZGFmaSA8YXJpYW4uc2FkYWZpMUBoYXdrLmRlPoiZBBMW\n+CgBBFiEEWXmdELYk4obrfmZGH11shzhB3/MFAmYg2kgCGwMFCQWjmoAFCwkIBwIC\n+IgIGFQoJCAsCBBYCAwECHgcCF4AACgkQH11shzhB3/MbUwD9EAUlUw+z2W0RAVzg\n+eezchrJI9ujASKnttzUx5q3MyzYBAM1orN5fGQxscp5JmqzIDVmftrHSSU6B0EZP\n+z8ZFOREEuDgEZiDaSBIKKwYBBAGXVQEFAQEHQBiGyFSbtRTDcmr4kB//16cEaPI7\n+bs9uQ8mvIfAzo9cxAwEIB4h+BBgWCgAmFiEEWXmdELYk4obrfmZGH11shzhB3/MF\n+AmYg2kgC...\n+-----END PGP PUBLIC KEY BLOCK-----\n+\n+\n+## Was passiert nach der Meldung?\n+\n+- Wir best\u00e4tigen den Erhalt Ihrer Meldung innerhalb von 24 Stunden.\n+- Wir geben Ihnen eine Einsch\u00e4tzung der Schwere und des Einflusses der gemeldeten Sicherheitsl\u00fccke.\n+- Wir bem\u00fchen uns, Sicherheitsprobleme so schnell wie m\u00f6glich zu beheben und eine neue Version bereitzustellen, die das Problem l\u00f6st.\n+- Wir informieren Sie \u00fcber den Zeitplan der Korrekturen.\n+\n+## \u00d6ffentliche Anerkennung\n+\n+Wir erkennen alle Sicherheitsforscher an, die bei der Identifizierung und Meldung von Problemen gem\u00e4\u00df dieser Richtlinie helfen. Wenn Sie es w\u00fcnschen, f\u00fcgen wir Ihren Namen oder Ihr Pseudonym in die Liste der Beitragenden ein, nachdem das Problem behoben wurde.\n+\n+## Weitere Informationen\n+\n+F\u00fcr weitere Informationen \u00fcber die Sicherheit dieses Projekts oder die Sicherheitspraktiken wenden Sie sich bitte an arian.sadafi1@hawk.de.\n\\ No newline at end of file"
        },
        {
          "filename": "composer.lock",
          "status": "added",
          "additions": 288,
          "deletions": 0,
          "patch": "@@ -0,0 +1,288 @@\n+{\n+    \"_readme\": [\n+        \"This file locks the dependencies of your project to a known state\",\n+        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies\",\n+        \"This file is @generated automatically\"\n+    ],\n+    \"content-hash\": \"f6fbbdce9293efa736f194e1c2a02ae3\",\n+    \"packages\": [\n+        {\n+            \"name\": \"jumbojett/openid-connect-php\",\n+            \"version\": \"v0.9.10\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/jumbojett/OpenID-Connect-PHP.git\",\n+                \"reference\": \"45aac47b525f0483dd4db3324bb1f1cab4666061\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/jumbojett/OpenID-Connect-PHP/zipball/45aac47b525f0483dd4db3324bb1f1cab4666061\",\n+                \"reference\": \"45aac47b525f0483dd4db3324bb1f1cab4666061\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"ext-curl\": \"*\",\n+                \"ext-json\": \"*\",\n+                \"paragonie/random_compat\": \">=2\",\n+                \"php\": \">=5.4\",\n+                \"phpseclib/phpseclib\": \"~2.0 || ^3.0\"\n+            },\n+            \"require-dev\": {\n+                \"roave/security-advisories\": \"dev-master\",\n+                \"yoast/phpunit-polyfills\": \"^1.0\"\n+            },\n+            \"type\": \"library\",\n+            \"autoload\": {\n+                \"classmap\": [\n+                    \"src/\"\n+                ]\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"Apache-2.0\"\n+            ],\n+            \"description\": \"Bare-bones OpenID Connect client\",\n+            \"support\": {\n+                \"issues\": \"https://github.com/jumbojett/OpenID-Connect-PHP/issues\",\n+                \"source\": \"https://github.com/jumbojett/OpenID-Connect-PHP/tree/v0.9.10\"\n+            },\n+            \"time\": \"2022-09-30T12:34:46+00:00\"\n+        },\n+        {\n+            \"name\": \"paragonie/constant_time_encoding\",\n+            \"version\": \"v2.6.3\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/paragonie/constant_time_encoding.git\",\n+                \"reference\": \"58c3f47f650c94ec05a151692652a868995d2938\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/paragonie/constant_time_encoding/zipball/58c3f47f650c94ec05a151692652a868995d2938\",\n+                \"reference\": \"58c3f47f650c94ec05a151692652a868995d2938\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \"^7|^8\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"^6|^7|^8|^9\",\n+                \"vimeo/psalm\": \"^1|^2|^3|^4\"\n+            },\n+            \"type\": \"library\",\n+            \"autoload\": {\n+                \"psr-4\": {\n+                    \"ParagonIE\\\\ConstantTime\\\\\": \"src/\"\n+                }\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Paragon Initiative Enterprises\",\n+                    \"email\": \"security@paragonie.com\",\n+                    \"homepage\": \"https://paragonie.com\",\n+                    \"role\": \"Maintainer\"\n+                },\n+                {\n+                    \"name\": \"Steve 'Sc00bz' Thomas\",\n+                    \"email\": \"steve@tobtu.com\",\n+                    \"homepage\": \"https://www.tobtu.com\",\n+                    \"role\": \"Original Developer\"\n+                }\n+            ],\n+            \"description\": \"Constant-time Implementations of RFC 4648 Encoding (Base-64, Base-32, Base-16)\",\n+            \"keywords\": [\n+                \"base16\",\n+                \"base32\",\n+                \"base32_decode\",\n+                \"base32_encode\",\n+                \"base64\",\n+                \"base64_decode\",\n+                \"base64_encode\",\n+                \"bin2hex\",\n+                \"encoding\",\n+                \"hex\",\n+                \"hex2bin\",\n+                \"rfc4648\"\n+            ],\n+            \"support\": {\n+                \"email\": \"info@paragonie.com\",\n+                \"issues\": \"https://github.com/paragonie/constant_time_encoding/issues\",\n+                \"source\": \"https://github.com/paragonie/constant_time_encoding\"\n+            },\n+            \"time\": \"2022-06-14T06:56:20+00:00\"\n+        },\n+        {\n+            \"name\": \"paragonie/random_compat\",\n+            \"version\": \"v9.99.100\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/paragonie/random_compat.git\",\n+                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/paragonie/random_compat/zipball/996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n+                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \">= 7\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"4.*|5.*\",\n+                \"vimeo/psalm\": \"^1\"\n+            },\n+            \"suggest\": {\n+                \"ext-libsodium\": \"Provides a modern crypto API that can be used to generate random bytes.\"\n+            },\n+            \"type\": \"library\",\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Paragon Initiative Enterprises\",\n+                    \"email\": \"security@paragonie.com\",\n+                    \"homepage\": \"https://paragonie.com\"\n+                }\n+            ],\n+            \"description\": \"PHP 5.x polyfill for random_bytes() and random_int() from PHP 7\",\n+            \"keywords\": [\n+                \"csprng\",\n+                \"polyfill\",\n+                \"pseudorandom\",\n+                \"random\"\n+            ],\n+            \"support\": {\n+                \"email\": \"info@paragonie.com\",\n+                \"issues\": \"https://github.com/paragonie/random_compat/issues\",\n+                \"source\": \"https://github.com/paragonie/random_compat\"\n+            },\n+            \"time\": \"2020-10-15T08:29:30+00:00\"\n+        },\n+        {\n+            \"name\": \"phpseclib/phpseclib\",\n+            \"version\": \"3.0.37\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/phpseclib/phpseclib.git\",\n+                \"reference\": \"cfa2013d0f68c062055180dd4328cc8b9d1f30b8\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/phpseclib/phpseclib/zipball/cfa2013d0f68c062055180dd4328cc8b9d1f30b8\",\n+                \"reference\": \"cfa2013d0f68c062055180dd4328cc8b9d1f30b8\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"paragonie/constant_time_encoding\": \"^1|^2\",\n+                \"paragonie/random_compat\": \"^1.4|^2.0|^9.99.99\",\n+                \"php\": \">=5.6.1\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"*\"\n+            },\n+            \"suggest\": {\n+                \"ext-dom\": \"Install the DOM extension to load XML formatted public keys.\",\n+                \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n+                \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n+                \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n+                \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\"\n+            },\n+            \"type\": \"library\",\n+            \"autoload\": {\n+                \"files\": [\n+                    \"phpseclib/bootstrap.php\"\n+                ],\n+                \"psr-4\": {\n+                    \"phpseclib3\\\\\": \"phpseclib/\"\n+                }\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Jim Wigginton\",\n+                    \"email\": \"terrafrost@php.net\",\n+                    \"role\": \"Lead Developer\"\n+                },\n+                {\n+                    \"name\": \"Patrick Monnerat\",\n+                    \"email\": \"pm@datasphere.ch\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Andreas Fischer\",\n+                    \"email\": \"bantu@phpbb.com\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Hans-J\u00fcrgen Petrich\",\n+                    \"email\": \"petrich@tronic-media.com\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Graham Campbell\",\n+                    \"email\": \"graham@alt-three.com\",\n+                    \"role\": \"Developer\"\n+                }\n+            ],\n+            \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n+            \"homepage\": \"http://phpseclib.sourceforge.net\",\n+            \"keywords\": [\n+                \"BigInteger\",\n+                \"aes\",\n+                \"asn.1\",\n+                \"asn1\",\n+                \"blowfish\",\n+                \"crypto\",\n+                \"cryptography\",\n+                \"encryption\",\n+                \"rsa\",\n+                \"security\",\n+                \"sftp\",\n+                \"signature\",\n+                \"signing\",\n+                \"ssh\",\n+                \"twofish\",\n+                \"x.509\",\n+                \"x509\"\n+            ],\n+            \"support\": {\n+                \"issues\": \"https://github.com/phpseclib/phpseclib/issues\",\n+                \"source\": \"https://github.com/phpseclib/phpseclib/tree/3.0.37\"\n+            },\n+            \"funding\": [\n+                {\n+                    \"url\": \"https://github.com/terrafrost\",\n+                    \"type\": \"github\"\n+                },\n+                {\n+                    \"url\": \"https://www.patreon.com/phpseclib\",\n+                    \"type\": \"patreon\"\n+                },\n+                {\n+                    \"url\": \"https://tidelift.com/funding/github/packagist/phpseclib/phpseclib\",\n+                    \"type\": \"tidelift\"\n+                }\n+            ],\n+            \"time\": \"2024-03-03T02:14:58+00:00\"\n+        }\n+    ],\n+    \"packages-dev\": [],\n+    \"aliases\": [],\n+    \"minimum-stability\": \"stable\",\n+    \"stability-flags\": [],\n+    \"prefer-stable\": false,\n+    \"prefer-lowest\": false,\n+    \"platform\": [],\n+    \"platform-dev\": [],\n+    \"plugin-api-version\": \"2.6.0\"\n+}"
        },
        {
          "filename": "datenschutz/index.php",
          "status": "removed",
          "additions": 0,
          "deletions": 8,
          "patch": "@@ -1,8 +0,0 @@\n-<?php\n-if (file_exists(\"../.env\")){\n-    $env = parse_ini_file('../.env');\n-}\t\n-$privacyLocation = isset($env) ? $env[\"PRIVACY_LOCATION\"] : getenv(\"PRIVACY_LOCATION\");\n-\n-header(\"Location: $privacyLocation\");\n-exit;"
        },
        {
          "filename": "downvote.php",
          "status": "removed",
          "additions": 0,
          "deletions": 28,
          "patch": "@@ -1,28 +0,0 @@\n-<?php\n-\n-session_start();\n-if (!isset($_SESSION['username'])) {\n-\thttp_response_code(401);\n-\texit;\n-}\n-\n-if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n-\t$id = file_get_contents(\"php://input\");\n-\n-\t$sanitizedId = htmlspecialchars($id, ENT_QUOTES, 'UTF-8');\n-\n-\t$file = \"feedback/\" . $sanitizedId;\n-\n-\tif (!file_exists($file)) {\n-\t\techo('File does not exist');\n-\t\thttp_response_code(404);\n-\t\texit;\n-\t}\n-\n-\t$json = json_decode(file_get_contents(\"feedback/$sanitizedId\"), true);\n-\t$json[\"down\"] = $json[\"down\"] + 1;\n-\tfile_put_contents(\"feedback/$sanitizedId\", json_encode($json));\n-\techo json_encode($json);\n-}\n-\n-"
        },
        {
          "filename": "feedback/.gitignore",
          "status": "removed",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -1,2 +0,0 @@\n-*\n-!.gitignore\n\\ No newline at end of file"
        },
        {
          "filename": "feedback/.htaccess",
          "status": "removed",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -1,2 +0,0 @@\n-# DISABLE DIRECTORY INDEXES\n-Options -Indexes\n\\ No newline at end of file"
        },
        {
          "filename": "hawkistart.mp4",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "img/hawki-screenshot-dashboard.jpg",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "img/hawki-screenshot-login.png",
          "status": "removed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "impressum/index.php",
          "status": "removed",
          "additions": 0,
          "deletions": 11,
          "patch": "@@ -1,11 +0,0 @@\n-<?php\n-if (file_exists(\"../.env\")){\n-    $env = parse_ini_file('../.env');\n-}\t\n-$imprintLocation = isset($env) ? $env[\"IMPRINT_LOCATION\"] : getenv(\"IMPRINT_LOCATION\");\n-\n-header(\"Location: $imprintLocation\");\n-exit;\n-\n-\n-"
        },
        {
          "filename": "index.php",
          "status": "modified",
          "additions": 58,
          "deletions": 2,
          "patch": "@@ -1,4 +1,60 @@\n <?php\n-header(\"Location: login.php\");\n-exit;\n+define('ROOT_PATH', __DIR__);\n+define('PRIVATE_PATH', ROOT_PATH . '/private');\n+define('BOOTSTRAP_PATH', PRIVATE_PATH . '/bootstrap.php');\n \n+require_once BOOTSTRAP_PATH;\n+\n+// Get the requested URI from the query parameter\n+$request_uri = isset($_GET['url']) ? $_GET['url'] : $_SERVER['REQUEST_URI'] ?? '/';\n+$request_uri = str_replace('.php', '', $request_uri);\n+$request_path = parse_url($request_uri, PHP_URL_PATH);\n+if (file_exists(ENV_FILE_PATH)){\n+    $env = parse_ini_file(ENV_FILE_PATH);\n+}\t\n+\n+switch($request_path){\n+    case('/login'):\n+        include_once LOGIN_PAGE_PATH;\n+        exit();\n+\n+    case('/interface'):\n+        include_once INTERFACE_PAGE_PATH;\n+        exit();\n+\n+    case('/logout'):\n+        include_once LOGOUT_PAGE_PATH;\n+        exit();\n+\n+    case('/impressum'):\n+        $imprintLocation = isset($env) ? $env[\"IMPRINT_LOCATION\"] : getenv(\"IMPRINT_LOCATION\");\n+        header(\"Location: $imprintLocation\");\n+        exit;\n+\n+    case('/dataprotection'):\n+        $dataProtectionLocation = isset($env) ? $env[\"PRIVACY_LOCATION\"] : getenv(\"PRIVACY_LOCATION\");\n+        header(\"Location: $dataProtectionLocation\");\n+        exit;\n+        \n+    case('/api/feedback_send'):\n+        if($_SERVER[\"REQUEST_METHOD\"] == \"POST\"){\n+            include_once( LIBRARY_PATH . \"feedback_send.php\");\n+        }\n+        exit;\n+        \n+    case('/api/submit_vote'):\n+        if($_SERVER[\"REQUEST_METHOD\"] == \"POST\"){\n+            include_once( LIBRARY_PATH . \"submit_vote.php\");\n+        }\n+        exit;\n+\n+    case('/api/stream-api'):\n+        if($_SERVER[\"REQUEST_METHOD\"] == \"POST\"){\n+            include_once( LIBRARY_PATH . \"stream-api.php\");\n+        }\n+        exit;\n+\n+    default:\n+        header(\"Location: /login\");\n+        exit();\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "interface.php",
          "status": "removed",
          "additions": 0,
          "deletions": 749,
          "patch": "@@ -1,749 +0,0 @@\n-<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n-<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/vs.min.css\">\n-<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js\"></script>\n-\n-<!-- and it's easy to individually load additional languages -->\n-<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/go.min.js\"></script>\n-\n-<?php\n-\tsession_start();\n-\tif (!isset($_SESSION['username'])) {\n-\t\theader(\"Location: login.php\");\n-\t\texit;\n-\t}\n-?>\n-\n-<link rel=\"stylesheet\" href=\"app.css\">\t\n-\n-<div class=\"wrapper\">\n-\t<div class=\"sidebar\">\n-\t\t<div class=\"logo\">\n-\t\t\t<img src=\"/img/logo.svg\" alt=\"HAWK Logo\" width=\"150px\">\n-\t\t</div>\n-\t\t<div class=\"menu\">\n-\t\t\t<details>\n-\t\t\t\t<summary>\n-\t\t\t\t\t<h3>Konversation \u24d8</h3>\n-\t\t\t\t</summary>\n-\t\t\t\tEin Chatbereich wie bei ChatGPT, f\u00fcr einen schnellen Einstieg in jede beliebige Aufgabe.\n-\t\t\t</details>\n-\t\t\t<div class=\"menu-item\" id=\"chatMenuButton\" onclick=\"load(this, 'chat.htm')\">\n-\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2M20 16H5.2L4 17.2V4H20V16Z\" /></svg>\n-\t\t\t\tChat\n-\t\t\t</div>\n-\t\t\n-\t\t\t<details>\n-\t\t\t\t<summary>\n-\t\t\t\t\t<h3>Virtuelles B\u00fcro \u24d8</h3>\n-\t\t\t\t</summary>\n-\t\t\t\tGespr\u00e4che mit fiktiven Expert*innen, um sich in fachfremden Bereichen einzuarbeiten und gezieltere Anfragen an echte Hochschul-Expert*innen zu stellen.\n-\t\t\t</details>\n-\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n-\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M13.07 10.41A5 5 0 0 0 13.07 4.59A3.39 3.39 0 0 1 15 4A3.5 3.5 0 0 1 15 11A3.39 3.39 0 0 1 13.07 10.41M5.5 7.5A3.5 3.5 0 1 1 9 11A3.5 3.5 0 0 1 5.5 7.5M7.5 7.5A1.5 1.5 0 1 0 9 6A1.5 1.5 0 0 0 7.5 7.5M16 17V19H2V17S2 13 9 13 16 17 16 17M14 17C13.86 16.22 12.67 15 9 15S4.07 16.31 4 17M15.95 13A5.32 5.32 0 0 1 18 17V19H22V17S22 13.37 15.94 13Z\" /></svg>\n-\t\t\t\tTeam\n-\t\t\t</div>\n-\t\t\t<div class=\"submenu\">\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'finance.htm')\">Finanzen</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'science.htm')\">Forschung</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'marketing.htm')\">Marketing</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'programming.htm')\">Programmierung</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'law.htm')\">Rechtsberatung</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'socialmedia.htm')\">Social Media</div>\n-\t\t\t</div>\n-\t\t\t\n-\t\t\t<details>\n-\t\t\t\t<summary>\n-\t\t\t\t\t<h3>Lernraum \u24d8</h3>\n-\t\t\t\t</summary>\n-\t\t\t\tDie Lernr\u00e4ume sollen helfen, die verschiedenen Unterst\u00fctzungsm\u00f6glichkeiten zu verstehen und zu lernen, was einen effektiven Prompt ausmacht.\n-\t\t\t</details>\n-\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n-\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z\" /></svg>\n-\t\t\t\tWiss. Arbeiten\n-\t\t\t</div>\n-\t\t\t<div class=\"submenu\">\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'datascience.htm')\">Datenanalyse</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'feedback.htm')\">Feedback</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'methodologie.htm')\">Methodologie</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'literature.htm')\">Literaturrecherche</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'research.htm')\">Rechercheunterst\u00fctzung</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'writing.htm')\">Schreibhilfe</div>\n-\t\t\t</div>\n-\t\t\t\n-\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n-\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3M7,7.25V11.5C7,11.5 9,10 11,10C13,10 14,12 16,12C18,12 18,11 18,11V7.5C18,7.5 17,8 16,8C14,8 13,6 11,6C9,6 7,7.25 7,7.25Z\" /></svg>\n-\t\t\t\tOrganisation\n-\t\t\t</div>\n-\t\t\t<div class=\"submenu\">\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'eventmanagement.htm')\">Eventmanagement</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'learning.htm')\">Lernstrategien</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'motivation.htm')\">Motivation</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'stressmanagement.htm')\">Stressmanagement</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'tables.htm')\">Tabellen</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'timemanagement.htm')\">Zeitmanagement</div>\n-\t\t\t</div>\n-\t\t\t\n-\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n-\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\" /></svg>\n-\t\t\t\tKreativit\u00e4t\n-\t\t\t</div>\n-\t\t\t<div class=\"submenu\">\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'copywriting.htm')\">Copywriting</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'designthinking.htm')\">Design Thinking</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'gamification.htm')\">Gamification</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'ideageneration.htm')\">Ideenfindung</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'interview.htm')\">Interviewfragen</div>\n-\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'prototyping.htm')\">Prototyping</div>\n-\t\t\t</div>\n-\t\t\t\n-\t\t</div>\n-\t\t<div class=\"info\">\n-\t\t\t<a href=\"#\" onclick=\"load(this, 'about.htm')\">\u00dcber HAWK-KI</a>\n-\t\t\t<a href=\"#\" id=\"feedback\" onclick=\"load(this, 'userpost.php')\">Feedback</a>\n-\t\t\t<a href=\"logout.php\">Abmelden</a>\n-\t\t\t<br>\n-\t\t\t<a href=\"#\" onclick=\"load(this, 'datenschutz.htm')\">Datenschutz</a>\n-\t\t\t<a href=\"/impressum\" target=\"_blank\">Impressum</a>\n-\t\t</div>\n-\t</div>\n-\t\n-\t<div class=\"main\">\n-\t\t<div></div>\n-\t\t<div class=\"messages\">\n-\t\t\n-\t\t\n-\t\t\t<div class=\"limitations\">\n-\t\t\t\t<div>\n-\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n-\t\t\t\t\t<path d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\" stroke=\"#06B044\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n-\t\t\t\t\t<path d=\"M22 4L12 14.01L9 11.01\" stroke=\"#06B044\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n-\t\t\t\t\t</svg>\n-\t\t\t\t\t<h2>M\u00f6glichkeiten</h2>\n-\t\t\t\t\t<div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Kontextverst\u00e4ndnis</strong> - Merkt sich, was vorab in der Konversation gesagt wurde.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Iteration</strong> - Erlaubt nachtr\u00e4gliche Korrekturen generierter Ergebnisse.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Formatierung</strong> - Gibt generierte Ergebnisse in gew\u00fcnschter Form aus.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t</div>\n-\t\t\t\t</div>\n-\t\t\t\t<div>\n-\t\t\t\t\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n-\t\t\t\t\t<path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"#FF5C00\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n-\t\t\t\t\t<path d=\"M12 8V12\" stroke=\"#FF5C00\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n-\t\t\t\t\t<path d=\"M12 16H12.01\" stroke=\"#FF5C00\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n-\t\t\t\t\t</svg>\n-\t\t\t\t\t<h2>Limitationen</h2>\n-\t\t\t\t\t<div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Unvollst\u00e4ndig</strong> - Generiert gelegentlich falsche Informationen.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Vorsicht</strong> - Generiert gelegentlich gef\u00e4hrdende oder voreingenommene Informationen.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t\t<div class=\"limitation-item\">\n-\t\t\t\t\t\t\t<strong>Limitierung</strong> - Das Sprachmodell greift ausschlie\u00dflich auf Wissen bis zum April 2023 zu.\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t</div>\n-\t\t\t\t</div>\n-\t\t\t</div>\n-\t \n-\t \n-\t\t\t<div class=\"message me\" data-role=\"system\">\n-\t\t\t\t<div class=\"message-content\">\n-\t\t\t\t\t<div class=\"message-icon\">System</div>\n-\t\t\t\t\t<div class=\"message-text\">You are a helpful assistant who works at the University of Applied Arts and Sciences in Lower Saxony.</div>\n-\t\t\t\t</div>\n-\t\t\t</div>\n-\t  \n-\n-\t\t</div>\n-\t\n-\t\t<div class=\"input-container\">\n-\t\t\t<div class=\"input\">\n-\t\t\t\t<div class=\"input-wrapper\">\n-\t\t\t\t\t<textarea class=\"input-field\" type=\"text\" placeholder=\"Hier kannst Du deine Anfrage stellen\" oninput=\"resize(this),resize(document.getElementsByClassName('input-wrapper')[0])\" onkeypress=\"handleKeydown(event)\"></textarea>\n-\t\t\t\t</div>\n-\t\t\t\t\t<div class=\"input-send\" onclick=\"OnSendClick()\">\n-\t\t\t\t\t\t<svg viewBox=\"2 2 21 21\" width=\"80\" height=\"80\">\n-\t\t\t\t\t\t\t<g fill=\"none\" stroke=\"rgb(35, 48, 176)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"rgba(35, 48, 176)\">\n-\t\t\t\t\t\t\t\t<path d=\"M12,2c5.5,0,10,4.5,10,10s-4.5,10-10,10S2,17.5,2,12S6.5,2,12,2z\"  />\n-\t\t\t\t\t\t\t\t<path id=\"input-send-icon\" d=\"M16,12l-4-4l-4,4 M12,16V8\"/>\n-\t\t\t\t\t\t\t</g>\n-\t\t\t\t\t\t</svg>\n-\t\t\t\t\t</div>\n-\t\t\t\t</div>\n-\t\t\t<div class=\"betaMessage\">\n-\t\t\t\tBetaversion - Modell GPT4-Turbo\n-\t\t\t</div>\n-\t\t</div>\n-\t\n-\t\t<div class=\"userpost-container\">\n-\t\t \t <div class=\"userpost\">\n-\t\t\t\t  <textarea class=\"userpost-field\" type=\"text\" placeholder=\"Hier k\u00f6nnen Sie Ihr Feedback hinterlassen\" oninput=\"resize(this)\" onkeypress=\"handleKeydownUserPost(event)\"></textarea>\n-\t\t\t \t<div class=\"userpost-send\" onclick=\"send_userpost()\">\n-\t\t\t\t  <svg viewBox=\"0 0 24 24\">\n-\t\t\t\t\t  <path d=\"M3 20V4L22 12M5 17L16.85 12L5 7V10.5L11 12L5 13.5M5 17V7 13.5Z\" />\n-\t\t\t\t  </svg>\n-\t\t\t  \t</div>\n-\t\t  \t</div>\n-\t  \t</div>\n-\t  \n-\t  \n-  \t</div>\n-  \n-  \t<template id=\"message\">\n-\t\t<div class=\"message\">\n-\t\t\t<div class=\"message-content\">\n-\t\t\t\t<div class=\"message-icon\">\n-\t\t\t\t\tKI\n-\t\t\t\t</div>\n-\t\t\t\t<div class=\"message-text\">\n-\t\t\t\t\tLorem ipsum dolor sit amet consectetur, adipisicing elit. Quos incidunt, quidem soluta excepturi, ullam enim tempora.\n-\t\t\t\t</div>\n-\t\t\t\t<div class=\"message-copypanel\" >\n-\t\t\t\t\t<div class=\"message-copyButton\">\n-\t\t\t\t\t\t<svg viewBox=\"0 0 24 24\">\n-\t\t\t\t\t\t\t<path d=\"M 17.01 14.91 H 8.47 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 2.8 c 0 -0.42 0.35 -0.7 0.7 -0.7 H 14.7 l 3.01 3.01 v 9.03 C 17.71 14.56 17.43 14.91 17.01 14.91 z M 8.47 17.01 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 V 5.11 c 0 -0.56 -0.21 -1.12 -0.63 -1.47 l -3.01 -3.01 C 15.82 0.21 15.26 0 14.7 0 h -6.23 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 C 5.67 15.75 6.93 17.01 8.47 17.01 z M 2.8 5.67 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 c 0 1.54 1.26 2.8 2.8 2.8 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 v -1.4 h -2.1 v 1.4 c 0 0.42 -0.35 0.7 -0.7 0.7 H 2.8 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 8.47 c 0 -0.42 0.35 -0.7 0.7 -0.7 h 1.4 v -2.1 H 2.8 z\" />\n-\t\t\t\t\t\t</svg>\n-\t\t\t\t\t\t<span class=\"tooltiptext\">Kopieren</span>\n-\t\t\t\t\t</div>\n-\t\t\t\t</div>\n-\t\t\t</div>\n-\t\t</div>\n-\t</template>\n-</div>\n-\n-<div class=\"modal\" onclick=\"modalClick(this)\" id=\"data-protection\"> \n-\t<div class=\"modal-content\">\n-\t\t<h2>Nutzungshinweis</h2>\n-\t\t<p>Bitte geben Sie keine personenbezogenen Daten ein. Wir verwenden die API von OpenAI. Das bedeutet, dass die von Ihnen eingegebenen Daten direkt an OpenAI gesendet werden. Es besteht die M\u00f6glichkeit, dass OpenAI diese Daten weiterverwendet.</p>\n-\t\t<button>Best\u00e4tigen</button>\n-\t</div>\n-</div>\n-\n-<script>\n-\tvisualViewport.addEventListener(\"resize\", update);\n-\tvisualViewport.addEventListener(\"scroll\", update);\n-\taddEventListener(\"scroll\", update);\n-\taddEventListener(\"load\", update);\n-\t\n-\tlet abortCtrl = new AbortController();\n-\tlet isReceivingData;\n-\tconst icon = document.querySelector('#input-send-icon');\n-\tconst startIcon = 'M16,12l-4-4l-4,4 M12,16V8';\n-\tconst stopIcon = 'M9,9h6v6H9V9z'\n-\n-\t//Load chat by default when the page is loaded.\n-\twindow.addEventListener('DOMContentLoaded', (event) => {\n-\t\tconst chatBtn = document.querySelector(\"#chatMenuButton\");\n-\t\tload(chatBtn ,'chat.htm');\n-    });\n-\n-\tfunction update(event) {\n-\t\tevent.preventDefault();\n-\t\tif (!window.visualViewport) {\n-\t\t\treturn;\n-\t\t}\n-\t\n-\t\twindow.scrollTo(0, 0);\n-\t\tdocument.querySelector(\".wrapper\").style.height = window.visualViewport.height + \"px\";\n-\t}\n-\t\n-\tfunction load(element, filename){\n-\t\tlet messagesElement = document.querySelector(\".messages\");\n-\t\tfetch(`views/${filename}`)\n-\t\t\t.then((response) => {\n-\t\t\t\treturn response.text();\n-\t\t\t})\n-\t\t\t.then((html) => {\n-\t\t\t\tmessagesElement.innerHTML = html;\n-\t\t\t\treturn  \n-\t\t\t}).then(()=>{\n-\t\t\t\t/*\n-\t\t\t\tlet messages = document.querySelectorAll(\".message-text\");\n-\t\t\t\tmessages.forEach(message => {\n-\t\t\t\t\tmessage.contentEditable = true;\n-\t\t\t\t})\n-\t\t\t\t*/\n-\t\t\t\tif(localStorage.getItem(\"truth\")){\n-\t\t\t\t\tdocument.querySelector(\"#truth\")?.remove();\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tif(filename == \"userpost.php\"){\n-\t\t\t\t\tvoteHover();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t);\n-\t\t\n-\t\tdocument.querySelector(\".menu-item.active\")?.classList.remove(\"active\");\n-\t\tdocument.querySelector(\".menu-item.open\")?.classList.remove(\"open\");\n-\t\tdocument.querySelector(\".submenu-item.active\")?.classList.remove(\"active\");\n-\t\telement.classList.add(\"active\");\n-\t\t\n-\t\telement.closest(\".submenu\")?.previousElementSibling.classList.add(\"open\");\n-\t\telement.closest(\".submenu\")?.previousElementSibling.classList.add(\"active\");\n-\t\t\n-\t\tdocument.querySelector(\".main\").scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n-\t}\n-\t\n-\tfunction submenu(element){\n-\t\tif(element.classList.contains('active')){\n-\t\t\telement.classList.remove(\"active\");\n-\t\t\telement.nextElementSibling.classList.remove(\"active\");\n-\t\t}else{\n-\t\t\tdocument.querySelector(\".menu-item.active\")?.classList.remove(\"active\");\n-\t\t\tdocument.querySelector(\".submenu.active\")?.classList.remove(\"active\");\n-\t\t\tdocument.querySelector(\".menu-item.open\")?.classList.remove(\"open\");\n-\t\t\telement.classList.add(\"active\");\n-\t\t\telement.nextElementSibling.classList.add(\"active\");\n-\t\t}\n-\t}\n-\t\n-\tfunction handleKeydown(event){\n-\t\tif(event.key == \"Enter\" && !event.shiftKey){\n-\t\t\tevent.preventDefault();\n-\t\t\trequest();\n-\t\t} \n-\t}\n-\t\n-\tfunction handleKeydownUserPost(event){\n-\t\tif(event.key == \"Enter\" && !event.shiftKey){\n-\t\t\tevent.preventDefault();\n-\t\t\tsend_userpost();\n-\t\t} \n-\t}\n-\n-\tfunction OnSendClick(){\n-\t\tif(!isReceivingData){\n-\t\t\trequest();\n-\t\t} else{\n-\t\t\tabortCtrl.abort();\n-\t\t}\n-\t}\n-\n-\tasync function request(){\n-\t\tconst messagesElement = document.querySelector(\".messages\");\n-\t\tconst messageTemplate = document.querySelector('#message');\n-\t\tconst inputField = document.querySelector(\".input-field\");\n-\t\tconst inputWrapper = document.querySelector(\".input-wrapper\");\n-\n-\t\tif(inputField.value.trim() == \"\"){\n-\t\t\treturn;\n-\t\t}\n-\n-\t\t//handle input-send button.\n-\t\tisReceivingData = true;\n-\t\tconst icon = document.querySelector('#input-send-icon');\n-\t\ticon.setAttribute('d', stopIcon)\n-\n-\t\tlet message = {};\n-\t\tmessage.role = \"user\";\n-\t\t//prevent html input to be rendered as html elements.\n-\t\tmessage.content = escapeHTML(inputField.value.trim());\n-\t\tinputField.value = \"\";\n-\t\taddMessage(message);\n-\t\tresize(inputField);\n-\t\tresize(inputWrapper);\n-\n-\t\tdocument.querySelector('.limitations')?.remove();\n-\t\t\n-\t\tconst requestObject = {};\n-\t\trequestObject.model = 'gpt-4-turbo-preview';\n-\t\trequestObject.stream = true;\n-\t\trequestObject.messages = [];\n-\t\tconst messageElements = messagesElement.querySelectorAll(\".message\");\n-\t\tmessageElements.forEach(messageElement => {\n-\t\t\tlet messageObject = {};\n-\t\t\tmessageObject.role = messageElement.dataset.role;\n-\t\t\tmessageObject.content = messageElement.querySelector(\".message-text\").textContent;\n-\t\t\trequestObject.messages.push(messageObject);\n-\t\t})\n-\t\t\n-\t\tpostData('stream-api.php', requestObject)\n-\t\t.then(stream => processStream(stream))\n-\t\t.catch(error => console.error('Error:', error));\n-\t}\n-\t\n-\tasync function postData(url = '', data = {}) {\n-\t\ttry{\n-\t\t\tabortCtrl = new AbortController();\n-\n-\t\t\tconst response = await fetch(url, {\n-\t\t\t\tmethod: 'POST',\n-\t\t\t\theaders: {\n-\t\t\t\t\t'Content-Type': 'application/json'\n-\t\t\t\t},\n-\t\t\t\tbody: JSON.stringify(data),\n-\t\t\t\tsignal: abortCtrl.signal\n-\t\t\t});\n-\t\t\treturn response.body;\n-\n-\t\t} catch(error){\n-\t\t\tconsole.log('Fetching Aborted $error');\n-\t\t}\n-\t}\n-\t\n-\tasync function processStream(stream) {\n-\t\t// if fetching is aborted before it's complete the stream will be empty.\n-\t\t// stream should be checked to avoid throwing error.\n-\t\tif (!stream) {\n-\t\t\tisReceivingData = false;\n-\t\t\tconst icon = document.querySelector('#input-send-icon');\n-\t\t\ticon.setAttribute('d', startIcon)\n-\t\t\treturn;\n-    \t}\n-\n-\t\tconst reader = stream.getReader();\n-\t\tconst messagesElement = document.querySelector(\".messages\");\n-\t\tconst messageTemplate = document.querySelector('#message');\n-\t\tconst messageElement = messageTemplate.content.cloneNode(true);\n-\t\t\n-\t\tmessageElement.querySelector(\".message-text\").innerHTML = \"\";\n-\t\tmessageElement.querySelector(\".message\").dataset.role = \"assistant\";\n-\t\tmessagesElement.appendChild(messageElement);\n-\t\t\n-\t\tconst messageText = messageElement.querySelector(\".message-text\");\n-\t\n-\t\t// Throws error if the read operation on the response body stream is aborted while the reader.read() operation is still active.\n-\t\t// Try Catch block will handle the error.\n-\t\ttry {\n-\n-\t\t\tlet incompleteSlice = \"\";\n-\t\t\twhile (true) {\n-\t\t\t\tconst { done, value } = await reader.read();\n-\n-\t\t\t\tif (done) {\n-\t\t\t\t\tconsole.log('Stream closed.');\n-\t\t\t\t\tdocument.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML = linkify(document.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML);\n-\t\t\t\t\t\n-\t\t\t\t\tisReceivingData = false;\n-\t\t\t\t\tconst icon = document.querySelector('#input-send-icon');\n-\t\t\t\t\ticon.setAttribute('d', startIcon)\n-\t\t\t\t\t\n-\t\t\t\t\tShowCopyButton();\n-\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\n-\t\t\t\t//Parsing error from json \"Chunks\" corrected\n-\t\t\t\tlet decodedData = new TextDecoder().decode(value);\n-\t\t\t\tdecodedData = incompleteSlice + decodedData;\n-\n-\n-\t\t\t\tconst delimiter = '\\n\\n';\n-\t\t\t\tconst delimiterPosition = decodedData.lastIndexOf(delimiter);\n-\t\t\t\tif (delimiterPosition > -1) {\n-\t\t\t\t\tincompleteSlice = decodedData.substring(delimiterPosition + delimiter.length);\n-\t\t\t\t\tdecodedData = decodedData.substring(0,delimiterPosition + delimiter.length);\n-\t\t\t\t} else {\n-\t\t\t\t\tincompleteSlice = decodedData;\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n- \t\t\t\t// if (decodedData.slice(-2) != '\\n\\n') { console.log(\"missing newline in end of chunk\"); }\n-                // if (decodedData.slice(-2) != '\\n\\n') {\n-                //      incompleteSlice = decodedData;\n-                //      continue;\n-                // } else {\n-                //      incompleteSlice = \"\";\n-                // }\n-\t\t\t\t// console.log(decodedData);\n-\n-\t\t\t\t\n-\t\t\t\tlet chunks = decodedData.split(\"data: \");\n-\t\t\t\tchunks.forEach((chunk, index) => {\n-\n-\t\t\t\t\tif(!isJSON(chunk)){\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n-\t\t\t\t\tif(chunk.indexOf('finish_reason\":\"stop\"') > 0) return false;\n-\t\t\t\t\tif(chunk.indexOf('DONE') > 0) return false;\n-\t\t\t\t\tif(chunk.indexOf('role') > 0) return false;\n-\t\t\t\t\tif(chunk.length == 0) return false;\n-\t\t\t\t\tdocument.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML +=  escapeHTML(JSON.parse(chunk)[\"choices\"][0][\"delta\"].content);\n-\t\t\t\t})\n-\t\t\t\tlet messageTextElement = document.querySelector(\".message:last-child\").querySelector(\".message-text\");\n-\n-\t\t\t\t// Check if the content has code block\n-\t\t\t\tlet innerHTML = document.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML;\n-\t\t\t\tmessageTextElement.innerHTML = ApplyMarkdownFormatting(innerHTML);\n-\n-\t\t\t\thljs.highlightAll();\n-\t\t\t\tscrollToLast();\n-\t\t\t}\n-\t\t} catch (error) {\n-\t\t\t// Check if the error is due to aborting the request\n-\t\t\tif (error.name == 'AbortError') {\n-\t\t\t\tconsole.log('Fetch aborted while reading response body stream.');\n-\t\t\t} else {\n-\t\t\t\tconsole.error('Error:', error);\n-\t\t\t}\n-\t\t\tisReceivingData = false;\n-\t\t\tconst icon = document.querySelector('#input-send-icon');\n-\t\t\ticon.setAttribute('d', startIcon);\n-\t\t\tShowCopyButton();\n-\t\t}\n-\t}\n-\n-\tfunction isJSON(str) {\n-\t\ttry {\n-\t\t\tJSON.parse(str);\n-\t\t\treturn true;\n-\t\t} catch (e) {\n-\t\t\treturn false;\n-\t\t}\n-\t}\n-\n-\tfunction ApplyMarkdownFormatting(text) {\n-\t\ttext = text.replace(/```([\\s\\S]+?)```/g, '<pre><code>$1</code></pre>')\n-\t\t// Bold\n-\t\ttext = text.replace(/\\*\\*(.*?)\\*\\*/g, '<b>$1</b>');\n-\t\ttext = text.replace(/###\\s(.*)$/gm, '<b>$1</b>');\n-\t\t// Links\n-\t\ttext = text.replace(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g, '<a href=\"$2\">$1</a>');\n-\t\ttext = text.replace();\n-\t\treturn text;\n-\t}\n-\n-\tfunction escapeHTML(str) {\n-    return str.replace(/&/g, '&amp;')\n-              .replace(/</g, '&lt;')\n-              .replace(/>/g, '&gt;')\n-              .replace(/\"/g, '&quot;')\n-              .replace(/'/g, '&#039;');\n-\t}\n-\n-\tfunction addMessage(message){\n-\t\tconst messagesElement = document.querySelector(\".messages\");\n-\t\tconst messageTemplate = document.querySelector('#message');\n-\t\tconst inputField = document.querySelector(\".input-field\");\n-\t\tconst messageElement = messageTemplate.content.cloneNode(true);\n-\t\t\n-\t\tmessageElement.querySelector(\".message-text\").innerHTML = message.content;\n-\t\tmessageElement.querySelector(\".message\").dataset.role = message.role;\n-\t\t\n-\t\tif(message.role == \"assistant\"){\n-\t\t\tmessageElement.querySelector(\".message-icon\").textContent = \"AI\";\n-\t\t}else{\n-\t\t\tmessageElement.querySelector(\".message-icon\").textContent = '<?= $_SESSION['username'] ?>';\n-\t\t\tmessageElement.querySelector(\".message\").classList.add(\"me\");\n-\t\t}\n-\t\t\n-\t\tmessagesElement.appendChild(messageElement);\n-\t\t\n-\t\tscrollToLast(true);\n-\t\treturn messageElement;\n-\t}\n-\t\n-\t//#region Scrolling Controls\n-\t//scrolls to the end of the panel.\n-\t//if new message is send, it forces the panel to scroll down.\n-\t//if the current message is continuing to expand force expand is false.\n-\t//(if the user is trying to read the upper parts it wont jump back down.)\n-\tlet isScrolling = false;\n-\tfunction scrollToLast(forceScroll){\n-\t\t\n-\t\tconst msgsPanel = document.querySelector('.messages');\n-\t\tconst documentHeight = msgsPanel.scrollHeight;\n-\t\tconst currentScroll = msgsPanel.scrollTop + msgsPanel.clientHeight;\n-\t\tif (!isScrolling && (forceScroll || documentHeight - currentScroll < 150)) {\n-\t\t\tconst messagesElement = document.querySelector(\".messages\");\n-\n-\t\t\tmessagesElement.scrollTo({\n-\t\t\t\ttop: messagesElement.scrollHeight,\n-\t\t\t\tleft: 0,\n-\t\t\t\tbehavior: \"smooth\",\n-\t\t\t});\n-\t\t}\n-\t}\n-\n-\tdocument.querySelector('.messages').addEventListener('scroll', function() {\n-\t\tisScrolling = true;\n-\t});\n-\tdocument.querySelector('.messages').addEventListener('scroll', function() {\n-\t\tsetTimeout(function() {\n-\t\t\tisScrolling = false;\n-\t\t}, 700); // Adjust the threshold\n-\t});\n-\t//#endregion\n-\n-\n-\tfunction resize(element) {\n-\t\telement.style.height = 'auto';\n-\t\telement.style.height = element.scrollHeight + \"px\";\n-\t\telement.scrollTop = element.scrollHeight;\n-\t\telement.scrollTo(element.scrollTop, (element.scrollTop + element.scrollHeight));\n-\t}\n-\n-\tfunction copyToInput(selector) {\n-\t\tconst originalText = document.querySelector(selector).textContent;\n-\t\tconst cleanedText = originalText.split('\\n')  // Split text by new lines\n-\t\t\t\t\t\t\t\t\t.map(line => line.trim())  // Remove leading and trailing spaces from each line\n-\t\t\t\t\t\t\t\t\t.filter(line => line !== '')  // Filter out empty lines\n-\t\t\t\t\t\t\t\t\t.join(' ');  // Join lines back together with a single space\n-\n-\t\tdocument.querySelector(\".input-field\").value = cleanedText;\n-\t\tresize(document.querySelector(\".input-field\"));\n-\t}\n-\t\n-\tif(localStorage.getItem(\"data-protection\")){\n-\t\tdocument.querySelector(\"#data-protection\").remove();\n-\t}\n-\t\n-\tfunction modalClick(element){\n-\t\tlocalStorage.setItem(element.id, \"true\")\n-\t\telement.remove();\n-\t}\n-\t\n-\t\n-\tasync function send_userpost(){\n-\t\tconst messagesElement = document.querySelector(\".messages\");\n-\t\tconst messageTemplate = document.querySelector('#message');\n-\t\tconst inputField = document.querySelector(\".userpost-field\");\n-\t\t\n-\t\tlet message = {};\n-\t\tmessage.role = '<?= $_SESSION['username'] ?>';\n-\t\tmessage.content = inputField.value.trim();\n-\t\t\n-\t\tfetch('userpost.php', {\n-\t\t\tmethod: 'POST',\n-\t\t\tbody: JSON.stringify(message),\n-\t\t})\n-\t\t.then(response => response.json())\n-\t\t.then(data => {\n-\t\t\tconsole.log(data)\n-\t\t\tload(document.querySelector(\"#feedback\"), 'userpost.php');\n-\t\t\tinputField.value = \"\";\n-\t\t})\n-\t\t.catch(error => console.error(error));\n-\t}\n-\t\n-\tasync function upvote(element){\n-\t\tif(localStorage.getItem(element.dataset.id)){\n-\t\t\treturn;\n-\t\t}\n-\t\tlocalStorage.setItem(element.dataset.id, \"true\");\n-\t\tfetch('upvote.php', {\n-\t\t\tmethod: 'POST',\n-\t\t\tbody: element.dataset.id,\n-\t\t})\n-\t\t.then(response => response.text())\n-\t\t.then(data => {\n-\t\t\tconsole.log(data)\n-\t\t\telement.querySelector(\"span\").textContent = parseInt(element.querySelector(\"span\").textContent) + 1;\n-\t\t})\n-\t\t.catch(error => console.error(error));\n-\t\t\n-\t\tvoteHover();\n-\t}\n-\t\n-\tasync function downvote(element){\n-\t\tif(localStorage.getItem(element.dataset.id)){\n-\t\t\treturn;\n-\t\t}\n-\t\tlocalStorage.setItem(element.dataset.id, \"true\");\n-\t\tfetch('downvote.php', {\n-\t\t\tmethod: 'POST',\n-\t\t\tbody: element.dataset.id,\n-\t\t})\n-\t\t.then(response => response.text())\n-\t\t.then(data => {\n-\t\t\tconsole.log(data)\n-\t\t\telement.querySelector(\"span\").textContent = parseInt(element.querySelector(\"span\").textContent) + 1;\n-\t\t})\n-\t\t.catch(error => console.error(error));\n-\t\t\n-\t\tvoteHover();\n-\t}\n-\t\n-\tasync function voteHover(){\n-\t\tlet messages = document.querySelectorAll(\".message\");\n-\t\t\n-\t\tmessages.forEach((message)=>{\n-\t\t\tlet voteButtons = message.querySelectorAll(\".vote\")\n-\n-\t\t\tvoteButtons.forEach((voteButton)=>{\n-\t\t\t\tif(localStorage.getItem(voteButton.dataset.id)){\n-\t\t\t\t\tvoteButton.classList.remove(\"vote-hover\");\n-\t\t\t\t}else{\n-\t\t\t\t\tvoteButton.classList.add(\"vote-hover\");\n-\t\t\t\t}\n-\t\t\t})\n-\t\t})\n-\t}\n-\t\n-\tdocument.querySelectorAll('details').forEach((D,_,A)=>{\n-\t  \tD.ontoggle =_=>{ if(D.open) A.forEach(d =>{ if(d!=D) d.open=false })}\n-\t})\n-\t\n-\tfunction linkify(htmlString) {\n-\t\tconst urlRegex = /((https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*))/g;\n-\t\treturn htmlString.replace(urlRegex, '<a href=\"$1\" target=\"_blank\">$1</a>');\n-\t}\n-\n-\n-//#region Copy Button\n-\n-\tfunction ShowCopyButton() {\n-\t\tconst copyPanel = document.querySelector(\".message:last-child\").querySelector(\".message-copypanel\");\n-\t\tif (copyPanel !== null) {\n-\t\t\tcopyPanel.style.display = \"flex\";\n-\t\t\tconst copyButton = copyPanel.querySelector(\".message-copyButton\");\n-\t\t\tcopyButton.dataset.clicked = \"false\"; // Initialize the clicked state for this button\n-\t\t\tAddEventListenersToCopyButton(copyButton);\n-\t\t}\n-\t}\n-\n-\tfunction AddEventListenersToCopyButton(TargetButton){\n-\t\t\n-\t\tTargetButton.addEventListener(\"mouseenter\", function() {\n-\t\t\tsetTimeout(function() {\n-\t\t\t\tTargetButton.querySelector(\".tooltiptext\").classList.add(\"active\");\n-\t\t\t}, 1000);\n-\t\t});\n-\n-\t\tTargetButton.addEventListener(\"mouseleave\", function () {\n-\t\t\tif (TargetButton.dataset.clicked !== \"true\") { // Check the clicked state of this button\n-\t\t\t\tTargetButton.querySelector(\".tooltiptext\").classList.remove(\"active\");\n-\t\t\t}\n-    \t});\n-\n-\t\tTargetButton.addEventListener(\"mousedown\", function () {\n-\t\t\tTargetButton.dataset.clicked = \"true\"; // Set the clicked state of this button to true\n-\t\t\tCopyContentToClipboard(TargetButton);\n-\t\t});\n-\n-\t\tTargetButton.addEventListener(\"mouseup\", function() {\n-\t\t\tCopyBtnRelease(TargetButton);\n-\t\t});\n-\t}\n-\n-\tfunction CopyContentToClipboard(target) {\n-\t\tconst msgTxt = target.parentElement.previousElementSibling.textContent;\n-\t\tconst trimmedMsg = msgTxt.trim();\n-\t\tnavigator.clipboard.writeText(trimmedMsg);\n-\n-\t\ttarget.style.fill = \"rgba(35, 48, 176, 1)\";\n-\t\ttarget.style.scale = \"1.1\";\n-\n-\t\ttarget.querySelector(\".tooltiptext\").classList.add(\"active\");\n-\t\ttarget.querySelector(\".tooltiptext\").innerHTML = \"Kopiert!\"\n-\t}\n-\n-\tfunction CopyBtnRelease(target) {\n-\t\ttarget.style.scale = \"1\";\n-\n-\t\tsetTimeout(function () {\n-\t\t\ttarget.style.fill = \"rgba(35, 48, 176, .5)\";\n-\n-\t\t\ttarget.querySelector(\".tooltiptext\").classList.remove(\"active\");\n-\t\t\ttarget.querySelector(\".tooltiptext\").innerHTML = \"Kopieren\"\n-\t\t\ttarget.dataset.clicked = \"false\"; // Reset the clicked state of this button\n-\t\t}, 2000);\n-\t}\n-//#endregion\n-</script>\n\\ No newline at end of file"
        },
        {
          "filename": "login.php",
          "status": "removed",
          "additions": 0,
          "deletions": 199,
          "patch": "@@ -1,199 +0,0 @@\n-<?php\n-/*\n-\tini_set('display_errors', 1);\n-\tini_set('display_startup_errors', 1);\n-\terror_reporting(E_ALL);\n-*/\n-  \tsession_start();\n-  \t// Redirect user to interface if already logged in\n-\tif (isset($_SESSION['username'])) {\n-\t\theader(\"Location: interface.php\");\n-\t\texit;\n-\t}\n-\n-\tif (isset($_POST[\"account\"]) && isset($_POST[\"password\"])) {\n-\t\tfunction auth(\n-\t\t$username,\n-\t\t$password\n-\t\t) {\n-\t\t\t// Load LDAP configurations from .env file if exists\n-\t\t\tif (file_exists(\".env\")){\n-\t\t\t\t$env = parse_ini_file('.env');\n-\t\t\t\t$ldap_host = $env['LDAP_HOST'];\n-\t\t\t\t$ldap_port = $env['LDAP_PORT'];\n-\t\t\t\t$ldap_binddn = $env['LDAP_BASE_DN'];\n-\t\t\t\t$ldap_bindpw = $env['LDAP_BIND_PW'];\n-\t\t\t\t$ldap_base = $env['LDAP_SEARCH_DN'];\n-\t\t\t}\n-\n-\t\t\tif (!$username || !$password) {\n-\t\t\t\techo \"Invalid input.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t// *** ACTIVATES TEST ACCESS ***\n-\t\t\t// Please set a unique test username and password in .env\n-\t\t\tif(isset($env['TESTUSER']) && isset($env['TESTPASSWORD']) && $username == $env['TESTUSER'] && $password == $env['TESTPASSWORD']) {\n-\t\t\t\t$_SESSION['username'] = $env['TESTUSER'];\n-\t\t\t\t$_SESSION['employeetype'] = \"Tester\";\n-\t\t\t\treturn true;\n-\t\t\t}\n-\n-\t\t\t$ldapConn = ldap_connect($ldap_host, $ldap_port);\n-\t\t\tif (!$ldapConn) {\n-\t\t\t\techo \"Unable to connect to LDAP server.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\tif (!ldap_set_option($ldapConn, LDAP_OPT_PROTOCOL_VERSION, 3)) {\n-\t\t\t\techo \"Unable to set LDAP protocol version.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\tif (!ldap_bind($ldapConn, $ldap_binddn, $ldap_bindpw)) {\n-\t\t\t\techo \"Unable to bind to LDAP server with provided DN and password.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t$filter = \"(|(sAMAccountName=$username)(mail=$username))\";\n-\n-\t\t\t$sr = ldap_search($ldapConn, $ldap_base, $filter);\n-\t\t\tif (!$sr) {\n-\t\t\t\techo \"LDAP search failed.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t$entryId = ldap_first_entry($ldapConn, $sr);\n-\t\t\tif (!$entryId) {\n-\t\t\t\techo \"Unable to get the first entry from the search results.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t$userDn = ldap_get_dn($ldapConn, $entryId);\n-\t\t\tif (!$userDn) {\n-\t\t\t\techo \"Unable to get DN from the entry.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t$passValid = ldap_bind($ldapConn, $userDn, $password);\n-\t\t\tif (!$passValid) {\n-\t\t\t\techo \"Unable to bind with provided user DN and password.\";\n-\t\t\t\theader(\"Location: login.php\");\n-\t\t\t\texit;\n-\t\t\t}\n-\n-\t\t\t$info = ldap_get_entries($ldapConn, $sr);\n-\n-\t\t\tldap_close($ldapConn);\n-\n-\t\t$name = $info[0][\"displayname\"][0];\n-\t\t$parts = explode(\", \", $name);\n-\t\t$initials = substr($parts[1], 0, 1) . substr($parts[0], 0, 1);\n-\t\t$_SESSION['username'] = $initials;\n-\t\t$_SESSION['employeetype'] = $info[0][\"employeetype\"][0];\n-\t\treturn true;\n-\t\t}\n-\n-\t\tif (auth($_POST[\"account\"], $_POST[\"password\"])) {\n-\t\t\theader(\"Location: interface.php\");\n-\t\t\theader(\"Location: login.php\");\n-\t\t} else {\n-\t\t\techo \"Anmelden fehlgeschlagen\";\n-\t\t}\n-\t} else {\n-\t\t// Handling for GET request (do nothing)\n-\t}\n-?>\n-\n-<!DOCTYPE html>\n-<html lang=\"en\" >\n-\t<head>\n-\t\t<meta charset=\"UTF-8\">\n-\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n-\t\t<title>HAWKI</title>\n-\n-\t\t<link rel=\"stylesheet\" href=\"./style.css\">\n-\t\t<link rel=\"stylesheet\" href=\"https://sibforms.com/forms/end-form/build/sib-styles.css\">\n-\t</head>\n-\t<body>\n-\t\t<!-- partial:index.partial.html -->\n-\t\t<div class=\"wrapper\">\n-\t\t\t<aside>\n-\t\t\t\t<div class=\"loginPanel\">\n-\t\t\t\t\t<img id=\"HAWK_logo\" src=\"/img/logo.svg\" alt=\"\">\n-\t\t\t\t\t<h3>Willkommen zur\u00fcck!</h3>\n-\t\t\t\t\t<?php\n-\t\t\t\t\t\tif (file_exists(\".env\")){\n-\t\t\t\t\t\t\t$env = parse_ini_file('.env');\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\t$login_available = false;\n-\t\t\t\t\t\t// Check for OIDC authentication method\n-\t\t\t\t\t\tif ((isset($env) ? $env[\"Authentication\"] : getenv(\"Authentication\")) == \"OIDC\") {\n-\t\t\t\t\t\t\t// Open ID Connect\n-\t\t\t\t\t\t\t$login_available = true;\n-\t\t\t\t\t\t\t$oidc_login = isset($env) ? $env[\"OIDC_LOGIN_BUTTON\"] ??'Login' : getenv(\"OIDC_LOGIN_BUTTON\"); // Option for changing login button\n-\t\t\t\t\t\t\techo\n-\t\t\t\t\t\t\t\"<form action='oidc_login.php' class='column' method='post'>\n-\t\t\t\t\t\t\t\t<button>$oidc_login</button>\n-\t\t\t\t\t\t\t</form>\";\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\t// Check for LDAP authentication method\n-\t\t\t\t\t\tif ((isset($env) ? $env[\"Authentication\"] : getenv(\"Authentication\")) == \"LDAP\") {\n-\t\t\t\t\t\t\t$login_available = true;\n-\t\t\t\t\t\t\t$server = $_SERVER['PHP_SELF'];\n-\t\t\t\t\t\t\t$ldap_login = isset($env) ? $env[\"LDAP_LOGIN_BUTTON\"] ??'Login' : getenv(\"LDAP_LOGIN_BUTTON\");\n-\t\t\t\t\t\t\techo\n-\t\t\t\t\t\t\t\t'<form action = \"' . $server . '\" class=\"column\" method = \"post\" >\n-\t\t\t\t\t\t\t\t<label for=\"account\" > Benutzername</label >\n-\t\t\t\t\t\t\t\t<input type = \"text\" name = \"account\" id = \"account\" >\n-\t\t\t\t\t\t\t\t<label for=\"password\" > Kennwort</label >\n-\t\t\t\t\t\t\t\t<input type = \"password\" name = \"password\" id = \"password\" >\n-\t\t\t\t\t\t\t\t<button>' . $ldap_login . '</button >\n-\t\t\t\t\t\t\t</form>';\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\t// If no authentication method defined, display error\n-\t\t\t\t\t\tif (!$login_available) {\n-\t\t\t\t\t\t\techo 'No authentication method defined';\n-\t\t\t\t\t\t\tdie;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t?>\n-\t\t\t\t</div>\n-\t\t\t</aside>\n-\t\t\t<main>\n-\t\t\t\t<div class=\"infoPanel\">\n-\t\t\t\t\t<div class=\"textPanel\">\n-\t\t\t\t\t\t<div class=\"page\">\n-\t\t\t\t\t\t\t<h1 class=\"headerLine\"><span class=\"accentText\">GPT</span> F\u00dcR DIE HOCHSCHULE</h1>\n-\t\t\t\t\t\t\t<p>\n-\t\t\t\t\t\t\t\tHAWKI ist ein didaktisches Interface f\u00fcr Hochschulen, das auf der API von OpenAI basiert. F\u00fcr die Nutzerinnen und Nutzer ist es nicht notwendig, einen Account anzulegen, die Hochschul-ID reicht f\u00fcr den Login aus - es werden keine nutzerbezogenen Daten gespeichert.<br>\n-\t\t\t\t\t\t\t\tDas Angebot wurde im Interaction Design Lab der <a href=\"https://www.hawk.de/de/hochschule/fakultaeten-und-standorte/fakultaet-gestaltung/werkstaetten/interaction-design-lab\" target=\"_blank\"><b>HAWK</b></a>  entwickelt, um allen Hochschulangeh\u00f6rigen die M\u00f6glichkeit zu geben, K\u00fcnstliche Intelligenz in ihre Arbeitsprozesse zu integrieren und einen Begegnungsraum zu haben, damit sich eventuell neue Arbeitsweisen ergeben und eine hochschulinterne Diskussion \u00fcber den Einsatz von K.I. entstehen kann. Derzeit ist die Oberfl\u00e4che in drei Bereiche unterteilt:<br>\n-\t\t\t\t\t\t\t</p>\n-\n-\t\t\t\t\t\t\t<h3>Konversation</h3>\n-\t\t\t\t\t\t\t<p>Ein Chatbereich wie bei ChatGPT, f\u00fcr einen schnellen Einstieg in jede beliebige Aufgabe.<br>\n-\t\t\t\t\t\t\t</p>\n-\n-\t\t\t\t\t\t\t<h3>Virtuelles B\u00fcro</h3>\n-\t\t\t\t\t\t\t<p>Gespr\u00e4che mit fiktiven Expertinnen und Experten als mentales Modell, um sich in fachfremde Bereiche einzuarbeiten und gezieltere Anfragen an echte Hochschul-Expertinnen und -Experten zu stellen.\n-\t\t\t\t\t\t\t</p>\n-\n-\t\t\t\t\t\t\t<h3>Lernraum</h3>\n-\t\t\t\t\t\t\t<p>Die Lernr\u00e4ume sollen helfen, die verschiedenen Unterst\u00fctzungsm\u00f6glichkeiten zu verstehen und zu lernen, was einen effektiven Prompt ausmacht.<br><br>\n-\t\t\t\t\t\t\t</p>\n-\t\t\t\t\t\t</div>\n-\t\t\t\t\t</div>\n-\t\t\t\t</div>\n-\t\t\t\t<div class=\"backgroundImageContainer\">\n-\t\t\t\t\t<video class=\"image_preview_container\" src=\"./img/HAWKIBG.m4v\" type=\"video/m4v\" autoplay loop muted></video>\n-\t\t\t\t</div>\n-\t\t\t</main>\n-\t\t</div>\n-\t</body>\n-</html>"
        },
        {
          "filename": "logo.svg",
          "status": "removed",
          "additions": 0,
          "deletions": 16,
          "patch": "@@ -1,16 +0,0 @@\n- <svg class=\"primary-menu__logo is-international\" viewBox=\"0 0 529 155\" preserveAspectRatio=\"xMidYMid meet\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n-  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n-\t<g class=\"logo-simple\">\n-\t  <polygon class=\"logo-background-color\" fill=\"#3B3D40\" points=\"0 78 175 78 175 0 0 0\"></polygon>\n-\t  <path d=\"M20.9155181,41.6974087 L39.6124586,41.6974087 L39.6124586,65 L47.5245486,65 L47.5245486,14 L39.6124586,14 L39.6124586,34.3750255 L20.9155181,34.3750255 L20.9155181,14 L13,14 L13,65 L20.9155181,65 L20.9155181,41.6974087 Z M63.9932142,14 L49.7528235,65 L58.3848177,65 L63.6812557,46.0193838 L75.9779051,46.0193838 L74.2364226,38.7351561 L65.7106999,38.7351561 L72.6252084,14 L63.9932142,14 Z M73.3416845,14 L85.641762,65 L94.2737561,65 L103.995891,23.6706795 L113.694029,65 L122.322595,65 L134.622673,14 L125.990678,14 L117.900326,54.8853295 L108.298176,14 L99.6661814,14 L90.0811712,54.8853295 L81.9702505,14 L73.3416845,14 Z M133.82735,38.7386248 L149.65153,65 L159,65 L143.179248,38.7455621 L158.646904,14 L149.291578,14 L133.82735,38.7386248 Z\" class=\"logo-foreground-color\" fill=\"#FFFFFF\"></path>\n-\t</g>\n-\t  <g class=\"logo-extended\">\n-\t\t<path d=\"M181.270582,52 L335.239773,52 L335.239773,84.4989224 L181.270582,84.4989224 L181.270582,52 Z M41,84.4989224 L529,84.4989224 L529,116.997845 L41,116.997845 L41,84.4989224 Z M116.030865,156 L116.030865,123.501078 L485.294582,123.501078 L485.294582,156 L116.030865,156 Z\" class=\"logo-background-color\" fill=\"#3B3D40\"></path>\n-\t\t<g transform=\"translate(49.000000, 59.000000)\" class=\"logo-foreground-color\" fill=\"#FFFFFF\">\n-\t\t  <path d=\"M151.329618,16.7780128 L151.329618,0.887985882 L148.070406,0.887985882 L148.070406,7.06037244 L143.478508,7.06037244 L143.478508,0.887985882 L140.288347,0.887985882 L140.288347,16.7780128 L143.478508,16.7780128 L143.478508,9.68750521 L148.070406,9.68750521 L148.070406,16.7780128 L151.329618,16.7780128 Z M168.088318,8.75562958 C168.088318,3.7661405 165.474734,0.678227899 161.228092,0.678227899 C160.030055,0.678227899 158.859639,0.953320336 157.920545,1.45880269 C155.624596,2.71047328 154.316077,5.45795899 154.316077,8.88973714 C154.316077,11.2245842 154.937537,13.2361976 156.152836,14.7904699 C157.368136,16.3653741 158.928691,17.025596 161.342026,17.025596 C162.674712,17.025596 163.568924,16.8227153 164.532187,16.2931624 C166.848851,15.0414918 168.088318,12.3455859 168.088318,8.75562958 L168.088318,8.75562958 Z M164.394085,8.84159597 C164.394085,12.8923321 163.45499,14.5807119 161.228092,14.5807119 C160.46853,14.5807119 159.822902,14.4019018 159.318829,14.0374044 C158.355566,13.3496733 157.896377,11.6337842 157.896377,8.88973714 C157.896377,6.96409008 158.148413,5.57143462 158.700822,4.53983798 C159.160012,3.69392874 160.099107,3.15062118 161.179756,3.15062118 C162.881866,3.15062118 163.731194,4.3610279 163.983231,5.16223462 C164.259435,6.05284639 164.394085,7.21855059 164.394085,8.84159597 L164.394085,8.84159597 Z M181.957231,15.5641674 L180.48299,13.5559926 C179.547347,14.3056195 178.698019,14.5807119 177.752019,14.5807119 C176.377902,14.5807119 175.32142,13.9686313 174.679245,12.8029271 C174.195888,11.9329472 174.00945,10.7156632 174.00945,8.5458716 C174.00945,6.68899765 174.285654,5.36855395 174.910566,4.4538716 C175.483691,3.60796235 176.540172,3.08184807 177.617369,3.08184807 C178.515034,3.08184807 179.364362,3.37757244 180.165355,3.96902118 L181.611975,1.80266824 C180.741931,1.04616403 179.157209,0.540681681 177.572486,0.540681681 C174.99688,0.540681681 172.704384,1.91614387 171.468369,4.22348168 C170.732975,5.59550521 170.38772,7.17384807 170.38772,9.16482958 C170.38772,11.4996766 171.029895,13.4150077 172.314245,14.8558044 C173.622764,16.3447422 175.32142,17.0531052 177.527603,17.0531052 C179.336742,17.0531052 180.693596,16.5923254 181.957231,15.5641674 L181.957231,15.5641674 Z M195.801975,16.7780128 L195.801975,0.887985882 L192.542764,0.887985882 L192.542764,7.06037244 L187.947413,7.06037244 L187.947413,0.887985882 L184.760705,0.887985882 L184.760705,16.7780128 L187.947413,16.7780128 L187.947413,9.68750521 L192.542764,9.68750521 L192.542764,16.7780128 L195.801975,16.7780128 Z M210.589267,11.7713304 C210.589267,9.41241277 209.163362,7.74810353 206.549778,7.03630185 L204.6198,6.51018756 C203.287114,6.14225143 202.852092,5.73305143 202.852092,4.91121277 C202.852092,3.83147496 203.767019,3.08184807 205.075537,3.08184807 C206.273574,3.08184807 207.354223,3.4188363 208.797391,4.29225479 L210.313063,2.00554891 C208.911326,1.00146151 206.936464,0.403135462 204.985771,0.403135462 C201.609172,0.403135462 199.271793,2.41474891 199.271793,5.32041277 C199.271793,6.21446319 199.499661,7.03630185 199.938136,7.74810353 C200.507807,8.70404975 201.495238,9.32644639 203.079961,9.75971697 L204.847669,10.2411287 C206.273574,10.6296968 206.936464,11.2658481 206.936464,12.2940061 C206.936464,13.7141708 205.973201,14.470675 204.136442,14.470675 C202.527552,14.470675 201.243201,13.9686313 199.751698,13.1914951 L198.560566,15.6810817 C200.166004,16.5923254 202.182296,17.1218783 203.99834,17.1218783 C207.968778,17.1218783 210.589267,14.9933506 210.589267,11.7713304 L210.589267,11.7713304 Z M224.219953,15.5641674 L222.752618,13.5559926 C221.813523,14.3056195 220.964194,14.5807119 220.021647,14.5807119 C218.644077,14.5807119 217.584143,13.9686313 216.94542,12.8029271 C216.462063,11.9329472 216.279077,10.7156632 216.279077,8.5458716 C216.279077,6.68899765 216.555282,5.36855395 217.173289,4.4538716 C217.746413,3.60796235 218.806347,3.08184807 219.880092,3.08184807 C220.781209,3.08184807 221.627085,3.37757244 222.43153,3.96902118 L223.87815,1.80266824 C223.008107,1.04616403 221.423384,0.540681681 219.838661,0.540681681 C217.266508,0.540681681 214.974012,1.91614387 213.734545,4.22348168 C212.99915,5.59550521 212.657347,7.17384807 212.657347,9.16482958 C212.657347,11.4996766 213.29607,13.4150077 214.58042,14.8558044 C215.892391,16.3447422 217.584143,17.0531052 219.793778,17.0531052 C221.602917,17.0531052 222.959771,16.5923254 224.219953,15.5641674 L224.219953,15.5641674 Z M237.608961,16.7780128 L237.608961,0.887985882 L234.353201,0.887985882 L234.353201,7.06037244 L229.757851,7.06037244 L229.757851,0.887985882 L226.571143,0.887985882 L226.571143,16.7780128 L229.757851,16.7780128 L229.757851,9.68750521 L234.353201,9.68750521 L234.353201,16.7780128 L237.608961,16.7780128 Z M252.71734,11.585643 L252.71734,0.887985882 L249.458128,0.887985882 L249.458128,11.0629674 C249.458128,11.9088766 249.458128,12.1358279 249.413245,12.4796934 C249.275143,13.6488363 248.377479,14.3331287 246.979194,14.3331287 C245.91926,14.3331287 245.16315,13.9445607 244.790274,13.2361976 C244.610742,12.8923321 244.520975,12.3215153 244.520975,11.3380598 L244.520975,0.887985882 L241.237596,0.887985882 L241.237596,11.9570178 C241.237596,13.4872195 241.399866,14.1268094 241.928107,14.9520867 C242.822318,16.3447422 244.610742,17.0737371 247.048245,17.0737371 C250.490442,17.0737371 252.050997,15.3406548 252.465304,14.0821069 C252.68972,13.3943758 252.71734,13.0986514 252.71734,11.585643 L252.71734,11.585643 Z M265.33988,14.1268094 L259.625902,14.1268094 L259.625902,0.887985882 L256.345975,0.887985882 L256.345975,16.7780128 L264.766756,16.7780128 L265.33988,14.1268094 Z M276.823077,16.7780128 L276.823077,14.0374044 L270.784559,14.0374044 L270.784559,9.78034891 L275.307406,9.78034891 L275.307406,7.17728672 L270.784559,7.17728672 L270.784559,3.49104807 L276.20507,3.49104807 L276.615924,0.887985882 L267.525347,0.887985882 L267.525347,16.7780128 L276.823077,16.7780128 Z\"></path>\n-\t\t  <path d=\"M86.4578401,88.0799092 L86.4578401,72.1898824 L83.1986285,72.1898824 L83.1986285,78.3622689 L78.6067307,78.3622689 L78.6067307,72.1898824 L75.4165701,72.1898824 L75.4165701,88.0799092 L78.6067307,88.0799092 L78.6067307,80.9894017 L83.1986285,80.9894017 L83.1986285,88.0799092 L86.4578401,88.0799092 Z M92.9797161,88.0799092 L92.9797161,76.096195 L89.9034898,76.5776067 L89.9034898,88.0799092 L92.9797161,88.0799092 Z M93.3456869,73.1492672 C93.3456869,72.0970387 92.5205263,71.2476908 91.4882124,71.2476908 C90.4317307,71.2476908 89.5582343,72.0970387 89.5582343,73.1492672 C89.5582343,74.1980571 90.4075628,75.047405 91.4433292,75.047405 C92.4963584,75.047405 93.3456869,74.1980571 93.3456869,73.1492672 L93.3456869,73.1492672 Z M101.151913,88.0352067 L100.623672,86.205842 C100.464855,86.2505445 100.395804,86.2505445 100.278417,86.2505445 C100.02638,86.2505445 99.7743438,86.1370689 99.6604095,85.9307496 C99.4774241,85.6109546 99.4532562,85.3358622 99.4532562,83.3242487 L99.4532562,74.2014958 C99.4532562,72.5509412 99.408373,71.8013143 99.2909861,71.1617244 L96.1491613,71.8700874 C96.2630956,72.922316 96.3114314,73.8576303 96.3114314,75.3912706 L96.3114314,84.1254555 C96.3114314,85.7932034 96.3563146,86.1542622 96.5841832,86.7525882 C96.9536066,87.732605 98.0100883,88.3550017 99.315154,88.3550017 C99.9814971,88.3550017 100.623672,88.2415261 101.151913,88.0352067 L101.151913,88.0352067 Z M112.814643,88.0799092 C112.60749,87.6225681 112.379621,86.6838151 112.379621,83.8022218 L112.379621,71.6396975 L109.327563,71.1617244 L109.327563,75.1849513 C109.327563,75.8726824 109.372446,76.6704504 109.420782,76.9214723 C108.844205,76.4641311 108.181315,76.2578118 107.328534,76.2578118 C104.342074,76.2578118 102.301614,78.7714689 102.301614,82.4267597 C102.301614,86.0682958 104.183256,88.3756336 107.166264,88.3756336 C108.226198,88.3756336 109.120409,88.0558387 109.879972,87.3956168 C109.924855,87.7154118 109.969738,87.8976605 110.062957,88.0799092 L112.814643,88.0799092 Z M109.372446,85.0401378 C109.075526,85.4080739 108.433351,85.796642 107.856774,85.796642 C106.247884,85.796642 105.719643,84.9713647 105.719643,82.4577076 C105.719643,79.8443294 106.316935,78.7026958 107.697957,78.7026958 C108.250366,78.7026958 108.799322,78.9571563 109.372446,79.4592 L109.372446,85.0401378 Z M125.25765,83.1867025 L125.25765,82.4783395 C125.25765,80.0334555 124.777745,78.4516739 123.697096,77.3581815 C122.940986,76.5810454 121.653183,76.1202655 120.299782,76.1202655 C118.739227,76.1202655 117.568811,76.6257479 116.602096,77.6951697 C115.573234,78.8368034 115.138212,80.2397748 115.138212,82.3407933 C115.138212,86.0201546 117.316774,88.3997042 120.68992,88.3997042 C122.343694,88.3997042 123.766147,87.8701513 125.123001,86.7800975 L123.928417,84.9507328 C122.985869,85.7244303 121.998439,86.116437 120.941957,86.116437 C119.357234,86.116437 118.463023,85.088279 118.463023,83.2795462 L118.463023,83.1867025 L125.25765,83.1867025 Z M122.06749,80.9481378 L118.507906,80.9481378 L118.507906,80.9034353 C118.507906,79.2735126 119.174249,78.3622689 120.344665,78.3622689 C120.966125,78.3622689 121.401147,78.5892202 121.701519,79.0465613 C121.977723,79.4832706 122.06749,79.9406118 122.06749,80.8105916 L122.06749,80.9481378 Z M136.761563,84.3764773 C136.761563,83.5993412 136.554409,82.9356807 136.119388,82.3889345 C135.705081,81.8593815 135.225176,81.4226723 133.778555,81.0581748 L132.35265,80.6936773 C131.275453,80.4151462 130.885315,80.0987899 130.885315,79.5039025 C130.885315,78.8196101 131.482607,78.3622689 132.380271,78.3622689 C133.250315,78.3622689 134.099643,78.6132908 135.270059,79.2081782 L136.281658,77.1518622 C135.201008,76.6257479 133.964993,76.0549311 132.079899,76.0549311 C129.345475,76.0549311 127.536336,77.5851328 127.536336,79.8718387 C127.536336,80.6249042 127.788373,81.4742521 128.199227,81.9762958 C128.613534,82.4783395 129.576796,83.0285244 130.357074,83.1660706 L131.734643,83.4170924 C132.977563,83.6474824 133.550687,84.0566824 133.550687,84.8578891 C133.550687,85.6109546 132.860176,86.1852101 131.98668,86.1852101 C130.653993,86.1852101 129.024388,85.4287059 128.085293,84.8578891 L126.983928,87.0998924 C128.706753,87.9870655 130.288023,88.4409681 131.734643,88.4409681 C134.745271,88.4409681 136.761563,86.8007294 136.761563,84.3764773 L136.761563,84.3764773 Z M148.931818,88.0799092 L148.931818,79.8924706 C148.931818,78.7714689 148.862767,78.3829008 148.631446,77.722679 C148.265475,76.6910824 147.074344,76.0549311 145.579388,76.0549311 C144.388256,76.0549311 143.052118,76.5535361 142.251125,77.313479 C142.251125,77.1759328 142.296008,76.6910824 142.296008,76.3300235 L142.296008,73.9951765 C142.296008,72.8741748 142.226957,71.7772437 142.088855,71.1376538 L138.94703,71.8700874 C139.08168,72.3480605 139.174899,73.4484303 139.174899,74.5419227 L139.174899,88.0799092 L142.296008,88.0799092 L142.296008,79.6861513 C142.983066,79.0706319 143.970497,78.6132908 144.730059,78.6132908 C145.603555,78.6132908 145.924643,79.0465613 145.924643,80.2122655 L145.924643,88.0799092 L148.931818,88.0799092 Z M161.350658,83.1867025 L161.350658,82.4783395 C161.350658,80.0334555 160.870753,78.4516739 159.790103,77.3581815 C159.033993,76.5810454 157.746191,76.1202655 156.392789,76.1202655 C154.832234,76.1202655 153.661818,76.6257479 152.698555,77.6951697 C151.666242,78.8368034 151.227767,80.2397748 151.227767,82.3407933 C151.227767,86.0201546 153.406329,88.3997042 156.782928,88.3997042 C158.436701,88.3997042 159.859154,87.8701513 161.212555,86.7800975 L160.021424,84.9507328 C159.078877,85.7244303 158.091446,86.116437 157.034964,86.116437 C155.450242,86.116437 154.55603,85.088279 154.55603,83.2795462 L154.55603,83.1867025 L161.350658,83.1867025 Z M158.160497,80.9481378 L154.600913,80.9481378 L154.600913,80.9034353 C154.600913,79.2735126 155.267256,78.3622689 156.437672,78.3622689 C157.059132,78.3622689 157.494154,78.5892202 157.794526,79.0465613 C158.067278,79.4832706 158.160497,79.9406118 158.160497,80.8105916 L158.160497,80.9481378 Z M167.299409,88.0799092 L167.299409,76.096195 L164.223183,76.5776067 L164.223183,88.0799092 L167.299409,88.0799092 Z M167.66538,73.1492672 C167.66538,72.0970387 166.84022,71.2476908 165.804453,71.2476908 C164.751424,71.2476908 163.877928,72.0970387 163.877928,73.1492672 C163.877928,74.1980571 164.730709,75.047405 165.75957,75.047405 C166.816052,75.047405 167.66538,74.1980571 167.66538,73.1492672 L167.66538,73.1492672 Z M185.736052,88.0799092 L185.736052,79.7549244 C185.736052,78.1559496 185.528899,77.4716571 184.859103,76.9008403 C184.334315,76.4434992 183.464271,76.1684067 182.545891,76.1684067 C181.258088,76.1684067 180.294826,76.6016773 179.214176,77.6951697 C179.076074,77.4957277 178.917256,77.2894084 178.754986,77.1243529 C178.133526,76.4882017 177.332534,76.1684067 176.369271,76.1684067 C175.288621,76.1684067 174.301191,76.5810454 173.493293,77.3581815 C173.382811,76.7632941 173.289592,76.4882017 173.082439,76.1684067 L170.306585,76.9214723 C170.631125,77.4957277 170.745059,78.2247227 170.745059,79.9165412 L170.745059,88.0799092 L173.748782,88.0799092 L173.748782,79.5520437 C174.415125,78.9571563 175.195402,78.6579933 175.771979,78.6579933 C176.621307,78.6579933 176.828461,78.9984202 176.828461,80.4667261 L176.828461,88.0799092 L179.742417,88.0799092 L179.742417,79.6655193 C180.40876,79.0706319 181.213205,78.6820639 181.786329,78.6820639 C182.590774,78.6820639 182.753045,78.9571563 182.753045,80.3498118 L182.753045,88.0799092 L185.736052,88.0799092 Z M196.659935,70.6115395 L194.640191,70.6115395 L188.491191,91.5976538 L190.510935,91.5976538 L196.659935,70.6115395 Z M210.463249,88.0799092 L210.463249,72.1898824 L207.204037,72.1898824 L207.204037,78.3622689 L202.608687,78.3622689 L202.608687,72.1898824 L199.421979,72.1898824 L199.421979,88.0799092 L202.608687,88.0799092 L202.608687,80.9894017 L207.204037,80.9894017 L207.204037,88.0799092 L210.463249,88.0799092 Z M223.731417,82.1826151 C223.731417,80.2776 223.320563,78.9984202 222.378015,77.9049277 C221.369869,76.7185916 220.061351,76.1443361 218.379957,76.1443361 C215.210512,76.1443361 213.104453,78.5892202 213.104453,82.2754588 C213.104453,85.9548202 215.193249,88.3309311 218.379957,88.3309311 C220.199453,88.3309311 221.369869,87.7154118 222.260628,86.7113244 C223.268774,85.5662521 223.731417,84.1942286 223.731417,82.1826151 L223.731417,82.1826151 Z M220.382439,82.1551059 C220.382439,84.9266622 219.809315,86.116437 218.476628,86.116437 C217.879336,86.116437 217.188826,85.796642 216.912621,85.1501748 C216.660585,84.5621647 216.522482,83.5546387 216.522482,82.2066857 C216.522482,81.0375429 216.639869,80.2122655 216.84357,79.5967462 C217.099059,78.8643126 217.692899,78.4069714 218.428293,78.4069714 C218.980701,78.4069714 219.464059,78.6373613 219.764431,79.0259294 C220.175285,79.5520437 220.382439,80.576763 220.382439,82.1551059 L220.382439,82.1551059 Z M230.643431,88.0352067 L230.115191,86.205842 C229.956373,86.2505445 229.883869,86.2505445 229.769935,86.2505445 C229.517899,86.2505445 229.265862,86.1370689 229.151928,85.9307496 C228.968942,85.6109546 228.944774,85.3358622 228.944774,83.3242487 L228.944774,74.2014958 C228.944774,72.5509412 228.899891,71.8013143 228.782504,71.1617244 L225.64068,71.8700874 C225.754614,72.922316 225.80295,73.8576303 225.80295,75.3912706 L225.80295,84.1254555 C225.80295,85.7932034 225.847833,86.1542622 226.075701,86.7525882 C226.445125,87.732605 227.498154,88.3550017 228.806672,88.3550017 C229.473015,88.3550017 230.115191,88.2415261 230.643431,88.0352067 L230.643431,88.0352067 Z M241.757205,85.9548202 L236.357409,85.9548202 L241.550052,78.4757445 L241.550052,76.3747261 L232.825446,76.3747261 L232.825446,78.5204471 L237.897249,78.5204471 L232.366256,86.1852101 L232.366256,88.0799092 L241.021811,88.0799092 L241.757205,85.9548202 Z M259.272015,88.0799092 L259.272015,79.7549244 C259.272015,78.1559496 259.068315,77.4716571 258.401972,76.9008403 C257.873731,76.4434992 257.000234,76.1684067 256.085307,76.1684067 C254.797504,76.1684067 253.834242,76.6016773 252.753592,77.6951697 C252.612037,77.4957277 252.45322,77.2894084 252.294402,77.1243529 C251.672942,76.4882017 250.87195,76.1684067 249.908687,76.1684067 C248.828037,76.1684067 247.840607,76.5810454 247.036161,77.3581815 C246.922227,76.7632941 246.829008,76.4882017 246.621855,76.1684067 L243.842548,76.9214723 C244.170541,77.4957277 244.284475,78.2247227 244.284475,79.9165412 L244.284475,88.0799092 L247.288198,88.0799092 L247.288198,79.5520437 C247.954541,78.9571563 248.731366,78.6579933 249.30449,78.6579933 C250.160723,78.6579933 250.367877,78.9984202 250.367877,80.4667261 L250.367877,88.0799092 L253.27838,88.0799092 L253.27838,79.6655193 C253.948176,79.0706319 254.752621,78.6820639 255.325745,78.6820639 C256.130191,78.6820639 256.292461,78.9571563 256.292461,80.3498118 L256.292461,88.0799092 L259.272015,88.0799092 Z M265.793891,88.0799092 L265.793891,76.096195 L262.721118,76.5776067 L262.721118,88.0799092 L265.793891,88.0799092 Z M266.159862,73.1492672 C266.159862,72.0970387 265.334701,71.2476908 264.302388,71.2476908 C263.245906,71.2476908 262.375862,72.0970387 262.375862,73.1492672 C262.375862,74.1980571 263.221738,75.047405 264.257504,75.047405 C265.310534,75.047405 266.159862,74.1980571 266.159862,73.1492672 L266.159862,73.1492672 Z M278.50965,88.0799092 L278.50965,79.5279731 C278.50965,78.7955395 278.444052,78.2934958 278.281782,77.8533479 C277.915811,76.8526992 276.769563,76.1684067 275.461045,76.1684067 C274.767081,76.1684067 273.969541,76.3506555 273.348081,76.6704504 C272.844008,76.9455429 272.450417,77.2206353 271.991227,77.5404303 C271.991227,77.0590185 271.832409,76.5535361 271.556205,76.075563 L268.828687,76.8526992 C269.101439,77.6332739 269.239541,78.5926588 269.239541,79.6001849 L269.239541,88.0799092 L272.312315,88.0799092 L272.312315,79.8030655 C273.026993,79.1634756 273.831439,78.750837 274.449446,78.750837 C275.257344,78.750837 275.485212,79.1359664 275.485212,80.4667261 L275.485212,88.0799092 L278.50965,88.0799092 Z M291.094212,88.0799092 C290.883607,87.6225681 290.655738,86.6838151 290.655738,83.8022218 L290.655738,71.6396975 L287.607132,71.1617244 L287.607132,75.1849513 C287.607132,75.8726824 287.652015,76.6704504 287.696899,76.9214723 C287.123774,76.4641311 286.457431,76.2578118 285.608103,76.2578118 C282.625096,76.2578118 280.581183,78.7714689 280.581183,82.4267597 C280.581183,86.0682958 282.462826,88.3756336 285.449285,88.3756336 C286.502315,88.3756336 287.399979,88.0558387 288.152636,87.3956168 C288.204424,87.7154118 288.249307,87.8976605 288.339074,88.0799092 L291.094212,88.0799092 Z M287.652015,85.0401378 C287.355096,85.4080739 286.706015,85.796642 286.132891,85.796642 C284.527453,85.796642 283.999212,84.9713647 283.999212,82.4577076 C283.999212,79.8443294 284.596504,78.7026958 285.977526,78.7026958 C286.526482,78.7026958 287.078891,78.9571563 287.652015,79.4592 L287.652015,85.0401378 Z M303.07803,83.1867025 L303.07803,82.4783395 C303.07803,80.0334555 302.594672,78.4516739 301.517475,77.3581815 C300.757913,76.5810454 299.473563,76.1202655 298.120161,76.1202655 C296.556154,76.1202655 295.385738,76.6257479 294.425928,77.6951697 C293.390161,78.8368034 292.955139,80.2397748 292.955139,82.3407933 C292.955139,86.0201546 295.137154,88.3997042 298.506847,88.3997042 C300.164074,88.3997042 301.586526,87.8701513 302.939928,86.7800975 L301.745344,84.9507328 C300.802796,85.7244303 299.818818,86.116437 298.762336,86.116437 C297.177614,86.116437 296.283402,85.088279 296.283402,83.2795462 L296.283402,83.1867025 L303.07803,83.1867025 Z M299.887869,80.9481378 L296.328285,80.9481378 L296.328285,80.9034353 C296.328285,79.2735126 296.994628,78.3622689 298.165045,78.3622689 C298.786504,78.3622689 299.221526,78.5892202 299.514993,79.0465613 C299.79465,79.4832706 299.887869,79.9406118 299.887869,80.8105916 L299.887869,80.9481378 Z M314.761475,88.0799092 L314.761475,79.5279731 C314.761475,78.7955395 314.695877,78.2934958 314.533607,77.8533479 C314.167636,76.8526992 313.021388,76.1684067 311.712869,76.1684067 C311.022358,76.1684067 310.221366,76.3506555 309.599906,76.6704504 C309.09238,76.9455429 308.702242,77.2206353 308.243052,77.5404303 C308.243052,77.0590185 308.084234,76.5535361 307.80803,76.075563 L305.077059,76.8526992 C305.353264,77.6332739 305.491366,78.5926588 305.491366,79.6001849 L305.491366,88.0799092 L308.564139,88.0799092 L308.564139,79.8030655 C309.278818,79.1634756 310.083264,78.750837 310.704723,78.750837 C311.505716,78.750837 311.737037,79.1359664 311.737037,80.4667261 L311.737037,88.0799092 L314.761475,88.0799092 Z M325.692264,70.6115395 L323.675972,70.6115395 L317.523519,91.5976538 L319.543264,91.5976538 L325.692264,70.6115395 Z M340.203351,86.8488706 L340.203351,79.2563193 L334.026731,79.2563193 L334.44449,81.8559429 L336.878541,81.8559429 L336.878541,85.4768471 C336.3503,85.7485008 335.773723,85.8619765 335.062497,85.8619765 C334.026731,85.8619765 333.156687,85.5456202 332.559395,84.9713647 C331.75495,84.1735966 331.364811,82.7052908 331.364811,80.4460941 C331.364811,78.0665445 331.641015,76.3506555 332.718212,75.3190588 C333.270621,74.7929445 334.075066,74.5212908 335.017614,74.5212908 C336.232913,74.5212908 337.313563,74.9098588 338.345877,75.7557681 L340.044534,73.7647866 C338.639344,72.5509412 336.899256,71.9388605 334.972731,71.9388605 C333.453607,71.9388605 332.259023,72.2827261 331.088607,73.0598622 C328.861709,74.538484 327.763796,76.9214723 327.763796,80.2810387 C327.763796,82.6605882 328.285132,84.3558454 329.462453,85.8413445 C330.743351,87.4850218 332.511059,88.262158 334.900227,88.262158 C336.785322,88.262158 338.577198,87.8048168 340.203351,86.8488706 L340.203351,86.8488706 Z M353.24365,82.1826151 C353.24365,80.2776 352.832796,78.9984202 351.890249,77.9049277 C350.882103,76.7185916 349.570132,76.1443361 347.895643,76.1443361 C344.726198,76.1443361 342.616687,78.5892202 342.616687,82.2754588 C342.616687,85.9548202 344.705482,88.3309311 347.895643,88.3309311 C349.711687,88.3309311 350.882103,87.7154118 351.776315,86.7113244 C352.784461,85.5662521 353.24365,84.1942286 353.24365,82.1826151 L353.24365,82.1826151 Z M349.894672,82.1551059 C349.894672,84.9266622 349.321548,86.116437 347.985409,86.116437 C347.39157,86.116437 346.697607,85.796642 346.424855,85.1501748 C346.172818,84.5621647 346.034716,83.5546387 346.034716,82.2066857 C346.034716,81.0375429 346.14865,80.2122655 346.355804,79.5967462 C346.60784,78.8643126 347.205132,78.4069714 347.940526,78.4069714 C348.492935,78.4069714 348.976293,78.6373613 349.276665,79.0259294 C349.687519,79.5520437 349.894672,80.576763 349.894672,82.1551059 L349.894672,82.1551059 Z M347.253468,73.5584672 C347.253468,72.602521 346.473191,71.8013143 345.530643,71.8013143 C344.56738,71.8013143 343.738767,72.602521 343.738767,73.5584672 C343.738767,74.5212908 344.53976,75.3190588 345.48576,75.3190588 C346.449023,75.3190588 347.253468,74.5212908 347.253468,73.5584672 L347.253468,73.5584672 Z M352.097402,73.5584672 C352.097402,72.602521 351.317125,71.8013143 350.374577,71.8013143 C349.411315,71.8013143 348.582701,72.602521 348.582701,73.5584672 C348.582701,74.5212908 349.387147,75.3190588 350.329694,75.3190588 C351.292957,75.3190588 352.097402,74.5212908 352.097402,73.5584672 L352.097402,73.5584672 Z M361.764555,87.8288874 L361.367512,86.0029613 C360.822008,86.1577008 360.545804,86.2299126 360.269599,86.2299126 C359.209665,86.2299126 358.940366,85.8413445 358.940366,84.3558454 L358.940366,78.4757445 L360.911774,78.4757445 L361.695504,76.3747261 L358.940366,76.3747261 C358.940366,75.1849513 359.005964,73.9057714 359.123351,72.8260336 L356.002242,73.6066084 C355.888307,74.4765882 355.888307,75.2296538 355.888307,76.3747261 L354.717891,76.3747261 L354.717891,78.4757445 L355.888307,78.4757445 L355.888307,84.8338185 C355.888307,85.9101176 355.90557,86.1370689 356.095461,86.6425513 C356.461431,87.6672706 357.697446,88.3550017 359.261453,88.3550017 C360.062446,88.3550017 360.866891,88.1933849 361.764555,87.8288874 L361.764555,87.8288874 Z M370.282008,87.8288874 L369.891869,86.0029613 C369.339461,86.1577008 369.063256,86.2299126 368.787052,86.2299126 C367.734023,86.2299126 367.457818,85.8413445 367.457818,84.3558454 L367.457818,78.4757445 L369.429227,78.4757445 L370.212957,76.3747261 L367.457818,76.3747261 C367.457818,75.1849513 367.526869,73.9057714 367.640804,72.8260336 L364.519694,73.6066084 C364.40576,74.4765882 364.40576,75.2296538 364.40576,76.3747261 L363.235344,76.3747261 L363.235344,78.4757445 L364.40576,78.4757445 L364.40576,84.8338185 C364.40576,85.9101176 364.429928,86.1370689 364.612913,86.6425513 C364.978884,87.6672706 366.218351,88.3550017 367.778906,88.3550017 C368.583351,88.3550017 369.384344,88.1933849 370.282008,87.8288874 L370.282008,87.8288874 Z M376.113373,88.0799092 L376.113373,76.096195 L373.037147,76.5776067 L373.037147,88.0799092 L376.113373,88.0799092 Z M376.475891,73.1492672 C376.475891,72.0970387 375.654183,71.2476908 374.621869,71.2476908 C373.565388,71.2476908 372.695344,72.0970387 372.695344,73.1492672 C372.695344,74.1980571 373.544672,75.047405 374.573534,75.047405 C375.630015,75.047405 376.475891,74.1980571 376.475891,73.1492672 L376.475891,73.1492672 Z M388.71865,88.0799092 L388.71865,79.5279731 C388.71865,78.7955395 388.649599,78.2934958 388.487329,77.8533479 C388.121358,76.8526992 386.971658,76.1684067 385.666592,76.1684067 C384.976081,76.1684067 384.171636,76.3506555 383.550176,76.6704504 C383.046103,76.9455429 382.655964,77.2206353 382.196774,77.5404303 C382.196774,77.0590185 382.034504,76.5535361 381.761753,76.075563 L379.030782,76.8526992 C379.306986,77.6332739 379.445088,78.5926588 379.445088,79.6001849 L379.445088,88.0799092 L382.514409,88.0799092 L382.514409,79.8030655 C383.229088,79.1634756 384.033534,78.750837 384.654993,78.750837 C385.459439,78.750837 385.683855,79.1359664 385.683855,80.4667261 L385.683855,88.0799092 L388.71865,88.0799092 Z M403.802862,77.6539059 L402.511607,75.7076269 C401.803833,76.3506555 400.926884,76.7185916 400.081008,76.7185916 C399.694322,76.7185916 399.280015,76.6257479 398.634388,76.4641311 C397.785059,76.2578118 397.187767,76.1684067 396.524877,76.1684067 C393.514249,76.1684067 391.567008,77.722679 391.567008,80.1228605 C391.567008,81.8593815 392.392169,82.9356807 394.090826,83.3689513 C392.160847,83.8675563 391.932979,84.579358 391.932979,85.3393008 C391.932979,86.1370689 392.278234,86.6631832 392.827191,86.8660639 C393.379599,87.0964538 394.273811,87.2099294 395.65138,87.234 L396.959899,87.2580706 C398.17865,87.2787025 399.121198,87.5950588 399.121198,88.6541647 C399.121198,89.1355765 398.820826,89.5688471 398.361636,89.8439395 C397.878278,90.1396639 397.211935,90.2325076 396.431658,90.2325076 C395.009205,90.2325076 394.228928,89.7270252 394.228928,88.7917109 C394.228928,88.471916 394.249643,88.3068605 394.363577,88.0352067 L391.522125,88.0352067 C391.404738,88.262158 391.24592,88.5819529 391.24592,89.2249815 C391.24592,90.0227496 391.567008,90.7104807 392.209183,91.3019294 C393.262212,92.2888235 394.985037,92.5604773 396.662979,92.5604773 C398.499738,92.5604773 400.267446,92.1512773 401.29976,91.0543462 C401.938482,90.3700538 402.238855,89.6135496 402.238855,88.6300941 C402.238855,87.5778655 401.917767,86.7766588 401.230709,86.1370689 C400.402096,85.3840034 399.463001,85.1089109 397.671125,85.088279 L396.017351,85.0642084 C395.696264,85.0642084 395.513278,84.9507328 395.513278,84.789116 C395.513278,84.469321 395.9483,84.1942286 396.728577,83.8262924 C396.959899,83.850363 397.049665,83.850363 397.187767,83.850363 C399.694322,83.850363 401.527628,82.3889345 401.527628,80.377321 C401.527628,79.6001849 401.29976,79.0018588 400.84057,78.4551126 C401.023555,78.4791832 401.344643,78.5238857 401.645015,78.5238857 C402.494344,78.5238857 403.136519,78.2694252 403.802862,77.6539059 L403.802862,77.6539059 Z M398.361636,80.1434924 C398.361636,81.2232303 397.695293,81.8181176 396.473088,81.8181176 C395.399344,81.8181176 394.66395,81.3367059 394.66395,80.1434924 C394.66395,79.0465613 395.330293,78.4069714 396.500709,78.4069714 C397.671125,78.4069714 398.361636,79.0465613 398.361636,80.1434924 L398.361636,80.1434924 Z M414.523045,83.1867025 L414.523045,82.4783395 C414.523045,80.0334555 414.039687,78.4516739 412.959037,77.3581815 C412.202928,76.5810454 410.915125,76.1202655 409.558271,76.1202655 C408.001169,76.1202655 406.8273,76.6257479 405.86749,77.6951697 C404.838628,78.8368034 404.400154,80.2397748 404.400154,82.3407933 C404.400154,86.0201546 406.578716,88.3997042 409.951862,88.3997042 C411.605636,88.3997042 413.028088,87.8701513 414.384942,86.7800975 L413.190358,84.9507328 C412.247811,85.7244303 411.26038,86.116437 410.203899,86.116437 C408.619176,86.116437 407.724964,85.088279 407.724964,83.2795462 L407.724964,83.1867025 L414.523045,83.1867025 Z M411.329431,80.9481378 L407.769847,80.9481378 L407.769847,80.9034353 C407.769847,79.2735126 408.436191,78.3622689 409.606607,78.3622689 C410.228066,78.3622689 410.663088,78.5892202 410.963461,79.0465613 C411.239665,79.4832706 411.329431,79.9406118 411.329431,80.8105916 L411.329431,80.9481378 Z M426.66568,88.0799092 L426.66568,79.5279731 C426.66568,78.7955395 426.596628,78.2934958 426.437811,77.8533479 C426.07184,76.8526992 424.925592,76.1684067 423.617074,76.1684067 C422.926563,76.1684067 422.122118,76.3506555 421.500658,76.6704504 C421.000037,76.9455429 420.606446,77.2206353 420.147256,77.5404303 C420.147256,77.0590185 419.988439,76.5535361 419.712234,76.075563 L416.981264,76.8526992 C417.257468,77.6332739 417.39557,78.5926588 417.39557,79.6001849 L417.39557,88.0799092 L420.468344,88.0799092 L420.468344,79.8030655 C421.183023,79.1634756 421.984015,78.750837 422.605475,78.750837 C423.40992,78.750837 423.641242,79.1359664 423.641242,80.4667261 L423.641242,88.0799092 L426.66568,88.0799092 Z\"></path>\n-\t\t  <path d=\"M8.68938978,33.2966259 L0.0372875912,33.2966259 L0.0372875912,49.1866528 L3.2481635,49.1866528 L3.2481635,42.1202158 L7.31182044,42.1202158 L7.31182044,39.5205923 L3.2481635,39.5205923 L3.2481635,35.8790561 L8.32341898,35.8790561 L8.68938978,33.2966259 Z M22.4202,43.9977217 L22.4202,33.2966259 L19.1609883,33.2966259 L19.1609883,43.4716074 C19.1609883,44.3175166 19.1609883,44.5479066 19.1161051,44.8917721 C18.9780029,46.0574763 18.0837912,46.7417687 16.6786015,46.7417687 C15.6221197,46.7417687 14.8660102,46.3532007 14.4965869,45.6448376 C14.3136015,45.3009721 14.223835,44.7301553 14.223835,43.7466998 L14.223835,33.2966259 L10.9404555,33.2966259 L10.9404555,44.3690965 C10.9404555,45.8958595 11.1027255,46.5388881 11.6309664,47.3607267 C12.5251781,48.7533822 14.3136015,49.4858158 16.7476526,49.4858158 C20.1933022,49.4858158 21.7538569,47.7492948 22.1681635,46.4907469 C22.3960321,45.8098931 22.4202,45.5072914 22.4202,43.9977217 L22.4202,43.9977217 Z M16.0122584,31.0064813 C16.0122584,30.0539738 15.231981,29.2493284 14.2928861,29.2493284 C13.3261708,29.2493284 12.5010102,30.0539738 12.5010102,31.0064813 C12.5010102,31.9693049 13.3054555,32.7705116 14.2445504,32.7705116 C15.2112657,32.7705116 16.0122584,31.9693049 16.0122584,31.0064813 L16.0122584,31.0064813 Z M20.8354774,31.0064813 C20.8354774,30.0539738 20.0552,29.2493284 19.1126526,29.2493284 C18.1493898,29.2493284 17.3207766,30.0539738 17.3207766,31.0064813 C17.3207766,31.9693049 18.1252219,32.7705116 19.0677693,32.7705116 C20.0310321,32.7705116 20.8354774,31.9693049 20.8354774,31.0064813 L20.8354774,31.0064813 Z M37.1591562,49.1866528 C36.5860321,48.1791267 34.1554336,44.0424242 33.3268204,43.0142662 C33.1196672,42.7391738 32.981565,42.6016276 32.6604774,42.3506057 C34.6318861,42.3024645 36.2166088,40.3389923 36.2166088,37.9594427 C36.2166088,35.1706931 34.3591343,33.2966259 31.5349445,33.2966259 L25.5896453,33.2966259 L25.5896453,49.1866528 L28.7314701,49.1866528 L28.7314701,42.556925 C28.9386234,42.577557 29.0767255,42.6256982 29.2389956,42.6910326 C29.8121197,42.9489318 30.2954774,43.7226292 31.8802,46.5801519 C32.5016599,47.7011536 32.7536964,48.1344242 33.3717036,49.1866528 L37.1591562,49.1866528 Z M32.8434628,38.0282158 C32.8434628,38.6918763 32.6155942,39.2626931 32.2254555,39.6271906 C31.7904336,40.0157587 31.1931416,40.1533049 29.8121197,40.1533049 L28.7314701,40.1533049 L28.7314701,35.8549855 L29.8811708,35.8549855 C30.6614482,35.8549855 31.3312438,35.9478292 31.6972146,36.0888141 C32.4533241,36.3604679 32.8434628,37.0447603 32.8434628,38.0282158 L32.8434628,38.0282158 Z M56.4692949,49.1866528 L51.4389226,33.2519234 L47.9725577,33.2519234 L42.7384847,49.1866528 L46.0909153,49.1866528 L47.2164482,45.4144477 L51.8981124,45.4144477 L53.0236453,49.1866528 L56.4692949,49.1866528 Z M51.117835,42.7632444 L47.9967255,42.7632444 C48.341981,41.7110158 48.5456818,40.9613889 48.846054,39.8163166 C49.1222584,38.7606494 49.5123971,37.1169721 49.6021635,36.749036 L50.2443387,39.5618561 C50.4998277,40.6622259 51.0039007,42.4193788 51.117835,42.7632444 L51.117835,42.7632444 Z M69.4370905,49.1866528 L69.4370905,33.2966259 L66.3850321,33.2966259 L66.4540832,39.7922461 C66.4782511,40.8857385 66.5921854,42.9214225 66.7095723,44.1558998 C66.3850321,43.0142662 65.7670248,41.3430797 64.9625796,39.6581385 L61.9070686,33.2966259 L58.3509372,33.2966259 L58.3509372,49.1866528 L61.4478788,49.1866528 L61.3546599,42.3953082 C61.3339445,41.0679872 61.3097766,39.1973587 61.1958423,37.8941082 C61.492762,38.8775637 62.4594774,41.1161284 63.3536891,43.1071099 L66.0881124,49.1866528 L69.4370905,49.1866528 Z M84.8665577,47.9556141 L84.8665577,40.3665015 L78.6899372,40.3665015 L79.1076964,42.9695637 L81.5382949,42.9695637 L81.5382949,46.5835906 C81.0135066,46.8552444 80.4369299,46.9755973 79.7257036,46.9755973 C78.6899372,46.9755973 77.8164409,46.6523637 77.2226015,46.0781082 C76.4181562,45.2769015 76.0280175,43.8154729 76.0280175,41.549399 C76.0280175,39.1732881 76.3042219,37.457399 77.381419,36.4258024 C77.9338277,35.8996881 78.7348204,35.6314729 79.6808204,35.6314729 C80.8961197,35.6314729 81.9767693,36.0166024 83.0090832,36.8625116 L84.7042876,34.8715301 C83.3060029,33.6611234 81.5624628,33.0490427 79.6324847,33.0490427 C78.1168131,33.0490427 76.9222292,33.3894696 75.7518131,34.1631671 C73.5283679,35.6521049 72.4235504,38.0282158 72.4235504,41.3912208 C72.4235504,43.7673318 72.9517912,45.4625889 74.1222073,46.9515267 C75.4065577,48.5917654 77.1742657,49.3689015 79.5668861,49.3689015 C81.4485285,49.3689015 83.2369518,48.9115603 84.8665577,47.9556141 L84.8665577,47.9556141 Z M97.6099372,49.1866528 L97.6099372,46.4460444 L91.571419,46.4460444 L91.571419,42.1889889 L96.0942657,42.1889889 L96.0942657,39.5859267 L91.571419,39.5859267 L91.571419,35.8996881 L96.9884774,35.8996881 L97.4027839,33.2966259 L88.3122073,33.2966259 L88.3122073,49.1866528 L97.6099372,49.1866528 Z M118.090492,33.2966259 L114.713893,33.2966259 L113.405375,39.3349049 C113.06012,40.8651066 112.580215,44.0424242 112.531879,44.5891704 C112.486996,44.3381486 112.14174,41.8244914 111.84482,40.4043267 L110.374032,33.2966259 L106.862784,33.2966259 L105.436879,39.7234729 C104.956974,41.8691939 104.680769,44.114636 104.611718,44.7748578 C104.566835,44.4550629 104.359682,42.3265351 103.76239,39.5618561 L102.38482,33.2966259 L98.9875066,33.2966259 L102.799127,49.324199 L106.448477,49.324199 L107.781164,42.8113855 C108.192018,40.7722629 108.468222,38.8122292 108.537273,38.37552 C108.582156,38.9910393 108.858361,40.9098091 109.296835,42.8526494 L110.719288,49.324199 L114.230536,49.324199 L118.090492,33.2966259 Z M131.35866,49.1866528 L126.33174,33.2519234 L122.865375,33.2519234 L117.631302,49.1866528 L120.98028,49.1866528 L122.105813,45.4144477 L126.79093,45.4144477 L127.916463,49.1866528 L131.35866,49.1866528 Z M126.010653,42.7632444 L122.886091,42.7632444 C123.231346,41.7110158 123.438499,40.9613889 123.735419,39.8163166 C124.011623,38.7606494 124.401762,37.1169721 124.494981,36.749036 L125.137156,39.5618561 C125.389193,40.6622259 125.896718,42.4193788 126.010653,42.7632444 L126.010653,42.7632444 Z M144.329908,49.1866528 L144.329908,33.2966259 L141.281302,33.2966259 L141.350353,39.7922461 C141.371069,40.8857385 141.488455,42.9214225 141.60239,44.1558998 C141.281302,43.0142662 140.659842,41.3430797 139.855397,39.6581385 L136.799886,33.2966259 L133.243755,33.2966259 L133.243755,49.1866528 L136.340696,49.1866528 L136.247477,42.3953082 C136.223309,41.0679872 136.202594,39.1973587 136.08866,37.8941082 C136.38558,38.8775637 137.352295,41.1161284 138.246507,43.1071099 L140.98093,49.1866528 L144.329908,49.1866528 Z M159.666156,41.2983771 C159.666156,38.4408545 158.958382,36.4051704 157.487594,34.9643738 C156.524331,34.0049889 155.353915,33.5063839 153.997061,33.3894696 C153.354886,33.3447671 152.139587,33.2966259 151.217755,33.2966259 L148.006879,33.2966259 L148.006879,49.1866528 L151.884098,49.1866528 C152.826645,49.1866528 153.582755,49.1419503 154.180047,49.0972477 C155.675003,48.9837721 157.097455,48.1172309 158.060718,46.8139805 C159.137915,45.3731839 159.666156,43.4716074 159.666156,41.2983771 L159.666156,41.2983771 Z M156.065142,41.5941015 C156.065142,44.9639839 155.098426,46.5835906 152.988915,46.5835906 L151.262638,46.5835906 L151.262638,35.810283 L152.733426,35.810283 C153.997061,35.810283 154.732455,36.2676242 155.260696,37.137604 C155.902872,38.1863939 156.065142,39.7441049 156.065142,41.5941015 L156.065142,41.5941015 Z M172.271434,33.2966259 L160.774426,33.2966259 L160.774426,35.9478292 L164.675813,35.9478292 L164.675813,49.1866528 L167.931572,49.1866528 L167.931572,35.9478292 L171.743193,35.9478292 L172.271434,33.2966259 Z M183.637244,49.1866528 L183.637244,46.4460444 L177.598726,46.4460444 L177.598726,42.1889889 L182.121572,42.1889889 L182.121572,39.5859267 L177.598726,39.5859267 L177.598726,35.8996881 L183.015784,35.8996881 L183.430091,33.2966259 L174.339514,33.2966259 L174.339514,49.1866528 L183.637244,49.1866528 Z M208.271222,33.2966259 L204.898076,33.2966259 L203.589558,39.3349049 C203.244302,40.8651066 202.760945,44.0424242 202.716061,44.5891704 C202.671178,44.3381486 202.325923,41.8244914 202.02555,40.4043267 L200.558215,33.2966259 L197.043514,33.2966259 L195.621061,39.7234729 C195.137704,41.8691939 194.864952,44.114636 194.795901,44.7748578 C194.747565,44.4550629 194.540412,42.3265351 193.946572,39.5618561 L192.569003,33.2966259 L189.168236,33.2966259 L192.979857,49.324199 L196.63266,49.324199 L197.961893,42.8113855 C198.3762,40.7722629 198.652404,38.8122292 198.721455,38.37552 C198.766339,38.9910393 199.042543,40.9098091 199.477565,42.8526494 L200.900018,49.324199 L204.414718,49.324199 L208.271222,33.2966259 Z M210.798492,49.1866528 L214.14747,49.1866528 L214.14747,33.2966259 L210.798492,33.2966259 L210.798492,49.1866528 Z M228.931309,44.1799704 C228.931309,41.8244914 227.512309,40.1533049 224.895273,39.4449418 L222.965295,38.9188276 C221.632609,38.5543301 221.194134,38.1416914 221.194134,37.3198528 C221.194134,36.2435536 222.112514,35.4939267 223.424485,35.4939267 C224.619069,35.4939267 225.696266,35.830915 227.142886,36.7008948 L228.658558,34.4141889 C227.260273,33.4101015 225.285412,32.8152141 223.334718,32.8152141 C219.95812,32.8152141 217.617288,34.8268276 217.617288,37.7290528 C217.617288,38.6231032 217.845156,39.4449418 218.283631,40.1533049 C218.856755,41.1161284 219.844185,41.7316477 221.425455,42.168357 L223.196616,42.6532074 C224.619069,43.0383368 225.285412,43.6813654 225.285412,44.7060847 C225.285412,46.1262494 224.318696,46.879315 222.481937,46.879315 C220.873047,46.879315 219.592149,46.3807099 218.097193,45.6001351 L216.906061,48.0931603 C218.511499,49.004404 220.531244,49.533957 222.347288,49.533957 C226.317726,49.533957 228.931309,47.4088679 228.931309,44.1799704 L228.931309,44.1799704 Z M242.341032,44.1799704 C242.341032,41.8244914 240.91858,40.1533049 238.301543,39.4449418 L236.375018,38.9188276 C235.038879,38.5543301 234.603857,38.1416914 234.603857,37.3198528 C234.603857,36.2435536 235.522236,35.4939267 236.834207,35.4939267 C238.028791,35.4939267 239.105988,35.830915 240.552609,36.7008948 L242.064828,34.4141889 C240.666543,33.4101015 238.691682,32.8152141 236.740988,32.8152141 C233.367842,32.8152141 231.023558,34.8268276 231.023558,37.7290528 C231.023558,38.6231032 231.254879,39.4449418 231.689901,40.1533049 C232.263025,41.1161284 233.250455,41.7316477 234.835178,42.168357 L236.602886,42.6532074 C238.028791,43.0383368 238.691682,43.6813654 238.691682,44.7060847 C238.691682,46.1262494 237.728419,46.879315 235.89166,46.879315 C234.282769,46.879315 232.998419,46.3807099 231.506915,45.6001351 L230.312331,48.0931603 C231.921222,49.004404 233.937514,49.533957 235.753558,49.533957 C239.727448,49.533957 242.341032,47.4088679 242.341032,44.1799704 L242.341032,44.1799704 Z M254.166032,49.1866528 L254.166032,46.4460444 L248.127514,46.4460444 L248.127514,42.1889889 L252.650361,42.1889889 L252.650361,39.5859267 L248.127514,39.5859267 L248.127514,35.8996881 L253.544572,35.8996881 L253.958879,33.2966259 L244.868302,33.2966259 L244.868302,49.1866528 L254.166032,49.1866528 Z M268.238645,49.1866528 L268.238645,33.2966259 L265.186587,33.2966259 L265.255638,39.7922461 C265.279806,40.8857385 265.39374,42.9214225 265.511127,44.1558998 C265.186587,43.0142662 264.56858,41.3430797 263.764134,39.6581385 L260.708623,33.2966259 L257.152492,33.2966259 L257.152492,49.1866528 L260.249434,49.1866528 L260.156215,42.3953082 C260.135499,41.0679872 260.111331,39.1973587 259.997397,37.8941082 C260.294317,38.8775637 261.261032,41.1161284 262.155244,43.1071099 L264.889667,49.1866528 L268.238645,49.1866528 Z M283.025937,44.1799704 C283.025937,41.8244914 281.603485,40.1533049 278.986448,39.4449418 L277.05647,38.9188276 C275.723784,38.5543301 275.288762,38.1416914 275.288762,37.3198528 C275.288762,36.2435536 276.207142,35.4939267 277.519112,35.4939267 C278.710244,35.4939267 279.790893,35.830915 281.234061,36.7008948 L282.749733,34.4141889 C281.347996,33.4101015 279.376587,32.8152141 277.425893,32.8152141 C274.049295,32.8152141 271.708463,34.8268276 271.708463,37.7290528 C271.708463,38.6231032 271.939784,39.4449418 272.374806,40.1533049 C272.94793,41.1161284 273.931908,41.7316477 275.516631,42.168357 L277.284339,42.6532074 C278.710244,43.0383368 279.376587,43.6813654 279.376587,44.7060847 C279.376587,46.1262494 278.413324,46.879315 276.573112,46.879315 C274.967674,46.879315 273.679872,46.3807099 272.19182,45.6001351 L270.997236,48.0931603 C272.602674,49.004404 274.622419,49.533957 276.43501,49.533957 C280.408901,49.533957 283.025937,47.4088679 283.025937,44.1799704 L283.025937,44.1799704 Z M296.663528,47.9796847 L295.19274,45.9680713 C294.253645,46.7211368 293.404317,46.9927906 292.461769,46.9927906 C291.0842,46.9927906 290.027718,46.3807099 289.385543,45.2115671 C288.902185,44.3415872 288.7192,43.1277418 288.7192,40.9579503 C288.7192,39.1010763 288.995404,37.7806326 289.613412,36.8625116 C290.189988,36.0166024 291.24647,35.4939267 292.323667,35.4939267 C293.217879,35.4939267 294.07066,35.7896511 294.871653,36.3810998 L296.318273,34.2113082 C295.448229,33.4582427 293.863507,32.9527603 292.278784,32.9527603 C289.706631,32.9527603 287.410682,34.3247839 286.174667,36.6355603 C285.439273,38.0041452 285.094018,39.5824881 285.094018,41.5734696 C285.094018,43.9083166 285.736193,45.830525 287.020543,47.267883 C288.329061,48.7533822 290.027718,49.4617452 292.233901,49.4617452 C294.046492,49.4617452 295.399893,49.004404 296.663528,47.9796847 L296.663528,47.9796847 Z M310.049083,49.1866528 L310.049083,33.2966259 L306.789872,33.2966259 L306.789872,39.4724511 L302.197974,39.4724511 L302.197974,33.2966259 L299.007813,33.2966259 L299.007813,49.1866528 L302.197974,49.1866528 L302.197974,42.1030225 L306.789872,42.1030225 L306.789872,49.1866528 L310.049083,49.1866528 Z M325.661536,49.1866528 L320.634616,33.2519234 L317.164799,33.2519234 L311.930726,49.1866528 L315.283156,49.1866528 L316.408689,45.4144477 L321.093806,45.4144477 L322.215886,49.1866528 L325.661536,49.1866528 Z M320.310076,42.7632444 L317.188966,42.7632444 C317.534222,41.7110158 317.741375,40.9613889 318.038295,39.8163166 C318.314499,38.7606494 318.704638,37.1169721 318.797857,36.749036 L319.440032,39.5618561 C319.692069,40.6622259 320.196142,42.4193788 320.310076,42.7632444 L320.310076,42.7632444 Z M336.198733,33.2966259 L327.546631,33.2966259 L327.546631,49.1866528 L330.757507,49.1866528 L330.757507,42.1202158 L334.821164,42.1202158 L334.821164,39.5205923 L330.757507,39.5205923 L330.757507,35.8790561 L335.829309,35.8790561 L336.198733,33.2966259 Z M349.239032,33.2966259 L337.738572,33.2966259 L337.738572,35.9478292 L341.639959,35.9478292 L341.639959,49.1866528 L344.899171,49.1866528 L344.899171,35.9478292 L348.710791,35.9478292 L349.239032,33.2966259 Z M367.351134,43.9977217 L367.351134,33.2966259 L364.095375,33.2966259 L364.095375,43.4716074 C364.095375,44.3175166 364.095375,44.5479066 364.050492,44.8917721 C363.91239,46.0574763 363.014726,46.7417687 361.612988,46.7417687 C360.556507,46.7417687 359.800397,46.3532007 359.430974,45.6448376 C359.247988,45.3009721 359.154769,44.7301553 359.154769,43.7466998 L359.154769,33.2966259 L355.874842,33.2966259 L355.874842,44.3690965 C355.874842,45.8958595 356.037112,46.5388881 356.561901,47.3607267 C357.456112,48.7533822 359.247988,49.4858158 361.682039,49.4858158 C365.127689,49.4858158 366.688244,47.7492948 367.099098,46.4907469 C367.326966,45.8098931 367.351134,45.5072914 367.351134,43.9977217 L367.351134,43.9977217 Z M381.610185,49.1866528 L381.610185,33.2966259 L378.56158,33.2966259 L378.627178,39.7922461 C378.651346,40.8857385 378.76528,42.9214225 378.879215,44.1558998 C378.56158,43.0142662 377.936667,41.3430797 377.135674,39.6581385 L374.076711,33.2966259 L370.524032,33.2966259 L370.524032,49.1866528 L373.617521,49.1866528 L373.527755,42.3953082 C373.503587,41.0679872 373.482872,39.1973587 373.365485,37.8941082 C373.665857,38.8775637 374.632572,41.1161284 375.526784,43.1071099 L378.261207,49.1866528 L381.610185,49.1866528 Z M396.946434,41.2983771 C396.946434,38.4408545 396.235207,36.4051704 394.767872,34.9643738 C393.801156,34.0049889 392.63074,33.5063839 391.277339,33.3894696 C390.635164,33.3447671 389.416412,33.2966259 388.498032,33.2966259 L385.283704,33.2966259 L385.283704,49.1866528 L389.160923,49.1866528 C390.106923,49.1866528 390.863032,49.1419503 391.460324,49.0972477 C392.951828,48.9837721 394.377733,48.1172309 395.340996,46.8139805 C396.418193,45.3731839 396.946434,43.4716074 396.946434,41.2983771 L396.946434,41.2983771 Z M393.341966,41.5941015 C393.341966,44.9639839 392.378704,46.5835906 390.269193,46.5835906 L388.542915,46.5835906 L388.542915,35.810283 L390.013704,35.810283 C391.277339,35.810283 392.012733,36.2676242 392.540974,37.137604 C393.183149,38.1863939 393.341966,39.7441049 393.341966,41.5941015 L393.341966,41.5941015 Z M417.354485,49.1866528 L411.681937,40.6622259 L416.781361,33.2966259 L412.831638,33.2966259 L408.284623,40.5418729 L408.284623,33.2966259 L405.008149,33.2966259 L405.008149,49.1866528 L408.284623,49.1866528 L408.284623,40.8857385 L413.128558,49.1866528 L417.354485,49.1866528 Z M430.394784,43.9977217 L430.394784,33.2966259 L427.139025,33.2966259 L427.139025,43.4716074 C427.139025,44.3175166 427.139025,44.5479066 427.094142,44.8917721 C426.956039,46.0574763 426.058375,46.7417687 424.656638,46.7417687 C423.600156,46.7417687 422.840594,46.3532007 422.474623,45.6448376 C422.291638,45.3009721 422.198419,44.7301553 422.198419,43.7466998 L422.198419,33.2966259 L418.921945,33.2966259 L418.921945,44.3690965 C418.921945,45.8958595 419.080762,46.5388881 419.60555,47.3607267 C420.503215,48.7533822 422.291638,49.4858158 424.725689,49.4858158 C428.171339,49.4858158 429.731893,47.7492948 430.142747,46.4907469 C430.374069,45.8098931 430.394784,45.5072914 430.394784,43.9977217 L430.394784,43.9977217 Z M445.113025,49.1866528 L445.113025,33.2966259 L442.060966,33.2966259 L442.130018,39.7922461 C442.154185,40.8857385 442.26812,42.9214225 442.382054,44.1558998 C442.060966,43.0142662 441.442959,41.3430797 440.638514,39.6581385 L437.583003,33.2966259 L434.026872,33.2966259 L434.026872,49.1866528 L437.123813,49.1866528 L437.030594,42.3953082 C437.006426,41.0679872 436.985711,39.1973587 436.868324,37.8941082 C437.168696,38.8775637 438.131959,41.1161284 439.029623,43.1071099 L441.764047,49.1866528 L445.113025,49.1866528 Z M459.896864,44.1799704 C459.896864,41.8244914 458.477864,40.1533049 455.860828,39.4449418 L453.93085,38.9188276 C452.598164,38.5543301 452.159689,38.1416914 452.159689,37.3198528 C452.159689,36.2435536 453.078069,35.4939267 454.390039,35.4939267 C455.584623,35.4939267 456.66182,35.830915 458.108441,36.7008948 L459.624112,34.4141889 C458.225828,33.4101015 456.250966,32.8152141 454.300273,32.8152141 C450.923674,32.8152141 448.582842,34.8268276 448.582842,37.7290528 C448.582842,38.6231032 448.810711,39.4449418 449.249185,40.1533049 C449.825762,41.1161284 450.80974,41.7316477 452.39101,42.168357 L454.162171,42.6532074 C455.584623,43.0383368 456.250966,43.6813654 456.250966,44.7060847 C456.250966,46.1262494 455.284251,46.879315 453.447492,46.879315 C451.838601,46.879315 450.557704,46.3807099 449.062747,45.6001351 L447.871616,48.0931603 C449.477054,49.004404 451.496799,49.533957 453.30939,49.533957 C457.28328,49.533957 459.896864,47.4088679 459.896864,44.1799704 L459.896864,44.1799704 Z M472.550477,33.2966259 L461.050018,33.2966259 L461.050018,35.9478292 L464.951404,35.9478292 L464.951404,49.1866528 L468.210616,49.1866528 L468.210616,35.9478292 L472.022236,35.9478292 L472.550477,33.2966259 Z\"></path>\n-\t\t</g>\n-\t  </g>\n-  </g>\n-</svg>\n\\ No newline at end of file"
        },
        {
          "filename": "logout.php",
          "status": "removed",
          "additions": 0,
          "deletions": 6,
          "patch": "@@ -1,6 +0,0 @@\n-<?php\n-session_start();\n-session_destroy();\n-header(\"Location: login.php\");\n-exit;\n-?>\n\\ No newline at end of file"
        },
        {
          "filename": "private/.env.example",
          "status": "renamed",
          "additions": 19,
          "deletions": 16,
          "patch": "@@ -1,42 +1,45 @@\n-; Authentication method: LDAP or OIDC\n+# Authentication method: LDAP, OIDC or Shibboleth\n Authentication=\"LDAP\"\n-; LDAP config\n+# LDAP config\n LDAP_HOST=\"ldaps://...\"\n LDAP_BASE_DN=\"cn=...,ou=...,dc=...\"\n LDAP_BIND_PW=\"...\"\n LDAP_SEARCH_DN=\"ou=...,dc=...\"\n+LDAP_PORT=\"\"\n \n-; Open AI config (also works with Microsoft Azure)\n-OPENAI_API_KEY=\"sk-...\"\n+#Shibbolet\n+SHIBBOLETH_LOGIN_PATH=\"Shibboleth.sso/Login?target=\"\n+SHIBBOLETH_LOGIN_PAGE=\"login.php\"\n+\n+# Open Ai config\n OPENAI_API_URL=\"https://api.openai.com/v1/chat/completions\"\n+OPENAI_API_KEY=\"sk-...\"\n \n-; Legal config\n+# Legal config\n IMPRINT_LOCATION=\"https://my-univiersity.com/imprint\"\n PRIVACY_LOCATION=\"https://my-univiersity.com/ai-privacy-policy\"\n \n-; Testuser accout\n-;TESTUSER=tester\n-;TESTPASSWORD=superlangespasswort123\n+# Testuser accout\n+TESTUSER=\"tester\"\n+TESTPASSWORD=\"superlangespasswort123\"\n \n-; OpenID Connect configuration\n+# OpenID Connect configuration\n ; ID provider\n OIDC_IDP=\"https://xxx\"\n ; Client ID\n OIDC_CLIENT_ID=\"xxx\"\n ; Client secret\n OIDC_CLIENT_SECRET=\"xxx\"\n-;oidc logout uri\n+; oidc logout uri\n OIDC_LOGOUT=\"\"\n \n-; Path to composer auoload file (without /vendor/autoload.php)\n+; Path to composer autoload file (without /vendor/autoload.php)\n ; normally set to \".\"\n ; is always in the same directory in Docker container\n-;COMPOSER_PATH=\"/composer/lib\"\n+; COMPOSER_PATH=\"/composer/lib\"\n \n ;Favicon\n FAVICON_URI=\"\"\n \n-;GPT model to be used\n-GPT_MODEL=\"gpt-4-turbo-preview\"\n-;whether or not to force usage of the predetermined GPT model\n-FORCE_MODEL=true\n+# Default Language, leave blank to use default language of the user's browser.\n+DEFAULT_LANGUAGE=\"de_DE\""
        },
        {
          "filename": "private/.htaccess",
          "status": "added",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -0,0 +1,2 @@\n+Order allow,deny\r\n+Deny from all\n\\ No newline at end of file"
        },
        {
          "filename": "private/app/php/auth.php",
          "status": "added",
          "additions": 165,
          "deletions": 0,
          "patch": "@@ -0,0 +1,165 @@\n+<?php\n+    if (isset($_POST[\"submit\"])) {\n+        // Check if csrf tocken from the user is euqal to the session csrf token.\n+        if (!isset($_POST['csrf_token']) || !hash_equals($_POST['csrf_token'], $_SESSION['csrf_token'])) {\n+            die('Invalid CSRF token');\n+        }\n+\n+        if (array_key_exists('REMOTE_USER', $_SERVER) && !empty($_SERVER['REMOTE_USER'])) {\n+            // If user is already authenticated via shibboleth.\n+            $_SESSION['username'] = $_SERVER['REMOTE_USER'];\n+            \n+            //REGENERATE CSRF TOKEN FOR MORE SECURITY\n+            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));\n+            //REGENERATE SESSION ID\n+            session_regenerate_id();\n+\n+            header(\"Location: /interface\");\n+            exit;\n+        } else {\n+            // Redirect user to shibboleth login page.\n+            if (file_exists(ENV_FILE_PATH)){\n+                $env = parse_ini_file(ENV_FILE_PATH);\n+                $loginPath = $env['SHIBBOLETH_LOGIN_PATH'];\n+                $loginPage = $env['SHIBBOLETH_LOGIN_PAGE'];\n+\n+                //REQUEST SCHEME MAY BE UNDEFINED BASED ON THE SERVER CONFIG\n+                //MAKE SURE TO PREPARE THE SERVER MODS.\n+                $scheme = isset($_SERVER['REQUEST_SCHEME']) ? $_SERVER['REQUEST_SCHEME'] : 'http';\n+                $shibLogin = 'Location: /' . $loginPath . $scheme. '://' . $_SERVER['HTTP_HOST'] . '/' . $loginPage;\n+                header($shibLogin);\n+                // header('Location: /Shibboleth.sso/Login?target='.$_SERVER['REQUEST_SCHEME'].'://'.$_SERVER['HTTP_HOST'].'/login.php');\n+                exit;\n+            }\n+            else{\n+                echo 'Shibbolet authentication not defined.';\n+            }\n+        }\n+    }\n+\n+    if (isset($_POST[\"account\"]) && isset($_POST[\"password\"])) {\n+\n+        function handleLdapLogin($username, $password){\n+            // Check if .env file exists for LDAP configuration\n+            if (file_exists(ENV_FILE_PATH)){\n+                $env = parse_ini_file(ENV_FILE_PATH);\n+                $ldap_host = $env['LDAP_HOST'];\n+                $ldap_port = $env['LDAP_PORT'];\n+                $ldap_binddn = $env['LDAP_BASE_DN'];\n+                $ldap_bindpw = $env['LDAP_BIND_PW'];\n+                $ldap_base = $env['LDAP_SEARCH_DN'];\t\n+            }\n+\n+            // Check if username or password is empty\n+            if (!$username || !$password) {\n+                // echo \"Invalid input.\";\n+                return false;\n+            }\n+            \n+            // *** ACTIVATES TEST ACCESS ***\n+            // Please set a unique test username and password in .env\n+            if(isset($env['TESTUSER']) && isset($env['TESTPASSWORD']) &&\n+                     !empty($env['TESTUSER']) && !empty($env['TESTPASSWORD']) &&\n+                     $username == $env['TESTUSER'] && $password == $env['TESTPASSWORD']) {\n+                $_SESSION['username'] = $env['TESTUSER'];\n+                $_SESSION['employeetype'] = \"Tester\";\n+                return true;\n+            }\n+            \n+            // Connect to LDAP server\n+            $ldapUri = $ldap_host . ':' . $ldap_port;\n+            $ldapConn = ldap_connect($ldapUri);\n+            if (!$ldapConn) {\n+                // echo \"Unable to connect to LDAP server.\";\n+                return false;\n+            }\n+            \n+            // Set LDAP protocol version\n+            if (!ldap_set_option($ldapConn, LDAP_OPT_PROTOCOL_VERSION, 3)) {\n+                // echo \"Unable to set LDAP protocol version.\";\n+                return false;\n+            }\n+        \n+            // Bind to LDAP server\n+            if (!@ldap_bind($ldapConn, $ldap_binddn, $ldap_bindpw)) {\n+                // echo \"Unable to bind to LDAP server with provided DN and password.\";\n+                return false;\n+            }\n+\n+            // Search LDAP for user\n+            $filter = \"(|(sAMAccountName=$username)(mail=$username))\";\n+        \n+            $sr = ldap_search($ldapConn, $ldap_base, $filter);\n+            if (!$sr) {\n+                // echo \"LDAP search failed.\";\n+                return false;\n+            }\n+            \n+            // Get first entry from search results\n+            $entryId = ldap_first_entry($ldapConn, $sr);\n+            if (!$entryId) {\n+                // echo \"Unable to get the first entry from the search results.\";\n+                return false;\n+            }\n+            \n+            // Get DN from entry\n+            $userDn = ldap_get_dn($ldapConn, $entryId);\n+            if (!$userDn) {\n+                // echo \"Unable to get DN from the entry.\";\n+                return false;\n+            }\n+            \n+            // Bind with user DN and password\n+            $passValid = ldap_bind($ldapConn, $userDn, $password); \n+            if (!$passValid) {\n+                // echo \"Unable to bind with provided user DN and password.\";\n+                return false;\n+            }\n+            // Get user information\n+            $info = ldap_get_entries($ldapConn, $sr);\n+            \n+            // Close LDAP connection\n+            ldap_close($ldapConn);\n+\n+            // Extract initials from user's display name\n+            $name = $info[0][\"displayname\"][0];\n+            $parts = explode(\", \", $name);\n+            $initials = substr($parts[1], 0, 1) . substr($parts[0], 0, 1);\n+\n+            // Set session variables\n+            $_SESSION['username'] = $initials;\n+            $_SESSION['employeetype'] = $info[0][\"employeetype\"][0];\n+            return true;\n+        }\n+\n+\n+        // filter username to prevent unwanted inputs.\n+        $username = filter_var($_POST[\"account\"], FILTER_UNSAFE_RAW);\n+        $username = ldap_escape($username, \"\", LDAP_ESCAPE_FILTER);\n+        \n+        // Use hashed password if LDAP Server is configured accordingly.\n+        // $password = password_hash($_POST[\"password\"], PASSWORD_DEFAULT);\n+        $password = $_POST[\"password\"];\n+\n+        // Validate CSRF token on login request\n+        // Check if csrf tocken from the user is euqal to the session csrf token.\n+        if (!isset($_POST['csrf_token']) || !hash_equals($_POST['csrf_token'], $_SESSION['csrf_token'])) {\n+            $csrf = generate_csrf_token();\n+            echo json_encode(array(\"success\" => false, 'csrf_token' => $csrf, \"message\" => \"BAD CSRF...\"));\n+            exit;\n+        }\n+        else{\n+            // Authenticate user with submitted credentials\n+            if (handleLdapLogin($username, $password)) {\n+                $csrf = generate_csrf_token();\n+                echo json_encode(array(\"success\" => true, 'csrf_token' => $csrf, \"message\" => \"logging in...\"));\n+                exit;\n+            } else {\n+                $csrf = generate_csrf_token();\n+                echo json_encode(array(\"success\" => false, 'csrf_token' => $csrf, \"message\" => $_SESSION['translation']['LoginFailedMSG']));\n+                exit;\n+            }\n+        }\n+    }\n+ \n+    \n\\ No newline at end of file"
        },
        {
          "filename": "private/app/php/csrf.php",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+<?php\n+function generate_csrf_token() {\n+    $token = bin2hex(random_bytes(32));\n+    $_SESSION['csrf_token'] = $token;\n+    return $token;\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/app/php/feedback_send.php",
          "status": "added",
          "additions": 106,
          "deletions": 0,
          "patch": "@@ -0,0 +1,106 @@\n+<?php\n+\n+if (session_status() == PHP_SESSION_NONE) {\n+    session_start();\n+}\n+\n+require_once  LIBRARY_PATH . 'csrf.php';\n+\n+// Check if the user is logged in, if not return 401 Unauthorized\n+if (!isset($_SESSION['username'])) {\n+    http_response_code(401);\n+    exit;\n+}\n+\n+// Function to sanitize input data\n+function sanitizeInput($data) {\n+    // Remove leading/trailing whitespace\n+    $data = trim($data);\n+    // Convert special characters to HTML entities\n+    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');\n+    return $data;\n+}\n+\n+// Check if the request method is POST\n+if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n+    // Get the JSON string from the request body\n+    $jsonString = file_get_contents(\"php://input\");\n+    \n+    // Decode the JSON string into an array\n+    $jsonData = json_decode($jsonString, true);\n+    error_log($jsonString);\n+    // CSRF Protection\n+\tif (!isset($_SERVER['HTTP_X_CSRF_TOKEN']) || $_SERVER['HTTP_X_CSRF_TOKEN'] !== $_SESSION['csrf_token']) {\n+        http_response_code(403);\n+\n+        $csrf_token = generate_csrf_token();\n+        $respond = array(\n+            'success' => false,\n+            'csrf_token' => $csrf_token\n+        );\n+        echo json_encode($respond);\n+        // exit('CSRF token validation failed.');\n+        exit;\n+    }\n+\n+    // Check if decoding was successful and if the JSON is valid\n+    if ($jsonData === null && json_last_error() !== JSON_ERROR_NONE) {\n+        // If decoding fails or JSON is invalid, return 400 Bad Request\n+        echo('invalid data');\n+        http_response_code(400);\n+        exit;\n+    }\n+\n+\n+    if (isset($jsonData['message']) && $jsonData['message'] !== null){\n+        $message = $jsonData['message'];\n+    }\n+\n+    // Extract 'content' and 'role' fields from the message\n+    $content = sanitizeInput($message['content']);\n+    $role = sanitizeInput($message['role']);\n+    \n+    // Check if content or role is empty after sanitization\n+    if(empty($content) || empty($role)) {\n+        // If content or role is empty, return 400 Bad Request\n+        error_log('invalid data');\n+        http_response_code(400);\n+        exit;\n+    }\n+\n+    // Generate a unique identifier for the feedback file\n+    $uniqid = time() . uniqid();\n+    \n+    // Create an array with 'role' and 'content' fields\n+    $feedbackData = array(\n+        'id' => $uniqid,\n+        'role' => $role,\n+        'content' => $content\n+    );\n+\n+    $dir = RESOURCES_PATH . 'feedback/';\n+    $feedbackDB = $dir . 'feedback_db.json';\n+\n+    $currentFeedbackData = [];\n+    if (file_exists($feedbackDB)) {\n+        $currentFeedbackData = json_decode(file_get_contents($feedbackDB), true);\n+    }\n+    $currentFeedbackData[] = $feedbackData;\n+\n+    // Convert array to JSON string\n+    $jsonFeedbackData = json_encode($currentFeedbackData);\n+    \n+    // Write the JSON string to a new feedback file\n+    file_put_contents($feedbackDB, $jsonFeedbackData);\n+    \n+\n+    $csrf_token = generate_csrf_token();\n+    $response = array(\n+        'success' => true,\n+        'csrf_token' => $csrf_token\n+    );\n+    \n+    // Return the JSON string\n+    echo json_encode($response);\n+}\n+?>"
        },
        {
          "filename": "private/app/php/language_controller.php",
          "status": "added",
          "additions": 90,
          "deletions": 0,
          "patch": "@@ -0,0 +1,90 @@\n+<?php\n+    if (session_status() == PHP_SESSION_NONE) {\n+        session_start();\n+    }\n+    require_once BOOTSTRAP_PATH;\n+    require_once  LIBRARY_PATH . 'csrf.php';\n+    \n+    function setLanguage(){\n+        //LANGUAGE CHANGE...\n+        if(isset($_SESSION['language'])){\n+            $language = $_SESSION['language'];\n+        }\n+        else{\n+            //try to get cookie from last use\n+            if (isset($_COOKIE['lastLanguage_cookie']) && $_COOKIE['lastLanguage_cookie'] != '') {\n+                $language = $_COOKIE['lastLanguage_cookie'];\n+            }\t\t\t\n+            //If theres not cookie try env default language\n+            elseif((file_exists(ENV_FILE_PATH) && parse_ini_file(ENV_FILE_PATH)['DEFAULT_LANGUAGE'] != '')) {\n+                $env = parse_ini_file(ENV_FILE_PATH);\n+                $language = $env['DEFAULT_LANGUAGE'];\n+            }\n+            else{\n+                //hard code to german\n+                $languages = ['de_DE', 'en_US', 'es_ES', 'fr_FR', 'it_IT'];\n+                $acceptLang = $_SERVER['HTTP_ACCEPT_LANGUAGE'];\n+                $matchingLang = substr($acceptLang, 0, 2);\n+                foreach ($languages as $lang) {\n+                    if (strpos($lang, $matchingLang) === 0) {\n+                        $defaultLanguage = $lang;\n+                        break;\n+                    }\n+                }\n+                if ($defaultLanguage === null) {\n+                    $defaultLanguage = 'de_DE';\n+                }\n+                $language = $defaultLanguage;\n+            }\n+        }\n+        $_SESSION['language'] = $language;\n+        $languageSanitized = preg_replace('~[^a-zA-Z_]~', '', $language);\n+        $langFile = file_get_contents(LANGUAGE_PATH . $languageSanitized . '.json');\n+        $translation = json_decode($langFile, true);\n+        $_SESSION['translation'] = $translation;\n+    }\n+\n+\n+\n+    // Check if the request is POST\n+    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n+        // CSRF Protection\n+        if (!isset($_SERVER['HTTP_X_CSRF_TOKEN']) || $_SERVER['HTTP_X_CSRF_TOKEN'] !== $_SESSION['csrf_token']) {\n+            $csrf_token = generate_csrf_token();\n+            $response = array(\n+                'success' => false,\n+                'csrf_token' => $csrf_token\n+            );\n+            http_response_code(403);\n+            exit(json_encode($response));\n+        }\n+\n+        // Check if the requested language is valid\n+        $languages = ['de_DE', 'en_US', 'es_ES', 'fr_FR', 'it_IT'];\n+\n+        $jsonString = file_get_contents(\"php://input\");\n+\n+        $lang = json_decode($jsonString, true)['inputLang'];\n+\n+        if (!in_array($lang, $languages)) {\n+            http_response_code(400);\n+            exit(json_encode(array('success' => false, 'error' => 'Invalid language')));\n+        }\n+\n+        // Store the new language in session\n+        $_SESSION['language'] = $lang;\n+        $langFile = file_get_contents(RESOURCES_PATH . \"language/{$lang}.json\");\n+        $translation = json_decode($langFile, true);\n+        $_SESSION['translation'] = $translation;\n+\n+        setcookie('lastLanguage_cookie', $_SESSION['language'], strtotime('2038-01-01'), '/', '', true, true);\n+\n+        // Prepare the JSON response\n+        $response = array(\n+            'success' => true,\n+            'csrf_token' => generate_csrf_token()\n+        );\n+\n+        // Return the JSON string\n+        exit(json_encode($response));\n+    }"
        },
        {
          "filename": "private/app/php/stream-api.php",
          "status": "renamed",
          "additions": 4,
          "deletions": 7,
          "patch": "@@ -1,4 +1,6 @@\n <?php\n+define('BOOTSTRAP_PATH',  '../../bootstrap.php');\n+require_once BOOTSTRAP_PATH;\n \n session_start();\n if (!isset($_SESSION['username'])) {\n@@ -19,8 +21,8 @@\n \texit;\n }\n \n-if (file_exists(\".env\")){\n-    $env = parse_ini_file('.env');\n+if (file_exists(ENV_FILE_PATH)){\n+    $env = parse_ini_file(ENV_FILE_PATH);\n }\n \n // Replace with your API URL and API key\n@@ -29,11 +31,6 @@\n \n // Read the request payload from the client\n $requestPayload = file_get_contents('php://input');\n-if (true == $env['FORCE_MODEL']) {\n-\t$r = json_decode($requestPayload, true);\n-\t$r['model'] = $env['GPT_MODEL'];\n-\t$requestPayload  = json_encode($r);\n-}\n \n $ch = curl_init();\n curl_setopt($ch, CURLOPT_URL, $apiUrl);"
        },
        {
          "filename": "private/app/php/submit_vote.php",
          "status": "added",
          "additions": 101,
          "deletions": 0,
          "patch": "@@ -0,0 +1,101 @@\n+<?php\n+\n+if (session_status() == PHP_SESSION_NONE) {\n+    session_start();\n+}\n+require_once  LIBRARY_PATH . 'csrf.php';\n+\n+if (!isset($_SESSION['username'])) {\n+    http_response_code(401);\n+    exit;\n+}\n+\n+if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n+    $data = json_decode(file_get_contents(\"php://input\"), true);\n+\n+    // CSRF Protection\n+    if (!isset($_SERVER['HTTP_X_CSRF_TOKEN']) || $_SERVER['HTTP_X_CSRF_TOKEN'] !== $_SESSION['csrf_token']) {\n+        http_response_code(403);\n+        $csrf_token = generate_csrf_token();\n+        $respond = array(\n+            'success' => false,\n+            'csrf_token' => $respond\n+        );\n+        echo json_encode($callback);\n+        exit('CSRF token validation failed.');\n+    }\n+\n+    // Input Validation\n+    if (!isset($data['id']) || !preg_match('/^\\w+$/', $data['id'])) {\n+        // Id is either not set, or doesn't match the expected pattern (alphanumeric + underscore)\n+        http_response_code(400);\n+        exit('Invalid ID.');\n+    }\n+\n+    $feedbackDB = RESOURCES_PATH . 'feedback/' . 'feedback_db.json';\n+\n+    // Read existing JSON data from the feedback DB file\n+    $feedbackData = [];\n+    if (file_exists($feedbackDB)) {\n+        $jsonContent = file_get_contents($feedbackDB);\n+        if (!empty($jsonContent)) {\n+            $feedbackData = json_decode($jsonContent, true);\n+            // Check if the decoded data is an array\n+            if (!is_array($feedbackData)) {\n+                // Handle the case of invalid JSON data\n+                http_response_code(500);\n+                exit(\"Invalid JSON data in feedback_db.json\");\n+            }\n+        }\n+    }\n+\n+    // If $feedbackData is empty or not an array, set it as an empty array\n+    if (!is_array($feedbackData)) {\n+        $feedbackData = [];\n+    }\n+\n+    // Find the feedback entry by ID\n+    $foundFeedback = null;\n+    foreach ($feedbackData as $feedback) {\n+        if ($feedback['id'] === $data['id']) {\n+            $foundFeedback = $feedback;\n+            break;\n+        }\n+    }\n+\n+    if ($foundFeedback === null) {\n+        http_response_code(404);\n+        exit('Feedback entry not found.');\n+    }\n+\n+    // Update the found feedback entry based on the action\n+    if ($data['action'] === 'upvote') {\n+        if (isset($foundFeedback[\"up\"])) {\n+            $foundFeedback[\"up\"]++;\n+        } else {\n+            $foundFeedback[\"up\"] = 1;\n+        }\n+    } elseif ($data['action'] === 'downvote') {\n+        if (isset($foundFeedback[\"down\"])) {\n+            $foundFeedback[\"down\"]++;\n+        } else {\n+            $foundFeedback[\"down\"] = 1;\n+        }\n+    }\n+\n+    // Rewrite the feedback data back to the feedback DB file\n+    file_put_contents($feedbackDB, json_encode($feedbackData));\n+\n+    $csrf_token = generate_csrf_token();\n+    $respond = array(\n+        'content' => $foundFeedback,\n+        'success' => true,\n+        'csrf_token' => $csrf_token\n+    );\n+\n+    // Output JSON response\n+    echo json_encode($respond);\n+} else {\n+    http_response_code(405);\n+    exit('Method Not Allowed');\n+}"
        },
        {
          "filename": "private/bootstrap.php",
          "status": "added",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -0,0 +1,16 @@\n+<?php\n+    defined('PRIVATE_PATH') || define('PRIVATE_PATH', $_SERVER['DOCUMENT_ROOT']. '/private');\n+    defined('APPLICATION_PATH') || define('APPLICATION_PATH', PRIVATE_PATH . '/app');\n+    defined('BASE_URL') || define('BASE_URL', 'localhost:8000/');\n+    \n+    define('ENV_FILE_PATH', PRIVATE_PATH . '/.env');\n+    define('LIBRARY_PATH', APPLICATION_PATH . '/'. 'php/');\n+    define('RESOURCES_PATH', PRIVATE_PATH . '/' . 'resources/');\n+\n+    define('PAGES_PATH', PRIVATE_PATH . '/pages');\n+    define('LOGIN_PAGE_PATH', PAGES_PATH . '/login.php');\n+    define('INTERFACE_PAGE_PATH', PAGES_PATH . '/interface.php');\n+    define('LOGOUT_PAGE_PATH', PAGES_PATH . '/logout.php');\n+    define('VIEWS_PATH', PRIVATE_PATH . '/' . 'views/' );\n+    define('LAGNUAGE_CONTROLLER_PATH', LIBRARY_PATH . 'language_controller.php');\n+    define('LANGUAGE_PATH', RESOURCES_PATH . 'language/');"
        },
        {
          "filename": "private/pages/interface.php",
          "status": "added",
          "additions": 755,
          "deletions": 0,
          "patch": "@@ -0,0 +1,755 @@\n+<?php\n+\tsession_start();\n+\n+\trequire_once BOOTSTRAP_PATH;\n+\trequire_once LIBRARY_PATH . 'language_controller.php';\n+\n+\tif(!isset($_SESSION['translation'])){\n+\t\tsetLanguage();\n+\t}\n+\t$translation = $_SESSION['translation'];\n+    \n+\tif (!isset($_SESSION['username'])) {\n+\t\theader(\"Location: login.php\");\n+\t\texit;\n+\t}\n+\n+\n+\t// IF CSRF IS NOT SET -> user is in Interface without logging in. -> logout to remove variables and set a new session.\n+\tif (!isset($_SESSION['csrf_token']) || $_SESSION['csrf_token'] === '') {\n+\t\theader(\"Location: logout\");\n+\t\texit;\n+\t}\n+\n+    // Temporary forward for now private views\n+    $requested_page = ($_GET['page'] ?? null);\n+    if(is_string($requested_page)){\n+        $requested_page = preg_replace('~(\\.php$|[^a-zA-Z_])~', '', $requested_page);\n+        $viewFile = VIEWS_PATH . '/' . $requested_page . '.php';\n+        if(!file_exists($viewFile)){\n+            http_response_code(404);\n+            echo 'Page not found.';\n+            exit();\n+        }\n+\n+        include_once $viewFile;\n+        exit();\n+\n+    }\n+?>\n+<!DOCTYPE html>\n+<head>\n+\t<meta charset=\"UTF-8\">\n+\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no\" />\n+\n+\t<!-- SAVE CSRF TOKEN ON THE CLIENT SIDE. -->\n+\t<?php if (isset($_SESSION['csrf_token'])) : ?>\n+\t\t<meta name=\"csrf-token\" content=\"<?php echo $_SESSION['csrf_token']; ?>\">\n+\t<?php endif; ?>\n+\t<title>HAWKI</title>\n+\n+\n+\t<link rel=\"stylesheet\" href=\"/public/style/style.css\">\n+\t<link rel=\"stylesheet\" href=\"/public/style/interface_style.css\">\n+\t<link rel=\"stylesheet\" href=\"/public/style/settings_style.css\">\n+\n+\t<!-- COMMON SCRIPTS -->\n+\t<script src=\"/public/js/scripts.js\"></script>\n+\t<script src=\"/public/js/interface_functions.js\"></script>\n+\t<script src=\"/public/js/syntax_modifier.js\"></script>\n+\n+\t<!-- HLJS -->\n+\t<link id=\"hljsTheme\" type=\"text/css\" rel=\"stylesheet\" href=\"/public/assets/highlightJS/hljsLight.css\">\n+\t<script src=\"/public/assets/highlightJS/highlight.min.js\"></script>\n+\t<script src=\"/public/assets/highlightJS/go.min.js\"></script>\n+\n+\t<!-- KaTex detects and renders math formulas -->\n+\t<link rel=\"stylesheet\" href=\"/public/assets/katex/katex.min.css\">\n+\t<script defer src=\"/public/assets/katex/katex.min.js\"></script>\n+\t<script defer src=\"/public/assets/katex/contrib/auto-render.min.js\"></script>\n+\n+\t<!-- Jquery v3.7.1 -->\n+\t<script src=\"/public/assets/jquery/jquery.min.js\"></script>\n+\n+\n+\t<!-- TO PREVENT FOUC WHEN RELOADING THE PAGE IN DARK MODE\n+\t\t THE SETTINGS AND IT'S START FUNCTIONS SHOULD BE INCLUDED IN THE HEADER BEFORE THE PAGE IS LOADED -->\n+\t<?php include VIEWS_PATH . 'settings.php'; ?>\n+  \t<script>\n+\t\tSwitchDarkMode(false);\n+\t\tUpdateSettingsLanguage(`<?php echo $_SESSION['language'] ?>`);\n+\t</script>\n+\n+</head>\n+\n+<div class=\"wrapper\">\n+  \t<div class=\"sidebar\">\n+\t\t<div class=\"logo\">\n+\t\t\t<img id=\"HAWK_logo\" src=\"/public/img/logo.svg\" alt=\"\">\n+\t\t</div>\n+\t\t<div class=\"menu\">\n+\t\t\t<details>\n+\t\t\t\t<summary>\n+\t\t\t\t\t<h3><?php echo $translation[\"Conversation\"]; ?>\n+\t\t\t\t\t\t<svg viewBox=\"0 0 50 50\"><path d=\"M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 25 11 A 3 3 0 0 0 22 14 A 3 3 0 0 0 25 17 A 3 3 0 0 0 28 14 A 3 3 0 0 0 25 11 z M 21 21 L 21 23 L 22 23 L 23 23 L 23 36 L 22 36 L 21 36 L 21 38 L 22 38 L 23 38 L 27 38 L 28 38 L 29 38 L 29 36 L 28 36 L 27 36 L 27 21 L 26 21 L 22 21 L 21 21 z\"/></svg>\n+\t\t\t\t\t</h3>\n+\t\t\t\t</summary>\n+\t\t\t\t<?php echo $translation[\"Conversation_Info\"]; ?>\n+\t\t\t</details>\n+\t\t\t<div class=\"menu-item\" id=\"chatMenuButton\" onclick=\"load(this, 'chat.php')\">\n+\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2M20 16H5.2L4 17.2V4H20V16Z\" /></svg>\n+\t\t\t\t<?php echo $translation[\"Chat\"]; ?>\n+\t\t\t</div>\n+\n+\t\t\t<details>\n+\t\t\t\t<summary>\n+\t\t\t\t\t<h3><?php echo $translation[\"VirtualOffice\"]; ?>\n+\t\t\t\t\t\t<svg viewBox=\"0 0 50 50\"><path d=\"M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 25 11 A 3 3 0 0 0 22 14 A 3 3 0 0 0 25 17 A 3 3 0 0 0 28 14 A 3 3 0 0 0 25 11 z M 21 21 L 21 23 L 22 23 L 23 23 L 23 36 L 22 36 L 21 36 L 21 38 L 22 38 L 23 38 L 27 38 L 28 38 L 29 38 L 29 36 L 28 36 L 27 36 L 27 21 L 26 21 L 22 21 L 21 21 z\"/></svg>\n+\t\t\t\t\t</h3>\n+\t\t\t\t</summary>\n+\t\t\t\t<?php echo $translation[\"VirtualOffice_Info\"]; ?>\n+\t\t\t</details>\n+\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n+\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M13.07 10.41A5 5 0 0 0 13.07 4.59A3.39 3.39 0 0 1 15 4A3.5 3.5 0 0 1 15 11A3.39 3.39 0 0 1 13.07 10.41M5.5 7.5A3.5 3.5 0 1 1 9 11A3.5 3.5 0 0 1 5.5 7.5M7.5 7.5A1.5 1.5 0 1 0 9 6A1.5 1.5 0 0 0 7.5 7.5M16 17V19H2V17S2 13 9 13 16 17 16 17M14 17C13.86 16.22 12.67 15 9 15S4.07 16.31 4 17M15.95 13A5.32 5.32 0 0 1 18 17V19H22V17S22 13.37 15.94 13Z\" /></svg>\n+\t\t\t\tTeam\n+\t\t\t</div>\n+\t\t\t<div class=\"submenu\">\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'finance.php')\"><?php echo $translation[\"Finance\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'science.php')\"><?php echo $translation[\"Research\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'marketing.php')\"><?php echo $translation[\"Marketing\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'programming.php')\"><?php echo $translation[\"Programming\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'law.php')\"><?php echo $translation[\"LegalConsultation\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'socialmedia.php')\"><?php echo $translation[\"SocialMedia\"]; ?></div>\n+\t\t\t</div>\n+\n+\t\t\t<details>\n+\t\t\t\t<summary>\n+\t\t\t\t\t<h3><?php echo $translation[\"LearnSpace\"]; ?>\n+\t\t\t\t\t\t<svg viewBox=\"0 0 50 50\"><path d=\"M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 25 11 A 3 3 0 0 0 22 14 A 3 3 0 0 0 25 17 A 3 3 0 0 0 28 14 A 3 3 0 0 0 25 11 z M 21 21 L 21 23 L 22 23 L 23 23 L 23 36 L 22 36 L 21 36 L 21 38 L 22 38 L 23 38 L 27 38 L 28 38 L 29 38 L 29 36 L 28 36 L 27 36 L 27 21 L 26 21 L 22 21 L 21 21 z\"/></svg>\n+\t\t\t\t\t</h3>\n+\t\t\t\t</summary>\n+\t\t\t\t<?php echo $translation[\"LearnSpace_Info\"]; ?>\n+\t\t\t</details>\n+\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n+\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z\" /></svg>\n+\t\t\t\t<?php echo $translation[\"ResearchWork\"]; ?>\n+\t\t\t</div>\n+\t\t\t<div class=\"submenu\">\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'datascience.php')\"><?php echo $translation[\"DataAnalysis\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'feedback.php')\"><?php echo $translation[\"FeedBack\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'methodologie.php')\"><?php echo $translation[\"Methodology\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'literature.php')\"><?php echo $translation[\"LiteratureSearch\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'research.php')\"><?php echo $translation[\"ResearchSupport\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'writing.php')\"><?php echo $translation[\"WritingHelp\"]; ?></div>\n+\t\t\t</div>\n+\n+\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n+\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3M7,7.25V11.5C7,11.5 9,10 11,10C13,10 14,12 16,12C18,12 18,11 18,11V7.5C18,7.5 17,8 16,8C14,8 13,6 11,6C9,6 7,7.25 7,7.25Z\" /></svg>\n+\t\t\t\t<?php echo $translation[\"Organization\"]; ?>\n+\t\t\t</div>\n+\t\t\t<div class=\"submenu\">\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'eventmanagement.php')\"><?php echo $translation[\"EventManagement\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'learning.php')\"><?php echo $translation[\"LearnStrategy\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'motivation.php')\"><?php echo $translation[\"Motivation\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'stressmanagement.php')\"><?php echo $translation[\"StressManagement\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'tables.php')\"><?php echo $translation[\"Tables\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'timemanagement.php')\"><?php echo $translation[\"TimeManagement\"]; ?></div>\n+\t\t\t</div>\n+\n+\t\t\t<div class=\"menu-item\" onclick=\"submenu(this)\">\n+\t\t\t\t<svg viewBox=\"0 0 24 24\"><path d=\"M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z\" /></svg>\n+\t\t\t\t<?php echo $translation[\"Creativity\"]; ?>\n+\t\t\t</div>\n+\t\t\t<div class=\"submenu\">\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'copywriting.php')\"><?php echo $translation[\"Copywriting\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'designthinking.php')\"><?php echo $translation[\"DesignThinking\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'gamification.php')\"><?php echo $translation[\"Gamification\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'ideageneration.php')\"><?php echo $translation[\"BrainStorming\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'interview.php')\"><?php echo $translation[\"InterviewQuestions\"]; ?></div>\n+\t\t\t\t<div class=\"submenu-item\" onclick=\"load(this, 'prototyping.php')\"><?php echo $translation[\"Prototyping\"]; ?></div>\n+\t\t\t</div>\n+\n+\t\t</div>\n+\t\t<div class=\"settings-btn\" onclick=\"toggleSettingsPanel(true)\">\n+\t\t\t<svg  viewBox=\"0 0 24 24\" width=\"24\">\n+\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 8.00002C9.79085 8.00002 7.99999 9.79088 7.99999 12C7.99999 14.2092 9.79085 16 12 16C14.2091 16 16 14.2092 16 12C16 9.79088 14.2091 8.00002 12 8.00002ZM9.99999 12C9.99999 10.8955 10.8954 10 12 10C13.1046 10 14 10.8955 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 9.99999 13.1046 9.99999 12Z\"/>\n+\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 8.00002C9.79085 8.00002 7.99999 9.79088 7.99999 12C7.99999 14.2092 9.79085 16 12 16C14.2091 16 16 14.2092 16 12C16 9.79088 14.2091 8.00002 12 8.00002ZM9.99999 12C9.99999 10.8955 10.8954 10 12 10C13.1046 10 14 10.8955 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 9.99999 13.1046 9.99999 12Z\"/>\n+\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7673 1.01709C10.9925 0.999829 11.2454 0.99993 11.4516 1.00001L12.5484 1.00001C12.7546 0.99993 13.0075 0.999829 13.2327 1.01709C13.4989 1.03749 13.8678 1.08936 14.2634 1.26937C14.7635 1.49689 15.1915 1.85736 15.5007 2.31147C15.7454 2.67075 15.8592 3.0255 15.9246 3.2843C15.9799 3.50334 16.0228 3.75249 16.0577 3.9557L16.1993 4.77635L16.2021 4.77788C16.2369 4.79712 16.2715 4.81659 16.306 4.8363L16.3086 4.83774L17.2455 4.49865C17.4356 4.42978 17.6693 4.34509 17.8835 4.28543C18.1371 4.2148 18.4954 4.13889 18.9216 4.17026C19.4614 4.20998 19.9803 4.39497 20.4235 4.70563C20.7734 4.95095 21.0029 5.23636 21.1546 5.4515C21.2829 5.63326 21.4103 5.84671 21.514 6.02029L22.0158 6.86003C22.1256 7.04345 22.2594 7.26713 22.3627 7.47527C22.4843 7.7203 22.6328 8.07474 22.6777 8.52067C22.7341 9.08222 22.6311 9.64831 22.3803 10.1539C22.1811 10.5554 21.9171 10.8347 21.7169 11.0212C21.5469 11.1795 21.3428 11.3417 21.1755 11.4746L20.5 12L21.1755 12.5254C21.3428 12.6584 21.5469 12.8205 21.7169 12.9789C21.9171 13.1653 22.1811 13.4446 22.3802 13.8461C22.631 14.3517 22.7341 14.9178 22.6776 15.4794C22.6328 15.9253 22.4842 16.2797 22.3626 16.5248C22.2593 16.7329 22.1255 16.9566 22.0158 17.14L21.5138 17.9799C21.4102 18.1535 21.2828 18.3668 21.1546 18.5485C21.0028 18.7637 20.7734 19.0491 20.4234 19.2944C19.9803 19.6051 19.4613 19.7901 18.9216 19.8298C18.4954 19.8612 18.1371 19.7852 17.8835 19.7146C17.6692 19.6549 17.4355 19.5703 17.2454 19.5014L16.3085 19.1623L16.306 19.1638C16.2715 19.1835 16.2369 19.2029 16.2021 19.2222L16.1993 19.2237L16.0577 20.0443C16.0228 20.2475 15.9799 20.4967 15.9246 20.7157C15.8592 20.9745 15.7454 21.3293 15.5007 21.6886C15.1915 22.1427 14.7635 22.5032 14.2634 22.7307C13.8678 22.9107 13.4989 22.9626 13.2327 22.983C13.0074 23.0002 12.7546 23.0001 12.5484 23H11.4516C11.2454 23.0001 10.9925 23.0002 10.7673 22.983C10.5011 22.9626 10.1322 22.9107 9.73655 22.7307C9.23648 22.5032 8.80849 22.1427 8.49926 21.6886C8.25461 21.3293 8.14077 20.9745 8.07542 20.7157C8.02011 20.4967 7.97723 20.2475 7.94225 20.0443L7.80068 19.2237L7.79791 19.2222C7.7631 19.2029 7.72845 19.1835 7.69396 19.1637L7.69142 19.1623L6.75458 19.5014C6.5645 19.5702 6.33078 19.6549 6.11651 19.7146C5.86288 19.7852 5.50463 19.8611 5.07841 19.8298C4.53866 19.7901 4.01971 19.6051 3.57654 19.2944C3.2266 19.0491 2.99714 18.7637 2.84539 18.5485C2.71718 18.3668 2.58974 18.1534 2.4861 17.9798L1.98418 17.14C1.87447 16.9566 1.74067 16.7329 1.63737 16.5248C1.51575 16.2797 1.36719 15.9253 1.32235 15.4794C1.26588 14.9178 1.36897 14.3517 1.61976 13.8461C1.81892 13.4446 2.08289 13.1653 2.28308 12.9789C2.45312 12.8205 2.65717 12.6584 2.82449 12.5254L3.47844 12.0054V11.9947L2.82445 11.4746C2.65712 11.3417 2.45308 11.1795 2.28304 11.0212C2.08285 10.8347 1.81888 10.5554 1.61972 10.1539C1.36893 9.64832 1.26584 9.08224 1.3223 8.52069C1.36714 8.07476 1.51571 7.72032 1.63732 7.47528C1.74062 7.26715 1.87443 7.04347 1.98414 6.86005L2.48605 6.02026C2.58969 5.84669 2.71714 5.63326 2.84534 5.45151C2.9971 5.23637 3.22655 4.95096 3.5765 4.70565C4.01966 4.39498 4.53862 4.20999 5.07837 4.17027C5.50458 4.1389 5.86284 4.21481 6.11646 4.28544C6.33072 4.34511 6.56444 4.4298 6.75451 4.49867L7.69141 4.83775L7.69394 4.8363C7.72844 4.8166 7.7631 4.79712 7.79791 4.77788L7.80068 4.77635L7.94225 3.95571C7.97723 3.7525 8.02011 3.50334 8.07542 3.2843C8.14077 3.0255 8.25461 2.67075 8.49926 2.31147C8.80849 1.85736 9.23648 1.49689 9.73655 1.26937C10.1322 1.08936 10.5011 1.03749 10.7673 1.01709ZM14.0938 4.3363C14.011 3.85634 13.9696 3.61637 13.8476 3.43717C13.7445 3.2858 13.6019 3.16564 13.4352 3.0898C13.2378 3.00002 12.9943 3.00002 12.5073 3.00002H11.4927C11.0057 3.00002 10.7621 3.00002 10.5648 3.0898C10.3981 3.16564 10.2555 3.2858 10.1524 3.43717C10.0304 3.61637 9.98895 3.85634 9.90615 4.3363L9.75012 5.24064C9.69445 5.56333 9.66662 5.72467 9.60765 5.84869C9.54975 5.97047 9.50241 6.03703 9.40636 6.13166C9.30853 6.22804 9.12753 6.3281 8.76554 6.52822C8.73884 6.54298 8.71227 6.55791 8.68582 6.57302C8.33956 6.77078 8.16643 6.86966 8.03785 6.90314C7.91158 6.93602 7.83293 6.94279 7.70289 6.93196C7.57049 6.92094 7.42216 6.86726 7.12551 6.7599L6.11194 6.39308C5.66271 6.2305 5.43809 6.14921 5.22515 6.16488C5.04524 6.17811 4.87225 6.23978 4.72453 6.34333C4.5497 6.46589 4.42715 6.67094 4.18206 7.08103L3.72269 7.84965C3.46394 8.2826 3.33456 8.49907 3.31227 8.72078C3.29345 8.90796 3.32781 9.09665 3.41141 9.26519C3.51042 9.4648 3.7078 9.62177 4.10256 9.9357L4.82745 10.5122C5.07927 10.7124 5.20518 10.8126 5.28411 10.9199C5.36944 11.036 5.40583 11.1114 5.44354 11.2504C5.47844 11.379 5.47844 11.586 5.47844 12C5.47844 12.414 5.47844 12.621 5.44354 12.7497C5.40582 12.8887 5.36944 12.9641 5.28413 13.0801C5.20518 13.1875 5.07927 13.2876 4.82743 13.4879L4.10261 14.0643C3.70785 14.3783 3.51047 14.5352 3.41145 14.7349C3.32785 14.9034 3.29349 15.0921 3.31231 15.2793C3.33461 15.501 3.46398 15.7174 3.72273 16.1504L4.1821 16.919C4.4272 17.3291 4.54974 17.5342 4.72457 17.6567C4.8723 17.7603 5.04528 17.8219 5.2252 17.8352C5.43813 17.8508 5.66275 17.7695 6.11199 17.607L7.12553 17.2402C7.42216 17.1328 7.5705 17.0791 7.7029 17.0681C7.83294 17.0573 7.91159 17.064 8.03786 17.0969C8.16644 17.1304 8.33956 17.2293 8.68582 17.427C8.71228 17.4421 8.73885 17.4571 8.76554 17.4718C9.12753 17.6719 9.30853 17.772 9.40635 17.8684C9.50241 17.963 9.54975 18.0296 9.60765 18.1514C9.66662 18.2754 9.69445 18.4367 9.75012 18.7594L9.90615 19.6637C9.98895 20.1437 10.0304 20.3837 10.1524 20.5629C10.2555 20.7142 10.3981 20.8344 10.5648 20.9102C10.7621 21 11.0057 21 11.4927 21H12.5073C12.9943 21 13.2378 21 13.4352 20.9102C13.6019 20.8344 13.7445 20.7142 13.8476 20.5629C13.9696 20.3837 14.011 20.1437 14.0938 19.6637L14.2499 18.7594C14.3055 18.4367 14.3334 18.2754 14.3923 18.1514C14.4502 18.0296 14.4976 17.963 14.5936 17.8684C14.6915 17.772 14.8725 17.6719 15.2344 17.4718C15.2611 17.4571 15.2877 17.4421 15.3141 17.427C15.6604 17.2293 15.8335 17.1304 15.9621 17.0969C16.0884 17.064 16.167 17.0573 16.2971 17.0681C16.4295 17.0791 16.5778 17.1328 16.8744 17.2402L17.888 17.607C18.3372 17.7696 18.5619 17.8509 18.7748 17.8352C18.9547 17.8219 19.1277 17.7603 19.2754 17.6567C19.4502 17.5342 19.5728 17.3291 19.8179 16.919L20.2773 16.1504C20.536 15.7175 20.6654 15.501 20.6877 15.2793C20.7065 15.0921 20.6721 14.9034 20.5885 14.7349C20.4895 14.5353 20.2921 14.3783 19.8974 14.0643L19.1726 13.4879C18.9207 13.2876 18.7948 13.1875 18.7159 13.0801C18.6306 12.9641 18.5942 12.8887 18.5564 12.7497C18.5215 12.6211 18.5215 12.414 18.5215 12C18.5215 11.586 18.5215 11.379 18.5564 11.2504C18.5942 11.1114 18.6306 11.036 18.7159 10.9199C18.7948 10.8126 18.9207 10.7124 19.1725 10.5122L19.8974 9.9357C20.2922 9.62176 20.4896 9.46479 20.5886 9.26517C20.6722 9.09664 20.7065 8.90795 20.6877 8.72076C20.6654 8.49906 20.5361 8.28259 20.2773 7.84964L19.8179 7.08102C19.5728 6.67093 19.4503 6.46588 19.2755 6.34332C19.1277 6.23977 18.9548 6.1781 18.7748 6.16486C18.5619 6.14919 18.3373 6.23048 17.888 6.39307L16.8745 6.75989C16.5778 6.86725 16.4295 6.92093 16.2971 6.93195C16.167 6.94278 16.0884 6.93601 15.9621 6.90313C15.8335 6.86965 15.6604 6.77077 15.3142 6.57302C15.2877 6.55791 15.2611 6.54298 15.2345 6.52822C14.8725 6.3281 14.6915 6.22804 14.5936 6.13166C14.4976 6.03703 14.4502 5.97047 14.3923 5.84869C14.3334 5.72467 14.3055 5.56332 14.2499 5.24064L14.0938 4.3363Z\"/>\n+\t\t\t</svg>\n+\t\t</div>\n+\t\t<div class=\"info\">\n+\t\t\t<a href=\"#\" id=\"feedback\" onclick=\"load(this, 'feedback_loader.php')\"><?php echo $translation[\"FeedBack\"]; ?></a>\n+\t\t\t<a href=\"logout\"><?php echo $translation[\"SignOut\"]; ?></a>\n+\t\t\t<br>\n+\t\t\t<!-- CHANGE THIS PART TO ONCLICK EVENT TO LOAD THE PAGE IN MESSAGES PANEL.\n+\t\t\t\t DON'T FORGET TO ADD A PROPER PAGE IN VIEWS FOLDER. -->\n+\t\t\t<a href=\"/dataprotection\"><?php echo $translation[\"DataSecurity\"]; ?></a>\n+\t\t\t<a href=\"/impressum\" target=\"_blank\"><?php echo $translation[\"Impressum\"]; ?></a>\n+\t\t</div>\n+\n+\t</div>\n+\n+\n+  \t<div class=\"main\">\n+\t  \t<div></div>\n+\t<div class=\"messages\">\n+\t\t<!-- THE VIEW WILL BE LOADED HERE... -->\n+\t</div>\n+\n+\t<!-- TOGGLES BETWEEN INPUT_CONTAINER AND USERPOST-CONTAINER FOR USERS FEEDBACK MODULE -->\n+\t<div class=\"input-container\">\n+\t\t<div class=\"input\">\n+\t\t\t<div class=\"input-wrapper\">\n+\t\t\t\t<textarea class=\"input-field\" type=\"text\" placeholder=\"<?php echo $translation[\"InputField_Placeholder\"]; ?>\" oninput=\"resize(this),resize(document.getElementsByClassName('input-wrapper')[0])\" onkeypress=\"handleKeydown(event)\"></textarea>\n+\t\t\t</div>\n+\t\t\t<div class=\"input-send\" onclick=\"OnSendClick()\">\n+\t\t\t\t<svg viewBox=\"2 2 21 21\" width=\"80\" height=\"80\">\n+\t\t\t\t\t<g class=\"send-button\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"rgba(35, 48, 176)\">\n+\t\t\t\t\t\t<path d=\"M12,2c5.5,0,10,4.5,10,10s-4.5,10-10,10S2,17.5,2,12S6.5,2,12,2z\"  />\n+\t\t\t\t\t\t<path id=\"input-send-icon\" d=\"M16,12l-4-4l-4,4 M12,16V8\"/>\n+\t\t\t\t\t</g>\n+\t\t\t\t</svg>\n+\t\t\t</div>\n+\n+\t\t\t<div id=\"system-prompt-btn\" onclick=\"ToggleSystemPrompt(true)\">\n+\t\t\t\t<svg viewBox=\"0 0 50 50\"><path d=\"M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 25 11 A 3 3 0 0 0 22 14 A 3 3 0 0 0 25 17 A 3 3 0 0 0 28 14 A 3 3 0 0 0 25 11 z M 21 21 L 21 23 L 22 23 L 23 23 L 23 36 L 22 36 L 21 36 L 21 38 L 22 38 L 23 38 L 27 38 L 28 38 L 29 38 L 29 36 L 28 36 L 27 36 L 27 21 L 26 21 L 22 21 L 21 21 z\"/></svg>\n+\t\t\t</div>\n+\t\t\t<div id=\"system-prompt-panel\">\n+\t\t\t\t<div>\n+\t\t\t\t\t<div id=\"system-prompt-title\">\n+\t\t\t\t\t\t<p><b>System Prompt:</b></p>\n+\t\t\t\t\t\t<div onclick=\"toggleSystemPromptInfo()\">\n+\t\t\t\t\t\t\t<svg viewBox=\"0 0 32 32\" >\n+\t\t\t\t\t\t\t\t<path  d=\"M16 0c-8.836 0-16 7.163-16 16s7.163 16 16 16c8.837 0 16.001-7.163 16.001-16s-7.163-16-16.001-16zM16 30.032c-7.72 0-14-6.312-14-14.032s6.28-14 14-14 14.001 6.28 14.001 14-6.281 14.032-14.001 14.032zM14.53 25.015h2.516v-2.539h-2.516zM15.97 6.985c-1.465 0-2.672 0.395-3.62 1.184s-1.409 2.37-1.386 3.68l0.037 0.073h2.295c0-0.781 0.261-1.904 0.781-2.308s1.152-0.604 1.893-0.604c0.854 0 1.511 0.232 1.971 0.696s0.689 1.127 0.689 1.989c0 0.725-0.17 1.343-0.512 1.855-0.343 0.512-0.916 1.245-1.721 2.198-0.831 0.749-1.344 1.351-1.538 1.806s-0.297 1.274-0.305 2.454h2.405c0-0.74 0.047-1.285 0.14-1.636s0.36-0.744 0.799-1.184c0.945-0.911 1.703-1.802 2.277-2.674 0.573-0.87 0.86-1.831 0.86-2.881 0-1.465-0.443-2.607-1.331-3.424s-2.134-1.226-3.736-1.226z\"></path>\n+\t\t\t\t\t\t\t</svg>\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\n+\t\t\t\t\t<p id=\"system-prompt-info\" style=\"display: none\">\n+\t\t\t\t\t\t<?php echo $translation[\"SystemPromptInfo\"]; ?>\n+\t\t\t\t\t</p>\n+\t\t\t\t</div>\n+\n+\n+\t\t\t\t<p id=\"system-prompt\"></p>\n+\t\t\t</div>\n+\n+\t\t</div>\n+\t\t<div class=\"betaMessage\">\n+\t\t\t<?php echo $translation[\"BetaMessage\"]; ?>\n+\t\t</div>\n+\t</div>\n+\n+\n+\t<div class=\"userpost-container\">\n+\t\t<div class=\"userpost\">\n+\t\t\t<div class=\"userpost-wrapper\">\n+\t\t\t\t<textarea class=\"userpost-field\" type=\"text\" placeholder=\"<?php echo $translation[\"Feedback_Placeholder\"]; ?>\" oninput=\"resize(this)\" onkeypress=\"handleKeydownUserPost(event)\"></textarea>\n+\t\t\t</div>\n+\t\t\t<div class=\"userpost-send\" onclick=\"send_feedback()\">\n+\t\t\t\t<svg viewBox=\"2 2 21 21\" width=\"80\" height=\"80\">\n+\t\t\t\t\t<g class=\"send-button\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n+\t\t\t\t\t\t<path d=\"M12,2c5.5,0,10,4.5,10,10s-4.5,10-10,10S2,17.5,2,12S6.5,2,12,2z\"  />\n+\t\t\t\t\t\t<path d=\"M16,12l-4-4l-4,4 M12,16V8\"/>\n+\t\t\t\t\t</g>\n+\t\t\t\t</svg>\n+\t\t\t</div>\n+\t\t</div>\n+\t\t<div class=\"betaMessage\">\n+\t\t\t<?php echo $translation[\"BetaMessage\"]; ?>\n+\t\t</div>\n+\t</div>\n+\n+  \t<template id=\"message\">\n+\t\t<div class=\"message\">\n+\t\t\t<div class=\"message-content\">\n+\t\t\t\t<div class=\"message-icon\">\n+\t\t\t\t\t<?php echo $translation[\"AI_Icon\"]; ?>\n+\t\t\t\t</div>\n+\t\t\t\t<div class=\"message-text\">\n+\t\t\t\t\tLorem ipsum dolor sit amet consectetur, adipisicing elit. Quos incidunt, quidem soluta excepturi, ullam enim tempora.\n+\t\t\t\t</div>\n+\t\t\t\t<div class=\"message-copypanel \" >\n+\t\t\t\t\t<div class=\"message-copyButton\">\n+\t\t\t\t\t\t<svg viewBox=\"0 0 24 24\">\n+\t\t\t\t\t\t\t<path d=\"M 17.01 14.91 H 8.47 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 2.8 c 0 -0.42 0.35 -0.7 0.7 -0.7 H 14.7 l 3.01 3.01 v 9.03 C 17.71 14.56 17.43 14.91 17.01 14.91 z M 8.47 17.01 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 V 5.11 c 0 -0.56 -0.21 -1.12 -0.63 -1.47 l -3.01 -3.01 C 15.82 0.21 15.26 0 14.7 0 h -6.23 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 C 5.67 15.75 6.93 17.01 8.47 17.01 z M 2.8 5.67 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 c 0 1.54 1.26 2.8 2.8 2.8 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 v -1.4 h -2.1 v 1.4 c 0 0.42 -0.35 0.7 -0.7 0.7 H 2.8 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 8.47 c 0 -0.42 0.35 -0.7 0.7 -0.7 h 1.4 v -2.1 H 2.8 z\" />\n+\t\t\t\t\t\t</svg>\n+\t\t\t\t\t\t<span class=\"tooltiptext\">\n+\t\t\t\t\t\t\t<?php echo $translation[\"copyTooTip\"]; ?>\n+\t\t\t\t\t\t</span>\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t</div>\n+\t</template>\n+</div>\n+\n+<?php\n+\tinclude( VIEWS_PATH . 'guidelines.php');\n+?>\n+\n+<script>\n+\n+\tvisualViewport.addEventListener(\"resize\", update);\n+\tvisualViewport.addEventListener(\"scroll\", update);\n+\taddEventListener(\"scroll\", update);\n+\taddEventListener(\"load\", update);\n+\n+\tlet abortCtrl = new AbortController();\n+\tlet isReceivingData = false;\n+\n+\tconst sendicon = document.querySelector('#input-send-icon');\n+\tconst startIcon = 'M16,12l-4-4l-4,4 M12,16V8';\n+\tconst stopIcon = 'M9,9h6v6H9V9z'\n+\n+\tCheckModals();\n+\n+\t//Load chat by default when the page is loaded.\n+\twindow.addEventListener('DOMContentLoaded', (event) => {\n+\t\tconst chatBtn = document.querySelector(\"#chatMenuButton\");\n+\t\tload(chatBtn ,'chat.php');\n+    });\n+\n+\tdocument.querySelector('.messages').addEventListener('scroll', function() {\n+    \tisScrolling = true;\n+\t});\n+\tdocument.querySelector('.messages').addEventListener('scroll', function() {\n+\t\tsetTimeout(function() {\n+\t\t\tisScrolling = false;\n+\t\t}, 800); // Adjust the threshold\n+\t});\n+\n+\n+\t//#region HANDLE MESSAGES...\n+\t//----------------------------------------------------------------------------------------//\n+\tfunction handleKeydown(event){\n+\t\tif(isReceivingData) return;\n+\t\tif(event.key == \"Enter\" && !event.shiftKey){\n+\t\t\tevent.preventDefault();\n+\t\t\trequest();\n+\t\t}\n+\t}\n+\n+\tfunction handleKeydownUserPost(event){\n+\t\tif(isReceivingData) return;\n+\t\tif(event.key == \"Enter\" && !event.shiftKey){\n+\t\t\tevent.preventDefault();\n+\t\t\tsend_feedback();\n+\t\t}\n+\t}\n+\n+\tfunction OnSendClick(){\n+\t\tif(!isReceivingData){\n+\t\t\trequest();\n+\t\t} else{\n+\t\t\tabortCtrl.abort();\n+\t\t}\n+\t}\n+\n+\tasync function request(){\n+\t\tconst messagesElement = document.querySelector(\".messages\");\n+\t\tconst messageTemplate = document.querySelector('#message');\n+\t\tconst inputField = document.querySelector(\".input-field\");\n+\t\tconst inputWrapper = document.querySelector(\".input-wrapper\");\n+\n+\t\tif(inputField.value.trim() == \"\"){\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tInitializeMessage();\n+\n+\t\t//handle input-send button.\n+\t\tisReceivingData = true;\n+\t\tsendicon.setAttribute('d', stopIcon);\n+\t\tsendicon.style.color = \"red\";\n+\n+\t\tlet message = {};\n+\t\tmessage.role = \"user\";\n+\t\t//prevent html input to be rendered as html elements.\n+\t\tmessage.content = escapeHTML(inputField.value.trim());\n+\t\tinputField.value = \"\";\n+\t\taddMessage(message);\n+\t\tresize(inputField);\n+\t\tresize(inputWrapper);\n+\n+\t\tdocument.querySelector('.limitations')?.remove();\n+\n+\t\tconst requestObject = {};\n+\t\trequestObject.model = 'gpt-4-turbo-preview';\n+\t\trequestObject.stream = true;\n+\t\trequestObject.messages = [];\n+\t\tconst messageElements = messagesElement.querySelectorAll(\".message\");\n+\t\tmessageElements.forEach(messageElement => {\n+\t\t\tlet messageObject = {};\n+\t\t\tmessageObject.role = messageElement.dataset.role;\n+\t\t\tmessageObject.content = messageElement.querySelector(\".message-text\").textContent;\n+\t\t\trequestObject.messages.push(messageObject);\n+\t\t})\n+\n+\t\t\n+\t\tconst streamAPI = \"/api/stream-api\";\n+\t\tpostData(streamAPI, requestObject)\n+\t\t.then(stream => processStream(stream))\n+\t\t.catch(error => console.error('Error:', error));\n+\t}\n+\n+\tasync function postData(url = '', data = {}) {\n+\t\ttry{\n+\t\t\tabortCtrl = new AbortController();\n+\n+\t\t\tconst response = await fetch(url, {\n+\t\t\t\tmethod: 'POST',\n+\t\t\t\theaders: {\n+\t\t\t\t\t'Content-Type': 'application/json'\n+\t\t\t\t},\n+\t\t\t\tbody: JSON.stringify(data),\n+\t\t\t\tsignal: abortCtrl.signal\n+\t\t\t});\n+\t\t\treturn response.body;\n+\n+\t\t} catch(error){\n+\t\t\tconsole.log('Fetching Aborted $error');\n+\t\t}\n+\t}\n+\n+\tasync function processStream(stream) {\n+\t\t// if fetching is aborted before it's complete the stream will be empty.\n+\t\t// stream should be checked to avoid throwing error.\n+\t\tif (!stream) {\n+\t\t\tisReceivingData = false;\n+\t\t\tsendicon.setAttribute('d', startIcon)\n+\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tconst reader = stream.getReader();\n+\n+\t\tconst messagesElement = document.querySelector(\".messages\");\n+\t\tconst messageTemplate = document.querySelector('#message');\n+\t\tconst messageElement = messageTemplate.content.cloneNode(true);\n+\n+\t\tmessageElement.querySelector(\".message-text\").innerHTML = \"\";\n+\t\tmessageElement.querySelector(\".message\").dataset.role = \"assistant\";\n+\t\tmessagesElement.appendChild(messageElement);\n+\n+\t\tconst messageText = messageElement.querySelector(\".message-text\");\n+\n+\t\t// Throws error if the read operation on the response body stream is aborted while the reader.read() operation is still active.\n+\t\t// Try Catch block will handle the error.\n+\t\ttry {\n+\t\t\t//NOTE: Niklas Wode\n+\t\t\tlet incompleteSlice = \"\";\n+\t\t\twhile (true) {\n+\t\t\t\tconst { done, value } = await reader.read();\n+\n+\t\t\t\tif (done) {\n+\t\t\t\t\tconsole.log('Stream closed.');\n+\t\t\t\t\tdocument.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML = document.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML;\n+\n+\t\t\t\t\tisReceivingData = false;\n+\t\t\t\t\tsendicon.setAttribute('d', startIcon)\n+\n+\t\t\t\t\tShowCopyButton();\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\n+\t\t\t\t//Parsing error from json \"Chunks\" corrected\n+\t\t\t\tlet decodedData = new TextDecoder().decode(value);\n+\t\t\t\tdecodedData = incompleteSlice + decodedData;\n+\n+\t\t\t\tconst delimiter = '\\n\\n';\n+\t\t\t\tconst delimiterPosition = decodedData.lastIndexOf(delimiter);\n+\t\t\t\tif (delimiterPosition > -1) {\n+\t\t\t\t\tincompleteSlice = decodedData.substring(delimiterPosition + delimiter.length);\n+\t\t\t\t\tdecodedData = decodedData.substring(0,delimiterPosition + delimiter.length);\n+\t\t\t\t} else {\n+\t\t\t\t\tincompleteSlice = decodedData;\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\t// end of inserted code\n+\n+\t\t\t\tlet chunks = decodedData.split(\"data: \");\n+\t\t\t\tchunks.forEach((chunk, index) => {\n+\n+\t\t\t\t\tif(!isJSON(chunk)){\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t\tif(chunk.indexOf('finish_reason\":\"stop\"') > 0) return false;\n+\t\t\t\t\tif(chunk.indexOf('DONE') > 0) return false;\n+\t\t\t\t\tif(chunk.indexOf('role') > 0) return false;\n+\t\t\t\t\tif(chunk.length == 0) return false;\n+\n+\t\t\t\t\tdocument.querySelector(\".message:last-child\").querySelector(\".message-text\").innerHTML =  FormatChunk(JSON.parse(chunk)[\"choices\"][0][\"delta\"].content);\n+\n+\t\t\t\t})\n+\n+\t\t\t\tFormatMathFormulas();\n+\n+\t\t\t\thljs.highlightAll();\n+\t\t\t\tscrollToLast();\n+\t\t\t}\n+\t\t} catch (error) {\n+\t\t\t// Check if the error is due to aborting the request\n+\t\t\tif (error.name == 'AbortError') {\n+\t\t\t\tconsole.log('Fetch aborted while reading response body stream.');\n+\t\t\t} else {\n+\t\t\t\tconsole.error('Error:', error);\n+\t\t\t}\n+\t\t\tisReceivingData = false;\n+\t\t\tsendicon.setAttribute('d', startIcon);\n+\t\t\tShowCopyButton();\n+\t\t}\n+\t}\n+\n+\t//MESSAGE SENT FROM STREAM MANAGER...\n+\tfunction addMessage(message){\n+\t\tconst messagesElement = document.querySelector(\".messages\");\n+\t\tconst messageTemplate = document.querySelector('#message');\n+\t\tconst inputField = document.querySelector(\".input-field\");\n+\t\tconst messageElement = messageTemplate.content.cloneNode(true);\n+\n+\t\tmessageElement.querySelector(\".message-text\").innerHTML = message.content;\n+\t\tmessageElement.querySelector(\".message\").dataset.role = message.role;\n+\n+\t\tif(message.role == \"assistant\"){\n+\t\t\tmessageElement.querySelector(\".message-icon\").textContent = \"AI\";\n+\t\t}else{\n+\t\t\tmessageElement.querySelector(\".message-icon\").textContent = '<?= htmlspecialchars($_SESSION['username']) ?>';\n+\t\t\tmessageElement.querySelector(\".message\").classList.add(\"me\");\n+\t\t}\n+\n+\t\tmessagesElement.appendChild(messageElement);\n+\n+\t\tscrollToLast(true);\n+\t\treturn messageElement;\n+\t}\n+\n+\t//#endregion\n+\n+\n+\n+\t//#region Copy Button\n+\t//----------------------------------------------------------------------------------------//\n+\tfunction ShowCopyButton() {\n+\t\tconst copyPanel = document.querySelector(\".message:last-child\").querySelector(\".message-copypanel\");\n+\t\tif (copyPanel !== null) {\n+\t\t\tcopyPanel.style.display = \"flex\";\n+\t\t\tconst copyButton = copyPanel.querySelector(\".message-copyButton\");\n+\t\t\tcopyButton.dataset.clicked = \"false\"; // Initialize the clicked state for this button\n+\t\t\tAddEventListenersToCopyButton(copyButton);\n+\t\t}\n+\t\tAddCodeCopyButton();\n+\t}\n+\n+\tfunction AddCodeCopyButton(){\n+\t\tconst lastMsg = document.querySelector(\".message:last-child\").querySelector(\".message-text\");\n+\t\tconst codes = lastMsg.querySelectorAll('pre');\n+\n+\t\tfor (let i = 0; i < codes.length; i++) {\n+\t\t\tconst code = codes[i];\n+\t\t\tif (!code.querySelector('.code-copypanel')) {\n+\t\t\t\tconst copyPanel = document.createElement('div');\n+\t\t\t\tcopyPanel.classList.add('code-copypanel');\n+\n+\t\t\t\tconst copyButton = document.createElement('div');\n+\t\t\t\tcopyButton.classList.add('code-copyButton', 'ignoreTextCopy');\n+\t\t\t\tcopyButton.innerHTML = `\n+\t\t\t\t\t<svg viewBox=\"0 0 24 24\">\n+\t\t\t\t\t\t<path d=\"M 17.01 14.91 H 8.47 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 2.8 c 0 -0.42 0.35 -0.7 0.7 -0.7 H 14.7 l 3.01 3.01 v 9.03 C 17.71 14.56 17.43 14.91 17.01 14.91 z M 8.47 17.01 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 V 5.11 c 0 -0.56 -0.21 -1.12 -0.63 -1.47 l -3.01 -3.01 C 15.82 0.21 15.26 0 14.7 0 h -6.23 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 C 5.67 15.75 6.93 17.01 8.47 17.01 z M 2.8 5.67 c -1.54 0 -2.8 1.26 -2.8 2.8 v 11.34 c 0 1.54 1.26 2.8 2.8 2.8 h 8.47 c 1.54 0 2.8 -1.26 2.8 -2.8 v -1.4 h -2.1 v 1.4 c 0 0.42 -0.35 0.7 -0.7 0.7 H 2.8 c -0.42 0 -0.7 -0.35 -0.7 -0.7 V 8.47 c 0 -0.42 0.35 -0.7 0.7 -0.7 h 1.4 v -2.1 H 2.8 z\" />\n+\t\t\t\t\t</svg>\n+\t\t\t\t\t<span class=\"tooltiptext\">Copy</span>`;\n+\n+\t\t\t\tcopyButton.dataset.clicked = \"false\";\n+\t\t\t\tAddEventListenersToCopyButton(copyButton);\n+\t\t\t\tcopyPanel.appendChild(copyButton);\n+\t\t\t\tcode.appendChild(copyPanel);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\n+\t//Event listeners help control the tooltip box transitions\n+\tfunction AddEventListenersToCopyButton(TargetButton){\n+\t\tlet activationTimer;\n+\t\tTargetButton.addEventListener(\"mouseenter\", function() {\n+\t\t\tactivationTimer = setTimeout(function() {\n+\t\t\t\tTargetButton.querySelector(\".tooltiptext\").classList.add(\"active\");\n+\t\t\t}, 1000);\n+\t\t});\n+\n+\t\tTargetButton.addEventListener(\"mouseleave\", function () {\n+\t\t\tclearTimeout(activationTimer);\n+\t\t\tif (TargetButton.dataset.clicked !== \"true\") { // Check the clicked state of this button\n+\t\t\t\tTargetButton.querySelector(\".tooltiptext\").classList.remove(\"active\");\n+\t\t\t}\n+\t\t});\n+\n+\t\tTargetButton.addEventListener(\"mousedown\", function () {\n+\t\t\tTargetButton.dataset.clicked = \"true\"; // Set the clicked state of this button to true\n+\t\t\tCopyContentToClipboard(TargetButton);\n+\t\t});\n+\n+\t\tTargetButton.addEventListener(\"mouseup\", function() {\n+\t\t\tCopyBtnRelease(TargetButton);\n+\t\t});\n+\t}\n+\n+\t// Copies content of the message box without the css attributes\n+\tfunction CopyContentToClipboard(target) {\n+\n+\t\tconst parentElement = target.parentElement.previousElementSibling;\n+\t\tconst clone = parentElement.cloneNode(true);\n+\n+\t\t// Remove elements with the \"ignoreTextCopy\" class from the clone (copy buttons for instance)\n+\t\tclone.querySelectorAll('.ignoreTextCopy').forEach(element => {\n+\t\t\telement.parentNode.removeChild(element);\n+\t\t});\n+\n+\t\t    // Convert tables to plain text\n+\t\t\tclone.querySelectorAll('table').forEach(table => {\n+\t\t\t\tconst plainTextTable = tableToPlainText(table);\n+\t\t\t\tconst textNode = document.createTextNode(plainTextTable);\n+\t\t\t\ttable.parentNode.replaceChild(textNode, table);\n+\t\t\t});\n+\n+\n+\t\t// Get the text content of the modified clone\n+\t\tconst msgTxt = clone.textContent.trim();\n+\n+\t\tconst trimmedMsg = msgTxt.trim();\n+\t\tnavigator.clipboard.writeText(trimmedMsg);\n+\n+\t\ttarget.style.opacity = \"1\";\n+\t\ttarget.style.scale = \"1.1\";\n+\t\ttarget.querySelector(\".tooltiptext\").classList.add(\"active\");\n+\t\ttarget.querySelector(\".tooltiptext\").innerHTML = '<?php echo $translation[\"copiedToolTip\"]; ?>'\n+\t}\n+\n+\tfunction CopyBtnRelease(target) {\n+\t\ttarget.style.scale = \"1\";\n+\n+\t\tsetTimeout(function () {\n+\t\t\ttarget.style.opacity = \"0.5\";\n+\n+\t\t\ttarget.querySelector(\".tooltiptext\").classList.remove(\"active\");\n+\t\t\ttarget.querySelector(\".tooltiptext\").innerHTML = '<?php echo $translation[\"copyTooTip\"]; ?>';\n+\t\t\ttarget.dataset.clicked = \"false\"; // Reset the clicked state of this button\n+\t\t}, 2000);\n+\t}\n+\n+\t// Helper function to convert HTML table to plain text\n+\tfunction tableToPlainText(table) {\n+\t\tlet plainText = '';\n+\t\ttable.querySelectorAll('tr').forEach(row => {\n+\t\t\trow.querySelectorAll('th, td').forEach(cell => {\n+\t\t\t\tplainText += cell.textContent.trim() + '\\t';\n+\t\t\t});\n+\t\t\tplainText += '\\n';\n+\t\t});\n+\t\treturn plainText;\n+\t}\n+\t//#endregion\n+\n+\t//#region USER FEEDBACK\n+\t//----------------------------------------------------------------------------------------//\n+\t//save users feedback on server.\n+\t//other users can up or downvote othes feedback\n+\tasync function send_feedback(){\n+\t\tconst messagesElement = document.querySelector(\".messages\");\n+\t\tconst inputField = document.querySelector(\".userpost-field\");\n+\n+\t\tif(inputField.value == ''){\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tlet message = {};\n+\t\tmessage.role = '<?= htmlspecialchars($_SESSION['username']) ?>';\n+\t\tmessage.content = inputField.value.trim();\n+\n+\t\t// const feedback_send = \"../private/app/php/feedback_send.php\";\n+\t\tconst feedback_send = \"/api/feedback_send\"\n+\t\tconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n+\n+\t\tfetch(feedback_send, {\n+\t\t\tmethod: 'POST',\n+\t\t\theaders: {\n+\t\t\t\t'Content-Type': 'application/json', // Set content type to application/json\n+\t\t\t\t'X-CSRF-TOKEN': csrfToken, // Include CSRF token in the request headers\n+\t\t\t},\n+\t\t\tbody: JSON.stringify({message: message}),\n+\t\t})\n+\t\t.then(response => response.json())\n+\t\t.then(data => {\n+\t\t\t//UPDATE NEW TOKEN\n+\t\t\tdocument.querySelector('meta[name=\"csrf-token\"]').setAttribute('content', data.csrf_token);\n+\n+\t\t\tif(data.success){\n+\t\t\t\tload(document.querySelector(\"#feedback\"), 'feedback_loader.php');\n+\t\t\t\tinputField.value = \"\";\n+\t\t\t}\n+\t\t})\n+\t\t.catch(error => console.error(error));\n+\t}\n+\n+\tfunction SubmitVote(element, action) {\n+\t\tif (localStorage.getItem(element.dataset.id)) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tconst pureId = element.dataset.id.replace('.json', ''); // assuming all IDs end with '.json'\n+\t\tconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n+\t\tconst submit_vote = \"/api/submit_vote\";\n+\n+\t\tfetch(submit_vote, {\n+\t\t\tmethod: 'POST',\n+\t\t\theaders: {\n+\t\t\t\t'Content-Type': 'application/json', // Set content type to application/json\n+\t\t\t\t'X-CSRF-TOKEN': csrfToken, // Include CSRF token in the request headers\n+\t\t\t},\n+\t\t\tbody: JSON.stringify({ id: pureId, action: action }), // Send the action and CSRF token in the request body\n+\t\t})\n+\t\t.then(response => {\n+\t\t\tif (!response.ok) {\n+\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n+\t\t\t}\n+\t\t\treturn response.json();\n+\t\t})\n+\t\t.then(data => {\n+\n+\t\t\tdocument.querySelector('meta[name=\"csrf-token\"]').setAttribute('content', data.csrf_token);\n+\t\t\tif(data.success){\n+\n+\t\t\t\t// Update the UI accordingly\n+\t\t\t\tif (action === \"upvote\") {\n+\t\t\t\t\telement.querySelector(\"span\").textContent = data.content.up || 0; // Assuming 'data.up' contains the updated upvote count\n+\t\t\t\t}\n+\t\t\t\tif (action === \"downvote\") {\n+\t\t\t\t\telement.querySelector(\"span\").textContent = data.content.down || 0; // Assuming 'data.down' contains the updated downvote count\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\t\t.catch(error => {\n+\t\t\tconsole.error('Fetch error:', error);\n+\t\t});\n+\t\tlocalStorage.setItem(element.dataset.id, \"true\");\n+\n+\t\tvoteHover();\n+\t}\n+\n+\tasync function voteHover(){\n+\t\tlet messages = document.querySelectorAll(\".message\");\n+\n+\t\tmessages.forEach((message)=>{\n+\t\t\tlet voteButtons = message.querySelectorAll(\".vote\")\n+\n+\t\t\tvoteButtons.forEach((voteButton)=>{\n+\t\t\t\tif(localStorage.getItem(voteButton.dataset.id)){\n+\t\t\t\t\tvoteButton.classList.remove(\"vote-hover\");\n+\t\t\t\t}else{\n+\t\t\t\t\tvoteButton.classList.add(\"vote-hover\");\n+\t\t\t\t}\n+\t\t\t})\n+\t\t})\n+\t}\n+\t//#endregion\n+</script>"
        },
        {
          "filename": "private/pages/login.php",
          "status": "added",
          "additions": 190,
          "deletions": 0,
          "patch": "@@ -0,0 +1,190 @@\n+<?php\n+\t// Secure session (optional, depends on the application's specific needs)\n+\tini_set('session.cookie_httponly', 1);\n+\tini_set('session.use_only_cookies', 1);\n+\tif(isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') {\n+\t\tini_set('session.cookie_secure', 1);\n+\t}\n+\tsession_set_cookie_params([\n+\t\t'secure' => true,     // cookies are sent over secure connections only\n+\t\t'httponly' => true,   // cookies are accessible only through the HTTP protocol\n+\t]);\n+\n+\tsession_start();\n+\n+\trequire_once BOOTSTRAP_PATH;\n+\trequire_once LIBRARY_PATH . 'csrf.php';\n+\trequire_once LIBRARY_PATH . 'auth.php';\n+\trequire_once LIBRARY_PATH . 'language_controller.php';\n+\n+\n+\t// Generate CSRF Token\n+\tif(!isset($_SESSION['csrf_token'])){\n+\t\tgenerate_csrf_token();\n+\t}\n+\t// Update Translation Language\n+\tif(!isset($_SESSION['translation'])){\n+\t\tsetLanguage();\n+\t}\n+\t$translation = $_SESSION['translation'];\n+\n+\t// Check if the user is already logged in\n+\tif (isset($_SESSION['username'])) {\n+\t\theader(\"Location: /interface\");\n+\t\texit;\n+\t}\n+\n+?>\n+\n+<!DOCTYPE html>\n+<html lang=\"en\" >\n+\t<head>\n+\t\t<meta charset=\"UTF-8\">\n+\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no\" />\n+\n+\t\t<!-- SAVE CSRF TOKEN ON THE CLIENT SIDE. -->\n+\t\t<?php if (isset($_SESSION['csrf_token'])) : ?>\n+\t\t\t<meta name=\"csrf-token\" content=\"<?php echo $_SESSION['csrf_token']; error_log($_SESSION['csrf_token']);?>\">\n+\t\t<?php endif; ?>\n+\t\t\n+\t\t<title>HAWKI</title>\n+\n+\t\t<link rel=\"stylesheet\" href=\"/public/style/style.css\">\n+\t\t<link rel=\"stylesheet\" href=\"/public/style/login_style.css\">\n+\t\t<link rel=\"stylesheet\" href=\"/public/style/settings_style.css\">\n+\t\t\n+\t\t<script src=\"/public/js/scripts.js\"></script>\n+\t\t\n+\t\t<!-- TO PREVENT FOUC WHEN RELOADING THE PAGE IN DARK MODE\n+\t\t\tTHE SETTINGS AND IT'S START FUNCTIONS SHOULD BE INCLUDED IN THE HEADER BEFORE THE PAGE IS LOADED -->\n+\t\t<?php include PRIVATE_PATH . '/views/settings.php'; ?>\n+\t\t<script>\n+\t\t\tSwitchDarkMode(false);\n+\t\t\tUpdateSettingsLanguage(`<?php echo $_SESSION['language'] ?>`);\n+\t\t</script>\n+\n+\t</head>\n+\t<body>\n+\t\t<div class=\"wrapper\">\n+\t\t\t<div class= \"sidebar\">\n+\t\t\t\t\n+\t\t\t\t<div class=\"loginPanel\">\n+\t\t\t\t\t<img id=\"HAWK_logo\" src=\"/public/img/logo.svg\" alt=\"\">\n+\t\t\t\t\t<h3><?php echo $translation[\"welcomeBackTitle\"]; ?></h3>\n+\t\t\t\t\t<?php\n+\t\t\t\t\t\tif (file_exists(ENV_FILE_PATH)){\n+\t\t\t\t\t\t\t$env = parse_ini_file(ENV_FILE_PATH);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\t$login_available = false;\n+\t\t\t\t\t\tif ((isset($env) ? $env[\"Authentication\"] : getenv(\"Authentication\")) == \"OIDC\") {\n+\t\t\t\t\t\t\t// Open ID Connect\n+\t\t\t\t\t\t\t$login_available = true;\n+\t\t\t\t\t\t\techo\n+\t\t\t\t\t\t\t\"<form action='oidc_login.php' class='column' method='post'>\n+\t\t\t\t\t\t\t\t<button>\" . $translation['Login'] . \"</button>\n+\t\t\t\t\t\t\t</form>\";\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif ((isset($env) ? $env[\"Authentication\"] : getenv(\"Authentication\")) == \"LDAP\") {\n+\t\t\t\t\t\t\t$login_available = true;\n+\t\t\t\t\t\t\techo\n+\t\t\t\t\t\t\t\t'<form class=\"column\" id=\"loginForm\">\n+\t\t\t\t\t\t\t\t\t<label for=\"account\">' . $translation[\"username\"] . '</label>\n+\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"account\" id=\"account\">\n+\t\t\t\t\t\t\t\t\t<label for=\"password\">' . $translation[\"password\"] . '</label>\n+\t\t\t\t\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\">\n+\t\t\t\t\t\t\t\t</form>\n+\t\t\t\t\t\t\t\t<div id=\"login-Button-panel\">\n+\t\t\t\t\t\t\t\t\t<div id=\"login-message\"></div>\n+\t\t\t\t\t\t\t\t\t<button id=\"loginButton\" type=\"button\" onclick=\"LoginLDAP()\">' . $translation['Login'] .'</button>\n+\t\t\t\t\t\t\t\t</div>';\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif ((isset($env) ? $env[\"Authentication\"] : getenv(\"Authentication\")) == \"Shibboleth\") {\n+\t\t\t\t\t\t\t$login_available = true;\n+\t\t\t\t\t\t\techo\n+\t\t\t\t\t\t\t\t'<form class=\"column\" method = \"post\" >\n+\t\t\t\t\t\t\t\t\t<button type=\"submit\" name=\"submit\">' . $translation['Login'] . '</button >\n+\t\t\t\t\t\t\t\t</form>';\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (!$login_available) {\n+\t\t\t\t\t\t\techo 'No authentication method defined';\n+\t\t\t\t\t\t\tdie;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t?>\n+\t\t\t\t</div>\n+\n+\t\t\t\t<div class=\"footerPanel\">\n+\t\t\t\t\t<div class=\"settings-btn\" onclick=\"toggleSettingsPanel(true)\">\n+\t\t\t\t\t\t<svg  viewBox=\"0 0 24 24\">\n+\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 8.00002C9.79085 8.00002 7.99999 9.79088 7.99999 12C7.99999 14.2092 9.79085 16 12 16C14.2091 16 16 14.2092 16 12C16 9.79088 14.2091 8.00002 12 8.00002ZM9.99999 12C9.99999 10.8955 10.8954 10 12 10C13.1046 10 14 10.8955 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 9.99999 13.1046 9.99999 12Z\"/>\n+\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 8.00002C9.79085 8.00002 7.99999 9.79088 7.99999 12C7.99999 14.2092 9.79085 16 12 16C14.2091 16 16 14.2092 16 12C16 9.79088 14.2091 8.00002 12 8.00002ZM9.99999 12C9.99999 10.8955 10.8954 10 12 10C13.1046 10 14 10.8955 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 9.99999 13.1046 9.99999 12Z\"/>\n+\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7673 1.01709C10.9925 0.999829 11.2454 0.99993 11.4516 1.00001L12.5484 1.00001C12.7546 0.99993 13.0075 0.999829 13.2327 1.01709C13.4989 1.03749 13.8678 1.08936 14.2634 1.26937C14.7635 1.49689 15.1915 1.85736 15.5007 2.31147C15.7454 2.67075 15.8592 3.0255 15.9246 3.2843C15.9799 3.50334 16.0228 3.75249 16.0577 3.9557L16.1993 4.77635L16.2021 4.77788C16.2369 4.79712 16.2715 4.81659 16.306 4.8363L16.3086 4.83774L17.2455 4.49865C17.4356 4.42978 17.6693 4.34509 17.8835 4.28543C18.1371 4.2148 18.4954 4.13889 18.9216 4.17026C19.4614 4.20998 19.9803 4.39497 20.4235 4.70563C20.7734 4.95095 21.0029 5.23636 21.1546 5.4515C21.2829 5.63326 21.4103 5.84671 21.514 6.02029L22.0158 6.86003C22.1256 7.04345 22.2594 7.26713 22.3627 7.47527C22.4843 7.7203 22.6328 8.07474 22.6777 8.52067C22.7341 9.08222 22.6311 9.64831 22.3803 10.1539C22.1811 10.5554 21.9171 10.8347 21.7169 11.0212C21.5469 11.1795 21.3428 11.3417 21.1755 11.4746L20.5 12L21.1755 12.5254C21.3428 12.6584 21.5469 12.8205 21.7169 12.9789C21.9171 13.1653 22.1811 13.4446 22.3802 13.8461C22.631 14.3517 22.7341 14.9178 22.6776 15.4794C22.6328 15.9253 22.4842 16.2797 22.3626 16.5248C22.2593 16.7329 22.1255 16.9566 22.0158 17.14L21.5138 17.9799C21.4102 18.1535 21.2828 18.3668 21.1546 18.5485C21.0028 18.7637 20.7734 19.0491 20.4234 19.2944C19.9803 19.6051 19.4613 19.7901 18.9216 19.8298C18.4954 19.8612 18.1371 19.7852 17.8835 19.7146C17.6692 19.6549 17.4355 19.5703 17.2454 19.5014L16.3085 19.1623L16.306 19.1638C16.2715 19.1835 16.2369 19.2029 16.2021 19.2222L16.1993 19.2237L16.0577 20.0443C16.0228 20.2475 15.9799 20.4967 15.9246 20.7157C15.8592 20.9745 15.7454 21.3293 15.5007 21.6886C15.1915 22.1427 14.7635 22.5032 14.2634 22.7307C13.8678 22.9107 13.4989 22.9626 13.2327 22.983C13.0074 23.0002 12.7546 23.0001 12.5484 23H11.4516C11.2454 23.0001 10.9925 23.0002 10.7673 22.983C10.5011 22.9626 10.1322 22.9107 9.73655 22.7307C9.23648 22.5032 8.80849 22.1427 8.49926 21.6886C8.25461 21.3293 8.14077 20.9745 8.07542 20.7157C8.02011 20.4967 7.97723 20.2475 7.94225 20.0443L7.80068 19.2237L7.79791 19.2222C7.7631 19.2029 7.72845 19.1835 7.69396 19.1637L7.69142 19.1623L6.75458 19.5014C6.5645 19.5702 6.33078 19.6549 6.11651 19.7146C5.86288 19.7852 5.50463 19.8611 5.07841 19.8298C4.53866 19.7901 4.01971 19.6051 3.57654 19.2944C3.2266 19.0491 2.99714 18.7637 2.84539 18.5485C2.71718 18.3668 2.58974 18.1534 2.4861 17.9798L1.98418 17.14C1.87447 16.9566 1.74067 16.7329 1.63737 16.5248C1.51575 16.2797 1.36719 15.9253 1.32235 15.4794C1.26588 14.9178 1.36897 14.3517 1.61976 13.8461C1.81892 13.4446 2.08289 13.1653 2.28308 12.9789C2.45312 12.8205 2.65717 12.6584 2.82449 12.5254L3.47844 12.0054V11.9947L2.82445 11.4746C2.65712 11.3417 2.45308 11.1795 2.28304 11.0212C2.08285 10.8347 1.81888 10.5554 1.61972 10.1539C1.36893 9.64832 1.26584 9.08224 1.3223 8.52069C1.36714 8.07476 1.51571 7.72032 1.63732 7.47528C1.74062 7.26715 1.87443 7.04347 1.98414 6.86005L2.48605 6.02026C2.58969 5.84669 2.71714 5.63326 2.84534 5.45151C2.9971 5.23637 3.22655 4.95096 3.5765 4.70565C4.01966 4.39498 4.53862 4.20999 5.07837 4.17027C5.50458 4.1389 5.86284 4.21481 6.11646 4.28544C6.33072 4.34511 6.56444 4.4298 6.75451 4.49867L7.69141 4.83775L7.69394 4.8363C7.72844 4.8166 7.7631 4.79712 7.79791 4.77788L7.80068 4.77635L7.94225 3.95571C7.97723 3.7525 8.02011 3.50334 8.07542 3.2843C8.14077 3.0255 8.25461 2.67075 8.49926 2.31147C8.80849 1.85736 9.23648 1.49689 9.73655 1.26937C10.1322 1.08936 10.5011 1.03749 10.7673 1.01709ZM14.0938 4.3363C14.011 3.85634 13.9696 3.61637 13.8476 3.43717C13.7445 3.2858 13.6019 3.16564 13.4352 3.0898C13.2378 3.00002 12.9943 3.00002 12.5073 3.00002H11.4927C11.0057 3.00002 10.7621 3.00002 10.5648 3.0898C10.3981 3.16564 10.2555 3.2858 10.1524 3.43717C10.0304 3.61637 9.98895 3.85634 9.90615 4.3363L9.75012 5.24064C9.69445 5.56333 9.66662 5.72467 9.60765 5.84869C9.54975 5.97047 9.50241 6.03703 9.40636 6.13166C9.30853 6.22804 9.12753 6.3281 8.76554 6.52822C8.73884 6.54298 8.71227 6.55791 8.68582 6.57302C8.33956 6.77078 8.16643 6.86966 8.03785 6.90314C7.91158 6.93602 7.83293 6.94279 7.70289 6.93196C7.57049 6.92094 7.42216 6.86726 7.12551 6.7599L6.11194 6.39308C5.66271 6.2305 5.43809 6.14921 5.22515 6.16488C5.04524 6.17811 4.87225 6.23978 4.72453 6.34333C4.5497 6.46589 4.42715 6.67094 4.18206 7.08103L3.72269 7.84965C3.46394 8.2826 3.33456 8.49907 3.31227 8.72078C3.29345 8.90796 3.32781 9.09665 3.41141 9.26519C3.51042 9.4648 3.7078 9.62177 4.10256 9.9357L4.82745 10.5122C5.07927 10.7124 5.20518 10.8126 5.28411 10.9199C5.36944 11.036 5.40583 11.1114 5.44354 11.2504C5.47844 11.379 5.47844 11.586 5.47844 12C5.47844 12.414 5.47844 12.621 5.44354 12.7497C5.40582 12.8887 5.36944 12.9641 5.28413 13.0801C5.20518 13.1875 5.07927 13.2876 4.82743 13.4879L4.10261 14.0643C3.70785 14.3783 3.51047 14.5352 3.41145 14.7349C3.32785 14.9034 3.29349 15.0921 3.31231 15.2793C3.33461 15.501 3.46398 15.7174 3.72273 16.1504L4.1821 16.919C4.4272 17.3291 4.54974 17.5342 4.72457 17.6567C4.8723 17.7603 5.04528 17.8219 5.2252 17.8352C5.43813 17.8508 5.66275 17.7695 6.11199 17.607L7.12553 17.2402C7.42216 17.1328 7.5705 17.0791 7.7029 17.0681C7.83294 17.0573 7.91159 17.064 8.03786 17.0969C8.16644 17.1304 8.33956 17.2293 8.68582 17.427C8.71228 17.4421 8.73885 17.4571 8.76554 17.4718C9.12753 17.6719 9.30853 17.772 9.40635 17.8684C9.50241 17.963 9.54975 18.0296 9.60765 18.1514C9.66662 18.2754 9.69445 18.4367 9.75012 18.7594L9.90615 19.6637C9.98895 20.1437 10.0304 20.3837 10.1524 20.5629C10.2555 20.7142 10.3981 20.8344 10.5648 20.9102C10.7621 21 11.0057 21 11.4927 21H12.5073C12.9943 21 13.2378 21 13.4352 20.9102C13.6019 20.8344 13.7445 20.7142 13.8476 20.5629C13.9696 20.3837 14.011 20.1437 14.0938 19.6637L14.2499 18.7594C14.3055 18.4367 14.3334 18.2754 14.3923 18.1514C14.4502 18.0296 14.4976 17.963 14.5936 17.8684C14.6915 17.772 14.8725 17.6719 15.2344 17.4718C15.2611 17.4571 15.2877 17.4421 15.3141 17.427C15.6604 17.2293 15.8335 17.1304 15.9621 17.0969C16.0884 17.064 16.167 17.0573 16.2971 17.0681C16.4295 17.0791 16.5778 17.1328 16.8744 17.2402L17.888 17.607C18.3372 17.7696 18.5619 17.8509 18.7748 17.8352C18.9547 17.8219 19.1277 17.7603 19.2754 17.6567C19.4502 17.5342 19.5728 17.3291 19.8179 16.919L20.2773 16.1504C20.536 15.7175 20.6654 15.501 20.6877 15.2793C20.7065 15.0921 20.6721 14.9034 20.5885 14.7349C20.4895 14.5353 20.2921 14.3783 19.8974 14.0643L19.1726 13.4879C18.9207 13.2876 18.7948 13.1875 18.7159 13.0801C18.6306 12.9641 18.5942 12.8887 18.5564 12.7497C18.5215 12.6211 18.5215 12.414 18.5215 12C18.5215 11.586 18.5215 11.379 18.5564 11.2504C18.5942 11.1114 18.6306 11.036 18.7159 10.9199C18.7948 10.8126 18.9207 10.7124 19.1725 10.5122L19.8974 9.9357C20.2922 9.62176 20.4896 9.46479 20.5886 9.26517C20.6722 9.09664 20.7065 8.90795 20.6877 8.72076C20.6654 8.49906 20.5361 8.28259 20.2773 7.84964L19.8179 7.08102C19.5728 6.67093 19.4503 6.46588 19.2755 6.34332C19.1277 6.23977 18.9548 6.1781 18.7748 6.16486C18.5619 6.14919 18.3373 6.23048 17.888 6.39307L16.8745 6.75989C16.5778 6.86725 16.4295 6.92093 16.2971 6.93195C16.167 6.94278 16.0884 6.93601 15.9621 6.90313C15.8335 6.86965 15.6604 6.77077 15.3142 6.57302C15.2877 6.55791 15.2611 6.54298 15.2345 6.52822C14.8725 6.3281 14.6915 6.22804 14.5936 6.13166C14.4976 6.03703 14.4502 5.97047 14.3923 5.84869C14.3334 5.72467 14.3055 5.56332 14.2499 5.24064L14.0938 4.3363Z\"/>\n+\t\t\t\t\t\t</svg>\n+\t\t\t\t\t</div>\n+\n+\t\t\t\t\t<div class=\"impressumPanel\">\n+\t\t\t\t\t\t<a href=\"/dataprotection\" target=\"_blank\"><?php echo $translation[\"dataProtection\"]; ?></a>\n+\t\t\t\t\t\t<a href=\"/impressum\" target=\"_blank\"><?php echo $translation[\"imprint\"]; ?></a>\n+\t\t\t\t\t</div>\n+\t\t\t\t</div>\n+\t\t\t</div>\n+\t\t\t<main>\n+\t\t\t\t<div class=\"infoPanel\">\n+\t\t\t\t\t<div class=\"textPanel\">\n+\t\t\t\t\t\t<div class=\"page\">\n+\t\t\t\t\t\t\t<?php echo $translation['infoPanel_Content']; ?>\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\t\t\t\t\t<form class=\"submitButtonPanel\" target=\"_blank\" action=\"https://elearning.hawk.de/de/ki-studium-und-lehre\">\n+\t\t\t\t\t\t<button type=\"submit\"><?php echo $translation[\"aiOverviewPage\"]; ?></button>\n+\t\t\t\t\t</form>\n+\t\t\t\t</div>\n+\t\t\t\t<div class=\"backgroundImageContainer\">\n+\t\t\t\t\t<video class=\"image_preview_container\" src=\"/public/img/HAWKIBG.m4v\" type=\"video/m4v\" preload = \"none\" autoplay loop muted></video>\n+\t\t\t\t</div>\n+\t\t\t</main>\n+\t\t</div>\n+\t</body>\n+</html>\n+\n+<script>\n+\twindow.addEventListener('DOMContentLoaded', (event) => {\n+\t\tif(window.innerWidth < 480){\n+\t\t\tconst bgVideo = document.querySelector(\".image_preview_container\");\n+\t\t\tbgVideo.remove();\n+\t\t}\n+    });\n+\n+\tfunction LoginLDAP() {\n+\t\tvar formData = new FormData();\n+\t\tformData.append(\"account\", document.getElementById(\"account\").value);\n+\t\tformData.append(\"password\", document.getElementById(\"password\").value);\n+\t\tformData.append(\"csrf_token\", document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'));\n+\n+\t\tconst auth = `<?php LIBRARY_PATH . 'auth.php'; ?>`\n+\n+\t\tfetch(auth, {\n+\t\t\tmethod: \"POST\",\n+\t\t\tbody: formData\n+\t\t\t})\n+\t\t.then(response => {\n+\t\t\tif (!response.ok) {\n+\t\t\t\tthrow new Error(\"Login request failed\");\n+\t\t\t}\n+\t\t\treturn response.json();\n+\t\t\t})\n+\t\t.then(data => {\n+\t\t\t//Update Header CSRF.\n+\t\t\tdocument.querySelector('meta[name=\"csrf-token\"]').setAttribute('content', data.csrf_token);\n+\n+\t\t\tif (data.success) {\n+\t\t\t\twindow.location.href = 'interface';\n+\t\t\t} else {\n+\t\t\t\t// console.log('wrong credentials');\n+\t\t\t\tdocument.getElementById(\"login-message\").textContent = data.message; // Display error message\n+\t\t\t}\n+\t\t\t})\n+\t\t.catch(error => {\n+\t\t\tconsole.error(error);\n+\t\t});\n+\t}\n+</script>"
        },
        {
          "filename": "private/pages/logout.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+<?php\n+    session_start();\n+    // Unset all session variables\n+    $_SESSION = array();\n+    // If it's desired, regenerate session ID (good practice for login but optional on logout)\n+    session_regenerate_id(true);\n+\n+    //Remove PHPSESSID\n+    if (isset($_COOKIE['PHPSESSID'])){\n+        setcookie (\"PHPSESSID\", \"\", time() - 3600);\n+    }\n+\n+    // Finally, destroy the session.\n+    session_destroy();\n+    // Redirect to the login page\n+    header('Location: login');\n+    exit;\n+?>"
        },
        {
          "filename": "private/pages/oidc_login.php",
          "status": "renamed",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -1,12 +1,14 @@\n <?php\n+define('BOOTSTRAP_PATH',  '../bootstrap.php');\n+require_once BOOTSTRAP_PATH;\n \n // use library for dealing with OpenID connect\n require __DIR__ . '/vendor/autoload.php';\n \n use Jumbojett\\OpenIDConnectClient;\n \n-if (file_exists(\".env\")){\n-    $env = parse_ini_file('.env');\n+if (file_exists(ENV_FILE_PATH)){\n+    $env = parse_ini_file(ENV_FILE_PATH);\n }\n \n // Create OpenID connect client\n@@ -35,7 +37,7 @@\n \n $_SESSION['username'] = $oidc->requestUserInfo('email');\n \n-header(\"Location: interface.php\");\n+header(\"Location: /interface\");\n exit();\n \n ?>\n\\ No newline at end of file"
        },
        {
          "filename": "private/pages/oidc_logout.php",
          "status": "renamed",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -1,8 +1,11 @@\n <?php\n session_start();\n session_destroy();\n-if (file_exists(\".env\")){\n-    $env = parse_ini_file('.env');\n+\n+define('BOOTSTRAP_PATH',  '../bootstrap.php');\n+require_once BOOTSTRAP_PATH;\n+if (file_exists(ENV_FILE_PATH)){\n+    $env = parse_ini_file(ENV_FILE_PATH);\n }\n $logout_uri = isset($env) ? $env['OIDC_LOGOUT_URI'] : getenv('OIDC_LOGOUT_URI');\n header(\"Location: $logout_uri\");"
        },
        {
          "filename": "private/resources/feedback/feedback_db.json",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+[\n+\n+]\n\\ No newline at end of file"
        },
        {
          "filename": "private/resources/language/de_DE.json",
          "status": "added",
          "additions": 141,
          "deletions": 0,
          "patch": "@@ -0,0 +1,141 @@\n+{\n+    \"AI_Icon\": \"KI\",\n+    \"AboutHAWKI\": \"\u00dcber HAWKI\",\n+    \"AboutHAWKI_ArianInfo\": \" | Wissenschaftlicher Mitarbeiter | HAWKI\",\n+    \"AboutHAWKI_Info\": \"Das Angebot wurde im Interaction Design Lab der HAWK entwickelt, um allen Hochschulangeh\u00f6rigen die M\u00f6glichkeit zu geben, k\u00fcnstliche Intelligenz in die Arbeitsprozesse zu integrieren und einen Begegnungsraum zu haben, damit sich eventuell neue Arbeitsweisen ergeben und eine hochschulinterne Diskussion \u00fcber den Einsatz von K.I. entstehen kann. Dieses Angebot m\u00f6chte auch didaktisch unterst\u00fctzen, ein Verst\u00e4ndnis f\u00fcr die Wirkungsweise eines solchen Sprachmodells zu entwickeln und gibt daher in den verschiedenen Bereichen auch Hinweise auf gut funktionierende Prompts (Texteingaben). Wir freuen uns \u00fcber konstruktives Feedback, um dieses Angebot entsprechend Ihren Bed\u00fcrfnissen und Erkenntnissen weiterzuentwickeln.\",\n+    \"AboutHAWKI_JonasInfo\": \" | Wissenschaftlicher Mitarbeiter | Hands On\",\n+    \"AboutHAWKI_StefanInfo\": \" | Digital Environments | Interaction Design \",\n+    \"AboutHAWKI_VincentInfo\": \" | Wissenschaftlicher Mitarbeiter | Leitung Interaction Design Lab\",\n+    \"BetaMessage\": \"Betaversion - Modell GPT4-Turbo\",\n+    \"BrainStorming\": \"Ideenfindung\",\n+    \"Caution\": \"Vorsicht\",\n+    \"Caution_Info\": \" - Generiert gelegentlich gef\u00e4hrdende oder voreingenommene Informationen.\",\n+    \"Chat\": \"Chat\",\n+    \"Confirm_Btn\": \"Best\u00e4tigen\",\n+    \"ContextComprehension\": \"Kontextverst\u00e4ndnis\",\n+    \"ContextComprehension_Info\": \" - Merkt sich, was vorab in der Konversation gesagt wurde.\",\n+    \"Conversation\": \"Konversation\",\n+    \"Conversation_Info\": \"Ein Chatbereich wie bei ChatGPT, f\u00fcr einen schnellen Einstieg in jede beliebige Aufgabe.\",\n+    \"Copywriting\": \"CopyWriting\",\n+    \"Creativity\": \"Kreativit\u00e4t\",\n+    \"DataAnalysis\": \"Datenanalyse\",\n+    \"DataSecurity\": \"Datenschutz\",\n+    \"DesignThinking\": \"Design Thinking\",\n+    \"EventManagement\": \"Eventmanagement\",\n+    \"FeedBack\": \"Feedback\",\n+    \"Feedback_Placeholder\": \"Hier k\u00f6nnen Sie Ihr Feedback hinterlassen\",\n+    \"Finance\": \"Finanzen\",\n+    \"Formatting\": \"Formatierung\",\n+    \"Formatting_Info\": \" - Gibt generierte Ergebnisse in gew\u00fcnschter Form aus.\",\n+    \"Gamification\": \"Gamification\",\n+    \"Impressum\": \"Impressum\",\n+    \"Incomplete\": \"Unvollst\u00e4ndig\",\n+    \"Incomplete_Info\": \" - Generiert gelegentlich falsche Informationen.\",\n+    \"InputField_Placeholder\": \"Hier kannst Du deine Anfrage stellen\",\n+    \"InterviewQuestions\": \"Interviewfragen\",\n+    \"Iteration\": \"Iteration\",\n+    \"Iteration_Info\": \" - Erlaubt nachtr\u00e4gliche Korrekturen generierter Ergebnisse.\",\n+    \"LearnSpace\": \"Lernraum \",\n+    \"LearnSpace_Info\": \"Die Lernr\u00e4ume sollen helfen, die verschiedenen Unterst\u00fctzungsm\u00f6glichkeiten zu verstehen und zu lernen, was einen effektiven Prompt ausmacht.\",\n+    \"LearnStrategy\": \"Lernstrategien\",\n+    \"LegalConsultation\": \"Rechtsberatung\",\n+    \"Limitation\": \"Limitierung\",\n+    \"Limitation_Info\": \" - Das Sprachmodell greift ausschlie\u00dflich auf Wissen bis zum Dezember 2023 zu.\",\n+    \"Limitations\": \"Limitationen\",\n+    \"LiteratureSearch\": \"Literaturrecherche\",\n+    \"Login\": \"Anmelden\",\n+    \"LoginFailedMSG\": \"Anmelden fehlgeschlagen\",\n+    \"Marketing\": \"Marketing\",\n+    \"Methodology\": \"Methodologie\",\n+    \"Motivation\": \"Motivation\",\n+    \"Organization\": \"Organisation\",\n+    \"Possibility\": \"M\u00f6glichkeiten\",\n+    \"Programming\": \"Programmierung\",\n+    \"Prototyping\": \"Prototyping\",\n+    \"Research\": \"Forschung\",\n+    \"ResearchSupport\": \"Rechercheunterst\u00fctzung\",\n+    \"ResearchWork\": \"Wiss. Arbeiten\",\n+    \"SignOut\": \"Abmelden\",\n+    \"SocialMedia\": \"Social Media\",\n+    \"StressManagement\": \"Stressmanagement\",\n+    \"System\": \"System\",\n+    \"SystemPromptInfo\": \"Diesen System-Prompt schicken wir im Hintergrund mit, um das Ergebnis zu verbessern.\",\n+    \"System_Content\": \"You are a helpful assistant who works at the University of Applied Arts and Sciences in Lower Saxony.\",\n+    \"Tables\": \"Tabellen\",\n+    \"TimeManagement\": \"Zeitmanagement\",\n+    \"Upgrade\": \"Upgrade auf GPT4\",\n+    \"Upgrade_Content\": \"Die Hochschule stellt Ihnen jetzt GPT4 zur Verf\u00fcgung. Komplexere Eingaben k\u00f6nnen nun besser verstanden und verarbeitet werden. Sie sollten nun pr\u00e4zisere Antworten erhalten. Die Wartezeit auf eine Antwort kann sich geringf\u00fcgig verl\u00e4ngern.\",\n+    \"UsageHint\": \"Nutzungshinweis\",\n+    \"UsageHint_Content\": \"Bitte geben Sie keine personenbezogenen Daten ein. Wir verwenden die API von OpenAI. Das bedeutet, dass die von Ihnen eingegebenen Daten direkt an OpenAI gesendet werden. Es besteht die M\u00f6glichkeit, dass OpenAI diese Daten weiterverwendet.\",\n+    \"VirtualOffice\": \"Virtuelles B\u00fcro\",\n+    \"VirtualOffice_Info\": \"Gespr\u00e4che mit fiktiven Expert*innen, um sich in fachfremden Bereichen einzuarbeiten und gezieltere Anfragen an echte Hochschul-Expert*innen zu stellen.\",\n+    \"WritingHelp\": \"Schreibhilfe\",\n+    \"aiOverviewPage\": \"KI \u00dcbersichtsseite\",\n+    \"confirmButton\": \"Best\u00e4tigen\",\n+    \"copiedToolTip\": \"Kopiert!\",\n+    \"copyTooTip\": \"Kopieren\",\n+    \"copywritingAssistanceRequest\": \"Ich ben\u00f6tige Unterst\u00fctzung beim Copywriting. Ich arbeite an einem Projekt, bei dem es darum geht, eine Nachricht oder Idee klar und ansprechend zu kommunizieren. K\u00f6nntest du mir bitte helfen, meine aktuelle Schreibweise zu bewerten und mir Ratschl\u00e4ge und Tipps zur Verbesserung meines Copywritings geben? Ich suche auch nach Strategien, um meine Zielgruppe besser zu verstehen und eine ansprechende Sprache zu verwenden, um meine Botschaft zu vermitteln.\",\n+    \"copywritingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"dataAnalysisAssistanceRequest\": \"Ich habe k\u00fcrzlich eine umfangreiche Datensammlung durchgef\u00fchrt und suche nun nach Unterst\u00fctzung bei der Analyse der Daten. Die Datensammlung umfasst [Beschreibung der Daten], und ich m\u00f6chte [Ziel der Analyse]. K\u00f6nntest du mir bitte dabei helfen, die Daten zu analysieren und mir Ratschl\u00e4ge zur Interpretation der Ergebnisse zu geben?\",\n+    \"dataProtection\": \"Datenschutz\",\n+    \"designThinkingAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung beim Design Thinking. Ich arbeite an einem Projekt, bei dem es darum geht, eine kreative L\u00f6sung f\u00fcr ein Problem zu finden. K\u00f6nntest du mir bitte helfen, den Design Thinking Prozess besser zu verstehen und mir Ratschl\u00e4ge und Tipps zur Anwendung des Prozesses in meinem Projekt geben? Ich suche auch nach Strategien, um meine Ideen zu prototypisieren und zu testen, um sicherzustellen, dass meine L\u00f6sung f\u00fcr das Problem erfolgreich ist. K\u00f6nntest du mir bitte auch dabei helfen, eine Feedbackschleife einzurichten, um meine L\u00f6sung iterativ zu verbessern?\",\n+    \"designThinkingExpertiseMessage\": \"You are a helpful assistant working at a University in Germany and you are an expert in the field of creativity.\",\n+    \"dialogueWithFinanceAdvisor\": \"Du unterh\u00e4ltst Dich jetzt mit Julia, einer fiktiven Finanzberaterin. Was m\u00f6chtest Du \u00fcber Finanzen wissen?\",\n+    \"eventManagementAssistanceRequest\": \"Ich plane ein Event [Beschreibung des Events] und suche nach Unterst\u00fctzung bei der Planung. Ich habe bereits einige Dinge organisiert, bin mir aber nicht sicher, ob ich an alles gedacht habe oder ob es noch Dinge gibt, die ich beachten sollte. K\u00f6nntest du mir bitte helfen, meine Planung zu \u00fcberpr\u00fcfen und mir Ratschl\u00e4ge zur Verbesserung geben? Ich suche auch nach Empfehlungen f\u00fcr geeignete Locations, Catering-Optionen und andere wichtige Details, die ich m\u00f6glicherweise \u00fcbersehen habe.\",\n+    \"eventManagementExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"feedbackAssistanceRequest\": \"Ich arbeite gerade an einem wissenschaftlichen Projekt und suche nach Feedback. Ich bin mir nicht sicher, ob meine Arbeit die Anforderungen erf\u00fcllt oder ob ich meine Forschung noch verbessern kann. K\u00f6nntest du dir bitte meine Arbeit ansehen und mir Ratschl\u00e4ge geben, wie ich meine Forschung verbessern und meine Argumentation st\u00e4rken kann?\",\n+    \"financeExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Julia Schneider and you are an expert in finance. You advise university staff, students and professors. If people want to speak directly to someone who works in the finance department at your university you refer them to the official university homepage.\",\n+    \"financeUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen.\",\n+    \"gamificationAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung, um Gamification in mein Projekt zu integrieren. Ich m\u00f6chte ein spielerisches Element in meine Anwendung einbauen, um Nutzenden zu motivieren und das Engagement zu erh\u00f6hen. K\u00f6nntest du mir bitte helfen, eine Strategie f\u00fcr die Integration von Gamification in mein Projekt zu entwickeln? Ich suche auch nach Tipps zur Auswahl von geeigneten Spielmechaniken und -elementen, um meine Nutzer zu motivieren und ein ansprechendes Spielerlebnis zu schaffen. K\u00f6nntest du mir auch dabei helfen, die Auswirkungen der Gamification auf mein Projekt zu messen und zu bewerten?\",\n+    \"gamificationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"guideline_Title\": \"Leitfaden zum Umgang mit HAWKI\",\n+    \"ideagenerationAssistanceRequest\": \"Ich suche nach kreativen Ideen f\u00fcr ein Projekt, an dem ich arbeite. Ich m\u00f6chte meine Perspektive erweitern und neue Ideen und Ans\u00e4tze f\u00fcr mein Projekt entwickeln. K\u00f6nntest du mir bitte helfen, meine Denkweise zu erweitern und mir Ratschl\u00e4ge und Tipps zur Generierung von Ideen geben?\",\n+    \"ideagenerationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"imprint\": \"Impressum\",\n+    \"infoPanel_Content\": \"<h1 class=\\\"headerLine\\\">HAWKI Update #002</h1><h3>Wir haben HAWKI weiter f\u00fcr euch verbessert!</h3><p><b>Funktionalit\u00e4t:</b></p><p>Multi-Language mit \u00fcbersetzten Texten f\u00fcr Englisch, Italienisch, Franz\u00f6sisch und Spanisch.</p><p>Darstellung von mathematischen Formeln, LaTex und Verbesserung des Syntax Highlighting.</p><p><b>Quality of Life:</b></p><p>Dark Mode f\u00fcr unsere Nachteulen.</p><p>System Prompts sind jetzt transparent einsehbar.</p><p><b>Sicherheitsupdates:</b></p><p>Wir haben HAWKI in einigen Bereichen sicherer gemacht und die Code-Struktur aktualisiert.</p><p>Wir danken Thorger Jansen  (Entdeckung, Analyse, Koordination) vom <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://www.sec-consult.com\\\"><b>SEC Consult Vulnerability Lab</b></a> f\u00fcr die verantwortungsvolle Meldung der identifizierten Probleme und die Zusammenarbeit mit uns bei deren Behebung.</p>\",\n+    \"interviewAssistanceRequest\": \"Ich bereite mich auf ein Interview vor und suche nach Unterst\u00fctzung bei der Erstellung von Fragen. K\u00f6nntest du mir bitte helfen, Fragen zu formulieren, die es mir erm\u00f6glichen, die gew\u00fcnschten Informationen zu sammeln? Ich m\u00f6chte gerne offene Fragen verwenden. K\u00f6nntest du mir auch helfen, Fragen zu formulieren, die auf die Bed\u00fcrfnisse meines Interviewpartners zugeschnitten sind und ihm erm\u00f6glichen, seine Erfahrungen und Meinungen ausf\u00fchrlich zu teilen? Ich suche auch nach Tipps zur Durchf\u00fchrung eines erfolgreichen Interviews und zur Aufzeichnung und Organisation der gesammelten Informationen.\",\n+    \"interviewExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"language\": \"Sprache\",\n+    \"lawDialogueIntroduction\": \"Du unterh\u00e4ltst Dich jetzt mit Luis, einem fiktiven Rechtsberater. Was m\u00f6chtest Du \u00fcber Rechtsberatung wissen?\",\n+    \"lawExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Luis Martinez and you are an expert in legal advice. You advise university staff, students and professors. If people want to speak directly to someone who works in the law department at your university you refer them to the official university homepage.\",\n+    \"lawUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen.\",\n+    \"learningAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung bei Lernstrategien. Ich habe Schwierigkeiten, effektiv zu lernen und meine Aufgaben zu erledigen. Ich bin mir nicht sicher, welche Lernstrategien am besten f\u00fcr mich geeignet sind oder wie ich meine Zeit besser organisieren kann, um meine Lernziele zu erreichen. K\u00f6nntest du mir bitte helfen, meine derzeitige Lernsituation zu bewerten und mir Ratschl\u00e4ge und Tipps zur Verbesserung meiner Lernstrategien geben?\",\n+    \"learningExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"literatureResearchAssistanceRequest\": \"Ich arbeite gerade an einem Projekt und brauche Hilfe bei der Recherche relevanter Literatur. Mein Thema ist [Beschreibung des Themas], und ich suche nach wissenschaftlichen Artikeln und B\u00fcchern, die sich mit diesem Thema befassen. Ich bin mir nicht sicher, welche Quellen ich verwenden soll oder wie ich meine Suche effektiver gestalten kann. K\u00f6nntest du mir bitte dabei helfen, relevante Quellen zu finden und mir Ratschl\u00e4ge zur effektiven Durchf\u00fchrung meiner Suche geben?\",\n+    \"marketingDialogueIntroduction\": \"Du unterh\u00e4ltst Dich jetzt mit Felix, einem fiktiven Marketing-Mitarbeiter. Was m\u00f6chtest Du \u00fcber Marketing wissen?\",\n+    \"marketingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Felix M\u00fcller and you are an expert in marketing. You advise university staff, students and professors. If people want to speak directly to someone who works in the marketing department at your university, you refer them to the official university homepage.\",\n+    \"marketingUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen.\",\n+    \"methodologyAssistanceRequest\": \"Ich arbeite gerade an einem wissenschaftlichen Projekt und suche nach Unterst\u00fctzung bei der Methodologie. Ich habe mich entschieden, [Beschreibung der gew\u00e4hlten Methodologie] zu verwenden, um [Ziel der Forschung] zu erreichen, bin mir aber nicht sicher, ob ich die Methodologie korrekt anwende oder ob es andere Methoden gibt, die besser geeignet w\u00e4ren. K\u00f6nntest du mir bitte helfen, meine Methodologie zu \u00fcberpr\u00fcfen und mir gegebenenfalls Ratschl\u00e4ge zur Verbesserung oder Alternative vorschlagen?\",\n+    \"motivationAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung, um meine Motivation im Hochschulalltag zu verbessern. Ich f\u00fchle mich oft \u00fcberfordert und unmotiviert, wenn ich versuche, mit meinem Studium und anderen Verpflichtungen Schritt zu halten. K\u00f6nntest du mir bitte helfen, meine aktuelle Situation zu bewerten und mir Ratschl\u00e4ge und Tipps zur Verbesserung meiner Motivation geben? Ich suche auch nach Strategien, um meine Ziele besser zu definieren und meine Fortschritte im Auge zu behalten.\",\n+    \"motivationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"organisationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"password\": \"Kennwort\",\n+    \"programmingDialogueIntroduction\": \"Du unterh\u00e4ltst Dich jetzt mit Fatima, einer fiktiven Programmiererin. Was m\u00f6chtest Du \u00fcber Programmierung wissen?\",\n+    \"programmingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Fatima Kamara and you are an expert in programming. You advise university staff, students and professors. If people want to speak directly to someone who works in the programming department at your university, you refer them to the official university homepage.\",\n+    \"programmingUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen. Dies gilt besonders f\u00fcr den Bereich Programmierung.\",\n+    \"promptSuggestion\": \"Promptvorschlag\",\n+    \"prototypingAssistanceRequest\": \"Ich bin auf der Suche nach Unterst\u00fctzung beim Prototyping in meinem Designprozess. K\u00f6nntest du mir bitte helfen, ein effektives Prototyping durchzuf\u00fchren, das mir dabei hilft, meine Designideen zu visualisieren und zu testen? Ich suche nach Ratschl\u00e4gen und Anleitungen zur Auswahl der besten Materialien und Tools f\u00fcr mein Prototyping, und wie ich am besten die Bed\u00fcrfnisse meiner Zielgruppe ber\u00fccksichtigen kann. K\u00f6nntest du mir auch helfen, mein Prototyping auf verschiedene Szenarien anzupassen, um sicherzustellen, dass es f\u00fcr alle m\u00f6glichen Nutzererfahrungen relevant ist? Ich suche auch nach Strategien, um Feedback von meinen Prototypen zu sammeln und es in meinen Designprozess zu integrieren.\",\n+    \"prototypingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"researchAssistanceRequest\": \"Ich arbeite gerade an einem wissenschaftlichen Projekt und suche nach Unterst\u00fctzung bei der Recherche. Mein Thema ist [Beschreibung des Themas], und ich ben\u00f6tige weitere Informationen \u00fcber [spezifische Fragen oder Themen]. Ich habe bereits einige Quellen gefunden, bin mir aber nicht sicher, ob ich alle relevanten Quellen gefunden habe oder ob ich weitere Ressourcen verwenden sollte. K\u00f6nntest du mir bitte dabei helfen, zus\u00e4tzliche Quellen zu finden und mir Ratschl\u00e4ge zur effektiven Durchf\u00fchrung meiner Suche geben?\",\n+    \"scienceDialogueIntroduction\": \"Du unterh\u00e4ltst Dich jetzt mit Sophie, einer fiktiven Forscherin. Was m\u00f6chtest Du \u00fcber Forschung wissen?\",\n+    \"scienceExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Sophie Martin and you are an expert in research. You advise university staff, students, and professors. If people want to speak directly to someone who works in the science department at your university, you refer them to the official university homepage.\",\n+    \"scienceUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen. Besonders im Bereich der Wissenschaft ist es wichtig, Informationen kritisch zu bewerten.\",\n+    \"scientificWorkExpertiseMessage\": \"You are a helpful assistant who works at a university in Germany and you are an expert in scientific work.\",\n+    \"settings\": \"Einstellungen\",\n+    \"socialMediaDialogueIntroduction\": \"Du unterh\u00e4ltst Dich jetzt mit Erik, einem fiktiven Social-Media-Mitarbeiter. Was m\u00f6chtest Du \u00fcber Social Media wissen?\",\n+    \"socialMediaExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Erik Hansen and you are an expert in social media. You advise university staff, students, and professors. If people want to speak directly to someone who works in the social media department at your university, you refer them to the official university homepage.\",\n+    \"socialMediaUsageNoticeContent\": \"In diesem Bereich sprechen Sie mit fiktiven Personen. Die Aussagen in diesem Bereich k\u00f6nnen nicht auf ihren Wahrheitsgehalt \u00fcberpr\u00fcft werden und sollen nur als Anregung dienen. Dies gilt besonders im Kontext von Social Media, wo Informationen schnell und in gro\u00dfer F\u00fclle zirkulieren.\",\n+    \"stressManagementAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung beim Stressmanagement im Hochschulalltag. Ich f\u00fchle mich oft gestresst und \u00fcberfordert, wenn ich versuche, mit meinen akademischen Verpflichtungen, meinem sozialen Leben und anderen Verpflichtungen Schritt zu halten. K\u00f6nntest du mir bitte helfen, meine aktuelle Stresssituation zu bewerten und mir Ratschl\u00e4ge und Tipps zur Bew\u00e4ltigung von Stress im Hochschulalltag geben? Ich suche auch nach Strategien, um meine Zeit besser zu organisieren und meine Priorit\u00e4ten zu setzen, um meine Stressbelastung zu reduzieren.\",\n+    \"stressManagementExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"successfulRegistration\": \"Ihre Anmeldung war erfolgreich.\",\n+    \"tableCreationAssistanceRequest\": \"Ich ben\u00f6tige Unterst\u00fctzung beim Erstellen von Tabellen. Ich habe Daten gesammelt, die ich in einer Tabelle darstellen m\u00f6chte, aber ich bin mir nicht sicher, wie ich die Tabelle am besten formatieren und organisieren kann, um die Informationen klar und verst\u00e4ndlich zu pr\u00e4sentieren. K\u00f6nntest du mir bitte helfen, eine geeignete Tabelle zu entwerfen und mir Ratschl\u00e4ge zur Gestaltung und Formatierung der Tabelle geben? Ich suche auch nach Tipps, wie ich die Informationen in der Tabelle am besten pr\u00e4sentieren kann, um sie f\u00fcr die Lesenden leicht zug\u00e4nglich zu machen.\",\n+    \"tableExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"theme\": \"Theme\",\n+    \"timeManagementAssistanceRequest\": \"Ich suche nach Unterst\u00fctzung beim Zeitmanagement. Ich habe Schwierigkeiten, meine Zeit effektiv zu nutzen und meine Aufgaben in angemessener Zeit zu erledigen. Ich bin mir nicht sicher, wie ich meine Zeit besser organisieren kann, um meine Ziele zu erreichen und Stress zu vermeiden. K\u00f6nntest du mir bitte helfen, meine aktuelle Zeitnutzung zu bewerten und mir Ratschl\u00e4ge und Tipps zur Verbesserung meines Zeitmanagements geben? Ich suche auch nach Strategien, um meine Priorit\u00e4ten zu setzen und meine Zeit besser zu planen, um meine Produktivit\u00e4t zu steigern und meine Ziele zu erreichen.\",\n+    \"unableToSaveRegistration\": \"<b>Ihre Anmeldung konnte nicht gespeichert werden.<br>Bitte versuchen Sie es erneut.</b>\",\n+    \"usageNoticeTitle\": \"Nutzungshinweis\",\n+    \"usage_guideline\": \"<p>Willkommen zum Leitfaden f\u00fcr den Umgang mit HAWKI, das auf der OpenAI API basiert. Dieser Leitfaden soll allen Hochschulangeh\u00f6rigen - Studierenden, Lehrenden und Mitarbeitenden - eine klare Richtlinie bieten, wie mit dieser Technologie verantwortungsbewusst umgegangen werden soll. Bitte beachten Sie, dass dieser Leitfaden die Nutzungsbedingungen von OpenAI erg\u00e4nzt und keinen Anspruch auf Vollst\u00e4ndigkeit erhebt. Es liegt in der Verantwortung der Nutzerinnen und Nutzer, die Nutzungsbedingungen einzuhalten.</p><h3>Allgemeine Bestimmungen</h3><p><b>Was verboten ist:</b></p><ul><li>Eingabe personenbezogener Daten \u00fcber sich selbst oder \u00fcber andere.</li><li>Nutzung der Dienste f\u00fcr illegale, sch\u00e4dliche oder missbr\u00e4uchliche Aktivit\u00e4ten.</li><li>Verletzung, Missbrauch oder Versto\u00df gegen die Rechte anderer.</li><li>Modifikation, Kopie, Vermietung, Verkauf oder Verteilung unserer Dienste.</li><li>Versuch der R\u00fcckentwicklung, Dekompilierung oder des Herausfindens von Quellcode oder zugrundeliegenden Komponenten.</li><li>Automatisches oder programmgesteuertes Extrahieren von Daten oder Output.</li><li>Behauptung, dass der Output von Menschen erstellt wurde, wenn dies nicht der Fall ist.</li><li>Beeintr\u00e4chtigung oder St\u00f6rung der Dienste oder Umgehung von Schutzma\u00dfnahmen.</li><li>Verwendung von Output zur Entwicklung konkurrierender Modelle.</li></ul><p><b>Was zu beachten ist:</b></p><p>Sie sind verantwortlich f\u00fcr den von Ihnen bereitgestellten Input und den daraus resultierenden Output. Sie m\u00fcssen sicherstellen, dass Ihr Input keine Rechte verletzt und dass Sie \u00fcber alle notwendigen Rechte, Lizenzen und Genehmigungen f\u00fcr die Bereitstellung des Inputs verf\u00fcgen.</p><b>Genauigkeit:</b><p>Die Nutzung der Dienste kann zu ungenauem oder fehlerhaftem Output f\u00fchren. Es ist wichtig, dass Sie den Output kritisch pr\u00fcfen und nicht als alleinige Quelle der Wahrheit verwenden.Ihre Eingaben werden nicht von der HAWK, aber von OpenAI f\u00fcr 30 Tage gespeichert, um einen eventuellen Missbrauch festzustellen. Nach 30 Tagen werden die Daten gel\u00f6scht. Ihre Eingaben werden nicht verwendet, um das Produkt sicherer oder besser zu machen.</p><h3>Spezifische Bestimmungen</h3><p>F\u00fcr den Einsatz generativer KI-Systeme gibt es eine <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://wiki.hawk.de/pages/viewpage.action?spaceKey=HL&title=Leitlinie+generative+KI\\\"><b>vorl\u00e4ufige Leitlinie und eine Eigenst\u00e4ndigkeitserkl\u00e4rung.</b></a></p><p><b>F\u00fcr Studierende:</b></p><ul><li>Verwenden Sie HAWKI zur Unterst\u00fctzung Ihres Lernprozesses, aber verlassen Sie sich nicht ausschlie\u00dflich auf die generierten Antworten.</li><li>Teilen Sie keine pers\u00f6nlichen Daten oder Informationen \u00fcber HAWKI. Auch nicht die personenbezogenen Daten anderer.</li><li>Sie \u00fcbernehmen die Autorenschaft. Damit b\u00fcrgen Sie f\u00fcr die Qualit\u00e4t der Antwort und \u00fcbernehmen die Verantwortung f\u00fcr den Inhalt. Die Nutzung von KI und die Art ihres Beitrags sollte klargelegt werden.</li></ul>                <p><b>F\u00fcr Lehrende:</b></p><ul><li>HAWKI darf nicht verwendet werden, um studentische Arbeiten zu korrigieren, wenn diese Arbeiten pers\u00f6nliche Daten enthalten, die extrahierbar sind.</li><li>Nutzen Sie HAWKI als erg\u00e4nzendes Werkzeug zur Vorbereitung von Lehrmaterialien, aber stellen Sie sicher, dass alle Inhalte auf ihre Richtigkeit und Relevanz \u00fcberpr\u00fcft werden.</li></ul><p><b>F\u00fcr Mitarbeitende:</b></p><ul><li>Es ist strengstens untersagt, Geheimhaltungsvertr\u00e4ge oder intern bestimmte Dokumente in HAWKI einzugeben. Auch keine Dokumente, die personenbezogene Daten \u00fcber sich selbst oder \u00fcber andere enthalten.</li><li>Nutzen Sie HAWKI zur Effizienzsteigerung und Unterst\u00fctzung Ihrer t\u00e4glichen Aufgaben, jedoch unter Beachtung der Datenschutzrichtlinien und Sicherheitsvorschriften der Hochschule.   </li></ul><p>Dieser Leitfaden dient als Orientierungshilfe f\u00fcr den verantwortungsbewussten Umgang mit HAWKI. Es ist wichtig, dass alle Nutzer*innen die genannten Bestimmungen verstehen und befolgen, um einen sicheren und ethischen Einsatz dieser Technologie zu gew\u00e4hrleisten. Die Hochschule kann diesen Service nur anbieten, wenn Sie keine pers\u00f6nlichen Daten eingeben. Bei Fragen oder Unsicherheiten wenden Sie sich bitte an Prof. Stefan W\u00f6lwer, Arian Sadafi, Jonas Trippler oder Vincent Timm. Ungeachtet dieses Leitfadens gelten die <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://openai.com/policies/business-terms\\\"><b>Nutzungsbedingungen von OpenAI</b>.</a></p>\",\n+    \"username\": \"Benutzername\",\n+    \"welcomeBackTitle\": \"Willkommen zur\u00fcck!\",\n+    \"writingAssistanceRequest\": \"Ich arbeite an einem wissenschaftlichen Projekt und ben\u00f6tige Hilfe beim Schreibstil und der Formatierung. Ich habe meine Arbeit bereits verfasst, bin mir aber nicht sicher, ob ich alle Formatierungsrichtlinien und Schreibkonventionen korrekt befolgt habe. K\u00f6nntest du mir bitte helfen, meine Arbeit zu \u00fcberpr\u00fcfen und mir Ratschl\u00e4ge zur Verbesserung der Formatierung und des Schreibstils geben?\"\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/resources/language/en_US.json",
          "status": "added",
          "additions": 141,
          "deletions": 0,
          "patch": "@@ -0,0 +1,141 @@\n+{\n+    \"AI_Icon\": \"AI\",\n+    \"AboutHAWKI\": \"About HAWKI\",\n+    \"AboutHAWKI_ArianInfo\": \" | Research Assistant | HAWKI\",\n+    \"AboutHAWKI_Info\": \"This service was developed in the Interaction Design Lab of HAWK to give all university members the opportunity to integrate artificial intelligence into their work processes and to have a space for encounter so that new working methods might emerge and an internal university discussion on the use of AI can take place. This offer also aims to support didactically, to develop an understanding of how such a language model works and therefore gives hints on well-functioning prompts (text inputs) in various areas. We welcome constructive feedback to further develop this offer according to your needs and findings.\",\n+    \"AboutHAWKI_JonasInfo\": \" | Research Assistant | Hands On\",\n+    \"AboutHAWKI_StefanInfo\": \" | Digital Environments | Interaction Design \",\n+    \"AboutHAWKI_VincentInfo\": \" | Research Assistant | Head of Interaction Design Lab\",\n+    \"BetaMessage\": \"Beta version - Model GPT4-Turbo\",\n+    \"BrainStorming\": \"Idea Generation\",\n+    \"Caution\": \"Caution\",\n+    \"Caution_Info\": \" - Occasionally generates hazardous or biased information.\",\n+    \"Chat\": \"Chat\",\n+    \"Confirm_Btn\": \"Confirm\",\n+    \"ContextComprehension\": \"Context Understanding\",\n+    \"ContextComprehension_Info\": \" - Remembers what was said before in the conversation.\",\n+    \"Conversation\": \"Conversation\",\n+    \"Conversation_Info\": \"A chat area like ChatGPT, for a quick start on any task.\",\n+    \"Copywriting\": \"Copywriting\",\n+    \"Creativity\": \"Creativity\",\n+    \"DataAnalysis\": \"Data Analysis\",\n+    \"DataSecurity\": \"Data Protection\",\n+    \"DesignThinking\": \"Design Thinking\",\n+    \"EventManagement\": \"Event Management\",\n+    \"FeedBack\": \"Feedback\",\n+    \"Feedback_Placeholder\": \"Here you can leave your feedback\",\n+    \"Finance\": \"Finance\",\n+    \"Formatting\": \"Formatting\",\n+    \"Formatting_Info\": \" - Outputs generated results in desired format.\",\n+    \"Gamification\": \"Gamification\",\n+    \"Impressum\": \"Legal Notice\",\n+    \"Incomplete\": \"Incomplete\",\n+    \"Incomplete_Info\": \" - Occasionally generates incorrect information.\",\n+    \"InputField_Placeholder\": \"You can make your request here...\",\n+    \"InterviewQuestions\": \"Interview Questions\",\n+    \"Iteration\": \"Iteration\",\n+    \"Iteration_Info\": \" - Allows subsequent corrections of generated results.\",\n+    \"LearnSpace\": \"Learning Space\",\n+    \"LearnSpace_Info\": \"The learning spaces are designed to help understand the various support options and learn what makes an effective prompt.\",\n+    \"LearnStrategy\": \"Learning Strategies\",\n+    \"LegalConsultation\": \"Legal Consultation\",\n+    \"Limitation\": \"Limitation\",\n+    \"Limitation_Info\": \" - The language model exclusively accesses knowledge up to December 2023.\",\n+    \"Limitations\": \"Limitations\",\n+    \"LiteratureSearch\": \"Literature Search\",\n+    \"Login\": \"Login\",\n+    \"LoginFailedMSG\": \"Login Failed!\",\n+    \"Marketing\": \"Marketing\",\n+    \"Methodology\": \"Methodology\",\n+    \"Motivation\": \"Motivation\",\n+    \"Organization\": \"Organization\",\n+    \"Possibility\": \"Possibilities\",\n+    \"Programming\": \"Programming\",\n+    \"Prototyping\": \"Prototyping\",\n+    \"Research\": \"Research\",\n+    \"ResearchSupport\": \"Research Support\",\n+    \"ResearchWork\": \"Scientific Work\",\n+    \"SignOut\": \"Sign Out\",\n+    \"SocialMedia\": \"Social Media\",\n+    \"StressManagement\": \"Stress Management\",\n+    \"System\": \"System\",\n+    \"SystemPromptInfo\": \"We send this system prompt in the background to improve the result.\",\n+    \"System_Content\": \"You are a helpful assistant who works at the University of Applied Arts and Sciences in Lower Saxony.\",\n+    \"Tables\": \"Tables\",\n+    \"TimeManagement\": \"Time Management\",\n+    \"Upgrade\": \"Upgrade to GPT-4\",\n+    \"Upgrade_Content\": \"The university now provides you with GPT-4. More complex inputs can now be understood and processed better. You should now receive more precise answers. The wait time for a response may slightly increase.\",\n+    \"UsageHint\": \"Usage Note\",\n+    \"UsageHint_Content\": \"Please do not enter any personal information. We use the API of OpenAI. This means that the data you enter is sent directly to OpenAI. There is a possibility that OpenAI may use this data further.\",\n+    \"VirtualOffice\": \"Virtual Office\",\n+    \"VirtualOffice_Info\": \"Conversations with fictional experts to get acquainted in unfamiliar areas and make more targeted requests to real university experts.\",\n+    \"WritingHelp\": \"Writing Help\",\n+    \"aiOverviewPage\": \"AI Overview Page\",\n+    \"confirmButton\": \"Confirm\",\n+    \"copiedToolTip\": \"Copied!\",\n+    \"copyTooTip\": \"Copy\",\n+    \"copywritingAssistanceRequest\": \"I need support with copywriting. I am working on a project that involves clearly and engagingly communicating a message or idea. Could you please help me assess my current way of writing and provide me with advice and tips to improve my copywriting? I am also looking for strategies to better understand my target audience and use compelling language to convey my message.\",\n+    \"copywritingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"dataAnalysisAssistanceRequest\": \"I have recently conducted an extensive data collection and am now looking for support in analyzing the data. The data collection includes [description of the data], and I would like to [goal of the analysis]. Could you please assist me in analyzing the data and provide advice on interpreting the results?\",\n+    \"dataProtection\": \"Data Protection\",\n+    \"designThinkingAssistanceRequest\": \"I am seeking support with Design Thinking. I am working on a project that involves finding a creative solution to a problem. Could you please help me better understand the Design Thinking process and provide me with advice and tips on applying the process to my project? I am also looking for strategies to prototype and test my ideas to ensure that my solution to the problem is successful. Could you also help me set up a feedback loop to iteratively improve my solution?\",\n+    \"designThinkingExpertiseMessage\": \"You are a helpful assistant working at a University in Germany and you are an expert in the field of creativity.\",\n+    \"dialogueWithFinanceAdvisor\": \"You are now conversing with Julia, a fictional financial advisor. What would you like to know about finance?\",\n+    \"eventManagementAssistanceRequest\": \"I am planning an event [description of the event] and am looking for support in planning. I have already organised some things but am not sure if I have thought of everything or if there are things I should consider. Could you please help me review my planning and provide advice for improvement? I am also looking for recommendations for suitable locations, catering options, and other important details I might have overlooked.\",\n+    \"eventManagementExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"feedbackAssistanceRequest\": \"I am currently working on a scientific project and am seeking feedback. I am not sure whether my work meets the requirements or whether I can still improve my research. Could you please take a look at my work and give me advice on how I can improve my research and strengthen my argumentation?\",\n+    \"financeExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Julia Schneider and you are an expert in finance. You advise university staff, students, and professors. If people want to speak directly to someone who works in the finance department at your university, you refer them to the official university homepage.\",\n+    \"financeUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration.\",\n+    \"gamificationAssistanceRequest\": \"I am looking for support to integrate gamification into my project. I want to include a gaming element in my application to motivate users and increase engagement. Could you please help me develop a strategy for integrating gamification into my project? I am also looking for tips on choosing suitable game mechanics and elements to motivate my users and create an engaging gaming experience. Could you also assist me in measuring and assessing the impact of gamification on my project?\",\n+    \"gamificationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"guideline_Title\": \"Usage Guidelines for HAWKI\",\n+    \"ideagenerationAssistanceRequest\": \"I am looking for creative ideas for a project I am working on. I want to broaden my perspective and develop new ideas and approaches for my project. Could you please help me expand my mindset and provide me with advice and tips for generating ideas?\",\n+    \"ideagenerationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"imprint\": \"Imprint\",\n+    \"infoPanel_Content\": \"<h1 class=\\\"headerLine\\\">HAWKI Update #002</h1><h3>We have further improved HAWKI for you!</h3><p><b>Functionality:</b></p><p>Multi-Language with translated texts for English, Italian, French, and Spanish.</p><p>Display of mathematical formulas, LaTex, and syntax highlighting improvement.</p><p><b>Quality of Life:</b></p><p>Dark Mode for our night owls.</p><p>System prompts are now transparently visible.</p><p><b>Security Updates:</b></p><p>We have made HAWKI more secure in some areas and updated the code structure.</p><p>We thank Thorger Jansen (Discovery, Analysis, Coordination) from the <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://www.sec-consult.com\\\"><b>SEC Consult Vulnerability Lab</b></a> for responsibly reporting the identified issues and collaborating with us to address them.</p>\",\n+    \"interviewAssistanceRequest\": \"I am preparing for an interview and seeking support in creating questions. Could you please help me formulate questions that will allow me to collect the desired information? I would like to use open-ended questions. Could you also help me formulate questions tailored to the needs of my interview partner, allowing them to share their experiences and opinions in detail? I am also looking for tips on conducting a successful interview and recording and organising the information collected.\",\n+    \"interviewExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"language\": \"Language\",\n+    \"lawDialogueIntroduction\": \"You are now conversing with Luis, a fictional legal advisor. What would you like to know about legal consultation?\",\n+    \"lawExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Luis Martinez and you are an expert in legal advice. You advise university staff, students, and professors. If people want to speak directly to someone who works in the law department at your university, you refer them to the official university homepage.\",\n+    \"lawUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration.\",\n+    \"learningAssistanceRequest\": \"I am seeking support with learning strategies. I have difficulties learning effectively and completing my tasks. I am not sure which learning strategies are best suited for me or how I can better organize my time to achieve my learning goals. Could you please help me assess my current learning situation and provide me with advice and tips for improving my learning strategies?\",\n+    \"learningExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"literatureResearchAssistanceRequest\": \"I am currently working on a project and need help in researching relevant literature. My topic is [description of the topic], and I am looking for scientific articles and books dealing with this topic. I am not sure which sources I should use or how I can make my search more effective. Could you please help me find relevant sources and give me advice on conducting my search effectively?\",\n+    \"marketingDialogueIntroduction\": \"You are now conversing with Felix, a fictional marketing employee. What would you like to know about marketing?\",\n+    \"marketingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Felix M\u00fcller and you are an expert in marketing. You advise university staff, students, and professors. If people want to speak directly to someone who works in the marketing department at your university, you refer them to the official university homepage.\",\n+    \"marketingUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration.\",\n+    \"methodologyAssistanceRequest\": \"I am currently working on a scientific project and am seeking support with the methodology. I have decided to use [description of the chosen methodology] to achieve [research goal], but I am not sure if I am applying the methodology correctly or if there are other methods that would be more suitable. Could you please help me review my methodology and possibly suggest improvements or alternatives?\",\n+    \"motivationAssistanceRequest\": \"I am looking for support to improve my motivation in university life. I often feel overwhelmed and unmotivated when trying to keep up with my studies and other obligations. Could you please help me assess my current situation and provide me with advice and tips for improving my motivation? I am also looking for strategies to better define my goals and keep track of my progress.\",\n+    \"motivationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"organisationExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"password\": \"Password\",\n+    \"programmingDialogueIntroduction\": \"You are now conversing with Fatima, a fictional programmer. What would you like to know about programming?\",\n+    \"programmingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Fatima Kamara and you are an expert in programming. You advise university staff, students, and professors. If people want to speak directly to someone who works in the programming department at your university, you refer them to the official university homepage.\",\n+    \"programmingUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration. This is especially true for the area of programming.\",\n+    \"promptSuggestion\": \"Prompt Suggestion\",\n+    \"prototypingAssistanceRequest\": \"I am looking for support with prototyping in my design process. Could you please help me conduct effective prototyping that helps me visualize and test my design ideas? I am looking for advice and guidance on selecting the best materials and tools for my prototyping, and how I can best consider the needs of my target audience. Could you also help me adapt my prototyping to different scenarios to ensure it is relevant for all possible user experiences? I am also looking for strategies to collect feedback from my prototypes and integrate it into my design process.\",\n+    \"prototypingExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of creativity.\",\n+    \"researchAssistanceRequest\": \"I am currently working on a scientific project and am seeking support with research. My topic is [description of the topic], and I need more information on [specific questions or topics]. I have already found some sources, but I am not sure if I have found all relevant sources or if I should use additional resources. Could you please help me find additional sources and provide advice on conducting my search effectively?\",\n+    \"scienceDialogueIntroduction\": \"You are now conversing with Sophie, a fictional researcher. What would you like to know about research?\",\n+    \"scienceExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Sophie Martin and you are an expert in research. You advise university staff, students, and professors. If people want to speak directly to someone who works in the science department at your university, you refer them to the official university homepage.\",\n+    \"scienceUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration. Especially in the field of science, it is important to critically evaluate information.\",\n+    \"scientificWorkExpertiseMessage\": \"\",\n+    \"settings\": \"Settings\",\n+    \"socialMediaDialogueIntroduction\": \"You are now conversing with Erik, a fictional social media employee. What would you like to know about social media?\",\n+    \"socialMediaExpertiseMessage\": \"You are a helpful assistant working at a university in Germany. Your name is Erik Hansen and you are an expert in social media. You advise university staff, students, and professors. If people want to speak directly to someone who works in the social media department at your university, you refer them to the official university homepage.\",\n+    \"socialMediaUsageNoticeContent\": \"In this area, you interact with fictional characters. The statements in this area cannot be verified for factual accuracy and are intended only as inspiration. This is especially true in the context of social media, where information circulates quickly and in large volumes.\",\n+    \"stressManagementAssistanceRequest\": \"I am seeking support with stress management in university life. I often feel stressed and overwhelmed when trying to keep up with my academic obligations, my social life, and other obligations. Could you please help me assess my current stress situation and provide me with advice and tips for managing stress in university life? I am also looking for strategies to better organize my time and set my priorities to reduce my stress levels.\",\n+    \"stressManagementExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"successfulRegistration\": \"Your registration was successful.\",\n+    \"tableCreationAssistanceRequest\": \"I need support with creating tables. I have collected data that I want to present in a table, but I am not sure how best to format and organize the table to present the information clearly and understandably. Could you please help me design a suitable table and provide me with advice on designing and formatting the table? I am also looking for tips on how best to present the information in the table to make it easily accessible for readers.\",\n+    \"tableExpertiseMessage\": \"You are a helpful assistant working at a university in Germany and you are an expert in the field of organisation.\",\n+    \"theme\": \"Theme\",\n+    \"timeManagementAssistanceRequest\": \"I am looking for support with time management. I struggle to use my time effectively and complete my tasks in a timely manner. I am not sure how I can better organize my time to achieve my goals and avoid stress. Could you please help me assess my current time usage and provide me with advice and tips for improving my time management? I am also looking for strategies to set my priorities and plan my time better in order to increase my productivity and reach my goals.\",\n+    \"unableToSaveRegistration\": \"<b>Your registration could not be saved.<br>Please try again.</b>\",\n+    \"usageNoticeTitle\": \"Usage Notice\",\n+    \"usage_guideline\": \"<p>Welcome to the guide for using HAWKI, which is based on the OpenAI API. This guide is intended for all university affiliates - students, teachers, and staff - to provide a clear guideline on how to handle this technology responsibly. Please note that this guide supplements the terms of use of OpenAI and does not claim to be exhaustive. It is the users' responsibility to comply with these terms.</p><h3>General Provisions</h3><p><b>What is prohibited:</b></p><ul><li>Entering personal data about oneself or others.</li><li>Using the services for illegal, harmful, or abusive activities.</li><li>Infringement, abuse, or violation of others' rights.</li><li>Modification, copying, renting, selling, or distributing our services.</li><li>Attempt at reverse engineering, decompiling, or discovering source code or underlying components.</li><li>Automatic or programmed extraction of data or output.</li><li>Claiming that the output was created by humans when it was not.</li><li>Interfering with or disrupting the services or circumventing protective measures.</li><li>Using the output to develop competing models.</li></ul><p><b>What to consider:</b></p><p>You are responsible for the input you provide and the resulting output. You must ensure that your input does not infringe any rights and that you have all necessary rights, licenses, and permissions to provide it.</p><b>Accuracy:</b><p>Using the services can lead to inaccurate or incorrect output. It is important that you critically examine the output and not use it as the sole source of truth. Your inputs are not stored by HAWK, but by OpenAI for 30 days to detect any misuse. After 30 days, the data is deleted. Your inputs are not used to improve the product's safety or quality.</p><h3>Specific Provisions</h3><p>There is a <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://wiki.hawk.de/pages/viewpage.action?spaceKey=HL&title=Leitlinie+generative+KI\\\"><b>provisional guideline and an independence declaration</b></a> for using generative AI systems.</p><p><b>For students:</b></p><ul><li>Use HAWKI to support your learning process, but do not rely solely on the generated answers.</li><li>Do not share personal data or information through HAWKI. Not even others' personal data.</li><li>You take on authorship. This means you vouch for the quality of the answer and take responsibility for the content. The use of AI and the nature of its contribution should be clarified.</li></ul><p><b>For teachers:</b></p><ul><li>It is prohibited to use HAWKI to correct student papers if they contain personal data that can be extracted.</li><li>Use HAWKI as a supplementary tool to prepare teaching materials, but make sure all content is checked for accuracy and relevance.</li></ul><p><b>For staff:</b></p><ul><li>It is strictly prohibited to enter confidentiality agreements or internally specified documents into HAWKI. As well as documents containing personal data about oneself or others.</li><li>Use HAWKI to increase efficiency and support your daily tasks, while observing the university's privacy policies and security regulations.</li></ul><p>This guide serves as an orientation aid for the responsible handling of HAWKI. It is important that all users understand and follow these provisions to ensure safe and ethical use of this technology. The university can only offer this service if you do not enter personal data. For any questions or uncertainties, please contact Prof. Stefan W\u00f6lwer, Arian Sadafi, Jonas Trippler, or Vincent Timm. Regardless of this guide, the <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://openai.com/policies/business-terms\\\"><b>OpenAI Terms of Use</b></a> apply.</p>\",\n+    \"username\": \"Username\",\n+    \"welcomeBackTitle\": \"Welcome back!\",\n+    \"writingAssistanceRequest\": \"I am working on a scientific project and need help with writing style and formatting. I have already composed my work, but I am not sure if I have followed all formatting guidelines and writing conventions correctly. Could you please help me review my work and give me advice on improving the formatting and writing style?\"\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/resources/language/es_ES.json",
          "status": "added",
          "additions": 141,
          "deletions": 0,
          "patch": "@@ -0,0 +1,141 @@\n+{\n+    \"AI_Icon\": \"IA\",\n+    \"AboutHAWKI\": \"Acerca de HAWKI\",\n+    \"AboutHAWKI_ArianInfo\": \" | sistente de Investigaci\u00f3n | HAWKI\",\n+    \"AboutHAWKI_Info\": \"La oferta fue desarrollada en el Interaction Design Lab de HAWK, para dar a todos los miembros de la universidad la oportunidad de integrar la inteligencia artificial en los procesos de trabajo y tener un espacio de encuentro para que puedan surgir nuevas formas de trabajo y discusi\u00f3n interna en la universidad sobre el uso de IA. Esta oferta tambi\u00e9n busca brindar apoyo did\u00e1ctico para desarrollar una comprensi\u00f3n del funcionamiento de un modelo de lenguaje y, por lo tanto, tambi\u00e9n proporciona consejos sobre prompts (entradas de texto) bien funcionales en las distintas \u00e1reas. Esperamos su retroalimentaci\u00f3n constructiva para desarrollar esta oferta de acuerdo con sus necesidades y conocimientos.\",\n+    \"AboutHAWKI_JonasInfo\": \" | Asistente de Investigaci\u00f3n | Pr\u00e1ctico\",\n+    \"AboutHAWKI_StefanInfo\": \" | Entornos Digitales | Dise\u00f1o de Interacci\u00f3n \",\n+    \"AboutHAWKI_VincentInfo\": \" | Asistente de Investigaci\u00f3n | Jefe del Laboratorio de Dise\u00f1o de Interacci\u00f3n\",\n+    \"BetaMessage\": \"Versi\u00f3n beta - Modelo GPT4-Turbo\",\n+    \"BrainStorming\": \"Lluvia de Ideas\",\n+    \"Caution\": \"Precauci\u00f3n\",\n+    \"Caution_Info\": \" - Ocasionalmente genera informaci\u00f3n peligrosa o sesgada.\",\n+    \"Chat\": \"Chat\",\n+    \"Confirm_Btn\": \"Confirmar\",\n+    \"ContextComprehension\": \"Comprensi\u00f3n del Contexto\",\n+    \"ContextComprehension_Info\": \" - Recuerda lo que se ha dicho anteriormente en la conversaci\u00f3n.\",\n+    \"Conversation\": \"Conversaci\u00f3n\",\n+    \"Conversation_Info\": \"Un espacio de chat como ChatGPT, para una introducci\u00f3n r\u00e1pida a cualquier tarea.\",\n+    \"Copywriting\": \"Redacci\u00f3n\",\n+    \"Creativity\": \"Creatividad\",\n+    \"DataAnalysis\": \"An\u00e1lisis de Datos\",\n+    \"DataSecurity\": \"Seguridad de Datos\",\n+    \"DesignThinking\": \"Pensamiento de Dise\u00f1o\",\n+    \"EventManagement\": \"Gesti\u00f3n de Eventos\",\n+    \"FeedBack\": \"Retroalimentaci\u00f3n\",\n+    \"Feedback_Placeholder\": \"Aqu\u00ed puede dejar su retroalimentaci\u00f3n\",\n+    \"Finance\": \"Finanzas\",\n+    \"Formatting\": \"Formato\",\n+    \"Formatting_Info\": \" - Emite resultados generados en el formato deseado.\",\n+    \"Gamification\": \"Gamificaci\u00f3n\",\n+    \"Impressum\": \"Impressum\",\n+    \"Incomplete\": \"Incompleto\",\n+    \"Incomplete_Info\": \" - Ocasionalmente genera informaci\u00f3n falsa.\",\n+    \"InputField_Placeholder\": \"Aqu\u00ed puedes hacer tu solicitud\",\n+    \"InterviewQuestions\": \"Preguntas para Entrevistas\",\n+    \"Iteration\": \"Iteraci\u00f3n\",\n+    \"Iteration_Info\": \" - Permite correcciones a resultados generados anteriormente.\",\n+    \"LearnSpace\": \"Espacio de Aprendizaje\",\n+    \"LearnSpace_Info\": \"Los Espacios de Aprendizaje est\u00e1n dise\u00f1ados para ayudar a entender las distintas opciones de apoyo disponibles y aprender qu\u00e9 hace que un prompt sea eficaz.\",\n+    \"LearnStrategy\": \"Estrategias de Aprendizaje\",\n+    \"LegalConsultation\": \"Consultor\u00eda Legal\",\n+    \"Limitation\": \"Limitaci\u00f3n\",\n+    \"Limitation_Info\": \" - El modelo de lenguaje accede exclusivamente al conocimiento hasta diciembre de 2023.\",\n+    \"Limitations\": \"Limitaciones\",\n+    \"LiteratureSearch\": \"B\u00fasqueda de Literatura\",\n+    \"Login\": \"Inicio de sesi\u00f3n\",\n+    \"LoginFailedMSG\": \"Error de inicio de sesi\u00f3n!\",\n+    \"Marketing\": \"Marketing\",\n+    \"Methodology\": \"Metodolog\u00eda\",\n+    \"Motivation\": \"Motivaci\u00f3n\",\n+    \"Organization\": \"Organizaci\u00f3n\",\n+    \"Possibility\": \"Posibilidades\",\n+    \"Programming\": \"Programaci\u00f3n\",\n+    \"Prototyping\": \"Prototipado\",\n+    \"Research\": \"Investigaci\u00f3n\",\n+    \"ResearchSupport\": \"Apoyo en Investigaci\u00f3n\",\n+    \"ResearchWork\": \"Trabajo de Investigaci\u00f3n\",\n+    \"SignOut\": \"Cerrar Sesi\u00f3n\",\n+    \"SocialMedia\": \"Medios Sociales\",\n+    \"StressManagement\": \"Manejo del Estr\u00e9s\",\n+    \"System\": \"Sistema\",\n+    \"SystemPromptInfo\": \"Enviamos este prompt del sistema en segundo plano para mejorar el resultado.\",\n+    \"System_Content\": \"Eres un asistente \u00fatil que trabaja en la Universidad de Artes Aplicadas y Ciencias en Baja Sajonia.\",\n+    \"Tables\": \"Tablas\",\n+    \"TimeManagement\": \"Gesti\u00f3n del Tiempo\",\n+    \"Upgrade\": \"Actualizar a GPT4\",\n+    \"Upgrade_Content\": \"La universidad ahora pone a su disposici\u00f3n GPT4. Las entradas complejas se pueden entender y procesar mejor ahora. Deber\u00eda recibir respuestas m\u00e1s precisas. El tiempo de espera por una respuesta puede aumentar ligeramente.\",\n+    \"UsageHint\": \"Aviso de Uso\",\n+    \"UsageHint_Content\": \"Por favor, no introduzca datos personales. Utilizamos la API de OpenAI, lo que significa que los datos que introduce se enviar\u00e1n directamente a OpenAI. Existe la posibilidad que OpenAI use estos datos para otros fines.\",\n+    \"VirtualOffice\": \"Oficina Virtual\",\n+    \"VirtualOffice_Info\": \"Conversaciones con expertos ficticios para familiarizarse con \u00e1reas fuera de su especializaci\u00f3n y hacer preguntas m\u00e1s espec\u00edficas a expertos reales de la universidad.\",\n+    \"WritingHelp\": \"Ayuda con la Escritura\",\n+    \"aiOverviewPage\": \"P\u00e1gina de Visi\u00f3n General de IA\",\n+    \"confirmButton\": \"Confirmar\",\n+    \"copiedToolTip\": \"Copiado!\",\n+    \"copyTooTip\": \"Copiar\",\n+    \"copywritingAssistanceRequest\": \"Necesito ayuda con la redacci\u00f3n. Estoy trabajando en un proyecto que involucra comunicar un mensaje o idea de manera clara y atractiva. \u00bfPodr\u00edas ayudarme a evaluar mi estilo de escritura actual y darme consejos y estrategias para mejorar mi redacci\u00f3n? Tambi\u00e9n estoy buscando estrategias para entender mejor a mi audiencia y usar un lenguaje atractivo para transmitir mi mensaje.\",\n+    \"copywritingExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"dataAnalysisAssistanceRequest\": \"He recopilado recientemente un conjunto de datos grande y busco asistencia para analizar estos datos. La colecci\u00f3n incluye [descripci\u00f3n de los datos], y quiero [objetivo de an\u00e1lisis]. \u00bfPodr\u00edas ayudarme a analizar estos datos y darme consejos sobre c\u00f3mo interpretar los resultados?\",\n+    \"dataProtection\": \"Protecci\u00f3n de Datos\",\n+    \"designThinkingAssistanceRequest\": \"Busco apoyo con el Design Thinking. Estoy trabajando en un proyecto que necesita encontrar una soluci\u00f3n creativa a un problema. \u00bfPodr\u00edas ayudarme a entender mejor el proceso de Design Thinking y darme consejos y estrategias para aplicarlo en mi proyecto? Tambi\u00e9n estoy buscando estrategias para prototipar y probar mis ideas, para asegurarme de que mi soluci\u00f3n al problema tenga \u00e9xito. \u00bfPodr\u00edas ayudarme tambi\u00e9n a establecer un bucle de retroalimentaci\u00f3n para mejorar mi soluci\u00f3n de manera iterativa?\",\n+    \"designThinkingExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"dialogueWithFinanceAdvisor\": \"Ahora est\u00e1s conversando con Julia, una asesora financiera ficticia. \u00bfQu\u00e9 te gustar\u00eda saber sobre finanzas?\",\n+    \"eventManagementAssistanceRequest\": \"Estoy planificando un evento [descripci\u00f3n del evento] y busco apoyo en la planificaci\u00f3n. Ya he organizado algunas cosas, pero no estoy seguro de si he pensado en todo o si hay cosas que deber\u00eda considerar. \u00bfPodr\u00edas ayudarme a revisar mi planificaci\u00f3n y darme consejos para mejorarla? Tambi\u00e9n estoy buscando recomendaciones para lugares apropiados, opciones de catering y otros detalles importantes que podr\u00eda haber pasado por alto.\",\n+    \"eventManagementExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la organizaci\u00f3n.\",\n+    \"feedbackAssistanceRequest\": \"Estoy trabajando en un proyecto cient\u00edfico y busco retroalimentaci\u00f3n. No estoy seguro de si mi trabajo cumple con los requisitos o si a\u00fan puedo mejorar mi investigaci\u00f3n. \u00bfPodr\u00edas revisar mi trabajo y darme consejos sobre c\u00f3mo mejorar mi investigaci\u00f3n y fortalecer mi argumentaci\u00f3n?\",\n+    \"financeExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Julia Schneider y eres experta en finanzas. Asesoras al personal de la universidad, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de finanzas de su universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"financeUsageNoticeContent\": \"En esta \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su verdad y solo deben tomarse como sugerencias.\",\n+    \"gamificationAssistanceRequest\": \"Busco apoyo para integrar la gamificaci\u00f3n en mi proyecto. Quiero incorporar un elemento l\u00fadico en mi aplicaci\u00f3n para motivar a los usuarios y aumentar el compromiso. \u00bfPodr\u00edas ayudarme a desarrollar una estrategia para la integraci\u00f3n de gamificaci\u00f3n en mi proyecto? Tambi\u00e9n estoy buscando consejos sobre c\u00f3mo seleccionar mec\u00e1nicas y elementos de juego adecuados para motivar a mis usuarios y crear una experiencia de juego atractiva. \u00bfPodr\u00edas tambi\u00e9n ayudarme a medir y evaluar los efectos de la gamificaci\u00f3n en mi proyecto?\",\n+    \"gamificationExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"guideline_Title\": \"Gu\u00eda para el manejo de HAWKI\",\n+    \"ideagenerationAssistanceRequest\": \"Estoy buscando ideas creativas para un proyecto en el que estoy trabajando. Quiero expandir mi perspectiva y desarrollar nuevas ideas y enfoques para mi proyecto. \u00bfPodr\u00edas ayudarme a ampliar mi forma de pensar y darme consejos y estrategias para la generaci\u00f3n de ideas?\",\n+    \"ideagenerationExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"imprint\": \"Imprint\",\n+    \"infoPanel_Content\": \"<h1 class=\\\"headerLine\\\">Actualizaci\u00f3n de HAWKI #002</h1><h3>\u00a1Hemos mejorado a\u00fan m\u00e1s HAWKI para ti!</h3><p><b>Funcionalidad:</b></p><p>Multiling\u00fce con textos traducidos al ingl\u00e9s, italiano, franc\u00e9s y espa\u00f1ol.</p><p>Visualizaci\u00f3n de f\u00f3rmulas matem\u00e1ticas, LaTex y mejora de resaltado de sintaxis.</p><p><b>Calidad de vida:</b></p><p>Modo oscuro para nuestros noct\u00e1mbulos.</p><p>Las indicaciones del sistema ahora son visibles de forma transparente.</p><p><b>Actualizaciones de seguridad:</b></p><p>Hemos hecho que HAWKI sea m\u00e1s seguro en algunas \u00e1reas y actualizado la estructura del c\u00f3digo.</p><p>Agradecemos a Thorger Jansen (Descubrimiento, An\u00e1lisis, Coordinaci\u00f3n) del <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://www.sec-consult.com\\\"><b>Laboratorio de Vulnerabilidad SEC Consult</b></a> por informar responsablemente sobre los problemas identificados y colaborar con nosotros para solucionarlos.</p>\",\n+    \"interviewAssistanceRequest\": \"Me estoy preparando para una entrevista y busco apoyo para crear preguntas. \u00bfPodr\u00edas ayudarme a formular preguntas que me permitan recopilar la informaci\u00f3n deseada? Me gustar\u00eda usar preguntas abiertas. \u00bfPodr\u00edas tambi\u00e9n ayudarme a formular preguntas adaptadas a las necesidades de mi entrevistado, permiti\u00e9ndole compartir en detalle sus experiencias y opiniones? Tambi\u00e9n estoy buscando consejos sobre c\u00f3mo llevar a cabo una entrevista exitosa y c\u00f3mo grabar y organizar la informaci\u00f3n recopilada.\",\n+    \"interviewExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"language\": \"Idioma\",\n+    \"lawDialogueIntroduction\": \"Ahora est\u00e1s conversando con Luis, un asesor legal ficticio. \u00bfQu\u00e9 te gustar\u00eda saber sobre asesor\u00eda legal?\",\n+    \"lawExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Luis Martinez y eres experto en asesor\u00eda legal. Asesoras al personal de la universidad, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de derecho de su universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"lawUsageNoticeContent\": \"En esta \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su veracidad y solo deben tomarse como sugerencias.\",\n+    \"learningAssistanceRequest\": \"Busco apoyo en estrategias de aprendizaje. Tengo dificultades para aprender de manera efectiva y completar mis tareas. No estoy seguro de qu\u00e9 estrategias de aprendizaje son las m\u00e1s adecuadas para m\u00ed o c\u00f3mo puedo organizar mejor mi tiempo para alcanzar mis objetivos de aprendizaje. \u00bfPodr\u00edas ayudarme a evaluar mi situaci\u00f3n actual de aprendizaje y darme consejos y estrategias para mejorar mis estrategias de aprendizaje?\",\n+    \"learningExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la organizaci\u00f3n.\",\n+    \"literatureResearchAssistanceRequest\": \"Estoy trabajando en un proyecto y necesito ayuda con la b\u00fasqueda de literatura relevante. Mi tema es [Descripci\u00f3n del tema], y estoy buscando art\u00edculos acad\u00e9micos y libros que traten este tema. No estoy seguro de qu\u00e9 fuentes usar o c\u00f3mo hacer mi b\u00fasqueda m\u00e1s efectiva. \u00bfPodr\u00edas ayudarme a encontrar fuentes relevantes y darme consejos para llevar a cabo mi b\u00fasqueda de manera efectiva?\",\n+    \"marketingDialogueIntroduction\": \"Ahora est\u00e1s conversando con Felix, un ficticio empleado de marketing. \u00bfQu\u00e9 te gustar\u00eda saber sobre marketing?\",\n+    \"marketingExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Felix M\u00fcller y eres experto en marketing. Asesoras al personal de la universidad, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de marketing de su universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"marketingUsageNoticeContent\": \"En esta \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su verdad y solo deben tomarse como sugerencias.\",\n+    \"methodologyAssistanceRequest\": \"Estoy trabajando en un proyecto cient\u00edfico y busco apoyo con la metodolog\u00eda. He decidido usar [descripci\u00f3n de la metodolog\u00eda elegida] para lograr [objetivo de la investigaci\u00f3n], pero no estoy seguro de si estoy aplicando correctamente la metodolog\u00eda o si hay otros m\u00e9todos que ser\u00edan m\u00e1s adecuados. \u00bfPodr\u00edas ayudarme a revisar mi metodolog\u00eda y ofrecerme consejos para mejorarla o sugerir alternativas?\",\n+    \"motivationAssistanceRequest\": \"Busco apoyo para mejorar mi motivaci\u00f3n en la vida universitaria. A menudo me siento abrumado y desmotivado cuando intento seguir el ritmo de mis estudios y otras obligaciones. \u00bfPodr\u00edas ayudarme a evaluar mi situaci\u00f3n actual y darme consejos y estrategias para mejorar mi motivaci\u00f3n? Tambi\u00e9n estoy buscando estrategias para definir mejor mis objetivos y mantener un registro de mis progresos.\",\n+    \"motivationExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la organizaci\u00f3n.\",\n+    \"organisationExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la organizaci\u00f3n.\",\n+    \"password\": \"Contrase\u00f1a\",\n+    \"programmingDialogueIntroduction\": \"Ahora est\u00e1s hablando con Fatima, una programadora ficticia. \u00bfQu\u00e9 te gustar\u00eda saber sobre programaci\u00f3n?\",\n+    \"programmingExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Fatima Kamara y eres experta en programaci\u00f3n. Asesoras al personal de la universidad, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de programaci\u00f3n de su universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"programmingUsageNoticeContent\": \"En este \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su veracidad y solo deben tomarse como sugerencias. Esto es especialmente cierto en el \u00e1rea de programaci\u00f3n.\",\n+    \"promptSuggestion\": \"Sugerencia de Prompt\",\n+    \"prototypingAssistanceRequest\": \"Estoy buscando apoyo para el prototipado en mi proceso de dise\u00f1o. \u00bfPodr\u00edas ayudarme a llevar a cabo un prototipado efectivo que me permita visualizar y probar mis ideas de dise\u00f1o? Busco consejos y orientaci\u00f3n sobre la selecci\u00f3n de los mejores materiales y herramientas para mi prototipado, y c\u00f3mo considerar mejor las necesidades de mi p\u00fablico objetivo. \u00bfPodr\u00edas tambi\u00e9n ayudarme a adaptar mi prototipado a varios escenarios para asegurar que sea relevante para todas las posibles experiencias de usuario? Tambi\u00e9n estoy buscando estrategias para recopilar retroalimentaci\u00f3n de mis prototipos e integrarla en mi proceso de dise\u00f1o.\",\n+    \"prototypingExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en el campo de la creatividad.\",\n+    \"researchAssistanceRequest\": \"Estoy trabajando en un proyecto cient\u00edfico y busco apoyo en la investigaci\u00f3n. Mi tema es [Descripci\u00f3n del tema], y necesito m\u00e1s informaci\u00f3n sobre [preguntas o temas espec\u00edficos]. Ya he encontrado algunas fuentes, pero no estoy seguro de si he encontrado todas las fuentes relevantes o si deber\u00eda utilizar recursos adicionales. \u00bfPodr\u00edas ayudarme a encontrar fuentes adicionales y darme consejos para llevar a cabo mi b\u00fasqueda de manera efectiva?\",\n+    \"scienceDialogueIntroduction\": \"Ahora est\u00e1s hablando con Sophie, una investigadora ficticia. \u00bfQu\u00e9 te gustar\u00eda saber sobre investigaci\u00f3n?\",\n+    \"scienceExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Sophie Martin y eres experta en investigaci\u00f3n. Asesoras al personal de la universidad, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de ciencias de su universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"scienceUsageNoticeContent\": \"En esta \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su veracidad y solo deben tomarse como sugerencias. Es especialmente importante en el \u00e1rea de ciencia evaluar cr\u00edticamente la informaci\u00f3n.\",\n+    \"scientificWorkExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres experto en trabajo cient\u00edfico.\",\n+    \"settings\": \"Ajustes\",\n+    \"socialMediaDialogueIntroduction\": \"Ahora est\u00e1s conversando con Erik, un empleado ficticio de medios sociales. \u00bfQu\u00e9 te gustar\u00eda saber sobre medios sociales?\",\n+    \"socialMediaExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania. Tu nombre es Erik Hansen y eres un experto en medios sociales. Asesoras al personal universitario, estudiantes y profesores. Si las personas desean hablar directamente con alguien que trabaja en el departamento de medios sociales de tu universidad, los remites a la p\u00e1gina oficial de la universidad.\",\n+    \"socialMediaUsageNoticeContent\": \"En esta \u00e1rea, hablar\u00e1s con personas ficticias. Las declaraciones en esta \u00e1rea no pueden ser verificadas en t\u00e9rminos de su veracidad y solo deben tomarse como sugerencias. Esto es especialmente cierto en el contexto de los medios sociales, donde la informaci\u00f3n circula r\u00e1pidamente y en gran volumen.\",\n+    \"stressManagementAssistanceRequest\": \"Estoy buscando apoyo en el manejo del estr\u00e9s en la vida universitaria. A menudo me siento estresado y abrumado al intentar cumplir con mis obligaciones acad\u00e9micas, mi vida social y otras responsabilidades. \u00bfPodr\u00edas ayudarme a evaluar mi situaci\u00f3n actual de estr\u00e9s y darme consejos y estrategias para manejar el estr\u00e9s en la vida universitaria? Tambi\u00e9n estoy buscando estrategias para organizar mejor mi tiempo y establecer mis prioridades a fin de reducir mi carga de estr\u00e9s.\",\n+    \"stressManagementExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres un experto en el campo de la organizaci\u00f3n.\",\n+    \"successfulRegistration\": \"Su registro fue exitoso.\",\n+    \"tableCreationAssistanceRequest\": \"Necesito apoyo para crear tablas. He recopilado datos que quiero representar en una tabla, pero no estoy seguro de c\u00f3mo formatear y organizar mejor la tabla para presentar la informaci\u00f3n de forma clara y comprensible. \u00bfPodr\u00edas ayudarme a dise\u00f1ar una tabla adecuada y darme consejos sobre c\u00f3mo estructurar y formatear la tabla? Tambi\u00e9n estoy buscando consejos sobre c\u00f3mo presentar mejor la informaci\u00f3n en la tabla para que sea f\u00e1cilmente accesible para los lectores.\",\n+    \"tableExpertiseMessage\": \"Eres un asistente \u00fatil que trabaja en una universidad en Alemania y eres un experto en el campo de la organizaci\u00f3n.\",\n+    \"theme\": \"Tema\",\n+    \"timeManagementAssistanceRequest\": \"Estoy buscando apoyo en la gesti\u00f3n del tiempo. Tengo problemas para utilizar mi tiempo de manera efectiva y completar mis tareas a tiempo. No estoy seguro de c\u00f3mo puedo organizar mejor mi tiempo para alcanzar mis objetivos y evitar el estr\u00e9s. \u00bfPodr\u00edas ayudarme a evaluar mi uso actual del tiempo y ofrecerme consejos y estrategias para mejorar mi gesti\u00f3n del tiempo? Tambi\u00e9n estoy buscando estrategias para establecer mis prioridades y planificar mejor mi tiempo a fin de aumentar mi productividad y alcanzar mis objetivos.\",\n+    \"unableToSaveRegistration\": \"<b>No se pudo guardar su registro.<br>Por favor, int\u00e9ntelo de nuevo.</b>\",\n+    \"usageNoticeTitle\": \"Aviso de Uso\",\n+    \"usage_guideline\": \"<p>Bienvenidos a la gu\u00eda para el manejo de HAWKI, basada en la API de OpenAI. Esta gu\u00eda est\u00e1 dise\u00f1ada para todos los miembros de la universidad - estudiantes, docentes y personal - para proporcionar una l\u00ednea clara de c\u00f3mo manejar esta tecnolog\u00eda de forma responsable. Por favor, tenga en cuenta que esta gu\u00eda complementa las condiciones de uso de OpenAI y no es exhaustiva. Es responsabilidad de los usuarios cumplir con estas condiciones.</p><h3>Disposiciones generales</h3><p><b>Lo que est\u00e1 prohibido:</b></p><ul><li>Introducir datos personales sobre uno mismo o sobre otros.</li><li>Usar los servicios para actividades ilegales, da\u00f1inas o abusivas.</li><li>Infracci\u00f3n, abuso o violaci\u00f3n de los derechos de otros.</li><li>Modificaci\u00f3n, copia, alquiler, venta o distribuci\u00f3n de nuestros servicios.</li><li>Intento de ingenier\u00eda inversa, descompilaci\u00f3n o descubrimiento del c\u00f3digo fuente o componentes subyacentes.</li><li>Extracci\u00f3n autom\u00e1tica o programada de datos o resultados.</li><li>Afirmar que el resultado fue creado por humanos cuando no es as\u00ed.</li><li>Alteraci\u00f3n o interrupci\u00f3n de los servicios o evasi\u00f3n de medidas de protecci\u00f3n.</li><li>Uso de resultados para desarrollar modelos competidores.</li></ul><p><b>Lo que debe considerarse:</b></p><p>Usted es responsable de la entrada que proporciona y del resultado que genera. Debe asegurarse de que su entrada no infrinja derechos y de que posee todos los derechos, licencias y permisos necesarios para proporcionarla.</p><b>Precisi\u00f3n:</b><p>El uso de los servicios puede llevar a resultados inexactos o err\u00f3neos. Es importante que revise cr\u00edticamente el resultado y no lo utilice como la \u00fanica fuente de verdad. Sus entradas no son almacenadas por HAWK, sino por OpenAI por 30 d\u00edas para detectar posibles abusos. Despu\u00e9s de 30 d\u00edas, los datos son eliminados. Sus entradas no se utilizan para mejorar la seguridad o calidad del producto.</p><h3>Disposiciones espec\u00edficas</h3><p>Existen una <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://wiki.hawk.de/pages/viewpage.action?spaceKey=HL&title=Leitlinie+generative+KI\\\"><b>gu\u00eda provisional y una declaraci\u00f3n de independencia</b></a> para el uso de sistemas de IA generativa.</p><p><b>Para estudiantes:</b></p><ul><li>Use HAWKI para apoyar su proceso de aprendizaje, pero no dependa exclusivamente de las respuestas generadas.</li><li>No comparta datos personales o informaci\u00f3n a trav\u00e9s de HAWKI. Tampoco datos personales de otros.</li><li>Usted asume la autor\u00eda. Esto significa que garantiza la calidad de la respuesta y asume la responsabilidad del contenido. El uso de IA y la naturaleza de su contribuci\u00f3n deben ser clarificados.</li></ul><p><b>Para docentes:</b></p><ul><li>Est\u00e1 prohibido usar HAWKI para corregir trabajos de estudiantes si estos contienen datos personales que pueden extraerse.</li><li>Utilice HAWKI como una herramienta complementaria para preparar materiales de ense\u00f1anza, pero aseg\u00farese de verificar todo el contenido por su precisi\u00f3n y relevancia.</li></ul><p><b>Para el personal:</b></p><ul><li>Est\u00e1 estrictamente prohibido introducir contratos de confidencialidad o documentos internamente determinados en HAWKI. Asimismo, documentos que contengan datos personales sobre uno mismo o sobre otros.</li><li>Utilice HAWKI para aumentar la eficiencia y apoyar sus tareas diarias, siempre respetando las pol\u00edticas de privacidad y las regulaciones de seguridad de la universidad.</li></ul><p>Esta gu\u00eda sirve como una herramienta de orientaci\u00f3n para el manejo responsable de HAWKI. Es crucial que todos los usuarios comprendan y sigan estas disposiciones para asegurar un uso seguro y \u00e9tico de esta tecnolog\u00eda. La universidad solo puede ofrecer este servicio si no se introducen datos personales. Para cualquier pregunta o incertidumbre, por favor contacte a Prof. Stefan W\u00f6lwer, Arian Sadafi, Jonas Trippler o Vincent Timm. Independientemente de esta gu\u00eda, se aplican las <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://openai.com/policies/business-terms\\\"><b>condiciones de uso de OpenAI</b>.</a></p>\",\n+    \"username\": \"Nombre de Usuario\",\n+    \"welcomeBackTitle\": \"\u00a1Bienvenido de nuevo!\",\n+    \"writingAssistanceRequest\": \"Estoy trabajando en un proyecto cient\u00edfico y necesito ayuda con el estilo de escritura y la formateaci\u00f3n. Ya he redactado mi trabajo, pero no estoy seguro de si he seguido todas las directrices de formateo y convenciones de escritura correctamente. \u00bfPodr\u00edas ayudarme a revisar mi trabajo y ofrecerme consejos para mejorar la formateaci\u00f3n y el estilo de escritura?\"\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/resources/language/fr_FR.json",
          "status": "added",
          "additions": 141,
          "deletions": 0,
          "patch": "@@ -0,0 +1,141 @@\n+{\n+    \"AI_Icon\": \"IA\",\n+    \"AboutHAWKI\": \"\u00c0 Propos de HAWKI\",\n+    \"AboutHAWKI_ArianInfo\": \" | Assistant de Recherche | HAWKI\",\n+    \"AboutHAWKI_Info\": \"L'offre a \u00e9t\u00e9 d\u00e9velopp\u00e9e au Laboratoire de Design d'Interaction de la HAWK pour offrir \u00e0 tous les membres de l'universit\u00e9 la possibilit\u00e9 d'int\u00e9grer l'intelligence artificielle dans leurs processus de travail et d'avoir un espace de rencontre pour \u00e9ventuellement d\u00e9velopper de nouvelles fa\u00e7ons de travailler et susciter une discussion interne \u00e0 l'universit\u00e9 sur l'utilisation de l'IA. Cette offre vise \u00e9galement \u00e0 soutenir didactiquement le d\u00e9veloppement d'une compr\u00e9hension du fonctionnement d'un tel mod\u00e8le de langage et fournit donc des indications sur les bons prompts (entr\u00e9es de texte) fonctionnant bien dans les diff\u00e9rents domaines. Nous sommes heureux de recevoir des retours constructifs pour faire \u00e9voluer cette offre en fonction de vos besoins et de vos d\u00e9couvertes.\",\n+    \"AboutHAWKI_JonasInfo\": \" | Assistant de Recherche | Pratique\",\n+    \"AboutHAWKI_StefanInfo\": \" | Environnements Num\u00e9riques | Design d'Interaction \",\n+    \"AboutHAWKI_VincentInfo\": \" | Assistant de Recherche | Responsable du Laboratoire de Design d'Interaction\",\n+    \"BetaMessage\": \"Version b\u00eata - Mod\u00e8le GPT4-Turbo\",\n+    \"BrainStorming\": \"Remue-M\u00e9ninges\",\n+    \"Caution\": \"Prudence\",\n+    \"Caution_Info\": \"- G\u00e9n\u00e8re parfois des informations dangereuses ou biais\u00e9es.\",\n+    \"Chat\": \"Discussion\",\n+    \"Confirm_Btn\": \"Confirmer\",\n+    \"ContextComprehension\": \"Compr\u00e9hension du Contexte\",\n+    \"ContextComprehension_Info\": \"- Se souvient de ce qui a \u00e9t\u00e9 dit pr\u00e9c\u00e9demment dans la conversation.\",\n+    \"Conversation\": \"Conversation\",\n+    \"Conversation_Info\": \"Une zone de discussion comme celle de ChatGPT, pour un d\u00e9marrage rapide de n'importe quelle t\u00e2che.\",\n+    \"Copywriting\": \"R\u00e9daction Publicitaire\",\n+    \"Creativity\": \"Cr\u00e9ativit\u00e9\",\n+    \"DataAnalysis\": \"Analyse de Donn\u00e9es\",\n+    \"DataSecurity\": \"S\u00e9curit\u00e9 des Donn\u00e9es\",\n+    \"DesignThinking\": \"Pens\u00e9e Design\",\n+    \"EventManagement\": \"Gestion d'\u00c9v\u00e9nements\",\n+    \"FeedBack\": \"R\u00e9troaction\",\n+    \"Feedback_Placeholder\": \"Vous pouvez laisser votre avis ici\",\n+    \"Finance\": \"Finance\",\n+    \"Formatting\": \"Formatage\",\n+    \"Formatting_Info\": \"- Fournit des r\u00e9sultats g\u00e9n\u00e9r\u00e9s sous la forme souhait\u00e9e.\",\n+    \"Gamification\": \"Gamification\",\n+    \"Impressum\": \"Mentions L\u00e9gales\",\n+    \"Incomplete\": \"Incomplet\",\n+    \"Incomplete_Info\": \"- G\u00e9n\u00e8re parfois des informations erron\u00e9es.\",\n+    \"InputField_Placeholder\": \"Vous pouvez poser votre question ici\",\n+    \"InterviewQuestions\": \"Questions d'Entretien\",\n+    \"Iteration\": \"It\u00e9ration\",\n+    \"Iteration_Info\": \"- Permet des corrections ult\u00e9rieures des r\u00e9sultats g\u00e9n\u00e9r\u00e9s.\",\n+    \"LearnSpace\": \"Espace d'Apprentissage\",\n+    \"LearnSpace_Info\": \"Les salles d'apprentissage sont con\u00e7ues pour aider \u00e0 comprendre les diff\u00e9rentes possibilit\u00e9s de soutien et \u00e0 apprendre ce qui constitue une instruction efficace.\",\n+    \"LearnStrategy\": \"Strat\u00e9gies d'Apprentissage\",\n+    \"LegalConsultation\": \"Consultation Juridique\",\n+    \"Limitation\": \"Limitation\",\n+    \"Limitation_Info\": \"- Le mod\u00e8le de langue acc\u00e8de exclusivement aux connaissances jusqu'en d\u00e9cembre 2023.\",\n+    \"Limitations\": \"Limitations\",\n+    \"LiteratureSearch\": \"Recherche Documentaire\",\n+    \"Login\": \"Connexion\",\n+    \"LoginFailedMSG\": \"\u00c9chec de la connexion!\",\n+    \"Marketing\": \"Marketing\",\n+    \"Methodology\": \"M\u00e9thodologie\",\n+    \"Motivation\": \"Motivation\",\n+    \"Organization\": \"Organisation\",\n+    \"Possibility\": \"Possibilit\u00e9s\",\n+    \"Programming\": \"Programmation\",\n+    \"Prototyping\": \"Prototypage\",\n+    \"Research\": \"Recherche\",\n+    \"ResearchSupport\": \"Support \u00e0 la Recherche\",\n+    \"ResearchWork\": \"Travaux de Recherche\",\n+    \"SignOut\": \"Se D\u00e9connecter\",\n+    \"SocialMedia\": \"M\u00e9dias Sociaux\",\n+    \"StressManagement\": \"Gestion du Stress\",\n+    \"System\": \"Syst\u00e8me\",\n+    \"SystemPromptInfo\": \"Nous envoyons cette invite syst\u00e8me en arri\u00e8re-plan pour am\u00e9liorer le r\u00e9sultat.\",\n+    \"System_Content\": \"Vous \u00eates un assistant utile travaillant \u00e0 l'Universit\u00e9 des Arts Appliqu\u00e9s et des Sciences de Basse-Saxe.\",\n+    \"Tables\": \"Tableaux\",\n+    \"TimeManagement\": \"Gestion du Temps\",\n+    \"Upgrade\": \"Mise \u00e0 Niveau vers GPT4\",\n+    \"Upgrade_Content\": \"L'universit\u00e9 met maintenant \u00e0 votre disposition GPT4. Les entr\u00e9es plus complexes peuvent d\u00e9sormais \u00eatre mieux comprises et trait\u00e9es. Vous devriez maintenant obtenir des r\u00e9ponses plus pr\u00e9cises. Le d\u00e9lai d'attente pour une r\u00e9ponse peut l\u00e9g\u00e8rement s'allonger.\",\n+    \"UsageHint\": \"Conseil d'Utilisation\",\n+    \"UsageHint_Content\": \"Veuillez ne pas saisir de donn\u00e9es personnelles. Nous utilisons l'API d'OpenAI. Cela signifie que les donn\u00e9es que vous entrez seront envoy\u00e9es directement \u00e0 OpenAI. Il est possible qu'OpenAI r\u00e9utilise ces donn\u00e9es.\",\n+    \"VirtualOffice\": \"Bureau Virtuel\",\n+    \"VirtualOffice_Info\": \"Des conversations avec des experts fictifs pour se familiariser avec des domaines non sp\u00e9cialis\u00e9s et poser des questions plus cibl\u00e9es aux v\u00e9ritables experts universitaires.\",\n+    \"WritingHelp\": \"Aide \u00e0 l'\u00c9criture\",\n+    \"aiOverviewPage\": \"Page d'Aper\u00e7u de l'IA\",\n+    \"confirmButton\": \"Confirmer\",\n+    \"copiedToolTip\": \"Copi\u00e9!\",\n+    \"copyTooTip\": \"Copier\",\n+    \"copywritingAssistanceRequest\": \"J'ai besoin d'aide en r\u00e9daction publicitaire. Je travaille sur un projet visant \u00e0 communiquer clairement et de mani\u00e8re attrayante un message ou une id\u00e9e. Pourriez-vous s'il vous pla\u00eet m'aider \u00e0 \u00e9valuer ma r\u00e9daction actuelle et me donner des conseils et des astuces pour am\u00e9liorer ma r\u00e9daction publicitaire ? Je cherche \u00e9galement des strat\u00e9gies pour mieux comprendre mon public cible et utiliser un langage attrayant pour transmettre mon message.\",\n+    \"copywritingExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9.\",\n+    \"dataAnalysisAssistanceRequest\": \"J'ai r\u00e9cemment termin\u00e9 la collecte de donn\u00e9es pour mon projet de recherche et j'ai besoin d'aide pour analyser les donn\u00e9es. Mes donn\u00e9es comprennent des enqu\u00eates et des mesures sur diff\u00e9rents aspects de mon sujet de recherche. J'aimerais effectuer une analyse approfondie pour identifier les tendances, les corr\u00e9lations et obtenir des informations significatives pour mes objectifs de recherche. Pouvez-vous m'aider avec \u00e7a ?\",\n+    \"dataProtection\": \"Protection des Donn\u00e9es\",\n+    \"designThinkingAssistanceRequest\": \"Je cherche de l'aide pour le Design Thinking. Je travaille sur un projet qui consiste \u00e0 trouver une solution cr\u00e9ative \u00e0 un probl\u00e8me. Pourriez-vous m'aider \u00e0 mieux comprendre le processus de Design Thinking et me donner des conseils sur son application dans mon projet ? Je cherche \u00e9galement des strat\u00e9gies pour prototyper et tester mes id\u00e9es afin de m'assurer que ma solution au probl\u00e8me sera r\u00e9ussie. Pourriez-vous aussi m'aider \u00e0 mettre en place une boucle de feedback pour am\u00e9liorer it\u00e9rativement ma solution ?\",\n+    \"designThinkingExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9\",\n+    \"dialogueWithFinanceAdvisor\": \"Vous discutez maintenant avec Julia, une consultante financi\u00e8re fictive. Que voulez-vous savoir sur les finances ?\",\n+    \"eventManagementAssistanceRequest\": \"Je suis en train de planifier un \u00e9v\u00e9nement [Description de l'\u00e9v\u00e9nement] et je cherche de l'aide pour l'organisation. J'ai d\u00e9j\u00e0 pris quelques dispositions, mais je ne suis pas s\u00fbr d'avoir pens\u00e9 \u00e0 tout ou s'il y a d'autres aspects que je devrais prendre en compte. Pourriez-vous m'aider \u00e0 v\u00e9rifier mon plan et me donner des conseils pour l'am\u00e9liorer ? Je cherche aussi des recommandations pour des lieux appropri\u00e9s, des options de restauration et d'autres d\u00e9tails importants que j'aurais pu manquer.\",\n+    \"eventManagementExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation.\",\n+    \"feedbackAssistanceRequest\": \"Je travaille actuellement sur un projet scientifique et je cherche des retours. Je ne suis pas s\u00fbr que mon travail r\u00e9ponde aux exigences ou s'il y a des am\u00e9liorations possibles \u00e0 ma recherche. Pourriez-vous examiner mon travail et me donner des conseils pour am\u00e9liorer ma recherche et renforcer mon argumentation ?\",\n+    \"financeExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Julia Schneider et vous \u00eates experte en finance. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille au d\u00e9partement des finances de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"financeUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"gamificationAssistanceRequest\": \"Je cherche de l'aide pour int\u00e9grer la gamification dans mon projet. Je veux ajouter un \u00e9l\u00e9ment ludique \u00e0 mon application pour motiver les utilisateurs et augmenter leur engagement. Pourriez-vous m'aider \u00e0 d\u00e9velopper une strat\u00e9gie pour int\u00e9grer la gamification dans mon projet ? Je cherche aussi des conseils pour choisir les m\u00e9canismes de jeu et les \u00e9l\u00e9ments appropri\u00e9s pour motiver mes utilisateurs et cr\u00e9er une exp\u00e9rience de jeu attrayante. Pourriez-vous \u00e9galement m'aider \u00e0 mesurer et \u00e9valuer les impacts de la gamification sur mon projet ?\",\n+    \"gamificationExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9.\",\n+    \"guideline_Title\": \"Guide d'utilisation de HAWKI\",\n+    \"ideagenerationAssistanceRequest\": \"Je suis \u00e0 la recherche d'id\u00e9es cr\u00e9atives pour un projet sur lequel je travaille. Je veux \u00e9largir ma perspective et d\u00e9velopper de nouvelles id\u00e9es et approches pour mon projet. Pourriez-vous m'aider \u00e0 \u00e9largir ma r\u00e9flexion et me donner des conseils et des astuces pour g\u00e9n\u00e9rer des id\u00e9es ?\",\n+    \"ideagenerationExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9.\",\n+    \"imprint\": \"Mentions L\u00e9gales\",\n+    \"infoPanel_Content\": \"<h1 class=\\\"headerLine\\\">Mise \u00e0 jour de HAWKI #002</h1><h3>Nous avons encore am\u00e9lior\u00e9 HAWKI pour vous !</h3><p><b>Fonctionnalit\u00e9s :</b></p><p>Multi-langue avec des textes traduits pour l'anglais, l'italien, le fran\u00e7ais et l'espagnol.</p><p>Affichage de formules math\u00e9matiques, LaTex et am\u00e9lioration de la mise en \u00e9vidence de la syntaxe.</p><p><b>Qualit\u00e9 de vie :</b></p><p>Mode sombre pour nos couche-tard.</p><p>Les invites syst\u00e8me sont d\u00e9sormais visibles de mani\u00e8re transparente.</p><p><b>Mises \u00e0 jour de s\u00e9curit\u00e9 :</b></p><p>Nous avons rendu HAWKI plus s\u00e9curis\u00e9 dans certains domaines et mis \u00e0 jour la structure du code.</p><p>Nous remercions Thorger Jansen (D\u00e9couverte, Analyse, Coordination) du <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://www.sec-consult.com\\\"><b>Laboratoire de Vuln\u00e9rabilit\u00e9 SEC Consult</b></a> pour avoir signal\u00e9 de mani\u00e8re responsable les probl\u00e8mes identifi\u00e9s et avoir collabor\u00e9 avec nous pour les r\u00e9soudre.</p>\",\n+    \"interviewAssistanceRequest\": \"Je me pr\u00e9pare \u00e0 une entrevue et je cherche de l'aide pour \u00e9laborer des questions. Pourriez-vous m'aider \u00e0 formuler des questions qui me permettront de recueillir les informations souhait\u00e9es ? Je pr\u00e9f\u00e9rerais utiliser des questions ouvertes. Pourriez-vous \u00e9galement m'aider \u00e0 formuler des questions adapt\u00e9es aux besoins de mon interlocuteur, lui permettant de partager ses exp\u00e9riences et ses opinions en d\u00e9tail ? Je cherche \u00e9galement des conseils pour mener une entrevue r\u00e9ussie et pour enregistrer et organiser les informations recueillies.\",\n+    \"interviewExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9.\",\n+    \"language\": \"Langue\",\n+    \"lawDialogueIntroduction\": \"Vous discutez maintenant avec Luis, un conseiller juridique fictif. Que voulez-vous savoir sur les conseils juridiques ?\",\n+    \"lawExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Luis Martinez et vous \u00eates un expert en conseils juridiques. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille au d\u00e9partement juridique de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"lawUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"learningAssistanceRequest\": \"Je cherche de l'aide pour les strat\u00e9gies d'apprentissage. J'ai du mal \u00e0 apprendre efficacement et \u00e0 accomplir mes t\u00e2ches. Je ne suis pas s\u00fbr des strat\u00e9gies d'apprentissage qui me conviennent le mieux ou comment mieux organiser mon temps pour atteindre mes objectifs d'apprentissage. Pourriez-vous \u00e9valuer ma situation d'apprentissage actuelle et me donner des conseils pour am\u00e9liorer mes strat\u00e9gies d'apprentissage ?\",\n+    \"learningExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation\",\n+    \"literatureResearchAssistanceRequest\": \"Je travaille sur un projet et j'ai besoin d'aide pour la recherche de litt\u00e9rature pertinente. Mon sujet est [Description du sujet], et je cherche des articles scientifiques et des livres sur ce sujet. Je ne suis pas s\u00fbr des sources \u00e0 utiliser ou comment rendre ma recherche plus efficace. Pourriez-vous m'aider \u00e0 trouver des sources pertinentes et me donner des conseils pour mener efficacement ma recherche ?\",\n+    \"marketingDialogueIntroduction\": \"Vous discutez maintenant avec Felix, un employ\u00e9 fictif du service marketing. Que voulez-vous savoir sur le marketing ?\",\n+    \"marketingExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Felix M\u00fcller et vous \u00eates un expert en marketing. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille dans le d\u00e9partement marketing de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"marketingUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"methodologyAssistanceRequest\": \"Je travaille sur un projet scientifique et j'ai besoin d'aide pour la m\u00e9thodologie. J'ai d\u00e9cid\u00e9 d'utiliser [Description de la m\u00e9thodologie choisie] pour atteindre [Objectif de la recherche], mais je ne suis pas s\u00fbr de l'appliquer correctement ou s'il existe d'autres m\u00e9thodes plus adapt\u00e9es. Pourriez-vous v\u00e9rifier ma m\u00e9thodologie et me proposer des conseils pour l'am\u00e9liorer ou des alternatives le cas \u00e9ch\u00e9ant ?\",\n+    \"motivationAssistanceRequest\": \"Je cherche de l'aide pour am\u00e9liorer ma motivation dans ma vie universitaire. Je me sens souvent d\u00e9pass\u00e9 et d\u00e9motiv\u00e9 lorsque j'essaie de suivre mes \u00e9tudes et mes autres engagements. Pourriez-vous \u00e9valuer ma situation actuelle et me donner des conseils pour am\u00e9liorer ma motivation ? Je cherche \u00e9galement des strat\u00e9gies pour mieux d\u00e9finir mes objectifs et suivre mes progr\u00e8s.\",\n+    \"motivationExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation\",\n+    \"organisationExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation.\",\n+    \"password\": \"Mot de Passe\",\n+    \"programmingDialogueIntroduction\": \"Vous discutez maintenant avec Fatima, une programmeuse fictive. Que voulez-vous savoir sur la programmation ?\",\n+    \"programmingExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Fatima Kamara et vous \u00eates experte en programmation. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille dans le d\u00e9partement de programmation de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"programmingUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"promptSuggestion\": \"Suggestion de Prompt\",\n+    \"prototypingAssistanceRequest\": \"Je cherche de l'aide pour le prototypage dans mon processus de conception. Pourriez-vous m'aider \u00e0 r\u00e9aliser un prototypage efficace qui m'aide \u00e0 visualiser et tester mes id\u00e9es de conception ? Je cherche des conseils sur le choix des meilleurs mat\u00e9riaux et outils pour mon prototypage, et comment mieux prendre en compte les besoins de ma cible. Pourriez-vous m'aider \u00e0 adapter mon prototypage \u00e0 diff\u00e9rents sc\u00e9narios pour qu'il soit pertinent pour toutes les exp\u00e9riences utilisateur possibles ?\",\n+    \"prototypingExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de la cr\u00e9ativit\u00e9.\",\n+    \"researchAssistanceRequest\": \"Je travaille actuellement sur un projet scientifique et j'ai besoin d'aide pour la recherche. Mon sujet est [Description du sujet], et j'ai besoin de plus d'informations sur [Questions ou sujets sp\u00e9cifiques]. J'ai d\u00e9j\u00e0 trouv\u00e9 quelques sources, mais je ne suis pas s\u00fbr d'avoir trouv\u00e9 toutes les sources pertinentes ou si je devrais utiliser d'autres ressources. Pourriez-vous m'aider \u00e0 trouver des sources suppl\u00e9mentaires et me donner des conseils pour mener efficacement ma recherche ?\",\n+    \"scienceDialogueIntroduction\": \"Vous discutez maintenant avec Sophie, une chercheuse fictive. Que voulez-vous savoir sur la recherche ?\",\n+    \"scienceExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Sophie Martin et vous \u00eates experte en recherche. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille dans le d\u00e9partement scientifique de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"scienceUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"scientificWorkExpertiseMessage\": \"\",\n+    \"settings\": \"Param\u00e8tres\",\n+    \"socialMediaDialogueIntroduction\": \"Vous discutez maintenant avec Erik, un employ\u00e9 fictif des m\u00e9dias sociaux. Que voulez-vous savoir sur les m\u00e9dias sociaux ?\",\n+    \"socialMediaExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne. Vous vous appelez Erik Hansen et vous \u00eates un expert en m\u00e9dias sociaux. Vous conseillez le personnel de l'universit\u00e9, les \u00e9tudiants et les professeurs. Si les gens veulent parler directement \u00e0 quelqu'un qui travaille dans le d\u00e9partement des m\u00e9dias sociaux de votre universit\u00e9, vous les renvoyez \u00e0 la page d'accueil officielle de l'universit\u00e9.\",\n+    \"socialMediaUsageNoticeContent\": \"Dans cette section, vous discutez avec des personnes fictives. Les d\u00e9clarations dans cette section ne peuvent pas \u00eatre v\u00e9rifi\u00e9es pour leur exactitude et ne doivent servir que de suggestions.\",\n+    \"stressManagementAssistanceRequest\": \"Je cherche de l'aide pour la gestion du stress dans ma vie universitaire. Je me sens souvent stress\u00e9 et d\u00e9pass\u00e9 lorsque j'essaie de suivre mes obligations acad\u00e9miques, ma vie sociale et d'autres engagements. Pourriez-vous \u00e9valuer ma situation de stress actuelle et me donner des conseils pour faire face au stress \u00e0 l'universit\u00e9 ? Je cherche aussi des strat\u00e9gies pour mieux organiser mon temps et d\u00e9finir mes priorit\u00e9s.\",\n+    \"stressManagementExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation.\",\n+    \"successfulRegistration\": \"Votre inscription a \u00e9t\u00e9 r\u00e9ussie.\",\n+    \"tableCreationAssistanceRequest\": \"J'ai besoin d'aide pour cr\u00e9er des tableaux. J'ai collect\u00e9 des donn\u00e9es que je veux repr\u00e9senter dans un tableau, mais je ne suis pas s\u00fbr de la meilleure fa\u00e7on de le formater et de l'organiser pour pr\u00e9senter les informations de mani\u00e8re claire et compr\u00e9hensible. Pourriez-vous m'aider \u00e0 concevoir un tableau appropri\u00e9 et me donner des conseils sur la conception et la formatage du tableau ? Je cherche \u00e9galement des conseils sur la meilleure fa\u00e7on de pr\u00e9senter les informations dans le tableau pour les rendre facilement accessibles aux lecteurs.\",\n+    \"tableExpertiseMessage\": \"Vous \u00eates un assistant utile travaillant dans une universit\u00e9 en Allemagne et vous \u00eates un expert dans le domaine de l'organisation.\",\n+    \"theme\": \"Th\u00e8me\",\n+    \"timeManagementAssistanceRequest\": \"Je cherche de l'aide pour la gestion du temps. J'ai du mal \u00e0 utiliser mon temps efficacement et \u00e0 accomplir mes t\u00e2ches en temps voulu. Je ne suis pas s\u00fbr de comment mieux organiser mon temps pour atteindre mes objectifs et \u00e9viter le stress. Pourriez-vous \u00e9valuer mon utilisation actuelle du temps et me donner des conseils pour am\u00e9liorer ma gestion du temps ? Je cherche aussi des strat\u00e9gies pour d\u00e9finir mes priorit\u00e9s et mieux planifier mon temps pour augmenter ma productivit\u00e9 et atteindre mes objectifs.\",\n+    \"unableToSaveRegistration\": \"<b>Votre inscription n'a pas pu \u00eatre sauvegard\u00e9e.<br>Veuillez r\u00e9essayer.</b>\",\n+    \"usageNoticeTitle\": \"Conseil d'Utilisation\",\n+    \"usage_guideline\": \"<p>Bienvenue dans le guide d'utilisation de HAWKI, bas\u00e9 sur l'API OpenAI. Ce guide est destin\u00e9 \u00e0 tous les membres de l'universit\u00e9 - \u00e9tudiants, enseignants et personnel - afin de fournir une ligne directrice claire sur la mani\u00e8re de g\u00e9rer cette technologie de mani\u00e8re responsable. Veuillez noter que ce guide compl\u00e8te les conditions d'utilisation d'OpenAI et n'est pas exhaustif. Il est de la responsabilit\u00e9 des utilisateurs de respecter ces conditions.</p><h3>Dispositions g\u00e9n\u00e9rales</h3><p><b>Ce qui est interdit :</b></p><ul><li>Saisir des donn\u00e9es personnelles sur soi-m\u00eame ou sur d'autres personnes.</li><li>Utiliser les services pour des activit\u00e9s ill\u00e9gales, nuisibles ou abusives.</li><li>Viol, abus ou violation des droits d'autres personnes.</li><li>Modification, copie, location, vente ou distribution de nos services.</li><li>Tentative de r\u00e9tro-ing\u00e9nierie, d\u00e9compilation ou de d\u00e9couverte du code source ou des composants sous-jacents.</li><li>Extraction automatique ou programm\u00e9e de donn\u00e9es ou de sorties.</li><li>Pretendre que la sortie a \u00e9t\u00e9 cr\u00e9\u00e9e par des humains lorsque ce n'est pas le cas.</li><li>Alt\u00e9ration ou perturbation des services ou contournement des mesures de protection.</li><li>Utilisation de la sortie pour d\u00e9velopper des mod\u00e8les concurrents.</li></ul><p><b>\u00c0 noter :</b></p><p>Vous \u00eates responsable de l'entr\u00e9e que vous fournissez et de la sortie r\u00e9sultante. Vous devez vous assurer que votre entr\u00e9e ne viole aucun droit et que vous disposez de tous les droits, licences et autorisations n\u00e9cessaires pour fournir l'entr\u00e9e.</p><b>Exactitude :</b><p>L'utilisation des services peut entra\u00eener une sortie inexacte ou incorrecte. Il est important de critiquer la sortie et de ne pas l'utiliser comme la seule source de v\u00e9rit\u00e9. Vos entr\u00e9es ne sont pas stock\u00e9es par HAWK, mais par OpenAI pendant 30 jours pour d\u00e9tecter d'\u00e9ventuels abus. Apr\u00e8s 30 jours, les donn\u00e9es sont supprim\u00e9es. Vos entr\u00e9es ne sont pas utilis\u00e9es pour am\u00e9liorer la s\u00e9curit\u00e9 ou la qualit\u00e9 du produit.</p><h3>Dispositions sp\u00e9cifiques</h3><p>Il existe une <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://wiki.hawk.de/pages/viewpage.action?spaceKey=HL&title=Leitlinie+generative+KI\\\"><b>directive provisoire et une d\u00e9claration d'ind\u00e9pendance</b></a> pour l'utilisation des syst\u00e8mes de IA g\u00e9n\u00e9rative.</p><p><b>Pour les \u00e9tudiants :</b></p><ul><li>Utilisez HAWKI pour soutenir votre processus d'apprentissage, mais ne vous fiez pas exclusivement aux r\u00e9ponses g\u00e9n\u00e9r\u00e9es.</li><li>Ne partagez pas de donn\u00e9es personnelles ou d'informations via HAWKI. Pas m\u00eame celles d'autres personnes.</li><li>Vous prenez la responsabilit\u00e9 de l'auteur. Vous garantissez la qualit\u00e9 de la r\u00e9ponse et assumez la responsabilit\u00e9 du contenu. L'utilisation de l'IA et la nature de sa contribution doit \u00eatre clarifi\u00e9e.</li></ul><p><b>Pour les enseignants :</b></p><ul><li>Il est interdit d'utiliser HAWKI pour corriger les travaux \u00e9tudiants contenant des donn\u00e9es personnelles extractibles.</li><li>Utilisez HAWKI comme un outil compl\u00e9mentaire pour la pr\u00e9paration du mat\u00e9riel p\u00e9dagogique, mais assurez-vous que tout le contenu est v\u00e9rifi\u00e9 pour son exactitude et sa pertinence.</li></ul><p><b>Pour le personnel :</b></p><ul><li>Il est strictement interdit de saisir des accords de confidentialit\u00e9 ou des documents internes dans HAWKI. Ainsi que des documents contenant des donn\u00e9es personnelles sur soi-m\u00eame ou sur d'autres personnes.</li><li>Utilisez HAWKI pour augmenter l'efficacit\u00e9 et soutenir vos t\u00e2ches quotidiennes, tout en respectant les politiques de confidentialit\u00e9 et les r\u00e9glementations de s\u00e9curit\u00e9 de l'universit\u00e9.</li></ul><p>Ce guide vise \u00e0 fournir une orientation pour une gestion responsable de HAWKI. Il est crucial que tous les utilisateurs comprennent et suivent ces dispositions pour assurer une utilisation s\u00fbre et \u00e9thique de cette technologie. L'universit\u00e9 ne peut offrir ce service que si aucune donn\u00e9e personnelle n'est saisie. Pour toute question ou incertitude, veuillez contacter Prof. Stefan W\u00f6lwer, Arian Sadafi, Jonas Trippler ou Vincent Timm. Ind\u00e9pendamment de ce guide, les <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://openai.com/policies/business-terms\\\"><b>conditions d'utilisation d'OpenAI</b></a> s'appliquent.</p>\",\n+    \"username\": \"Nom d'utilisateur\",\n+    \"welcomeBackTitle\": \"Bienvenue de nouveau !\",\n+    \"writingAssistanceRequest\": \"Je travaille sur un projet scientifique et j'ai besoin d'aide pour le style d'\u00e9criture et la mise en forme. J'ai d\u00e9j\u00e0 r\u00e9dig\u00e9 mon travail, mais je ne suis pas s\u00fbr d'avoir suivi toutes les directives de formatage et les conventions d'\u00e9criture correctement. Pourriez-vous m'aider \u00e0 r\u00e9viser mon travail et me donner des conseils pour am\u00e9liorer la mise en forme et le style d'\u00e9criture ?\"\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/resources/language/it_IT.json",
          "status": "added",
          "additions": 141,
          "deletions": 0,
          "patch": "@@ -0,0 +1,141 @@\n+{\n+    \"AI_Icon\": \"IA\",\n+    \"AboutHAWKI\": \"Riguardo HAWKI\",\n+    \"AboutHAWKI_ArianInfo\": \" | Assistente di Ricerca | HAWKI\",\n+    \"AboutHAWKI_Info\": \"L'offerta \u00e8 stata sviluppata nel Laboratorio di Design Interattivo della HAWK per dare a tutti i membri dell'universit\u00e0 la possibilit\u00e0 di integrare l'intelligenza artificiale nei processi di lavoro e avere uno spazio di incontro in modo che possano emergere nuovi metodi di lavoro e possa nascere una discussione interna all'universit\u00e0 sull'uso dell'IA. Questa offerta vuole anche supportare didatticamente, sviluppando una comprensione del funzionamento di tale modello linguistico e fornisce quindi in varie aree anche suggerimenti su prompt (input testuali) che funzionano bene. Accogliamo con favore un feedback costruttivo per sviluppare ulteriormente questa offerta in base alle vostre esigenze e conoscenze.\",\n+    \"AboutHAWKI_JonasInfo\": \" | Assistente di Ricerca | Pratico\",\n+    \"AboutHAWKI_StefanInfo\": \" | Ambienti Digitali | Design dell'Interazione \",\n+    \"AboutHAWKI_VincentInfo\": \" | Assistente di Ricerca | Responsabile del Laboratorio di Design dell'Interazione\",\n+    \"BetaMessage\": \"Versione beta - Modello GPT4-Turbo\",\n+    \"BrainStorming\": \"Brainstorming\",\n+    \"Caution\": \"Attenzione\",\n+    \"Caution_Info\": \" - Genera occasionalmente informazioni pericolose o prevenute.\",\n+    \"Chat\": \"Chat\",\n+    \"Confirm_Btn\": \"Conferma\",\n+    \"ContextComprehension\": \"Comprensione del Contesto\",\n+    \"ContextComprehension_Info\": \" - Ricorda ci\u00f2 che \u00e8 stato detto precedentemente nella conversazione.\",\n+    \"Conversation\": \"Conversazione\",\n+    \"Conversation_Info\": \"Una zona di chat come ChatGPT, per un rapido inizio in qualsiasi compito.\",\n+    \"Copywriting\": \"Copywriting\",\n+    \"Creativity\": \"Creativit\u00e0\",\n+    \"DataAnalysis\": \"Analisi dei Dati\",\n+    \"DataSecurity\": \"Protezione dei Dati\",\n+    \"DesignThinking\": \"Design Thinking\",\n+    \"EventManagement\": \"Gestione degli Eventi\",\n+    \"FeedBack\": \"Feedback\",\n+    \"Feedback_Placeholder\": \"Qui puoi lasciare il tuo feedback\",\n+    \"Finance\": \"Finanze\",\n+    \"Formatting\": \"Formattazione\",\n+    \"Formatting_Info\": \" - Mostra i risultati generati nel formato desiderato.\",\n+    \"Gamification\": \"Gamificazione\",\n+    \"Impressum\": \"Impronta\",\n+    \"Incomplete\": \"Incompleto\",\n+    \"Incomplete_Info\": \" - Genera occasionalmente informazioni errate.\",\n+    \"InputField_Placeholder\": \"Qui puoi inserire la tua richiesta\",\n+    \"InterviewQuestions\": \"Domande per l'Intervista\",\n+    \"Iteration\": \"Iterazione\",\n+    \"Iteration_Info\": \" - Consente correzioni successive dei risultati generati.\",\n+    \"LearnSpace\": \"Spazio di Apprendimento\",\n+    \"LearnSpace_Info\": \"Gli spazi di apprendimento sono pensati per aiutare a comprendere le varie possibilit\u00e0 di supporto e per imparare cosa rende un prompt efficace.\",\n+    \"LearnStrategy\": \"Strategie di Apprendimento\",\n+    \"LegalConsultation\": \"Consulenza Legale\",\n+    \"Limitation\": \"Limitazione\",\n+    \"Limitation_Info\": \" - Il modello linguistico accede esclusivamente alla conoscenza fino ad dicembre 2023.\",\n+    \"Limitations\": \"Limitazioni\",\n+    \"LiteratureSearch\": \"Ricerca Bibliografica\",\n+    \"Login\": \"Accesso\",\n+    \"LoginFailedMSG\": \"Accesso non riuscito!\",\n+    \"Marketing\": \"Marketing\",\n+    \"Methodology\": \"Metodologia\",\n+    \"Motivation\": \"Motivazione\",\n+    \"Organization\": \"Organizzazione\",\n+    \"Possibility\": \"Possibilit\u00e0\",\n+    \"Programming\": \"Programmazione\",\n+    \"Prototyping\": \"Prototipazione\",\n+    \"Research\": \"Ricerca\",\n+    \"ResearchSupport\": \"Supporto alla Ricerca\",\n+    \"ResearchWork\": \"Lavori di Ricerca\",\n+    \"SignOut\": \"Disconnettersi\",\n+    \"SocialMedia\": \"Social Media\",\n+    \"StressManagement\": \"Gestione dello Stress\",\n+    \"System\": \"Sistema\",\n+    \"SystemPromptInfo\": \"Inviamo questo prompt di sistema in background per migliorare il risultato.\",\n+    \"System_Content\": \"Sei un assistente utile che lavora all'Universit\u00e0 di Scienze Applicate in Bassa Sassonia.\",\n+    \"Tables\": \"Tabelle\",\n+    \"TimeManagement\": \"Gestione del Tempo\",\n+    \"Upgrade\": \"Aggiornamento a GPT-4\",\n+    \"Upgrade_Content\": \"L'universit\u00e0 ora mette a disposizione GPT-4. Le input pi\u00f9 complesse possono ora essere comprese e elaborate meglio. Dovresti ora ricevere risposte pi\u00f9 precise. Il tempo di attesa per una risposta pu\u00f2 aumentare leggermente.\",\n+    \"UsageHint\": \"Avviso di Utilizzo\",\n+    \"UsageHint_Content\": \"Si prega di non inserire dati personali. Usiamo l'API di OpenAI. Ci\u00f2 significa che i dati inseriti vengono inviati direttamente a OpenAI. Esiste la possibilit\u00e0 che OpenAI possa utilizzare questi dati ulteriormente.\",\n+    \"VirtualOffice\": \"Ufficio Virtuale\",\n+    \"VirtualOffice_Info\": \"Conversazioni con esperti fittizi, per abituarsi in aree al di fuori della propria competenza e per fare richieste pi\u00f9 mirate agli esperti reali dell'universit\u00e0.\",\n+    \"WritingHelp\": \"Aiuto nella Scrittura\",\n+    \"aiOverviewPage\": \"Pagina Panoramica sull'IA\",\n+    \"confirmButton\": \"Conferma\",\n+    \"copiedToolTip\": \"Copiato!\",\n+    \"copyTooTip\": \"Copiare\",\n+    \"copywritingAssistanceRequest\": \"Ho bisogno di supporto nel copywriting. Sto lavorando a un progetto che mira a comunicare un messaggio o un'idea in modo chiaro e attraente. Potresti valutare il mio attuale stile di scrittura e fornirmi consigli e suggerimenti per migliorare il mio copywriting? Sto anche cercando strategie per comprendere meglio il mio pubblico di destinazione e utilizzare un linguaggio coinvolgente per trasmettere il mio messaggio.\",\n+    \"copywritingExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"dataAnalysisAssistanceRequest\": \"Ho recentemente raccolto un ampio insieme di dati e ora cerco supporto per analizzare questi dati. La raccolta dati comprende [Descrizione dei dati], e vorrei [Obiettivo dell'analisi]. Potresti aiutarmi ad analizzare i dati e fornirmi consigli per l'interpretazione dei risultati?\",\n+    \"dataProtection\": \"Protezione dei Dati\",\n+    \"designThinkingAssistanceRequest\": \"Sto cercando supporto su Design Thinking. Sto lavorando a un progetto che mira a trovare una soluzione creativa a un problema. Potresti aiutarmi a comprendere meglio il processo di Design Thinking e fornirmi consigli e suggerimenti sull'applicazione di questo processo nel mio progetto? Sto anche cercando strategie per prototipare e testare le mie idee, per assicurarmi che la soluzione al problema sia efficace. Potresti aiutarmi anche a impostare un ciclo di feedback per migliorare iterativamente la mia soluzione?\",\n+    \"designThinkingExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"dialogueWithFinanceAdvisor\": \"Ora stai conversando con Julia, una consulente finanziaria fittizia. Cosa vorresti sapere sulle finanze?\",\n+    \"eventManagementAssistanceRequest\": \"Sto pianificando un evento [Descrizione dell'evento] e cerco supporto nella pianificazione. Ho gi\u00e0 organizzato alcune cose, ma non sono sicuro di aver pensato a tutto o se ci sono aspetti che dovrei considerare. Potresti aiutarmi a rivedere la mia pianificazione e fornirmi consigli per migliorarla? Sto anche cercando raccomandazioni per location adeguate, opzioni di catering e altri dettagli importanti che potrei aver trascurato.\",\n+    \"eventManagementExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"feedbackAssistanceRequest\": \"Sto lavorando a un progetto scientifico e cerco feedback. Non sono sicuro che il mio lavoro soddisfi i requisiti o se posso migliorare la mia ricerca. Potresti dare un'occhiata al mio lavoro e fornirmi consigli su come migliorare la mia ricerca e rafforzare il mio argomento?\",\n+    \"financeExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Julia Schneider e sei un'esperta in finanza. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento finanziario della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"financeUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo.\",\n+    \"gamificationAssistanceRequest\": \"Sto cercando supporto per integrare la gamification nel mio progetto. Voglio includere un elemento ludico nella mia applicazione per motivare gli utenti e aumentare il coinvolgimento. Potresti aiutarmi a sviluppare una strategia per l'integrazione della gamification nel mio progetto? Sto cercando consigli sulla scelta di meccaniche di gioco e elementi adatti per motivare gli utenti e creare un'esperienza di gioco coinvolgente. Potresti aiutarmi anche a misurare e valutare l'impatto della gamification sul mio progetto?\",\n+    \"gamificationExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"guideline_Title\": \"Guida all'uso di HAWKI\",\n+    \"ideagenerationAssistanceRequest\": \"Sto cercando idee creative per un progetto a cui sto lavorando. Voglio ampliare la mia prospettiva e sviluppare nuove idee e approcci per il mio progetto. Potresti aiutarmi ad ampliare il mio pensiero e fornirmi consigli e suggerimenti per la generazione di idee?\",\n+    \"ideagenerationExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"imprint\": \"Colophon\",\n+    \"infoPanel_Content\": \"<h1 class=\\\"headerLine\\\">Aggiornamento di HAWKI #002</h1><h3>Abbiamo ulteriormente migliorato HAWKI per te!</h3><p><b>Funzionalit\u00e0:</b></p><p>Multi-lingua con testi tradotti per inglese, italiano, francese e spagnolo.</p><p>Visualizzazione di formule matematiche, LaTex e miglioramento dell'evidenziazione della sintassi.</p><p><b>Qualit\u00e0 della vita:</b></p><p>Modalit\u00e0 scura per i nostri nottambuli.</p><p>Le indicazioni di sistema sono ora visibili in modo trasparente.</p><p><b>Aggiornamenti di sicurezza:</b></p><p>Abbiamo reso HAWKI pi\u00f9 sicuro in alcune aree e aggiornato la struttura del codice.</p><p>Ringraziamo Thorger Jansen (Scoperta, Analisi, Coordinamento) dal <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://www.sec-consult.com\\\"><b>Laboratorio di Vulnerabilit\u00e0 SEC Consult</b></a> per la segnalazione responsabile dei problemi identificati e la collaborazione con noi per risolverli.</p>\",\n+    \"interviewAssistanceRequest\": \"Mi sto preparando per un'intervista e cerco supporto nella formulazione delle domande. Potresti aiutarmi a formulare domande che mi permettano di raccogliere le informazioni desiderate? Vorrei utilizzare domande aperte. Potresti aiutarmi anche a formulare domande che siano adattate alle esigenze del mio intervistato, permettendogli di condividere in modo approfondito le sue esperienze e opinioni? Sto cercando anche consigli su come condurre un'intervista di successo e su come registrare e organizzare le informazioni raccolte.\",\n+    \"interviewExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"language\": \"Lingua\",\n+    \"lawDialogueIntroduction\": \"Ora stai conversando con Luis, un consulente legale fittizio. Cosa vorresti sapere sulla consulenza legale?\",\n+    \"lawExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Luis Martinez e sei un esperto in consulenza legale. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento legale della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"lawUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo.\",\n+    \"learningAssistanceRequest\": \"Sto cercando supporto per le strategie di apprendimento. Ho difficolt\u00e0 ad imparare in modo efficace e a completare i miei compiti. Non sono sicuro di quali strategie di apprendimento siano meglio adatte a me o come posso organizzare meglio il mio tempo per raggiungere i miei obiettivi di apprendimento. Potresti aiutarmi a valutare la mia situazione di apprendimento attuale e fornirmi consigli e suggerimenti per migliorare le mie strategie di apprendimento?\",\n+    \"learningExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"literatureResearchAssistanceRequest\": \"Sto lavorando a un progetto e ho bisogno di aiuto nella ricerca di letteratura pertinente. Il mio argomento \u00e8 [Descrizione del tema], e sto cercando articoli e libri scientifici che trattano questo argomento. Non sono sicuro di quali fonti utilizzare o come rendere la mia ricerca pi\u00f9 efficace. Potresti aiutarmi a trovare fonti pertinenti e fornirmi consigli per condurre efficacemente la mia ricerca?\",\n+    \"marketingDialogueIntroduction\": \"Ora stai conversando con Felix, un dipendente del marketing fittizio. Cosa vorresti sapere sul marketing?\",\n+    \"marketingExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Felix M\u00fcller e sei un esperto in marketing. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento di marketing della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"marketingUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo.\",\n+    \"methodologyAssistanceRequest\": \"Sto lavorando a un progetto scientifico e cerco supporto per la metodologia. Ho deciso di utilizzare [Descrizione della metodologia scelta] per raggiungere [Obiettivo della ricerca], ma non sono sicuro di applicare correttamente la metodologia o se ci siano altri metodi pi\u00f9 adatti. Potresti aiutarmi a rivedere la mia metodologia e, se necessario, suggerirmi miglioramenti o alternative?\",\n+    \"motivationAssistanceRequest\": \"Sto cercando supporto per migliorare la mia motivazione nella vita universitaria. Spesso mi sento sopraffatto e demotivato quando cerco di tenere il passo con i miei studi e altre responsabilit\u00e0. Potresti aiutarmi a valutare la mia situazione attuale e fornirmi consigli e suggerimenti per migliorare la mia motivazione? Sto anche cercando strategie per definire meglio i miei obiettivi e monitorare i miei progressi.\",\n+    \"motivationExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"organisationExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"password\": \"Password\",\n+    \"programmingDialogueIntroduction\": \"Ora stai conversando con Fatima, una programmatrice fittizia. Cosa vorresti sapere sulla programmazione?\",\n+    \"programmingExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Fatima Kamara e sei un esperta in programmazione. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento di programmazione della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"programmingUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo, specialmente nel campo della programmazione.\",\n+    \"promptSuggestion\": \"Suggerimento Prompt\",\n+    \"prototypingAssistanceRequest\": \"Sto cercando supporto per il prototyping nel mio processo di design. Potresti aiutarmi a eseguire un prototyping efficace che mi aiuti a visualizzare e testare le mie idee di design? Sto cercando consigli e linee guida per scegliere i migliori materiali e strumenti per il mio prototyping, e come posso meglio considerare le esigenze del mio pubblico di destinazione. Potresti aiutarmi anche a adattare il mio prototyping a diversi scenari per assicurarmi che sia rilevante per tutte le possibili esperienze utente? Sto anche cercando strategie per raccogliere feedback dai miei prototipi e integrarlo nel mio processo di design.\",\n+    \"prototypingExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo della creativit\u00e0.\",\n+    \"researchAssistanceRequest\": \"Sto lavorando a un progetto di ricerca e cerco supporto nella ricerca. Il mio argomento \u00e8 [Descrizione dell'argomento], e necessito di ulteriori informazioni su [domande specifiche o argomenti]. Ho gi\u00e0 trovato alcune fonti, ma non sono sicuro di aver trovato tutte le fonti pertinenti o se dovrei utilizzare altre risorse. Potresti aiutarmi a trovare fonti aggiuntive e fornirmi consigli su come condurre efficacemente la mia ricerca?\",\n+    \"scienceDialogueIntroduction\": \"Ora stai conversando con Sophie, una ricercatrice fittizia. Cosa vorresti sapere sulla ricerca?\",\n+    \"scienceExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Sophie Martin e sei un'esperta in ricerca. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento scientifico della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"scienceUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo, specialmente in campo scientifico. \u00c8 importante valutare criticamente le informazioni.\",\n+    \"scientificWorkExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel lavoro scientifico.\",\n+    \"settings\": \"Impostazioni\",\n+    \"socialMediaDialogueIntroduction\": \"Ora stai conversando con Erik, un dipendente del social media fittizio. Cosa vorresti sapere sui social media?\",\n+    \"socialMediaExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania. Ti chiami Erik Hansen e sei un esperto in social media. Fornisci consulenza al personale universitario, agli studenti e ai professori. Se le persone vogliono parlare direttamente con qualcuno che lavora nel dipartimento dei social media della tua universit\u00e0 li indirizzi alla homepage ufficiale dell'universit\u00e0.\",\n+    \"socialMediaUsageNoticeContent\": \"In quest'area si parla con persone fittizie. Le dichiarazioni in questa sezione non possono essere verificate per la loro veridicit\u00e0 e dovrebbero servire solo come stimolo, specialmente nel contesto dei social media, dove le informazioni si diffondono rapidamente e in grande quantit\u00e0.\",\n+    \"stressManagementAssistanceRequest\": \"Sto cercando supporto per la gestione dello stress nella vita universitaria. Spesso mi sento stressato e sopraffatto quando cerco di tenere il passo con i miei impegni accademici, la vita sociale e altre responsabilit\u00e0. Potresti aiutarmi a valutare la mia attuale situazione di stress e fornirmi consigli e suggerimenti su come gestire lo stress nella vita universitaria? Sto anche cercando strategie per organizzare meglio il mio tempo e stabilire le mie priorit\u00e0 per ridurre il carico di stress.\",\n+    \"stressManagementExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"successfulRegistration\": \"La registrazione \u00e8 avvenuta con successo.\",\n+    \"tableCreationAssistanceRequest\": \"Ho bisogno di aiuto nella creazione di tabelle. Ho raccolto dei dati che voglio rappresentare in una tabella, ma non sono sicuro di come formattare e organizzare al meglio la tabella per presentare le informazioni in modo chiaro e comprensibile. Potresti aiutarmi a progettare una tabella adeguata e fornirmi consigli sulla progettazione e formattazione della tabella? Sto anche cercando suggerimenti su come presentare al meglio le informazioni nella tabella per renderle facilmente accessibili ai lettori.\",\n+    \"tableExpertiseMessage\": \"Sei un assistente utile che lavora presso un'universit\u00e0 in Germania e sei un esperto nel campo dell'organizzazione.\",\n+    \"theme\": \"Tema\",\n+    \"timeManagementAssistanceRequest\": \"Sto cercando supporto per la gestione del tempo. Ho difficolt\u00e0 a usare efficacemente il mio tempo e a completare i miei compiti in tempo adeguato. Non sono sicuro di come posso organizzare meglio il mio tempo per raggiungere i miei obiettivi e evitare lo stress. Potresti aiutarmi a valutare il mio attuale uso del tempo e fornirmi consigli e suggerimenti per migliorare la mia gestione del tempo? Sto anche cercando strategie per stabilire le mie priorit\u00e0 e pianificare meglio il mio tempo per aumentare la mia produttivit\u00e0 e raggiungere i miei obiettivi.\",\n+    \"unableToSaveRegistration\": \"<b>La registrazione non pu\u00f2 essere salvata.<br>Si prega di riprovare.</b>\",\n+    \"usageNoticeTitle\": \"Avviso di Utilizzo\",\n+    \"usage_guideline\": \"<p>Benvenuti alla guida per l'uso di HAWKI, basata sull'API di OpenAI. Questa guida \u00e8 destinata a tutti i membri dell'universit\u00e0 - studenti, insegnanti e personale - per fornire una linea guida chiara su come gestire questa tecnologia in modo responsabile. Si prega di notare che questa guida integra i termini di utilizzo di OpenAI e non \u00e8 esaustiva. \u00c8 responsabilit\u00e0 degli utenti rispettare tali termini.</p><h3>Disposizioni generali</h3><p><b>Cosa \u00e8 vietato:</b></p><ul><li>Inserire dati personali su se stessi o su altri.</li><li>Utilizzare i servizi per attivit\u00e0 illegali, dannose o abusive.</li><li>Violazione, abuso o infrazione dei diritti altrui.</li><li>Modifica, copia, noleggio, vendita o distribuzione dei nostri servizi.</li><li>Tentativo di reverse engineering, decompilazione o scoperta del codice sorgente o dei componenti sottostanti.</li><li>Estrazione automatica o programmata di dati o output.</li><li>Affermare che l'output \u00e8 stato creato da umani quando non \u00e8 cos\u00ec.</li><li>Alterazione o interruzione dei servizi o elusione delle misure di protezione.</li><li>Uso dell'output per sviluppare modelli concorrenti.</li></ul><p><b>Cosa tenere presente:</b></p><p>Siete responsabili dell'input fornito e dell'output risultante. Dovete assicurarvi che il vostro input non violi alcun diritto e che disponiate di tutti i diritti, licenze e autorizzazioni necessari per fornirlo.</p><b>Accuratezza:</b><p>L'utilizzo dei servizi pu\u00f2 portare a output inaccurati o errati. \u00c8 importante che valutiate criticamente l'output e che non lo utilizziate come unica fonte di verit\u00e0. I vostri input non sono memorizzati da HAWK, ma da OpenAI per 30 giorni al fine di rilevare eventuali abusi. Dopo 30 giorni, i dati vengono cancellati. I vostri input non sono utilizzati per migliorare la sicurezza o la qualit\u00e0 del prodotto.</p><h3>Disposizioni specifiche</h3><p>Ci sono una <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://wiki.hawk.de/pages/viewpage.action?spaceKey=HL&title=Leitlinie+generative+KI\\\"><b>linea guida provvisoria e una dichiarazione di indipendenza</b></a> per l'utilizzo dei sistemi di IA generativa.</p><p><b>Per gli studenti:</b></p><ul><li>Utilizzate HAWKI per supportare il vostro processo di apprendimento, ma non affidatevi esclusivamente alle risposte generate.</li><li>Non condividete dati personali o informazioni tramite HAWKI. Nemmeno i dati personali di altri.</li><li>Assumete la paternit\u00e0. Ci\u00f2 significa che garantite la qualit\u00e0 della risposta e assumete la responsabilit\u00e0 del contenuto. L'uso dell'IA e la natura del suo contributo devono essere chiariti.</li></ul><p><b>Per gli insegnanti:</b></p><ul><li>\u00c8 vietato utilizzare HAWKI per correggere i lavori degli studenti se contengono dati personali estraibili.</li><li>Utilizzate HAWKI come strumento complementare per la preparazione dei materiali didattici, ma assicuratevi che tutto il contenuto sia verificato per la sua accuratezza e rilevanza.</li></ul><p><b>Per il personale:</b></p><ul><li>\u00c8 severamente proibito inserire accordi di riservatezza o documenti interni su HAWKI. Anche documenti che contengono dati personali su se stessi o su altri.</li><li>Utilizzate HAWKI per aumentare l'efficienza e supportare le vostre attivit\u00e0 quotidiane, rispettando sempre le politiche di privacy e le normative di sicurezza dell'universit\u00e0.</li></ul><p>Questa guida serve come orientamento per un uso responsabile di HAWKI. \u00c8 importante che tutti gli utenti comprendano e seguano queste disposizioni per garantire un utilizzo sicuro ed etico di questa tecnologia. L'universit\u00e0 pu\u00f2 offrire questo servizio solo se non vengono inseriti dati personali. Per qualsiasi domanda o incertezza, si prega di contattare il Prof. Stefan W\u00f6lwer, Arian Sadafi, Jonas Trippler o Vincent Timm. Indipendentemente da questa guida, si applicano le <a class=\\\"accentText\\\" target=\\\"_blank\\\" href=\\\"https://openai.com/policies/business-terms\\\"><b>condizioni d'uso di OpenAI</b>.</a></p>\",\n+    \"username\": \"Nome Utente\",\n+    \"welcomeBackTitle\": \"Bentornato!\",\n+    \"writingAssistanceRequest\": \"Sto lavorando a un progetto scientifico e ho bisogno di aiuto con lo stile di scrittura e la formattazione. Ho gi\u00e0 redatto il mio lavoro, ma non sono sicuro di aver seguito tutte le linee guida di formattazione e le convenzioni di scrittura correttamente. Potresti aiutarmi a rivedere il mio lavoro e fornirmi consigli su come migliorare la formattazione e lo stile di scrittura?\"\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/autoload.php",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+<?php\n+\n+// autoload.php @generated by Composer\n+\n+if (PHP_VERSION_ID < 50600) {\n+    if (!headers_sent()) {\n+        header('HTTP/1.1 500 Internal Server Error');\n+    }\n+    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n+    if (!ini_get('display_errors')) {\n+        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n+            fwrite(STDERR, $err);\n+        } elseif (!headers_sent()) {\n+            echo $err;\n+        }\n+    }\n+    trigger_error(\n+        $err,\n+        E_USER_ERROR\n+    );\n+}\n+\n+require_once __DIR__ . '/composer/autoload_real.php';\n+\n+return ComposerAutoloaderInitf6fbbdce9293efa736f194e1c2a02ae3::getLoader();"
        },
        {
          "filename": "private/vendor/composer/ClassLoader.php",
          "status": "added",
          "additions": 579,
          "deletions": 0,
          "patch": "@@ -0,0 +1,579 @@\n+<?php\n+\n+/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+namespace Composer\\Autoload;\n+\n+/**\n+ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n+ *\n+ *     $loader = new \\Composer\\Autoload\\ClassLoader();\n+ *\n+ *     // register classes with namespaces\n+ *     $loader->add('Symfony\\Component', __DIR__.'/component');\n+ *     $loader->add('Symfony',           __DIR__.'/framework');\n+ *\n+ *     // activate the autoloader\n+ *     $loader->register();\n+ *\n+ *     // to enable searching the include path (eg. for PEAR packages)\n+ *     $loader->setUseIncludePath(true);\n+ *\n+ * In this example, if you try to use a class in the Symfony\\Component\n+ * namespace or one of its children (Symfony\\Component\\Console for instance),\n+ * the autoloader will first look for the class under the component/\n+ * directory, and it will then fallback to the framework/ directory if not\n+ * found before giving up.\n+ *\n+ * This class is loosely based on the Symfony UniversalClassLoader.\n+ *\n+ * @author Fabien Potencier <fabien@symfony.com>\n+ * @author Jordi Boggiano <j.boggiano@seld.be>\n+ * @see    https://www.php-fig.org/psr/psr-0/\n+ * @see    https://www.php-fig.org/psr/psr-4/\n+ */\n+class ClassLoader\n+{\n+    /** @var \\Closure(string):void */\n+    private static $includeFile;\n+\n+    /** @var string|null */\n+    private $vendorDir;\n+\n+    // PSR-4\n+    /**\n+     * @var array<string, array<string, int>>\n+     */\n+    private $prefixLengthsPsr4 = array();\n+    /**\n+     * @var array<string, list<string>>\n+     */\n+    private $prefixDirsPsr4 = array();\n+    /**\n+     * @var list<string>\n+     */\n+    private $fallbackDirsPsr4 = array();\n+\n+    // PSR-0\n+    /**\n+     * List of PSR-0 prefixes\n+     *\n+     * Structured as array('F (first letter)' => array('Foo\\Bar (full prefix)' => array('path', 'path2')))\n+     *\n+     * @var array<string, array<string, list<string>>>\n+     */\n+    private $prefixesPsr0 = array();\n+    /**\n+     * @var list<string>\n+     */\n+    private $fallbackDirsPsr0 = array();\n+\n+    /** @var bool */\n+    private $useIncludePath = false;\n+\n+    /**\n+     * @var array<string, string>\n+     */\n+    private $classMap = array();\n+\n+    /** @var bool */\n+    private $classMapAuthoritative = false;\n+\n+    /**\n+     * @var array<string, bool>\n+     */\n+    private $missingClasses = array();\n+\n+    /** @var string|null */\n+    private $apcuPrefix;\n+\n+    /**\n+     * @var array<string, self>\n+     */\n+    private static $registeredLoaders = array();\n+\n+    /**\n+     * @param string|null $vendorDir\n+     */\n+    public function __construct($vendorDir = null)\n+    {\n+        $this->vendorDir = $vendorDir;\n+        self::initializeIncludeClosure();\n+    }\n+\n+    /**\n+     * @return array<string, list<string>>\n+     */\n+    public function getPrefixes()\n+    {\n+        if (!empty($this->prefixesPsr0)) {\n+            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n+        }\n+\n+        return array();\n+    }\n+\n+    /**\n+     * @return array<string, list<string>>\n+     */\n+    public function getPrefixesPsr4()\n+    {\n+        return $this->prefixDirsPsr4;\n+    }\n+\n+    /**\n+     * @return list<string>\n+     */\n+    public function getFallbackDirs()\n+    {\n+        return $this->fallbackDirsPsr0;\n+    }\n+\n+    /**\n+     * @return list<string>\n+     */\n+    public function getFallbackDirsPsr4()\n+    {\n+        return $this->fallbackDirsPsr4;\n+    }\n+\n+    /**\n+     * @return array<string, string> Array of classname => path\n+     */\n+    public function getClassMap()\n+    {\n+        return $this->classMap;\n+    }\n+\n+    /**\n+     * @param array<string, string> $classMap Class to filename map\n+     *\n+     * @return void\n+     */\n+    public function addClassMap(array $classMap)\n+    {\n+        if ($this->classMap) {\n+            $this->classMap = array_merge($this->classMap, $classMap);\n+        } else {\n+            $this->classMap = $classMap;\n+        }\n+    }\n+\n+    /**\n+     * Registers a set of PSR-0 directories for a given prefix, either\n+     * appending or prepending to the ones previously set for this prefix.\n+     *\n+     * @param string              $prefix  The prefix\n+     * @param list<string>|string $paths   The PSR-0 root directories\n+     * @param bool                $prepend Whether to prepend the directories\n+     *\n+     * @return void\n+     */\n+    public function add($prefix, $paths, $prepend = false)\n+    {\n+        $paths = (array) $paths;\n+        if (!$prefix) {\n+            if ($prepend) {\n+                $this->fallbackDirsPsr0 = array_merge(\n+                    $paths,\n+                    $this->fallbackDirsPsr0\n+                );\n+            } else {\n+                $this->fallbackDirsPsr0 = array_merge(\n+                    $this->fallbackDirsPsr0,\n+                    $paths\n+                );\n+            }\n+\n+            return;\n+        }\n+\n+        $first = $prefix[0];\n+        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n+            $this->prefixesPsr0[$first][$prefix] = $paths;\n+\n+            return;\n+        }\n+        if ($prepend) {\n+            $this->prefixesPsr0[$first][$prefix] = array_merge(\n+                $paths,\n+                $this->prefixesPsr0[$first][$prefix]\n+            );\n+        } else {\n+            $this->prefixesPsr0[$first][$prefix] = array_merge(\n+                $this->prefixesPsr0[$first][$prefix],\n+                $paths\n+            );\n+        }\n+    }\n+\n+    /**\n+     * Registers a set of PSR-4 directories for a given namespace, either\n+     * appending or prepending to the ones previously set for this namespace.\n+     *\n+     * @param string              $prefix  The prefix/namespace, with trailing '\\\\'\n+     * @param list<string>|string $paths   The PSR-4 base directories\n+     * @param bool                $prepend Whether to prepend the directories\n+     *\n+     * @throws \\InvalidArgumentException\n+     *\n+     * @return void\n+     */\n+    public function addPsr4($prefix, $paths, $prepend = false)\n+    {\n+        $paths = (array) $paths;\n+        if (!$prefix) {\n+            // Register directories for the root namespace.\n+            if ($prepend) {\n+                $this->fallbackDirsPsr4 = array_merge(\n+                    $paths,\n+                    $this->fallbackDirsPsr4\n+                );\n+            } else {\n+                $this->fallbackDirsPsr4 = array_merge(\n+                    $this->fallbackDirsPsr4,\n+                    $paths\n+                );\n+            }\n+        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n+            // Register directories for a new namespace.\n+            $length = strlen($prefix);\n+            if ('\\\\' !== $prefix[$length - 1]) {\n+                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n+            }\n+            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n+            $this->prefixDirsPsr4[$prefix] = $paths;\n+        } elseif ($prepend) {\n+            // Prepend directories for an already registered namespace.\n+            $this->prefixDirsPsr4[$prefix] = array_merge(\n+                $paths,\n+                $this->prefixDirsPsr4[$prefix]\n+            );\n+        } else {\n+            // Append directories for an already registered namespace.\n+            $this->prefixDirsPsr4[$prefix] = array_merge(\n+                $this->prefixDirsPsr4[$prefix],\n+                $paths\n+            );\n+        }\n+    }\n+\n+    /**\n+     * Registers a set of PSR-0 directories for a given prefix,\n+     * replacing any others previously set for this prefix.\n+     *\n+     * @param string              $prefix The prefix\n+     * @param list<string>|string $paths  The PSR-0 base directories\n+     *\n+     * @return void\n+     */\n+    public function set($prefix, $paths)\n+    {\n+        if (!$prefix) {\n+            $this->fallbackDirsPsr0 = (array) $paths;\n+        } else {\n+            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n+        }\n+    }\n+\n+    /**\n+     * Registers a set of PSR-4 directories for a given namespace,\n+     * replacing any others previously set for this namespace.\n+     *\n+     * @param string              $prefix The prefix/namespace, with trailing '\\\\'\n+     * @param list<string>|string $paths  The PSR-4 base directories\n+     *\n+     * @throws \\InvalidArgumentException\n+     *\n+     * @return void\n+     */\n+    public function setPsr4($prefix, $paths)\n+    {\n+        if (!$prefix) {\n+            $this->fallbackDirsPsr4 = (array) $paths;\n+        } else {\n+            $length = strlen($prefix);\n+            if ('\\\\' !== $prefix[$length - 1]) {\n+                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n+            }\n+            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n+            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n+        }\n+    }\n+\n+    /**\n+     * Turns on searching the include path for class files.\n+     *\n+     * @param bool $useIncludePath\n+     *\n+     * @return void\n+     */\n+    public function setUseIncludePath($useIncludePath)\n+    {\n+        $this->useIncludePath = $useIncludePath;\n+    }\n+\n+    /**\n+     * Can be used to check if the autoloader uses the include path to check\n+     * for classes.\n+     *\n+     * @return bool\n+     */\n+    public function getUseIncludePath()\n+    {\n+        return $this->useIncludePath;\n+    }\n+\n+    /**\n+     * Turns off searching the prefix and fallback directories for classes\n+     * that have not been registered with the class map.\n+     *\n+     * @param bool $classMapAuthoritative\n+     *\n+     * @return void\n+     */\n+    public function setClassMapAuthoritative($classMapAuthoritative)\n+    {\n+        $this->classMapAuthoritative = $classMapAuthoritative;\n+    }\n+\n+    /**\n+     * Should class lookup fail if not found in the current class map?\n+     *\n+     * @return bool\n+     */\n+    public function isClassMapAuthoritative()\n+    {\n+        return $this->classMapAuthoritative;\n+    }\n+\n+    /**\n+     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.\n+     *\n+     * @param string|null $apcuPrefix\n+     *\n+     * @return void\n+     */\n+    public function setApcuPrefix($apcuPrefix)\n+    {\n+        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n+    }\n+\n+    /**\n+     * The APCu prefix in use, or null if APCu caching is not enabled.\n+     *\n+     * @return string|null\n+     */\n+    public function getApcuPrefix()\n+    {\n+        return $this->apcuPrefix;\n+    }\n+\n+    /**\n+     * Registers this instance as an autoloader.\n+     *\n+     * @param bool $prepend Whether to prepend the autoloader or not\n+     *\n+     * @return void\n+     */\n+    public function register($prepend = false)\n+    {\n+        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n+\n+        if (null === $this->vendorDir) {\n+            return;\n+        }\n+\n+        if ($prepend) {\n+            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n+        } else {\n+            unset(self::$registeredLoaders[$this->vendorDir]);\n+            self::$registeredLoaders[$this->vendorDir] = $this;\n+        }\n+    }\n+\n+    /**\n+     * Unregisters this instance as an autoloader.\n+     *\n+     * @return void\n+     */\n+    public function unregister()\n+    {\n+        spl_autoload_unregister(array($this, 'loadClass'));\n+\n+        if (null !== $this->vendorDir) {\n+            unset(self::$registeredLoaders[$this->vendorDir]);\n+        }\n+    }\n+\n+    /**\n+     * Loads the given class or interface.\n+     *\n+     * @param  string    $class The name of the class\n+     * @return true|null True if loaded, null otherwise\n+     */\n+    public function loadClass($class)\n+    {\n+        if ($file = $this->findFile($class)) {\n+            $includeFile = self::$includeFile;\n+            $includeFile($file);\n+\n+            return true;\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Finds the path to the file where the class is defined.\n+     *\n+     * @param string $class The name of the class\n+     *\n+     * @return string|false The path if found, false otherwise\n+     */\n+    public function findFile($class)\n+    {\n+        // class map lookup\n+        if (isset($this->classMap[$class])) {\n+            return $this->classMap[$class];\n+        }\n+        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n+            return false;\n+        }\n+        if (null !== $this->apcuPrefix) {\n+            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n+            if ($hit) {\n+                return $file;\n+            }\n+        }\n+\n+        $file = $this->findFileWithExtension($class, '.php');\n+\n+        // Search for Hack files if we are running on HHVM\n+        if (false === $file && defined('HHVM_VERSION')) {\n+            $file = $this->findFileWithExtension($class, '.hh');\n+        }\n+\n+        if (null !== $this->apcuPrefix) {\n+            apcu_add($this->apcuPrefix.$class, $file);\n+        }\n+\n+        if (false === $file) {\n+            // Remember that this class does not exist.\n+            $this->missingClasses[$class] = true;\n+        }\n+\n+        return $file;\n+    }\n+\n+    /**\n+     * Returns the currently registered loaders keyed by their corresponding vendor directories.\n+     *\n+     * @return array<string, self>\n+     */\n+    public static function getRegisteredLoaders()\n+    {\n+        return self::$registeredLoaders;\n+    }\n+\n+    /**\n+     * @param  string       $class\n+     * @param  string       $ext\n+     * @return string|false\n+     */\n+    private function findFileWithExtension($class, $ext)\n+    {\n+        // PSR-4 lookup\n+        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n+\n+        $first = $class[0];\n+        if (isset($this->prefixLengthsPsr4[$first])) {\n+            $subPath = $class;\n+            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n+                $subPath = substr($subPath, 0, $lastPos);\n+                $search = $subPath . '\\\\';\n+                if (isset($this->prefixDirsPsr4[$search])) {\n+                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n+                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n+                        if (file_exists($file = $dir . $pathEnd)) {\n+                            return $file;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        // PSR-4 fallback dirs\n+        foreach ($this->fallbackDirsPsr4 as $dir) {\n+            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n+                return $file;\n+            }\n+        }\n+\n+        // PSR-0 lookup\n+        if (false !== $pos = strrpos($class, '\\\\')) {\n+            // namespaced class name\n+            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n+                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n+        } else {\n+            // PEAR-like class name\n+            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n+        }\n+\n+        if (isset($this->prefixesPsr0[$first])) {\n+            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n+                if (0 === strpos($class, $prefix)) {\n+                    foreach ($dirs as $dir) {\n+                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n+                            return $file;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        // PSR-0 fallback dirs\n+        foreach ($this->fallbackDirsPsr0 as $dir) {\n+            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n+                return $file;\n+            }\n+        }\n+\n+        // PSR-0 include paths.\n+        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n+            return $file;\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * @return void\n+     */\n+    private static function initializeIncludeClosure()\n+    {\n+        if (self::$includeFile !== null) {\n+            return;\n+        }\n+\n+        /**\n+         * Scope isolated include.\n+         *\n+         * Prevents access to $this/self from included files.\n+         *\n+         * @param  string $file\n+         * @return void\n+         */\n+        self::$includeFile = \\Closure::bind(static function($file) {\n+            include $file;\n+        }, null, null);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/composer/InstalledVersions.php",
          "status": "added",
          "additions": 359,
          "deletions": 0,
          "patch": "@@ -0,0 +1,359 @@\n+<?php\n+\n+/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ */\n+\n+namespace Composer;\n+\n+use Composer\\Autoload\\ClassLoader;\n+use Composer\\Semver\\VersionParser;\n+\n+/**\n+ * This class is copied in every Composer installed project and available to all\n+ *\n+ * See also https://getcomposer.org/doc/07-runtime.md#installed-versions\n+ *\n+ * To require its presence, you can require `composer-runtime-api ^2.0`\n+ *\n+ * @final\n+ */\n+class InstalledVersions\n+{\n+    /**\n+     * @var mixed[]|null\n+     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\n+     */\n+    private static $installed;\n+\n+    /**\n+     * @var bool|null\n+     */\n+    private static $canGetVendors;\n+\n+    /**\n+     * @var array[]\n+     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n+     */\n+    private static $installedByVendor = array();\n+\n+    /**\n+     * Returns a list of all package names which are present, either by being installed, replaced or provided\n+     *\n+     * @return string[]\n+     * @psalm-return list<string>\n+     */\n+    public static function getInstalledPackages()\n+    {\n+        $packages = array();\n+        foreach (self::getInstalled() as $installed) {\n+            $packages[] = array_keys($installed['versions']);\n+        }\n+\n+        if (1 === \\count($packages)) {\n+            return $packages[0];\n+        }\n+\n+        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n+    }\n+\n+    /**\n+     * Returns a list of all package names with a specific type e.g. 'library'\n+     *\n+     * @param  string   $type\n+     * @return string[]\n+     * @psalm-return list<string>\n+     */\n+    public static function getInstalledPackagesByType($type)\n+    {\n+        $packagesByType = array();\n+\n+        foreach (self::getInstalled() as $installed) {\n+            foreach ($installed['versions'] as $name => $package) {\n+                if (isset($package['type']) && $package['type'] === $type) {\n+                    $packagesByType[] = $name;\n+                }\n+            }\n+        }\n+\n+        return $packagesByType;\n+    }\n+\n+    /**\n+     * Checks whether the given package is installed\n+     *\n+     * This also returns true if the package name is provided or replaced by another package\n+     *\n+     * @param  string $packageName\n+     * @param  bool   $includeDevRequirements\n+     * @return bool\n+     */\n+    public static function isInstalled($packageName, $includeDevRequirements = true)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (isset($installed['versions'][$packageName])) {\n+                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Checks whether the given package satisfies a version constraint\n+     *\n+     * e.g. If you want to know whether version 2.3+ of package foo/bar is installed, you would call:\n+     *\n+     *   Composer\\InstalledVersions::satisfies(new VersionParser, 'foo/bar', '^2.3')\n+     *\n+     * @param  VersionParser $parser      Install composer/semver to have access to this class and functionality\n+     * @param  string        $packageName\n+     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer/semver is required by your package\n+     * @return bool\n+     */\n+    public static function satisfies(VersionParser $parser, $packageName, $constraint)\n+    {\n+        $constraint = $parser->parseConstraints((string) $constraint);\n+        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n+\n+        return $provided->matches($constraint);\n+    }\n+\n+    /**\n+     * Returns a version constraint representing all the range(s) which are installed for a given package\n+     *\n+     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\n+     * whether a given version of a package is installed, and not just whether it exists\n+     *\n+     * @param  string $packageName\n+     * @return string Version constraint usable with composer/semver\n+     */\n+    public static function getVersionRanges($packageName)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (!isset($installed['versions'][$packageName])) {\n+                continue;\n+            }\n+\n+            $ranges = array();\n+            if (isset($installed['versions'][$packageName]['pretty_version'])) {\n+                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\n+            }\n+            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\n+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n+            }\n+            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\n+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n+            }\n+            if (array_key_exists('provided', $installed['versions'][$packageName])) {\n+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n+            }\n+\n+            return implode(' || ', $ranges);\n+        }\n+\n+        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n+    }\n+\n+    /**\n+     * @param  string      $packageName\n+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n+     */\n+    public static function getVersion($packageName)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (!isset($installed['versions'][$packageName])) {\n+                continue;\n+            }\n+\n+            if (!isset($installed['versions'][$packageName]['version'])) {\n+                return null;\n+            }\n+\n+            return $installed['versions'][$packageName]['version'];\n+        }\n+\n+        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n+    }\n+\n+    /**\n+     * @param  string      $packageName\n+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n+     */\n+    public static function getPrettyVersion($packageName)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (!isset($installed['versions'][$packageName])) {\n+                continue;\n+            }\n+\n+            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\n+                return null;\n+            }\n+\n+            return $installed['versions'][$packageName]['pretty_version'];\n+        }\n+\n+        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n+    }\n+\n+    /**\n+     * @param  string      $packageName\n+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\n+     */\n+    public static function getReference($packageName)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (!isset($installed['versions'][$packageName])) {\n+                continue;\n+            }\n+\n+            if (!isset($installed['versions'][$packageName]['reference'])) {\n+                return null;\n+            }\n+\n+            return $installed['versions'][$packageName]['reference'];\n+        }\n+\n+        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n+    }\n+\n+    /**\n+     * @param  string      $packageName\n+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\n+     */\n+    public static function getInstallPath($packageName)\n+    {\n+        foreach (self::getInstalled() as $installed) {\n+            if (!isset($installed['versions'][$packageName])) {\n+                continue;\n+            }\n+\n+            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\n+        }\n+\n+        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n+    }\n+\n+    /**\n+     * @return array\n+     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\n+     */\n+    public static function getRootPackage()\n+    {\n+        $installed = self::getInstalled();\n+\n+        return $installed[0]['root'];\n+    }\n+\n+    /**\n+     * Returns the raw installed.php data for custom implementations\n+     *\n+     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\n+     * @return array[]\n+     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\n+     */\n+    public static function getRawData()\n+    {\n+        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\n+\n+        if (null === self::$installed) {\n+            // only require the installed.php file if this file is loaded from its dumped location,\n+            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937\n+            if (substr(__DIR__, -8, 1) !== 'C') {\n+                self::$installed = include __DIR__ . '/installed.php';\n+            } else {\n+                self::$installed = array();\n+            }\n+        }\n+\n+        return self::$installed;\n+    }\n+\n+    /**\n+     * Returns the raw data of all installed.php which are currently loaded for custom implementations\n+     *\n+     * @return array[]\n+     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n+     */\n+    public static function getAllRawData()\n+    {\n+        return self::getInstalled();\n+    }\n+\n+    /**\n+     * Lets you reload the static array from another file\n+     *\n+     * This is only useful for complex integrations in which a project needs to use\n+     * this class but then also needs to execute another project's autoloader in process,\n+     * and wants to ensure both projects have access to their version of installed.php.\n+     *\n+     * A typical case would be PHPUnit, where it would need to make sure it reads all\n+     * the data it needs from this class, then call reload() with\n+     * `require $CWD/vendor/composer/installed.php` (or similar) as input to make sure\n+     * the project in which it runs can then also use this class safely, without\n+     * interference between PHPUnit's dependencies and the project's dependencies.\n+     *\n+     * @param  array[] $data A vendor/composer/installed.php data set\n+     * @return void\n+     *\n+     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\n+     */\n+    public static function reload($data)\n+    {\n+        self::$installed = $data;\n+        self::$installedByVendor = array();\n+    }\n+\n+    /**\n+     * @return array[]\n+     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n+     */\n+    private static function getInstalled()\n+    {\n+        if (null === self::$canGetVendors) {\n+            self::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n+        }\n+\n+        $installed = array();\n+\n+        if (self::$canGetVendors) {\n+            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\n+                if (isset(self::$installedByVendor[$vendorDir])) {\n+                    $installed[] = self::$installedByVendor[$vendorDir];\n+                } elseif (is_file($vendorDir.'/composer/installed.php')) {\n+                    /** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required */\n+                    $required = require $vendorDir.'/composer/installed.php';\n+                    $installed[] = self::$installedByVendor[$vendorDir] = $required;\n+                    if (null === self::$installed && strtr($vendorDir.'/composer', '\\\\', '/') === strtr(__DIR__, '\\\\', '/')) {\n+                        self::$installed = $installed[count($installed) - 1];\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (null === self::$installed) {\n+            // only require the installed.php file if this file is loaded from its dumped location,\n+            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937\n+            if (substr(__DIR__, -8, 1) !== 'C') {\n+                /** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required */\n+                $required = require __DIR__ . '/installed.php';\n+                self::$installed = $required;\n+            } else {\n+                self::$installed = array();\n+            }\n+        }\n+\n+        if (self::$installed !== array()) {\n+            $installed[] = self::$installed;\n+        }\n+\n+        return $installed;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/composer/LICENSE",
          "status": "added",
          "additions": 21,
          "deletions": 0,
          "patch": "@@ -0,0 +1,21 @@\n+\n+Copyright (c) Nils Adermann, Jordi Boggiano\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is furnished\n+to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+THE SOFTWARE.\n+"
        },
        {
          "filename": "private/vendor/composer/autoload_classmap.php",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+<?php\n+\n+// autoload_classmap.php @generated by Composer\n+\n+$vendorDir = dirname(__DIR__);\n+$baseDir = dirname($vendorDir);\n+\n+return array(\n+    'Composer\\\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',\n+    'Jumbojett\\\\OpenIDConnectClient' => $vendorDir . '/jumbojett/openid-connect-php/src/OpenIDConnectClient.php',\n+    'Jumbojett\\\\OpenIDConnectClientException' => $vendorDir . '/jumbojett/openid-connect-php/src/OpenIDConnectClient.php',\n+);"
        },
        {
          "filename": "private/vendor/composer/autoload_files.php",
          "status": "added",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -0,0 +1,10 @@\n+<?php\n+\n+// autoload_files.php @generated by Composer\n+\n+$vendorDir = dirname(__DIR__);\n+$baseDir = dirname($vendorDir);\n+\n+return array(\n+    'decc78cc4436b1292c6c0d151b19445c' => $vendorDir . '/phpseclib/phpseclib/phpseclib/bootstrap.php',\n+);"
        },
        {
          "filename": "private/vendor/composer/autoload_namespaces.php",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+<?php\n+\n+// autoload_namespaces.php @generated by Composer\n+\n+$vendorDir = dirname(__DIR__);\n+$baseDir = dirname($vendorDir);\n+\n+return array(\n+);"
        },
        {
          "filename": "private/vendor/composer/autoload_psr4.php",
          "status": "added",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -0,0 +1,11 @@\n+<?php\n+\n+// autoload_psr4.php @generated by Composer\n+\n+$vendorDir = dirname(__DIR__);\n+$baseDir = dirname($vendorDir);\n+\n+return array(\n+    'phpseclib3\\\\' => array($vendorDir . '/phpseclib/phpseclib/phpseclib'),\n+    'ParagonIE\\\\ConstantTime\\\\' => array($vendorDir . '/paragonie/constant_time_encoding/src'),\n+);"
        },
        {
          "filename": "private/vendor/composer/autoload_real.php",
          "status": "added",
          "additions": 50,
          "deletions": 0,
          "patch": "@@ -0,0 +1,50 @@\n+<?php\n+\n+// autoload_real.php @generated by Composer\n+\n+class ComposerAutoloaderInitf6fbbdce9293efa736f194e1c2a02ae3\n+{\n+    private static $loader;\n+\n+    public static function loadClassLoader($class)\n+    {\n+        if ('Composer\\Autoload\\ClassLoader' === $class) {\n+            require __DIR__ . '/ClassLoader.php';\n+        }\n+    }\n+\n+    /**\n+     * @return \\Composer\\Autoload\\ClassLoader\n+     */\n+    public static function getLoader()\n+    {\n+        if (null !== self::$loader) {\n+            return self::$loader;\n+        }\n+\n+        require __DIR__ . '/platform_check.php';\n+\n+        spl_autoload_register(array('ComposerAutoloaderInitf6fbbdce9293efa736f194e1c2a02ae3', 'loadClassLoader'), true, true);\n+        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(__DIR__));\n+        spl_autoload_unregister(array('ComposerAutoloaderInitf6fbbdce9293efa736f194e1c2a02ae3', 'loadClassLoader'));\n+\n+        require __DIR__ . '/autoload_static.php';\n+        call_user_func(\\Composer\\Autoload\\ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3::getInitializer($loader));\n+\n+        $loader->register(true);\n+\n+        $filesToLoad = \\Composer\\Autoload\\ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3::$files;\n+        $requireFile = \\Closure::bind(static function ($fileIdentifier, $file) {\n+            if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {\n+                $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;\n+\n+                require $file;\n+            }\n+        }, null, null);\n+        foreach ($filesToLoad as $fileIdentifier => $file) {\n+            $requireFile($fileIdentifier, $file);\n+        }\n+\n+        return $loader;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/composer/autoload_static.php",
          "status": "added",
          "additions": 50,
          "deletions": 0,
          "patch": "@@ -0,0 +1,50 @@\n+<?php\n+\n+// autoload_static.php @generated by Composer\n+\n+namespace Composer\\Autoload;\n+\n+class ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3\n+{\n+    public static $files = array (\n+        'decc78cc4436b1292c6c0d151b19445c' => __DIR__ . '/..' . '/phpseclib/phpseclib/phpseclib/bootstrap.php',\n+    );\n+\n+    public static $prefixLengthsPsr4 = array (\n+        'p' => \n+        array (\n+            'phpseclib3\\\\' => 11,\n+        ),\n+        'P' => \n+        array (\n+            'ParagonIE\\\\ConstantTime\\\\' => 23,\n+        ),\n+    );\n+\n+    public static $prefixDirsPsr4 = array (\n+        'phpseclib3\\\\' => \n+        array (\n+            0 => __DIR__ . '/..' . '/phpseclib/phpseclib/phpseclib',\n+        ),\n+        'ParagonIE\\\\ConstantTime\\\\' => \n+        array (\n+            0 => __DIR__ . '/..' . '/paragonie/constant_time_encoding/src',\n+        ),\n+    );\n+\n+    public static $classMap = array (\n+        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n+        'Jumbojett\\\\OpenIDConnectClient' => __DIR__ . '/..' . '/jumbojett/openid-connect-php/src/OpenIDConnectClient.php',\n+        'Jumbojett\\\\OpenIDConnectClientException' => __DIR__ . '/..' . '/jumbojett/openid-connect-php/src/OpenIDConnectClient.php',\n+    );\n+\n+    public static function getInitializer(ClassLoader $loader)\n+    {\n+        return \\Closure::bind(function () use ($loader) {\n+            $loader->prefixLengthsPsr4 = ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3::$prefixLengthsPsr4;\n+            $loader->prefixDirsPsr4 = ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3::$prefixDirsPsr4;\n+            $loader->classMap = ComposerStaticInitf6fbbdce9293efa736f194e1c2a02ae3::$classMap;\n+\n+        }, null, ClassLoader::class);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/composer/installed.json",
          "status": "added",
          "additions": 287,
          "deletions": 0,
          "patch": "@@ -0,0 +1,287 @@\n+{\n+    \"packages\": [\n+        {\n+            \"name\": \"jumbojett/openid-connect-php\",\n+            \"version\": \"v0.9.10\",\n+            \"version_normalized\": \"0.9.10.0\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/jumbojett/OpenID-Connect-PHP.git\",\n+                \"reference\": \"45aac47b525f0483dd4db3324bb1f1cab4666061\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/jumbojett/OpenID-Connect-PHP/zipball/45aac47b525f0483dd4db3324bb1f1cab4666061\",\n+                \"reference\": \"45aac47b525f0483dd4db3324bb1f1cab4666061\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"ext-curl\": \"*\",\n+                \"ext-json\": \"*\",\n+                \"paragonie/random_compat\": \">=2\",\n+                \"php\": \">=5.4\",\n+                \"phpseclib/phpseclib\": \"~2.0 || ^3.0\"\n+            },\n+            \"require-dev\": {\n+                \"roave/security-advisories\": \"dev-master\",\n+                \"yoast/phpunit-polyfills\": \"^1.0\"\n+            },\n+            \"time\": \"2022-09-30T12:34:46+00:00\",\n+            \"type\": \"library\",\n+            \"installation-source\": \"dist\",\n+            \"autoload\": {\n+                \"classmap\": [\n+                    \"src/\"\n+                ]\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"Apache-2.0\"\n+            ],\n+            \"description\": \"Bare-bones OpenID Connect client\",\n+            \"support\": {\n+                \"issues\": \"https://github.com/jumbojett/OpenID-Connect-PHP/issues\",\n+                \"source\": \"https://github.com/jumbojett/OpenID-Connect-PHP/tree/v0.9.10\"\n+            },\n+            \"install-path\": \"../jumbojett/openid-connect-php\"\n+        },\n+        {\n+            \"name\": \"paragonie/constant_time_encoding\",\n+            \"version\": \"v2.6.3\",\n+            \"version_normalized\": \"2.6.3.0\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/paragonie/constant_time_encoding.git\",\n+                \"reference\": \"58c3f47f650c94ec05a151692652a868995d2938\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/paragonie/constant_time_encoding/zipball/58c3f47f650c94ec05a151692652a868995d2938\",\n+                \"reference\": \"58c3f47f650c94ec05a151692652a868995d2938\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \"^7|^8\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"^6|^7|^8|^9\",\n+                \"vimeo/psalm\": \"^1|^2|^3|^4\"\n+            },\n+            \"time\": \"2022-06-14T06:56:20+00:00\",\n+            \"type\": \"library\",\n+            \"installation-source\": \"dist\",\n+            \"autoload\": {\n+                \"psr-4\": {\n+                    \"ParagonIE\\\\ConstantTime\\\\\": \"src/\"\n+                }\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Paragon Initiative Enterprises\",\n+                    \"email\": \"security@paragonie.com\",\n+                    \"homepage\": \"https://paragonie.com\",\n+                    \"role\": \"Maintainer\"\n+                },\n+                {\n+                    \"name\": \"Steve 'Sc00bz' Thomas\",\n+                    \"email\": \"steve@tobtu.com\",\n+                    \"homepage\": \"https://www.tobtu.com\",\n+                    \"role\": \"Original Developer\"\n+                }\n+            ],\n+            \"description\": \"Constant-time Implementations of RFC 4648 Encoding (Base-64, Base-32, Base-16)\",\n+            \"keywords\": [\n+                \"base16\",\n+                \"base32\",\n+                \"base32_decode\",\n+                \"base32_encode\",\n+                \"base64\",\n+                \"base64_decode\",\n+                \"base64_encode\",\n+                \"bin2hex\",\n+                \"encoding\",\n+                \"hex\",\n+                \"hex2bin\",\n+                \"rfc4648\"\n+            ],\n+            \"support\": {\n+                \"email\": \"info@paragonie.com\",\n+                \"issues\": \"https://github.com/paragonie/constant_time_encoding/issues\",\n+                \"source\": \"https://github.com/paragonie/constant_time_encoding\"\n+            },\n+            \"install-path\": \"../paragonie/constant_time_encoding\"\n+        },\n+        {\n+            \"name\": \"paragonie/random_compat\",\n+            \"version\": \"v9.99.100\",\n+            \"version_normalized\": \"9.99.100.0\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/paragonie/random_compat.git\",\n+                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/paragonie/random_compat/zipball/996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n+                \"reference\": \"996434e5492cb4c3edcb9168db6fbb1359ef965a\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \">= 7\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"4.*|5.*\",\n+                \"vimeo/psalm\": \"^1\"\n+            },\n+            \"suggest\": {\n+                \"ext-libsodium\": \"Provides a modern crypto API that can be used to generate random bytes.\"\n+            },\n+            \"time\": \"2020-10-15T08:29:30+00:00\",\n+            \"type\": \"library\",\n+            \"installation-source\": \"dist\",\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Paragon Initiative Enterprises\",\n+                    \"email\": \"security@paragonie.com\",\n+                    \"homepage\": \"https://paragonie.com\"\n+                }\n+            ],\n+            \"description\": \"PHP 5.x polyfill for random_bytes() and random_int() from PHP 7\",\n+            \"keywords\": [\n+                \"csprng\",\n+                \"polyfill\",\n+                \"pseudorandom\",\n+                \"random\"\n+            ],\n+            \"support\": {\n+                \"email\": \"info@paragonie.com\",\n+                \"issues\": \"https://github.com/paragonie/random_compat/issues\",\n+                \"source\": \"https://github.com/paragonie/random_compat\"\n+            },\n+            \"install-path\": \"../paragonie/random_compat\"\n+        },\n+        {\n+            \"name\": \"phpseclib/phpseclib\",\n+            \"version\": \"3.0.37\",\n+            \"version_normalized\": \"3.0.37.0\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https://github.com/phpseclib/phpseclib.git\",\n+                \"reference\": \"cfa2013d0f68c062055180dd4328cc8b9d1f30b8\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https://api.github.com/repos/phpseclib/phpseclib/zipball/cfa2013d0f68c062055180dd4328cc8b9d1f30b8\",\n+                \"reference\": \"cfa2013d0f68c062055180dd4328cc8b9d1f30b8\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"paragonie/constant_time_encoding\": \"^1|^2\",\n+                \"paragonie/random_compat\": \"^1.4|^2.0|^9.99.99\",\n+                \"php\": \">=5.6.1\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit/phpunit\": \"*\"\n+            },\n+            \"suggest\": {\n+                \"ext-dom\": \"Install the DOM extension to load XML formatted public keys.\",\n+                \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n+                \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n+                \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n+                \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\"\n+            },\n+            \"time\": \"2024-03-03T02:14:58+00:00\",\n+            \"type\": \"library\",\n+            \"installation-source\": \"dist\",\n+            \"autoload\": {\n+                \"files\": [\n+                    \"phpseclib/bootstrap.php\"\n+                ],\n+                \"psr-4\": {\n+                    \"phpseclib3\\\\\": \"phpseclib/\"\n+                }\n+            },\n+            \"notification-url\": \"https://packagist.org/downloads/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Jim Wigginton\",\n+                    \"email\": \"terrafrost@php.net\",\n+                    \"role\": \"Lead Developer\"\n+                },\n+                {\n+                    \"name\": \"Patrick Monnerat\",\n+                    \"email\": \"pm@datasphere.ch\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Andreas Fischer\",\n+                    \"email\": \"bantu@phpbb.com\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Hans-J\u00fcrgen Petrich\",\n+                    \"email\": \"petrich@tronic-media.com\",\n+                    \"role\": \"Developer\"\n+                },\n+                {\n+                    \"name\": \"Graham Campbell\",\n+                    \"email\": \"graham@alt-three.com\",\n+                    \"role\": \"Developer\"\n+                }\n+            ],\n+            \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n+            \"homepage\": \"http://phpseclib.sourceforge.net\",\n+            \"keywords\": [\n+                \"BigInteger\",\n+                \"aes\",\n+                \"asn.1\",\n+                \"asn1\",\n+                \"blowfish\",\n+                \"crypto\",\n+                \"cryptography\",\n+                \"encryption\",\n+                \"rsa\",\n+                \"security\",\n+                \"sftp\",\n+                \"signature\",\n+                \"signing\",\n+                \"ssh\",\n+                \"twofish\",\n+                \"x.509\",\n+                \"x509\"\n+            ],\n+            \"support\": {\n+                \"issues\": \"https://github.com/phpseclib/phpseclib/issues\",\n+                \"source\": \"https://github.com/phpseclib/phpseclib/tree/3.0.37\"\n+            },\n+            \"funding\": [\n+                {\n+                    \"url\": \"https://github.com/terrafrost\",\n+                    \"type\": \"github\"\n+                },\n+                {\n+                    \"url\": \"https://www.patreon.com/phpseclib\",\n+                    \"type\": \"patreon\"\n+                },\n+                {\n+                    \"url\": \"https://tidelift.com/funding/github/packagist/phpseclib/phpseclib\",\n+                    \"type\": \"tidelift\"\n+                }\n+            ],\n+            \"install-path\": \"../phpseclib/phpseclib\"\n+        }\n+    ],\n+    \"dev\": true,\n+    \"dev-package-names\": []\n+}"
        },
        {
          "filename": "private/vendor/composer/installed.php",
          "status": "added",
          "additions": 59,
          "deletions": 0,
          "patch": "@@ -0,0 +1,59 @@\n+<?php return array(\n+    'root' => array(\n+        'name' => '__root__',\n+        'pretty_version' => '1.0.0+no-version-set',\n+        'version' => '1.0.0.0',\n+        'reference' => null,\n+        'type' => 'library',\n+        'install_path' => __DIR__ . '/../../',\n+        'aliases' => array(),\n+        'dev' => true,\n+    ),\n+    'versions' => array(\n+        '__root__' => array(\n+            'pretty_version' => '1.0.0+no-version-set',\n+            'version' => '1.0.0.0',\n+            'reference' => null,\n+            'type' => 'library',\n+            'install_path' => __DIR__ . '/../../',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'jumbojett/openid-connect-php' => array(\n+            'pretty_version' => 'v0.9.10',\n+            'version' => '0.9.10.0',\n+            'reference' => '45aac47b525f0483dd4db3324bb1f1cab4666061',\n+            'type' => 'library',\n+            'install_path' => __DIR__ . '/../jumbojett/openid-connect-php',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'paragonie/constant_time_encoding' => array(\n+            'pretty_version' => 'v2.6.3',\n+            'version' => '2.6.3.0',\n+            'reference' => '58c3f47f650c94ec05a151692652a868995d2938',\n+            'type' => 'library',\n+            'install_path' => __DIR__ . '/../paragonie/constant_time_encoding',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'paragonie/random_compat' => array(\n+            'pretty_version' => 'v9.99.100',\n+            'version' => '9.99.100.0',\n+            'reference' => '996434e5492cb4c3edcb9168db6fbb1359ef965a',\n+            'type' => 'library',\n+            'install_path' => __DIR__ . '/../paragonie/random_compat',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+        'phpseclib/phpseclib' => array(\n+            'pretty_version' => '3.0.37',\n+            'version' => '3.0.37.0',\n+            'reference' => 'cfa2013d0f68c062055180dd4328cc8b9d1f30b8',\n+            'type' => 'library',\n+            'install_path' => __DIR__ . '/../phpseclib/phpseclib',\n+            'aliases' => array(),\n+            'dev_requirement' => false,\n+        ),\n+    ),\n+);"
        },
        {
          "filename": "private/vendor/composer/platform_check.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -0,0 +1,26 @@\n+<?php\n+\n+// platform_check.php @generated by Composer\n+\n+$issues = array();\n+\n+if (!(PHP_VERSION_ID >= 70000)) {\n+    $issues[] = 'Your Composer dependencies require a PHP version \">= 7.0.0\". You are running ' . PHP_VERSION . '.';\n+}\n+\n+if ($issues) {\n+    if (!headers_sent()) {\n+        header('HTTP/1.1 500 Internal Server Error');\n+    }\n+    if (!ini_get('display_errors')) {\n+        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n+            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);\n+        } elseif (!headers_sent()) {\n+            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;\n+        }\n+    }\n+    trigger_error(\n+        'Composer detected issues in your platform: ' . implode(' ', $issues),\n+        E_USER_ERROR\n+    );\n+}"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/.github/PULL_REQUEST_TEMPLATE.md",
          "status": "added",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -0,0 +1,2 @@\n+**List of common tasks a pull request require complete**\n+- [ ] Changelog entry is added or the pull request don't alter library's functionality"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/.github/workflows/build.yml",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -0,0 +1,38 @@\n+---\n+name: build\n+\n+on: [push, pull_request]\n+\n+env:\n+    DEFAULT_COMPOSER_FLAGS: \"--prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi\"\n+\n+jobs:\n+    phpunit:\n+        name: PHP ${{ matrix.php }} on ${{ matrix.os }}\n+        runs-on: ${{ matrix.os }}\n+        strategy:\n+            fail-fast: false\n+            matrix:\n+                os: [ubuntu-latest]\n+                php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1']\n+\n+        steps:\n+            - name: Checkout\n+              uses: actions/checkout@v2\n+            - name: Install PHP\n+              uses: shivammathur/setup-php@v2\n+              with:\n+                  php-version: ${{ matrix.php }}\n+            - name: Get composer cache directory\n+              id: composer-cache\n+              run: echo \"::set-output name=dir::$(composer config cache-files-dir)\"\n+            - name: Cache composer dependencies\n+              uses: actions/cache@v1\n+              with:\n+                  path: ${{ steps.composer-cache.outputs.dir }}\n+                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}\n+                  restore-keys: ${{ runner.os }}-composer-\n+            - name: Install dependencies\n+              run: composer update $DEFAULT_COMPOSER_FLAGS\n+            - name: Run unit tests\n+              run: vendor/bin/phpunit --verbose --colors=always tests"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/.gitignore",
          "status": "added",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -0,0 +1,4 @@\n+/.idea\n+/vendor\n+/composer.lock\n+.phpunit.result.cache"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/CHANGELOG.md",
          "status": "added",
          "additions": 185,
          "deletions": 0,
          "patch": "@@ -0,0 +1,185 @@\n+# Changelog\n+All notable changes to this project will be documented in this file.\n+\n+The format is based on [Keep a Changelog](http://keepachangelog.com/)\n+and this project adheres to [Semantic Versioning](http://semver.org/).\n+\n+## [0.9.10]\n+\n+## Fixed\n+\n+* `private_key_jwt` and `client_secret_jwt` need to explicitly be enabled #331\n+\n+\n+## [0.9.9]\n+\n+### Added\n+\n+* Added support for back-channel logout. #302\n+* Added support for `private_key_jwt` Client Authentication method #322\n+* Added support for `client_secret_jwt` Client Authentication method #324\n+* Added PS512 encryption support #342\n+\n+## Fixed\n+\n+* Harden self-signed JWK header usage. #323\n+\n+## [0.9.8]\n+\n+## Fixed\n+\n+* Do not use PKCE if IdP does not support it. #317\n+\n+## [0.9.7]\n+\n+### Added\n+\n+* Support for Self-Contained JWTs. #308\n+* Support for RFC8693 Token Exchange Request. #275\n+\n+### Fixed\n+\n+* PHP 5.4 compatibility. #304\n+* Use session_status(). #306\n+\n+## [0.9.6]\n+\n+### Added\n+\n+* Support for [phpseclib/phpseclib](https://phpseclib.com/) version **3**. #260\n+* Support client_secret on token endpoint with PKCE. #293\n+* Added new parameter to `requestTokens()` to pass custom HTTP headers #297\n+\n+### Changed\n+\n+* Allow serializing `OpenIDConnectClient` using `serialize()` #295\n+\n+## [0.9.5]\n+\n+### Changed\n+\n+* signOut() Method parameter $accessToken -> $idToken to prevent confusion about access and id tokens usage. #127\n+* Fixed issue where missing nonce within the claims was causing an exception. #280\n+\n+## [0.9.4]\n+\n+### Added\n+\n+* Enabled `client_secret_basic` authentication on `refreshToken()` #215\n+* Basic auth support for requestResourceOwnerToken #271\n+\n+## [0.9.3]\n+\n+### Added\n+\n+* getRedirectURL() will not log a warning for PHP 7.1+ #179\n+* it is now possible to disable upgrading from HTTP to HTTPS for development purposes by calling `setHttpUpgradeInsecureRequests(false)` #241\n+* bugfix in getSessionKey when _SESSION key does not exist #251\n+* Added scope parameter to refresh token request #225\n+* bugfix in `verifyJWTclaims` when $accessToken is empty and $claims->at_hash is not #276\n+* bugfix with the `empty` function in PHP 5.4 #267\n+\n+## [0.9.2]\n+\n+### Added\n+* Support for [PKCE](https://tools.ietf.org/html/rfc7636). Currently, the supported methods are 'plain' and 'S256'.\n+\n+## [0.9.1]\n+\n+### Added\n+* Add support for MS Azure Active Directory B2C user flows\n+\n+### Changed\n+* Fix at_hash verification #200\n+* Getters for public parameters #204\n+* Removed client ID query parameter when making a token request using Basic Auth\n+* Use of `random_bytes()` for token generation instead of `uniqid()`; polyfill for PHP < 7.0 provided.\n+\n+### Removed\n+* Removed explicit content-length header - caused issues with proxy servers\n+\n+\n+## [0.9.0]\n+\n+### Added\n+* php 7.4 deprecates array_key_exists on objects, use property_exists in getVerifiedClaims and requestUserInfo\n+* Adding a header to indicate JSON as the return type for userinfo endpoint #151\n+* ~Updated OpenIDConnectClient to conditionally verify nonce #146~\n+* Add possibility to change enc_type parameter for http_build_query #155\n+* Adding OAuth 2.0 Token Introspection #156\n+* Add optional parameters clientId/clientSecret for introspection #157 & #158\n+* Adding OAuth 2.0 Token Revocation #160\n+* Adding issuer validator #145\n+* Adding signing algorithm PS256 #180\n+* Check http status of request user info #186\n+* URL encode clientId and clientSecret when using basic authentication, according to https://tools.ietf.org/html/rfc6749#section-2.3.1 #192\n+* Adjust PHPDoc to state that null is also allowed #193\n+\n+### Changed\n+* Bugfix/code cleanup #152\n+  * Cleanup PHPDoc #46e5b59\n+  * Replace unnecessary double quotes with single quotes #2a76b57\n+  * Use original function names instead of aliases #1f37892\n+  * Remove unnecessary default values #5ab801e\n+  * Explicit declare field $redirectURL #9187c0b\n+  * Remove unused code #1e65384\n+  * Fix indent #e9cdf56\n+  * Cleanup conditional code flow for better readability #107f3fb\n+ * Added strict type comparisons #167\n+* Bugfix: required `openid` scope was omitted when additional scopes were registered using `addScope` method. This resulted in failing OpenID process.\n+\n+## [0.8.0]\n+\n+### Added\n+* Fix `verifyJWTsignature()`: verify JWT to prevent php errors and warnings on invalid token\n+\n+### Changed\n+* Decouple session manipulation, it's allow use of other session libraries #134\n+* Broaden version requirements of the phpseclib/phpseclib package. #144\n+\n+## [0.7.0]\n+\n+### Added\n+* Add \"license\" field to composer.json #138\n+* Ensure key_alg is set when getting key #139\n+* Add option to send additional registration parameters like post_logout_redirect_uris. #140\n+\n+### Changed\n+* disabled autoload for Crypt_RSA + make refreshToken() method tolerant for errors #137\n+\n+### Removed\n+*\n+\n+## [0.6.0]\n+\n+### Added\n+* Added five minutes leeway due to clock skew between openidconnect server and client.\n+* Fix save access_token from request in implicit flow authentication #129\n+* `verifyJWTsignature()` method private -> public #126\n+* Support for providers where provider/login URL is not the same as the issuer URL. #125\n+* Support for providers that has a different login URL from the issuer URL, for instance Azure Active Directory. Here, the provider URL is on the format: https://login.windows.net/(tenant-id), while the issuer claim actually is on the format: https://sts.windows.net/(tenant-id).\n+\n+### Changed\n+* refreshToken method update #124\n+\n+### Removed\n+*\n+\n+## [0.5.0]\n+## Added\n+* Implement Azure AD B2C Implicit Workflow\n+\n+## [0.4.1]\n+## Changed\n+* Documentation updates for include path.\n+\n+## [0.4]\n+### Added\n+* Timeout is configurable via setTimeout method. This addresses issue #94.\n+* Add the ability to authenticate using the Resource Owner flow (with or without the Client ID and ClientSecret). This addresses issue #98\n+* Add support for HS256, HS512 and HS384 signatures\n+* Removed unused calls to $this->getProviderConfigValue(\"token_endpoint_\u2026\n+\n+### Changed\n+\n+### Removed"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/LICENSE",
          "status": "added",
          "additions": 201,
          "deletions": 0,
          "patch": "@@ -0,0 +1,201 @@\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License."
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/README.md",
          "status": "added",
          "additions": 238,
          "deletions": 0,
          "patch": "@@ -0,0 +1,238 @@\n+PHP OpenID Connect Basic Client\n+========================\n+A simple library that allows an application to authenticate a user through the basic OpenID Connect flow.\n+This library hopes to encourage OpenID Connect use by making it simple enough for a developer with little knowledge of\n+the OpenID Connect protocol to set up authentication.\n+\n+A special thanks goes to Justin Richer and Amanda Anganes for their help and support of the protocol.\n+\n+# Requirements #\n+ 1. PHP 5.4 or greater\n+ 2. CURL extension\n+ 3. JSON extension\n+\n+## Install ##\n+1. Install library using composer\n+```\n+composer require jumbojett/openid-connect-php\n+```\n+\n+2. Include composer autoloader\n+```php\n+require __DIR__ . '/vendor/autoload.php';\n+```\n+\n+## Example 1: Basic Client ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                'ClientSecretHere');\n+$oidc->setCertPath('/path/to/my.cert');\n+$oidc->authenticate();\n+$name = $oidc->requestUserInfo('given_name');\n+\n+```\n+\n+[See openid spec for available user attributes][1]\n+\n+## Example 2: Dynamic Registration ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient(\"https://id.provider.com\");\n+\n+$oidc->register();\n+$client_id = $oidc->getClientID();\n+$client_secret = $oidc->getClientSecret();\n+\n+// Be sure to add logic to store the client id and client secret\n+```\n+\n+## Example 3: Network and Security ##\n+```php\n+// Configure a proxy\n+$oidc->setHttpProxy(\"http://my.proxy.com:80/\");\n+\n+// Configure a cert\n+$oidc->setCertPath(\"/path/to/my.cert\");\n+```\n+\n+## Example 4: Request Client Credentials Token ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                'ClientSecretHere');\n+$oidc->providerConfigParam(array('token_endpoint'=>'https://id.provider.com/connect/token'));\n+$oidc->addScope('my_scope');\n+\n+// this assumes success (to validate check if the access_token property is there and a valid JWT) :\n+$clientCredentialsToken = $oidc->requestClientCredentialsToken()->access_token;\n+\n+```\n+\n+## Example 5: Request Resource Owners Token (with client auth) ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                'ClientSecretHere');\n+$oidc->providerConfigParam(array('token_endpoint'=>'https://id.provider.com/connect/token'));\n+$oidc->addScope('my_scope');\n+\n+//Add username and password\n+$oidc->addAuthParam(array('username'=>'<Username>'));\n+$oidc->addAuthParam(array('password'=>'<Password>'));\n+\n+//Perform the auth and return the token (to validate check if the access_token property is there and a valid JWT) :\n+$token = $oidc->requestResourceOwnerToken(TRUE)->access_token;\n+\n+```\n+\n+## Example 6: Basic client for implicit flow e.g. with Azure AD B2C (see http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                'ClientSecretHere');\n+$oidc->setResponseTypes(array('id_token'));\n+$oidc->addScope(array('openid'));\n+$oidc->setAllowImplicitFlow(true);\n+$oidc->addAuthParam(array('response_mode' => 'form_post'));\n+$oidc->setCertPath('/path/to/my.cert');\n+$oidc->authenticate();\n+$sub = $oidc->getVerifiedClaims('sub');\n+\n+```\n+\n+## Example 7: Introspection of an access token (see https://tools.ietf.org/html/rfc7662) ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                'ClientSecretHere');\n+$data = $oidc->introspectToken('an.access-token.as.given');\n+if (!$data->active) {\n+    // the token is no longer usable\n+}\n+\n+```\n+\n+## Example 8: PKCE Client ##\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                null);\n+$oidc->setCodeChallengeMethod('S256');\n+$oidc->authenticate();\n+$name = $oidc->requestUserInfo('given_name');\n+\n+```\n+\n+## Example 9: Back-channel logout ##\n+\n+Back-channel authentication assumes you can end a session on the server side on behalf of the user (without relying\n+on their browser). The request is a POST from the OP direct to your RP. In this way, the use of this library can\n+ensure your RP performs 'single sign out' for the user even if they didn't have your RP open in a browser or other\n+device, but still had an active session there.\n+\n+Either the sid or the sub may be accessible from the logout token sent from the OP. You can use either\n+`getSidFromBackChannel()` or `getSubFromBackChannel()` to retrieve them if it is helpful to match them to a session\n+in order to destroy it.\n+\n+The below ensures the use of this library to ensure validation of the back-channel logout token, but is afterward\n+just a hypothetical way of finding such a session and destroying it. Adjust it to the needs of your RP.\n+\n+```php\n+\n+function handleLogout() {\n+    // NOTE: assumes that $this->oidc is an instance of OpenIDConnectClient()\n+    if ($this->oidc->verifyLogoutToken()) {\n+        $sid = $this->oidc->getSidFromBackChannel();\n+\n+        if (isset($sid)) {\n+            // Somehow find the session based on the $sid and\n+            // destroy it. This depends on your RP's design,\n+            // there is nothing in the OIDC spec to mandate how.\n+            //\n+            // In this example, we find a Redis key, which was\n+            // previously stored using the sid we obtained from\n+            // the access token after login.\n+            //\n+            // The value of the Redis key is that of the user's\n+            // session ID specific to this hypothetical RP app.\n+            //\n+            // We then switch to that session and destroy it.\n+            $this->redis->connect('127.0.0.1', 6379);\n+            $session_id_to_destroy = $this->redis->get($sid);\n+            if ($session_id_to_destroy) {\n+                session_commit();\n+                session_id($session_id_to_destroy); // switches to that session\n+                session_start();\n+                $_SESSION = array(); // effectively ends the session\n+            }\n+        }\n+    }\n+}\n+\n+```\n+\n+## Example 10: Enable Token Endpoint Auth Methods ##\n+\n+By default, only `client_secret_basic` is enabled on client side which was the only supported for a long time.\n+Recently `client_secret_jwt` and `private_key_jwt` have been added, but they remain disabled until explicitly enabled.\n+\n+```php\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient('https://id.provider.com',\n+                                'ClientIDHere',\n+                                null);\n+# enable 'client_secret_basic' and 'client_secret_jwt'                                \n+$oidc->setTokenEndpointAuthMethodsSupported(['client_secret_basic', 'client_secret_jwt']);\n+\n+# for 'private_key_jwt' in addition also the generator function has to be set.\n+$oidc->setTokenEndpointAuthMethodsSupported(['private_key_jwt']);\n+$oidc->setPrivateKeyJwtGenerator(function(string $token_endpoint) {\n+    # TODO: what ever is necessary\n+})\n+```\n+\n+\n+## Development Environments ##\n+In some cases you may need to disable SSL security on your development systems.\n+Note: This is not recommended on production systems.\n+\n+```php\n+$oidc->setVerifyHost(false);\n+$oidc->setVerifyPeer(false);\n+```\n+\n+Also, your local system might not support HTTPS, so you might disable upgrading to it:\n+\n+```php\n+$oidc->setHttpUpgradeInsecureRequests(false);\n+```\n+\n+### Todo ###\n+- Dynamic registration does not support registration auth tokens and endpoints\n+\n+  [1]: http://openid.net/specs/openid-connect-basic-1_0-15.html#id_res\n+  \n+## Contributing ###\n+ - All pull requests, once merged, should be added to the CHANGELOG.md file."
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/client_example.php",
          "status": "added",
          "additions": 56,
          "deletions": 0,
          "patch": "@@ -0,0 +1,56 @@\n+<?php\n+\n+/**\n+ *\n+ * Copyright MITRE 2012\n+ *\n+ * OpenIDConnectClient for PHP5\n+ * Author: Michael Jett <mjett@mitre.org>\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License. You may obtain\n+ * a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+require __DIR__ . '/vendor/autoload.php';\n+\n+use Jumbojett\\OpenIDConnectClient;\n+\n+$oidc = new OpenIDConnectClient(\n+    'http://myproviderURL.com/',\n+    'ClientIDHere',\n+    'ClientSecretHere'\n+);\n+\n+$oidc->authenticate();\n+$name = $oidc->requestUserInfo('given_name');\n+\n+?>\n+\n+<html>\n+<head>\n+    <title>Example OpenID Connect Client Use</title>\n+    <style>\n+        body {\n+            font-family: 'Lucida Grande', Verdana, Arial, sans-serif;\n+        }\n+    </style>\n+</head>\n+<body>\n+\n+    <div>\n+        Hello <?php echo $name; ?>\n+    </div>\n+\n+</body>\n+</html>\n+"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/composer.json",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+{\n+    \"name\": \"jumbojett/openid-connect-php\",\n+    \"description\": \"Bare-bones OpenID Connect client\",\n+    \"license\": \"Apache-2.0\",\n+    \"require\": {\n+        \"php\": \">=5.4\",\n+        \"phpseclib/phpseclib\" : \"~2.0 || ^3.0\",\n+        \"ext-json\": \"*\",\n+        \"ext-curl\": \"*\",\n+        \"paragonie/random_compat\": \">=2\"\n+    },\n+    \"require-dev\": {\n+        \"roave/security-advisories\": \"dev-master\",\n+        \"yoast/phpunit-polyfills\": \"^1.0\"\n+    },\n+    \"archive\" : {\n+        \"exclude\" : [\n+            \".*\"\n+        ]\n+    },\n+    \"autoload\" : {\n+         \"classmap\": [ \"src/\"]\n+    }\n+}"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/phpunit.xml.dist",
          "status": "added",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<phpunit\n+        bootstrap=\"./vendor/autoload.php\"\n+        colors=\"true\"\n+        convertErrorsToExceptions=\"true\"\n+        convertNoticesToExceptions=\"true\"\n+        convertWarningsToExceptions=\"true\"\n+        verbose=\"true\"\n+        stopOnFailure=\"false\"\n+        processIsolation=\"false\"\n+        backupGlobals=\"false\"\n+        syntaxCheck=\"true\"\n+>\n+    <testsuites>\n+        <testsuite name=\"Tests\">\n+            <directory>./tests</directory>\n+        </testsuite>\n+    </testsuites>\n+    <filter>\n+        <whitelist addUncoveredFilesFromWhitelist=\"true\">\n+            <directory suffix=\".php\">./src</directory>\n+            <exclude>\n+                <directory>./vendor</directory>\n+                <directory>./tests</directory>\n+            </exclude>\n+        </whitelist>\n+    </filter>\n+</phpunit>"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/src/OpenIDConnectClient.php",
          "status": "added",
          "additions": 2219,
          "deletions": 0,
          "patch": "@@ -0,0 +1,2219 @@\n+<?php\n+/**\n+ *\n+ * Copyright MITRE 2020\n+ *\n+ * OpenIDConnectClient for PHP5\n+ * Author: Michael Jett <mjett@mitre.org>\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License. You may obtain\n+ * a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+namespace Jumbojett;\n+\n+/**\n+ *\n+ * JWT signature verification support by Jonathan Reed <jdreed@mit.edu>\n+ * Licensed under the same license as the rest of this file.\n+ *\n+ * phpseclib is required to validate the signatures of some tokens.\n+ * It can be downloaded from: http://phpseclib.sourceforge.net/\n+ */\n+\n+if (!class_exists('\\phpseclib3\\Crypt\\RSA') && !class_exists('\\phpseclib\\Crypt\\RSA') && !class_exists('Crypt_RSA')) {\n+    user_error('Unable to find phpseclib Crypt/RSA.php.  Ensure phpseclib is installed and in include_path before you include this file');\n+}\n+\n+/**\n+ * A wrapper around base64_decode which decodes Base64URL-encoded data,\n+ * which is not the same alphabet as base64.\n+ * @param string $base64url\n+ * @return bool|string\n+ */\n+function base64url_decode($base64url) {\n+    return base64_decode(b64url2b64($base64url));\n+}\n+\n+/**\n+ * Per RFC4648, \"base64 encoding with URL-safe and filename-safe\n+ * alphabet\".  This just replaces characters 62 and 63.  None of the\n+ * reference implementations seem to restore the padding if necessary,\n+ * but we'll do it anyway.\n+ * @param string $base64url\n+ * @return string\n+ */\n+function b64url2b64($base64url) {\n+    // \"Shouldn't\" be necessary, but why not\n+    $padding = strlen($base64url) % 4;\n+    if ($padding > 0) {\n+        $base64url .= str_repeat('=', 4 - $padding);\n+    }\n+    return strtr($base64url, '-_', '+/');\n+}\n+\n+\n+/**\n+ * OpenIDConnect Exception Class\n+ */\n+class OpenIDConnectClientException extends \\Exception\n+{\n+\n+}\n+\n+/**\n+ * Require the CURL and JSON PHP extensions to be installed\n+ */\n+if (!function_exists('curl_init')) {\n+    throw new OpenIDConnectClientException('OpenIDConnect needs the CURL PHP extension.');\n+}\n+if (!function_exists('json_decode')) {\n+    throw new OpenIDConnectClientException('OpenIDConnect needs the JSON PHP extension.');\n+}\n+\n+/**\n+ *\n+ * Please note this class stores nonces by default in $_SESSION['openid_connect_nonce']\n+ *\n+ */\n+class OpenIDConnectClient\n+{\n+\n+    /**\n+     * @var string arbitrary id value\n+     */\n+    private $clientID;\n+\n+    /**\n+     * @var string arbitrary name value\n+     */\n+    private $clientName;\n+\n+    /**\n+     * @var string arbitrary secret value\n+     */\n+    private $clientSecret;\n+\n+    /**\n+     * @var array holds the provider configuration\n+     */\n+    private $providerConfig = [];\n+\n+    /**\n+     * @var string http proxy if necessary\n+     */\n+    private $httpProxy;\n+\n+    /**\n+     * @var string full system path to the SSL certificate\n+     */\n+    private $certPath;\n+\n+    /**\n+     * @var bool Verify SSL peer on transactions\n+     */\n+    private $verifyPeer = true;\n+\n+    /**\n+     * @var bool Verify peer hostname on transactions\n+     */\n+    private $verifyHost = true;\n+\n+    /**\n+     * @var string if we acquire an access token it will be stored here\n+     */\n+    protected $accessToken;\n+\n+    /**\n+     * @var string if we acquire a refresh token it will be stored here\n+     */\n+    private $refreshToken;\n+\n+    /**\n+     * @var string if we acquire an id token it will be stored here\n+     */\n+    protected $idToken;\n+\n+    /**\n+     * @var string stores the token response\n+     */\n+    private $tokenResponse;\n+\n+    /**\n+     * @var array holds scopes\n+     */\n+    private $scopes = [];\n+\n+    /**\n+     * @var int|null Response code from the server\n+     */\n+    private $responseCode;\n+\n+    /**\n+     * @var array holds response types\n+     */\n+    private $responseTypes = [];\n+\n+    /**\n+     * @var array holds a cache of info returned from the user info endpoint\n+     */\n+    private $userInfo = [];\n+\n+    /**\n+     * @var array holds authentication parameters\n+     */\n+    private $authParams = [];\n+\n+    /**\n+     * @var array holds additional registration parameters for example post_logout_redirect_uris\n+     */\n+    private $registrationParams = [];\n+\n+    /**\n+     * @var mixed holds well-known openid server properties\n+     */\n+    private $wellKnown = false;\n+\n+    /**\n+     * @var mixed holds well-known opendid configuration parameters, like policy for MS Azure AD B2C User Flow  \n+     * @see https://docs.microsoft.com/en-us/azure/active-directory-b2c/user-flow-overview \n+     */\n+    private $wellKnownConfigParameters = [];\n+\n+    /**\n+     * @var int timeout (seconds)\n+     */\n+    protected $timeOut = 60;\n+\n+    /**\n+     * @var int leeway (seconds)\n+     */\n+    private $leeway = 300;\n+\n+    /**\n+     * @var array holds response types\n+     */\n+    private $additionalJwks = [];\n+\n+    /**\n+     * @var array holds verified jwt claims\n+     */\n+    protected $verifiedClaims = [];\n+\n+    /**\n+     * @var callable|null validator function for issuer claim\n+     */\n+    private $issuerValidator;\n+\n+    /**\n+     * @var callable|null generator function for private key jwt client authentication\n+     */\n+    private $privateKeyJwtGenerator;\n+\n+    /**\n+     * @var bool Allow OAuth 2 implicit flow; see http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth\n+     */\n+    private $allowImplicitFlow = false;\n+\n+    /**\n+     * @var string\n+     */\n+    private $redirectURL;\n+\n+    /**\n+     * @var int defines which URL-encoding http_build_query() uses\n+     */\n+    protected $encType = PHP_QUERY_RFC1738;\n+\n+    /**\n+     * @var bool Enable or disable upgrading to HTTPS by paying attention to HTTP header HTTP_UPGRADE_INSECURE_REQUESTS\n+     */\n+    protected $httpUpgradeInsecureRequests = true;\n+\n+    /**\n+     * @var string holds code challenge method for PKCE mode\n+     * @see https://tools.ietf.org/html/rfc7636\n+     */\n+    private $codeChallengeMethod = false;\n+\n+    /**\n+     * @var array holds PKCE supported algorithms\n+     */\n+    private $pkceAlgs = ['S256' => 'sha256', 'plain' => false];\n+\n+    /**\n+     * @var string if we acquire a sid in back-channel logout it will be stored here\n+     */\n+    private $backChannelSid;\n+\n+    /**\n+     * @var string if we acquire a sub in back-channel logout it will be stored here\n+     */\n+    private $backChannelSubject;\n+\n+    /**\n+     * @var array list of supported auth methods\n+     */\n+    private $token_endpoint_auth_methods_supported = ['client_secret_basic'];\n+\n+    /**\n+     * @param $provider_url string optional\n+     *\n+     * @param $client_id string optional\n+     * @param $client_secret string optional\n+     * @param null $issuer\n+     */\n+    public function __construct($provider_url = null, $client_id = null, $client_secret = null, $issuer = null) {\n+        $this->setProviderURL($provider_url);\n+        if ($issuer === null) {\n+            $this->setIssuer($provider_url);\n+        } else {\n+            $this->setIssuer($issuer);\n+        }\n+\n+        $this->clientID = $client_id;\n+        $this->clientSecret = $client_secret;\n+    }\n+\n+    /**\n+     * @param $provider_url\n+     */\n+    public function setProviderURL($provider_url) {\n+        $this->providerConfig['providerUrl'] = $provider_url;\n+    }\n+\n+    /**\n+     * @param $issuer\n+     */\n+    public function setIssuer($issuer) {\n+        $this->providerConfig['issuer'] = $issuer;\n+    }\n+\n+    /**\n+     * @param $response_types\n+     */\n+    public function setResponseTypes($response_types) {\n+        $this->responseTypes = array_merge($this->responseTypes, (array)$response_types);\n+    }\n+\n+    /**\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function authenticate() {\n+\n+        // Do a preemptive check to see if the provider has thrown an error from a previous redirect\n+        if (isset($_REQUEST['error'])) {\n+            $desc = isset($_REQUEST['error_description']) ? ' Description: ' . $_REQUEST['error_description'] : '';\n+            throw new OpenIDConnectClientException('Error: ' . $_REQUEST['error'] .$desc);\n+        }\n+\n+        // If we have an authorization code then proceed to request a token\n+        if (isset($_REQUEST['code'])) {\n+\n+            $code = $_REQUEST['code'];\n+            $token_json = $this->requestTokens($code);\n+\n+            // Throw an error if the server returns one\n+            if (isset($token_json->error)) {\n+                if (isset($token_json->error_description)) {\n+                    throw new OpenIDConnectClientException($token_json->error_description);\n+                }\n+                throw new OpenIDConnectClientException('Got response: ' . $token_json->error);\n+            }\n+\n+            // Do an OpenID Connect session check\n+            if ($_REQUEST['state'] !== $this->getState()) {\n+                throw new OpenIDConnectClientException('Unable to determine state');\n+            }\n+\n+            // Cleanup state\n+            $this->unsetState();\n+\n+            if (!property_exists($token_json, 'id_token')) {\n+                throw new OpenIDConnectClientException('User did not authorize openid scope.');\n+            }\n+\n+            $claims = $this->decodeJWT($token_json->id_token, 1);\n+\n+            // Verify the signature\n+            if ($this->canVerifySignatures()) {\n+                if (!$this->getProviderConfigValue('jwks_uri')) {\n+                    throw new OpenIDConnectClientException ('Unable to verify signature due to no jwks_uri being defined');\n+                }\n+                if (!$this->verifyJWTsignature($token_json->id_token)) {\n+                    throw new OpenIDConnectClientException ('Unable to verify signature');\n+                }\n+            } else {\n+                user_error('Warning: JWT signature verification unavailable.');\n+            }\n+\n+            // Save the id token\n+            $this->idToken = $token_json->id_token;\n+\n+            // Save the access token\n+            $this->accessToken = $token_json->access_token;\n+\n+            // If this is a valid claim\n+            if ($this->verifyJWTclaims($claims, $token_json->access_token)) {\n+\n+                // Clean up the session a little\n+                $this->unsetNonce();\n+\n+                // Save the full response\n+                $this->tokenResponse = $token_json;\n+\n+                // Save the verified claims\n+                $this->verifiedClaims = $claims;\n+\n+                // Save the refresh token, if we got one\n+                if (isset($token_json->refresh_token)) {\n+                    $this->refreshToken = $token_json->refresh_token;\n+                }\n+\n+                // Success!\n+                return true;\n+            }\n+\n+            throw new OpenIDConnectClientException ('Unable to verify JWT claims');\n+        }\n+\n+        if ($this->allowImplicitFlow && isset($_REQUEST['id_token'])) {\n+            // if we have no code but an id_token use that\n+            $id_token = $_REQUEST['id_token'];\n+\n+            $accessToken = null;\n+            if (isset($_REQUEST['access_token'])) {\n+                $accessToken = $_REQUEST['access_token'];\n+            }\n+\n+            // Do an OpenID Connect session check\n+            if ($_REQUEST['state'] !== $this->getState()) {\n+                throw new OpenIDConnectClientException('Unable to determine state');\n+            }\n+\n+            // Cleanup state\n+            $this->unsetState();\n+\n+            $claims = $this->decodeJWT($id_token, 1);\n+\n+            // Verify the signature\n+            if ($this->canVerifySignatures()) {\n+                if (!$this->getProviderConfigValue('jwks_uri')) {\n+                    throw new OpenIDConnectClientException ('Unable to verify signature due to no jwks_uri being defined');\n+                }\n+                if (!$this->verifyJWTsignature($id_token)) {\n+                    throw new OpenIDConnectClientException ('Unable to verify signature');\n+                }\n+            } else {\n+                user_error('Warning: JWT signature verification unavailable.');\n+            }\n+\n+            // Save the id token\n+            $this->idToken = $id_token;\n+\n+            // If this is a valid claim\n+            if ($this->verifyJWTclaims($claims, $accessToken)) {\n+\n+                // Clean up the session a little\n+                $this->unsetNonce();\n+\n+                // Save the verified claims\n+                $this->verifiedClaims = $claims;\n+\n+                // Save the access token\n+                if ($accessToken) {\n+                    $this->accessToken = $accessToken;\n+                }\n+\n+                // Success!\n+                return true;\n+\n+            }\n+\n+            throw new OpenIDConnectClientException ('Unable to verify JWT claims');\n+        }\n+\n+        $this->requestAuthorization();\n+        return false;\n+    }\n+\n+    /**\n+     * It calls the end-session endpoint of the OpenID Connect provider to notify the OpenID\n+     * Connect provider that the end-user has logged out of the relying party site\n+     * (the client application).\n+     *\n+     * @param string $idToken ID token (obtained at login)\n+     * @param string|null $redirect URL to which the RP is requesting that the End-User's User Agent\n+     * be redirected after a logout has been performed. The value MUST have been previously\n+     * registered with the OP. Value can be null.\n+     *\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function signOut($idToken, $redirect) {\n+        $signout_endpoint = $this->getProviderConfigValue('end_session_endpoint');\n+\n+        $signout_params = null;\n+        if($redirect === null){\n+            $signout_params = ['id_token_hint' => $idToken];\n+        }\n+        else {\n+            $signout_params = [\n+                'id_token_hint' => $idToken,\n+                'post_logout_redirect_uri' => $redirect];\n+        }\n+\n+        $signout_endpoint  .= (strpos($signout_endpoint, '?') === false ? '?' : '&') . http_build_query( $signout_params, '', '&', $this->encType);\n+        $this->redirect($signout_endpoint);\n+    }\n+\n+\n+    /**\n+     * Decode and then verify a logout token sent as part of\n+     * back-channel logout flows.\n+     *\n+     * This function should be evaluated as a boolean check\n+     * in your route that receives the POST request for back-channel\n+     * logout executed from the OP.\n+     *\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function verifyLogoutToken()\n+    {\n+        if (isset($_REQUEST['logout_token'])) {\n+            $logout_token = $_REQUEST['logout_token'];\n+\n+            $claims = $this->decodeJWT($logout_token, 1);\n+\n+            // Verify the signature\n+            if ($this->canVerifySignatures()) {\n+                if (!$this->getProviderConfigValue('jwks_uri')) {\n+                    throw new OpenIDConnectClientException('Back-channel logout: Unable to verify signature due to no jwks_uri being defined');\n+                }\n+                if (!$this->verifyJWTsignature($logout_token)) {\n+                    throw new OpenIDConnectClientException('Back-channel logout: Unable to verify JWT signature');\n+                }\n+            }\n+            else {\n+                user_error('Warning: JWT signature verification unavailable');\n+            }\n+\n+            // Verify Logout Token Claims\n+            if ($this->verifyLogoutTokenClaims($claims)) {\n+                $this->verifiedClaims = $claims;\n+                return true;\n+            }\n+\n+            return false;\n+        }\n+\n+        throw new OpenIDConnectClientException('Back-channel logout: There was no logout_token in the request');\n+    }\n+\n+    /**\n+     * Verify each claim in the logout token according to the\n+     * spec for back-channel logout.\n+     *\n+     * @param object $claims\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function verifyLogoutTokenClaims($claims)\n+    {\n+        // Verify that the Logout Token doesn't contain a nonce Claim.\n+        if (isset($claims->nonce)) {\n+            return false;\n+        }\n+\n+        // Verify that the logout token contains a sub or sid, or both\n+        if (!isset($claims->sid) && !isset($claims->sub)) {\n+            return false;\n+        }\n+        // Set the sid, which could be used to map to a session in\n+        // the RP, and therefore be used to help destroy the RP's\n+        // session.\n+        if (isset($claims->sid)) {\n+            $this->backChannelSid = $claims->sid;\n+        }\n+\n+        // Set the sub, which could be used to map to a session in\n+        // the RP, and therefore be used to help destroy the RP's\n+        // session.\n+        if (isset($claims->sub)) {\n+            $this->backChannelSubject = $claims->sub;\n+        }\n+\n+        // Verify that the Logout Token contains an events Claim whose\n+        // value is a JSON object containing the member name\n+        // http://schemas.openid.net/event/backchannel-logout\n+        if (isset($claims->events)) {\n+            $events = (array) $claims->events;\n+            if (!isset($events['http://schemas.openid.net/event/backchannel-logout']) ||\n+                !is_object($events['http://schemas.openid.net/event/backchannel-logout'])) {\n+                return false;\n+            }\n+        }\n+\n+        // Validate the iss\n+        if (!$this->validateIssuer($claims->iss)) {\n+            return false;\n+        }\n+        // Validate the aud\n+        if ((!$claims->aud === $this->clientID) || (!in_array($this->clientID, $claims->aud, true))) {\n+            return false;\n+        }\n+        // Validate the iat. At this point we can return true if it is ok\n+        if (isset($claims->iat) && ((is_int($claims->iat)) && ($claims->iat <= time() + $this->leeway))) {\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * @param array $scope - example: openid, given_name, etc...\n+     */\n+    public function addScope($scope) {\n+        $this->scopes = array_merge($this->scopes, (array)$scope);\n+    }\n+\n+    /**\n+     * @param array $param - example: prompt=login\n+     */\n+    public function addAuthParam($param) {\n+        $this->authParams = array_merge($this->authParams, (array)$param);\n+    }\n+\n+    /**\n+     * @param array $param - example: post_logout_redirect_uris=[http://example.com/successful-logout]\n+     */\n+    public function addRegistrationParam($param) {\n+        $this->registrationParams = array_merge($this->registrationParams, (array)$param);\n+    }\n+\n+    /**\n+     * @param array $token_endpoint_auth_methods_supported\n+     */\n+    public function setTokenEndpointAuthMethodsSupported($token_endpoint_auth_methods_supported)\n+    {\n+        $this->token_endpoint_auth_methods_supported = $token_endpoint_auth_methods_supported;\n+    }\n+\n+    /**\n+     * @param $jwk object - example: (object) ['kid' => ..., 'nbf' => ..., 'use' => 'sig', 'kty' => \"RSA\", 'e' => \"\", 'n' => \"\"]\n+     */\n+    protected function addAdditionalJwk($jwk) {\n+        $this->additionalJwks[] = $jwk;\n+    }\n+\n+    /**\n+     * Get's anything that we need configuration wise including endpoints, and other values\n+     *\n+     * @param string $param\n+     * @param string $default optional\n+     * @throws OpenIDConnectClientException\n+     * @return string|array\n+     *\n+     */\n+    protected function getProviderConfigValue($param, $default = null) {\n+\n+        // If the configuration value is not available, attempt to fetch it from a well known config endpoint\n+        // This is also known as auto \"discovery\"\n+        if (!isset($this->providerConfig[$param])) {\n+            $this->providerConfig[$param] = $this->getWellKnownConfigValue($param, $default);\n+        }\n+\n+        return $this->providerConfig[$param];\n+    }\n+\n+    /**\n+     * Get's anything that we need configuration wise including endpoints, and other values\n+     *\n+     * @param string $param\n+     * @param string $default optional\n+     * @throws OpenIDConnectClientException\n+     * @return string\n+     *\n+     */\n+    private function getWellKnownConfigValue($param, $default = null) {\n+\n+        // If the configuration value is not available, attempt to fetch it from a well known config endpoint\n+        // This is also known as auto \"discovery\"\n+        if(!$this->wellKnown) {\n+            $well_known_config_url = rtrim($this->getProviderURL(), '/') . '/.well-known/openid-configuration';\n+            if (count($this->wellKnownConfigParameters) > 0){\n+                $well_known_config_url .= '?' .  http_build_query($this->wellKnownConfigParameters) ;\n+            }\n+            $this->wellKnown = json_decode($this->fetchURL($well_known_config_url));\n+        }\n+\n+        $value = false;\n+        if(isset($this->wellKnown->{$param})){\n+            $value = $this->wellKnown->{$param};\n+        }\n+\n+        if ($value) {\n+            return $value;\n+        }\n+\n+        if (isset($default)) {\n+            // Uses default value if provided\n+            return $default;\n+        }\n+\n+        throw new OpenIDConnectClientException(\"The provider {$param} could not be fetched. Make sure your provider has a well known configuration available.\");\n+    }\n+\n+    /**\n+     * Set optionnal parameters for .well-known/openid-configuration \n+     *\n+     * @param string $param\n+     *\n+     */\n+    public function setWellKnownConfigParameters(array $params = []){\n+        $this->wellKnownConfigParameters=$params;\n+    }\n+\n+\n+    /**\n+     * @param string $url Sets redirect URL for auth flow\n+     */\n+    public function setRedirectURL($url) {\n+        if (parse_url($url,PHP_URL_HOST) !== false) {\n+            $this->redirectURL = $url;\n+        }\n+    }\n+\n+    /**\n+     * Gets the URL of the current page we are on, encodes, and returns it\n+     *\n+     * @return string\n+     */\n+    public function getRedirectURL() {\n+\n+        // If the redirect URL has been set then return it.\n+        if (property_exists($this, 'redirectURL') && $this->redirectURL) {\n+            return $this->redirectURL;\n+        }\n+\n+        // Other-wise return the URL of the current page\n+\n+        /**\n+         * Thank you\n+         * http://stackoverflow.com/questions/189113/how-do-i-get-current-page-full-url-in-php-on-a-windows-iis-server\n+         */\n+\n+        /*\n+         * Compatibility with multiple host headers.\n+         * The problem with SSL over port 80 is resolved and non-SSL over port 443.\n+         * Support of 'ProxyReverse' configurations.\n+         */\n+\n+        if ($this->httpUpgradeInsecureRequests && isset($_SERVER['HTTP_UPGRADE_INSECURE_REQUESTS']) && ($_SERVER['HTTP_UPGRADE_INSECURE_REQUESTS'] === '1')) {\n+            $protocol = 'https';\n+        } elseif (isset($_SERVER['HTTP_X_FORWARDED_PROTO'])) {\n+            $protocol = $_SERVER['HTTP_X_FORWARDED_PROTO'];\n+        } elseif (isset($_SERVER['REQUEST_SCHEME'])) {\n+            $protocol = $_SERVER['REQUEST_SCHEME'];\n+        } elseif (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') {\n+            $protocol = 'https';\n+        } else {\n+            $protocol = 'http';\n+        }\n+\t    \n+        if (isset($_SERVER['HTTP_X_FORWARDED_PORT'])) {\n+            $port = intval($_SERVER['HTTP_X_FORWARDED_PORT']);\n+        } elseif (isset($_SERVER['SERVER_PORT'])) {\n+            $port = intval($_SERVER['SERVER_PORT']);\n+        } elseif ($protocol === 'https') {\n+            $port = 443;\n+        } else {\n+            $port = 80;\n+        }\n+\n+        if (isset($_SERVER['HTTP_HOST'])) {\n+            $host = explode(':', $_SERVER['HTTP_HOST'])[0];\n+        } elseif (isset($_SERVER['SERVER_NAME'])) {\n+            $host = $_SERVER['SERVER_NAME'];\n+        } elseif (isset($_SERVER['SERVER_ADDR'])) {\n+            $host = $_SERVER['SERVER_ADDR'];\n+        } else {\n+            return 'http:///';\n+        }\n+\n+        $port = (443 === $port) || (80 === $port) ? '' : ':' . $port;\n+\t    \n+        $explodedRequestUri = isset($_SERVER['REQUEST_URI']) ? explode('?', $_SERVER['REQUEST_URI']) : [];\n+        return sprintf('%s://%s%s/%s', $protocol, $host, $port, trim(reset($explodedRequestUri), '/'));\n+    }\n+\n+    /**\n+     * Used for arbitrary value generation for nonces and state\n+     *\n+     * @return string\n+     * @throws OpenIDConnectClientException\n+     */\n+    protected function generateRandString() {\n+        // Error and Exception need to be catched in this order, see https://github.com/paragonie/random_compat/blob/master/README.md\n+        // random_compat polyfill library should be removed if support for PHP versions < 7 is dropped\n+        try {\n+            return \\bin2hex(\\random_bytes(16));\n+        } catch (Error $e) {\n+            throw new OpenIDConnectClientException('Random token generation failed.');\n+        } catch (Exception $e) {\n+            throw new OpenIDConnectClientException('Random token generation failed.');\n+        }\n+    }\n+\n+    /**\n+     * Start Here\n+     * @return void\n+     * @throws OpenIDConnectClientException\n+     * @throws \\Exception\n+     */\n+    private function requestAuthorization() {\n+\n+        $auth_endpoint = $this->getProviderConfigValue('authorization_endpoint');\n+        $response_type = 'code';\n+\n+        // Generate and store a nonce in the session\n+        // The nonce is an arbitrary value\n+        $nonce = $this->setNonce($this->generateRandString());\n+\n+        // State essentially acts as a session key for OIDC\n+        $state = $this->setState($this->generateRandString());\n+\n+        $auth_params = array_merge($this->authParams, [\n+            'response_type' => $response_type,\n+            'redirect_uri' => $this->getRedirectURL(),\n+            'client_id' => $this->clientID,\n+            'nonce' => $nonce,\n+            'state' => $state,\n+            'scope' => 'openid'\n+        ]);\n+\n+        // If the client has been registered with additional scopes\n+        if (count($this->scopes) > 0) {\n+            $auth_params = array_merge($auth_params, ['scope' => implode(' ', array_merge($this->scopes, ['openid']))]);\n+        }\n+\n+        // If the client has been registered with additional response types\n+        if (count($this->responseTypes) > 0) {\n+            $auth_params = array_merge($auth_params, ['response_type' => implode(' ', $this->responseTypes)]);\n+        }\n+\n+        // If the client supports Proof Key for Code Exchange (PKCE)\n+        $codeChallengeMethod = $this->getCodeChallengeMethod();\n+        if (!empty($codeChallengeMethod) && in_array($codeChallengeMethod, $this->getProviderConfigValue('code_challenge_methods_supported', []), true)) {\n+            $codeVerifier = bin2hex(random_bytes(64));\n+            $this->setCodeVerifier($codeVerifier);\n+            if (!empty($this->pkceAlgs[$codeChallengeMethod])) {\n+                $codeChallenge = rtrim(strtr(base64_encode(hash($this->pkceAlgs[$codeChallengeMethod], $codeVerifier, true)), '+/', '-_'), '=');\n+            } else {\n+                $codeChallenge = $codeVerifier;\n+            }\n+            $auth_params = array_merge($auth_params, [\n+                'code_challenge' => $codeChallenge,\n+                'code_challenge_method' => $codeChallengeMethod\n+            ]);\n+        }\n+\n+        $auth_endpoint .= (strpos($auth_endpoint, '?') === false ? '?' : '&') . http_build_query($auth_params, '', '&', $this->encType);\n+\n+        $this->commitSession();\n+        $this->redirect($auth_endpoint);\n+    }\n+\n+    /**\n+     * Requests a client credentials token\n+     *\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function requestClientCredentialsToken() {\n+        $token_endpoint = $this->getProviderConfigValue('token_endpoint');\n+\n+        $headers = [];\n+\n+        $grant_type = 'client_credentials';\n+\n+        $post_data = [\n+            'grant_type'    => $grant_type,\n+            'client_id'     => $this->clientID,\n+            'client_secret' => $this->clientSecret,\n+            'scope'         => implode(' ', $this->scopes)\n+        ];\n+\n+        // Convert token params to string format\n+        $post_params = http_build_query($post_data, '', '&', $this->encType);\n+\n+        return json_decode($this->fetchURL($token_endpoint, $post_params, $headers));\n+    }\n+\n+    /**\n+     * Requests a resource owner token\n+     * (Defined in https://tools.ietf.org/html/rfc6749#section-4.3)\n+     *\n+     * @param boolean $bClientAuth Indicates that the Client ID and Secret be used for client authentication\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function requestResourceOwnerToken($bClientAuth = FALSE) {\n+        $token_endpoint = $this->getProviderConfigValue('token_endpoint');\n+\n+        $headers = [];\n+\n+        $grant_type = 'password';\n+\n+        $post_data = [\n+            'grant_type'    => $grant_type,\n+            'username'      => $this->authParams['username'],\n+            'password'      => $this->authParams['password'],\n+            'scope'         => implode(' ', $this->scopes)\n+        ];\n+\n+        //For client authentication include the client values\n+        if($bClientAuth) {\n+            $token_endpoint_auth_methods_supported = $this->getProviderConfigValue('token_endpoint_auth_methods_supported', ['client_secret_basic']);\n+            if ($this->supportsAuthMethod('client_secret_basic', $token_endpoint_auth_methods_supported)) {\n+                $headers = ['Authorization: Basic ' . base64_encode(urlencode($this->clientID) . ':' . urlencode($this->clientSecret))];\n+            } else {\n+                $post_data['client_id']     = $this->clientID;\n+                $post_data['client_secret'] = $this->clientSecret;\n+            }\n+        }\n+\n+        // Convert token params to string format\n+        $post_params = http_build_query($post_data, '', '&', $this->encType);\n+\n+        return json_decode($this->fetchURL($token_endpoint, $post_params, $headers));\n+    }\n+\n+\n+    /**\n+     * Requests ID and Access tokens\n+     *\n+     * @param string $code\n+     * @param string[] $headers Extra HTTP headers to pass to the token endpoint\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    protected function requestTokens($code, $headers = array()) {\n+        $token_endpoint = $this->getProviderConfigValue('token_endpoint');\n+        $token_endpoint_auth_methods_supported = $this->getProviderConfigValue('token_endpoint_auth_methods_supported', ['client_secret_basic']);\n+\n+        $grant_type = 'authorization_code';\n+\n+        $token_params = [\n+            'grant_type' => $grant_type,\n+            'code' => $code,\n+            'redirect_uri' => $this->getRedirectURL(),\n+            'client_id' => $this->clientID,\n+            'client_secret' => $this->clientSecret\n+        ];\n+\n+        $authorizationHeader = null;\n+        # Consider Basic authentication if provider config is set this way\n+        if ($this->supportsAuthMethod('client_secret_basic', $token_endpoint_auth_methods_supported)) {\n+            $authorizationHeader = 'Authorization: Basic ' . base64_encode(urlencode($this->clientID) . ':' . urlencode($this->clientSecret));\n+            unset($token_params['client_secret']);\n+\t        unset($token_params['client_id']);\n+        }\n+\n+        // When there is a private key jwt generator and it is supported then use it as client authentication\n+        if ($this->privateKeyJwtGenerator !== null && $this->supportsAuthMethod('private_key_jwt', $token_endpoint_auth_methods_supported)) {\n+            $token_params['client_assertion_type'] = 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer';\n+            $token_params['client_assertion'] = $this->privateKeyJwtGenerator->__invoke($token_endpoint);\n+        }\n+\n+        if ($this->supportsAuthMethod('client_secret_jwt', $token_endpoint_auth_methods_supported)) {\n+            $client_assertion_type = $this->getProviderConfigValue('client_assertion_type');\n+\n+            if(isset($this->providerConfig['client_assertion'])){\n+                $client_assertion = $this->getProviderConfigValue('client_assertion');\n+            }\n+            else{\n+                $client_assertion = $this->getJWTClientAssertion($this->getProviderConfigValue('token_endpoint'));\n+            }\n+            \n+            $token_params['client_assertion_type'] = $client_assertion_type;\n+            $token_params['client_assertion'] = $client_assertion;\n+            unset($token_params['client_secret']);\n+    \t}\n+\n+        $ccm = $this->getCodeChallengeMethod();\n+        $cv = $this->getCodeVerifier();\n+        if (!empty($ccm) && !empty($cv)) {\n+            $cs = $this->getClientSecret();\n+            if (empty($cs)) {\n+                $authorizationHeader = null;\n+                unset($token_params['client_secret']);\n+            }\n+            $token_params = array_merge($token_params, [\n+                'client_id' => $this->clientID,\n+                'code_verifier' => $this->getCodeVerifier()\n+            ]);\n+        }\n+\n+        // Convert token params to string format\n+        $token_params = http_build_query($token_params, '', '&', $this->encType);\n+\n+        if (null !== $authorizationHeader) {\n+            $headers[] = $authorizationHeader;\n+        }\n+\n+        $this->tokenResponse = json_decode($this->fetchURL($token_endpoint, $token_params, $headers));\n+\n+        return $this->tokenResponse;\n+    }\n+\n+    /**\n+     * Request RFC8693 Token Exchange\n+     * https://datatracker.ietf.org/doc/html/rfc8693\n+     *\n+     * @param string $subjectToken\n+     * @param string $subjectTokenType\n+     * @param string $audience\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function requestTokenExchange($subjectToken, $subjectTokenType, $audience = '') {\n+        $token_endpoint = $this->getProviderConfigValue('token_endpoint');\n+        $token_endpoint_auth_methods_supported = $this->getProviderConfigValue('token_endpoint_auth_methods_supported', ['client_secret_basic']);\n+        $headers = [];\n+        $grant_type = 'urn:ietf:params:oauth:grant-type:token-exchange';\n+\n+        $post_data = array(\n+            'grant_type'    => $grant_type,\n+            'subject_token_type' => $subjectTokenType,\n+            'subject_token' => $subjectToken,\n+            'client_id' => $this->clientID,\n+            'client_secret' => $this->clientSecret,\n+            'scope'         => implode(' ', $this->scopes)\n+        );\n+\n+        if (!empty($audience)) {\n+            $post_data['audience'] = $audience;\n+        }\n+\n+        # Consider Basic authentication if provider config is set this way\n+        if ($this->supportsAuthMethod('client_secret_basic', $token_endpoint_auth_methods_supported)) {\n+            $headers = ['Authorization: Basic ' . base64_encode(urlencode($this->clientID) . ':' . urlencode($this->clientSecret))];\n+            unset($post_data['client_secret']);\n+            unset($post_data['client_id']);\n+        }\n+\n+        // Convert token params to string format\n+        $post_params = http_build_query($post_data, null, '&', $this->encType);\n+\n+        return json_decode($this->fetchURL($token_endpoint, $post_params, $headers));\n+    }\n+\n+\n+    /**\n+     * Requests Access token with refresh token\n+     *\n+     * @param string $refresh_token\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function refreshToken($refresh_token) {\n+        $token_endpoint = $this->getProviderConfigValue('token_endpoint');\n+        $token_endpoint_auth_methods_supported = $this->getProviderConfigValue('token_endpoint_auth_methods_supported', ['client_secret_basic']);\n+\n+        $headers = [];\n+\n+        $grant_type = 'refresh_token';\n+\n+        $token_params = [\n+            'grant_type' => $grant_type,\n+            'refresh_token' => $refresh_token,\n+            'client_id' => $this->clientID,\n+            'client_secret' => $this->clientSecret,\n+            'scope'         => implode(' ', $this->scopes),\n+        ];\n+\n+        # Consider Basic authentication if provider config is set this way\n+        if ($this->supportsAuthMethod('client_secret_basic', $token_endpoint_auth_methods_supported)) {\n+            $headers = ['Authorization: Basic ' . base64_encode(urlencode($this->clientID) . ':' . urlencode($this->clientSecret))];\n+            unset($token_params['client_secret']);\n+            unset($token_params['client_id']);\n+        }\n+\n+        if ($this->supportsAuthMethod('client_secret_jwt', $token_endpoint_auth_methods_supported)) {\n+            $client_assertion_type = $this->getProviderConfigValue('client_assertion_type');\n+            $client_assertion = $this->getJWTClientAssertion($this->getProviderConfigValue('token_endpoint'));\n+            \n+            $token_params[\"grant_type\"] = \"urn:ietf:params:oauth:grant-type:token-exchange\";\n+            $token_params[\"subject_token\"] = $refresh_token;\n+            $token_params[\"audience\"] = $this->clientID;\n+            $token_params[\"subject_token_type\"] = \"urn:ietf:params:oauth:token-type:refresh_token\";\n+\t\t\t$token_params[\"requested_token_type\"] = \"urn:ietf:params:oauth:token-type:access_token\";\n+            $token_params['client_assertion_type']=$client_assertion_type;\n+            $token_params['client_assertion'] = $client_assertion;\n+            \n+            unset($token_params['client_secret']);\n+            unset($token_params['client_id']);\n+        }\n+        // Convert token params to string format\n+        $token_params = http_build_query($token_params, '', '&', $this->encType);\n+\n+        $json = json_decode($this->fetchURL($token_endpoint, $token_params, $headers));\n+\n+        if (isset($json->access_token)) {\n+            $this->accessToken = $json->access_token;\n+        }\n+\n+        if (isset($json->refresh_token)) {\n+            $this->refreshToken = $json->refresh_token;\n+        }\n+\n+        return $json;\n+    }\n+\n+    /**\n+     * @param array $keys\n+     * @param array $header\n+     * @throws OpenIDConnectClientException\n+     * @return object\n+     */\n+    private function getKeyForHeader($keys, $header) {\n+        foreach ($keys as $key) {\n+            if ($key->kty === 'RSA') {\n+                if (!isset($header->kid) || $key->kid === $header->kid) {\n+                    return $key;\n+                }\n+            } else {\n+                if (isset($key->alg) && $key->alg === $header->alg && $key->kid === $header->kid) {\n+                    return $key;\n+                }\n+            }\n+        }\n+        if ($this->additionalJwks) {\n+            foreach ($this->additionalJwks as $key) {\n+                if ($key->kty === 'RSA') {\n+                    if (!isset($header->kid) || $key->kid === $header->kid) {\n+                        return $key;\n+                    }\n+                } else {\n+                    if (isset($key->alg) && $key->alg === $header->alg && $key->kid === $header->kid) {\n+                        return $key;\n+                    }\n+                }\n+            }\n+        }\n+        if (isset($header->kid)) {\n+            throw new OpenIDConnectClientException('Unable to find a key for (algorithm, kid):' . $header->alg . ', ' . $header->kid . ')');\n+        }\n+\n+        throw new OpenIDConnectClientException('Unable to find a key for RSA');\n+    }\n+\n+\n+    /**\n+     * @param string $hashtype\n+     * @param object $key\n+     * @param $payload\n+     * @param $signature\n+     * @param $signatureType\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    private function verifyRSAJWTsignature($hashtype, $key, $payload, $signature, $signatureType) {\n+        if (!class_exists('\\phpseclib3\\Crypt\\RSA') && !class_exists('\\phpseclib\\Crypt\\RSA') && !class_exists('Crypt_RSA')) {\n+            throw new OpenIDConnectClientException('Crypt_RSA support unavailable.');\n+        }\n+        if (!(property_exists($key, 'n') && property_exists($key, 'e'))) {\n+            throw new OpenIDConnectClientException('Malformed key object');\n+        }\n+\n+        /* We already have base64url-encoded data, so re-encode it as\n+           regular base64 and use the XML key format for simplicity.\n+        */\n+        $public_key_xml = \"<RSAKeyValue>\\r\\n\".\n+            '  <Modulus>' . b64url2b64($key->n) . \"</Modulus>\\r\\n\" .\n+            '  <Exponent>' . b64url2b64($key->e) . \"</Exponent>\\r\\n\" .\n+            '</RSAKeyValue>';\n+        if (class_exists('\\phpseclib3\\Crypt\\RSA', false)) {\n+            $key = \\phpseclib3\\Crypt\\PublicKeyLoader::load($public_key_xml)\n+                ->withHash($hashtype);\n+            if ($signatureType === 'PSS') {\n+                $key = $key->withMGFHash($hashtype)\n+                    ->withPadding(\\phpseclib3\\Crypt\\RSA::SIGNATURE_PSS);\n+            } else {\n+                $key = $key->withPadding(\\phpseclib3\\Crypt\\RSA::SIGNATURE_PKCS1);\n+            }\n+            return $key->verify($payload, $signature);\n+        } elseif (class_exists('Crypt_RSA', false)) {\n+            $rsa = new Crypt_RSA();\n+            $rsa->setHash($hashtype);\n+            if ($signatureType === 'PSS') {\n+                $rsa->setMGFHash($hashtype);\n+            }\n+            $rsa->loadKey($public_key_xml, Crypt_RSA::PUBLIC_FORMAT_XML);\n+            $rsa->setSignatureMode($signatureType === 'PSS' ? Crypt_RSA::SIGNATURE_PSS : Crypt_RSA::SIGNATURE_PKCS1);\n+            return $rsa->verify($payload, $signature);\n+        } else {\n+            $rsa = new \\phpseclib\\Crypt\\RSA();\n+            $rsa->setHash($hashtype);\n+            if ($signatureType === 'PSS') {\n+                $rsa->setMGFHash($hashtype);\n+            }\n+            $rsa->loadKey($public_key_xml, \\phpseclib\\Crypt\\RSA::PUBLIC_FORMAT_XML);\n+            $rsa->setSignatureMode($signatureType === 'PSS' ? \\phpseclib\\Crypt\\RSA::SIGNATURE_PSS : \\phpseclib\\Crypt\\RSA::SIGNATURE_PKCS1);\n+            return $rsa->verify($payload, $signature);\n+        }\n+    }\n+\n+    /**\n+     * @param string $hashtype\n+     * @param object $key\n+     * @param $payload\n+     * @param $signature\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    private function verifyHMACJWTsignature($hashtype, $key, $payload, $signature)\n+    {\n+        if (!function_exists('hash_hmac')) {\n+            throw new OpenIDConnectClientException('hash_hmac support unavailable.');\n+        }\n+\n+        $expected=hash_hmac($hashtype, $payload, $key, true);\n+\n+        if (function_exists('hash_equals')) {\n+            return hash_equals($signature, $expected);\n+        }\n+\n+        return self::hashEquals($signature, $expected);\n+    }\n+\n+    /**\n+     * @param string $jwt encoded JWT\n+     * @throws OpenIDConnectClientException\n+     * @return bool\n+     */\n+    public function verifyJWTsignature($jwt) {\n+        if (!\\is_string($jwt)) {\n+            throw new OpenIDConnectClientException('Error token is not a string');\n+        }\n+        $parts = explode('.', $jwt);\n+        if (!isset($parts[0])) {\n+            throw new OpenIDConnectClientException('Error missing part 0 in token');\n+        }\n+        $signature = base64url_decode(array_pop($parts));\n+        if (false === $signature || '' === $signature) {\n+            throw new OpenIDConnectClientException('Error decoding signature from token');\n+        }\n+        $header = json_decode(base64url_decode($parts[0]));\n+        if (null === $header || !\\is_object($header)) {\n+            throw new OpenIDConnectClientException('Error decoding JSON from token header');\n+        }\n+        if (!isset($header->alg)) {\n+            throw new OpenIDConnectClientException('Error missing signature type in token header');\n+        }\n+\n+        $payload = implode('.', $parts);\n+        switch ($header->alg) {\n+            case 'RS256':\n+            case 'PS256':\n+            case 'PS512':\n+            case 'RS384':\n+            case 'RS512':\n+                $hashtype = 'sha' . substr($header->alg, 2);\n+                $signatureType = $header->alg === 'PS256' || $header->alg === 'PS512' ? 'PSS' : '';\n+                if (isset($header->jwk)) {\n+                    $jwk = $header->jwk;\n+                    $this->verifyJWKHeader($jwk);\n+                } else {\n+                    $jwks = json_decode($this->fetchURL($this->getProviderConfigValue('jwks_uri')));\n+                    if ($jwks === NULL) {\n+                        throw new OpenIDConnectClientException('Error decoding JSON from jwks_uri');\n+                    }\n+                    $jwk = $this->getKeyForHeader($jwks->keys, $header);\n+                }\n+\n+                $verified = $this->verifyRSAJWTsignature($hashtype,\n+                    $jwk,\n+                    $payload, $signature, $signatureType);\n+                break;\n+            case 'HS256':\n+            case 'HS512':\n+            case 'HS384':\n+                $hashtype = 'SHA' . substr($header->alg, 2);\n+                $verified = $this->verifyHMACJWTsignature($hashtype, $this->getClientSecret(), $payload, $signature);\n+                break;\n+            default:\n+                throw new OpenIDConnectClientException('No support for signature type: ' . $header->alg);\n+        }\n+        return $verified;\n+    }\n+\n+    /**\n+     * @param string $iss\n+     * @return bool\n+     * @throws OpenIDConnectClientException\n+     */\n+    protected function validateIssuer($iss) {\n+        if ($this->issuerValidator !== null) {\n+            return $this->issuerValidator->__invoke($iss);\n+        }\n+\n+        return ($iss === $this->getIssuer() || $iss === $this->getWellKnownIssuer() || $iss === $this->getWellKnownIssuer(true));\n+    }\n+\n+    /**\n+     * @param object $claims\n+     * @param string|null $accessToken\n+     * @return bool\n+     */\n+    protected function verifyJWTclaims($claims, $accessToken = null) {\n+        if(isset($claims->at_hash) && isset($accessToken)) {\n+            if(isset($this->getIdTokenHeader()->alg) && $this->getIdTokenHeader()->alg !== 'none') {\n+                $bit = substr($this->getIdTokenHeader()->alg, 2, 3);\n+            } else {\n+                // TODO: Error case. throw exception???\n+                $bit = '256';\n+            }\n+            $len = ((int)$bit)/16;\n+            $expected_at_hash = $this->urlEncode(substr(hash('sha'.$bit, $accessToken, true), 0, $len));\n+        }\n+        return (($this->validateIssuer($claims->iss))\n+            && (($claims->aud === $this->clientID) || in_array($this->clientID, $claims->aud, true))\n+            && (!isset($claims->nonce) || $claims->nonce === $this->getNonce())\n+            && ( !isset($claims->exp) || ((gettype($claims->exp) === 'integer') && ($claims->exp >= time() - $this->leeway)))\n+            && ( !isset($claims->nbf) || ((gettype($claims->nbf) === 'integer') && ($claims->nbf <= time() + $this->leeway)))\n+            && ( !isset($claims->at_hash) || !isset($accessToken) || $claims->at_hash === $expected_at_hash )\n+        );\n+    }\n+\n+    /**\n+     * @param string $str\n+     * @return string\n+     */\n+    protected function urlEncode($str) {\n+        $enc = base64_encode($str);\n+        $enc = rtrim($enc, '=');\n+        $enc = strtr($enc, '+/', '-_');\n+        return $enc;\n+    }\n+\n+    /**\n+     * @param string $jwt encoded JWT\n+     * @param int $section the section we would like to decode\n+     * @return object\n+     */\n+    protected function decodeJWT($jwt, $section = 0) {\n+\n+        $parts = explode('.', $jwt);\n+        return json_decode(base64url_decode($parts[$section]));\n+    }\n+\n+    /**\n+     *\n+     * @param string|null $attribute optional\n+     *\n+     * Attribute        Type        Description\n+     * user_id          string      REQUIRED Identifier for the End-User at the Issuer.\n+     * name             string      End-User's full name in displayable form including all name parts, ordered according to End-User's locale and preferences.\n+     * given_name       string      Given name or first name of the End-User.\n+     * family_name      string      Surname or last name of the End-User.\n+     * middle_name      string      Middle name of the End-User.\n+     * nickname         string      Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.\n+     * profile          string      URL of End-User's profile page.\n+     * picture          string      URL of the End-User's profile picture.\n+     * website          string      URL of End-User's web page or blog.\n+     * email            string      The End-User's preferred e-mail address.\n+     * verified         boolean     True if the End-User's e-mail address has been verified; otherwise false.\n+     * gender           string      The End-User's gender: Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.\n+     * birthday         string      The End-User's birthday, represented as a date string in MM/DD/YYYY format. The year MAY be 0000, indicating that it is omitted.\n+     * zoneinfo         string      String from zoneinfo [zoneinfo] time zone database. For example, Europe/Paris or America/Los_Angeles.\n+     * locale           string      The End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639\u20111] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166\u20111] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Implementations MAY choose to accept this locale syntax as well.\n+     * phone_number     string      The End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim. For example, +1 (425) 555-1212 or +56 (2) 687 2400.\n+     * address          JSON object The End-User's preferred address. The value of the address member is a JSON [RFC4627] structure containing some or all of the members defined in Section 2.4.2.1.\n+     * updated_time     string      Time the End-User's information was last updated, represented as a RFC 3339 [RFC3339] datetime. For example, 2011-01-03T23:58:42+0000.\n+     *\n+     * @return mixed\n+     *\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function requestUserInfo($attribute = null) {\n+\n+        $user_info_endpoint = $this->getProviderConfigValue('userinfo_endpoint');\n+        $schema = 'openid';\n+\n+        $user_info_endpoint .= '?schema=' . $schema;\n+\n+        //The accessToken has to be sent in the Authorization header.\n+        // Accept json to indicate response type\n+        $headers = [\"Authorization: Bearer {$this->accessToken}\",\n+            'Accept: application/json'];\n+\n+        $user_json = json_decode($this->fetchURL($user_info_endpoint,null,$headers));\n+        if ($this->getResponseCode() <> 200) {\n+            throw new OpenIDConnectClientException('The communication to retrieve user data has failed with status code '.$this->getResponseCode());\n+        }\n+        $this->userInfo = $user_json;\n+\n+        if($attribute === null) {\n+            return $this->userInfo;\n+        }\n+\n+        if (property_exists($this->userInfo, $attribute)) {\n+            return $this->userInfo->$attribute;\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     *\n+     * @param string|null $attribute optional\n+     *\n+     * Attribute        Type    Description\n+     * exp              int     Expires at\n+     * nbf              int     Not before\n+     * ver              string  Version\n+     * iss              string  Issuer\n+     * sub              string  Subject\n+     * aud              string  Audience\n+     * nonce            string  nonce\n+     * iat              int     Issued At\n+     * auth_time        int     Authenatication time\n+     * oid              string  Object id\n+     *\n+     * @return mixed\n+     *\n+     */\n+    public function getVerifiedClaims($attribute = null) {\n+\n+        if($attribute === null) {\n+            return $this->verifiedClaims;\n+        }\n+\n+        if (property_exists($this->verifiedClaims, $attribute)) {\n+            return $this->verifiedClaims->$attribute;\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     * @param string $url\n+     * @param string | null $post_body string If this is set the post type will be POST\n+     * @param array $headers Extra headers to be send with the request. Format as 'NameHeader: ValueHeader'\n+     * @throws OpenIDConnectClientException\n+     * @return mixed\n+     */\n+    protected function fetchURL($url, $post_body = null, $headers = []) {\n+\n+        // OK cool - then let's create a new cURL resource handle\n+        $ch = curl_init();\n+\n+        // Determine whether this is a GET or POST\n+        if ($post_body !== null) {\n+            // curl_setopt($ch, CURLOPT_POST, 1);\n+            // Alows to keep the POST method even after redirect\n+            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');\n+            curl_setopt($ch, CURLOPT_POSTFIELDS, $post_body);\n+\n+            // Default content type is form encoded\n+            $content_type = 'application/x-www-form-urlencoded';\n+\n+            // Determine if this is a JSON payload and add the appropriate content type\n+            if (is_object(json_decode($post_body))) {\n+                $content_type = 'application/json';\n+            }\n+\n+            // Add POST-specific headers\n+            $headers[] = \"Content-Type: {$content_type}\";\n+\n+        }\n+\n+        // If we set some headers include them\n+        if(count($headers) > 0) {\n+            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n+        }\n+\n+        // Set URL to download\n+        curl_setopt($ch, CURLOPT_URL, $url);\n+\n+        if (isset($this->httpProxy)) {\n+            curl_setopt($ch, CURLOPT_PROXY, $this->httpProxy);\n+        }\n+\n+        // Include header in result? (0 = yes, 1 = no)\n+        curl_setopt($ch, CURLOPT_HEADER, 0);\n+\n+        // Allows to follow redirect\n+        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n+\n+        /**\n+         * Set cert\n+         * Otherwise ignore SSL peer verification\n+         */\n+        if (isset($this->certPath)) {\n+            curl_setopt($ch, CURLOPT_CAINFO, $this->certPath);\n+        }\n+\n+        if($this->verifyHost) {\n+            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\n+        } else {\n+            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);\n+        }\n+\n+        if($this->verifyPeer) {\n+            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, true);\n+        } else {\n+            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n+        }\n+\n+        // Should cURL return or print out the data? (true = return, false = print)\n+        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n+\n+        // Timeout in seconds\n+        curl_setopt($ch, CURLOPT_TIMEOUT, $this->timeOut);\n+\n+        // Download the given URL, and return output\n+        $output = curl_exec($ch);\n+\n+        // HTTP Response code from server may be required from subclass\n+        $info = curl_getinfo($ch);\n+        $this->responseCode = $info['http_code'];\n+\n+        if ($output === false) {\n+            throw new OpenIDConnectClientException('Curl error: (' . curl_errno($ch) . ') ' . curl_error($ch));\n+        }\n+\n+        // Close the cURL resource, and free system resources\n+        curl_close($ch);\n+\n+        return $output;\n+    }\n+\n+    /**\n+     * @param bool $appendSlash\n+     * @return string\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function getWellKnownIssuer($appendSlash = false) {\n+\n+        return $this->getWellKnownConfigValue('issuer') . ($appendSlash ? '/' : '');\n+    }\n+\n+    /**\n+     * @return string\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function getIssuer() {\n+\n+        if (!isset($this->providerConfig['issuer'])) {\n+            throw new OpenIDConnectClientException('The issuer has not been set');\n+        }\n+\n+        return $this->providerConfig['issuer'];\n+    }\n+\n+    /**\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function getProviderURL() {\n+        if (!isset($this->providerConfig['providerUrl'])) {\n+            throw new OpenIDConnectClientException('The provider URL has not been set');\n+        }\n+\n+        return $this->providerConfig['providerUrl'];\n+    }\n+\n+    /**\n+     * @param string $url\n+     */\n+    public function redirect($url) {\n+        header('Location: ' . $url);\n+        exit;\n+    }\n+\n+    /**\n+     * @param string $httpProxy\n+     */\n+    public function setHttpProxy($httpProxy) {\n+        $this->httpProxy = $httpProxy;\n+    }\n+\n+    /**\n+     * @param string $certPath\n+     */\n+    public function setCertPath($certPath) {\n+        $this->certPath = $certPath;\n+    }\n+\n+    /**\n+     * @return string|null\n+     */\n+    public function getCertPath() {\n+        return $this->certPath;\n+    }\n+\n+    /**\n+     * @param bool $verifyPeer\n+     */\n+    public function setVerifyPeer($verifyPeer) {\n+        $this->verifyPeer = $verifyPeer;\n+    }\n+\n+    /**\n+     * @param bool $verifyHost\n+     */\n+    public function setVerifyHost($verifyHost) {\n+        $this->verifyHost = $verifyHost;\n+    }\n+\n+\n+    /**\n+     * Controls whether http header HTTP_UPGRADE_INSECURE_REQUESTS should be considered\n+     * defaults to true\n+     * @param bool $httpUpgradeInsecureRequests\n+     */\n+    public function setHttpUpgradeInsecureRequests($httpUpgradeInsecureRequests) {\n+        $this->httpUpgradeInsecureRequests = $httpUpgradeInsecureRequests;\n+    }\n+\n+    /**\n+     * @return bool\n+     */\n+    public function getVerifyHost() {\n+        return $this->verifyHost;\n+    }\n+\n+    /**\n+     * @return bool\n+     */\n+    public function getVerifyPeer() {\n+        return $this->verifyPeer;\n+    }\n+\n+    /**\n+     * @return bool \n+     */\n+    public function getHttpUpgradeInsecureRequests()\n+    {\n+        return $this->httpUpgradeInsecureRequests;\n+    }\n+\n+    /**\n+     * Use this for custom issuer validation\n+     * The given function should accept the issuer string from the JWT claim as the only argument\n+     * and return true if the issuer is valid, otherwise return false\n+     *\n+     * @param callable $issuerValidator\n+     */\n+    public function setIssuerValidator($issuerValidator) {\n+        $this->issuerValidator = $issuerValidator;\n+    }\n+\n+    /**\n+     * Use this for private_key_jwt client authentication\n+     * The given function should accept the token_endpoint string as the only argument\n+     * and return a jwt signed with your private key according to:\n+     * https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\n+     *\n+     * @param callable $privateKeyJwtGenerator\n+     */\n+    public function setPrivateKeyJwtGenerator($privateKeyJwtGenerator) {\n+        $this->privateKeyJwtGenerator = $privateKeyJwtGenerator;\n+    }\n+\n+    /**\n+     * @param bool $allowImplicitFlow\n+     */\n+    public function setAllowImplicitFlow($allowImplicitFlow) {\n+        $this->allowImplicitFlow = $allowImplicitFlow;\n+    }\n+\n+    /**\n+     * @return bool\n+     */\n+    public function getAllowImplicitFlow() {\n+        return $this->allowImplicitFlow;\n+    }\n+\n+    /**\n+     *\n+     * Use this to alter a provider's endpoints and other attributes\n+     *\n+     * @param array $array\n+     *        simple key => value\n+     */\n+    public function providerConfigParam($array) {\n+        $this->providerConfig = array_merge($this->providerConfig, $array);\n+    }\n+\n+    /**\n+     * @param string $clientSecret\n+     */\n+    public function setClientSecret($clientSecret) {\n+        $this->clientSecret = $clientSecret;\n+    }\n+\n+    /**\n+     * @param string $clientID\n+     */\n+    public function setClientID($clientID) {\n+        $this->clientID = $clientID;\n+    }\n+\n+\n+    /**\n+     * Dynamic registration\n+     *\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function register() {\n+\n+        $registration_endpoint = $this->getProviderConfigValue('registration_endpoint');\n+\n+        $send_object = (object ) array_merge($this->registrationParams, [\n+            'redirect_uris' => [$this->getRedirectURL()],\n+            'client_name' => $this->getClientName()\n+        ]);\n+\n+        $response = $this->fetchURL($registration_endpoint, json_encode($send_object));\n+\n+        $json_response = json_decode($response);\n+\n+        // Throw some errors if we encounter them\n+        if ($json_response === false) {\n+            throw new OpenIDConnectClientException('Error registering: JSON response received from the server was invalid.');\n+        }\n+\n+        if (isset($json_response->{'error_description'})) {\n+            throw new OpenIDConnectClientException($json_response->{'error_description'});\n+        }\n+\n+        $this->setClientID($json_response->{'client_id'});\n+\n+        // The OpenID Connect Dynamic registration protocol makes the client secret optional\n+        // and provides a registration access token and URI endpoint if it is not present\n+        if (isset($json_response->{'client_secret'})) {\n+            $this->setClientSecret($json_response->{'client_secret'});\n+        } else {\n+            throw new OpenIDConnectClientException('Error registering:\n+                                                    Please contact the OpenID Connect provider and obtain a Client ID and Secret directly from them');\n+        }\n+\n+    }\n+\n+    /**\n+     * Introspect a given token - either access token or refresh token.\n+     * @see https://tools.ietf.org/html/rfc7662\n+     *\n+     * @param string $token\n+     * @param string $token_type_hint\n+     * @param string|null $clientId\n+     * @param string|null $clientSecret\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function introspectToken($token, $token_type_hint = '', $clientId = null, $clientSecret = null) {\n+        $introspection_endpoint = $this->getProviderConfigValue('introspection_endpoint');\n+        $token_endpoint_auth_methods_supported = $this->getProviderConfigValue('token_endpoint_auth_methods_supported', ['client_secret_basic']);\n+\n+        $post_data = ['token' => $token];\n+\n+        if ($token_type_hint) {\n+            $post_data['token_type_hint'] = $token_type_hint;\n+        }\n+        $clientId = $clientId !== null ? $clientId : $this->clientID;\n+        $clientSecret = $clientSecret !== null ? $clientSecret : $this->clientSecret;\n+\n+        // Convert token params to string format\n+        $headers = ['Authorization: Basic ' . base64_encode(urlencode($clientId) . ':' . urlencode($clientSecret)),\n+            'Accept: application/json'];\n+\n+        if ($this->supportsAuthMethod('client_secret_jwt', $token_endpoint_auth_methods_supported)) {\n+            $client_assertion_type = $this->getProviderConfigValue('client_assertion_type');\n+            $client_assertion = $this->getJWTClientAssertion($this->getProviderConfigValue('introspection_endpoint'));\n+            \n+            $post_data['client_assertion_type']=$client_assertion_type;\n+            $post_data['client_assertion'] = $client_assertion;\n+            $headers = ['Accept: application/json'];\n+        }\n+\n+        $post_params = http_build_query($post_data, '', '&');\n+\n+        return json_decode($this->fetchURL($introspection_endpoint, $post_params, $headers));\n+    }\n+\n+    /**\n+     * Revoke a given token - either access token or refresh token.\n+     * @see https://tools.ietf.org/html/rfc7009\n+     *\n+     * @param string $token\n+     * @param string $token_type_hint\n+     * @param string|null $clientId\n+     * @param string|null $clientSecret\n+     * @return mixed\n+     * @throws OpenIDConnectClientException\n+     */\n+    public function revokeToken($token, $token_type_hint = '', $clientId = null, $clientSecret = null) {\n+        $revocation_endpoint = $this->getProviderConfigValue('revocation_endpoint');\n+\n+        $post_data = ['token' => $token];\n+\n+        if ($token_type_hint) {\n+            $post_data['token_type_hint'] = $token_type_hint;\n+        }\n+        $clientId = $clientId !== null ? $clientId : $this->clientID;\n+        $clientSecret = $clientSecret !== null ? $clientSecret : $this->clientSecret;\n+\n+        // Convert token params to string format\n+        $post_params = http_build_query($post_data, '', '&');\n+        $headers = ['Authorization: Basic ' . base64_encode(urlencode($clientId) . ':' . urlencode($clientSecret)),\n+            'Accept: application/json'];\n+\n+        return json_decode($this->fetchURL($revocation_endpoint, $post_params, $headers));\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getClientName() {\n+        return $this->clientName;\n+    }\n+\n+    /**\n+     * @param string $clientName\n+     */\n+    public function setClientName($clientName) {\n+        $this->clientName = $clientName;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getClientID() {\n+        return $this->clientID;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getClientSecret() {\n+        return $this->clientSecret;\n+    }\n+\n+    /**\n+     * @return bool\n+     */\n+    public function canVerifySignatures() {\n+        return class_exists('\\phpseclib3\\Crypt\\RSA') || class_exists('\\phpseclib\\Crypt\\RSA') || class_exists('Crypt_RSA');\n+    }\n+\n+    /**\n+     * Set the access token.\n+     *\n+     * May be required for subclasses of this Client.\n+     *\n+     * @param string $accessToken\n+     * @return void\n+     */\n+    public function setAccessToken($accessToken) {\n+        $this->accessToken = $accessToken;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getAccessToken() {\n+        return $this->accessToken;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getRefreshToken() {\n+        return $this->refreshToken;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getIdToken() {\n+        return $this->idToken;\n+    }\n+\n+    /**\n+     * @return object\n+     */\n+    public function getAccessTokenHeader() {\n+        return $this->decodeJWT($this->accessToken);\n+    }\n+\n+    /**\n+     * @return object\n+     */\n+    public function getAccessTokenPayload() {\n+        return $this->decodeJWT($this->accessToken, 1);\n+    }\n+\n+    /**\n+     * @return object\n+     */\n+    public function getIdTokenHeader() {\n+        return $this->decodeJWT($this->idToken);\n+    }\n+\n+    /**\n+     * @return object\n+     */\n+    public function getIdTokenPayload() {\n+        return $this->decodeJWT($this->idToken, 1);\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getTokenResponse() {\n+        return $this->tokenResponse;\n+    }\n+\n+    /**\n+     * Stores nonce\n+     *\n+     * @param string $nonce\n+     * @return string\n+     */\n+    protected function setNonce($nonce) {\n+        $this->setSessionKey('openid_connect_nonce', $nonce);\n+        return $nonce;\n+    }\n+\n+    /**\n+     * Get stored nonce\n+     *\n+     * @return string\n+     */\n+    protected function getNonce() {\n+        return $this->getSessionKey('openid_connect_nonce');\n+    }\n+\n+    /**\n+     * Cleanup nonce\n+     *\n+     * @return void\n+     */\n+    protected function unsetNonce() {\n+        $this->unsetSessionKey('openid_connect_nonce');\n+    }\n+\n+    /**\n+     * Stores $state\n+     *\n+     * @param string $state\n+     * @return string\n+     */\n+    protected function setState($state) {\n+        $this->setSessionKey('openid_connect_state', $state);\n+        return $state;\n+    }\n+\n+    /**\n+     * Get stored state\n+     *\n+     * @return string\n+     */\n+    protected function getState() {\n+        return $this->getSessionKey('openid_connect_state');\n+    }\n+\n+    /**\n+     * Cleanup state\n+     *\n+     * @return void\n+     */\n+    protected function unsetState() {\n+        $this->unsetSessionKey('openid_connect_state');\n+    }\n+\n+    /**\n+     * Stores $codeVerifier\n+     *\n+     * @param string $codeVerifier\n+     * @return string\n+     */\n+    protected function setCodeVerifier($codeVerifier) {\n+        $this->setSessionKey('openid_connect_code_verifier', $codeVerifier);\n+        return $codeVerifier;\n+    }\n+\n+    /**\n+     * Get stored codeVerifier\n+     *\n+     * @return string\n+     */\n+    protected function getCodeVerifier() {\n+        return $this->getSessionKey('openid_connect_code_verifier');\n+    }\n+\n+    /**\n+     * Cleanup state\n+     *\n+     * @return void\n+     */\n+    protected function unsetCodeVerifier() {\n+        $this->unsetSessionKey('openid_connect_code_verifier');\n+    }\n+\n+    /**\n+     * Get the response code from last action/curl request.\n+     *\n+     * @return int\n+     */\n+    public function getResponseCode() {\n+        return $this->responseCode;\n+    }\n+\n+    /**\n+     * Set timeout (seconds)\n+     *\n+     * @param int $timeout\n+     */\n+    public function setTimeout($timeout) {\n+        $this->timeOut = $timeout;\n+    }\n+\n+    /**\n+     * @return int\n+     */\n+    public function getTimeout() {\n+        return $this->timeOut;\n+    }\n+\n+    /**\n+     * Safely calculate length of binary string\n+     * @param string $str\n+     * @return int\n+     */\n+    private static function safeLength($str) {\n+        if (function_exists('mb_strlen')) {\n+            return mb_strlen($str, '8bit');\n+        }\n+        return strlen($str);\n+    }\n+\n+    /**\n+     * Where hash_equals is not available, this provides a timing-attack safe string comparison\n+     * @param string $str1\n+     * @param string $str2\n+     * @return bool\n+     */\n+    private static function hashEquals($str1, $str2) {\n+        $len1=static::safeLength($str1);\n+        $len2=static::safeLength($str2);\n+\n+        //compare strings without any early abort...\n+        $len = min($len1, $len2);\n+        $status = 0;\n+        for ($i = 0; $i < $len; $i++) {\n+            $status |= (ord($str1[$i]) ^ ord($str2[$i]));\n+        }\n+        //if strings were different lengths, we fail\n+        $status |= ($len1 ^ $len2);\n+        return ($status === 0);\n+    }\n+\n+    /**\n+     * Use session to manage a nonce\n+     */\n+    protected function startSession() {\n+        if (session_status() === PHP_SESSION_NONE) {\n+            @session_start();\n+        }\n+    }\n+\n+    protected function commitSession() {\n+        $this->startSession();\n+\n+        session_write_close();\n+    }\n+\n+    protected function getSessionKey($key) {\n+        $this->startSession();\n+\n+        if (array_key_exists($key, $_SESSION)) {\n+            return $_SESSION[$key];\n+        }\n+        return false;\n+    }\n+\n+    protected function setSessionKey($key, $value) {\n+        $this->startSession();\n+\n+        $_SESSION[$key] = $value;\n+    }\n+\n+    protected function unsetSessionKey($key) {\n+        $this->startSession();\n+\n+        unset($_SESSION[$key]);\n+    }\n+\n+    protected function getJWTClientAssertion($aud) {\n+        $jti = hash('sha256',bin2hex(random_bytes(64)));\n+\n+        $now = time();\n+\n+\t\t$header = json_encode(['typ' => 'JWT', 'alg' => 'HS256']);\n+\t\t$payload = json_encode([\n+\t\t\t'sub' => $this->getClientID(),\n+\t\t\t'iss' => $this->getClientID(),\n+\t\t\t'aud' => $aud,\n+\t\t\t'jti' => $jti,\n+\t\t\t'exp' => $now + 3600,\n+\t\t\t'iat' => $now,\n+\t\t]);\n+\t\t// Encode Header to Base64Url String\n+\t\t$base64UrlHeader = $this->urlEncode($header);\n+\t\t\n+\n+\t\t// Encode Payload to Base64Url String\n+\t\t$base64UrlPayload = $this->urlEncode($payload);\n+\n+\t\t// Create Signature Hash\n+\t\t$signature = hash_hmac(\n+\t\t\t'sha256',\n+\t\t\t$base64UrlHeader . \".\" . $base64UrlPayload,\n+\t\t\t$this->getClientSecret(),\n+\t\t\ttrue\n+\t\t);\n+\n+\t\t// Encode Signature to Base64Url String\n+\t\t$base64UrlSignature = $this->urlEncode($signature);\n+\t\t\n+\t\t$jwt = $base64UrlHeader . \".\" . $base64UrlPayload . \".\" . $base64UrlSignature;\n+\n+\t\treturn $jwt;\n+    }\n+    \n+    public function setUrlEncoding($curEncoding) {\n+        switch ($curEncoding)\n+        {\n+            case PHP_QUERY_RFC1738:\n+                $this->encType = PHP_QUERY_RFC1738;\n+                break;\n+\n+            case PHP_QUERY_RFC3986:\n+                $this->encType = PHP_QUERY_RFC3986;\n+                break;\n+\n+        \tdefault:\n+                break;\n+        }\n+\n+    }\n+\n+    /**\n+     * @return array\n+     */\n+    public function getScopes() {\n+        return $this->scopes;\n+    }\n+\n+    /**\n+     * @return array\n+     */\n+    public function getResponseTypes() {\n+        return $this->responseTypes;\n+    }\n+\n+    /**\n+     * @return array\n+     */\n+    public function getAuthParams() {\n+        return $this->authParams;\n+    }\n+\n+    /**\n+     * @return callable\n+     */\n+    public function getIssuerValidator() {\n+        return $this->issuerValidator;\n+    }\n+\n+\n+    /**\n+     * @return callable\n+     */\n+    public function getPrivateKeyJwtGenerator() {\n+        return $this->privateKeyJwtGenerator;\n+    }\n+\n+    /**\n+     * @return int\n+     */\n+    public function getLeeway() {\n+        return $this->leeway;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getCodeChallengeMethod() {\n+        return $this->codeChallengeMethod;\n+    }\n+\n+    /**\n+     * @param string $codeChallengeMethod\n+     */\n+    public function setCodeChallengeMethod($codeChallengeMethod) {\n+        $this->codeChallengeMethod = $codeChallengeMethod;\n+    }\n+\n+    /**\n+     * @throws OpenIDConnectClientException\n+     */\n+    protected function verifyJWKHeader($jwk)\n+    {\n+        throw new OpenIDConnectClientException('Self signed JWK header is not valid');\n+    }\n+\n+    /*\n+     * @return string\n+     */\n+    public function getSidFromBackChannel() {\n+        return $this->backChannelSid;\n+    }\n+\n+    /**\n+     * @return string\n+     */\n+    public function getSubjectFromBackChannel() {\n+        return $this->backChannelSubject;\n+    }\n+\n+    /**\n+     * @param string $auth_method\n+     * @param array $token_endpoint_auth_methods_supported\n+     * @return bool\n+     */\n+    public function supportsAuthMethod($auth_method, $token_endpoint_auth_methods_supported)\n+    {\n+        # client_secret_jwt has to explicitly be enabled\n+        if (!in_array($auth_method, $this->token_endpoint_auth_methods_supported, true)) {\n+            return false;\n+        }\n+\n+        return in_array($auth_method, $token_endpoint_auth_methods_supported, true);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/tests/OpenIDConnectClientTest.php",
          "status": "added",
          "additions": 91,
          "deletions": 0,
          "patch": "@@ -0,0 +1,91 @@\n+<?php\n+\n+use Jumbojett\\OpenIDConnectClient;\n+use Jumbojett\\OpenIDConnectClientException;\n+use PHPUnit\\Framework\\MockObject\\MockObject;\n+use Yoast\\PHPUnitPolyfills\\TestCases\\TestCase;\n+\n+class OpenIDConnectClientTest extends TestCase\n+{\n+    /**\n+     * @return void\n+     */\n+    public function testGetRedirectURL()\n+    {\n+        $client = new OpenIDConnectClient();\n+\n+        self::assertSame('http:///', $client->getRedirectURL());\n+\n+        $_SERVER['SERVER_NAME'] = 'domain.test';\n+        $_SERVER['REQUEST_URI'] = '/path/index.php?foo=bar&baz#fragment';\n+        self::assertSame('http://domain.test/path/index.php', $client->getRedirectURL());\n+    }\n+\n+    public function testAuthenticateDoesNotThrowExceptionIfClaimsIsMissingNonce()\n+    {\n+        $fakeClaims = new \\StdClass();\n+        $fakeClaims->iss = 'fake-issuer';\n+        $fakeClaims->aud = 'fake-client-id';\n+        $fakeClaims->nonce = null;\n+\n+        $_REQUEST['id_token'] = 'abc.123.xyz';\n+        $_REQUEST['state'] = false;\n+        $_SESSION['openid_connect_state'] = false;\n+\n+        /** @var OpenIDConnectClient | MockObject $client */\n+        $client = $this->getMockBuilder(OpenIDConnectClient::class)->setMethods(['decodeJWT', 'getProviderConfigValue', 'verifyJWTsignature'])->getMock();\n+        $client->method('decodeJWT')->willReturn($fakeClaims);\n+        $client->method('getProviderConfigValue')->with('jwks_uri')->willReturn(true);\n+        $client->method('verifyJWTsignature')->willReturn(true);\n+\n+        $client->setClientID('fake-client-id');\n+        $client->setIssuer('fake-issuer');\n+        $client->setIssuerValidator(function() {\n+            return true;\n+        });\n+        $client->setAllowImplicitFlow(true);\n+        $client->setProviderURL('https://jwt.io/');\n+\n+        try {\n+            $authenticated = $client->authenticate();\n+            $this->assertTrue($authenticated);\n+        } catch ( OpenIDConnectClientException $e ) {\n+            if ( $e->getMessage() === 'Unable to verify JWT claims' ) {\n+                self::fail( 'OpenIDConnectClientException was thrown when it should not have been.' );\n+            }\n+        }\n+    }\n+\n+    public function testSerialize()\n+    {\n+        $client = new OpenIDConnectClient('https://example.com', 'foo', 'bar', 'baz');\n+        $serialized = serialize($client);\n+        $this->assertInstanceOf('Jumbojett\\OpenIDConnectClient', unserialize($serialized));\n+    }\n+\n+    /**\n+     * @dataProvider provider\n+     */\n+    public function testAuthMethodSupport($expected, $authMethod, $clientAuthMethods, $idpAuthMethods)\n+    {\n+        $client = new OpenIDConnectClient();\n+        if ($clientAuthMethods !== null) {\n+            $client->setTokenEndpointAuthMethodsSupported($clientAuthMethods);\n+        }\n+        $this->assertEquals($expected, $client->supportsAuthMethod($authMethod, $idpAuthMethods));\n+    }\n+\n+    public function provider()\n+    {\n+        return [\n+            'client_secret_basic - default config' => [true, 'client_secret_basic', null, ['client_secret_basic']],\n+\n+            'client_secret_jwt - default config' => [false, 'client_secret_jwt', null, ['client_secret_basic', 'client_secret_jwt']],\n+            'client_secret_jwt - explicitly enabled' => [true, 'client_secret_jwt', ['client_secret_jwt'], ['client_secret_basic', 'client_secret_jwt']],\n+\n+            'private_key_jwt - default config' => [false, 'private_key_jwt', null, ['client_secret_basic', 'client_secret_jwt', 'private_key_jwt']],\n+            'private_key_jwt - explicitly enabled' => [true, 'private_key_jwt', ['private_key_jwt'], ['client_secret_basic', 'client_secret_jwt', 'private_key_jwt']],\n+\n+        ];\n+    }\n+}"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/tests/TokenVerificationTest.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": "@@ -0,0 +1,34 @@\n+<?php\n+\n+\n+use Jumbojett\\OpenIDConnectClient;\n+use PHPUnit\\Framework\\MockObject\\MockObject;\n+use Yoast\\PHPUnitPolyfills\\TestCases\\TestCase;\n+\n+class TokenVerificationTest extends TestCase\n+{\n+    /**\n+     * @param $alg\n+     * @param $jwt\n+     * @throws \\Jumbojett\\OpenIDConnectClientException\n+     * @dataProvider providesTokens\n+     */\n+    public function testTokenVerification($alg, $jwt)\n+    {\n+        /** @var OpenIDConnectClient | MockObject $client */\n+        $client = $this->getMockBuilder(OpenIDConnectClient::class)->setMethods(['fetchUrl'])->getMock();\n+        $client->method('fetchUrl')->willReturn(file_get_contents(__DIR__ . \"/data/jwks-$alg.json\"));\n+        $client->setProviderURL('https://jwt.io/');\n+        $client->providerConfigParam(['jwks_uri' => 'https://jwt.io/.well-known/jwks.json']);\n+        $verified = $client->verifyJWTsignature($jwt);\n+        self::assertTrue($verified);\n+        $client->setAccessToken($jwt);\n+    }\n+\n+    public function providesTokens()\n+    {\n+        return [\n+            'PS256' => ['ps256', 'eyJhbGciOiJQUzI1NiIsImtpZCI6Imtvbm5lY3RkLXRva2Vucy1zaWduaW5nLWtleSIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJrcG9wLWh0dHBzOi8va29wYW5vLmRlbW8vbWVldC8iLCJleHAiOjE1NjgzNzE0NjEsImp0aSI6IkpkR0tDbEdOTXl2VXJpcmlRRUlWUXZCVmttT2FfQkRjIiwiaWF0IjoxNTY4MzcxMjIxLCJpc3MiOiJodHRwczovL2tvcGFuby5kZW1vIiwic3ViIjoiUHpUVWp3NHBlXzctWE5rWlBILXJxVHE0MTQ1Z3lDdlRvQmk4V1E5bFBrcW5rbEc1aktvRU5LM21Qb0I1WGY1ZTM5dFRMR2RKWXBMNEJubXFnelpaX0FAa29ubmVjdCIsImtjLmlzQWNjZXNzVG9rZW4iOnRydWUsImtjLmF1dGhvcml6ZWRTY29wZXMiOlsicHJvZmlsZSIsImVtYWlsIiwia29wYW5vL2t3bSIsImtvcGFuby9nYyIsImtvcGFuby9rdnMiLCJvcGVuaWQiXSwia2MuYXV0aG9yaXplZENsYWltcyI6eyJpZF90b2tlbiI6eyJuYW1lIjpudWxsfX0sImtjLmlkZW50aXR5Ijp7ImtjLmkuZG4iOiJKb25hcyBCcmVra2UiLCJrYy5pLmlkIjoiQUFBQUFLd2hxVkJBMCs1SXN4bjdwMU13UkNVQkFBQUFCZ0FBQUJzQUFBQk5VVDA5QUFBQUFBPT0iLCJrYy5pLnVuIjoidXNlcjEiLCJrYy5pLnVzIjoiTVEifSwia2MucHJvdmlkZXIiOiJpZGVudGlmaWVyLWtjIn0.hGRuXvul2kOiALHexwYp5MBEJVwz1YV3ehyM3AOuwCoK2w5sJxdciqqY_TfXCKyO6nAEbYLK3J0CBOjfup_IG0aCZcwzjto8khYlc4ezXkGnFsbJBNQdDGkpHtWnioWx-OJ3cXvY9F8aOvjaq0gw11ZDAcqQl0g7LTbJ9-J_yx0pmy3NGai2JB30Fh1OgSDzYfxWnE0RRgZG-x68e65RXfSBaEGW85OUh4wihxO2zdTGAHJ3Iq_-QAG4yRbXZtLx3ZspG7LNmqG-YE3huy3Rd8u3xrJNhmUOfEnz3x07q7VW0cj9NedX98BAbj3iNvksQsE0oG0J_f_Tu8Ai8VbWB72sJuXZWxANDKdz0BBYLzXhsjXkNByRq9x3zqDVsX-cVHei_XudxEOVRBjhkvW2MmIjcAHNKCKsdar865-gFG9McP4PCcBlY28tC0Cvnzyi83LBfpGRXdl6MJunnUsKQ1C79iCoVI1doK1erFN959Q-TGJfJA3Tr5LNpuGawB5rpe1nDGWvmYhg3uYfNl8uTTyvNgvvejcflEb2DURuXdqABuSiP7RkDWYtzx6mq49G0tRxelBbvyjQ2id2QjmRRdQ6dHEZ2NCJ51b8OFoDJBtxN1CD62TTxa3FUqCdZAPAUR3hHn_69vYq82MR514s-Gb67A6j2PbMPFATQP2UdK8']\n+        ];\n+    }\n+}"
        },
        {
          "filename": "private/vendor/jumbojett/openid-connect-php/tests/data/jwks-ps256.json",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+{\n+  \"keys\": [\n+    {\n+      \"kty\": \"RSA\",\n+      \"use\": \"sig\",\n+      \"kid\": \"konnectd-tokens-signing-key\",\n+      \"n\": \"10hb3pFUVcqJcS-d1pLCkFTyTqVD1GavlAai582CoRwFcyIQxCPJz0LJVgkUNwxSRkY0g0PcgFN_MmuuzpFXMkkiMIC9O_KwnuL34FrbijZvcGpnDn7kb9KAM883OVTr_w3wFeQIyh0ksSwVQ9CxVQ-ZeCXP73CCGk99uDb8SeF8_vncXJmaak99pK6HKJteSLkA-Ywxo9HOINZK2vW06UYcSkeoQnSI27Cd5-T6GVgqKH0Su4c5Ydou_w0tL_UkbZA4fIbMZC6dtWmBQf6tyYsCM9fbWNIVOj_7WlWcAOSTFNF2We2dxJrOzt6vDND3k1nCgg_EEM6cgBO3swUCktTFuQxo1sryYX5WXz9wnJb38b9mTXhOeF0bd9y_VQq8erSlcyRu8UGzX65tIf534hLL16KQaHbjROGSQvzqFrISmSBjBTjkPedTZSYOhiVJ95-em_Y6uLi-T7V4bs4dcg3oa0H_glXltoC9JxzS6gfMGGLgh-NpGEOdC_QosyzVVfzT70TurOGnsB1_VcAm_fK-T1Zv_ztpr5OZNfXWXC3Pfq_3sxP5HDKMk8luZ7LOWk7HVSYBdCFmOM1A3KmHNS2fEs-QHIr-XjYQ7QrXsRFP3dmoEPfiYlu03m8Xs3UMB70eGeGQx7OhZSuogxV_oCfApV5EJfuz97tVmOg8iMs\",\n+      \"e\": \"AQAB\"\n+    }\n+  ],\n+  \"kty\": \"\"\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/LICENSE.txt",
          "status": "added",
          "additions": 48,
          "deletions": 0,
          "patch": "@@ -0,0 +1,48 @@\n+The MIT License (MIT)\n+\n+Copyright (c) 2016 - 2022 Paragon Initiative Enterprises\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n+\n+------------------------------------------------------------------------------\n+This library was based on the work of Steve \"Sc00bz\" Thomas.\n+------------------------------------------------------------------------------\n+\n+The MIT License (MIT)\n+\n+Copyright (c) 2014 Steve Thomas\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n+"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/README.md",
          "status": "added",
          "additions": 84,
          "deletions": 0,
          "patch": "@@ -0,0 +1,84 @@\n+# Constant-Time Encoding\n+\n+[![Build Status](https://github.com/paragonie/constant_time_encoding/actions/workflows/ci.yml/badge.svg)](https://github.com/paragonie/constant_time_encoding/actions)\n+[![Latest Stable Version](https://poser.pugx.org/paragonie/constant_time_encoding/v/stable)](https://packagist.org/packages/paragonie/constant_time_encoding)\n+[![Latest Unstable Version](https://poser.pugx.org/paragonie/constant_time_encoding/v/unstable)](https://packagist.org/packages/paragonie/constant_time_encoding)\n+[![License](https://poser.pugx.org/paragonie/constant_time_encoding/license)](https://packagist.org/packages/paragonie/constant_time_encoding)\n+[![Downloads](https://img.shields.io/packagist/dt/paragonie/constant_time_encoding.svg)](https://packagist.org/packages/paragonie/constant_time_encoding)\n+\n+Based on the [constant-time base64 implementation made by Steve \"Sc00bz\" Thomas](https://github.com/Sc00bz/ConstTimeEncoding),\n+this library aims to offer character encoding functions that do not leak\n+information about what you are encoding/decoding via processor cache \n+misses. Further reading on [cache-timing attacks](http://blog.ircmaxell.com/2014/11/its-all-about-time.html).\n+\n+Our fork offers the following enchancements:\n+\n+* `mbstring.func_overload` resistance\n+* Unit tests\n+* Composer- and Packagist-ready\n+* Base16 encoding\n+* Base32 encoding\n+* Uses `pack()` and `unpack()` instead of `chr()` and `ord()`\n+\n+## PHP Version Requirements\n+\n+Version 2 of this library should work on **PHP 7** or newer. For PHP 5\n+support, see [the v1.x branch](https://github.com/paragonie/constant_time_encoding/tree/v1.x).\n+\n+If you are adding this as a dependency to a project intended to work on both PHP 5 and PHP 7, please set the required version to `^1|^2` instead of just `^1` or `^2`.\n+\n+## How to Install\n+\n+```sh\n+composer require paragonie/constant_time_encoding\n+```\n+\n+## How to Use\n+\n+```php\n+use ParagonIE\\ConstantTime\\Encoding;\n+\n+// possibly (if applicable): \n+// require 'vendor/autoload.php';\n+\n+$data = random_bytes(32);\n+echo Encoding::base64Encode($data), \"\\n\";\n+echo Encoding::base32EncodeUpper($data), \"\\n\";\n+echo Encoding::base32Encode($data), \"\\n\";\n+echo Encoding::hexEncode($data), \"\\n\";\n+echo Encoding::hexEncodeUpper($data), \"\\n\";\n+```\n+\n+Example output:\n+ \n+```\n+1VilPkeVqirlPifk5scbzcTTbMT2clp+Zkyv9VFFasE=\n+2VMKKPSHSWVCVZJ6E7SONRY3ZXCNG3GE6ZZFU7TGJSX7KUKFNLAQ====\n+2vmkkpshswvcvzj6e7sonry3zxcng3ge6zzfu7tgjsx7kukfnlaq====\n+d558a53e4795aa2ae53e27e4e6c71bcdc4d36cc4f6725a7e664caff551456ac1\n+D558A53E4795AA2AE53E27E4E6C71BDCC4D36CC4F6725A7E664CAFF551456AC1\n+```\n+\n+If you only need a particular variant, you can just reference the \n+required class like so:\n+\n+```php\n+use ParagonIE\\ConstantTime\\Base64;\n+use ParagonIE\\ConstantTime\\Base32;\n+\n+$data = random_bytes(32);\n+echo Base64::encode($data), \"\\n\";\n+echo Base32::encode($data), \"\\n\";\n+```\n+\n+Example output:\n+\n+```\n+1VilPkeVqirlPifk5scbzcTTbMT2clp+Zkyv9VFFasE=\n+2vmkkpshswvcvzj6e7sonry3zxcng3ge6zzfu7tgjsx7kukfnlaq====\n+```\n+\n+## Support Contracts\n+\n+If your company uses this library in their products or services, you may be\n+interested in [purchasing a support contract from Paragon Initiative Enterprises](https://paragonie.com/enterprise)."
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/composer.json",
          "status": "added",
          "additions": 56,
          "deletions": 0,
          "patch": "@@ -0,0 +1,56 @@\n+{\n+  \"name\": \"paragonie/constant_time_encoding\",\n+  \"description\": \"Constant-time Implementations of RFC 4648 Encoding (Base-64, Base-32, Base-16)\",\n+  \"keywords\": [\n+    \"base64\",\n+    \"encoding\",\n+    \"rfc4648\",\n+    \"base32\",\n+    \"base16\",\n+    \"hex\",\n+    \"bin2hex\",\n+    \"hex2bin\",\n+    \"base64_encode\",\n+    \"base64_decode\",\n+    \"base32_encode\",\n+    \"base32_decode\"\n+  ],\n+  \"license\": \"MIT\",\n+  \"type\": \"library\",\n+  \"authors\": [\n+      {\n+        \"name\":     \"Paragon Initiative Enterprises\",\n+        \"email\":    \"security@paragonie.com\",\n+        \"homepage\": \"https://paragonie.com\",\n+        \"role\":     \"Maintainer\"\n+      },\n+      {\n+        \"name\":     \"Steve 'Sc00bz' Thomas\",\n+        \"email\":    \"steve@tobtu.com\",\n+        \"homepage\": \"https://www.tobtu.com\",\n+        \"role\":     \"Original Developer\"\n+      }\n+  ],\n+  \"support\": {\n+    \"issues\":   \"https://github.com/paragonie/constant_time_encoding/issues\",\n+    \"email\":    \"info@paragonie.com\",\n+    \"source\":   \"https://github.com/paragonie/constant_time_encoding\"\n+  },\n+  \"require\": {\n+    \"php\": \"^7|^8\"\n+  },\n+  \"require-dev\": {\n+    \"phpunit/phpunit\": \"^6|^7|^8|^9\",\n+    \"vimeo/psalm\": \"^1|^2|^3|^4\"\n+  },\n+  \"autoload\": {\n+    \"psr-4\": {\n+      \"ParagonIE\\\\ConstantTime\\\\\": \"src/\"\n+    }\n+  },\n+  \"autoload-dev\": {\n+    \"psr-4\": {\n+      \"ParagonIE\\\\ConstantTime\\\\Tests\\\\\": \"tests/\"\n+    }\n+  }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base32.php",
          "status": "added",
          "additions": 519,
          "deletions": 0,
          "patch": "@@ -0,0 +1,519 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use InvalidArgumentException;\n+use RangeException;\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base32\n+ * [A-Z][2-7]\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base32 implements EncoderInterface\n+{\n+    /**\n+     * Decode a Base32-encoded string into raw binary\n+     *\n+     * @param string $encodedString\n+     * @param bool $strictPadding\n+     * @return string\n+     */\n+    public static function decode(string $encodedString, bool $strictPadding = false): string\n+    {\n+        return static::doDecode($encodedString, false, $strictPadding);\n+    }\n+\n+    /**\n+     * Decode an uppercase Base32-encoded string into raw binary\n+     *\n+     * @param string $src\n+     * @param bool $strictPadding\n+     * @return string\n+     */\n+    public static function decodeUpper(string $src, bool $strictPadding = false): string\n+    {\n+        return static::doDecode($src, true, $strictPadding);\n+    }\n+\n+    /**\n+     * Encode into Base32 (RFC 4648)\n+     *\n+     * @param string $binString\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encode(string $binString): string\n+    {\n+        return static::doEncode($binString, false, true);\n+    }\n+    /**\n+     * Encode into Base32 (RFC 4648)\n+     *\n+     * @param string $src\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encodeUnpadded(string $src): string\n+    {\n+        return static::doEncode($src, false, false);\n+    }\n+\n+    /**\n+     * Encode into uppercase Base32 (RFC 4648)\n+     *\n+     * @param string $src\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encodeUpper(string $src): string\n+    {\n+        return static::doEncode($src, true, true);\n+    }\n+\n+    /**\n+     * Encode into uppercase Base32 (RFC 4648)\n+     *\n+     * @param string $src\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encodeUpperUnpadded(string $src): string\n+    {\n+        return static::doEncode($src, true, false);\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 5-bit integers\n+     * into 8-bit integers.\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode5Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 96 && $src < 123) $ret += $src - 97 + 1; // -64\n+        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 96);\n+\n+        // if ($src > 0x31 && $src < 0x38) $ret += $src - 24 + 1; // -23\n+        $ret += (((0x31 - $src) & ($src - 0x38)) >> 8) & ($src - 23);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 5-bit integers\n+     * into 8-bit integers.\n+     *\n+     * Uppercase variant.\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode5BitsUpper(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 64 && $src < 91) $ret += $src - 65 + 1; // -64\n+        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 64);\n+\n+        // if ($src > 0x31 && $src < 0x38) $ret += $src - 24 + 1; // -23\n+        $ret += (((0x31 - $src) & ($src - 0x38)) >> 8) & ($src - 23);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 5-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode5Bits(int $src): string\n+    {\n+        $diff = 0x61;\n+\n+        // if ($src > 25) $ret -= 72;\n+        $diff -= ((25 - $src) >> 8) & 73;\n+\n+        return \\pack('C', $src + $diff);\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 5-bit integers.\n+     *\n+     * Uppercase variant.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode5BitsUpper(int $src): string\n+    {\n+        $diff = 0x41;\n+\n+        // if ($src > 25) $ret -= 40;\n+        $diff -= ((25 - $src) >> 8) & 41;\n+\n+        return \\pack('C', $src + $diff);\n+    }\n+\n+    /**\n+     * @param string $encodedString\n+     * @param bool $upper\n+     * @return string\n+     */\n+    public static function decodeNoPadding(string $encodedString, bool $upper = false): string\n+    {\n+        $srcLen = Binary::safeStrlen($encodedString);\n+        if ($srcLen === 0) {\n+            return '';\n+        }\n+        if (($srcLen & 7) === 0) {\n+            for ($j = 0; $j < 7 && $j < $srcLen; ++$j) {\n+                if ($encodedString[$srcLen - $j - 1] === '=') {\n+                    throw new InvalidArgumentException(\n+                        \"decodeNoPadding() doesn't tolerate padding\"\n+                    );\n+                }\n+            }\n+        }\n+        return static::doDecode(\n+            $encodedString,\n+            $upper,\n+            true\n+        );\n+    }\n+\n+    /**\n+     * Base32 decoding\n+     *\n+     * @param string $src\n+     * @param bool $upper\n+     * @param bool $strictPadding\n+     * @return string\n+     *\n+     * @throws TypeError\n+     * @psalm-suppress RedundantCondition\n+     */\n+    protected static function doDecode(\n+        string $src,\n+        bool $upper = false,\n+        bool $strictPadding = false\n+    ): string {\n+        // We do this to reduce code duplication:\n+        $method = $upper\n+            ? 'decode5BitsUpper'\n+            : 'decode5Bits';\n+\n+        // Remove padding\n+        $srcLen = Binary::safeStrlen($src);\n+        if ($srcLen === 0) {\n+            return '';\n+        }\n+        if ($strictPadding) {\n+            if (($srcLen & 7) === 0) {\n+                for ($j = 0; $j < 7; ++$j) {\n+                    if ($src[$srcLen - 1] === '=') {\n+                        $srcLen--;\n+                    } else {\n+                        break;\n+                    }\n+                }\n+            }\n+            if (($srcLen & 7) === 1) {\n+                throw new RangeException(\n+                    'Incorrect padding'\n+                );\n+            }\n+        } else {\n+            $src = \\rtrim($src, '=');\n+            $srcLen = Binary::safeStrlen($src);\n+        }\n+\n+        $err = 0;\n+        $dest = '';\n+        // Main loop (no padding):\n+        for ($i = 0; $i + 8 <= $srcLen; $i += 8) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, 8));\n+            /** @var int $c0 */\n+            $c0 = static::$method($chunk[1]);\n+            /** @var int $c1 */\n+            $c1 = static::$method($chunk[2]);\n+            /** @var int $c2 */\n+            $c2 = static::$method($chunk[3]);\n+            /** @var int $c3 */\n+            $c3 = static::$method($chunk[4]);\n+            /** @var int $c4 */\n+            $c4 = static::$method($chunk[5]);\n+            /** @var int $c5 */\n+            $c5 = static::$method($chunk[6]);\n+            /** @var int $c6 */\n+            $c6 = static::$method($chunk[7]);\n+            /** @var int $c7 */\n+            $c7 = static::$method($chunk[8]);\n+\n+            $dest .= \\pack(\n+                'CCCCC',\n+                (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                (($c1 << 6) | ($c2 << 1) | ($c3 >> 4)) & 0xff,\n+                (($c3 << 4) | ($c4 >> 1)             ) & 0xff,\n+                (($c4 << 7) | ($c5 << 2) | ($c6 >> 3)) & 0xff,\n+                (($c6 << 5) | ($c7     )             ) & 0xff\n+            );\n+            $err |= ($c0 | $c1 | $c2 | $c3 | $c4 | $c5 | $c6 | $c7) >> 8;\n+        }\n+        // The last chunk, which may have padding:\n+        if ($i < $srcLen) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, $srcLen - $i));\n+            /** @var int $c0 */\n+            $c0 = static::$method($chunk[1]);\n+\n+            if ($i + 6 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+                /** @var int $c2 */\n+                $c2 = static::$method($chunk[3]);\n+                /** @var int $c3 */\n+                $c3 = static::$method($chunk[4]);\n+                /** @var int $c4 */\n+                $c4 = static::$method($chunk[5]);\n+                /** @var int $c5 */\n+                $c5 = static::$method($chunk[6]);\n+                /** @var int $c6 */\n+                $c6 = static::$method($chunk[7]);\n+\n+                $dest .= \\pack(\n+                    'CCCC',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                    (($c1 << 6) | ($c2 << 1) | ($c3 >> 4)) & 0xff,\n+                    (($c3 << 4) | ($c4 >> 1)             ) & 0xff,\n+                    (($c4 << 7) | ($c5 << 2) | ($c6 >> 3)) & 0xff\n+                );\n+                $err |= ($c0 | $c1 | $c2 | $c3 | $c4 | $c5 | $c6) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c6 << 5) & 0xff;\n+                }\n+            } elseif ($i + 5 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+                /** @var int $c2 */\n+                $c2 = static::$method($chunk[3]);\n+                /** @var int $c3 */\n+                $c3 = static::$method($chunk[4]);\n+                /** @var int $c4 */\n+                $c4 = static::$method($chunk[5]);\n+                /** @var int $c5 */\n+                $c5 = static::$method($chunk[6]);\n+\n+                $dest .= \\pack(\n+                    'CCCC',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                    (($c1 << 6) | ($c2 << 1) | ($c3 >> 4)) & 0xff,\n+                    (($c3 << 4) | ($c4 >> 1)             ) & 0xff,\n+                    (($c4 << 7) | ($c5 << 2)             ) & 0xff\n+                );\n+                $err |= ($c0 | $c1 | $c2 | $c3 | $c4 | $c5) >> 8;\n+            } elseif ($i + 4 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+                /** @var int $c2 */\n+                $c2 = static::$method($chunk[3]);\n+                /** @var int $c3 */\n+                $c3 = static::$method($chunk[4]);\n+                /** @var int $c4 */\n+                $c4 = static::$method($chunk[5]);\n+\n+                $dest .= \\pack(\n+                    'CCC',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                    (($c1 << 6) | ($c2 << 1) | ($c3 >> 4)) & 0xff,\n+                    (($c3 << 4) | ($c4 >> 1)             ) & 0xff\n+                );\n+                $err |= ($c0 | $c1 | $c2 | $c3 | $c4) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c4 << 7) & 0xff;\n+                }\n+            } elseif ($i + 3 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+                /** @var int $c2 */\n+                $c2 = static::$method($chunk[3]);\n+                /** @var int $c3 */\n+                $c3 = static::$method($chunk[4]);\n+\n+                $dest .= \\pack(\n+                    'CC',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                    (($c1 << 6) | ($c2 << 1) | ($c3 >> 4)) & 0xff\n+                );\n+                $err |= ($c0 | $c1 | $c2 | $c3) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c3 << 4) & 0xff;\n+                }\n+            } elseif ($i + 2 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+                /** @var int $c2 */\n+                $c2 = static::$method($chunk[3]);\n+\n+                $dest .= \\pack(\n+                    'CC',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff,\n+                    (($c1 << 6) | ($c2 << 1)             ) & 0xff\n+                );\n+                $err |= ($c0 | $c1 | $c2) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c2 << 6) & 0xff;\n+                }\n+            } elseif ($i + 1 < $srcLen) {\n+                /** @var int $c1 */\n+                $c1 = static::$method($chunk[2]);\n+\n+                $dest .= \\pack(\n+                    'C',\n+                    (($c0 << 3) | ($c1 >> 2)             ) & 0xff\n+                );\n+                $err |= ($c0 | $c1) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c1 << 6) & 0xff;\n+                }\n+            } else {\n+                $dest .= \\pack(\n+                    'C',\n+                    (($c0 << 3)                          ) & 0xff\n+                );\n+                $err |= ($c0) >> 8;\n+            }\n+        }\n+        $check = ($err === 0);\n+        if (!$check) {\n+            throw new RangeException(\n+                'Base32::doDecode() only expects characters in the correct base32 alphabet'\n+            );\n+        }\n+        return $dest;\n+    }\n+\n+    /**\n+     * Base32 Encoding\n+     *\n+     * @param string $src\n+     * @param bool $upper\n+     * @param bool $pad\n+     * @return string\n+     * @throws TypeError\n+     */\n+    protected static function doEncode(string $src, bool $upper = false, $pad = true): string\n+    {\n+        // We do this to reduce code duplication:\n+        $method = $upper\n+            ? 'encode5BitsUpper'\n+            : 'encode5Bits';\n+        \n+        $dest = '';\n+        $srcLen = Binary::safeStrlen($src);\n+\n+        // Main loop (no padding):\n+        for ($i = 0; $i + 5 <= $srcLen; $i += 5) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, 5));\n+            $b0 = $chunk[1];\n+            $b1 = $chunk[2];\n+            $b2 = $chunk[3];\n+            $b3 = $chunk[4];\n+            $b4 = $chunk[5];\n+            $dest .=\n+                static::$method(              ($b0 >> 3)  & 31) .\n+                static::$method((($b0 << 2) | ($b1 >> 6)) & 31) .\n+                static::$method((($b1 >> 1)             ) & 31) .\n+                static::$method((($b1 << 4) | ($b2 >> 4)) & 31) .\n+                static::$method((($b2 << 1) | ($b3 >> 7)) & 31) .\n+                static::$method((($b3 >> 2)             ) & 31) .\n+                static::$method((($b3 << 3) | ($b4 >> 5)) & 31) .\n+                static::$method(  $b4                     & 31);\n+        }\n+        // The last chunk, which may have padding:\n+        if ($i < $srcLen) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, $srcLen - $i));\n+            $b0 = $chunk[1];\n+            if ($i + 3 < $srcLen) {\n+                $b1 = $chunk[2];\n+                $b2 = $chunk[3];\n+                $b3 = $chunk[4];\n+                $dest .=\n+                    static::$method(              ($b0 >> 3)  & 31) .\n+                    static::$method((($b0 << 2) | ($b1 >> 6)) & 31) .\n+                    static::$method((($b1 >> 1)             ) & 31) .\n+                    static::$method((($b1 << 4) | ($b2 >> 4)) & 31) .\n+                    static::$method((($b2 << 1) | ($b3 >> 7)) & 31) .\n+                    static::$method((($b3 >> 2)             ) & 31) .\n+                    static::$method((($b3 << 3)             ) & 31);\n+                if ($pad) {\n+                    $dest .= '=';\n+                }\n+            } elseif ($i + 2 < $srcLen) {\n+                $b1 = $chunk[2];\n+                $b2 = $chunk[3];\n+                $dest .=\n+                    static::$method(              ($b0 >> 3)  & 31) .\n+                    static::$method((($b0 << 2) | ($b1 >> 6)) & 31) .\n+                    static::$method((($b1 >> 1)             ) & 31) .\n+                    static::$method((($b1 << 4) | ($b2 >> 4)) & 31) .\n+                    static::$method((($b2 << 1)             ) & 31);\n+                if ($pad) {\n+                    $dest .= '===';\n+                }\n+            } elseif ($i + 1 < $srcLen) {\n+                $b1 = $chunk[2];\n+                $dest .=\n+                    static::$method(              ($b0 >> 3)  & 31) .\n+                    static::$method((($b0 << 2) | ($b1 >> 6)) & 31) .\n+                    static::$method((($b1 >> 1)             ) & 31) .\n+                    static::$method((($b1 << 4)             ) & 31);\n+                if ($pad) {\n+                    $dest .= '====';\n+                }\n+            } else {\n+                $dest .=\n+                    static::$method(              ($b0 >> 3)  & 31) .\n+                    static::$method( ($b0 << 2)               & 31);\n+                if ($pad) {\n+                    $dest .= '======';\n+                }\n+            }\n+        }\n+        return $dest;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base32Hex.php",
          "status": "added",
          "additions": 111,
          "deletions": 0,
          "patch": "@@ -0,0 +1,111 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base32Hex\n+ * [0-9][A-V]\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base32Hex extends Base32\n+{\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 5-bit integers\n+     * into 8-bit integers.\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode5Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x30 && $src < 0x3a) ret += $src - 0x2e + 1; // -47\n+        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src - 47);\n+\n+        // if ($src > 0x60 && $src < 0x77) ret += $src - 0x61 + 10 + 1; // -86\n+        $ret += (((0x60 - $src) & ($src - 0x77)) >> 8) & ($src - 86);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 5-bit integers\n+     * into 8-bit integers.\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode5BitsUpper(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x30 && $src < 0x3a) ret += $src - 0x2e + 1; // -47\n+        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src - 47);\n+\n+        // if ($src > 0x40 && $src < 0x57) ret += $src - 0x41 + 10 + 1; // -54\n+        $ret += (((0x40 - $src) & ($src - 0x57)) >> 8) & ($src - 54);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 5-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode5Bits(int $src): string\n+    {\n+        $src += 0x30;\n+\n+        // if ($src > 0x39) $src += 0x61 - 0x3a; // 39\n+        $src += ((0x39 - $src) >> 8) & 39;\n+\n+        return \\pack('C', $src);\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 5-bit integers.\n+     *\n+     * Uppercase variant.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode5BitsUpper(int $src): string\n+    {\n+        $src += 0x30;\n+\n+        // if ($src > 0x39) $src += 0x41 - 0x3a; // 7\n+        $src += ((0x39 - $src) >> 8) & 7;\n+\n+        return \\pack('C', $src);\n+    }\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base64.php",
          "status": "added",
          "additions": 314,
          "deletions": 0,
          "patch": "@@ -0,0 +1,314 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use InvalidArgumentException;\n+use RangeException;\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base64\n+ * [A-Z][a-z][0-9]+/\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base64 implements EncoderInterface\n+{\n+    /**\n+     * Encode into Base64\n+     *\n+     * Base64 character set \"[A-Z][a-z][0-9]+/\"\n+     *\n+     * @param string $binString\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function encode(string $binString): string\n+    {\n+        return static::doEncode($binString, true);\n+    }\n+\n+    /**\n+     * Encode into Base64, no = padding\n+     *\n+     * Base64 character set \"[A-Z][a-z][0-9]+/\"\n+     *\n+     * @param string $src\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function encodeUnpadded(string $src): string\n+    {\n+        return static::doEncode($src, false);\n+    }\n+\n+    /**\n+     * @param string $src\n+     * @param bool $pad   Include = padding?\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    protected static function doEncode(string $src, bool $pad = true): string\n+    {\n+        $dest = '';\n+        $srcLen = Binary::safeStrlen($src);\n+        // Main loop (no padding):\n+        for ($i = 0; $i + 3 <= $srcLen; $i += 3) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, 3));\n+            $b0 = $chunk[1];\n+            $b1 = $chunk[2];\n+            $b2 = $chunk[3];\n+\n+            $dest .=\n+                static::encode6Bits(               $b0 >> 2       ) .\n+                static::encode6Bits((($b0 << 4) | ($b1 >> 4)) & 63) .\n+                static::encode6Bits((($b1 << 2) | ($b2 >> 6)) & 63) .\n+                static::encode6Bits(  $b2                     & 63);\n+        }\n+        // The last chunk, which may have padding:\n+        if ($i < $srcLen) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($src, $i, $srcLen - $i));\n+            $b0 = $chunk[1];\n+            if ($i + 1 < $srcLen) {\n+                $b1 = $chunk[2];\n+                $dest .=\n+                    static::encode6Bits($b0 >> 2) .\n+                    static::encode6Bits((($b0 << 4) | ($b1 >> 4)) & 63) .\n+                    static::encode6Bits(($b1 << 2) & 63);\n+                if ($pad) {\n+                    $dest .= '=';\n+                }\n+            } else {\n+                $dest .=\n+                    static::encode6Bits( $b0 >> 2) .\n+                    static::encode6Bits(($b0 << 4) & 63);\n+                if ($pad) {\n+                    $dest .= '==';\n+                }\n+            }\n+        }\n+        return $dest;\n+    }\n+\n+    /**\n+     * decode from base64 into binary\n+     *\n+     * Base64 character set \"./[A-Z][a-z][0-9]\"\n+     *\n+     * @param string $encodedString\n+     * @param bool $strictPadding\n+     * @return string\n+     *\n+     * @throws RangeException\n+     * @throws TypeError\n+     * @psalm-suppress RedundantCondition\n+     */\n+    public static function decode(string $encodedString, bool $strictPadding = false): string\n+    {\n+        // Remove padding\n+        $srcLen = Binary::safeStrlen($encodedString);\n+        if ($srcLen === 0) {\n+            return '';\n+        }\n+\n+        if ($strictPadding) {\n+            if (($srcLen & 3) === 0) {\n+                if ($encodedString[$srcLen - 1] === '=') {\n+                    $srcLen--;\n+                    if ($encodedString[$srcLen - 1] === '=') {\n+                        $srcLen--;\n+                    }\n+                }\n+            }\n+            if (($srcLen & 3) === 1) {\n+                throw new RangeException(\n+                    'Incorrect padding'\n+                );\n+            }\n+            if ($encodedString[$srcLen - 1] === '=') {\n+                throw new RangeException(\n+                    'Incorrect padding'\n+                );\n+            }\n+        } else {\n+            $encodedString = \\rtrim($encodedString, '=');\n+            $srcLen = Binary::safeStrlen($encodedString);\n+        }\n+\n+        $err = 0;\n+        $dest = '';\n+        // Main loop (no padding):\n+        for ($i = 0; $i + 4 <= $srcLen; $i += 4) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($encodedString, $i, 4));\n+            $c0 = static::decode6Bits($chunk[1]);\n+            $c1 = static::decode6Bits($chunk[2]);\n+            $c2 = static::decode6Bits($chunk[3]);\n+            $c3 = static::decode6Bits($chunk[4]);\n+\n+            $dest .= \\pack(\n+                'CCC',\n+                ((($c0 << 2) | ($c1 >> 4)) & 0xff),\n+                ((($c1 << 4) | ($c2 >> 2)) & 0xff),\n+                ((($c2 << 6) |  $c3      ) & 0xff)\n+            );\n+            $err |= ($c0 | $c1 | $c2 | $c3) >> 8;\n+        }\n+        // The last chunk, which may have padding:\n+        if ($i < $srcLen) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C*', Binary::safeSubstr($encodedString, $i, $srcLen - $i));\n+            $c0 = static::decode6Bits($chunk[1]);\n+\n+            if ($i + 2 < $srcLen) {\n+                $c1 = static::decode6Bits($chunk[2]);\n+                $c2 = static::decode6Bits($chunk[3]);\n+                $dest .= \\pack(\n+                    'CC',\n+                    ((($c0 << 2) | ($c1 >> 4)) & 0xff),\n+                    ((($c1 << 4) | ($c2 >> 2)) & 0xff)\n+                );\n+                $err |= ($c0 | $c1 | $c2) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c2 << 6) & 0xff;\n+                }\n+            } elseif ($i + 1 < $srcLen) {\n+                $c1 = static::decode6Bits($chunk[2]);\n+                $dest .= \\pack(\n+                    'C',\n+                    ((($c0 << 2) | ($c1 >> 4)) & 0xff)\n+                );\n+                $err |= ($c0 | $c1) >> 8;\n+                if ($strictPadding) {\n+                    $err |= ($c1 << 4) & 0xff;\n+                }\n+            } elseif ($strictPadding) {\n+                $err |= 1;\n+            }\n+        }\n+        $check = ($err === 0);\n+        if (!$check) {\n+            throw new RangeException(\n+                'Base64::decode() only expects characters in the correct base64 alphabet'\n+            );\n+        }\n+        return $dest;\n+    }\n+\n+    /**\n+     * @param string $encodedString\n+     * @return string\n+     */\n+    public static function decodeNoPadding(string $encodedString): string\n+    {\n+        $srcLen = Binary::safeStrlen($encodedString);\n+        if ($srcLen === 0) {\n+            return '';\n+        }\n+        if (($srcLen & 3) === 0) {\n+            if ($encodedString[$srcLen - 1] === '=') {\n+                throw new InvalidArgumentException(\n+                    \"decodeNoPadding() doesn't tolerate padding\"\n+                );\n+            }\n+            if (($srcLen & 3) > 1) {\n+                if ($encodedString[$srcLen - 2] === '=') {\n+                    throw new InvalidArgumentException(\n+                        \"decodeNoPadding() doesn't tolerate padding\"\n+                    );\n+                }\n+            }\n+        }\n+        return static::decode(\n+            $encodedString,\n+            true\n+        );\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 6-bit integers\n+     * into 8-bit integers.\n+     *\n+     * Base64 character set:\n+     * [A-Z]      [a-z]      [0-9]      +     /\n+     * 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode6Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x40 && $src < 0x5b) $ret += $src - 0x41 + 1; // -64\n+        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 64);\n+\n+        // if ($src > 0x60 && $src < 0x7b) $ret += $src - 0x61 + 26 + 1; // -70\n+        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 70);\n+\n+        // if ($src > 0x2f && $src < 0x3a) $ret += $src - 0x30 + 52 + 1; // 5\n+        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src + 5);\n+\n+        // if ($src == 0x2b) $ret += 62 + 1;\n+        $ret += (((0x2a - $src) & ($src - 0x2c)) >> 8) & 63;\n+\n+        // if ($src == 0x2f) ret += 63 + 1;\n+        $ret += (((0x2e - $src) & ($src - 0x30)) >> 8) & 64;\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 6-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode6Bits(int $src): string\n+    {\n+        $diff = 0x41;\n+\n+        // if ($src > 25) $diff += 0x61 - 0x41 - 26; // 6\n+        $diff += ((25 - $src) >> 8) & 6;\n+\n+        // if ($src > 51) $diff += 0x30 - 0x61 - 26; // -75\n+        $diff -= ((51 - $src) >> 8) & 75;\n+\n+        // if ($src > 61) $diff += 0x2b - 0x30 - 10; // -15\n+        $diff -= ((61 - $src) >> 8) & 15;\n+\n+        // if ($src > 62) $diff += 0x2f - 0x2b - 1; // 3\n+        $diff += ((62 - $src) >> 8) & 3;\n+\n+        return \\pack('C', $src + $diff);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base64DotSlash.php",
          "status": "added",
          "additions": 88,
          "deletions": 0,
          "patch": "@@ -0,0 +1,88 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base64DotSlash\n+ * ./[A-Z][a-z][0-9]\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base64DotSlash extends Base64\n+{\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 6-bit integers\n+     * into 8-bit integers.\n+     *\n+     * Base64 character set:\n+     * ./         [A-Z]      [a-z]     [0-9]\n+     * 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode6Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x2d && $src < 0x30) ret += $src - 0x2e + 1; // -45\n+        $ret += (((0x2d - $src) & ($src - 0x30)) >> 8) & ($src - 45);\n+\n+        // if ($src > 0x40 && $src < 0x5b) ret += $src - 0x41 + 2 + 1; // -62\n+        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 62);\n+\n+        // if ($src > 0x60 && $src < 0x7b) ret += $src - 0x61 + 28 + 1; // -68\n+        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 68);\n+\n+        // if ($src > 0x2f && $src < 0x3a) ret += $src - 0x30 + 54 + 1; // 7\n+        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src + 7);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 6-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode6Bits(int $src): string\n+    {\n+        $src += 0x2e;\n+\n+        // if ($src > 0x2f) $src += 0x41 - 0x30; // 17\n+        $src += ((0x2f - $src) >> 8) & 17;\n+\n+        // if ($src > 0x5a) $src += 0x61 - 0x5b; // 6\n+        $src += ((0x5a - $src) >> 8) & 6;\n+\n+        // if ($src > 0x7a) $src += 0x30 - 0x7b; // -75\n+        $src -= ((0x7a - $src) >> 8) & 75;\n+\n+        return \\pack('C', $src);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base64DotSlashOrdered.php",
          "status": "added",
          "additions": 82,
          "deletions": 0,
          "patch": "@@ -0,0 +1,82 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base64DotSlashOrdered\n+ * ./[0-9][A-Z][a-z]\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base64DotSlashOrdered extends Base64\n+{\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 6-bit integers\n+     * into 8-bit integers.\n+     *\n+     * Base64 character set:\n+     * [.-9]      [A-Z]      [a-z]\n+     * 0x2e-0x39, 0x41-0x5a, 0x61-0x7a\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode6Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x2d && $src < 0x3a) ret += $src - 0x2e + 1; // -45\n+        $ret += (((0x2d - $src) & ($src - 0x3a)) >> 8) & ($src - 45);\n+\n+        // if ($src > 0x40 && $src < 0x5b) ret += $src - 0x41 + 12 + 1; // -52\n+        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 52);\n+\n+        // if ($src > 0x60 && $src < 0x7b) ret += $src - 0x61 + 38 + 1; // -58\n+        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 58);\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 6-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode6Bits(int $src): string\n+    {\n+        $src += 0x2e;\n+\n+        // if ($src > 0x39) $src += 0x41 - 0x3a; // 7\n+        $src += ((0x39 - $src) >> 8) & 7;\n+\n+        // if ($src > 0x5a) $src += 0x61 - 0x5b; // 6\n+        $src += ((0x5a - $src) >> 8) & 6;\n+\n+        return \\pack('C', $src);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Base64UrlSafe.php",
          "status": "added",
          "additions": 95,
          "deletions": 0,
          "patch": "@@ -0,0 +1,95 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Base64UrlSafe\n+ * [A-Z][a-z][0-9]\\-_\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Base64UrlSafe extends Base64\n+{\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 6-bit integers\n+     * into 8-bit integers.\n+     *\n+     * Base64 character set:\n+     * [A-Z]      [a-z]      [0-9]      -     _\n+     * 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2d, 0x5f\n+     *\n+     * @param int $src\n+     * @return int\n+     */\n+    protected static function decode6Bits(int $src): int\n+    {\n+        $ret = -1;\n+\n+        // if ($src > 0x40 && $src < 0x5b) $ret += $src - 0x41 + 1; // -64\n+        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 64);\n+\n+        // if ($src > 0x60 && $src < 0x7b) $ret += $src - 0x61 + 26 + 1; // -70\n+        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 70);\n+\n+        // if ($src > 0x2f && $src < 0x3a) $ret += $src - 0x30 + 52 + 1; // 5\n+        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src + 5);\n+\n+        // if ($src == 0x2c) $ret += 62 + 1;\n+        $ret += (((0x2c - $src) & ($src - 0x2e)) >> 8) & 63;\n+\n+        // if ($src == 0x5f) ret += 63 + 1;\n+        $ret += (((0x5e - $src) & ($src - 0x60)) >> 8) & 64;\n+\n+        return $ret;\n+    }\n+\n+    /**\n+     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n+     * into 6-bit integers.\n+     *\n+     * @param int $src\n+     * @return string\n+     */\n+    protected static function encode6Bits(int $src): string\n+    {\n+        $diff = 0x41;\n+\n+        // if ($src > 25) $diff += 0x61 - 0x41 - 26; // 6\n+        $diff += ((25 - $src) >> 8) & 6;\n+\n+        // if ($src > 51) $diff += 0x30 - 0x61 - 26; // -75\n+        $diff -= ((51 - $src) >> 8) & 75;\n+\n+        // if ($src > 61) $diff += 0x2d - 0x30 - 10; // -13\n+        $diff -= ((61 - $src) >> 8) & 13;\n+\n+        // if ($src > 62) $diff += 0x5f - 0x2b - 1; // 3\n+        $diff += ((62 - $src) >> 8) & 49;\n+\n+        return \\pack('C', $src + $diff);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Binary.php",
          "status": "added",
          "additions": 90,
          "deletions": 0,
          "patch": "@@ -0,0 +1,90 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Binary\n+ *\n+ * Binary string operators that don't choke on\n+ * mbstring.func_overload\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Binary\n+{\n+    /**\n+     * Safe string length\n+     *\n+     * @ref mbstring.func_overload\n+     *\n+     * @param string $str\n+     * @return int\n+     */\n+    public static function safeStrlen(string $str): int\n+    {\n+        if (\\function_exists('mb_strlen')) {\n+            // mb_strlen in PHP 7.x can return false.\n+            /** @psalm-suppress RedundantCast */\n+            return (int) \\mb_strlen($str, '8bit');\n+        } else {\n+            return \\strlen($str);\n+        }\n+    }\n+\n+    /**\n+     * Safe substring\n+     *\n+     * @ref mbstring.func_overload\n+     *\n+     * @staticvar boolean $exists\n+     * @param string $str\n+     * @param int $start\n+     * @param ?int $length\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function safeSubstr(\n+        string $str,\n+        int $start = 0,\n+        $length = null\n+    ): string {\n+        if ($length === 0) {\n+            return '';\n+        }\n+        if (\\function_exists('mb_substr')) {\n+            return \\mb_substr($str, $start, $length, '8bit');\n+        }\n+        // Unlike mb_substr(), substr() doesn't accept NULL for length\n+        if ($length !== null) {\n+            return \\substr($str, $start, $length);\n+        } else {\n+            return \\substr($str, $start);\n+        }\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/EncoderInterface.php",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Interface EncoderInterface\n+ * @package ParagonIE\\ConstantTime\n+ */\n+interface EncoderInterface\n+{\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $binString (raw binary)\n+     * @return string\n+     */\n+    public static function encode(string $binString): string;\n+\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $encodedString\n+     * @param bool $strictPadding Error on invalid padding\n+     * @return string (raw binary)\n+     */\n+    public static function decode(string $encodedString, bool $strictPadding = false): string;\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Encoding.php",
          "status": "added",
          "additions": 262,
          "deletions": 0,
          "patch": "@@ -0,0 +1,262 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Encoding\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Encoding\n+{\n+    /**\n+     * RFC 4648 Base32 encoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32Encode(string $str): string\n+    {\n+        return Base32::encode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 encoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32EncodeUpper(string $str): string\n+    {\n+        return Base32::encodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 decoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32Decode(string $str): string\n+    {\n+        return Base32::decode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 decoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32DecodeUpper(string $str): string\n+    {\n+        return Base32::decodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 encoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32HexEncode(string $str): string\n+    {\n+        return Base32Hex::encode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32Hex encoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32HexEncodeUpper(string $str): string\n+    {\n+        return Base32Hex::encodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32Hex decoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32HexDecode(string $str): string\n+    {\n+        return Base32Hex::decode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32Hex decoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base32HexDecodeUpper(string $str): string\n+    {\n+        return Base32Hex::decodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base64 encoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base64Encode(string $str): string\n+    {\n+        return Base64::encode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base64 decoding\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base64Decode(string $str): string\n+    {\n+        return Base64::decode($str);\n+    }\n+\n+    /**\n+     * Encode into Base64\n+     *\n+     * Base64 character set \"./[A-Z][a-z][0-9]\"\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base64EncodeDotSlash(string $str): string\n+    {\n+        return Base64DotSlash::encode($str);\n+    }\n+\n+    /**\n+     * Decode from base64 to raw binary\n+     *\n+     * Base64 character set \"./[A-Z][a-z][0-9]\"\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws \\RangeException\n+     * @throws TypeError\n+     */\n+    public static function base64DecodeDotSlash(string $str): string\n+    {\n+        return Base64DotSlash::decode($str);\n+    }\n+\n+    /**\n+     * Encode into Base64\n+     *\n+     * Base64 character set \"[.-9][A-Z][a-z]\" or \"./[0-9][A-Z][a-z]\"\n+     * @param string $str\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function base64EncodeDotSlashOrdered(string $str): string\n+    {\n+        return Base64DotSlashOrdered::encode($str);\n+    }\n+\n+    /**\n+     * Decode from base64 to raw binary\n+     *\n+     * Base64 character set \"[.-9][A-Z][a-z]\" or \"./[0-9][A-Z][a-z]\"\n+     *\n+     * @param string $str\n+     * @return string\n+     * @throws \\RangeException\n+     * @throws TypeError\n+     */\n+    public static function base64DecodeDotSlashOrdered(string $str): string\n+    {\n+        return Base64DotSlashOrdered::decode($str);\n+    }\n+\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $bin_string (raw binary)\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function hexEncode(string $bin_string): string\n+    {\n+        return Hex::encode($bin_string);\n+    }\n+\n+    /**\n+     * Convert a hexadecimal string into a binary string without cache-timing\n+     * leaks\n+     *\n+     * @param string $hex_string\n+     * @return string (raw binary)\n+     * @throws \\RangeException\n+     */\n+    public static function hexDecode(string $hex_string): string\n+    {\n+        return Hex::decode($hex_string);\n+    }\n+\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $bin_string (raw binary)\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function hexEncodeUpper(string $bin_string): string\n+    {\n+        return Hex::encodeUpper($bin_string);\n+    }\n+\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $bin_string (raw binary)\n+     * @return string\n+     */\n+    public static function hexDecodeUpper(string $bin_string): string\n+    {\n+        return Hex::decode($bin_string);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/Hex.php",
          "status": "added",
          "additions": 146,
          "deletions": 0,
          "patch": "@@ -0,0 +1,146 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use RangeException;\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class Hex\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class Hex implements EncoderInterface\n+{\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks\n+     *\n+     * @param string $binString (raw binary)\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encode(string $binString): string\n+    {\n+        $hex = '';\n+        $len = Binary::safeStrlen($binString);\n+        for ($i = 0; $i < $len; ++$i) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C', $binString[$i]);\n+            $c = $chunk[1] & 0xf;\n+            $b = $chunk[1] >> 4;\n+\n+            $hex .= \\pack(\n+                'CC',\n+                (87 + $b + ((($b - 10) >> 8) & ~38)),\n+                (87 + $c + ((($c - 10) >> 8) & ~38))\n+            );\n+        }\n+        return $hex;\n+    }\n+\n+    /**\n+     * Convert a binary string into a hexadecimal string without cache-timing\n+     * leaks, returning uppercase letters (as per RFC 4648)\n+     *\n+     * @param string $binString (raw binary)\n+     * @return string\n+     * @throws TypeError\n+     */\n+    public static function encodeUpper(string $binString): string\n+    {\n+        $hex = '';\n+        $len = Binary::safeStrlen($binString);\n+\n+        for ($i = 0; $i < $len; ++$i) {\n+            /** @var array<int, int> $chunk */\n+            $chunk = \\unpack('C', $binString[$i]);\n+            $c = $chunk[1] & 0xf;\n+            $b = $chunk[1] >> 4;\n+\n+            $hex .= \\pack(\n+                'CC',\n+                (55 + $b + ((($b - 10) >> 8) & ~6)),\n+                (55 + $c + ((($c - 10) >> 8) & ~6))\n+            );\n+        }\n+        return $hex;\n+    }\n+\n+    /**\n+     * Convert a hexadecimal string into a binary string without cache-timing\n+     * leaks\n+     *\n+     * @param string $encodedString\n+     * @param bool $strictPadding\n+     * @return string (raw binary)\n+     * @throws RangeException\n+     */\n+    public static function decode(\n+        string $encodedString,\n+        bool $strictPadding = false\n+    ): string {\n+        $hex_pos = 0;\n+        $bin = '';\n+        $c_acc = 0;\n+        $hex_len = Binary::safeStrlen($encodedString);\n+        $state = 0;\n+        if (($hex_len & 1) !== 0) {\n+            if ($strictPadding) {\n+                throw new RangeException(\n+                    'Expected an even number of hexadecimal characters'\n+                );\n+            } else {\n+                $encodedString = '0' . $encodedString;\n+                ++$hex_len;\n+            }\n+        }\n+\n+        /** @var array<int, int> $chunk */\n+        $chunk = \\unpack('C*', $encodedString);\n+        while ($hex_pos < $hex_len) {\n+            ++$hex_pos;\n+            $c = $chunk[$hex_pos];\n+            $c_num = $c ^ 48;\n+            $c_num0 = ($c_num - 10) >> 8;\n+            $c_alpha = ($c & ~32) - 55;\n+            $c_alpha0 = (($c_alpha - 10) ^ ($c_alpha - 16)) >> 8;\n+\n+            if (($c_num0 | $c_alpha0) === 0) {\n+                throw new RangeException(\n+                    'Expected hexadecimal character'\n+                );\n+            }\n+            $c_val = ($c_num0 & $c_num) | ($c_alpha & $c_alpha0);\n+            if ($state === 0) {\n+                $c_acc = $c_val * 16;\n+            } else {\n+                $bin .= \\pack('C', $c_acc | $c_val);\n+            }\n+            $state ^= 1;\n+        }\n+        return $bin;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/constant_time_encoding/src/RFC4648.php",
          "status": "added",
          "additions": 186,
          "deletions": 0,
          "patch": "@@ -0,0 +1,186 @@\n+<?php\n+declare(strict_types=1);\n+namespace ParagonIE\\ConstantTime;\n+\n+use TypeError;\n+\n+/**\n+ *  Copyright (c) 2016 - 2022 Paragon Initiative Enterprises.\n+ *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n+ *\n+ *  Permission is hereby granted, free of charge, to any person obtaining a copy\n+ *  of this software and associated documentation files (the \"Software\"), to deal\n+ *  in the Software without restriction, including without limitation the rights\n+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ *  copies of the Software, and to permit persons to whom the Software is\n+ *  furnished to do so, subject to the following conditions:\n+ *\n+ *  The above copyright notice and this permission notice shall be included in all\n+ *  copies or substantial portions of the Software.\n+ *\n+ *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ *  SOFTWARE.\n+ */\n+\n+/**\n+ * Class RFC4648\n+ *\n+ * This class conforms strictly to the RFC\n+ *\n+ * @package ParagonIE\\ConstantTime\n+ */\n+abstract class RFC4648\n+{\n+    /**\n+     * RFC 4648 Base64 encoding\n+     *\n+     * \"foo\" -> \"Zm9v\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base64Encode(string $str): string\n+    {\n+        return Base64::encode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base64 decoding\n+     *\n+     * \"Zm9v\" -> \"foo\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base64Decode(string $str): string\n+    {\n+        return Base64::decode($str, true);\n+    }\n+\n+    /**\n+     * RFC 4648 Base64 (URL Safe) encoding\n+     *\n+     * \"foo\" -> \"Zm9v\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base64UrlSafeEncode(string $str): string\n+    {\n+        return Base64UrlSafe::encode($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base64 (URL Safe) decoding\n+     *\n+     * \"Zm9v\" -> \"foo\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base64UrlSafeDecode(string $str): string\n+    {\n+        return Base64UrlSafe::decode($str, true);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 encoding\n+     *\n+     * \"foo\" -> \"MZXW6===\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base32Encode(string $str): string\n+    {\n+        return Base32::encodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32 encoding\n+     *\n+     * \"MZXW6===\" -> \"foo\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base32Decode(string $str): string\n+    {\n+        return Base32::decodeUpper($str, true);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32-Hex encoding\n+     *\n+     * \"foo\" -> \"CPNMU===\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base32HexEncode(string $str): string\n+    {\n+        return Base32::encodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base32-Hex decoding\n+     *\n+     * \"CPNMU===\" -> \"foo\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base32HexDecode(string $str): string\n+    {\n+        return Base32::decodeUpper($str, true);\n+    }\n+\n+    /**\n+     * RFC 4648 Base16 decoding\n+     *\n+     * \"foo\" -> \"666F6F\"\n+     *\n+     * @param string $str\n+     * @return string\n+     *\n+     * @throws TypeError\n+     */\n+    public static function base16Encode(string $str): string\n+    {\n+        return Hex::encodeUpper($str);\n+    }\n+\n+    /**\n+     * RFC 4648 Base16 decoding\n+     *\n+     * \"666F6F\" -> \"foo\"\n+     *\n+     * @param string $str\n+     * @return string\n+     */\n+    public static function base16Decode(string $str): string\n+    {\n+        return Hex::decode($str, true);\n+    }\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/LICENSE",
          "status": "added",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -0,0 +1,22 @@\n+The MIT License (MIT)\n+\n+Copyright (c) 2015 Paragon Initiative Enterprises\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n+"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/build-phar.sh",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+#!/usr/bin/env bash\n+\n+basedir=$( dirname $( readlink -f ${BASH_SOURCE[0]} ) )\n+\n+php -dphar.readonly=0 \"$basedir/other/build_phar.php\" $*\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/composer.json",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": "@@ -0,0 +1,34 @@\n+{\n+  \"name\":         \"paragonie/random_compat\",\n+  \"description\":  \"PHP 5.x polyfill for random_bytes() and random_int() from PHP 7\",\n+  \"keywords\": [\n+    \"csprng\",\n+    \"random\",\n+    \"polyfill\",\n+    \"pseudorandom\"\n+  ],\n+  \"license\":      \"MIT\",\n+  \"type\":         \"library\",\n+  \"authors\": [\n+    {\n+      \"name\":     \"Paragon Initiative Enterprises\",\n+      \"email\":    \"security@paragonie.com\",\n+      \"homepage\": \"https://paragonie.com\"\n+    }\n+  ],\n+  \"support\": {\n+    \"issues\":     \"https://github.com/paragonie/random_compat/issues\",\n+    \"email\":      \"info@paragonie.com\",\n+    \"source\":     \"https://github.com/paragonie/random_compat\"\n+  },\n+  \"require\": {\n+    \"php\": \">= 7\"\n+  },\n+  \"require-dev\": {\n+    \"vimeo/psalm\": \"^1\",\n+    \"phpunit/phpunit\": \"4.*|5.*\"\n+  },\n+  \"suggest\": {\n+    \"ext-libsodium\": \"Provides a modern crypto API that can be used to generate random bytes.\"\n+  }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/dist/random_compat.phar.pubkey",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+-----BEGIN PUBLIC KEY-----\n+MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEEd+wCqJDrx5B4OldM0dQE0ZMX+lx1ZWm\n+pui0SUqD4G29L3NGsz9UhJ/0HjBdbnkhIK5xviT0X5vtjacF6ajgcCArbTB+ds+p\n++h7Q084NuSuIpNb6YPfoUFgC/CL9kAoc\n+-----END PUBLIC KEY-----"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/dist/random_compat.phar.pubkey.asc",
          "status": "added",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -0,0 +1,11 @@\n+-----BEGIN PGP SIGNATURE-----\n+Version: GnuPG v2.0.22 (MingW32)\n+\n+iQEcBAABAgAGBQJWtW1hAAoJEGuXocKCZATaJf0H+wbZGgskK1dcRTsuVJl9IWip\n+QwGw/qIKI280SD6/ckoUMxKDCJiFuPR14zmqnS36k7N5UNPnpdTJTS8T11jttSpg\n+1LCmgpbEIpgaTah+cELDqFCav99fS+bEiAL5lWDAHBTE/XPjGVCqeehyPYref4IW\n+NDBIEsvnHPHPLsn6X5jq4+Yj5oUixgxaMPiR+bcO4Sh+RzOVB6i2D0upWfRXBFXA\n+NNnsg9/zjvoC7ZW73y9uSH+dPJTt/Vgfeiv52/v41XliyzbUyLalf02GNPY+9goV\n+JHG1ulEEBJOCiUD9cE1PUIJwHA/HqyhHIvV350YoEFiHl8iSwm7SiZu5kPjaq74=\n+=B6+8\n+-----END PGP SIGNATURE-----"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/lib/random.php",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -0,0 +1,32 @@\n+<?php\n+/**\n+ * Random_* Compatibility Library\n+ * for using the new PHP 7 random_* API in PHP 5 projects\n+ *\n+ * @version 2.99.99\n+ * @released 2018-06-06\n+ *\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+// NOP"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/other/build_phar.php",
          "status": "added",
          "additions": 57,
          "deletions": 0,
          "patch": "@@ -0,0 +1,57 @@\n+<?php\n+$dist = dirname(__DIR__).'/dist';\n+if (!is_dir($dist)) {\n+    mkdir($dist, 0755);\n+}\n+if (file_exists($dist.'/random_compat.phar')) {\n+    unlink($dist.'/random_compat.phar');\n+}\n+$phar = new Phar(\n+    $dist.'/random_compat.phar',\n+    FilesystemIterator::CURRENT_AS_FILEINFO | \\FilesystemIterator::KEY_AS_FILENAME,\n+    'random_compat.phar'\n+);\n+rename(\n+    dirname(__DIR__).'/lib/random.php', \n+    dirname(__DIR__).'/lib/index.php'\n+);\n+$phar->buildFromDirectory(dirname(__DIR__).'/lib');\n+rename(\n+    dirname(__DIR__).'/lib/index.php', \n+    dirname(__DIR__).'/lib/random.php'\n+);\n+\n+/**\n+ * If we pass an (optional) path to a private key as a second argument, we will\n+ * sign the Phar with OpenSSL.\n+ * \n+ * If you leave this out, it will produce an unsigned .phar!\n+ */\n+if ($argc > 1) {\n+    if (!@is_readable($argv[1])) {\n+        echo 'Could not read the private key file:', $argv[1], \"\\n\";\n+        exit(255);\n+    }\n+    $pkeyFile = file_get_contents($argv[1]);\n+    \n+    $private = openssl_get_privatekey($pkeyFile);\n+    if ($private !== false) {\n+        $pkey = '';\n+        openssl_pkey_export($private, $pkey);\n+        $phar->setSignatureAlgorithm(Phar::OPENSSL, $pkey);\n+        \n+        /**\n+         * Save the corresponding public key to the file\n+         */\n+        if (!@is_readable($dist.'/random_compat.phar.pubkey')) {\n+            $details = openssl_pkey_get_details($private);\n+            file_put_contents(\n+                $dist.'/random_compat.phar.pubkey',\n+                $details['key']\n+            );\n+        }\n+    } else {\n+        echo 'An error occurred reading the private key from OpenSSL.', \"\\n\";\n+        exit(255);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/psalm-autoload.php",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+<?php\n+\n+require_once 'lib/byte_safe_strings.php';\n+require_once 'lib/cast_to_int.php';\n+require_once 'lib/error_polyfill.php';\n+require_once 'other/ide_stubs/libsodium.php';\n+require_once 'lib/random.php';\n+\n+$int = random_int(0, 65536);"
        },
        {
          "filename": "private/vendor/paragonie/random_compat/psalm.xml",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\"?>\n+<psalm\n+    autoloader=\"psalm-autoload.php\"\n+    stopOnFirstError=\"false\"\n+    useDocblockTypes=\"true\"\n+>\n+    <projectFiles>\n+        <directory name=\"lib\" />\n+    </projectFiles>\n+    <issueHandlers>\n+        <RedundantConditionGivenDocblockType errorLevel=\"info\" />\n+        <UnresolvableInclude errorLevel=\"info\" />\n+        <DuplicateClass errorLevel=\"info\" />\n+        <InvalidOperand errorLevel=\"info\" />\n+        <UndefinedConstant errorLevel=\"info\" />\n+        <MissingReturnType errorLevel=\"info\" />\n+        <InvalidReturnType errorLevel=\"info\" />\n+    </issueHandlers>\n+</psalm>"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/AUTHORS",
          "status": "added",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -0,0 +1,7 @@\n+phpseclib Lead Developer:  TerraFrost (Jim Wigginton)\n+\n+phpseclib Developers:      monnerat (Patrick Monnerat)\n+                           bantu (Andreas Fischer)\n+                           petrich (Hans-J\u00fcrgen Petrich)\n+                           GrahamCampbell (Graham Campbell)\n+                           hc-jworman\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/BACKERS.md",
          "status": "added",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -0,0 +1,17 @@\n+# Backers\n+\n+phpseclib ongoing development is made possible by [Tidelift](https://tidelift.com/subscription/pkg/packagist-phpseclib-phpseclib?utm_source=packagist-phpseclib-phpseclib&utm_medium=referral&utm_campaign=readme) and by contributions by users like you. Thank you.\n+\n+## Backers\n+\n+- Allan Simon\n+- [ChargeOver](https://chargeover.com/)\n+- Raghu Veer Dendukuri\n+- Zane Hooper\n+- [Setasign](https://www.setasign.com/)\n+- [Charles Severance](https://github.com/csev)\n+- [Rachel Fish](https://github.com/itsrachelfish)\n+- Tharyrok\n+- [cjhaas](https://github.com/cjhaas)\n+- [istiak-tridip](https://github.com/istiak-tridip)\n+- [Anna Filina](https://github.com/afilina)\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/LICENSE",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+Copyright (c) 2011-2019 TerraFrost and other contributors\n+\n+Permission is hereby granted, free of charge, to any person obtaining\n+a copy of this software and associated documentation files (the\n+\"Software\"), to deal in the Software without restriction, including\n+without limitation the rights to use, copy, modify, merge, publish,\n+distribute, sublicense, and/or sell copies of the Software, and to\n+permit persons to whom the Software is furnished to do so, subject to\n+the following conditions:\n+\n+The above copyright notice and this permission notice shall be\n+included in all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\\ No newline at end of file"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/README.md",
          "status": "added",
          "additions": 97,
          "deletions": 0,
          "patch": "@@ -0,0 +1,97 @@\n+# phpseclib - PHP Secure Communications Library\n+\n+[![CI Status](https://github.com/phpseclib/phpseclib/actions/workflows/ci.yml/badge.svg?branch=3.0&event=push \"CI Status\")](https://github.com/phpseclib/phpseclib)\n+\n+## Supporting phpseclib\n+\n+- [Become a backer or sponsor on Patreon](https://www.patreon.com/phpseclib)\n+- [One-time donation via PayPal or crypto-currencies](http://sourceforge.net/donate/index.php?group_id=198487)\n+- [Subscribe to Tidelift](https://tidelift.com/subscription/pkg/packagist-phpseclib-phpseclib?utm_source=packagist-phpseclib-phpseclib&utm_medium=referral&utm_campaign=readme)\n+\n+## Introduction\n+\n+MIT-licensed pure-PHP implementations of the following:\n+\n+SSH-2, SFTP, X.509, an arbitrary-precision integer arithmetic library, Ed25519 / Ed449 / Curve25519 / Curve449, ECDSA / ECDH (with support for 66 curves), RSA (PKCS#1 v2.2 compliant), DSA / DH, DES / 3DES / RC4 / Rijndael / AES / Blowfish / Twofish / Salsa20 / ChaCha20, GCM / Poly1305\n+\n+* [Browse Git](https://github.com/phpseclib/phpseclib)\n+\n+## Documentation\n+\n+* [Documentation / Manual](https://phpseclib.com/)\n+* [API Documentation](https://api.phpseclib.com/3.0/) (generated by Doctum)\n+\n+## Branches\n+\n+### master\n+\n+* Development Branch\n+* Unstable API\n+* Do not use in production\n+\n+### 3.0\n+\n+* Long term support (LTS) release\n+* Major expansion of cryptographic primitives\n+* Minimum PHP version: 5.6.1\n+* PSR-4 autoloading with namespace rooted at `\\phpseclib3`\n+* Install via Composer: `composer require phpseclib/phpseclib:~3.0`\n+\n+### 2.0\n+\n+* Long term support (LTS) release\n+* Modernized version of 1.0\n+* Minimum PHP version: 5.3.3\n+* PSR-4 autoloading with namespace rooted at `\\phpseclib`\n+* Install via Composer: `composer require phpseclib/phpseclib:~2.0`\n+\n+### 1.0\n+\n+* Long term support (LTS) release\n+* PHP4 compatible\n+* Composer compatible (PSR-0 autoloading)\n+* Install using Composer: `composer require phpseclib/phpseclib:~1.0`\n+* [Download 1.0.23 as ZIP](http://sourceforge.net/projects/phpseclib/files/phpseclib1.0.23.zip/download)\n+\n+## Security contact information\n+\n+To report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n+\n+## Support\n+\n+Need Support?\n+\n+* [Checkout Questions and Answers on Stack Overflow](http://stackoverflow.com/questions/tagged/phpseclib)\n+* [Create a Support Ticket on GitHub](https://github.com/phpseclib/phpseclib/issues/new)\n+* [Browse the Support Forum](http://www.frostjedi.com/phpbb/viewforum.php?f=46) (no longer in use)\n+\n+## Special Thanks\n+\n+Special Thanks to our $50+ sponsors!:\n+\n+- Allan Simon\n+- [ChargeOver](https://chargeover.com/)\n+\n+## Contributing\n+\n+1. Fork the Project\n+\n+2. Ensure you have Composer installed (see [Composer Download Instructions](https://getcomposer.org/download/))\n+\n+3. Install Development Dependencies\n+    ```sh\n+    composer install\n+    ```\n+\n+4. Create a Feature Branch\n+\n+5. Run continuous integration checks:\n+   ```sh\n+   composer global require php:^8.1 squizlabs/php_codesniffer friendsofphp/php-cs-fixer vimeo/psalm\n+   phpcs --standard=build/php_codesniffer.xml\n+   php-cs-fixer fix --config=build/php-cs-fixer.php --diff --dry-run --using-cache=no\n+   psalm --config=build/psalm.xml --no-cache --long-progress --report-show-info=false --output-format=text\n+   vendor/bin/phpunit --verbose --configuration tests/phpunit.xml\n+   ```\n+   \n+6. Send us a Pull Request"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/composer.json",
          "status": "added",
          "additions": 84,
          "deletions": 0,
          "patch": "@@ -0,0 +1,84 @@\n+{\n+    \"name\": \"phpseclib/phpseclib\",\n+    \"type\": \"library\",\n+    \"description\": \"PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.\",\n+    \"keywords\": [\n+        \"security\",\n+        \"crypto\",\n+        \"cryptography\",\n+        \"encryption\",\n+        \"signature\",\n+        \"signing\",\n+        \"rsa\",\n+        \"aes\",\n+        \"blowfish\",\n+        \"twofish\",\n+        \"ssh\",\n+        \"sftp\",\n+        \"x509\",\n+        \"x.509\",\n+        \"asn1\",\n+        \"asn.1\",\n+        \"BigInteger\"\n+        ],\n+    \"homepage\": \"http://phpseclib.sourceforge.net\",\n+    \"license\": \"MIT\",\n+    \"authors\": [\n+        {\n+            \"name\": \"Jim Wigginton\",\n+            \"email\": \"terrafrost@php.net\",\n+            \"role\": \"Lead Developer\"\n+        },\n+        {\n+            \"name\": \"Patrick Monnerat\",\n+            \"email\": \"pm@datasphere.ch\",\n+            \"role\": \"Developer\"\n+        },\n+        {\n+            \"name\": \"Andreas Fischer\",\n+            \"email\": \"bantu@phpbb.com\",\n+            \"role\": \"Developer\"\n+        },\n+        {\n+            \"name\": \"Hans-J\u00fcrgen Petrich\",\n+            \"email\": \"petrich@tronic-media.com\",\n+            \"role\": \"Developer\"\n+        },\n+        {\n+            \"name\": \"Graham Campbell\",\n+            \"email\": \"graham@alt-three.com\",\n+            \"role\": \"Developer\"\n+        }\n+    ],\n+    \"require\": {\n+        \"php\": \">=5.6.1\",\n+        \"paragonie/constant_time_encoding\": \"^1|^2\",\n+        \"paragonie/random_compat\": \"^1.4|^2.0|^9.99.99\"\n+    },\n+    \"require-dev\": {\n+        \"phpunit/phpunit\": \"*\"\n+    },\n+    \"suggest\": {\n+        \"ext-libsodium\": \"SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.\",\n+        \"ext-openssl\": \"Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations.\",\n+        \"ext-mcrypt\": \"Install the Mcrypt extension in order to speed up a few other cryptographic operations.\",\n+        \"ext-gmp\": \"Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.\",\n+        \"ext-dom\": \"Install the DOM extension to load XML formatted public keys.\"\n+    },\n+    \"autoload\": {\n+        \"files\": [\n+            \"phpseclib/bootstrap.php\"\n+        ],\n+        \"psr-4\": {\n+            \"phpseclib3\\\\\": \"phpseclib/\"\n+        }\n+    },\n+    \"autoload-dev\": {\n+        \"psr-4\": {\n+            \"phpseclib3\\\\Tests\\\\\": \"tests/\"\n+        }\n+    },\n+    \"config\": {\n+        \"sort-packages\": true\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Common/Functions/Strings.php",
          "status": "added",
          "additions": 505,
          "deletions": 0,
          "patch": "@@ -0,0 +1,505 @@\n+<?php\n+\n+/**\n+ * Common String Functions\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Common\\Functions;\n+\n+use ParagonIE\\ConstantTime\\Base64;\n+use ParagonIE\\ConstantTime\\Base64UrlSafe;\n+use ParagonIE\\ConstantTime\\Hex;\n+use phpseclib3\\Math\\BigInteger;\n+use phpseclib3\\Math\\Common\\FiniteField;\n+\n+/**\n+ * Common String Functions\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class Strings\n+{\n+    /**\n+     * String Shift\n+     *\n+     * Inspired by array_shift\n+     *\n+     * @param string $string\n+     * @param int $index\n+     * @return string\n+     */\n+    public static function shift(&$string, $index = 1)\n+    {\n+        $substr = substr($string, 0, $index);\n+        $string = substr($string, $index);\n+        return $substr;\n+    }\n+\n+    /**\n+     * String Pop\n+     *\n+     * Inspired by array_pop\n+     *\n+     * @param string $string\n+     * @param int $index\n+     * @return string\n+     */\n+    public static function pop(&$string, $index = 1)\n+    {\n+        $substr = substr($string, -$index);\n+        $string = substr($string, 0, -$index);\n+        return $substr;\n+    }\n+\n+    /**\n+     * Parse SSH2-style string\n+     *\n+     * Returns either an array or a boolean if $data is malformed.\n+     *\n+     * Valid characters for $format are as follows:\n+     *\n+     * C = byte\n+     * b = boolean (true/false)\n+     * N = uint32\n+     * Q = uint64\n+     * s = string\n+     * i = mpint\n+     * L = name-list\n+     *\n+     * uint64 is not supported.\n+     *\n+     * @param string $format\n+     * @param string $data\n+     * @return mixed\n+     */\n+    public static function unpackSSH2($format, &$data)\n+    {\n+        $format = self::formatPack($format);\n+        $result = [];\n+        for ($i = 0; $i < strlen($format); $i++) {\n+            switch ($format[$i]) {\n+                case 'C':\n+                case 'b':\n+                    if (!strlen($data)) {\n+                        throw new \\LengthException('At least one byte needs to be present for successful C / b decodes');\n+                    }\n+                    break;\n+                case 'N':\n+                case 'i':\n+                case 's':\n+                case 'L':\n+                    if (strlen($data) < 4) {\n+                        throw new \\LengthException('At least four byte needs to be present for successful N / i / s / L decodes');\n+                    }\n+                    break;\n+                case 'Q':\n+                    if (strlen($data) < 8) {\n+                        throw new \\LengthException('At least eight byte needs to be present for successful N / i / s / L decodes');\n+                    }\n+                    break;\n+\n+                default:\n+                    throw new \\InvalidArgumentException('$format contains an invalid character');\n+            }\n+            switch ($format[$i]) {\n+                case 'C':\n+                    $result[] = ord(self::shift($data));\n+                    continue 2;\n+                case 'b':\n+                    $result[] = ord(self::shift($data)) != 0;\n+                    continue 2;\n+                case 'N':\n+                    list(, $temp) = unpack('N', self::shift($data, 4));\n+                    $result[] = $temp;\n+                    continue 2;\n+                case 'Q':\n+                    // pack() added support for Q in PHP 5.6.3 and PHP 5.6 is phpseclib 3's minimum version\n+                    // so in theory we could support this BUT, \"64-bit format codes are not available for\n+                    // 32-bit versions\" and phpseclib works on 32-bit installs. on 32-bit installs\n+                    // 64-bit floats can be used to get larger numbers then 32-bit signed ints would allow\n+                    // for. sure, you're not gonna get the full precision of 64-bit numbers but just because\n+                    // you need > 32-bit precision doesn't mean you need the full 64-bit precision\n+                    extract(unpack('Nupper/Nlower', self::shift($data, 8)));\n+                    $temp = $upper ? 4294967296 * $upper : 0;\n+                    $temp += $lower < 0 ? ($lower & 0x7FFFFFFFF) + 0x80000000 : $lower;\n+                    // $temp = hexdec(bin2hex(self::shift($data, 8)));\n+                    $result[] = $temp;\n+                    continue 2;\n+            }\n+            list(, $length) = unpack('N', self::shift($data, 4));\n+            if (strlen($data) < $length) {\n+                throw new \\LengthException(\"$length bytes needed; \" . strlen($data) . ' bytes available');\n+            }\n+            $temp = self::shift($data, $length);\n+            switch ($format[$i]) {\n+                case 'i':\n+                    $result[] = new BigInteger($temp, -256);\n+                    break;\n+                case 's':\n+                    $result[] = $temp;\n+                    break;\n+                case 'L':\n+                    $result[] = explode(',', $temp);\n+            }\n+        }\n+\n+        return $result;\n+    }\n+\n+    /**\n+     * Create SSH2-style string\n+     *\n+     * @param string $format\n+     * @param string|int|float|array|bool ...$elements\n+     * @return string\n+     */\n+    public static function packSSH2($format, ...$elements)\n+    {\n+        $format = self::formatPack($format);\n+        if (strlen($format) != count($elements)) {\n+            throw new \\InvalidArgumentException('There must be as many arguments as there are characters in the $format string');\n+        }\n+        $result = '';\n+        for ($i = 0; $i < strlen($format); $i++) {\n+            $element = $elements[$i];\n+            switch ($format[$i]) {\n+                case 'C':\n+                    if (!is_int($element)) {\n+                        throw new \\InvalidArgumentException('Bytes must be represented as an integer between 0 and 255, inclusive.');\n+                    }\n+                    $result .= pack('C', $element);\n+                    break;\n+                case 'b':\n+                    if (!is_bool($element)) {\n+                        throw new \\InvalidArgumentException('A boolean parameter was expected.');\n+                    }\n+                    $result .= $element ? \"\\1\" : \"\\0\";\n+                    break;\n+                case 'Q':\n+                    if (!is_int($element) && !is_float($element)) {\n+                        throw new \\InvalidArgumentException('An integer was expected.');\n+                    }\n+                    // 4294967296 == 1 << 32\n+                    $result .= pack('NN', $element / 4294967296, $element);\n+                    break;\n+                case 'N':\n+                    if (is_float($element)) {\n+                        $element = (int) $element;\n+                    }\n+                    if (!is_int($element)) {\n+                        throw new \\InvalidArgumentException('An integer was expected.');\n+                    }\n+                    $result .= pack('N', $element);\n+                    break;\n+                case 's':\n+                    if (!self::is_stringable($element)) {\n+                        throw new \\InvalidArgumentException('A string was expected.');\n+                    }\n+                    $result .= pack('Na*', strlen($element), $element);\n+                    break;\n+                case 'i':\n+                    if (!$element instanceof BigInteger && !$element instanceof FiniteField\\Integer) {\n+                        throw new \\InvalidArgumentException('A phpseclib3\\Math\\BigInteger or phpseclib3\\Math\\Common\\FiniteField\\Integer object was expected.');\n+                    }\n+                    $element = $element->toBytes(true);\n+                    $result .= pack('Na*', strlen($element), $element);\n+                    break;\n+                case 'L':\n+                    if (!is_array($element)) {\n+                        throw new \\InvalidArgumentException('An array was expected.');\n+                    }\n+                    $element = implode(',', $element);\n+                    $result .= pack('Na*', strlen($element), $element);\n+                    break;\n+                default:\n+                    throw new \\InvalidArgumentException('$format contains an invalid character');\n+            }\n+        }\n+        return $result;\n+    }\n+\n+    /**\n+     * Expand a pack string\n+     *\n+     * Converts C5 to CCCCC, for example.\n+     *\n+     * @param string $format\n+     * @return string\n+     */\n+    private static function formatPack($format)\n+    {\n+        $parts = preg_split('#(\\d+)#', $format, -1, PREG_SPLIT_DELIM_CAPTURE);\n+        $format = '';\n+        for ($i = 1; $i < count($parts); $i += 2) {\n+            $format .= substr($parts[$i - 1], 0, -1) . str_repeat(substr($parts[$i - 1], -1), $parts[$i]);\n+        }\n+        $format .= $parts[$i - 1];\n+\n+        return $format;\n+    }\n+\n+    /**\n+     * Convert binary data into bits\n+     *\n+     * bin2hex / hex2bin refer to base-256 encoded data as binary, whilst\n+     * decbin / bindec refer to base-2 encoded data as binary. For the purposes\n+     * of this function, bin refers to base-256 encoded data whilst bits refers\n+     * to base-2 encoded data\n+     *\n+     * @param string $x\n+     * @return string\n+     */\n+    public static function bits2bin($x)\n+    {\n+        /*\n+        // the pure-PHP approach is faster than the GMP approach\n+        if (function_exists('gmp_export')) {\n+             return strlen($x) ? gmp_export(gmp_init($x, 2)) : gmp_init(0);\n+        }\n+        */\n+\n+        if (preg_match('#[^01]#', $x)) {\n+            throw new \\RuntimeException('The only valid characters are 0 and 1');\n+        }\n+\n+        if (!defined('PHP_INT_MIN')) {\n+            define('PHP_INT_MIN', ~PHP_INT_MAX);\n+        }\n+\n+        $length = strlen($x);\n+        if (!$length) {\n+            return '';\n+        }\n+        $block_size = PHP_INT_SIZE << 3;\n+        $pad = $block_size - ($length % $block_size);\n+        if ($pad != $block_size) {\n+            $x = str_repeat('0', $pad) . $x;\n+        }\n+\n+        $parts = str_split($x, $block_size);\n+        $str = '';\n+        foreach ($parts as $part) {\n+            $xor = $part[0] == '1' ? PHP_INT_MIN : 0;\n+            $part[0] = '0';\n+            $str .= pack(\n+                PHP_INT_SIZE == 4 ? 'N' : 'J',\n+                $xor ^ eval('return 0b' . $part . ';')\n+            );\n+        }\n+        return ltrim($str, \"\\0\");\n+    }\n+\n+    /**\n+     * Convert bits to binary data\n+     *\n+     * @param string $x\n+     * @return string\n+     */\n+    public static function bin2bits($x, $trim = true)\n+    {\n+        /*\n+        // the pure-PHP approach is slower than the GMP approach BUT\n+        // i want to the pure-PHP version to be easily unit tested as well\n+        if (function_exists('gmp_import')) {\n+            return gmp_strval(gmp_import($x), 2);\n+        }\n+        */\n+\n+        $len = strlen($x);\n+        $mod = $len % PHP_INT_SIZE;\n+        if ($mod) {\n+            $x = str_pad($x, $len + PHP_INT_SIZE - $mod, \"\\0\", STR_PAD_LEFT);\n+        }\n+\n+        $bits = '';\n+        if (PHP_INT_SIZE == 4) {\n+            $digits = unpack('N*', $x);\n+            foreach ($digits as $digit) {\n+                $bits .= sprintf('%032b', $digit);\n+            }\n+        } else {\n+            $digits = unpack('J*', $x);\n+            foreach ($digits as $digit) {\n+                $bits .= sprintf('%064b', $digit);\n+            }\n+        }\n+\n+        return $trim ? ltrim($bits, '0') : $bits;\n+    }\n+\n+    /**\n+     * Switch Endianness Bit Order\n+     *\n+     * @param string $x\n+     * @return string\n+     */\n+    public static function switchEndianness($x)\n+    {\n+        $r = '';\n+        for ($i = strlen($x) - 1; $i >= 0; $i--) {\n+            $b = ord($x[$i]);\n+            if (PHP_INT_SIZE === 8) {\n+                // 3 operations\n+                // from http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith64BitsDiv\n+                $r .= chr((($b * 0x0202020202) & 0x010884422010) % 1023);\n+            } else {\n+                // 7 operations\n+                // from http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith32Bits\n+                $p1 = ($b * 0x0802) & 0x22110;\n+                $p2 = ($b * 0x8020) & 0x88440;\n+                $r .= chr(\n+                    (($p1 | $p2) * 0x10101) >> 16\n+                );\n+            }\n+        }\n+        return $r;\n+    }\n+\n+    /**\n+     * Increment the current string\n+     *\n+     * @param string $var\n+     * @return string\n+     */\n+    public static function increment_str(&$var)\n+    {\n+        if (function_exists('sodium_increment')) {\n+            $var = strrev($var);\n+            sodium_increment($var);\n+            $var = strrev($var);\n+            return $var;\n+        }\n+\n+        for ($i = 4; $i <= strlen($var); $i += 4) {\n+            $temp = substr($var, -$i, 4);\n+            switch ($temp) {\n+                case \"\\xFF\\xFF\\xFF\\xFF\":\n+                    $var = substr_replace($var, \"\\x00\\x00\\x00\\x00\", -$i, 4);\n+                    break;\n+                case \"\\x7F\\xFF\\xFF\\xFF\":\n+                    $var = substr_replace($var, \"\\x80\\x00\\x00\\x00\", -$i, 4);\n+                    return $var;\n+                default:\n+                    $temp = unpack('Nnum', $temp);\n+                    $var = substr_replace($var, pack('N', $temp['num'] + 1), -$i, 4);\n+                    return $var;\n+            }\n+        }\n+\n+        $remainder = strlen($var) % 4;\n+\n+        if ($remainder == 0) {\n+            return $var;\n+        }\n+\n+        $temp = unpack('Nnum', str_pad(substr($var, 0, $remainder), 4, \"\\0\", STR_PAD_LEFT));\n+        $temp = substr(pack('N', $temp['num'] + 1), -$remainder);\n+        $var = substr_replace($var, $temp, 0, $remainder);\n+\n+        return $var;\n+    }\n+\n+    /**\n+     * Find whether the type of a variable is string (or could be converted to one)\n+     *\n+     * @param mixed $var\n+     * @return bool\n+     * @psalm-assert-if-true string|\\Stringable $var\n+     */\n+    public static function is_stringable($var)\n+    {\n+        return is_string($var) || (is_object($var) && method_exists($var, '__toString'));\n+    }\n+\n+    /**\n+     * Constant Time Base64-decoding\n+     *\n+     * ParagoneIE\\ConstantTime doesn't use libsodium if it's available so we'll do so\n+     * ourselves. see https://github.com/paragonie/constant_time_encoding/issues/39\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function base64_decode($data)\n+    {\n+        return function_exists('sodium_base642bin') ?\n+            sodium_base642bin($data, SODIUM_BASE64_VARIANT_ORIGINAL_NO_PADDING, '=') :\n+            Base64::decode($data);\n+    }\n+\n+    /**\n+     * Constant Time Base64-decoding (URL safe)\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function base64url_decode($data)\n+    {\n+        // return self::base64_decode(str_replace(['-', '_'], ['+', '/'], $data));\n+\n+        return function_exists('sodium_base642bin') ?\n+            sodium_base642bin($data, SODIUM_BASE64_VARIANT_URLSAFE_NO_PADDING, '=') :\n+            Base64UrlSafe::decode($data);\n+    }\n+\n+    /**\n+     * Constant Time Base64-encoding\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function base64_encode($data)\n+    {\n+        return function_exists('sodium_bin2base64') ?\n+            sodium_bin2base64($data, SODIUM_BASE64_VARIANT_ORIGINAL) :\n+            Base64::encode($data);\n+    }\n+\n+    /**\n+     * Constant Time Base64-encoding (URL safe)\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function base64url_encode($data)\n+    {\n+        // return str_replace(['+', '/'], ['-', '_'], self::base64_encode($data));\n+\n+        return function_exists('sodium_bin2base64') ?\n+            sodium_bin2base64($data, SODIUM_BASE64_VARIANT_URLSAFE) :\n+            Base64UrlSafe::encode($data);\n+    }\n+\n+    /**\n+     * Constant Time Hex Decoder\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function hex2bin($data)\n+    {\n+        return function_exists('sodium_hex2bin') ?\n+            sodium_hex2bin($data) :\n+            Hex::decode($data);\n+    }\n+\n+    /**\n+     * Constant Time Hex Encoder\n+     *\n+     * @param string $data\n+     * @return string\n+     */\n+    public static function bin2hex($data)\n+    {\n+        return function_exists('sodium_bin2hex') ?\n+            sodium_bin2hex($data) :\n+            Hex::encode($data);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/AES.php",
          "status": "added",
          "additions": 116,
          "deletions": 0,
          "patch": "@@ -0,0 +1,116 @@\n+<?php\n+\n+/**\n+ * Pure-PHP implementation of AES.\n+ *\n+ * Uses mcrypt, if available/possible, and an internal implementation, otherwise.\n+ *\n+ * PHP version 5\n+ *\n+ * NOTE: Since AES.php is (for compatibility and phpseclib-historical reasons) virtually\n+ * just a wrapper to Rijndael.php you may consider using Rijndael.php instead of\n+ * to save one include_once().\n+ *\n+ * If {@link self::setKeyLength() setKeyLength()} isn't called, it'll be calculated from\n+ * {@link self::setKey() setKey()}.  ie. if the key is 128-bits, the key length will be 128-bits.  If it's 136-bits\n+ * it'll be null-padded to 192-bits and 192 bits will be the key length until {@link self::setKey() setKey()}\n+ * is called, again, at which point, it'll be recalculated.\n+ *\n+ * Since \\phpseclib3\\Crypt\\AES extends \\phpseclib3\\Crypt\\Rijndael, some functions are available to be called that, in the context of AES, don't\n+ * make a whole lot of sense.  {@link self::setBlockLength() setBlockLength()}, for instance.  Calling that function,\n+ * however possible, won't do anything (AES has a fixed block length whereas Rijndael has a variable one).\n+ *\n+ * Here's a short example of how to use this library:\n+ * <code>\n+ * <?php\n+ *    include 'vendor/autoload.php';\n+ *\n+ *    $aes = new \\phpseclib3\\Crypt\\AES('ctr');\n+ *\n+ *    $aes->setKey('abcdefghijklmnop');\n+ *\n+ *    $size = 10 * 1024;\n+ *    $plaintext = '';\n+ *    for ($i = 0; $i < $size; $i++) {\n+ *        $plaintext.= 'a';\n+ *    }\n+ *\n+ *    echo $aes->decrypt($aes->encrypt($plaintext));\n+ * ?>\n+ * </code>\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2008 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+/**\n+ * Pure-PHP implementation of AES.\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+class AES extends Rijndael\n+{\n+    /**\n+     * Dummy function\n+     *\n+     * Since \\phpseclib3\\Crypt\\AES extends \\phpseclib3\\Crypt\\Rijndael, this function is, technically, available, but it doesn't do anything.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Rijndael::setBlockLength()\n+     * @param int $length\n+     * @throws \\BadMethodCallException anytime it's called\n+     */\n+    public function setBlockLength($length)\n+    {\n+        throw new \\BadMethodCallException('The block length cannot be set for AES.');\n+    }\n+\n+    /**\n+     * Sets the key length\n+     *\n+     * Valid key lengths are 128, 192, and 256.  Set the link to bool(false) to disable a fixed key length\n+     *\n+     * @see \\phpseclib3\\Crypt\\Rijndael:setKeyLength()\n+     * @param int $length\n+     * @throws \\LengthException if the key length isn't supported\n+     */\n+    public function setKeyLength($length)\n+    {\n+        switch ($length) {\n+            case 128:\n+            case 192:\n+            case 256:\n+                break;\n+            default:\n+                throw new \\LengthException('Key of size ' . $length . ' not supported by this algorithm. Only keys of sizes 128, 192 or 256 supported');\n+        }\n+        parent::setKeyLength($length);\n+    }\n+\n+    /**\n+     * Sets the key.\n+     *\n+     * Rijndael supports five different key lengths, AES only supports three.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Rijndael:setKey()\n+     * @see setKeyLength()\n+     * @param string $key\n+     * @throws \\LengthException if the key length isn't supported\n+     */\n+    public function setKey($key)\n+    {\n+        switch (strlen($key)) {\n+            case 16:\n+            case 24:\n+            case 32:\n+                break;\n+            default:\n+                throw new \\LengthException('Key of size ' . strlen($key) . ' not supported by this algorithm. Only keys of sizes 16, 24 or 32 supported');\n+        }\n+\n+        parent::setKey($key);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Blowfish.php",
          "status": "added",
          "additions": 918,
          "deletions": 0,
          "patch": "@@ -0,0 +1,918 @@\n+<?php\n+\n+/**\n+ * Pure-PHP implementation of Blowfish.\n+ *\n+ * Uses mcrypt, if available, and an internal implementation, otherwise.\n+ *\n+ * PHP version 5\n+ *\n+ * Useful resources are as follows:\n+ *\n+ *  - {@link http://en.wikipedia.org/wiki/Blowfish_(cipher) Wikipedia description of Blowfish}\n+ *\n+ * # An overview of bcrypt vs Blowfish\n+ *\n+ * OpenSSH private keys use a customized version of bcrypt. Specifically, instead of\n+ * encrypting OrpheanBeholderScryDoubt 64 times OpenSSH's bcrypt variant encrypts\n+ * OxychromaticBlowfishSwatDynamite 64 times. so we can't use crypt().\n+ *\n+ * bcrypt is basically Blowfish but instead of performing the key expansion once it performs\n+ * the expansion 129 times for each round, with the first key expansion interleaving the salt\n+ * and password. This renders OpenSSL unusable and forces us to use a pure-PHP implementation\n+ * of blowfish.\n+ *\n+ * # phpseclib's four different _encryptBlock() implementations\n+ *\n+ * When using Blowfish as an encryption algorithm, _encryptBlock() is called 9 + 512 +\n+ * (the number of blocks in the plaintext) times.\n+ *\n+ * Each of the first 9 calls to _encryptBlock() modify the P-array. Each of the next 512\n+ * calls modify the S-boxes. The remaining _encryptBlock() calls operate on the plaintext to\n+ * produce the ciphertext. In the pure-PHP implementation of Blowfish these remaining\n+ * _encryptBlock() calls are highly optimized through the use of eval(). Among other things,\n+ * P-array lookups are eliminated by hard-coding the key-dependent P-array values, and thus we\n+ * have explained 2 of the 4 different _encryptBlock() implementations.\n+ *\n+ * With bcrypt things are a bit different. _encryptBlock() is called 1,079,296 times,\n+ * assuming 16 rounds (which is what OpenSSH's bcrypt defaults to). The eval()-optimized\n+ * _encryptBlock() isn't as beneficial because the P-array values are not constant. Well, they\n+ * are constant, but only for, at most, 777 _encryptBlock() calls, which is equivalent to ~6KB\n+ * of data. The average length of back to back _encryptBlock() calls with a fixed P-array is\n+ * 514.12, which is ~4KB of data. Creating an eval()-optimized _encryptBlock() has an upfront\n+ * cost, which is CPU dependent and is probably not going to be worth it for just ~4KB of\n+ * data. Conseqeuently, bcrypt does not benefit from the eval()-optimized _encryptBlock().\n+ *\n+ * The regular _encryptBlock() does unpack() and pack() on every call, as well, and that can\n+ * begin to add up after one million function calls.\n+ *\n+ * In theory, one might think that it might be beneficial to rewrite all block ciphers so\n+ * that, instead of passing strings to _encryptBlock(), you convert the string to an array of\n+ * integers and then pass successive subarrays of that array to _encryptBlock. This, however,\n+ * kills PHP's memory use. Like let's say you have a 1MB long string. After doing\n+ * $in = str_repeat('a', 1024 * 1024); PHP's memory utilization jumps up by ~1MB. After doing\n+ * $blocks = str_split($in, 4); it jumps up by an additional ~16MB. After\n+ * $blocks = array_map(fn($x) => unpack('N*', $x), $blocks); it jumps up by an additional\n+ * ~90MB, yielding a 106x increase in memory usage. Consequently, it bcrypt calls a different\n+ * _encryptBlock() then the regular Blowfish does. That said, the Blowfish _encryptBlock() is\n+ * basically just a thin wrapper around the bcrypt _encryptBlock(), so there's that.\n+ *\n+ * This explains 3 of the 4 _encryptBlock() implementations. the last _encryptBlock()\n+ * implementation can best be understood by doing Ctrl + F and searching for where\n+ * self::$use_reg_intval is defined.\n+ *\n+ * # phpseclib's three different _setupKey() implementations\n+ *\n+ * Every bcrypt round is the equivalent of encrypting 512KB of data. Since OpenSSH uses 16\n+ * rounds by default that's ~8MB of data that's essentially being encrypted whenever\n+ * you use bcrypt. That's a lot of data, however, bcrypt operates within tighter constraints\n+ * than regular Blowfish, so we can use that to our advantage. In particular, whereas Blowfish\n+ * supports variable length keys, in bcrypt, the initial \"key\" is the sha512 hash of the\n+ * password. sha512 hashes are 512 bits or 64 bytes long and thus the bcrypt keys are of a\n+ * fixed length whereas Blowfish keys are not of a fixed length.\n+ *\n+ * bcrypt actually has two different key expansion steps. The first one (expandstate) is\n+ * constantly XOR'ing every _encryptBlock() parameter against the salt prior _encryptBlock()'s\n+ * being called. The second one (expand0state) is more similar to Blowfish's _setupKey()\n+ * but it can still use the fixed length key optimization discussed above and can do away with\n+ * the pack() / unpack() calls.\n+ *\n+ * I suppose _setupKey() could be made to be a thin wrapper around expandstate() but idk it's\n+ * just a lot of work for very marginal benefits as _setupKey() is only called once for\n+ * regular Blowfish vs the 128 times it's called --per round-- with bcrypt.\n+ *\n+ * # blowfish + bcrypt in the same class\n+ *\n+ * Altho there's a lot of Blowfish code that bcrypt doesn't re-use, bcrypt does re-use the\n+ * initial S-boxes, the initial P-array and the int-only _encryptBlock() implementation.\n+ *\n+ * # Credit\n+ *\n+ * phpseclib's bcrypt implementation is based losely off of OpenSSH's implementation:\n+ *\n+ * https://github.com/openssh/openssh-portable/blob/master/openbsd-compat/bcrypt_pbkdf.c\n+ *\n+ * Here's a short example of how to use this library:\n+ * <code>\n+ * <?php\n+ *    include 'vendor/autoload.php';\n+ *\n+ *    $blowfish = new \\phpseclib3\\Crypt\\Blowfish('ctr');\n+ *\n+ *    $blowfish->setKey('12345678901234567890123456789012');\n+ *\n+ *    $plaintext = str_repeat('a', 1024);\n+ *\n+ *    echo $blowfish->decrypt($blowfish->encrypt($plaintext));\n+ * ?>\n+ * </code>\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @author    Hans-Juergen Petrich <petrich@tronic-media.com>\n+ * @copyright 2007 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+use phpseclib3\\Crypt\\Common\\BlockCipher;\n+\n+/**\n+ * Pure-PHP implementation of Blowfish.\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ * @author  Hans-Juergen Petrich <petrich@tronic-media.com>\n+ */\n+class Blowfish extends BlockCipher\n+{\n+    /**\n+     * Block Length of the cipher\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::block_size\n+     * @var int\n+     */\n+    protected $block_size = 8;\n+\n+    /**\n+     * The mcrypt specific name of the cipher\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::cipher_name_mcrypt\n+     * @var string\n+     */\n+    protected $cipher_name_mcrypt = 'blowfish';\n+\n+    /**\n+     * Optimizing value while CFB-encrypting\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::cfb_init_len\n+     * @var int\n+     */\n+    protected $cfb_init_len = 500;\n+\n+    /**\n+     * The fixed subkeys boxes ($sbox0 - $sbox3) with 256 entries each\n+     *\n+     * S-Box 0\n+     *\n+     * @var    array\n+     */\n+    private static $sbox0 = [\n+        0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99,\n+        0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e,\n+        0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n+        0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e, 0x6c9e0e8b, 0xb01e8a3e,\n+        0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60, 0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\n+        0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n+        0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c, 0x7a325381, 0x28958677,\n+        0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193, 0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032,\n+        0xef845d5d, 0xe98575b1, 0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n+        0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\n+        0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3, 0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98,\n+        0xa1f1651d, 0x39af0176, 0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n+        0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d,\n+        0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b, 0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7,\n+        0xe3fe501a, 0xb6794c3b, 0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n+        0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c, 0xcc814544, 0xaf5ebd09,\n+        0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3, 0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb,\n+        0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n+        0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760, 0x53317b48, 0x3e00df82,\n+        0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db, 0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\n+        0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n+        0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33, 0x62fb1341, 0xcee4c6e8,\n+        0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4, 0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0,\n+        0xd08ed1d0, 0xafc725e0, 0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n+        0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\n+        0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299, 0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9,\n+        0x165fa266, 0x80957705, 0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n+        0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af,\n+        0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa, 0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5,\n+        0x83260376, 0x6295cfa9, 0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n+        0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f, 0xf296ec6b, 0x2a0dd915,\n+        0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664, 0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a\n+    ];\n+\n+    /**\n+     * S-Box 1\n+     *\n+     * @var    array\n+     */\n+    private static $sbox1 = [\n+        0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n+        0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e,\n+        0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\n+        0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n+        0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8,\n+        0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff, 0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,\n+        0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n+        0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\n+        0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf, 0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af,\n+        0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n+        0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2,\n+        0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,\n+        0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n+        0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3,\n+        0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,\n+        0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n+        0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28,\n+        0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\n+        0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n+        0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e,\n+        0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50, 0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7,\n+        0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n+        0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\n+        0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128, 0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,\n+        0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n+        0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250,\n+        0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,\n+        0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n+        0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e,\n+        0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,\n+        0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n+        0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7\n+    ];\n+\n+    /**\n+     * S-Box 2\n+     *\n+     * @var    array\n+     */\n+    private static $sbox2 = [\n+        0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934, 0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\n+        0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n+        0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,\n+        0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a, 0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb,\n+        0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n+        0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\n+        0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb,\n+        0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n+        0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,\n+        0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc,\n+        0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n+        0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,\n+        0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728,\n+        0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n+        0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,\n+        0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804, 0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\n+        0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n+        0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,\n+        0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350, 0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9,\n+        0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n+        0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\n+        0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61,\n+        0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n+        0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c,\n+        0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633,\n+        0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n+        0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027,\n+        0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62,\n+        0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n+        0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc,\n+        0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\n+        0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0\n+    ];\n+\n+    /**\n+     * S-Box 3\n+     *\n+     * @var    array\n+     */\n+    private static $sbox3 = [\n+        0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742, 0xd3822740, 0x99bc9bbe,\n+        0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b, 0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4,\n+        0x5748ab2f, 0xbc946e79, 0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n+        0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\n+        0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4, 0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6,\n+        0x2826a2f9, 0xa73a3ae1, 0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n+        0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51,\n+        0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28, 0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c,\n+        0xe029ac71, 0xe019a5e6, 0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n+        0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba, 0x03a16125, 0x0564f0bd,\n+        0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a, 0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319,\n+        0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n+        0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce, 0x5121ce64, 0x774fbe32,\n+        0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680, 0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\n+        0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n+        0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb, 0x8d6612ae, 0xbf3c6f47,\n+        0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370, 0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d,\n+        0x4040cb08, 0x4eb4e2cc, 0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n+        0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\n+        0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9, 0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7,\n+        0x1a908749, 0xd44fbd9a, 0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n+        0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525,\n+        0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1, 0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442,\n+        0xe0ec6e0e, 0x1698db3b, 0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n+        0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e, 0xe60b6f47, 0x0fe3f11d,\n+        0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f, 0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299,\n+        0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n+        0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a, 0x45e1d006, 0xc3f27b9a,\n+        0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6, 0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\n+        0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n+        0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c, 0x01c36ae4, 0xd6ebe1f9,\n+        0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f, 0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\n+    ];\n+\n+    /**\n+     * P-Array consists of 18 32-bit subkeys\n+     *\n+     * @var array\n+     */\n+    private static $parray = [\n+        0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\n+        0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n+        0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b\n+    ];\n+\n+    /**\n+     * The BCTX-working Array\n+     *\n+     * Holds the expanded key [p] and the key-depended s-boxes [sb]\n+     *\n+     * @var array\n+     */\n+    private $bctx;\n+\n+    /**\n+     * Holds the last used key\n+     *\n+     * @var array\n+     */\n+    private $kl;\n+\n+    /**\n+     * The Key Length (in bytes)\n+     * {@internal The max value is 256 / 8 = 32, the min value is 128 / 8 = 16.  Exists in conjunction with $Nk\n+     *    because the encryption / decryption / key schedule creation requires this number and not $key_length.  We could\n+     *    derive this from $key_length or vice versa, but that'd mean we'd have to do multiple shift operations, so in lieu\n+     *    of that, we'll just precompute it once.}\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::setKeyLength()\n+     * @var int\n+     */\n+    protected $key_length = 16;\n+\n+    /**\n+     * Default Constructor.\n+     *\n+     * @param string $mode\n+     * @throws \\InvalidArgumentException if an invalid / unsupported mode is provided\n+     */\n+    public function __construct($mode)\n+    {\n+        parent::__construct($mode);\n+\n+        if ($this->mode == self::MODE_STREAM) {\n+            throw new \\InvalidArgumentException('Block ciphers cannot be ran in stream mode');\n+        }\n+    }\n+\n+    /**\n+     * Sets the key length.\n+     *\n+     * Key lengths can be between 32 and 448 bits.\n+     *\n+     * @param int $length\n+     */\n+    public function setKeyLength($length)\n+    {\n+        if ($length < 32 || $length > 448) {\n+                throw new \\LengthException('Key size of ' . $length . ' bits is not supported by this algorithm. Only keys of sizes between 32 and 448 bits are supported');\n+        }\n+\n+        $this->key_length = $length >> 3;\n+\n+        parent::setKeyLength($length);\n+    }\n+\n+    /**\n+     * Test for engine validity\n+     *\n+     * This is mainly just a wrapper to set things up for \\phpseclib3\\Crypt\\Common\\SymmetricKey::isValidEngine()\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::isValidEngine()\n+     * @param int $engine\n+     * @return bool\n+     */\n+    protected function isValidEngineHelper($engine)\n+    {\n+        if ($engine == self::ENGINE_OPENSSL) {\n+            if ($this->key_length < 16) {\n+                return false;\n+            }\n+            // quoting https://www.openssl.org/news/openssl-3.0-notes.html, OpenSSL 3.0.1\n+            // \"Moved all variations of the EVP ciphers CAST5, BF, IDEA, SEED, RC2, RC4, RC5, and DES to the legacy provider\"\n+            // in theory openssl_get_cipher_methods() should catch this but, on GitHub Actions, at least, it does not\n+            if (defined('OPENSSL_VERSION_TEXT') && version_compare(preg_replace('#OpenSSL (\\d+\\.\\d+\\.\\d+) .*#', '$1', OPENSSL_VERSION_TEXT), '3.0.1', '>=')) {\n+                return false;\n+            }\n+            $this->cipher_name_openssl_ecb = 'bf-ecb';\n+            $this->cipher_name_openssl = 'bf-' . $this->openssl_translate_mode();\n+        }\n+\n+        return parent::isValidEngineHelper($engine);\n+    }\n+\n+    /**\n+     * Setup the key (expansion)\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::_setupKey()\n+     */\n+    protected function setupKey()\n+    {\n+        if (isset($this->kl['key']) && $this->key === $this->kl['key']) {\n+            // already expanded\n+            return;\n+        }\n+        $this->kl = ['key' => $this->key];\n+\n+        /* key-expanding p[] and S-Box building sb[] */\n+        $this->bctx = [\n+            'p'  => [],\n+            'sb' => [\n+                self::$sbox0,\n+                self::$sbox1,\n+                self::$sbox2,\n+                self::$sbox3\n+            ]\n+        ];\n+\n+        // unpack binary string in unsigned chars\n+        $key  = array_values(unpack('C*', $this->key));\n+        $keyl = count($key);\n+        // with bcrypt $keyl will always be 16 (because the key is the sha512 of the key you provide)\n+        for ($j = 0, $i = 0; $i < 18; ++$i) {\n+            // xor P1 with the first 32-bits of the key, xor P2 with the second 32-bits ...\n+            for ($data = 0, $k = 0; $k < 4; ++$k) {\n+                $data = ($data << 8) | $key[$j];\n+                if (++$j >= $keyl) {\n+                    $j = 0;\n+                }\n+            }\n+            $this->bctx['p'][] = self::$parray[$i] ^ intval($data);\n+        }\n+\n+        // encrypt the zero-string, replace P1 and P2 with the encrypted data,\n+        // encrypt P3 and P4 with the new P1 and P2, do it with all P-array and subkeys\n+        $data = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n+        for ($i = 0; $i < 18; $i += 2) {\n+            list($l, $r) = array_values(unpack('N*', $data = $this->encryptBlock($data)));\n+            $this->bctx['p'][$i    ] = $l;\n+            $this->bctx['p'][$i + 1] = $r;\n+        }\n+        for ($i = 0; $i < 4; ++$i) {\n+            for ($j = 0; $j < 256; $j += 2) {\n+                list($l, $r) = array_values(unpack('N*', $data = $this->encryptBlock($data)));\n+                $this->bctx['sb'][$i][$j    ] = $l;\n+                $this->bctx['sb'][$i][$j + 1] = $r;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Initialize Static Variables\n+     */\n+    protected static function initialize_static_variables()\n+    {\n+        if (is_float(self::$sbox2[0])) {\n+            self::$sbox0 = array_map('intval', self::$sbox0);\n+            self::$sbox1 = array_map('intval', self::$sbox1);\n+            self::$sbox2 = array_map('intval', self::$sbox2);\n+            self::$sbox3 = array_map('intval', self::$sbox3);\n+            self::$parray = array_map('intval', self::$parray);\n+        }\n+\n+        parent::initialize_static_variables();\n+    }\n+\n+    /**\n+     * bcrypt\n+     *\n+     * @param string $sha2pass\n+     * @param string $sha2salt\n+     * @access private\n+     * @return string\n+     */\n+    private static function bcrypt_hash($sha2pass, $sha2salt)\n+    {\n+        $p = self::$parray;\n+        $sbox0 = self::$sbox0;\n+        $sbox1 = self::$sbox1;\n+        $sbox2 = self::$sbox2;\n+        $sbox3 = self::$sbox3;\n+\n+        $cdata = array_values(unpack('N*', 'OxychromaticBlowfishSwatDynamite'));\n+        $sha2pass = array_values(unpack('N*', $sha2pass));\n+        $sha2salt = array_values(unpack('N*', $sha2salt));\n+\n+        self::expandstate($sha2salt, $sha2pass, $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 0; $i < 64; $i++) {\n+            self::expand0state($sha2salt, $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+            self::expand0state($sha2pass, $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        for ($i = 0; $i < 64; $i++) {\n+            for ($j = 0; $j < 8; $j += 2) { // count($cdata) == 8\n+                list($cdata[$j], $cdata[$j + 1]) = self::encryptBlockHelperFast($cdata[$j], $cdata[$j + 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+            }\n+        }\n+\n+        return pack('L*', ...$cdata);\n+    }\n+\n+    /**\n+     * Performs OpenSSH-style bcrypt\n+     *\n+     * @param string $pass\n+     * @param string $salt\n+     * @param int $keylen\n+     * @param int $rounds\n+     * @access public\n+     * @return string\n+     */\n+    public static function bcrypt_pbkdf($pass, $salt, $keylen, $rounds)\n+    {\n+        self::initialize_static_variables();\n+\n+        if (PHP_INT_SIZE == 4) {\n+            throw new \\RuntimeException('bcrypt is far too slow to be practical on 32-bit versions of PHP');\n+        }\n+\n+        $sha2pass = hash('sha512', $pass, true);\n+        $results = [];\n+        $count = 1;\n+        while (32 * count($results) < $keylen) {\n+            $countsalt = $salt . pack('N', $count++);\n+            $sha2salt = hash('sha512', $countsalt, true);\n+            $out = $tmpout = self::bcrypt_hash($sha2pass, $sha2salt);\n+            for ($i = 1; $i < $rounds; $i++) {\n+                $sha2salt = hash('sha512', $tmpout, true);\n+                $tmpout = self::bcrypt_hash($sha2pass, $sha2salt);\n+                $out ^= $tmpout;\n+            }\n+            $results[] = $out;\n+        }\n+        $output = '';\n+        for ($i = 0; $i < 32; $i++) {\n+            foreach ($results as $result) {\n+                $output .= $result[$i];\n+            }\n+        }\n+        return substr($output, 0, $keylen);\n+    }\n+\n+    /**\n+     * Key expansion without salt\n+     *\n+     * @access private\n+     * @param int[] $key\n+     * @param int[] $sbox0\n+     * @param int[] $sbox1\n+     * @param int[] $sbox2\n+     * @param int[] $sbox3\n+     * @param int[] $p\n+     * @see self::_bcrypt_hash()\n+     */\n+    private static function expand0state(array $key, array &$sbox0, array &$sbox1, array &$sbox2, array &$sbox3, array &$p)\n+    {\n+        // expand0state is basically the same thing as this:\n+        //return self::expandstate(array_fill(0, 16, 0), $key);\n+        // but this separate function eliminates a bunch of XORs and array lookups\n+\n+        $p = [\n+            $p[0] ^ $key[0],\n+            $p[1] ^ $key[1],\n+            $p[2] ^ $key[2],\n+            $p[3] ^ $key[3],\n+            $p[4] ^ $key[4],\n+            $p[5] ^ $key[5],\n+            $p[6] ^ $key[6],\n+            $p[7] ^ $key[7],\n+            $p[8] ^ $key[8],\n+            $p[9] ^ $key[9],\n+            $p[10] ^ $key[10],\n+            $p[11] ^ $key[11],\n+            $p[12] ^ $key[12],\n+            $p[13] ^ $key[13],\n+            $p[14] ^ $key[14],\n+            $p[15] ^ $key[15],\n+            $p[16] ^ $key[0],\n+            $p[17] ^ $key[1]\n+        ];\n+\n+        // @codingStandardsIgnoreStart\n+        list( $p[0],  $p[1]) = self::encryptBlockHelperFast(     0,      0, $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[2],  $p[3]) = self::encryptBlockHelperFast($p[ 0], $p[ 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[4],  $p[5]) = self::encryptBlockHelperFast($p[ 2], $p[ 3], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[6],  $p[7]) = self::encryptBlockHelperFast($p[ 4], $p[ 5], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[8],  $p[9]) = self::encryptBlockHelperFast($p[ 6], $p[ 7], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[10], $p[11]) = self::encryptBlockHelperFast($p[ 8], $p[ 9], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[12], $p[13]) = self::encryptBlockHelperFast($p[10], $p[11], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[14], $p[15]) = self::encryptBlockHelperFast($p[12], $p[13], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[16], $p[17]) = self::encryptBlockHelperFast($p[14], $p[15], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        // @codingStandardsIgnoreEnd\n+\n+        list($sbox0[0], $sbox0[1]) = self::encryptBlockHelperFast($p[16], $p[17], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2; $i < 256; $i += 2) {\n+            list($sbox0[$i], $sbox0[$i + 1]) = self::encryptBlockHelperFast($sbox0[$i - 2], $sbox0[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox1[0], $sbox1[1]) = self::encryptBlockHelperFast($sbox0[254], $sbox0[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2; $i < 256; $i += 2) {\n+            list($sbox1[$i], $sbox1[$i + 1]) = self::encryptBlockHelperFast($sbox1[$i - 2], $sbox1[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox2[0], $sbox2[1]) = self::encryptBlockHelperFast($sbox1[254], $sbox1[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2; $i < 256; $i += 2) {\n+            list($sbox2[$i], $sbox2[$i + 1]) = self::encryptBlockHelperFast($sbox2[$i - 2], $sbox2[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox3[0], $sbox3[1]) = self::encryptBlockHelperFast($sbox2[254], $sbox2[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2; $i < 256; $i += 2) {\n+            list($sbox3[$i], $sbox3[$i + 1]) = self::encryptBlockHelperFast($sbox3[$i - 2], $sbox3[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+    }\n+\n+    /**\n+     * Key expansion with salt\n+     *\n+     * @access private\n+     * @param int[] $data\n+     * @param int[] $key\n+     * @param int[] $sbox0\n+     * @param int[] $sbox1\n+     * @param int[] $sbox2\n+     * @param int[] $sbox3\n+     * @param int[] $p\n+     * @see self::_bcrypt_hash()\n+     */\n+    private static function expandstate(array $data, array $key, array &$sbox0, array &$sbox1, array &$sbox2, array &$sbox3, array &$p)\n+    {\n+        $p = [\n+            $p[0] ^ $key[0],\n+            $p[1] ^ $key[1],\n+            $p[2] ^ $key[2],\n+            $p[3] ^ $key[3],\n+            $p[4] ^ $key[4],\n+            $p[5] ^ $key[5],\n+            $p[6] ^ $key[6],\n+            $p[7] ^ $key[7],\n+            $p[8] ^ $key[8],\n+            $p[9] ^ $key[9],\n+            $p[10] ^ $key[10],\n+            $p[11] ^ $key[11],\n+            $p[12] ^ $key[12],\n+            $p[13] ^ $key[13],\n+            $p[14] ^ $key[14],\n+            $p[15] ^ $key[15],\n+            $p[16] ^ $key[0],\n+            $p[17] ^ $key[1]\n+        ];\n+\n+        // @codingStandardsIgnoreStart\n+        list( $p[0],  $p[1]) = self::encryptBlockHelperFast($data[ 0]         , $data[ 1]         , $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[2],  $p[3]) = self::encryptBlockHelperFast($data[ 2] ^ $p[ 0], $data[ 3] ^ $p[ 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[4],  $p[5]) = self::encryptBlockHelperFast($data[ 4] ^ $p[ 2], $data[ 5] ^ $p[ 3], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[6],  $p[7]) = self::encryptBlockHelperFast($data[ 6] ^ $p[ 4], $data[ 7] ^ $p[ 5], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list( $p[8],  $p[9]) = self::encryptBlockHelperFast($data[ 8] ^ $p[ 6], $data[ 9] ^ $p[ 7], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[10], $p[11]) = self::encryptBlockHelperFast($data[10] ^ $p[ 8], $data[11] ^ $p[ 9], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[12], $p[13]) = self::encryptBlockHelperFast($data[12] ^ $p[10], $data[13] ^ $p[11], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[14], $p[15]) = self::encryptBlockHelperFast($data[14] ^ $p[12], $data[15] ^ $p[13], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        list($p[16], $p[17]) = self::encryptBlockHelperFast($data[ 0] ^ $p[14], $data[ 1] ^ $p[15], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        // @codingStandardsIgnoreEnd\n+\n+        list($sbox0[0], $sbox0[1]) = self::encryptBlockHelperFast($data[2] ^ $p[16], $data[3] ^ $p[17], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2, $j = 4; $i < 256; $i += 2, $j = ($j + 2) % 16) { // instead of 16 maybe count($data) would be better?\n+            list($sbox0[$i], $sbox0[$i + 1]) = self::encryptBlockHelperFast($data[$j] ^ $sbox0[$i - 2], $data[$j + 1] ^ $sbox0[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox1[0], $sbox1[1]) = self::encryptBlockHelperFast($data[2] ^ $sbox0[254], $data[3] ^ $sbox0[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2, $j = 4; $i < 256; $i += 2, $j = ($j + 2) % 16) {\n+            list($sbox1[$i], $sbox1[$i + 1]) = self::encryptBlockHelperFast($data[$j] ^ $sbox1[$i - 2], $data[$j + 1] ^ $sbox1[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox2[0], $sbox2[1]) = self::encryptBlockHelperFast($data[2] ^ $sbox1[254], $data[3] ^ $sbox1[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2, $j = 4; $i < 256; $i += 2, $j = ($j + 2) % 16) {\n+            list($sbox2[$i], $sbox2[$i + 1]) = self::encryptBlockHelperFast($data[$j] ^ $sbox2[$i - 2], $data[$j + 1] ^ $sbox2[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+\n+        list($sbox3[0], $sbox3[1]) = self::encryptBlockHelperFast($data[2] ^ $sbox2[254], $data[3] ^ $sbox2[255], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        for ($i = 2, $j = 4; $i < 256; $i += 2, $j = ($j + 2) % 16) {\n+            list($sbox3[$i], $sbox3[$i + 1]) = self::encryptBlockHelperFast($data[$j] ^ $sbox3[$i - 2], $data[$j + 1] ^ $sbox3[$i - 1], $sbox0, $sbox1, $sbox2, $sbox3, $p);\n+        }\n+    }\n+\n+    /**\n+     * Encrypts a block\n+     *\n+     * @param string $in\n+     * @return string\n+     */\n+    protected function encryptBlock($in)\n+    {\n+        $p = $this->bctx['p'];\n+        // extract($this->bctx['sb'], EXTR_PREFIX_ALL, 'sb'); // slower\n+        $sb_0 = $this->bctx['sb'][0];\n+        $sb_1 = $this->bctx['sb'][1];\n+        $sb_2 = $this->bctx['sb'][2];\n+        $sb_3 = $this->bctx['sb'][3];\n+\n+        $in = unpack('N*', $in);\n+        $l = $in[1];\n+        $r = $in[2];\n+\n+        list($r, $l) = PHP_INT_SIZE == 4 ?\n+            self::encryptBlockHelperSlow($l, $r, $sb_0, $sb_1, $sb_2, $sb_3, $p) :\n+            self::encryptBlockHelperFast($l, $r, $sb_0, $sb_1, $sb_2, $sb_3, $p);\n+\n+        return pack(\"N*\", $r, $l);\n+    }\n+\n+    /**\n+     * Fast helper function for block encryption\n+     *\n+     * @access private\n+     * @param int $x0\n+     * @param int $x1\n+     * @param int[] $sbox0\n+     * @param int[] $sbox1\n+     * @param int[] $sbox2\n+     * @param int[] $sbox3\n+     * @param int[] $p\n+     * @return int[]\n+     */\n+    private static function encryptBlockHelperFast($x0, $x1, array $sbox0, array $sbox1, array $sbox2, array $sbox3, array $p)\n+    {\n+        $x0 ^= $p[0];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[1];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[2];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[3];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[4];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[5];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[6];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[7];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[8];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[9];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[10];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[11];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[12];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[13];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[14];\n+        $x1 ^= ((($sbox0[($x0 & 0xFF000000) >> 24] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[15];\n+        $x0 ^= ((($sbox0[($x1 & 0xFF000000) >> 24] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[16];\n+\n+        return [$x1 & 0xFFFFFFFF ^ $p[17], $x0 & 0xFFFFFFFF];\n+    }\n+\n+    /**\n+     * Slow helper function for block encryption\n+     *\n+     * @access private\n+     * @param int $x0\n+     * @param int $x1\n+     * @param int[] $sbox0\n+     * @param int[] $sbox1\n+     * @param int[] $sbox2\n+     * @param int[] $sbox3\n+     * @param int[] $p\n+     * @return int[]\n+     */\n+    private static function encryptBlockHelperSlow($x0, $x1, array $sbox0, array $sbox1, array $sbox2, array $sbox3, array $p)\n+    {\n+        // -16777216 == intval(0xFF000000) on 32-bit PHP installs\n+        $x0 ^= $p[0];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[1];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[2];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[3];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[4];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[5];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[6];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[7];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[8];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[9];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[10];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[11];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[12];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[13];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[14];\n+        $x1 ^= self::safe_intval((self::safe_intval($sbox0[(($x0 & -16777216) >> 24) & 0xFF] + $sbox1[($x0 & 0xFF0000) >> 16]) ^ $sbox2[($x0 & 0xFF00) >> 8]) + $sbox3[$x0 & 0xFF]) ^ $p[15];\n+        $x0 ^= self::safe_intval((self::safe_intval($sbox0[(($x1 & -16777216) >> 24) & 0xFF] + $sbox1[($x1 & 0xFF0000) >> 16]) ^ $sbox2[($x1 & 0xFF00) >> 8]) + $sbox3[$x1 & 0xFF]) ^ $p[16];\n+\n+        return [$x1 ^ $p[17], $x0];\n+    }\n+\n+    /**\n+     * Decrypts a block\n+     *\n+     * @param string $in\n+     * @return string\n+     */\n+    protected function decryptBlock($in)\n+    {\n+        $p = $this->bctx['p'];\n+        $sb_0 = $this->bctx['sb'][0];\n+        $sb_1 = $this->bctx['sb'][1];\n+        $sb_2 = $this->bctx['sb'][2];\n+        $sb_3 = $this->bctx['sb'][3];\n+\n+        $in = unpack('N*', $in);\n+        $l = $in[1];\n+        $r = $in[2];\n+\n+        for ($i = 17; $i > 2; $i -= 2) {\n+            $l ^= $p[$i];\n+            $r ^= self::safe_intval((self::safe_intval($sb_0[$l >> 24 & 0xff] + $sb_1[$l >> 16 & 0xff]) ^\n+                  $sb_2[$l >>  8 & 0xff]) +\n+                  $sb_3[$l       & 0xff]);\n+\n+            $r ^= $p[$i - 1];\n+            $l ^= self::safe_intval((self::safe_intval($sb_0[$r >> 24 & 0xff] + $sb_1[$r >> 16 & 0xff]) ^\n+                  $sb_2[$r >>  8 & 0xff]) +\n+                  $sb_3[$r       & 0xff]);\n+        }\n+        return pack('N*', $r ^ $p[0], $l ^ $p[1]);\n+    }\n+\n+    /**\n+     * Setup the performance-optimized function for de/encrypt()\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::_setupInlineCrypt()\n+     */\n+    protected function setupInlineCrypt()\n+    {\n+        $p = $this->bctx['p'];\n+        $init_crypt = '\n+            static $sb_0, $sb_1, $sb_2, $sb_3;\n+            if (!$sb_0) {\n+                $sb_0 = $this->bctx[\"sb\"][0];\n+                $sb_1 = $this->bctx[\"sb\"][1];\n+                $sb_2 = $this->bctx[\"sb\"][2];\n+                $sb_3 = $this->bctx[\"sb\"][3];\n+            }\n+        ';\n+\n+        $safeint = self::safe_intval_inline();\n+\n+        // Generating encrypt code:\n+        $encrypt_block = '\n+            $in = unpack(\"N*\", $in);\n+            $l = $in[1];\n+            $r = $in[2];\n+        ';\n+        for ($i = 0; $i < 16; $i += 2) {\n+            $encrypt_block .= '\n+                $l^= ' . $p[$i] . ';\n+                $r^= ' . sprintf($safeint, '(' . sprintf($safeint, '$sb_0[$l >> 24 & 0xff] + $sb_1[$l >> 16 & 0xff]') . ' ^\n+                      $sb_2[$l >>  8 & 0xff]) +\n+                      $sb_3[$l       & 0xff]') . ';\n+\n+                $r^= ' . $p[$i + 1] . ';\n+                $l^= ' . sprintf($safeint, '(' . sprintf($safeint, '$sb_0[$r >> 24 & 0xff] + $sb_1[$r >> 16 & 0xff]') . '  ^\n+                      $sb_2[$r >>  8 & 0xff]) +\n+                      $sb_3[$r       & 0xff]') . ';\n+            ';\n+        }\n+        $encrypt_block .= '\n+            $in = pack(\"N*\",\n+                $r ^ ' . $p[17] . ',\n+                $l ^ ' . $p[16] . '\n+            );\n+        ';\n+         // Generating decrypt code:\n+        $decrypt_block = '\n+            $in = unpack(\"N*\", $in);\n+            $l = $in[1];\n+            $r = $in[2];\n+        ';\n+\n+        for ($i = 17; $i > 2; $i -= 2) {\n+            $decrypt_block .= '\n+                $l^= ' . $p[$i] . ';\n+                $r^= ' . sprintf($safeint, '(' . sprintf($safeint, '$sb_0[$l >> 24 & 0xff] + $sb_1[$l >> 16 & 0xff]') . ' ^\n+                      $sb_2[$l >>  8 & 0xff]) +\n+                      $sb_3[$l       & 0xff]') . ';\n+\n+                $r^= ' . $p[$i - 1] . ';\n+                $l^= ' . sprintf($safeint, '(' . sprintf($safeint, '$sb_0[$r >> 24 & 0xff] + $sb_1[$r >> 16 & 0xff]') . ' ^\n+                      $sb_2[$r >>  8 & 0xff]) +\n+                      $sb_3[$r       & 0xff]') . ';\n+            ';\n+        }\n+\n+        $decrypt_block .= '\n+            $in = pack(\"N*\",\n+                $r ^ ' . $p[0] . ',\n+                $l ^ ' . $p[1] . '\n+            );\n+        ';\n+\n+        $this->inline_crypt = $this->createInlineCryptFunction(\n+            [\n+               'init_crypt'    => $init_crypt,\n+               'init_encrypt'  => '',\n+               'init_decrypt'  => '',\n+               'encrypt_block' => $encrypt_block,\n+               'decrypt_block' => $decrypt_block\n+            ]\n+        );\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/ChaCha20.php",
          "status": "added",
          "additions": 799,
          "deletions": 0,
          "patch": "@@ -0,0 +1,799 @@\n+<?php\n+\n+/**\n+ * Pure-PHP implementation of ChaCha20.\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2019 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+use phpseclib3\\Exception\\BadDecryptionException;\n+use phpseclib3\\Exception\\InsufficientSetupException;\n+\n+/**\n+ * Pure-PHP implementation of ChaCha20.\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+class ChaCha20 extends Salsa20\n+{\n+    /**\n+     * The OpenSSL specific name of the cipher\n+     *\n+     * @var string\n+     */\n+    protected $cipher_name_openssl = 'chacha20';\n+\n+    /**\n+     * Test for engine validity\n+     *\n+     * This is mainly just a wrapper to set things up for \\phpseclib3\\Crypt\\Common\\SymmetricKey::isValidEngine()\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::__construct()\n+     * @param int $engine\n+     * @return bool\n+     */\n+    protected function isValidEngineHelper($engine)\n+    {\n+        switch ($engine) {\n+            case self::ENGINE_LIBSODIUM:\n+                // PHP 7.2.0 (30 Nov 2017) added support for libsodium\n+\n+                // we could probably make it so that if $this->counter == 0 then the first block would be done with either OpenSSL\n+                // or PHP and then subsequent blocks would then be done with libsodium but idk - it's not a high priority atm\n+\n+                // we could also make it so that if $this->counter == 0 and $this->continuousBuffer then do the first string\n+                // with libsodium and subsequent strings with openssl or pure-PHP but again not a high priority\n+                return function_exists('sodium_crypto_aead_chacha20poly1305_ietf_encrypt') &&\n+                       $this->key_length == 32 &&\n+                       (($this->usePoly1305 && !isset($this->poly1305Key) && $this->counter == 0) || $this->counter == 1) &&\n+                       !$this->continuousBuffer;\n+            case self::ENGINE_OPENSSL:\n+                // OpenSSL 1.1.0 (released 25 Aug 2016) added support for chacha20.\n+                // PHP didn't support OpenSSL 1.1.0 until 7.0.19 (11 May 2017)\n+\n+                // if you attempt to provide openssl with a 128 bit key (as opposed to a 256 bit key) openssl will null\n+                // pad the key to 256 bits and still use the expansion constant for 256-bit keys. the fact that\n+                // openssl treats the IV as both the counter and nonce, however, let's us use openssl in continuous mode\n+                // whereas libsodium does not\n+                if ($this->key_length != 32) {\n+                    return false;\n+                }\n+        }\n+\n+        return parent::isValidEngineHelper($engine);\n+    }\n+\n+    /**\n+     * Encrypts a message.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::decrypt()\n+     * @see self::crypt()\n+     * @param string $plaintext\n+     * @return string $ciphertext\n+     */\n+    public function encrypt($plaintext)\n+    {\n+        $this->setup();\n+\n+        if ($this->engine == self::ENGINE_LIBSODIUM) {\n+            return $this->encrypt_with_libsodium($plaintext);\n+        }\n+\n+        return parent::encrypt($plaintext);\n+    }\n+\n+    /**\n+     * Decrypts a message.\n+     *\n+     * $this->decrypt($this->encrypt($plaintext)) == $this->encrypt($this->encrypt($plaintext)).\n+     * At least if the continuous buffer is disabled.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::encrypt()\n+     * @see self::crypt()\n+     * @param string $ciphertext\n+     * @return string $plaintext\n+     */\n+    public function decrypt($ciphertext)\n+    {\n+        $this->setup();\n+\n+        if ($this->engine == self::ENGINE_LIBSODIUM) {\n+            return $this->decrypt_with_libsodium($ciphertext);\n+        }\n+\n+        return parent::decrypt($ciphertext);\n+    }\n+\n+    /**\n+     * Encrypts a message with libsodium\n+     *\n+     * @see self::encrypt()\n+     * @param string $plaintext\n+     * @return string $text\n+     */\n+    private function encrypt_with_libsodium($plaintext)\n+    {\n+        $params = [$plaintext, $this->aad, $this->nonce, $this->key];\n+        $ciphertext = strlen($this->nonce) == 8 ?\n+            sodium_crypto_aead_chacha20poly1305_encrypt(...$params) :\n+            sodium_crypto_aead_chacha20poly1305_ietf_encrypt(...$params);\n+        if (!$this->usePoly1305) {\n+            return substr($ciphertext, 0, strlen($plaintext));\n+        }\n+\n+        $newciphertext = substr($ciphertext, 0, strlen($plaintext));\n+\n+        $this->newtag = $this->usingGeneratedPoly1305Key && strlen($this->nonce) == 12 ?\n+            substr($ciphertext, strlen($plaintext)) :\n+            $this->poly1305($newciphertext);\n+\n+        return $newciphertext;\n+    }\n+\n+    /**\n+     * Decrypts a message with libsodium\n+     *\n+     * @see self::decrypt()\n+     * @param string $ciphertext\n+     * @return string $text\n+     */\n+    private function decrypt_with_libsodium($ciphertext)\n+    {\n+        $params = [$ciphertext, $this->aad, $this->nonce, $this->key];\n+\n+        if (isset($this->poly1305Key)) {\n+            if ($this->oldtag === false) {\n+                throw new InsufficientSetupException('Authentication Tag has not been set');\n+            }\n+            if ($this->usingGeneratedPoly1305Key && strlen($this->nonce) == 12) {\n+                $plaintext = sodium_crypto_aead_chacha20poly1305_ietf_decrypt(...$params);\n+                $this->oldtag = false;\n+                if ($plaintext === false) {\n+                    throw new BadDecryptionException('Derived authentication tag and supplied authentication tag do not match');\n+                }\n+                return $plaintext;\n+            }\n+            $newtag = $this->poly1305($ciphertext);\n+            if ($this->oldtag != substr($newtag, 0, strlen($this->oldtag))) {\n+                $this->oldtag = false;\n+                throw new BadDecryptionException('Derived authentication tag and supplied authentication tag do not match');\n+            }\n+            $this->oldtag = false;\n+        }\n+\n+        $plaintext = strlen($this->nonce) == 8 ?\n+            sodium_crypto_aead_chacha20poly1305_encrypt(...$params) :\n+            sodium_crypto_aead_chacha20poly1305_ietf_encrypt(...$params);\n+\n+        return substr($plaintext, 0, strlen($ciphertext));\n+    }\n+\n+    /**\n+     * Sets the nonce.\n+     *\n+     * @param string $nonce\n+     */\n+    public function setNonce($nonce)\n+    {\n+        if (!is_string($nonce)) {\n+            throw new \\UnexpectedValueException('The nonce should be a string');\n+        }\n+\n+        /*\n+          from https://tools.ietf.org/html/rfc7539#page-7\n+\n+          \"Note also that the original ChaCha had a 64-bit nonce and 64-bit\n+           block count.  We have modified this here to be more consistent with\n+           recommendations in Section 3.2 of [RFC5116].\"\n+         */\n+        switch (strlen($nonce)) {\n+            case 8:  // 64 bits\n+            case 12: // 96 bits\n+                break;\n+            default:\n+                throw new \\LengthException('Nonce of size ' . strlen($nonce) . ' not supported by this algorithm. Only 64-bit nonces or 96-bit nonces are supported');\n+        }\n+\n+        $this->nonce = $nonce;\n+        $this->changed = true;\n+        $this->setEngine();\n+    }\n+\n+    /**\n+     * Setup the self::ENGINE_INTERNAL $engine\n+     *\n+     * (re)init, if necessary, the internal cipher $engine\n+     *\n+     * _setup() will be called each time if $changed === true\n+     * typically this happens when using one or more of following public methods:\n+     *\n+     * - setKey()\n+     *\n+     * - setNonce()\n+     *\n+     * - First run of encrypt() / decrypt() with no init-settings\n+     *\n+     * @see self::setKey()\n+     * @see self::setNonce()\n+     * @see self::disableContinuousBuffer()\n+     */\n+    protected function setup()\n+    {\n+        if (!$this->changed) {\n+            return;\n+        }\n+\n+        $this->enbuffer = $this->debuffer = ['ciphertext' => '', 'counter' => $this->counter];\n+\n+        $this->changed = $this->nonIVChanged = false;\n+\n+        if ($this->nonce === false) {\n+            throw new InsufficientSetupException('No nonce has been defined');\n+        }\n+\n+        if ($this->key === false) {\n+            throw new InsufficientSetupException('No key has been defined');\n+        }\n+\n+        if ($this->usePoly1305 && !isset($this->poly1305Key)) {\n+            $this->usingGeneratedPoly1305Key = true;\n+            if ($this->engine == self::ENGINE_LIBSODIUM) {\n+                return;\n+            }\n+            $this->createPoly1305Key();\n+        }\n+\n+        $key = $this->key;\n+        if (strlen($key) == 16) {\n+            $constant = 'expand 16-byte k';\n+            $key .= $key;\n+        } else {\n+            $constant = 'expand 32-byte k';\n+        }\n+\n+        $this->p1 = $constant . $key;\n+        $this->p2 = $this->nonce;\n+        if (strlen($this->nonce) == 8) {\n+            $this->p2 = \"\\0\\0\\0\\0\" . $this->p2;\n+        }\n+    }\n+\n+    /**\n+     * The quarterround function\n+     *\n+     * @param int $a\n+     * @param int $b\n+     * @param int $c\n+     * @param int $d\n+     */\n+    protected static function quarterRound(&$a, &$b, &$c, &$d)\n+    {\n+        // in https://datatracker.ietf.org/doc/html/rfc7539#section-2.1 the addition,\n+        // xor'ing and rotation are all on the same line so i'm keeping it on the same\n+        // line here as well\n+        // @codingStandardsIgnoreStart\n+        $a+= $b; $d = self::leftRotate(intval($d) ^ intval($a), 16);\n+        $c+= $d; $b = self::leftRotate(intval($b) ^ intval($c), 12);\n+        $a+= $b; $d = self::leftRotate(intval($d) ^ intval($a), 8);\n+        $c+= $d; $b = self::leftRotate(intval($b) ^ intval($c), 7);\n+        // @codingStandardsIgnoreEnd\n+    }\n+\n+    /**\n+     * The doubleround function\n+     *\n+     * @param int $x0 (by reference)\n+     * @param int $x1 (by reference)\n+     * @param int $x2 (by reference)\n+     * @param int $x3 (by reference)\n+     * @param int $x4 (by reference)\n+     * @param int $x5 (by reference)\n+     * @param int $x6 (by reference)\n+     * @param int $x7 (by reference)\n+     * @param int $x8 (by reference)\n+     * @param int $x9 (by reference)\n+     * @param int $x10 (by reference)\n+     * @param int $x11 (by reference)\n+     * @param int $x12 (by reference)\n+     * @param int $x13 (by reference)\n+     * @param int $x14 (by reference)\n+     * @param int $x15 (by reference)\n+     */\n+    protected static function doubleRound(&$x0, &$x1, &$x2, &$x3, &$x4, &$x5, &$x6, &$x7, &$x8, &$x9, &$x10, &$x11, &$x12, &$x13, &$x14, &$x15)\n+    {\n+        // columnRound\n+        static::quarterRound($x0, $x4, $x8, $x12);\n+        static::quarterRound($x1, $x5, $x9, $x13);\n+        static::quarterRound($x2, $x6, $x10, $x14);\n+        static::quarterRound($x3, $x7, $x11, $x15);\n+        // rowRound\n+        static::quarterRound($x0, $x5, $x10, $x15);\n+        static::quarterRound($x1, $x6, $x11, $x12);\n+        static::quarterRound($x2, $x7, $x8, $x13);\n+        static::quarterRound($x3, $x4, $x9, $x14);\n+    }\n+\n+    /**\n+     * The Salsa20 hash function function\n+     *\n+     * On my laptop this loop unrolled / function dereferenced version of parent::salsa20 encrypts 1mb of text in\n+     * 0.65s vs the 0.85s that it takes with the parent method.\n+     *\n+     * If we were free to assume that the host OS would always be 64-bits then the if condition in leftRotate could\n+     * be eliminated and we could knock this done to 0.60s.\n+     *\n+     * For comparison purposes, RC4 takes 0.16s and AES in CTR mode with the Eval engine takes 0.48s.\n+     * AES in CTR mode with the PHP engine takes 1.19s. Salsa20 / ChaCha20 do not benefit as much from the Eval\n+     * approach due to the fact that there are a lot less variables to de-reference, fewer loops to unroll, etc\n+     *\n+     * @param string $x\n+     */\n+    protected static function salsa20($x)\n+    {\n+        list(, $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15) = unpack('V*', $x);\n+        $z0 = $x0;\n+        $z1 = $x1;\n+        $z2 = $x2;\n+        $z3 = $x3;\n+        $z4 = $x4;\n+        $z5 = $x5;\n+        $z6 = $x6;\n+        $z7 = $x7;\n+        $z8 = $x8;\n+        $z9 = $x9;\n+        $z10 = $x10;\n+        $z11 = $x11;\n+        $z12 = $x12;\n+        $z13 = $x13;\n+        $z14 = $x14;\n+        $z15 = $x15;\n+\n+        // @codingStandardsIgnoreStart\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+\n+        // columnRound\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 16);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 12);\n+        $x0+= $x4; $x12 = self::leftRotate(intval($x12) ^ intval($x0), 8);\n+        $x8+= $x12; $x4 = self::leftRotate(intval($x4) ^ intval($x8), 7);\n+\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 16);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 12);\n+        $x1+= $x5; $x13 = self::leftRotate(intval($x13) ^ intval($x1), 8);\n+        $x9+= $x13; $x5 = self::leftRotate(intval($x5) ^ intval($x9), 7);\n+\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 16);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 12);\n+        $x2+= $x6; $x14 = self::leftRotate(intval($x14) ^ intval($x2), 8);\n+        $x10+= $x14; $x6 = self::leftRotate(intval($x6) ^ intval($x10), 7);\n+\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 16);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 12);\n+        $x3+= $x7; $x15 = self::leftRotate(intval($x15) ^ intval($x3), 8);\n+        $x11+= $x15; $x7 = self::leftRotate(intval($x7) ^ intval($x11), 7);\n+\n+        // rowRound\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 16);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 12);\n+        $x0+= $x5; $x15 = self::leftRotate(intval($x15) ^ intval($x0), 8);\n+        $x10+= $x15; $x5 = self::leftRotate(intval($x5) ^ intval($x10), 7);\n+\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 16);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 12);\n+        $x1+= $x6; $x12 = self::leftRotate(intval($x12) ^ intval($x1), 8);\n+        $x11+= $x12; $x6 = self::leftRotate(intval($x6) ^ intval($x11), 7);\n+\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 16);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 12);\n+        $x2+= $x7; $x13 = self::leftRotate(intval($x13) ^ intval($x2), 8);\n+        $x8+= $x13; $x7 = self::leftRotate(intval($x7) ^ intval($x8), 7);\n+\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 16);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 12);\n+        $x3+= $x4; $x14 = self::leftRotate(intval($x14) ^ intval($x3), 8);\n+        $x9+= $x14; $x4 = self::leftRotate(intval($x4) ^ intval($x9), 7);\n+        // @codingStandardsIgnoreEnd\n+\n+        $x0 += $z0;\n+        $x1 += $z1;\n+        $x2 += $z2;\n+        $x3 += $z3;\n+        $x4 += $z4;\n+        $x5 += $z5;\n+        $x6 += $z6;\n+        $x7 += $z7;\n+        $x8 += $z8;\n+        $x9 += $z9;\n+        $x10 += $z10;\n+        $x11 += $z11;\n+        $x12 += $z12;\n+        $x13 += $z13;\n+        $x14 += $z14;\n+        $x15 += $z15;\n+\n+        return pack('V*', $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/AsymmetricKey.php",
          "status": "added",
          "additions": 581,
          "deletions": 0,
          "patch": "@@ -0,0 +1,581 @@\n+<?php\n+\n+/**\n+ * Base Class for all asymmetric key ciphers\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common;\n+\n+use phpseclib3\\Crypt\\DSA;\n+use phpseclib3\\Crypt\\Hash;\n+use phpseclib3\\Crypt\\RSA;\n+use phpseclib3\\Exception\\NoKeyLoadedException;\n+use phpseclib3\\Exception\\UnsupportedFormatException;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * Base Class for all asymmetric cipher classes\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class AsymmetricKey\n+{\n+    /**\n+     * Precomputed Zero\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected static $zero;\n+\n+    /**\n+     * Precomputed One\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected static $one;\n+\n+    /**\n+     * Format of the loaded key\n+     *\n+     * @var string\n+     */\n+    protected $format;\n+\n+    /**\n+     * Hash function\n+     *\n+     * @var \\phpseclib3\\Crypt\\Hash\n+     */\n+    protected $hash;\n+\n+    /**\n+     * HMAC function\n+     *\n+     * @var \\phpseclib3\\Crypt\\Hash\n+     */\n+    private $hmac;\n+\n+    /**\n+     * Supported plugins (lower case)\n+     *\n+     * @see self::initialize_static_variables()\n+     * @var array\n+     */\n+    private static $plugins = [];\n+\n+    /**\n+     * Invisible plugins\n+     *\n+     * @see self::initialize_static_variables()\n+     * @var array\n+     */\n+    private static $invisiblePlugins = [];\n+\n+    /**\n+     * Available Engines\n+     *\n+     * @var boolean[]\n+     */\n+    protected static $engines = [];\n+\n+    /**\n+     * Key Comment\n+     *\n+     * @var null|string\n+     */\n+    private $comment;\n+\n+    /**\n+     * @param string $type\n+     * @return array|string\n+     */\n+    abstract public function toString($type, array $options = []);\n+\n+    /**\n+     * The constructor\n+     */\n+    protected function __construct()\n+    {\n+        self::initialize_static_variables();\n+\n+        $this->hash = new Hash('sha256');\n+        $this->hmac = new Hash('sha256');\n+    }\n+\n+    /**\n+     * Initialize static variables\n+     */\n+    protected static function initialize_static_variables()\n+    {\n+        if (!isset(self::$zero)) {\n+            self::$zero = new BigInteger(0);\n+            self::$one = new BigInteger(1);\n+        }\n+\n+        self::loadPlugins('Keys');\n+        if (static::ALGORITHM != 'RSA' && static::ALGORITHM != 'DH') {\n+            self::loadPlugins('Signature');\n+        }\n+    }\n+\n+    /**\n+     * Load the key\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return \\phpseclib3\\Crypt\\Common\\PublicKey|\\phpseclib3\\Crypt\\Common\\PrivateKey\n+     */\n+    public static function load($key, $password = false)\n+    {\n+        self::initialize_static_variables();\n+\n+        $class = new \\ReflectionClass(static::class);\n+        if ($class->isFinal()) {\n+            throw new \\RuntimeException('load() should not be called from final classes (' . static::class . ')');\n+        }\n+\n+        $components = false;\n+        foreach (self::$plugins[static::ALGORITHM]['Keys'] as $format) {\n+            if (isset(self::$invisiblePlugins[static::ALGORITHM]) && in_array($format, self::$invisiblePlugins[static::ALGORITHM])) {\n+                continue;\n+            }\n+            try {\n+                $components = $format::load($key, $password);\n+            } catch (\\Exception $e) {\n+                $components = false;\n+            }\n+            if ($components !== false) {\n+                break;\n+            }\n+        }\n+\n+        if ($components === false) {\n+            throw new NoKeyLoadedException('Unable to read key');\n+        }\n+\n+        $components['format'] = $format;\n+        $components['secret'] = isset($components['secret']) ? $components['secret'] : '';\n+        $comment = isset($components['comment']) ? $components['comment'] : null;\n+        $new = static::onLoad($components);\n+        $new->format = $format;\n+        $new->comment = $comment;\n+        return $new instanceof PrivateKey ?\n+            $new->withPassword($password) :\n+            $new;\n+    }\n+\n+    /**\n+     * Loads a private key\n+     *\n+     * @return PrivateKey\n+     * @param string|array $key\n+     * @param string $password optional\n+     */\n+    public static function loadPrivateKey($key, $password = '')\n+    {\n+        $key = self::load($key, $password);\n+        if (!$key instanceof PrivateKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a private key');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Loads a public key\n+     *\n+     * @return PublicKey\n+     * @param string|array $key\n+     */\n+    public static function loadPublicKey($key)\n+    {\n+        $key = self::load($key);\n+        if (!$key instanceof PublicKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a public key');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Loads parameters\n+     *\n+     * @return AsymmetricKey\n+     * @param string|array $key\n+     */\n+    public static function loadParameters($key)\n+    {\n+        $key = self::load($key);\n+        if (!$key instanceof PrivateKey && !$key instanceof PublicKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a parameter');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Load the key, assuming a specific format\n+     *\n+     * @param string $type\n+     * @param string $key\n+     * @param string $password optional\n+     * @return static\n+     */\n+    public static function loadFormat($type, $key, $password = false)\n+    {\n+        self::initialize_static_variables();\n+\n+        $components = false;\n+        $format = strtolower($type);\n+        if (isset(self::$plugins[static::ALGORITHM]['Keys'][$format])) {\n+            $format = self::$plugins[static::ALGORITHM]['Keys'][$format];\n+            $components = $format::load($key, $password);\n+        }\n+\n+        if ($components === false) {\n+            throw new NoKeyLoadedException('Unable to read key');\n+        }\n+\n+        $components['format'] = $format;\n+        $components['secret'] = isset($components['secret']) ? $components['secret'] : '';\n+\n+        $new = static::onLoad($components);\n+        $new->format = $format;\n+        return $new instanceof PrivateKey ?\n+            $new->withPassword($password) :\n+            $new;\n+    }\n+\n+    /**\n+     * Loads a private key\n+     *\n+     * @return PrivateKey\n+     * @param string $type\n+     * @param string $key\n+     * @param string $password optional\n+     */\n+    public static function loadPrivateKeyFormat($type, $key, $password = false)\n+    {\n+        $key = self::loadFormat($type, $key, $password);\n+        if (!$key instanceof PrivateKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a private key');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Loads a public key\n+     *\n+     * @return PublicKey\n+     * @param string $type\n+     * @param string $key\n+     */\n+    public static function loadPublicKeyFormat($type, $key)\n+    {\n+        $key = self::loadFormat($type, $key);\n+        if (!$key instanceof PublicKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a public key');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Loads parameters\n+     *\n+     * @return AsymmetricKey\n+     * @param string $type\n+     * @param string|array $key\n+     */\n+    public static function loadParametersFormat($type, $key)\n+    {\n+        $key = self::loadFormat($type, $key);\n+        if (!$key instanceof PrivateKey && !$key instanceof PublicKey) {\n+            throw new NoKeyLoadedException('The key that was loaded was not a parameter');\n+        }\n+        return $key;\n+    }\n+\n+    /**\n+     * Validate Plugin\n+     *\n+     * @param string $format\n+     * @param string $type\n+     * @param string $method optional\n+     * @return mixed\n+     */\n+    protected static function validatePlugin($format, $type, $method = null)\n+    {\n+        $type = strtolower($type);\n+        if (!isset(self::$plugins[static::ALGORITHM][$format][$type])) {\n+            throw new UnsupportedFormatException(\"$type is not a supported format\");\n+        }\n+        $type = self::$plugins[static::ALGORITHM][$format][$type];\n+        if (isset($method) && !method_exists($type, $method)) {\n+            throw new UnsupportedFormatException(\"$type does not implement $method\");\n+        }\n+\n+        return $type;\n+    }\n+\n+    /**\n+     * Load Plugins\n+     *\n+     * @param string $format\n+     */\n+    private static function loadPlugins($format)\n+    {\n+        if (!isset(self::$plugins[static::ALGORITHM][$format])) {\n+            self::$plugins[static::ALGORITHM][$format] = [];\n+            foreach (new \\DirectoryIterator(__DIR__ . '/../' . static::ALGORITHM . '/Formats/' . $format . '/') as $file) {\n+                if ($file->getExtension() != 'php') {\n+                    continue;\n+                }\n+                $name = $file->getBasename('.php');\n+                if ($name[0] == '.') {\n+                    continue;\n+                }\n+                $type = 'phpseclib3\\Crypt\\\\' . static::ALGORITHM . '\\\\Formats\\\\' . $format . '\\\\' . $name;\n+                $reflect = new \\ReflectionClass($type);\n+                if ($reflect->isTrait()) {\n+                    continue;\n+                }\n+                self::$plugins[static::ALGORITHM][$format][strtolower($name)] = $type;\n+                if ($reflect->hasConstant('IS_INVISIBLE')) {\n+                    self::$invisiblePlugins[static::ALGORITHM][] = $type;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Returns a list of supported formats.\n+     *\n+     * @return array\n+     */\n+    public static function getSupportedKeyFormats()\n+    {\n+        self::initialize_static_variables();\n+\n+        return self::$plugins[static::ALGORITHM]['Keys'];\n+    }\n+\n+    /**\n+     * Add a fileformat plugin\n+     *\n+     * The plugin needs to either already be loaded or be auto-loadable.\n+     * Loading a plugin whose shortname overwrite an existing shortname will overwrite the old plugin.\n+     *\n+     * @see self::load()\n+     * @param string $fullname\n+     * @return bool\n+     */\n+    public static function addFileFormat($fullname)\n+    {\n+        self::initialize_static_variables();\n+\n+        if (class_exists($fullname)) {\n+            $meta = new \\ReflectionClass($fullname);\n+            $shortname = $meta->getShortName();\n+            self::$plugins[static::ALGORITHM]['Keys'][strtolower($shortname)] = $fullname;\n+            if ($meta->hasConstant('IS_INVISIBLE')) {\n+                self::$invisiblePlugins[static::ALGORITHM][] = strtolower($shortname);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Returns the format of the loaded key.\n+     *\n+     * If the key that was loaded wasn't in a valid or if the key was auto-generated\n+     * with RSA::createKey() then this will throw an exception.\n+     *\n+     * @see self::load()\n+     * @return mixed\n+     */\n+    public function getLoadedFormat()\n+    {\n+        if (empty($this->format)) {\n+            throw new NoKeyLoadedException('This key was created with createKey - it was not loaded with load. Therefore there is no \"loaded format\"');\n+        }\n+\n+        $meta = new \\ReflectionClass($this->format);\n+        return $meta->getShortName();\n+    }\n+\n+    /**\n+     * Returns the key's comment\n+     *\n+     * Not all key formats support comments. If you want to set a comment use toString()\n+     *\n+     * @return null|string\n+     */\n+    public function getComment()\n+    {\n+        return $this->comment;\n+    }\n+\n+    /**\n+     * Tests engine validity\n+     *\n+     */\n+    public static function useBestEngine()\n+    {\n+        static::$engines = [\n+            'PHP' => true,\n+            'OpenSSL' => extension_loaded('openssl'),\n+            // this test can be satisfied by either of the following:\n+            // http://php.net/manual/en/book.sodium.php\n+            // https://github.com/paragonie/sodium_compat\n+            'libsodium' => function_exists('sodium_crypto_sign_keypair')\n+        ];\n+\n+        return static::$engines;\n+    }\n+\n+    /**\n+     * Flag to use internal engine only (useful for unit testing)\n+     *\n+     */\n+    public static function useInternalEngine()\n+    {\n+        static::$engines = [\n+            'PHP' => true,\n+            'OpenSSL' => false,\n+            'libsodium' => false\n+        ];\n+    }\n+\n+    /**\n+     * __toString() magic method\n+     *\n+     * @return string\n+     */\n+    public function __toString()\n+    {\n+        return $this->toString('PKCS8');\n+    }\n+\n+    /**\n+     * Determines which hashing function should be used\n+     *\n+     * @param string $hash\n+     */\n+    public function withHash($hash)\n+    {\n+        $new = clone $this;\n+\n+        $new->hash = new Hash($hash);\n+        $new->hmac = new Hash($hash);\n+\n+        return $new;\n+    }\n+\n+    /**\n+     * Returns the hash algorithm currently being used\n+     *\n+     */\n+    public function getHash()\n+    {\n+        return clone $this->hash;\n+    }\n+\n+    /**\n+     * Compute the pseudorandom k for signature generation,\n+     * using the process specified for deterministic DSA.\n+     *\n+     * @param string $h1\n+     * @return string\n+     */\n+    protected function computek($h1)\n+    {\n+        $v = str_repeat(\"\\1\", strlen($h1));\n+\n+        $k = str_repeat(\"\\0\", strlen($h1));\n+\n+        $x = $this->int2octets($this->x);\n+        $h1 = $this->bits2octets($h1);\n+\n+        $this->hmac->setKey($k);\n+        $k = $this->hmac->hash($v . \"\\0\" . $x . $h1);\n+        $this->hmac->setKey($k);\n+        $v = $this->hmac->hash($v);\n+        $k = $this->hmac->hash($v . \"\\1\" . $x . $h1);\n+        $this->hmac->setKey($k);\n+        $v = $this->hmac->hash($v);\n+\n+        $qlen = $this->q->getLengthInBytes();\n+\n+        while (true) {\n+            $t = '';\n+            while (strlen($t) < $qlen) {\n+                $v = $this->hmac->hash($v);\n+                $t = $t . $v;\n+            }\n+            $k = $this->bits2int($t);\n+\n+            if (!$k->equals(self::$zero) && $k->compare($this->q) < 0) {\n+                break;\n+            }\n+            $k = $this->hmac->hash($v . \"\\0\");\n+            $this->hmac->setKey($k);\n+            $v = $this->hmac->hash($v);\n+        }\n+\n+        return $k;\n+    }\n+\n+    /**\n+     * Integer to Octet String\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $v\n+     * @return string\n+     */\n+    private function int2octets($v)\n+    {\n+        $out = $v->toBytes();\n+        $rolen = $this->q->getLengthInBytes();\n+        if (strlen($out) < $rolen) {\n+            return str_pad($out, $rolen, \"\\0\", STR_PAD_LEFT);\n+        } elseif (strlen($out) > $rolen) {\n+            return substr($out, -$rolen);\n+        } else {\n+            return $out;\n+        }\n+    }\n+\n+    /**\n+     * Bit String to Integer\n+     *\n+     * @param string $in\n+     * @return \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected function bits2int($in)\n+    {\n+        $v = new BigInteger($in, 256);\n+        $vlen = strlen($in) << 3;\n+        $qlen = $this->q->getLength();\n+        if ($vlen > $qlen) {\n+            return $v->bitwise_rightShift($vlen - $qlen);\n+        }\n+        return $v;\n+    }\n+\n+    /**\n+     * Bit String to Octet String\n+     *\n+     * @param string $in\n+     * @return string\n+     */\n+    private function bits2octets($in)\n+    {\n+        $z1 = $this->bits2int($in);\n+        $z2 = $z1->subtract($this->q);\n+        return $z2->compare(self::$zero) < 0 ?\n+            $this->int2octets($z1) :\n+            $this->int2octets($z2);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/BlockCipher.php",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+<?php\n+\n+/**\n+ * Base Class for all block ciphers\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @author    Hans-Juergen Petrich <petrich@tronic-media.com>\n+ * @copyright 2007 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common;\n+\n+/**\n+ * Base Class for all block cipher classes\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class BlockCipher extends SymmetricKey\n+{\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/JWK.php",
          "status": "added",
          "additions": 69,
          "deletions": 0,
          "patch": "@@ -0,0 +1,69 @@\n+<?php\n+\n+/**\n+ * JSON Web Key (RFC7517) Handler\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+\n+/**\n+ * JSON Web Key Formatted Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class JWK\n+{\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        $key = preg_replace('#\\s#', '', $key); // remove whitespace\n+\n+        if (PHP_VERSION_ID >= 73000) {\n+            $key = json_decode($key, null, 512, JSON_THROW_ON_ERROR);\n+        } else {\n+            $key = json_decode($key);\n+            if (!$key) {\n+                throw new \\RuntimeException('Unable to decode JSON');\n+            }\n+        }\n+\n+        if (isset($key->kty)) {\n+            return $key;\n+        }\n+\n+        if (count($key->keys) != 1) {\n+            throw new \\RuntimeException('Although the JWK key format supports multiple keys phpseclib does not');\n+        }\n+\n+        return $key->keys[0];\n+    }\n+\n+    /**\n+     * Wrap a key appropriately\n+     *\n+     * @return string\n+     */\n+    protected static function wrapKey(array $key, array $options)\n+    {\n+        return json_encode(['keys' => [$key + $options]]);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/OpenSSH.php",
          "status": "added",
          "additions": 220,
          "deletions": 0,
          "patch": "@@ -0,0 +1,220 @@\n+<?php\n+\n+/**\n+ * OpenSSH Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Place in $HOME/.ssh/authorized_keys\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\AES;\n+use phpseclib3\\Crypt\\Random;\n+\n+/**\n+ * OpenSSH Formatted RSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class OpenSSH\n+{\n+    /**\n+     * Default comment\n+     *\n+     * @var string\n+     */\n+    protected static $comment = 'phpseclib-generated-key';\n+\n+    /**\n+     * Binary key flag\n+     *\n+     * @var bool\n+     */\n+    protected static $binary = false;\n+\n+    /**\n+     * Sets the default comment\n+     *\n+     * @param string $comment\n+     */\n+    public static function setComment($comment)\n+    {\n+        self::$comment = str_replace([\"\\r\", \"\\n\"], '', $comment);\n+    }\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * $type can be either ssh-dss or ssh-rsa\n+     *\n+     * @param string $key\n+     * @param string $password\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        // key format is described here:\n+        // https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/PROTOCOL.key?annotate=HEAD\n+\n+        if (strpos($key, 'BEGIN OPENSSH PRIVATE KEY') !== false) {\n+            $key = preg_replace('#(?:^-.*?-[\\r\\n]*$)|\\s#ms', '', $key);\n+            $key = Strings::base64_decode($key);\n+            $magic = Strings::shift($key, 15);\n+            if ($magic != \"openssh-key-v1\\0\") {\n+                throw new \\RuntimeException('Expected openssh-key-v1');\n+            }\n+            list($ciphername, $kdfname, $kdfoptions, $numKeys) = Strings::unpackSSH2('sssN', $key);\n+            if ($numKeys != 1) {\n+                // if we wanted to support multiple keys we could update PublicKeyLoader to preview what the # of keys\n+                // would be; it'd then call Common\\Keys\\OpenSSH.php::load() and get the paddedKey. it'd then pass\n+                // that to the appropriate key loading parser $numKey times or something\n+                throw new \\RuntimeException('Although the OpenSSH private key format supports multiple keys phpseclib does not');\n+            }\n+            switch ($ciphername) {\n+                case 'none':\n+                    break;\n+                case 'aes256-ctr':\n+                    if ($kdfname != 'bcrypt') {\n+                        throw new \\RuntimeException('Only the bcrypt kdf is supported (' . $kdfname . ' encountered)');\n+                    }\n+                    list($salt, $rounds) = Strings::unpackSSH2('sN', $kdfoptions);\n+                    $crypto = new AES('ctr');\n+                    //$crypto->setKeyLength(256);\n+                    //$crypto->disablePadding();\n+                    $crypto->setPassword($password, 'bcrypt', $salt, $rounds, 32);\n+                    break;\n+                default:\n+                    throw new \\RuntimeException('The only supported cipherse are: none, aes256-ctr (' . $ciphername . ' is being used)');\n+            }\n+\n+            list($publicKey, $paddedKey) = Strings::unpackSSH2('ss', $key);\n+            list($type) = Strings::unpackSSH2('s', $publicKey);\n+            if (isset($crypto)) {\n+                $paddedKey = $crypto->decrypt($paddedKey);\n+            }\n+            list($checkint1, $checkint2) = Strings::unpackSSH2('NN', $paddedKey);\n+            // any leftover bytes in $paddedKey are for padding? but they should be sequential bytes. eg. 1, 2, 3, etc.\n+            if ($checkint1 != $checkint2) {\n+                throw new \\RuntimeException('The two checkints do not match');\n+            }\n+            self::checkType($type);\n+\n+            return compact('type', 'publicKey', 'paddedKey');\n+        }\n+\n+        $parts = explode(' ', $key, 3);\n+\n+        if (!isset($parts[1])) {\n+            $key = base64_decode($parts[0]);\n+            $comment = false;\n+        } else {\n+            $asciiType = $parts[0];\n+            self::checkType($parts[0]);\n+            $key = base64_decode($parts[1]);\n+            $comment = isset($parts[2]) ? $parts[2] : false;\n+        }\n+        if ($key === false) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        list($type) = Strings::unpackSSH2('s', $key);\n+        self::checkType($type);\n+        if (isset($asciiType) && $asciiType != $type) {\n+            throw new \\RuntimeException('Two different types of keys are claimed: ' . $asciiType . ' and ' . $type);\n+        }\n+        if (strlen($key) <= 4) {\n+            throw new \\UnexpectedValueException('Key appears to be malformed');\n+        }\n+\n+        $publicKey = $key;\n+\n+        return compact('type', 'publicKey', 'comment');\n+    }\n+\n+    /**\n+     * Toggle between binary and printable keys\n+     *\n+     * Printable keys are what are generated by default. These are the ones that go in\n+     * $HOME/.ssh/authorized_key.\n+     *\n+     * @param bool $enabled\n+     */\n+    public static function setBinaryOutput($enabled)\n+    {\n+        self::$binary = $enabled;\n+    }\n+\n+    /**\n+     * Checks to see if the type is valid\n+     *\n+     * @param string $candidate\n+     */\n+    private static function checkType($candidate)\n+    {\n+        if (!in_array($candidate, static::$types)) {\n+            throw new \\RuntimeException(\"The key type ($candidate) is not equal to: \" . implode(',', static::$types));\n+        }\n+    }\n+\n+    /**\n+     * Wrap a private key appropriately\n+     *\n+     * @param string $publicKey\n+     * @param string $privateKey\n+     * @param string $password\n+     * @param array $options\n+     * @return string\n+     */\n+    protected static function wrapPrivateKey($publicKey, $privateKey, $password, $options)\n+    {\n+        list(, $checkint) = unpack('N', Random::string(4));\n+\n+        $comment = isset($options['comment']) ? $options['comment'] : self::$comment;\n+        $paddedKey = Strings::packSSH2('NN', $checkint, $checkint) .\n+                     $privateKey .\n+                     Strings::packSSH2('s', $comment);\n+\n+        $usesEncryption = !empty($password) && is_string($password);\n+\n+        /*\n+           from http://tools.ietf.org/html/rfc4253#section-6 :\n+\n+           Note that the length of the concatenation of 'packet_length',\n+           'padding_length', 'payload', and 'random padding' MUST be a multiple\n+           of the cipher block size or 8, whichever is larger.\n+         */\n+        $blockSize = $usesEncryption ? 16 : 8;\n+        $paddingLength = (($blockSize - 1) * strlen($paddedKey)) % $blockSize;\n+        for ($i = 1; $i <= $paddingLength; $i++) {\n+            $paddedKey .= chr($i);\n+        }\n+        if (!$usesEncryption) {\n+            $key = Strings::packSSH2('sssNss', 'none', 'none', '', 1, $publicKey, $paddedKey);\n+        } else {\n+            $rounds = isset($options['rounds']) ? $options['rounds'] : 16;\n+            $salt = Random::string(16);\n+            $kdfoptions = Strings::packSSH2('sN', $salt, $rounds);\n+            $crypto = new AES('ctr');\n+            $crypto->setPassword($password, 'bcrypt', $salt, $rounds, 32);\n+            $paddedKey = $crypto->encrypt($paddedKey);\n+            $key = Strings::packSSH2('sssNss', 'aes256-ctr', 'bcrypt', $kdfoptions, 1, $publicKey, $paddedKey);\n+        }\n+        $key = \"openssh-key-v1\\0$key\";\n+\n+        return \"-----BEGIN OPENSSH PRIVATE KEY-----\\n\" .\n+               chunk_split(Strings::base64_encode($key), 70, \"\\n\") .\n+               \"-----END OPENSSH PRIVATE KEY-----\\n\";\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/PKCS.php",
          "status": "added",
          "additions": 72,
          "deletions": 0,
          "patch": "@@ -0,0 +1,72 @@\n+<?php\n+\n+/**\n+ * PKCS Formatted Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+/**\n+ * PKCS1 Formatted Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS\n+{\n+    /**\n+     * Auto-detect the format\n+     */\n+    const MODE_ANY = 0;\n+    /**\n+     * Require base64-encoded PEM's be supplied\n+     */\n+    const MODE_PEM = 1;\n+    /**\n+     * Require raw DER's be supplied\n+     */\n+    const MODE_DER = 2;\n+    /**#@-*/\n+\n+    /**\n+     * Is the key a base-64 encoded PEM, DER or should it be auto-detected?\n+     *\n+     * @var int\n+     */\n+    protected static $format = self::MODE_ANY;\n+\n+    /**\n+     * Require base64-encoded PEM's be supplied\n+     *\n+     */\n+    public static function requirePEM()\n+    {\n+        self::$format = self::MODE_PEM;\n+    }\n+\n+    /**\n+     * Require raw DER's be supplied\n+     *\n+     */\n+    public static function requireDER()\n+    {\n+        self::$format = self::MODE_DER;\n+    }\n+\n+    /**\n+     * Accept any format and auto detect the format\n+     *\n+     * This is the default setting\n+     *\n+     */\n+    public static function requireAny()\n+    {\n+        self::$format = self::MODE_ANY;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/PKCS1.php",
          "status": "added",
          "additions": 209,
          "deletions": 0,
          "patch": "@@ -0,0 +1,209 @@\n+<?php\n+\n+/**\n+ * PKCS1 Formatted Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\AES;\n+use phpseclib3\\Crypt\\DES;\n+use phpseclib3\\Crypt\\Random;\n+use phpseclib3\\Crypt\\TripleDES;\n+use phpseclib3\\Exception\\UnsupportedAlgorithmException;\n+use phpseclib3\\File\\ASN1;\n+\n+/**\n+ * PKCS1 Formatted Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS1 extends PKCS\n+{\n+    /**\n+     * Default encryption algorithm\n+     *\n+     * @var string\n+     */\n+    private static $defaultEncryptionAlgorithm = 'AES-128-CBC';\n+\n+    /**\n+     * Sets the default encryption algorithm\n+     *\n+     * @param string $algo\n+     */\n+    public static function setEncryptionAlgorithm($algo)\n+    {\n+        self::$defaultEncryptionAlgorithm = $algo;\n+    }\n+\n+    /**\n+     * Returns the mode constant corresponding to the mode string\n+     *\n+     * @param string $mode\n+     * @return int\n+     * @throws \\UnexpectedValueException if the block cipher mode is unsupported\n+     */\n+    private static function getEncryptionMode($mode)\n+    {\n+        switch ($mode) {\n+            case 'CBC':\n+            case 'ECB':\n+            case 'CFB':\n+            case 'OFB':\n+            case 'CTR':\n+                return $mode;\n+        }\n+        throw new \\UnexpectedValueException('Unsupported block cipher mode of operation');\n+    }\n+\n+    /**\n+     * Returns a cipher object corresponding to a string\n+     *\n+     * @param string $algo\n+     * @return string\n+     * @throws \\UnexpectedValueException if the encryption algorithm is unsupported\n+     */\n+    private static function getEncryptionObject($algo)\n+    {\n+        $modes = '(CBC|ECB|CFB|OFB|CTR)';\n+        switch (true) {\n+            case preg_match(\"#^AES-(128|192|256)-$modes$#\", $algo, $matches):\n+                $cipher = new AES(self::getEncryptionMode($matches[2]));\n+                $cipher->setKeyLength($matches[1]);\n+                return $cipher;\n+            case preg_match(\"#^DES-EDE3-$modes$#\", $algo, $matches):\n+                return new TripleDES(self::getEncryptionMode($matches[1]));\n+            case preg_match(\"#^DES-$modes$#\", $algo, $matches):\n+                return new DES(self::getEncryptionMode($matches[1]));\n+            default:\n+                throw new UnsupportedAlgorithmException($algo . ' is not a supported algorithm');\n+        }\n+    }\n+\n+    /**\n+     * Generate a symmetric key for PKCS#1 keys\n+     *\n+     * @param string $password\n+     * @param string $iv\n+     * @param int $length\n+     * @return string\n+     */\n+    private static function generateSymmetricKey($password, $iv, $length)\n+    {\n+        $symkey = '';\n+        $iv = substr($iv, 0, 8);\n+        while (strlen($symkey) < $length) {\n+            $symkey .= md5($symkey . $password . $iv, true);\n+        }\n+        return substr($symkey, 0, $length);\n+    }\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    protected static function load($key, $password)\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        /* Although PKCS#1 proposes a format that public and private keys can use, encrypting them is\n+           \"outside the scope\" of PKCS#1.  PKCS#1 then refers you to PKCS#12 and PKCS#15 if you're wanting to\n+           protect private keys, however, that's not what OpenSSL* does.  OpenSSL protects private keys by adding\n+           two new \"fields\" to the key - DEK-Info and Proc-Type.  These fields are discussed here:\n+\n+           http://tools.ietf.org/html/rfc1421#section-4.6.1.1\n+           http://tools.ietf.org/html/rfc1421#section-4.6.1.3\n+\n+           DES-EDE3-CBC as an algorithm, however, is not discussed anywhere, near as I can tell.\n+           DES-CBC and DES-EDE are discussed in RFC1423, however, DES-EDE3-CBC isn't, nor is its key derivation\n+           function.  As is, the definitive authority on this encoding scheme isn't the IETF but rather OpenSSL's\n+           own implementation.  ie. the implementation *is* the standard and any bugs that may exist in that\n+           implementation are part of the standard, as well.\n+\n+           * OpenSSL is the de facto standard.  It's utilized by OpenSSH and other projects */\n+        if (preg_match('#DEK-Info: (.+),(.+)#', $key, $matches)) {\n+            $iv = Strings::hex2bin(trim($matches[2]));\n+            // remove the Proc-Type / DEK-Info sections as they're no longer needed\n+            $key = preg_replace('#^(?:Proc-Type|DEK-Info): .*#m', '', $key);\n+            $ciphertext = ASN1::extractBER($key);\n+            if ($ciphertext === false) {\n+                $ciphertext = $key;\n+            }\n+            $crypto = self::getEncryptionObject($matches[1]);\n+            $crypto->setKey(self::generateSymmetricKey($password, $iv, $crypto->getKeyLength() >> 3));\n+            $crypto->setIV($iv);\n+            $key = $crypto->decrypt($ciphertext);\n+        } else {\n+            if (self::$format != self::MODE_DER) {\n+                $decoded = ASN1::extractBER($key);\n+                if ($decoded !== false) {\n+                    $key = $decoded;\n+                } elseif (self::$format == self::MODE_PEM) {\n+                    throw new \\UnexpectedValueException('Expected base64-encoded PEM format but was unable to decode base64 text');\n+                }\n+            }\n+        }\n+\n+        return $key;\n+    }\n+\n+    /**\n+     * Wrap a private key appropriately\n+     *\n+     * @param string $key\n+     * @param string $type\n+     * @param string $password\n+     * @param array $options optional\n+     * @return string\n+     */\n+    protected static function wrapPrivateKey($key, $type, $password, array $options = [])\n+    {\n+        if (empty($password) || !is_string($password)) {\n+            return \"-----BEGIN $type PRIVATE KEY-----\\r\\n\" .\n+                   chunk_split(Strings::base64_encode($key), 64) .\n+                   \"-----END $type PRIVATE KEY-----\";\n+        }\n+\n+        $encryptionAlgorithm = isset($options['encryptionAlgorithm']) ? $options['encryptionAlgorithm'] : self::$defaultEncryptionAlgorithm;\n+\n+        $cipher = self::getEncryptionObject($encryptionAlgorithm);\n+        $iv = Random::string($cipher->getBlockLength() >> 3);\n+        $cipher->setKey(self::generateSymmetricKey($password, $iv, $cipher->getKeyLength() >> 3));\n+        $cipher->setIV($iv);\n+        $iv = strtoupper(Strings::bin2hex($iv));\n+        return \"-----BEGIN $type PRIVATE KEY-----\\r\\n\" .\n+               \"Proc-Type: 4,ENCRYPTED\\r\\n\" .\n+               \"DEK-Info: \" . $encryptionAlgorithm . \",$iv\\r\\n\" .\n+               \"\\r\\n\" .\n+               chunk_split(Strings::base64_encode($cipher->encrypt($key)), 64) .\n+               \"-----END $type PRIVATE KEY-----\";\n+    }\n+\n+    /**\n+     * Wrap a public key appropriately\n+     *\n+     * @param string $key\n+     * @param string $type\n+     * @return string\n+     */\n+    protected static function wrapPublicKey($key, $type)\n+    {\n+        return \"-----BEGIN $type PUBLIC KEY-----\\r\\n\" .\n+               chunk_split(Strings::base64_encode($key), 64) .\n+               \"-----END $type PUBLIC KEY-----\";\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/PKCS8.php",
          "status": "added",
          "additions": 725,
          "deletions": 0,
          "patch": "@@ -0,0 +1,725 @@\n+<?php\n+\n+/**\n+ * PKCS#8 Formatted Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Used by PHP's openssl_public_encrypt() and openssl's rsautl (when -pubin is set)\n+ *\n+ * Processes keys with the following headers:\n+ *\n+ * -----BEGIN ENCRYPTED PRIVATE KEY-----\n+ * -----BEGIN PRIVATE KEY-----\n+ * -----BEGIN PUBLIC KEY-----\n+ *\n+ * Analogous to ssh-keygen's pkcs8 format (as specified by -m). Although PKCS8\n+ * is specific to private keys it's basically creating a DER-encoded wrapper\n+ * for keys. This just extends that same concept to public keys (much like ssh-keygen)\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\AES;\n+use phpseclib3\\Crypt\\DES;\n+use phpseclib3\\Crypt\\Random;\n+use phpseclib3\\Crypt\\RC2;\n+use phpseclib3\\Crypt\\RC4;\n+use phpseclib3\\Crypt\\TripleDES;\n+use phpseclib3\\Exception\\InsufficientSetupException;\n+use phpseclib3\\Exception\\UnsupportedAlgorithmException;\n+use phpseclib3\\File\\ASN1;\n+use phpseclib3\\File\\ASN1\\Maps;\n+\n+/**\n+ * PKCS#8 Formatted Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS8 extends PKCS\n+{\n+    /**\n+     * Default encryption algorithm\n+     *\n+     * @var string\n+     */\n+    private static $defaultEncryptionAlgorithm = 'id-PBES2';\n+\n+    /**\n+     * Default encryption scheme\n+     *\n+     * Only used when defaultEncryptionAlgorithm is id-PBES2\n+     *\n+     * @var string\n+     */\n+    private static $defaultEncryptionScheme = 'aes128-CBC-PAD';\n+\n+    /**\n+     * Default PRF\n+     *\n+     * Only used when defaultEncryptionAlgorithm is id-PBES2\n+     *\n+     * @var string\n+     */\n+    private static $defaultPRF = 'id-hmacWithSHA256';\n+\n+    /**\n+     * Default Iteration Count\n+     *\n+     * @var int\n+     */\n+    private static $defaultIterationCount = 2048;\n+\n+    /**\n+     * OIDs loaded\n+     *\n+     * @var bool\n+     */\n+    private static $oidsLoaded = false;\n+\n+    /**\n+     * Sets the default encryption algorithm\n+     *\n+     * @param string $algo\n+     */\n+    public static function setEncryptionAlgorithm($algo)\n+    {\n+        self::$defaultEncryptionAlgorithm = $algo;\n+    }\n+\n+    /**\n+     * Sets the default encryption algorithm for PBES2\n+     *\n+     * @param string $algo\n+     */\n+    public static function setEncryptionScheme($algo)\n+    {\n+        self::$defaultEncryptionScheme = $algo;\n+    }\n+\n+    /**\n+     * Sets the iteration count\n+     *\n+     * @param int $count\n+     */\n+    public static function setIterationCount($count)\n+    {\n+        self::$defaultIterationCount = $count;\n+    }\n+\n+    /**\n+     * Sets the PRF for PBES2\n+     *\n+     * @param string $algo\n+     */\n+    public static function setPRF($algo)\n+    {\n+        self::$defaultPRF = $algo;\n+    }\n+\n+    /**\n+     * Returns a SymmetricKey object based on a PBES1 $algo\n+     *\n+     * @return \\phpseclib3\\Crypt\\Common\\SymmetricKey\n+     * @param string $algo\n+     */\n+    private static function getPBES1EncryptionObject($algo)\n+    {\n+        $algo = preg_match('#^pbeWith(?:MD2|MD5|SHA1|SHA)And(.*?)-CBC$#', $algo, $matches) ?\n+            $matches[1] :\n+            substr($algo, 13); // strlen('pbeWithSHAAnd') == 13\n+\n+        switch ($algo) {\n+            case 'DES':\n+                $cipher = new DES('cbc');\n+                break;\n+            case 'RC2':\n+                $cipher = new RC2('cbc');\n+                $cipher->setKeyLength(64);\n+                break;\n+            case '3-KeyTripleDES':\n+                $cipher = new TripleDES('cbc');\n+                break;\n+            case '2-KeyTripleDES':\n+                $cipher = new TripleDES('cbc');\n+                $cipher->setKeyLength(128);\n+                break;\n+            case '128BitRC2':\n+                $cipher = new RC2('cbc');\n+                $cipher->setKeyLength(128);\n+                break;\n+            case '40BitRC2':\n+                $cipher = new RC2('cbc');\n+                $cipher->setKeyLength(40);\n+                break;\n+            case '128BitRC4':\n+                $cipher = new RC4();\n+                $cipher->setKeyLength(128);\n+                break;\n+            case '40BitRC4':\n+                $cipher = new RC4();\n+                $cipher->setKeyLength(40);\n+                break;\n+            default:\n+                throw new UnsupportedAlgorithmException(\"$algo is not a supported algorithm\");\n+        }\n+\n+        return $cipher;\n+    }\n+\n+    /**\n+     * Returns a hash based on a PBES1 $algo\n+     *\n+     * @return string\n+     * @param string $algo\n+     */\n+    private static function getPBES1Hash($algo)\n+    {\n+        if (preg_match('#^pbeWith(MD2|MD5|SHA1|SHA)And.*?-CBC$#', $algo, $matches)) {\n+            return $matches[1] == 'SHA' ? 'sha1' : $matches[1];\n+        }\n+\n+        return 'sha1';\n+    }\n+\n+    /**\n+     * Returns a KDF baesd on a PBES1 $algo\n+     *\n+     * @return string\n+     * @param string $algo\n+     */\n+    private static function getPBES1KDF($algo)\n+    {\n+        switch ($algo) {\n+            case 'pbeWithMD2AndDES-CBC':\n+            case 'pbeWithMD2AndRC2-CBC':\n+            case 'pbeWithMD5AndDES-CBC':\n+            case 'pbeWithMD5AndRC2-CBC':\n+            case 'pbeWithSHA1AndDES-CBC':\n+            case 'pbeWithSHA1AndRC2-CBC':\n+                return 'pbkdf1';\n+        }\n+\n+        return 'pkcs12';\n+    }\n+\n+    /**\n+     * Returns a SymmetricKey object baesd on a PBES2 $algo\n+     *\n+     * @return SymmetricKey\n+     * @param string $algo\n+     */\n+    private static function getPBES2EncryptionObject($algo)\n+    {\n+        switch ($algo) {\n+            case 'desCBC':\n+                $cipher = new DES('cbc');\n+                break;\n+            case 'des-EDE3-CBC':\n+                $cipher = new TripleDES('cbc');\n+                break;\n+            case 'rc2CBC':\n+                $cipher = new RC2('cbc');\n+                // in theory this can be changed\n+                $cipher->setKeyLength(128);\n+                break;\n+            case 'rc5-CBC-PAD':\n+                throw new UnsupportedAlgorithmException('rc5-CBC-PAD is not supported for PBES2 PKCS#8 keys');\n+            case 'aes128-CBC-PAD':\n+            case 'aes192-CBC-PAD':\n+            case 'aes256-CBC-PAD':\n+                $cipher = new AES('cbc');\n+                $cipher->setKeyLength(substr($algo, 3, 3));\n+                break;\n+            default:\n+                throw new UnsupportedAlgorithmException(\"$algo is not supported\");\n+        }\n+\n+        return $cipher;\n+    }\n+\n+    /**\n+     * Initialize static variables\n+     *\n+     */\n+    private static function initialize_static_variables()\n+    {\n+        if (!isset(static::$childOIDsLoaded)) {\n+            throw new InsufficientSetupException('This class should not be called directly');\n+        }\n+\n+        if (!static::$childOIDsLoaded) {\n+            ASN1::loadOIDs(is_array(static::OID_NAME) ?\n+                array_combine(static::OID_NAME, static::OID_VALUE) :\n+                [static::OID_NAME => static::OID_VALUE]);\n+            static::$childOIDsLoaded = true;\n+        }\n+        if (!self::$oidsLoaded) {\n+            // from https://tools.ietf.org/html/rfc2898\n+            ASN1::loadOIDs([\n+               // PBES1 encryption schemes\n+               'pbeWithMD2AndDES-CBC' => '1.2.840.113549.1.5.1',\n+               'pbeWithMD2AndRC2-CBC' => '1.2.840.113549.1.5.4',\n+               'pbeWithMD5AndDES-CBC' => '1.2.840.113549.1.5.3',\n+               'pbeWithMD5AndRC2-CBC' => '1.2.840.113549.1.5.6',\n+               'pbeWithSHA1AndDES-CBC' => '1.2.840.113549.1.5.10',\n+               'pbeWithSHA1AndRC2-CBC' => '1.2.840.113549.1.5.11',\n+\n+               // from PKCS#12:\n+               // https://tools.ietf.org/html/rfc7292\n+               'pbeWithSHAAnd128BitRC4' => '1.2.840.113549.1.12.1.1',\n+               'pbeWithSHAAnd40BitRC4' => '1.2.840.113549.1.12.1.2',\n+               'pbeWithSHAAnd3-KeyTripleDES-CBC' => '1.2.840.113549.1.12.1.3',\n+               'pbeWithSHAAnd2-KeyTripleDES-CBC' => '1.2.840.113549.1.12.1.4',\n+               'pbeWithSHAAnd128BitRC2-CBC' => '1.2.840.113549.1.12.1.5',\n+               'pbeWithSHAAnd40BitRC2-CBC' => '1.2.840.113549.1.12.1.6',\n+\n+               'id-PBKDF2' => '1.2.840.113549.1.5.12',\n+               'id-PBES2' => '1.2.840.113549.1.5.13',\n+               'id-PBMAC1' => '1.2.840.113549.1.5.14',\n+\n+               // from PKCS#5 v2.1:\n+               // http://www.rsa.com/rsalabs/pkcs/files/h11302-wp-pkcs5v2-1-password-based-cryptography-standard.pdf\n+               'id-hmacWithSHA1' => '1.2.840.113549.2.7',\n+               'id-hmacWithSHA224' => '1.2.840.113549.2.8',\n+               'id-hmacWithSHA256' => '1.2.840.113549.2.9',\n+               'id-hmacWithSHA384' => '1.2.840.113549.2.10',\n+               'id-hmacWithSHA512' => '1.2.840.113549.2.11',\n+               'id-hmacWithSHA512-224' => '1.2.840.113549.2.12',\n+               'id-hmacWithSHA512-256' => '1.2.840.113549.2.13',\n+\n+               'desCBC'       => '1.3.14.3.2.7',\n+               'des-EDE3-CBC' => '1.2.840.113549.3.7',\n+               'rc2CBC' => '1.2.840.113549.3.2',\n+               'rc5-CBC-PAD' => '1.2.840.113549.3.9',\n+\n+               'aes128-CBC-PAD' => '2.16.840.1.101.3.4.1.2',\n+               'aes192-CBC-PAD' => '2.16.840.1.101.3.4.1.22',\n+               'aes256-CBC-PAD' => '2.16.840.1.101.3.4.1.42'\n+            ]);\n+            self::$oidsLoaded = true;\n+        }\n+    }\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    protected static function load($key, $password = '')\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        $isPublic = strpos($key, 'PUBLIC') !== false;\n+        $isPrivate = strpos($key, 'PRIVATE') !== false;\n+\n+        $decoded = self::preParse($key);\n+\n+        $meta = [];\n+\n+        $decrypted = ASN1::asn1map($decoded[0], Maps\\EncryptedPrivateKeyInfo::MAP);\n+        if (strlen($password) && is_array($decrypted)) {\n+            $algorithm = $decrypted['encryptionAlgorithm']['algorithm'];\n+            switch ($algorithm) {\n+                // PBES1\n+                case 'pbeWithMD2AndDES-CBC':\n+                case 'pbeWithMD2AndRC2-CBC':\n+                case 'pbeWithMD5AndDES-CBC':\n+                case 'pbeWithMD5AndRC2-CBC':\n+                case 'pbeWithSHA1AndDES-CBC':\n+                case 'pbeWithSHA1AndRC2-CBC':\n+                case 'pbeWithSHAAnd3-KeyTripleDES-CBC':\n+                case 'pbeWithSHAAnd2-KeyTripleDES-CBC':\n+                case 'pbeWithSHAAnd128BitRC2-CBC':\n+                case 'pbeWithSHAAnd40BitRC2-CBC':\n+                case 'pbeWithSHAAnd128BitRC4':\n+                case 'pbeWithSHAAnd40BitRC4':\n+                    $cipher = self::getPBES1EncryptionObject($algorithm);\n+                    $hash = self::getPBES1Hash($algorithm);\n+                    $kdf = self::getPBES1KDF($algorithm);\n+\n+                    $meta['meta']['algorithm'] = $algorithm;\n+\n+                    $temp = ASN1::decodeBER($decrypted['encryptionAlgorithm']['parameters']);\n+                    if (!$temp) {\n+                        throw new \\RuntimeException('Unable to decode BER');\n+                    }\n+                    extract(ASN1::asn1map($temp[0], Maps\\PBEParameter::MAP));\n+                    $iterationCount = (int) $iterationCount->toString();\n+                    $cipher->setPassword($password, $kdf, $hash, $salt, $iterationCount);\n+                    $key = $cipher->decrypt($decrypted['encryptedData']);\n+                    $decoded = ASN1::decodeBER($key);\n+                    if (!$decoded) {\n+                        throw new \\RuntimeException('Unable to decode BER 2');\n+                    }\n+\n+                    break;\n+                case 'id-PBES2':\n+                    $meta['meta']['algorithm'] = $algorithm;\n+\n+                    $temp = ASN1::decodeBER($decrypted['encryptionAlgorithm']['parameters']);\n+                    if (!$temp) {\n+                        throw new \\RuntimeException('Unable to decode BER');\n+                    }\n+                    $temp = ASN1::asn1map($temp[0], Maps\\PBES2params::MAP);\n+                    extract($temp);\n+\n+                    $cipher = self::getPBES2EncryptionObject($encryptionScheme['algorithm']);\n+                    $meta['meta']['cipher'] = $encryptionScheme['algorithm'];\n+\n+                    $temp = ASN1::decodeBER($decrypted['encryptionAlgorithm']['parameters']);\n+                    if (!$temp) {\n+                        throw new \\RuntimeException('Unable to decode BER');\n+                    }\n+                    $temp = ASN1::asn1map($temp[0], Maps\\PBES2params::MAP);\n+                    extract($temp);\n+\n+                    if (!$cipher instanceof RC2) {\n+                        $cipher->setIV($encryptionScheme['parameters']['octetString']);\n+                    } else {\n+                        $temp = ASN1::decodeBER($encryptionScheme['parameters']);\n+                        if (!$temp) {\n+                            throw new \\RuntimeException('Unable to decode BER');\n+                        }\n+                        extract(ASN1::asn1map($temp[0], Maps\\RC2CBCParameter::MAP));\n+                        $effectiveKeyLength = (int) $rc2ParametersVersion->toString();\n+                        switch ($effectiveKeyLength) {\n+                            case 160:\n+                                $effectiveKeyLength = 40;\n+                                break;\n+                            case 120:\n+                                $effectiveKeyLength = 64;\n+                                break;\n+                            case 58:\n+                                $effectiveKeyLength = 128;\n+                                break;\n+                            //default: // should be >= 256\n+                        }\n+                        $cipher->setIV($iv);\n+                        $cipher->setKeyLength($effectiveKeyLength);\n+                    }\n+\n+                    $meta['meta']['keyDerivationFunc'] = $keyDerivationFunc['algorithm'];\n+                    switch ($keyDerivationFunc['algorithm']) {\n+                        case 'id-PBKDF2':\n+                            $temp = ASN1::decodeBER($keyDerivationFunc['parameters']);\n+                            if (!$temp) {\n+                                throw new \\RuntimeException('Unable to decode BER');\n+                            }\n+                            $prf = ['algorithm' => 'id-hmacWithSHA1'];\n+                            $params = ASN1::asn1map($temp[0], Maps\\PBKDF2params::MAP);\n+                            extract($params);\n+                            $meta['meta']['prf'] = $prf['algorithm'];\n+                            $hash = str_replace('-', '/', substr($prf['algorithm'], 11));\n+                            $params = [\n+                                $password,\n+                                'pbkdf2',\n+                                $hash,\n+                                $salt,\n+                                (int) $iterationCount->toString()\n+                            ];\n+                            if (isset($keyLength)) {\n+                                $params[] = (int) $keyLength->toString();\n+                            }\n+                            $cipher->setPassword(...$params);\n+                            $key = $cipher->decrypt($decrypted['encryptedData']);\n+                            $decoded = ASN1::decodeBER($key);\n+                            if (!$decoded) {\n+                                throw new \\RuntimeException('Unable to decode BER 3');\n+                            }\n+                            break;\n+                        default:\n+                            throw new UnsupportedAlgorithmException('Only PBKDF2 is supported for PBES2 PKCS#8 keys');\n+                    }\n+                    break;\n+                case 'id-PBMAC1':\n+                    //$temp = ASN1::decodeBER($decrypted['encryptionAlgorithm']['parameters']);\n+                    //$value = ASN1::asn1map($temp[0], Maps\\PBMAC1params::MAP);\n+                    // since i can't find any implementation that does PBMAC1 it is unsupported\n+                    throw new UnsupportedAlgorithmException('Only PBES1 and PBES2 PKCS#8 keys are supported.');\n+                // at this point we'll assume that the key conforms to PublicKeyInfo\n+            }\n+        }\n+\n+        $private = ASN1::asn1map($decoded[0], Maps\\OneAsymmetricKey::MAP);\n+        if (is_array($private)) {\n+            if ($isPublic) {\n+                throw new \\UnexpectedValueException('Human readable string claims public key but DER encoded string claims private key');\n+            }\n+\n+            if (isset($private['privateKeyAlgorithm']['parameters']) && !$private['privateKeyAlgorithm']['parameters'] instanceof ASN1\\Element && isset($decoded[0]['content'][1]['content'][1])) {\n+                $temp = $decoded[0]['content'][1]['content'][1];\n+                $private['privateKeyAlgorithm']['parameters'] = new ASN1\\Element(substr($key, $temp['start'], $temp['length']));\n+            }\n+            if (is_array(static::OID_NAME)) {\n+                if (!in_array($private['privateKeyAlgorithm']['algorithm'], static::OID_NAME)) {\n+                    throw new UnsupportedAlgorithmException($private['privateKeyAlgorithm']['algorithm'] . ' is not a supported key type');\n+                }\n+            } else {\n+                if ($private['privateKeyAlgorithm']['algorithm'] != static::OID_NAME) {\n+                    throw new UnsupportedAlgorithmException('Only ' . static::OID_NAME . ' keys are supported; this is a ' . $private['privateKeyAlgorithm']['algorithm'] . ' key');\n+                }\n+            }\n+            if (isset($private['publicKey'])) {\n+                if ($private['publicKey'][0] != \"\\0\") {\n+                    throw new \\UnexpectedValueException('The first byte of the public key should be null - not ' . bin2hex($private['publicKey'][0]));\n+                }\n+                $private['publicKey'] = substr($private['publicKey'], 1);\n+            }\n+            return $private + $meta;\n+        }\n+\n+        // EncryptedPrivateKeyInfo and PublicKeyInfo have largely identical \"signatures\". the only difference\n+        // is that the former has an octet string and the later has a bit string. the first byte of a bit\n+        // string represents the number of bits in the last byte that are to be ignored but, currently,\n+        // bit strings wanting a non-zero amount of bits trimmed are not supported\n+        $public = ASN1::asn1map($decoded[0], Maps\\PublicKeyInfo::MAP);\n+\n+        if (is_array($public)) {\n+            if ($isPrivate) {\n+                throw new \\UnexpectedValueException('Human readable string claims private key but DER encoded string claims public key');\n+            }\n+\n+            if ($public['publicKey'][0] != \"\\0\") {\n+                throw new \\UnexpectedValueException('The first byte of the public key should be null - not ' . bin2hex($public['publicKey'][0]));\n+            }\n+            if (is_array(static::OID_NAME)) {\n+                if (!in_array($public['publicKeyAlgorithm']['algorithm'], static::OID_NAME)) {\n+                    throw new UnsupportedAlgorithmException($public['publicKeyAlgorithm']['algorithm'] . ' is not a supported key type');\n+                }\n+            } else {\n+                if ($public['publicKeyAlgorithm']['algorithm'] != static::OID_NAME) {\n+                    throw new UnsupportedAlgorithmException('Only ' . static::OID_NAME . ' keys are supported; this is a ' . $public['publicKeyAlgorithm']['algorithm'] . ' key');\n+                }\n+            }\n+            if (isset($public['publicKeyAlgorithm']['parameters']) && !$public['publicKeyAlgorithm']['parameters'] instanceof ASN1\\Element && isset($decoded[0]['content'][0]['content'][1])) {\n+                $temp = $decoded[0]['content'][0]['content'][1];\n+                $public['publicKeyAlgorithm']['parameters'] = new ASN1\\Element(substr($key, $temp['start'], $temp['length']));\n+            }\n+            $public['publicKey'] = substr($public['publicKey'], 1);\n+            return $public;\n+        }\n+\n+        throw new \\RuntimeException('Unable to parse using either OneAsymmetricKey or PublicKeyInfo ASN1 maps');\n+    }\n+\n+    /**\n+     * Wrap a private key appropriately\n+     *\n+     * @param string $key\n+     * @param string $attr\n+     * @param mixed $params\n+     * @param string $password\n+     * @param string $oid optional\n+     * @param string $publicKey optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    protected static function wrapPrivateKey($key, $attr, $params, $password, $oid = null, $publicKey = '', array $options = [])\n+    {\n+        self::initialize_static_variables();\n+\n+        $key = [\n+            'version' => 'v1',\n+            'privateKeyAlgorithm' => [\n+                'algorithm' => is_string(static::OID_NAME) ? static::OID_NAME : $oid\n+             ],\n+            'privateKey' => $key\n+        ];\n+        if ($oid != 'id-Ed25519' && $oid != 'id-Ed448') {\n+            $key['privateKeyAlgorithm']['parameters'] = $params;\n+        }\n+        if (!empty($attr)) {\n+            $key['attributes'] = $attr;\n+        }\n+        if (!empty($publicKey)) {\n+            $key['version'] = 'v2';\n+            $key['publicKey'] = $publicKey;\n+        }\n+        $key = ASN1::encodeDER($key, Maps\\OneAsymmetricKey::MAP);\n+        if (!empty($password) && is_string($password)) {\n+            $salt = Random::string(8);\n+\n+            $iterationCount = isset($options['iterationCount']) ? $options['iterationCount'] : self::$defaultIterationCount;\n+            $encryptionAlgorithm = isset($options['encryptionAlgorithm']) ? $options['encryptionAlgorithm'] : self::$defaultEncryptionAlgorithm;\n+            $encryptionScheme = isset($options['encryptionScheme']) ? $options['encryptionScheme'] : self::$defaultEncryptionScheme;\n+            $prf = isset($options['PRF']) ? $options['PRF'] : self::$defaultPRF;\n+\n+            if ($encryptionAlgorithm == 'id-PBES2') {\n+                $crypto = self::getPBES2EncryptionObject($encryptionScheme);\n+                $hash = str_replace('-', '/', substr($prf, 11));\n+                $kdf = 'pbkdf2';\n+                $iv = Random::string($crypto->getBlockLength() >> 3);\n+\n+                $PBKDF2params = [\n+                    'salt' => $salt,\n+                    'iterationCount' => $iterationCount,\n+                    'prf' => ['algorithm' => $prf, 'parameters' => null]\n+                ];\n+                $PBKDF2params = ASN1::encodeDER($PBKDF2params, Maps\\PBKDF2params::MAP);\n+\n+                if (!$crypto instanceof RC2) {\n+                    $params = ['octetString' => $iv];\n+                } else {\n+                    $params = [\n+                        'rc2ParametersVersion' => 58,\n+                        'iv' => $iv\n+                    ];\n+                    $params = ASN1::encodeDER($params, Maps\\RC2CBCParameter::MAP);\n+                    $params = new ASN1\\Element($params);\n+                }\n+\n+                $params = [\n+                    'keyDerivationFunc' => [\n+                        'algorithm' => 'id-PBKDF2',\n+                        'parameters' => new ASN1\\Element($PBKDF2params)\n+                    ],\n+                    'encryptionScheme' => [\n+                        'algorithm' => $encryptionScheme,\n+                        'parameters' => $params\n+                    ]\n+                ];\n+                $params = ASN1::encodeDER($params, Maps\\PBES2params::MAP);\n+\n+                $crypto->setIV($iv);\n+            } else {\n+                $crypto = self::getPBES1EncryptionObject($encryptionAlgorithm);\n+                $hash = self::getPBES1Hash($encryptionAlgorithm);\n+                $kdf = self::getPBES1KDF($encryptionAlgorithm);\n+\n+                $params = [\n+                    'salt' => $salt,\n+                    'iterationCount' => $iterationCount\n+                ];\n+                $params = ASN1::encodeDER($params, Maps\\PBEParameter::MAP);\n+            }\n+            $crypto->setPassword($password, $kdf, $hash, $salt, $iterationCount);\n+            $key = $crypto->encrypt($key);\n+\n+            $key = [\n+                'encryptionAlgorithm' => [\n+                    'algorithm' => $encryptionAlgorithm,\n+                    'parameters' => new ASN1\\Element($params)\n+                ],\n+                'encryptedData' => $key\n+            ];\n+\n+            $key = ASN1::encodeDER($key, Maps\\EncryptedPrivateKeyInfo::MAP);\n+\n+            return \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\r\\n\" .\n+                   chunk_split(Strings::base64_encode($key), 64) .\n+                   \"-----END ENCRYPTED PRIVATE KEY-----\";\n+        }\n+\n+        return \"-----BEGIN PRIVATE KEY-----\\r\\n\" .\n+               chunk_split(Strings::base64_encode($key), 64) .\n+               \"-----END PRIVATE KEY-----\";\n+    }\n+\n+    /**\n+     * Wrap a public key appropriately\n+     *\n+     * @param string $key\n+     * @param mixed $params\n+     * @param string $oid\n+     * @return string\n+     */\n+    protected static function wrapPublicKey($key, $params, $oid = null)\n+    {\n+        self::initialize_static_variables();\n+\n+        $key = [\n+            'publicKeyAlgorithm' => [\n+                'algorithm' => is_string(static::OID_NAME) ? static::OID_NAME : $oid\n+            ],\n+            'publicKey' => \"\\0\" . $key\n+        ];\n+\n+        if ($oid != 'id-Ed25519' && $oid != 'id-Ed448') {\n+            $key['publicKeyAlgorithm']['parameters'] = $params;\n+        }\n+\n+        $key = ASN1::encodeDER($key, Maps\\PublicKeyInfo::MAP);\n+\n+        return \"-----BEGIN PUBLIC KEY-----\\r\\n\" .\n+               chunk_split(Strings::base64_encode($key), 64) .\n+               \"-----END PUBLIC KEY-----\";\n+    }\n+\n+    /**\n+     * Perform some preliminary parsing of the key\n+     *\n+     * @param string $key\n+     * @return array\n+     */\n+    private static function preParse(&$key)\n+    {\n+        self::initialize_static_variables();\n+\n+        if (self::$format != self::MODE_DER) {\n+            $decoded = ASN1::extractBER($key);\n+            if ($decoded !== false) {\n+                $key = $decoded;\n+            } elseif (self::$format == self::MODE_PEM) {\n+                throw new \\UnexpectedValueException('Expected base64-encoded PEM format but was unable to decode base64 text');\n+            }\n+        }\n+\n+        $decoded = ASN1::decodeBER($key);\n+        if (!$decoded) {\n+            throw new \\RuntimeException('Unable to decode BER');\n+        }\n+\n+        return $decoded;\n+    }\n+\n+    /**\n+     * Returns the encryption parameters used by the key\n+     *\n+     * @param string $key\n+     * @return array\n+     */\n+    public static function extractEncryptionAlgorithm($key)\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        $decoded = self::preParse($key);\n+\n+        $r = ASN1::asn1map($decoded[0], ASN1\\Maps\\EncryptedPrivateKeyInfo::MAP);\n+        if (!is_array($r)) {\n+            throw new \\RuntimeException('Unable to parse using EncryptedPrivateKeyInfo map');\n+        }\n+\n+        if ($r['encryptionAlgorithm']['algorithm'] == 'id-PBES2') {\n+            $decoded = ASN1::decodeBER($r['encryptionAlgorithm']['parameters']->element);\n+            if (!$decoded) {\n+                throw new \\RuntimeException('Unable to decode BER');\n+            }\n+            $r['encryptionAlgorithm']['parameters'] = ASN1::asn1map($decoded[0], ASN1\\Maps\\PBES2params::MAP);\n+\n+            $kdf = &$r['encryptionAlgorithm']['parameters']['keyDerivationFunc'];\n+            switch ($kdf['algorithm']) {\n+                case 'id-PBKDF2':\n+                    $decoded = ASN1::decodeBER($kdf['parameters']->element);\n+                    if (!$decoded) {\n+                        throw new \\RuntimeException('Unable to decode BER');\n+                    }\n+                    $kdf['parameters'] = ASN1::asn1map($decoded[0], Maps\\PBKDF2params::MAP);\n+            }\n+        }\n+\n+        return $r['encryptionAlgorithm'];\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Keys/PuTTY.php",
          "status": "added",
          "additions": 374,
          "deletions": 0,
          "patch": "@@ -0,0 +1,374 @@\n+<?php\n+\n+/**\n+ * PuTTY Formatted Key Handler\n+ *\n+ * See PuTTY's SSHPUBK.C and https://tartarus.org/~simon/putty-snapshots/htmldoc/AppendixC.html\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\AES;\n+use phpseclib3\\Crypt\\Hash;\n+use phpseclib3\\Crypt\\Random;\n+use phpseclib3\\Exception\\UnsupportedAlgorithmException;\n+\n+/**\n+ * PuTTY Formatted Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PuTTY\n+{\n+    /**\n+     * Default comment\n+     *\n+     * @var string\n+     */\n+    private static $comment = 'phpseclib-generated-key';\n+\n+    /**\n+     * Default version\n+     *\n+     * @var int\n+     */\n+    private static $version = 2;\n+\n+    /**\n+     * Sets the default comment\n+     *\n+     * @param string $comment\n+     */\n+    public static function setComment($comment)\n+    {\n+        self::$comment = str_replace([\"\\r\", \"\\n\"], '', $comment);\n+    }\n+\n+    /**\n+     * Sets the default version\n+     *\n+     * @param int $version\n+     */\n+    public static function setVersion($version)\n+    {\n+        if ($version != 2 && $version != 3) {\n+            throw new \\RuntimeException('Only supported versions are 2 and 3');\n+        }\n+        self::$version = $version;\n+    }\n+\n+    /**\n+     * Generate a symmetric key for PuTTY v2 keys\n+     *\n+     * @param string $password\n+     * @param int $length\n+     * @return string\n+     */\n+    private static function generateV2Key($password, $length)\n+    {\n+        $symkey = '';\n+        $sequence = 0;\n+        while (strlen($symkey) < $length) {\n+            $temp = pack('Na*', $sequence++, $password);\n+            $symkey .= Strings::hex2bin(sha1($temp));\n+        }\n+        return substr($symkey, 0, $length);\n+    }\n+\n+    /**\n+     * Generate a symmetric key for PuTTY v3 keys\n+     *\n+     * @param string $password\n+     * @param string $flavour\n+     * @param int $memory\n+     * @param int $passes\n+     * @param string $salt\n+     * @return array\n+     */\n+    private static function generateV3Key($password, $flavour, $memory, $passes, $salt)\n+    {\n+        if (!function_exists('sodium_crypto_pwhash')) {\n+            throw new \\RuntimeException('sodium_crypto_pwhash needs to exist for Argon2 password hasing');\n+        }\n+\n+        switch ($flavour) {\n+            case 'Argon2i':\n+                $flavour = SODIUM_CRYPTO_PWHASH_ALG_ARGON2I13;\n+                break;\n+            case 'Argon2id':\n+                $flavour = SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13;\n+                break;\n+            default:\n+                throw new UnsupportedAlgorithmException('Only Argon2i and Argon2id are supported');\n+        }\n+\n+        $length = 80; // keylen + ivlen + mac_keylen\n+        $temp = sodium_crypto_pwhash($length, $password, $salt, $passes, $memory << 10, $flavour);\n+\n+        $symkey = substr($temp, 0, 32);\n+        $symiv = substr($temp, 32, 16);\n+        $hashkey = substr($temp, -32);\n+\n+        return compact('symkey', 'symiv', 'hashkey');\n+    }\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password\n+     * @return array\n+     */\n+    public static function load($key, $password)\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        if (strpos($key, 'BEGIN SSH2 PUBLIC KEY') !== false) {\n+            $lines = preg_split('#[\\r\\n]+#', $key);\n+            switch (true) {\n+                case $lines[0] != '---- BEGIN SSH2 PUBLIC KEY ----':\n+                    throw new \\UnexpectedValueException('Key doesn\\'t start with ---- BEGIN SSH2 PUBLIC KEY ----');\n+                case $lines[count($lines) - 1] != '---- END SSH2 PUBLIC KEY ----':\n+                    throw new \\UnexpectedValueException('Key doesn\\'t end with ---- END SSH2 PUBLIC KEY ----');\n+            }\n+            $lines = array_splice($lines, 1, -1);\n+            $lines = array_map(function ($line) {\n+                return rtrim($line, \"\\r\\n\");\n+            }, $lines);\n+            $data = $current = '';\n+            $values = [];\n+            $in_value = false;\n+            foreach ($lines as $line) {\n+                switch (true) {\n+                    case preg_match('#^(.*?): (.*)#', $line, $match):\n+                        $in_value = $line[strlen($line) - 1] == '\\\\';\n+                        $current = strtolower($match[1]);\n+                        $values[$current] = $in_value ? substr($match[2], 0, -1) : $match[2];\n+                        break;\n+                    case $in_value:\n+                        $in_value = $line[strlen($line) - 1] == '\\\\';\n+                        $values[$current] .= $in_value ? substr($line, 0, -1) : $line;\n+                        break;\n+                    default:\n+                        $data .= $line;\n+                }\n+            }\n+\n+            $components = call_user_func([static::PUBLIC_HANDLER, 'load'], $data);\n+            if ($components === false) {\n+                throw new \\UnexpectedValueException('Unable to decode public key');\n+            }\n+            $components += $values;\n+            $components['comment'] = str_replace(['\\\\\\\\', '\\\"'], ['\\\\', '\"'], $values['comment']);\n+\n+            return $components;\n+        }\n+\n+        $components = [];\n+\n+        $key = preg_split('#\\r\\n|\\r|\\n#', trim($key));\n+        if (Strings::shift($key[0], strlen('PuTTY-User-Key-File-')) != 'PuTTY-User-Key-File-') {\n+            return false;\n+        }\n+        $version = (int) Strings::shift($key[0], 3); // should be either \"2: \" or \"3: 0\" prior to int casting\n+        if ($version != 2 && $version != 3) {\n+            throw new \\RuntimeException('Only v2 and v3 PuTTY private keys are supported');\n+        }\n+        $components['type'] = $type = rtrim($key[0]);\n+        if (!in_array($type, static::$types)) {\n+            $error = count(static::$types) == 1 ?\n+                'Only ' . static::$types[0] . ' keys are supported. ' :\n+                '';\n+            throw new UnsupportedAlgorithmException($error . 'This is an unsupported ' . $type . ' key');\n+        }\n+        $encryption = trim(preg_replace('#Encryption: (.+)#', '$1', $key[1]));\n+        $components['comment'] = trim(preg_replace('#Comment: (.+)#', '$1', $key[2]));\n+\n+        $publicLength = trim(preg_replace('#Public-Lines: (\\d+)#', '$1', $key[3]));\n+        $public = Strings::base64_decode(implode('', array_map('trim', array_slice($key, 4, $publicLength))));\n+\n+        $source = Strings::packSSH2('ssss', $type, $encryption, $components['comment'], $public);\n+\n+        extract(unpack('Nlength', Strings::shift($public, 4)));\n+        $newtype = Strings::shift($public, $length);\n+        if ($newtype != $type) {\n+            throw new \\RuntimeException('The binary type does not match the human readable type field');\n+        }\n+\n+        $components['public'] = $public;\n+\n+        switch ($version) {\n+            case 3:\n+                $hashkey = '';\n+                break;\n+            case 2:\n+                $hashkey = 'putty-private-key-file-mac-key';\n+        }\n+\n+        $offset = $publicLength + 4;\n+        switch ($encryption) {\n+            case 'aes256-cbc':\n+                $crypto = new AES('cbc');\n+                switch ($version) {\n+                    case 3:\n+                        $flavour = trim(preg_replace('#Key-Derivation: (.*)#', '$1', $key[$offset++]));\n+                        $memory = trim(preg_replace('#Argon2-Memory: (\\d+)#', '$1', $key[$offset++]));\n+                        $passes = trim(preg_replace('#Argon2-Passes: (\\d+)#', '$1', $key[$offset++]));\n+                        $parallelism = trim(preg_replace('#Argon2-Parallelism: (\\d+)#', '$1', $key[$offset++]));\n+                        $salt = Strings::hex2bin(trim(preg_replace('#Argon2-Salt: ([0-9a-f]+)#', '$1', $key[$offset++])));\n+\n+                        extract(self::generateV3Key($password, $flavour, $memory, $passes, $salt));\n+\n+                        break;\n+                    case 2:\n+                        $symkey = self::generateV2Key($password, 32);\n+                        $symiv = str_repeat(\"\\0\", $crypto->getBlockLength() >> 3);\n+                        $hashkey .= $password;\n+                }\n+        }\n+\n+        switch ($version) {\n+            case 3:\n+                $hash = new Hash('sha256');\n+                $hash->setKey($hashkey);\n+                break;\n+            case 2:\n+                $hash = new Hash('sha1');\n+                $hash->setKey(sha1($hashkey, true));\n+        }\n+\n+        $privateLength = trim(preg_replace('#Private-Lines: (\\d+)#', '$1', $key[$offset++]));\n+        $private = Strings::base64_decode(implode('', array_map('trim', array_slice($key, $offset, $privateLength))));\n+\n+        if ($encryption != 'none') {\n+            $crypto->setKey($symkey);\n+            $crypto->setIV($symiv);\n+            $crypto->disablePadding();\n+            $private = $crypto->decrypt($private);\n+        }\n+\n+        $source .= Strings::packSSH2('s', $private);\n+\n+        $hmac = trim(preg_replace('#Private-MAC: (.+)#', '$1', $key[$offset + $privateLength]));\n+        $hmac = Strings::hex2bin($hmac);\n+\n+        if (!hash_equals($hash->hash($source), $hmac)) {\n+            throw new \\UnexpectedValueException('MAC validation error');\n+        }\n+\n+        $components['private'] = $private;\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Wrap a private key appropriately\n+     *\n+     * @param string $public\n+     * @param string $private\n+     * @param string $type\n+     * @param string $password\n+     * @param array $options optional\n+     * @return string\n+     */\n+    protected static function wrapPrivateKey($public, $private, $type, $password, array $options = [])\n+    {\n+        $encryption = (!empty($password) || is_string($password)) ? 'aes256-cbc' : 'none';\n+        $comment = isset($options['comment']) ? $options['comment'] : self::$comment;\n+        $version = isset($options['version']) ? $options['version'] : self::$version;\n+\n+        $key = \"PuTTY-User-Key-File-$version: $type\\r\\n\";\n+        $key .= \"Encryption: $encryption\\r\\n\";\n+        $key .= \"Comment: $comment\\r\\n\";\n+\n+        $public = Strings::packSSH2('s', $type) . $public;\n+\n+        $source = Strings::packSSH2('ssss', $type, $encryption, $comment, $public);\n+\n+        $public = Strings::base64_encode($public);\n+        $key .= \"Public-Lines: \" . ((strlen($public) + 63) >> 6) . \"\\r\\n\";\n+        $key .= chunk_split($public, 64);\n+\n+        if (empty($password) && !is_string($password)) {\n+            $source .= Strings::packSSH2('s', $private);\n+            switch ($version) {\n+                case 3:\n+                    $hash = new Hash('sha256');\n+                    $hash->setKey('');\n+                    break;\n+                case 2:\n+                    $hash = new Hash('sha1');\n+                    $hash->setKey(sha1('putty-private-key-file-mac-key', true));\n+            }\n+        } else {\n+            $private .= Random::string(16 - (strlen($private) & 15));\n+            $source .= Strings::packSSH2('s', $private);\n+            $crypto = new AES('cbc');\n+\n+            switch ($version) {\n+                case 3:\n+                    $salt = Random::string(16);\n+                    $key .= \"Key-Derivation: Argon2id\\r\\n\";\n+                    $key .= \"Argon2-Memory: 8192\\r\\n\";\n+                    $key .= \"Argon2-Passes: 13\\r\\n\";\n+                    $key .= \"Argon2-Parallelism: 1\\r\\n\";\n+                    $key .= \"Argon2-Salt: \" . Strings::bin2hex($salt) . \"\\r\\n\";\n+                    extract(self::generateV3Key($password, 'Argon2id', 8192, 13, $salt));\n+\n+                    $hash = new Hash('sha256');\n+                    $hash->setKey($hashkey);\n+\n+                    break;\n+                case 2:\n+                    $symkey = self::generateV2Key($password, 32);\n+                    $symiv = str_repeat(\"\\0\", $crypto->getBlockLength() >> 3);\n+                    $hashkey = 'putty-private-key-file-mac-key' . $password;\n+\n+                    $hash = new Hash('sha1');\n+                    $hash->setKey(sha1($hashkey, true));\n+            }\n+\n+            $crypto->setKey($symkey);\n+            $crypto->setIV($symiv);\n+            $crypto->disablePadding();\n+            $private = $crypto->encrypt($private);\n+            $mac = $hash->hash($source);\n+        }\n+\n+        $private = Strings::base64_encode($private);\n+        $key .= 'Private-Lines: ' . ((strlen($private) + 63) >> 6) . \"\\r\\n\";\n+        $key .= chunk_split($private, 64);\n+        $key .= 'Private-MAC: ' . Strings::bin2hex($hash->hash($source)) . \"\\r\\n\";\n+\n+        return $key;\n+    }\n+\n+    /**\n+     * Wrap a public key appropriately\n+     *\n+     * This is basically the format described in RFC 4716 (https://tools.ietf.org/html/rfc4716)\n+     *\n+     * @param string $key\n+     * @param string $type\n+     * @return string\n+     */\n+    protected static function wrapPublicKey($key, $type)\n+    {\n+        $key = pack('Na*a*', strlen($type), $type, $key);\n+        $key = \"---- BEGIN SSH2 PUBLIC KEY ----\\r\\n\" .\n+               'Comment: \"' . str_replace(['\\\\', '\"'], ['\\\\\\\\', '\\\"'], self::$comment) . \"\\\"\\r\\n\" .\n+               chunk_split(Strings::base64_encode($key), 64) .\n+               '---- END SSH2 PUBLIC KEY ----';\n+        return $key;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Formats/Signature/Raw.php",
          "status": "added",
          "additions": 60,
          "deletions": 0,
          "patch": "@@ -0,0 +1,60 @@\n+<?php\n+\n+/**\n+ * Raw Signature Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Handles signatures as arrays\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Formats\\Signature;\n+\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * Raw Signature Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class Raw\n+{\n+    /**\n+     * Loads a signature\n+     *\n+     * @param array $sig\n+     * @return array|bool\n+     */\n+    public static function load($sig)\n+    {\n+        switch (true) {\n+            case !is_array($sig):\n+            case !isset($sig['r']) || !isset($sig['s']):\n+            case !$sig['r'] instanceof BigInteger:\n+            case !$sig['s'] instanceof BigInteger:\n+                return false;\n+        }\n+\n+        return [\n+            'r' => $sig['r'],\n+            's' => $sig['s']\n+        ];\n+    }\n+\n+    /**\n+     * Returns a signature in the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $r\n+     * @param \\phpseclib3\\Math\\BigInteger $s\n+     * @return string\n+     */\n+    public static function save(BigInteger $r, BigInteger $s)\n+    {\n+        return compact('r', 's');\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/PrivateKey.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -0,0 +1,31 @@\n+<?php\n+\n+/**\n+ * PrivateKey interface\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2009 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common;\n+\n+/**\n+ * PrivateKey interface\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+interface PrivateKey\n+{\n+    public function sign($message);\n+    //public function decrypt($ciphertext);\n+    public function getPublicKey();\n+    public function toString($type, array $options = []);\n+\n+    /**\n+     * @param string|false $password\n+     * @return mixed\n+     */\n+    public function withPassword($password = false);\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/PublicKey.php",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+<?php\n+\n+/**\n+ * PublicKey interface\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2009 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common;\n+\n+/**\n+ * PublicKey interface\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+interface PublicKey\n+{\n+    public function verify($message, $signature);\n+    //public function encrypt($plaintext);\n+    public function toString($type, array $options = []);\n+    public function getFingerprint($algorithm);\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/StreamCipher.php",
          "status": "added",
          "additions": 54,
          "deletions": 0,
          "patch": "@@ -0,0 +1,54 @@\n+<?php\n+\n+/**\n+ * Base Class for all stream ciphers\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @author    Hans-Juergen Petrich <petrich@tronic-media.com>\n+ * @copyright 2007 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common;\n+\n+/**\n+ * Base Class for all stream cipher classes\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class StreamCipher extends SymmetricKey\n+{\n+    /**\n+     * Block Length of the cipher\n+     *\n+     * Stream ciphers do not have a block size\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::block_size\n+     * @var int\n+     */\n+    protected $block_size = 0;\n+\n+    /**\n+     * Default Constructor.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::__construct()\n+     * @return \\phpseclib3\\Crypt\\Common\\StreamCipher\n+     */\n+    public function __construct()\n+    {\n+        parent::__construct('stream');\n+    }\n+\n+    /**\n+     * Stream ciphers not use an IV\n+     *\n+     * @return bool\n+     */\n+    public function usesIV()\n+    {\n+        return false;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/SymmetricKey.php",
          "status": "added",
          "additions": 3398,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Traits/Fingerprint.php",
          "status": "added",
          "additions": 57,
          "deletions": 0,
          "patch": "@@ -0,0 +1,57 @@\n+<?php\n+\n+/**\n+ * Fingerprint Trait for Public Keys\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Traits;\n+\n+use phpseclib3\\Crypt\\Hash;\n+\n+/**\n+ * Fingerprint Trait for Private Keys\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+trait Fingerprint\n+{\n+    /**\n+     * Returns the public key's fingerprint\n+     *\n+     * The public key's fingerprint is returned, which is equivalent to running `ssh-keygen -lf rsa.pub`. If there is\n+     * no public key currently loaded, false is returned.\n+     * Example output (md5): \"c1:b1:30:29:d7:b8:de:6c:97:77:10:d7:46:41:63:87\" (as specified by RFC 4716)\n+     *\n+     * @param string $algorithm The hashing algorithm to be used. Valid options are 'md5' and 'sha256'. False is returned\n+     * for invalid values.\n+     * @return mixed\n+     */\n+    public function getFingerprint($algorithm = 'md5')\n+    {\n+        $type = self::validatePlugin('Keys', 'OpenSSH', 'savePublicKey');\n+        if ($type === false) {\n+            return false;\n+        }\n+        $key = $this->toString('OpenSSH', ['binary' => true]);\n+        if ($key === false) {\n+            return false;\n+        }\n+        switch ($algorithm) {\n+            case 'sha256':\n+                $hash = new Hash('sha256');\n+                $base = base64_encode($hash->hash($key));\n+                return substr($base, 0, strlen($base) - 1);\n+            case 'md5':\n+                return substr(chunk_split(md5($key), 2, ':'), 0, -1);\n+            default:\n+                return false;\n+        }\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Common/Traits/PasswordProtected.php",
          "status": "added",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -0,0 +1,46 @@\n+<?php\n+\n+/**\n+ * Password Protected Trait for Private Keys\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\Common\\Traits;\n+\n+/**\n+ * Password Protected Trait for Private Keys\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+trait PasswordProtected\n+{\n+    /**\n+     * Password\n+     *\n+     * @var string|bool\n+     */\n+    private $password = false;\n+\n+    /**\n+     * Sets the password\n+     *\n+     * Private keys can be encrypted with a password.  To unset the password, pass in the empty string or false.\n+     * Or rather, pass in $password such that empty($password) && !is_string($password) is true.\n+     *\n+     * @see self::createKey()\n+     * @see self::load()\n+     * @param string|bool $password\n+     */\n+    public function withPassword($password = false)\n+    {\n+        $new = clone $this;\n+        $new->password = $password;\n+        return $new;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DES.php",
          "status": "added",
          "additions": 1392,
          "deletions": 0,
          "patch": "@@ -0,0 +1,1392 @@\n+<?php\n+\n+/**\n+ * Pure-PHP implementation of DES.\n+ *\n+ * Uses mcrypt, if available, and an internal implementation, otherwise.\n+ *\n+ * PHP version 5\n+ *\n+ * Useful resources are as follows:\n+ *\n+ *  - {@link http://en.wikipedia.org/wiki/DES_supplementary_material Wikipedia: DES supplementary material}\n+ *  - {@link http://www.itl.nist.gov/fipspubs/fip46-2.htm FIPS 46-2 - (DES), Data Encryption Standard}\n+ *  - {@link http://www.cs.eku.edu/faculty/styer/460/Encrypt/JS-DES.html JavaScript DES Example}\n+ *\n+ * Here's a short example of how to use this library:\n+ * <code>\n+ * <?php\n+ *    include 'vendor/autoload.php';\n+ *\n+ *    $des = new \\phpseclib3\\Crypt\\DES('ctr');\n+ *\n+ *    $des->setKey('abcdefgh');\n+ *\n+ *    $size = 10 * 1024;\n+ *    $plaintext = '';\n+ *    for ($i = 0; $i < $size; $i++) {\n+ *        $plaintext.= 'a';\n+ *    }\n+ *\n+ *    echo $des->decrypt($des->encrypt($plaintext));\n+ * ?>\n+ * </code>\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2007 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+use phpseclib3\\Crypt\\Common\\BlockCipher;\n+use phpseclib3\\Exception\\BadModeException;\n+\n+/**\n+ * Pure-PHP implementation of DES.\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+class DES extends BlockCipher\n+{\n+    /**\n+     * Contains $keys[self::ENCRYPT]\n+     *\n+     * @see \\phpseclib3\\Crypt\\DES::setupKey()\n+     * @see \\phpseclib3\\Crypt\\DES::processBlock()\n+     */\n+    const ENCRYPT = 0;\n+    /**\n+     * Contains $keys[self::DECRYPT]\n+     *\n+     * @see \\phpseclib3\\Crypt\\DES::setupKey()\n+     * @see \\phpseclib3\\Crypt\\DES::processBlock()\n+     */\n+    const DECRYPT = 1;\n+\n+    /**\n+     * Block Length of the cipher\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::block_size\n+     * @var int\n+     */\n+    protected $block_size = 8;\n+\n+    /**\n+     * Key Length (in bytes)\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::setKeyLength()\n+     * @var int\n+     */\n+    protected $key_length = 8;\n+\n+    /**\n+     * The mcrypt specific name of the cipher\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::cipher_name_mcrypt\n+     * @var string\n+     */\n+    protected $cipher_name_mcrypt = 'des';\n+\n+    /**\n+     * The OpenSSL names of the cipher / modes\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::openssl_mode_names\n+     * @var array\n+     */\n+    protected $openssl_mode_names = [\n+        self::MODE_ECB => 'des-ecb',\n+        self::MODE_CBC => 'des-cbc',\n+        self::MODE_CFB => 'des-cfb',\n+        self::MODE_OFB => 'des-ofb'\n+        // self::MODE_CTR is undefined for DES\n+    ];\n+\n+    /**\n+     * Optimizing value while CFB-encrypting\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::cfb_init_len\n+     * @var int\n+     */\n+    protected $cfb_init_len = 500;\n+\n+    /**\n+     * Switch for DES/3DES encryption\n+     *\n+     * Used only if $engine == self::ENGINE_INTERNAL\n+     *\n+     * @see self::setupKey()\n+     * @see self::processBlock()\n+     * @var int\n+     */\n+    protected $des_rounds = 1;\n+\n+    /**\n+     * max possible size of $key\n+     *\n+     * @see self::setKey()\n+     * @var string\n+     */\n+    protected $key_length_max = 8;\n+\n+    /**\n+     * The Key Schedule\n+     *\n+     * @see self::setupKey()\n+     * @var array\n+     */\n+    private $keys;\n+\n+    /**\n+     * Key Cache \"key\"\n+     *\n+     * @see self::setupKey()\n+     * @var array\n+     */\n+    private $kl;\n+\n+    /**\n+     * Shuffle table.\n+     *\n+     * For each byte value index, the entry holds an 8-byte string\n+     * with each byte containing all bits in the same state as the\n+     * corresponding bit in the index value.\n+     *\n+     * @see self::processBlock()\n+     * @see self::setupKey()\n+     * @var array\n+     */\n+    protected static $shuffle = [\n+        \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\", \"\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\", \"\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\x00\\xFF\\xFF\\x00\", \"\\x00\\x00\\x00\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\\x00\", \"\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\xFF\\x00\\xFF\\x00\", \"\\x00\\x00\\x00\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\xFF\\xFF\\x00\\x00\", \"\\x00\\x00\\x00\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\x00\\xFF\\xFF\\xFF\\x00\", \"\\x00\\x00\\x00\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\", \"\\x00\\x00\\x00\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\", \"\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\x00\\xFF\\x00\\x00\", \"\\x00\\x00\\x00\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\x00\\xFF\\xFF\\x00\", \"\\x00\\x00\\x00\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\xFF\\x00\\x00\\x00\", \"\\x00\\x00\\x00\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\xFF\\x00\\xFF\\x00\", \"\\x00\\x00\\x00\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\xFF\\xFF\\x00\\x00\", \"\\x00\\x00\\x00\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\x00\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\", \"\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\x00\\x00\\xFF\\x00\", \"\\x00\\x00\\xFF\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\", \"\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\x00\\xFF\\xFF\\x00\", \"\\x00\\x00\\xFF\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\xFF\\x00\\x00\\x00\", \"\\x00\\x00\\xFF\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\xFF\\x00\\xFF\\x00\", \"\\x00\\x00\\xFF\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\xFF\\xFF\\x00\\x00\", \"\\x00\\x00\\xFF\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\x00\", \"\\x00\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\x00\\x00\\x00\\x00\", \"\\x00\\x00\\xFF\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\x00\\x00\\xFF\\x00\", \"\\x00\\x00\\xFF\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\x00\\xFF\\x00\\x00\", \"\\x00\\x00\\xFF\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\x00\", \"\\x00\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\xFF\\x00\\x00\\x00\", \"\\x00\\x00\\xFF\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\x00\", \"\\x00\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\x00\", \"\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\", \"\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\x00\\x00\\xFF\\x00\", \"\\x00\\xFF\\x00\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\x00\\xFF\\x00\\x00\", \"\\x00\\xFF\\x00\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\x00\\xFF\\xFF\\x00\", \"\\x00\\xFF\\x00\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\", \"\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\xFF\\x00\\xFF\\x00\", \"\\x00\\xFF\\x00\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\xFF\\xFF\\x00\\x00\", \"\\x00\\xFF\\x00\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\x00\", \"\\x00\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\x00\\x00\\x00\\x00\", \"\\x00\\xFF\\x00\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\x00\\x00\\xFF\\x00\", \"\\x00\\xFF\\x00\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\x00\\xFF\\x00\\x00\", \"\\x00\\xFF\\x00\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\x00\", \"\\x00\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\xFF\\x00\\x00\\x00\", \"\\x00\\xFF\\x00\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\x00\", \"\\x00\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\x00\", \"\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\x00\\x00\\x00\\x00\", \"\\x00\\xFF\\xFF\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\x00\\x00\\xFF\\x00\", \"\\x00\\xFF\\xFF\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\x00\\xFF\\x00\\x00\", \"\\x00\\xFF\\xFF\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\x00\", \"\\x00\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\xFF\\x00\\x00\\x00\", \"\\x00\\xFF\\xFF\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\x00\", \"\\x00\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\x00\", \"\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\x00\", \"\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\", \"\\x00\\xFF\\xFF\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\x00\", \"\\x00\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\x00\", \"\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\x00\", \"\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\", \"\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\x00\", \"\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\", \"\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", \"\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\", \"\\xFF\\x00\\x00\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\", \"\\xFF\\x00\\x00\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\x00\\xFF\\xFF\\x00\", \"\\xFF\\x00\\x00\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\xFF\\x00\\x00\\x00\", \"\\xFF\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\xFF\\x00\\xFF\\x00\", \"\\xFF\\x00\\x00\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\xFF\\xFF\\x00\\x00\", \"\\xFF\\x00\\x00\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\x00\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\x00\\x00\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\", \"\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\", \"\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\x00\\xFF\\x00\\x00\", \"\\xFF\\x00\\x00\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\x00\\xFF\\xFF\\x00\", \"\\xFF\\x00\\x00\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\xFF\\x00\\x00\\x00\", \"\\xFF\\x00\\x00\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\xFF\\x00\\xFF\\x00\", \"\\xFF\\x00\\x00\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\x00\\x00\", \"\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\", \"\\xFF\\x00\\xFF\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\x00\\x00\\xFF\\x00\", \"\\xFF\\x00\\xFF\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\", \"\\xFF\\x00\\xFF\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\x00\\xFF\\xFF\\x00\", \"\\xFF\\x00\\xFF\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\xFF\\x00\\x00\\x00\", \"\\xFF\\x00\\xFF\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\xFF\\x00\\xFF\\x00\", \"\\xFF\\x00\\xFF\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\x00\\x00\", \"\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\x00\\x00\\x00\\x00\", \"\\xFF\\x00\\xFF\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\x00\\x00\\xFF\\x00\", \"\\xFF\\x00\\xFF\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\x00\\x00\", \"\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\x00\", \"\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\x00\\x00\", \"\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\x00\", \"\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\x00\", \"\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\", \"\\xFF\\xFF\\x00\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\x00\\x00\\xFF\\x00\", \"\\xFF\\xFF\\x00\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\x00\\xFF\\x00\\x00\", \"\\xFF\\xFF\\x00\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\x00\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\x00\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\", \"\\xFF\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\xFF\\x00\\xFF\\x00\", \"\\xFF\\xFF\\x00\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\x00\\x00\", \"\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\x00\\x00\\x00\\x00\", \"\\xFF\\xFF\\x00\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\x00\\x00\\xFF\\x00\", \"\\xFF\\xFF\\x00\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\x00\\x00\", \"\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\x00\\x00\", \"\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\x00\", \"\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\x00\", \"\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\\x00\", \"\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\x00\\x00\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\x00\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\x00\\x00\", \"\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\x00\\x00\", \"\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\x00\", \"\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\\xFF\",\n+        \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\x00\", \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\"\n+    ];\n+\n+    /**\n+     * IP mapping helper table.\n+     *\n+     * Indexing this table with each source byte performs the initial bit permutation.\n+     *\n+     * @var array\n+     */\n+    protected static $ipmap = [\n+        0x00, 0x10, 0x01, 0x11, 0x20, 0x30, 0x21, 0x31,\n+        0x02, 0x12, 0x03, 0x13, 0x22, 0x32, 0x23, 0x33,\n+        0x40, 0x50, 0x41, 0x51, 0x60, 0x70, 0x61, 0x71,\n+        0x42, 0x52, 0x43, 0x53, 0x62, 0x72, 0x63, 0x73,\n+        0x04, 0x14, 0x05, 0x15, 0x24, 0x34, 0x25, 0x35,\n+        0x06, 0x16, 0x07, 0x17, 0x26, 0x36, 0x27, 0x37,\n+        0x44, 0x54, 0x45, 0x55, 0x64, 0x74, 0x65, 0x75,\n+        0x46, 0x56, 0x47, 0x57, 0x66, 0x76, 0x67, 0x77,\n+        0x80, 0x90, 0x81, 0x91, 0xA0, 0xB0, 0xA1, 0xB1,\n+        0x82, 0x92, 0x83, 0x93, 0xA2, 0xB2, 0xA3, 0xB3,\n+        0xC0, 0xD0, 0xC1, 0xD1, 0xE0, 0xF0, 0xE1, 0xF1,\n+        0xC2, 0xD2, 0xC3, 0xD3, 0xE2, 0xF2, 0xE3, 0xF3,\n+        0x84, 0x94, 0x85, 0x95, 0xA4, 0xB4, 0xA5, 0xB5,\n+        0x86, 0x96, 0x87, 0x97, 0xA6, 0xB6, 0xA7, 0xB7,\n+        0xC4, 0xD4, 0xC5, 0xD5, 0xE4, 0xF4, 0xE5, 0xF5,\n+        0xC6, 0xD6, 0xC7, 0xD7, 0xE6, 0xF6, 0xE7, 0xF7,\n+        0x08, 0x18, 0x09, 0x19, 0x28, 0x38, 0x29, 0x39,\n+        0x0A, 0x1A, 0x0B, 0x1B, 0x2A, 0x3A, 0x2B, 0x3B,\n+        0x48, 0x58, 0x49, 0x59, 0x68, 0x78, 0x69, 0x79,\n+        0x4A, 0x5A, 0x4B, 0x5B, 0x6A, 0x7A, 0x6B, 0x7B,\n+        0x0C, 0x1C, 0x0D, 0x1D, 0x2C, 0x3C, 0x2D, 0x3D,\n+        0x0E, 0x1E, 0x0F, 0x1F, 0x2E, 0x3E, 0x2F, 0x3F,\n+        0x4C, 0x5C, 0x4D, 0x5D, 0x6C, 0x7C, 0x6D, 0x7D,\n+        0x4E, 0x5E, 0x4F, 0x5F, 0x6E, 0x7E, 0x6F, 0x7F,\n+        0x88, 0x98, 0x89, 0x99, 0xA8, 0xB8, 0xA9, 0xB9,\n+        0x8A, 0x9A, 0x8B, 0x9B, 0xAA, 0xBA, 0xAB, 0xBB,\n+        0xC8, 0xD8, 0xC9, 0xD9, 0xE8, 0xF8, 0xE9, 0xF9,\n+        0xCA, 0xDA, 0xCB, 0xDB, 0xEA, 0xFA, 0xEB, 0xFB,\n+        0x8C, 0x9C, 0x8D, 0x9D, 0xAC, 0xBC, 0xAD, 0xBD,\n+        0x8E, 0x9E, 0x8F, 0x9F, 0xAE, 0xBE, 0xAF, 0xBF,\n+        0xCC, 0xDC, 0xCD, 0xDD, 0xEC, 0xFC, 0xED, 0xFD,\n+        0xCE, 0xDE, 0xCF, 0xDF, 0xEE, 0xFE, 0xEF, 0xFF\n+    ];\n+\n+    /**\n+     * Inverse IP mapping helper table.\n+     * Indexing this table with a byte value reverses the bit order.\n+     *\n+     * @var array\n+     */\n+    protected static $invipmap = [\n+        0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0,\n+        0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0,\n+        0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8,\n+        0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8,\n+        0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4,\n+        0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4,\n+        0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC,\n+        0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC,\n+        0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2,\n+        0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2,\n+        0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA,\n+        0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,\n+        0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6,\n+        0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6,\n+        0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE,\n+        0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,\n+        0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1,\n+        0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,\n+        0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9,\n+        0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9,\n+        0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5,\n+        0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,\n+        0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED,\n+        0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,\n+        0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3,\n+        0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3,\n+        0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB,\n+        0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,\n+        0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7,\n+        0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7,\n+        0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF,\n+        0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box1\n+     *\n+     * Each box ($sbox1-$sbox8) has been vectorized, then each value pre-permuted using the\n+     * P table: concatenation can then be replaced by exclusive ORs.\n+     *\n+     * @var array\n+     */\n+    protected static $sbox1 = [\n+        0x00808200, 0x00000000, 0x00008000, 0x00808202,\n+        0x00808002, 0x00008202, 0x00000002, 0x00008000,\n+        0x00000200, 0x00808200, 0x00808202, 0x00000200,\n+        0x00800202, 0x00808002, 0x00800000, 0x00000002,\n+        0x00000202, 0x00800200, 0x00800200, 0x00008200,\n+        0x00008200, 0x00808000, 0x00808000, 0x00800202,\n+        0x00008002, 0x00800002, 0x00800002, 0x00008002,\n+        0x00000000, 0x00000202, 0x00008202, 0x00800000,\n+        0x00008000, 0x00808202, 0x00000002, 0x00808000,\n+        0x00808200, 0x00800000, 0x00800000, 0x00000200,\n+        0x00808002, 0x00008000, 0x00008200, 0x00800002,\n+        0x00000200, 0x00000002, 0x00800202, 0x00008202,\n+        0x00808202, 0x00008002, 0x00808000, 0x00800202,\n+        0x00800002, 0x00000202, 0x00008202, 0x00808200,\n+        0x00000202, 0x00800200, 0x00800200, 0x00000000,\n+        0x00008002, 0x00008200, 0x00000000, 0x00808002\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box2\n+     *\n+     * @var array\n+     */\n+    protected static $sbox2 = [\n+        0x40084010, 0x40004000, 0x00004000, 0x00084010,\n+        0x00080000, 0x00000010, 0x40080010, 0x40004010,\n+        0x40000010, 0x40084010, 0x40084000, 0x40000000,\n+        0x40004000, 0x00080000, 0x00000010, 0x40080010,\n+        0x00084000, 0x00080010, 0x40004010, 0x00000000,\n+        0x40000000, 0x00004000, 0x00084010, 0x40080000,\n+        0x00080010, 0x40000010, 0x00000000, 0x00084000,\n+        0x00004010, 0x40084000, 0x40080000, 0x00004010,\n+        0x00000000, 0x00084010, 0x40080010, 0x00080000,\n+        0x40004010, 0x40080000, 0x40084000, 0x00004000,\n+        0x40080000, 0x40004000, 0x00000010, 0x40084010,\n+        0x00084010, 0x00000010, 0x00004000, 0x40000000,\n+        0x00004010, 0x40084000, 0x00080000, 0x40000010,\n+        0x00080010, 0x40004010, 0x40000010, 0x00080010,\n+        0x00084000, 0x00000000, 0x40004000, 0x00004010,\n+        0x40000000, 0x40080010, 0x40084010, 0x00084000\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box3\n+     *\n+     * @var array\n+     */\n+    protected static $sbox3 = [\n+        0x00000104, 0x04010100, 0x00000000, 0x04010004,\n+        0x04000100, 0x00000000, 0x00010104, 0x04000100,\n+        0x00010004, 0x04000004, 0x04000004, 0x00010000,\n+        0x04010104, 0x00010004, 0x04010000, 0x00000104,\n+        0x04000000, 0x00000004, 0x04010100, 0x00000100,\n+        0x00010100, 0x04010000, 0x04010004, 0x00010104,\n+        0x04000104, 0x00010100, 0x00010000, 0x04000104,\n+        0x00000004, 0x04010104, 0x00000100, 0x04000000,\n+        0x04010100, 0x04000000, 0x00010004, 0x00000104,\n+        0x00010000, 0x04010100, 0x04000100, 0x00000000,\n+        0x00000100, 0x00010004, 0x04010104, 0x04000100,\n+        0x04000004, 0x00000100, 0x00000000, 0x04010004,\n+        0x04000104, 0x00010000, 0x04000000, 0x04010104,\n+        0x00000004, 0x00010104, 0x00010100, 0x04000004,\n+        0x04010000, 0x04000104, 0x00000104, 0x04010000,\n+        0x00010104, 0x00000004, 0x04010004, 0x00010100\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box4\n+     *\n+     * @var array\n+     */\n+    protected static $sbox4 = [\n+        0x80401000, 0x80001040, 0x80001040, 0x00000040,\n+        0x00401040, 0x80400040, 0x80400000, 0x80001000,\n+        0x00000000, 0x00401000, 0x00401000, 0x80401040,\n+        0x80000040, 0x00000000, 0x00400040, 0x80400000,\n+        0x80000000, 0x00001000, 0x00400000, 0x80401000,\n+        0x00000040, 0x00400000, 0x80001000, 0x00001040,\n+        0x80400040, 0x80000000, 0x00001040, 0x00400040,\n+        0x00001000, 0x00401040, 0x80401040, 0x80000040,\n+        0x00400040, 0x80400000, 0x00401000, 0x80401040,\n+        0x80000040, 0x00000000, 0x00000000, 0x00401000,\n+        0x00001040, 0x00400040, 0x80400040, 0x80000000,\n+        0x80401000, 0x80001040, 0x80001040, 0x00000040,\n+        0x80401040, 0x80000040, 0x80000000, 0x00001000,\n+        0x80400000, 0x80001000, 0x00401040, 0x80400040,\n+        0x80001000, 0x00001040, 0x00400000, 0x80401000,\n+        0x00000040, 0x00400000, 0x00001000, 0x00401040\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box5\n+     *\n+     * @var array\n+     */\n+    protected static $sbox5 = [\n+        0x00000080, 0x01040080, 0x01040000, 0x21000080,\n+        0x00040000, 0x00000080, 0x20000000, 0x01040000,\n+        0x20040080, 0x00040000, 0x01000080, 0x20040080,\n+        0x21000080, 0x21040000, 0x00040080, 0x20000000,\n+        0x01000000, 0x20040000, 0x20040000, 0x00000000,\n+        0x20000080, 0x21040080, 0x21040080, 0x01000080,\n+        0x21040000, 0x20000080, 0x00000000, 0x21000000,\n+        0x01040080, 0x01000000, 0x21000000, 0x00040080,\n+        0x00040000, 0x21000080, 0x00000080, 0x01000000,\n+        0x20000000, 0x01040000, 0x21000080, 0x20040080,\n+        0x01000080, 0x20000000, 0x21040000, 0x01040080,\n+        0x20040080, 0x00000080, 0x01000000, 0x21040000,\n+        0x21040080, 0x00040080, 0x21000000, 0x21040080,\n+        0x01040000, 0x00000000, 0x20040000, 0x21000000,\n+        0x00040080, 0x01000080, 0x20000080, 0x00040000,\n+        0x00000000, 0x20040000, 0x01040080, 0x20000080\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box6\n+     *\n+     * @var array\n+     */\n+    protected static $sbox6 = [\n+        0x10000008, 0x10200000, 0x00002000, 0x10202008,\n+        0x10200000, 0x00000008, 0x10202008, 0x00200000,\n+        0x10002000, 0x00202008, 0x00200000, 0x10000008,\n+        0x00200008, 0x10002000, 0x10000000, 0x00002008,\n+        0x00000000, 0x00200008, 0x10002008, 0x00002000,\n+        0x00202000, 0x10002008, 0x00000008, 0x10200008,\n+        0x10200008, 0x00000000, 0x00202008, 0x10202000,\n+        0x00002008, 0x00202000, 0x10202000, 0x10000000,\n+        0x10002000, 0x00000008, 0x10200008, 0x00202000,\n+        0x10202008, 0x00200000, 0x00002008, 0x10000008,\n+        0x00200000, 0x10002000, 0x10000000, 0x00002008,\n+        0x10000008, 0x10202008, 0x00202000, 0x10200000,\n+        0x00202008, 0x10202000, 0x00000000, 0x10200008,\n+        0x00000008, 0x00002000, 0x10200000, 0x00202008,\n+        0x00002000, 0x00200008, 0x10002008, 0x00000000,\n+        0x10202000, 0x10000000, 0x00200008, 0x10002008\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box7\n+     *\n+     * @var array\n+     */\n+    protected static $sbox7 = [\n+        0x00100000, 0x02100001, 0x02000401, 0x00000000,\n+        0x00000400, 0x02000401, 0x00100401, 0x02100400,\n+        0x02100401, 0x00100000, 0x00000000, 0x02000001,\n+        0x00000001, 0x02000000, 0x02100001, 0x00000401,\n+        0x02000400, 0x00100401, 0x00100001, 0x02000400,\n+        0x02000001, 0x02100000, 0x02100400, 0x00100001,\n+        0x02100000, 0x00000400, 0x00000401, 0x02100401,\n+        0x00100400, 0x00000001, 0x02000000, 0x00100400,\n+        0x02000000, 0x00100400, 0x00100000, 0x02000401,\n+        0x02000401, 0x02100001, 0x02100001, 0x00000001,\n+        0x00100001, 0x02000000, 0x02000400, 0x00100000,\n+        0x02100400, 0x00000401, 0x00100401, 0x02100400,\n+        0x00000401, 0x02000001, 0x02100401, 0x02100000,\n+        0x00100400, 0x00000000, 0x00000001, 0x02100401,\n+        0x00000000, 0x00100401, 0x02100000, 0x00000400,\n+        0x02000001, 0x02000400, 0x00000400, 0x00100001\n+    ];\n+\n+    /**\n+     * Pre-permuted S-box8\n+     *\n+     * @var array\n+     */\n+    protected static $sbox8 = [\n+        0x08000820, 0x00000800, 0x00020000, 0x08020820,\n+        0x08000000, 0x08000820, 0x00000020, 0x08000000,\n+        0x00020020, 0x08020000, 0x08020820, 0x00020800,\n+        0x08020800, 0x00020820, 0x00000800, 0x00000020,\n+        0x08020000, 0x08000020, 0x08000800, 0x00000820,\n+        0x00020800, 0x00020020, 0x08020020, 0x08020800,\n+        0x00000820, 0x00000000, 0x00000000, 0x08020020,\n+        0x08000020, 0x08000800, 0x00020820, 0x00020000,\n+        0x00020820, 0x00020000, 0x08020800, 0x00000800,\n+        0x00000020, 0x08020020, 0x00000800, 0x00020820,\n+        0x08000800, 0x00000020, 0x08000020, 0x08020000,\n+        0x08020020, 0x08000000, 0x00020000, 0x08000820,\n+        0x00000000, 0x08020820, 0x00020020, 0x08000020,\n+        0x08020000, 0x08000800, 0x08000820, 0x00000000,\n+        0x08020820, 0x00020800, 0x00020800, 0x00000820,\n+        0x00000820, 0x00020020, 0x08000000, 0x08020800\n+    ];\n+\n+    /**\n+     * Default Constructor.\n+     *\n+     * @param string $mode\n+     * @throws BadModeException if an invalid / unsupported mode is provided\n+     */\n+    public function __construct($mode)\n+    {\n+        parent::__construct($mode);\n+\n+        if ($this->mode == self::MODE_STREAM) {\n+            throw new BadModeException('Block ciphers cannot be ran in stream mode');\n+        }\n+    }\n+\n+    /**\n+     * Test for engine validity\n+     *\n+     * This is mainly just a wrapper to set things up for \\phpseclib3\\Crypt\\Common\\SymmetricKey::isValidEngine()\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::isValidEngine()\n+     * @param int $engine\n+     * @return bool\n+     */\n+    protected function isValidEngineHelper($engine)\n+    {\n+        if ($this->key_length_max == 8) {\n+            if ($engine == self::ENGINE_OPENSSL) {\n+                // quoting https://www.openssl.org/news/openssl-3.0-notes.html, OpenSSL 3.0.1\n+                // \"Moved all variations of the EVP ciphers CAST5, BF, IDEA, SEED, RC2, RC4, RC5, and DES to the legacy provider\"\n+                // in theory openssl_get_cipher_methods() should catch this but, on GitHub Actions, at least, it does not\n+                if (defined('OPENSSL_VERSION_TEXT') && version_compare(preg_replace('#OpenSSL (\\d+\\.\\d+\\.\\d+) .*#', '$1', OPENSSL_VERSION_TEXT), '3.0.1', '>=')) {\n+                    return false;\n+                }\n+                $this->cipher_name_openssl_ecb = 'des-ecb';\n+                $this->cipher_name_openssl = 'des-' . $this->openssl_translate_mode();\n+            }\n+        }\n+\n+        return parent::isValidEngineHelper($engine);\n+    }\n+\n+    /**\n+     * Sets the key.\n+     *\n+     * Keys must be 64-bits long or 8 bytes long.\n+     *\n+     * DES also requires that every eighth bit be a parity bit, however, we'll ignore that.\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::setKey()\n+     * @param string $key\n+     */\n+    public function setKey($key)\n+    {\n+        if (!($this instanceof TripleDES) && strlen($key) != 8) {\n+            throw new \\LengthException('Key of size ' . strlen($key) . ' not supported by this algorithm. Only keys of size 8 are supported');\n+        }\n+\n+        // Sets the key\n+        parent::setKey($key);\n+    }\n+\n+    /**\n+     * Encrypts a block\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::encryptBlock()\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::encrypt()\n+     * @see self::encrypt()\n+     * @param string $in\n+     * @return string\n+     */\n+    protected function encryptBlock($in)\n+    {\n+        return $this->processBlock($in, self::ENCRYPT);\n+    }\n+\n+    /**\n+     * Decrypts a block\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::decryptBlock()\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::decrypt()\n+     * @see self::decrypt()\n+     * @param string $in\n+     * @return string\n+     */\n+    protected function decryptBlock($in)\n+    {\n+        return $this->processBlock($in, self::DECRYPT);\n+    }\n+\n+    /**\n+     * Encrypts or decrypts a 64-bit block\n+     *\n+     * $mode should be either self::ENCRYPT or self::DECRYPT.  See\n+     * {@link http://en.wikipedia.org/wiki/Image:Feistel.png Feistel.png} to get a general\n+     * idea of what this function does.\n+     *\n+     * @see self::encryptBlock()\n+     * @see self::decryptBlock()\n+     * @param string $block\n+     * @param int $mode\n+     * @return string\n+     */\n+    private function processBlock($block, $mode)\n+    {\n+        static $sbox1, $sbox2, $sbox3, $sbox4, $sbox5, $sbox6, $sbox7, $sbox8, $shuffleip, $shuffleinvip;\n+        if (!$sbox1) {\n+            $sbox1 = array_map('intval', self::$sbox1);\n+            $sbox2 = array_map('intval', self::$sbox2);\n+            $sbox3 = array_map('intval', self::$sbox3);\n+            $sbox4 = array_map('intval', self::$sbox4);\n+            $sbox5 = array_map('intval', self::$sbox5);\n+            $sbox6 = array_map('intval', self::$sbox6);\n+            $sbox7 = array_map('intval', self::$sbox7);\n+            $sbox8 = array_map('intval', self::$sbox8);\n+            /* Merge $shuffle with $[inv]ipmap */\n+            for ($i = 0; $i < 256; ++$i) {\n+                $shuffleip[]    =  self::$shuffle[self::$ipmap[$i]];\n+                $shuffleinvip[] =  self::$shuffle[self::$invipmap[$i]];\n+            }\n+        }\n+\n+        $keys  = $this->keys[$mode];\n+        $ki    = -1;\n+\n+        // Do the initial IP permutation.\n+        $t = unpack('Nl/Nr', $block);\n+        list($l, $r) = [$t['l'], $t['r']];\n+        $block = ($shuffleip[ $r        & 0xFF] & \"\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\") |\n+                 ($shuffleip[($r >>  8) & 0xFF] & \"\\x40\\x40\\x40\\x40\\x40\\x40\\x40\\x40\") |\n+                 ($shuffleip[($r >> 16) & 0xFF] & \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\") |\n+                 ($shuffleip[($r >> 24) & 0xFF] & \"\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\") |\n+                 ($shuffleip[ $l        & 0xFF] & \"\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\") |\n+                 ($shuffleip[($l >>  8) & 0xFF] & \"\\x04\\x04\\x04\\x04\\x04\\x04\\x04\\x04\") |\n+                 ($shuffleip[($l >> 16) & 0xFF] & \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\") |\n+                 ($shuffleip[($l >> 24) & 0xFF] & \"\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\");\n+\n+        // Extract L0 and R0.\n+        $t = unpack('Nl/Nr', $block);\n+        list($l, $r) = [$t['l'], $t['r']];\n+\n+        for ($des_round = 0; $des_round < $this->des_rounds; ++$des_round) {\n+            // Perform the 16 steps.\n+            for ($i = 0; $i < 16; $i++) {\n+                // start of \"the Feistel (F) function\" - see the following URL:\n+                // http://en.wikipedia.org/wiki/Image:Data_Encryption_Standard_InfoBox_Diagram.png\n+                // Merge key schedule.\n+                $b1 = (($r >>  3) & 0x1FFFFFFF) ^ ($r << 29) ^ $keys[++$ki];\n+                $b2 = (($r >> 31) & 0x00000001) ^ ($r <<  1) ^ $keys[++$ki];\n+\n+                // S-box indexing.\n+                $t = $sbox1[($b1 >> 24) & 0x3F] ^ $sbox2[($b2 >> 24) & 0x3F] ^\n+                     $sbox3[($b1 >> 16) & 0x3F] ^ $sbox4[($b2 >> 16) & 0x3F] ^\n+                     $sbox5[($b1 >>  8) & 0x3F] ^ $sbox6[($b2 >>  8) & 0x3F] ^\n+                     $sbox7[ $b1        & 0x3F] ^ $sbox8[ $b2        & 0x3F] ^ $l;\n+                // end of \"the Feistel (F) function\"\n+\n+                $l = $r;\n+                $r = $t;\n+            }\n+\n+            // Last step should not permute L & R.\n+            $t = $l;\n+            $l = $r;\n+            $r = $t;\n+        }\n+\n+        // Perform the inverse IP permutation.\n+        return ($shuffleinvip[($r >> 24) & 0xFF] & \"\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\") |\n+               ($shuffleinvip[($l >> 24) & 0xFF] & \"\\x40\\x40\\x40\\x40\\x40\\x40\\x40\\x40\") |\n+               ($shuffleinvip[($r >> 16) & 0xFF] & \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\") |\n+               ($shuffleinvip[($l >> 16) & 0xFF] & \"\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\") |\n+               ($shuffleinvip[($r >>  8) & 0xFF] & \"\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\") |\n+               ($shuffleinvip[($l >>  8) & 0xFF] & \"\\x04\\x04\\x04\\x04\\x04\\x04\\x04\\x04\") |\n+               ($shuffleinvip[ $r        & 0xFF] & \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\") |\n+               ($shuffleinvip[ $l        & 0xFF] & \"\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\");\n+    }\n+\n+    /**\n+     * Creates the key schedule\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::setupKey()\n+     */\n+    protected function setupKey()\n+    {\n+        if (isset($this->kl['key']) && $this->key === $this->kl['key'] && $this->des_rounds === $this->kl['des_rounds']) {\n+            // already expanded\n+            return;\n+        }\n+        $this->kl = ['key' => $this->key, 'des_rounds' => $this->des_rounds];\n+\n+        static $shifts = [ // number of key bits shifted per round\n+            1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1\n+        ];\n+\n+        static $pc1map = [\n+            0x00, 0x00, 0x08, 0x08, 0x04, 0x04, 0x0C, 0x0C,\n+            0x02, 0x02, 0x0A, 0x0A, 0x06, 0x06, 0x0E, 0x0E,\n+            0x10, 0x10, 0x18, 0x18, 0x14, 0x14, 0x1C, 0x1C,\n+            0x12, 0x12, 0x1A, 0x1A, 0x16, 0x16, 0x1E, 0x1E,\n+            0x20, 0x20, 0x28, 0x28, 0x24, 0x24, 0x2C, 0x2C,\n+            0x22, 0x22, 0x2A, 0x2A, 0x26, 0x26, 0x2E, 0x2E,\n+            0x30, 0x30, 0x38, 0x38, 0x34, 0x34, 0x3C, 0x3C,\n+            0x32, 0x32, 0x3A, 0x3A, 0x36, 0x36, 0x3E, 0x3E,\n+            0x40, 0x40, 0x48, 0x48, 0x44, 0x44, 0x4C, 0x4C,\n+            0x42, 0x42, 0x4A, 0x4A, 0x46, 0x46, 0x4E, 0x4E,\n+            0x50, 0x50, 0x58, 0x58, 0x54, 0x54, 0x5C, 0x5C,\n+            0x52, 0x52, 0x5A, 0x5A, 0x56, 0x56, 0x5E, 0x5E,\n+            0x60, 0x60, 0x68, 0x68, 0x64, 0x64, 0x6C, 0x6C,\n+            0x62, 0x62, 0x6A, 0x6A, 0x66, 0x66, 0x6E, 0x6E,\n+            0x70, 0x70, 0x78, 0x78, 0x74, 0x74, 0x7C, 0x7C,\n+            0x72, 0x72, 0x7A, 0x7A, 0x76, 0x76, 0x7E, 0x7E,\n+            0x80, 0x80, 0x88, 0x88, 0x84, 0x84, 0x8C, 0x8C,\n+            0x82, 0x82, 0x8A, 0x8A, 0x86, 0x86, 0x8E, 0x8E,\n+            0x90, 0x90, 0x98, 0x98, 0x94, 0x94, 0x9C, 0x9C,\n+            0x92, 0x92, 0x9A, 0x9A, 0x96, 0x96, 0x9E, 0x9E,\n+            0xA0, 0xA0, 0xA8, 0xA8, 0xA4, 0xA4, 0xAC, 0xAC,\n+            0xA2, 0xA2, 0xAA, 0xAA, 0xA6, 0xA6, 0xAE, 0xAE,\n+            0xB0, 0xB0, 0xB8, 0xB8, 0xB4, 0xB4, 0xBC, 0xBC,\n+            0xB2, 0xB2, 0xBA, 0xBA, 0xB6, 0xB6, 0xBE, 0xBE,\n+            0xC0, 0xC0, 0xC8, 0xC8, 0xC4, 0xC4, 0xCC, 0xCC,\n+            0xC2, 0xC2, 0xCA, 0xCA, 0xC6, 0xC6, 0xCE, 0xCE,\n+            0xD0, 0xD0, 0xD8, 0xD8, 0xD4, 0xD4, 0xDC, 0xDC,\n+            0xD2, 0xD2, 0xDA, 0xDA, 0xD6, 0xD6, 0xDE, 0xDE,\n+            0xE0, 0xE0, 0xE8, 0xE8, 0xE4, 0xE4, 0xEC, 0xEC,\n+            0xE2, 0xE2, 0xEA, 0xEA, 0xE6, 0xE6, 0xEE, 0xEE,\n+            0xF0, 0xF0, 0xF8, 0xF8, 0xF4, 0xF4, 0xFC, 0xFC,\n+            0xF2, 0xF2, 0xFA, 0xFA, 0xF6, 0xF6, 0xFE, 0xFE\n+        ];\n+\n+        // Mapping tables for the PC-2 transformation.\n+        static $pc2mapc1 = [\n+            0x00000000, 0x00000400, 0x00200000, 0x00200400,\n+            0x00000001, 0x00000401, 0x00200001, 0x00200401,\n+            0x02000000, 0x02000400, 0x02200000, 0x02200400,\n+            0x02000001, 0x02000401, 0x02200001, 0x02200401\n+        ];\n+        static $pc2mapc2 = [\n+            0x00000000, 0x00000800, 0x08000000, 0x08000800,\n+            0x00010000, 0x00010800, 0x08010000, 0x08010800,\n+            0x00000000, 0x00000800, 0x08000000, 0x08000800,\n+            0x00010000, 0x00010800, 0x08010000, 0x08010800,\n+            0x00000100, 0x00000900, 0x08000100, 0x08000900,\n+            0x00010100, 0x00010900, 0x08010100, 0x08010900,\n+            0x00000100, 0x00000900, 0x08000100, 0x08000900,\n+            0x00010100, 0x00010900, 0x08010100, 0x08010900,\n+            0x00000010, 0x00000810, 0x08000010, 0x08000810,\n+            0x00010010, 0x00010810, 0x08010010, 0x08010810,\n+            0x00000010, 0x00000810, 0x08000010, 0x08000810,\n+            0x00010010, 0x00010810, 0x08010010, 0x08010810,\n+            0x00000110, 0x00000910, 0x08000110, 0x08000910,\n+            0x00010110, 0x00010910, 0x08010110, 0x08010910,\n+            0x00000110, 0x00000910, 0x08000110, 0x08000910,\n+            0x00010110, 0x00010910, 0x08010110, 0x08010910,\n+            0x00040000, 0x00040800, 0x08040000, 0x08040800,\n+            0x00050000, 0x00050800, 0x08050000, 0x08050800,\n+            0x00040000, 0x00040800, 0x08040000, 0x08040800,\n+            0x00050000, 0x00050800, 0x08050000, 0x08050800,\n+            0x00040100, 0x00040900, 0x08040100, 0x08040900,\n+            0x00050100, 0x00050900, 0x08050100, 0x08050900,\n+            0x00040100, 0x00040900, 0x08040100, 0x08040900,\n+            0x00050100, 0x00050900, 0x08050100, 0x08050900,\n+            0x00040010, 0x00040810, 0x08040010, 0x08040810,\n+            0x00050010, 0x00050810, 0x08050010, 0x08050810,\n+            0x00040010, 0x00040810, 0x08040010, 0x08040810,\n+            0x00050010, 0x00050810, 0x08050010, 0x08050810,\n+            0x00040110, 0x00040910, 0x08040110, 0x08040910,\n+            0x00050110, 0x00050910, 0x08050110, 0x08050910,\n+            0x00040110, 0x00040910, 0x08040110, 0x08040910,\n+            0x00050110, 0x00050910, 0x08050110, 0x08050910,\n+            0x01000000, 0x01000800, 0x09000000, 0x09000800,\n+            0x01010000, 0x01010800, 0x09010000, 0x09010800,\n+            0x01000000, 0x01000800, 0x09000000, 0x09000800,\n+            0x01010000, 0x01010800, 0x09010000, 0x09010800,\n+            0x01000100, 0x01000900, 0x09000100, 0x09000900,\n+            0x01010100, 0x01010900, 0x09010100, 0x09010900,\n+            0x01000100, 0x01000900, 0x09000100, 0x09000900,\n+            0x01010100, 0x01010900, 0x09010100, 0x09010900,\n+            0x01000010, 0x01000810, 0x09000010, 0x09000810,\n+            0x01010010, 0x01010810, 0x09010010, 0x09010810,\n+            0x01000010, 0x01000810, 0x09000010, 0x09000810,\n+            0x01010010, 0x01010810, 0x09010010, 0x09010810,\n+            0x01000110, 0x01000910, 0x09000110, 0x09000910,\n+            0x01010110, 0x01010910, 0x09010110, 0x09010910,\n+            0x01000110, 0x01000910, 0x09000110, 0x09000910,\n+            0x01010110, 0x01010910, 0x09010110, 0x09010910,\n+            0x01040000, 0x01040800, 0x09040000, 0x09040800,\n+            0x01050000, 0x01050800, 0x09050000, 0x09050800,\n+            0x01040000, 0x01040800, 0x09040000, 0x09040800,\n+            0x01050000, 0x01050800, 0x09050000, 0x09050800,\n+            0x01040100, 0x01040900, 0x09040100, 0x09040900,\n+            0x01050100, 0x01050900, 0x09050100, 0x09050900,\n+            0x01040100, 0x01040900, 0x09040100, 0x09040900,\n+            0x01050100, 0x01050900, 0x09050100, 0x09050900,\n+            0x01040010, 0x01040810, 0x09040010, 0x09040810,\n+            0x01050010, 0x01050810, 0x09050010, 0x09050810,\n+            0x01040010, 0x01040810, 0x09040010, 0x09040810,\n+            0x01050010, 0x01050810, 0x09050010, 0x09050810,\n+            0x01040110, 0x01040910, 0x09040110, 0x09040910,\n+            0x01050110, 0x01050910, 0x09050110, 0x09050910,\n+            0x01040110, 0x01040910, 0x09040110, 0x09040910,\n+            0x01050110, 0x01050910, 0x09050110, 0x09050910\n+        ];\n+        static $pc2mapc3 = [\n+            0x00000000, 0x00000004, 0x00001000, 0x00001004,\n+            0x00000000, 0x00000004, 0x00001000, 0x00001004,\n+            0x10000000, 0x10000004, 0x10001000, 0x10001004,\n+            0x10000000, 0x10000004, 0x10001000, 0x10001004,\n+            0x00000020, 0x00000024, 0x00001020, 0x00001024,\n+            0x00000020, 0x00000024, 0x00001020, 0x00001024,\n+            0x10000020, 0x10000024, 0x10001020, 0x10001024,\n+            0x10000020, 0x10000024, 0x10001020, 0x10001024,\n+            0x00080000, 0x00080004, 0x00081000, 0x00081004,\n+            0x00080000, 0x00080004, 0x00081000, 0x00081004,\n+            0x10080000, 0x10080004, 0x10081000, 0x10081004,\n+            0x10080000, 0x10080004, 0x10081000, 0x10081004,\n+            0x00080020, 0x00080024, 0x00081020, 0x00081024,\n+            0x00080020, 0x00080024, 0x00081020, 0x00081024,\n+            0x10080020, 0x10080024, 0x10081020, 0x10081024,\n+            0x10080020, 0x10080024, 0x10081020, 0x10081024,\n+            0x20000000, 0x20000004, 0x20001000, 0x20001004,\n+            0x20000000, 0x20000004, 0x20001000, 0x20001004,\n+            0x30000000, 0x30000004, 0x30001000, 0x30001004,\n+            0x30000000, 0x30000004, 0x30001000, 0x30001004,\n+            0x20000020, 0x20000024, 0x20001020, 0x20001024,\n+            0x20000020, 0x20000024, 0x20001020, 0x20001024,\n+            0x30000020, 0x30000024, 0x30001020, 0x30001024,\n+            0x30000020, 0x30000024, 0x30001020, 0x30001024,\n+            0x20080000, 0x20080004, 0x20081000, 0x20081004,\n+            0x20080000, 0x20080004, 0x20081000, 0x20081004,\n+            0x30080000, 0x30080004, 0x30081000, 0x30081004,\n+            0x30080000, 0x30080004, 0x30081000, 0x30081004,\n+            0x20080020, 0x20080024, 0x20081020, 0x20081024,\n+            0x20080020, 0x20080024, 0x20081020, 0x20081024,\n+            0x30080020, 0x30080024, 0x30081020, 0x30081024,\n+            0x30080020, 0x30080024, 0x30081020, 0x30081024,\n+            0x00000002, 0x00000006, 0x00001002, 0x00001006,\n+            0x00000002, 0x00000006, 0x00001002, 0x00001006,\n+            0x10000002, 0x10000006, 0x10001002, 0x10001006,\n+            0x10000002, 0x10000006, 0x10001002, 0x10001006,\n+            0x00000022, 0x00000026, 0x00001022, 0x00001026,\n+            0x00000022, 0x00000026, 0x00001022, 0x00001026,\n+            0x10000022, 0x10000026, 0x10001022, 0x10001026,\n+            0x10000022, 0x10000026, 0x10001022, 0x10001026,\n+            0x00080002, 0x00080006, 0x00081002, 0x00081006,\n+            0x00080002, 0x00080006, 0x00081002, 0x00081006,\n+            0x10080002, 0x10080006, 0x10081002, 0x10081006,\n+            0x10080002, 0x10080006, 0x10081002, 0x10081006,\n+            0x00080022, 0x00080026, 0x00081022, 0x00081026,\n+            0x00080022, 0x00080026, 0x00081022, 0x00081026,\n+            0x10080022, 0x10080026, 0x10081022, 0x10081026,\n+            0x10080022, 0x10080026, 0x10081022, 0x10081026,\n+            0x20000002, 0x20000006, 0x20001002, 0x20001006,\n+            0x20000002, 0x20000006, 0x20001002, 0x20001006,\n+            0x30000002, 0x30000006, 0x30001002, 0x30001006,\n+            0x30000002, 0x30000006, 0x30001002, 0x30001006,\n+            0x20000022, 0x20000026, 0x20001022, 0x20001026,\n+            0x20000022, 0x20000026, 0x20001022, 0x20001026,\n+            0x30000022, 0x30000026, 0x30001022, 0x30001026,\n+            0x30000022, 0x30000026, 0x30001022, 0x30001026,\n+            0x20080002, 0x20080006, 0x20081002, 0x20081006,\n+            0x20080002, 0x20080006, 0x20081002, 0x20081006,\n+            0x30080002, 0x30080006, 0x30081002, 0x30081006,\n+            0x30080002, 0x30080006, 0x30081002, 0x30081006,\n+            0x20080022, 0x20080026, 0x20081022, 0x20081026,\n+            0x20080022, 0x20080026, 0x20081022, 0x20081026,\n+            0x30080022, 0x30080026, 0x30081022, 0x30081026,\n+            0x30080022, 0x30080026, 0x30081022, 0x30081026\n+        ];\n+        static $pc2mapc4 = [\n+            0x00000000, 0x00100000, 0x00000008, 0x00100008,\n+            0x00000200, 0x00100200, 0x00000208, 0x00100208,\n+            0x00000000, 0x00100000, 0x00000008, 0x00100008,\n+            0x00000200, 0x00100200, 0x00000208, 0x00100208,\n+            0x04000000, 0x04100000, 0x04000008, 0x04100008,\n+            0x04000200, 0x04100200, 0x04000208, 0x04100208,\n+            0x04000000, 0x04100000, 0x04000008, 0x04100008,\n+            0x04000200, 0x04100200, 0x04000208, 0x04100208,\n+            0x00002000, 0x00102000, 0x00002008, 0x00102008,\n+            0x00002200, 0x00102200, 0x00002208, 0x00102208,\n+            0x00002000, 0x00102000, 0x00002008, 0x00102008,\n+            0x00002200, 0x00102200, 0x00002208, 0x00102208,\n+            0x04002000, 0x04102000, 0x04002008, 0x04102008,\n+            0x04002200, 0x04102200, 0x04002208, 0x04102208,\n+            0x04002000, 0x04102000, 0x04002008, 0x04102008,\n+            0x04002200, 0x04102200, 0x04002208, 0x04102208,\n+            0x00000000, 0x00100000, 0x00000008, 0x00100008,\n+            0x00000200, 0x00100200, 0x00000208, 0x00100208,\n+            0x00000000, 0x00100000, 0x00000008, 0x00100008,\n+            0x00000200, 0x00100200, 0x00000208, 0x00100208,\n+            0x04000000, 0x04100000, 0x04000008, 0x04100008,\n+            0x04000200, 0x04100200, 0x04000208, 0x04100208,\n+            0x04000000, 0x04100000, 0x04000008, 0x04100008,\n+            0x04000200, 0x04100200, 0x04000208, 0x04100208,\n+            0x00002000, 0x00102000, 0x00002008, 0x00102008,\n+            0x00002200, 0x00102200, 0x00002208, 0x00102208,\n+            0x00002000, 0x00102000, 0x00002008, 0x00102008,\n+            0x00002200, 0x00102200, 0x00002208, 0x00102208,\n+            0x04002000, 0x04102000, 0x04002008, 0x04102008,\n+            0x04002200, 0x04102200, 0x04002208, 0x04102208,\n+            0x04002000, 0x04102000, 0x04002008, 0x04102008,\n+            0x04002200, 0x04102200, 0x04002208, 0x04102208,\n+            0x00020000, 0x00120000, 0x00020008, 0x00120008,\n+            0x00020200, 0x00120200, 0x00020208, 0x00120208,\n+            0x00020000, 0x00120000, 0x00020008, 0x00120008,\n+            0x00020200, 0x00120200, 0x00020208, 0x00120208,\n+            0x04020000, 0x04120000, 0x04020008, 0x04120008,\n+            0x04020200, 0x04120200, 0x04020208, 0x04120208,\n+            0x04020000, 0x04120000, 0x04020008, 0x04120008,\n+            0x04020200, 0x04120200, 0x04020208, 0x04120208,\n+            0x00022000, 0x00122000, 0x00022008, 0x00122008,\n+            0x00022200, 0x00122200, 0x00022208, 0x00122208,\n+            0x00022000, 0x00122000, 0x00022008, 0x00122008,\n+            0x00022200, 0x00122200, 0x00022208, 0x00122208,\n+            0x04022000, 0x04122000, 0x04022008, 0x04122008,\n+            0x04022200, 0x04122200, 0x04022208, 0x04122208,\n+            0x04022000, 0x04122000, 0x04022008, 0x04122008,\n+            0x04022200, 0x04122200, 0x04022208, 0x04122208,\n+            0x00020000, 0x00120000, 0x00020008, 0x00120008,\n+            0x00020200, 0x00120200, 0x00020208, 0x00120208,\n+            0x00020000, 0x00120000, 0x00020008, 0x00120008,\n+            0x00020200, 0x00120200, 0x00020208, 0x00120208,\n+            0x04020000, 0x04120000, 0x04020008, 0x04120008,\n+            0x04020200, 0x04120200, 0x04020208, 0x04120208,\n+            0x04020000, 0x04120000, 0x04020008, 0x04120008,\n+            0x04020200, 0x04120200, 0x04020208, 0x04120208,\n+            0x00022000, 0x00122000, 0x00022008, 0x00122008,\n+            0x00022200, 0x00122200, 0x00022208, 0x00122208,\n+            0x00022000, 0x00122000, 0x00022008, 0x00122008,\n+            0x00022200, 0x00122200, 0x00022208, 0x00122208,\n+            0x04022000, 0x04122000, 0x04022008, 0x04122008,\n+            0x04022200, 0x04122200, 0x04022208, 0x04122208,\n+            0x04022000, 0x04122000, 0x04022008, 0x04122008,\n+            0x04022200, 0x04122200, 0x04022208, 0x04122208\n+        ];\n+        static $pc2mapd1 = [\n+            0x00000000, 0x00000001, 0x08000000, 0x08000001,\n+            0x00200000, 0x00200001, 0x08200000, 0x08200001,\n+            0x00000002, 0x00000003, 0x08000002, 0x08000003,\n+            0x00200002, 0x00200003, 0x08200002, 0x08200003\n+        ];\n+        static $pc2mapd2 = [\n+            0x00000000, 0x00100000, 0x00000800, 0x00100800,\n+            0x00000000, 0x00100000, 0x00000800, 0x00100800,\n+            0x04000000, 0x04100000, 0x04000800, 0x04100800,\n+            0x04000000, 0x04100000, 0x04000800, 0x04100800,\n+            0x00000004, 0x00100004, 0x00000804, 0x00100804,\n+            0x00000004, 0x00100004, 0x00000804, 0x00100804,\n+            0x04000004, 0x04100004, 0x04000804, 0x04100804,\n+            0x04000004, 0x04100004, 0x04000804, 0x04100804,\n+            0x00000000, 0x00100000, 0x00000800, 0x00100800,\n+            0x00000000, 0x00100000, 0x00000800, 0x00100800,\n+            0x04000000, 0x04100000, 0x04000800, 0x04100800,\n+            0x04000000, 0x04100000, 0x04000800, 0x04100800,\n+            0x00000004, 0x00100004, 0x00000804, 0x00100804,\n+            0x00000004, 0x00100004, 0x00000804, 0x00100804,\n+            0x04000004, 0x04100004, 0x04000804, 0x04100804,\n+            0x04000004, 0x04100004, 0x04000804, 0x04100804,\n+            0x00000200, 0x00100200, 0x00000A00, 0x00100A00,\n+            0x00000200, 0x00100200, 0x00000A00, 0x00100A00,\n+            0x04000200, 0x04100200, 0x04000A00, 0x04100A00,\n+            0x04000200, 0x04100200, 0x04000A00, 0x04100A00,\n+            0x00000204, 0x00100204, 0x00000A04, 0x00100A04,\n+            0x00000204, 0x00100204, 0x00000A04, 0x00100A04,\n+            0x04000204, 0x04100204, 0x04000A04, 0x04100A04,\n+            0x04000204, 0x04100204, 0x04000A04, 0x04100A04,\n+            0x00000200, 0x00100200, 0x00000A00, 0x00100A00,\n+            0x00000200, 0x00100200, 0x00000A00, 0x00100A00,\n+            0x04000200, 0x04100200, 0x04000A00, 0x04100A00,\n+            0x04000200, 0x04100200, 0x04000A00, 0x04100A00,\n+            0x00000204, 0x00100204, 0x00000A04, 0x00100A04,\n+            0x00000204, 0x00100204, 0x00000A04, 0x00100A04,\n+            0x04000204, 0x04100204, 0x04000A04, 0x04100A04,\n+            0x04000204, 0x04100204, 0x04000A04, 0x04100A04,\n+            0x00020000, 0x00120000, 0x00020800, 0x00120800,\n+            0x00020000, 0x00120000, 0x00020800, 0x00120800,\n+            0x04020000, 0x04120000, 0x04020800, 0x04120800,\n+            0x04020000, 0x04120000, 0x04020800, 0x04120800,\n+            0x00020004, 0x00120004, 0x00020804, 0x00120804,\n+            0x00020004, 0x00120004, 0x00020804, 0x00120804,\n+            0x04020004, 0x04120004, 0x04020804, 0x04120804,\n+            0x04020004, 0x04120004, 0x04020804, 0x04120804,\n+            0x00020000, 0x00120000, 0x00020800, 0x00120800,\n+            0x00020000, 0x00120000, 0x00020800, 0x00120800,\n+            0x04020000, 0x04120000, 0x04020800, 0x04120800,\n+            0x04020000, 0x04120000, 0x04020800, 0x04120800,\n+            0x00020004, 0x00120004, 0x00020804, 0x00120804,\n+            0x00020004, 0x00120004, 0x00020804, 0x00120804,\n+            0x04020004, 0x04120004, 0x04020804, 0x04120804,\n+            0x04020004, 0x04120004, 0x04020804, 0x04120804,\n+            0x00020200, 0x00120200, 0x00020A00, 0x00120A00,\n+            0x00020200, 0x00120200, 0x00020A00, 0x00120A00,\n+            0x04020200, 0x04120200, 0x04020A00, 0x04120A00,\n+            0x04020200, 0x04120200, 0x04020A00, 0x04120A00,\n+            0x00020204, 0x00120204, 0x00020A04, 0x00120A04,\n+            0x00020204, 0x00120204, 0x00020A04, 0x00120A04,\n+            0x04020204, 0x04120204, 0x04020A04, 0x04120A04,\n+            0x04020204, 0x04120204, 0x04020A04, 0x04120A04,\n+            0x00020200, 0x00120200, 0x00020A00, 0x00120A00,\n+            0x00020200, 0x00120200, 0x00020A00, 0x00120A00,\n+            0x04020200, 0x04120200, 0x04020A00, 0x04120A00,\n+            0x04020200, 0x04120200, 0x04020A00, 0x04120A00,\n+            0x00020204, 0x00120204, 0x00020A04, 0x00120A04,\n+            0x00020204, 0x00120204, 0x00020A04, 0x00120A04,\n+            0x04020204, 0x04120204, 0x04020A04, 0x04120A04,\n+            0x04020204, 0x04120204, 0x04020A04, 0x04120A04\n+        ];\n+        static $pc2mapd3 = [\n+            0x00000000, 0x00010000, 0x02000000, 0x02010000,\n+            0x00000020, 0x00010020, 0x02000020, 0x02010020,\n+            0x00040000, 0x00050000, 0x02040000, 0x02050000,\n+            0x00040020, 0x00050020, 0x02040020, 0x02050020,\n+            0x00002000, 0x00012000, 0x02002000, 0x02012000,\n+            0x00002020, 0x00012020, 0x02002020, 0x02012020,\n+            0x00042000, 0x00052000, 0x02042000, 0x02052000,\n+            0x00042020, 0x00052020, 0x02042020, 0x02052020,\n+            0x00000000, 0x00010000, 0x02000000, 0x02010000,\n+            0x00000020, 0x00010020, 0x02000020, 0x02010020,\n+            0x00040000, 0x00050000, 0x02040000, 0x02050000,\n+            0x00040020, 0x00050020, 0x02040020, 0x02050020,\n+            0x00002000, 0x00012000, 0x02002000, 0x02012000,\n+            0x00002020, 0x00012020, 0x02002020, 0x02012020,\n+            0x00042000, 0x00052000, 0x02042000, 0x02052000,\n+            0x00042020, 0x00052020, 0x02042020, 0x02052020,\n+            0x00000010, 0x00010010, 0x02000010, 0x02010010,\n+            0x00000030, 0x00010030, 0x02000030, 0x02010030,\n+            0x00040010, 0x00050010, 0x02040010, 0x02050010,\n+            0x00040030, 0x00050030, 0x02040030, 0x02050030,\n+            0x00002010, 0x00012010, 0x02002010, 0x02012010,\n+            0x00002030, 0x00012030, 0x02002030, 0x02012030,\n+            0x00042010, 0x00052010, 0x02042010, 0x02052010,\n+            0x00042030, 0x00052030, 0x02042030, 0x02052030,\n+            0x00000010, 0x00010010, 0x02000010, 0x02010010,\n+            0x00000030, 0x00010030, 0x02000030, 0x02010030,\n+            0x00040010, 0x00050010, 0x02040010, 0x02050010,\n+            0x00040030, 0x00050030, 0x02040030, 0x02050030,\n+            0x00002010, 0x00012010, 0x02002010, 0x02012010,\n+            0x00002030, 0x00012030, 0x02002030, 0x02012030,\n+            0x00042010, 0x00052010, 0x02042010, 0x02052010,\n+            0x00042030, 0x00052030, 0x02042030, 0x02052030,\n+            0x20000000, 0x20010000, 0x22000000, 0x22010000,\n+            0x20000020, 0x20010020, 0x22000020, 0x22010020,\n+            0x20040000, 0x20050000, 0x22040000, 0x22050000,\n+            0x20040020, 0x20050020, 0x22040020, 0x22050020,\n+            0x20002000, 0x20012000, 0x22002000, 0x22012000,\n+            0x20002020, 0x20012020, 0x22002020, 0x22012020,\n+            0x20042000, 0x20052000, 0x22042000, 0x22052000,\n+            0x20042020, 0x20052020, 0x22042020, 0x22052020,\n+            0x20000000, 0x20010000, 0x22000000, 0x22010000,\n+            0x20000020, 0x20010020, 0x22000020, 0x22010020,\n+            0x20040000, 0x20050000, 0x22040000, 0x22050000,\n+            0x20040020, 0x20050020, 0x22040020, 0x22050020,\n+            0x20002000, 0x20012000, 0x22002000, 0x22012000,\n+            0x20002020, 0x20012020, 0x22002020, 0x22012020,\n+            0x20042000, 0x20052000, 0x22042000, 0x22052000,\n+            0x20042020, 0x20052020, 0x22042020, 0x22052020,\n+            0x20000010, 0x20010010, 0x22000010, 0x22010010,\n+            0x20000030, 0x20010030, 0x22000030, 0x22010030,\n+            0x20040010, 0x20050010, 0x22040010, 0x22050010,\n+            0x20040030, 0x20050030, 0x22040030, 0x22050030,\n+            0x20002010, 0x20012010, 0x22002010, 0x22012010,\n+            0x20002030, 0x20012030, 0x22002030, 0x22012030,\n+            0x20042010, 0x20052010, 0x22042010, 0x22052010,\n+            0x20042030, 0x20052030, 0x22042030, 0x22052030,\n+            0x20000010, 0x20010010, 0x22000010, 0x22010010,\n+            0x20000030, 0x20010030, 0x22000030, 0x22010030,\n+            0x20040010, 0x20050010, 0x22040010, 0x22050010,\n+            0x20040030, 0x20050030, 0x22040030, 0x22050030,\n+            0x20002010, 0x20012010, 0x22002010, 0x22012010,\n+            0x20002030, 0x20012030, 0x22002030, 0x22012030,\n+            0x20042010, 0x20052010, 0x22042010, 0x22052010,\n+            0x20042030, 0x20052030, 0x22042030, 0x22052030\n+        ];\n+        static $pc2mapd4 = [\n+            0x00000000, 0x00000400, 0x01000000, 0x01000400,\n+            0x00000000, 0x00000400, 0x01000000, 0x01000400,\n+            0x00000100, 0x00000500, 0x01000100, 0x01000500,\n+            0x00000100, 0x00000500, 0x01000100, 0x01000500,\n+            0x10000000, 0x10000400, 0x11000000, 0x11000400,\n+            0x10000000, 0x10000400, 0x11000000, 0x11000400,\n+            0x10000100, 0x10000500, 0x11000100, 0x11000500,\n+            0x10000100, 0x10000500, 0x11000100, 0x11000500,\n+            0x00080000, 0x00080400, 0x01080000, 0x01080400,\n+            0x00080000, 0x00080400, 0x01080000, 0x01080400,\n+            0x00080100, 0x00080500, 0x01080100, 0x01080500,\n+            0x00080100, 0x00080500, 0x01080100, 0x01080500,\n+            0x10080000, 0x10080400, 0x11080000, 0x11080400,\n+            0x10080000, 0x10080400, 0x11080000, 0x11080400,\n+            0x10080100, 0x10080500, 0x11080100, 0x11080500,\n+            0x10080100, 0x10080500, 0x11080100, 0x11080500,\n+            0x00000008, 0x00000408, 0x01000008, 0x01000408,\n+            0x00000008, 0x00000408, 0x01000008, 0x01000408,\n+            0x00000108, 0x00000508, 0x01000108, 0x01000508,\n+            0x00000108, 0x00000508, 0x01000108, 0x01000508,\n+            0x10000008, 0x10000408, 0x11000008, 0x11000408,\n+            0x10000008, 0x10000408, 0x11000008, 0x11000408,\n+            0x10000108, 0x10000508, 0x11000108, 0x11000508,\n+            0x10000108, 0x10000508, 0x11000108, 0x11000508,\n+            0x00080008, 0x00080408, 0x01080008, 0x01080408,\n+            0x00080008, 0x00080408, 0x01080008, 0x01080408,\n+            0x00080108, 0x00080508, 0x01080108, 0x01080508,\n+            0x00080108, 0x00080508, 0x01080108, 0x01080508,\n+            0x10080008, 0x10080408, 0x11080008, 0x11080408,\n+            0x10080008, 0x10080408, 0x11080008, 0x11080408,\n+            0x10080108, 0x10080508, 0x11080108, 0x11080508,\n+            0x10080108, 0x10080508, 0x11080108, 0x11080508,\n+            0x00001000, 0x00001400, 0x01001000, 0x01001400,\n+            0x00001000, 0x00001400, 0x01001000, 0x01001400,\n+            0x00001100, 0x00001500, 0x01001100, 0x01001500,\n+            0x00001100, 0x00001500, 0x01001100, 0x01001500,\n+            0x10001000, 0x10001400, 0x11001000, 0x11001400,\n+            0x10001000, 0x10001400, 0x11001000, 0x11001400,\n+            0x10001100, 0x10001500, 0x11001100, 0x11001500,\n+            0x10001100, 0x10001500, 0x11001100, 0x11001500,\n+            0x00081000, 0x00081400, 0x01081000, 0x01081400,\n+            0x00081000, 0x00081400, 0x01081000, 0x01081400,\n+            0x00081100, 0x00081500, 0x01081100, 0x01081500,\n+            0x00081100, 0x00081500, 0x01081100, 0x01081500,\n+            0x10081000, 0x10081400, 0x11081000, 0x11081400,\n+            0x10081000, 0x10081400, 0x11081000, 0x11081400,\n+            0x10081100, 0x10081500, 0x11081100, 0x11081500,\n+            0x10081100, 0x10081500, 0x11081100, 0x11081500,\n+            0x00001008, 0x00001408, 0x01001008, 0x01001408,\n+            0x00001008, 0x00001408, 0x01001008, 0x01001408,\n+            0x00001108, 0x00001508, 0x01001108, 0x01001508,\n+            0x00001108, 0x00001508, 0x01001108, 0x01001508,\n+            0x10001008, 0x10001408, 0x11001008, 0x11001408,\n+            0x10001008, 0x10001408, 0x11001008, 0x11001408,\n+            0x10001108, 0x10001508, 0x11001108, 0x11001508,\n+            0x10001108, 0x10001508, 0x11001108, 0x11001508,\n+            0x00081008, 0x00081408, 0x01081008, 0x01081408,\n+            0x00081008, 0x00081408, 0x01081008, 0x01081408,\n+            0x00081108, 0x00081508, 0x01081108, 0x01081508,\n+            0x00081108, 0x00081508, 0x01081108, 0x01081508,\n+            0x10081008, 0x10081408, 0x11081008, 0x11081408,\n+            0x10081008, 0x10081408, 0x11081008, 0x11081408,\n+            0x10081108, 0x10081508, 0x11081108, 0x11081508,\n+            0x10081108, 0x10081508, 0x11081108, 0x11081508\n+        ];\n+\n+        $keys = [];\n+        for ($des_round = 0; $des_round < $this->des_rounds; ++$des_round) {\n+            // pad the key and remove extra characters as appropriate.\n+            $key = str_pad(substr($this->key, $des_round * 8, 8), 8, \"\\0\");\n+\n+            // Perform the PC/1 transformation and compute C and D.\n+            $t = unpack('Nl/Nr', $key);\n+            list($l, $r) = [$t['l'], $t['r']];\n+            $key = (self::$shuffle[$pc1map[ $r        & 0xFF]] & \"\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x00\") |\n+                   (self::$shuffle[$pc1map[($r >>  8) & 0xFF]] & \"\\x40\\x40\\x40\\x40\\x40\\x40\\x40\\x00\") |\n+                   (self::$shuffle[$pc1map[($r >> 16) & 0xFF]] & \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x00\") |\n+                   (self::$shuffle[$pc1map[($r >> 24) & 0xFF]] & \"\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x00\") |\n+                   (self::$shuffle[$pc1map[ $l        & 0xFF]] & \"\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x00\") |\n+                   (self::$shuffle[$pc1map[($l >>  8) & 0xFF]] & \"\\x04\\x04\\x04\\x04\\x04\\x04\\x04\\x00\") |\n+                   (self::$shuffle[$pc1map[($l >> 16) & 0xFF]] & \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x00\") |\n+                   (self::$shuffle[$pc1map[($l >> 24) & 0xFF]] & \"\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x00\");\n+            $key = unpack('Nc/Nd', $key);\n+            $c = ( $key['c'] >> 4) & 0x0FFFFFFF;\n+            $d = (($key['d'] >> 4) & 0x0FFFFFF0) | ($key['c'] & 0x0F);\n+\n+            $keys[$des_round] = [\n+                self::ENCRYPT => [],\n+                self::DECRYPT => array_fill(0, 32, 0)\n+            ];\n+            for ($i = 0, $ki = 31; $i < 16; ++$i, $ki -= 2) {\n+                $c <<= $shifts[$i];\n+                $c = ($c | ($c >> 28)) & 0x0FFFFFFF;\n+                $d <<= $shifts[$i];\n+                $d = ($d | ($d >> 28)) & 0x0FFFFFFF;\n+\n+                // Perform the PC-2 transformation.\n+                $cp = $pc2mapc1[ $c >> 24        ] | $pc2mapc2[($c >> 16) & 0xFF] |\n+                      $pc2mapc3[($c >>  8) & 0xFF] | $pc2mapc4[ $c        & 0xFF];\n+                $dp = $pc2mapd1[ $d >> 24        ] | $pc2mapd2[($d >> 16) & 0xFF] |\n+                      $pc2mapd3[($d >>  8) & 0xFF] | $pc2mapd4[ $d        & 0xFF];\n+\n+                // Reorder: odd bytes/even bytes. Push the result in key schedule.\n+                $val1 = ( $cp        & intval(0xFF000000)) | (($cp <<  8) & 0x00FF0000) |\n+                        (($dp >> 16) & 0x0000FF00) | (($dp >>  8) & 0x000000FF);\n+                $val2 = (($cp <<  8) & intval(0xFF000000)) | (($cp << 16) & 0x00FF0000) |\n+                        (($dp >>  8) & 0x0000FF00) | ( $dp        & 0x000000FF);\n+                $keys[$des_round][self::ENCRYPT][       ] = $val1;\n+                $keys[$des_round][self::DECRYPT][$ki - 1] = $val1;\n+                $keys[$des_round][self::ENCRYPT][       ] = $val2;\n+                $keys[$des_round][self::DECRYPT][$ki    ] = $val2;\n+            }\n+        }\n+\n+        switch ($this->des_rounds) {\n+            case 3: // 3DES keys\n+                $this->keys = [\n+                    self::ENCRYPT => array_merge(\n+                        $keys[0][self::ENCRYPT],\n+                        $keys[1][self::DECRYPT],\n+                        $keys[2][self::ENCRYPT]\n+                    ),\n+                    self::DECRYPT => array_merge(\n+                        $keys[2][self::DECRYPT],\n+                        $keys[1][self::ENCRYPT],\n+                        $keys[0][self::DECRYPT]\n+                    )\n+                ];\n+                break;\n+            // case 1: // DES keys\n+            default:\n+                $this->keys = [\n+                    self::ENCRYPT => $keys[0][self::ENCRYPT],\n+                    self::DECRYPT => $keys[0][self::DECRYPT]\n+                ];\n+        }\n+    }\n+\n+    /**\n+     * Setup the performance-optimized function for de/encrypt()\n+     *\n+     * @see \\phpseclib3\\Crypt\\Common\\SymmetricKey::setupInlineCrypt()\n+     */\n+    protected function setupInlineCrypt()\n+    {\n+        // Engine configuration for:\n+        // -  DES ($des_rounds == 1) or\n+        // - 3DES ($des_rounds == 3)\n+        $des_rounds = $this->des_rounds;\n+\n+        $init_crypt = 'static $sbox1, $sbox2, $sbox3, $sbox4, $sbox5, $sbox6, $sbox7, $sbox8, $shuffleip, $shuffleinvip;\n+            if (!$sbox1) {\n+                $sbox1 = array_map(\"intval\", self::$sbox1);\n+                $sbox2 = array_map(\"intval\", self::$sbox2);\n+                $sbox3 = array_map(\"intval\", self::$sbox3);\n+                $sbox4 = array_map(\"intval\", self::$sbox4);\n+                $sbox5 = array_map(\"intval\", self::$sbox5);\n+                $sbox6 = array_map(\"intval\", self::$sbox6);\n+                $sbox7 = array_map(\"intval\", self::$sbox7);\n+                $sbox8 = array_map(\"intval\", self::$sbox8);'\n+                /* Merge $shuffle with $[inv]ipmap */ . '\n+                for ($i = 0; $i < 256; ++$i) {\n+                    $shuffleip[]    =  self::$shuffle[self::$ipmap[$i]];\n+                    $shuffleinvip[] =  self::$shuffle[self::$invipmap[$i]];\n+                }\n+            }\n+        ';\n+\n+        $k = [\n+            self::ENCRYPT => $this->keys[self::ENCRYPT],\n+            self::DECRYPT => $this->keys[self::DECRYPT]\n+        ];\n+        $init_encrypt = '';\n+        $init_decrypt = '';\n+\n+        // Creating code for en- and decryption.\n+        $crypt_block = [];\n+        foreach ([self::ENCRYPT, self::DECRYPT] as $c) {\n+            /* Do the initial IP permutation. */\n+            $crypt_block[$c] = '\n+                $in = unpack(\"N*\", $in);\n+                $l  = $in[1];\n+                $r  = $in[2];\n+                $in = unpack(\"N*\",\n+                    ($shuffleip[ $r        & 0xFF] & \"\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\") |\n+                    ($shuffleip[($r >>  8) & 0xFF] & \"\\x40\\x40\\x40\\x40\\x40\\x40\\x40\\x40\") |\n+                    ($shuffleip[($r >> 16) & 0xFF] & \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\") |\n+                    ($shuffleip[($r >> 24) & 0xFF] & \"\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\") |\n+                    ($shuffleip[ $l        & 0xFF] & \"\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\") |\n+                    ($shuffleip[($l >>  8) & 0xFF] & \"\\x04\\x04\\x04\\x04\\x04\\x04\\x04\\x04\") |\n+                    ($shuffleip[($l >> 16) & 0xFF] & \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\") |\n+                    ($shuffleip[($l >> 24) & 0xFF] & \"\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\")\n+                );\n+                ' . /* Extract L0 and R0 */ '\n+                $l = $in[1];\n+                $r = $in[2];\n+            ';\n+\n+            $l = '$l';\n+            $r = '$r';\n+\n+            // Perform DES or 3DES.\n+            for ($ki = -1, $des_round = 0; $des_round < $des_rounds; ++$des_round) {\n+                // Perform the 16 steps.\n+                for ($i = 0; $i < 16; ++$i) {\n+                    // start of \"the Feistel (F) function\" - see the following URL:\n+                    // http://en.wikipedia.org/wiki/Image:Data_Encryption_Standard_InfoBox_Diagram.png\n+                    // Merge key schedule.\n+                    $crypt_block[$c] .= '\n+                        $b1 = ((' . $r . ' >>  3) & 0x1FFFFFFF)  ^ (' . $r . ' << 29) ^ ' . $k[$c][++$ki] . ';\n+                        $b2 = ((' . $r . ' >> 31) & 0x00000001)  ^ (' . $r . ' <<  1) ^ ' . $k[$c][++$ki] . ';' .\n+                        /* S-box indexing. */\n+                        $l . ' = $sbox1[($b1 >> 24) & 0x3F] ^ $sbox2[($b2 >> 24) & 0x3F] ^\n+                                 $sbox3[($b1 >> 16) & 0x3F] ^ $sbox4[($b2 >> 16) & 0x3F] ^\n+                                 $sbox5[($b1 >>  8) & 0x3F] ^ $sbox6[($b2 >>  8) & 0x3F] ^\n+                                 $sbox7[ $b1        & 0x3F] ^ $sbox8[ $b2        & 0x3F] ^ ' . $l . ';\n+                    ';\n+                    // end of \"the Feistel (F) function\"\n+\n+                    // swap L & R\n+                    list($l, $r) = [$r, $l];\n+                }\n+                list($l, $r) = [$r, $l];\n+            }\n+\n+            // Perform the inverse IP permutation.\n+            $crypt_block[$c] .= '$in =\n+                ($shuffleinvip[($l >> 24) & 0xFF] & \"\\x80\\x80\\x80\\x80\\x80\\x80\\x80\\x80\") |\n+                ($shuffleinvip[($r >> 24) & 0xFF] & \"\\x40\\x40\\x40\\x40\\x40\\x40\\x40\\x40\") |\n+                ($shuffleinvip[($l >> 16) & 0xFF] & \"\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\") |\n+                ($shuffleinvip[($r >> 16) & 0xFF] & \"\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\") |\n+                ($shuffleinvip[($l >>  8) & 0xFF] & \"\\x08\\x08\\x08\\x08\\x08\\x08\\x08\\x08\") |\n+                ($shuffleinvip[($r >>  8) & 0xFF] & \"\\x04\\x04\\x04\\x04\\x04\\x04\\x04\\x04\") |\n+                ($shuffleinvip[ $l        & 0xFF] & \"\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\") |\n+                ($shuffleinvip[ $r        & 0xFF] & \"\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\");\n+            ';\n+        }\n+\n+        // Creates the inline-crypt function\n+        $this->inline_crypt = $this->createInlineCryptFunction(\n+            [\n+               'init_crypt'    => $init_crypt,\n+               'init_encrypt'  => $init_encrypt,\n+               'init_decrypt'  => $init_decrypt,\n+               'encrypt_block' => $crypt_block[self::ENCRYPT],\n+               'decrypt_block' => $crypt_block[self::DECRYPT]\n+            ]\n+        );\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH.php",
          "status": "added",
          "additions": 405,
          "deletions": 0,
          "patch": "@@ -0,0 +1,405 @@\n+<?php\n+\n+/**\n+ * Pure-PHP (EC)DH implementation\n+ *\n+ * PHP version 5\n+ *\n+ * Here's an example of how to compute a shared secret with this library:\n+ * <code>\n+ * <?php\n+ * include 'vendor/autoload.php';\n+ *\n+ * $ourPrivate = \\phpseclib3\\Crypt\\DH::createKey();\n+ * $secret = DH::computeSecret($ourPrivate, $theirPublic);\n+ *\n+ * ?>\n+ * </code>\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+use phpseclib3\\Crypt\\Common\\AsymmetricKey;\n+use phpseclib3\\Crypt\\DH\\Parameters;\n+use phpseclib3\\Crypt\\DH\\PrivateKey;\n+use phpseclib3\\Crypt\\DH\\PublicKey;\n+use phpseclib3\\Exception\\NoKeyLoadedException;\n+use phpseclib3\\Exception\\UnsupportedOperationException;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * Pure-PHP (EC)DH implementation\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class DH extends AsymmetricKey\n+{\n+    /**\n+     * Algorithm Name\n+     *\n+     * @var string\n+     */\n+    const ALGORITHM = 'DH';\n+\n+    /**\n+     * DH prime\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $prime;\n+\n+    /**\n+     * DH Base\n+     *\n+     * Prime divisor of p-1\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $base;\n+\n+    /**\n+     * Public Key\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $publicKey;\n+\n+    /**\n+     * Create DH parameters\n+     *\n+     * This method is a bit polymorphic. It can take any of the following:\n+     *  - two BigInteger's (prime and base)\n+     *  - an integer representing the size of the prime in bits (the base is assumed to be 2)\n+     *  - a string (eg. diffie-hellman-group14-sha1)\n+     *\n+     * @return Parameters\n+     */\n+    public static function createParameters(...$args)\n+    {\n+        $class = new \\ReflectionClass(static::class);\n+        if ($class->isFinal()) {\n+            throw new \\RuntimeException('createParameters() should not be called from final classes (' . static::class . ')');\n+        }\n+\n+        $params = new Parameters();\n+        if (count($args) == 2 && $args[0] instanceof BigInteger && $args[1] instanceof BigInteger) {\n+            //if (!$args[0]->isPrime()) {\n+            //    throw new \\InvalidArgumentException('The first parameter should be a prime number');\n+            //}\n+            $params->prime = $args[0];\n+            $params->base = $args[1];\n+            return $params;\n+        } elseif (count($args) == 1 && is_numeric($args[0])) {\n+            $params->prime = BigInteger::randomPrime($args[0]);\n+            $params->base = new BigInteger(2);\n+            return $params;\n+        } elseif (count($args) != 1 || !is_string($args[0])) {\n+            throw new \\InvalidArgumentException('Valid parameters are either: two BigInteger\\'s (prime and base), a single integer (the length of the prime; base is assumed to be 2) or a string');\n+        }\n+        switch ($args[0]) {\n+            // see http://tools.ietf.org/html/rfc2409#section-6.2 and\n+            // http://tools.ietf.org/html/rfc2412, appendex E\n+            case 'diffie-hellman-group1-sha1':\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF';\n+                break;\n+            // see http://tools.ietf.org/html/rfc3526#section-3\n+            case 'diffie-hellman-group14-sha1': // 2048-bit MODP Group\n+            case 'diffie-hellman-group14-sha256':\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF05' .\n+                         '98DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB' .\n+                         '9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' .\n+                         'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF695581718' .\n+                         '3995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF';\n+                break;\n+            // see https://tools.ietf.org/html/rfc3526#section-4\n+            case 'diffie-hellman-group15-sha512': // 3072-bit MODP Group\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF05' .\n+                         '98DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB' .\n+                         '9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' .\n+                         'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF695581718' .\n+                         '3995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33' .\n+                         'A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' .\n+                         'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864' .\n+                         'D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E2' .\n+                         '08E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n+                break;\n+            // see https://tools.ietf.org/html/rfc3526#section-5\n+            case 'diffie-hellman-group16-sha512': // 4096-bit MODP Group\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF05' .\n+                         '98DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB' .\n+                         '9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' .\n+                         'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF695581718' .\n+                         '3995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33' .\n+                         'A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' .\n+                         'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864' .\n+                         'D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E2' .\n+                         '08E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D7' .\n+                         '88719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8' .\n+                         'DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2' .\n+                         '233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA9' .\n+                         '93B4EA988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF';\n+                break;\n+            // see https://tools.ietf.org/html/rfc3526#section-6\n+            case 'diffie-hellman-group17-sha512': // 6144-bit MODP Group\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF05' .\n+                         '98DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB' .\n+                         '9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' .\n+                         'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF695581718' .\n+                         '3995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33' .\n+                         'A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' .\n+                         'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864' .\n+                         'D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E2' .\n+                         '08E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D7' .\n+                         '88719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8' .\n+                         'DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2' .\n+                         '233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA9' .\n+                         '93B4EA988D8FDDC186FFB7DC90A6C08F4DF435C93402849236C3FAB4D27C7026' .\n+                         'C1D4DCB2602646DEC9751E763DBA37BDF8FF9406AD9E530EE5DB382F413001AE' .\n+                         'B06A53ED9027D831179727B0865A8918DA3EDBEBCF9B14ED44CE6CBACED4BB1B' .\n+                         'DB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA01C64B92EC' .\n+                         'F032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C9E' .\n+                         '59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AA' .\n+                         'CC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76' .\n+                         'F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468' .\n+                         '043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DCC4024FFFFFFFFFFFFFFFF';\n+                break;\n+            // see https://tools.ietf.org/html/rfc3526#section-7\n+            case 'diffie-hellman-group18-sha512': // 8192-bit MODP Group\n+                $prime = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74' .\n+                         '020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F1437' .\n+                         '4FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' .\n+                         'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF05' .\n+                         '98DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB' .\n+                         '9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' .\n+                         'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF695581718' .\n+                         '3995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33' .\n+                         'A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' .\n+                         'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864' .\n+                         'D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E2' .\n+                         '08E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D7' .\n+                         '88719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8' .\n+                         'DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2' .\n+                         '233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA9' .\n+                         '93B4EA988D8FDDC186FFB7DC90A6C08F4DF435C93402849236C3FAB4D27C7026' .\n+                         'C1D4DCB2602646DEC9751E763DBA37BDF8FF9406AD9E530EE5DB382F413001AE' .\n+                         'B06A53ED9027D831179727B0865A8918DA3EDBEBCF9B14ED44CE6CBACED4BB1B' .\n+                         'DB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA01C64B92EC' .\n+                         'F032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C9E' .\n+                         '59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AA' .\n+                         'CC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76' .\n+                         'F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468' .\n+                         '043E8F663F4860EE12BF2D5B0B7474D6E694F91E6DBE115974A3926F12FEE5E4' .\n+                         '38777CB6A932DF8CD8BEC4D073B931BA3BC832B68D9DD300741FA7BF8AFC47ED' .\n+                         '2576F6936BA424663AAB639C5AE4F5683423B4742BF1C978238F16CBE39D652D' .\n+                         'E3FDB8BEFC848AD922222E04A4037C0713EB57A81A23F0C73473FC646CEA306B' .\n+                         '4BCBC8862F8385DDFA9D4B7FA2C087E879683303ED5BDD3A062B3CF5B3A278A6' .\n+                         '6D2A13F83F44F82DDF310EE074AB6A364597E899A0255DC164F31CC50846851D' .\n+                         'F9AB48195DED7EA1B1D510BD7EE74D73FAF36BC31ECFA268359046F4EB879F92' .\n+                         '4009438B481C6CD7889A002ED5EE382BC9190DA6FC026E479558E4475677E9AA' .\n+                         '9E3050E2765694DFC81F56E880B96E7160C980DD98EDD3DFFFFFFFFFFFFFFFFF';\n+                break;\n+            default:\n+                throw new \\InvalidArgumentException('Invalid named prime provided');\n+        }\n+\n+        $params->prime = new BigInteger($prime, 16);\n+        $params->base = new BigInteger(2);\n+\n+        return $params;\n+    }\n+\n+    /**\n+     * Create public / private key pair.\n+     *\n+     * The rationale for the second parameter is described in http://tools.ietf.org/html/rfc4419#section-6.2 :\n+     *\n+     * \"To increase the speed of the key exchange, both client and server may\n+     *  reduce the size of their private exponents.  It should be at least\n+     *  twice as long as the key material that is generated from the shared\n+     *  secret.  For more details, see the paper by van Oorschot and Wiener\n+     *  [VAN-OORSCHOT].\"\n+     *\n+     * $length is in bits\n+     *\n+     * @param Parameters $params\n+     * @param int $length optional\n+     * @return DH\\PrivateKey\n+     */\n+    public static function createKey(Parameters $params, $length = 0)\n+    {\n+        $class = new \\ReflectionClass(static::class);\n+        if ($class->isFinal()) {\n+            throw new \\RuntimeException('createKey() should not be called from final classes (' . static::class . ')');\n+        }\n+\n+        $one = new BigInteger(1);\n+        if ($length) {\n+            $max = $one->bitwise_leftShift($length);\n+            $max = $max->subtract($one);\n+        } else {\n+            $max = $params->prime->subtract($one);\n+        }\n+\n+        $key = new PrivateKey();\n+        $key->prime = $params->prime;\n+        $key->base = $params->base;\n+        $key->privateKey = BigInteger::randomRange($one, $max);\n+        $key->publicKey = $key->base->powMod($key->privateKey, $key->prime);\n+        return $key;\n+    }\n+\n+    /**\n+     * Compute Shared Secret\n+     *\n+     * @param PrivateKey|EC $private\n+     * @param PublicKey|BigInteger|string $public\n+     * @return mixed\n+     */\n+    public static function computeSecret($private, $public)\n+    {\n+        if ($private instanceof PrivateKey) { // DH\\PrivateKey\n+            switch (true) {\n+                case $public instanceof PublicKey:\n+                    if (!$private->prime->equals($public->prime) || !$private->base->equals($public->base)) {\n+                        throw new \\InvalidArgumentException('The public and private key do not share the same prime and / or base numbers');\n+                    }\n+                    return $public->publicKey->powMod($private->privateKey, $private->prime)->toBytes(true);\n+                case is_string($public):\n+                    $public = new BigInteger($public, -256);\n+                    // fall-through\n+                case $public instanceof BigInteger:\n+                    return $public->powMod($private->privateKey, $private->prime)->toBytes(true);\n+                default:\n+                    throw new \\InvalidArgumentException('$public needs to be an instance of DH\\PublicKey, a BigInteger or a string');\n+            }\n+        }\n+\n+        if ($private instanceof EC\\PrivateKey) {\n+            switch (true) {\n+                case $public instanceof EC\\PublicKey:\n+                    $public = $public->getEncodedCoordinates();\n+                    // fall-through\n+                case is_string($public):\n+                    $point = $private->multiply($public);\n+                    switch ($private->getCurve()) {\n+                        case 'Curve25519':\n+                        case 'Curve448':\n+                            $secret = $point;\n+                            break;\n+                        default:\n+                            // according to https://www.secg.org/sec1-v2.pdf#page=33 only X is returned\n+                            $secret = substr($point, 1, (strlen($point) - 1) >> 1);\n+                    }\n+                    /*\n+                    if (($secret[0] & \"\\x80\") === \"\\x80\") {\n+                        $secret = \"\\0$secret\";\n+                    }\n+                    */\n+                    return $secret;\n+                default:\n+                    throw new \\InvalidArgumentException('$public needs to be an instance of EC\\PublicKey or a string (an encoded coordinate)');\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Load the key\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return AsymmetricKey\n+     */\n+    public static function load($key, $password = false)\n+    {\n+        try {\n+            return EC::load($key, $password);\n+        } catch (NoKeyLoadedException $e) {\n+        }\n+\n+        return parent::load($key, $password);\n+    }\n+\n+    /**\n+     * OnLoad Handler\n+     *\n+     * @return bool\n+     */\n+    protected static function onLoad(array $components)\n+    {\n+        if (!isset($components['privateKey']) && !isset($components['publicKey'])) {\n+            $new = new Parameters();\n+        } else {\n+            $new = isset($components['privateKey']) ?\n+                new PrivateKey() :\n+                new PublicKey();\n+        }\n+\n+        $new->prime = $components['prime'];\n+        $new->base = $components['base'];\n+\n+        if (isset($components['privateKey'])) {\n+            $new->privateKey = $components['privateKey'];\n+        }\n+        if (isset($components['publicKey'])) {\n+            $new->publicKey = $components['publicKey'];\n+        }\n+\n+        return $new;\n+    }\n+\n+    /**\n+     * Determines which hashing function should be used\n+     *\n+     * @param string $hash\n+     */\n+    public function withHash($hash)\n+    {\n+        throw new UnsupportedOperationException('DH does not use a hash algorithm');\n+    }\n+\n+    /**\n+     * Returns the hash algorithm currently being used\n+     *\n+     */\n+    public function getHash()\n+    {\n+        throw new UnsupportedOperationException('DH does not use a hash algorithm');\n+    }\n+\n+    /**\n+     * Returns the parameters\n+     *\n+     * A public / private key is only returned if the currently loaded \"key\" contains an x or y\n+     * value.\n+     *\n+     * @see self::getPublicKey()\n+     * @return mixed\n+     */\n+    public function getParameters()\n+    {\n+        $type = DH::validatePlugin('Keys', 'PKCS1', 'saveParameters');\n+\n+        $key = $type::saveParameters($this->prime, $this->base);\n+        return DH::load($key, 'PKCS1');\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH/Formats/Keys/PKCS1.php",
          "status": "added",
          "additions": 77,
          "deletions": 0,
          "patch": "@@ -0,0 +1,77 @@\n+<?php\n+\n+/**\n+ * \"PKCS1\" Formatted EC Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Processes keys with the following headers:\n+ *\n+ * -----BEGIN DH PARAMETERS-----\n+ *\n+ * Technically, PKCS1 is for RSA keys, only, but we're using PKCS1 to describe\n+ * DSA, whose format isn't really formally described anywhere, so might as well\n+ * use it to describe this, too.\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DH\\Formats\\Keys;\n+\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\PKCS1 as Progenitor;\n+use phpseclib3\\File\\ASN1;\n+use phpseclib3\\File\\ASN1\\Maps;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * \"PKCS1\" Formatted DH Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS1 extends Progenitor\n+{\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $key = parent::load($key, $password);\n+\n+        $decoded = ASN1::decodeBER($key);\n+        if (!$decoded) {\n+            throw new \\RuntimeException('Unable to decode BER');\n+        }\n+\n+        $components = ASN1::asn1map($decoded[0], Maps\\DHParameter::MAP);\n+        if (!is_array($components)) {\n+            throw new \\RuntimeException('Unable to perform ASN1 mapping on parameters');\n+        }\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Convert EC parameters to the appropriate format\n+     *\n+     * @return string\n+     */\n+    public static function saveParameters(BigInteger $prime, BigInteger $base, array $options = [])\n+    {\n+        $params = [\n+            'prime' => $prime,\n+            'base' => $base\n+        ];\n+        $params = ASN1::encodeDER($params, Maps\\DHParameter::MAP);\n+\n+        return \"-----BEGIN DH PARAMETERS-----\\r\\n\" .\n+               chunk_split(base64_encode($params), 64) .\n+               \"-----END DH PARAMETERS-----\\r\\n\";\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH/Formats/Keys/PKCS8.php",
          "status": "added",
          "additions": 132,
          "deletions": 0,
          "patch": "@@ -0,0 +1,132 @@\n+<?php\n+\n+/**\n+ * PKCS#8 Formatted DH Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Processes keys with the following headers:\n+ *\n+ * -----BEGIN ENCRYPTED PRIVATE KEY-----\n+ * -----BEGIN PRIVATE KEY-----\n+ * -----BEGIN PUBLIC KEY-----\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DH\\Formats\\Keys;\n+\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\PKCS8 as Progenitor;\n+use phpseclib3\\File\\ASN1;\n+use phpseclib3\\File\\ASN1\\Maps;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * PKCS#8 Formatted DH Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS8 extends Progenitor\n+{\n+    /**\n+     * OID Name\n+     *\n+     * @var string\n+     */\n+    const OID_NAME = 'dhKeyAgreement';\n+\n+    /**\n+     * OID Value\n+     *\n+     * @var string\n+     */\n+    const OID_VALUE = '1.2.840.113549.1.3.1';\n+\n+    /**\n+     * Child OIDs loaded\n+     *\n+     * @var bool\n+     */\n+    protected static $childOIDsLoaded = false;\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $key = parent::load($key, $password);\n+\n+        $type = isset($key['privateKey']) ? 'privateKey' : 'publicKey';\n+\n+        $decoded = ASN1::decodeBER($key[$type . 'Algorithm']['parameters']->element);\n+        if (empty($decoded)) {\n+            throw new \\RuntimeException('Unable to decode BER of parameters');\n+        }\n+        $components = ASN1::asn1map($decoded[0], Maps\\DHParameter::MAP);\n+        if (!is_array($components)) {\n+            throw new \\RuntimeException('Unable to perform ASN1 mapping on parameters');\n+        }\n+\n+        $decoded = ASN1::decodeBER($key[$type]);\n+        switch (true) {\n+            case !isset($decoded):\n+            case !isset($decoded[0]['content']):\n+            case !$decoded[0]['content'] instanceof BigInteger:\n+                throw new \\RuntimeException('Unable to decode BER of parameters');\n+        }\n+        $components[$type] = $decoded[0]['content'];\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $prime\n+     * @param \\phpseclib3\\Math\\BigInteger $base\n+     * @param \\phpseclib3\\Math\\BigInteger $privateKey\n+     * @param \\phpseclib3\\Math\\BigInteger $publicKey\n+     * @param string $password optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $prime, BigInteger $base, BigInteger $privateKey, BigInteger $publicKey, $password = '', array $options = [])\n+    {\n+        $params = [\n+            'prime' => $prime,\n+            'base' => $base\n+        ];\n+        $params = ASN1::encodeDER($params, Maps\\DHParameter::MAP);\n+        $params = new ASN1\\Element($params);\n+        $key = ASN1::encodeDER($privateKey, ['type' => ASN1::TYPE_INTEGER]);\n+        return self::wrapPrivateKey($key, [], $params, $password, null, '', $options);\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $prime\n+     * @param \\phpseclib3\\Math\\BigInteger $base\n+     * @param \\phpseclib3\\Math\\BigInteger $publicKey\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $prime, BigInteger $base, BigInteger $publicKey, array $options = [])\n+    {\n+        $params = [\n+            'prime' => $prime,\n+            'base' => $base\n+        ];\n+        $params = ASN1::encodeDER($params, Maps\\DHParameter::MAP);\n+        $params = new ASN1\\Element($params);\n+        $key = ASN1::encodeDER($publicKey, ['type' => ASN1::TYPE_INTEGER]);\n+        return self::wrapPublicKey($key, $params);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH/Parameters.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -0,0 +1,36 @@\n+<?php\n+\n+/**\n+ * DH Parameters\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DH;\n+\n+use phpseclib3\\Crypt\\DH;\n+\n+/**\n+ * DH Parameters\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class Parameters extends DH\n+{\n+    /**\n+     * Returns the parameters\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type = 'PKCS1', array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', 'PKCS1', 'saveParameters');\n+\n+        return $type::saveParameters($this->prime, $this->base, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH/PrivateKey.php",
          "status": "added",
          "additions": 75,
          "deletions": 0,
          "patch": "@@ -0,0 +1,75 @@\n+<?php\n+\n+/**\n+ * DH Private Key\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DH;\n+\n+use phpseclib3\\Crypt\\Common;\n+use phpseclib3\\Crypt\\DH;\n+\n+/**\n+ * DH Private Key\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class PrivateKey extends DH\n+{\n+    use Common\\Traits\\PasswordProtected;\n+\n+    /**\n+     * Private Key\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $privateKey;\n+\n+    /**\n+     * Public Key\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $publicKey;\n+\n+    /**\n+     * Returns the public key\n+     *\n+     * @return DH\\PublicKey\n+     */\n+    public function getPublicKey()\n+    {\n+        $type = self::validatePlugin('Keys', 'PKCS8', 'savePublicKey');\n+\n+        if (!isset($this->publicKey)) {\n+            $this->publicKey = $this->base->powMod($this->privateKey, $this->prime);\n+        }\n+\n+        $key = $type::savePublicKey($this->prime, $this->base, $this->publicKey);\n+\n+        return DH::loadFormat('PKCS8', $key);\n+    }\n+\n+    /**\n+     * Returns the private key\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type, array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', $type, 'savePrivateKey');\n+\n+        if (!isset($this->publicKey)) {\n+            $this->publicKey = $this->base->powMod($this->privateKey, $this->prime);\n+        }\n+\n+        return $type::savePrivateKey($this->prime, $this->base, $this->privateKey, $this->publicKey, $this->password, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DH/PublicKey.php",
          "status": "added",
          "additions": 49,
          "deletions": 0,
          "patch": "@@ -0,0 +1,49 @@\n+<?php\n+\n+/**\n+ * DH Public Key\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DH;\n+\n+use phpseclib3\\Crypt\\Common;\n+use phpseclib3\\Crypt\\DH;\n+\n+/**\n+ * DH Public Key\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class PublicKey extends DH\n+{\n+    use Common\\Traits\\Fingerprint;\n+\n+    /**\n+     * Returns the public key\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type, array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', $type, 'savePublicKey');\n+\n+        return $type::savePublicKey($this->prime, $this->base, $this->publicKey, $options);\n+    }\n+\n+    /**\n+     * Returns the public key as a BigInteger\n+     *\n+     * @return \\phpseclib3\\Math\\BigInteger\n+     */\n+    public function toBigInteger()\n+    {\n+        return $this->publicKey;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA.php",
          "status": "added",
          "additions": 337,
          "deletions": 0,
          "patch": "@@ -0,0 +1,337 @@\n+<?php\n+\n+/**\n+ * Pure-PHP FIPS 186-4 compliant implementation of DSA.\n+ *\n+ * PHP version 5\n+ *\n+ * Here's an example of how to create signatures and verify signatures with this library:\n+ * <code>\n+ * <?php\n+ * include 'vendor/autoload.php';\n+ *\n+ * $private = \\phpseclib3\\Crypt\\DSA::createKey();\n+ * $public = $private->getPublicKey();\n+ *\n+ * $plaintext = 'terrafrost';\n+ *\n+ * $signature = $private->sign($plaintext);\n+ *\n+ * echo $public->verify($plaintext, $signature) ? 'verified' : 'unverified';\n+ * ?>\n+ * </code>\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt;\n+\n+use phpseclib3\\Crypt\\Common\\AsymmetricKey;\n+use phpseclib3\\Crypt\\DSA\\Parameters;\n+use phpseclib3\\Crypt\\DSA\\PrivateKey;\n+use phpseclib3\\Crypt\\DSA\\PublicKey;\n+use phpseclib3\\Exception\\InsufficientSetupException;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * Pure-PHP FIPS 186-4 compliant implementation of DSA.\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class DSA extends AsymmetricKey\n+{\n+    /**\n+     * Algorithm Name\n+     *\n+     * @var string\n+     */\n+    const ALGORITHM = 'DSA';\n+\n+    /**\n+     * DSA Prime P\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $p;\n+\n+    /**\n+     * DSA Group Order q\n+     *\n+     * Prime divisor of p-1\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $q;\n+\n+    /**\n+     * DSA Group Generator G\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $g;\n+\n+    /**\n+     * DSA public key value y\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $y;\n+\n+    /**\n+     * Signature Format\n+     *\n+     * @var string\n+     */\n+    protected $sigFormat;\n+\n+    /**\n+     * Signature Format (Short)\n+     *\n+     * @var string\n+     */\n+    protected $shortFormat;\n+\n+    /**\n+     * Create DSA parameters\n+     *\n+     * @param int $L\n+     * @param int $N\n+     * @return \\phpseclib3\\Crypt\\DSA|bool\n+     */\n+    public static function createParameters($L = 2048, $N = 224)\n+    {\n+        self::initialize_static_variables();\n+\n+        $class = new \\ReflectionClass(static::class);\n+        if ($class->isFinal()) {\n+            throw new \\RuntimeException('createParameters() should not be called from final classes (' . static::class . ')');\n+        }\n+\n+        if (!isset(self::$engines['PHP'])) {\n+            self::useBestEngine();\n+        }\n+\n+        switch (true) {\n+            case $N == 160:\n+            /*\n+              in FIPS 186-1 and 186-2 N was fixed at 160 whereas K had an upper bound of 1024.\n+              RFC 4253 (SSH Transport Layer Protocol) references FIPS 186-2 and as such most\n+              SSH DSA implementations only support keys with an N of 160.\n+              puttygen let's you set the size of L (but not the size of N) and uses 2048 as the\n+              default L value. that's not really compliant with any of the FIPS standards, however,\n+              for the purposes of maintaining compatibility with puttygen, we'll support it\n+            */\n+            //case ($L >= 512 || $L <= 1024) && (($L & 0x3F) == 0) && $N == 160:\n+            // FIPS 186-3 changed this as follows:\n+            //case $L == 1024 && $N == 160:\n+            case $L == 2048 && $N == 224:\n+            case $L == 2048 && $N == 256:\n+            case $L == 3072 && $N == 256:\n+                break;\n+            default:\n+                throw new \\InvalidArgumentException('Invalid values for N and L');\n+        }\n+\n+        $two = new BigInteger(2);\n+\n+        $q = BigInteger::randomPrime($N);\n+        $divisor = $q->multiply($two);\n+\n+        do {\n+            $x = BigInteger::random($L);\n+            list(, $c) = $x->divide($divisor);\n+            $p = $x->subtract($c->subtract(self::$one));\n+        } while ($p->getLength() != $L || !$p->isPrime());\n+\n+        $p_1 = $p->subtract(self::$one);\n+        list($e) = $p_1->divide($q);\n+\n+        // quoting http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf#page=50 ,\n+        // \"h could be obtained from a random number generator or from a counter that\n+        //  changes after each use\". PuTTY (sshdssg.c) starts h off at 1 and increments\n+        // it on each loop. wikipedia says \"commonly h = 2 is used\" so we'll just do that\n+        $h = clone $two;\n+        while (true) {\n+            $g = $h->powMod($e, $p);\n+            if (!$g->equals(self::$one)) {\n+                break;\n+            }\n+            $h = $h->add(self::$one);\n+        }\n+\n+        $dsa = new Parameters();\n+        $dsa->p = $p;\n+        $dsa->q = $q;\n+        $dsa->g = $g;\n+\n+        return $dsa;\n+    }\n+\n+    /**\n+     * Create public / private key pair.\n+     *\n+     * This method is a bit polymorphic. It can take a DSA/Parameters object, L / N as two distinct parameters or\n+     * no parameters (at which point L and N will be generated with this method)\n+     *\n+     * Returns the private key, from which the publickey can be extracted\n+     *\n+     * @param int[] ...$args\n+     * @return DSA\\PrivateKey\n+     */\n+    public static function createKey(...$args)\n+    {\n+        self::initialize_static_variables();\n+\n+        $class = new \\ReflectionClass(static::class);\n+        if ($class->isFinal()) {\n+            throw new \\RuntimeException('createKey() should not be called from final classes (' . static::class . ')');\n+        }\n+\n+        if (!isset(self::$engines['PHP'])) {\n+            self::useBestEngine();\n+        }\n+\n+        if (count($args) == 2 && is_int($args[0]) && is_int($args[1])) {\n+            $params = self::createParameters($args[0], $args[1]);\n+        } elseif (count($args) == 1 && $args[0] instanceof Parameters) {\n+            $params = $args[0];\n+        } elseif (!count($args)) {\n+            $params = self::createParameters();\n+        } else {\n+            throw new InsufficientSetupException('Valid parameters are either two integers (L and N), a single DSA object or no parameters at all.');\n+        }\n+\n+        $private = new PrivateKey();\n+        $private->p = $params->p;\n+        $private->q = $params->q;\n+        $private->g = $params->g;\n+\n+        $private->x = BigInteger::randomRange(self::$one, $private->q->subtract(self::$one));\n+        $private->y = $private->g->powMod($private->x, $private->p);\n+\n+        //$public = clone $private;\n+        //unset($public->x);\n+\n+        return $private\n+            ->withHash($params->hash->getHash())\n+            ->withSignatureFormat($params->shortFormat);\n+    }\n+\n+    /**\n+     * OnLoad Handler\n+     *\n+     * @return bool\n+     */\n+    protected static function onLoad(array $components)\n+    {\n+        if (!isset(self::$engines['PHP'])) {\n+            self::useBestEngine();\n+        }\n+\n+        if (!isset($components['x']) && !isset($components['y'])) {\n+            $new = new Parameters();\n+        } elseif (isset($components['x'])) {\n+            $new = new PrivateKey();\n+            $new->x = $components['x'];\n+        } else {\n+            $new = new PublicKey();\n+        }\n+\n+        $new->p = $components['p'];\n+        $new->q = $components['q'];\n+        $new->g = $components['g'];\n+\n+        if (isset($components['y'])) {\n+            $new->y = $components['y'];\n+        }\n+\n+        return $new;\n+    }\n+\n+    /**\n+     * Constructor\n+     *\n+     * PublicKey and PrivateKey objects can only be created from abstract RSA class\n+     */\n+    protected function __construct()\n+    {\n+        $this->sigFormat = self::validatePlugin('Signature', 'ASN1');\n+        $this->shortFormat = 'ASN1';\n+\n+        parent::__construct();\n+    }\n+\n+    /**\n+     * Returns the key size\n+     *\n+     * More specifically, this L (the length of DSA Prime P) and N (the length of DSA Group Order q)\n+     *\n+     * @return array\n+     */\n+    public function getLength()\n+    {\n+        return ['L' => $this->p->getLength(), 'N' => $this->q->getLength()];\n+    }\n+\n+    /**\n+     * Returns the current engine being used\n+     *\n+     * @see self::useInternalEngine()\n+     * @see self::useBestEngine()\n+     * @return string\n+     */\n+    public function getEngine()\n+    {\n+        if (!isset(self::$engines['PHP'])) {\n+            self::useBestEngine();\n+        }\n+        return self::$engines['OpenSSL'] && in_array($this->hash->getHash(), openssl_get_md_methods()) ?\n+            'OpenSSL' : 'PHP';\n+    }\n+\n+    /**\n+     * Returns the parameters\n+     *\n+     * A public / private key is only returned if the currently loaded \"key\" contains an x or y\n+     * value.\n+     *\n+     * @see self::getPublicKey()\n+     * @return mixed\n+     */\n+    public function getParameters()\n+    {\n+        $type = self::validatePlugin('Keys', 'PKCS1', 'saveParameters');\n+\n+        $key = $type::saveParameters($this->p, $this->q, $this->g);\n+        return DSA::load($key, 'PKCS1')\n+            ->withHash($this->hash->getHash())\n+            ->withSignatureFormat($this->shortFormat);\n+    }\n+\n+    /**\n+     * Determines the signature padding mode\n+     *\n+     * Valid values are: ASN1, SSH2, Raw\n+     *\n+     * @param string $format\n+     */\n+    public function withSignatureFormat($format)\n+    {\n+        $new = clone $this;\n+        $new->shortFormat = $format;\n+        $new->sigFormat = self::validatePlugin('Signature', $format);\n+        return $new;\n+    }\n+\n+    /**\n+     * Returns the signature format currently being used\n+     *\n+     */\n+    public function getSignatureFormat()\n+    {\n+        return $this->shortFormat;\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/OpenSSH.php",
          "status": "added",
          "additions": 118,
          "deletions": 0,
          "patch": "@@ -0,0 +1,118 @@\n+<?php\n+\n+/**\n+ * OpenSSH Formatted DSA Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Place in $HOME/.ssh/authorized_keys\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\OpenSSH as Progenitor;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * OpenSSH Formatted DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class OpenSSH extends Progenitor\n+{\n+    /**\n+     * Supported Key Types\n+     *\n+     * @var array\n+     */\n+    protected static $types = ['ssh-dss'];\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $parsed = parent::load($key, $password);\n+\n+        if (isset($parsed['paddedKey'])) {\n+            list($type) = Strings::unpackSSH2('s', $parsed['paddedKey']);\n+            if ($type != $parsed['type']) {\n+                throw new \\RuntimeException(\"The public and private keys are not of the same type ($type vs $parsed[type])\");\n+            }\n+\n+            list($p, $q, $g, $y, $x, $comment) = Strings::unpackSSH2('i5s', $parsed['paddedKey']);\n+\n+            return compact('p', 'q', 'g', 'y', 'x', 'comment');\n+        }\n+\n+        list($p, $q, $g, $y) = Strings::unpackSSH2('iiii', $parsed['publicKey']);\n+\n+        $comment = $parsed['comment'];\n+\n+        return compact('p', 'q', 'g', 'y', 'comment');\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, array $options = [])\n+    {\n+        if ($q->getLength() != 160) {\n+            throw new \\InvalidArgumentException('SSH only supports keys with an N (length of Group Order q) of 160');\n+        }\n+\n+        // from <http://tools.ietf.org/html/rfc4253#page-15>:\n+        // string    \"ssh-dss\"\n+        // mpint     p\n+        // mpint     q\n+        // mpint     g\n+        // mpint     y\n+        $DSAPublicKey = Strings::packSSH2('siiii', 'ssh-dss', $p, $q, $g, $y);\n+\n+        if (isset($options['binary']) ? $options['binary'] : self::$binary) {\n+            return $DSAPublicKey;\n+        }\n+\n+        $comment = isset($options['comment']) ? $options['comment'] : self::$comment;\n+        $DSAPublicKey = 'ssh-dss ' . base64_encode($DSAPublicKey) . ' ' . $comment;\n+\n+        return $DSAPublicKey;\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param \\phpseclib3\\Math\\BigInteger $x\n+     * @param string $password optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, BigInteger $x, $password = '', array $options = [])\n+    {\n+        $publicKey = self::savePublicKey($p, $q, $g, $y, ['binary' => true]);\n+        $privateKey = Strings::packSSH2('si5', 'ssh-dss', $p, $q, $g, $y, $x);\n+\n+        return self::wrapPrivateKey($publicKey, $privateKey, $password, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/PKCS1.php",
          "status": "added",
          "additions": 143,
          "deletions": 0,
          "patch": "@@ -0,0 +1,143 @@\n+<?php\n+\n+/**\n+ * PKCS#1 Formatted DSA Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Used by File/X509.php\n+ *\n+ * Processes keys with the following headers:\n+ *\n+ * -----BEGIN DSA PRIVATE KEY-----\n+ * -----BEGIN DSA PUBLIC KEY-----\n+ * -----BEGIN DSA PARAMETERS-----\n+ *\n+ * Analogous to ssh-keygen's pem format (as specified by -m)\n+ *\n+ * Also, technically, PKCS1 decribes RSA but I am not aware of a formal specification for DSA.\n+ * The DSA private key format seems to have been adapted from the RSA private key format so\n+ * we're just re-using that as the name.\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\PKCS1 as Progenitor;\n+use phpseclib3\\File\\ASN1;\n+use phpseclib3\\File\\ASN1\\Maps;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * PKCS#1 Formatted DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS1 extends Progenitor\n+{\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $key = parent::load($key, $password);\n+\n+        $decoded = ASN1::decodeBER($key);\n+        if (!$decoded) {\n+            throw new \\RuntimeException('Unable to decode BER');\n+        }\n+\n+        $key = ASN1::asn1map($decoded[0], Maps\\DSAParams::MAP);\n+        if (is_array($key)) {\n+            return $key;\n+        }\n+\n+        $key = ASN1::asn1map($decoded[0], Maps\\DSAPrivateKey::MAP);\n+        if (is_array($key)) {\n+            return $key;\n+        }\n+\n+        $key = ASN1::asn1map($decoded[0], Maps\\DSAPublicKey::MAP);\n+        if (is_array($key)) {\n+            return $key;\n+        }\n+\n+        throw new \\RuntimeException('Unable to perform ASN1 mapping');\n+    }\n+\n+    /**\n+     * Convert DSA parameters to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @return string\n+     */\n+    public static function saveParameters(BigInteger $p, BigInteger $q, BigInteger $g)\n+    {\n+        $key = [\n+            'p' => $p,\n+            'q' => $q,\n+            'g' => $g\n+        ];\n+\n+        $key = ASN1::encodeDER($key, Maps\\DSAParams::MAP);\n+\n+        return \"-----BEGIN DSA PARAMETERS-----\\r\\n\" .\n+               chunk_split(Strings::base64_encode($key), 64) .\n+               \"-----END DSA PARAMETERS-----\\r\\n\";\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param \\phpseclib3\\Math\\BigInteger $x\n+     * @param string $password optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, BigInteger $x, $password = '', array $options = [])\n+    {\n+        $key = [\n+            'version' => 0,\n+            'p' => $p,\n+            'q' => $q,\n+            'g' => $g,\n+            'y' => $y,\n+            'x' => $x\n+        ];\n+\n+        $key = ASN1::encodeDER($key, Maps\\DSAPrivateKey::MAP);\n+\n+        return self::wrapPrivateKey($key, 'DSA', $password, $options);\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y)\n+    {\n+        $key = ASN1::encodeDER($y, Maps\\DSAPublicKey::MAP);\n+\n+        return self::wrapPublicKey($key, 'DSA');\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/PKCS8.php",
          "status": "added",
          "additions": 146,
          "deletions": 0,
          "patch": "@@ -0,0 +1,146 @@\n+<?php\n+\n+/**\n+ * PKCS#8 Formatted DSA Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Processes keys with the following headers:\n+ *\n+ * -----BEGIN ENCRYPTED PRIVATE KEY-----\n+ * -----BEGIN PRIVATE KEY-----\n+ * -----BEGIN PUBLIC KEY-----\n+ *\n+ * Analogous to ssh-keygen's pkcs8 format (as specified by -m). Although PKCS8\n+ * is specific to private keys it's basically creating a DER-encoded wrapper\n+ * for keys. This just extends that same concept to public keys (much like ssh-keygen)\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\PKCS8 as Progenitor;\n+use phpseclib3\\File\\ASN1;\n+use phpseclib3\\File\\ASN1\\Maps;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * PKCS#8 Formatted DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PKCS8 extends Progenitor\n+{\n+    /**\n+     * OID Name\n+     *\n+     * @var string\n+     */\n+    const OID_NAME = 'id-dsa';\n+\n+    /**\n+     * OID Value\n+     *\n+     * @var string\n+     */\n+    const OID_VALUE = '1.2.840.10040.4.1';\n+\n+    /**\n+     * Child OIDs loaded\n+     *\n+     * @var bool\n+     */\n+    protected static $childOIDsLoaded = false;\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $key = parent::load($key, $password);\n+\n+        $type = isset($key['privateKey']) ? 'privateKey' : 'publicKey';\n+\n+        $decoded = ASN1::decodeBER($key[$type . 'Algorithm']['parameters']->element);\n+        if (!$decoded) {\n+            throw new \\RuntimeException('Unable to decode BER of parameters');\n+        }\n+        $components = ASN1::asn1map($decoded[0], Maps\\DSAParams::MAP);\n+        if (!is_array($components)) {\n+            throw new \\RuntimeException('Unable to perform ASN1 mapping on parameters');\n+        }\n+\n+        $decoded = ASN1::decodeBER($key[$type]);\n+        if (empty($decoded)) {\n+            throw new \\RuntimeException('Unable to decode BER');\n+        }\n+\n+        $var = $type == 'privateKey' ? 'x' : 'y';\n+        $components[$var] = ASN1::asn1map($decoded[0], Maps\\DSAPublicKey::MAP);\n+        if (!$components[$var] instanceof BigInteger) {\n+            throw new \\RuntimeException('Unable to perform ASN1 mapping');\n+        }\n+\n+        if (isset($key['meta'])) {\n+            $components['meta'] = $key['meta'];\n+        }\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param \\phpseclib3\\Math\\BigInteger $x\n+     * @param string $password optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, BigInteger $x, $password = '', array $options = [])\n+    {\n+        $params = [\n+            'p' => $p,\n+            'q' => $q,\n+            'g' => $g\n+        ];\n+        $params = ASN1::encodeDER($params, Maps\\DSAParams::MAP);\n+        $params = new ASN1\\Element($params);\n+        $key = ASN1::encodeDER($x, Maps\\DSAPublicKey::MAP);\n+        return self::wrapPrivateKey($key, [], $params, $password, null, '', $options);\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, array $options = [])\n+    {\n+        $params = [\n+            'p' => $p,\n+            'q' => $q,\n+            'g' => $g\n+        ];\n+        $params = ASN1::encodeDER($params, Maps\\DSAParams::MAP);\n+        $params = new ASN1\\Element($params);\n+        $key = ASN1::encodeDER($y, Maps\\DSAPublicKey::MAP);\n+        return self::wrapPublicKey($key, $params);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/PuTTY.php",
          "status": "added",
          "additions": 109,
          "deletions": 0,
          "patch": "@@ -0,0 +1,109 @@\n+<?php\n+\n+/**\n+ * PuTTY Formatted DSA Key Handler\n+ *\n+ * puttygen does not generate DSA keys with an N of anything other than 160, however,\n+ * it can still load them and convert them. PuTTY will load them, too, but SSH servers\n+ * won't accept them. Since PuTTY formatted keys are primarily used with SSH this makes\n+ * keys with N > 160 kinda useless, hence this handlers not supporting such keys.\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Crypt\\Common\\Formats\\Keys\\PuTTY as Progenitor;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * PuTTY Formatted DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class PuTTY extends Progenitor\n+{\n+    /**\n+     * Public Handler\n+     *\n+     * @var string\n+     */\n+    const PUBLIC_HANDLER = 'phpseclib3\\Crypt\\DSA\\Formats\\Keys\\OpenSSH';\n+\n+    /**\n+     * Algorithm Identifier\n+     *\n+     * @var array\n+     */\n+    protected static $types = ['ssh-dss'];\n+\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        $components = parent::load($key, $password);\n+        if (!isset($components['private'])) {\n+            return $components;\n+        }\n+        extract($components);\n+        unset($components['public'], $components['private']);\n+\n+        list($p, $q, $g, $y) = Strings::unpackSSH2('iiii', $public);\n+        list($x) = Strings::unpackSSH2('i', $private);\n+\n+        return compact('p', 'q', 'g', 'y', 'x', 'comment');\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param \\phpseclib3\\Math\\BigInteger $x\n+     * @param string $password optional\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, BigInteger $x, $password = false, array $options = [])\n+    {\n+        if ($q->getLength() != 160) {\n+            throw new \\InvalidArgumentException('SSH only supports keys with an N (length of Group Order q) of 160');\n+        }\n+\n+        $public = Strings::packSSH2('iiii', $p, $q, $g, $y);\n+        $private = Strings::packSSH2('i', $x);\n+\n+        return self::wrapPrivateKey($public, $private, 'ssh-dss', $password, $options);\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y)\n+    {\n+        if ($q->getLength() != 160) {\n+            throw new \\InvalidArgumentException('SSH only supports keys with an N (length of Group Order q) of 160');\n+        }\n+\n+        return self::wrapPublicKey(Strings::packSSH2('iiii', $p, $q, $g, $y), 'ssh-dss');\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/Raw.php",
          "status": "added",
          "additions": 85,
          "deletions": 0,
          "patch": "@@ -0,0 +1,85 @@\n+<?php\n+\n+/**\n+ * Raw DSA Key Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Reads and creates arrays as DSA keys\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * Raw DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class Raw\n+{\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param array $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        if (!is_array($key)) {\n+            throw new \\UnexpectedValueException('Key should be a array - not a ' . gettype($key));\n+        }\n+\n+        switch (true) {\n+            case !isset($key['p']) || !isset($key['q']) || !isset($key['g']):\n+            case !$key['p'] instanceof BigInteger:\n+            case !$key['q'] instanceof BigInteger:\n+            case !$key['g'] instanceof BigInteger:\n+            case !isset($key['x']) && !isset($key['y']):\n+            case isset($key['x']) && !$key['x'] instanceof BigInteger:\n+            case isset($key['y']) && !$key['y'] instanceof BigInteger:\n+                throw new \\UnexpectedValueException('Key appears to be malformed');\n+        }\n+\n+        $options = ['p' => 1, 'q' => 1, 'g' => 1, 'x' => 1, 'y' => 1];\n+\n+        return array_intersect_key($key, $options);\n+    }\n+\n+    /**\n+     * Convert a private key to the appropriate format.\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @param \\phpseclib3\\Math\\BigInteger $x\n+     * @param string $password optional\n+     * @return string\n+     */\n+    public static function savePrivateKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y, BigInteger $x, $password = '')\n+    {\n+        return compact('p', 'q', 'g', 'y', 'x');\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y)\n+    {\n+        return compact('p', 'q', 'g', 'y');\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Keys/XML.php",
          "status": "added",
          "additions": 132,
          "deletions": 0,
          "patch": "@@ -0,0 +1,132 @@\n+<?php\n+\n+/**\n+ * XML Formatted DSA Key Handler\n+ *\n+ * While XKMS defines a private key format for RSA it does not do so for DSA. Quoting that standard:\n+ *\n+ * \"[XKMS] does not specify private key parameters for the DSA signature algorithm since the algorithm only\n+ *  supports signature modes and so the application of server generated keys and key recovery is of limited\n+ *  value\"\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Keys;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Exception\\BadConfigurationException;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * XML Formatted DSA Key Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class XML\n+{\n+    /**\n+     * Break a public or private key down into its constituent components\n+     *\n+     * @param string $key\n+     * @param string $password optional\n+     * @return array\n+     */\n+    public static function load($key, $password = '')\n+    {\n+        if (!Strings::is_stringable($key)) {\n+            throw new \\UnexpectedValueException('Key should be a string - not a ' . gettype($key));\n+        }\n+\n+        if (!class_exists('DOMDocument')) {\n+            throw new BadConfigurationException('The dom extension is not setup correctly on this system');\n+        }\n+\n+        $use_errors = libxml_use_internal_errors(true);\n+\n+        $dom = new \\DOMDocument();\n+        if (substr($key, 0, 5) != '<?xml') {\n+            $key = '<xml>' . $key . '</xml>';\n+        }\n+        if (!$dom->loadXML($key)) {\n+            libxml_use_internal_errors($use_errors);\n+            throw new \\UnexpectedValueException('Key does not appear to contain XML');\n+        }\n+        $xpath = new \\DOMXPath($dom);\n+        $keys = ['p', 'q', 'g', 'y', 'j', 'seed', 'pgencounter'];\n+        foreach ($keys as $key) {\n+            // $dom->getElementsByTagName($key) is case-sensitive\n+            $temp = $xpath->query(\"//*[translate(local-name(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')='$key']\");\n+            if (!$temp->length) {\n+                continue;\n+            }\n+            $value = new BigInteger(Strings::base64_decode($temp->item(0)->nodeValue), 256);\n+            switch ($key) {\n+                case 'p': // a prime modulus meeting the [DSS] requirements\n+                    // Parameters P, Q, and G can be public and common to a group of users. They might be known\n+                    // from application context. As such, they are optional but P and Q must either both appear\n+                    // or both be absent\n+                    $components['p'] = $value;\n+                    break;\n+                case 'q': // an integer in the range 2**159 < Q < 2**160 which is a prime divisor of P-1\n+                    $components['q'] = $value;\n+                    break;\n+                case 'g': // an integer with certain properties with respect to P and Q\n+                    $components['g'] = $value;\n+                    break;\n+                case 'y': // G**X mod P (where X is part of the private key and not made public)\n+                    $components['y'] = $value;\n+                    // the remaining options do not do anything\n+                case 'j': // (P - 1) / Q\n+                    // Parameter J is available for inclusion solely for efficiency as it is calculatable from\n+                    // P and Q\n+                case 'seed': // a DSA prime generation seed\n+                    // Parameters seed and pgenCounter are used in the DSA prime number generation algorithm\n+                    // specified in [DSS]. As such, they are optional but must either both be present or both\n+                    // be absent\n+                case 'pgencounter': // a DSA prime generation counter\n+            }\n+        }\n+\n+        libxml_use_internal_errors($use_errors);\n+\n+        if (!isset($components['y'])) {\n+            throw new \\UnexpectedValueException('Key is missing y component');\n+        }\n+\n+        switch (true) {\n+            case !isset($components['p']):\n+            case !isset($components['q']):\n+            case !isset($components['g']):\n+                return ['y' => $components['y']];\n+        }\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Convert a public key to the appropriate format\n+     *\n+     * See https://www.w3.org/TR/xmldsig-core/#sec-DSAKeyValue\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $p\n+     * @param \\phpseclib3\\Math\\BigInteger $q\n+     * @param \\phpseclib3\\Math\\BigInteger $g\n+     * @param \\phpseclib3\\Math\\BigInteger $y\n+     * @return string\n+     */\n+    public static function savePublicKey(BigInteger $p, BigInteger $q, BigInteger $g, BigInteger $y)\n+    {\n+        return \"<DSAKeyValue>\\r\\n\" .\n+               '  <P>' . Strings::base64_encode($p->toBytes()) . \"</P>\\r\\n\" .\n+               '  <Q>' . Strings::base64_encode($q->toBytes()) . \"</Q>\\r\\n\" .\n+               '  <G>' . Strings::base64_encode($g->toBytes()) . \"</G>\\r\\n\" .\n+               '  <Y>' . Strings::base64_encode($y->toBytes()) . \"</Y>\\r\\n\" .\n+               '</DSAKeyValue>';\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Signature/ASN1.php",
          "status": "added",
          "additions": 62,
          "deletions": 0,
          "patch": "@@ -0,0 +1,62 @@\n+<?php\n+\n+/**\n+ * ASN1 Signature Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Handles signatures in the format described in\n+ * https://tools.ietf.org/html/rfc3279#section-2.2.2\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Signature;\n+\n+use phpseclib3\\File\\ASN1 as Encoder;\n+use phpseclib3\\File\\ASN1\\Maps;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * ASN1 Signature Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class ASN1\n+{\n+    /**\n+     * Loads a signature\n+     *\n+     * @param string $sig\n+     * @return array|bool\n+     */\n+    public static function load($sig)\n+    {\n+        if (!is_string($sig)) {\n+            return false;\n+        }\n+\n+        $decoded = Encoder::decodeBER($sig);\n+        if (empty($decoded)) {\n+            return false;\n+        }\n+        $components = Encoder::asn1map($decoded[0], Maps\\DssSigValue::MAP);\n+\n+        return $components;\n+    }\n+\n+    /**\n+     * Returns a signature in the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $r\n+     * @param \\phpseclib3\\Math\\BigInteger $s\n+     * @return string\n+     */\n+    public static function save(BigInteger $r, BigInteger $s)\n+    {\n+        return Encoder::encodeDER(compact('r', 's'), Maps\\DssSigValue::MAP);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Signature/Raw.php",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+<?php\n+\n+/**\n+ * Raw DSA Signature Handler\n+ *\n+ * PHP version 5\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Signature;\n+\n+use phpseclib3\\Crypt\\Common\\Formats\\Signature\\Raw as Progenitor;\n+\n+/**\n+ * Raw DSA Signature Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class Raw extends Progenitor\n+{\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Formats/Signature/SSH2.php",
          "status": "added",
          "additions": 74,
          "deletions": 0,
          "patch": "@@ -0,0 +1,74 @@\n+<?php\n+\n+/**\n+ * SSH2 Signature Handler\n+ *\n+ * PHP version 5\n+ *\n+ * Handles signatures in the format used by SSH2\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2016 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA\\Formats\\Signature;\n+\n+use phpseclib3\\Common\\Functions\\Strings;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * SSH2 Signature Handler\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+abstract class SSH2\n+{\n+    /**\n+     * Loads a signature\n+     *\n+     * @param string $sig\n+     * @return mixed\n+     */\n+    public static function load($sig)\n+    {\n+        if (!is_string($sig)) {\n+            return false;\n+        }\n+\n+        $result = Strings::unpackSSH2('ss', $sig);\n+        if ($result === false) {\n+            return false;\n+        }\n+        list($type, $blob) = $result;\n+        if ($type != 'ssh-dss' || strlen($blob) != 40) {\n+            return false;\n+        }\n+\n+        return [\n+            'r' => new BigInteger(substr($blob, 0, 20), 256),\n+            's' => new BigInteger(substr($blob, 20), 256)\n+        ];\n+    }\n+\n+    /**\n+     * Returns a signature in the appropriate format\n+     *\n+     * @param \\phpseclib3\\Math\\BigInteger $r\n+     * @param \\phpseclib3\\Math\\BigInteger $s\n+     * @return string\n+     */\n+    public static function save(BigInteger $r, BigInteger $s)\n+    {\n+        if ($r->getLength() > 160 || $s->getLength() > 160) {\n+            return false;\n+        }\n+        return Strings::packSSH2(\n+            'ss',\n+            'ssh-dss',\n+            str_pad($r->toBytes(), 20, \"\\0\", STR_PAD_LEFT) .\n+            str_pad($s->toBytes(), 20, \"\\0\", STR_PAD_LEFT)\n+        );\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/Parameters.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -0,0 +1,36 @@\n+<?php\n+\n+/**\n+ * DSA Parameters\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA;\n+\n+use phpseclib3\\Crypt\\DSA;\n+\n+/**\n+ * DSA Parameters\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class Parameters extends DSA\n+{\n+    /**\n+     * Returns the parameters\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type = 'PKCS1', array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', 'PKCS1', 'saveParameters');\n+\n+        return $type::saveParameters($this->p, $this->q, $this->g, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/PrivateKey.php",
          "status": "added",
          "additions": 152,
          "deletions": 0,
          "patch": "@@ -0,0 +1,152 @@\n+<?php\n+\n+/**\n+ * DSA Private Key\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA;\n+\n+use phpseclib3\\Crypt\\Common;\n+use phpseclib3\\Crypt\\DSA;\n+use phpseclib3\\Crypt\\DSA\\Formats\\Signature\\ASN1 as ASN1Signature;\n+use phpseclib3\\Math\\BigInteger;\n+\n+/**\n+ * DSA Private Key\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class PrivateKey extends DSA implements Common\\PrivateKey\n+{\n+    use Common\\Traits\\PasswordProtected;\n+\n+    /**\n+     * DSA secret exponent x\n+     *\n+     * @var \\phpseclib3\\Math\\BigInteger\n+     */\n+    protected $x;\n+\n+    /**\n+     * Returns the public key\n+     *\n+     * If you do \"openssl rsa -in private.rsa -pubout -outform PEM\" you get a PKCS8 formatted key\n+     * that contains a publicKeyAlgorithm AlgorithmIdentifier and a publicKey BIT STRING.\n+     * An AlgorithmIdentifier contains an OID and a parameters field. With RSA public keys this\n+     * parameters field is NULL. With DSA PKCS8 public keys it is not - it contains the p, q and g\n+     * variables. The publicKey BIT STRING contains, simply, the y variable. This can be verified\n+     * by getting a DSA PKCS8 public key:\n+     *\n+     * \"openssl dsa -in private.dsa -pubout -outform PEM\"\n+     *\n+     * ie. just swap out rsa with dsa in the rsa command above.\n+     *\n+     * A PKCS1 public key corresponds to the publicKey portion of the PKCS8 key. In the case of RSA\n+     * the publicKey portion /is/ the key. In the case of DSA it is not. You cannot verify a signature\n+     * without the parameters and the PKCS1 DSA public key format does not include the parameters.\n+     *\n+     * @see self::getPrivateKey()\n+     * @return mixed\n+     */\n+    public function getPublicKey()\n+    {\n+        $type = self::validatePlugin('Keys', 'PKCS8', 'savePublicKey');\n+\n+        if (!isset($this->y)) {\n+            $this->y = $this->g->powMod($this->x, $this->p);\n+        }\n+\n+        $key = $type::savePublicKey($this->p, $this->q, $this->g, $this->y);\n+\n+        return DSA::loadFormat('PKCS8', $key)\n+            ->withHash($this->hash->getHash())\n+            ->withSignatureFormat($this->shortFormat);\n+    }\n+\n+    /**\n+     * Create a signature\n+     *\n+     * @see self::verify()\n+     * @param string $message\n+     * @return mixed\n+     */\n+    public function sign($message)\n+    {\n+        $format = $this->sigFormat;\n+\n+        if (self::$engines['OpenSSL'] && in_array($this->hash->getHash(), openssl_get_md_methods())) {\n+            $signature = '';\n+            $result = openssl_sign($message, $signature, $this->toString('PKCS8'), $this->hash->getHash());\n+\n+            if ($result) {\n+                if ($this->shortFormat == 'ASN1') {\n+                    return $signature;\n+                }\n+\n+                extract(ASN1Signature::load($signature));\n+\n+                return $format::save($r, $s);\n+            }\n+        }\n+\n+        $h = $this->hash->hash($message);\n+        $h = $this->bits2int($h);\n+\n+        while (true) {\n+            $k = BigInteger::randomRange(self::$one, $this->q->subtract(self::$one));\n+            $r = $this->g->powMod($k, $this->p);\n+            list(, $r) = $r->divide($this->q);\n+            if ($r->equals(self::$zero)) {\n+                continue;\n+            }\n+            $kinv = $k->modInverse($this->q);\n+            $temp = $h->add($this->x->multiply($r));\n+            $temp = $kinv->multiply($temp);\n+            list(, $s) = $temp->divide($this->q);\n+            if (!$s->equals(self::$zero)) {\n+                break;\n+            }\n+        }\n+\n+        // the following is an RFC6979 compliant implementation of deterministic DSA\n+        // it's unused because it's mainly intended for use when a good CSPRNG isn't\n+        // available. if phpseclib's CSPRNG isn't good then even key generation is\n+        // suspect\n+        /*\n+        $h1 = $this->hash->hash($message);\n+        $k = $this->computek($h1);\n+        $r = $this->g->powMod($k, $this->p);\n+        list(, $r) = $r->divide($this->q);\n+        $kinv = $k->modInverse($this->q);\n+        $h1 = $this->bits2int($h1);\n+        $temp = $h1->add($this->x->multiply($r));\n+        $temp = $kinv->multiply($temp);\n+        list(, $s) = $temp->divide($this->q);\n+        */\n+\n+        return $format::save($r, $s);\n+    }\n+\n+    /**\n+     * Returns the private key\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type, array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', $type, 'savePrivateKey');\n+\n+        if (!isset($this->y)) {\n+            $this->y = $this->g->powMod($this->x, $this->p);\n+        }\n+\n+        return $type::savePrivateKey($this->p, $this->q, $this->g, $this->y, $this->x, $this->password, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/DSA/PublicKey.php",
          "status": "added",
          "additions": 86,
          "deletions": 0,
          "patch": "@@ -0,0 +1,86 @@\n+<?php\n+\n+/**\n+ * DSA Public Key\n+ *\n+ * @author    Jim Wigginton <terrafrost@php.net>\n+ * @copyright 2015 Jim Wigginton\n+ * @license   http://www.opensource.org/licenses/mit-license.html  MIT License\n+ * @link      http://phpseclib.sourceforge.net\n+ */\n+\n+namespace phpseclib3\\Crypt\\DSA;\n+\n+use phpseclib3\\Crypt\\Common;\n+use phpseclib3\\Crypt\\DSA;\n+use phpseclib3\\Crypt\\DSA\\Formats\\Signature\\ASN1 as ASN1Signature;\n+\n+/**\n+ * DSA Public Key\n+ *\n+ * @author  Jim Wigginton <terrafrost@php.net>\n+ */\n+final class PublicKey extends DSA implements Common\\PublicKey\n+{\n+    use Common\\Traits\\Fingerprint;\n+\n+    /**\n+     * Verify a signature\n+     *\n+     * @see self::verify()\n+     * @param string $message\n+     * @param string $signature\n+     * @return mixed\n+     */\n+    public function verify($message, $signature)\n+    {\n+        $format = $this->sigFormat;\n+\n+        $params = $format::load($signature);\n+        if ($params === false || count($params) != 2) {\n+            return false;\n+        }\n+        extract($params);\n+\n+        if (self::$engines['OpenSSL'] && in_array($this->hash->getHash(), openssl_get_md_methods())) {\n+            $sig = $format != 'ASN1' ? ASN1Signature::save($r, $s) : $signature;\n+\n+            $result = openssl_verify($message, $sig, $this->toString('PKCS8'), $this->hash->getHash());\n+\n+            if ($result != -1) {\n+                return (bool) $result;\n+            }\n+        }\n+\n+        $q_1 = $this->q->subtract(self::$one);\n+        if (!$r->between(self::$one, $q_1) || !$s->between(self::$one, $q_1)) {\n+            return false;\n+        }\n+\n+        $w = $s->modInverse($this->q);\n+        $h = $this->hash->hash($message);\n+        $h = $this->bits2int($h);\n+        list(, $u1) = $h->multiply($w)->divide($this->q);\n+        list(, $u2) = $r->multiply($w)->divide($this->q);\n+        $v1 = $this->g->powMod($u1, $this->p);\n+        $v2 = $this->y->powMod($u2, $this->p);\n+        list(, $v) = $v1->multiply($v2)->divide($this->p);\n+        list(, $v) = $v->divide($this->q);\n+\n+        return $v->equals($r);\n+    }\n+\n+    /**\n+     * Returns the public key\n+     *\n+     * @param string $type\n+     * @param array $options optional\n+     * @return string\n+     */\n+    public function toString($type, array $options = [])\n+    {\n+        $type = self::validatePlugin('Keys', $type, 'savePublicKey');\n+\n+        return $type::savePublicKey($this->p, $this->q, $this->g, $this->y, $options);\n+    }\n+}"
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC.php",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/Base.php",
          "status": "added",
          "additions": 218,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/Binary.php",
          "status": "added",
          "additions": 373,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/KoblitzPrime.php",
          "status": "added",
          "additions": 335,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/Montgomery.php",
          "status": "added",
          "additions": 279,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/Prime.php",
          "status": "added",
          "additions": 785,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/BaseCurves/TwistedEdwards.php",
          "status": "added",
          "additions": 215,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/Curve25519.php",
          "status": "added",
          "additions": 81,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/Curve448.php",
          "status": "added",
          "additions": 92,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/Ed25519.php",
          "status": "added",
          "additions": 333,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/Ed448.php",
          "status": "added",
          "additions": 273,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP160r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP160t1.php",
          "status": "added",
          "additions": 47,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP192r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP192t1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP224r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP224t1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP256r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP256t1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP320r1.php",
          "status": "added",
          "additions": 40,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP320t1.php",
          "status": "added",
          "additions": 40,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP384r1.php",
          "status": "added",
          "additions": 58,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP384t1.php",
          "status": "added",
          "additions": 58,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP512r1.php",
          "status": "added",
          "additions": 58,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/brainpoolP512t1.php",
          "status": "added",
          "additions": 58,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistb233.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistb409.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistk163.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistk233.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistk283.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistk409.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistp192.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistp224.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistp256.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistp384.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistp521.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/nistt571.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime192v1.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime192v2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime192v3.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime239v1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime239v2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime239v3.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/prime256v1.php",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp112r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp112r2.php",
          "status": "added",
          "additions": 35,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp128r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp128r2.php",
          "status": "added",
          "additions": 35,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp160k1.php",
          "status": "added",
          "additions": 46,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp160r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp160r2.php",
          "status": "added",
          "additions": 35,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp192k1.php",
          "status": "added",
          "additions": 45,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp192r1.php",
          "status": "added",
          "additions": 78,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp224k1.php",
          "status": "added",
          "additions": 45,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp224r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp256k1.php",
          "status": "added",
          "additions": 49,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp256r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp384r1.php",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/secp521r1.php",
          "status": "added",
          "additions": 46,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect113r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect113r2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect131r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect131r2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect163k1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect163r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect163r2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect193r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect193r2.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect233k1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect233r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect239k1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect283k1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect283r1.php",
          "status": "added",
          "additions": 34,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect409k1.php",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect409r1.php",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect571k1.php",
          "status": "added",
          "additions": 42,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Curves/sect571r1.php",
          "status": "added",
          "additions": 42,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/Common.php",
          "status": "added",
          "additions": 549,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/JWK.php",
          "status": "added",
          "additions": 189,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/MontgomeryPrivate.php",
          "status": "added",
          "additions": 101,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/MontgomeryPublic.php",
          "status": "added",
          "additions": 71,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/OpenSSH.php",
          "status": "added",
          "additions": 209,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/PKCS1.php",
          "status": "added",
          "additions": 194,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/PKCS8.php",
          "status": "added",
          "additions": 234,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/PuTTY.php",
          "status": "added",
          "additions": 138,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/XML.php",
          "status": "added",
          "additions": 485,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Keys/libsodium.php",
          "status": "added",
          "additions": 116,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Signature/ASN1.php",
          "status": "added",
          "additions": 62,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Signature/IEEE.php",
          "status": "added",
          "additions": 66,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Signature/Raw.php",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Formats/Signature/SSH2.php",
          "status": "added",
          "additions": 94,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/Parameters.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/PrivateKey.php",
          "status": "added",
          "additions": 256,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/EC/PublicKey.php",
          "status": "added",
          "additions": 172,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Hash.php",
          "status": "added",
          "additions": 1455,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/PublicKeyLoader.php",
          "status": "added",
          "additions": 111,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RC2.php",
          "status": "added",
          "additions": 640,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RC4.php",
          "status": "added",
          "additions": 280,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA.php",
          "status": "added",
          "additions": 934,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/JWK.php",
          "status": "added",
          "additions": 142,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/MSBLOB.php",
          "status": "added",
          "additions": 228,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/OpenSSH.php",
          "status": "added",
          "additions": 132,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/PKCS1.php",
          "status": "added",
          "additions": 160,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/PKCS8.php",
          "status": "added",
          "additions": 122,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/PSS.php",
          "status": "added",
          "additions": 238,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/PuTTY.php",
          "status": "added",
          "additions": 121,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/Raw.php",
          "status": "added",
          "additions": 184,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/Formats/Keys/XML.php",
          "status": "added",
          "additions": 171,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/PrivateKey.php",
          "status": "added",
          "additions": 530,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/RSA/PublicKey.php",
          "status": "added",
          "additions": 513,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Random.php",
          "status": "added",
          "additions": 222,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Rijndael.php",
          "status": "added",
          "additions": 1036,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Salsa20.php",
          "status": "added",
          "additions": 526,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/TripleDES.php",
          "status": "added",
          "additions": 436,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Crypt/Twofish.php",
          "status": "added",
          "additions": 816,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/BadConfigurationException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/BadDecryptionException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/BadModeException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/ConnectionClosedException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/FileNotFoundException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/InconsistentSetupException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/InsufficientSetupException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/NoKeyLoadedException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/NoSupportedAlgorithmsException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/UnableToConnectException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/UnsupportedAlgorithmException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/UnsupportedCurveException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/UnsupportedFormatException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/Exception/UnsupportedOperationException.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ANSI.php",
          "status": "added",
          "additions": 551,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1.php",
          "status": "added",
          "additions": 1513,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Element.php",
          "status": "added",
          "additions": 43,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AccessDescription.php",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AdministrationDomainName.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AlgorithmIdentifier.php",
          "status": "added",
          "additions": 35,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AnotherName.php",
          "status": "added",
          "additions": 37,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/Attribute.php",
          "status": "added",
          "additions": 37,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AttributeType.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AttributeTypeAndValue.php",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AttributeValue.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/Attributes.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AuthorityInfoAccessSyntax.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/AuthorityKeyIdentifier.php",
          "status": "added",
          "additions": 45,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/BaseDistance.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/BasicConstraints.php",
          "status": "added",
          "additions": 39,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/BuiltInDomainDefinedAttribute.php",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/BuiltInDomainDefinedAttributes.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/BuiltInStandardAttributes.php",
          "status": "added",
          "additions": 67,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CPSuri.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CRLDistributionPoints.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CRLNumber.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CRLReason.php",
          "status": "added",
          "additions": 41,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertPolicyId.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/Certificate.php",
          "status": "added",
          "additions": 33,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificateIssuer.php",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificateList.php",
          "status": "added",
          "additions": 33,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificatePolicies.php",
          "status": "added",
          "additions": 31,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificateSerialNumber.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificationRequest.php",
          "status": "added",
          "additions": 33,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CertificationRequestInfo.php",
          "status": "added",
          "additions": 41,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/Characteristic_two.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/CountryName.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/Curve.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/DHParameter.php",
          "status": "added",
          "additions": 38,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/DSAParams.php",
          "status": "added",
          "additions": 33,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/DSAPrivateKey.php",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "private/vendor/phpseclib/phpseclib/phpseclib/File/ASN1/Maps/DSAPublicKey.php",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 57,
        "config_files": 15,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 47,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c1e40011172d8380e25a0184aa5429726067e683",
            "date": "2025-01-06T10:51:42Z",
            "author_login": "Ariansdf"
          },
          {
            "sha": "2afb74716f951fe7921ed1a19b2338bf03c80799",
            "date": "2024-12-06T12:49:09Z",
            "author_login": "Ariansdf"
          },
          {
            "sha": "6dac89891bb3174401328331803436c646ecaed5",
            "date": "2024-11-22T18:56:02Z",
            "author_login": "ItsNotYou"
          },
          {
            "sha": "ef15ac9aded780503a7a4db9a156ba9e1f8b94e5",
            "date": "2024-10-17T12:21:10Z",
            "author_login": "Ariansdf"
          },
          {
            "sha": "48a2b0970ee6b5006525638996542d50f2c97b89",
            "date": "2024-10-11T11:53:19Z",
            "author_login": "Ariansdf"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "When LDAP authentication is activated in the configuration it is possible to obtain reflected XSS execution by creating a custom URL that the victim only needs to open in order to execute arbitrary JavaScript code in the victim's browser. This is due to a fault in the file login.php where the content of \"$_SERVER['PHP_SELF']\" is reflected into the HTML of the website. Hence the attacker does not need a valid account in order to exploit this issue.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-05-29T13:15:49.563",
    "last_modified": "2024-11-21T09:01:41.313",
    "fix_date": "2024-04-18T08:41:24Z"
  },
  "references": [
    {
      "url": "http://seclists.org/fulldisclosure/2024/May/34",
      "source": "551230f0-3615-47bd-b7cc-93e92e730bbf",
      "tags": []
    },
    {
      "url": "https://github.com/HAWK-Digital-Environments/HAWKI/commit/146967f3148e92d1640ffebc21d8914e2d7fb3f1",
      "source": "551230f0-3615-47bd-b7cc-93e92e730bbf",
      "tags": []
    },
    {
      "url": "https://r.sec-consult.com/hawki",
      "source": "551230f0-3615-47bd-b7cc-93e92e730bbf",
      "tags": []
    },
    {
      "url": "http://seclists.org/fulldisclosure/2024/May/34",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/HAWK-Digital-Environments/HAWKI/commit/146967f3148e92d1640ffebc21d8914e2d7fb3f1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://r.sec-consult.com/hawki",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.323328",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "HAWKI",
    "owner": "HAWK-Digital-Environments",
    "created_at": "2023-06-28T10:33:11Z",
    "updated_at": "2025-01-14T15:20:44Z",
    "pushed_at": "2025-01-06T10:52:08Z",
    "size": 19864,
    "stars": 78,
    "forks": 53,
    "open_issues": 17,
    "watchers": 78,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 1472658,
      "PHP": 131686,
      "CSS": 73353,
      "Shell": 482
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:36:03.403240"
  }
}