{
  "cve_id": "CVE-2024-26151",
  "github_data": {
    "repository": "FelixSchwarz/mjml-python",
    "fix_commit": "84c495da20a91640a1ca551ace17df7f3be644aa",
    "related_commits": [
      "84c495da20a91640a1ca551ace17df7f3be644aa",
      "8d410b7a500703080bb14ed7e3d2663fe16767e6",
      "84c495da20a91640a1ca551ace17df7f3be644aa",
      "8d410b7a500703080bb14ed7e3d2663fe16767e6"
    ],
    "patch_url": "https://github.com/FelixSchwarz/mjml-python/commit/84c495da20a91640a1ca551ace17df7f3be644aa.patch",
    "fix_commit_details": {
      "sha": "84c495da20a91640a1ca551ace17df7f3be644aa",
      "commit_date": "2023-09-28T20:08:09Z",
      "author": {
        "login": "caseyjhol",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix CSS child selectors; don't load remote stylesheets",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 18,
        "additions": 14,
        "deletions": 4
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -2,6 +2,8 @@\n 0.10.0 (?)\n ------------------\n \n+- fix CSS child selectors\n+- disable loading remote stylesheets\n - require css-inline 0.11.x for performance improvements\n - drop css-inline Python 3.6 support\n - fix exception when processing an `mj-section` with `background-size` (reported by Thomas Handorf)"
        },
        {
          "filename": "mjml/mjml2html.py",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -115,7 +115,7 @@ def parse(_mjml, parentMjClass='', *, template_dir):\n             classes = ignore_empty(attributes.get('mj-class', '').split(' '))\n \n             # upstream parses text contents (+ comments) in mjml-parser-xml/index.js\n-            content = _mjml.decode_contents()\n+            content = _mjml.decode_contents(formatter=None)\n \n             attributesClasses = {}\n             for css_class in classes:\n@@ -212,7 +212,7 @@ def _head_data_add(attr, *params):\n                 for element in contentSoup.select(selector):\n                     element[attrName] = value or ''\n \n-        content = contentSoup.decode_contents()\n+        content = contentSoup.decode_contents(formatter=None)\n \n     content = skeleton(\n         content=content,\n@@ -235,6 +235,7 @@ def _head_data_add(attr, *params):\n             inline_style_tags=False,\n             keep_link_tags=True,\n             keep_style_tags=True,\n+            load_remote_stylesheets=False,\n         )\n         content = inliner.inline(content)\n "
        },
        {
          "filename": "tests/testdata/css-inlining-expected.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -124,7 +124,7 @@\n                     </tr>\n                     <tr>\n                       <td align=\"left\" class=\"box\" style=\"border: 5px solid red; font-size: 0px; padding: 10px 25px; word-break: break-word;\">\n-                        <div style=\"font-family:helvetica;font-size:20px;line-height:1;text-align:left;color:#F45E43;\">Hello World</div>\n+                        <div style=\"font-family:helvetica;font-size:20px;line-height:1;text-align:left;color:#F45E43;\"><span style=\"border: 3px solid blue;\"> &lt; Hello World &gt; </span></div>\n                       </td>\n                     </tr>\n                   </tbody>"
        },
        {
          "filename": "tests/testdata/css-inlining.mjml",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -4,6 +4,9 @@\n       .box {\n         border: 5px solid red;\n       }\n+      .box > div > span {\n+        border: 3px solid blue;\n+      }\n     </mj-style>\n   </mj-head>\n   <mj-body>\n@@ -14,7 +17,11 @@\n \n         <mj-divider border-color=\"#F45E43\"></mj-divider>\n \n-        <mj-text css-class=\"box\" font-size=\"20px\" color=\"#F45E43\" font-family=\"helvetica\">Hello World</mj-text>\n+        <mj-text css-class=\"box\" font-size=\"20px\" color=\"#F45E43\" font-family=\"helvetica\">\n+          <span>\n+            &lt; Hello World &gt;\n+          </span>\n+        </mj-text>\n \n       </mj-column>\n     </mj-section>"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "49fa14e79bc0e40678b46df8ba03338b1f92ace5",
            "date": "2025-01-08T11:47:00Z",
            "author_login": "bvallant"
          },
          {
            "sha": "350d0724114f9b159c30f556c419b73595d83168",
            "date": "2025-01-08T11:37:05Z",
            "author_login": "bvallant"
          },
          {
            "sha": "905013bf8618f11725dae3515d80f4085699efa9",
            "date": "2024-08-14T07:39:07Z",
            "author_login": "FelixSchwarz"
          },
          {
            "sha": "997dbf9908eafba2321e4aa439f79d0157864c83",
            "date": "2024-08-14T07:37:51Z",
            "author_login": "FelixSchwarz"
          },
          {
            "sha": "8b971a987753f25aa8f4b624156645fd8f7ecc25",
            "date": "2024-08-14T07:30:31Z",
            "author_login": "FelixSchwarz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:H/A:L",
    "cwe_id": "CWE-20",
    "description": "The `mjml` PyPI package, found at the `FelixSchwarz/mjml-python` GitHub repo, is an unofficial Python port of MJML, a markup language created by Mailjet. All users of `FelixSchwarz/mjml-python` who insert untrusted data into mjml templates unless that data is checked in a very strict manner. User input like `&lt;script&gt;` would be rendered as `<script>` in the final HTML output. The attacker must be able to control some data which is later injected in an mjml template which is then send out as email to other users. The attacker could control contents of email messages sent through the platform. The problem has been fixed in version 0.11.0 of this library. Versions before 0.10.0 are not affected by this security issue. As a workaround, ensure that potentially untrusted user input does not contain any sequences which could be rendered as HTML.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-22T19:15:09.300",
    "last_modified": "2024-11-21T09:02:02.330",
    "fix_date": "2023-09-28T20:08:09Z"
  },
  "references": [
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/commit/84c495da20a91640a1ca551ace17df7f3be644aa",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/commit/8d410b7a500703080bb14ed7e3d2663fe16767e6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/issues/52",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/releases/tag/v0.11.0",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/security/advisories/GHSA-578p-fxmm-6229",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/commit/84c495da20a91640a1ca551ace17df7f3be644aa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/commit/8d410b7a500703080bb14ed7e3d2663fe16767e6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/issues/52",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/releases/tag/v0.11.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/FelixSchwarz/mjml-python/security/advisories/GHSA-578p-fxmm-6229",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.vicarius.io/vsociety/posts/cve-2024-26151-mjml-python-vulnerability-1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.151437",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mjml-python",
    "owner": "FelixSchwarz",
    "created_at": "2020-06-09T12:24:34Z",
    "updated_at": "2025-01-09T07:27:16Z",
    "pushed_at": "2025-01-09T07:27:12Z",
    "size": 249,
    "stars": 78,
    "forks": 17,
    "open_issues": 5,
    "watchers": 78,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 185706
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:09:12.048666"
  }
}