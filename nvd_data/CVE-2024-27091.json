{
  "cve_id": "CVE-2024-27091",
  "github_data": {
    "repository": "GeoNode/geonode",
    "fix_commit": "e53bdeff331f4b577918927d60477d4b50cca02f",
    "related_commits": [
      "e53bdeff331f4b577918927d60477d4b50cca02f",
      "e53bdeff331f4b577918927d60477d4b50cca02f"
    ],
    "patch_url": "https://github.com/GeoNode/geonode/commit/e53bdeff331f4b577918927d60477d4b50cca02f.patch",
    "fix_commit_details": {
      "sha": "e53bdeff331f4b577918927d60477d4b50cca02f",
      "commit_date": "2024-02-13T17:27:06Z",
      "author": {
        "login": "t-book",
        "type": "User",
        "stats": {
          "total_commits": 255,
          "average_weekly_commits": 0.3328981723237598,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 84
        }
      },
      "commit_message": {
        "title": "[Fixes #11862] Sanitize HTML data (#11958)",
        "length": 42,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 60,
        "additions": 54,
        "deletions": 6
      },
      "files": [
        {
          "filename": "geonode/base/templatetags/sanitize_html.py",
          "status": "added",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -0,0 +1,36 @@\n+from django import template\n+from django.conf import settings\n+import nh3\n+from django.utils.encoding import force_str\n+\n+register = template.Library()\n+\n+\n+@register.filter(name=\"sanitize_html\")\n+def sanitize_html(value):\n+    \"\"\"\n+    This filter can be used in Django templates to ensure that HTML content is safe to render. It leverages the\n+    nh3 library (https://github.com/messense/nh3) to remove dangerous tags and JavaScript patterns.\n+\n+    The allowed HTML tags and attributes can be\n+    configured via the 'NH3_DEFAULT_CONFIG' setting in Django's settings.py. If this configuration is not set, a default\n+    set of safe tags will be used.\n+\n+    Usage in templates: {{ some_variable|sanitize_html|safe }}\n+\n+    :param value: The HTML content to be sanitized within the template.\n+    :return: Sanitized HTML content safe for rendering in templates.\n+    \"\"\"\n+\n+    # Tests: Ensure the value is converted to a string if it's a lazy object\n+    value = force_str(value)\n+\n+    nh3_config = getattr(\n+        settings,\n+        \"NH3_DEFAULT_CONFIG\",\n+        {\n+            \"tags\": {\"b\", \"a\", \"img\", \"p\", \"ul\", \"li\", \"strong\", \"em\", \"span\"},\n+        },\n+    )\n+\n+    return nh3.clean(value, **nh3_config)"
        },
        {
          "filename": "geonode/base/tests.py",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -51,6 +51,7 @@\n from geonode.documents.models import Document\n from geonode.tests.base import GeoNodeBaseTestSupport\n from geonode.base.templatetags.base_tags import display_change_perms_button\n+from geonode.base.templatetags.sanitize_html import sanitize_html\n from geonode.base.utils import OwnerRightsRequestViewUtils\n from geonode.base.models import (\n     HierarchicalKeyword,\n@@ -729,6 +730,14 @@ def test_display_change_perms_button_tag_standard(self):\n         self.assertTrue(user_perms)\n \n \n+class SanitizedHtmlTest(TestCase):\n+    def test_sanitized_html(self):\n+        test_html = \"<script>alert('XSS');</script><b>Allowed Text</b>\"\n+        expected_output = \"<b>Allowed Text</b>\"\n+        sanitized_output = sanitize_html(test_html)\n+        self.assertEqual(sanitized_output, expected_output)\n+\n+\n class TestGetVisibleResource(TestCase):\n     def setUp(self):\n         self.user = get_user_model().objects.create(username=\"mikel_arteta\")"
        },
        {
          "filename": "geonode/templates/metadata_detail.html",
          "status": "modified",
          "additions": 7,
          "deletions": 6,
          "patch": "@@ -3,6 +3,7 @@\n {% load bootstrap_tags %}\r\n {% load thesaurus %}\r\n {% load client_lib_tags %}\r\n+{% load sanitize_html %}\r\n \r\n {% block title %}{{ resource.title }} \u2014 {{ block.super }}{% endblock %}\r\n \r\n@@ -45,7 +46,7 @@ <h2 class=\"page-title\">{% trans \"Metadata\" %} : {{ resource.title }}</h2>\n         {% block abstract %}\r\n         {% if resource.abstract %}\r\n         <dt>{% trans \"Abstract\" %}</dt>\r\n-        <dd>{{ resource.abstract|safe }}</dd>\r\n+        <dd>{{ resource.abstract|sanitize_html|safe }}</dd>\r\n         {% endif %}\r\n         {% endblock abstract %}\r\n \r\n@@ -91,7 +92,7 @@ <h2 class=\"page-title\">{% trans \"Metadata\" %} : {{ resource.title }}</h2>\n                     {% for keyword in resource.keywords.all %}\r\n                     <li>\r\n                         <span itemscope itemtype=\"http://schema.org/Text\">\r\n-                        {{ keyword.name| safe }}\r\n+                        {{ keyword.name|sanitize_html|safe }}\r\n                         </span>\r\n                     </li>\r\n                     {% endfor %}\r\n@@ -299,7 +300,7 @@ <h2 class=\"page-title\">{% trans \"Metadata\" %} : {{ resource.title }}</h2>\n         {% if resource.restriction_code_type or resource.constraints_other %}\r\n         <dt>{% trans \"Restrictions\" %}</dt>\r\n         <dd>{% if resource.constraints_other %}\r\n-            {{ resource.constraints_other|safe }}\r\n+            {{ resource.constraints_other|sanitize_html|safe }}\r\n             {% else %}\r\n             {{ resource.restriction_code_type }}\r\n             {% endif %}</dd>\r\n@@ -316,7 +317,7 @@ <h2 class=\"page-title\">{% trans \"Metadata\" %} : {{ resource.title }}</h2>\n         {% block purpose %}\r\n         {% if resource.purpose %}\r\n         <dt>{% trans \"Purpose\" %}</dt>\r\n-        <dd>{{ resource.purpose|safe }}</dd>\r\n+        <dd>{{ resource.purpose|sanitize_html|safe }}</dd>\r\n         {% endif %}\r\n         {% endblock purpose %}\r\n \r\n@@ -337,14 +338,14 @@ <h2 class=\"page-title\">{% trans \"Metadata\" %} : {{ resource.title }}</h2>\n         {% block data_quality_statement %}\r\n         {% if resource.data_quality_statement %}\r\n         <dt>{% trans \"Data Quality\" %}</dt>\r\n-        <dd>{{ resource.data_quality_statement|safe }}</dd>\r\n+        <dd>{{ resource.data_quality_statement|sanitize_html|safe }}</dd>\r\n         {% endif %}\r\n         {% endblock data_quality_statement %}\r\n \r\n         {% block supplemental_information %}\r\n         {% if resource.supplemental_information %}\r\n         <dt>{% trans \"Supplemental Information\" %}</dt>\r\n-        <dd>{{ resource.supplemental_information|safe }}</dd>\r\n+        <dd>{{ resource.supplemental_information|sanitize_html|safe }}</dd>\r\n         {% endif %}\r\n         {% endblock supplemental_information %}\r\n \r"
        },
        {
          "filename": "requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -176,3 +176,4 @@ paramiko==3.3.1 # not directly required, fixes Blowfish deprecation warning\n certifi>=2022.12.7 # not directly required, pinned by Snyk to avoid a vulnerability\n jwcrypto>=1.4 # not directly required, pinned by Snyk to avoid a vulnerability\n cryptography>=41.0.0 # not directly required, pinned by Snyk to avoid a vulnerability\n+nh3==0.2.15"
        },
        {
          "filename": "setup.cfg",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -202,6 +202,7 @@ install_requires =\n     certifi>=2022.12.7 # not directly required, pinned by Snyk to avoid a vulnerability\n     jwcrypto>=1.4 # not directly required, pinned by Snyk to avoid a vulnerability\n     cryptography>=41.0.0 # not directly required, pinned by Snyk to avoid a vulnerability\n+    nh3==0.2.15\n \n [options.packages.find]\n exclude = tests"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "91f32c64e8d8e6f159368243d8dfac96fe5a8aca",
            "date": "2024-12-06T10:50:40Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "eb352184f5948103f680a0f33600cdf1a7fbad5c",
            "date": "2024-12-02T13:20:03Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "051efddcc61037600c6cc722819572f22a5b1c80",
            "date": "2024-11-29T13:39:23Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "993364a44c8afa1085dccd2366794789b36a2b39",
            "date": "2024-11-26T14:56:26Z",
            "author_login": "mattiagiupponi"
          },
          {
            "sha": "0b792cf7d575684050469c382c57636bb7d41b22",
            "date": "2024-11-22T17:05:49Z",
            "author_login": "mattiagiupponi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "GeoNode is a geospatial content management system, a platform for the management and publication of geospatial data. An issue exists within GEONODE where the current rich text editor is vulnerable to Stored XSS. The applications cookies are set securely, but it is possible to retrieve a victims CSRF token and issue a request to change another user's email address to perform a full account takeover. Due to the script element not impacting the CORS policy, requests will succeed. This vulnerability is fixed in 4.2.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-27T13:15:47.023",
    "last_modified": "2024-11-21T09:03:50.373",
    "fix_date": "2024-02-13T17:27:06Z"
  },
  "references": [
    {
      "url": "https://github.com/GeoNode/geonode/commit/e53bdeff331f4b577918927d60477d4b50cca02f",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-rwcv-whm8-fmxm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/GeoNode/geonode/commit/e53bdeff331f4b577918927d60477d4b50cca02f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/GeoNode/geonode/security/advisories/GHSA-rwcv-whm8-fmxm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.912838",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "geonode",
    "owner": "GeoNode",
    "created_at": "2010-06-03T18:14:47Z",
    "updated_at": "2025-01-13T06:44:38Z",
    "pushed_at": "2025-01-14T15:06:36Z",
    "size": 462743,
    "stars": 1483,
    "forks": 1129,
    "open_issues": 356,
    "watchers": 1483,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.6.x",
      "2.8.x",
      "2.10.x",
      "3.2.x",
      "3.3.x",
      "4.0.x",
      "4.1.x",
      "4.2.x",
      "4.3.x"
    ],
    "languages": {
      "JavaScript": 8573163,
      "Python": 5466464,
      "HTML": 569637,
      "CSS": 547762,
      "XSLT": 67411,
      "Less": 62479,
      "Shell": 54446,
      "Makefile": 4529,
      "SCSS": 3477,
      "Scheme": 3155,
      "Dockerfile": 2891,
      "Gherkin": 529
    },
    "commit_activity": {
      "total_commits_last_year": 436,
      "avg_commits_per_week": 8.384615384615385,
      "days_active_last_year": 108
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:42:19.248585"
  }
}