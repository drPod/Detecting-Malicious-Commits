{
  "cve_id": "CVE-2024-27290",
  "github_data": {
    "repository": "jhpyle/docassemble",
    "fix_commit": "4801ac7ff7c90df00ac09523077930cdb6dea2aa",
    "related_commits": [
      "4801ac7ff7c90df00ac09523077930cdb6dea2aa",
      "4801ac7ff7c90df00ac09523077930cdb6dea2aa"
    ],
    "patch_url": "https://github.com/jhpyle/docassemble/commit/4801ac7ff7c90df00ac09523077930cdb6dea2aa.patch",
    "fix_commit_details": {
      "sha": "4801ac7ff7c90df00ac09523077930cdb6dea2aa",
      "commit_date": "2024-02-29T17:43:07Z",
      "author": {
        "login": "jhpyle",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fixed security issues; added pdftk option; added development site is protected Configuration directive; altered error message display so that end users will not see certain types of error messages, but they will be displayed in the log",
        "length": 235,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 986,
        "additions": 548,
        "deletions": 438
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -1,5 +1,32 @@\n # Change Log\n \n+## [1.4.97] - 2024-02-29\n+\n+### Added\n+- The `pdftk` option under `attachment` and `features` for filling in\n+  `pdf template file` attachments using pdftk instead of pikepdf.\n+### Changed\n+- During the Docker image build process, `pandoc` will run once, so\n+  that the first user to assemble a document with `pandoc` will not\n+  experience slowness due to LaTeX needing to generate files.\n+- Appearance streams will be generated when using `pdf template file`.\n+- Error messages related to problems in the source code will no longer\n+  be displayed to the user unless the user is an administrator or\n+  developer. If you want these error messages to appear to all users,\n+  set `debug: True` and `development site is protected: True` in the\n+  Configuration. The error messages will be available in\n+  `docassemble.log`.\n+### Fixed\n+- Fixed security issue identified by Riyush Ghimire, affecting\n+  versions 1.4.53 to 1.4.96, that could cause contents of files in the\n+  filesystem to be revealed. This is a high severity issue and\n+  upgrading as soon as possible is recommended.\n+- Fixed security issue identified by Riyush Ghimire, affecting\n+  versions up to 1.4.96, that allowed an open redirect URL to be formed.\n+- Fixed security issue identified by Riyush Ghimire, affecting\n+  versions up to 1.4.96, that would allow HTML or JavaScript\n+  injection.\n+\n ## [1.4.96] - 2024-02-14\n \n ### Fixed"
        },
        {
          "filename": "Dockerfile",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -122,7 +122,13 @@ RUN bash -c \\\n && python /tmp/docassemble/Docker/nltkdownload.py \\\n && cd /var/www/nltk_data/corpora \\\n && unzip -o wordnet.zip \\\n-&& unzip -o omw-1.4.zip\"\n+&& unzip -o omw-1.4.zip \\\n+&& cd /tmp \\\n+&& mkdir -p /tmp/conv \\\n+&& pandoc --pdf-engine=lualatex -M latextmpdir=./conv -M pdfa=false /usr/share/docassemble/local3.10/lib/python3.10/site-packages/docassemble/base/data/templates/Legal-Template.yml --template=/usr/share/docassemble/local3.10/lib/python3.10/site-packages/docassemble/base/data/templates/Legal-Template.tex --from=markdown+raw_tex-latex_macros -s -o /tmp/temp.pdf /usr/share/docassemble/local3.10/lib/python3.10/site-packages/docassemble/base/data/templates/hello.md \\\n+&& rm /tmp/temp.pdf \\\n+&& pandoc --pdf-engine=lualatex -M latextmpdir=./conv -M pdfa=false --template=/usr/share/docassemble/local3.10/lib/python3.10/site-packages/docassemble/base/data/templates/Legal-Template.rtf -s -o /tmp/temp.rtf /usr/share/docassemble/local3.10/lib/python3.10/site-packages/docassemble/base/data/templates/hello.md \\\n+&& rm /tmp/temp.rtf\"\n \n USER root\n RUN rm -rf /tmp/docassemble"
        },
        {
          "filename": "docassemble_base/docassemble/base/data/sources/base-words.yml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -311,6 +311,7 @@\n \"Falkland Islands (Malvinas)\": Null\n \"false\": Null\n \"Faroe Islands\": Null\n+\"Field cannot contain HTML\": Null\n \"Fiji\": Null\n \"File could not be converted: \": Null\n \"File deleted.\": Null\n@@ -1031,6 +1032,7 @@\n \"There is already a username and password on this system with the e-mail address\": Null\n \"The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\": Null\n \"There was an error.\": Null\n+\"There was an error. Please contact the system administrator.\": Null\n \"There was an error updating the packages.\": Null\n \"There was an error with the synchronization.\": Null\n \"There was a problem connecting to GitHub. Please check your GitHub configuration and try again.\": Null"
        },
        {
          "filename": "docassemble_base/docassemble/base/error.py",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -27,6 +27,9 @@ def __str__(self):\n         return str(self.value)\n \n \n+class DASourceError(DAError):\n+    pass\n+\n class DANotFoundError(Exception):\n     pass\n "
        },
        {
          "filename": "docassemble_base/docassemble/base/pandoc.py",
          "status": "modified",
          "additions": 21,
          "deletions": 3,
          "patch": "@@ -10,16 +10,16 @@\n import random\n import mimetypes\n import urllib.request\n+import convertapi\n+import requests\n+from pikepdf import Pdf\n import docassemble.base.filter\n import docassemble.base.functions\n from docassemble.base.config import daconfig\n from docassemble.base.logger import logmessage\n from docassemble.base.pdfa import pdf_to_pdfa\n from docassemble.base.pdftk import pdf_encrypt\n from docassemble.base.error import DAError, DAException\n-import convertapi\n-import requests\n-from pikepdf import Pdf\n \n style_find = re.compile(r'{\\s*(\\\\s([1-9])[^\\}]+)\\\\sbasedon[^\\}]+heading ([0-9])', flags=re.DOTALL)\n PANDOC_PATH = daconfig.get('pandoc', 'pandoc')\n@@ -802,13 +802,31 @@ def concatenate_files(path_list, pdfa=False, password=None, owner_password=None)\n             new_path_list.append(path)\n     if len(new_path_list) == 0:\n         raise DAError(\"concatenate_files: no valid files to concatenate\")\n+\n     if len(new_path_list) == 1:\n         shutil.copyfile(new_path_list[0], pdf_file.name)\n     else:\n         with Pdf.open(new_path_list[0]) as original:\n+            need_appearances = False\n+            try:\n+                if original.Root.AcroForm.NeedAppearances:\n+                    need_appearances = True\n+            except:\n+                pass\n             for additional_file in new_path_list[1:]:\n                 with Pdf.open(additional_file) as additional_pdf:\n+                    if need_appearances is False:\n+                        try:\n+                            if additional_pdf.Root.AcroForm.NeedAppearances:\n+                                need_appearances = True\n+                        except:\n+                            pass\n                     original.pages.extend(additional_pdf.pages)\n+            if need_appearances:\n+                try:\n+                    original.Root.AcroForm.NeedAppearances = True\n+                except:\n+                    logmessage(\"concatenate_files: an additional file had an AcroForm with NeedAppearances but setting NeedAppearances on the final document resulted in an error\")\n             original.save(pdf_file.name)\n     if pdfa:\n         pdf_to_pdfa(pdf_file.name)"
        },
        {
          "filename": "docassemble_base/docassemble/base/parse.py",
          "status": "modified",
          "additions": 382,
          "deletions": 362,
          "patch": null
        },
        {
          "filename": "docassemble_base/docassemble/base/pdftk.py",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -160,7 +160,7 @@ def recursively_add_fields(fields, id_to_page, outfields, prefix='', parent_ft=N\n                 outfields.append((prefix, default, pageno, rect, field_type, export_value))\n \n \n-def fill_template(template, data_strings=None, data_names=None, hidden=None, readonly=None, images=None, pdf_url=None, editable=True, pdfa=False, password=None, owner_password=None, template_password=None, default_export_value=None, replacement_font=None):\n+def fill_template(template, data_strings=None, data_names=None, hidden=None, readonly=None, images=None, pdf_url=None, editable=True, pdfa=False, password=None, owner_password=None, template_password=None, default_export_value=None, replacement_font=None, use_pdftk=False):\n     if data_strings is None:\n         data_strings = []\n     if data_names is None:\n@@ -219,7 +219,7 @@ def fill_template(template, data_strings=None, data_names=None, hidden=None, rea\n     for key, val in data_strings:\n         data_dict[key] = val\n     pdf_file = tempfile.NamedTemporaryFile(prefix=\"datemp\", mode=\"wb\", suffix=\".pdf\", delete=False)\n-    if pdfa or not editable:\n+    if pdfa or not editable or use_pdftk:\n         fdf = Xfdf(pdf_url, data_dict)\n         # fdf = fdfgen.forge_fdf(pdf_url, data_strings, data_names, hidden, readonly)\n         fdf_file = tempfile.NamedTemporaryFile(prefix=\"datemp\", mode=\"wb\", suffix=\".xfdf\", delete=False)\n@@ -251,7 +251,10 @@ def fill_template(template, data_strings=None, data_names=None, hidden=None, rea\n         if len(images) > 0:\n             subprocess_arguments.append('need_appearances')\n         else:\n-            subprocess_arguments.append('flatten')\n+            if pdfa or not editable:\n+                subprocess_arguments.append('flatten')\n+            else:\n+                subprocess_arguments.append('need_appearances')\n         completed_process = None\n         try:\n             completed_process = subprocess.run(subprocess_arguments, timeout=600, check=False, capture_output=True)\n@@ -272,7 +275,6 @@ def fill_template(template, data_strings=None, data_names=None, hidden=None, rea\n             pdf = Pdf.open(template, password=template_password)\n         else:\n             pdf = Pdf.open(template)\n-        pdf.Root.AcroForm.NeedAppearances = True\n         for page in pdf.pages:\n             if not hasattr(page, 'Annots'):\n                 continue\n@@ -320,6 +322,9 @@ def fill_template(template, data_strings=None, data_names=None, hidden=None, rea\n                         the_string = pikepdf.String(value)\n                         annot.V = the_string\n                         annot.DV = the_string\n+        pdf.Root.AcroForm.NeedAppearances = True\n+        pdf.generate_appearance_streams()\n+        pdf.Root.AcroForm.NeedAppearances = True\n         if len(images) == 0:\n             pdf.save(pdf_file.name)\n             pdf.close()"
        },
        {
          "filename": "docassemble_webapp/docassemble/webapp/develop.py",
          "status": "modified",
          "additions": 23,
          "deletions": 22,
          "patch": "@@ -2,6 +2,7 @@\n from flask_wtf import FlaskForm\n from docassemble.base.functions import LazyWord as word\n from wtforms import validators, ValidationError, StringField, SubmitField, TextAreaField, SelectMultipleField, SelectField, FileField, HiddenField, RadioField, BooleanField\n+from docassemble.webapp.validators import html_validator\n import packaging\n \n \n@@ -37,21 +38,21 @@ def validate_package_name(form, field):  # pylint: disable=unused-argument\n \n class CreatePackageForm(FlaskForm):\n     name = StringField(word('Package name'), validators=[\n-        validators.DataRequired(word('Package name is required')), validate_name])\n+        validators.DataRequired(word('Package name is required')), validate_name, html_validator])\n     submit = SubmitField(word('Get template'))\n \n \n class CreatePlaygroundPackageForm(FlaskForm):\n     name = SelectField(word('Package'), validators=[\n-        validators.DataRequired(word('Package name is required')), validate_name])\n+        validators.DataRequired(word('Package name is required')), validate_name, html_validator])\n     submit = SubmitField(word('Get package'))\n \n \n class UpdatePackageForm(FlaskForm):\n-    giturl = StringField(word('GitHub URL'))\n-    gitbranch = SelectField(word('GitHub Branch'))\n+    giturl = StringField(word('GitHub URL'), validators=[html_validator])\n+    gitbranch = SelectField(word('GitHub Branch'), validators=[html_validator])\n     zipfile = FileField(word('Zip File'))\n-    pippackage = StringField(word('Package on PyPI'))\n+    pippackage = StringField(word('Package on PyPI'), validators=[html_validator])\n     submit = SubmitField(word('Update'))\n \n \n@@ -64,7 +65,7 @@ class ConfigForm(FlaskForm):\n class PlaygroundForm(FlaskForm):\n     status = StringField('Status')\n     original_playground_name = StringField(word('Original Name'))\n-    playground_name = StringField(word('Name'), [validators.Length(min=1, max=255)])\n+    playground_name = StringField(word('Name'), [validators.Length(min=1, max=255), html_validator])\n     playground_content = TextAreaField(word('Playground YAML'))\n     search_term = StringField(word('Search'))\n     submit = SubmitField(word('Save'))\n@@ -108,7 +109,7 @@ class PlaygroundFilesEditForm(FlaskForm):\n     purpose = StringField('Purpose')\n     section = StringField(word('Section'))\n     original_file_name = StringField(word('Original Name'))\n-    file_name = StringField(word('Name'), [validators.Length(min=1, max=255)])\n+    file_name = StringField(word('Name'), [validators.Length(min=1, max=255), html_validator])\n     search_term = StringField(word('Search'))\n     file_content = TextAreaField(word('File Text'))\n     active_file = StringField(word('Active File'))\n@@ -118,7 +119,7 @@ class PlaygroundFilesEditForm(FlaskForm):\n \n class RenameProject(FlaskForm):\n     name = StringField(word('New Name'), validators=[\n-        validators.DataRequired(word('Project name is required')), validate_project_name])\n+        validators.DataRequired(word('Project name is required')), validate_project_name, html_validator])\n     submit = SubmitField(word('Rename'))\n \n \n@@ -128,29 +129,29 @@ class DeleteProject(FlaskForm):\n \n class NewProject(FlaskForm):\n     name = StringField(word('Name'), validators=[\n-        validators.DataRequired(word('Project name is required')), validate_project_name])\n+        validators.DataRequired(word('Project name is required')), validate_project_name, html_validator])\n     submit = SubmitField(word('Save'))\n \n \n class PullPlaygroundPackage(FlaskForm):\n-    github_url = StringField(word('GitHub URL'))\n-    github_branch = SelectField(word('GitHub Branch'))\n-    pypi = StringField(word('PyPI package'))\n+    github_url = StringField(word('GitHub URL'), validators=[html_validator])\n+    github_branch = SelectField(word('GitHub Branch'), validators=[html_validator])\n+    pypi = StringField(word('PyPI package'), validators=[html_validator])\n     pull = SubmitField(word('Pull'))\n     cancel = SubmitField(word('Cancel'))\n \n \n class PlaygroundPackagesForm(FlaskForm):\n-    original_file_name = StringField(word('Original Name'))\n+    original_file_name = StringField(word('Original Name'), validators=[html_validator])\n     file_name = StringField(word('Package Name'), validators=[validators.Length(min=1, max=50),\n                                                               validators.DataRequired(word('Package Name is required')),\n-                                                              validate_package_name])\n-    license = StringField(word('License'), default='The MIT License (MIT)', validators=[validators.Length(min=0, max=255)])\n-    author_name = StringField(word('Author Name'), validators=[validators.Length(min=0, max=255)])\n-    author_email = StringField(word('Author E-mail'), validators=[validators.Length(min=0, max=255)])\n-    description = StringField(word('Description'), validators=[validators.Length(min=0, max=255)], default=\"A docassemble extension.\")\n-    version = StringField(word('Version'), validators=[validators.Length(min=0, max=255), validate_package_version], default=\"0.0.1\")\n-    url = StringField(word('URL'), validators=[validators.Length(min=0, max=255)], default=\"\")\n+                                                              validate_package_name, html_validator])\n+    license = StringField(word('License'), default='The MIT License (MIT)', validators=[validators.Length(min=0, max=255), html_validator])\n+    author_name = StringField(word('Author Name'), validators=[validators.Length(min=0, max=255), html_validator])\n+    author_email = StringField(word('Author E-mail'), validators=[validators.Length(min=0, max=255), html_validator])\n+    description = StringField(word('Description'), validators=[validators.Length(min=0, max=255), html_validator], default=\"A docassemble extension.\")\n+    version = StringField(word('Version'), validators=[validators.Length(min=0, max=255), validate_package_version, html_validator], default=\"0.0.1\")\n+    url = StringField(word('URL'), validators=[validators.Length(min=0, max=255), html_validator], default=\"\")\n     dependencies = SelectMultipleField(word('Dependencies'))\n     interview_files = SelectMultipleField(word('Interview files'))\n     template_files = SelectMultipleField(word('Template files'))\n@@ -159,7 +160,7 @@ class PlaygroundPackagesForm(FlaskForm):\n     sources_files = SelectMultipleField(word('Source files'))\n     readme = TextAreaField(word('README file'), default='')\n     github_branch = NonValidatingSelectField(word('Branch'))\n-    github_branch_new = StringField(word('Name of new branch'))\n+    github_branch_new = StringField(word('Name of new branch'), validators=[html_validator])\n     commit_message = StringField(word('Commit message'), default=\"\")\n     pypi_also = BooleanField(word('Publish on PyPI also'))\n     install_also = BooleanField(word('Install package on this server also'))\n@@ -222,7 +223,7 @@ class APIKey(FlaskForm):\n     action = HiddenField()\n     key = HiddenField()\n     security = HiddenField()\n-    name = StringField(word('Name'), validators=[validators.Length(min=1, max=255)])\n+    name = StringField(word('Name'), validators=[validators.Length(min=1, max=255), html_validator])\n     method = SelectField(word('Security Method'))\n     permissions = SelectMultipleField(word('Limited Permissions'))\n     submit = SubmitField(word('Create'))"
        },
        {
          "filename": "docassemble_webapp/docassemble/webapp/server.py",
          "status": "modified",
          "additions": 27,
          "deletions": 11,
          "patch": "@@ -49,7 +49,7 @@\n from docassemble.webapp.setup import da_version\n import docassemble.base.astparser\n from docassemble.webapp.api_key import encrypt_api_key\n-from docassemble.base.error import DAError, DAErrorNoEndpoint, DAErrorMissingVariable, DAErrorCompileError, DAValidationError, DAException, DANotFoundError, DAInvalidFilename\n+from docassemble.base.error import DAError, DAErrorNoEndpoint, DAErrorMissingVariable, DAErrorCompileError, DAValidationError, DAException, DANotFoundError, DAInvalidFilename, DASourceError\n import docassemble.base.functions\n from docassemble.base.functions import get_default_timezone, ReturnValue, word\n import docassemble.base.DA\n@@ -159,7 +159,6 @@\n docassemble.base.util.set_svm_machine_learner(docassemble.webapp.machinelearning.SVMMachineLearner)\n \n \n-\n min_system_version = '1.2.0'\n re._MAXCACHE = 10000\n \n@@ -1178,12 +1177,17 @@ def my_default_url(error, endpoint, values):  # pylint: disable=unused-argument\n \n \n def make_safe_url(url):\n+    if url in ('help', 'login', 'signin', 'restart', 'new_session', 'exit', 'interview', 'logout', 'exit_logout', 'leave', 'register', 'profile', 'change_password', 'interviews', 'dispatch', 'manage', 'config', 'playground', 'playgroundtemplate', 'playgroundstatic', 'playgroundsources', 'playgroundmodules', 'playgroundpackages', 'configuration', 'root', 'temp_url', 'login_url', 'exit_endpoint', 'interview_start', 'interview_list', 'playgroundfiles', 'create_playground_package', 'run', 'run_interview_in_package', 'run_dispatch', 'run_new', 'run_new_dispatch'):\n+        return url\n     parts = urlsplit(url)\n     safe_url = parts.path\n     if parts.query != '':\n         safe_url += '?' + parts.query\n     if parts.fragment != '':\n         safe_url += '#' + parts.fragment\n+    if len(safe_url) > 0 and safe_url[0] not in ('?', '#', '/'):\n+        safe_url = '/' + safe_url\n+    safe_url = re.sub(r'^//+', '/', safe_url)\n     return safe_url\n \n \n@@ -1238,6 +1242,7 @@ def password_validator(form, field):  # pylint: disable=unused-argument\n if DEBUG_BOOT:\n     boot_log(\"server: finished setting up Flask\")\n \n+\n def url_for_interview(**args):\n     for k, v in daconfig.get('dispatch').items():\n         if v == args['i']:\n@@ -5840,7 +5845,7 @@ def github_oauth_callback():\n         return ('File not found', 404)\n     setup_translation()\n     failed = False\n-    do_redirect = False\n+    do_a_redirect = False\n     if not app.config['USE_GITHUB']:\n         logmessage('github_oauth_callback: server does not use github')\n         failed = True\n@@ -5853,14 +5858,14 @@ def github_oauth_callback():\n         if 'code' not in request.args or 'state' not in request.args:\n             logmessage('github_oauth_callback: code and state not in args')\n             failed = True\n-            do_redirect = True\n+            do_a_redirect = True\n         elif request.args['state'] != github_next['state']:\n             logmessage('github_oauth_callback: state did not match')\n             failed = True\n     if failed:\n         r.delete('da:github:userid:' + str(current_user.id))\n         r.delete('da:using_github:userid:' + str(current_user.id))\n-        if do_redirect:\n+        if do_a_redirect:\n             flash(word(\"There was a problem connecting to GitHub. Please check your GitHub configuration and try again.\"), 'danger')\n             return redirect(url_for('github_menu'))\n         return ('File not found', 404)\n@@ -8265,7 +8270,7 @@ def index(action_argument=None, refer=None):\n                     the_field = validation_error.field\n                     logmessage(\"field is \" + the_field)\n                     if the_field not in key_to_orig_key:\n-                        for item in key_to_orig_key.keys():\n+                        for item in key_to_orig_key:\n                             if item.startswith(the_field + '['):\n                                 the_field = item\n                                 break\n@@ -10915,7 +10920,7 @@ def index(action_argument=None, refer=None):\n         $(query).each(function(){\n           var showIfParent = $(this).parents('.dashowif,.dajsshowif');\n           if (!(showIfParent.length && ($(showIfParent[0]).data('isVisible') == '0' || !$(showIfParent[0]).is(\":visible\")))){\n-            if ($(this).hasClass('combobox')){\n+            if ($(this).prop('tagName') == 'INPUT' && $(this).hasClass('combobox')){\n               if (value){\n                 daComboBoxes[$(this).attr('id')].disable();\n               }\n@@ -14001,7 +14006,7 @@ def observer():\n         $(query).each(function(){\n           var showIfParent = $(this).parents('.dashowif, .dajsshowif');\n           if (!(showIfParent.length && ($(showIfParent[0]).data('isVisible') == '0' || !$(showIfParent[0]).is(\":visible\")))){\n-            if ($(this).hasClass('combobox')){\n+            if ($(this).prop('tagName') == 'INPUT' && $(this).hasClass('combobox')){\n               if (value){\n                 daComboBoxes[$(this).attr('id')].disable();\n               }\n@@ -23043,7 +23048,14 @@ def server_error(the_error):\n     else:\n         the_history = None\n     the_vars = None\n-    if isinstance(the_error, (DAError, DANotFoundError, DAInvalidFilename)):\n+    if isinstance(the_error, DASourceError):\n+        if (DEBUG and daconfig.get('development site is protected', False)) or (current_user.is_authenticated and current_user.has_role('admin', 'developer')):\n+            errmess = str(the_error)\n+        else:\n+            errmess = word(\"There was an error. Please contact the system administrator.\")\n+        the_trace = None\n+        logmessage(str(the_error))\n+    elif isinstance(the_error, (DAError, DANotFoundError, DAInvalidFilename)):\n         errmess = str(the_error)\n         the_trace = None\n         logmessage(errmess)\n@@ -23073,7 +23085,10 @@ def server_error(the_error):\n             errmess += \"\\nIn field index number \" + str(docassemble.base.functions.this_thread.misc['current_field'])\n         if hasattr(the_error, 'da_line_with_error'):\n             errmess += \"\\nIn line: \" + str(the_error.da_line_with_error)\n-\n+        try:\n+            logmessage(errmess)\n+        except:\n+            logmessage(\"Could not log the error message\")\n         logmessage(the_trace)\n     if isinstance(the_error, DAError):\n         error_code = the_error.error_code\n@@ -23296,7 +23311,7 @@ def server_error(the_error):\n         if 'in error' not in session and docassemble.base.functions.this_thread.interview is not None and 'error action' in docassemble.base.functions.this_thread.interview.consolidated_metadata:\n             session['in error'] = True\n             return index(action_argument={'action': docassemble.base.functions.this_thread.interview.consolidated_metadata['error action'], 'arguments': {'error_message': orig_errmess, 'error_history': the_history, 'error_trace': the_trace}}, refer=['error'])\n-    show_debug = not bool((not DEBUG) and isinstance(the_error, (DAError, DAInvalidFilename)))\n+    show_debug = not bool((not (DEBUG and daconfig.get('development site is protected', False))) and isinstance(the_error, (DAError, DAInvalidFilename)))\n     if int(int(error_code)/100) == 4:\n         show_debug = False\n     if error_code == 404:\n@@ -27000,6 +27015,7 @@ def invite_user(email_address, privilege=None, send=True):\n         return None\n     return accept_invite_link\n \n+\n @app.route('/api/user_invite', methods=['POST'])\n @csrf.exempt\n @cross_origin(origins='*', methods=['POST', 'HEAD'], automatic_options=True)"
        },
        {
          "filename": "docassemble_webapp/docassemble/webapp/users/forms.py",
          "status": "modified",
          "additions": 37,
          "deletions": 35,
          "patch": "@@ -5,16 +5,17 @@\n from wtforms import DateField, StringField, SubmitField, ValidationError, BooleanField, SelectField, SelectMultipleField, HiddenField, validators, TextAreaField\n from wtforms.validators import DataRequired, Email, Optional\n from wtforms.widgets import PasswordInput\n+from flask import flash, current_app, request, abort\n+from flask_login import current_user\n+from sqlalchemy import select\n from docassemble.base.functions import LazyWord as word, LazyArray\n from docassemble.base.config import daconfig\n from docassemble.base.generate_key import random_alphanumeric\n from docassemble.base.logger import logmessage\n from docassemble.webapp.daredis import r\n from docassemble.webapp.db_object import db\n from docassemble.webapp.users.models import UserModel, Role\n-from flask import flash, current_app, request, abort\n-from flask_login import current_user\n-from sqlalchemy import select\n+from docassemble.webapp.validators import html_validator\n try:\n     import ldap\n except ImportError:\n@@ -207,21 +208,22 @@ def da_registration_restrict_validator(form, field):  # pylint: disable=unused-a\n \n \n class MyRegisterForm(RegisterForm):\n-    first_name = StringField(word('First name'), [validators.Length(min=0, max=255)])\n-    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255)])\n-    country = StringField(word('Country code'), [validators.Length(min=0, max=2)])\n-    subdivisionfirst = StringField(word('First subdivision'), [validators.Length(min=0, max=64)])\n-    subdivisionsecond = StringField(word('Second subdivision'), [validators.Length(min=0, max=64)])\n-    subdivisionthird = StringField(word('Third subdivision'), [validators.Length(min=0, max=64)])\n-    organization = StringField(word('Organization'), [validators.Length(min=0, max=64)])\n-    language = StringField(word('Language'), [validators.Length(min=0, max=64)])\n-    timezone = SelectField(word('Time Zone'), [validators.Length(min=0, max=64)])\n-    nickname = StringField(word('Nickname'), [fix_nickname])\n+    first_name = StringField(word('First name'), [validators.Length(min=0, max=255), html_validator])\n+    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255), html_validator])\n+    country = StringField(word('Country code'), [validators.Length(min=0, max=2), html_validator])\n+    subdivisionfirst = StringField(word('First subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    subdivisionsecond = StringField(word('Second subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    subdivisionthird = StringField(word('Third subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    organization = StringField(word('Organization'), [validators.Length(min=0, max=64), html_validator])\n+    language = StringField(word('Language'), [validators.Length(min=0, max=64), html_validator])\n+    timezone = SelectField(word('Time Zone'), [validators.Length(min=0, max=64), html_validator])\n+    nickname = StringField(word('Nickname'), [fix_nickname, html_validator])\n     email = StringField(word('Email'), validators=[\n         validators.DataRequired(word('Email is required')),\n         validators.Email(word('Invalid Email')),\n         da_unique_email_validator,\n-        da_registration_restrict_validator])\n+        da_registration_restrict_validator,\n+        html_validator])\n \n \n def length_two(form, field):  # pylint: disable=unused-argument\n@@ -236,24 +238,24 @@ class NewPrivilegeForm(FlaskForm):\n \n \n class UserProfileForm(FlaskForm):\n-    first_name = StringField(word('First name'), [validators.Length(min=0, max=255)])\n-    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255)])\n-    country = StringField(word('Country code'), [validators.Length(min=0, max=2)])\n-    subdivisionfirst = StringField(word('First subdivision'), [validators.Length(min=0, max=64)])\n-    subdivisionsecond = StringField(word('Second subdivision'), [validators.Length(min=0, max=64)])\n-    subdivisionthird = StringField(word('Third subdivision'), [validators.Length(min=0, max=64)])\n-    organization = StringField(word('Organization'), [validators.Length(min=0, max=64)])\n-    language = StringField(word('Language'), [validators.Length(min=0, max=64)])\n-    timezone = SelectField(word('Time Zone'), [validators.Length(min=0, max=64)])\n-    pypi_username = StringField(word('PyPI Username'), [validators.Length(min=0, max=255)])\n+    first_name = StringField(word('First name'), [validators.Length(min=0, max=255), html_validator])\n+    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255), html_validator])\n+    country = StringField(word('Country code'), [validators.Length(min=0, max=2), html_validator])\n+    subdivisionfirst = StringField(word('First subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    subdivisionsecond = StringField(word('Second subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    subdivisionthird = StringField(word('Third subdivision'), [validators.Length(min=0, max=64), html_validator])\n+    organization = StringField(word('Organization'), [validators.Length(min=0, max=64), html_validator])\n+    language = StringField(word('Language'), [validators.Length(min=0, max=64), html_validator])\n+    timezone = SelectField(word('Time Zone'), [validators.Length(min=0, max=64), html_validator])\n+    pypi_username = StringField(word('PyPI Username'), [validators.Length(min=0, max=255), html_validator])\n     pypi_password = StringField(word('PyPI Password'), [validators.Length(min=0, max=255)])\n     confirmed_at = DateField(word('Confirmation Date'))\n     submit = SubmitField(word('Save'))\n     cancel = SubmitField(word('Cancel'))\n \n \n class EditUserProfileForm(UserProfileForm):\n-    email = StringField(word('E-mail'))\n+    email = StringField(word('E-mail'), validators=[Email(word('Must be a valid e-mail address')), html_validator])\n     role_id = SelectMultipleField(word('Privileges'), coerce=int)\n     active = BooleanField(word('Active'))\n     uses_mfa = BooleanField(word('Uses two-factor authentication'))\n@@ -299,11 +301,11 @@ def validate(self):  # pylint: disable=arguments-differ\n                     flash(word(\"Please choose a different e-mail address.\"), 'error')\n                     return False\n         return super().validate()\n-    email = StringField(word('E-mail'), validators=[Optional(), Email(word('Must be a valid e-mail address'))])\n+    email = StringField(word('E-mail'), validators=[Optional(), Email(word('Must be a valid e-mail address')), html_validator])\n \n \n class RequestDeveloperForm(FlaskForm):\n-    reason = StringField(word('Reason for needing developer account (optional)'))\n+    reason = StringField(word('Reason for needing developer account (optional)'), validators=[html_validator])\n     submit = SubmitField(word('Submit'))\n \n \n@@ -334,21 +336,21 @@ class UserAddForm(FlaskForm):\n     email = StringField(word('E-mail'), validators=[\n         validators.InputRequired(word('E-mail is required')),\n         validators.Email(word('Invalid E-mail'))])\n-    first_name = StringField(word('First name'), [validators.Length(min=0, max=255)])\n-    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255)])\n+    first_name = StringField(word('First name'), [validators.Length(min=0, max=255), html_validator])\n+    last_name = StringField(word('Last name'), [validators.Length(min=0, max=255), html_validator])\n     role_id = SelectMultipleField(word('Privileges'), coerce=int)\n     password = StringField(word('Password'), widget=PasswordInput(hide_value=False), validators=[password_validator])\n     submit = SubmitField(word('Add'))\n \n \n class PhoneLoginForm(FlaskForm):\n-    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255)])\n+    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255), html_validator])\n     submit = SubmitField(word('Go'))\n \n \n class PhoneLoginVerifyForm(FlaskForm):\n-    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255)])\n-    verification_code = StringField(word('Verification code'), [validators.Length(min=daconfig['verification code digits'], max=daconfig['verification code digits'])])\n+    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255), html_validator])\n+    verification_code = StringField(word('Verification code'), [validators.Length(min=daconfig['verification code digits'], max=daconfig['verification code digits']), html_validator])\n     submit = SubmitField(word('Verify'))\n \n     def validate(self):  # pylint: disable=arguments-differ\n@@ -404,7 +406,7 @@ class MFAChooseForm(FlaskForm):\n \n \n class MFASMSSetupForm(FlaskForm):\n-    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255)])\n+    phone_number = StringField(word('Phone number'), [validators.Length(min=5, max=255), html_validator])\n     submit = SubmitField(word('Verify'))\n \n \n@@ -416,8 +418,8 @@ class MFAVerifySMSSetupForm(FlaskForm):\n class MyResendConfirmEmailForm(FlaskForm):\n     email = StringField(word('Your e-mail address'), validators=[\n         validators.DataRequired(word('E-mail address is required')),\n-        validators.Email(word('Invalid e-mail address')),\n-        ])\n+        validators.Email(word('Invalid e-mail address'))\n+    ])\n     submit = SubmitField(word('Send confirmation email'))\n \n "
        },
        {
          "filename": "docassemble_webapp/docassemble/webapp/validators.py",
          "status": "added",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -0,0 +1,10 @@\n+from bs4 import BeautifulSoup\n+from wtforms import ValidationError\n+from docassemble.base.functions import LazyWord as word\n+\n+\n+def html_validator(form, field):  # pylint: disable=unused-argument\n+    \"\"\"Field must not contain HTML\"\"\"\n+    text = BeautifulSoup(field.data, \"html.parser\").get_text('')\n+    if text != field.data:\n+        raise ValidationError(word('Field cannot contain HTML'))"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d198d34fef9dc6013c8430843c0750427b929570",
            "date": "2024-12-24T16:03:50Z",
            "author_login": "jhpyle"
          },
          {
            "sha": "5e67ba9b58af2c0bfe2ec2ce450c6afd94e17add",
            "date": "2024-12-24T12:57:45Z",
            "author_login": "jhpyle"
          },
          {
            "sha": "4dd9b92dc241be7fb9edbc0d72b74bc15d921cb9",
            "date": "2024-12-07T18:02:32Z",
            "author_login": "jhpyle"
          },
          {
            "sha": "84fb2692690a81eab9b8e80ee0962efced6c5e29",
            "date": "2024-12-07T18:02:02Z",
            "author_login": "jhpyle"
          },
          {
            "sha": "ed8258ab22c0c2fece481e4f85e2f0cfbea26a26",
            "date": "2024-12-01T03:03:44Z",
            "author_login": "jhpyle"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Docassemble is an expert system for guided interviews and document assembly. Prior to 1.4.97, a user could type HTML into a field, including the field for the user's name, and then that HTML could be displayed on the screen as HTML. The vulnerability has been patched in version 1.4.97 of the master branch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-21T02:52:19.130",
    "last_modified": "2024-11-21T09:04:15.570",
    "fix_date": "2024-02-29T17:43:07Z"
  },
  "references": [
    {
      "url": "https://github.com/jhpyle/docassemble/commit/4801ac7ff7c90df00ac09523077930cdb6dea2aa",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jhpyle/docassemble/security/advisories/GHSA-pcfx-g2j2-f6f6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jhpyle/docassemble/commit/4801ac7ff7c90df00ac09523077930cdb6dea2aa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/jhpyle/docassemble/security/advisories/GHSA-pcfx-g2j2-f6f6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.879308",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "docassemble",
    "owner": "jhpyle",
    "created_at": "2015-04-18T02:09:32Z",
    "updated_at": "2024-12-28T01:10:00Z",
    "pushed_at": "2024-12-24T16:04:37Z",
    "size": 321728,
    "stars": 801,
    "forks": 259,
    "open_issues": 8,
    "watchers": 801,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 4733059,
      "JavaScript": 2781053,
      "Gherkin": 566659,
      "HTML": 185227,
      "Shell": 157279,
      "Rich Text Format": 120028,
      "CSS": 74071,
      "TeX": 15582,
      "Dockerfile": 8057,
      "Mako": 1042,
      "C++": 156
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:03:06.365892"
  }
}