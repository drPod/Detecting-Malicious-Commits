{
  "cve_id": "CVE-2024-27351",
  "github_data": {
    "repository": "django/django",
    "fix_commit": "072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521",
    "related_commits": [
      "072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521",
      "3394fc6132436eca89e997083bae9985fb7e761e",
      "3c9a2771cc80821e041b16eb36c1c37af5349d4a"
    ],
    "patch_url": "https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521.patch",
    "fix_commit_details": {
      "sha": "072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521",
      "commit_date": "2024-02-19T12:56:37Z",
      "author": {
        "login": "shaib",
        "type": "User",
        "stats": {
          "total_commits": 76,
          "average_weekly_commits": 0.0745829244357213,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 50
        }
      },
      "commit_message": {
        "title": "[3.2.x] Fixed CVE-2024-27351 -- Prevented potential ReDoS in Truncator.words().",
        "length": 180,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 91,
        "additions": 89,
        "deletions": 2
      },
      "files": [
        {
          "filename": "django/utils/text.py",
          "status": "modified",
          "additions": 55,
          "deletions": 2,
          "patch": "@@ -18,8 +18,61 @@ def capfirst(x):\n     return x and str(x)[0].upper() + str(x)[1:]\n \n \n-# Set up regular expressions\n-re_words = _lazy_re_compile(r'<[^>]+?>|([^<>\\s]+)', re.S)\n+# ----- Begin security-related performance workaround -----\n+\n+# We used to have, below\n+#\n+# re_words = _lazy_re_compile(r\"<[^>]+?>|([^<>\\s]+)\", re.S)\n+#\n+# But it was shown that this regex, in the way we use it here, has some\n+# catastrophic edge-case performance features. Namely, when it is applied to\n+# text with only open brackets \"<<<...\". The class below provides the services\n+# and correct answers for the use cases, but in these edge cases does it much\n+# faster.\n+re_notag = _lazy_re_compile(r\"([^<>\\s]+)\", re.S)\n+re_prt = _lazy_re_compile(r\"<|([^<>\\s]+)\", re.S)\n+\n+\n+class WordsRegex:\n+    @staticmethod\n+    def search(text, pos):\n+        # Look for \"<\" or a non-tag word.\n+        partial = re_prt.search(text, pos)\n+        if partial is None or partial[1] is not None:\n+            return partial\n+\n+        # \"<\" was found, look for a closing \">\".\n+        end = text.find(\">\", partial.end(0))\n+        if end < 0:\n+            # \">\" cannot be found, look for a word.\n+            return re_notag.search(text, pos + 1)\n+        else:\n+            # \"<\" followed by a \">\" was found -- fake a match.\n+            end += 1\n+            return FakeMatch(text[partial.start(0): end], end)\n+\n+\n+class FakeMatch:\n+    __slots__ = [\"_text\", \"_end\"]\n+\n+    def end(self, group=0):\n+        assert group == 0, \"This specific object takes only group=0\"\n+        return self._end\n+\n+    def __getitem__(self, group):\n+        if group == 1:\n+            return None\n+        assert group == 0, \"This specific object takes only group in {0,1}\"\n+        return self._text\n+\n+    def __init__(self, text, end):\n+        self._text, self._end = text, end\n+\n+\n+# ----- End security-related performance workaround -----\n+\n+# Set up regular expressions.\n+re_words = WordsRegex\n re_chars = _lazy_re_compile(r'<[^>]+?>|(.)', re.S)\n re_tag = _lazy_re_compile(r'<(/)?(\\S+?)(?:(\\s*/)|\\s.*?)?>', re.S)\n re_newlines = _lazy_re_compile(r'\\r\\n|\\r')  # Used in normalize_newlines"
        },
        {
          "filename": "docs/releases/3.2.25.txt",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -7,6 +7,14 @@ Django 3.2.25 release notes\n Django 3.2.25 fixes a security issue with severity \"moderate\" and a regression\n in 3.2.24.\n \n+CVE-2024-27351: Potential regular expression denial-of-service in ``django.utils.text.Truncator.words()``\n+=========================================================================================================\n+\n+``django.utils.text.Truncator.words()`` method (with ``html=True``) and\n+:tfilter:`truncatewords_html` template filter were subject to a potential\n+regular expression denial-of-service attack using a suitably crafted string\n+(follow up to :cve:`2019-14232` and :cve:`2023-43665`).\n+\n Bugfixes\n ========\n "
        },
        {
          "filename": "tests/utils_tests/test_text.py",
          "status": "modified",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -159,6 +159,32 @@ def test_truncate_html_words(self):\n         truncator = text.Truncator('<p>I &lt;3 python, what about you?</p>')\n         self.assertEqual('<p>I &lt;3 python,\u2026</p>', truncator.words(3, html=True))\n \n+        # Only open brackets.\n+        test = \"<\" * 60_000\n+        truncator = text.Truncator(test)\n+        self.assertEqual(truncator.words(1, html=True), test)\n+\n+        # Tags with special chars in attrs.\n+        truncator = text.Truncator(\n+            \"\"\"<i style=\"margin: 5%; font: *;\">Hello, my dear lady!</i>\"\"\"\n+        )\n+        self.assertEqual(\n+            \"\"\"<i style=\"margin: 5%; font: *;\">Hello, my dear\u2026</i>\"\"\",\n+            truncator.words(3, html=True),\n+        )\n+\n+        # Tags with special non-latin chars in attrs.\n+        truncator = text.Truncator(\"\"\"<p data-x=\"\u05d0\">Hello, my dear lady!</p>\"\"\")\n+        self.assertEqual(\n+            \"\"\"<p data-x=\"\u05d0\">Hello, my dear\u2026</p>\"\"\",\n+            truncator.words(3, html=True),\n+        )\n+\n+        # Misplaced brackets.\n+        truncator = text.Truncator(\"hello >< world\")\n+        self.assertEqual(truncator.words(1, html=True), \"hello\u2026\")\n+        self.assertEqual(truncator.words(2, html=True), \"hello >< world\")\n+\n     @patch(\"django.utils.text.Truncator.MAX_LENGTH_HTML\", 10_000)\n     def test_truncate_words_html_size_limit(self):\n         max_len = text.Truncator.MAX_LENGTH_HTML"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b721f127603516c75ebda6912046ff5f0694e150",
            "date": "2024-10-11T11:44:12Z",
            "author_login": "sarahboyce"
          },
          {
            "sha": "d206d4c200d71c0847e7f6720d88c587e7b46843",
            "date": "2025-01-01T20:27:52Z",
            "author_login": "jacobtylerwalls"
          },
          {
            "sha": "f07360e8087d3b403d1d12ff696da3138116055a",
            "date": "2025-01-14T03:04:33Z",
            "author_login": "charettes"
          },
          {
            "sha": "161e79d277ffe8b79b15ad51cb0d23de54270202",
            "date": "2025-01-13T18:55:41Z",
            "author_login": "charettes"
          },
          {
            "sha": "4bfec242b488b174f7d386ab5bbd3363751cdb93",
            "date": "2025-01-13T18:53:57Z",
            "author_login": "charettes"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-1333",
    "description": "In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-03-15T20:15:09.303",
    "last_modified": "2024-11-21T09:04:24.087",
    "fix_date": "2024-02-19T12:56:37Z"
  },
  "references": [
    {
      "url": "http://www.openwall.com/lists/oss-security/2024/03/04/1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://docs.djangoproject.com/en/5.0/releases/security/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://groups.google.com/forum/#%21forum/django-announce",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.djangoproject.com/weblog/2024/mar/04/security-releases/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2024/03/04/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://docs.djangoproject.com/en/5.0/releases/security/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://groups.google.com/forum/#%21forum/django-announce",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.djangoproject.com/weblog/2024/mar/04/security-releases/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.500694",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "django",
    "owner": "django",
    "created_at": "2012-04-28T02:47:18Z",
    "updated_at": "2025-01-14T13:27:58Z",
    "pushed_at": "2025-01-14T11:34:55Z",
    "size": 264981,
    "stars": 81851,
    "forks": 32045,
    "open_issues": 301,
    "watchers": 81851,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable/0.90.x",
      "stable/0.91.x",
      "stable/0.95.x",
      "stable/0.96.x",
      "stable/1.0.x",
      "stable/1.1.x",
      "stable/1.2.x",
      "stable/1.3.x",
      "stable/1.4.x",
      "stable/1.5.x",
      "stable/1.6.x",
      "stable/1.7.x",
      "stable/1.8.x",
      "stable/1.9.x",
      "stable/1.10.x",
      "stable/1.11.x",
      "stable/2.0.x",
      "stable/2.1.x",
      "stable/2.2.x",
      "stable/3.0.x",
      "stable/3.1.x",
      "stable/3.2.x",
      "stable/4.0.x",
      "stable/4.1.x",
      "stable/4.2.x",
      "stable/5.0.x",
      "stable/5.1.x"
    ],
    "languages": {
      "Python": 17607947,
      "HTML": 250858,
      "JavaScript": 158876,
      "CSS": 92030,
      "Smarty": 392,
      "Procfile": 47
    },
    "commit_activity": {
      "total_commits_last_year": 938,
      "avg_commits_per_week": 18.03846153846154,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T13:28:27.491590"
  }
}