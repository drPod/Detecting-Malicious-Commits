{
  "cve_id": "CVE-2024-27444",
  "github_data": {
    "repository": "langchain-ai/langchain",
    "fix_commit": "de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7",
    "related_commits": [
      "de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7",
      "de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7"
    ],
    "patch_url": "https://github.com/langchain-ai/langchain/commit/de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7.patch",
    "fix_commit_details": {
      "sha": "de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7",
      "commit_date": "2024-02-14T19:44:07Z",
      "author": {
        "login": "DanisJiang",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "experimental[patch]: Enhance protection against arbitrary code execution in PALChain (#17091)",
        "length": 251,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 19,
        "additions": 19,
        "deletions": 0
      },
      "files": [
        {
          "filename": "libs/experimental/langchain_experimental/pal_chain/base.py",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -21,6 +21,16 @@\n from langchain_experimental.pydantic_v1 import Extra, Field\n \n COMMAND_EXECUTION_FUNCTIONS = [\"system\", \"exec\", \"execfile\", \"eval\", \"__import__\"]\n+COMMAND_EXECUTION_ATTRIBUTES = [\n+    \"__import__\",\n+    \"__subclasses__\",\n+    \"__builtins__\",\n+    \"__globals__\",\n+    \"__getattribute__\",\n+    \"__bases__\",\n+    \"__mro__\",\n+    \"__base__\",\n+]\n \n \n class PALValidation:\n@@ -232,6 +242,15 @@ def validate_code(cls, code: str, code_validations: PALValidation) -> None:\n             or not code_validations.allow_imports\n         ):\n             for node in ast.walk(code_tree):\n+                if (\n+                    not code_validations.allow_command_exec\n+                    and isinstance(node, ast.Attribute)\n+                    and node.attr in COMMAND_EXECUTION_ATTRIBUTES\n+                ):\n+                    raise ValueError(\n+                        f\"Found illegal command execution function \"\n+                        f\"{node.attr} in code {code}\"\n+                    )\n                 if (not code_validations.allow_command_exec) and isinstance(\n                     node, ast.Call\n                 ):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "efadad6067095a2a9afd4c3063bf777ca076584a",
            "date": "2025-01-14T18:27:52Z",
            "author_login": "gkorland"
          },
          {
            "sha": "4ab04ad6be0f8f51d22a7df759d7719781fa22f5",
            "date": "2025-01-14T17:55:16Z",
            "author_login": "baskaryan"
          },
          {
            "sha": "d9b856abadef0e7e7338a82f0b2e1239ce3fbd61",
            "date": "2025-01-14T15:23:34Z",
            "author_login": "michaelnchin"
          },
          {
            "sha": "c55af44711ba9180ce8a51a55a385f31023341b5",
            "date": "2025-01-13T23:32:40Z",
            "author_login": "efriis"
          },
          {
            "sha": "cdf3a17e55bd594341c390051dc20c5e5a74b966",
            "date": "2025-01-13T21:25:00Z",
            "author_login": "efriis"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-749",
    "description": "langchain_experimental (aka LangChain Experimental) in LangChain before 0.1.8 allows an attacker to bypass the CVE-2023-44467 fix and execute arbitrary code via the __import__, __subclasses__, __builtins__, __globals__, __getattribute__, __bases__, __mro__, or __base__ attribute in Python code. These are not prohibited by pal_chain/base.py.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-02-26T16:28:00.430",
    "last_modified": "2024-11-21T09:04:37.470",
    "fix_date": "2024-02-14T19:44:07Z"
  },
  "references": [
    {
      "url": "https://github.com/langchain-ai/langchain/commit/de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/langchain-ai/langchain/commit/de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:28.162053",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "langchain",
    "owner": "langchain-ai",
    "created_at": "2022-10-17T02:58:36Z",
    "updated_at": "2025-01-14T13:08:38Z",
    "pushed_at": "2025-01-13T23:32:41Z",
    "size": 376391,
    "stars": 98220,
    "forks": 15956,
    "open_issues": 435,
    "watchers": 98220,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Jupyter Notebook": 31945259,
      "Python": 19475935,
      "MDX": 56545,
      "Makefile": 55385,
      "Shell": 19562,
      "XSLT": 19446,
      "HTML": 9026,
      "TeX": 2242,
      "Dockerfile": 1311,
      "JavaScript": 471
    },
    "commit_activity": {
      "total_commits_last_year": 7057,
      "avg_commits_per_week": 135.71153846153845,
      "days_active_last_year": 327
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:11:47.805811"
  }
}