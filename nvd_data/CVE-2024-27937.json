{
  "cve_id": "CVE-2024-27937",
  "github_data": {
    "repository": "glpi-project/glpi",
    "fix_commit": "d02c537d23cbb729fe18b87f71b3c6e84e9892da",
    "related_commits": [
      "d02c537d23cbb729fe18b87f71b3c6e84e9892da",
      "d02c537d23cbb729fe18b87f71b3c6e84e9892da"
    ],
    "patch_url": "https://github.com/glpi-project/glpi/commit/d02c537d23cbb729fe18b87f71b3c6e84e9892da.patch",
    "fix_commit_details": {
      "sha": "d02c537d23cbb729fe18b87f71b3c6e84e9892da",
      "commit_date": "2024-03-13T07:16:53Z",
      "author": {
        "login": "cedric-anne",
        "type": "User",
        "stats": {
          "total_commits": 2969,
          "average_weekly_commits": 2.716376944190302,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 324
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-98qw-hpg3-2hpj",
        "length": 156,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 187,
        "additions": 167,
        "deletions": 20
      },
      "files": [
        {
          "filename": "ajax/dropdownAllItems.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -43,6 +43,10 @@\n \n Session::checkCentralAccess();\n \n+if (isset($_POST['entity_restrict'])) {\n+    $_POST['entity_restrict'] = Session::getMatchingActiveEntities($_POST['entity_restrict']);\n+}\n+\n // Make a select box\n if ($_POST[\"idtable\"] && class_exists($_POST[\"idtable\"])) {\n    // Link to user for search only > normal users"
        },
        {
          "filename": "ajax/dropdownConnect.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -52,7 +52,7 @@\n     $_POST[\"itemtype\"],\n     $_POST['fromtype'],\n     $_POST['myname'],\n-    $_POST[\"entity_restrict\"],\n+    Session::getMatchingActiveEntities($_POST['entity_restrict']),\n     $_POST[\"onlyglobal\"],\n     $used\n );"
        },
        {
          "filename": "ajax/dropdownItilActors.php",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -65,7 +65,7 @@\n                 }\n \n                 $options = ['name'        => '_itil_' . $_POST[\"actortype\"] . '[users_id]',\n-                    'entity'      => $_POST['entity_restrict'],\n+                    'entity'      => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n                     'right'       => $right,\n                     'rand'        => $rand,\n                     'ldap_import' => true\n@@ -147,7 +147,7 @@\n \n                 $param = [\n                     'name'      => '_itil_' . $_POST[\"actortype\"] . '[groups_id]',\n-                    'entity'    => $_POST['entity_restrict'],\n+                    'entity'    => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n                     'condition' => $cond,\n                     'rand'      => $rand\n                 ];\n@@ -179,7 +179,7 @@\n \n             case \"supplier\":\n                 $options = ['name'      => '_itil_' . $_POST[\"actortype\"] . '[suppliers_id]',\n-                    'entity'    => $_POST['entity_restrict'],\n+                    'entity'    => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n                     'rand'      => $rand\n                 ];\n                 if ($CFG_GLPI[\"notifications_mailing\"]) {"
        },
        {
          "filename": "ajax/dropdownProjectTaskTicket.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -51,7 +51,7 @@\n     }\n \n     $p = ['itemtype'     => ProjectTask::getType(),\n-        'entity_restrict' => $_POST['entity_restrict'],\n+        'entity_restrict' => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n         'myname'          => $_POST[\"myname\"],\n         'condition'       => $condition,\n         'rand'            => $_POST[\"rand\"]"
        },
        {
          "filename": "ajax/dropdownSoftwareLicense.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -56,7 +56,7 @@\n         'FROM'      => 'glpi_softwarelicenses',\n         'WHERE'     => [\n             'glpi_softwarelicenses.softwares_id'   => (int)$_POST['softwares_id']\n-        ] + getEntitiesRestrictCriteria('glpi_softwarelicenses', 'entities_id', $_POST['entity_restrict'], true),\n+        ] + getEntitiesRestrictCriteria('glpi_softwarelicenses', 'entities_id', Session::getMatchingActiveEntities($_POST['entity_restrict']), true),\n         'ORDERBY'   => 'name'\n     ]);\n     $number = count($iterator);"
        },
        {
          "filename": "ajax/dropdownTicketCategories.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -41,7 +41,7 @@\n     die(\"Sorry. You can't access this file directly\");\n }\n \n-$opt = ['entity' => $_POST[\"entity_restrict\"]];\n+$opt = ['entity' => Session::getMatchingActiveEntities($_POST['entity_restrict'])];\n $condition  = [];\n \n if (Session::getCurrentInterface() == \"helpdesk\") {"
        },
        {
          "filename": "ajax/dropdownTrackingDeviceType.php",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -76,14 +76,14 @@\n     $field_id = Html::cleanId(\"dropdown_\" . $_POST['myname'] . $rand);\n     $p = [\n         'itemtype'            => $itemtype,\n-        'entity_restrict'     => $_POST['entity_restrict'],\n+        'entity_restrict'     => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n         'table'               => $table,\n         'multiple'            => (int) ($_POST[\"multiple\"] ?? 0) !== 0,\n         'myname'              => $_POST[\"myname\"],\n         'rand'                => $_POST[\"rand\"],\n         'width'               => 'calc(100% - 25px)',\n         '_idor_token'         => Session::getNewIDORToken($itemtype, [\n-            'entity_restrict' => $_POST['entity_restrict'],\n+            'entity_restrict' => Session::getMatchingActiveEntities($_POST['entity_restrict']),\n         ]),\n     ];\n "
        },
        {
          "filename": "ajax/updateTrackingDeviceType.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -40,6 +40,6 @@\n Html::header_nocache();\n \n Session::checkRight(\"ticket\", UPDATE);\n-Item_Ticket::dropdownMyDevices($_POST[\"userID\"], $_POST[\"entity_restrict\"]);\n+Item_Ticket::dropdownMyDevices($_POST[\"userID\"], Session::getMatchingActiveEntities($_POST['entity_restrict']));\n \n Html::ajaxFooter();"
        },
        {
          "filename": "src/CommonDBRelation.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1478,7 +1478,7 @@ public static function showMassiveActionsSubForm(MassiveAction $ma)\n                     } else {\n                         $options['name'] = 'peer_' . $peers_id;\n                         if (isset($_POST['entity_restrict'])) {\n-                            $options['entity'] = $_POST['entity_restrict'];\n+                            $options['entity'] = Session::getMatchingActiveEntities($_POST['entity_restrict']);\n                         }\n                         if ($normalized_action == 'remove') {\n                             $options['nochecklimit'] = true;"
        },
        {
          "filename": "src/CommonITILObject.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4948,7 +4948,7 @@ public function showActorAddFormOnCreate($type, array $options)\n             'right'  => $right,\n             'rand'   => $rand,\n             'width'  => \"95%\",\n-            'entity' => $options['entities_id'] ?? $options['entity_restrict']\n+            'entity' => Session::getMatchingActiveEntities($options['entities_id'] ?? $options['entity_restrict']),\n         ];\n \n        //only for active ldap and corresponding right"
        },
        {
          "filename": "src/Consumable.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -206,7 +206,7 @@ public static function showMassiveActionsSubForm(MassiveAction $ma)\n                         'items_id_name'\n                                                               => 'give_items_id',\n                         'entity_restrict'\n-                                                              => $input[\"entities_id\"],\n+                                                              => Session::getMatchingActiveEntities($input[\"entities_id\"]),\n                         'itemtypes'\n                                                               => $CFG_GLPI[\"consumables_types\"]\n                     ]);"
        },
        {
          "filename": "src/Dropdown.php",
          "status": "modified",
          "additions": 12,
          "deletions": 6,
          "patch": "@@ -202,6 +202,7 @@ public static function show($itemtype, $options = [])\n                 $params['entity'] = getSonsOf('glpi_entities', $params['entity']);\n             }\n         }\n+        $params['entity'] = Session::getMatchingActiveEntities($params['entity']);\n \n         $field_id = Html::cleanId(\"dropdown_\" . $params['name'] . $params['rand']);\n \n@@ -2625,7 +2626,9 @@ public static function getDropdownValue($post, $json = true)\n             return;\n         }\n \n-        if (\n+        if (isset($post['entity_restrict']) && 'default' === $post['entity_restrict']) {\n+            $post['entity_restrict'] = $_SESSION['glpiactiveentities'];\n+        } elseif (\n             isset($post[\"entity_restrict\"])\n             && !is_array($post[\"entity_restrict\"])\n             && (substr($post[\"entity_restrict\"], 0, 1) === '[')\n@@ -2638,10 +2641,7 @@ public static function getDropdownValue($post, $json = true)\n                     $entities[] = (int)$value;\n                 }\n             }\n-            $post[\"entity_restrict\"] = $entities;\n-        }\n-        if (isset($post['entity_restrict']) && 'default' === $post['entity_restrict']) {\n-            $post['entity_restrict'] = $_SESSION['glpiactiveentities'];\n+            $post[\"entity_restrict\"] = Session::getMatchingActiveEntities($entities);\n         }\n \n        // Security\n@@ -3515,6 +3515,10 @@ public static function getDropdownConnect($post, $json = true)\n             return;\n         }\n \n+        if (isset($post['entity_restrict'])) {\n+            $post['entity_restrict'] = Session::getMatchingActiveEntities($post['entity_restrict']);\n+        }\n+\n         $fromitem->checkGlobal(UPDATE);\n         $used = [];\n         if (isset($post[\"used\"])) {\n@@ -3785,7 +3789,7 @@ public static function getDropdownFindNum($post, $json = true)\n \n         if ($item->isEntityAssign()) {\n             if (isset($post[\"entity_restrict\"]) && ($post[\"entity_restrict\"] >= 0)) {\n-                $entity = $post[\"entity_restrict\"];\n+                $entity = Session::getMatchingActiveEntities($post['entity_restrict']);\n             } else {\n                 $entity = '';\n             }\n@@ -4023,6 +4027,7 @@ public static function getDropdownUsers($post, $json = true)\n             $entity_restrict = -1;\n             if (isset($post['entity_restrict'])) {\n                 $entity_restrict = Toolbox::jsonDecode($post['entity_restrict']);\n+                $entity_restrict = Session::getMatchingActiveEntities($entity_restrict);\n             }\n \n             $start  = intval(($post['page'] - 1) * $post['page_limit']);\n@@ -4129,6 +4134,7 @@ public static function getDropdownActors($post, $json = true)\n         $entity_restrict = -1;\n         if (isset($post['entity_restrict'])) {\n             $entity_restrict = Toolbox::jsonDecode($post['entity_restrict']);\n+            $entity_restrict = Session::getMatchingActiveEntities($entity_restrict);\n         }\n \n        // prevent instanciation of bad classes"
        },
        {
          "filename": "src/Item_Ticket.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -604,6 +604,8 @@ public static function dropdownMyDevices($userID = 0, $entity_restrict = -1, $it\n             $userID = Session::getLoginUserID();\n         }\n \n+        $entity_restrict = Session::getMatchingActiveEntities($entity_restrict);\n+\n         $rand        = $params['rand'];\n         $already_add = $params['used'];\n "
        },
        {
          "filename": "src/NetworkPortInstantiation.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1025,7 +1025,7 @@ public static function dropdownConnect($ID, $options = [])\n         $rand = Dropdown::showItemTypes('NetworkPortConnect_itemtype', $CFG_GLPI[\"networkport_types\"]);\n \n         $params = ['itemtype'           => '__VALUE__',\n-            'entity_restrict'    => $p['entity'],\n+            'entity_restrict'    => Session::getMatchingActiveEntities($p['entity']),\n             'networkports_id'    => $ID,\n             'comments'           => $p['comments'],\n             'myname'             => $p['name'],"
        },
        {
          "filename": "src/Session.php",
          "status": "modified",
          "additions": 42,
          "deletions": 0,
          "patch": "@@ -1957,6 +1957,48 @@ public static function getActiveEntity()\n         return $_SESSION['glpiactive_entity'] ?? 0;\n     }\n \n+    /**\n+     * Filter given entities ID list to return only these tht are matching current active entities in session.\n+     *\n+     * @since 10.0.13\n+     *\n+     * @param int|int[] $entities_ids\n+     *\n+     * @return int|int[]\n+     */\n+    public static function getMatchingActiveEntities(/*int|array*/ $entities_ids)/*: int|array*/\n+    {\n+        if (\n+            (int)$entities_ids === -1\n+            || (is_array($entities_ids) && count($entities_ids) === 1 && (int)reset($entities_ids) === -1)\n+        ) {\n+            // Special value that is generally used to fallback to all active entities.\n+            return $entities_ids;\n+        }\n+\n+        if (!is_array($entities_ids) && !is_int($entities_ids) && !ctype_digit($entities_ids)) {\n+            // Unexpected value type.\n+            return [];\n+        }\n+\n+        $active_entities_ids = $_SESSION['glpiactiveentities'] ?? [];\n+\n+        if (!is_array($entities_ids) && in_array((int)$entities_ids, $active_entities_ids, true)) {\n+            return (int)$entities_ids;\n+        }\n+\n+        $filtered = [];\n+        foreach ((array)$entities_ids as $entity_id) {\n+            if (\n+                (is_int($entity_id) || ctype_digit($entity_id))\n+                && in_array((int)$entity_id, $active_entities_ids, true)\n+            ) {\n+                $filtered[] = (int)$entity_id;\n+            }\n+        }\n+        return $filtered;\n+    }\n+\n     /**\n      * Get recursive state of active entity selection.\n      *"
        },
        {
          "filename": "src/User.php",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -4617,13 +4617,15 @@ public static function dropdown($options = [])\n         }\n \n         $output = '';\n+\n         if (!($p['entity'] < 0) && $p['entity_sons']) {\n             if (is_array($p['entity'])) {\n                 $output .= \"entity_sons options is not available with array of entity\";\n             } else {\n                 $p['entity'] = getSonsOf('glpi_entities', $p['entity']);\n             }\n         }\n+        $p['entity'] = Session::getMatchingActiveEntities($p['entity']);\n \n         // Make a select box with all glpi users\n         $view_users = self::canView();"
        },
        {
          "filename": "tests/functional/Session.php",
          "status": "modified",
          "additions": 91,
          "deletions": 0,
          "patch": "@@ -630,4 +630,95 @@ public function testGetRightNameForError($module, $right, $expected)\n         \\Session::loadLanguage('fr_FR');\n         $this->string(\\Session::getRightNameForError($module, $right))->isEqualTo($expected);\n     }\n+\n+    protected function entitiesRestricProvider(): iterable\n+    {\n+        // Special case for -1\n+        foreach ([-1, \"-1\", [-1], [\"-1\"]] as $value) {\n+            yield [\n+                'entity_restrict' => $value,\n+                'active_entities' => [0, 1, 2, 3],\n+                'result'          => is_array($value) ? [-1] : -1,\n+            ];\n+        }\n+\n+        // Integer input, matching\n+        yield [\n+            'entity_restrict' => 2,\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => 2,\n+        ];\n+\n+        // String input, matching\n+        yield [\n+            'entity_restrict' => '2',\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => 2,\n+        ];\n+\n+        // Integer input, NOT matching\n+        yield [\n+            'entity_restrict' => 7,\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [],\n+        ];\n+\n+        // String input, matching\n+        yield [\n+            'entity_restrict' => '7',\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [],\n+        ];\n+\n+        // Array input, ALL matching\n+        yield [\n+            'entity_restrict' => [0, '2', 3],\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [0, 2, 3],\n+        ];\n+\n+        // Array input, PARTIAL matching\n+        yield [\n+            'entity_restrict' => [0, '2', 3, 12, 54, 96],\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [0, '2', 3],\n+        ];\n+\n+        // Array input, NONE matching\n+        yield [\n+            'entity_restrict' => [0, '2', 3, 12, 54, 96],\n+            'active_entities' => [1, 4],\n+            'result'          => [],\n+        ];\n+\n+        // Empty active entities\n+        yield [\n+            'entity_restrict' => [0, '2', 3, 12, 54, 96],\n+            'active_entities' => null,\n+            'result'          => [],\n+        ];\n+\n+        // Unexpected unique value\n+        yield [\n+            'entity_restrict' => 'not a valid value',\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [],\n+        ];\n+\n+        // Unexpected value in an array\n+        yield [\n+            'entity_restrict' => [0, 'not a valid value', 3],\n+            'active_entities' => [0, 1, 2, 3],\n+            'result'          => [0, 3],\n+        ];\n+    }\n+\n+    /**\n+     * @dataProvider entitiesRestricProvider\n+     */\n+    public function testGetMatchingActiveEntities(/*int|array*/ $entity_restrict, ?array $active_entities, /*int|array*/ $result): void\n+    {\n+        $_SESSION['glpiactiveentities'] = $active_entities;\n+        $this->variable(\\Session::getMatchingActiveEntities($entity_restrict))->isEqualTo($result);\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ec0e2a11b56e8ef9d1d28f503a363e4ba64fd4ab",
            "date": "2025-01-14T16:55:01Z",
            "author_login": "ccailly"
          },
          {
            "sha": "50989595d9386f3eed353125d7a693ef1241b517",
            "date": "2025-01-14T15:16:58Z",
            "author_login": "cconard96"
          },
          {
            "sha": "515f37f98fdfc8fdc1eb2f090252b2f3af1fdfa4",
            "date": "2025-01-14T14:43:36Z",
            "author_login": "ccailly"
          },
          {
            "sha": "9869867f24c899d79e4675ad93131bbb2cba53a2",
            "date": "2025-01-14T14:39:56Z",
            "author_login": "ccailly"
          },
          {
            "sha": "4b9fbaea0bb355b49990ee51c690fed5e7302443",
            "date": "2025-01-14T13:22:29Z",
            "author_login": "SebSept"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-285",
    "description": "GLPI is a Free Asset and IT Management Software package, Data center management, ITIL Service Desk, licenses tracking and software auditing. An authenticated user can obtain the email address of all GLPI users. This issue has been patched in version 10.0.13.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-18T16:15:08.690",
    "last_modified": "2025-01-02T16:20:03.713",
    "fix_date": "2024-03-13T07:16:53Z"
  },
  "references": [
    {
      "url": "https://borelenzo.github.io/stuff/2024/02/29/glpi-pwned.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/commit/d02c537d23cbb729fe18b87f71b3c6e84e9892da",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/releases/tag/10.0.13",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-98qw-hpg3-2hpj",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://borelenzo.github.io/stuff/2024/02/29/glpi-pwned.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/commit/d02c537d23cbb729fe18b87f71b3c6e84e9892da",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/releases/tag/10.0.13",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes"
      ]
    },
    {
      "url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-98qw-hpg3-2hpj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.512904",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "glpi",
    "owner": "glpi-project",
    "created_at": "2015-07-16T07:20:21Z",
    "updated_at": "2025-01-14T12:00:43Z",
    "pushed_at": "2025-01-14T12:00:37Z",
    "size": 864638,
    "stars": 4447,
    "forks": 1324,
    "open_issues": 223,
    "watchers": 4447,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "0.70/bugfixes",
      "0.71/bugfixes",
      "0.72/bugfixes",
      "0.78/bugfixes",
      "0.80/bugfixes",
      "0.83/bugfixes",
      "0.84/bugfixes",
      "0.85/bugfixes",
      "0.90/bugfixes",
      "9.1/bugfixes",
      "9.2/bugfixes",
      "9.3/bugfixes",
      "9.4/bugfixes",
      "9.5/bugfixes",
      "10.0/bugfixes",
      "main"
    ],
    "languages": {
      "PHP": 24867216,
      "Twig": 1834187,
      "JavaScript": 1339721,
      "SCSS": 362786,
      "Vue": 188168,
      "Shell": 24779,
      "Makefile": 2692,
      "CSS": 1716,
      "Dockerfile": 638
    },
    "commit_activity": {
      "total_commits_last_year": 1737,
      "avg_commits_per_week": 33.40384615384615,
      "days_active_last_year": 259
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:16:26.208966"
  }
}