{
  "cve_id": "CVE-2024-28113",
  "github_data": {
    "repository": "peering-manager/peering-manager",
    "fix_commit": "49dc5593184d7740d81e57dbbe3f971d2969dfac",
    "related_commits": [
      "49dc5593184d7740d81e57dbbe3f971d2969dfac",
      "49dc5593184d7740d81e57dbbe3f971d2969dfac"
    ],
    "patch_url": "https://github.com/peering-manager/peering-manager/commit/49dc5593184d7740d81e57dbbe3f971d2969dfac.patch",
    "fix_commit_details": {
      "sha": "49dc5593184d7740d81e57dbbe3f971d2969dfac",
      "commit_date": "2024-01-26T00:12:59Z",
      "author": {
        "login": "gmazoyer",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Make sure URL is not absolute before redirecting",
        "length": 48,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 6,
        "additions": 4,
        "deletions": 2
      },
      "files": [
        {
          "filename": "utils/views.py",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -1,3 +1,5 @@\n+from urllib.parse import urlparse\n+\n from django.conf import settings\n from django.contrib.auth.mixins import (\n     PermissionRequiredMixin as _PermissionRequiredMixin,\n@@ -37,9 +39,9 @@ class GetReturnURLMixin:\n \n     def get_return_url(self, request, instance=None):\n         # Check if `return_url` was specified as a query parameter or form\n-        # data, use this URL only if it's safe\n+        # data, use this URL only if it's not absolute\n         return_url = request.GET.get(\"return_url\") or request.POST.get(\"return_url\")\n-        if return_url and return_url.startswith(\"/\"):\n+        if return_url and not bool(urlparse(return_url).netloc):\n             return return_url\n \n         # Check if the object being modified (if any) has an absolute URL"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0deed5a842d44b5383c9f3590402389cd9deca1c",
            "date": "2025-01-14T07:25:13Z",
            "author_login": "gmazoyer"
          },
          {
            "sha": "916a463bf88045cacdc7a17042122c5dac3de79f",
            "date": "2025-01-14T07:23:01Z",
            "author_login": "gmazoyer"
          },
          {
            "sha": "8bed7326d6d6982e71b9d07914f3d865d723308a",
            "date": "2025-01-14T07:17:18Z",
            "author_login": "gmazoyer"
          },
          {
            "sha": "95d6f3efe7ae1407c710b8f5a175fa4412c36e85",
            "date": "2025-01-14T07:17:00Z",
            "author_login": "gmazoyer"
          },
          {
            "sha": "bd6de6f109def8a4b1c01e6f59f08e87898a7fc3",
            "date": "2025-01-13T23:36:39Z",
            "author_login": "gmazoyer"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-601",
    "description": "Peering Manager is a BGP session management tool. In Peering Manager <=1.8.2, it is possible to redirect users to an arbitrary page using a crafted url. As a result users can be redirected to an unexpected location. This issue has been addressed in version 1.8.3. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-12T20:15:07.933",
    "last_modified": "2024-11-21T09:05:50.570",
    "fix_date": "2024-01-26T00:12:59Z"
  },
  "references": [
    {
      "url": "https://github.com/peering-manager/peering-manager/commit/49dc5593184d7740d81e57dbbe3f971d2969dfac",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/peering-manager/peering-manager/security/advisories/GHSA-f4mf-5g28-q7f5",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/peering-manager/peering-manager/commit/49dc5593184d7740d81e57dbbe3f971d2969dfac",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/peering-manager/peering-manager/security/advisories/GHSA-f4mf-5g28-q7f5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.483760",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "peering-manager",
    "owner": "peering-manager",
    "created_at": "2017-08-15T20:37:42Z",
    "updated_at": "2025-01-14T08:18:17Z",
    "pushed_at": "2025-01-14T12:42:44Z",
    "size": 23996,
    "stars": 497,
    "forks": 95,
    "open_issues": 33,
    "watchers": 497,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 1632156,
      "JavaScript": 475588,
      "HTML": 273368,
      "SCSS": 250026,
      "Less": 240487,
      "CSS": 239965,
      "Shell": 4160
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T18:01:07.006026"
  }
}