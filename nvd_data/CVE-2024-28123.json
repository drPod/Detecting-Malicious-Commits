{
  "cve_id": "CVE-2024-28123",
  "github_data": {
    "repository": "wasmi-labs/wasmi",
    "fix_commit": "f7b3200e9f3dc9e2cbca966cb255c228453c792f",
    "related_commits": [
      "f7b3200e9f3dc9e2cbca966cb255c228453c792f",
      "f7b3200e9f3dc9e2cbca966cb255c228453c792f"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "f7b3200e9f3dc9e2cbca966cb255c228453c792f",
      "commit_date": "2023-12-01T09:35:28Z",
      "author": {
        "login": "Robbepop",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix bug in wasmi executor",
        "length": 25,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 8,
        "additions": 6,
        "deletions": 2
      },
      "files": [
        {
          "filename": "crates/wasmi/src/engine/mod.rs",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -647,7 +647,9 @@ impl<'engine> EngineExecutor<'engine> {\n         Results: CallResults,\n     {\n         self.stack.reset();\n-        self.stack.values.extend(params.call_params());\n+        let call_params = params.call_params();\n+        self.stack.values.reserve(call_params.len())?;\n+        self.stack.values.extend(call_params);\n         match ctx.as_context().store.inner.resolve_func(func) {\n             FuncEntity::Wasm(wasm_func) => {\n                 self.stack\n@@ -689,7 +691,9 @@ impl<'engine> EngineExecutor<'engine> {\n         self.stack\n             .values\n             .drop(host_func.ty(ctx.as_context()).params().len());\n-        self.stack.values.extend(params.call_params());\n+        let call_params = params.call_params();\n+        self.stack.values.reserve(call_params.len())?;\n+        self.stack.values.extend(call_params);\n         assert!(\n             self.stack.frames.peek().is_some(),\n             \"a frame must be on the call stack upon resumption\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "53b6c4d6ea9ff54f38f723459c7becef1364296b",
            "date": "2025-01-24T16:59:42Z",
            "author_login": "Robbepop"
          },
          {
            "sha": "407e44ca2743a0f9e73f96fea5a2714f829ff8fa",
            "date": "2025-01-24T16:32:03Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "893ef90af920c7ecfa3845361fe8c4c797955575",
            "date": "2025-01-24T14:19:13Z",
            "author_login": "Robbepop"
          },
          {
            "sha": "ec9be11efa0152ad0998d55653e97a49a1334349",
            "date": "2025-01-24T13:41:59Z",
            "author_login": "Robbepop"
          },
          {
            "sha": "320f556e87159b7e3a4ab57a99db9b80171540d6",
            "date": "2025-01-24T02:20:47Z",
            "author_login": "Robbepop"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-787",
    "description": "Wasmi is an efficient and lightweight WebAssembly interpreter with a focus on constrained and embedded systems. In the WASMI Interpreter, an Out-of-bounds Buffer Write will arise if the host calls or resumes a Wasm function with more parameters than the default limit (128), as it will surpass the stack value. This doesn\u2019t affect calls from Wasm to Wasm, only from host to Wasm. This vulnerability was patched in version 0.31.1.\n",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-21T02:52:23.827",
    "last_modified": "2024-11-21T09:05:51.980",
    "fix_date": "2023-12-01T09:35:28Z"
  },
  "references": [
    {
      "url": "https://github.com/wasmi-labs/wasmi/commit/f7b3200e9f3dc9e2cbca966cb255c228453c792f",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/wasmi-labs/wasmi/releases/tag/v0.31.1",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/wasmi-labs/wasmi/security/advisories/GHSA-75jp-vq8x-h4cq",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/wasmi-labs/wasmi/commit/f7b3200e9f3dc9e2cbca966cb255c228453c792f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/wasmi-labs/wasmi/releases/tag/v0.31.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/wasmi-labs/wasmi/security/advisories/GHSA-75jp-vq8x-h4cq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.881849",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "wasmi",
    "owner": "wasmi-labs",
    "created_at": "2018-01-22T14:41:58Z",
    "updated_at": "2025-01-25T20:03:12Z",
    "pushed_at": "2025-01-24T18:28:53Z",
    "size": 18517,
    "stars": 1662,
    "forks": 293,
    "open_issues": 33,
    "watchers": 1662,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Rust": 2841879,
      "WebAssembly": 44692,
      "C": 33208,
      "CMake": 5725,
      "Shell": 705
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:30:18.707629"
  }
}