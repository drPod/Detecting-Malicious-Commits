{
  "cve_id": "CVE-2024-28237",
  "github_data": {
    "repository": "OctoPrint/OctoPrint",
    "fix_commit": "779894c1bc6478332d14bc9ed1006df1354eb517",
    "related_commits": [
      "779894c1bc6478332d14bc9ed1006df1354eb517",
      "779894c1bc6478332d14bc9ed1006df1354eb517"
    ],
    "patch_url": "https://github.com/OctoPrint/OctoPrint/commit/779894c1bc6478332d14bc9ed1006df1354eb517.patch",
    "fix_commit_details": {
      "sha": "779894c1bc6478332d14bc9ed1006df1354eb517",
      "commit_date": "2024-03-12T16:53:42Z",
      "author": {
        "login": "foosel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "\ud83d\udd12\ufe0f Fix a XSS in the webcam snapshot test",
        "length": 65,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 14,
        "deletions": 17
      },
      "files": [
        {
          "filename": "src/octoprint/plugins/classicwebcam/static/js/classicwebcam_settings.js",
          "status": "modified",
          "additions": 14,
          "deletions": 17,
          "patch": "@@ -193,28 +193,25 @@ $(function () {\n                         return;\n                     }\n \n-                    var content = response.response.content;\n-                    var contentType = response.response.assumed_content_type;\n+                    const content = response.response.content;\n+                    const contentType = response.response.assumed_content_type;\n \n-                    var mimeType = \"image/jpeg\";\n-                    if (contentType) {\n-                        mimeType = contentType.split(\";\")[0];\n-                    }\n-\n-                    var text = gettext(\n+                    const text = gettext(\n                         \"If you see your webcam snapshot picture below, the entered snapshot URL is ok.\"\n                     );\n+                    const mimeType = contentType\n+                        ? contentType.split(\";\")[0]\n+                        : \"image/jpeg\";\n+\n+                    const textElement = $(\"<p></p>\").text(text);\n+                    const imgElement = $(\"<img>\")\n+                        .attr(\"src\", \"data:\" + mimeType + \";base64,\" + content)\n+                        .css(\"border\", \"1px solid black\");\n+                    const message = $(\"<p></p>\").append(textElement).append(imgElement);\n+\n                     showMessageDialog({\n                         title: gettext(\"Snapshot test\"),\n-                        message: $(\n-                            \"<p>\" +\n-                                text +\n-                                '</p><p><img src=\"data:' +\n-                                mimeType +\n-                                \";base64,\" +\n-                                content +\n-                                '\" style=\"border: 1px solid black\" /></p>'\n-                        ),\n+                        message: message,\n                         onclose: function () {\n                             self.testWebcamSnapshotUrlBusy(false);\n                         }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d79a0d20f3f1c7f2edb56dedda3b70267a937e65",
            "date": "2025-01-07T16:26:18Z",
            "author_login": "foosel"
          },
          {
            "sha": "b47f001b81a042069bf8c5f51a28a2642aa02497",
            "date": "2025-01-07T16:17:19Z",
            "author_login": "foosel"
          },
          {
            "sha": "51eae276d8c15208dd9cbe4a9da4b8a688f80a14",
            "date": "2025-01-07T15:55:37Z",
            "author_login": "foosel"
          },
          {
            "sha": "2a2a9921e6b79da220d3e66fde43cacd62a5a4ad",
            "date": "2024-11-06T08:34:42Z",
            "author_login": "foosel"
          },
          {
            "sha": "9701568a6f3dcf356e5e800a49da6ffac128cae5",
            "date": "2024-11-04T09:42:39Z",
            "author_login": "foosel"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.0,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "OctoPrint provides a web interface for controlling consumer 3D printers. OctoPrint versions up until and including 1.9.3 contain a vulnerability that allows malicious admins to configure or talk a victim with administrator rights into configuring a webcam snapshot URL which when tested through the \"Test\" button included in the web interface will execute JavaScript code in the victims browser when attempting to render the snapshot image. An attacker who successfully talked a victim with admin rights into performing a snapshot test with such a crafted URL could use this to retrieve or modify sensitive configuration settings, interrupt prints or otherwise interact with the OctoPrint instance in a malicious way. The vulnerability is patched in version 1.10.0rc3. OctoPrint administrators are strongly advised to thoroughly vet who has admin access to their installation and what settings they modify based on instructions by strangers.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-18T22:15:07.980",
    "last_modified": "2025-01-08T16:22:58.707",
    "fix_date": "2024-03-12T16:53:42Z"
  },
  "references": [
    {
      "url": "https://github.com/OctoPrint/OctoPrint/commit/779894c1bc6478332d14bc9ed1006df1354eb517",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-x7mf-wrh9-r76c",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/commit/779894c1bc6478332d14bc9ed1006df1354eb517",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-x7mf-wrh9-r76c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:38.515208",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "OctoPrint",
    "owner": "OctoPrint",
    "created_at": "2012-12-31T12:20:57Z",
    "updated_at": "2025-01-13T21:11:23Z",
    "pushed_at": "2025-01-09T00:15:57Z",
    "size": 56449,
    "stars": 8399,
    "forks": 1673,
    "open_issues": 271,
    "watchers": 8399,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "devel",
      "maintenance",
      "master",
      "rc/devel",
      "rc/maintenance"
    ],
    "languages": {
      "Python": 3030267,
      "JavaScript": 1731194,
      "G-code": 1651044,
      "Jinja": 479315,
      "HTML": 51198,
      "Less": 49667,
      "CSS": 7021
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T15:41:10.445652"
  }
}