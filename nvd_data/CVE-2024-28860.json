{
  "cve_id": "CVE-2024-28860",
  "github_data": {
    "repository": "cilium/cilium",
    "fix_commit": "311fbce5280491cddceab178d83b06fa23688c72",
    "related_commits": [
      "311fbce5280491cddceab178d83b06fa23688c72",
      "a1742b478306fa256cd27df1039dfae0537b4149",
      "a652c123331852cca90c74202f993d4170fd37fa",
      "311fbce5280491cddceab178d83b06fa23688c72",
      "a1742b478306fa256cd27df1039dfae0537b4149",
      "a652c123331852cca90c74202f993d4170fd37fa"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "311fbce5280491cddceab178d83b06fa23688c72",
      "commit_date": "2024-03-20T16:18:34Z",
      "author": {
        "login": "rgo3",
        "type": "User",
        "stats": {
          "total_commits": 55,
          "average_weekly_commits": 0.11530398322851153,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 40
        }
      },
      "commit_message": {
        "title": "ipsec: fix per-node-pair-key computation",
        "length": 872,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 18,
        "deletions": 3
      },
      "files": [
        {
          "filename": "pkg/datapath/linux/ipsec/ipsec_linux.go",
          "status": "modified",
          "additions": 18,
          "deletions": 3,
          "patch": "@@ -152,14 +152,26 @@ func getGlobalIPsecKey(ip net.IP) *ipSecKey {\n // pre-shared key. The per-node-pair keys are computed with a SHA256 hash of\n // the global key, source node IP, destination node IP appended together.\n func computeNodeIPsecKey(globalKey, srcNodeIP, dstNodeIP, srcBootID, dstBootID []byte) []byte {\n-\tinput := append(globalKey, srcNodeIP...)\n+\tinputLen := len(globalKey) + len(srcNodeIP) + len(dstNodeIP) + len(srcBootID) + len(dstBootID)\n+\tinput := make([]byte, 0, inputLen)\n+\tinput = append(input, globalKey...)\n+\tinput = append(input, srcNodeIP...)\n \tinput = append(input, dstNodeIP...)\n-\tinput = append(input, srcBootID...)\n-\tinput = append(input, dstBootID...)\n+\tinput = append(input, srcBootID[:36]...)\n+\tinput = append(input, dstBootID[:36]...)\n \toutput := sha256.Sum256(input)\n \treturn output[:len(globalKey)]\n }\n \n+// canonicalIP returns a canonical IPv4 address (4 bytes)\n+// in case we were dealing with a v4 mapped V6 address.\n+func canonicalIP(ip net.IP) net.IP {\n+\tif v4 := ip.To4(); v4 != nil {\n+\t\treturn v4\n+\t}\n+\treturn ip\n+}\n+\n // deriveNodeIPsecKey builds a per-node-pair ipSecKey object from the global\n // ipSecKey object.\n func deriveNodeIPsecKey(globalKey *ipSecKey, srcNodeIP, dstNodeIP net.IP, srcBootID, dstBootID string) *ipSecKey {\n@@ -169,6 +181,9 @@ func deriveNodeIPsecKey(globalKey *ipSecKey, srcNodeIP, dstNodeIP net.IP, srcBoo\n \t\tESN:   globalKey.ESN,\n \t}\n \n+\tsrcNodeIP = canonicalIP(srcNodeIP)\n+\tdstNodeIP = canonicalIP(dstNodeIP)\n+\n \tif globalKey.Aead != nil {\n \t\tnodeKey.Aead = &netlink.XfrmStateAlgo{\n \t\t\tName:   globalKey.Aead.Name,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "da69c875bef922c4d0dae571e8639863a94cade6",
            "date": "2025-01-24T16:22:16Z",
            "author_login": "aanm"
          },
          {
            "sha": "441f7e1120452696ede69383f143bad0ed6b5715",
            "date": "2025-01-21T14:25:47Z",
            "author_login": "DamianSawicki"
          },
          {
            "sha": "0c697b08dfc0368b6dd680be2ec40e3193dbf744",
            "date": "2025-01-21T13:53:31Z",
            "author_login": "DamianSawicki"
          },
          {
            "sha": "8ee2092abc5a84664710b20638735623937ce4e3",
            "date": "2025-01-17T10:40:37Z",
            "author_login": "DamianSawicki"
          },
          {
            "sha": "377d5e3a53f5bec780e89d4317eaf8411c9865e0",
            "date": "2024-12-24T09:41:14Z",
            "author_login": "DamianSawicki"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.0,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-326",
    "description": "Cilium is a networking, observability, and security solution with an eBPF-based dataplane. Users of IPsec transparent encryption in Cilium may be vulnerable to cryptographic attacks that render the transparent encryption ineffective. In particular, Cilium is vulnerable to chosen plaintext, key recovery, replay attacks by a man-in-the-middle attacker. These attacks are possible due to an ESP sequence number collision when multiple nodes are configured with the same key. Fixed versions of Cilium use unique keys for each IPsec tunnel established between nodes, resolving all of the above attacks. This vulnerability is fixed in 1.13.13, 1.14.9, and 1.15.3.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-03-27T19:15:48.827",
    "last_modified": "2024-11-21T09:07:03.630",
    "fix_date": "2024-03-20T16:18:34Z"
  },
  "references": [
    {
      "url": "https://docs.cilium.io/en/stable/security/network/encryption-ipsec",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://docs.cilium.io/en/stable/security/network/encryption-ipsec",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.916112",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "cilium",
    "owner": "cilium",
    "created_at": "2015-12-16T12:33:31Z",
    "updated_at": "2025-01-25T23:42:09Z",
    "pushed_at": "2025-01-26T04:55:31Z",
    "size": 377123,
    "stars": 20771,
    "forks": 3045,
    "open_issues": 1053,
    "watchers": 20771,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "feature/main/svc-icmp-response",
      "feature/v1.11/beta-test",
      "feature/v1.11/k8s-ingress"
    ],
    "languages": {
      "Go": 18661209,
      "C": 1830961,
      "Shell": 217043,
      "Makefile": 75607,
      "Dockerfile": 31946,
      "Smarty": 26251,
      "Python": 12413,
      "SmPL": 12369,
      "HTML": 3439,
      "Lua": 2517,
      "TeX": 416
    },
    "commit_activity": {
      "total_commits_last_year": 5370,
      "avg_commits_per_week": 103.26923076923077,
      "days_active_last_year": 337
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:43:33.093873"
  }
}