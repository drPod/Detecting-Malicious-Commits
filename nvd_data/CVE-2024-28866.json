{
  "cve_id": "CVE-2024-28866",
  "github_data": {
    "repository": "gocd/gocd",
    "fix_commit": "388d8893ec4cac51d2b76e923cc9b55c7703e402",
    "related_commits": [
      "388d8893ec4cac51d2b76e923cc9b55c7703e402",
      "388d8893ec4cac51d2b76e923cc9b55c7703e402"
    ],
    "patch_url": "https://github.com/gocd/gocd/commit/388d8893ec4cac51d2b76e923cc9b55c7703e402.patch",
    "fix_commit_details": {
      "sha": "388d8893ec4cac51d2b76e923cc9b55c7703e402",
      "commit_date": "2024-03-17T12:59:52Z",
      "author": {
        "login": "chadlwilson",
        "type": "User",
        "stats": {
          "total_commits": 5215,
          "average_weekly_commits": 8.991379310344827,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 185
        }
      },
      "commit_message": {
        "title": "Clean up loading page",
        "length": 171,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 1147,
        "additions": 417,
        "deletions": 730
      },
      "files": [
        {
          "filename": "base/src/main/java/com/thoughtworks/go/util/SystemEnvironment.java",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -186,7 +186,6 @@ public class SystemEnvironment implements Serializable, ConfigDirProvider {\n \n     private static final GoSystemProperty<Boolean> ENABLE_ANALYTICS_ONLY_FOR_ADMINS = new GoBooleanSystemProperty(\"go.enable.analytics.only.for.admins\", false);\n     public static final GoSystemProperty<Boolean> FAIL_STARTUP_ON_DATA_ERROR = new GoBooleanSystemProperty(\"gocd.fail.startup.on.data.error\", false);\n-    public static final GoSystemProperty<String> LOADING_PAGE = new GoStringSystemProperty(\"loading.page.resource.path\", \"/loading_pages/new.loading.page.html\");\n     public static final GoSystemProperty<Long> NOTIFICATION_PLUGIN_MESSAGES_TTL_IN_MILLIS = new GoLongSystemProperty(\"plugins.notification.message.ttl.millis\", MINUTES.toMillis(2));\n     public static final GoSystemProperty<Boolean> ALLOW_EVERYONE_TO_VIEW_OPERATE_GROUPS_WITH_NO_GROUP_AUTHORIZATION_SETUP = new GoBooleanSystemProperty(\"allow.everyone.to.view.operate.groups.with.no.authorization.setup\", false);\n "
        },
        {
          "filename": "buildSrc/src/main/resources/license-for-javascript-not-in-yarn.json",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -188,5 +188,19 @@\n         \"moduleLicenseUrl\": \"https://spdx.org/licenses/MIT.html\"\n       }\n     ]\n+  },\n+  \"glide.js\": {\n+    \"moduleName\": \"glide.js\",\n+    \"moduleVersion\": \"3.6.1\",\n+    \"moduleUrls\": [\n+      \"https://github.com/glidejs/glide\",\n+      \"https://glidejs.com/\"\n+    ],\n+    \"moduleLicenses\": [\n+      {\n+        \"moduleLicense\": \"MIT\",\n+        \"moduleLicenseUrl\": \"https://spdx.org/licenses/MIT.html\"\n+      }\n+    ]\n   }\n }"
        },
        {
          "filename": "jetty/src/main/java/com/thoughtworks/go/server/GoServerLoadingIndicationHandler.java",
          "status": "modified",
          "additions": 4,
          "deletions": 7,
          "patch": "@@ -17,7 +17,6 @@\n \n import com.thoughtworks.go.util.GoConstants;\n import com.thoughtworks.go.util.SystemEnvironment;\n-import org.apache.commons.io.IOUtils;\n import org.eclipse.jetty.http.HttpHeader;\n import org.eclipse.jetty.http.HttpStatus;\n import org.eclipse.jetty.http.MimeTypes;\n@@ -29,11 +28,11 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n import java.util.List;\n import java.util.Objects;\n \n-import static com.thoughtworks.go.util.SystemEnvironment.LOADING_PAGE;\n import static org.eclipse.jetty.http.MimeTypes.Type.*;\n \n /** When GoCD is starting. This is the only handler that will be active (till the web application context handler is up).\n@@ -106,11 +105,9 @@ private void addHeaders(HttpServletResponse response) {\n \n     }\n \n-    private String loadingPage() {\n-        try {\n-            return IOUtils.toString(Objects.requireNonNull(getClass().getResource(systemEnvironment.get(LOADING_PAGE))), StandardCharsets.UTF_8);\n-        } catch (Exception e) {\n-            return \"<h2>GoCD is starting up. Please wait ....</h2>\";\n+    static String loadingPage() throws IOException {\n+        try (InputStream in = Objects.requireNonNull(GoServerLoadingIndicationHandler.class.getResourceAsStream(\"/loading.page.html\"))) {\n+            return new String(in.readAllBytes(), StandardCharsets.UTF_8);\n         }\n     }\n }"
        },
        {
          "filename": "jetty/src/main/resources/loading.page.html",
          "status": "added",
          "additions": 392,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "jetty/src/main/resources/loading_pages/default.loading.page.html",
          "status": "removed",
          "additions": 0,
          "deletions": 213,
          "patch": "@@ -1,213 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-  ~ Copyright 2024 Thoughtworks, Inc.\n-  ~\n-  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n-  ~ you may not use this file except in compliance with the License.\n-  ~ You may obtain a copy of the License at\n-  ~\n-  ~     http://www.apache.org/licenses/LICENSE-2.0\n-  ~\n-  ~ Unless required by applicable law or agreed to in writing, software\n-  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  ~ See the License for the specific language governing permissions and\n-  ~ limitations under the License.\n-  -->\n-\n-<html>\n-<head>\n-  <title>GoCD server - Loading ...</title>\n-  <meta charset=\"utf-8\">\n-  <style type=\"text/css\">\n-    body {\n-      margin: 0 auto;\n-    }\n-\n-    #logo {\n-      width: 120px;\n-      margin: 2em auto;\n-    }\n-\n-    #logo svg .st0 {\n-      fill: black;\n-    }\n-\n-    .section-by-status {\n-      text-align: center;\n-      font-size: 24px;\n-      font-family: sans-serif, serif;\n-      width: 50%;\n-      margin: 0 auto;\n-    }\n-\n-    .section-by-status a {\n-      text-decoration: none;\n-    }\n-\n-    #update-check-message {\n-      text-align: center;\n-      font-size: small;\n-      margin-top: 2em;\n-    }\n-  </style>\n-</head>\n-\n-<body>\n-\n-<div id=\"logo\">\n-  <!-- Copy of: server/src/main/webapp/WEB-INF/rails/app/assets/images/go_logo.svg -->\n-  <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n-       viewBox=\"32.6 578.5 654.2 324.8\" style=\"enable-background:new 32.6 578.5 654.2 324.8;\" xml:space=\"preserve\">\n-<style type=\"text/css\">\n-\t.st0{fill:#FFFFFF;}\n-</style>\n-<g>\n-\t<path class=\"st0\" d=\"M481.9,848.7c-4.2,11.3-10.2,21-18,29.1s-17.1,14.4-28,18.8c-10.9,4.4-22.9,6.7-36,6.7\n-\t\tc-20.4,0-37.9-5.1-52.4-15.2c-14.5-10.1-24-23.9-28.5-41.5h29.6c2.9,6.4,6.5,11.6,11,15.5c4.4,3.9,9.2,6.8,14.2,8.8s9.8,3.3,14.5,4\n-\t\ts8.5,1,11.7,1c10.9,0,20.1-1.9,27.8-5.8c7.7-3.9,13.9-8.9,18.6-15c4.8-6.1,8.2-13,10.3-20.8c2.1-7.8,3.2-15.5,3.2-23.3v-18\n-\t\tc-6.2,8.4-14.4,15.6-24.5,21.5c-10.1,5.9-21.4,8.8-33.8,8.8s-23.9-2.3-34.3-7s-19.5-11.1-27.1-19.3c-7.7-8.2-13.7-17.8-18-28.6\n-\t\tc-4.3-10.9-6.5-22.5-6.5-35s2.2-24.1,6.5-35.1s10.3-20.5,18-28.6c7.7-8.1,16.7-14.5,27.1-19.3s21.9-7.2,34.3-7.2\n-\t\tc12.7,0,24.2,3.1,34.6,9.3c10.4,6.2,18.6,13.7,24.6,22.3v-27.3h27.3V811C488.2,824.9,486.1,837.4,481.9,848.7z M455.3,708.9\n-\t\tc-3.1-7.8-7.3-14.6-12.7-20.5c-5.3-5.9-11.5-10.5-18.5-13.8s-14.5-5-22.5-5s-15.5,1.7-22.6,5s-13.2,7.9-18.3,13.8\n-\t\tc-5.1,5.9-9.2,12.7-12.2,20.5s-4.5,16.1-4.5,25c0,8.7,1.5,16.9,4.5,24.6c3,7.8,7,14.5,12.2,20.3c5.1,5.8,11.2,10.3,18.3,13.7\n-\t\tc7.1,3.3,14.7,5,22.6,5c8,0,15.5-1.7,22.5-5s13.2-7.9,18.5-13.7s9.5-12.5,12.7-20.3c3.1-7.8,4.7-16,4.7-24.6\n-\t\tC459.9,725,458.4,716.6,455.3,708.9z\"/>\n-\t<path class=\"st0\" d=\"M628.6,650.4c10.5,4.8,19.6,11.3,27.3,19.5s13.7,17.8,18.1,28.8c4.4,11,6.7,22.7,6.7,35.1\n-\t\tc0,12.4-2.2,24-6.7,34.8c-4.4,10.8-10.5,20.2-18.1,28.3c-7.7,8.1-16.8,14.5-27.3,19.1c-10.5,4.6-21.9,7-34.1,7\n-\t\tc-12.2,0-23.5-2.3-34-7s-19.5-11-27.3-19.1c-7.8-8.1-13.9-17.5-18.3-28.3c-4.4-10.8-6.7-22.4-6.7-34.8c0-12.4,2.2-24.1,6.7-35.1\n-\t\tc4.4-11,10.5-20.6,18.3-28.8s16.9-14.7,27.3-19.5c10.4-4.8,21.8-7.2,34-7.2C606.7,643.3,618,645.7,628.6,650.4z M616.9,792.1\n-\t\tc7-3.3,13.2-7.8,18.5-13.5s9.5-12.4,12.5-20.1c3-7.8,4.5-16,4.5-24.6c0-8.9-1.5-17.3-4.5-25.1c-3-7.9-7.2-14.7-12.5-20.5\n-\t\ts-11.5-10.4-18.5-13.8c-7-3.4-14.5-5.2-22.5-5.2s-15.5,1.7-22.5,5.2c-7,3.4-13.1,8-18.3,13.8s-9.3,12.6-12.3,20.5\n-\t\tc-3,7.9-4.5,16.3-4.5,25.1c0,8.7,1.5,16.9,4.5,24.6c3,7.8,7.1,14.5,12.3,20.1c5.2,5.7,11.3,10.2,18.3,13.5s14.5,5,22.5,5\n-\t\tC602.5,797.1,609.9,795.4,616.9,792.1z\"/>\n-</g>\n-<path class=\"st0\" d=\"M61,861.9c-4.6,0-9.2-1.1-13.4-3.4c-9.2-4.9-15-14.5-15-25V720.2c0-15.7,12.7-28.3,28.3-28.3\n-\ts28.3,12.7,28.3,28.3v60.4l90.6-60.4L45.3,630.4c-13-8.7-16.5-26.3-7.9-39.3c8.7-13,26.3-16.5,39.3-7.9l170.1,113.4\n-\tc7.9,5.3,12.6,14.1,12.6,23.6s-4.7,18.3-12.6,23.6l-170,113.4C72,860.3,66.5,861.9,61,861.9z\"/>\n-<g>\n-\t<path class=\"st0\" d=\"M685.7,612.6c-0.8,1.8-1.8,3.3-3.1,4.6c-1.3,1.3-2.8,2.3-4.6,3.1c-1.8,0.8-3.6,1.1-5.6,1.1s-3.9-0.4-5.6-1.1\n-\t\ts-3.3-1.8-4.6-3.1c-1.3-1.3-2.3-2.8-3.1-4.6S658,609,658,607s0.4-3.9,1.1-5.6c0.8-1.7,1.8-3.3,3.1-4.6c1.3-1.3,2.8-2.3,4.6-3.1\n-\t\tc1.8-0.8,3.6-1.1,5.6-1.1s3.9,0.4,5.6,1.1s3.3,1.8,4.6,3.1c1.3,1.3,2.3,2.8,3.1,4.6c0.8,1.7,1.1,3.6,1.1,5.6\n-\t\tC686.8,609,686.4,610.9,685.7,612.6z M683,602.4c-0.6-1.4-1.4-2.7-2.5-3.7c-1-1.1-2.3-1.9-3.7-2.5c-1.4-0.6-2.9-0.9-4.5-0.9\n-\t\ts-3.1,0.3-4.5,0.9c-1.4,0.6-2.6,1.5-3.7,2.5c-1,1.1-1.9,2.3-2.5,3.7s-0.9,3-0.9,4.6c0,1.6,0.3,3.2,0.9,4.6c0.6,1.4,1.4,2.7,2.5,3.8\n-\t\tc1,1.1,2.3,1.9,3.7,2.5c1.4,0.6,2.9,0.9,4.5,0.9s3.1-0.3,4.5-0.9c1.4-0.6,2.6-1.5,3.7-2.5c1-1.1,1.9-2.3,2.5-3.8\n-\t\tc0.6-1.4,0.9-3,0.9-4.6C683.9,605.4,683.6,603.8,683,602.4z M676.2,614.6l-2.9-5.6h-3.9v5.5h-3v-15.9h7.6c1.7,0,3,0.5,4,1.4\n-\t\tc1,0.9,1.5,2.2,1.5,3.8c0,1.1-0.3,2.1-0.9,3c-0.6,0.9-1.4,1.5-2.4,1.8l3.4,5.9h-3.4V614.6z M674.1,606.3c0.6,0,1.2-0.2,1.7-0.5\n-\t\tc0.5-0.4,0.8-1,0.8-1.9c0-0.9-0.2-1.5-0.7-1.9c-0.4-0.4-1-0.5-1.8-0.5h-4.7v4.9L674.1,606.3L674.1,606.3z\"/>\n-</g>\n-</svg>\n-</div>\n-\n-<div class=\"section-by-status\" id=\"status-STARTING\">\n-  GoCD server is starting. Please wait ...\n-</div>\n-\n-<div class=\"section-by-status\" id=\"status-STARTED\" style=\"display: none;\">\n-  GoCD server has started. You will be automatically redirected to it in a few seconds. <a href=\"#\" onclick=\"window.location.reload(true);\">Go directly to the GoCD server.</a>\n-</div>\n-\n-<div class=\"section-by-status\" id=\"status-UNKNOWN\" style=\"display: none;\">\n-  Unable to contact the GoCD server. It might not have started. Please check the server logs.\n-</div>\n-\n-<div id=\"update-check-message\"></div>\n-</body>\n-\n-<script type=\"text/javascript\">\n-  // https://github.com/yanatan16/nanoajax/blob/cc89609d8f4a17a346b27e2f85c18e14de18a76b/nanoajax.min.js\n-  !function(t,e){function n(t){return t&&e.XDomainRequest&&!/MSIE 1/.test(navigator.userAgent)?new XDomainRequest:e.XMLHttpRequest?new XMLHttpRequest:void 0}function o(t,e,n){t[e]=t[e]||n}var r=[\"responseType\",\"withCredentials\",\"timeout\",\"onprogress\"];t.ajax=function(t,a){function s(t,e){return function(){c||(a(void 0===f.status?t:f.status,0===f.status?\"Error\":f.response||f.responseText||e,f),c=!0)}}var u=t.headers||{},i=t.body,d=t.method||(i?\"POST\":\"GET\"),c=!1,f=n(t.cors);f.open(d,t.url,!0);var l=f.onload=s(200);f.onreadystatechange=function(){4===f.readyState&&l()},f.onerror=s(null,\"Error\"),f.ontimeout=s(null,\"Timeout\"),f.onabort=s(null,\"Abort\"),i&&(o(u,\"X-Requested-With\",\"XMLHttpRequest\"),e.FormData&&i instanceof e.FormData||o(u,\"Content-Type\",\"application/x-www-form-urlencoded\"));for(var p,m=0,v=r.length;v>m;m++)p=r[m],void 0!==t[p]&&(f[p]=t[p]);for(var p in u)f.setRequestHeader(p,u[p]);return f.send(i),f},e.nanoajax=t}({},function(){return this}());\n-</script>\n-\n-<script type=\"text/javascript\">\n-\n-  var intervalSizeInSeconds = 2;\n-  var numberOfIntervalsBetweenStatusUpdateCalls = 4;\n-\n-  var hide = function hide(element) {\n-    element.style = \"display: none\";\n-  };\n-\n-  var show = function show(element) {\n-    element.style = \"display: inherit\";\n-  };\n-\n-  var updateMessage = function updateMessage(message) {\n-    document.getElementById(\"update-check-message\").textContent = message;\n-  };\n-\n-  var handleResponse = function handleResponse(status) {\n-    var _iteratorNormalCompletion = true;\n-    var _didIteratorError = false;\n-    var _iteratorError = undefined;\n-\n-    try {\n-      var elements = document.getElementsByClassName(\"section-by-status\");\n-      for (var i = 0; i < elements.length; i++) {\n-        hide(elements[i]);\n-      }\n-    } catch (err) {\n-      _didIteratorError = true;\n-      _iteratorError = err;\n-    } finally {\n-      try {\n-        if (!_iteratorNormalCompletion && _iterator.return) {\n-          _iterator.return();\n-        }\n-      } finally {\n-        if (_didIteratorError) {\n-          throw _iteratorError;\n-        }\n-      }\n-    }\n-\n-    show(document.getElementById(\"status-\" + status));\n-  };\n-\n-  var getStatus = function getStatus(callbackFn) {\n-    window.nanoajax.ajax({\n-      url: '/go/api/v1/health'\n-    }, function (code, responseText) {\n-      var status = \"UNKNOWN\";\n-      if (code === 200) {\n-        status = \"STARTED\";\n-      } else if (code === 503) {\n-        status = \"STARTING\";\n-      }\n-\n-      callbackFn(status);\n-    });\n-  };\n-\n-  var incrementingIndex = function () {\n-    var i = 0;\n-    return function () {\n-      return ++i;\n-    };\n-  }();\n-\n-  var timer = setInterval(function () {\n-    var index = incrementingIndex();\n-    var nextCheck = (numberOfIntervalsBetweenStatusUpdateCalls - index % numberOfIntervalsBetweenStatusUpdateCalls) * intervalSizeInSeconds;\n-\n-    updateMessage(\"(Next check in \" + nextCheck + \" seconds)\");\n-\n-    if (index % numberOfIntervalsBetweenStatusUpdateCalls !== 0) {\n-      return;\n-    }\n-\n-    updateMessage(\"Checking ...\");\n-    getStatus(function (status) {\n-      if (status === \"STARTED\") {\n-        updateMessage(\"\");\n-        clearInterval(timer);\n-        setTimeout(function () {\n-          return window.location.reload(true);\n-        }, 4000);\n-      }\n-      handleResponse(status);\n-    });\n-  }, intervalSizeInSeconds * 1000);\n-\n-</script>\n-</html>"
        },
        {
          "filename": "jetty/src/main/resources/loading_pages/new.loading.page.html",
          "status": "removed",
          "additions": 0,
          "deletions": 484,
          "patch": null
        },
        {
          "filename": "jetty/src/test/java/com/thoughtworks/go/server/GoServerLoadingIndicationHandlerTest.java",
          "status": "modified",
          "additions": 7,
          "deletions": 24,
          "patch": "@@ -105,11 +105,10 @@ void shouldRespondWithMessageInJSONWhenRequestAcceptHeaderIsJSON(String target)\n         @ValueSource(strings = {\"/\", \"/go/pipelines\", \"/this/doesnt/exist\"})\n         void shouldRespondWithMessageInHTMLWhenRequestAcceptHeaderIsHTML(String target) throws Exception {\n             webAppIsStarting();\n-            loadingPageIsSetTo(\"/test.loading.page.html\");\n \n             MockResponse response = request(target, \"text/html\");\n \n-            assertLoadingResponseInHTML(response, \"<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>\");\n+            assertLoadingResponseInHTML(response);\n         }\n \n         @ParameterizedTest\n@@ -129,11 +128,10 @@ void shouldRespondWithMessageInJSONWhenAcceptHeaderContainsJSON(String acceptHea\n         @ValueSource(strings = {\"text/html\", \"something/html\", \"application/json;q=0.5,text/html;q=0.8\", \"something-with-html-in-it\", \"\"})\n         void shouldRespondWithMessageInHTMLWhenAcceptHeaderContainsHTML(String acceptHeaderValue) throws Exception {\n             webAppIsStarting();\n-            loadingPageIsSetTo(\"/test.loading.page.html\");\n \n             MockResponse response = request(\"/go/pipelines\", acceptHeaderValue);\n \n-            assertLoadingResponseInHTML(response, \"<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>\");\n+            assertLoadingResponseInHTML(response);\n         }\n \n         @ParameterizedTest\n@@ -150,21 +148,10 @@ void shouldRespondWithMessageInPlainTextWhenAcceptHeaderIsNotHTMLOrJSON(String a\n         @Test\n         void shouldRespondWithMessageInHTMLWhenAcceptHeaderIsMissing() throws Exception {\n             webAppIsStarting();\n-            loadingPageIsSetTo(\"/test.loading.page.html\");\n \n             MockResponse response = request(\"/go/pipelines\", null);\n \n-            assertLoadingResponseInHTML(response, \"<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>\");\n-        }\n-\n-        @Test\n-        void shouldRespondWithSimpleMessageIfLoadingHTMLFileCannotBeLoaded() throws Exception {\n-            webAppIsStarting();\n-            loadingPageIsSetTo(\"/some-non-existent-file\");\n-\n-            MockResponse response = request(\"/go/pipelines\", \"text/html\");\n-\n-            assertLoadingResponseInHTML(response, \"<h2>GoCD is starting up. Please wait ....</h2>\");\n+            assertLoadingResponseInHTML(response);\n         }\n     }\n \n@@ -186,11 +173,11 @@ private void assertLoadingResponseInJSON(MockResponse response) {\n                 done());\n     }\n \n-    private void assertLoadingResponseInHTML(MockResponse response, String expectedBody) {\n+    private void assertLoadingResponseInHTML(MockResponse response) throws IOException {\n         assertTrue(response.\n                 hasStatus(503).\n                 withContentType(\"text/html\").\n-                withBody(expectedBody).\n+                withBody(GoServerLoadingIndicationHandler.loadingPage()).\n                 withNoCaching().\n                 done());\n     }\n@@ -222,13 +209,9 @@ private void landingPageIsSetTo(String landingPage) {\n         when(systemEnvironment.landingPage()).thenReturn(landingPage);\n     }\n \n-    private void loadingPageIsSetTo(String loadingPageResourcePath) {\n-        when(systemEnvironment.get(SystemEnvironment.LOADING_PAGE)).thenReturn(loadingPageResourcePath);\n-    }\n-\n     private static class MockResponse {\n-        private HttpServletResponse response;\n-        private PrintWriter printWriter;\n+        private final HttpServletResponse response;\n+        private final PrintWriter printWriter;\n \n         MockResponse(HttpServletResponse response, PrintWriter printWriter) {\n             this.response = response;"
        },
        {
          "filename": "jetty/src/test/resources/test.loading.page.html",
          "status": "removed",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -1 +0,0 @@\n-<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>\n\\ No newline at end of file"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 7,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "745b8846335e2d352bd17223122b3585ba63bc18",
            "date": "2025-01-14T11:10:03Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "7e0e0c87401d8ce8d76c651194e9165523416037",
            "date": "2025-01-14T11:09:46Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "99aa6ecc886d9c30f79601e30c06224112da3045",
            "date": "2025-01-14T11:09:29Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "6e87477e6527985cddd634b48bd3505be1079d4d",
            "date": "2025-01-14T11:09:11Z",
            "author_login": "chadlwilson"
          },
          {
            "sha": "90fccf4ddc5b1641b3fcaadd6eaeff34501aefb6",
            "date": "2025-01-14T10:44:32Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "GoCD is a continuous delivery server. GoCD versions from 19.4.0 to 23.5.0 (inclusive) are potentially vulnerable to a reflected cross-site scripting vulnerability on the loading page displayed while GoCD is starting, via abuse of a `redirect_to` query parameter with inadequate validation.\n\nAttackers could theoretically abuse the query parameter to steal session tokens or other values from the user's browser. In practice exploiting this to perform privileged actions is likely rather difficult to exploit because the target user would need to be triggered to open an attacker-crafted link in the period where the server is starting up (but not completely started), requiring chaining with a separate denial-of-service vulnerability. Additionally, GoCD server restarts invalidate earlier session tokens (i.e GoCD does not support persistent sessions), so a stolen session token would be unusable once the server has completed restart, and executed XSS would be done within a logged-out context.\n\nThe issue is fixed in GoCD 24.1.0. As a workaround, it is technically possible in earlier GoCD versions to override the loading page with an earlier version which is not vulnerable, by starting GoCD with the Java system property override as either `-Dloading.page.resource.path=/loading_pages/default.loading.page.html` (simpler early version of loading page without GoCD introduction) or `-Dloading.page.resource.path=/does_not_exist.html` (to display a simple message with no interactivity).",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-05-14T15:14:46.727",
    "last_modified": "2024-11-21T09:07:04.453",
    "fix_date": "2024-03-17T12:59:52Z"
  },
  "references": [
    {
      "url": "https://github.com/gocd/gocd/commit/388d8893ec4cac51d2b76e923cc9b55c7703e402",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/gocd/gocd/releases/tag/24.1.0",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/gocd/gocd/security/advisories/GHSA-q882-q6mm-mgvh",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.gocd.org/releases/#24-1-0",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/gocd/gocd/commit/388d8893ec4cac51d2b76e923cc9b55c7703e402",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/gocd/gocd/releases/tag/24.1.0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/gocd/gocd/security/advisories/GHSA-q882-q6mm-mgvh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.gocd.org/releases/#24-1-0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.884143",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gocd",
    "owner": "gocd",
    "created_at": "2013-12-13T05:26:16Z",
    "updated_at": "2025-01-14T12:47:48Z",
    "pushed_at": "2025-01-14T11:10:10Z",
    "size": 393992,
    "stars": 7159,
    "forks": 972,
    "open_issues": 82,
    "watchers": 7159,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Java": 20251061,
      "TypeScript": 4424594,
      "Groovy": 2080119,
      "JavaScript": 753678,
      "SCSS": 564746,
      "Ruby": 364252,
      "HTML": 253777,
      "XSLT": 202698,
      "NSIS": 24216,
      "Shell": 15469,
      "FreeMarker": 13061,
      "EJS": 1626,
      "CSS": 1575,
      "Batchfile": 474
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 299
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:11:02.445502"
  }
}