{
  "cve_id": "CVE-2024-29032",
  "github_data": {
    "repository": "Qiskit/qiskit-ibm-runtime",
    "fix_commit": "b78fca114133051805d00043a404b25a33835f4d",
    "related_commits": [
      "b78fca114133051805d00043a404b25a33835f4d",
      "b78fca114133051805d00043a404b25a33835f4d"
    ],
    "patch_url": "https://github.com/Qiskit/qiskit-ibm-runtime/commit/b78fca114133051805d00043a404b25a33835f4d.patch",
    "fix_commit_details": {
      "sha": "b78fca114133051805d00043a404b25a33835f4d",
      "commit_date": "2024-03-18T14:41:11Z",
      "author": {
        "login": "jyu00",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-x4x5-jv3x-9c7m",
        "length": 79,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 32,
        "additions": 25,
        "deletions": 7
      },
      "files": [
        {
          "filename": "qiskit_ibm_runtime/utils/json.py",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -373,7 +373,9 @@ def object_hook(self, obj: Any) -> Any:\n                 # to deserialize load qpy circuit and return first instruction object in that circuit.\n                 circuit = _decode_and_deserialize(obj_val, load)[0]\n                 return circuit.data[0][0]\n-            if obj_type == \"settings\":\n+            if obj_type == \"settings\" and obj[\"__module__\"].startswith(\n+                \"qiskit.quantum_info.operators\"\n+            ):\n                 return _deserialize_from_settings(\n                     mod_name=obj[\"__module__\"],\n                     class_name=obj[\"__class__\"],"
        },
        {
          "filename": "test/unit/test_data_serialization.py",
          "status": "modified",
          "additions": 22,
          "deletions": 6,
          "patch": "@@ -27,7 +27,7 @@\n from qiskit.circuit.library import EfficientSU2, CXGate, PhaseGate, U2Gate\n \n import qiskit.quantum_info as qi\n-from qiskit.quantum_info import SparsePauliOp, Pauli, Statevector\n+from qiskit.quantum_info import SparsePauliOp, Pauli\n from qiskit.result import Result, Counts\n from qiskit.primitives.containers.bindings_array import BindingsArray\n from qiskit.primitives.containers.observables_array import ObservablesArray\n@@ -107,17 +107,18 @@ def test_coder_qc(self):\n                     decoded = [decoded]\n                 self.assertTrue(all(isinstance(item, QuantumCircuit) for item in decoded))\n \n-    @skip(\"Skip until qiskit-ibm-provider/736 is merged\")\n     def test_coder_operators(self):\n         \"\"\"Test runtime encoder and decoder for operators.\"\"\"\n \n-        coeff_x = Parameter(\"x\")\n-        coeff_y = coeff_x + 1\n+        # TODO: Re-enable use of Parameter when #1521 is fixed.\n+        # coeff_x = Parameter(\"x\")\n+        # coeff_y = coeff_x + 1\n \n         subtests = (\n             SparsePauliOp(Pauli(\"XYZX\"), coeffs=[2]),\n-            SparsePauliOp(Pauli(\"XYZX\"), coeffs=[coeff_y]),\n+            # SparsePauliOp(Pauli(\"XYZX\"), coeffs=[coeff_y]),\n             SparsePauliOp(Pauli(\"XYZX\"), coeffs=[1 + 2j]),\n+            Pauli(\"XYZ\"),\n         )\n \n         for operator in subtests:\n@@ -224,7 +225,7 @@ def test_decoder_import(self):\n \n         subtests = (\n             SparsePauliOp(Pauli(\"XYZX\"), coeffs=[2]),\n-            Statevector([1, 0]),\n+            Pauli(\"XYZX\"),\n         )\n         for operator in subtests:\n             with self.subTest(operator=operator):\n@@ -531,3 +532,18 @@ def test_primitive_result(self):\n             decoded = json.loads(encoded, cls=RuntimeDecoder)[\"primitive_result\"]\n             self.assertIsInstance(decoded, PrimitiveResult)\n             self.assert_primitive_results_equal(primitive_result, decoded)\n+\n+    def test_unknown_settings(self):\n+        \"\"\"Test settings not on whitelisted path.\"\"\"\n+        random_settings = {\n+            \"__type__\": \"settings\",\n+            \"__module__\": \"subprocess\",\n+            \"__class__\": \"Popen\",\n+            \"__value__\": {\n+                \"args\": [\"echo\", \"hi\"]\n+            }\n+        }\n+        encoded = json.dumps(random_settings)\n+        decoded = json.loads(encoded, cls=RuntimeDecoder)\n+        self.assertIsInstance(decoded, dict)\n+        self.assertDictEqual(decoded, random_settings)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e3e066baec98d6cf10a732b671287e75ccf060a7",
            "date": "2025-01-10T19:39:34Z",
            "author_login": "kt474"
          },
          {
            "sha": "4c3684a2fe6896d549fff0f86a8ac0e9b07557d3",
            "date": "2025-01-09T21:47:56Z",
            "author_login": "1ucian0"
          },
          {
            "sha": "294c40029c5f45ab144a832cb0782bde2be8c936",
            "date": "2025-01-07T20:32:31Z",
            "author_login": "frankharkins"
          },
          {
            "sha": "3f2ed4c8439f5be944adae5a33198174152830c1",
            "date": "2025-01-07T16:29:45Z",
            "author_login": "kt474"
          },
          {
            "sha": "76b5519c5f5cd582f7d4bf9604cf14fe75863f54",
            "date": "2025-01-07T15:35:15Z",
            "author_login": "kt474"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-502",
    "description": "Qiskit IBM Runtime is an environment that streamlines quantum computations and provides optimal implementations of the Qiskit quantum computing SDK. Starting in version 0.1.0 and prior to version 0.21.2, deserializing json data using `qiskit_ibm_runtime.RuntimeDecoder` can lead to arbitrary code execution given a correctly formatted input string. Version 0.21.2 contains a fix for this issue.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-20T21:15:31.370",
    "last_modified": "2024-11-21T09:07:24.850",
    "fix_date": "2024-03-18T14:41:11Z"
  },
  "references": [
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/blob/16e90f475e78a9d2ae77daa139ef750cfa84ca82/qiskit_ibm_runtime/utils/json.py#L156-L159",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/commit/b78fca114133051805d00043a404b25a33835f4d",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/security/advisories/GHSA-x4x5-jv3x-9c7m",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/blob/16e90f475e78a9d2ae77daa139ef750cfa84ca82/qiskit_ibm_runtime/utils/json.py#L156-L159",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/commit/b78fca114133051805d00043a404b25a33835f4d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/Qiskit/qiskit-ibm-runtime/security/advisories/GHSA-x4x5-jv3x-9c7m",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.874517",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "qiskit-ibm-runtime",
    "owner": "Qiskit",
    "created_at": "2021-11-05T15:27:26Z",
    "updated_at": "2025-01-12T02:16:07Z",
    "pushed_at": "2025-01-10T19:39:34Z",
    "size": 23544,
    "stars": 170,
    "forks": 164,
    "open_issues": 74,
    "watchers": 170,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable/0.1",
      "stable/0.2",
      "stable/0.3",
      "stable/0.4",
      "stable/0.5",
      "stable/0.6",
      "stable/0.7",
      "stable/0.8",
      "stable/0.9",
      "stable/0.10",
      "stable/0.11",
      "stable/0.12",
      "stable/0.13",
      "stable/0.14",
      "stable/0.15",
      "stable/0.16",
      "stable/0.17",
      "stable/0.18",
      "stable/0.19",
      "stable/0.20",
      "stable/0.21",
      "stable/0.22",
      "stable/0.23",
      "stable/0.24",
      "stable/0.25",
      "stable/0.26",
      "stable/0.27",
      "stable/0.28",
      "stable/0.29"
    ],
    "languages": {
      "Python": 1601266,
      "Makefile": 1271,
      "Shell": 313
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:55:04.685072"
  }
}