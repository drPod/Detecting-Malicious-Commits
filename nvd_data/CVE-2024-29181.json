{
  "cve_id": "CVE-2024-29181",
  "github_data": {
    "repository": "strapi/strapi",
    "fix_commit": "e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6",
    "related_commits": [
      "e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6",
      "e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6"
    ],
    "patch_url": "https://github.com/strapi/strapi/commit/e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6.patch",
    "fix_commit_details": {
      "sha": "e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6",
      "commit_date": "2024-01-29T14:29:46Z",
      "author": {
        "login": "Bassel17",
        "type": "User",
        "stats": {
          "total_commits": 540,
          "average_weekly_commits": 1.1111111111111112,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 92
        }
      },
      "commit_message": {
        "title": "fix: Check component names against collectionTypeNames",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 60,
        "additions": 55,
        "deletions": 5
      },
      "files": [
        {
          "filename": "packages/core/content-type-builder/admin/src/components/FormModal/FormModal.tsx",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -372,6 +372,8 @@ export const FormModal = () => {\n         modifiedData.category || '',\n         reservedNames,\n         actionType === 'edit',\n+        components,\n+        modifiedData.displayName || '',\n         get(allDataSchema, [...pathToSchema, 'uid'], null)\n         // ctbFormsAPI\n       );\n@@ -394,7 +396,9 @@ export const FormModal = () => {\n         Object.keys(components) as Common.UID.Component[],\n         get(modifiedData, 'componentToCreate.category', ''),\n         reservedNames,\n-        ctbFormsAPI\n+        actionType === 'edit',\n+        components,\n+        modifiedData.componentToCreate.displayName || ''\n       );\n \n       // Check form validity for creating a 'common attribute'\n@@ -447,7 +451,9 @@ export const FormModal = () => {\n           Object.keys(components) as Common.UID.Component[],\n           get(modifiedData, 'componentToCreate.category', ''),\n           reservedNames,\n-          ctbFormsAPI\n+          actionType === 'edit',\n+          components,\n+          modifiedData.componentToCreate.displayName || ''\n         );\n       } else {\n         // The form is valid"
        },
        {
          "filename": "packages/core/content-type-builder/admin/src/components/FormModal/component/createComponentSchema.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -8,7 +8,9 @@ import { createComponentUid } from '../utils/createUid';\n export const createComponentSchema = (\n   usedComponentNames: Array<string>,\n   reservedNames: Array<string>,\n-  category: string\n+  category: string,\n+  takenCollectionNames: Array<string>,\n+  currentCollectionName: string\n ) => {\n   const shape = {\n     displayName: yup\n@@ -23,7 +25,10 @@ export const createComponentSchema = (\n \n           const name = createComponentUid(value, category);\n \n-          return !usedComponentNames.includes(name);\n+          return (\n+            !usedComponentNames.includes(name) &&\n+            !takenCollectionNames.includes(currentCollectionName)\n+          );\n         },\n       })\n       .test({"
        },
        {
          "filename": "packages/core/content-type-builder/admin/src/components/FormModal/forms/forms.ts",
          "status": "modified",
          "additions": 22,
          "deletions": 1,
          "patch": "@@ -12,6 +12,7 @@ import { createContentTypeSchema } from '../contentType/createContentTypeSchema'\n import { dynamiczoneForm } from '../dynamiczoneForm';\n \n import { addItemsToFormSection, FormTypeOptions } from './utils/addItemsToFormSection';\n+import { createComponentCollectionName } from './utils/createCollectionName';\n import { Attribute, getUsedAttributeNames, SchemaData } from './utils/getUsedAttributeNames';\n \n import type { Common } from '@strapi/types';\n@@ -308,13 +309,33 @@ export const forms = {\n         models: any;\n       },\n       isEditing = false,\n+      components: Record<string, any>,\n+      componentDisplayName: string,\n       compoUid: Common.UID.Component | null = null\n     ) {\n       const takenNames = isEditing\n         ? alreadyTakenAttributes.filter((uid: Common.UID.Component) => uid !== compoUid)\n         : alreadyTakenAttributes;\n+      const collectionNames = Object.values(components).map((component: any) => {\n+        return component?.schema?.collectionName;\n+      });\n+\n+      const currentCollectionName = createComponentCollectionName(\n+        componentDisplayName,\n+        componentCategory\n+      );\n \n-      return createComponentSchema(takenNames, reservedNames.models, componentCategory);\n+      const takenCollectionNames = isEditing\n+        ? collectionNames.filter((collectionName) => collectionName !== currentCollectionName)\n+        : collectionNames;\n+\n+      return createComponentSchema(\n+        takenNames,\n+        reservedNames.models,\n+        componentCategory,\n+        takenCollectionNames,\n+        currentCollectionName\n+      );\n     },\n     form: {\n       advanced() {"
        },
        {
          "filename": "packages/core/content-type-builder/admin/src/components/FormModal/forms/utils/createCollectionName.ts",
          "status": "added",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -0,0 +1,10 @@\n+import { snakeCase } from 'lodash/fp';\n+import pluralize from 'pluralize';\n+\n+// TODO: create a utility for this\n+// Duplicate in server/src/services/schema-builder/component-builder.ts\n+const createComponentCollectionName = (name: string, category: string) => {\n+  return `components_${snakeCase(category)}_${pluralize(snakeCase(name))}`;\n+};\n+\n+export { createComponentCollectionName };"
        },
        {
          "filename": "packages/core/content-type-builder/server/src/services/schema-builder/component-builder.ts",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -37,10 +37,18 @@ export default function createComponentBuilder() {\n         filename: `${nameToSlug(infos.displayName)}.json`,\n       });\n \n+      // TODO: create a utility for this\n+      // Duplicate in admin/src/components/FormModal/forms/utils/createCollectionName.ts\n       const collectionName = `components_${nameToCollectionName(\n         infos.category\n       )}_${nameToCollectionName(pluralize(infos.displayName))}`;\n \n+      this.components.forEach((compo: any) => {\n+        if (compo.schema.collectionName === collectionName) {\n+          throw new ApplicationError('component.alreadyExists');\n+        }\n+      });\n+\n       handler\n         .setUID(uid)\n         .set('collectionName', collectionName)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4bb06d54b493ab973659d0200e0e42937988850",
            "date": "2025-01-14T09:07:08Z",
            "author_login": "Bassel17"
          },
          {
            "sha": "0af49f5c5ec496b0fad61ac9bfd4d0127b89d8d3",
            "date": "2025-01-13T11:14:12Z",
            "author_login": "innerdvations"
          },
          {
            "sha": "8bfe95f44c07400c519dbfda132c4c7c43bc1b63",
            "date": "2025-01-13T10:49:55Z",
            "author_login": "butcherZ"
          },
          {
            "sha": "cb666fde52df857549ddd0e7bf1f6888f5d06951",
            "date": "2025-01-10T17:40:46Z",
            "author_login": "laurenskling"
          },
          {
            "sha": "0cf2e91c6514486fe711561b05c89841c9cae37c",
            "date": "2025-01-10T13:19:06Z",
            "author_login": "lucasboilly"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.3,
    "cvss_vector": "CVSS:3.1/AV:A/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-639",
    "description": "Strapi is an open-source content management system. Prior to version 4.19.1, a super admin can create a collection where an item in the collection has an association to another collection. When this happens, another user with Author Role can see the list of associated items they did not create. They should see nothing but their own items they created not all items ever created. Users should upgrade @strapi/plugin-content-manager to version 4.19.1 to receive a patch.",
    "attack_vector": "ADJACENT_NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-06-12T15:15:50.873",
    "last_modified": "2024-11-21T09:07:44.597",
    "fix_date": "2024-01-29T14:29:46Z"
  },
  "references": [
    {
      "url": "https://github.com/strapi/strapi/commit/e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/strapi/strapi/security/advisories/GHSA-6j89-frxc-q26m",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/strapi/strapi/commit/e1dfd4d9f1cab25cf6da3614c1975e4e508e01c6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/strapi/strapi/security/advisories/GHSA-6j89-frxc-q26m",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.366554",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "strapi",
    "owner": "strapi",
    "created_at": "2015-09-30T15:34:48Z",
    "updated_at": "2025-01-14T12:51:30Z",
    "pushed_at": "2025-01-14T09:19:35Z",
    "size": 535646,
    "stars": 64630,
    "forks": 8259,
    "open_issues": 923,
    "watchers": 64630,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "1.6.4",
      "add-description-to-plugins-routes",
      "alpha.4.9",
      "develop"
    ],
    "languages": {
      "TypeScript": 9198115,
      "JavaScript": 1747039,
      "Handlebars": 6769,
      "Shell": 2015,
      "MDX": 1518,
      "HTML": 658
    },
    "commit_activity": {
      "total_commits_last_year": 2153,
      "avg_commits_per_week": 41.40384615384615,
      "days_active_last_year": 247
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:15:49.249274"
  }
}