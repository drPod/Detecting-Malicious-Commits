{
  "cve_id": "CVE-2024-29194",
  "github_data": {
    "repository": "OneUptime/oneuptime",
    "fix_commit": "14016d23d834038dd65d3a96cf71af04b556a32c",
    "related_commits": [
      "14016d23d834038dd65d3a96cf71af04b556a32c",
      "14016d23d834038dd65d3a96cf71af04b556a32c"
    ],
    "patch_url": "https://github.com/OneUptime/oneuptime/commit/14016d23d834038dd65d3a96cf71af04b556a32c.patch",
    "fix_commit_details": {
      "sha": "14016d23d834038dd65d3a96cf71af04b556a32c",
      "commit_date": "2024-03-22T10:28:33Z",
      "author": {
        "login": "simlarsen",
        "type": "User",
        "stats": {
          "total_commits": 8038,
          "average_weekly_commits": 28.104895104895103,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 141
        }
      },
      "commit_message": {
        "title": "Add deletedByUserId property to several models",
        "length": 46,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 174,
        "additions": 134,
        "deletions": 40
      },
      "files": [
        {
          "filename": "CommonServer/Types/Database/ModelPermission.ts",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -39,6 +39,7 @@ import UserType from 'Common/Types/UserType';\n import ColumnBillingAccessControl from 'Common/Types/BaseDatabase/ColumnBillingAccessControl';\n import DatabaseCommonInteractionPropsUtil from 'Common/Types/BaseDatabase/DatabaseCommonInteractionPropsUtil';\n import Includes from 'Common/Types/BaseDatabase/Includes';\n+import UserModel from 'Common/Models/UserModel';\n \n export interface CheckReadPermissionType<TBaseModel extends BaseModel> {\n     query: Query<TBaseModel>;\n@@ -295,6 +296,10 @@ export default class ModelPermission {\n                 props\n             );\n \n+            // add user scope if any\n+\n+            query = await this.addUserScopeToQuery(modelType, query, props);\n+\n             if (!props.isMultiTenantRequest) {\n                 // We will check for this permission in recursive function.\n \n@@ -854,6 +859,26 @@ export default class ModelPermission {\n         return query;\n     }\n \n+    private static async addUserScopeToQuery<TBaseModel extends BaseModel>(\n+        modelType: { new (): TBaseModel },\n+        query: Query<TBaseModel>,\n+        props: DatabaseCommonInteractionProps\n+    ): Promise<Query<TBaseModel>> {\n+        const model: BaseModel = new modelType();\n+\n+        if (model instanceof UserModel) {\n+            if (props.userId) {\n+                (query as any)['_id'] = props.userId;\n+            } else if (!props.isRoot && !props.isMasterAdmin) {\n+                throw new NotAuthorizedException(\n+                    `You do not have permissions to query on - ${model.singularName}.`\n+                );\n+            }\n+        }\n+\n+        return query;\n+    }\n+\n     private static async addTenantScopeToQuery<TBaseModel extends BaseModel>(\n         modelType: { new (): TBaseModel },\n         query: Query<TBaseModel>,"
        },
        {
          "filename": "Model/Models/BillingInvoice.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -192,6 +192,7 @@ export default class BillingInvoice extends BaseModel {\n     @JoinColumn({ name: 'deletedByUserId' })\n     public deletedByUser?: User = undefined;\n \n+\n     @ColumnAccessControl({\n         create: [],\n         read: ["
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyEscalationRule.ts",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -355,6 +355,25 @@ export default class OnCallDutyPolicyEscalationRule extends BaseModel {\n     @JoinColumn({ name: 'deletedByUserId' })\n     public deletedByUser?: User = undefined;\n \n+    @ColumnAccessControl({\n+        create: [],\n+        read: [],\n+        update: [],\n+    })\n+    @TableColumn({\n+        type: TableColumnType.ObjectID,\n+        title: 'Deleted by User ID',\n+        description:\n+            'User ID who deleted this object (if this object was deleted by a User)',\n+    })\n+    @Column({\n+        type: ColumnType.ObjectID,\n+        nullable: true,\n+        transformer: ObjectID.getDatabaseTransformer(),\n+    })\n+    public deletedByUserId?: ObjectID = undefined;\n+\n+\n     @ColumnAccessControl({\n         create: [\n             Permission.ProjectOwner,"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -420,4 +420,23 @@ export default class OnCallDutyPolicyEscalationRuleSchedule extends BaseModel {\n     )\n     @JoinColumn({ name: 'deletedByUserId' })\n     public deletedByUser?: User = undefined;\n+\n+\n+    @ColumnAccessControl({\n+        create: [],\n+        read: [],\n+        update: [],\n+    })\n+    @TableColumn({\n+        type: TableColumnType.ObjectID,\n+        title: 'Deleted by User ID',\n+        description:\n+            'User ID who deleted this object (if this object was deleted by a User)',\n+    })\n+    @Column({\n+        type: ColumnType.ObjectID,\n+        nullable: true,\n+        transformer: ObjectID.getDatabaseTransformer(),\n+    })\n+    public deletedByUserId?: ObjectID = undefined;\n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -418,4 +418,22 @@ export default class OnCallDutyPolicyEscalationRuleTeam extends BaseModel {\n     )\n     @JoinColumn({ name: 'deletedByUserId' })\n     public deletedByUser?: User = undefined;\n+\n+    @ColumnAccessControl({\n+        create: [],\n+        read: [],\n+        update: [],\n+    })\n+    @TableColumn({\n+        type: TableColumnType.ObjectID,\n+        title: 'Deleted by User ID',\n+        description:\n+            'User ID who deleted this object (if this object was deleted by a User)',\n+    })\n+    @Column({\n+        type: ColumnType.ObjectID,\n+        nullable: true,\n+        transformer: ObjectID.getDatabaseTransformer(),\n+    })\n+    public deletedByUserId?: ObjectID = undefined;\n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -417,4 +417,22 @@ export default class OnCallDutyPolicyEscalationRuleUser extends BaseModel {\n     )\n     @JoinColumn({ name: 'deletedByUserId' })\n     public deletedByUser?: User = undefined;\n+\n+    @ColumnAccessControl({\n+        create: [],\n+        read: [],\n+        update: [],\n+    })\n+    @TableColumn({\n+        type: TableColumnType.ObjectID,\n+        title: 'Deleted by User ID',\n+        description:\n+            'User ID who deleted this object (if this object was deleted by a User)',\n+    })\n+    @Column({\n+        type: ColumnType.ObjectID,\n+        nullable: true,\n+        transformer: ObjectID.getDatabaseTransformer(),\n+    })\n+    public deletedByUserId?: ObjectID = undefined;\n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyExecutionLog.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -664,4 +664,6 @@ export default class OnCallDutyPolicyExecutionLog extends BaseModel {\n         default: 1,\n     })\n     public onCallPolicyExecutionRepeatCount?: number = undefined;\n+\n+    \n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
          "status": "modified",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -708,4 +708,22 @@ export default class OnCallDutyPolicyExecutionLogTimeline extends BaseModel {\n         unique: false,\n     })\n     public acknowledgedAt?: Date = undefined;\n+\n+    @ColumnAccessControl({\n+        create: [],\n+        read: [],\n+        update: [],\n+    })\n+    @TableColumn({\n+        type: TableColumnType.ObjectID,\n+        title: 'Deleted by User ID',\n+        description:\n+            'User ID who deleted this object (if this object was deleted by a User)',\n+    })\n+    @Column({\n+        type: ColumnType.ObjectID,\n+        nullable: true,\n+        transformer: ObjectID.getDatabaseTransformer(),\n+    })\n+    public deletedByUserId?: ObjectID = undefined;\n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicySchedule.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -402,4 +402,6 @@ export default class OnCallDutyPolicySchedule extends BaseModel {\n         transformer: ObjectID.getDatabaseTransformer(),\n     })\n     public deletedByUserId?: ObjectID = undefined;\n+\n+    \n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyScheduleLayer.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -556,4 +556,6 @@ export default class OnCallDutyPolicyScheduleLayer extends BaseModel {\n         transformer: RestrictionTimes.getDatabaseTransformer(),\n     })\n     public restrictionTimes?: RestrictionTimes = undefined;\n+\n+    \n }"
        },
        {
          "filename": "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -494,4 +494,5 @@ export default class OnCallDutyPolicyScheduleLayerUser extends BaseModel {\n         transformer: ObjectID.getDatabaseTransformer(),\n     })\n     public userId?: ObjectID = undefined;\n+    \n }"
        },
        {
          "filename": "Model/Models/User.ts",
          "status": "modified",
          "additions": 9,
          "deletions": 40,
          "patch": "@@ -32,11 +32,7 @@ import EnableDocumentation from 'Common/Types/Database/EnableDocumentation';\n @AllowAccessIfSubscriptionIsUnpaid()\n @TableAccessControl({\n     create: [Permission.Public],\n-    read: [\n-        Permission.CurrentUser,\n-        Permission.ProjectAdmin,\n-        Permission.ProjectOwner,\n-    ],\n+    read: [Permission.CurrentUser],\n     delete: [Permission.CurrentUser],\n     update: [Permission.CurrentUser],\n })\n@@ -56,11 +52,7 @@ import EnableDocumentation from 'Common/Types/Database/EnableDocumentation';\n class User extends UserModel {\n     @ColumnAccessControl({\n         create: [Permission.Public],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n         update: [Permission.CurrentUser],\n     })\n     @TableColumn({ type: TableColumnType.Name, canReadOnRelationQuery: true })\n@@ -75,11 +67,7 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [Permission.Public],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })\n@@ -247,11 +235,7 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })\n@@ -276,11 +260,7 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })\n@@ -297,18 +277,15 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })\n     @TableColumn({\n         isDefaultValueColumn: true,\n         required: true,\n         type: TableColumnType.Boolean,\n+        canReadOnRelationQuery: true,\n     })\n     @Column({\n         type: ColumnType.Boolean,\n@@ -424,11 +401,7 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })\n@@ -543,11 +516,7 @@ class User extends UserModel {\n \n     @ColumnAccessControl({\n         create: [],\n-        read: [\n-            Permission.CurrentUser,\n-            Permission.ProjectAdmin,\n-            Permission.ProjectOwner,\n-        ],\n+        read: [Permission.CurrentUser],\n \n         update: [Permission.CurrentUser],\n     })"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aa429abe019156c48cbf896fb5ae57b8d8d68318",
            "date": "2025-01-14T16:01:56Z",
            "author_login": "simlarsen"
          },
          {
            "sha": "203763aa95f865892a0609f8574293cbbeef105c",
            "date": "2025-01-14T15:38:05Z",
            "author_login": "simlarsen"
          },
          {
            "sha": "0b69ae195f55616f7acb0c5f22c63de004c3802b",
            "date": "2025-01-14T14:47:28Z",
            "author_login": "simlarsen"
          },
          {
            "sha": "0756a43d62803ce0e7c93a643c06469e466ad50b",
            "date": "2025-01-14T14:45:32Z",
            "author_login": "simlarsen"
          },
          {
            "sha": "13eb3205a2ed754baf1537843c8e02d19699218a",
            "date": "2025-01-14T14:12:51Z",
            "author_login": "simlarsen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L",
    "cwe_id": "CWE-639",
    "description": "OneUptime is a solution for monitoring and managing online services. The vulnerability lies in the improper validation of client-side stored data within the web application. Specifically, the is_master_admin key, stored in the local storage of the browser, can be manipulated by an attacker. By changing this key from false to true, the application grants administrative privileges to the user, without proper server-side validation.  This has been patched in 7.0.1815.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-24T19:15:07.240",
    "last_modified": "2024-11-21T09:07:46.310",
    "fix_date": "2024-03-22T10:28:33Z"
  },
  "references": [
    {
      "url": "https://github.com/OneUptime/oneuptime/commit/14016d23d834038dd65d3a96cf71af04b556a32c",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/OneUptime/oneuptime/security/advisories/GHSA-246p-xmg8-wmcq",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/OneUptime/oneuptime/commit/14016d23d834038dd65d3a96cf71af04b556a32c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/OneUptime/oneuptime/security/advisories/GHSA-246p-xmg8-wmcq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.896086",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "oneuptime",
    "owner": "OneUptime",
    "created_at": "2021-06-27T13:19:42Z",
    "updated_at": "2025-01-14T16:02:05Z",
    "pushed_at": "2025-01-14T16:05:33Z",
    "size": 472363,
    "stars": 4877,
    "forks": 232,
    "open_issues": 182,
    "watchers": 4877,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 9838697,
      "EJS": 808495,
      "Handlebars": 73295,
      "Shell": 65603,
      "Smarty": 56812,
      "CSS": 49428,
      "JavaScript": 47500,
      "Go": 21438,
      "HTML": 21363,
      "Python": 6203
    },
    "commit_activity": {
      "total_commits_last_year": 3770,
      "avg_commits_per_week": 72.5,
      "days_active_last_year": 297
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T16:58:36.842829"
  }
}