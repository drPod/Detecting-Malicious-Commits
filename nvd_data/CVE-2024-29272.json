{
  "cve_id": "CVE-2024-29272",
  "github_data": {
    "repository": "givanz/VvvebJs",
    "fix_commit": "c6422cfd4d835c2fa6d512645e30015f24538ef0",
    "related_commits": [
      "c6422cfd4d835c2fa6d512645e30015f24538ef0",
      "c6422cfd4d835c2fa6d512645e30015f24538ef0"
    ],
    "patch_url": "https://github.com/givanz/VvvebJs/commit/c6422cfd4d835c2fa6d512645e30015f24538ef0.patch",
    "fix_commit_details": {
      "sha": "c6422cfd4d835c2fa6d512645e30015f24538ef0",
      "commit_date": "2024-03-02T00:15:52Z",
      "author": {
        "login": "givanz",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fixed vulnerabilities reported by Jo\u00e3o Victor https://github.com/givanz/VvvebJs/issues/339",
        "length": 90,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 118,
        "additions": 88,
        "deletions": 30
      },
      "files": [
        {
          "filename": "save.php",
          "status": "modified",
          "additions": 65,
          "deletions": 18,
          "patch": "@@ -18,10 +18,29 @@\n */\n \n define('MAX_FILE_LIMIT', 1024 * 1024 * 2);//2 Megabytes max html file size\n+define('ALLOW_PHP', false);//check if saved html contains php tag and don't save if not allowed\n+define('ALLOWED_OEMBED_DOMAINS', [\n+\t'https://www.youtube.com/', \n+\t'https://www.vimeo.com/', \n+\t'https://www.twitter.com/'\n+]);//load urls only from allowed websites for oembed\n \n function sanitizeFileName($file, $allowedExtension = 'html') {\n+\t$basename = basename($file);\n+\t$disallow = ['.htaccess', 'passwd'];\n+\tif (in_array($basename, $disallow)) {\n+\t\tshowError('Filename not allowed!');\n+\t\treturn '';\n+\t}\n+\t\n \t//sanitize, remove double dot .. and remove get parameters if any\n-\t$file = __DIR__ . '/' . preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));\n+\t$file = preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));\n+\t\n+\tif ($file) {\n+\t\t$file = __DIR__ . DIRECTORY_SEPARATOR . $file;\n+\t} else {\n+\t\treturn '';\n+\t}\n \t\n \t//allow only .html extension\n \tif ($allowedExtension) {\n@@ -35,19 +54,38 @@ function showError($error) {\n \tdie($error);\n }\n \n+function validOembedUrl($url) {\n+\tforeach (ALLOWED_OEMBED_DOMAINS as $domain) {\n+\t\tif (strpos($url, $domain) === 0) {\n+\t\t\treturn true;\n+\t\t}\n+\t}\n+\t\n+\treturn false;\n+}\n+\n $html   = '';\n $file   = '';\n $action = '';\n \n if (isset($_POST['startTemplateUrl']) && !empty($_POST['startTemplateUrl'])) {\n \t$startTemplateUrl = sanitizeFileName($_POST['startTemplateUrl']);\n-\t$html = file_get_contents($startTemplateUrl);\n+\t$html = '';\n+\tif ($startTemplateUrl) {\n+\t\t$html = file_get_contents($startTemplateUrl);\n+\t}\n } else if (isset($_POST['html'])){\n \t$html = substr($_POST['html'], 0, MAX_FILE_LIMIT);\n+\tif (!ALLOW_PHP) {\n+\t\t//if (strpos($html, '<?php') !== false) {\n+\t\tif (preg_match('@<\\?php|<\\? |<\\?=|<\\s*script\\s*language\\s*=\\s*\"\\s*php\\s*\"\\s*>@', $html)) {\n+\t\t\tshowError('PHP not allowed!');\n+\t\t}\n+\t}\n }\n \n if (isset($_POST['file'])) {\n-\t$file = sanitizeFileName($_POST['file'], false);\n+\t$file = sanitizeFileName($_POST['file']);\n }\n \n if (isset($_GET['action'])) {\n@@ -58,7 +96,7 @@ function showError($error) {\n \t//file manager actions, delete and rename\n \tswitch ($action) {\n \t\tcase 'rename':\n-\t\t\t$newfile = sanitizeFileName($_POST['newfile'], false);\n+\t\t\t$newfile = sanitizeFileName($_POST['newfile']);\n \t\t\tif ($file && $newfile) {\n \t\t\t\tif (rename($file, $newfile)) {\n \t\t\t\t\techo \"File '$file' renamed to '$newfile'\";\n@@ -85,28 +123,37 @@ function showError($error) {\n \t\t\tif ($type && $name && $html) {\n \t\t\t\t\n \t\t\t\t$file = sanitizeFileName(\"$type/$name\");\n-\t\t\t\t$dir = dirname($file);\n-\t\t\t\tif (!is_dir($dir)) {\n-\t\t\t\t\techo \"$dir folder does not exist\\n\";\n-\t\t\t\t\tif (mkdir($dir, 0777, true)) {\n-\t\t\t\t\t\techo \"$dir folder was created\\n\";\n+\t\t\t\tif ($file) {\n+\t\t\t\t\t$dir = dirname($file);\n+\t\t\t\t\tif (!is_dir($dir)) {\n+\t\t\t\t\t\techo \"$dir folder does not exist\\n\";\n+\t\t\t\t\t\tif (mkdir($dir, 0777, true)) {\n+\t\t\t\t\t\t\techo \"$dir folder was created\\n\";\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tshowError(\"Error creating folder '$dir'\\n\");\n+\t\t\t\t\t\t}\t\t\t\t\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\tif (file_put_contents($file, $html)) {\n+\t\t\t\t\t\techo \"File saved '$file'\";\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tshowError(\"Error creating folder '$dir'\\n\");\n-\t\t\t\t\t}\t\t\t\t\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tif (file_put_contents($file, $html)) {\n-\t\t\t\t\techo \"File saved '$file'\";\n+\t\t\t\t\t\tshowError(\"Error saving file '$file'\\nPossible causes are missing write permission or incorrect file path!\");\n+\t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tshowError(\"Error saving file '$file'\\nPossible causes are missing write permission or incorrect file path!\");\n+\t\t\t\t\tshowError('Invalid filename!');\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tshowError(\"Missing reusable element data!\\n\");\n \t\t\t}\n \t\tbreak;\n \t\tcase 'oembedProxy':\n-\t\t\theader('Content-Type: application/json');\n-\t\t\techo file_get_contents($_GET['url']);\n+\t\t\t$url = $_GET['url'] ?? '';\n+\t\t\tif (validOembedUrl($url)) {\n+\t\t\t\theader('Content-Type: application/json');\n+\t\t\t\techo file_get_contents($url);\n+\t\t\t} else {\n+\t\t\t\tshowError('Invalid url!');\n+\t\t\t}\n \t\tbreak;\n \t\tdefault:\n \t\t\tshowError(\"Invalid action '$action'!\");"
        },
        {
          "filename": "scan.php",
          "status": "modified",
          "additions": 9,
          "deletions": 3,
          "patch": "@@ -19,13 +19,19 @@\n \n //scan media folder for all files to display in media modal\n \n-if (isset($_POST['mediaPath'])) {\n-\tdefine('UPLOAD_PATH', $_POST['mediaPath']);\n+function sanitizePath($path) {\n+\t//sanitize, remove double dot .. and remove get parameters if any\n+\t$path = preg_replace('@/+@' , DIRECTORY_SEPARATOR, preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $path))));\n+\treturn $path;\n+}\n+\n+if (isset($_POST['mediaPath']) && ($path = sanitizePath(substr($_POST['mediaPath'], 0, 256)))) {\n+\tdefine('UPLOAD_PATH', $path);\n } else {\n \tdefine('UPLOAD_PATH', 'media');\n }\n \n-$scandir = __DIR__ . '/' . UPLOAD_PATH;\n+$scandir = __DIR__ . DIRECTORY_SEPARATOR. UPLOAD_PATH;\n \n // Run the recursive function\n // This function scans the files folder recursively, and builds a large array"
        },
        {
          "filename": "upload.php",
          "status": "modified",
          "additions": 14,
          "deletions": 9,
          "patch": "@@ -22,7 +22,7 @@\n */ \n \n $uploadDenyExtensions  = ['php'];\n-$uploadAllowExtensions = ['ico','jpg','jpeg','png','gif','webp'];\n+$uploadAllowExtensions = ['ico','jpg','jpeg','png','gif','webp','svg'];\n \n function showError($error) {\n \theader($_SERVER['SERVER_PROTOCOL'] . ' 500 Internal Server Error', true, 500);\n@@ -31,36 +31,41 @@ function showError($error) {\n \n function sanitizeFileName($file)\n {\n+\t$disallow = ['.htaccess', 'passwd'];\n+\t$file = str_replace($disallow, '', $file);\n+\t\n \t//sanitize, remove double dot .. and remove get parameters if any\n \t$file = preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));\n+\t\n \treturn $file;\n }\n \n-\n-define('UPLOAD_FOLDER', __DIR__ . '/');\n+define('UPLOAD_FOLDER', __DIR__ . DIRECTORY_SEPARATOR);\n if (isset($_POST['mediaPath'])) {\n-\tdefine('UPLOAD_PATH', sanitizeFileName($_POST['mediaPath']) .'/');\n+\tdefine('UPLOAD_PATH', sanitizeFileName($_POST['mediaPath']) . DIRECTORY_SEPARATOR);\n } else {\n-\tdefine('UPLOAD_PATH', '/');\n+\tdefine('UPLOAD_PATH', DIRECTORY_SEPARATOR);\n+}\n+\n+$fileName  = sanitizeFileName($_FILES['file']['name']);\n+if (!$fileName) {\n+\tshowError('Invalid filename!');\n }\n \n-$fileName  = $_FILES['file']['name'];\n $extension = strtolower(substr($fileName, strrpos($fileName, '.') + 1));\n \n //check if extension is on deny list\n if (in_array($extension, $uploadDenyExtensions)) {\n \tshowError(\"File type $extension not allowed!\");\n }\n \n-/*\n //comment deny code above and uncomment this code to change to a more restrictive allowed list\n // check if extension is on allow list\n if (!in_array($extension, $uploadAllowExtensions)) {\n \tshowError(\"File type $extension not allowed!\");\n }\n-*/\n \n-$destination = UPLOAD_FOLDER . UPLOAD_PATH . '/' . $fileName;\n+$destination = UPLOAD_FOLDER . UPLOAD_PATH . DIRECTORY_SEPARATOR . $fileName;\n move_uploaded_file($_FILES['file']['tmp_name'], $destination);\n \n if (isset($_POST['onlyFilename'])) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "409ede1a720b1d0cd2939f625d0065645db163dc",
            "date": "2024-10-15T22:59:33Z",
            "author_login": "givanz"
          },
          {
            "sha": "1a7e4a7367032ad15acddd33df2e27bff190966c",
            "date": "2024-09-23T09:00:26Z",
            "author_login": "givanz"
          },
          {
            "sha": "838b1555e273a7f9b7303192b7421f5427ef9515",
            "date": "2024-09-23T08:43:58Z",
            "author_login": "eduardokraus"
          },
          {
            "sha": "33e89aefa5e4507d307a702af5c4a66271c95311",
            "date": "2024-09-10T11:07:29Z",
            "author_login": "givanz"
          },
          {
            "sha": "1e8b5c59d213698199fe55aec974bb1da3cff5cd",
            "date": "2024-09-03T11:14:28Z",
            "author_login": "givanz"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-434",
    "description": "Arbitrary File Upload vulnerability in VvvebJs before version 1.7.5, allows unauthenticated remote attackers to execute arbitrary code and obtain sensitive information via the sanitizeFileName parameter in save.php.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-22T04:15:11.663",
    "last_modified": "2024-11-21T09:07:54.027",
    "fix_date": "2024-03-02T00:15:52Z"
  },
  "references": [
    {
      "url": "https://github.com/givanz/VvvebJs/commit/c6422cfd4d835c2fa6d512645e30015f24538ef0",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/givanz/VvvebJs/issues/343",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/givanz/VvvebJs/commit/c6422cfd4d835c2fa6d512645e30015f24538ef0",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/givanz/VvvebJs/issues/343",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.889514",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "VvvebJs",
    "owner": "givanz",
    "created_at": "2017-10-11T15:39:02Z",
    "updated_at": "2025-01-14T10:27:10Z",
    "pushed_at": "2024-10-15T22:59:10Z",
    "size": 22727,
    "stars": 7431,
    "forks": 1671,
    "open_issues": 254,
    "watchers": 7431,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 1368852
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T15:59:03.488079"
  }
}