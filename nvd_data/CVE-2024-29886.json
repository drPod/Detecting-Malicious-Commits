{
  "cve_id": "CVE-2024-29886",
  "github_data": {
    "repository": "serverpod/serverpod",
    "fix_commit": "a78b9e9f1de74d1300633a122b6cc0f064139ad6",
    "related_commits": [
      "a78b9e9f1de74d1300633a122b6cc0f064139ad6",
      "a78b9e9f1de74d1300633a122b6cc0f064139ad6"
    ],
    "patch_url": "https://github.com/serverpod/serverpod/commit/a78b9e9f1de74d1300633a122b6cc0f064139ad6.patch",
    "fix_commit_details": {
      "sha": "a78b9e9f1de74d1300633a122b6cc0f064139ad6",
      "commit_date": "2024-03-11T10:57:30Z",
      "author": {
        "login": "SandPod",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: Update password hash algoritm. (#1993)",
        "length": 43,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 2785,
        "additions": 2375,
        "deletions": 410
      },
      "files": [
        {
          "filename": ".github/workflows/dart-tests.yaml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -87,6 +87,7 @@ jobs:\n             \"packages/serverpod_serialization\",\n             \"tests/serverpod_test_client\",\n             \"tests/serverpod_test_server\",\n+            \"modules/serverpod_auth/serverpod_auth_server\",\n           ]\n     steps:\n       - uses: actions/checkout@v3"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/lib/src/business/config.dart",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -128,6 +128,11 @@ class AuthConfig {\n   /// Default is 8 characters.\n   final int minPasswordLength;\n \n+  /// True if unsecure random number generation is allowed. If set to false, an\n+  /// error will be thrown if the platform does not support secure random number\n+  /// generation. Default is true but will be changed to false in Serverpod 2.0.\n+  final bool allowUnsecureRandom;\n+\n   /// Creates a new Auth configuration. Use the [set] method to replace the\n   /// default settings. Defaults to `config/firebase_service_account_key.json`.\n   AuthConfig({\n@@ -156,5 +161,6 @@ class AuthConfig {\n         'config/firebase_service_account_key.json',\n     this.maxPasswordLength = 128,\n     this.minPasswordLength = 8,\n+    this.allowUnsecureRandom = true,\n   });\n }"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/lib/src/business/email_auth.dart",
          "status": "modified",
          "additions": 267,
          "deletions": 13,
          "patch": "@@ -1,24 +1,136 @@\n-import 'dart:convert';\n import 'dart:math';\n \n-import 'package:crypto/crypto.dart';\n import 'package:email_validator/email_validator.dart';\n import 'package:serverpod/serverpod.dart';\n import 'package:serverpod_auth_server/module.dart';\n+import 'package:serverpod_auth_server/src/business/email_secrets.dart';\n+import 'package:serverpod_auth_server/src/business/password_hash.dart';\n import 'package:serverpod_auth_server/src/business/user_images.dart';\n \n /// Collection of utility methods when working with email authentication.\n class Emails {\n   /// Generates a password hash from a users password and email. This value\n   /// can safely be stored in the database without the risk of exposing\n   /// passwords.\n-  static String generatePasswordHash(String password, String email) {\n-    var salt = Serverpod.instance.getPassword('email_password_salt') ??\n-        'serverpod password salt';\n-    if (AuthConfig.current.extraSaltyHash) {\n-      salt += ':$email';\n+  static String generatePasswordHash(String password) {\n+    return PasswordHash.argon2id(\n+      password,\n+      pepper: EmailSecrets.pepper,\n+      allowUnsecureRandom: AuthConfig.current.allowUnsecureRandom,\n+    );\n+  }\n+\n+  /// Generates a password hash from the password using the provided hash\n+  /// algorithm and validates that they match.\n+  ///\n+  /// If the password hash does not match the provided hash, the\n+  /// [onValidationFailure] function is called with the hash and the password\n+  /// hash as arguments.\n+  ///\n+  /// If an error occurs, the [onError] function is called with the error as\n+  /// argument.\n+  static bool validatePasswordHash(\n+    String password,\n+    String email,\n+    String hash, {\n+    void Function(String hash, String passwordHash)? onValidationFailure,\n+    void Function(Object e)? onError,\n+  }) {\n+    try {\n+      return PasswordHash(\n+        hash,\n+        legacySalt: EmailSecrets.legacySalt,\n+        legacyEmail: AuthConfig.current.extraSaltyHash ? email : null,\n+        pepper: EmailSecrets.pepper,\n+      ).validate(password, onValidationFailure: onValidationFailure);\n+    } catch (e) {\n+      onError?.call(e);\n+      return false;\n+    }\n+  }\n+\n+  /// Migrates an EmailAuth entry if required.\n+  ///\n+  /// Returns the new [EmailAuth] object if a migration was required,\n+  /// null otherwise.\n+  static EmailAuth? tryMigrateAuthEntry({\n+    required String password,\n+    required EmailAuth entry,\n+  }) {\n+    if (!PasswordHash(entry.hash, legacySalt: EmailSecrets.legacySalt)\n+        .shouldUpdateHash()) {\n+      return null;\n+    }\n+\n+    var newHash = PasswordHash.argon2id(\n+      password,\n+      pepper: EmailSecrets.pepper,\n+      allowUnsecureRandom: AuthConfig.current.allowUnsecureRandom,\n+    );\n+\n+    return entry.copyWith(hash: newHash);\n+  }\n+\n+  /// Migrates legacy password hashes to the latest hash algorithm.\n+  ///\n+  ///[batchSize] is the number of entries to migrate in each batch.\n+  ///\n+  /// Returns the number of migrated entries.\n+  static Future<int> migrateLegacyPasswordHashes(\n+    Session session, {\n+    int batchSize = 100,\n+  }) async {\n+    var updatedEntries = 0;\n+    int lastEntryId = 0;\n+\n+    while (true) {\n+      var entries = await EmailAuth.db.find(\n+        session,\n+        where: (t) => t.hash.notLike(r'%$%') & (t.id > lastEntryId),\n+        orderBy: (t) => t.id,\n+        limit: batchSize,\n+      );\n+\n+      if (entries.isEmpty) {\n+        return updatedEntries;\n+      }\n+\n+      lastEntryId = entries.last.id!;\n+\n+      var migratedEntries = entries.where((entry) {\n+        try {\n+          return PasswordHash(\n+            entry.hash,\n+            legacySalt: EmailSecrets.legacySalt,\n+          ).isLegacyHash();\n+        } catch (e) {\n+          session.log(\n+            'Error when checking if hash is legacy: $e',\n+            level: LogLevel.error,\n+          );\n+          return false;\n+        }\n+      }).map((entry) {\n+        return entry.copyWith(\n+          hash: PasswordHash.migratedLegacyToArgon2idHash(\n+            entry.hash,\n+            legacySalt: EmailSecrets.legacySalt,\n+            pepper: EmailSecrets.pepper,\n+            allowUnsecureRandom: AuthConfig.current.allowUnsecureRandom,\n+          ),\n+        );\n+      }).toList();\n+\n+      try {\n+        await EmailAuth.db.update(session, migratedEntries);\n+        updatedEntries += migratedEntries.length;\n+      } catch (e) {\n+        session.log(\n+          'Failed to update migrated entries: $e',\n+          level: LogLevel.error,\n+        );\n+      }\n     }\n-    return sha256.convert(utf8.encode(password + salt)).toString();\n   }\n \n   /// Creates a new user. Either password or hash needs to be provided.\n@@ -58,7 +170,7 @@ class Emails {\n     }\n \n     session.log('creating email auth', level: LogLevel.debug);\n-    hash = hash ?? generatePasswordHash(password!, email);\n+    hash = hash ?? generatePasswordHash(password!);\n     var auth = EmailAuth(\n       userId: userInfo.id!,\n       email: email,\n@@ -91,12 +203,22 @@ class Emails {\n     }\n \n     // Check old password\n-    if (auth.hash != generatePasswordHash(oldPassword, auth.email)) {\n+    if (!validatePasswordHash(\n+      oldPassword,\n+      auth.email,\n+      auth.hash,\n+      onError: (e) {\n+        session.log(\n+          ' - error when validating password hash: $e',\n+          level: LogLevel.error,\n+        );\n+      },\n+    )) {\n       return false;\n     }\n \n     // Update password\n-    auth.hash = generatePasswordHash(newPassword, auth.email);\n+    auth.hash = generatePasswordHash(newPassword);\n     await EmailAuth.db.updateRow(session, auth);\n \n     return true;\n@@ -180,7 +302,7 @@ class Emails {\n \n     if (emailAuth == null) return false;\n \n-    emailAuth.hash = generatePasswordHash(password, emailAuth.email);\n+    emailAuth.hash = generatePasswordHash(password);\n     await EmailAuth.db.updateRow(session, emailAuth);\n \n     return true;\n@@ -226,7 +348,7 @@ class Emails {\n         accountRequest = EmailCreateAccountRequest(\n           userName: userName,\n           email: email,\n-          hash: generatePasswordHash(password, email),\n+          hash: generatePasswordHash(password),\n           verificationCode: _generateVerificationCode(),\n         );\n         await EmailCreateAccountRequest.db.insertRow(session, accountRequest);\n@@ -258,10 +380,142 @@ class Emails {\n     );\n   }\n \n+  /// Authenticates a user with email and password. Returns an\n+  /// [AuthenticationResponse] with the users information.\n+  static Future<AuthenticationResponse> authenticate(\n+    Session session,\n+    String email,\n+    String password,\n+  ) async {\n+    email = email.toLowerCase();\n+    password = password.trim();\n+\n+    session.log('authenticate $email / XXXXXXXX', level: LogLevel.debug);\n+\n+    // Fetch password entry\n+    var entry = await EmailAuth.db.findFirstRow(session, where: (t) {\n+      return t.email.equals(email);\n+    });\n+\n+    if (entry == null) {\n+      return AuthenticationResponse(\n+        success: false,\n+        failReason: AuthenticationFailReason.invalidCredentials,\n+      );\n+    }\n+\n+    if (await _hasTooManyFailedSignIns(session, email)) {\n+      return AuthenticationResponse(\n+        success: false,\n+        failReason: AuthenticationFailReason.tooManyFailedAttempts,\n+      );\n+    }\n+\n+    session.log(' - found entry ', level: LogLevel.debug);\n+\n+    // Check that password is correct\n+    if (!Emails.validatePasswordHash(\n+      password,\n+      email,\n+      entry.hash,\n+      onValidationFailure: (hash, passwordHash) => session.log(\n+        ' - $passwordHash saved: $hash',\n+        level: LogLevel.debug,\n+      ),\n+      onError: (e) {\n+        session.log(\n+          ' - error when validating password hash: $e',\n+          level: LogLevel.error,\n+        );\n+      },\n+    )) {\n+      await _logFailedSignIn(session, email);\n+      return AuthenticationResponse(\n+        success: false,\n+        failReason: AuthenticationFailReason.invalidCredentials,\n+      );\n+    }\n+\n+    session.log(' - password is correct, userId: ${entry.userId})',\n+        level: LogLevel.debug);\n+\n+    var migratedAuth = Emails.tryMigrateAuthEntry(\n+      password: password,\n+      entry: entry,\n+    );\n+\n+    if (migratedAuth != null) {\n+      session.log(' - migrating authentication entry', level: LogLevel.debug);\n+      try {\n+        await EmailAuth.db.updateRow(session, migratedAuth);\n+      } catch (e) {\n+        session.log(\n+          ' - failed to update migrated auth: $e',\n+          level: LogLevel.error,\n+        );\n+      }\n+    }\n+\n+    var userInfo = await Users.findUserByUserId(session, entry.userId);\n+    if (userInfo == null) {\n+      return AuthenticationResponse(\n+        success: false,\n+        failReason: AuthenticationFailReason.invalidCredentials,\n+      );\n+    } else if (userInfo.blocked) {\n+      return AuthenticationResponse(\n+        success: false,\n+        failReason: AuthenticationFailReason.blocked,\n+      );\n+    }\n+\n+    session.log(' - user found', level: LogLevel.debug);\n+\n+    // Sign in user and return user info\n+    var auth = await session.auth.signInUser(\n+      entry.userId,\n+      'email',\n+      scopes: userInfo.scopes,\n+    );\n+\n+    session.log(' - user signed in', level: LogLevel.debug);\n+\n+    return AuthenticationResponse(\n+      success: true,\n+      userInfo: userInfo,\n+      key: auth.key,\n+      keyId: auth.id,\n+    );\n+  }\n+\n   static String _generateVerificationCode() {\n     return Random().nextString(\n       length: 8,\n       chars: '0123456789',\n     );\n   }\n+\n+  static Future<bool> _hasTooManyFailedSignIns(\n+      Session session, String email) async {\n+    var numFailedSignIns = await EmailFailedSignIn.db.count(\n+      session,\n+      where: (t) =>\n+          t.email.equals(email) &\n+          (t.time >\n+              DateTime.now()\n+                  .toUtc()\n+                  .subtract(AuthConfig.current.emailSignInFailureResetTime)),\n+    );\n+    return numFailedSignIns >= AuthConfig.current.maxAllowedEmailSignInAttempts;\n+  }\n+\n+  static Future<void> _logFailedSignIn(Session session, String email) async {\n+    session as MethodCallSession;\n+    var failedSignIn = EmailFailedSignIn(\n+      email: email,\n+      time: DateTime.now(),\n+      ipAddress: session.httpRequest.remoteIpAddress,\n+    );\n+    await EmailFailedSignIn.db.insertRow(session, failedSignIn);\n+  }\n }"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/lib/src/business/email_secrets.dart",
          "status": "added",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -0,0 +1,13 @@\n+import 'package:serverpod/serverpod.dart';\n+\n+/// Secrets used for email authentication.\n+abstract class EmailSecrets {\n+  /// The salt used for hashing legacy passwords.\n+  static String get legacySalt =>\n+      Serverpod.instance.getPassword('email_password_salt') ??\n+      'serverpod password salt';\n+\n+  /// The pepper used for hashing passwords.\n+  static String? get pepper =>\n+      Serverpod.instance.getPassword('emailPasswordPepper');\n+}"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/lib/src/business/password_hash.dart",
          "status": "added",
          "additions": 326,
          "deletions": 0,
          "patch": "@@ -0,0 +1,326 @@\n+import 'dart:convert';\n+import 'dart:math';\n+import 'dart:typed_data';\n+\n+import 'package:crypto/crypto.dart';\n+import 'package:pointycastle/key_derivators/api.dart';\n+import 'package:pointycastle/key_derivators/argon2.dart';\n+import 'package:serverpod_auth_server/module.dart';\n+\n+/// Password hash types.\n+enum _PasswordHashType {\n+  /// A legacy password hash.\n+  legacy,\n+\n+  /// A password hash generated using the Argon2id algorithm.\n+  /// See: https://en.wikipedia.org/wiki/Argon2\n+  argon2id,\n+\n+  /// A password hash generated using the Argon2id algorithm, but expecting the\n+  /// passed in password hash to be a legacy password hash.\n+  ///\n+  /// This is used to migrate legacy password hashes to safer Argon2id\n+  /// password hashes without forcing users to change their passwords.\n+  migratedLegacy;\n+\n+  factory _PasswordHashType.fromPasswordHash(String passwordHash) {\n+    var passwordHashParts = passwordHash.split('\\$');\n+    if (passwordHashParts.length < 2) {\n+      return _PasswordHashType.legacy;\n+    }\n+\n+    var type = passwordHashParts[1];\n+    if (type == _PasswordHashType.argon2id.name) {\n+      return _PasswordHashType.argon2id;\n+    } else if (type == _PasswordHashType.migratedLegacy.name) {\n+      return _PasswordHashType.migratedLegacy;\n+    }\n+\n+    throw ArgumentError('Unknown password hash type: $type', 'passwordHash');\n+  }\n+}\n+\n+/// A class for handling password hashes.\n+class PasswordHash {\n+  // Recommended salt length by ietf.\n+  // https://www.ietf.org/archive/id/draft-ietf-kitten-password-storage-04.html#name-storage-2\n+  static const int _saltLength = 16;\n+  late final _PasswordHashType _type;\n+\n+  late final _PasswordHashGenerator _hashGenerator;\n+  late final String _hash;\n+\n+  /// Creates a new [PasswordHash] from a password hash string used to validate\n+  /// passwords using the same hashing algorithm.\n+  ///\n+  /// Throws an [ArgumentError] if the password hash is not recognized.\n+  PasswordHash(\n+    String passwordHash, {\n+    required String legacySalt,\n+    String? legacyEmail,\n+    String? pepper,\n+  }) {\n+    _type = _PasswordHashType.fromPasswordHash(passwordHash);\n+    var passwordHashParts = passwordHash.split('\\$');\n+\n+    switch (_type) {\n+      case _LegacyPasswordHashGenerator.type:\n+        _hash = passwordHash;\n+        _hashGenerator = _LegacyPasswordHashGenerator(\n+          salt: legacySalt,\n+          email: legacyEmail,\n+        );\n+        break;\n+      case _Argon2idPasswordHashGenerator.type:\n+        var [_, _, salt, hash] = passwordHashParts;\n+        _hash = hash;\n+        _hashGenerator = _Argon2idPasswordHashGenerator(\n+          salt: salt,\n+          pepper: pepper,\n+        );\n+        break;\n+      case _LegacyToArgon2idPasswordHash.type:\n+        var [_, _, salt, hash] = passwordHashParts;\n+        _hash = hash;\n+        _hashGenerator = _LegacyToArgon2idPasswordHash(\n+          legacySalt: legacySalt,\n+          salt: salt,\n+          email: legacyEmail,\n+          pepper: pepper,\n+        );\n+        break;\n+    }\n+  }\n+\n+  /// Returns true if the hash was generated using an outdated algorithm.\n+  bool shouldUpdateHash() {\n+    return [\n+      _LegacyPasswordHashGenerator.type,\n+      _LegacyToArgon2idPasswordHash.type,\n+    ].contains(_type);\n+  }\n+\n+  /// Returns true if the hash was generated using the legacy algorithm.\n+  bool isLegacyHash() {\n+    return _type == _LegacyPasswordHashGenerator.type;\n+  }\n+\n+  /// Checks if a password matches the hash.\n+  ///\n+  /// If the password does not match the hash, the [onValidationFailure] function\n+  /// will be called with the hash and the password hash as arguments.\n+  bool validate(\n+    String password, {\n+    void Function(String hash, String passwordHash)? onValidationFailure,\n+  }) {\n+    var passwordHash = _hashGenerator.generateHash(password);\n+\n+    if (_hash != passwordHash) {\n+      onValidationFailure?.call(passwordHash, _hash);\n+      return false;\n+    }\n+\n+    return true;\n+  }\n+\n+  /// Creates a new password hash using the legacy algorithm.\n+  ///\n+  /// If the [email] parameter is provided, the email will be used as an\n+  /// additional salt for the password hash.\n+  static String legacyHash(String password, String salt, {String? email}) {\n+    return _LegacyPasswordHashGenerator(salt: salt, email: email)\n+        .generatePasswordHash(password);\n+  }\n+\n+  /// Creates an Argon2id password hash expecting the passed in password hash to\n+  /// be a legacy password hash.\n+  ///\n+  /// This is used to migrate legacy password hashes to Argon2id password\n+  /// hashes.\n+  ///\n+  /// The [legacySalt] parameter is the salt used in the legacy password hash.\n+  ///\n+  /// The [salt] parameter should only be used in testing and development.\n+  /// If omitted a random salt will be generated which is the recommended way\n+  /// to use this function in production.\n+  ///\n+  /// The [allowUnsecureRandom] parameter can be used to allow unsecure random\n+  /// number generation. If set to false (default value), an error will be thrown\n+  /// if the platform does not support secure random number generation.\n+  static String migratedLegacyToArgon2idHash(\n+    String legacyHash, {\n+    required String legacySalt,\n+    String? salt,\n+    String? pepper,\n+    bool allowUnsecureRandom = false,\n+  }) {\n+    var encodedSalt = _generateSalt(\n+      salt: salt,\n+      allowUnsecureRandom: allowUnsecureRandom,\n+    );\n+\n+    return _LegacyToArgon2idPasswordHash(\n+      legacySalt: legacySalt,\n+      salt: encodedSalt,\n+      pepper: pepper,\n+    ).generatePasswordHash(legacyHash);\n+  }\n+\n+  /// Creates a new password hash using the Argon2id algorithm.\n+  ///\n+  /// The [salt] parameter should only be used in testing and development.\n+  /// If omitted a random salt will be generated which is the recommended way\n+  /// to use this function in production.\n+  ///\n+  /// The [allowUnsecureRandom] parameter can be used to allow unsecure random\n+  /// number generation. If set to false (default value), an error will be thrown\n+  /// if the platform does not support secure random number generation.\n+  static String argon2id(\n+    String password, {\n+    String? salt,\n+    String? pepper,\n+    bool allowUnsecureRandom = false,\n+  }) {\n+    var encodedSalt = _generateSalt(\n+      salt: salt,\n+      allowUnsecureRandom: allowUnsecureRandom,\n+    );\n+\n+    return _Argon2idPasswordHashGenerator(\n+      salt: encodedSalt,\n+      pepper: pepper,\n+    ).generatePasswordHash(password);\n+  }\n+\n+  static String _generateSalt({\n+    required bool allowUnsecureRandom,\n+    String? salt,\n+  }) {\n+    if (salt != null) {\n+      return const Base64Encoder().convert(salt.codeUnits);\n+    }\n+\n+    try {\n+      return Random.secure().nextString(\n+        length: _saltLength,\n+      );\n+    } on UnsupportedError {\n+      if (!allowUnsecureRandom) {\n+        rethrow;\n+      }\n+    }\n+\n+    return Random().nextString(\n+      length: _saltLength,\n+    );\n+  }\n+}\n+\n+/// Interface for password hash generators.\n+abstract interface class _PasswordHashGenerator {\n+  /// Generates a hash from a password.\n+  String generateHash(String password);\n+}\n+\n+/// A password hash generator for legacy password hashes.\n+class _LegacyPasswordHashGenerator implements _PasswordHashGenerator {\n+  /// Creates a new legacy password hash generator from a hash string.\n+  final String _salt;\n+  final String? _email;\n+\n+  _LegacyPasswordHashGenerator({required String salt, String? email})\n+      : _salt = salt,\n+        _email = email;\n+\n+  String generatePasswordHash(String password) {\n+    return generateHash(password);\n+  }\n+\n+  @override\n+  String generateHash(String password) {\n+    var salt = _salt;\n+    if (_email != null) {\n+      salt += ':$_email';\n+    }\n+\n+    return sha256.convert(utf8.encode(password + salt)).toString();\n+  }\n+\n+  static const _PasswordHashType type = _PasswordHashType.legacy;\n+}\n+\n+/// A password hash generator for Argon2id password hashes.\n+class _Argon2idPasswordHashGenerator implements _PasswordHashGenerator {\n+  final String _salt;\n+  final String? _pepper;\n+\n+  _Argon2idPasswordHashGenerator({required String salt, String? pepper})\n+      : _salt = salt,\n+        _pepper = pepper;\n+\n+  String generatePasswordHash(String password) {\n+    var hash = generateHash(password);\n+    return '\\$${type.name}\\$$_salt\\$$hash';\n+  }\n+\n+  @override\n+  String generateHash(String password) {\n+    var parameters = Argon2Parameters(\n+      Argon2Parameters.ARGON2_id,\n+      // Required cast because of a breaking change in dart 3.2: https://github.com/dart-lang/sdk/issues/52801\n+      // ignore: unnecessary_cast\n+      utf8.encode(_salt) as Uint8List,\n+      desiredKeyLength: 256,\n+      // Required cast because of a breaking change in dart 3.2: https://github.com/dart-lang/sdk/issues/52801\n+      // ignore: unnecessary_cast\n+      secret: _pepper != null ? utf8.encode(_pepper!) as Uint8List : null,\n+    );\n+\n+    var generator = Argon2BytesGenerator()..init(parameters);\n+    // Required cast because of a breaking change in dart 3.2: https://github.com/dart-lang/sdk/issues/52801\n+    // ignore: unnecessary_cast\n+    var hashBytes = generator.process(utf8.encode(password) as Uint8List);\n+\n+    return const Base64Encoder().convert(hashBytes);\n+  }\n+\n+  static const _PasswordHashType type = _PasswordHashType.argon2id;\n+}\n+\n+class _LegacyToArgon2idPasswordHash implements _PasswordHashGenerator {\n+  final String _legacySalt;\n+  final String _salt;\n+  final String? _email;\n+  final String? _pepper;\n+\n+  _LegacyToArgon2idPasswordHash({\n+    required String legacySalt,\n+    required String salt,\n+    String? email,\n+    String? pepper,\n+  })  : _legacySalt = legacySalt,\n+        _salt = salt,\n+        _email = email,\n+        _pepper = pepper;\n+\n+  String generatePasswordHash(String legacyHash) {\n+    var hash = _Argon2idPasswordHashGenerator(\n+      salt: _salt,\n+      pepper: _pepper,\n+    ).generateHash(legacyHash);\n+    return '\\$${type.name}\\$$_salt\\$$hash';\n+  }\n+\n+  @override\n+  String generateHash(String password) {\n+    var legacyHash =\n+        _LegacyPasswordHashGenerator(salt: _legacySalt, email: _email)\n+            .generateHash(password);\n+    return _Argon2idPasswordHashGenerator(\n+      salt: _salt,\n+      pepper: _pepper,\n+    ).generateHash(legacyHash);\n+  }\n+\n+  static const _PasswordHashType type = _PasswordHashType.migratedLegacy;\n+}"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/lib/src/endpoints/email_endpoint.dart",
          "status": "modified",
          "additions": 1,
          "deletions": 94,
          "patch": "@@ -16,100 +16,7 @@ class EmailEndpoint extends Endpoint {\n     String email,\n     String password,\n   ) async {\n-    email = email.toLowerCase();\n-    password = password.trim();\n-\n-    session.log('authenticate $email / XXXXXXXX', level: LogLevel.debug);\n-\n-    // Fetch password entry\n-    var entry = await EmailAuth.db.findFirstRow(session, where: (t) {\n-      return t.email.equals(email);\n-    });\n-\n-    if (entry == null) {\n-      return AuthenticationResponse(\n-        success: false,\n-        failReason: AuthenticationFailReason.invalidCredentials,\n-      );\n-    }\n-\n-    if (await _hasTooManyFailedSignIns(session, email)) {\n-      return AuthenticationResponse(\n-        success: false,\n-        failReason: AuthenticationFailReason.tooManyFailedAttempts,\n-      );\n-    }\n-\n-    session.log(' - found entry ', level: LogLevel.debug);\n-\n-    // Check that password is correct\n-    if (entry.hash != Emails.generatePasswordHash(password, email)) {\n-      session.log(\n-          ' - ${Emails.generatePasswordHash(password, email)} saved: ${entry.hash}',\n-          level: LogLevel.debug);\n-      await _logFailedSignIn(session, email);\n-      return AuthenticationResponse(\n-        success: false,\n-        failReason: AuthenticationFailReason.invalidCredentials,\n-      );\n-    }\n-\n-    session.log(' - password is correct, userId: ${entry.userId})',\n-        level: LogLevel.debug);\n-\n-    var userInfo = await Users.findUserByUserId(session, entry.userId);\n-    if (userInfo == null) {\n-      return AuthenticationResponse(\n-        success: false,\n-        failReason: AuthenticationFailReason.invalidCredentials,\n-      );\n-    } else if (userInfo.blocked) {\n-      return AuthenticationResponse(\n-        success: false,\n-        failReason: AuthenticationFailReason.blocked,\n-      );\n-    }\n-\n-    session.log(' - user found', level: LogLevel.debug);\n-\n-    // Sign in user and return user info\n-    var auth = await session.auth.signInUser(\n-      entry.userId,\n-      'email',\n-      scopes: userInfo.scopes,\n-    );\n-\n-    session.log(' - user signed in', level: LogLevel.debug);\n-\n-    return AuthenticationResponse(\n-      success: true,\n-      userInfo: userInfo,\n-      key: auth.key,\n-      keyId: auth.id,\n-    );\n-  }\n-\n-  Future<void> _logFailedSignIn(Session session, String email) async {\n-    session as MethodCallSession;\n-    var failedSignIn = EmailFailedSignIn(\n-      email: email,\n-      time: DateTime.now(),\n-      ipAddress: session.httpRequest.remoteIpAddress,\n-    );\n-    await EmailFailedSignIn.db.insertRow(session, failedSignIn);\n-  }\n-\n-  Future<bool> _hasTooManyFailedSignIns(Session session, String email) async {\n-    var numFailedSignIns = await EmailFailedSignIn.db.count(\n-      session,\n-      where: (t) =>\n-          t.email.equals(email) &\n-          (t.time >\n-              DateTime.now()\n-                  .toUtc()\n-                  .subtract(AuthConfig.current.emailSignInFailureResetTime)),\n-    );\n-    return numFailedSignIns >= AuthConfig.current.maxAllowedEmailSignInAttempts;\n+    return Emails.authenticate(session, email, password);\n   }\n \n   /// Changes a users password."
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/pubspec.yaml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -20,9 +20,11 @@ dependencies:\n   http: \">=0.13.0 <2.0.0\"\n   image: ^4.0.15\n   jose: ^0.3.3\n+  pointycastle: ^3.7.4\n \n dev_dependencies:\n   serverpod_lints: 1.2.5\n+  test: ^1.24.2\n \n dependency_overrides:\n   serverpod:"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/test/password_hash/argon2id_password_hash_test.dart",
          "status": "added",
          "additions": 228,
          "deletions": 0,
          "patch": "@@ -0,0 +1,228 @@\n+import 'dart:convert';\n+\n+import 'package:serverpod_auth_server/src/business/password_hash.dart';\n+import 'package:test/test.dart';\n+\n+void main() {\n+  group('Given password and fixed salt', () {\n+    group('when generating password hash', () {\n+      test('then hash has 4 sections split by \\$.', () {\n+        var passwordHash = PasswordHash.argon2id('hunter2', salt: 'saltySalt');\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts, hasLength(4));\n+      });\n+\n+      test('then second section contains algorithm name.', () {\n+        var passwordHash = PasswordHash.argon2id('hunter2', salt: 'saltySalt');\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[1], 'argon2id');\n+      });\n+\n+      test('then third section contains encoded salt.', () {\n+        var salt = 'saltySalt';\n+\n+        var passwordHash = PasswordHash.argon2id('hunter2', salt: salt);\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[2], const Base64Encoder().convert(salt.codeUnits));\n+      });\n+\n+      test('then fourth section contains hash.', () {\n+        var expectedHash =\n+            'XE1myFwU/BfI2wTVT3Idp2htwbXRLkY3L5ysvmAR+iJJVfHMJEMFP7eFrRwMvsP0dygxYopuCiDGNHhJaIuE0Bm6SIIAJt/LoktWA+JzMdVAQQDF08anztJL8db3nIjqiRr7fTsEnH88zIMx0z+6X22ZIJoKHQ37wI7jTVhPgtEX8OSubOHA8JSKaGko9GoXa1IEO4PXZ/OWoCf+PELDySMIK5UvakJg4Rx6gjuQQJ612VfB0lI+Dw//h5mdbypxIQWBUp+cc8VYwOtKod2BOhEzn/h0R158/n9NaW4Zxz7mteja3K2Kl/fZwGpronzItYZMbw5j7pS96r/Jf227IQ==';\n+\n+        var passwordHash = PasswordHash.argon2id('hunter2', salt: 'saltySalt');\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[3], expectedHash);\n+      });\n+    });\n+\n+    group('when generating password hash with and without pepper', () {\n+      var password = 'hunter2';\n+      var salt = 'saltySalt';\n+      var pepper = 'pepper';\n+\n+      var withoutPepper = PasswordHash.argon2id(password, salt: salt);\n+      var withPepper =\n+          PasswordHash.argon2id(password, salt: salt, pepper: pepper);\n+      test('then salt is same.', () {\n+        var withoutPepperSalt = withoutPepper.split('\\$')[2];\n+        var withPepperSalt = withPepper.split('\\$')[2];\n+        expect(withoutPepperSalt, withPepperSalt);\n+      });\n+\n+      test('then hashes are different.', () {\n+        var withoutPepperHash = withoutPepper.split('\\$')[3];\n+        var withPepperHash = withPepper.split('\\$')[3];\n+        expect(withoutPepperHash, isNot(withPepperHash));\n+      });\n+    });\n+  });\n+\n+  group('Given password', () {\n+    group('when generating password hash multiple times', () {\n+      var password = 'hunter2';\n+      var firstPasswordHash = PasswordHash.argon2id(password);\n+      var secondPasswordHash = PasswordHash.argon2id(password);\n+      test('then unique salt is generated.', () {\n+        var firstSalt = firstPasswordHash.split('\\$')[2];\n+        var secondSalt = secondPasswordHash.split('\\$')[2];\n+        expect(firstSalt, isNot(secondSalt));\n+      });\n+\n+      test('then unique hash is generated.', () {\n+        var firstHash = firstPasswordHash.split('\\$')[3];\n+        var secondHash = secondPasswordHash.split('\\$')[3];\n+        expect(firstHash, isNot(secondHash));\n+      });\n+    });\n+  });\n+\n+  group('Given password hash', () {\n+    test('when checking if hash should be updated then no update is needed.',\n+        () {\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id('hunter2'),\n+        legacySalt: 'saltySalt',\n+      );\n+\n+      expect(passwordHash.shouldUpdateHash(), isFalse);\n+    });\n+\n+    test('when checking if hash is legacy hash then method returns false.', () {\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id('hunter2'),\n+        legacySalt: 'saltySalt',\n+      );\n+\n+      expect(passwordHash.isLegacyHash(), isFalse);\n+    });\n+\n+    test('when validating with correct password then validator returns true',\n+        () {\n+      var salt = 'saltySalt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: salt),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test(\n+        'when validating with correct password but different legacy salt then validator returns true',\n+        () {\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: 'saltySalt'),\n+        legacySalt: 'differentSalt' /* field is ignored */,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test('when validating with incorrect password then validator returns false',\n+        () {\n+      var salt = 'saltySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id('hunter2', salt: salt),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.validate('chaser1'), isFalse);\n+    });\n+\n+    test('when validating with modified salt then validator returns false', () {\n+      var password = 'hunter2';\n+      var originalPasswordHash =\n+          PasswordHash.argon2id(password, salt: 'original salt');\n+\n+      // Replace the salt in the password hash with a different one\n+      var parts = originalPasswordHash.split('\\$');\n+      parts[2] = 'modified salt';\n+      var modifiedPasswordHash = parts.join('\\$');\n+\n+      var passwordHash = PasswordHash(\n+        modifiedPasswordHash,\n+        legacySalt: 'original salt' /* field is ignored */,\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with valid pepper then validator returns true.', () {\n+      var salt = 'saltySalt';\n+      var password = 'hunter2';\n+      var pepper = 'pepper';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: salt, pepper: pepper),\n+        legacySalt: salt,\n+        pepper: pepper,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test('when validating with invalid pepper then validator returns false.',\n+        () {\n+      var salt = 'saltySalt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: salt, pepper: 'firstPepper'),\n+        legacySalt: salt,\n+        pepper: 'differentPepper',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with missing pepper then validator returns false.',\n+        () {\n+      var salt = 'saltySalt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: salt, pepper: 'pepper'),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with added pepper then validator returns false.', () {\n+      var salt = 'saltySalt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.argon2id(password, salt: salt),\n+        legacySalt: salt,\n+        pepper: 'pepper',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+  });\n+\n+  group('Given salt that contains \\$', () {\n+    test(\n+        'when generating password hash then hash still only has 4 parts split by \\$.',\n+        () {\n+      var password = 'hunter2';\n+      var salt = 'salty\\$salt';\n+\n+      var passwordHash = PasswordHash.argon2id(password, salt: salt);\n+      var parts = passwordHash.split('\\$');\n+\n+      expect(parts, hasLength(4));\n+    });\n+  });\n+}"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/test/password_hash/legacy_password_hash_test.dart",
          "status": "added",
          "additions": 173,
          "deletions": 0,
          "patch": "@@ -0,0 +1,173 @@\n+import 'package:serverpod_auth_server/src/business/password_hash.dart';\n+import 'package:test/test.dart';\n+\n+void main() {\n+  group('Given password', () {\n+    test('when generating hash then hash matches regression value', () {\n+      // This regression hash value was derived from the old serverpod hash\n+      // generation algorithm.\n+      var expectedHash =\n+          '0713234b3cb6a6f98f6978f17a55a54578c580698dc1d56371502be6abb457eb';\n+\n+      var actualHash =\n+          PasswordHash.legacyHash('hunter2', 'serverpod password salt');\n+\n+      expect(actualHash, expectedHash);\n+    });\n+\n+    test('when validating with correct password then validator returns true',\n+        () {\n+      var salt = 'serverpod password salt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(password, salt),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test('when validating with incorrect password then validator returns false',\n+        () {\n+      var salt = 'serverpod password salt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash('hunter2', salt),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.validate('chaser1'), isFalse);\n+    });\n+\n+    test('when validating with different salts then validator returns false',\n+        () {\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(password, 'first salt'),\n+        legacySalt: 'second salt',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+  });\n+\n+  group('Given password and extra salt email', () {\n+    test(\n+        'when generating hash with email provided then result matches regression value',\n+        () {\n+      // This regression hash value was derived from the old serverpod hash\n+      // generation algorithm.\n+      var expectedHash =\n+          '4005303e6e1effd8bc7293bc3e69fe3a480a88249453aef7f58fdcf264419147';\n+\n+      var actualHash = PasswordHash.legacyHash(\n+        'hunter2',\n+        'serverpod password salt',\n+        email: 'test@serverpod.dev',\n+      );\n+\n+      expect(actualHash, expectedHash);\n+    });\n+  });\n+\n+  group('Given password hash', () {\n+    test('when checking if hash should be updated then no update is needed.',\n+        () {\n+      var salt = 'saltySalt';\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          'hunter2',\n+          salt,\n+        ),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.shouldUpdateHash(), isTrue);\n+    });\n+\n+    test('when checking if hash is legacy hash then method returns true.', () {\n+      var salt = 'saltySalt';\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          'hunter2',\n+          salt,\n+        ),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.isLegacyHash(), isTrue);\n+    });\n+\n+    test('when matching with correct password then it evaluates to true', () {\n+      var salt = 'serverpod password salt';\n+      var password = 'hunter2';\n+      var email = 'test@serverpod.dev';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          password,\n+          salt,\n+          email: email,\n+        ),\n+        legacySalt: salt,\n+        legacyEmail: email,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test('when matching with incorrect password then it evaluates to false',\n+        () {\n+      var salt = 'serverpod password salt';\n+      var email = 'test@serverpod.dev';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          'hunter2',\n+          salt,\n+          email: email,\n+        ),\n+        legacySalt: salt,\n+        legacyEmail: email,\n+      );\n+\n+      expect(passwordHash.validate('chaser1'), isFalse);\n+    });\n+\n+    test('when matching with incorrect salt then it evaluates to false', () {\n+      var password = 'hunter2';\n+      var email = 'test@serverpod.dev';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          password,\n+          'first salt',\n+          email: email,\n+        ),\n+        legacySalt: 'second salt',\n+        legacyEmail: email,\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when matching with incorrect email then it evaluates to false', () {\n+      var salt = 'serverpod password salt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.legacyHash(\n+          password,\n+          salt,\n+          email: 'first@serverpod.dev',\n+        ),\n+        legacySalt: salt,\n+        legacyEmail: 'second@serverpod.dev',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+  });\n+}"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/test/password_hash/legacy_to_argon2id_hash_test.dart",
          "status": "added",
          "additions": 337,
          "deletions": 0,
          "patch": "@@ -0,0 +1,337 @@\n+import 'dart:convert';\n+\n+import 'package:serverpod_auth_server/src/business/password_hash.dart';\n+import 'package:test/test.dart';\n+\n+void main() {\n+  test(\n+      'Given a hash from the legacy hash used as password for argon2id hash when generating hash using same salt and base password then same hash is produced',\n+      () {\n+    var password = 'hunter2';\n+    var legacySalt = 'legacySalt';\n+    var salt = 'saltySalt';\n+\n+    var legacyHash = PasswordHash.legacyHash(password, legacySalt);\n+    var argon2idPasswordHashFromLegacy =\n+        PasswordHash.argon2id(legacyHash, salt: salt);\n+    var expectedHash = argon2idPasswordHashFromLegacy.split('\\$')[3];\n+\n+    var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+      legacyHash,\n+      legacySalt: legacySalt,\n+      salt: salt,\n+    );\n+\n+    var actualHash = passwordHash.split('\\$')[3];\n+\n+    expect(actualHash, expectedHash);\n+  });\n+\n+  group('Given legacyHash, legacy salt and fixed salt', () {\n+    group('when generating password hash', () {\n+      test('then hash has 4 sections split by \\$.', () {\n+        var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+          'legacyHash',\n+          legacySalt: 'legacySalt',\n+          salt: 'saltySalt',\n+        );\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts, hasLength(4));\n+      });\n+\n+      test('then second section contains algorithm name.', () {\n+        var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+          'legacyHash',\n+          legacySalt: 'legacySalt',\n+          salt: 'saltySalt',\n+        );\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[1], 'migratedLegacy');\n+      });\n+\n+      test('then third section contains encoded salt.', () {\n+        var salt = 'saltySalt';\n+\n+        var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+          'legacyHash',\n+          legacySalt: 'legacySalt',\n+          salt: salt,\n+        );\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[2], const Base64Encoder().convert(salt.codeUnits));\n+      });\n+\n+      test('then fourth section contains hash.', () {\n+        var expectedHash =\n+            'aF5cAla/wBZ6Ka/kpGfmBC9kOftCRBr5srDZFhtAiF9SUqNUwefbsHBJZDX9cOo2B7MHNZzJDbNRg2VH6+VJtp70gHdveN7EJGrcSsaiReI1x4pX/sQ0l78FhIZ/+vYsuFGDCcr4qg1bkIk6apwmGMzJjKMSKy07bPXNcemm3EPhuCC9OLeBQHtS642TsWVKX9412XxGR2aDbRIDJItBMfWlLH0i3JSWxqcUZLtES7bwcvPdqj68jHT6nzAzFJAiOg4NkaTLye/SlKe/q6LjUci/NYYkJ9ujNnJD410E4AR6yVJqWZaGJMTrr38A0Vigayj4IvPaYaMCwho9Pr8/Jg==';\n+\n+        var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+          'legacyHash',\n+          legacySalt: 'legacySalt',\n+          salt: 'saltySalt',\n+        );\n+\n+        var parts = passwordHash.split('\\$');\n+        expect(parts[3], expectedHash);\n+      });\n+    });\n+\n+    group('when generating password hash with and without pepper', () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var salt = 'saltySalt';\n+      var pepper = 'pepper';\n+\n+      var withoutPepper = PasswordHash.migratedLegacyToArgon2idHash(\n+        password,\n+        legacySalt: legacySalt,\n+        salt: salt,\n+      );\n+      var withPepper = PasswordHash.migratedLegacyToArgon2idHash(\n+        password,\n+        legacySalt: legacySalt,\n+        salt: salt,\n+        pepper: pepper,\n+      );\n+\n+      test('then salt is same.', () {\n+        var withoutPepperSalt = withoutPepper.split('\\$')[2];\n+        var withPepperSalt = withPepper.split('\\$')[2];\n+        expect(withoutPepperSalt, withPepperSalt);\n+      });\n+\n+      test('then hashes are different.', () {\n+        var withoutPepperHash = withoutPepper.split('\\$')[3];\n+        var withPepperHash = withPepper.split('\\$')[3];\n+        expect(withoutPepperHash, isNot(withPepperHash));\n+      });\n+    });\n+  });\n+\n+  group('Given password', () {\n+    group('when generating password hash multiple times', () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var firstPasswordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+        password,\n+        legacySalt: legacySalt,\n+      );\n+      var secondPasswordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+        password,\n+        legacySalt: legacySalt,\n+      );\n+      test('then unique salt is generated.', () {\n+        var firstSalt = firstPasswordHash.split('\\$')[2];\n+        var secondSalt = secondPasswordHash.split('\\$')[2];\n+        expect(firstSalt, isNot(secondSalt));\n+      });\n+\n+      test('then unique hash is generated.', () {\n+        var firstHash = firstPasswordHash.split('\\$')[3];\n+        var secondHash = secondPasswordHash.split('\\$')[3];\n+        expect(firstHash, isNot(secondHash));\n+      });\n+    });\n+  });\n+\n+  group('Given password hash', () {\n+    test('when checking if hash should be updated then no update is needed.',\n+        () {\n+      var salt = 'saltySalt';\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          'hunter2',\n+          legacySalt: salt,\n+        ),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.shouldUpdateHash(), isTrue);\n+    });\n+\n+    test('when checking if hash is legacy hash then method returns true.', () {\n+      var salt = 'saltySalt';\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          'hunter2',\n+          legacySalt: salt,\n+        ),\n+        legacySalt: salt,\n+      );\n+\n+      expect(passwordHash.isLegacyHash(), isFalse);\n+    });\n+    test('when validating with correct password then validator returns true',\n+        () {\n+      var salt = 'saltySalt';\n+      var legacySalt = 'legacySalt';\n+      var password = 'hunter2';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+        ),\n+        legacySalt: legacySalt,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test(\n+        'when validating with correct password but different legacy salt then validator returns false',\n+        () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: 'saltySalt',\n+        ),\n+        legacySalt: 'differentLegacySalt',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with incorrect password then validator returns false',\n+        () {\n+      var salt = 'saltySalt';\n+      var legacySalt = 'legacySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash('hunter2', legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+        ),\n+        legacySalt: legacySalt,\n+      );\n+\n+      expect(passwordHash.validate('chaser1'), isFalse);\n+    });\n+\n+    test('when validating with modified salt then validator returns false', () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var originalPasswordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+        PasswordHash.legacyHash(password, legacySalt),\n+        legacySalt: legacySalt,\n+        salt: 'original salt',\n+      );\n+\n+      // Replace the salt in the password hash with a different one\n+      var parts = originalPasswordHash.split('\\$');\n+      parts[2] = 'modified salt';\n+      var modifiedPasswordHash = parts.join('\\$');\n+\n+      var passwordHash = PasswordHash(\n+        modifiedPasswordHash,\n+        legacySalt: legacySalt,\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with valid pepper then validator returns true.', () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var salt = 'saltySalt';\n+      var pepper = 'pepper';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+          pepper: pepper,\n+        ),\n+        legacySalt: legacySalt,\n+        pepper: pepper,\n+      );\n+\n+      expect(passwordHash.validate(password), isTrue);\n+    });\n+\n+    test('when validating with invalid pepper then validator returns false.',\n+        () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var salt = 'saltySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+          pepper: 'pepper',\n+        ),\n+        legacySalt: legacySalt,\n+        pepper: 'differentPepper',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with missing pepper then validator returns false.',\n+        () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var salt = 'saltySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+          pepper: 'pepper',\n+        ),\n+        legacySalt: legacySalt,\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+\n+    test('when validating with added pepper then validator returns false.', () {\n+      var password = 'hunter2';\n+      var legacySalt = 'legacySalt';\n+      var salt = 'saltySalt';\n+\n+      var passwordHash = PasswordHash(\n+        PasswordHash.migratedLegacyToArgon2idHash(\n+          PasswordHash.legacyHash(password, legacySalt),\n+          legacySalt: legacySalt,\n+          salt: salt,\n+        ),\n+        legacySalt: legacySalt,\n+        pepper: 'pepper',\n+      );\n+\n+      expect(passwordHash.validate(password), isFalse);\n+    });\n+  });\n+\n+  group('Given salt that contains \\$', () {\n+    test(\n+        'when generating password hash then hash still only has 4 parts split by \\$.',\n+        () {\n+      var legacySalt = 'legacySalt';\n+      var salt = 'salty\\$salt';\n+\n+      var passwordHash = PasswordHash.migratedLegacyToArgon2idHash(\n+        PasswordHash.legacyHash('hunter2', legacySalt),\n+        legacySalt: legacySalt,\n+        salt: salt,\n+      );\n+      var parts = passwordHash.split('\\$');\n+\n+      expect(parts, hasLength(4));\n+    });\n+  });\n+}"
        },
        {
          "filename": "modules/serverpod_auth/serverpod_auth_server/test/password_hash/password_hash_test.dart",
          "status": "added",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -0,0 +1,14 @@\n+import 'package:serverpod_auth_server/src/business/password_hash.dart';\n+import 'package:test/test.dart';\n+\n+void main() {\n+  test(\n+      'Given invalid password hash when instantiating password hash then argument error is thrown.',\n+      () {\n+    var passwordHash = r'$invalid$password$hash';\n+    expect(\n+      () => PasswordHash(passwordHash, legacySalt: 'salt'),\n+      throwsArgumentError,\n+    );\n+  });\n+}"
        },
        {
          "filename": "templates/pubspecs/modules/serverpod_auth/serverpod_auth_server/pubspec.yaml",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -19,9 +19,11 @@ dependencies:\n   http: \">=0.13.0 <2.0.0\"\n   image: ^4.0.15\n   jose: ^0.3.3\n+  pointycastle: ^3.7.4\n \n dev_dependencies:\n   serverpod_lints: VERSION\n+  test: ^1.24.2\n \n dependency_overrides:\n   serverpod:"
        },
        {
          "filename": "tests/serverpod_test_client/lib/src/protocol/client.dart",
          "status": "modified",
          "additions": 53,
          "deletions": 0,
          "patch": "@@ -1627,6 +1627,55 @@ class EndpointTransactionsDatabase extends _i1.EndpointRef {\n       );\n }\n \n+/// {@category Endpoint}\n+class EndpointEmailAuthTestMethods extends _i1.EndpointRef {\n+  EndpointEmailAuthTestMethods(_i1.EndpointCaller caller) : super(caller);\n+\n+  @override\n+  String get name => 'emailAuthTestMethods';\n+\n+  _i2.Future<String?> findVerificationCode(\n+    String userName,\n+    String email,\n+  ) =>\n+      caller.callServerEndpoint<String?>(\n+        'emailAuthTestMethods',\n+        'findVerificationCode',\n+        {\n+          'userName': userName,\n+          'email': email,\n+        },\n+      );\n+\n+  _i2.Future<String?> findResetCode(String email) =>\n+      caller.callServerEndpoint<String?>(\n+        'emailAuthTestMethods',\n+        'findResetCode',\n+        {'email': email},\n+      );\n+\n+  _i2.Future<void> tearDown() => caller.callServerEndpoint<void>(\n+        'emailAuthTestMethods',\n+        'tearDown',\n+        {},\n+      );\n+\n+  _i2.Future<bool> createUser(\n+    String userName,\n+    String email,\n+    String password,\n+  ) =>\n+      caller.callServerEndpoint<bool>(\n+        'emailAuthTestMethods',\n+        'createUser',\n+        {\n+          'userName': userName,\n+          'email': email,\n+          'password': password,\n+        },\n+      );\n+}\n+\n /// {@category Endpoint}\n class EndpointRelation extends _i1.EndpointRef {\n   EndpointRelation(_i1.EndpointCaller caller) : super(caller);\n@@ -2750,6 +2799,7 @@ class Client extends _i1.ServerpodClient {\n     databaseBatchGenerated = EndpointDatabaseBatchGenerated(this);\n     databaseListRelationMethods = EndpointDatabaseListRelationMethods(this);\n     transactionsDatabase = EndpointTransactionsDatabase(this);\n+    emailAuthTestMethods = EndpointEmailAuthTestMethods(this);\n     relation = EndpointRelation(this);\n     exceptionTest = EndpointExceptionTest(this);\n     failedCalls = EndpointFailedCalls(this);\n@@ -2813,6 +2863,8 @@ class Client extends _i1.ServerpodClient {\n \n   late final EndpointTransactionsDatabase transactionsDatabase;\n \n+  late final EndpointEmailAuthTestMethods emailAuthTestMethods;\n+\n   late final EndpointRelation relation;\n \n   late final EndpointExceptionTest exceptionTest;\n@@ -2877,6 +2929,7 @@ class Client extends _i1.ServerpodClient {\n         'databaseBatchGenerated': databaseBatchGenerated,\n         'databaseListRelationMethods': databaseListRelationMethods,\n         'transactionsDatabase': transactionsDatabase,\n+        'emailAuthTestMethods': emailAuthTestMethods,\n         'relation': relation,\n         'exceptionTest': exceptionTest,\n         'failedCalls': failedCalls,"
        },
        {
          "filename": "tests/serverpod_test_server/lib/server.dart",
          "status": "modified",
          "additions": 8,
          "deletions": 0,
          "patch": "@@ -39,6 +39,14 @@ void run(List<String> args) async {\n     onUserWillBeCreated: (session, userInfo, authMethod) async {\n       return (userInfo.email!.endsWith('.bar'));\n     },\n+    sendValidationEmail: (session, email, validationCode) async {\n+      print('Sending validation email to $email with code $validationCode');\n+      return true;\n+    },\n+    sendPasswordResetEmail: (session, userInfo, resetCode) async {\n+      print('Sending reset email to ${userInfo.email} with code $resetCode');\n+      return true;\n+    },\n   ));\n \n   // Add route to web server"
        },
        {
          "filename": "tests/serverpod_test_server/lib/src/endpoints/email_auth_provider.dart",
          "status": "added",
          "additions": 64,
          "deletions": 0,
          "patch": "@@ -0,0 +1,64 @@\n+import 'package:serverpod/serverpod.dart';\n+import 'package:serverpod_auth_server/module.dart';\n+\n+class EmailAuthTestMethods extends Endpoint {\n+  Future<String?> findVerificationCode(\n+    Session session,\n+    String userName,\n+    String email,\n+  ) async {\n+    var authRequest = await EmailCreateAccountRequest.db.findFirstRow(\n+      session,\n+      where: (t) => t.userName.equals(userName) & t.email.equals(email),\n+    );\n+\n+    return authRequest?.verificationCode;\n+  }\n+\n+  Future<String?> findResetCode(Session session, String email) async {\n+    var userInfo = await UserInfo.db.findFirstRow(\n+      session,\n+      where: (t) => t.email.equals(email),\n+    );\n+\n+    var userId = userInfo?.id;\n+    if (userId == null) return null;\n+\n+    var resetRequest = await EmailReset.db.findFirstRow(\n+      session,\n+      where: (t) => t.userId.equals(userId),\n+    );\n+\n+    return resetRequest?.verificationCode;\n+  }\n+\n+  Future<void> tearDown(Session session) async {\n+    await Future.wait([\n+      EmailCreateAccountRequest.db.deleteWhere(\n+        session,\n+        where: (t) => Constant.bool(true),\n+      ),\n+      EmailAuth.db.deleteWhere(\n+        session,\n+        where: (t) => Constant.bool(true),\n+      ),\n+      UserImage.db.deleteWhere(\n+        session,\n+        where: (t) => Constant.bool(true),\n+      ),\n+      UserInfo.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+      EmailReset.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+    ]);\n+  }\n+\n+  Future<bool> createUser(\n+    Session session,\n+    String userName,\n+    String email,\n+    String password,\n+  ) async {\n+    var userInfo = await Emails.createUser(session, userName, email, password);\n+    print('User info: $userInfo');\n+    return userInfo != null;\n+  }\n+}"
        },
        {
          "filename": "tests/serverpod_test_server/lib/src/generated/endpoints.dart",
          "status": "modified",
          "additions": 382,
          "deletions": 284,
          "patch": "@@ -29,67 +29,68 @@ import '../endpoints/database_batch.dart' as _i18;\n import '../endpoints/database_batch_generated.dart' as _i19;\n import '../endpoints/database_list_relation_methods.dart' as _i20;\n import '../endpoints/database_transactions.dart' as _i21;\n-import '../endpoints/entity_relation.dart' as _i22;\n-import '../endpoints/exception_test_endpoint.dart' as _i23;\n-import '../endpoints/failed_calls.dart' as _i24;\n-import '../endpoints/field_scopes.dart' as _i25;\n-import '../endpoints/future_calls.dart' as _i26;\n-import '../endpoints/list_parameters.dart' as _i27;\n-import '../endpoints/logging.dart' as _i28;\n-import '../endpoints/logging_disabled.dart' as _i29;\n-import '../endpoints/map_parameters.dart' as _i30;\n-import '../endpoints/models_with_relations/one_to_many.dart' as _i31;\n-import '../endpoints/module_serialization.dart' as _i32;\n-import '../endpoints/named_parameters.dart' as _i33;\n-import '../endpoints/optional_parameters.dart' as _i34;\n-import '../endpoints/redis.dart' as _i35;\n-import '../endpoints/signin_required.dart' as _i36;\n-import '../endpoints/simple.dart' as _i37;\n-import '../endpoints/streaming.dart' as _i38;\n-import '../endpoints/streaming_logging.dart' as _i39;\n-import '../endpoints/subDir/subSubDir/subsubdir_test_endpoint.dart' as _i40;\n-import '../endpoints/subDir/subdir_test_endpoint.dart' as _i41;\n-import 'dart:typed_data' as _i42;\n-import 'package:uuid/uuid_value.dart' as _i43;\n-import 'package:serverpod_test_server/src/generated/types.dart' as _i44;\n-import 'package:serverpod_test_server/src/generated/test_enum.dart' as _i45;\n-import 'package:serverpod_test_server/src/custom_classes.dart' as _i46;\n-import 'package:serverpod_test_shared/src/external_custom_class.dart' as _i47;\n-import 'package:serverpod_test_shared/src/freezed_custom_class.dart' as _i48;\n-import 'package:serverpod_test_server/src/generated/simple_data.dart' as _i49;\n+import '../endpoints/email_auth_provider.dart' as _i22;\n+import '../endpoints/entity_relation.dart' as _i23;\n+import '../endpoints/exception_test_endpoint.dart' as _i24;\n+import '../endpoints/failed_calls.dart' as _i25;\n+import '../endpoints/field_scopes.dart' as _i26;\n+import '../endpoints/future_calls.dart' as _i27;\n+import '../endpoints/list_parameters.dart' as _i28;\n+import '../endpoints/logging.dart' as _i29;\n+import '../endpoints/logging_disabled.dart' as _i30;\n+import '../endpoints/map_parameters.dart' as _i31;\n+import '../endpoints/models_with_relations/one_to_many.dart' as _i32;\n+import '../endpoints/module_serialization.dart' as _i33;\n+import '../endpoints/named_parameters.dart' as _i34;\n+import '../endpoints/optional_parameters.dart' as _i35;\n+import '../endpoints/redis.dart' as _i36;\n+import '../endpoints/signin_required.dart' as _i37;\n+import '../endpoints/simple.dart' as _i38;\n+import '../endpoints/streaming.dart' as _i39;\n+import '../endpoints/streaming_logging.dart' as _i40;\n+import '../endpoints/subDir/subSubDir/subsubdir_test_endpoint.dart' as _i41;\n+import '../endpoints/subDir/subdir_test_endpoint.dart' as _i42;\n+import 'dart:typed_data' as _i43;\n+import 'package:uuid/uuid_value.dart' as _i44;\n+import 'package:serverpod_test_server/src/generated/types.dart' as _i45;\n+import 'package:serverpod_test_server/src/generated/test_enum.dart' as _i46;\n+import 'package:serverpod_test_server/src/custom_classes.dart' as _i47;\n+import 'package:serverpod_test_shared/src/external_custom_class.dart' as _i48;\n+import 'package:serverpod_test_shared/src/freezed_custom_class.dart' as _i49;\n+import 'package:serverpod_test_server/src/generated/simple_data.dart' as _i50;\n import 'package:serverpod_test_server/src/generated/object_with_enum.dart'\n-    as _i50;\n-import 'package:serverpod_test_server/src/generated/object_with_object.dart'\n     as _i51;\n-import 'package:serverpod_test_server/src/generated/unique_data.dart' as _i52;\n+import 'package:serverpod_test_server/src/generated/object_with_object.dart'\n+    as _i52;\n+import 'package:serverpod_test_server/src/generated/unique_data.dart' as _i53;\n import 'package:serverpod_test_server/src/generated/related_unique_data.dart'\n-    as _i53;\n-import 'package:serverpod_test_server/src/generated/models_with_list_relations/city.dart'\n     as _i54;\n-import 'package:serverpod_test_server/src/generated/models_with_list_relations/organization.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_list_relations/city.dart'\n     as _i55;\n-import 'package:serverpod_test_server/src/generated/models_with_list_relations/person.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_list_relations/organization.dart'\n     as _i56;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/citizen.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_list_relations/person.dart'\n     as _i57;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/company.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/citizen.dart'\n     as _i58;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/address.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/company.dart'\n     as _i59;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/town.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/address.dart'\n     as _i60;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/self_relation/one_to_one/post.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_one/town.dart'\n     as _i61;\n-import 'package:serverpod_test_server/src/generated/object_field_scopes.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/self_relation/one_to_one/post.dart'\n     as _i62;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/comment.dart'\n+import 'package:serverpod_test_server/src/generated/object_field_scopes.dart'\n     as _i63;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/order.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/comment.dart'\n     as _i64;\n-import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/customer.dart'\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/order.dart'\n     as _i65;\n-import 'package:serverpod_test_module_server/module.dart' as _i66;\n-import 'package:serverpod_auth_server/module.dart' as _i67;\n+import 'package:serverpod_test_server/src/generated/models_with_relations/one_to_many/customer.dart'\n+    as _i66;\n+import 'package:serverpod_test_module_server/module.dart' as _i67;\n+import 'package:serverpod_auth_server/module.dart' as _i68;\n \n class Endpoints extends _i1.EndpointDispatch {\n   @override\n@@ -215,121 +216,127 @@ class Endpoints extends _i1.EndpointDispatch {\n           'transactionsDatabase',\n           null,\n         ),\n-      'relation': _i22.RelationEndpoint()\n+      'emailAuthTestMethods': _i22.EmailAuthTestMethods()\n+        ..initialize(\n+          server,\n+          'emailAuthTestMethods',\n+          null,\n+        ),\n+      'relation': _i23.RelationEndpoint()\n         ..initialize(\n           server,\n           'relation',\n           null,\n         ),\n-      'exceptionTest': _i23.ExceptionTestEndpoint()\n+      'exceptionTest': _i24.ExceptionTestEndpoint()\n         ..initialize(\n           server,\n           'exceptionTest',\n           null,\n         ),\n-      'failedCalls': _i24.FailedCallsEndpoint()\n+      'failedCalls': _i25.FailedCallsEndpoint()\n         ..initialize(\n           server,\n           'failedCalls',\n           null,\n         ),\n-      'fieldScopes': _i25.FieldScopesEndpoint()\n+      'fieldScopes': _i26.FieldScopesEndpoint()\n         ..initialize(\n           server,\n           'fieldScopes',\n           null,\n         ),\n-      'futureCalls': _i26.FutureCallsEndpoint()\n+      'futureCalls': _i27.FutureCallsEndpoint()\n         ..initialize(\n           server,\n           'futureCalls',\n           null,\n         ),\n-      'listParameters': _i27.ListParametersEndpoint()\n+      'listParameters': _i28.ListParametersEndpoint()\n         ..initialize(\n           server,\n           'listParameters',\n           null,\n         ),\n-      'logging': _i28.LoggingEndpoint()\n+      'logging': _i29.LoggingEndpoint()\n         ..initialize(\n           server,\n           'logging',\n           null,\n         ),\n-      'loggingDisabled': _i29.LoggingDisabledEndpoint()\n+      'loggingDisabled': _i30.LoggingDisabledEndpoint()\n         ..initialize(\n           server,\n           'loggingDisabled',\n           null,\n         ),\n-      'mapParameters': _i30.MapParametersEndpoint()\n+      'mapParameters': _i31.MapParametersEndpoint()\n         ..initialize(\n           server,\n           'mapParameters',\n           null,\n         ),\n-      'oneToMany': _i31.OneToManyEndpoint()\n+      'oneToMany': _i32.OneToManyEndpoint()\n         ..initialize(\n           server,\n           'oneToMany',\n           null,\n         ),\n-      'moduleSerialization': _i32.ModuleSerializationEndpoint()\n+      'moduleSerialization': _i33.ModuleSerializationEndpoint()\n         ..initialize(\n           server,\n           'moduleSerialization',\n           null,\n         ),\n-      'namedParameters': _i33.NamedParametersEndpoint()\n+      'namedParameters': _i34.NamedParametersEndpoint()\n         ..initialize(\n           server,\n           'namedParameters',\n           null,\n         ),\n-      'optionalParameters': _i34.OptionalParametersEndpoint()\n+      'optionalParameters': _i35.OptionalParametersEndpoint()\n         ..initialize(\n           server,\n           'optionalParameters',\n           null,\n         ),\n-      'redis': _i35.RedisEndpoint()\n+      'redis': _i36.RedisEndpoint()\n         ..initialize(\n           server,\n           'redis',\n           null,\n         ),\n-      'signInRequired': _i36.SignInRequiredEndpoint()\n+      'signInRequired': _i37.SignInRequiredEndpoint()\n         ..initialize(\n           server,\n           'signInRequired',\n           null,\n         ),\n-      'simple': _i37.SimpleEndpoint()\n+      'simple': _i38.SimpleEndpoint()\n         ..initialize(\n           server,\n           'simple',\n           null,\n         ),\n-      'streaming': _i38.StreamingEndpoint()\n+      'streaming': _i39.StreamingEndpoint()\n         ..initialize(\n           server,\n           'streaming',\n           null,\n         ),\n-      'streamingLogging': _i39.StreamingLoggingEndpoint()\n+      'streamingLogging': _i40.StreamingLoggingEndpoint()\n         ..initialize(\n           server,\n           'streamingLogging',\n           null,\n         ),\n-      'subSubDirTest': _i40.SubSubDirTestEndpoint()\n+      'subSubDirTest': _i41.SubSubDirTestEndpoint()\n         ..initialize(\n           server,\n           'subSubDirTest',\n           null,\n         ),\n-      'subDirTest': _i41.SubDirTestEndpoint()\n+      'subDirTest': _i42.SubDirTestEndpoint()\n         ..initialize(\n           server,\n           'subDirTest',\n@@ -571,7 +578,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i42.ByteData?>(),\n+              type: _i1.getType<_i43.ByteData?>(),\n               nullable: true,\n             )\n           },\n@@ -607,7 +614,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i43.UuidValue?>(),\n+              type: _i1.getType<_i44.UuidValue?>(),\n               nullable: true,\n             )\n           },\n@@ -646,7 +653,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             ),\n             'byteData': _i1.ParameterDescription(\n               name: 'byteData',\n-              type: _i1.getType<_i42.ByteData>(),\n+              type: _i1.getType<_i43.ByteData>(),\n               nullable: false,\n             ),\n           },\n@@ -791,7 +798,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             ),\n             'byteData': _i1.ParameterDescription(\n               name: 'byteData',\n-              type: _i1.getType<_i42.ByteData>(),\n+              type: _i1.getType<_i43.ByteData>(),\n               nullable: false,\n             ),\n           },\n@@ -931,7 +938,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -1052,7 +1059,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -1312,7 +1319,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -1572,7 +1579,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -1832,7 +1839,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -1871,7 +1878,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i45.TestEnum?>(),\n+              type: _i1.getType<_i46.TestEnum?>(),\n               nullable: true,\n             )\n           },\n@@ -1890,7 +1897,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i45.TestEnum?>(),\n+              type: _i1.getType<_i46.TestEnum?>(),\n               nullable: true,\n             )\n           },\n@@ -1909,7 +1916,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i45.TestEnum>>(),\n+              type: _i1.getType<List<_i46.TestEnum>>(),\n               nullable: false,\n             )\n           },\n@@ -1928,7 +1935,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i45.TestEnum>>(),\n+              type: _i1.getType<List<_i46.TestEnum>>(),\n               nullable: false,\n             )\n           },\n@@ -1953,7 +1960,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -2200,7 +2207,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -2368,7 +2375,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -2407,7 +2414,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i43.UuidValue?>(),\n+              type: _i1.getType<_i44.UuidValue?>(),\n               nullable: true,\n             )\n           },\n@@ -2426,7 +2433,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i43.UuidValue?>(),\n+              type: _i1.getType<_i44.UuidValue?>(),\n               nullable: true,\n             )\n           },\n@@ -2445,7 +2452,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i43.UuidValue>>(),\n+              type: _i1.getType<List<_i44.UuidValue>>(),\n               nullable: false,\n             )\n           },\n@@ -2464,7 +2471,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i43.UuidValue>>(),\n+              type: _i1.getType<List<_i44.UuidValue>>(),\n               nullable: false,\n             )\n           },\n@@ -2489,7 +2496,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i46.CustomClass>(),\n+              type: _i1.getType<_i47.CustomClass>(),\n               nullable: false,\n             )\n           },\n@@ -2508,7 +2515,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i46.CustomClass?>(),\n+              type: _i1.getType<_i47.CustomClass?>(),\n               nullable: true,\n             )\n           },\n@@ -2527,7 +2534,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i46.CustomClass2>(),\n+              type: _i1.getType<_i47.CustomClass2>(),\n               nullable: false,\n             )\n           },\n@@ -2546,7 +2553,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i46.CustomClass2?>(),\n+              type: _i1.getType<_i47.CustomClass2?>(),\n               nullable: true,\n             )\n           },\n@@ -2565,7 +2572,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i47.ExternalCustomClass>(),\n+              type: _i1.getType<_i48.ExternalCustomClass>(),\n               nullable: false,\n             )\n           },\n@@ -2584,7 +2591,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i47.ExternalCustomClass?>(),\n+              type: _i1.getType<_i48.ExternalCustomClass?>(),\n               nullable: true,\n             )\n           },\n@@ -2603,7 +2610,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i48.FreezedCustomClass>(),\n+              type: _i1.getType<_i49.FreezedCustomClass>(),\n               nullable: false,\n             )\n           },\n@@ -2622,7 +2629,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i48.FreezedCustomClass?>(),\n+              type: _i1.getType<_i49.FreezedCustomClass?>(),\n               nullable: true,\n             )\n           },\n@@ -2709,7 +2716,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'simpleData': _i1.ParameterDescription(\n               name: 'simpleData',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             )\n           },\n@@ -2728,7 +2735,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'simpleData': _i1.ParameterDescription(\n               name: 'simpleData',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             )\n           },\n@@ -2747,7 +2754,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'simpleData': _i1.ParameterDescription(\n               name: 'simpleData',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             )\n           },\n@@ -2786,7 +2793,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i44.Types>(),\n+              type: _i1.getType<_i45.Types>(),\n               nullable: false,\n             )\n           },\n@@ -2804,7 +2811,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i44.Types>(),\n+              type: _i1.getType<_i45.Types>(),\n               nullable: false,\n             )\n           },\n@@ -2838,7 +2845,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'types': _i1.ParameterDescription(\n               name: 'types',\n-              type: _i1.getType<_i44.Types>(),\n+              type: _i1.getType<_i45.Types>(),\n               nullable: false,\n             )\n           },\n@@ -2876,7 +2883,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'object': _i1.ParameterDescription(\n               name: 'object',\n-              type: _i1.getType<_i50.ObjectWithEnum>(),\n+              type: _i1.getType<_i51.ObjectWithEnum>(),\n               nullable: false,\n             )\n           },\n@@ -3092,7 +3099,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'object': _i1.ParameterDescription(\n               name: 'object',\n-              type: _i1.getType<_i51.ObjectWithObject>(),\n+              type: _i1.getType<_i52.ObjectWithObject>(),\n               nullable: false,\n             )\n           },\n@@ -3156,7 +3163,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3174,7 +3181,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -3193,7 +3200,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3211,7 +3218,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -3230,7 +3237,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3248,7 +3255,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i53.RelatedUniqueData>(),\n+              type: _i1.getType<_i54.RelatedUniqueData>(),\n               nullable: false,\n             )\n           },\n@@ -3329,7 +3336,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3349,7 +3356,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -3369,7 +3376,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3389,7 +3396,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i44.Types>>(),\n+              type: _i1.getType<List<_i45.Types>>(),\n               nullable: false,\n             )\n           },\n@@ -3409,7 +3416,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<List<_i52.UniqueData>>(),\n+              type: _i1.getType<List<_i53.UniqueData>>(),\n               nullable: false,\n             )\n           },\n@@ -3429,7 +3436,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'value': _i1.ParameterDescription(\n               name: 'value',\n-              type: _i1.getType<_i53.RelatedUniqueData>(),\n+              type: _i1.getType<_i54.RelatedUniqueData>(),\n               nullable: false,\n             )\n           },\n@@ -3517,7 +3524,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'city': _i1.ParameterDescription(\n               name: 'city',\n-              type: _i1.getType<_i54.City>(),\n+              type: _i1.getType<_i55.City>(),\n               nullable: false,\n             )\n           },\n@@ -3537,7 +3544,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'organization': _i1.ParameterDescription(\n               name: 'organization',\n-              type: _i1.getType<_i55.Organization>(),\n+              type: _i1.getType<_i56.Organization>(),\n               nullable: false,\n             )\n           },\n@@ -3557,7 +3564,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'person': _i1.ParameterDescription(\n               name: 'person',\n-              type: _i1.getType<_i56.Person>(),\n+              type: _i1.getType<_i57.Person>(),\n               nullable: false,\n             )\n           },\n@@ -3577,12 +3584,12 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'city': _i1.ParameterDescription(\n               name: 'city',\n-              type: _i1.getType<_i54.City>(),\n+              type: _i1.getType<_i55.City>(),\n               nullable: false,\n             ),\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i56.Person>(),\n+              type: _i1.getType<_i57.Person>(),\n               nullable: false,\n             ),\n           },\n@@ -3603,12 +3610,12 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'city': _i1.ParameterDescription(\n               name: 'city',\n-              type: _i1.getType<_i54.City>(),\n+              type: _i1.getType<_i55.City>(),\n               nullable: false,\n             ),\n             'citizens': _i1.ParameterDescription(\n               name: 'citizens',\n-              type: _i1.getType<List<_i56.Person>>(),\n+              type: _i1.getType<List<_i57.Person>>(),\n               nullable: false,\n             ),\n           },\n@@ -3629,7 +3636,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i56.Person>(),\n+              type: _i1.getType<_i57.Person>(),\n               nullable: false,\n             )\n           },\n@@ -3649,7 +3656,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'citizens': _i1.ParameterDescription(\n               name: 'citizens',\n-              type: _i1.getType<List<_i56.Person>>(),\n+              type: _i1.getType<List<_i57.Person>>(),\n               nullable: false,\n             )\n           },\n@@ -3689,12 +3696,12 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'org': _i1.ParameterDescription(\n               name: 'org',\n-              type: _i1.getType<_i55.Organization>(),\n+              type: _i1.getType<_i56.Organization>(),\n               nullable: false,\n             ),\n             'person': _i1.ParameterDescription(\n               name: 'person',\n-              type: _i1.getType<_i56.Person>(),\n+              type: _i1.getType<_i57.Person>(),\n               nullable: false,\n             ),\n           },\n@@ -3715,12 +3722,12 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'org': _i1.ParameterDescription(\n               name: 'org',\n-              type: _i1.getType<_i55.Organization>(),\n+              type: _i1.getType<_i56.Organization>(),\n               nullable: false,\n             ),\n             'persons': _i1.ParameterDescription(\n               name: 'persons',\n-              type: _i1.getType<List<_i56.Person>>(),\n+              type: _i1.getType<List<_i57.Person>>(),\n               nullable: false,\n             ),\n           },\n@@ -3741,7 +3748,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'person': _i1.ParameterDescription(\n               name: 'person',\n-              type: _i1.getType<_i56.Person>(),\n+              type: _i1.getType<_i57.Person>(),\n               nullable: false,\n             )\n           },\n@@ -3761,7 +3768,7 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'persons': _i1.ParameterDescription(\n               name: 'persons',\n-              type: _i1.getType<List<_i56.Person>>(),\n+              type: _i1.getType<List<_i57.Person>>(),\n               nullable: false,\n             )\n           },\n@@ -3867,6 +3874,97 @@ class Endpoints extends _i1.EndpointDispatch {\n         ),\n       },\n     );\n+    connectors['emailAuthTestMethods'] = _i1.EndpointConnector(\n+      name: 'emailAuthTestMethods',\n+      endpoint: endpoints['emailAuthTestMethods']!,\n+      methodConnectors: {\n+        'findVerificationCode': _i1.MethodConnector(\n+          name: 'findVerificationCode',\n+          params: {\n+            'userName': _i1.ParameterDescription(\n+              name: 'userName',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            ),\n+            'email': _i1.ParameterDescription(\n+              name: 'email',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            ),\n+          },\n+          call: (\n+            _i1.Session session,\n+            Map<String, dynamic> params,\n+          ) async =>\n+              (endpoints['emailAuthTestMethods'] as _i22.EmailAuthTestMethods)\n+                  .findVerificationCode(\n+            session,\n+            params['userName'],\n+            params['email'],\n+          ),\n+        ),\n+        'findResetCode': _i1.MethodConnector(\n+          name: 'findResetCode',\n+          params: {\n+            'email': _i1.ParameterDescription(\n+              name: 'email',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            )\n+          },\n+          call: (\n+            _i1.Session session,\n+            Map<String, dynamic> params,\n+          ) async =>\n+              (endpoints['emailAuthTestMethods'] as _i22.EmailAuthTestMethods)\n+                  .findResetCode(\n+            session,\n+            params['email'],\n+          ),\n+        ),\n+        'tearDown': _i1.MethodConnector(\n+          name: 'tearDown',\n+          params: {},\n+          call: (\n+            _i1.Session session,\n+            Map<String, dynamic> params,\n+          ) async =>\n+              (endpoints['emailAuthTestMethods'] as _i22.EmailAuthTestMethods)\n+                  .tearDown(session),\n+        ),\n+        'createUser': _i1.MethodConnector(\n+          name: 'createUser',\n+          params: {\n+            'userName': _i1.ParameterDescription(\n+              name: 'userName',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            ),\n+            'email': _i1.ParameterDescription(\n+              name: 'email',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            ),\n+            'password': _i1.ParameterDescription(\n+              name: 'password',\n+              type: _i1.getType<String>(),\n+              nullable: false,\n+            ),\n+          },\n+          call: (\n+            _i1.Session session,\n+            Map<String, dynamic> params,\n+          ) async =>\n+              (endpoints['emailAuthTestMethods'] as _i22.EmailAuthTestMethods)\n+                  .createUser(\n+            session,\n+            params['userName'],\n+            params['email'],\n+            params['password'],\n+          ),\n+        ),\n+      },\n+    );\n     connectors['relation'] = _i1.EndpointConnector(\n       name: 'relation',\n       endpoint: endpoints['relation']!,\n@@ -3884,7 +3982,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindWhereCompanyNameIs(\n             session,\n             companyName: params['companyName'],\n@@ -3903,7 +4001,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindWhereCompanyTownNameIs(\n             session,\n             townName: params['townName'],\n@@ -3916,7 +4014,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindOrderedByCompanyName(session),\n         ),\n         'citizenFindOrderedByCompanyTownName': _i1.MethodConnector(\n@@ -3926,7 +4024,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindOrderedByCompanyTownName(session),\n         ),\n         'citizenDeleteWhereCompanyNameIs': _i1.MethodConnector(\n@@ -3942,7 +4040,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenDeleteWhereCompanyNameIs(\n             session,\n             companyName: params['companyName'],\n@@ -3961,7 +4059,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenDeleteWhereCompanyTownNameIs(\n             session,\n             townName: params['townName'],\n@@ -3980,7 +4078,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenCountWhereCompanyNameIs(\n             session,\n             companyName: params['companyName'],\n@@ -3999,7 +4097,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenCountWhereCompanyTownNameIs(\n             session,\n             townName: params['townName'],\n@@ -4012,7 +4110,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindAll(session),\n         ),\n         'citizenFindAllWithDeepIncludes': _i1.MethodConnector(\n@@ -4022,7 +4120,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindAllWithDeepIncludes(session),\n         ),\n         'citizenFindAllWithNamedRelationNoneOriginSide': _i1.MethodConnector(\n@@ -4032,7 +4130,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindAllWithNamedRelationNoneOriginSide(session),\n         ),\n         'citizenFindAllWithShallowIncludes': _i1.MethodConnector(\n@@ -4042,7 +4140,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindAllWithShallowIncludes(session),\n         ),\n         'citizenFindByIdWithIncludes': _i1.MethodConnector(\n@@ -4058,7 +4156,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenFindByIdWithIncludes(\n             session,\n             params['id'],\n@@ -4071,7 +4169,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .addressFindAll(session),\n         ),\n         'addressFindById': _i1.MethodConnector(\n@@ -4087,7 +4185,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).addressFindById(\n+              (endpoints['relation'] as _i23.RelationEndpoint).addressFindById(\n             session,\n             params['id'],\n           ),\n@@ -4099,28 +4197,28 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .findAllPostsIncludingNextAndPrevious(session),\n         ),\n         'citizenAttachCompany': _i1.MethodConnector(\n           name: 'citizenAttachCompany',\n           params: {\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i57.Citizen>(),\n+              type: _i1.getType<_i58.Citizen>(),\n               nullable: false,\n             ),\n             'company': _i1.ParameterDescription(\n               name: 'company',\n-              type: _i1.getType<_i58.Company>(),\n+              type: _i1.getType<_i59.Company>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenAttachCompany(\n             session,\n             params['citizen'],\n@@ -4132,20 +4230,20 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i57.Citizen>(),\n+              type: _i1.getType<_i58.Citizen>(),\n               nullable: false,\n             ),\n             'address': _i1.ParameterDescription(\n               name: 'address',\n-              type: _i1.getType<_i59.Address>(),\n+              type: _i1.getType<_i60.Address>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenAttachAddress(\n             session,\n             params['citizen'],\n@@ -4157,15 +4255,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i57.Citizen>(),\n+              type: _i1.getType<_i58.Citizen>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .citizenDetachAddress(\n             session,\n             params['citizen'],\n@@ -4176,20 +4274,20 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'address': _i1.ParameterDescription(\n               name: 'address',\n-              type: _i1.getType<_i59.Address>(),\n+              type: _i1.getType<_i60.Address>(),\n               nullable: false,\n             ),\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i57.Citizen>(),\n+              type: _i1.getType<_i58.Citizen>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .addressAttachCitizen(\n             session,\n             params['address'],\n@@ -4201,15 +4299,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'address': _i1.ParameterDescription(\n               name: 'address',\n-              type: _i1.getType<_i59.Address>(),\n+              type: _i1.getType<_i60.Address>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .addressDetachCitizen(\n             session,\n             params['address'],\n@@ -4222,23 +4320,23 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .companyFindAll(session),\n         ),\n         'citizenInsert': _i1.MethodConnector(\n           name: 'citizenInsert',\n           params: {\n             'citizen': _i1.ParameterDescription(\n               name: 'citizen',\n-              type: _i1.getType<_i57.Citizen>(),\n+              type: _i1.getType<_i58.Citizen>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).citizenInsert(\n+              (endpoints['relation'] as _i23.RelationEndpoint).citizenInsert(\n             session,\n             params['citizen'],\n           ),\n@@ -4248,15 +4346,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'company': _i1.ParameterDescription(\n               name: 'company',\n-              type: _i1.getType<_i58.Company>(),\n+              type: _i1.getType<_i59.Company>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).companyInsert(\n+              (endpoints['relation'] as _i23.RelationEndpoint).companyInsert(\n             session,\n             params['company'],\n           ),\n@@ -4266,15 +4364,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'town': _i1.ParameterDescription(\n               name: 'town',\n-              type: _i1.getType<_i60.Town>(),\n+              type: _i1.getType<_i61.Town>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).townInsert(\n+              (endpoints['relation'] as _i23.RelationEndpoint).townInsert(\n             session,\n             params['town'],\n           ),\n@@ -4284,15 +4382,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'address': _i1.ParameterDescription(\n               name: 'address',\n-              type: _i1.getType<_i59.Address>(),\n+              type: _i1.getType<_i60.Address>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).addressInsert(\n+              (endpoints['relation'] as _i23.RelationEndpoint).addressInsert(\n             session,\n             params['address'],\n           ),\n@@ -4302,15 +4400,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'post': _i1.ParameterDescription(\n               name: 'post',\n-              type: _i1.getType<_i61.Post>(),\n+              type: _i1.getType<_i62.Post>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint).postInsert(\n+              (endpoints['relation'] as _i23.RelationEndpoint).postInsert(\n             session,\n             params['post'],\n           ),\n@@ -4322,7 +4420,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['relation'] as _i22.RelationEndpoint)\n+              (endpoints['relation'] as _i23.RelationEndpoint)\n                   .deleteAll(session),\n         ),\n       },\n@@ -4338,7 +4436,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['exceptionTest'] as _i23.ExceptionTestEndpoint)\n+              (endpoints['exceptionTest'] as _i24.ExceptionTestEndpoint)\n                   .throwNormalException(session),\n         ),\n         'throwExceptionWithData': _i1.MethodConnector(\n@@ -4348,7 +4446,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['exceptionTest'] as _i23.ExceptionTestEndpoint)\n+              (endpoints['exceptionTest'] as _i24.ExceptionTestEndpoint)\n                   .throwExceptionWithData(session),\n         ),\n         'workingWithoutException': _i1.MethodConnector(\n@@ -4358,7 +4456,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['exceptionTest'] as _i23.ExceptionTestEndpoint)\n+              (endpoints['exceptionTest'] as _i24.ExceptionTestEndpoint)\n                   .workingWithoutException(session),\n         ),\n       },\n@@ -4374,7 +4472,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['failedCalls'] as _i24.FailedCallsEndpoint)\n+              (endpoints['failedCalls'] as _i25.FailedCallsEndpoint)\n                   .failedCall(session),\n         ),\n         'failedDatabaseQuery': _i1.MethodConnector(\n@@ -4384,7 +4482,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['failedCalls'] as _i24.FailedCallsEndpoint)\n+              (endpoints['failedCalls'] as _i25.FailedCallsEndpoint)\n                   .failedDatabaseQuery(session),\n         ),\n         'failedDatabaseQueryCaughtException': _i1.MethodConnector(\n@@ -4394,7 +4492,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['failedCalls'] as _i24.FailedCallsEndpoint)\n+              (endpoints['failedCalls'] as _i25.FailedCallsEndpoint)\n                   .failedDatabaseQueryCaughtException(session),\n         ),\n         'slowCall': _i1.MethodConnector(\n@@ -4404,7 +4502,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['failedCalls'] as _i24.FailedCallsEndpoint)\n+              (endpoints['failedCalls'] as _i25.FailedCallsEndpoint)\n                   .slowCall(session),\n         ),\n         'caughtException': _i1.MethodConnector(\n@@ -4414,7 +4512,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['failedCalls'] as _i24.FailedCallsEndpoint)\n+              (endpoints['failedCalls'] as _i25.FailedCallsEndpoint)\n                   .caughtException(session),\n         ),\n       },\n@@ -4428,15 +4526,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'object': _i1.ParameterDescription(\n               name: 'object',\n-              type: _i1.getType<_i62.ObjectFieldScopes>(),\n+              type: _i1.getType<_i63.ObjectFieldScopes>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['fieldScopes'] as _i25.FieldScopesEndpoint)\n+              (endpoints['fieldScopes'] as _i26.FieldScopesEndpoint)\n                   .storeObject(\n             session,\n             params['object'],\n@@ -4449,7 +4547,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['fieldScopes'] as _i25.FieldScopesEndpoint)\n+              (endpoints['fieldScopes'] as _i26.FieldScopesEndpoint)\n                   .retrieveObject(session),\n         ),\n       },\n@@ -4463,15 +4561,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i49.SimpleData?>(),\n+              type: _i1.getType<_i50.SimpleData?>(),\n               nullable: true,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['futureCalls'] as _i26.FutureCallsEndpoint)\n+              (endpoints['futureCalls'] as _i27.FutureCallsEndpoint)\n                   .makeFutureCall(\n             session,\n             params['data'],\n@@ -4496,7 +4594,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntList(\n             session,\n             params['list'],\n@@ -4515,7 +4613,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntListList(\n             session,\n             params['list'],\n@@ -4534,7 +4632,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntListNullable(\n             session,\n             params['list'],\n@@ -4553,7 +4651,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntListNullableList(\n             session,\n             params['list'],\n@@ -4572,7 +4670,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntListListNullable(\n             session,\n             params['list'],\n@@ -4591,7 +4689,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnIntListNullableInts(\n             session,\n             params['list'],\n@@ -4610,7 +4708,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnNullableIntListNullableInts(\n             session,\n             params['list'],\n@@ -4629,7 +4727,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDoubleList(\n             session,\n             params['list'],\n@@ -4648,7 +4746,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDoubleListNullableDoubles(\n             session,\n             params['list'],\n@@ -4667,7 +4765,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnBoolList(\n             session,\n             params['list'],\n@@ -4686,7 +4784,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnBoolListNullableBools(\n             session,\n             params['list'],\n@@ -4705,7 +4803,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnStringList(\n             session,\n             params['list'],\n@@ -4724,7 +4822,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnStringListNullableStrings(\n             session,\n             params['list'],\n@@ -4743,7 +4841,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDateTimeList(\n             session,\n             params['list'],\n@@ -4762,7 +4860,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDateTimeListNullableDateTimes(\n             session,\n             params['list'],\n@@ -4773,15 +4871,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i42.ByteData>>(),\n+              type: _i1.getType<List<_i43.ByteData>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnByteDataList(\n             session,\n             params['list'],\n@@ -4792,15 +4890,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i42.ByteData?>>(),\n+              type: _i1.getType<List<_i43.ByteData?>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnByteDataListNullableByteDatas(\n             session,\n             params['list'],\n@@ -4811,15 +4909,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i49.SimpleData>>(),\n+              type: _i1.getType<List<_i50.SimpleData>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnSimpleDataList(\n             session,\n             params['list'],\n@@ -4830,15 +4928,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i49.SimpleData?>>(),\n+              type: _i1.getType<List<_i50.SimpleData?>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnSimpleDataListNullableSimpleData(\n             session,\n             params['list'],\n@@ -4849,15 +4947,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i49.SimpleData>?>(),\n+              type: _i1.getType<List<_i50.SimpleData>?>(),\n               nullable: true,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnSimpleDataListNullable(\n             session,\n             params['list'],\n@@ -4868,15 +4966,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'list': _i1.ParameterDescription(\n               name: 'list',\n-              type: _i1.getType<List<_i49.SimpleData?>?>(),\n+              type: _i1.getType<List<_i50.SimpleData?>?>(),\n               nullable: true,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnNullableSimpleDataListNullableSimpleData(\n             session,\n             params['list'],\n@@ -4895,7 +4993,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDurationList(\n             session,\n             params['list'],\n@@ -4914,7 +5012,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['listParameters'] as _i27.ListParametersEndpoint)\n+              (endpoints['listParameters'] as _i28.ListParametersEndpoint)\n                   .returnDurationListNullableDurations(\n             session,\n             params['list'],\n@@ -4939,7 +5037,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['logging'] as _i28.LoggingEndpoint).logInfo(\n+              (endpoints['logging'] as _i29.LoggingEndpoint).logInfo(\n             session,\n             params['message'],\n           ),\n@@ -4967,7 +5065,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['logging'] as _i28.LoggingEndpoint)\n+              (endpoints['logging'] as _i29.LoggingEndpoint)\n                   .logDebugAndInfoAndError(\n             session,\n             params['debug'],\n@@ -4982,7 +5080,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['logging'] as _i28.LoggingEndpoint)\n+              (endpoints['logging'] as _i29.LoggingEndpoint)\n                   .twoQueries(session),\n         ),\n       },\n@@ -5004,7 +5102,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['loggingDisabled'] as _i29.LoggingDisabledEndpoint)\n+              (endpoints['loggingDisabled'] as _i30.LoggingDisabledEndpoint)\n                   .logInfo(\n             session,\n             params['message'],\n@@ -5029,7 +5127,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnIntMap(\n             session,\n             params['map'],\n@@ -5048,7 +5146,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnIntMapNullable(\n             session,\n             params['map'],\n@@ -5067,7 +5165,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnNestedIntMap(\n             session,\n             params['map'],\n@@ -5086,7 +5184,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnIntMapNullableInts(\n             session,\n             params['map'],\n@@ -5105,7 +5203,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnNullableIntMapNullableInts(\n             session,\n             params['map'],\n@@ -5124,7 +5222,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnIntIntMap(\n             session,\n             params['map'],\n@@ -5135,15 +5233,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<_i45.TestEnum, int>>(),\n+              type: _i1.getType<Map<_i46.TestEnum, int>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnEnumIntMap(\n             session,\n             params['map'],\n@@ -5154,15 +5252,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i45.TestEnum>>(),\n+              type: _i1.getType<Map<String, _i46.TestEnum>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnEnumMap(\n             session,\n             params['map'],\n@@ -5181,7 +5279,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDoubleMap(\n             session,\n             params['map'],\n@@ -5200,7 +5298,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDoubleMapNullableDoubles(\n             session,\n             params['map'],\n@@ -5219,7 +5317,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnBoolMap(\n             session,\n             params['map'],\n@@ -5238,7 +5336,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnBoolMapNullableBools(\n             session,\n             params['map'],\n@@ -5257,7 +5355,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnStringMap(\n             session,\n             params['map'],\n@@ -5276,7 +5374,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnStringMapNullableStrings(\n             session,\n             params['map'],\n@@ -5295,7 +5393,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDateTimeMap(\n             session,\n             params['map'],\n@@ -5314,7 +5412,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDateTimeMapNullableDateTimes(\n             session,\n             params['map'],\n@@ -5325,15 +5423,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i42.ByteData>>(),\n+              type: _i1.getType<Map<String, _i43.ByteData>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnByteDataMap(\n             session,\n             params['map'],\n@@ -5344,15 +5442,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i42.ByteData?>>(),\n+              type: _i1.getType<Map<String, _i43.ByteData?>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnByteDataMapNullableByteDatas(\n             session,\n             params['map'],\n@@ -5363,15 +5461,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i49.SimpleData>>(),\n+              type: _i1.getType<Map<String, _i50.SimpleData>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnSimpleDataMap(\n             session,\n             params['map'],\n@@ -5382,15 +5480,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i49.SimpleData?>>(),\n+              type: _i1.getType<Map<String, _i50.SimpleData?>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnSimpleDataMapNullableSimpleData(\n             session,\n             params['map'],\n@@ -5401,15 +5499,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i49.SimpleData>?>(),\n+              type: _i1.getType<Map<String, _i50.SimpleData>?>(),\n               nullable: true,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnSimpleDataMapNullable(\n             session,\n             params['map'],\n@@ -5420,15 +5518,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'map': _i1.ParameterDescription(\n               name: 'map',\n-              type: _i1.getType<Map<String, _i49.SimpleData?>?>(),\n+              type: _i1.getType<Map<String, _i50.SimpleData?>?>(),\n               nullable: true,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnNullableSimpleDataMapNullableSimpleData(\n             session,\n             params['map'],\n@@ -5447,7 +5545,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDurationMap(\n             session,\n             params['map'],\n@@ -5466,7 +5564,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['mapParameters'] as _i30.MapParametersEndpoint)\n+              (endpoints['mapParameters'] as _i31.MapParametersEndpoint)\n                   .returnDurationMapNullableDurations(\n             session,\n             params['map'],\n@@ -5485,7 +5583,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint)\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint)\n                   .customerOrderByOrderCountAscending(session),\n         ),\n         'customerOrderByOrderCountAscendingWhereDescriptionIs':\n@@ -5502,7 +5600,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint)\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint)\n                   .customerOrderByOrderCountAscendingWhereDescriptionIs(\n             session,\n             params['description'],\n@@ -5513,15 +5611,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'comments': _i1.ParameterDescription(\n               name: 'comments',\n-              type: _i1.getType<List<_i63.Comment>>(),\n+              type: _i1.getType<List<_i64.Comment>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint).commentInsert(\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint).commentInsert(\n             session,\n             params['comments'],\n           ),\n@@ -5531,15 +5629,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'orders': _i1.ParameterDescription(\n               name: 'orders',\n-              type: _i1.getType<List<_i64.Order>>(),\n+              type: _i1.getType<List<_i65.Order>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint).orderInsert(\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint).orderInsert(\n             session,\n             params['orders'],\n           ),\n@@ -5549,15 +5647,15 @@ class Endpoints extends _i1.EndpointDispatch {\n           params: {\n             'customers': _i1.ParameterDescription(\n               name: 'customers',\n-              type: _i1.getType<List<_i65.Customer>>(),\n+              type: _i1.getType<List<_i66.Customer>>(),\n               nullable: false,\n             )\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint).customerInsert(\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint).customerInsert(\n             session,\n             params['customers'],\n           ),\n@@ -5569,7 +5667,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['oneToMany'] as _i31.OneToManyEndpoint)\n+              (endpoints['oneToMany'] as _i32.OneToManyEndpoint)\n                   .deleteAll(session),\n         ),\n       },\n@@ -5586,15 +5684,15 @@ class Endpoints extends _i1.EndpointDispatch {\n             Map<String, dynamic> params,\n           ) async =>\n               (endpoints['moduleSerialization']\n-                      as _i32.ModuleSerializationEndpoint)\n+                      as _i33.ModuleSerializationEndpoint)\n                   .serializeModuleObject(session),\n         ),\n         'modifyModuleObject': _i1.MethodConnector(\n           name: 'modifyModuleObject',\n           params: {\n             'object': _i1.ParameterDescription(\n               name: 'object',\n-              type: _i1.getType<_i66.ModuleClass>(),\n+              type: _i1.getType<_i67.ModuleClass>(),\n               nullable: false,\n             )\n           },\n@@ -5603,7 +5701,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             Map<String, dynamic> params,\n           ) async =>\n               (endpoints['moduleSerialization']\n-                      as _i32.ModuleSerializationEndpoint)\n+                      as _i33.ModuleSerializationEndpoint)\n                   .modifyModuleObject(\n             session,\n             params['object'],\n@@ -5617,7 +5715,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             Map<String, dynamic> params,\n           ) async =>\n               (endpoints['moduleSerialization']\n-                      as _i32.ModuleSerializationEndpoint)\n+                      as _i33.ModuleSerializationEndpoint)\n                   .serializeNestedModuleObject(session),\n         ),\n       },\n@@ -5654,7 +5752,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['namedParameters'] as _i33.NamedParametersEndpoint)\n+              (endpoints['namedParameters'] as _i34.NamedParametersEndpoint)\n                   .namedParametersMethod(\n             session,\n             namedInt: params['namedInt'],\n@@ -5681,7 +5779,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['namedParameters'] as _i33.NamedParametersEndpoint)\n+              (endpoints['namedParameters'] as _i34.NamedParametersEndpoint)\n                   .namedParametersMethodEqualInts(\n             session,\n             namedInt: params['namedInt'],\n@@ -5708,7 +5806,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             Map<String, dynamic> params,\n           ) async =>\n               (endpoints['optionalParameters']\n-                      as _i34.OptionalParametersEndpoint)\n+                      as _i35.OptionalParametersEndpoint)\n                   .returnOptionalInt(\n             session,\n             params['optionalInt'],\n@@ -5730,15 +5828,15 @@ class Endpoints extends _i1.EndpointDispatch {\n             ),\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint).setSimpleData(\n+              (endpoints['redis'] as _i36.RedisEndpoint).setSimpleData(\n             session,\n             params['key'],\n             params['data'],\n@@ -5754,15 +5852,15 @@ class Endpoints extends _i1.EndpointDispatch {\n             ),\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint)\n+              (endpoints['redis'] as _i36.RedisEndpoint)\n                   .setSimpleDataWithLifetime(\n             session,\n             params['key'],\n@@ -5782,7 +5880,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint).getSimpleData(\n+              (endpoints['redis'] as _i36.RedisEndpoint).getSimpleData(\n             session,\n             params['key'],\n           ),\n@@ -5800,7 +5898,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint).deleteSimpleData(\n+              (endpoints['redis'] as _i36.RedisEndpoint).deleteSimpleData(\n             session,\n             params['key'],\n           ),\n@@ -5812,7 +5910,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint)\n+              (endpoints['redis'] as _i36.RedisEndpoint)\n                   .resetMessageCentralTest(session),\n         ),\n         'listenToChannel': _i1.MethodConnector(\n@@ -5828,7 +5926,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint).listenToChannel(\n+              (endpoints['redis'] as _i36.RedisEndpoint).listenToChannel(\n             session,\n             params['channel'],\n           ),\n@@ -5843,15 +5941,15 @@ class Endpoints extends _i1.EndpointDispatch {\n             ),\n             'data': _i1.ParameterDescription(\n               name: 'data',\n-              type: _i1.getType<_i49.SimpleData>(),\n+              type: _i1.getType<_i50.SimpleData>(),\n               nullable: false,\n             ),\n           },\n           call: (\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint).postToChannel(\n+              (endpoints['redis'] as _i36.RedisEndpoint).postToChannel(\n             session,\n             params['channel'],\n             params['data'],\n@@ -5864,7 +5962,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['redis'] as _i35.RedisEndpoint)\n+              (endpoints['redis'] as _i36.RedisEndpoint)\n                   .countSubscribedChannels(session),\n         ),\n       },\n@@ -5880,7 +5978,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['signInRequired'] as _i36.SignInRequiredEndpoint)\n+              (endpoints['signInRequired'] as _i37.SignInRequiredEndpoint)\n                   .testMethod(session),\n         )\n       },\n@@ -5907,7 +6005,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['simple'] as _i37.SimpleEndpoint).setGlobalInt(\n+              (endpoints['simple'] as _i38.SimpleEndpoint).setGlobalInt(\n             session,\n             params['value'],\n             params['secondValue'],\n@@ -5920,7 +6018,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['simple'] as _i37.SimpleEndpoint)\n+              (endpoints['simple'] as _i38.SimpleEndpoint)\n                   .addToGlobalInt(session),\n         ),\n         'getGlobalInt': _i1.MethodConnector(\n@@ -5930,7 +6028,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['simple'] as _i37.SimpleEndpoint)\n+              (endpoints['simple'] as _i38.SimpleEndpoint)\n                   .getGlobalInt(session),\n         ),\n         'hello': _i1.MethodConnector(\n@@ -5946,7 +6044,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['simple'] as _i37.SimpleEndpoint).hello(\n+              (endpoints['simple'] as _i38.SimpleEndpoint).hello(\n             session,\n             params['name'],\n           ),\n@@ -5974,7 +6072,7 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['subSubDirTest'] as _i40.SubSubDirTestEndpoint)\n+              (endpoints['subSubDirTest'] as _i41.SubSubDirTestEndpoint)\n                   .testMethod(session),\n         )\n       },\n@@ -5990,13 +6088,13 @@ class Endpoints extends _i1.EndpointDispatch {\n             _i1.Session session,\n             Map<String, dynamic> params,\n           ) async =>\n-              (endpoints['subDirTest'] as _i41.SubDirTestEndpoint)\n+              (endpoints['subDirTest'] as _i42.SubDirTestEndpoint)\n                   .testMethod(session),\n         )\n       },\n     );\n-    modules['serverpod_auth'] = _i67.Endpoints()..initializeEndpoints(server);\n-    modules['serverpod_test_module'] = _i66.Endpoints()\n+    modules['serverpod_auth'] = _i68.Endpoints()..initializeEndpoints(server);\n+    modules['serverpod_test_module'] = _i67.Endpoints()\n       ..initializeEndpoints(server);\n   }\n }"
        },
        {
          "filename": "tests/serverpod_test_server/lib/src/generated/protocol.yaml",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -203,6 +203,11 @@ databaseListRelationMethods:\n transactionsDatabase:\n   - removeRow:\n   - updateInsertDelete:\n+emailAuthTestMethods:\n+  - findVerificationCode:\n+  - findResetCode:\n+  - tearDown:\n+  - createUser:\n relation:\n   - citizenFindWhereCompanyNameIs:\n   - citizenFindWhereCompanyTownNameIs:"
        },
        {
          "filename": "tests/serverpod_test_server/lib/test_util/test_key_manager.dart",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+import 'package:serverpod_test_client/serverpod_test_client.dart';\n+\n+class TestAuthKeyManager extends AuthenticationKeyManager {\n+  String? _key;\n+\n+  @override\n+  Future<String?> get() async => _key;\n+\n+  @override\n+  Future<void> put(String key) async {\n+    _key = key;\n+  }\n+\n+  @override\n+  Future<void> remove() async {\n+    _key = null;\n+  }\n+}"
        },
        {
          "filename": "tests/serverpod_test_server/test_e2e/authentication_test.dart",
          "status": "modified",
          "additions": 1,
          "deletions": 17,
          "patch": "@@ -1,5 +1,6 @@\n import 'package:serverpod_test_client/serverpod_test_client.dart';\n import 'package:serverpod_test_server/test_util/config.dart';\n+import 'package:serverpod_test_server/test_util/test_key_manager.dart';\n import 'package:test/test.dart';\n \n void main() {\n@@ -116,20 +117,3 @@ void main() {\n     });\n   });\n }\n-\n-class TestAuthKeyManager extends AuthenticationKeyManager {\n-  String? _key;\n-\n-  @override\n-  Future<String?> get() async => _key;\n-\n-  @override\n-  Future<void> put(String key) async {\n-    _key = key;\n-  }\n-\n-  @override\n-  Future<void> remove() async {\n-    _key = null;\n-  }\n-}"
        },
        {
          "filename": "tests/serverpod_test_server/test_e2e/email_authentication_provider_test.dart",
          "status": "added",
          "additions": 163,
          "deletions": 0,
          "patch": "@@ -0,0 +1,163 @@\n+import 'package:serverpod_test_client/serverpod_test_client.dart';\n+import 'package:serverpod_test_server/test_util/config.dart';\n+import 'package:serverpod_test_server/test_util/test_key_manager.dart';\n+import 'package:test/test.dart';\n+\n+void main() {\n+  var client = Client(\n+    serverUrl,\n+    authenticationKeyManager: TestAuthKeyManager(),\n+  );\n+  // \".bar\" is the only valid top level domain for test email addresses\n+  const email = 'test@serverpod.bar';\n+  const password = 'password';\n+  const userName = 'test';\n+\n+  tearDown(() async => await client.emailAuthTestMethods.tearDown());\n+  test(\n+      'Given no user exists when creating user then user is created and can be authenticated',\n+      () async {\n+    var createAccountRequest =\n+        await client.modules.auth.email.createAccountRequest(\n+      userName,\n+      email,\n+      password,\n+    );\n+    expect(createAccountRequest, isTrue,\n+        reason: 'Failed to submit create account request');\n+\n+    var verificationCode =\n+        await client.emailAuthTestMethods.findVerificationCode(userName, email);\n+    expect(verificationCode, isNotNull,\n+        reason: 'Failed to find verification code');\n+\n+    var response = await client.modules.auth.email.createAccount(\n+      email,\n+      verificationCode!,\n+    );\n+\n+    expect(response, isNotNull,\n+        reason: 'Failed to create account using verification code');\n+\n+    var authResponse =\n+        await client.modules.auth.email.authenticate(email, password);\n+    expect(authResponse.success, isTrue, reason: 'Failed to authenticate user');\n+  });\n+\n+  group('Given existing user', () {\n+    setUp(\n+      () async {\n+        var createUserRequest = await client.emailAuthTestMethods.createUser(\n+          userName,\n+          email,\n+          password,\n+        );\n+        assert(createUserRequest, 'Failed to create user');\n+\n+        var authResponse =\n+            await client.modules.auth.email.authenticate(email, password);\n+        assert(authResponse.success, 'Failed to authenticate user');\n+      },\n+    );\n+\n+    test(\n+        'when changing password using password reset then user can authenticate using new password',\n+        () async {\n+      var initiatePasswordResetResponse =\n+          await client.modules.auth.email.initiatePasswordReset(email);\n+      expect(\n+        initiatePasswordResetResponse,\n+        isTrue,\n+        reason: 'Failed to initiate password reset',\n+      );\n+\n+      var resetCode = await client.emailAuthTestMethods.findResetCode(email);\n+      expect(\n+        resetCode,\n+        isNotNull,\n+        reason: 'Failed to find password reset code',\n+      );\n+\n+      var newPassword = '$password-with-addition';\n+      var resetPasswordResponse = await client.modules.auth.email.resetPassword(\n+        resetCode!,\n+        newPassword,\n+      );\n+      expect(\n+        resetPasswordResponse,\n+        isTrue,\n+        reason: 'Failed to reset password',\n+      );\n+\n+      var authResponse =\n+          await client.modules.auth.email.authenticate(email, newPassword);\n+      expect(\n+        authResponse.success,\n+        isTrue,\n+        reason: 'Failed to authenticate user with new password',\n+      );\n+    });\n+\n+    test('when authenticating with wrong password then authentication fails',\n+        () async {\n+      var wrongPassword = '$password-wrong';\n+      var authResponse =\n+          await client.modules.auth.email.authenticate(email, wrongPassword);\n+\n+      expect(\n+        authResponse.success,\n+        isFalse,\n+        reason: 'User authenticated with wrong password',\n+      );\n+    });\n+  });\n+\n+  group('Given existing and authenticated user', () {\n+    setUp(\n+      () async {\n+        var createUserRequest = await client.emailAuthTestMethods.createUser(\n+          userName,\n+          email,\n+          password,\n+        );\n+        assert(createUserRequest, 'Failed to create user');\n+\n+        var authResponse =\n+            await client.modules.auth.email.authenticate(email, password);\n+        assert(authResponse.success, 'Failed to authenticate user');\n+        assert(authResponse.key != null, 'Failed to retrieve auth key');\n+        await client.authenticationKeyManager\n+            ?.put('${authResponse.keyId}:${authResponse.key}');\n+\n+        assert(await client.modules.auth.status.isSignedIn(),\n+            'User not signed in');\n+      },\n+    );\n+\n+    tearDown(() async => await client.authenticationKeyManager?.remove());\n+\n+    test('when changing password then user can authenticate with new password',\n+        () async {\n+      var newPassword = '$password-with-addition';\n+      var changePasswordResponse =\n+          await client.modules.auth.email.changePassword(\n+        password,\n+        newPassword,\n+      );\n+\n+      expect(\n+        changePasswordResponse,\n+        isTrue,\n+        reason: 'Password change request failed.',\n+      );\n+\n+      var authResponse =\n+          await client.modules.auth.email.authenticate(email, newPassword);\n+      expect(\n+        authResponse.success,\n+        isTrue,\n+        reason: 'Failed to authenticate user with new password',\n+      );\n+    });\n+  });\n+}"
        },
        {
          "filename": "tests/serverpod_test_server/test_e2e/websocket_test.dart",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -2,10 +2,9 @@ import 'package:serverpod_test_client/serverpod_test_client.dart';\n import 'package:serverpod_test_module_client/module.dart';\n import 'package:serverpod_test_client/src/custom_classes.dart';\n import 'package:serverpod_test_server/test_util/config.dart';\n+import 'package:serverpod_test_server/test_util/test_key_manager.dart';\n import 'package:test/test.dart';\n \n-import 'authentication_test.dart';\n-\n void main() {\n   var client = Client(\n     serverUrl,"
        },
        {
          "filename": "tests/serverpod_test_server/test_integration/authentication/email_auth_provider_test.dart",
          "status": "added",
          "additions": 309,
          "deletions": 0,
          "patch": "@@ -0,0 +1,309 @@\n+import 'package:serverpod/database.dart';\n+import 'package:serverpod_auth_server/module.dart';\n+import 'package:serverpod_test_server/test_util/test_serverpod.dart';\n+import 'package:test/test.dart';\n+\n+void main() async {\n+  var session = await IntegrationTestServer().session();\n+  AuthConfig.set(\n+    AuthConfig(\n+      sendValidationEmail: (session, email, validationCode) async {\n+        print('Sending validation email to $email with code $validationCode');\n+        return true;\n+      },\n+      extraSaltyHash: false,\n+    ),\n+  );\n+\n+  group('Given create account request ', () {\n+    var userName = 'test';\n+    var email = 'test@serverpod.dev';\n+    var password = 'password';\n+\n+    tearDown(() async {\n+      await EmailCreateAccountRequest.db\n+          .deleteWhere(session, where: (t) => Constant.bool(true));\n+    });\n+\n+    setUp(() async {\n+      await Emails.createAccountRequest(session, userName, email, password);\n+    });\n+\n+    test('when inspecting password hash then password is hashed using Argon2id',\n+        () async {\n+      var createAccountRequest =\n+          await EmailCreateAccountRequest.db.findFirstRow(\n+        session,\n+        where: (t) => t.userName.equals(userName) & t.email.equals(email),\n+      );\n+\n+      expect(\n+        createAccountRequest,\n+        isNotNull,\n+        reason: 'Failed to find create account request',\n+      );\n+      var passwordHash = createAccountRequest!.hash;\n+\n+      expect(\n+        passwordHash,\n+        contains('argon2id'),\n+        reason: 'Password hash is not using Argon2id',\n+      );\n+    });\n+  });\n+\n+  group('Given a created user', () {\n+    var userName = 'test';\n+    var email = 'test@serverpod.dev';\n+    var password = 'password';\n+\n+    tearDown(() async {\n+      await Future.wait([\n+        UserInfo.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+        EmailAuth.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+        UserImage.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+      ]);\n+    });\n+\n+    setUp(() async {\n+      await Emails.createUser(session, userName, email, password);\n+    });\n+\n+    test(\n+        'when inspecting email auth hash then password is hashed using Argon2id',\n+        () async {\n+      var emailAuth = await EmailAuth.db.findFirstRow(\n+        session,\n+        where: (t) => t.email.equals(email),\n+      );\n+      expect(\n+        emailAuth,\n+        isNotNull,\n+        reason: 'Failed to find email auth entry',\n+      );\n+\n+      var passwordHash = emailAuth!.hash;\n+      expect(\n+        passwordHash,\n+        contains('argon2id'),\n+        reason: 'Password hash is not using Argon2id',\n+      );\n+    });\n+  });\n+\n+  group('Given user with legacy password hash when authenticating', () {\n+    var userName = 'test';\n+    var email = 'test@serverpod.dev';\n+    var password = 'hunter2';\n+\n+    tearDown(() async {\n+      await Future.wait([\n+        UserInfo.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+        EmailAuth.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+        UserImage.db.deleteWhere(session, where: (t) => Constant.bool(true)),\n+      ]);\n+    });\n+\n+    setUp(() async {\n+      await Emails.createUser(session, userName, email, password);\n+      var entry = await EmailAuth.db\n+          .findFirstRow(session, where: (t) => t.email.equals(email));\n+      assert(entry != null, 'Failed to find email auth entry');\n+      var withLegacyHash = entry!.copyWith(\n+        // Legacy hash of the password 'hunter2'\n+        hash:\n+            '0713234b3cb6a6f98f6978f17a55a54578c580698dc1d56371502be6abb457eb',\n+      );\n+      await EmailAuth.db.updateRow(session, withLegacyHash);\n+    });\n+\n+    test('then user can authenticate', () async {\n+      var authResponse = await Emails.authenticate(session, email, password);\n+      expect(authResponse.success, isTrue,\n+          reason: 'Failed to authenticate user.');\n+    });\n+\n+    test('then hash is migrated.', () async {\n+      await Emails.authenticate(session, email, password);\n+      var emailAuth = await EmailAuth.db.findFirstRow(\n+        session,\n+        where: (t) => t.email.equals(email),\n+      );\n+      expect(\n+        emailAuth,\n+        isNotNull,\n+        reason: 'Failed to find email auth entry for user.',\n+      );\n+\n+      var passwordHash = emailAuth!.hash;\n+      expect(\n+        passwordHash,\n+        contains('argon2id'),\n+        reason: 'Password hash was not migrated to Argon2id.',\n+      );\n+    });\n+  });\n+\n+  group('Given all password hash types in database', () {\n+    tearDown(\n+      () async => await EmailAuth.db\n+          .deleteWhere(session, where: (t) => Constant.bool(true)),\n+    );\n+\n+    setUp(\n+      () async => await EmailAuth.db.insert(session, [\n+        // These entries where generated using the hash algorithms.\n+        // The salt for all passwords is 'serverpod password salt'.\n+        EmailAuth(\n+          userId: 1,\n+          email: 'test1@serverpod.dev',\n+          // This is the hash of the password 'hunter0'\n+          hash:\n+              '8be0c8699ff49f0f0edaa3a69e9e175504e2b7909a1b9cb24b5fd448171da49f',\n+        ),\n+        EmailAuth(\n+          userId: 2,\n+          email: 'test2@serverpod.dev',\n+          // This is the hash of the password 'hunter1'\n+          hash:\n+              '51c7c7e0c3e275b1c6a9076701bf3234d7a60da111cf0ee719a6fe2884c4cf89',\n+        ),\n+        EmailAuth(\n+          userId: 3,\n+          email: 'test3@serverpod.dev',\n+          // This is the hash of the password 'hunter2'\n+          hash:\n+              '0713234b3cb6a6f98f6978f17a55a54578c580698dc1d56371502be6abb457eb',\n+        ),\n+        EmailAuth(\n+          userId: 4,\n+          email: 'test4@serverpod.dev',\n+          // This is the hash of the password 'hunter3'\n+          hash:\n+              'e0bbc3d67336323cfdaf616ca1a4cbc68aee7fdb1cf107349ff7328fcaace081',\n+        ),\n+        EmailAuth(\n+          userId: 5,\n+          email: 'test5@serverpod.dev',\n+          // This is the hash of the password 'hunter4'\n+          hash:\n+              '2ee3dc6432300eabf9630ac7827d6dd23fd23cc9120ec4cd58f8f66bd3ce2db9',\n+        ),\n+        EmailAuth(\n+          userId: 6,\n+          email: 'test6@serverpod.dev',\n+          // This is the hash from the password 'hunter2'\n+          hash:\n+              r'$migratedLegacy$c2VydmVycG9kIHBhc3N3b3JkIHNhbHQ=$zr46HulgsH9Kv8dZR/oNKPkltWHz5axYpINct5ZSRM7mgk7DMXeHI4vyPZkAvICQJPG50OKQdRAnIxaIyitIXvQBhQhcdHYZTAc2wOZfXEwDQGFJahy+N8xLwiT2FFlcaR7rorYKIEwpxZ+haihLauN4G4hFPVoftVbHz6KCY0ZzLbrHxbZtHCRWDy/dmlA0OegUu0Q1cwAXTCOZjobWOUn6uEM0/JbRJ26Mhe2UqTOFdSY/SSVIXyYuDrGDuOtm1OhOTcaLFA68FHANSOzlYPPUy6JHOvTeGfcsjdDWF720uVYUSxP5VDb4MvWWRoB212VXasswtNc2xwBOLO++4Q==',\n+        ),\n+        EmailAuth(\n+          userId: 7,\n+          email: 'test7@serverpod.dev',\n+          // This is the hash from the password 'hunter2'\n+          hash:\n+              r'$argon2id$c2VydmVycG9kIHBhc3N3b3JkIHNhbHQ=$lratTXSlVuxb6xwzHQzMu4Ra0pPVl1YLDdR8AwPY0gRlvF/5M7jxf6tODW9+KOgowfbP1tSGFHQebAjEOsmvL5NvAOrFDI3u0mD/414W8wR0Cni1KpATP7p5MHr5OZ2O4gEtOWfSJfgPTcq0X/uWZjRi1m4mc40TkyIFbMOfyO05JtoX0hi6r/4fTlIgIp1s7KgXEwF7B8IrmEb5zdnDgUs4qUifUM+SEH2S59fNBAt5CIviCOK7VreBztQw+L5S58ZHYSWWyB7bHJLcg1pDV9uiBb+q7qmXWJqDUBQjeJMH4nePzDmy7zarA04zQFhd6d5wIfZilJxJb8XXVGKZrQ==',\n+        ),\n+      ]),\n+    );\n+\n+    test(\n+        'when migrating auth entries then updated rows matches legacy hashes stored.',\n+        () async {\n+      var updatedRows = await Emails.migrateLegacyPasswordHashes(\n+        session,\n+        batchSize: 2,\n+      );\n+      expect(updatedRows, 5);\n+    });\n+\n+    test(\n+        'when migrating auth entries then all legacy hashes are stored with migrate algorithm.',\n+        () async {\n+      await Emails.migrateLegacyPasswordHashes(session, batchSize: 2);\n+\n+      var emailAuth = await EmailAuth.db.find(\n+        session,\n+        where: (t) => t.email.inSet({\n+          'test1@serverpod.dev',\n+          'test2@serverpod.dev',\n+          'test3@serverpod.dev',\n+          'test4@serverpod.dev',\n+          'test5@serverpod.dev',\n+        }),\n+      );\n+\n+      expect(emailAuth, hasLength(5));\n+      var hashes = emailAuth.map((e) => e.hash).toList();\n+      expect(\n+        hashes,\n+        everyElement(contains('migratedLegacy')),\n+        reason:\n+            'Not all legacy hashes where migrated to migratedLegacy algorithm',\n+      );\n+    });\n+\n+    group('when migrating auth entries', () {\n+      setUp(() async => await Emails.migrateLegacyPasswordHashes(session));\n+\n+      test('then user that had legacy password passes validation.', () async {\n+        var emailAuth = await EmailAuth.db.findFirstRow(\n+          session,\n+          where: (t) => t.email.equals('test1@serverpod.dev'),\n+        );\n+\n+        expect(emailAuth, isNotNull, reason: 'Failed to find email auth entry');\n+        var passwordHash = emailAuth!.hash;\n+\n+        expect(\n+          Emails.validatePasswordHash(\n+            'hunter0',\n+            'test1@serverpod.dev',\n+            passwordHash,\n+          ),\n+          isTrue,\n+        );\n+      });\n+\n+      test(\n+          'then user with already migrated legacy password hash can passes validation.',\n+          () async {\n+        var emailAuth = await EmailAuth.db.findFirstRow(\n+          session,\n+          where: (t) => t.email.equals('test6@serverpod.dev'),\n+        );\n+\n+        expect(emailAuth, isNotNull, reason: 'Failed to find email auth entry');\n+        var passwordHash = emailAuth!.hash;\n+\n+        expect(\n+          Emails.validatePasswordHash(\n+            'hunter2',\n+            'test6@serverpod.dev',\n+            passwordHash,\n+          ),\n+          isTrue,\n+        );\n+      });\n+\n+      test('then user with argon2id password hash passes validation.',\n+          () async {\n+        var emailAuth = await EmailAuth.db.findFirstRow(\n+          session,\n+          where: (t) => t.email.equals('test7@serverpod.dev'),\n+        );\n+\n+        expect(emailAuth, isNotNull, reason: 'Failed to find email auth entry');\n+        var passwordHash = emailAuth!.hash;\n+\n+        expect(\n+          Emails.validatePasswordHash(\n+            'hunter2',\n+            'test7@serverpod.dev',\n+            passwordHash,\n+          ),\n+          isTrue,\n+        );\n+      });\n+    });\n+  });\n+}"
        },
        {
          "filename": "util/run_tests_unit",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -15,6 +15,7 @@ declare -a projectPaths=(\n     \"packages/serverpod_serialization\"\n     \"tests/serverpod_test_client\"\n     \"tests/serverpod_test_server\"\n+    \"modules/serverpod_auth/serverpod_auth_server\"\n )\n \n exit_code=0"
        }
      ],
      "file_patterns": {
        "security_files": 16,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 16,
        "unique_directories": 14,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e1fae905d1fdba2d72e1920da20100baa23b96a3",
            "date": "2025-01-14T06:29:02Z",
            "author_login": "hampuslavin"
          },
          {
            "sha": "7e9aa21845c7cb22aa7f74e91c472beb2548e5d7",
            "date": "2025-01-13T13:49:12Z",
            "author_login": "BenAuerDev"
          },
          {
            "sha": "deee852655ef152789ec93e715f51ceb0511cbec",
            "date": "2025-01-13T11:24:54Z",
            "author_login": "SandPod"
          },
          {
            "sha": "ee0e95d0e4547f85aa56d2ba6cb2bdbe353f7be4",
            "date": "2025-01-10T09:36:50Z",
            "author_login": "SandPod"
          },
          {
            "sha": "bc6dd94054821e9ad4503af5e37d4e3958277b1e",
            "date": "2025-01-10T09:12:49Z",
            "author_login": "christerswahn"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-916",
    "description": "Serverpod is an app and web server, built for the Flutter and Dart ecosystem. An issue was identified with the old password hash algorithm that made it susceptible to rainbow attacks if the database was compromised. This vulnerability is fixed by 1.2.6.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-03-27T19:15:49.023",
    "last_modified": "2024-11-21T09:08:32.927",
    "fix_date": "2024-03-11T10:57:30Z"
  },
  "references": [
    {
      "url": "https://github.com/serverpod/serverpod/commit/a78b9e9f1de74d1300633a122b6cc0f064139ad6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/serverpod/serverpod/security/advisories/GHSA-r75m-26cq-mjxc",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/serverpod/serverpod/commit/a78b9e9f1de74d1300633a122b6cc0f064139ad6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/serverpod/serverpod/security/advisories/GHSA-r75m-26cq-mjxc",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:07:52.916265",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "serverpod",
    "owner": "serverpod",
    "created_at": "2021-05-22T12:01:45Z",
    "updated_at": "2025-01-14T07:30:17Z",
    "pushed_at": "2025-01-14T06:29:02Z",
    "size": 12331,
    "stars": 2617,
    "forks": 247,
    "open_issues": 382,
    "watchers": 2617,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Dart": 8566254,
      "PLpgSQL": 262751,
      "Shell": 52848,
      "HCL": 36715,
      "HTML": 2521,
      "TypeScript": 2095,
      "Dockerfile": 1446,
      "CSS": 1266,
      "Java": 757,
      "Objective-C": 683
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T18:27:48.684664"
  }
}