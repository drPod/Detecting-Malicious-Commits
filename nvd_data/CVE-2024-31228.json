{
  "cve_id": "CVE-2024-31228",
  "github_data": {
    "repository": "redis/redis",
    "fix_commit": "9317bf64659b33166a943ec03d5d9b954e86afb0",
    "related_commits": [
      "9317bf64659b33166a943ec03d5d9b954e86afb0"
    ],
    "patch_url": "https://github.com/redis/redis/commit/9317bf64659b33166a943ec03d5d9b954e86afb0.patch",
    "fix_commit_details": {
      "sha": "9317bf64659b33166a943ec03d5d9b954e86afb0",
      "commit_date": "2024-10-02T17:11:01Z",
      "author": {
        "login": "oranagra",
        "type": "User",
        "stats": {
          "total_commits": 812,
          "average_weekly_commits": 0.9830508474576272,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 261
        }
      },
      "commit_message": {
        "title": "Prevent pattern matching abuse (CVE-2024-31228)",
        "length": 47,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 15,
        "additions": 12,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/util.c",
          "status": "modified",
          "additions": 6,
          "deletions": 3,
          "patch": "@@ -46,8 +46,11 @@\n \n /* Glob-style pattern matching. */\n static int stringmatchlen_impl(const char *pattern, int patternLen,\n-        const char *string, int stringLen, int nocase, int *skipLongerMatches)\n+        const char *string, int stringLen, int nocase, int *skipLongerMatches, int nesting)\n {\n+    /* Protection against abusive patterns. */\n+    if (nesting > 1000) return 0;\n+\n     while(patternLen && stringLen) {\n         switch(pattern[0]) {\n         case '*':\n@@ -59,7 +62,7 @@ static int stringmatchlen_impl(const char *pattern, int patternLen,\n                 return 1; /* match */\n             while(stringLen) {\n                 if (stringmatchlen_impl(pattern+1, patternLen-1,\n-                            string, stringLen, nocase, skipLongerMatches))\n+                            string, stringLen, nocase, skipLongerMatches, nesting+1))\n                     return 1; /* match */\n                 if (*skipLongerMatches)\n                     return 0; /* no match */\n@@ -181,7 +184,7 @@ static int stringmatchlen_impl(const char *pattern, int patternLen,\n int stringmatchlen(const char *pattern, int patternLen,\n         const char *string, int stringLen, int nocase) {\n     int skipLongerMatches = 0;\n-    return stringmatchlen_impl(pattern,patternLen,string,stringLen,nocase,&skipLongerMatches);\n+    return stringmatchlen_impl(pattern,patternLen,string,stringLen,nocase,&skipLongerMatches,0);\n }\n \n int stringmatch(const char *pattern, const char *string, int nocase) {"
        },
        {
          "filename": "tests/unit/keyspace.tcl",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -485,4 +485,10 @@ start_server {tags {\"keyspace\"}} {\n         r SET aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 1\n         r KEYS \"a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*b\"\n     } {}\n+\n+    test {Regression for pattern matching very long nested loops} {\n+        r flushdb\n+        r SET [string repeat \"a\" 50000] 1\n+        r KEYS [string repeat \"*?\" 50000]\n+    } {}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f65806b5b0f21b96e9c688ce7d2d00062203a51",
            "date": "2025-01-14T09:30:18Z",
            "author_login": "sundb"
          },
          {
            "sha": "5b8b58e472fc567337429f63e93927f86db7f838",
            "date": "2025-01-14T07:51:05Z",
            "author_login": "ShooterIT"
          },
          {
            "sha": "342ee426ad0d0731b2272553bd4db2cd78e24772",
            "date": "2024-12-15T19:41:45Z",
            "author_login": "YaacovHazan"
          },
          {
            "sha": "4a95b3005a140165bbb9df373ba61f775c936554",
            "date": "2024-12-15T09:27:48Z",
            "author_login": "YaacovHazan"
          },
          {
            "sha": "73a9b916c9f42f2e07b9338a975f9a473ad0cd9b",
            "date": "2025-01-13T12:09:52Z",
            "author_login": "tezc"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-674",
    "description": "Redis is an open source, in-memory database that persists on disk. Authenticated users can trigger a denial-of-service by using specially crafted, long string match patterns on supported commands such as `KEYS`, `SCAN`, `PSUBSCRIBE`, `FUNCTION LIST`, `COMMAND LIST` and ACL definitions. Matching of extremely long patterns may result in unbounded recursion, leading to stack overflow and process crash. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-07T20:15:05.277",
    "last_modified": "2024-10-10T12:57:21.987",
    "fix_date": "2024-10-02T17:11:01Z"
  },
  "references": [
    {
      "url": "https://github.com/redis/redis/commit/9317bf64659b33166a943ec03d5d9b954e86afb0",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/redis/redis/security/advisories/GHSA-66gq-c942-6976",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.116407",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "redis",
    "owner": "redis",
    "created_at": "2009-03-21T22:32:25Z",
    "updated_at": "2025-01-14T13:39:40Z",
    "pushed_at": "2025-01-14T13:24:52Z",
    "size": 142912,
    "stars": 67707,
    "forks": 23864,
    "open_issues": 2530,
    "watchers": 67707,
    "has_security_policy": false,
    "default_branch": "unstable",
    "protected_branches": [
      "2.2",
      "2.4",
      "2.6",
      "2.8",
      "3.0",
      "3.2",
      "4.0",
      "5.0",
      "6.0",
      "6.2",
      "7.0",
      "7.2",
      "7.4",
      "8.0",
      "LiorKogan-patch-1",
      "LiorKogan-patch-2",
      "acl-api-pr",
      "acl-log",
      "antiaffinity",
      "aofrdb",
      "argv-accounting",
      "arm",
      "client-unblock",
      "conduct",
      "cow-pipe",
      "csc2",
      "current-client-fix",
      "dict-clustered-entries",
      "dict-split-by-slot"
    ],
    "languages": {
      "C": 6937367,
      "Tcl": 2354158,
      "Python": 40222,
      "Makefile": 26062,
      "Shell": 23597,
      "Ruby": 23260,
      "C++": 5987,
      "Smarty": 1047,
      "JavaScript": 953
    },
    "commit_activity": {
      "total_commits_last_year": 425,
      "avg_commits_per_week": 8.173076923076923,
      "days_active_last_year": 171
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:05:59.165273"
  }
}