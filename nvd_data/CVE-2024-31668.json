{
  "cve_id": "CVE-2024-31668",
  "github_data": {
    "repository": "rizinorg/rizin",
    "fix_commit": "c025dcee40c8eac2ab559f2caa3798a2dbf019e4",
    "related_commits": [
      "c025dcee40c8eac2ab559f2caa3798a2dbf019e4"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c025dcee40c8eac2ab559f2caa3798a2dbf019e4",
      "commit_date": "2024-02-07T12:09:55Z",
      "author": {
        "login": "imbillow",
        "type": "User",
        "stats": {
          "total_commits": 138,
          "average_weekly_commits": 0.21068702290076335,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 64
        }
      },
      "commit_message": {
        "title": "DWARF: Fix ANSI Escape Sequence Injection vulns via DWARF (#4190)",
        "length": 278,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 491,
        "additions": 471,
        "deletions": 20
      },
      "files": [
        {
          "filename": "librz/bin/dwarf/attr.c",
          "status": "modified",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -237,3 +237,26 @@ RZ_IPI void RzBinDwarfAttr_fini(RzBinDwarfAttr *attr) {\n \t\tbreak;\n \t};\n }\n+\n+/**\n+ * \\brief Safely get the string from an RzBinDwarfAttrValue if it has one.\n+ */\n+RZ_API RZ_OWN char *rz_bin_dwarf_attr_string(\n+\tRZ_BORROW RZ_NONNULL const RzBinDwarfAttr *attr,\n+\tRZ_BORROW RZ_NULLABLE const RzBinDWARF *dw,\n+\tut64 str_offsets_base) {\n+\trz_return_val_if_fail(attr, NULL);\n+\n+\tconst RzBinDwarfAttrValue *v = &attr->value;\n+\tconst char *orig = NULL;\n+\tif (v->kind == RzBinDwarfAttr_String) {\n+\t\torig = v->string;\n+\t} else if (v->kind == RzBinDwarfAttr_StrRef && dw) {\n+\t\torig = rz_bin_dwarf_str_get(dw->str, v->u64);\n+\t} else if (v->kind == RzBinDwarfAttr_StrOffsetIndex && dw) {\n+\t\torig = rz_bin_dwarf_str_offsets_get(dw->str, dw->str_offsets, str_offsets_base, v->u64);\n+\t} else if (v->kind == RzBinDwarfAttr_LineStrRef && dw) {\n+\t\torig = rz_bin_dwarf_line_str_get(dw->line_str, v->u64);\n+\t}\n+\treturn str_escape_copy(orig);\n+}"
        },
        {
          "filename": "librz/bin/dwarf/dwarf_private.h",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -8,6 +8,28 @@\n #include <rz_bin_dwarf.h>\n #include \"macro.h\"\n \n+static inline char *str_escape_copy(const char *p) {\n+\tif (!p) {\n+\t\treturn NULL;\n+\t}\n+\tRzStrEscOptions opt = {\n+\t\t.dot_nl = true,\n+\t\t.esc_bslash = true,\n+\t\t.esc_double_quotes = true,\n+\t\t.show_asciidot = false\n+\t};\n+\treturn rz_str_escape_utf8(p, &opt);\n+}\n+\n+static inline void str_escape(char **p) {\n+\tif (!(p && *p)) {\n+\t\treturn;\n+\t}\n+\tchar *out = str_escape_copy(*p);\n+\tfree(*p);\n+\t*p = out;\n+}\n+\n typedef struct {\n \tut64 unit_offset;\n \tRzBinDwarfEncoding *encoding;"
        },
        {
          "filename": "librz/bin/dwarf/endian_reader.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -242,6 +242,7 @@ RZ_IPI char *read_string(RzBinEndianReader *reader) {\n \tRET_NULL_IF_FAIL(x);\n \tut64 len = strlen(x) + 1;\n \trz_buf_seek(reader->buffer, (st64)len, SEEK_CUR);\n+\tstr_escape(&x);\n \treturn x;\n }\n "
        },
        {
          "filename": "librz/include/rz_bin_dwarf.h",
          "status": "modified",
          "additions": 4,
          "deletions": 20,
          "patch": "@@ -1816,26 +1816,10 @@ RZ_API void rz_bin_dwarf_addr_free(RzBinDwarfAddr *self);\n RZ_API RZ_OWN RzBinDwarfAddr *rz_bin_dwarf_addr_new(RZ_OWN RZ_NONNULL RzBinEndianReader *reader);\n RZ_API RZ_OWN RzBinDwarfAddr *rz_bin_dwarf_addr_from_file(RZ_BORROW RZ_NONNULL RzBinFile *bf);\n \n-/**\n- * \\brief Safely get the string from an RzBinDwarfAttrValue if it has one.\n- */\n-static inline char *rz_bin_dwarf_attr_string(\n-\tconst RzBinDwarfAttr *attr,\n-\tconst RzBinDWARF *dw,\n-\tut64 str_offsets_base) {\n-\trz_return_val_if_fail(attr, NULL);\n-\tconst RzBinDwarfAttrValue *v = &attr->value;\n-\tif (v->kind == RzBinDwarfAttr_String) {\n-\t\treturn rz_str_dup(v->string);\n-\t} else if (v->kind == RzBinDwarfAttr_StrRef && dw) {\n-\t\treturn rz_str_dup(rz_bin_dwarf_str_get(dw->str, v->u64));\n-\t} else if (v->kind == RzBinDwarfAttr_StrOffsetIndex && dw) {\n-\t\treturn rz_str_dup(rz_bin_dwarf_str_offsets_get(dw->str, dw->str_offsets, str_offsets_base, v->u64));\n-\t} else if (v->kind == RzBinDwarfAttr_LineStrRef && dw) {\n-\t\treturn rz_str_dup(rz_bin_dwarf_line_str_get(dw->line_str, v->u64));\n-\t}\n-\treturn NULL;\n-}\n+RZ_API RZ_OWN char *rz_bin_dwarf_attr_string(\n+\tRZ_BORROW RZ_NONNULL const RzBinDwarfAttr *attr,\n+\tRZ_BORROW RZ_NULLABLE const RzBinDWARF *dw,\n+\tut64 str_offsets_base);\n \n static inline ut64 rz_bin_dwarf_attr_addr(\n \tconst RzBinDwarfAttr *attr,"
        },
        {
          "filename": "test/db/cmd/dwarf",
          "status": "modified",
          "additions": 421,
          "deletions": 0,
          "patch": "@@ -1,3 +1,424 @@\n+NAME=\"ansi injection via dwarf\"\n+FILE=bins/elf/dwarf_test_func_patched\n+ARGS=-AA\n+CMDS=<<EOF\n+id\n+C\n+xc\n+EOF\n+EXPECT=<<EOF\n+    1      DW_TAG_compile_unit       [has children] (0x0)\n+    DW_AT_producer                 DW_FORM_strp\n+    DW_AT_language                 DW_FORM_data1\n+    DW_AT_name                     DW_FORM_strp\n+    DW_AT_comp_dir                 DW_FORM_strp\n+    DW_AT_low_pc                   DW_FORM_addr\n+    DW_AT_high_pc                  DW_FORM_data8\n+    DW_AT_stmt_list                DW_FORM_sec_offset\n+    2      DW_TAG_base_type          [no children] (0x13)\n+    DW_AT_byte_size                DW_FORM_data1\n+    DW_AT_encoding                 DW_FORM_data1\n+    DW_AT_name                     DW_FORM_strp\n+    3      DW_TAG_base_type          [no children] (0x1e)\n+    DW_AT_byte_size                DW_FORM_data1\n+    DW_AT_encoding                 DW_FORM_data1\n+    DW_AT_name                     DW_FORM_string\n+    4      DW_TAG_pointer_type       [no children] (0x29)\n+    DW_AT_byte_size                DW_FORM_data1\n+    DW_AT_type                     DW_FORM_ref4\n+    5      DW_TAG_const_type         [no children] (0x32)\n+    DW_AT_type                     DW_FORM_ref4\n+    6      DW_TAG_subprogram         [has children] (0x39)\n+    DW_AT_external                 DW_FORM_flag_present\n+    DW_AT_name                     DW_FORM_strp\n+    DW_AT_decl_file                DW_FORM_data1\n+    DW_AT_decl_line                DW_FORM_data2\n+    DW_AT_decl_column              DW_FORM_data1\n+    DW_AT_prototyped               DW_FORM_flag_present\n+    DW_AT_type                     DW_FORM_ref4\n+    DW_AT_declaration              DW_FORM_flag_present\n+    DW_AT_sibling                  DW_FORM_ref4\n+    7      DW_TAG_formal_parameter   [no children] (0x50)\n+    DW_AT_type                     DW_FORM_ref4\n+    8      DW_TAG_subprogram         [no children] (0x57)\n+    DW_AT_external                 DW_FORM_flag_present\n+    DW_AT_name                     DW_FORM_strp\n+    DW_AT_decl_file                DW_FORM_data1\n+    DW_AT_decl_line                DW_FORM_data1\n+    DW_AT_decl_column              DW_FORM_data1\n+    DW_AT_type                     DW_FORM_ref4\n+    DW_AT_low_pc                   DW_FORM_addr\n+    DW_AT_high_pc                  DW_FORM_data8\n+    DW_AT_frame_base               DW_FORM_exprloc\n+    DW_AT_GNU_all_tail_call_sites  DW_FORM_flag_present\n+    9      DW_TAG_subprogram         [has children] (0x71)\n+    DW_AT_external                 DW_FORM_flag_present\n+    DW_AT_name                     DW_FORM_strp\n+    DW_AT_decl_file                DW_FORM_data1\n+    DW_AT_decl_line                DW_FORM_data1\n+    DW_AT_decl_column              DW_FORM_data1\n+    DW_AT_prototyped               DW_FORM_flag_present\n+    DW_AT_low_pc                   DW_FORM_addr\n+    DW_AT_high_pc                  DW_FORM_data8\n+    DW_AT_frame_base               DW_FORM_exprloc\n+    DW_AT_GNU_all_tail_call_sites  DW_FORM_flag_present\n+    10     DW_TAG_formal_parameter   [no children] (0x8b)\n+    DW_AT_name                     DW_FORM_string\n+    DW_AT_decl_file                DW_FORM_data1\n+    DW_AT_decl_line                DW_FORM_data1\n+    DW_AT_decl_column              DW_FORM_data1\n+    DW_AT_type                     DW_FORM_ref4\n+    DW_AT_location                 DW_FORM_exprloc\n+\n+  Compilation Unit @ offset 0x0:\n+   Length:        0xe7\n+   Version:       4\n+   Abbrev Offset: 0x0\n+   Pointer Size:  8\n+\n+<0xb>: Abbrev Number: 1    (DW_TAG_compile_unit)\n+\tDW_AT_producer [DW_FORM_strp]\t: (indirect string, .debug_str+0x1e): GNU C17 11.3.0 -mtune=generic -march=x86-64 -gdwarf-4 -O0 -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection\n+\tDW_AT_language [DW_FORM_data1]\t: 12   (C99)\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x133): dwarf_test.c\n+\tDW_AT_comp_dir [DW_FORM_strp]\t: (indirect string, .debug_str+0xe1): /home/potato/projects/sec/subjects/r2/r2_esc_seq_inj\n+\tDW_AT_low_pc [DW_FORM_addr]\t: 0x1149\n+\tDW_AT_high_pc [DW_FORM_data8]\t: 61\n+\tDW_AT_stmt_list [DW_FORM_sec_offset]\t: <0x0>\n+<0x2d>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_encoding [DW_FORM_data1]\t: 7\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xc1): long unsigned int\n+<0x34>: Abbrev Number: 3    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 4\n+\tDW_AT_encoding [DW_FORM_data1]\t: 5\n+\tDW_AT_name [DW_FORM_string]\t: int\n+<0x3b>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_encoding [DW_FORM_data1]\t: 5\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x5): long int\n+<0x42>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_encoding [DW_FORM_data1]\t: 5\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x0): long long int\n+<0x49>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 1\n+\tDW_AT_encoding [DW_FORM_data1]\t: 8\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xd3): unsigned char\n+<0x50>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 2\n+\tDW_AT_encoding [DW_FORM_data1]\t: 7\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x116): short unsigned int\n+<0x57>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 4\n+\tDW_AT_encoding [DW_FORM_data1]\t: 7\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xc6): unsigned int\n+<0x5e>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 1\n+\tDW_AT_encoding [DW_FORM_data1]\t: 6\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xd5): signed char\n+<0x65>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 2\n+\tDW_AT_encoding [DW_FORM_data1]\t: 5\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x129): short int\n+<0x6c>: Abbrev Number: 4    (DW_TAG_pointer_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x72>\n+<0x72>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 1\n+\tDW_AT_encoding [DW_FORM_data1]\t: 6\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xdc): char\n+<0x79>: Abbrev Number: 5    (DW_TAG_const_type)\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x72>\n+<0x7e>: Abbrev Number: 2    (DW_TAG_base_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_encoding [DW_FORM_data1]\t: 7\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xbc): long long unsigned int\n+<0x85>: Abbrev Number: 6    (DW_TAG_subprogram)\n+\tDW_AT_external [DW_FORM_flag_present]\t: 1\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0x19): puts\n+\tDW_AT_decl_file [DW_FORM_data1]\t: 2\n+\tDW_AT_decl_line [DW_FORM_data2]\t: 661\n+\tDW_AT_decl_column [DW_FORM_data1]\t: 12\n+\tDW_AT_prototyped [DW_FORM_flag_present]\t: 1\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x34>\n+\tDW_AT_declaration [DW_FORM_flag_present]\t: 1\n+\tDW_AT_sibling [DW_FORM_ref4]\t: <0x9c>\n+<0x96>: Abbrev Number: 7    (DW_TAG_formal_parameter)\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x9c>\n+<0x9b>: Abbrev Number: 0    (DW_TAG_null_entry)\n+<0x9c>: Abbrev Number: 4    (DW_TAG_pointer_type)\n+\tDW_AT_byte_size [DW_FORM_data1]\t: 8\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x79>\n+<0xa2>: Abbrev Number: 8    (DW_TAG_subprogram)\n+\tDW_AT_external [DW_FORM_flag_present]\t: 1\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xb7): main\n+\tDW_AT_decl_file [DW_FORM_data1]\t: 1\n+\tDW_AT_decl_line [DW_FORM_data1]\t: 8\n+\tDW_AT_decl_column [DW_FORM_data1]\t: 5\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x34>\n+\tDW_AT_low_pc [DW_FORM_addr]\t: 0x1168\n+\tDW_AT_high_pc [DW_FORM_data8]\t: 30\n+\tDW_AT_frame_base [DW_FORM_exprloc]\t: 1 byte block: 0x9c\n+\tDW_AT_GNU_all_tail_call_sites [DW_FORM_flag_present]\t: 1\n+<0xc0>: Abbrev Number: 9    (DW_TAG_subprogram)\n+\tDW_AT_external [DW_FORM_flag_present]\t: 1\n+\tDW_AT_name [DW_FORM_strp]\t: (indirect string, .debug_str+0xe): \\\\e[33m_func\n+\tDW_AT_decl_file [DW_FORM_data1]\t: 1\n+\tDW_AT_decl_line [DW_FORM_data1]\t: 4\n+\tDW_AT_decl_column [DW_FORM_data1]\t: 6\n+\tDW_AT_prototyped [DW_FORM_flag_present]\t: 1\n+\tDW_AT_low_pc [DW_FORM_addr]\t: 0x1149\n+\tDW_AT_high_pc [DW_FORM_data8]\t: 31\n+\tDW_AT_frame_base [DW_FORM_exprloc]\t: 1 byte block: 0x9c\n+\tDW_AT_GNU_all_tail_call_sites [DW_FORM_flag_present]\t: 1\n+<0xda>: Abbrev Number: 10   (DW_TAG_formal_parameter)\n+\tDW_AT_name [DW_FORM_string]\t: msg\n+\tDW_AT_decl_file [DW_FORM_data1]\t: 1\n+\tDW_AT_decl_line [DW_FORM_data1]\t: 4\n+\tDW_AT_decl_column [DW_FORM_data1]\t: 23\n+\tDW_AT_type [DW_FORM_ref4]\t: <0x6c>\n+\tDW_AT_location [DW_FORM_exprloc]\t: 2 byte block: 0x9168\n+<0xe9>: Abbrev Number: 0    (DW_TAG_null_entry)\n+<0xea>: Abbrev Number: 0    (DW_TAG_null_entry)\n+\n+Contents of the .debug_aranges section:\n+  Address Range Set\n+   Unit Length:           0x2c\n+   64bit:                 false\n+   Version:               2\n+   Offset in .debug_info: 0x0\n+   Address Size:          8\n+   Segment Size:          0\n+   Ranges:\n+    address            length\n+    0x0000000000001149 0x000000000000003d\n+    0x0000000000000000 0x0000000000000000\n+\n+Raw dump of debug contents of section .debug_line:\n+\n+ Header information[0x0]\n+  Length:                             103\n+  DWARF Version:                      4\n+  Header Length:                      60\n+  Minimum Instruction Length:         1\n+  Maximum Operations per Instruction: 1\n+  Initial value of 'is_stmt':         1\n+  Line Base:                          -5\n+  Line Range:                         14\n+  Opcode Base:                        13\n+\n+ Opcodes:\n+standard_opcode_lengths[DW_LNS_copy] = 0\n+standard_opcode_lengths[DW_LNS_advance_pc] = 1\n+standard_opcode_lengths[DW_LNS_advance_line] = 1\n+standard_opcode_lengths[DW_LNS_set_file] = 1\n+standard_opcode_lengths[DW_LNS_set_column] = 1\n+standard_opcode_lengths[DW_LNS_negate_stmt] = 0\n+standard_opcode_lengths[DW_LNS_set_basic_block] = 0\n+standard_opcode_lengths[DW_LNS_const_add_pc] = 0\n+standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1\n+standard_opcode_lengths[DW_LNS_set_prologue_end] = 0\n+standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0\n+standard_opcode_lengths[DW_LNS_set_isa] = 1\n+\n+ The Directory Table:\n+  1     /usr/include\n+\n+ The File Name Table:\n+  Entry Dir     Time      Size       Name\n+  1     0       0         0          \\e[36m_test.c\n+  2     1       0         0          stdio.h\n+\n+ Line Number Statements:\n+  DW_LNS_set_column\t28\n+  DW_LNE_set_address\t0x1149\n+  Special opcode\t21\n+  DW_LNS_set_column\t5\n+  Special opcode\t243\n+  DW_LNS_set_column\t1\n+  Special opcode\t187\n+  DW_LNS_set_column\t12\n+  Special opcode\t62\n+  DW_LNS_set_column\t5\n+  Special opcode\t131\n+  DW_LNS_set_column\t12\n+  Special opcode\t229\n+  DW_LNS_set_column\t1\n+  Special opcode\t89\n+  DW_LNS_advance_pc\t2\n+  DW_LNE_end_sequence\n+\n+0x00001149\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t4\t28\n+0x00001159\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t5\t5\n+0x00001165\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t6\t1\n+0x00001168\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t8\t12\n+0x00001170\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t9\t5\n+0x0000117f\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t10\t12\n+0x00001184\t/home/potato/projects/sec/subjects/r2/r2_esc_seq_inj/\\e[36m_test.c\t11\t1\n+0x00001186\t-\t0\t0\n+0x00000318 CCu \"[00] -r-- section size 28 named .interp\"\n+0x00000338 CCu \"[01] -r-- section size 48 named .note.gnu.property\"\n+0x00000368 CCu \"[02] -r-- section size 36 named .note.gnu.build-id\"\n+0x0000038c CCu \"[03] -r-- section size 32 named .note.ABI-tag\"\n+0x000003b0 CCu \"[04] -r-- section size 36 named .gnu.hash\"\n+0x000003d8 CCu \"[05] -r-- section size 168 named .dynsym\"\n+0x00000480 CCu \"[06] -r-- section size 141 named .dynstr\"\n+0x0000050e CCu \"[07] -r-- section size 14 named .gnu.version\"\n+0x00000520 CCu \"[08] -r-- section size 48 named .gnu.version_r\"\n+0x00000550 data Cd 8\n+0x00000550 CCu \"[09] -r-- section size 192 named .rela.dyn\"\n+0x00000558 data Cd 8\n+0x00000560 data Cd 8\n+0x00000568 data Cd 8\n+0x00000570 data Cd 8\n+0x00000578 data Cd 8\n+0x00000580 data Cd 8\n+0x00000588 data Cd 8\n+0x00000590 data Cd 8\n+0x00000598 data Cd 8\n+0x000005a0 data Cd 8\n+0x000005a8 data Cd 8\n+0x000005b0 data Cd 8\n+0x000005b8 data Cd 8\n+0x000005c0 data Cd 8\n+0x000005c8 data Cd 8\n+0x000005d0 data Cd 8\n+0x000005d8 data Cd 8\n+0x000005e0 data Cd 8\n+0x000005e8 data Cd 8\n+0x000005f0 data Cd 8\n+0x000005f8 data Cd 8\n+0x00000600 data Cd 8\n+0x00000608 data Cd 8\n+0x00000610 data Cd 8\n+0x00000610 CCu \"[10] -r-- section size 24 named .rela.plt\"\n+0x00000618 data Cd 8\n+0x00000620 data Cd 8\n+0x00001000 CCu \"[11] -r-x section size 27 named .init\"\n+0x00001020 CCu \"[12] -r-x section size 32 named .plt\"\n+0x00001040 CCu \"[13] -r-x section size 16 named .plt.got\"\n+0x00001050 CCu \"[14] -r-x section size 16 named .plt.sec\"\n+0x00001060 CCu \"[15] -r-x section size 294 named .text\"\n+0x00001066 void *rtld_fini\n+0x00001069 int argc\n+0x0000106a char **ubp_av\n+0x00001073 void *fini\n+0x00001076 void *init\n+0x00001078 void *main\n+0x00001155 arg1\n+0x0000115d const char *s\n+0x00001177 int64_t arg1\n+0x00001188 CCu \"[16] -r-x section size 13 named .fini\"\n+0x00002000 CCu \"[17] -r-- section size 16 named .rodata\"\n+0x00002004 ascii[12] \"hello world\"\n+0x00002010 CCu \"[18] -r-- section size 60 named .eh_frame_hdr\"\n+0x00002050 CCu \"[19] -r-- section size 204 named .eh_frame\"\n+0x00003db8 data Cd 8\n+0x00003db8 CCu \"[20] -rw- section size 8 named .init_array\"\n+0x00003dc0 data Cd 8\n+0x00003dc0 CCu \"[21] -rw- section size 8 named .fini_array\"\n+0x00003dc8 data Cd 8\n+0x00003dc8 CCu \"[22] -rw- section size 496 named .dynamic\"\n+0x00003dd0 data Cd 8\n+0x00003dd8 data Cd 8\n+0x00003de0 data Cd 8\n+0x00003de8 data Cd 8\n+0x00003df0 data Cd 8\n+0x00003df8 data Cd 8\n+0x00003e00 data Cd 8\n+0x00003e08 data Cd 8\n+0x00003e10 data Cd 8\n+0x00003e18 data Cd 8\n+0x00003e20 data Cd 8\n+0x00003e28 data Cd 8\n+0x00003e30 data Cd 8\n+0x00003e38 data Cd 8\n+0x00003e40 data Cd 8\n+0x00003e48 data Cd 8\n+0x00003e50 data Cd 8\n+0x00003e58 data Cd 8\n+0x00003e60 data Cd 8\n+0x00003e68 data Cd 8\n+0x00003e70 data Cd 8\n+0x00003e78 data Cd 8\n+0x00003e80 data Cd 8\n+0x00003e88 data Cd 8\n+0x00003e90 data Cd 8\n+0x00003e98 data Cd 8\n+0x00003ea0 data Cd 8\n+0x00003ea8 data Cd 8\n+0x00003eb0 data Cd 8\n+0x00003eb8 data Cd 8\n+0x00003ec0 data Cd 8\n+0x00003ec8 data Cd 8\n+0x00003ed0 data Cd 8\n+0x00003ed8 data Cd 8\n+0x00003ee0 data Cd 8\n+0x00003ee8 data Cd 8\n+0x00003ef0 data Cd 8\n+0x00003ef8 data Cd 8\n+0x00003f00 data Cd 8\n+0x00003f08 data Cd 8\n+0x00003f10 data Cd 8\n+0x00003f18 data Cd 8\n+0x00003f20 data Cd 8\n+0x00003f28 data Cd 8\n+0x00003f30 data Cd 8\n+0x00003f38 data Cd 8\n+0x00003f40 data Cd 8\n+0x00003f48 data Cd 8\n+0x00003f50 data Cd 8\n+0x00003f58 data Cd 8\n+0x00003f60 data Cd 8\n+0x00003f68 data Cd 8\n+0x00003f70 data Cd 8\n+0x00003f78 data Cd 8\n+0x00003f80 data Cd 8\n+0x00003f88 data Cd 8\n+0x00003f90 data Cd 8\n+0x00003f98 data Cd 8\n+0x00003fa0 data Cd 8\n+0x00003fa8 data Cd 8\n+0x00003fb0 data Cd 8\n+0x00003fb8 data Cd 8\n+0x00003fb8 CCu \"[23] -rw- section size 72 named .got\"\n+0x00003fc0 data Cd 8\n+0x00003fc8 data Cd 8\n+0x00003fd0 data Cd 8\n+0x00003fd8 data Cd 8\n+0x00003fe0 data Cd 8\n+0x00003fe8 data Cd 8\n+0x00003ff0 data Cd 8\n+0x00003ff8 data Cd 8\n+0x00004000 CCu \"[24] -rw- section size 16 named .data\"\n+0x00004008 data Cd 8\n+0x00004010 CCu \"[25] -rw- section size 8 named .bss\"\n+0x00004020 data Cd 8\n+0x00004028 data Cd 8\n+0x00004030 data Cd 8\n+0x00004038 data Cd 8\n+0x00004040 data Cd 8\n+0x00004048 data Cd 8\n+- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF  comment\n+0x00001060  f30f 1efa 31ed 4989 d15e 4889 e248 83e4  ....1.I..^H..H..  ; sym._start  ; [15] -r-x section size 294 named .text  ; void *rtld_fini  ; int argc  ; char **ubp_av\n+0x00001070  f050 5445 31c0 31c9 488d 3de9 0000 00ff  .PTE1.1.H.=.....  ; void *fini  ; void *init  ; void *main\n+0x00001080  1553 2f00 00f4 662e 0f1f 8400 0000 0000  .S/...f.........\n+0x00001090  488d 3d79 2f00 0048 8d05 722f 0000 4839  H.=y/..H..r/..H9  ; sym.deregister_tm_clones\n+0x000010a0  f874 1548 8b05 362f 0000 4885 c074 09ff  .t.H..6/..H..t..\n+0x000010b0  e00f 1f80 0000 0000 c30f 1f80 0000 0000  ................\n+0x000010c0  488d 3d49 2f00 0048 8d35 422f 0000 4829  H.=I/..H.5B/..H)  ; sym.register_tm_clones\n+0x000010d0  fe48 89f0 48c1 ee3f 48c1 f803 4801 c648  .H..H..?H...H..H\n+0x000010e0  d1fe 7414 488b 0505 2f00 0048 85c0 7408  ..t.H.../..H..t.\n+0x000010f0  ffe0 660f 1f44 0000 c30f 1f80 0000 0000  ..f..D..........\n+0x00001100  f30f 1efa 803d 052f 0000 0075 2b55 4883  .....=./...u+UH.  ; sym.__do_global_dtors_aux\n+0x00001110  3de2 2e00 0000 4889 e574 0c48 8b3d e62e  =.....H..t.H.=..\n+0x00001120  0000 e819 ffff ffe8 64ff ffff c605 dd2e  ........d.......\n+0x00001130  0000 015d c30f 1f00 c30f 1f80 0000 0000  ...]............\n+0x00001140  f30f 1efa e977 ffff fff3 0f1e fa55 4889  .....w.......UH.  ; sym.frame_dummy  ; dbg.__e_33m_func\n+0x00001150  e548 83ec 1048 897d f848 8b45 f848 89c7  .H...H.}.H.E.H..  ; arg1  ; const char *s\n+EOF\n+RUN\n+\n NAME=\"Static variables inside function\"\n FILE=bins/elf/dwarf/static_var\n CMDS=<<EOF"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "28f4bf5586a9ecb9a0268c6492f6940d0c0dabbc",
            "date": "2025-01-25T15:52:24Z",
            "author_login": "Rot127"
          },
          {
            "sha": "37517f7a2ca6a4ed80744451342611284f5ffd6a",
            "date": "2025-01-25T11:07:34Z",
            "author_login": "kazarmy"
          },
          {
            "sha": "3520054120eadde7f68c0967d24b80ef23e0c136",
            "date": "2025-01-25T05:50:53Z",
            "author_login": "well-mannered-goat"
          },
          {
            "sha": "3b5c96ad0c0873dfb45a89a9b5d326535356a0d0",
            "date": "2025-01-24T12:39:04Z",
            "author_login": "Rot127"
          },
          {
            "sha": "3daeed14dacfff4347ceb340778ba143b8dd20ec",
            "date": "2025-01-24T05:35:05Z",
            "author_login": "Rot127"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-78",
    "description": "rizin before v0.6.3 is vulnerable to Improper Neutralization of Special Elements via meta_set function in librz/analysis/meta.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-17T22:15:06.677",
    "last_modified": "2024-12-18T16:15:12.693",
    "fix_date": "2024-02-07T12:09:55Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/Crispy-fried-chicken/cb0b3a653a43a2fe2361641eddd8330d",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/rizinorg/rizin/commit/c025dcee40c8eac2ab559f2caa3798a2dbf019e4",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.876639",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rizin",
    "owner": "rizinorg",
    "created_at": "2020-09-30T09:15:56Z",
    "updated_at": "2025-01-25T15:52:29Z",
    "pushed_at": "2025-01-25T15:52:24Z",
    "size": 153578,
    "stars": 2779,
    "forks": 374,
    "open_issues": 465,
    "watchers": 2779,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev"
    ],
    "languages": {
      "C": 30810302,
      "C++": 381011,
      "Meson": 197597,
      "Python": 66911,
      "Roff": 41855,
      "JavaScript": 14972,
      "Shell": 6013,
      "CMake": 5683,
      "Pawn": 5168,
      "Perl": 4737,
      "Rust": 3262,
      "Dockerfile": 2896,
      "Assembly": 1148,
      "R": 539,
      "Gnuplot": 431
    },
    "commit_activity": {
      "total_commits_last_year": 535,
      "avg_commits_per_week": 10.288461538461538,
      "days_active_last_year": 214
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-3.0"
    },
    "collected_at": "2025-01-26T08:29:19.892171"
  }
}