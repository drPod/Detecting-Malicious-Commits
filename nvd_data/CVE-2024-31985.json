{
  "cve_id": "CVE-2024-31985",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
    "related_commits": [
      "8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
      "efd3570f3e5e944ec0ad0899bf799bf9563aef87",
      "f16ca4ef1513f84ce2e685d4a05d689bd3a2ab4c",
      "f30d9c641750a3f034b5910c6a3a7724ae8f2269",
      "8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
      "efd3570f3e5e944ec0ad0899bf799bf9563aef87",
      "f16ca4ef1513f84ce2e685d4a05d689bd3a2ab4c",
      "f30d9c641750a3f034b5910c6a3a7724ae8f2269"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/8a92cb4bef7e5f244ae81eed3e64fe9be95827cf.patch",
    "fix_commit_details": {
      "sha": "8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
      "commit_date": "2023-10-06T15:43:23Z",
      "author": {
        "login": "pjeanjean",
        "type": "User",
        "stats": {
          "total_commits": 36,
          "average_weekly_commits": 0.03773584905660377,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 23
        }
      },
      "commit_message": {
        "title": "XWIKI-20851: Validate CSRF token before running job scheduling actions",
        "length": 372,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 317,
        "additions": 300,
        "deletions": 17
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/resources/ApplicationResources.properties",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -2887,6 +2887,7 @@ xe.scheduler.job.scriptexplanation=The script is the code that will be executed\n xe.scheduler.job.backtolist=Back to the job list\n xe.scheduler.job.object=This sheet must be applied to a page that holds a scheduler job object.\n xe.scheduler.updateJobClassComment=Created/Updated Scheduler Job Class definition\n+xe.scheduler.invalidToken=Invalid token, please try again by clicking on the desired action below.\n \n ### Statistics application\n xe.statistics.activity=Activity Statistics"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-test/xwiki-platform-scheduler-test-docker/src/test/it/org/xwiki/scheduler/test/ui/SchedulerIT.java",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -70,11 +70,11 @@ void verifyScheduler(TestUtils setup)\n         // because we want to remain on the same page in case of a test failure so that our TestDebugger rule can\n         // collect accurate information about the failure. It's not a problem if the job remains scheduled because it\n         // does nothing. Other tests should not rely on the number of scheduler jobs though.\n-        setup.deletePage(\"Scheduler\", \"SchedulerTestJob\");\n+        setup.deletePage(\"Scheduler\", \"Scheduler]]TestJob\");\n \n         // Create Job\n         SchedulerHomePage schedulerHomePage = SchedulerHomePage.gotoPage();\n-        schedulerHomePage.setJobName(\"SchedulerTestJob\");\n+        schedulerHomePage.setJobName(\"Scheduler]]TestJob\");\n         SchedulerEditPage schedulerEdit = schedulerHomePage.clickAdd();\n \n         String jobName = \"Tester problem\";\n@@ -107,7 +107,7 @@ void verifyScheduler(TestUtils setup)\n         assertFalse(setup.getDriver().hasElementWithoutWaiting(By.linkText(jobName)));\n         // Note: since the page doesn't exist, we need to disable the space redirect feature so that we end up on the\n         // terminal page that was removed.\n-        setup.gotoPage(\"Scheduler\", \"SchedulerTestJob\", \"view\", \"spaceRedirect=false\");\n+        setup.gotoPage(\"Scheduler\", \"Scheduler]]TestJob\", \"view\", \"spaceRedirect=false\");\n         setup.getDriver().findElement(By.linkText(\"Restore\")).click();\n         schedulerPage = new SchedulerPage();\n         schedulerPage.backToHome();"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/pom.xml",
          "status": "modified",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -75,5 +75,27 @@\n       <version>${project.version}</version>\n       <scope>runtime</scope>\n     </dependency>\n+    <!-- Test dependencies. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-test-page</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <!-- Provides the component list for RenderingScriptService. -->\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-xwiki</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-rendering-configuration-default</artifactId>\n+      <version>${project.version}</version>\n+      <type>test-jar</type>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/src/main/resources/Scheduler/Translations.de.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,4 +38,4 @@\n   <hidden>true</hidden>\n   <content>scheduler.applicationsPanelEntryLabel=Planer\n </content>\n-  </xwikidoc>\n+</xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/src/main/resources/Scheduler/Translations.ru.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,4 +38,4 @@\n   <hidden>true</hidden>\n   <content>scheduler.applicationsPanelEntryLabel=\u041f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0449\u0438\u043a\n </content>\n-  </xwikidoc>\n+</xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/src/main/resources/Scheduler/Translations.uk.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -38,4 +38,4 @@\n   <hidden>true</hidden>\n   <content>scheduler.applicationsPanelEntryLabel=\u041f\u043b\u0430\u043d\u0443\u0432\u0430\u043b\u044c\u043d\u0438\u043a\n </content>\n-  </xwikidoc>\n+</xwikidoc>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/src/main/resources/Scheduler/WebHome.xml",
          "status": "modified",
          "additions": 14,
          "deletions": 11,
          "patch": "@@ -20,7 +20,7 @@\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n -->\n \n-<xwikidoc version=\"1.1\">\n+<xwikidoc version=\"1.5\" reference=\"Scheduler.WebHome\" locale=\"\">\n   <web>Scheduler</web>\n   <name>WebHome</name>\n   <language/>\n@@ -51,7 +51,13 @@\n   #set ($tJobHolder = $request.which)\n   #set ($jobDoc = $xwiki.getDocument($tJobHolder))\n   #set ($jobObj = $jobDoc.getObject('XWiki.SchedulerJobClass'))\n-  #if ($request.do == 'schedule')\n+  #if (!$services.csrf.isTokenValid($request.form_token))\n+     ##\n+     ## Check that the CSRF token matches the user before any operation\n+     ##\n+     {{error}}$services.localization.render('xe.scheduler.invalidToken'){{/error}}\n+\n+  #elseif ($request.do == 'schedule')\n     ##\n     ## Schedule a job\n     ##\n@@ -143,7 +149,6 @@ $services.localization.render('xe.scheduler.welcome')\n ##\n |=(%scope=\"col\"%)$services.localization.render('xe.scheduler.jobs.name')|=(%scope=\"col\"%)$services.localization.render('xe.scheduler.jobs.status')|=(%scope=\"col\"%)$services.localization.render('xe.scheduler.jobs.next')|=(%scope=\"col\"%)$services.localization.render('xe.scheduler.jobs.actions')\n #foreach ($docName in $services.query.xwql('from doc.object(XWiki.SchedulerJobClass) as jobs where doc.fullName &lt;&gt; ''XWiki.SchedulerJobTemplate''').execute())\n-  #set ($actions = {})\n   #set ($jobHolder = $xwiki.getDocument($docName))\n   #set ($job = $jobHolder.getObject('XWiki.SchedulerJobClass'))\n   #set ($status = $scheduler.getJobStatus($job).value)\n@@ -156,18 +161,16 @@ $services.localization.render('xe.scheduler.welcome')\n   #else\n     #set ($firetime = $services.localization.render('xe.scheduler.jobs.next.undefined'))\n   #end\n-  #set ($ok = $!actions.put('trigger', $doc.getURL('view', \"do=trigger&amp;which=${jobHolder.fullName}\")))\n+  #set ($actions = ['trigger'])\n   #if ($status == 'None')\n-    #set ($ok = $!actions.put('schedule', $doc.getURL('view', \"do=schedule&amp;which=${jobHolder.fullName}\")))\n+    #set ($ok = $actions.add('schedule'))\n   #elseif($status == 'Normal')\n-    #set ($ok = $!actions.put('pause', $doc.getURL('view', \"do=pause&amp;which=${jobHolder.fullName}\")))\n-    #set ($ok = $!actions.put('unschedule', $doc.getURL('view', \"do=unschedule&amp;which=${jobHolder.fullName}\")))\n+    #set ($ok = $actions.addAll(['pause', 'unschedule']))\n   #elseif ($status == 'Paused')\n-    #set ($ok = $!actions.put('resume', $doc.getURL('view', \"do=resume&amp;which=${jobHolder.fullName}\")))\n-    #set ($ok = $!actions.put('unschedule', $doc.getURL('view', \"do=unschedule&amp;which=${jobHolder.fullName}\")))\n+    #set ($ok = $actions.addAll(['resume', 'unschedule']))\n   #end\n-  #set ($ok = $!actions.put('delete', $doc.getURL('view', \"do=delete&amp;which=${jobHolder.fullName}\")))\n-|$job.get('jobName')|$status|$firetime|**$services.localization.render('xe.scheduler.jobs.actions.access')** [[$services.localization.render('xe.scheduler.jobs.actions.view')&gt;&gt;$jobHolder.fullName]]#if($jobHolder.hasAccessLevel('programming')) [[$services.localization.render('xe.scheduler.jobs.actions.edit')&gt;&gt;path:${jobHolder.getURL('edit')}]]#end **$services.localization.render('xe.scheduler.jobs.actions.manage')**#foreach($action in $actions.entrySet()) [[$services.localization.render(\"xe.scheduler.jobs.actions.${action.key}\")&gt;&gt;path:${action.value}]]#end\n+  #set ($ok = $actions.add('delete'))\n+|$job.get('jobName')|$status|$firetime|**$services.localization.render('xe.scheduler.jobs.actions.access')** [[$services.localization.render('xe.scheduler.jobs.actions.view')&gt;&gt;$services.rendering.escape($jobHolder.fullName, 'xwiki/2.1')]]#if($jobHolder.hasAccessLevel('programming')) [[$services.localization.render('xe.scheduler.jobs.actions.edit')&gt;&gt;path:${jobHolder.getURL('edit')}]]#end **$services.localization.render('xe.scheduler.jobs.actions.manage')**#foreach($action in $actions) [[$services.localization.render(\"xe.scheduler.jobs.actions.$action\")&gt;&gt;path:$doc.getURL('view', $escapetool.url({'do': $action, 'which': $jobHolder.fullName, 'form_token': $services.csrf.token}))]]#end\n \n #end\n #if ($doc.hasAccessLevel('programming'))"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-scheduler/xwiki-platform-scheduler-ui/src/test/java/org/xwiki/scheduler/ui/SchedulerPageTest.java",
          "status": "added",
          "additions": 257,
          "deletions": 0,
          "patch": "@@ -0,0 +1,257 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.scheduler.ui;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.Mock;\n+import org.quartz.Trigger;\n+import org.xwiki.csrf.script.CSRFTokenScriptService;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.query.internal.ScriptQuery;\n+import org.xwiki.query.script.QueryManagerScriptService;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultRenderingConfigurationComponentList;\n+import org.xwiki.rendering.internal.macro.message.ErrorMessageMacro;\n+import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;\n+import org.xwiki.rendering.internal.macro.message.WarningMessageMacro;\n+import org.xwiki.script.service.ScriptService;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+\n+import com.xpn.xwiki.XWikiContext;\n+import com.xpn.xwiki.api.Object;\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.objects.BaseObject;\n+import com.xpn.xwiki.plugin.scheduler.JobState;\n+import com.xpn.xwiki.plugin.scheduler.SchedulerPluginApi;\n+import com.xpn.xwiki.plugin.scheduler.internal.SchedulerJobClassDocumentInitializer;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Page tests for {@code Scheduler.WebHome}.\n+ *\n+ * @version $Id$\n+ */\n+@ComponentList({\n+    InfoMessageMacro.class,\n+    ErrorMessageMacro.class,\n+    SchedulerJobClassDocumentInitializer.class,\n+    TestNoScriptMacro.class,\n+    WarningMessageMacro.class\n+})\n+@RenderingScriptServiceComponentList\n+@DefaultRenderingConfigurationComponentList\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+class SchedulerPageTest extends PageTest\n+{\n+    private static final String WIKI_NAME = \"xwiki\";\n+\n+    private static final String XWIKI_SPACE = \"Scheduler\";\n+\n+    private static final DocumentReference SCHEDULER_WEB_HOME =\n+        new DocumentReference(WIKI_NAME, XWIKI_SPACE, \"WebHome\");\n+\n+    private static final String CSRF_TOKEN = \"a0a0a0a0\";\n+\n+    private QueryManagerScriptService queryService;\n+\n+    private CSRFTokenScriptService tokenService;\n+\n+    private SchedulerPluginApi schedulerPluginApi;\n+\n+    @Mock\n+    private ScriptQuery query;\n+\n+    private Object testJobObjectApi;\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        // Mock the Query Service to return a job.\n+        this.queryService = this.oldcore.getMocker().registerMockComponent(ScriptService.class, \"query\",\n+            QueryManagerScriptService.class,\n+            true);\n+        when(this.queryService.xwql(anyString())).thenReturn(this.query);\n+        when(this.query.execute()).thenReturn(List.of(\"Scheduler.TestJob\"));\n+\n+        // Mock the Token Service to get a consistent CSRF token throughout the tests.\n+        this.tokenService = this.oldcore.getMocker().registerMockComponent(ScriptService.class, \"csrf\",\n+            CSRFTokenScriptService.class, true);\n+        when(this.tokenService.getToken()).thenReturn(CSRF_TOKEN);\n+        when(this.tokenService.isTokenValid(CSRF_TOKEN)).thenReturn(true);\n+\n+        // Spy the Scheduler Plugin to obtain a mocked API.\n+        this.schedulerPluginApi = mock(SchedulerPluginApi.class);\n+        doReturn(this.schedulerPluginApi).when(this.oldcore.getSpyXWiki()).getPluginApi(eq(\"scheduler\"),\n+            any(XWikiContext.class));\n+\n+        this.xwiki.initializeMandatoryDocuments(this.context);\n+\n+        // Create a new job and keep a reference to its API.\n+        XWikiDocument testJob = new XWikiDocument(new DocumentReference(\"xwiki\", \"Scheduler\", \"TestJob\"));\n+        BaseObject testJobObject = testJob.newXObject(SchedulerJobClassDocumentInitializer.XWIKI_JOB_CLASSREFERENCE,\n+            this.context);\n+        this.xwiki.saveDocument(testJob, this.context);\n+        this.testJobObjectApi = new Object(testJobObject, this.context);\n+\n+        // Fake programming access level to display the complete page.\n+        when(this.oldcore.getMockRightService().hasAccessLevel(eq(\"programming\"), anyString(), anyString(),\n+            any(XWikiContext.class))).thenReturn(true);\n+    }\n+\n+    /**\n+     * Verify that the trigger operation is not called in the Scheduler Plugin API when the CSRF token is invalid, and\n+     * that the corresponding error message is properly displayed.\n+     */\n+    @Test\n+    void checkInvalidCSRFToken() throws Exception\n+    {\n+        String wrongToken = \"wrong token\";\n+\n+        this.request.put(\"do\", \"trigger\");\n+        this.request.put(\"which\", \"Scheduler.TestJob\");\n+        this.request.put(\"form_token\", wrongToken);\n+        Document result = renderHTMLPage(SCHEDULER_WEB_HOME);\n+\n+        verify(this.schedulerPluginApi, never()).triggerJob(any(Object.class));\n+        verify(this.tokenService).isTokenValid(wrongToken);\n+        assertEquals(\"xe.scheduler.invalidToken\", result.getElementsByClass(\"errormessage\").text());\n+    }\n+\n+    /**\n+     * Verify that the trigger operation is correctly called in the Scheduler Plugin API when the CSRF token is valid,\n+     * and that no error displays.\n+     */\n+    @Test\n+    void checkValidCSRFToken() throws Exception\n+    {\n+        when(this.schedulerPluginApi.triggerJob(this.testJobObjectApi)).thenReturn(true);\n+\n+        this.request.put(\"do\", \"trigger\");\n+        this.request.put(\"which\", \"Scheduler.TestJob\");\n+        this.request.put(\"form_token\", CSRF_TOKEN);\n+        Document result = renderHTMLPage(SCHEDULER_WEB_HOME);\n+\n+        verify(this.schedulerPluginApi).triggerJob(this.testJobObjectApi);\n+        verify(this.tokenService).isTokenValid(CSRF_TOKEN);\n+        assertTrue(result.getElementsByClass(\"errormessage\").isEmpty());\n+    }\n+\n+    /**\n+     * List every possible action that can be applied to a job depending on its current status.\n+     *\n+     * @return a {@link Stream} of {@link org.junit.jupiter.params.provider.Arguments} for every combination of job\n+     *     status and action\n+     */\n+    static Stream<Arguments> jobStatusAndActionProvider()\n+    {\n+        return Stream.of(\n+            Arguments.of(new JobState(Trigger.TriggerState.NONE), \"trigger\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.NONE), \"schedule\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.NORMAL), \"pause\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.NORMAL), \"unschedule\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.PAUSED), \"resume\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.PAUSED), \"unschedule\"),\n+            Arguments.of(new JobState(Trigger.TriggerState.NONE), \"delete\"));\n+    }\n+\n+    /**\n+     * Verify that each action URL on the page contains the right CSRF token.\n+     *\n+     * @param status the status of the job\n+     * @param action the action to verify\n+     */\n+    @ParameterizedTest\n+    @MethodSource(\"jobStatusAndActionProvider\")\n+    void checkCSRFTokenPresenceInActionURL(JobState status, String action) throws Exception\n+    {\n+        // Set the status of the displayed job to control which action URLs will be rendered.\n+        when(this.schedulerPluginApi.getJobStatus(this.testJobObjectApi)).thenReturn(status);\n+\n+        Document result = renderHTMLPage(SCHEDULER_WEB_HOME);\n+        verify(this.schedulerPluginApi).getJobStatus(this.testJobObjectApi);\n+        Element actionLink = result.selectFirst(String.format(\"td a:contains(actions.%s)\", action));\n+        assertNotNull(actionLink);\n+\n+        // Check the presence of the CSRF token for the given action.\n+        assertEquals(String.format(\"path:/xwiki/bin/view/Scheduler/?do=%s&which=Scheduler\"\n+            + \".TestJob&form_token=%s\", action, CSRF_TOKEN), actionLink.attr(\"href\"));\n+    }\n+\n+    /**\n+     * Verify that the names of jobs are properly escaped in each action URL.\n+     *\n+     * @param status the status of the job\n+     * @param action the action to verify\n+     */\n+    @ParameterizedTest\n+    @MethodSource(\"jobStatusAndActionProvider\")\n+    void checkEscapingInJobNames(JobState status, String action) throws Exception\n+    {\n+        // Use the `noscript` macro to make sure that no code injection occurs.\n+        String jobName = \"\\\">]]{{/html}}{{noscript /}}\";\n+        String escapedJobName = \"%22%3E%5D%5D%7B%7B%2Fhtml%7D%7D%7B%7Bnoscript%20%2F%7D%7D\";\n+\n+        // Create a new job with a name that needs escaping and get a reference to its API.\n+        XWikiDocument escapedJob = new XWikiDocument(new DocumentReference(\"xwiki\", \"Scheduler\", jobName));\n+        BaseObject escapedJobObject =\n+            escapedJob.newXObject(SchedulerJobClassDocumentInitializer.XWIKI_JOB_CLASSREFERENCE, this.context);\n+        Object escapedJobObjectApi = new Object(escapedJobObject, this.context);\n+        this.xwiki.saveDocument(escapedJob, this.context);\n+\n+        // Return the name of the new job through the Query Service.\n+        when(this.query.execute()).thenReturn(List.of(\"Scheduler.\" + jobName));\n+\n+        // Set the status of the new job to control which action URLs will be rendered.\n+        when(this.schedulerPluginApi.getJobStatus(escapedJobObjectApi)).thenReturn(status);\n+\n+        Document result = renderHTMLPage(SCHEDULER_WEB_HOME);\n+        Element actionLink = result.selectFirst(String.format(\"td a:contains(actions.%s)\", action));\n+        assertNotNull(actionLink);\n+\n+        // Check the proper escaping of the job name for the given action.\n+        assertEquals(String.format(\"path:/xwiki/bin/view/Scheduler/?do=%s&which=Scheduler\"\n+            + \".%s&form_token=%s\", action, escapedJobName, CSRF_TOKEN), actionLink.attr(\"href\"));\n+    }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 5,
        "max_directory_depth": 12
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L",
    "cwe_id": "CWE-352",
    "description": "XWiki Platform is a generic wiki platform. Starting in version 3.1 and prior to versions 4.10.20, 15.5.4, and 15.10-rc-1, it is possible to schedule/trigger/unschedule existing jobs by having an admin visit the Job Scheduler page through a predictable URL, for example by embedding such an URL in any content as an image. The vulnerability has been fixed in XWiki 14.10.19, 15.5.5, and 15.9. As a workaround, manually apply the patch by modifying the `Scheduler.WebHome` page.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-10T21:15:06.723",
    "last_modified": "2024-11-21T09:14:17.007",
    "fix_date": "2023-10-06T15:43:23Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/efd3570f3e5e944ec0ad0899bf799bf9563aef87",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/f16ca4ef1513f84ce2e685d4a05d689bd3a2ab4c",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/f30d9c641750a3f034b5910c6a3a7724ae8f2269",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-j2r6-r929-v6gf",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20851",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/8a92cb4bef7e5f244ae81eed3e64fe9be95827cf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/efd3570f3e5e944ec0ad0899bf799bf9563aef87",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/f16ca4ef1513f84ce2e685d4a05d689bd3a2ab4c",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/f30d9c641750a3f034b5910c6a3a7724ae8f2269",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-j2r6-r929-v6gf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-20851",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.469968",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}