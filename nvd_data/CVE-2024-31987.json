{
  "cve_id": "CVE-2024-31987",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
    "related_commits": [
      "3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
      "626d2a5dbf95b4e719ae13bf1a0a9c76e4edd5a2",
      "da177c3c972e797d92c1a31e278f946012c41b56",
      "3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
      "626d2a5dbf95b4e719ae13bf1a0a9c76e4edd5a2",
      "da177c3c972e797d92c1a31e278f946012c41b56"
    ],
    "patch_url": "https://github.com/xwiki/xwiki-platform/commit/3d4dbb41f52d1a6e39835cfb1695ca6668605a39.patch",
    "fix_commit_details": {
      "sha": "3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
      "commit_date": "2023-10-30T13:15:04Z",
      "author": {
        "login": "pjeanjean",
        "type": "User",
        "stats": {
          "total_commits": 36,
          "average_weekly_commits": 0.03773584905660377,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 23
        }
      },
      "commit_message": {
        "title": "XWIKI-21478: Improve rights check of template macros",
        "length": 52,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 108,
        "additions": 92,
        "deletions": 16
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/internal/velocity/XWikiVelocityManager.java",
          "status": "modified",
          "additions": 21,
          "deletions": 9,
          "patch": "@@ -42,6 +42,9 @@\n import org.xwiki.observation.EventListener;\n import org.xwiki.observation.ObservationManager;\n import org.xwiki.observation.event.Event;\n+import org.xwiki.security.authorization.AuthorExecutor;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n import org.xwiki.skin.Skin;\n import org.xwiki.skin.SkinManager;\n import org.xwiki.template.Template;\n@@ -73,7 +76,7 @@ public class XWikiVelocityManager extends DefaultVelocityManager implements Init\n     private static final String VELOCITYENGINE_CACHEKEY_NAME = \"velocity.engine.key\";\n \n     private static final List<Event> EVENTS =\n-        Arrays.<Event>asList(new TemplateUpdatedEvent(), new TemplateDeletedEvent());\n+        Arrays.asList(new TemplateUpdatedEvent(), new TemplateDeletedEvent());\n \n     /**\n      * Used to access the current {@link XWikiContext}.\n@@ -96,10 +99,16 @@ public class XWikiVelocityManager extends DefaultVelocityManager implements Init\n     @Inject\n     private Environment environment;\n \n+    @Inject\n+    private AuthorExecutor authorExecutor;\n+\n+    @Inject\n+    private AuthorizationManager authorizationManager;\n+\n     @Inject\n     private Logger logger;\n \n-    private Map<String, VelocityEngine> velocityEngines = new ConcurrentHashMap<>();\n+    private final Map<String, VelocityEngine> velocityEngines = new ConcurrentHashMap<>();\n \n     @Override\n     public void initialize() throws InitializationException\n@@ -114,7 +123,7 @@ public void onEvent(Event event, Object source, Object data)\n                 if (event instanceof TemplateEvent) {\n                     TemplateEvent templateEvent = (TemplateEvent) event;\n \n-                    velocityEngines.remove(templateEvent.getId());\n+                    XWikiVelocityManager.this.velocityEngines.remove(templateEvent.getId());\n                 }\n             }\n \n@@ -177,8 +186,8 @@ private Template getVelocityEngineMacrosTemplate()\n \n     /**\n      * @return the Velocity Engine corresponding to the current execution context. More specifically returns the\n-     *         Velocity Engine for the current skin since each skin has its own Velocity Engine so that each skin can\n-     *         have global velocimacros defined\n+     *     Velocity Engine for the current skin since each skin has its own Velocity Engine so that each skin can have\n+     *     global velocimacros defined\n      * @throws XWikiVelocityException in case of an error while creating a Velocity Engine\n      */\n     @Override\n@@ -248,10 +257,13 @@ private void injectBaseMacros(VelocityEngine velocityEngine, Template skinMacros\n             }\n         }\n \n-        // Inject skin macros\n-        if (skinMacrosTemplate != null) {\n-            VelocityTemplate skinMacros = compile(\"\", new StringReader(skinMacrosTemplate.getContent().getContent()));\n-\n+        // Inject skin macros if their author has at least Script rights.\n+        if (skinMacrosTemplate != null\n+            && this.authorizationManager.hasAccess(Right.SCRIPT, skinMacrosTemplate.getContent().getAuthorReference(),\n+            skinMacrosTemplate.getContent().getDocumentReference()))\n+        {\n+            VelocityTemplate skinMacros =\n+                compile(\"\", new StringReader(skinMacrosTemplate.getContent().getContent()));\n             velocityEngine.addGlobalMacros(skinMacros.getMacros());\n         }\n     }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/org/xwiki/internal/velocity/XWikiVelocityManagerTest.java",
          "status": "modified",
          "additions": 71,
          "deletions": 7,
          "patch": "@@ -22,15 +22,24 @@\n import org.apache.velocity.VelocityContext;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import org.xwiki.component.manager.ComponentLookupException;\n+import org.mockito.Mock;\n import org.xwiki.internal.script.XWikiScriptContextInitializer;\n import org.xwiki.localization.ContextualLocalizationManager;\n import org.xwiki.logging.internal.DefaultLoggerConfiguration;\n import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.properties.ConverterManager;\n import org.xwiki.script.internal.DefaultScriptContextManager;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.skin.Skin;\n+import org.xwiki.skin.SkinManager;\n+import org.xwiki.template.Template;\n+import org.xwiki.template.TemplateContent;\n+import org.xwiki.template.TemplateManager;\n import org.xwiki.test.annotation.ComponentList;\n import org.xwiki.test.junit5.mockito.InjectMockComponents;\n import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.velocity.VelocityEngine;\n import org.xwiki.velocity.internal.DefaultVelocityConfiguration;\n import org.xwiki.velocity.internal.VelocityExecutionContextInitializer;\n \n@@ -44,17 +53,29 @@\n import static org.junit.jupiter.api.Assertions.assertNotSame;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.mockito.ArgumentMatchers.anyMap;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n /**\n  * Validate {@link XWikiVelocityManager}.\n- * \n+ *\n  * @version $Id$\n  */\n-@ComponentList(value = {DefaultScriptContextManager.class, XWikiScriptContextInitializer.class,\n-    DefaultVelocityConfiguration.class, DefaultLoggerConfiguration.class})\n+@ComponentList({\n+    DefaultScriptContextManager.class,\n+    XWikiScriptContextInitializer.class,\n+    DefaultVelocityConfiguration.class,\n+    DefaultLoggerConfiguration.class\n+})\n @OldcoreTest\n public class XWikiVelocityManagerTest\n {\n+    private static final DocumentReference TEMPLATE_DOCUMENT = new DocumentReference(\"xwiki\", \"XWiki\", \"TestMacros\");\n+\n+    private static final DocumentReference SCRIPT_USER = new DocumentReference(\"xwiki\", \"XWiki\", \"Script\");\n+\n     @MockComponent\n     private ContextualLocalizationManager localizationManager;\n \n@@ -64,19 +85,47 @@ public class XWikiVelocityManagerTest\n     @InjectMockitoOldcore\n     private MockitoOldcore oldcore;\n \n+    @MockComponent\n+    private SkinManager skinManager;\n+\n+    @Mock\n+    private Skin skin;\n+\n+    @MockComponent\n+    private TemplateManager templateManager;\n+\n+    @Mock\n+    private Template template;\n+\n+    @Mock\n+    private TemplateContent templateContent;\n+\n+    @MockComponent\n+    private ConverterManager converterManager;\n+\n     @BeforeEach\n-    public void beforeEach() throws ComponentLookupException\n+    void beforeEach() throws Exception\n     {\n         this.oldcore.getExecutionContext().setProperty(VelocityExecutionContextInitializer.VELOCITY_CONTEXT_ID,\n             new VelocityContext());\n+\n+        when(this.skinManager.getCurrentSkin(true)).thenReturn(this.skin);\n+        when(this.templateManager.getTemplate(\"macros.vm\")).thenReturn(this.template);\n+        when(this.template.getId()).thenReturn(\"testMacros\");\n+        when(this.template.getContent()).thenReturn(this.templateContent);\n+        when(this.templateContent.getDocumentReference()).thenReturn(TEMPLATE_DOCUMENT);\n+        when(this.templateContent.getContent()).thenReturn(\"\");\n+\n+        AuthorizationManager authorizationManager = this.oldcore.getMockAuthorizationManager();\n+        when(authorizationManager.hasAccess(Right.SCRIPT, SCRIPT_USER, TEMPLATE_DOCUMENT)).thenReturn(true);\n     }\n \n     // Tests\n \n     @Test\n-    public void getVelocityContext()\n+    void getVelocityContext()\n     {\n-        VelocityContext context = velocityManager.getVelocityContext();\n+        VelocityContext context = this.velocityManager.getVelocityContext();\n \n         assertNull(context.get(\"doc\"));\n         assertNull(context.get(\"sdoc\"));\n@@ -112,4 +161,19 @@ public void getVelocityContext()\n         assertNotNull(context.get(\"sdoc\"));\n         assertNotSame(sdoc, context.get(\"sdoc\"));\n     }\n+\n+    @Test\n+    void checkMacrosInjectionWithoutScriptRights() throws Exception\n+    {\n+        VelocityEngine engine = this.velocityManager.getVelocityEngine();\n+        verify(engine, never()).addGlobalMacros(anyMap());\n+    }\n+\n+    @Test\n+    void checkMacrosInjectionWithScriptRights() throws Exception\n+    {\n+        when(this.templateContent.getAuthorReference()).thenReturn(SCRIPT_USER);\n+        VelocityEngine engine = this.velocityManager.getVelocityEngine();\n+        verify(engine).addGlobalMacros(anyMap());\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 9
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "88e3e7d23cbd3e6ed059dbcd6532f94016d42678",
            "date": "2025-01-13T16:58:06Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "9b506ab2bed52744b52699ea05cde15986d42abb",
            "date": "2025-01-13T16:36:24Z",
            "author_login": "mflorea"
          },
          {
            "sha": "d53d6e347b97ac20f60e21fb2bae381f4aaf10f4",
            "date": "2025-01-13T13:25:24Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "d85bd8f9c67c412e0cfb45fb4695b8d4e759bab6",
            "date": "2025-01-13T12:03:22Z",
            "author_login": "tmortagne"
          },
          {
            "sha": "6f210dabc99167cf9f020a048c88325eca34ceea",
            "date": "2025-01-13T08:54:32Z",
            "author_login": "tmortagne"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-862",
    "description": "XWiki Platform is a generic wiki platform. Starting in version 6.4-milestone-1 and prior to versions 4.10.19, 15.5.4, and 15.10-rc-1, any user who can edit any page like their profile can create a custom skin with a template override that is executed with programming right, thus allowing remote code execution. This has been patched in XWiki 14.10.19, 15.5.4 and 15.10RC1. No known workarounds are available except for upgrading.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-10T21:15:07.110",
    "last_modified": "2024-11-21T09:14:17.267",
    "fix_date": "2023-10-30T13:15:04Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/626d2a5dbf95b4e719ae13bf1a0a9c76e4edd5a2",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/da177c3c972e797d92c1a31e278f946012c41b56",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-cv55-v6rw-7r5v",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-21478",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/3d4dbb41f52d1a6e39835cfb1695ca6668605a39",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/626d2a5dbf95b4e719ae13bf1a0a9c76e4edd5a2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/da177c3c972e797d92c1a31e278f946012c41b56",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-cv55-v6rw-7r5v",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-21478",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.470288",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-13T16:58:10Z",
    "pushed_at": "2025-01-14T12:32:03Z",
    "size": 561595,
    "stars": 1030,
    "forks": 554,
    "open_issues": 136,
    "watchers": 1030,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34276921,
      "JavaScript": 2392892,
      "HTML": 388086,
      "Less": 318945,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115460,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1723,
      "avg_commits_per_week": 33.13461538461539,
      "days_active_last_year": 263
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T12:58:58.685838"
  }
}