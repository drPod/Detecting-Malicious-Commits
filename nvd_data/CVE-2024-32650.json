{
  "cve_id": "CVE-2024-32650",
  "github_data": {
    "repository": "rustls/rustls",
    "fix_commit": "2123576840aa31043a31b0770e6572136fbe0c2d",
    "related_commits": [
      "2123576840aa31043a31b0770e6572136fbe0c2d",
      "6e938bcfe82a9da7a2e1cbf10b928c7eca26426e",
      "f45664fbded03d833dffd806503d3c8becd1b71e",
      "2123576840aa31043a31b0770e6572136fbe0c2d",
      "6e938bcfe82a9da7a2e1cbf10b928c7eca26426e",
      "f45664fbded03d833dffd806503d3c8becd1b71e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "2123576840aa31043a31b0770e6572136fbe0c2d",
      "commit_date": "2024-04-18T07:54:37Z",
      "author": {
        "login": "ctz",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Regression test for `complete_io` infinite loop bug",
        "length": 51,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 51,
        "additions": 51,
        "deletions": 0
      },
      "files": [
        {
          "filename": "rustls/tests/api.rs",
          "status": "modified",
          "additions": 51,
          "deletions": 0,
          "patch": "@@ -6306,6 +6306,57 @@ fn test_server_fips_service_indicator_includes_require_ems() {\n     assert!(!server_config.fips());\n }\n \n+#[test]\n+fn test_complete_io_errors_if_close_notify_received_too_early() {\n+    let mut server = ServerConnection::new(Arc::new(make_server_config(KeyType::Rsa2048))).unwrap();\n+    let client_hello_followed_by_close_notify_alert = b\"\\\n+        \\x16\\x03\\x01\\x00\\xc8\\x01\\x00\\x00\\xc4\\x03\\x03\\xec\\x12\\xdd\\x17\\x64\\\n+        \\xa4\\x39\\xfd\\x7e\\x8c\\x85\\x46\\xb8\\x4d\\x1e\\xa0\\x6e\\xb3\\xd7\\xa0\\x51\\\n+        \\xf0\\x3c\\xb8\\x17\\x47\\x0d\\x4c\\x54\\xc5\\xdf\\x72\\x00\\x00\\x1c\\xea\\xea\\\n+        \\xc0\\x2b\\xc0\\x2f\\xc0\\x2c\\xc0\\x30\\xcc\\xa9\\xcc\\xa8\\xc0\\x13\\xc0\\x14\\\n+        \\x00\\x9c\\x00\\x9d\\x00\\x2f\\x00\\x35\\x00\\x0a\\x01\\x00\\x00\\x7f\\xda\\xda\\\n+        \\x00\\x00\\xff\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x16\\x00\\x14\\x00\\x00\\x11\\\n+        \\x77\\x77\\x77\\x2e\\x77\\x69\\x6b\\x69\\x70\\x65\\x64\\x69\\x61\\x2e\\x6f\\x72\\\n+        \\x67\\x00\\x17\\x00\\x00\\x00\\x23\\x00\\x00\\x00\\x0d\\x00\\x14\\x00\\x12\\x04\\\n+        \\x03\\x08\\x04\\x04\\x01\\x05\\x03\\x08\\x05\\x05\\x01\\x08\\x06\\x06\\x01\\x02\\\n+        \\x01\\x00\\x05\\x00\\x05\\x01\\x00\\x00\\x00\\x00\\x00\\x12\\x00\\x00\\x00\\x10\\\n+        \\x00\\x0e\\x00\\x0c\\x02\\x68\\x32\\x08\\x68\\x74\\x74\\x70\\x2f\\x31\\x2e\\x31\\\n+        \\x75\\x50\\x00\\x00\\x00\\x0b\\x00\\x02\\x01\\x00\\x00\\x0a\\x00\\x0a\\x00\\x08\\\n+        \\x1a\\x1a\\x00\\x1d\\x00\\x17\\x00\\x18\\x1a\\x1a\\x00\\x01\\x00\\\n+        \\x15\\x03\\x03\\x00\\x02\\x01\\x00\";\n+\n+    let mut stream = FakeStream(client_hello_followed_by_close_notify_alert);\n+    assert_eq!(\n+        server\n+            .complete_io(&mut stream)\n+            .unwrap_err()\n+            .kind(),\n+        io::ErrorKind::UnexpectedEof\n+    );\n+}\n+\n+struct FakeStream<'a>(&'a [u8]);\n+\n+impl<'a> io::Read for FakeStream<'a> {\n+    fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {\n+        let take = core::cmp::min(b.len(), self.0.len());\n+        let (taken, remain) = self.0.split_at(take);\n+        b[..take].copy_from_slice(taken);\n+        self.0 = remain;\n+        Ok(take)\n+    }\n+}\n+\n+impl<'a> io::Write for FakeStream<'a> {\n+    fn write(&mut self, b: &[u8]) -> io::Result<usize> {\n+        Ok(b.len())\n+    }\n+\n+    fn flush(&mut self) -> io::Result<()> {\n+        Ok(())\n+    }\n+}\n+\n } // test_for_each_provider!\n \n #[derive(Default, Debug)]"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ba2a50f563d5dcabbc0d2f285d748f59195dd95a",
            "date": "2025-01-24T15:25:39Z",
            "author_login": "brody4hire"
          },
          {
            "sha": "9697e6310733d09624711499f42dc5f59673ba78",
            "date": "2025-01-23T20:07:52Z",
            "author_login": "brody4hire"
          },
          {
            "sha": "554473736fb9246bd6c48ee1a9f789d73f8b2fa7",
            "date": "2025-01-24T05:19:21Z",
            "author_login": "brody4hire"
          },
          {
            "sha": "eb28df3fd099bb27a20404af148a6440b4207f03",
            "date": "2025-01-22T20:11:03Z",
            "author_login": "brody4hire"
          },
          {
            "sha": "069e0339d82bb381fc9b7f3866b2d81ffc83e83c",
            "date": "2025-01-21T19:43:42Z",
            "author_login": "brody4hire"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-835",
    "description": "Rustls is a modern TLS library written in Rust. `rustls::ConnectionCommon::complete_io` could fall into an infinite loop based on network input. When using a blocking rustls server, if a client send a `close_notify` message immediately after `client_hello`, the server's `complete_io` will get in an infinite loop. This vulnerability is fixed in 0.23.5, 0.22.4, and 0.21.11.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-19T16:15:10.940",
    "last_modified": "2024-11-21T09:15:23.803",
    "fix_date": "2024-04-18T07:54:37Z"
  },
  "references": [
    {
      "url": "https://github.com/rustls/rustls/commit/2123576840aa31043a31b0770e6572136fbe0c2d",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/commit/6e938bcfe82a9da7a2e1cbf10b928c7eca26426e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/commit/f45664fbded03d833dffd806503d3c8becd1b71e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/commit/2123576840aa31043a31b0770e6572136fbe0c2d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/commit/6e938bcfe82a9da7a2e1cbf10b928c7eca26426e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/commit/f45664fbded03d833dffd806503d3c8becd1b71e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:07.000645",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rustls",
    "owner": "rustls",
    "created_at": "2016-05-02T20:50:44Z",
    "updated_at": "2025-01-14T14:40:27Z",
    "pushed_at": "2025-01-10T13:32:24Z",
    "size": 13286,
    "stars": 6398,
    "forks": 668,
    "open_issues": 115,
    "watchers": 6398,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Rust": 2273881,
      "HTML": 22368,
      "Python": 7275,
      "Shell": 7081,
      "CSS": 3357,
      "Makefile": 3347
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:43:30.768339"
  }
}